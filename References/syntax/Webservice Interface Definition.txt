Webservice Interface Definition 
Webservice Interface Definition 
// A Webservice Interface definition is defined within a module and has an extension of .wsi 
// This definition is required to execute a Webservice operation from an lpl definition. 
 
Webservice Interfac e Structure ::= 
<WebserviceInterface> is a WebserviceInterface 
	wsdlURL is <Literal> // for example - http://we bserv ices.amaz on.com/AWSECommer ceService/AW SECommerc eServic e.wsdl 
	endpoint is <Literal> // for exampl e - http:/ /soap.amazon.com/on ca/soap?Ser vice= AWSECo mmerceService 
	service is <Literal>  // for exampl e - AWSEC ommerceService 
	service style is <WSIServiceStyle> // for example - SO AP_V2 
	authentication is <WSIAuthenticatio n> // for ex ampl e - basic 
	<ActionName> is a[n] <WSIActionType> Action … 
		[method is <Literal>] 
		Input Record namespace is <Literal> // for example - http://web services.amazon.com/A WSECo mme rceService/2006-11-14 
			<FieldName> [<DataDefinition>]… 
				[attribute name is <Literal>] 
				[element name is <Literal>] 
				[required] 
 
	Output Record 
		<FieldName> [<DataDefinition>]… 
			[attribute name is <Literal>] 
			[element name is <Literal>] 
			[repeating] 
 
WSIServiceStyle ::=	( RESTGET 
					| RESTPOST 
					| SOAP_V1 
					| SOAP_V2 
					| XMLHTTP 
					| FACEBOOK 
					) 
 // These client types will process the interface synchronously: 
 // - RESTGET uses an HTTP GET and returns an XML structure. 
 // - RESTPOST uses an HTTP POST to submit an XML request that is ‘one ’ level deep and returns an XML structure. 
 // - SOAP_V1 is the first version of SOAP, meaning RPC encoding, this type of client will not be supported moving forward. 
 // - SOAP_V2 is the second version of SOAP, supporting Document/Literal type encoding, the most common type of 
 // encoding Namespacing is supported. 
 // - XMLHTTP uses an XML request and receives an XML response. This type of client is to be used for proprietary web 
 // services that do not use SOAP.
 
 WSIAuthentication ::=	( basic 
						| token 
						) 
 // These authentication types predict if the client needs to pass authentication info in the request 
 // - basic uses an HTTP GET and returns an XML structure. 
 // - token uses an HTTP POST to submit an XML request that is ‘one’ level deep and returns an XML structure. 

WSIActionType ::=	( Create // All actions are processed synchronously 
					| Update 
					| Delete 
					| Find 
					| Instance 
					| List 
					) 