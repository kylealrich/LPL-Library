Security Class Definition 
Security Class Structure ::= 
 
<SecurityClassName> is a SecurityClass 
	[extends <SecurityClassName>] 
	[description is <Message>] 
	Access Rights 
		<PolicyDefinition>… 


Structure Definitions 
AccessPolicy ::= 
	<SecurableObjectSpecification> 
		<AccessRule>… 
 
PolicyDefinition ::=	( <AccessPolicy> 
						| <OntologicalPol icy> 
						) 

OntologicalPolicy ::= 
	<KeyField> KeyField 
		<GrantRule>… 


Base Definitions 
ActionKeyword :: =	( all actions 
					| all audit views 
					| all creates // ‘all creates’ assumes ‘all inquires’ by default 
					| all deletes // use ‘except’ to deny ‘all inquiries’ if this is not intended 
					| all inquiries // separate list of objects with a comma if on the same line 
					| all functions 
					| all updates 
					| all global UI configuration // valid on DataArea SecurableObjectType only 
					| all security configuration // valid on DataArea SecurableObjectType only 
					| all personalization // valid on DataArea SecurableObjectType only 
					| limited list personalization // valid on DataArea SecurableObjectType only 
					| limited form personalization // valid on DataArea SecurableObjectType only 
					| all scheduled actions // valid on DataArea SecurableObjectType only 
					| all actor groups // valid on DataArea SecurableObjectType only 
					| data menu // valid on Data Area SecurableObjectType only 
					| future data indicator // valid on DataArea SecurableObjectType only 
					| UpdateEffectiveDatedData 
					| ViewAuditLog 
					| ViewFullAuditLog 
					)
					
 ActionList ::=	( <SecurableAction> 
				| <ActionKeyword> 
				) 
 
Access ::=	( is accessible [and attachable] 
			| is (not | neither) accessible [nor attachable]) 
 
AccessRule ::= 
	<Access> [in [past][,][current][, ][future]] 
	<SecurableActionSpecification> 
	<Constraint> 
	Constraint ::=	( unconditionally 
					| when <Condition> 
					) 

ContentSet ::= 
	All Fields for <LMObject> 
		excluding <FieldName [Field]>…] // separate list of fields with a comma if on the same line 
 
GrantedObjectList ::=	( <SecurableObjectName> <SecurableObjectType> 
						| all business clas ses 
						| all business tasks 
						) 

GrantedObjectSpecification ::= 
	( to <GrantedObjectList>… 
	| all ontology 
	[excluding <GrantedObjectList>…] // separate list of objects with a comma if on the same line 
	) 

GrantRule ::= 
	grants access [and attachability] 
		<GrantedObjectSpecification> 
		<SecurableActionSpecification> 
		<Constraint> 
 
LMContainerType ::=	( DataArea 
						| Module 
						) 
 
LMContentType ::=	( Field 
					| KeyField 
					) 
 
LMObject ::= <SecurableObjectName> <LMObjectType>

LMObject Type ::=	( BusinessClass 
					| BusinessTask 
					| Menu 
					| MenuItem 
					| WebApp 
					) 

MenuItemSpecification ::= <MenuItemName> MenuItem for <MenuName> Menu 

SecurableAction ::= [<SecurableObjectName>.][<StateName>.]<ActionName> 

SecurableActionSpecification ::= 
	for <ActionList>… 
		[excluding <ActionList>…] // separate list of actions with a comma if on the same line 

SecurableObjectName ::= <Literal> 

SecurableObjectSpecification ::=	( <SecurableObjectName> <SecurableObjectType> 
									| <SecurableObjectType> Type 
									| <ContentSet> 
									| <MenuItem Specification> 
									) 

SecurableObjectType ::=	( <LMObjectType> 
						| <LMContainerType> 
						| <LMContentType> 
						)