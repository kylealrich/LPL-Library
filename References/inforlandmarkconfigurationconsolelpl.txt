=== PAGE 1 ===
 
 
Configuration Console Reference 
Guide  
Landmark Pattern Language (LPL)  
January 2023  
 
 

=== PAGE 2 ===
 
 Copyright Â© 20223  Infor  
 
Important Notices  
The material contained in this publication (including any supplementary information) constitutes and 
contains confidential and proprietary information of Infor.  
By gaining access to the attached, you acknowledge and agree that the material (including any 
modification, translation or adaptation of the material) and all copyright, trade secrets and all other  
right, title and interest therein, are the sole property of Infor and that you shall not gain right, title or 
interest in the material (including any modification, translation or adaptation of the material) by virtue 
of your review thereof other than the non-exclusive right to use the material solely in connection with 
and the furtherance of your license and use of software made available to your company from Infor pursuant to a separate agreement, the terms of which separate agreement shall govern your us e of 
this material and all supplemental related materials ("Purpose").  
In addition, by accessing the enclosed material, you acknowledge and agree that you are required to 
maintain such material in strict confidence and that your use of such material is lim ited to the 
Purpose described above. Although Infor has taken due care to ensure that the material included in this publication is accurate and complete, Infor cannot warrant that the information contained in this 
publication is complete, does not contain typographical or other errors, or will meet your specific 
requirements. As such, Infor does not assume and hereby disclaims all liability, consequential or otherwise, for any loss or damage to any person or entity which is caused by or relates to errors or  
omissions in this publication (including any supplementary information), whether such errors or 
omissions result from negligence, accident or any other cause.  
Without limitation, U.S. export control laws and other applicable export and import laws govern y our 
use of this material and you will neither export or re- export, directly or indirectly, this material nor any 
related materials or supplemental information in violation of such laws, or use such materials  for any 
purpose prohibited by s uch laws.  
Do not  copy or distribute without proper authorization.  
Trademark Acknowledgements 
The word and design marks set forth herein are trademarks and/or registered trademarks of Infor 
and/or related affiliates and subsidiaries. All rights reserved. All other company,  product, trade or 
service names referenced may be registered trademarks or trademarks of their respective owners.  
 

=== PAGE 3 ===
 
Configuration Console Reference Guide  | 3  
Contents  
Introduction .................................................................................................................................  7 
Landmark Pattern Language (LPL) for Configurations  ........................................................... 7 
What Is the Configuration Console? ................................................................................ 7 
Configuration Console Developm ent Process and the Landmark Pattern Language ........ 7 
General Definitions  .................................................................................................................... 10 
Base Definitions .................................................................................................................. 10 
Data and Field Types  .......................................................................................................... 11 
Fields and Values ................................................................................................................ 12 
Operators ............................................................................................................................ 13 
Dates and Time Stamps ...................................................................................................... 16 
References  .......................................................................................................................... 17 
Actions and Actors .............................................................................................................. 20 
Messages ............................................................................................................................ 22 
Arrays  .................................................................................................................................  22 
Field Definition  .......................................................................................................................... 24 
Representation .................................................................................................................... 25 
Ontology .............................................................................................................................. 26 
Patterns  .............................................................................................................................. 27 
Display Fields  ...................................................................................................................... 29 
Surrogate For  ...................................................................................................................... 29 
Context Fields  ..................................................................................................................... 29 
Business Class Definition .......................................................................................................... 30 
Suppress Warnings ............................................................................................................. 31 
Ontology .............................................................................................................................. 31 
Patterns  .............................................................................................................................. 32 
DataSource Mapping  ........................................................................................................... 35 
Persistent Fields .................................................................................................................. 36 
Transient Fields ................................................................................................................... 38 
Dimensions  ......................................................................................................................... 38 
Measure Based Dimensions ................................................................................................ 39 
Measures ............................................................................................................................ 40 
Cube Links .......................................................................................................................... 40 

=== PAGE 4 ===
 
4 | Configuration Console Reference Guide  Context Fields  ..................................................................................................................... 40 
Field Groups ....................................................................................................................... 40 
Audit Index Fields ................................................................................................................ 40 
Local Fields  ......................................................................................................................... 41 
Derived Fields ..................................................................................................................... 41 
Conditions ........................................................................................................................... 42 
Text Search Fields .............................................................................................................. 44 
Cube Relations .................................................................................................................... 44 
Relatio ns ............................................................................................................................. 44 
Form Invokes ...................................................................................................................... 46 
Matrix Forms  ....................................................................................................................... 46 
Sets..................................................................................................................................... 47 
Rules  ................................................................................................................................... 47 
General Form for Rules  .................................................................................................  47 
Field Rules  .................................................................................................................... 54 
SubType < RelatedCondition> Field Rules  ..................................................................... 54 
Commit Rules ................................................................................................................ 55 
Audit Entry Rules  .......................................................................................................... 55 
Apply Pending Effective Rules ....................................................................................... 55 
Create Rules ................................................................................................................. 55 
Create Exit Rules  .......................................................................................................... 55 
Delete Rules  ................................................................................................................. 55 
Action Exit Rules ........................................................................................................... 55 
Attach Rules .................................................................................................................. 56 
Parent Attach Rules ...................................................................................................... 56 
Dynamic Creation Rules ................................................................................................ 56 
Rule Blocks  ................................................................................................................... 56 
States and Actions .............................................................................................................. 57 
StateCycles  ................................................................................................................... 57 
Actions .......................................................................................................................... 57 
User Interface Definition ............................................................................................................ 62 
Base Definitions .................................................................................................................. 62 
Drills  .................................................................................................................................... 68 
Navigations  ......................................................................................................................... 68 
Context Messages............................................................................................................... 69 
Lists .................................................................................................................................... 69 
Card View  ........................................................................................................................... 76 
Instance Count Chart  .......................................................................................................... 76 

=== PAGE 5 ===
 
Landm ark C onfiguration Console  LPL | 5 
 Forms  .................................................................................................................................. 77 
Base Definitions ............................................................................................................ 78 
Action  ............................................................................................................................ 81 
Composite ..................................................................................................................... 82 
Matrix  ............................................................................................................................ 85 
Search .......................................................................................................................... 86 
Summary ....................................................................................................................... 87 
Page Definition .......................................................................................................................... 88 
Panels .................................................................................................................................  89 
List ................................................................................................................................ 89 
Menu ............................................................................................................................. 90 
Search .......................................................................................................................... 91 
URL............................................................................................................................... 91 
Work View  ..................................................................................................................... 91 
Menu Definition ......................................................................................................................... 92 
Webservice Interface Definition .................................................................................................  94 
Security Class Definition ............................................................................................................ 96 
Structure Definitions  ............................................................................................................ 97 
Base Definitions .................................................................................................................. 97 
 

=== PAGE 6 ===


=== PAGE 7 ===
Introduction  
Configuration Console Reference Guide  | 7 Introduction  
Landmark  Pattern Language (LPL) for Configurations  
What Is the Configuration Console?  
The Conf iguration Console is a tool in the Infor Rich C lient that enables administrators to make 
several types of changes that affect Landmark applications and users.  
Application   Look -and-feel changes to menus, pages, and various user interface objects and 
actions associated with a business class, and config uration changes for features that apply  across a 
data area, including  
enabling and disabling data translation (multi -language field configuration)  
creating business subjects, and 
creating and modifying MIME types . 
Security   Creation and m odification of sec urity classes  
You can also use the Configuration Console for the maintenance of actor, identity, and role records.  
Web Services   Creation of new web services 
Web services enable non -Landmark systems to view or update Landmark data.  
When you make configurat ion changes through the Configuration Console, the changes apply 
across the application and to all users.  
Configuration Console Development Process and the Landmark  Pattern 
Language  
The La ndmark Pattern Language  (LPL)  is the language that many of the sourc e files in Landmark 
applications are written in, such as those for business classes and user interface objects. The 
Configuration Console user interface allows manipulation of an applicationâs LPL.  The application 
LPL source file integrity is fully protect ed by the Configuration Console; the LPL source file is not 
modified by the console, rather a copy of the LPL source file is created and stored to a database 
table as a configuration. At application execution time,  this configuration is brought into memory  as 
an overlay of the base source file and is executed in  place  of the original LPL source file. The key 
point is that configurations are dynamic and take effect in real time, therefore please use caution  if 
using the Configuration Console  on a production instance of an application.  

=== PAGE 8 ===
Introduction  
8 | Configuration Console Reference Guide  When creat ing configurations with the Configuration Console, it is best to do so in a provisional or 
test scenario before making the configurations available to all users. If you make the configuration 
changes directly to a produ ction environment, the changes are  applied as soon as you save them in 
the Configuration Console.  
Generally, you should use the Configuration Console user interface to add, delete, and modify 
configurations. However, it can be useful to view the LPL in th e Configuration Console to better 
understand possible configuration changes . For example, you might want to view the LPL for your 
configuration and then compare  it to the original LPL.  
The LPL is exposed through Edit LPL buttons and view base LPL  links. If  you view LPL in the 
Configuration Console, you can use Ctrl+F  to open a search box at the bottom of the LPL pane to 
search through the LPL text.  
Edit LPL button in the Configuration Console  
Although rare, it might  be useful to manipulate a configuration âs LPL manually using the Edit LPL 
pane. The remainder of this document serves as a reference guide for understanding the LPL.  
IMPORTANT:   Manually modifying the LPL is at your own risk . These m anual modificati ons are not 
supported by Infor.  
You have a sel ection of  tools to help you identify configuration issues. These are in addition to any 
error messages that you see while  working on a configuration in the Configuration Console. These 
tools can help you identify invalid configurations, locate specific err ors within configurations, and 
compare different versions of a configuration to better understand what might  be causing a problem.  
Verify Configurations ( cdverify ) utility  
Use t he utility to  quickly list invalid configurations and show any s yntax errors i n 
configurations.  
 

=== PAGE 9 ===
Introduction  
Configuration Console Reference Guide  | 9 Configuration Console 
The Configuration Console includes tools for comparing configurations, locating invalid 
syntax, and iden tifying invalid configurations.  
Configuration business class forms The Data menu in the Infor Rich Client  lets you view a list of configurations of a single type, 
and then identify invalid ones of that type and compare any two versions of the configuration.  
Please refer  to the Landmark documentation Infor Landmark Technology User Interface Guides  for 
detailed inform ation on using the Configuration Console.  
 

=== PAGE 10 ===
General Definitions  
10 | Configuration Console Reference Guide  General Definitions  
// Scope is defined by indent level. An indent level is 4 spaces or 1 tab 
// Comments are denoted by a double forward slash  // @SuppressWarnings in a comment will suppress all warnings that the L PL line generates  
// @External with a comment will suppress dead code detection/reporting 
Base Definitions  
LPLConstructName  ::= <uppercase  character>[<alphanumeric characters >â¦] // up to 255 characters  
 
ActionName  ::= <LPLConstructName > 
ActionTag ::= <LPLConstructName > 
BusinessClass  ::= <LPLConstructName > 
BusinessTask  ::= <LPLConstructName > 
CardViewName  ::= <LPLConstructName > 
ConditionName  ::= <LPLConstructName > 
ChartName  ::= <LPLConstructName > 
ColumnarRelationName  ::= <LPLConstructName > 
ContextMessage ::= <LPLConstructName > 
CriteriaName  ::= <LPLConstructName > 
CubeLinkName  ::= <LPLConstructName > 
CubeRelationName ::= <LPLConstructName > 
DetailSectionName  ::= <LPLConstructName > 
DrillName  ::= <LPLConstructName > 
DrillListName  ::= <LPLConstructName > 
FieldGroupName  ::= <LPLConstructName > 
FieldName  ::= <LPLConstructName > 
FormInvokeName  ::= <LPLConstructName > 
FormName  ::= <LPLConstructNam e> 
FullStateName  ::= <StateName >[.<StateName >â¦] 
GroupName  ::= <LPLConstructName > 
HierarchyName  ::= <LPLConstructName > 
ImageMapName ::= <LPLConstructName > 
ListName  ::= <LPLConstructName > 
MajorSystemProcess  ::= <LPLConstructName > 
MatrixForm  ::= <LPLConstructName > 
MenuItemName  ::= <LPLConstructName > 
MenuName  ::= <LPLConstru ctName> 
M3Interface ::= <LPLConstructName > 
NavigationName  ::= <LPLConstructName > 
PageName  ::= <LPLConstructName > 
PanelName  ::= <LPLConstructName > 
PaneName  ::= <LPLConstructName > 
ParameterName  ::= <LPLConstructName > 
PeriodViewName ::= <LPLConstructName > 
PFlowServiceName ::= <LPLConstructN ame> 
ProgramName  ::= <LPLConstructName > 
RelationName  ::= <LPLConstructName > 
ReportName ::= <LPLConstructName > 
RuleBlockName  ::= <LPLConstructName > 

=== PAGE 11 ===
General Definitions   
Configuration Console Reference Guide  | 11 RuleBlocks  ::= <LPLConstructName > 
SectionName  ::= <LPLConstructName > 
SecurityClaim  ::= <LPLConstruc tName> 
SecurityClassName  ::= <LPLConstructName > 
SetName ::= <LPLConstructName > 
StateName  ::= (<LPLConstructName > | <#>) 
StateCycleName  ::= <LPLConstructName > 
StateFieldName  ::= <LPLConstructName > 
StaticJavaW S ::= <LPLConstructName > 
StaticJavaPD  ::= <LPLConstructName > 
Subject ::= <LPLConstructName > 
TableName  ::= <LPLConstructName > 
TextVariable ::= <LPLConstructName > 
WidgetListName  ::= <LPLConstructName > 
WebAppName  ::= <LPLConstructName > 
WebserviceInt erface : := <LPLConstructName > 
 
Parens ::=  ( â(â 
 | â)â 
 ) 
 ModuleName  ::= <alphanumeric characters > 
ModuleDescription  ::= <Literal
> 
 ClassicPrefix  ::= prefix is <string of 2 to 5 alphanumer ic characters > 
ClassicName  ::= classic name is <Liter al
>  // literal must be all uppercase, no spaces  
ClassicNameForField  ::= classic name for < FullFieldName> is <L iteral> 
 
RpgName ::= rpg name is <Literal > 
 
SqlPrefix ::= sql prefix is <string of 2 to 5 alphanumeric characters > // no spac es 
SqlName ::= sql name is <Literal >  // no leading or trailing spaces allo wed 
SqlNameForField  ::= sql name for < FullFieldName> is <Literal > 
Data and Field Types  
DimensionField ::= <dimension  RelatedField > // this includes isAggre gatable attributes  
FieldSize  ::= <numeric characters > 
KeyField  ::= <keyfield FullFieldName > 
Literal ::= <any character except whitespace or angle brackets > 
NbrDecimals  ::= <numeric characters > 
Number ::= [-]<numeric characters >[.<numeric characters >] 
# ::= <numeric characters > 
Percent ::= <Number>% 
ReportText  ::= (<alphanumeric characters > | â:â)  
Text ::= âââ<alphanumeric characters >âââ 
ViewField  ::= <view FullFieldNam e> 
 DataDefinition ::= ( is a[n] < FieldName
> 
 | is like < FieldName > 
 // must be a simple field; this syntax determines only type and size  
 | is a[n] <BusinessClass> group [in subject < Subject>] 
 // Subjects defined in Product Line Definition  
 | is a[n] <BusinessClass > compute [in subject <Subject >] 
  [measures only ] 

=== PAGE 12 ===
General Definitions  
12 | Configuration Console Reference Guide   | is <TypeDataDefinition > 
 ) // needs to have a standard set of âsystemâ fields: product line, module, and so on  
 
PrimitiveType  ::= ( Alpha 
 | AlphaRight 
 | AlphaUpper 
 | Anniversary     // cannot translate  
 | Binary Document 
 | BinaryObject 
 | Boolean     // cannot translate  
 | BusinessObjectReference [to <BusinessClass >] // cannot translate  
 | CSVText     // cannot translate  
 | Date     // cannot translate  
 | [Unsigned]  Decimal   // cannot translate  
 | Docume ntTitle    // Alpha field with special characteristic: wh en 
  // in the co ntext of a BinaryDocument, it is populated when the BinaryDocument is populated. When user selects a file on 
  // disk into a BinaryDocument field, we search fo r the closest Document Title and MimeType and fill them out.  
 | EmailAddressFiel d [with multiple addresses] 
  // Deprecated: âwith multiple addressesâ due to size limitation â use MultiEmailAddressField  
 | MultiEmailAddressField 
 | GroupField    // cannot translate  
 | Integer     // cannot tr anslate 
 | Iteration of < BusinessClass >   // cannot translate  
 | JSONObje ct    // cannot translate  
 | MimeType    // cannot translate  
 | Numeric     // cannot translate  
 | Password    // cannot translate  
 | [Unsigned]  Percent   // cannot translate  
 | Period    // cannot translate  
 | RichText 
 | Signed    // valid only in a Repor t Definition  
 | Text 
 | TextDocument    // cannot translate  
 | Time     // cannot translate  
 | TimeStamp     // cannot translate  
 | UniqueID    // cannot translate  
 | URI 
 | URL 
 | XMLDocu ment    // cannot trans late 
 | Year     // cannot translate  
 ) 
 
TypeDataDefinition  ::= 
[us-ascii]<PrimitiveTyp e> [[size (fixed | up to)] <FieldSize>[.< NbrDecimals>]] 
 // âup toâ m eans this is a variable size field (for example , varchar) 
 // âup toâ on LOB types will restrict the size of the LOB; it is useful in some DBs to reduce the bas e record size  
 // âfixedâ is the de fault, however a warning is generated on any non up to type that is 30 spaces or more 
 // unless fixed is de signated. 
 // valid on Alpha and AlphaUpper only 
 // FieldSize is the overall size of the field. A Decimal field of size 12.2 means 12 total digits 
 // of which 2 are the number of digits afte r the decimal  
Fields and Values  
BODId ::= bod id   // references  the BODId GroupField if this Business Class implements BODId  
 

=== PAGE 13 ===
General Definitions   
Configuration Console Reference Guide  | 13 BusinessObjectReference ::= <FieldName > // Field that is  of type BusinessObjectReference  
 
CurrentAsyncId  ::= current async action request id     // valid only when in a background action  
 
CurrentActionBackgroundGroupId ::= current action ba ckground group id // valid only whe n in a background action  
 DefaultLabel ::= default label is (<LiteralMessage
> | untranslatable)  
 // 'untransla table' marks the base translation text as untranslatable 
 // This overrides  the default base label translation te xt. The default base label is the LPLConstructName with spaces inserted 
 //      before each uppe rcase character.  
 DocumentLocation ::= document location.(Local | AWS S3 | External)  
  
// State values for âdocument locat ionâ TypeOperator  
 FieldOrArrayName ::=  ( <FieldName
> 
 | <ArrayComp onent> 
 ) 
 FullFieldName ::=  ( <FieldOrArrayName >[.<FieldOrArrayName
>â¦] 
 | <CreateStamp > 
 | <CreateDate > 
 | <UpdateStamp > 
 | <RelevanceScore > 
 | <ActionAttribute > 
 | <BODId> 
 | <CurrentAsyncId > 
 | <CurrentActionBackgroundGroupId > 
 | has future changes // Boolean field; returns true if future -dated records e xist 
 | user fields[< Parens><Business Class><Parens>] 
 // references t he set of user fields that have been de fined in this context or the explicitly given BusinessCla ss context 
 ) 
 JavaFormat ::= âââ(<Literal> | â<â< RelatedValue
>â>â)â¦ââ â 
 // Must resolve to a JavaFormat as defined here: 
 //   http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html  
 //  can also see https://en.wikipedia.org/wiki/Regular_expression   
 RelevanceScore::= relevance score 
// this returns the relevance score from a text search â it is valid only on a List Definition  
 States ::=  
States 
<StateName > value is < Literal> [with <Icon
>] 
[<DefaultLabel >] 
 Value ::= ( <Text
> 
 | <Number> 
 | <#> [(year[s] | month[s] | day[s])]  
 | <Percent> 
 | <Constant > 
 | <ActionTagValue > 
 | <StateFieldName > 
 ) 
Operators  
AsOfDate ::= ( as of (< RelatedValue > | all dates) 

=== PAGE 14 ===
General Definitions  
14 | Configuration Console Reference Guide   | after <RelatedValue > 
 | before <RelatedValue > 
 | between <RelatedValue > and <RelatedValue > 
 )  // RelatedValue must be a Date or TimeStamp  
 
AsOfOperator  ::= <Parens><AsOfDate ><Parens> 
 
Constant ::=  ( true 
 | false 
 | blank  
 | high value 
 ) 
 CreateOrUpdateMode ::= mode  
// valid only in the title of a Form; re sults in âCreate â or âUpdateâ 
 
FieldOperator  ::= ( not  // valid only with a Condi tion 
 | !   // â 
 | no   // â 
 | old 
 | any   // valid only with multi-valued (array, otm) RelatedField  or RelatedCondition  
 | all   // â 
 | first  // â 
 | last   // â 
 | sum   // â 
 | avg   // â 
 | min   // â 
 | max   // â 
 | floor 
 | ceiling  
 | pending  
 | instance count of // â 
 | sizeofarray  
 | (first | last) iteration of  // valid with a OTM  RelatedLink only  
 | next   // valid on Iteration fields only  
 | previous  // â 
 | reference to  // valid only with a OTO RelatedLink only â returns the BusinessObjec tReference 
   //     of the RelatedLink  
 | target of   // valid only with an âis related va lueâ¦â designated field  
 ) 
 
LinkOperator ::= ( first 
 | last 
 ) 
 
PeriodOperator  ::= 
 ( [(prior | next) year [<# >]] [(prior | next)] (period[s] | week[s ] | month[s]  
   | quarter[s] | [all] year[s]) [< #> [thru <# >]] 
 | [(prior | next) year [ <#>]] [(prior | next)] (period | week | month 
   | quarter | year ) [<#>] (beginning | ending) [ytd] bala nce 
 ) 
 PeriodLabel  ::= period label 
// valid only in the c ontext of a period in a Cube View 
 TotalOperator  ::= ( running total 
 | percent of total) 
 TypeOperator ::= ( decimals 
// vali d with a Decimal type field only  
 | type  // field type â returns string  of <Primitiv eType; for example, Alpha, Decimal, Numericâ¦  

=== PAGE 15 ===
General Definitions   
Configuration Console Reference Guide  | 15  | size  // size of  the âstringâ value of a field  
 | uppercase 
 | lowercase  
 | year  // valid with Date and  TimeStamp fields  only 
 | month  // â â 1-based month number (1-12)  
 | month [short] name // â 
 | day  // â â 1-based day number (1-31)  
 | day [short] name // â 
 | week day // â â 1-based week day numbe r (1-7) 
 | corporate week day  // week day based on corporate TimeZone  
 | week day  using <RelatedValue > // week day based on RelatedValue TimeZone (must be a TimeZone)  
 | year day // â â 1-based year day number (1-366)  
 | week  // â â 1-based week day number (1-52)  
 | week year // â â year corresponding to week operator (12/31/15) = week 1, week year 16  
 | days in month // â â number of days in the dateâs month (28-31)  
 | days in year // â â number of days in the dateâs year (either  365 or 366) 
 | as years // valid with Numeric type field only â treats v alue as number of years  
 | as months  // valid with Numeric type field only â treats value as number of months  
 | as days // valid with  Numeric type f ield only â treats value as number of days  
 | hours  // valid with Time type fields only â Decimal total nu mber of hours since day beginning  
 | minutes // â â Decimal  total number of minutes since beginning of day  
 | seconds // â â Decimal total number of seconds since beginning of day  
 | date  // valid with TimeStamp type fields  only (returns Date in GMT time zone)  
 | corporate date // valid with TimeStamp type fields  only (returns Date in corporate time zone)  
 | system date // valid with TimeStamp type fields only (return s Date in systemâ s default time zone)  
 | date using <RelatedValue >// valid with TimeStamp type fields only, RelatedValue must be a TimeZone  
 | time  // valid with TimeStamp type fields only  
 | anniversary  // valid with Date and TimeStamp ty pe fields only 
 | period // valid with Date and TimeStamp type fields only  
 | levels // valid with array fields  only. Defines number of entries up to and including last entered value  
 | level <# > // valid with key field that is a hierarchy; s pecifies which  level in t he hierarchy to address  
 | entries // valid with array fields only. Defines number of entered fields in the array  
 | compact format // valid only with a field that implements CompactFormat  
 | version // valid only with a key field that implements Versioning; will address the version field  
 | label  // returns the translated label for the field  
 | [full] name  // returns the LP L name or full name of the field  
 | text  // valid only with a field that has Text Va riable; retrieves the text with the va riables replaced  
 | [exact] translation // returns the data translatio n for the current local â âexactâ will prevent standard defaulting  
 | mime type  // valid with BinaryDocument and BinaryObject only  
 | in base64  // valid with BinaryDocument and BinaryObj ect only 
 | translations // returns the set of data translation for a field; valid on right side of assignment operator only  
 | document location  // returns <document location.(Local, S3, External) >; can be modified  
 | (local | external) document  // return s the local or external document; external includes AWSS3 location  
 | select <SelectStatement > 
 | select line <SelectLineStatement > 
 | document  [for <RelatedLink >] 
  // valid only with a field that is a âdocument templateâ. This will retrieve the fully replaced  
  // document if n o related link is specified then it is presumed to be based on âthis instanceâ  
  // if RelatedLink is a n action request id, document will be replaced based on the action request  
 | compute value [for < RelatedLink >] 
  // valid with a field that is a BusinessClassCompute only  
 | as of <RelatedValue > // related va lue must be a Date or TimeStamp  
 | (date | audit entry) (first | last | next) changed [(from | to)  
   <RelatedValue >] 
 | days was <RelatedValue > [while  <Condition >] [between <RelatedValue > and 
   <RelatedValue >] 
 | weighte d average [between < RelatedValue > and <RelatedValue >] 
 | <PeriodOperato r> 
 | cube dimension value [using year of < RelatedValue >] 

=== PAGE 16 ===
General Definit ions 
16 | Configuration Console Reference Guide    // a dimension value in a cube is typically different than the B usines sClass value 
  // a Period dimension that is not satisfied with a date must have a  year specified  
 | input value // always returns the input value on a transient field with a derived value  
 | plain text // strips all formatting (except new line) from  RichT ext fields 
 | split [on <Literal >] // splits string into an array of strings using âLiteralâ as separator (comma is default)  
 | using <JavaFormat > [using <RelatedValue >] 
   // RelatedValue valid only with  TimeStamp and must be a TimeZone  
 | (short | medium | long) timestamp [with  day [short] name]  
   [(show | hide) time  zone][(show | hide) seconds]  
   [using <RelatedValue >] 
  // valid with TimeStamp â returns a String 
   // RelatedValue valid only with  TimeStamp and must be a TimeZone  
  // http://docs.oracle.com/javase/7/docs/api/java/text/DateFormat.ht ml 
  // https://docs.oracle.com/javase/tutorial/i18n/format/dateFormat.html  
 | (short | medium | lon g) date [with day [short] name] 
   [using <RelatedValue >] 
  // valid with TimeStamp and Date â returns a  String  
   // RelatedValue valid only with  TimeStamp and must be a TimeZone  
 | (short | medium | long) anniversary [with day [short] name ] 
   [using <RelatedValue >] 
  // valid with TimeStamp, Date, and Anniversary â retur ns a String 
   // RelatedValue valid only with  TimeStamp and must be a TimeZone  
 | (short | medium | long) period 
   [using <RelatedValue >] 
  // valid with  TimeStamp, Date, and Period â returns a String  
   // RelatedValue valid only with  TimeStamp and must be a TimeZone  
 ) 
Dates and Ti me Stamps 
CreateDate  ::= create date // retu rns the most recent create date from the cur rent âas ofâ date  
 
CreateEffectiveDat e ::= create effective date 
  // retu rns the most rece nt create effective date from the current âas ofâ date  
 
CreateStamp ::= create stam p[.actor]  // referen ces the Creat eStamp in the business class  
  // by itself it is  the actu al TimeStamp when the instance was created  
  // the actor keyword  references the a ctor who created this instance  
 CurrentDateTime ::=  ( current [(corporate | user)] time 
 | [system] current [(corporate | u ser)] date  
 | [system] current [(corporate  | user)] year 
 | [system] current [corporate] period  
 | [system] current timestamp 
 | [system] current [(corporate | user)] anniversary 
 ) 
 DurationVars  ::= ( duration begin date 
 | duration end date  
 ) 
 
TimeZoneVar ::= ( user time zone 
 | corporate time zone  
 ) 
 
UpdateSta mp ::= update stamp [.actor]  
// references the UpdateStamp in the business class  
  // by itself it is the actual Time Stamp when the instance was last updated  

=== PAGE 17 ===
General Definitions   
Configuration Console Reference Guide  | 17   // the actor keyword references the actor who last updated this instance  
Refe rences  
BaseURL ::= base url< Parens>webapp is <WebAppName ><Parens> // references the current base url context  
 
BusinessClass Total ::= total< Parens><BusinessClass>.< RelatedValue >[,<DimensionField > = 
<RelatedValue >]â¦<Parens> 
 // first Related Value must  be a defined TotalName on the specified B usinessCl ass 
 // DimensionField is a dimensio n in the BusinessClass 
 
ConfigCategory  ::= <Literal> 
 
ConfigVar  ::= [stack]config [<Parens><ConfigCategory ><Parens>].<Literal> 
 // Allows reference to a configuration variable. Configuration variables are define d in the BusinessClass 
 // ConfigurationParam eter - if it is not found it is blank 
 // âstackconfig â checks  the parameter at the dataarea, then the tenant, then the stack 
 DataLink ::= [<LinkOperator
>] 
 ( <KeyField > [set] 
 | <hierarchy  KeyField > ( parent 
   | [and] children 
   | [and] siblings 
   | [and] descendants 
   | [and] ancestors 
   | ascendant 
   ) 
 | <RelationName > 
 | <CubeRelationName > 
 | <ColumnarRelationName > 
 | <BusinessClass >[<Parens>(<KeyField > | <BusinessObjectReference>) <Parens>] [set] 
 | <BusinessObjectReference >[<Parens><BusinessClass ><Parens>] 
 | <BusinessClassTotal > 
 | <Agent> 
 | <SessionKey > 
 | actor.conte xt.<KeyField > 
 | audit log records [descending]  // retrieves the set of past and future ( effective -dated) r ecords 
 | [(draft | in process | completed | rejected)] [<BusinessClass >.Create] action requests 
 | this instance  
 | related     // valid within a Relation Definition  
 | from    // valid within a where co ndition on an OTM DataLink  
 | each[<Parens><LPLConstructName ><Parens>] // valid within a  for each loop  
 | invoked     // valid within an invocation  
 | result    // valid within an invocation  
 | child    // valid within Parent Attach Rules  
 | cube[<Parens><BusinessClass>< Parens>] // used to address the AnalyticCube business cla ss 
 | cube drill set   // use d to address the drill set from an AnalyticCube  
 | <TimeZoneVar > 
 ) 
 [<AsOfOperator >] 
 [<Parens >locale of <RelatedValue ><Parens>] // RelatedValue mus t be an IsoLocale  
 [<Parens >where <Condition>< Parens>] 
 [<Parens >level <#>< Parens>]  // only valid on a hierarchy KeyField   
 // <Relate dLink> option is to indicate that you can string related links, that it is recursive;  
 //       for example, KeyField.RelationName.KeyF ield.RelationName.Fi eld 
 // The BusinessCla ss in a âBusinessClass setâ must either have a âpart ofâ ontology to  
 //      the prec eding item or it must have a fie ld that is one of the symboli c keys of the pre ceding item  

=== PAGE 18 ===
General Definitions  
18 | Configuration Console Reference Guide   // If there is more than one field that matches the preceding items symbolic ke ys then  
 //      (<Key Field>) must be present to disambiguate which one is des ired 
 // A BusinessObjectReference must have a BusinessClass designat ion if it has not been defined 
 //      as a particular kind of BusinessClass  
 // If this business class is a n Agent then another agent that has been linked to this agent can be 
 //      addressed with the âagent(<BusinessClass>)â designation. To access an y agents that the current  
 //      actor has been linked with simply add the âactorâ k eyword in front of the agent keyword. 
 // âcubeâ must be the first item in any RelatedLink. It re fers to this  business classâ AnalyticCube unless this is  
 //      overrid den with a specif ic BusinessClass in side the parens. 
 
Distinct ::= distinct (< FullFieldName > | <FieldGroupName >) 
  // Curren tly used in âfor eachâ rule only. Returns a set of instances wh ere the Field (or Fields)  
  // are  distinctâthat is, no duplicat es of Field  (or Fiel ds) will be returned. The instances  
  // retu rned will have only the distinct f ields filled out a s well as an y fixed fields, such as higher  
  // level keys that are fixed  in the related definition.  
 DocTemplate ::= (template.< Literal> | template name .<RelatedField
>) 
 // Allows reference to  an XML, JSO N, Word rtf, or PDF template sto red in the UserTemplate busines s class  
 InlineEquation ::= [<Parens>]<RelatedValue> <MathOperator > <RelatedValue>[<Parens
>] 
 // A basic InlineEquation (A + B) can also be considered a RelatedValue, becaus e InlineE quation is an option of 
 // RelatedField, which is an option of RelatedValue. This means it can be used as a RelatedValue in the more complex 
 // InlineEquation ((A + B) + C), where (A + B) is the first <Re latedValue> in the InlineEquation, the second + is 
 // the <MathOperator>, and C is the second <RelatedValue>. 
 
LogicalID  ::= logical id // logical id is set in LogicalIdMapping  
 
ParentContext ::= parentcontext. ( isbusclass 
  | name 
  | locale 
  | stereot ype 
  | istransaction  
  | module 
  | dataarea 
  | <SymbolicKeyVar> 
  | isbustask > 
  ) 
 // âpa rentcontextâ refer s to the par ent context of the current context  
 // symbolickey retrieves the context infor mation of the Symbolic Key that this business obj ect is âcen teredâ on 
 // If the business object is not defined directly via a Symbolic Key but is d efined as being âpart ofâ some other 
 // business class then it gets the context informatio n of the Symbolic  Key of that busine ss class.  
 Phrase ::= phrase[< Parens>locale of < RelatedValue ><Parens>].<Literal
> 
 // Allows reference  to a translatable phrase. Phrases are defined in the UserPhrase business cla ss. 
 RelatedCondition  ::= [<FieldOperator >]( [<RelatedLink>.]<ConditionName
> 
  | <RelatedField >.<StateName > 
  ) 
 RelatedField ::= [<FieldOperator
>] + 
 ( 
 [<RelatedLink>.] <FullFieldName > 
  // <FullFieldName> is optional with the FieldOperator s instanc e count of and (first | last) iteration of  
 | <RelatedLink > (first | last) date within <RelatedLink > 
  // Second RelatedLink must point to a BusClass group. The result of this statement is a  date (never a 
  // condition) so âfirstâ or âlastâ is required. For example, â Employee date within Enrollmen tGroupâ 
  // implies a condition  whereas âfirst date withinâ cl early implies that the result is a  date. 
 | instance count [where <Condition >] 
  // valid in List Definition Summary Total Fields an d ColumnarView lis ts only  
 | <InlineEquation > 
 ) [<TypeOperator >] [<TotalOperator >] 
 

=== PAGE 19 ===
General Definitions   
Configuration Console Reference Guide  | 19 RelatedLink ::=  <DataLink>[.< DataLink >â¦] 
 
RelatedValue ::= ( <RelatedField >[.<StateName >] // StateName is one of the States defined on the RelatedField  
 | <Value> 
 | <ParentContex t> 
 | <Actor> 
 | <CurrentD ateTime> 
 | <DurationVars > 
 | <CreateStamp > 
 | <UpdateStamp > 
 | <ConfigVar > 
 | <DocTemplate > 
 | <Phrase> 
 | <URLVar> 
 | <SessionKey > 
 | <SessionClai m> 
 | <LinkBack > 
 | <BaseURL> 
 | error message [(key | field name | stack trace)] // valid with InvokeRule âre sume on errorâ  only 
 | page numbe r   // valid in Pa ge Header or Page Footer only  
 | <NavigationName > as pdf [in ( portrait | landscape)] [font offset is < Number>] 
 // default is portraitC 
 | <PeriodLabel > 
 | <CreateOrUpdateMode > 
 | <TenantID > 
 | <LogicalID > 
 | <DocumentLocation > 
 | <TotalVar> 
 | <TimeZoneVar > 
 ) 
 
SessionClaim ::= session.claim.< Literal> 
 // Allows reference to a sessi on claim. Session claims are typic ally Sec urity Claims se t on the session context. 
 SessionKey ::= s ession.key.< FieldName
> 
 // Allows reference to a session key . Session key s are  high level Ke yField values typically tied to the 
 // invocation of a WebApp by s pecifyi ng them on the url (e.g. âsession.key.SupplierGroup=8181â) 
 SelectStatement  ::= <Message
> 
 // if the field is an XMLDocument, the Se lectStatement is interpre ted as XPath 
 // if the field is a  JSON Object, the Select Statement is interpreted as JSON 
 // if the  field is any other type, the Select Statement is treated as a Regular Expression 
 SelectLineStatement  ::= that (starts with | contains | ends with) < Message
> 
 TenantID ::= tenant id 
 TotalVar ::=  ( total text 
// references âsub -total text isâ and âgrand total text isâ from ListDefinition â used on print total form  
 | total key[.representative text]) 
  // can be used in âsub- total text isâ and  âgrand total text isâ <Message> in ListDefin ition 
 URLVar ::= url. <Literal
> // Allows reference to a url variable. These  variables are available w hen the flag âbywâ is set to true on th e url 
 // (â¦&byw=true& - automatically done on a l inkback) or whe n they are individually specified in the We bApp 
 // definition a s a URL Paramet er 
 

=== PAGE 20 ===
General Definitions  
20 | Configuration Console Reference Guide  
 
Actions and Actors  
ActionAttribute  ::= ( <Actor> // action attributes either re ference the currently executed action or an audite d action 
 | action // an audited action can be addressed u sing âfor each audit log recordsâ  
  // within this for each, the âeachâ keyword can be used in conjunction wi th these attributes.  

=== PAGE 21 ===
General Definitions   
Configuration Console Reference Guide  | 21   //          for example,  âeach.actionâ will return the name of the past (or future) action  
  // âeach.effective dateâ will re turn the effective date of that past action  
 | action comment  
 | action type[.(Create | Update | Delet e | Unknown)]  
   // value i s true if the action type is one of the listed types  
 | action tag  // designer defined âtagâ  
 | applied stamp  // logical time stam p of when record actually changed  / action was âappliedâ  
 | audit entry id  // if active entry â t he id  of the entry 
 | audit period[.(Past | Current | Future)] 
 | correction  // true  if activ e entry is a co rrection 
 | correction comment  // if correction â the comment  
 | effective date 
 | effective time zone // time zone for effective date â default is  serv er time zone 
 | effective through // if new entry correction â the effective thr ough date 
 | effective stamp  
 | entry stamp  // logical timestamp of change ârequestâ  
 | initiating act ion 
 | invoking action   // action immediately p receeding this one in the invoke chain  
 | reason  code 
 | subject  
 | system stamp   // physical timestamp of actio n 
 | action request id  
 | changed field names // comma separated li st of changed field names  
 | changed fields  // list of changed fields â valid only in âfor eachâ rule  
 | purge date  // date  all data was purged before  
 | audit transaction id // id that t ies all audit log entries done in a transaction  
 | session   // currently not in use  
 | server identity   // set of IP addresses for the server th at ran the action  
 | remote identity   // IP address for the remot e client that ran the action  
 ) 
 
ActionTag Value ::= action tag.<ActionTag > 
 // allo ws reference to  a specific act ion tag value, which are defined in the Product Line Definition file  
 
Actor ::= [(authenticated  | agent)] actor [ (<ActorAttribute >  
   | context.<FieldNam e> 
   | context.< SecurityClaim > 
   )] 
 // âactorâ by itself is the c urren t actor which is repre sented by the Act or KeyField in the environment product line 
 // âauthenticated actorâ is useful in an Actor Proxy situation 
 // âagent actorâ is the actor that this Agent Stereotype is linked to  
 // âcontext.<FieldName>â is any KeyFi eld within this produc t line â actors c an have any keyfield  
 // within the syste m defined  as a context field with a specific value (e.g. Company = 1 for actor ApClerk1) 
 // if this is  used when doing a âfor each audit log recordsâ then it refers to th e act or of the part icular a udit log action 
 ActorAttribute ::=  ( <actor FieldName
> // Field on Actor.busclass in environm ent product line 
 | initiator   // retur ns true if the actor is the intiator of a Re questAction 
 | approv er  // returns true  if the actor is an approver of a RequestAction  
 | final approver  // returns true if the actor is a âfinal approverâ of a RequestAct ion 
 ) 
 Agent ::= [[authenticated] actor.]agent[ <Parens><BusinessClas s><Parens
>] 
 // If this busin ess class is an Agent, another agent that has been linked to this age nt can be addressed with the  
 // âagent(<BusinessClass>)â designation. To access agents that the curre nt ac tor has been linked with, add the 
 // âactorâ keyword in front of the âagentâ keyword. 
 LinkBack ::= linkback< Parens
>  // The  linkback state ment is a singl e line statement. These options have been  
 webapp is <WebAppName > // placed on separate lines in the BNF for readability.  
 navigation is < NavigationName > 
 [allow anonymous access] 

=== PAGE 22 ===
General Definitions  
22 | Configuration Console Reference Guide   [show form  only] // Suppresses display of the header and navigation bar  
 [text is <Message >] 
 [session key <KeyField > is <RelatedValue >â¦] 
 <Parens> // This will result in a full http url link that will bring up the designated navigation. If a âtext isâ  
  // message is def ined, then the linkback will be an HTML link, otherwise it will be a simple url.  
Messages  
IsoLocale  ::= <Literal> // must be a valid IsoLocale  
 
LiteralMessage  ::= âââ( <Literal> | â<â<RelatedValue >â>â)â¦âââ 
 // âComp anyIsR equiredâ will display the m essage âCompany is requiredâ 
 // âCompany<Company>IsRequiredâ will display the mess age âCompany 123 is requiredâ 
 MessageID  ::= âââ( <Literal> | â<â<RelatedValue
>â>â)â¦âââ 
 // âCompanyIsRequiredâ will display the m essage âCompany is requiredâ 
 // âCompany<Company>IsRequir edâ wil l display the m essage âCompany 123 is requiredâ 
 
Message ::= ( [(untranslatable : | configuration:)]<LiteralMess age>] 
 | <MessageID> 
 ) 
 [<MessageTranslation >â¦] // valid only when âconfiguration:â used  
   // âuntranslatableâ is valid in all LPL  
   // âconfigu rationâ valid in a configuration only 
 MessageTranslation ::= translation for < IsoLocale > is <LiteralMessage
> 
Arrays  
ArrayComponent ::=  ( <array RelatedFiel d> // This can also be a simpl e Alph a field which then implicitly addresses each character 
 | <array RelationName > 
 | <ArrayRangeAddress > 
 | <special in dex SingleValueArrayAdd ress> 
 ) // A Field or a Rela tion can be an array. A Relation becomes an Array Relation when one of the Values  
 // being mapped to the index value is an array (this is done using the each operato r). A Fi eld becomes an 
 // array when it is an ArrayFi eld or when it is a derived field  that contains an ArrayField without a single 
 // subscript de noting a speci fic occ urrence. The RelatedField expression (A + each B) where B is an 
 // ArrayField of siz e 10 returns an array of size 10 where A is added to each  occurrence of B. More complex 
 // array expressi ons are defined below. An ArrayRangeAddress is a subset of an array that can res ult in a  
 // single occurrenc e or even no occurrence. A special ind ex SingleValueArrayAddress is an array 
 // with a specific  special index variable associated w ith it. By defa ult all ArrayComponents are associated with 
 // the special index  variab le i exc ept when two arrays are used in an expression where it is ambiguous  as to  
 // how to associate their respective occurrences. Fo r example, (Array1 * Array2), i s the result a single  
 // dimension array or a two dimension array.  
 
ArrayRangeAddress ::= < ArrayComponent>â[â[< I>=]<from IndexVariable>:< to IndexVariable >â]â 
 // This expression defines a subset range of the A rrayComponent denoted by two index variables : the 
 // from IndexVariable and the t o IndexVariable. The to IndexVariable is inclusive. The si ze of this array 
 // is (to Index Variable â from In dexVariable) + 1. 
 I ::= ( i | j | k ) 
// These are intern al array indexing variables, which are for special use only within array expressions.  
 // Their purpose is to allow the explicit mapping of multiple arra y occurrences in a single expression. 
 // The  i variable is implicitly used and is access ible in any ar ray exp ression ; for ex ample, for each 
 // <ArrayComponent> is equivalent to for each <Arr ayComponent>[i=1:arraysize]; so the 
 // special index variable i can be used to explicitly address an occurrence within the for loop. This can be 
 // use ful for comparing the current occurrence with the next occurrence: if (A[i] == A[i+1]).  

=== PAGE 23 ===
General Definitions   
Configuration Console Reference Guide  | 23  // Any Arra y index ed with a special index is still considered an ArrayComp onent as it implicitly means  
 // all occurrences in the absence of any array occurrence conte xt. 
 
IndexVari able ::= ( <RelatedValue > 
 | <I> 
 | <SizeOfArray > 
 ) // Arrays are indexed beginning with 1. The first occur rence of an array is denoted with an index of 1.  
 // An in dex var iable c an be a RelatedValue that is not an array or the special index variables i,  j, and k. 
 SingleValueArra yAddress ::= < ArrayComponent>â[â< IndexVariable
>â]â 
 // A specific val ue in an array is addressed by using hard brackets [  ] to denote the 
 // index of the  specific occur rence. The special index variables only have m eaning when used within 
 // an array context that is an ArrayExpression or a for each <ArrayComponent> scoped statement.  
 SizeOfArr ay ::= sizeofarray <ArrayComp onent
> 
 // sizeofarray returns the size of the first array c omponent in the ArrayComponent (an ArrayComponent 
 // can be made up of several ArrayComponents ). 
 
 

=== PAGE 24 ===
Field Definition  
24 | Configuration Console Reference Guide  Field  Definitio n 
// Field file s have an extension of .field or .keyfield  
 
Field Structure ::=  
<FieldName
> is a (Field | KeyField)  
[owned by < ModuleName >] 
 // if not defined then field is g lobal and put in the âfieldâ  package 
[(<SqlName> | <SqlP refix>)] 
 // SqlPrefix is for Group Field onl y; SqlName not valid on a Group F ield 
 // Every dup licate group field type instantiation in a B usiness Class or GroupField requires a âprefix isâ  
 // predicate.  This lets us add the prefix to all th e group field names. Currently, the kludge for the prefix  
 // on a GroupField instantiation in  a Business Class is sql prefix is XXX  
[<ClassicName >] 
[<DefaultLabel >] 
[text searchable]  
[scannable] 
[holds pii] 
[default filter operator is (contains | starts with | equals)]  
 // valid  only on a SimpleField (not a GroupField or ArrayField) and alpha field types 
 
[extends <FieldName >] 
[member of <extended FieldName > peer group] 
 // âextended FieldNameâ must be a super key fi eld of this key field â that is, this key field must extend it.  
 // A â peer g roupâ of KeyFields is a set of KeyFields that are all su rrogates of each other where the surrogate 
 // values are all identical. If ICCompany extends GLCompany and POCom pany exten ds GLC ompany, and if ICCompany 
 // and POCompany are members of the GLCompany peer group, then ICCompany acts as a surrogate for POComp any, 
 // where  the POCompany value is equal to the ICCompany value. 
[(delete cascades | delete ignored)] 
 // valid on a K eyFiel d with a business class only - defaults to delete restricte d 
[name is < Literal>] 
 // If a field exte nds another field, it cannot specify a new repre sentation. Both KeyFields and Fields can be 
 // extended . An extended Key Field typically specifie s an additional business class that contains  the part icular  
 // instances of the new KeyField although this i s not re quired. An extended Field typical ly sets some context  
 // variable of the base Field.  
 // An example of a  KeyField being extended with a new business class is Company. Company might b e extended 
 // as a new field called APCompany with a business clas s of A pCompany. If the business class for Company is  
 // Glsystem, each instance of an ApCompany must also be an instance of a Glsy stem, whereas each instance of 
 // a Glsystem might not be an instance of an ApCompany. 
 // An example of a KeyField being extended without a new business class being defined is PersonnelCode. 
 // PersonnelCode has a Context variable called PCode Type a nd it might be extended as a new field called 
 // LocationC ode with PCo deType set to P CodeType.Location (one of its states). 
 // An exa mple of a Field being extended is Currency Value. CurrencyValue has a context variable called IsRate 
 // and might be extended as a new field called CurrencyAmount with IsRate set to false.  
Representation  
Ontology  
Patterns  
Display Fields  
Surrogate For  
Context Fields  
The syntax definitions for  the following s ections in the Field structure are  the same as their counterparts in the Business Class st ructure . 
Refer to the B usiness Class Defi nition section for their syntax.  
Transient Fields   // valid on group or array fields only  
Local Fields   // valid on group or array fields only  
Derived Fields   // valid on group or array f ields only 
Conditions   // valid  on group or array fields only  
Cube Relations   // valid on group or array fields only  
Columnar Relations   // valid on group or array fields only  
Relations   // valid on group or array fields only  
Rule Blocks  

=== PAGE 25 ===
Field Definition   
Configuration Console Reference Guide  | 25 Field Rules  
Representation  
[<FieldRepresentatio n>] 
 // A KeyField migh t not have a representation. This is usef ul when the KeyField is the  symbolic key of a business 
 // class that implements the  Specialization pattern. The field  can still be put as a Persistent field in a business cl ass 
 // to dynami cally refe rence the appr opriate rela ted Specialization. 
 
FieldReprese ntation ::= 
( <SimpleField > 
| <GroupField > 
| <ArrayField > 
) 
 
SimpleField ::= 
type <DataDefinition > 
[precision is < RelatedValue >] 
[round to precision]  
[<States >] // <States> is  not indented under type because indentation implies som e form of ownership or deta il declaration . 
 // In this case, <States> describes the F ieldâs de fintion a nd not the Representationâs defintion. 
 
GroupFiel d ::= 
Group Fi elds 
<FieldName > [<DataDefinition >] 
[<States>] 
[<SqlName >] 
[<ClassicName >] 
[<ClassicNameForFiel d>] 
[<SqlNameForField >] 
[<DefaultLabel >] 
[text searchable]  
[scannable] 
[encrypt]  
[holds pii]  
[enable alternate  document location ] // valid for BinaryDocum ent, BinaryObject, CSVText, JSONObject,  
[document  is <RelatedField >]  //     RichText, Text, TextDocument , and XMLDocument fields only  
[existence  is <RelatedField >]  // Must be a Boolean type field  
[disable Au diting [when in  background]]  // Field will not be audited  
[disable EffectiveDated]  // Field will not pa rticipate in EffectiveDated pattern  
[enable EffectiveDated]   // Field will participate in EffectiveDated pattern  
[automate context] 
[disable surrogates] 
[allow images]   // valid for RichText fields only  
[(delete casc ades | delete ignored)]  
[translatable]    // allows fo r data translation for this field  
[restricted]   // cannot be used as field on UI  
[protected]  // application -controlled field;  cannot be updated from the  UI, webservices, or spreadsheet  
[precision is < RelatedValue >] 
[round to precision] 
[primitive type is <RelatedValue >]// must be of  type âPrimitiveTypeâ; cannot be Text or BinaryDocument/Image  
[primitive size is <RelatedValue >] 
[primitive decim al size is < RelatedV alue>] 
[create value is blank if no entry] 
 // If a field is added after a record is cre ated, typically  the fir st value in the audit log applies as the value from  
 // the point of cre ate. With this pattern, the value from create will be considered blank 

=== PAGE 26 ===
Field Definition  
26 | Configuration Console Reference Guide  [as of <RelatedValue >] 
[within < RelatedValue >] 
[<Message >] 
[[exact] version is (<RelatedValue > | latest )] 
[data area  is <RelatedValue >]  // valid only when stored in an environment  busclass 
[is (conditio n | related (link | value)) for < RelatedValue >] 
[(dimensions  [with at tributes]  | measures) only] // RelatedValue must be a BusinessClass name 
[<TextVariables >] 
[document template  [for <BusinessClass >]] 
 // if within a Gr oup the n just âdocument templateâ c an be specified genericall y. Thi s will re quire 
 // that wherever this  group field is used a specific document template for BusC lass is specified  
[store as B usinessObjectReference] 
[<SqlPrefix >] 
 
ArrayField ::= // Arra yField is valid on both keyfield and fields  
<FieldName> [<DataDefinition >] 
occurs (< Literal> | sizeofarray <Arr ayField> | unli mited) times 
 // unlimited is valid for local fields only 
Onto logy 
// valid on key fields only  
[stereotype is <Stereotype >] 
business class is <B usinessClass > 
 // This  is the  business class that contains the instances of this KeyField . 
 // This busines s class must spec ify this KeyField as its symbolic key.  
[existence not requir ed] 
 
Context 
 // The ontologi cal context def ines the affor dance structure. Typically there is only a sing le KeyField in a n 
 // affordance structure. If the  singl e Keyfiel d itself has an affordance c ontext KeyField, that KeyField  is also  
 // implicitly part of this KeyField âs affordanc e structure. If  there are two  KeyFields in  an affordance context, it  
 // mea ns that the seco nd one is not afforded by the firs t one, therefor e there i s a dual affordan ce structure. The 
 // first key can be a surrogate for the higher level context o f the se cond key. 
<KeyField > 
[version is (latest | exact)] 
 // A v ersioned Context field will automatically have its version fie ld included in the ontology unless 
 // âversion is latestâ is specified  
[value is <RelatedValue >] 
 // A Context key can be set to a speci fic value. Typically th is only happen s when the key is extend ing another 
 // key that  has this Context key. An example is BargainingUnit, which extends Pcode and sets Pcodeâs  
 // Pcod eType co ntext to âBUâ.  
[delete ( restricted  // default 
 | cascades 
 | ignored 
 ) 
] [disable surrogates] [context of <FullFi eldName
>]â¦ 
 // This can be used to disambiguate which field on this business class should be used as the Context field for this KeyField  
[optional] // If one of the Conte xt Keys  is optional, there must be a higher level Context Key specified even  though 
 // the first Context Key implicitly refers to it.  This make s it clear that th is KeyField can b e afforded at both  
 // leve ls and allows for the de lete rule of the higher Context K ey to be specified. This highe r level Context  
 // Key that is not opt ional is the group level k ey; this is the key level at which effecti ve dating is done when 
 // effectiv e date as a group is specified in a Specialization pat tern. 
[data area is <RelatedValue >] // valid only when in a âstored in environmentâ busclass  
[(enable | disable) surrogate context]  
 // enable is the default  

=== PAGE 27 ===
Field Definition   
Configuration Console Reference Guide  | 27  // If a c ontext KeyFi eld has a surrogate, by default this surro gate field is put on th e business class 
 // and a secondar y inde x is created so that this field can  be validated from either th e primary context  
 // or the s urrogate c ontext.  
 // If a K ey Field extends anot her key field the default name of that key field i s the highest level fie ld name in the  
 // exte nds chain. Thi s can be overridden with a âname isâ cl ause. I would like to nuance this situation such that when 
 // a key  field extends another key field but ha s a cont ext value set, then that field should have a default âname isâ of the  
 // key field name  itself.  
[within <RelatedValu e>] 
[<Message >] 
 // valid on a KeyField only; <RelatedValue> mus t be a field  referenced via  a OTM relation that def ines a set of KeyFields  
 // of this KeyFieldâs ty pe. <Message> is a n optional error message. 
 
Stereotype ::= ( Agent 
 | Business Policy 
 | Document 
 | DocumentAc counting 
 | DocumentDistribu tion 
 | DocumentF ulfillment  
 | AccountingTra nsaction  
 ) 
 // Stereoty pes are grouped into two c lasses:  transaction and non -transac tion. The Transaction ster eotypes are  
 // Document, DocumentDistribution, DocumentFulfillment, and AccountingTransaction. 
Patte rns 
[disable Stat icTranslatio ns] 
 // All <Message> definitions will not participate in Translation pr ocesses  
 // There will be no  <Fiel d>Bundle.properties file for the BL or the U I in the resource language packs 
 // Conversion of <LiteralMessage> to resour ce string will still take pla ce 
 
[implements  AccessInitializer] 
initializer is < FieldName > 
 // Val id for Group and Array fields only  
 // FieldName must be a DerivedF ield within this Field  
 
[implements Mutual lyExclusive] 
field determiner is <RelatedField > 
<StateName> field is < FieldNam e>â¦ 
 // valid in a GroupField only. This pattern causes the GroupField to behave as though it is onl y a 
 // single field that has a dynamic type . The single field within the Group Field is determined by th e 
 // defined âfield deter mine râ <RelatedField> which mu st be a s tate field.<StateName> mus t be a defined 
 // state on <RelatedField>. All states on RelatedField must b e specified.  
 // For some u nknown reason MutuallyEx clusive fields get a default delimite r set (see C ompactFormat ). 
 
[implements FieldRange ] 
from is <Fiel dName> 
[exclusive]  
to is <FieldName > 
[exclusive] 
 // This  pattern is valid in a GroupField only. A from value of blank means low- value and a to value of blank 
 // high-value. To must always be greater than from. Inclusive is the default.This designation al lows 
 // the âwithinâ operator and the âoverlapsâ operator to be used wi th this field.  
 
[implements CompactFormat] 
[delimiter is <Literal>] 
[format fields  based on primary form] 
 // This pattern allows a GroupField or an ArrayF ield to be  entered as a single string, each f ield 
 // being delimited by the designated delimite r. An implication of this is that the  delimiter is not 
 // allo wed as a character within any of the me mber or o ccurring fields. Th e default delimiter is a double-hat â^^â. 

=== PAGE 28 ===
Field Definition  
28 | Configuration Console Reference Guide   // The format (order, visibility , and so on)  of the fields can be based on the prim ary form  
 
[implements User DefinedStat es] 
 // This  pattern tre ats this key field as though it has a list of States â only the state  values are not hard-coded 
 // but rathe r defined within the instances of the business class. There ar e two key implications of this: one is that 
 // the number of instances i s expected t o be s mall and the field s hould be treate d just as a hard-coded fie ld 
 // that has states on it is in the UI â that is â it sho uld use a drop-down s elect to  allow the user to choose a 
 // value rath er than a larger select window. 
 
[implements ArrayHierarchy]  
 // This pattern causes an Ar ray KeyFi eld to be treated as a Hie rarchy of Keys  
 // This is valid  only on an Array KeyField a nd currently all Arra y KeyFields must implement this pattern.  
 // Wh en a node in an Array Hier archy i s deleted all su b-nodes will  be de leted as well â it is an i mplicit 
 // delete  cascades. 
 
[implements ParentHierarchy] 
[parent field name  is <Fiel dName>] 
[<ClassicName >] 
[descendants are <RelatedLink >] 
 // Related Link m ust point back to this BusinessClas s and end in a OTM relation 
 // A ParentHi erarchy is a Hiera rchy managed by havin g a âpar ent fieldâ (which is a KeyField referen ce of 
 // this symbolic ke y) put on the business class that thi s symbolic key is define d for. 
 // The parent field name defaults to âParent<KeyField>â. 
 // When  a node in a Parent Hierarch y is deleted all sub-nodes wi ll be deleted as well â it is an implicit 
 // delete cascades.  
 // descendants operator can be optim ized by overrid ding it with âdescendants areâ¦ â - this requires you to  create a âshadowâ 
 // table that flatte ns the structure 
 
[implements Versi oning] 
version field is < FieldName > 
[<ClassicName >] 
 // This pattern cause s the symbolic keyâs bus iness class to be versioned using the designated version field.  
 // The versi on field is often  of type Dat e but can also be other field types, fo r example a Number. 
 // A field of ty pe FieldName will be add ed to the business class and also be put at the bottom of the  
 // primary index. 
 
[implements Speci alization]  
[control valid key values]  
 // When the valid key values are controlled then there must exist a key value at th e non-optio nal 
 // key level before i t can be specialized. If the highest ke y value i s deleted then al l of the specializations  
 // are  also dele ted (delete cascades). Delete restr icted and delete ignored ar e not supported.  
 // If this is not specified then  the key va lues of the specializations are uncontrolled. A ke y valu e can  
 // be added at some specializa tion level without a higher le vel value being present. 
[effective date as a group] 
 // Valid only when EffectiveDated pattern is implemented. 
 // This o ption cause s the set of specializat ions to be effective dated  as a group. 
[set retrie val is inclusive] 
 // Exclusive is the default. Inclusive m eans that the higher level âspecial izationsâ are included as part of the  
 // lower level specializations. An example of this is JobQual ifications. Th e company level qualific ations are  
 // considered to be part of the job -specific qualifications.  
 // If any  Context Key is op tional, the Speci alization pattern can be specified. The specialization  pattern  
 // allows a single r eference to the KeyField to se arch the business class for th e appropr iate business object. 
 // The appropriate business object is the one that is the most âspecializedâ based on what k eys are optional.  
 // The least specialize d object is one where all the optional keys are blank. The m ost specialized object is 
 // one where all the optional keys are f illed in. It searches most specialized to least specialize d. If the optional 
 // keys a re strictly hie rarchically related based on their ontology, the search algorithm blanks optional key 
 // values starting from the lowest optional key and moving toward the highest optional key. If the optional 
 // keys are not hierarchically relate d, the search algorithm will similarly work fro m lowest to highest key, 
 // howe ver it will put values back into the lower keys. For example, given keys k1, k2, k3 with k2 and k3 optional 
 // and not hierarc hically re lated, the search pattern is (k1, k2, k3), (k1, k2, blank), (k1, blank, k3), 
 // (k1, bla nk, blank). 

=== PAGE 29 ===
Field Definition   
Configuration Console Reference Guide  | 29 Display Fie lds 
// valid on key fields only 
<RelatedField > // These are the âdes criptionâ or ânameâ fields for t his key. T hey are the âhumanâ names we give t hings, such 
 // as company name, employee name, and so  on 
Surrogate For  
// valid on key fields only  
<FieldName > value is < RelatedField > 
 
// The Cont ext Fields  section declares a new ânon-ontologicalâ context field. Non -ontological context field s are not required to be in the context. They are also  
// evaluated  newly each time the field  is used. Context rules are not automatically arranged for execution as are Field Rules. The order they are in i s the order 
// in which the y are executed.  
 
// Special considerations for fie ld addr essing, or what does the â.â  operator do when used with a Ke yField, G roupField, or ArrayField. 
// On a KeyField â the â.â operator automatically addresses all the elements on the business class that the KeyField is centered  on. 
 
// If KeyField APCom pany is a subtype of another KeyField  Com pany then in order to addr ess field s on the business class Co mpany from APCompany you 
// say âAPCompany.Company.FieldNameâ 
// Similarly in  order to address fields on  APCompany from Company you say Company.APCompany.FieldNa me. 
 
// On a Gro upField â th e â.â operator or any Fiel d refe rence in a busines s class can reach  through a GroupField or an ArrayField and address a Field 
// on the GroupFie ld if the re ference results  in an unambiguous targe t. If Address is a GroupFi eld that ha s a GroupFie ld called Po stalArea, which in turn 
// contains City,  State, and Zip, the Refer ence Address.City reaches through the GroupField PostalArea to find its target. It also r eaches through an 
// ArrayField. It d oes not reach through KeyF ields to th e KeyFieldâs  business class. If Address is on the busine ss class Vendor, any rule on Vendor can 
// directly address âCityâ and it does reach through both Address and PostalArea to find âCityâ.  
Context Fields  
// These ar e ânon-ontologicalâ contex t varia bles 
<ContextField >â¦ 
 
ContextField ::= 
<FieldName > [<DataDefinition >] 
[[exact] versio n is (<RelatedValue > | latest)]  
[<ContextRule >â¦] 
 
ContextRu le ::= 
<RelatedField > <AssignmentOp > <RelatedValue >  //Assignment Rule  
 
default to <RelatedValue >â¦ // Multiple fields ca n be put on a default. If the first one is blank the second one is used and so on.  
  // Only the last one can be a literal value. 
constraint <Condition > 
<Message> 
 
required 
[<Message >]  // defaults to âField is  requiredâ 
 
if <Parens ><FieldName > <ContextOperator ><Parens> 
<ContextRule > 
[else 
<ContextRule >] 
 

=== PAGE 30 ===
Business Class Definiti on 
30 | Configuration Console Reference Guide  ContextOp erator ::= ( in context 
 | entered  
 ) 
Business Class Definitio n 
// Business Class file s have an extension of .busclass  
 
Business Class Structure :: = 
 
<BusinessClass > is a Business Class 
[deprecated]  
[owned by < ModuleName >] // If not defined, this defaults to the module it is under  
[<ClassicPrefix >]  // Requ ired for use in Cobol prog rams 
[<SqlName >] 
[<RpgName>] 
[<ClassicName >] 
[<DefaultLabel >] 
[framework type is  ( ConfigParam  
 | LPLConfiguration  
 | ProcessFlo w  
 | ReplicationSet  
 | Security)] 
[untranslatab le]  // prevents any text or data from being trans lated 
[subject is < Subject>] // default subject for all actio ns 
[stored in [base] en vironment ] // Store data in the environment database, IJ F framework only  
[stored in product l ine] // Store data in the environment product line database (vs standard data area DB)  
[store using <ClassName >] // Clas sName that i mplements  persistence, IJF framework only  
[contains environmen t data] // Environment data is not copied in daexport, IJF framework only  
[disable data area copy] // Prevent data from bein g copied in daexport, IJF framework only  
[preserve target data] // default is to delete  target data 
[representativ e text is < Message>]// Text that is the human readable form of the key to this business class (replaces Display F ields) 
[representati ve image is (<RelatedValue> | <Icon>)] // Image that represents an instance of this  business class  
[display as  (portrait | photo | full) image] // default is âdisplay as portraitâ  
[missing image is (< ImageName > | random back ground)] 
[foreground te xt is <Message>] 
[(restrict | enable) actions on lists]   // default is âenabl eâ 
[default Alpha filter operator is (contains | starts with | equals )] // default is âcontainsâ  
 
Suppress Warnings  
Ontology  
Patterns  
DataSource Mapping  
Persistent Fields  
Transient Fiel ds 
Dimensions  
Measures  
Cube Links 
Context Fields  
Field Groups 
Audit Index Fields  
Local Fields  
Derived Fields  
Conditions  

=== PAGE 31 ===
Business Class Definition  
Configuration Console Reference Guide  | 31 Text Searc h Fields  
Cube Relations  
Columnar Relations  
Relations  
Form Invokes 
Matrix Forms  
Sets 
Field Rules  
SubType < RelatedCondition > Field Rules  
Commit R ules 
Audit Entry Rules  
Create Rules 
Create Exit Rules  
Update Action Rules  
Delete Ru les 
Attach Ru les 
Parent Attach R ules 
Dynamic Creation Rules  
Rule Blocks  
StateCycles  
Actions 
Suppress Warnings  
( set size  on <SetName> 
| all set size warnings  
)â¦ 
Ontology  
symbolic key is < KeyField >  // can  have multiple symbolic keys; t hese are synonyms  
[name is <Fi eldName>]  // ove rrides the name of the sy mbolic KeyF ield on this class 
[classic set na me is <Literal>] // sets the classic name for the primary set that is ge nerated 
[sql set na me is <Literal >]  // sets the sql nam e for the primary set that is generated  
[not indexed]    // do not create a physical index for the symbolic k ey 
[<SqlName >] 
[<ClassicName >] 
[<ClassicNameForField >] 
[<SqlNameForField >] 
[protected]  // application -controlled field;  cannot be updated from the UI, webser vices, or spreadsheet  
[name for  <context FieldName> is <FieldName >] 
 // <ContextField > must be  a context field within <KeyField>. The context fields within a  KeyField  
 // automatically get put on the business class. The default name is the  highest level typ e name of th e 
 // context field. If APCompany is the c ontext field and APCompany extends Company, the name is Company. 
 // This phrase allows the field name  to be explicitly defined . 
[type for <context  FieldNam e> is a[n] <KeyFie ld>] 
 // This ove rrides the type of the Context Field . The new  type must be a subtype of the original type, ADCompany 
 // ver sus Company. This âsymbol ically key sâ the  business class. A bus iness cla ss can be keyed both symboli cally 
 // and relatively. A  business class that is not symbolically keyed  is considered to be ârelativelyâ keyed.  
 // When a KeyField is defined to be the s ymbolic key to a business class, the Onto logy Context variables 
 // are replicated  on the business c lass. When a KeyField is simpl y used on a busine ss cla ss, the Ontology 
 // Context variables must be resolved within the context of the business class or a com pile error occurs. The  
 // excep tions to this are those Ontology Cont ext variab les that are desig nated as optional. 
 

=== PAGE 32 ===
Business Class Definition  
32 | Configuration Console Reference Guide  part of <BusinessCl ass> 
[connect via UniqueID [only] ] 
 // BusinessClass must NOT implement the LazyUniqu eID pattern to use connect via U niqueID 
[delete ( cascades // default 
 | restri cted 
 | ignored  
 ) 
] 
relative key is < FieldName> [<DataDefinition >] 
[<States >] 
[<SqlName >] 
[classic set name is <Literal >] // sets the classic name fo r the primary set that is g enerated 
[sql set name is < Literal>] // sets the sql name for the primary  set that is generated  
[not indexed ]  // do not create a physical index for the sy mbol ic key 
[<ClassicName>] 
[<ClassicNameForField >] 
[<SqlNameForFiel d>] 
[<DefaultLabel >] 
[protected] // applicat ion-controlled fie ld; cannot be updated from the  UI, webservices, or spr eadsheet 
[(delete cascades | delet e ignored)]  
[[exact] version is (<RelatedValue > | latest)]  
 // This directive specifies the particular ver sion of a vers ioned ke y field to  retriev e. 
 // If the v ersion field on the k ey field is of type Date,  TimeStamp , or Time this will default to the current date,  
 // current timestamp , or current time  otherwise  it will default to the latest version.  
 // If there is no exact match on th e version it will return the  closest version  before the version specified.  
 // If âexact version isâ is specified there must be an exact match on the version. 
 // If âlatestâ version is specifie d, it will find the last versio n even if that is a future v ersion. 
[data area is <RelatedValue >] // valid only wh en in a âstored in environmentâ busclass  
[name for <context  FieldName > is <FieldNam e>] 
 // <Cont extField> must be a field in the context field chain of <BusinessCla ss>. The context field chain of 
 // <BusinessClass> automatically gets put on this business class. The default name is the highest level type n ame of the  
 // context field. I f APCompany is  the context f ield and APCompany extends Company, the name is Company.  
 // This phrase allows the f ield name to be explicitly defined. 
[type for  <context FieldName > is a[n] <KeyField >] 
 // This  overrides the typ e of the Context Field . See above definition with symbolic key for full description  
[text searchable] 
 // Only one relative key is  allowed. This keys the business class relative to another business class.  
 // The âre lative keyâ construct will automatically  put the <BusinessClass> Sy mbolicKey  
 // field,  includ ing its Ontological Context fie lds, on this business class unless connect vi a UniqueID only 
 // is specified. It also automatically puts a one- to-one or one- to-many relation on <Busine ssClass> pointing back 
 // to this busin ess c lass. It names that r elatio n â<this business class>SetRelâ. I f <BusinessClass> is itself 
 // relatively  keyed, a one- to-one required relation will be put on this business class. It names that relation  
 // â<Business Class>Relâ.  
 // The âpartsâ of <Busi nessC lass> can be accessed from <BusinessClass> by specifying â <this business class> setâ in  
 // a <RelatedL ink>  
 // The <BusinessClass> can be accessed from <this business class> by specifying â<BusinessClass>â in a 
 // <RelatedLink> 
Patterns  
[disable Aud iting]  // By default non -âClass icâ Business Classe s implement the Auditing pattern  
  // BinaryDocuments and BinaryObjects do not participate in this pattern 
 
[implements Ligh tweightAuditing] // Initial cre ate does not c reate the log; it is insta ntiated on the first update or delete 
 
[disable AuditIndex]  // By default an AuditIndex (the âsnapshotâ table ) is creat ed when a Busine ssClass is Audited and  
  // AsOf DateProcessing is not disabled. The AuditIndex optimizes as of date queries at the expense of 
  //  crea tes and updates. 
 

=== PAGE 33 ===
Business Class Definition  
Configuration Console Reference Guide  | 33 [implements EffectiveDated ] 
[bypass i ntegrity rules] 
 
[disable EffectiveDated]  // By default non- âClassicâ Busin ess Classes implement the EffectiveDated pattern 
  // Also by default BinaryDocument and BinaryObject  fields do not par ticipate in this pattern . They can 
  // be made to participate  in this pattern by specifying âenable EffectiveD atedâ on the fi eld definition  
 
[implements AuditLogEntryActions]  // force AuditLogEntry record create for  actions (overri des co nfig param) 
 
[implements O nceUsedNeverDelete ] 
 
[implements DeleteFlag]  // Valid only for business classes  that specify âstore u singâ 
 
[disable RetroactiveEffec tiveDating]  
 
[disable UniqueID ] 
 
[disable AsOfDateProcessi ng] 
 
[disable Dat aTranslations]  // This  disables all data translation  for this business class.  
 
[disable St aticTranslations] // All <Message> de finitions will not par ticipate in Translation pr ocesses 
  // There will b e no <BusinessC lass>Bundle.properties file for  the BL or the  UI in the reso urce language 
  // packs. Co nvers tion of <Liter alMessage> to re source string will still take place  
 
[implements HistoryCorrection] // Allows past audit log ent ries to be adjusted  
 
[implements FutureCorrection ] // Allows future entries to  be adjus ted 
 
[implements ForceUIRefreshOnStale] 
 
[implements IncrementalReplicati on] // if no indicator field is specified the n must have a change s tamp me aning 
[indicator field  is <FullFieldName >]â¦ //    that it must be  audi ted or implemen ts UpdateStamp  
replicate when  <Value> 
then (set to < Value> | invoke <A ctionName > [<FullStateName >]) 
 // CRITICAL NO TE - If the  indicator field  is included in an index, and the indicator field value is changed on a record during a 
 //  replication, it is possible to pick up the record twice due to the notion of laying tracks .  
 // There are ways to mitigate this . 
   
[disable Incr ementalReplication] // disables IncrementalRepli cation if implemen ted at the Produc t Line le vel 
 
[implements InlineUserFields ] // Puts user field values dir ectly on the busin ess cla ss in a VarChar fie ld 
size is <Number>  // Must def ine h ow big the field is that contains all the user field valu es 
  // Field wil l contain  user field name plus actual value 
 
[implements  StaticJava]  // This pattern generates a StaticJava DB interface c lass 
[has attachments ] // Generates <BusClass>_URL and <BusClass_Comment tables  
 
[implements InMemo ryCache]  // This p attern stores and retrieve s business class instances from an in -memory cache. 
  // The c ache is valid only w ithin a process and records can only be retrieved through the KeyField. 
 
[implemen ts WorkFile]  // This causes the business class to b e treated as a WorkFile  
 
[implements ForeignTable]  // This pattern by default implements the ReadOnly pattern and the Lazy Uniq ueId pattern 
[allow up dates] 
 
[implements ReadOnly]  // The ReadOnly pattern can be inhibited by spe cifying âallow updatesâ  
 
[implements LazyUniqueID]  // All bu siness cla sses automatically get a UniqueId put o n them to support the a bility to address any  
  // LPL based business class  direc tly through a UniqueId. If the busi ness class is not created through 

=== PAGE 34 ===
Business Class Definition  
34 | Configuration Console Reference Guide    // the IJF runtime but is rather an 8.1 or third party database ta ble then it needs to implement 
  // this patter n. This pattern  will generate an outboard file and the appropriate  logic  in the business 
  // class to allo w the IJF runt ime to access th e outboard table via a UniqueId.  
 
[implements S3ClassicTable] // This pattern by default implements the Rea dOnl y patter n and the LazyU niqueId pattern  
[allow u pdates]  // The ReadOnly pattern can be inhibited by specifying âallow updatesâ  
[implements Unique ID] // By default UniqueID is disabled and LazyUniqueId is enabled  
[has attachments]  // Comment type attach ments are ac cessed thr ough a Text field name <Attac hmentField> 
[<attachment  FieldName > is comment of type <Literal >â¦] 
  // All comments  of a particular comment type are concatenated into a single Text  field.  
  // Also disable s Auditing and Eff ectiveD ated 
 
[implements S 3ClassicAttachments] 
[<attachment  FieldName > is comment of type < Literal>â¦] 
 
[implements M3ClassicTable] 
[allow updates]   // This patte rn by default imp lements the ReadOnly pattern and the LazyUniqueId patte rn 
  // The ReadOnly pattern can be inhibited  by speci fying âallow updatesâ 
  // Also disable s Audting and Effe ctiveDated  
 
[implements Re sequence on <Fiel dName>] 
new sequence field is < FieldName> 
set is < SetName> 
  // âFieldNameâ  must be numeric. Resequence field and new sequence field must be different fields.  
  // SetName must contai n the Resequence field . Whene ver the new sequen ce field is entered with a  
  // diffe rent value from the resequence fiel d the reco rd will be moved to  the new sequence field posit ion 
  // and then the whole set as defined b y SetName will be resequenced  
  // Typi cally ne w sequence field would be a Transie nt Field 
  // This pattern  will also automatically generate an autosequence rule i f the sequence fiel d as long as 
  // it does not alr eady have an autosequence rule manually defined  
  // When doing mass import using an update actio n the new sequence field can be set to -1 to prevent 
  // rese quen cing, which will significantly improve pe rformance 
 
[implemen ts DynamicCreation] // Cause s an object to be created automatic ally if it does not exist when another business object  
  // âattac hesâ to  it or if an Updat e type action is called. T he cr eation  can be constrained or special 
  // action can be take n upon dynami c creati on by putting rule s in the Dynamic Creation Rules sec tion. 
 
[implements AnalyticCube] 
[label is < Message>)] // if not blank, this will be used as the cube name caption  
[columnar only]  
[(pre-calculate totals | dynamica lly calculate to tals)] // def ault is â pre-calculate totalsâ  
[(allow write to summary level | write to base level only)] 
   // default is âal low write to summary levelâ  
[refresh using (a udit log | messa ge queue)] // default is audit log unless auditing is dis abled 
[beginning balance is period z ero] // period operators will use period zero for beginning balance  
  // the default is  to calculat e the beginning balance as the sum of all the prior periods  
  // this requires the design er to expl icitly place the begin ning balance in period zer o 
[Instance Select ion] 
where <Condition > // limits what fact rows a re put in the cube  
 
// A ChildHier archy is a Hierarchy defined by its  children . It can have multiple pare nts, which m eans that the hier archy operators parent, siblings, 
// ancestors, and ascendant are not v alid. When used as a Di mension âchild set  isâ¦â is required and âtop node whenâ¦â is h ighly recommended. 
[implements ChildHierarchy]  
[top node when <SimpleCondition >] 
[leaf node when < SimpleCondition >] 
( children are <RelatedLink > 
| child set is <RelatedLink >   // required if this KeyField is used in a Dimension  
child is <KeyField >   // must be a KeyField to th is busines s class 
[aggregation percent is < FullFieldName >] // must be a P ercent field 
) // The â children areâ Related Link must point back to this sa me business class and end i n a OTM relation  
 // The âchild set isâ Relate dLink must point to the intermediate business class that determ ines the chi ldren 
 // The âchild isâ KeyF ield must then point back to this b usiness class  

=== PAGE 35 ===
Business Class Definition  
Configuration Console Reference Guide  | 35 [descendants are < RelatedLink >]  // similar to  âchildren areâ but for all descen dants 
 
[implements CreateStamp] 
[implements  UpdateSta mp] 
 
[implements Proxy for <R elatedLink >] // must be OTO  relation or KeyFi eld 
[Addition al Field Ma pping] 
related.< FullFieldNam e> = <RelatedValu e>â¦ 
 
[implements Compou ndDocument]   // must have at leas t one RelatedLin k 
Document Components  
<RelatedLink>â¦ 
 
[implements BODId] 
 
[implements Encry pted] 
[when <Condition>] // can reference only mutable non- related fields 
 
[implements ContextualParent] // extends Context search to ontological parent business cl ass 
 
[implements SurrogateAuditLog for <FullFieldName >] 
  // causes the audit log of this  business clas s to really be t he audit log of Fu llFieldNa me 
  // FullField Name must be a Tex t field that contains a seriali zed DataV iew 
  // This is curre ntly only being used for environme nt business classes  
 
[implements Template Driven by <BusinessC lass>] 
[completion  message is  <Message>] // <Mes sage> can contain text only  
[( create all instanc es  // âcreate all insta ncesâ is t he default 
 | create instance 
when <Condition > 
 )    // can reference on ly mutable non- related fields 
] // For ex ample, A nswer is a part of Response and extends Question. Answer is desig nated as being TemplateDriven by.  
 // Que stion. Question is a tem plate for adding, updating and deleting corresponding Answer ins tances. An Answer instance.  
 // cannot be cr eated with out a corresponding Question instance. 
 // This pattern works w ith a <Template> definition within a <NavigationDef inition> or a <PanelDefi nition> 
 // If cr eate all ins tances is specified,  an Answer inst ance will be created for every Question in the template list..  
 // If the create is conditional, an Answer instance wi ll be cre ated only if the condition evaluates to t rue. If the condition. 
 // is false any e xisting corresponding Answer ins tance will be d eleted.  
 
[implements <DataSourceType > DataSource] 
 // This pattern defines an alternate data source to satisfy the business class cont ract. This  means the C RUD  pattern  
 // and additional ac tions are realiz ed by an ex ternal data sourc e. 
 
[implements ExtendsExternalData ] 
[using <ClassName >] // ClassName is a JavaClass that provides access to the external data  
 // This pattern allo ws for the extens ion of an ext ernal data source. Wi th this patte rn external data is viewed as a business 
 // class and the use r is able  to logically add to or change that data. The actual underlying data is not changed. The 
 // unde rlying data might be a property file on dis k or some othe r flat file form at. 
DataSource  Mapping  
<DataSourceCRUDType > is <DataSourceAction > 
<InvokeRul e> 
 
DataSourceType :: = ( MI // MI uses  a .mi inter face definition to ful fill the contract  
 | WSI // WSI uses a .wsi interface definition to  fulfill the contract  
 ) 

=== PAGE 36 ===
Business Class Definition  
36 | Configuration Console Reference Guide   
DataSourceCRU DType ::=   ( set 
  | find 
  | create 
  | update  
  | delete  
  ) 
 
DataSourceAction ::= <WebserviceInterface >.<ActionName > 
Persistent Fie lds 
<FieldName > [<DataDefinition >] 
[<States >] 
[<SqlName> | <SqlPrefix >] 
[<ClassicN ame>] 
[<ClassicNameFor Field>] 
[<DefaultLabel >] 
[encrypt]  // causes the field to  be encryp ted in the database; valid on Alpha fields only  
[automate context] // if the field is a K eyField this will ensure that all context variables are placed on this bus class  
[enable alternate document locati on] // valid  for BinaryDocument, BinaryObje ct, CSVTex t, JSONObject,  
[document  is <RelatedField >] //     RichText, Text, Text Document , and XMLDocum ent fields  only 
[existence is < RelatedField >] // Must be a Boolean type field  
[allow images]   // valid for RichText  fields only 
[text se archable]  // mea ns thi s field will be search text indexed by the database  
[scannable]  
[holds pi i] 
[translatable]   // allows for da ta translati on for this field  
[disable Auditing [when in background]]  // Field will not be audited  
[disable EffectiveDated]  // Field will not part icipate in EffectiveDa ted pattern 
[enable EffectiveDated]  // Field will participate in Effe ctiveDated pattern  (valid on BinaryDocument and BinaryObject only)  
[restricted]   // cannot be used as field on UI  
[protected]   // appli cation -contr olled field; cannot be  updated from the UI, webservices, or spreadsheet  
[precision is < RelatedValue >] 
[round to precision] 
[primitive type is < RelatedValue >]// must be of type âPrimitiveT ypeâ; ca nnot be Tex t or BinaryDocument/Im age 
[primitive size is <RelatedValue >] 
[primitive decimal size is < RelatedValue >] 
[create value is b lank if no entry]  
 // If a field is added after  a recor d is create d, typically  the firs t value in the audit log applies as the value from  
 // the point of create. With this pattern, the value from create will be considered blank 
[disable su rrogates] 
[context of <FullFieldName>]â¦ 
 // This c an be used to disambiguate which field on this business class should be used as  the Context field  for this K eyField  
[(delete cascades | delete ignored)]  
 // <FieldName> m ust be  a KeyFiel d. The default delete r ule for a KeyField is del ete res tricted  
 // Use  of a KeyF ield will cause an OTM back relation to be automaticall y genera ted 
[as of <RelatedValue >] 
 // <FieldName> must be a KeyField, <RelatedVa lue> m ust be a TimeStamp or a Date  
 // this directive  will retrieve the busi ness c lass that this keyfield points to âas ofâ the specified date and ti me 
 // an implication of this is th at the one- to-many r elation  from the keyfieldâ s business class back to this  
 // business c lass wi ll be âde lete ignoredâ. If < RelatedV alue> is a Date  then the last entry on that date will be retrieved.  
[within <RelatedValue >] 
[<Message >] 
 // valid on a KeyF ield only ; <Rel atedValue> must be a fi eld reference via an  OTM  relatio n that defines a set of K eyFields  
 // of this KeyFieldâs type. <Message> is an optional error m essage.  
[[exact] version is (<RelatedValue > | latest)] 

=== PAGE 37 ===
Business Class Definition  
Configuration Console Reference Guide  | 37  // This directiv e specifies the par ticular v ersion of a ver sioned key f ield to retriev e. If the version field on the 
 // key field is of type Date, Tim eStamp o r Time  this will default to the current date, current t imestamp or current time  
 // otherwise it w ill default to the latest v ersion. If  there  is no exact match on the v ersion it will return  the closest version  
 // prior to the version specified.If âexact version  isâ is specified then there must be an exact match on the version. 
 // if âlatestâ version  is sp ecified th en it will always find  the last version eve n if that is  a future v ersion. 
[data area is <RelatedValue >] 
 // valid o nly when in a âstored in environmentâ busclass 
[is (cond ition | related (link | value)) for < RelatedValue >] 
[(dimensions  [with attr ibutes] | measures) only] // RelatedValue must be a BusinessClass name  
[<TextVariables >] 
 // Text variab les can be defined  for any Alpha type field. This  allows th e user who is entering data in this  
 // field to  put in variable su bstitutio n syntax tha t references these defined variable names. The syntax to 
 // use a text v ariable is â{TextVariable}â. Notice t he curl y braces s pecial synt ax that 
 // surr ound s the Text Variable name. TextVariables can be one- to-many valued. If the va riable s tarts at 
 // the beginning of a line and ends with a ne w line character then it will be copied down â each OTM being a new line. 
 // If not then it will act as though it is in paragraph mode. 
 // A value d oes not have to be ascribe d to a TextVariable  definition. This will mean that no substitution ever 
 // takes place. This is useful when def ining text fields that are used as te mplates  for other  text field s. The only 
 // issu e is that the designer needs to make sure t he vari able nam e match on both the tem plate and the tar get. 
 // If a text variable uses a C ontext Field in its RelatedLink then the value of the Context Field must be speci fied 
 // as such â{TextVariable:<Cont extFieldValue> }â 
[document template for <BusinessClas s>] 
 // This field must be of the type âBinaryDocumentâ. A document template is a ârtfâ  file with standard  
 // Word Doc repl acement  variables which must be of LPL syntax. When the âdocumentâ TypeOperator is used  
 // on thi s field the ârtfâ is  sent through a variable replacement transformation resulting in another ârtfâ file  
 // that can be assigned to a BinaryDocument field. This allo ws for Word Documents to be generated within LPL.  
[store as BusinessObjec tReference ] // valid  on a KeyField only 
[<SqlPrefix >] 
 // This is required when trying to assign thi s value from an asynchronous operation. LawsonClassi cTransactions 
 // are  an example of an as ynchronous operation. When creating a new r ecord via  an asynchronous operat ion 
 // only the Bu sinessObjectReference of the record is i mmed iately available and thus only th at aspect of the 
 // keyfield can ac tually b e stored. A BusinessO bjectReference i s internally a  GroupField and may have sql  
 // naming co nflicts. The âsql prefixâ  state ment can be  used to overcome any naming conflict. 
[Valid Business Classes ]  // valid on a BusinessObjectReference only  
<BusinessClass >â¦ 
 
<FieldName> is a snapsho t of <RelatedField > 
[when <Condition >] 
 // sna pshot sets and keeps this field the same as R elatedField only when this business object is being updated. 
 // This can optionally be done based on a Condition  
 
(<FieldName > | <FieldGroupName >) from <Bu sinessClass > 
 
(audit fields | <ActionAttribute >â¦) // valid only  when Auditing and Effe ctiveD ated are disabled  
 
TextVariables  ::= 
Text Variables [< Parens>locale of < RelatedValu e><Parens>] // RelatedValue must b e an IsoLoc ale 
<TextVariable> [v alue is < RelatedValue >]â¦ 
 // A TextVari able can be placed in a Text field surrounded by curly braces as such, {<TextVari able>}. When the  
 // TypeOperator text  is use d on thi s field,  the TextVar iable w ill be re placed i n the Text f ield with the designated  
 // Rel atedValue. RelatedValues can be directly used for variable replacemen t by pre fixing the  related va lue with  
 // lpl: , making the syntax {lpl:<RelatedVa lue>} . This allows  for Use rFields and other  dynam ic LPL constr ucts 
 // to be used at runtime without havin g to have a TextVariable. 
 
AggregateOp ::= ( aggregate  
 | instance co unt 
 ) 
 // The aggregate operator can be used only in a bus iness class that is an  aggregate of the  
 // an aggregated <Busine ssClass>. If the op erator instance count is used, .<FullFie ldNa me> cannot be 
 / /specified.If th e operator aggregate is used, .<FullF ieldNam e> must be specified and must be a fi eld in the  
 // aggregated <BusinessClass> that is capabl e of b eing aggregated. It  must be some form of numeric field.  
 // It can be a group field with non-aggregatable fields in it if there is at least one aggre gatable field.  

=== PAGE 38 ===
Business Class Definition  
38 | Configuration Console Reference Guide  Transient Fiel ds 
// Mutable but not persiste nt 
<FieldName > [<DataDefinition>] 
[<States >] 
[<DefaultLabel >] 
[scannable]  
[holds p ii] 
[precisio n is <RelatedValue >] 
[round to precision ] 
[primitive typ e is <RelatedValue >]// Must be of type âPrimitiveTypeâ; ca nnot be Text or B inaryDocument/Image  
[primitive size is <R elatedValue >] 
[primitive decimal size is <RelatedValue>] 
[as of <RelatedValue >] 
[within <RelatedValue >] 
[<Message >] 
[disable surrogates ] 
[[exact] version is (<RelatedValue> | latest)] 
[data area is <RelatedValue >]  // valid o nly when in a âstored  in environmentâ busclass  
[is (condition | related (link | value))  for <RelatedValue >] 
[(dimensions  [with attributes ] | measures) only] // RelatedValue must be a BusinessClass name  
[<TextVariables >] 
[document template for < BusinessClas s>] 
[store as BusinessObjectReference] // valid on a KeyField only  
[derive value fr om <RelatedValue >] // value when field is not entered  
Dimensions  
<RelatedField > // must be a KeyField or  a StateField  or designated as a âperiodâ- ca n be only a one- to-one related field  
[dimension  name is < Literal>] // default is business class prefix plus field name  
  // if the d efault exceeds the n ame limit of 50 characters, yo u must specify a name 
[label is <Message>)] // if not b lank, this will be used as the cube dimension name caption  
[suppress dimension when <SimpleCondition >] 
[caption  is (representati ve text | < Message>)] // default text to display in cube; defaul ts to representative te xt 
[default total node is < RelatedField >] // If a default total n ode is not specified , an All node , which  aggregate s all the 
   // dimension values, is generat ed and used when no dimension value  is sp ecifie d. 
[top node is <RelatedField >]  // top or âstartâ node when dimen sion is parent or chi ld hierarchy 
[disable hierarchy ag gregation]  // by default all hierarchy dimensions will agg regate based on the hierarchy  
[is a <PeriodType > period dimension [ with year of <FullFieldName >]] 
 // daily periods only roll up in to months based on a Gregorian calendar 
 // if the  RelatedField is a  date then it must b e a daily perio d dimension and does not need a year designation 
 // âwith yearâ¦â is req uired on all non date-based periods 
[current y ear is <RelatedField >] 
[current period is <R elatedField >] 
[current date is < RelatedField >] // valid on a date-based period only; if no cu rrent perio d is defin ed, 
   // the current period wil l be dete rmined based on the âas ofâ date 
[period set is <RelatedField >] // valid on a date-based period only 
 
// The follo wing sp ecificatio ns are required for PeriodOperators to w ork wi th the âvariableâ PeriodType 
// Con dition and FullFieldName below are in the cont ext of the dimen sion business class  
[default label is <Message>] // period label  
[current date period is < FullFieldName >] // period key field that corr esponds to the current date  
[year when <C ondition >]  // true when period is a year  
[quarter when < Condition>] // true when period is a quarter  
[month when <Condition>]  // true when period is a month  
[week wh en <Conditio n>]  // true when period is a week  

=== PAGE 39 ===
Business Class Definition  
Configuration Console Reference Guide  | 39 [day when < Condition>]  // true when pe riod is a day 
[start date is <FullFieldName >] // Date field that retu rns peri od start date 
[end date is <FullFieldName >] // Date field that return s per iod end date 
[parent period is <FullFieldName >] // period k ey field for parent period  
[next period is < FullFieldName >] // period key fi eld for next period  
[previous period is < FullFieldName >] // per iod k ey field for previous period  
[beginning b alance is <FullFieldName >] // per iod key field for ltd beginning balance  
[ending balance is < FullFieldName >] // period key field  for ltd ending balance  
[beginning ytd balance is <FullFieldName >] // period key field for ytd beginning balance  
[ending ytd balance is  <FullFieldName >] // period key fi eld for  ytd ending bala nce 
 
[valid for measu re <FullFieldName >]â¦ 
[(allow write to summ ary leve l | write to b ase leve l only)] 
  // default is âallow write to summary levelâ unless changed at the Anal yticC ube level  
[Instanc e Selection] 
where <Condition > // Valid when RelatedField  is a Ke yField  or a one- to-one rel ated field. The  Condition is 
  // defined in the context of the KeyField / OT O Business Class.  
[Attributes] 
[child.]< FullFiel dName>â¦ // Ful lFieldName is a field in the KeyFieldâs Busin essC lass. If the K eyField  is a ChildHierar chy 
  // then fields  in the child set BusinessClass can also be re ferenced using the â childâ data link.  
 
[Hierarchies]  
<HierarchyNam e> // gen erates a rollup hierarchy using the spec ified attributes 
[base level (hidden | included)] // default is included  
[description is < Message>] // defaults  to Hierar chyN ame 
Attributes 
[child.] <FullFieldName >â¦ // must be a declared Attribute  
 
PeriodType  ::= ( monthly 
 | weekly 
 | daily 
 | variable 
 ) 
Measure Based Dimensions  
// A Measure Based Dim ensio n is not an existing field value but ra ther tak es on  a value based on each measure. Each measu re must specify the value for this field.  
<FieldName> [<DataDefinition >]  // must be a KeyField o r a StateField  
[dimension name is < Literal>]  // default is business class  prefix plus field name  
   // if the  default exceeds  the name lim it of 50 char acters, you mus t specify  a name 
[label is <Message>)]  // if not blank, this  will be used as the cube dimens ion name caption  
[caption is (r epresentat ive text | < Message>)] // default text to display  in cube; defaults to re presentative te xt 
[default total node is <RelatedFie ld>] // If a  default total node is not specified, an All node , which aggregates all the  
   // dime nsion values, is generated and used when no dim ension value is specifie d 
[Instance  Selection] 
where <Condition> // Valid when RelatedField is a  KeyField or a one- to-one relate d field. 
  // The Condition is defin ed in th e context of  the KeyField / OTO BusinessClass.  
[Attributes] 
[child.]< FullFieldName >â¦ // Ful lFieldNa me is a field in the KeyFieldâs Busi nessClass.  If the Ke yField is a ChildHier archy, 
  // then fields  in the child se t Busi nessClass ca n also be referenced using the âchi ldâ data link. 
[is aggregatable]  // generates a rollup hierarchy over this attribute in  the cube 
 
[Hierarchies] 
<HierarchyName >  // generates a r ollup hiera rchy using t he spe cified attributes  
[base level (hidden | included)] // default is included  
[description is <Message>] // defau lts to Hier archyName 

=== PAGE 40 ===
Business Class Definition  
40 | Configuration Console Reference Guide  Attributes  
[child.]< FullFiel dName>â¦ // must be a declare d Attr ibute, then fields in the child set BusinessClass  
   // can also be referenced using the âchildâ data link. 
Measures  
<FullFieldName >  // must be a Persiste nt or Derived field that is num eric 
[measure name is <Literal>] // default is busine ss class prefix plus field name; default max is 50, otherwise specify a name  
[calculate  dynamically]  // valid only when measure is a ComputeFie ld 
[<DimensionField > value is <RelatedValue >] 
  // DimensionField must be a Me asure  Based Dimension 
  // When using a Meas ure Based Dimension, measure names can be duplicated  
[cube rule is <Mess age>] // FullFieldNam e must b e a NativeFi eld 
[Dimension Based Measures] 
<FieldName >â¦ 
[<DefaultLa bel>] 
Dimensio n Values 
<DimensionField > value is < RelatedValue >â¦ 
Cube Links  
// Link to another Busin essClassâs cube that automatically e xtend s this cubeâs measures to include all the measures o f the linked cube 
<CubeLinkName > 
link to < BusinessClass > // BusinessClass must have a cube def ined 
[Dimension Mapping]  
related.< DimensionField> = (<Dimension Field> | top node)â¦ 
Context Fields  
<ContextField >â¦ 
[<DefaultLabel >] 
[is (condition | related (link |  value)) for < RelatedValue >] 
[(dimensions  [with attributes] | measures) only ] // RelatedValue must be a Busines sClass name 
Field Groups  
// Arbitrary grouping of fields within this bus iness  class 
<FieldGroupName > 
[include [( persisten t | auditable | derived)] us er fields] 
<FullFieldName >â¦ 
Audit Ind ex Fields  
// List of fields to add to audit index (sna pshot ta ble) by default all fields in Sets are put in the audit index 

=== PAGE 41 ===
Business Class Definition  
Configuration Console Reference Guide  | 41 <FullFieldName >â¦ 
Local Fields  
<FieldName > [( <DataDefinition > 
 | is a <BusinessClass > view 
 )] 
[<DefaultLabel >] 
[value is <RelatedField >] 
[<States >] 
[holds pii]  
[precisio n is <RelatedValue >] 
[round to precision] 
[as of <RelatedValue >] 
[disable surrogates]  
[[exact] version is (<RelatedValue > | latest)] 
[data area  is <RelatedValue >]  // valid only when  in a âsto red in environment â busclass 
[is (conditi on | related (link | value)) for < RelatedValue >] 
[(dimensions  [with attributes ] | measures) only] // RelatedValue must be a BusinessClass name  
[<TextVariables >] 
[document template for <BusinessClass >] 
[store as BusinessObjectReference] // valid on a K eyField only 
[do not save in checkpoint ] 
Derived Fields  
<FieldName > is a[n] <DerivedFiel dType> 
[type (<DataDefinition > | is a[n] < BusinessClass > view | is MessageField) ] 
[precision is <RelatedValue >] 
 // type is not r equired for all der ived fields.  On some  derived fields , such as Compute, the type defaults from the 
 // fields in  the compute state ment.  
[is (con dition | related (link | value)) for < RelatedValue >] 
 // RelatedValue must be  a BusinessClass na me 
[<SqlName>] 
[<ClassicName >] 
[<DefaultLabel >] 
[restricted]  // cannot be used as field on UI  
[holds pii]  
(<DerivedFieldE xpression> | <optionally blank for NativeField and InstanceCount >) 
 
DerivedFieldType ::=  ( aggregation of  <FullFieldName > 
 | ConditionalFiel d 
 | ComputeField 
 | MeasureField 
 | Instanc eCount 
 | StringField  
 | MessageField 
 | LabelFi eld 
 | DerivedFi eld) 
 
DerivedFieldE xpression  ::= 
aggregation of  

=== PAGE 42 ===
Business Class Definition  
42 | Configuration Console Reference Guide  when <Conditio n> // useful for cube measures - r eturns FullFieldName value or 0 on instance depending on condition  
Conditional Field  
<ConditionalFieldControl > 
ComputeFiel d 
<Parens><RelatedValue> [< MathOperato r> <RelatedValue >]<Parens>â¦ 
MeasureField  
<Parens><MeasureValue > [<MathOperator> <MeasureValue >]<Parens>â¦ 
InstanceCount  
[where < Condition >] // useful for cube m easures - returns 1 or 0 on instance depending on condition  
StringField  
<RelatedValue > <RelatedValue> <RelatedValue >â¦ 
MessageField  
<Message>  // language translat able string that is treated  as a Message (l owercase) 
LabelField  
<Message>  // language translata ble stri ng that is trea ted as a Label (upper and lowercase)  
DerivedField  
(<Rule> | return [< RelatedValue >])â¦ 
 
MeasureValue ::= ((sum | avg | min | max) <RelatedField > | instance  count) 
 
Condition ::= < Parens><ConditionNode ><Parens> 
 [<Conjunctio n> <Parens><ConditionNode>< Parens>â¦] 
 
ConditionalFieldContro l ::=  
if <Condition > 
(<RelatedValue > | <ConditionalFieldControl >)â¦ 
[else] 
(<RelatedValue > | <ConditionalFieldControl >)â¦ 
 
MathOperator ::= ( + // You can use the â+â oper ator to concatenate Alpha type fields  
 | -  // You can use the â- â operator t o remove strin gs from Alpha type fields  
 | * 
 | / 
 | ^ 
 | % 
 ) 
Conditions  
<ConditionName > 
[<SqlName>] 
[<ClassicName >] 
[<DefaultLabel >] 
[restricted] // cannot be used as field on UI  
when <Condition> 
 
Conjunction  ::= ( and 
 | or 
 ) 
 
ConditionNode  ::= ( <ActorCondition > 
 | <ChangedCondition > 
 | <ComparisonConditio n> 
 | <FieldCondition > 

=== PAGE 43 ===
Business Class Definition  
Configuration Console Reference Guide  | 43  | <FieldWasCondition > 
 | <IsABusClassCondition > 
 | <RelatedCondition > 
 | <RelationCondition > 
 | <WithinBusClassGroupCondition > 
 ) 
 
ActorCondition ::= [authenticated] actor (has rol e | in group) <Text > 
 // Text is eith er a role name o r an actor group name 
 
ChangedCondition  ::= (<RelatedLin k> | <RelatedField > | [<RelatedLink >].<FieldGroup Name>) 
  changed between <RelatedValue > and <RelatedValue > 
 // âchanged betweenâ RelatedValues must be Date or  TimeStamp 
 
ComparisonCondition  ::= <Related Value> <ConditionOperator > <RelatedValue> 
 
FieldCondit ion ::= [<FieldOperator>](< RelatedField> | < FieldGroupName >) 
  ( entered   // not yet implemented  with <FieldGroupName>  
  | is numeric  // not yet implemented with <Fi eldGroupName>  
  | is high value 
  | changed 
  | in context  // not yet implemented with <F ieldGr oupName> 
  | is leap year 
  | is last day  in month 
  | has audit change // valid only in conte xt of an audit entry  
  ) 
 // You cannot use a <RelatedField> with âchangedâ a nd âin context â. These ca n take a <FullFieldName>. 
 
FieldWasCondition  ::= <FullFieldName > was [always] <RelatedValu e> 
  [between <RelatedValue > and <RelatedValue >] 
 // between RelatedValues must b e Date o r TimeStamp 
 
IsABusClassCondition ::= <RelatedField > is a[n] <BusinessClass > 
 
RelationCon dition ::= [(first | no [t])] <RelatedLink > (exists  | pending | has future changes)  
 //â pendingâ is valid only with a BusinessObjectR eference field or a  KeyField that is designated as 
 // âsto re as BusinessObjectReferenceâ.  It returns t rue if the  reference is filled out but the record  
 // does not actual ly exi st yet. Curren tly this ca n happen only when using the asynchronous AGS or other 
 // async third p arty inte rface.  
 // âhas future c hangesâ returns true if there are futu re effective dated changes from th e current as of date 
 
ConditionOperator ::=   ( = 
  | != 
  | >= 
  | <= 
  | > 
  | < 
  | !> 
  | !< 
  | like 
  | contains 
  | [not] with in 
  | [not] overla ps 
  | [not] matches 
  ) 
 // The like operator is similar to the â=â op erator excep t that it w ill do wild -card searching 
 // The contains operator will do a te xt sear ch on the f ield; i t is valid only if the  field is text searchable  
 // The within operator i s valid with array key fields that implement the Hierarchy pattern  
 //       It ev aluates to true when the left operandâs occurring fields match up to the non-blank right 
 //       operandâs occurring fields. If the left operand has {5,3,9,10,20} as its oc curring values it will match  

=== PAGE 44 ===
Business Class Definition  
44 | Configuration Console Reference Guide   //       the following right operands: {5,,,,}, {5,3,,,},{5,3,9,,}, {5,3,9,10,}, {5,3,9,10,20}. The concept is that 
 //       the left operand is âwi thinâ the right operandâs hierarchical structure. 
 // The within operator is valid wi th a group field t hat im plements the FieldRange pattern as the ri ght operands.  
 // The within operator is valid with TimeStamp, Date, Period (month) , Year, and month and week operators 
 //      on both sides as long as the the left operand has more specifi city than the righ t operand.  
 //      So (<TimeStamp> within <Date>) is valid b ut (<Date> within <TimeStamp>) is not. 
 // The overlaps operator is valid only with two  group fields that implement the FieldRange pattern  
 // The m atches oper ator treats the right side operand as a r egular expression to determine i f the le ft side ope rand 
 //       completely matches the pattern on the right. The java doc for java.util.regex.Pat tern contains some  
 //       document ation  for a number o f the vario us regular expression strings. Anot her resources is  
 //       âMastering  Regular Expressions, 2nd Edition,â Jeffrey E.F. Friedl, OâReilly and Assoc iates, 2 002. 
 
WithinBusClassGroupCondition ::= <RelatedLink> [not] within <RelatedField > 
 // RelatedField must be a B usinessClassGroup or an LPL Text fiel d that is a condition 
Text Search F ields 
// Fields to use in a Text Search f or this Business Class  
(<FullFieldName > | <FieldGroupName >)â¦ // will t ext se arch index pe rsistent fields only  
[is a facet] 
[(index words | index p hrase)]  // default is index  words 
[(index data translations | index base da ta only)] // default is index trans lations 
Cube Relat ions 
<CubeRelationName > 
(cell | matrix) relation to <BusinessClass > 
[allow dimension reorderi ng]  // allows for dynamic optimization on retrieval 
[period view is <PeriodOperator >] 
[dynamic mapping i s <RelatedValue >] 
[dynamic preload measures are < RelatedValue >] 
[Dimension Mapping]  
related.< DimensionField > ( = <Rela tedValue> [and blank dimension] 
  | where (< MeasureConditio n>) 
  )â¦ 
[Preload Measures] 
<FullFieldNam e> [<PeriodOperator >]â¦ // must be a valid Measure on <BusinessCla ss> 
 
MeasureCondition ::=  <Parens><MeasureConditionNode ><Parens> 
 [<Conjunction> <Parens ><MeasureConditionNode ><Parens>â¦] 
 
MeasureConditionNode  ::= <FullField Name> [not] empt y // must be a val id Mea sure on <BusinessClass>  
Columnar Relations 
<ColumnarRelationName > 
(cell | matrix) relation to <BusinessClass > 
[period view is < PeriodOperator >] 
[dynamic mapping is < RelatedValue >] 
[dynamic preload measures are < RelatedValue >] 
[Dimensions] 

=== PAGE 45 ===
Business Class Definition  
Configuration Console Reference Guide  | 45 related.< RelatedField > [= <RelatedValue >]â¦ 
[Preload Measures]  
<FullFieldName > [<PeriodOperator >]â¦ // must be a valid derived Measure Field  on <BusinessClass>  
[Instance Selection] 
where <Condition > 
 // Valid only with matrix relation. This exp ression can use the OTM objectâs fields and the current objectâs fields. 
Relatio ns 
// By default, a rel ation is valid only if key fields  are entered  
( <RelationNam e> [is a[n] (<Business Class> | <KeyField >) set] 
| <KeyField> set 
)  // When KeyField set is used, th e RelationName i s â <KeyField>Setâ. A lternatively a one-to-many r elation 
 // based on a KeyField can be given a s pecific name by usin g â<Relation Name> is a <KeyFie ld> setâ. 
 // A KeyField set is the p referred way to def ine a one- to-many relation. It is similar to a Relative 
 // Rela tion excep t that it automat ically  gene rates the relation to phrase bel ow. 
[<SqlNam e>] 
[<ClassicName >] 
[<DefaultLabel >] 
[(one-to-one | one-to-many) re lation (to < BusinessClass > | using <Related Link>)] 
 // If RelatedLink is a Relative Relation, it is a further definition base d on the R elation given. 
 // This would typically be used only to further restrict a  one- to-many relatio n. This phrase is required when the  
 // Relation  is not a KeyF ield se t, othe rwise a KeyF ield set has the same rules as a Relative Relation. 
[valid when <Condition >] 
[<AsOfDate >] 
[required] 
[delete (restric ted | cascades)] 
[(enable | di sable) subset se lect on dependent relation] 
[disable filtering within db] 
[disable link cache]  
[include deleted record]  // Valid only  with one- to-one where business class has a del ete flag  
  // When bus clas s is âsto re usingâ must implement DeleteFlag and support including del eted records  
[dynamic mapping is <RelatedValue >] 
[Field Mapping uses <Set>] // Not required o n a Rel ative Relation but c an still be used to  alter the sort order  
[related.<FullFieldName> <RelationOperator > <RelatedValue >â¦] 
 // Multiple depende nt OTMs  can be used in Rel atedValu e but only i f all o f the OTMs have a di rect OTO  
 // relation back to the targe t of this Rel ation  
[Instance Selection] 
[include [only] d eleted records] 
where <Condition > 
 // vali d with one- to-many only. This expression can u se the OTM  objectâs fields and  the current obje ctâs f ields . 
 
Set ::= ( <SetName> 
 | [<BusinessClass >] part of key 
 | [<KeyField >] (symbolic | level) key  
 | bod key 
 | update stamp key  
 | unique id  key 
 ) 
 // BusinessClass must be one of the âpart ofâ business classes and KeyField must be one of the symbolic key fields 
 // âlevel keyâ is valid on ly on a key field that implements the Array Hierarchy pattern 
 // âbod keyâ is valid only when this business class implements BODId 
 // âupdate stamp keyâ is valid when the update stamp exists and is  not virtual 
 // and only has the update stamp time stamp field on it.  
 // âunique id keyâ is valid as long as the business class does not have UniqueID disabled 
 
RelationOperator  ::= ( = 
 | >= 

=== PAGE 46 ===
Business Class Definition  
46 | Configuration Console Reference Guide   | > 
 | <= 
 | < 
 | as of 
 ) 
 // non = operat ors a re val id on last key only 
 // âas ofâ operator i s valid  on a date only  
 
<RelationName > // A condi tional relation must retur n the sa me underly ing busin ess object with the same cardi nality (oto or otm)  
[<SqlName>] 
[<ClassicName >] 
<ConditionalRelationControl > 
 
Conditional RelationControl  ::= 
if <Condition > 
(<RelationName > | <ConditionalRela tionControl >)â¦ 
[else] 
(<RelatedValue > | <ConditionalRelationControl >)â¦ 
Form In vokes  
<FormInvokeName > 
(<FormInvokeRule > | <ControlRule >)â¦ 
 
FormInvokeRule  ::= 
invoke <InvocationTarget > 
[fill in  [blank] fields from <RelatedLink >] 
[except invo ked.(<FullFieldName> | <FieldGroupName >)â¦] 
 // <RelatedLink> cannot be the sa me as the invokeâs  <Related Link>  
[invoked .<FullFieldName > <AssignmentOp > <RelatedValue >â¦] 
[<Rule>â¦] 
 // the way to address fi elds in the <RelatedLink> that is being addresse d here is to use the 
 // invoked keywo rd 
Matrix F orms  
<MatrixFor m> 
rows are <RelatedLin k> 
( column is <Business Class> 
| columns a re <RelatedLink > 
) 
cell is < Business Class> 
[completion  message is < Message>] 
[( create all instances // if n either of these are specified then the matrix is v iew only 
 | create inst ance 
when <Condition> 
 ) ] 

=== PAGE 47 ===
Business Class Definition  
Configuration Console Reference Guide  | 47 Sets 
<SetName>  // NoKeyCh ange is no l onger supported. All indexes can have keys changed.  
[<SqlName >] 
[<ClassicName >] 
[primary]   // On e index only must be pr imary and cannot have duplicates, if no Ontology section  
[override  primary] // Over rides the Set generated from the Ontology definition  
[( no duplicates  // default 
 | duplica tes )] 
[bypass no duplicates validation]  
[( indexed  // âindexedâ forces  the crea tion of a physical SQL index for faster retrieval  
 | not indexed ) ] // âno t indexed â prevents  a physical SQL inde x from bei ng created â it is a lways vir tual 
  // If neithe r of thes e are spe cified  then the build pr ocess w ill dynamically  create  
  // a physical index based on general implementation parameters. Indexes that have 
  // a related field in them cannot be phy sically in dexed by the database. 
[primary when importing] // use this index as the  primary index whe n importing data  
[filter instance  selection]  // filter instance selection rather than building a subset index  
Sort Order 
<FullFieldNam e> [descending] 
â¦ 
[Instance Selection] 
where ( <Parens><RelatedCondition ><Parens> 
  // for non- filter ed selections , you must define a condi tion with onl y primar y fields  
 | <Condition > 
 )  
Rules  
General Form for Ru les 
 
 
AssignmentOp : := ( = 
 | += 
 | -= 
 | *= 
 | /= 
 | ^= // exponentiation  

=== PAGE 48 ===
Business Class Definition  
48 | Configuration Console Reference Guide   | %= // is modulus operator  
 ) 
 
Rule ::= ( <ControlRule > 
 | <GeneralRule > // valid in  all contexts 
 | <FieldRule > // valid in Field con text only 
 | <FieldCreateRule > // valid in Field context with Create actio n 
 | <GroupRule > // valid in a Gr oupField only  
 | <ArrayRule > // valid in an ArrayField only  
 | <ActionRul e> // valid in Action context only  
 | <FormInvokeRule> // valid in  the Form Invokes section only  
 ) 
 
ControlRule  ::= // A C ontrolRule  is a Rule that defines the contr ol of o ther rules. As with a stan dard Rul e, each has a recur sive 
 // nature, that is, the <Rule> under the âIf  <Condition>â can be another ControlRule o r standard Rule. 
if <Condition > 
<Rule>â¦ 
[else] 
<Rule>â¦ 
 
for each[<Parens><LPLConstr uctName><Parens>] ( [<Distinct> in] <otm RelatedLink > 
   | <array RelatedField > 
   | <iteration  FullFieldNa me> 
   ) 
[while <Condition >] 
<Rule>â¦ 
[each[<Parens><LPLConstructName>< Parens>] .<RelatedFi eld>] 
 // In the scope of the âfor eachâ the f ields of the <OTM Re lationName> and the occurring fie ld within  
 // <Array RelatedField > are addr essed through the âeachâ key word. If the <OTM RelationName> is âEm ployeesâ  
 // and a f ield on  the Emplo yee b usiness class is âName â then that field is addre ssed as âeach.N ameâ wit hin the scope 
 // of the for eac h. If one âfor eachâ is nested within anothe r âfor eachâ a âf or each1â can be specified that allows both  
 // the for each and the for each 1 var iables to be addressed through each.<Field> and each1.<Fie ld> 
 // If th is is for an array field, this structure dr ives a loop that goes through each occurren ce in the array.  
 // All other array fields are presumed to have the same in dex as the primary occu rring  field. T he RelatedField must be a field  
 // that has  a Representa tion with a field that occurs. The actual occurrin g field must be addres sed directly  (for example 
 // each.OccuringField) within the actual loop. 
 // If t he âeach â qualif ier is not provided it will use the most inner for each context. 
 // If a n iteration fie ld is used it must first be initialized by doing a â first iteration ofâ¦â 
 
 
end for each // Us ed to break out of a âfor eachâ loop. This rule is NOT a s yntactic al 
 // structure t o end a âf or eachâ statement. Rather, it is  a control rule  
 // ending the execution of the âfor eachâ rule and causing executi on to go  
 // to the first  rule af ter th e âfor eachâ. 
   
while <Condition
> 
<Rule>â¦ 
 
end while // Used to break out of a âwhileâ loop. This  rule is NO T a syntac tical structure to end a âwhileâ  statement. Rather, it is  
 // a control rule  ending  the execu tion of the âwhileâ rule and causing execution to go to the first rule  after the â while â. 
 
GeneralRule  ::= // valid in all contexts  
confirmati on required  
[<Message>] 
 
constraint <Condition> 
<Message> // Mess age required on con straint rule 
 


=== PAGE 49 ===
Business Class Definition  
Configuration Console Reference Guide  | 49 <RelatedField> <AssignmentOp > <RelatedValue > // Assign ment rule 
 // <Re latedField > valid only in scope of Business Object (not field rules)  
 // useful in a Fie ld Contex t Rul e 
 
increment <R elatedField > [by <RelatedValue>] 
[when <Condition>] 
 
decrement < RelatedField > [by <RelatedValue >] 
[when <Condition>] 
 
initialize [( <FullFieldName> | <FieldGroupName >)] 
 
(display | log) <Message> // display message on cons ole or write to standard log  
  // when running on a production system âdisplay â is a noop 
 
add action tag <ActionTag > // add an ActionTag to the execution path  
 
include <RuleBlockName > // copy named block of rules in-line  
 
round <FullFieldName> [(up | down)] to near est [exact] <RelatedValue > 
  // if âexactâ is n ot specified then  this round s to the nearest m ultiple of 
  // âRelatedValueâotherwise it r ounds âexactl yâ to the specified RelatedValue  
  // Thus  if âexact .95â is specified then the number wil l alwa ys end in â.95â 
  // If non -exact â.01â is spec ifiied the n the num ber will al ways en d in a mult iple 
  // of â.01â â which  in this case is simply ro unding the number to th e hundredths place 
 
clear in-memory cache [for < BusinessClass >] 
  // this will clear the in -memory  cache of all Busin essClass in stances  or a speci fic set of  
  // BusinessC lass instances if a Busine ssClass is sp ecified 
 
synchronize on  <RelatedLink > 
  // this will caus e all the thr eads where RelatedLink points to the same record to single - 
  // thread from t his point until th e end of the trans action  
 
FieldRule  ::=  // valid in Field context only  
[(force | dynamic) ] default [<FullFieldName >] to <RelatedValue > 
  // a force d efault rule  default s the fie ld whethe r it is entered or  not 
  // a dynamic defaul t rule leaves  the field  blank and dynamically defaults it when it is referenced  
  // a standard default fills  in the  field if it is blank  
[( default as a gr oup // default 
 | default i ndividual fields 
 ) 
] 
 
required 
[<Message >]  // defaults to âField is requiredâ  
 
cannot be  entered 
[<Message>]  // defaul ts to âFie ld cannot be enteredâ  
 
cannot be changed  
[<Messag e>]  // defaults to âField cannot be changedâ  
 
must be numeric  
[<Message>]  // defaults t o âFiel d must be numericâ  
 
initial value is <RelatedValue > // valid on Field Rules and Parame ter Rules only 
[when <SimpleCondition >] 
 
field size  is <RelatedField> 

=== PAGE 50 ===
Business Class Definition  
50 | Configuration Console Reference Guide   
FieldCreateRule  ::= // valid in Fiel d cont ext with Create action when FullFieldName not used otherwi se valid  general rule 
autosequence [<FullFieldName >] [when blank] [us ing (<RelatedField > | <Set Name>)] 
[manual range is < RelatedField >] // must be a group field  that imp lements FieldRange  
[minimize contention [and  gaps]] 
 // if no field  specified find last instance in  context  and increment by 1 â field must be eith er sym bolic o r relative key  
 // if SetName specified then find l ast instance using SetName  â Se tName  must contain this field  
 // if RelatedField specifie d then increment Relate dField by 1 and use that value  
 // minim ize contention is not valid with a  Relat edField âthis  option can result in gaps in the numeri cal sequence 
 // typically âmi nimize conte ntion â will retrieve a block of numbers, when gaps are minim ized as wel l, it retrieves one at a time  
 // âwhen blankâ is not valid with âminimize contentio nâ 
 
GroupRul e ::=   // valid in a GroupField only  
always de fault ( individual fields  // prevents  grou p default rule  from being overridden  
 | as a group  
 ) 
 
mutually exclusi ve 
[<Message >] 
 
ArrayRule  ::= // valid in a n ArrayField  only 
array size is <RelatedField > 
edit incr easing sequence 
make increasing sequence 
edit decreasing sequence 
make decreasing  sequence 
edit contiguous  
make contiguous  
no duplicates [on <FullFiel dName> [, <FullFieldName >â¦]] 
 // where Field  is a Memb erField within an occurring GroupField 
 
ActionRule ::=  // valid  in Action co ntext or R ulesField only 
make transition to < FullStateName > 
 
commit transaction 
 // transactions are automat icâthis fo rces a commit in the  middle  of a transaction and starts a new transaction 
 // this operation  can cause data integ rity problems unless the application is carefully constructed to manage this. 
 // on a  SetAct ion this rule schedules a commit to take place at the next possible boundaryâno data integrity p roblems 
 // will o ccur using this in a SetAction 
 
end set action in stance loop 
 // valid in instance rules in a SetAction only âthis ends the instance action loop but will continue to run Set Rules 
 
build text se arch field <F ullFieldName > // strings the given fields in to <FullFieldName>  
Fields 
(<RelatedValue > | [<RelatedLink >.]<FieldGrou pName>)â¦ 
 
initiate < RelatedValue > workflow // RelatedVa lue must be a Workf lowDefinitionCode  
[resume on error]   // This will catch all error s thrown and then run the speci fied rules, if any  
[<ResumeOnErrorRule >â¦] 
[Variables]  
[include [(persistent  | auditable | user)] fields from <RelatedLink >]â¦ 
[include [(persistent | auditable | user)] fields from <RelatedLink >]â¦ 
[include [(persistent | auditabl e | user)] fields from <RelatedL ink>]â¦ 
[<RelatedField >â¦] 
[variable name is < LPLConstructName >] // default is the last field n ame in the RelatedF ield 
[assign message id to < FullField Name>] // mu st be of type IONOutboxQueue  
 
cancel <RelatedValue > workflow // RelatedValue must be an WorkflowDefinitionC ode  
message id is < FullFieldName > // must be of type IONOutboxQueue  

=== PAGE 51 ===
Business C lass Definition   
Configuration Console Reference Guide  | 51  
( initia te <PFlowServiceName > process 
| trigger <RelatedValue > PA service)  // Relate dValue must be a literal or PfiS erviceDefinition key field  
[resume on  error]  // This will catch  all errors th rown and then run the specified rules, if any  
[<ResumeOnErrorRule >â¦] 
[title is < Message>] 
[Criteria]  
<RelatedField >â¦ 
[category filter is < RelatedField >] 
[variable name is < RelatedValue >]  // default is the last field name in th e Rel atedFi eld 
[Variables]  
[include [( persistent | auditable | user)] fiel ds from <RelatedLink >]â¦ 
[include [(persistent | auditable | user)] fields from < RelatedLink >]â¦ 
[include [(persistent  | auditable | user)] fields from <RelatedLink >]â¦ 
[<RelatedField >â¦] 
[variable name is < LPLConstructName >] // default is the last field name in the Rela tedFi eld 
[URLs] 
(<HttpURL> | <LinkBack >)â¦ // list of u rls to show for a participant of the process  
   // Maps to the âFoldersâ concept in ProcessFlow 
 
( cancel <PFlowServiceName > process 
| cancel <RelatedValue > PA service) // RelatedValue m ust b e a literal or PfiServiceDefinition key field  
 
invoke <InvocationTarget > [in ( foreground 
  | background [on < RelatedField >] 
  | background group[<Paren s>(<RelatedValue>) <Parens>] 
  ) 
  ] 
 // <CreateAction> must be a non-parameter Create Act ion 
 // invoking a Create action using [this instance] can be used only in the context of a Create or Im port act ion 
 // RelatedField must be of type Date or TimeStamp  
[<InvokeRule >â¦] 
[<Rule>â¦] 
[<ControlRule >] 
(<InvokeRule > | <Rule>)â¦ 
 
invoke modify update stamp <RelatedLink > 
 
invoke method <NativeMethod > 
 
invoke script <RelatedValue >  // RelatedValue  is a UserScri pt ke y field value 
 
invoke derived field <RelatedValue > // RelatedV alue must be a derived field  
 
generate document <RelatedValue > // RelatedValue must b e â<NavigationName> as pdfâ¦â  
set using action <ActionName > // Action must have a parameter of type BinaryDocument  
 // This will generate the document in the  background and use the Act ion specified to set it on the calling instance 
 
dbimport < RelatedField > into < BusinessClass > // RelatedField  must be of type CSVText  
 // This has the same behavior as the dbimport command except that it c an also take the 
 // standard output format of a csv-based ReplicationSet (the  ability to create, update, and delet e) 
 
send ion bod  
bod is <RelatedValue >   // must be  an XMLDocument  
bod type is <RelatedValue >  // <verb>.<noun>  
[assign message id t o <FullFieldName >] // must be of type ION Outbox Queue 
[(expect | no ) acknowledgement]   // default is âexpe ct acknowledgementâ  
[accountin g entity  is <RelatedValue >] 
[location is <RelatedValue >] 

=== PAGE 52 ===
Business Class Definition  
52 | Configuration Console Reference Guide  [document id is <RelatedValu e>] 
[variation id is <RelatedValue >] 
[revision id is <RelatedValue >] 
[source is < RelatedValue >] 
[instance co unt is < RelatedValue>] 
[source is <RelatedValue >] 
[custom property is <RelatedValue >]  // must be an IONCustom erPrope rty 
 
send notification  
to <RelatedValue > // must be an Actor or ActorGroup  
description i s <Message > 
[priority is (very low | low | medium | high | very high )] // default is m edium 
[detail is <Message>] 
[<LinkBack >] 
[navigation is < NavigationName >] // @deprec ated 20180809 
 
send email 
[to <RelatedValue >â¦] // must enter a t least one to, cc, or bcc; email addresses cannot include spaces  
[cc <RelatedValue >â¦] // can have multiple to, cc , bcc address lines, each having a single address, or can enter multiple  
[bcc <RelatedValue >â¦] // addresses on one line using a valid deli miter, such as a c omma or semicolon (not a space)  
from <RelatedValue >â¦ // repeat is for <RelatedValue> only  
[ignore inval id addresses] 
[subject < Message>] 
[<Attachm ent>â¦] 
[Attachm ents] 
(<Attachment > | <ControlRule >)â¦ 
[<Appointment >â¦] 
[Appointments] 
(<Appointment > | <ControlRule>)â¦ 
Contents  
(<Message> | <ControlRule  where <Rule > is replaced by <Message> >)â¦ 
 
link <RelatedValue > to this agent // RelatedValue must be an Actor  
 
register new actor  
login name is < RelatedValue > 
password is < RelatedValue > 
webapp is < WebAppName > 
[registration key  is <Message>] 
[role is < RelatedValue >â¦] 
[person name is < RelatedValue >] 
[contact info is <RelatedValue >] 
 
update actor  
[person name is <R elatedValue >] 
[contact info is <RelatedValu e>] 
 
PFlowService ::= (<PFlowServiceNam e> | <RelatedValue >) // RelatedValue must be a P fiServiceDef initio n key field 
 
Attachment ::= 
attachment <RelatedField > 
[name is  <RelatedValue >] 
[mime ty pe is <RelatedValue >] 
 
Appointment  ::= 
appointment <RelatedValue > 
[send as (meeting | [appointment] message | [appointment] attac hment)] // message is default  
[name is <RelatedValue >] 

=== PAGE 53 ===
Business Class Definition  
Configuration Console Reference Guide  | 53 [location is <RelatedValue >] 
[cancel] 
date [range] is < RelatedValue > [(to <RelatedValue > | 
   for <RelatedValue> days | hours | minutes)] 
[reminder <RelatedVa lue> days | hours | minutes] before]  
 // Must supply a globally unique appointment RelatedValue  
 // Name is ignored for message types; become s attachment name for oth ers. 
 // âdate is <RelatedValue>â is required for all cases. All cases also require âtoâ or âforâ.  
 // Meeting is sent as an emai l attachmen t prepopulated with  attendees and is only sent to the originator who can send 
 //      invites from their calendar upon opening the attachment. Must be an attachment due to calendar client limitation s. 
 // Message is embedded in the email message and is sent to each attendee. This i s the default if nothing is specified.  
 // If there is more  than one appointment that is a messa ge, only the first is embedded. The rest become attachments 
 //      due to calendar client limitations.  
 // Attachment is  sent as an email attachment to each attendee and must be opened to get into the calendar. 
 
ResumeOnErrorRule ::= (<Rule> | cancel resume | < FullFieldName > = error message)  
 
InvokeRule ::=  // valid under invoke rule only  
run outside of action backgrou nd group  
 // Every top level action creat es an implicit aciton background group that, by default, all invoked actions run in. This action 
 // background group is used to define what it means for the top level action to be complete d. This syntax allows for 
 // an action to be executed in the background that is not tied to the top lev el action such that the top level act ion will be  
 // considered to  be comple ted ev en if this action is still running. All sub-actions of a top level action dynamically become  
 // a part of the action background group of the  top level ac tion. This is not true for named background groupsâthey have 
 // to be explicitly joined when invoked. 
 
run after  ( <FullFieldName > // must be an AsyncActionRequest KeyField / UniqueID or a named background group id  
 | current ac tion background group 
 | action background group  <FullField Name> // must be an action background group id  
 | background grou p<Parens><RelatedValue ><Parens> 
 ) 
 
on error  // valid o nly when action is run in background  
invoke < InvocationTarget > 
[<Rule>â¦] 
[<ControlRule >] 
(<InvokeRule > | <Rule >)â¦ 
 
assign async ac tion request id to <FullFieldName > // valid only wh en run in background  
 // FullFieldName can be an AsyncActionRequest KeyF ield or a generic Uni queID 
 
assign async [action] background group id to <FullFi eldName> // valid only when run in background  
 // FullFieldName must be a generic UniqueID 
 
assign result to (< KeyField> | <ViewField > | <BusinessObje ctReference >) 
 // This defaults when th e InvocationTarget is a Ke yField 
 // Not valid with âcre ate instanceâ 
 // This must be a Business Objec tReference if  the InvocationTarget is an update type of 
 // Lawson Classic Transaction. 
 // This  can be used only on a Lawson Classic Transaction if it has a business class designation . 
 
assign message group id  to <LawsonClassicMessageGroup  KeyField> 
 
resume on error // This will catch all erro rs thrown on this action invo cation and then run the specified rules, if any  
[<ResumeOnErrorRule >â¦] 
 
fill in [blank] user fields from (parameters  | <RelatedLink >) 
 
fill in [blank] audit fields from <RelatedLink > 
 // <RelatedLink> cannot be the sam e as the invokeâs < RelatedL ink> and must be either âthis instance â or 
 // âeach(<LPLConstru ctName>)â whe re the t arget of th e each is an audit log entry 
 

=== PAGE 54 ===
Business Class Definition  
54 | Configuration Console Reference Guide  fill in [blank] fields from <RelatedLink > 
[except <InvokeRu leKeyword >.(<FullFieldName > | <FieldGroupName >)â¦] 
 // <Relate dLink> cannot be the same as the invokeâs <Re latedLink>  
 
<InvokeRuleKeyword >.<FullFieldName > <AssignmentO p> <RelatedValue >â¦ 
 // the way to ad dress fields  in th e <RelatedLink> that is being addressed here is to use the invoked  keyword 
 
initialize <InvokeRuleKeywor d>.<FullFieldName >â¦ 
 
<FullFieldName> <AssignmentOp > result.<FullFieldName> â¦ 
 // A La wsonC lassicTransac tion is capable of returning result fields. The result fields are accessed using the âresultâ k eyword . 
 
InvokeRuleKeyword ::=  ( invoked  
 | datasource // datasource key word  valid o nly when using the âimplement xxx DataSourceâ pattern  
 ) 
 
InvocationAction ::= ( [<FullStateName >].<ActionName > 
 | audit create 
 | audit update // must have a RelatedLink that is an audit log entry  
 | change  effective date  // must have a RelatedLink tha t is an audit log ent ry 
 | insert history  
 | delete history  
 | change  create date 
 | purge audit l og entries 
 ) 
 
InvocationTarget ::=  <InvocationAc tion> [ ( <RelatedLink > 
   | <BusinessClass> // must be a Set Action (co nstruct also option in  
    // <RelatedLink>, but restated here for emphasis 
    // and Set Actio n exception  
   | <BusinessTask > // any action on a Busine ssTask 
   | <LawsonClassicTransaction > 
   | <M3Interface > 
   | <WebserviceInterface > 
   | <StaticJavaPD > 
   ) 
  ] 
 
FieldRule s ::= 
<FullFieldName > // Field name ca n have tem plate operator in it '<A>'; if it does then ru les can have matching template  operator 
<Rule>â¦ 
Field Rules  
[(merge | replac e) specificati ons] // valid only for lhf LPL , merge is default  
<FieldRule s>â¦ 
Translation Field Rules  
[(merge | replace) sp ecifications] // valid only for lhf LP L, merge is default  
<FieldRules >â¦ // Rules  that get âfiredâ when this fieldâs translatio n is change d (this include s Create and Delete)  

=== PAGE 55 ===
Business Class Definition  
Configuration Console Reference Guide  | 55 SubType < RelatedCondition > Fie ld Rules  
[(merge | re place) specificati ons] // valid only for lhf LPL , merge is default  
<FieldRules >â¦ 
Commit  Rules  
<Rule>â¦ // Rules that get âfiredâ just before the final âcommitâ p oint of any transaction.  
 // Commit Rules do not get fir ed when a RequestAction is initiated; th ey get  fired when i t is completed.  
 // Commit Rules do n ot get fired when a future ef fective -dated tra nsaction is initiated; they get fired w hen 
 // the  transaction be come s effective.  
Audit Entry Rules 
<Rule>â¦ // Rule s that get âfiredâ just b efore a n audit log entry is created. Multiple audit log entries can be cr eated in a single  
 // transaction if the effective date has been changed in the lo gic of the transaction. 
 // Audit Entry Rules do not get fired when a Reques tAction is initiate d; the y get f ired when it is completed. 
 // Audit Entry Rules DO get fired wh en a future effective- dated transacti on is initiated; they  DO NOT get  fired  
 // when  the transaction becomes effect ive. 
Apply Pending Effective Rules  
<Rule>â¦ // Rules  that get âfiredâ when a pending effe ctive -dated transaction is applie d (whe n it be comes â effective â) 
Create Rules 
<Rule>â¦ // Rules that get âfiredâ when  any Create type a ction is executed  
Crea te Exit Rules  
<Rule>â¦ // Rules that get âfiredâ after any Create type actio n is executed 
Updat e Action Rules  
<Rule>â¦ // Rules that ge t âfiredâ when any Update type action is executed  
Delet e Rules  
<Rule>â¦ // Rules th at get âfiredâ when any Delete type action is executed  
Translation Rules  
<Rule>â¦ // Rules that get âfiredâ when any translatable fieldâs translation is c hange d (this inclu des Cr eate and Delete)  

=== PAGE 56 ===
Business Class Definition  
56 | Configuration Console Reference Guide  Action Exit Rules  
<Rule>â¦ // Rules that get âfiredâ on the exit of all actio ns (except  Set Ac tions) defined on this business class  
Attach Rules  
<Rule>â¦ // Rules th at ge t âfiredâ whe n another business obj ect is seeking to âattac hâ itself to this object  
 // Only rules that are v alid in all contexts. Any con straint ru le mean s that attachment of calling object is not allowed. 
 // No  <Field Rules> 
Parent Attach Rules 
<Rule>â¦ // Valid o n Parent Hierarchy only. R ules that get âfiredâ when a child attempts to a ttach to a parent.  
 // Only rules that are val id in all contexts . Any constraint rule means that attachm ent of calling object is not allowed. 
 // Rules within P arent Attach Rules can use the âchildâ related  link to access the attaching child business class. 
 // No <FieldRules>  
Dynamic  Creation Rules  
<Rule>â¦ // Rules that get âfiredâ  when a Dyn amic Creation is about to occur  
 // Any const raint rule means that Dynam ic Creation d oes not occu r and an exception does occur. 
 // Both Atta ch Rules and Dynamic Creation Rules can addres s contextual infor mation about the busi ness class  
 // that is causing  these rules to fire throug h the special vari able datacontext. 
Rule Blocks 
<RuleBlockName >â¦ // Blocks of r ules that can be included (copied) in m ultiple  places in the LPL code  
<Rule>â¦ // The block of rules is copied into place during compilation when an âinclude <Rul eBlockName>â rule is used . 
 // Rule Blocks can contain replacement variables; these are LPLConstructNames bounded b y curly braces.  
 // If a Rule Block contains repla cement variables, all of those variables must be re placed when including the Rule Block 
 
 

=== PAGE 57 ===
Business Class Definition  
Configuration Console Reference Guide  | 57 States and Ac tions  
// State definitions are optional. If States are defined, Actions can be define d within States o r outside of the State definitions (mea ning for al l States ). If n o 
// Actions are defined, the action s Create, Update, and Delete are au tomat ically genera ted. I f any actions are defined, one of them must be a C reate type  
// of action (it is ok to not be able to update or delete a business objec t but if it can nev er be created, there isnât much point in de fining it in the first place).  
StateCycl es 
<StateCycleDefinition > 
 
StateCycleDefinition ::= 
<StateCycleName > is a St ateCycle 
[state field is <persistent  FieldName >] // default is <Stat eCycl eName> + State  
[initial state is <StateName >]  // default is first state definition  
<StateDefinition >â¦ 
 
StateDefinit ion ::= 
<StateName> is a State  
Entrance Rules 
<Rule>â¦ 
Exit Rules  
<Rule>â¦ 
Field Rules  
[(merge | replace) specifications] // valid only for lhf LPL , merge is default  
<FieldRules >â¦ 
SubType <ConditionName > Field Rules 
[(merge | replace) specifications] // valid only for lhf LPL , merge is default  
<FieldRules >â¦ 
[<EventHandler >â¦] 
[<ActionDefinition >â¦] 
[<StateCycleDefinition >â¦] 
 
// A StateName must be unique within another St ate. StateCycles do NOT p articipate in  the nam e scoping of States. Therefore, if there is a state âOpenâ that has two 
// StateCycles (âAppro valCycleâ and âNotificationCycleâ) the StateNames within those tw o StateCycles must be unique. This allows a State to be fully identifie d 
// via its upper StateNa me. In this  example if ApprovalCycle has a State âNeedsApprovalâ then it can be address ed usin g âOpen.NeedsApprovalâ. A StateName 
// address need not be fully qualified as long as it can be unambiguously resolved. 
Actions 
(<ActionDefinition > | <EventHandler >)â¦ 
 
ActionDef inition ::= // When you specify any actions in the action  block, you mus t also SPECIFICALLY include the following action if  yo u 
 // want them available:Create i s an Action, Update is an Action, Delete  is an Action  
<ActionNam e> is a[n] [<ActionType >] [Request]Acti on 
  // A blank ActionType means Instance Action unless  ActionName is the same as ActionT ype. 
  // If Action Name == ActionType, ActionType = ActionName 
[<DefaultLabel >] 
[privileged ] 
[action tag is  <ActionTag >]â¦ 
  // When an audit log entry is created all the action t ags of all th e actions in  the execution path 
  // are  put on the audi t log entry. This is useful for determining a re ason for why an audit log entry 
  // exists.  
[completion message is  <Message>] 
[no records message is < Message>] // valid on Set actio ns only 
[workflow event title is < Message>] // valid on Reques t actions  only 
[valid when <Condition >] 

=== PAGE 58 ===
Business Class Definition  
58 | Configuration Console Reference Guide  [<Messag e>] 
[restricted]    // can be invoked  only; cannot be executed via UI  
[(restrict | enable) action on li sts] // overrides business class default  
[(refresh and | lazily) lo ck this instanc e] // valid on Instance, Update, Delete, and Purge acti ons only 
[(enable | disable) ImmutableContextCache] // disabled by default unless enabled in Product Line Definition  
[bod type is  <Literal>]  // valid on Import actions onl y â<verb>.<noun>â  
[bypass field rules]  // valid on  Create and Update action s only 
[bypass relational  integrity rules]  // valid o n Delete  and Purge actions only  
[use array in sert]  // valid o n Create actions only  
[manual update]  
[disable checkpoint]  // Set Actions onlyâdisables restart logic; implies allo w unlimited concurrency  
[subject is <Subject >] 
[effective date requ ired] 
[reason code required]  
[action comment required]  
[request action process is <PFlowServiceName >] 
[request action linkback  webapp is < WebAppName >] 
  // The main <LinkBack> syntax declares a linkback with its associated parameters (in parens). 
  // This statement modifies an implicit âlinkback w ebapp isâ statement. 
[disable RetroactiveEffectiveDating]  
[disable resume  on error]  
[disable multiple instance selection]  // Do not allow multiple records to be selected on a list for this action 
[confirmation required]   // Causes the user to conf irm they want to execute this action  
[<Message >] 
[run in (foregro und | background)]   // Overrides default run mode â valid on Instance and Set Action only  
[[initial] schedule concurrency is ( FullConcurrency // valid only on run in background  
    | NoConcurrency  
    | NoActionGroupC oncurrency)] 
[[initial] misfire strate gy is ( DoNothing  // valid only on run in background  
   | RunOnce  // default is DoNothing  
   | RunAllP rocessesScheduled)] 
[allow anonymous access]   // Allows th e âan onymousâ user to execute this action  
[allow user fields  [from <BusinessClass >] as parameters]â¦ 
 // Allows user fields to be placed on the ActionForm during configuration. 
 // User fields from multiple business classe s may be used as parameters 
 // These user field paramet ers can be used in the inv oke rule â fill in user fields from parametersâ 
[synchronized [on <Message >]] // enforced only on actions run in the background  
 // If using a tra nslatable field in the message , must force the locale to  be blank 
[allow unlimited concurrency ] // valid on Set actions onlyâimplicit with âdisa ble chec kpointâ 
 
Queue Mapping Fields 
<RelatedField >â¦  // can have up to two Queue Mapping Fields  
 
Set Is   // valid on Set actions only  
<RelatedValue >â¦ 
 
Parameters   // valid on  Create, Instance, and Set actio ns 
<FieldName > [<DataDefinition >]â¦ 
[<States >] 
[<DefaultLabel >] 
[holds pii]  
[scannable]  
[as of <RelatedValue >] 
[within <RelatedValue >] 
[<Message >] 
[[exact] version is < RelatedValue >] 
[precision is <RelatedValue >] 
[round to precision] 
[old value is <RelatedValu e>] 

=== PAGE 59 ===
Business Class Definition  
Configuration Console Reference Guide  | 59 [<TextVariables >] 
 
<FieldName > is a[n] <BusinessClass > view 
 
Parameter Rules 
<parameter FullFieldName > 
<Rule>â¦ 
 
Local Fields 
// same def inition as on Business Class  
 
Results   // valid on Set a ctions only 
(<FieldName > | <BusinessClass > view)â¦ 
 
Field Rules   // valid on Create and Update actions only  
[(merge | replace) specifications] // valid only for lhf LPL , merge is default  
<FieldRules >â¦ 
 
SubType < ConditionName > Field Ru les // valid on Create and Update actions only  
[(merge | replace) specifications] // valid only for lhf LPL , merge is default  
<FieldRules >â¦ 
 
Accumulat ors 
<FieldName> [<DataDefinition >] 
 
Instance Selection [< AsOfOperator >] // valid on  Set actions only  
[include [onl y] deleted records] 
where <Condition > 
 
Sort Order [is (< SetName> | primary)]  // valid on  Set A ctions only 
<RelatedField >â¦ 
[is trans action boundary] 
 
Action Rules   // Rules for entire set if a Set Action â otherwise just the ru les fo r this insta nce 
<Rule>â¦  // valid on a non Set Action only - constraint type rules as well as action  rules 
  // can b e placed her e â constraint rules constrain whether the action takes place or not 
Empty Set Rules // valid o n Set actions only  
<Rule>â¦ 
 
Set Rules  // valid on Set actions only  
Entrance Rules  
<Rule>â¦ 
 
Exit Rules 
<Rule>â¦ 
 
<sort FullFieldName > Set Rulesâ¦  // valid on Set actions only  
Entrance Rules 
<Rule>â¦ 
 
Exit Rules  
<Rule>â¦ 
 
Instance Rules // valid on Set actions only  
<Rule>â¦ 
 
Entrance Rules // Rules to be e xecuted prior to the Action  Rules â this is primarily use ful for delete actions  
<Rule>â¦  // because in a delete action the reco rd is deleted bef ore the Acti on Rules fire 

=== PAGE 60 ===
Business Class Definition  
60 | Configuration Console Reference Guide   
Exit Rules  // Rules to be executed up on exit of the Action  â this is primarily useful for create actions  
<Rule>â¦  // because in a create action the record is created after the Action Rules fire  
 
InitiateRequest Rules  // valid on Re questAction only  
<Rule>â¦  // Ru les are executed when  the a ction reques t is initiated 
 
UpdateReque st Rules // valid o n RequestAction only  
<Rule>â¦  // Rules are  executed when the action req uest is updated  
 
CancelRequest Rules // valid on RequestAction only  
<Rule>â¦  // Rules a re executed when t he ac tion request is canceled (rejected or withdrawn)  
 
Rule Blocks  
<RuleBlockName >â¦ 
<Rule>â¦ 
 
ActionType  ::= ( Create // Creates new record s and fires all field  rules 
 | Update // Updates record and fi res all field rules  
 | Delete // Virtual delete. Marks record as âdeletedâ. Does not physic ally remove recor d from database.  
 | Purge // Physical delete. Removes record from  database. 
 | Preview // Similar to an update but it does not fire field ru les and does no t actually updat e record 
 | Instance // Does not run field rules but does update rec ord 
 | Set // Run s rules on a set of records  
 | Import // Implicitly runs in the context of a new insta nce but does not impl icitly  save that instance  
 ) 
 
EventHandler  ::= 
on (<FullStateName>.< ActionName > 
 | entrance to  <FullStateName > 
 | exit of <FullStateName > 
 ) 
Action Rule s 
<Rule> 
 
ActionOverride  ::=  // valid on configuration only  
[<FullStateName >.]<ActionNam e> is an ActionOverr ide 
[<DefaultLabel >] 
[effective date required] 
[reason code required] 
[action comment required] 

=== PAGE 61 ===
Business Class D efinition  
Configuration Console Reference Guide  | 61 
 

=== PAGE 62 ===
Rule Blocks Definition File  
62 | Configuration Console Reference Guide  Rule Blocks Definitio n File  
// Rule Blocks  files h ave an extension of .ruleblocks 
 
RuleBlocks Structure  ::= 
 
<RuleBlock s> is a RuleBlocks 
Rule Blocks 
 
User Interface Definition 
// UI definitions are logically part of either a business cla ss, business task , or field definition. This is accomplished by having the same file name as th e 
// respective bu siness class, b usiness task , or field in a different directory structure. The standard directory structure is com/lawson/apps/<ModuleName>; 
// the UI definition  files are sto red in com/lawson/form s/<ModuleName>. Thus the file com/lawson/forms./ field/Addres s.field contain s the UI def initions for  
// the  field com/lawson/apps/field/Address.field. Every business class, business task, or f ield can hav e a default UI de finition as we ll as alternate UI definitions.  
 
// If no Drill List is specifie d then the Drill List is automatical ly bu ilt fro m all non- drill restricted Navigations and all Lists and Forms that are 
// propagated as a drill. If a List is pr opagated as a Dri ll then it doe s not put a drill on t his business class bu t rather on all the busines s classes th at 
// are in th e contex t of this business class. Thus it may make sense to have a Drill List specified in this bus iness class as we ll as lists that are 
// propagated as a Drill. However, it would not make sense to propagate a form as a Dr ill or  to drill re strict any Navigations if a  Drill List is specified  
// as they would not be automatically put in the Drill List.  
 
UI Structure ::=  
 ( <BusinessClass
> is a Busine ssClass 
| <BusinessTask >  B 
| <FieldName >     is a Field  
) 
[Drill Backs]   
[<DrillBackDefinition >â¦] 
[Drill List]    // When this section is present it override s automatic dril l pro pagation 
[(<DrillDefinition > | primary audi t list | data translation list) â¦] 
[<DrillListDefinition >â¦] 
[<NavigationDefinition >â¦] 
[<ContextMessageDefinition >â¦] 
[Context Messa ge Invocations] 
[<ContextMessageInvocation >â¦] 
[<ListDefinition >â¦] 
[<CardViewDefinition >â¦] 
[<InstanceCountChartDefinition >â¦] 
[<FormDefinition >â¦] 
[<ActionFormDefinition >â¦] 
[<CompositeFormDefinition >â¦] 
[<MatrixFormDefinition >â¦] 
[<SearchFormDefinitio n>â¦] 
[<SummaryFormDefinition >â¦] 
Base  Definitions  
Action ::= action is [<StateName >.]<ActionName >â¦] 

=== PAGE 63 ===
User Interface Definition  
Configuration Console Reference Guide  | 63  
ActionIcon ::= ( add 
 | apply 
 | approve 
 | award 
 | calculat e 
 | chart 
 | claim 
 | copy 
 | create 
 | delete 
 | edit 
 | export 
 | filled star  
 | filter 
 | finalize 
 | open 
 | outlined star  
 | pdf 
 | preview 
 | print 
 | process  
 | reject 
 | release  
 | request  
 | save 
 | search 
 | send 
 | submit 
 | transfe r 
 | undo 
 | validate 
 ) 
 AggregationDril lLink ::= row[<Parens><SetName><Parens>][.<RelatedLink
>] 
 AlertType  ::= ( red  
// alerts shown in  order of precedence  
 | yellow 
 | green 
 | blue  // blue is displayed only if no higher al ert condition is met  
 | <Icon>  // displayed only if no higher alert condit ion is met 
 ) 
 CalledOutAction ::=  
([action is] ([<RelatedLink>.][< StateName >.]<ActionName > | <StandardActio n
>) 
| [row] form invoke is  <FormInvokeName > 
| [row] navigation is <NavigationName > // navigation and row navigation both operate off the row  
| [row] li nk is <UILink > 
) 
[action icon is (<ActionIcon > | <Icon> | hidden )] 
  // Icon must be a SOHO icon: https://design. infor.com/product/identity/icons  
[label is <Message >] // Required when using form invoke isâ¦  
[mouse over text is <Message >] 
[hide when  invalid]  
[valid when <SimpleCondition >] 
 CaptchaControl ::= 
captcha control 

=== PAGE 64 ===
User Interface Definition  
64 | Configuration Console Reference Guide  [(valid |  visible) when <SimpleCondition >] 
[(left align | center | right align)]  // left align is default  
 
CheckControl ::=  
check control 
[(valid | visible) when < SimpleCond ition>] 
[checked state  is <FieldName >] 
[check action is [<StateName >.]<ActionName >]â¦ // optional fo r printing purposes  
[when <SimpleCondition >]   // must have a condition if defining multiple targets  
[uncheck action is [< StateName >.]<ActionNa me>]â¦ 
[when <SimpleCond ition>]   // must h ave a  condition if definin g mul tiple targets 
[display as (box | switch  | star)]  // default is box  
[<Label>]    // default is no label  
[mouse over text is <Message >] 
[display as sw itch] 
[(left align | center | right align)] // left align is default unless used in a  MatrixForm (c enter i s default) 
[(top align | middle | bottom  align)] // top align is default  
[align as  label]   // make check co ntrol line up in label column  
[indent]  
[hidden] 
[when val ue changed] 
( validate (this fi eld | <RelatedField >) // RelatedField must be a muta ble field on a for m or list 
| <RelatedField > = <RelatedValue >  // RelatedFiel d must be a mutable fi eld on a form or list  
| refresh <RelatedField >   // Rel atedField must be on a form  or list 
| refresh dependent panels )â¦ 
[when <SimpleCondition
>] 
 
Color ::= ( black 
 | blue 
 | brown 
 | gray 
 | green 
 | jade // deprecated 
 | magenta // deprecat ed 
 | maroon // deprecated 
 | orange 
 | purple 
 | red 
 | turquoise  
 | yellow 
 ) 
 
DisplayType  ::= ( browser[(/v3 | /v4 +)] 
 | desktop  
 | smartphone[(/v3 | /v4+ )] 
 | tablet [(/v3 | /v4 +)] 
 | v3 
 | v4+ 
 ) 
 FieldStyle ::= ( header(1|2|3|4|5 ) 
 | (left align | center | right align) 
// left align is default  
 | (top align  | middle | bottom al ign)  // top align is  default 
 | bold 
 | italics  
 | color of <Color> 
 ) 

=== PAGE 65 ===
User Interface Definition  
Configuration Console Reference Guide  | 65  
Form ::= [independent]  form is [<RelatedLi nk>.](<FormName > | primary | inline ) 
 FormText ::= 
( text of (< Message> [with <Icon >] | <Icon
>) 
[<TextStyle >â¦] 
[link is < UILink>] 
[display as tag]  
[color of <Color> [when <SimpleCon dition>]â¦] 
[align as lab el]  // make text line  up in label column  
| blank line ) 
 
Header ::= 
header(1|2|3|4|5) of < Message
> 
[(show border | underline) [color of <Color >]] 
[color of < Color>] 
[shade] 
[(center | right alig n)] 
[collapsible]  
[initially (collapsed | expanded) ] // default is expanded  
 
HttpURL ::= <Message> 
 Icon ::= icon.<IconName
> 
 IconName ::= <Literal
> // IconName is a dynamic keyword that comes  about by having either a .png file or a .svg file in the directory  
 // â<LASRCDIR>/< ProductLine>/iconsâ. The .png files can have the follo wing format: â<ImageName>_<Size>.pngâ 
 // wh ere <Size> is a number denoting the pixel size of  the icon , for exampl e: 16, 32, 72. All files in this format 
 // are considered icons and must be square. 
 // The .svg file s must have the format â<ImageNam e>.svgâ. The .png files can also have this format.  
 
ImageName : := (<Literal> | random backgr ound) 
 // ImageName is a dynamic keyword that comes about by having either a .png file or a .svg file i n the directory  
 // â<LASRCDIR>/ <Produc tLine> /imagesâ. 
 
Label ::=  
label is (<Message> | default) 
[<TextStyle >â¦] 
 List ::=  
list is (<RelatedLink> | <AggregationDrillLink>) .(<ListName
> | primary [audit list]) 
[search < FullFieldName> using <Related Value>â¦] 
[cannot be empty]   // valid only whe n used in a Wizard  
[when <SimpleCondition >] 
[<Message >] 
[confirmation required on empt y] // valid only when  used in a Wizard  
[when <SimpleCondition >] 
[<Message >] 
[form is (<FormName > | primary | inline)]â¦ 
[<FormDefinition >]  // valid  on an inline Form only; t his is a for m on RelatedLink  
   // Will cause the form to display beneath the list. 
[current pe riod is <RelatedValue >] // Rela tedValue is in conte xt of this business class  
[current year is <RelatedValu e>] // RelatedValue is in  context of this business class  
[Row Dimensions ]   // valid on a CubeView only; overrides the CubeView Ro w Di mens ion 
<DimensionField >â¦  // DimensionField is  in contex t of the Related Link busines s class 
[filter list is < RelatedLink >.(<ListName > | primary)â¦] 
[valid when <SimpleCondition >] 
[group label is < RelatedValue >] 

=== PAGE 66 ===
User Interface Definition  
66 | Configuration Console Reference Guide  filter < RelatedField> using <RelatedValue >â¦ 
 // RelatedField  is from the list business class and R elatedValue is from the filter list business class  
[implements DragAndDrop] 
action is [< StateName>.]< ActionName> 
[invoked.<FullFieldName > = [drop target.]< RelatedValue >â¦] 
[helper list is <RelatedLink >.(<ListName > | primary)â¦] 
[valid when <SimpleCondition>] 
[title is <Message>] 
[search <FullFieldNam e> using <RelatedValu e>â¦] 
[<Action>] 
[invoked.<FullFie ldName> = (<RelatedValue> | parameter)â¦] 
 // A âhelper listâ is a list that will s how below the main list that should be helpful to managing the main l ist. 
 // One ex ample of a list being helpful is  a list of i nstance s that ca n be copied into the main list. Another example 
 // may be a list of instance s that are just useful to see w hen managing the main list. 
 // If no action is  specified on a helper list then all the  Instance actions will display. M ultiple actions can be spe cified. 
 // By default the parameters of the insta nce action will be filled by name using the cont ext 
 // fields of this business class.  This mapping can be e xplicitly defined using the âinvoked.â Syntax 
 // The âRelatedValueâ on the right s ide of the invoked syntax is a RelatedValue from the perspe ctive of this business class . 
 // âparameterâ causes t his field to  be put on the helper list itself as an inputabl e field that then gets pa ssed to the action. 
 
ManualRepresentation ::=  
manual repres entation 
representation name is <Lite ral> 
[(label is (< RelatedFiel d> | <Message > | number) | no label)] // default is F ield Label 
[<TextStyle>â¦] 
[align as label]   // make field line up in la bel co lumn â valid only with  no label 
[show up to < Literal> lines] 
[show up to < Literal> characters] 
Property Mapping  
<MessageProperty > = <RelatedValue >â¦ 
[raise <A lertType > alert when < SimpleCondition >â¦] 
[mouse over text is <Messa ge>] 
[link is <UILink>] 
 Navigation ::= navigation is < NavigationName
> 
 Page ::= page is <PageName >[.<PanelName
>] 
 SimpleCondition ::= <Parens> ( <RelatedField
>  // <RelatedField> must result in a Boolean type  
  | <RelatedField >.<StateName > 
  | <FieldCondition >  // only â entered â allowed 
  | <ActorCondit ion> 
  | display type.< DisplayType > 
  ) <Parens> 
 StandardAction  ::= ( open 
 | save [and (new | close)]  
 | inline create 
 | create within 
 | create menu  
 | export to (pdf | csv) 
 | search 
 | saved search es 
 | drill around 
 | refresh  
 | charts 
 | helper list  
 | next record  
 | previous record  

=== PAGE 67 ===
User Interface Definition  
Configuration Console Reference Guide  | 67  | copy row  
 | audit compare 
 | sort 
 | download 
 ) 
 
StatusIcon ::= ( approved 
 | attached 
 | complete 
 | private 
 | public 
 | rejected 
 ) 
 Template ::= 
template is < RelatedLink
> 
[implemen ts DynamicChildVisibility] 
child desi gnator field is < FullFieldName > // FullFieldName must be from the tem plate business class  
parent match field is < FullFieldName >  // FullFieldName must be from the targe t business clas s 
[target] busi ness class is < BusinessClas s> // The parser ac cepts t his line and the one that follows  at this level of indent  
( <Form>   //     or on e less in dent level â it also allow s âtargetâ to be unspecified  
[<FormDefinition >]  // valid  on inline Form only  
| list is (< ListName > | primary) 
) 
 // A Template sp ecification is a mea ns for building a list of <RelatedLink> instances that are used as a template for  
 // crea ting target <Busine ssClass> instan ces. <BusinessClass> m ust implement the Templat eDriven p atter n. The  
 // <RelatedLink>  business class must  be the  busi ness class spec ified in the TemplateDriven patt ern. 
 // The DynamicChildElementVisibility pattern allows children template e lements to b e defined by a non-blank 
 // FullFieldName on the template busin ess class. The children template elements wi ll only  be v isible if th e value 
 // in the child designator field matches the value in the parent matc h field.  
 TextStyle ::= ( header(1 |2|3|4|5)  
// Text Styles do not affe ct field s in List or Audi tList defi nitions 
 | (left align | center | right align)  // left align  is default 
 | (top align  |  middle | bottom al ign)  // top align is default  
 | bold 
 | italics 
 | bullet 
 | left of field  
 | right of field 
 | color of < Color> 
 ) 
 UILink ::= ( [<RelatedLink>.]< NavigationName
> 
 | [(embedded | exte rnal | dialogue)] <HttpURL > 
  [lazy url retrieval] 
  [mingle url is <Message>] 
 // by default this will replace the entire f rame  
 // âembeddedâ will open this url within the application frame 
 // âextern alâ will open this url in an external browser (if in canvas) or on another tab 
 // âdialogueâ is valid only when in a browser and will mimic a dialo gue 
 // mingle url wi ll be u sed if mingle is installed ; url must be of format â<lo gicalId>/<restofurl>â 
 | registration 
 | signin 
 | signout // page, menus, forms  
 ) 
 URL ::= url is < HttpURL
> 

=== PAGE 68 ===
User Interface Definition  
68 | Configuration Console Reference Guide  Drills  
DrillBackDefinition  ::= 
<LinkBack> 
 
DrillDefinition ::= 
<DrillName > [is a[n] <NavigationName >] 
 // if [is  a <NavigationName>] is sp ecified or if <Dril lName> is itself a NavigationName 
 // then the definition of the Na vigation cannot be overridden. The Drill will simply take o n 
 // the definition of the N avigation. 
[valid when  <SimpleCondition >] 
[(<Page> 
| <Form> 
[(restrict | enable) action [<StateName >.]<ActionNa me>â¦] 
[<FormDefinition >] 
| <List> 
[position to  <RelatedLink >] // <Re latedLink> must be a record w ithin the specified List  
| <Template> 
| view <RelatedField > // must be a BinaryDocument or a Bus inessObjectReference  
 // If Relate dField is a BusinessObject Referen ce, the prima ry form or set of valid drill target forms is displayed. 
)] 
 DrillListDefinitio n ::= 
<DrillLis tName
> is a D rillList 
(<DrillDefinition > | primary audit list | data t ranslation list)â¦ 
Navigations  
NavigationDefinition ::= 
<NavigationName> is a Navi gation 
[label is < Message>] 
[drill restricted]   // prevents th is navigation from being put in the automated dr ill lis t 
[valid when  <SimpleCond ition>] 
[show as p df [in (foreground  | background) ] [in (portrait | landscape)] [font offset  
 is <Number>]] 
 // By default, navigating to a  PDF causes the PDF to be generated in the foreground and then displayed. This 
 // is u seful when the PD F is just a more complex page and is not a long-running report. 
 // For long- running reports the PDF should be sent to the background. 
( [<DisplayTy pe>] <Page> 
[when <SimpleCondition >] 
| [<DisplayType >] <Form > 
[open action is < ActionName >] 
[(restrict | enable) action [< StateName >.]<ActionName >â¦] 
[<Form Defi nition>] 
[when <SimpleCondition >] 
| [<DisplayType>] <List > 
[position to < RelatedLink >] // <RelatedLink> must b e a record in the specified Lis t 
[when <SimpleCondit ion>] 
| [<DisplayType>] <Tem plate> 
[when <SimpleCondition >] 
| view <RelatedField > // mus t be a BinaryDocument or a Business Objec tReference. I f Relate dField is a 
[when <SimpleConditi on>] // Business Obje ctReference, the primary for m or set of valid drill target forms  is displayed. 
)â¦ 

=== PAGE 69 ===
User Interface Definition  
Configuration Console Reference Guide  | 69 Contex t Messages  
ContextMe ssageDefinition  ::= 
<ContextMessa ge> is a[n] < InforContextMessage > Message 
Property Mapping  
<MessageProperty > = <RelatedValue >â¦ 
 
InforContextMessage ::= <Literal> 
 // The list of available conte xt messages and their properties are defined here at 
 // http://wiki.infor.com:8080/confluence /display/com panyon/Infor10+Workspace+ -+Standard+Context+Message+D efinitions  
 
MessageProperty  ::= <Literal> 
 
ContextMessag eInvocation  ::= // valid o n a Bus iness Class definition only  
send [<RelatedLi nk>.][<FullFieldName >.]<ContextMessage > 
[on (all lists | all forms | <ListNa me> list | <FormName > form)] â¦ 
Lists 
ListDefinitio n ::= 
<ListName > is (a List | a[n] <ListName > List | an AuditList ) 
[is primary] 
[is drill ta rget [fo r <FullFieldName >]]â¦ 
[propagate as a drill] 
[title is < Message>]  // defaults to ListName  
[is report  [for <WebAppName >[,<WebAppName >]â¦] 
[category is  <Message>] 
[show <#> lines] 
[show result  set size] 
[default Alpha filter operator is (contains | st arts with  | equals )] // default is â containsâ 
[keyword search fi eld is <RelatedF ield>] 
[label is < Message>] 
[(always | initially) disp lay] 
[disable translation filtering ] 
[(always | initially) display search ] // valid for s earch fo rm and filter 
[( search  form is (<FormName > | inline) 
 | search field is < FullFieldName >â¦)] 
[label is <Message>]  // valid o n âsearch fiel d isâ¦â only 
[use as filter] 
[always display] 
[show search form on left]  
[disable translation filt ering] 
[Layout]    // valid on inline Form only  
<FormLayout >â¦ 
[Required Search Para meters] 
<RelatedField >â¦ 
[initial va lue is <RelatedValu e>] 
[implements LongR unningList] 
[implements InlineCre ate] 
[allow form create]  
[copy mutable fields only] // default copies all persis tent fiel ds in list 
[implements FixedSi zeList] 
[show <#> lines]   // default is 10 lines  
[implements RepresentativeImageView]  // business class  must have a representative i mage defined 
[implements AuditC ompare]   // valid on ly for Au ditList 

=== PAGE 70 ===
User Interface Definition  
70 | Configuration Console Reference Guide  show change d values on  right 
[implements GalleryView] 
card is < CardViewNam e>  // must be a SectionedCardView  
[allow horizontal paging]  // will display page  horizontally on MultiList and SplashPage only  
[implements TreeView] 
[show parent] 
[node icon is < RelatedField >] // must be a StateField with icon definition  
[max levels is < RelatedValue >] 
[show <RelatedValue > levels] 
[has child ren when < SimpleCondition >] 
[disable create within [when <SimpleCondition >]] 
[implements Or gChartView]  
card view is <CardViewName > 
[legend state is <RelatedField >] 
[has children wh en <SimpleCondition >] 
[disable crea te within [when <S impleCondition >]] 
[implements Columnar View] 
[union with <BusinessClass >]â¦ 
[show charts only]  
[implements Cub eView] 
[suppress blank rows ] 
[suppress current period]  // by default the CubeV iew is in the context of the current pe riod 
[period dimensio n is <DimensionField >] // default is the first period in the list of dimensions  
[show total node]  
[label is <Message>] 
[show <RelatedValu e> levels] 
[Context]  
<FieldName >â¦ 
 // Values fo r this ca n come from a context session key, an âactor.agent(BusClass).FieldNameâ 
 // loo kup, or from the current context before some Navigation brings up this list. 
 // Values can also  be directly ent ered in Filter or Search Form for use in other BusClass C ontext fields  
[Row Dimensions ]  // must have either Row Dimensions or Pi vot Views defin ed 
<DimensionField >â¦ 
[caption is (representative text | < Message>)] 
[is fixed ]  // fixed  dimensions must start a t the top and be contiguous  
[Periods]   // valid on Period Dimension only  
<PeriodOperator >â¦ 
[label is < Message>] 
 
[Pivot Views]  
<PivotViewName >â¦ 
[label is <Message >] 
[is default] 
Row Dimensi ons 
<DimensionField >â¦ 
[caption is (representative text | <Message >)] 
[is fixed] 
[Periods]  // valid on Period Dimension only  
<PeriodOperator >â¦ 
[label is < Message>] 
 
[Column Views] 
<ColumnViewName >â¦ 
[label is <Message>] 
[is default] 
Display Fiel ds 
<ListDisplayField >â¦ 
 

=== PAGE 71 ===
User Interface Definition   
Configuration Console Reference Guide  | 71 [Period Views ]  // valid only if the cube has a period  
<PeriodViewN ame>â¦ 
[label is < Message>] 
( all periods in (week  | month | qu arter | ye ar) 
| Periods 
<PeriodOperator >â¦ // if there is a PeriodOperator on a DisplayField the combin ation of 
[label is < Message>] // PeriodOperators must i tself be  a valid PeriodOperator  
) 
 
[implements  DashBoardView]  // valid only  when using a CardView (without Display Field s) and Detail Sec tions 
[show (3 | 4) columns]  // defaul t is 3 columns 
[use 12 column grid] 
[print as dashboard] 
[compress columns ] 
 
[implements Horiz ontalScrolling] 
[freeze first [< RelatedValu e>] column[s]] 
 
[implements Atta chmentList] 
attachment is < FullFieldName > 
[disable download]  
[create action is [<StateName>.]< ActionName >] 
[invoked.<FullFieldName > = <RelatedValue >â¦] 
 
[auto refresh using < RelatedField >] // must be a TimeStamp field  
[raise <AlertType > alert] 
[mouse over text is < Message>] 
[link is <UILink >] 
[is default select] [is default TreeView s elect] 
[show as simple list] 
[show in descending or der] 
[show in relevance order]  
[show totals only] 
[suppress su b-totals] 
[sub-total text is 
<Message>] 
[grand total text is <Message>] 
 
[display negative amounts using parens] 
[display ne gative amounts in < Color>] 
[display amounts in (thousa nds | milli ons)] 
[show in title]  
[disable select in webui ]   // deprecated 
[(multiple | single  | disable) select]   // default is multiple  
 
[no data message is < Message>] 
[description is < Message>] 
[icon is < Icon>] 
[<FormButton >] 
 
[row separator is (horizontal rule | blank line)]  // default is no separator  
[column he ader is <Message >] // valid only when using Display Fields  
[(sort order is  (<SetName> | primary)  // valid only on non-ColumnarView  
 |sort field is < RelatedField >)]â¦ // valid only on ColumnarView  
[is default [descending]] label is <Message
> 
 
[responsive card view is <CardViewName >] // valid only if âcard view isâ¦â is defined  

=== PAGE 72 ===
User Interface Definition  
72 | Configuration Console Reference Guide  [row separator is (horizontal r ule | blank line)] // default is no separator  
[column header is < Message>] // valid only when using Display Fields  
[(sort order is (< SetName> | primary)  // valid only on non-ColumnarView  
 |sort field is < RelatedField >)]â¦ // valid only on ColumnarView  
[is default [des cending]] 
label is <Message > 
 
[Subtotal By]   // default is all fields in sort o rder except last one  
<RelatedFiel d>â¦  // must be field in a sort order  
[page break ] 
 
[csv fields are < ListName >]  // allows for a different list to be used when exporting to csv or excel  
 
// PDF generation / formatting only  
 
[print fields are < ListName >]  // allows for a different li st to be used when printing to pdf  
[print form is <FormName >]  // allows for a form to be used as the print layout  
[total form is <FormName >] 
[when printing detail sections] 
[orientation is (portr ait | landscape) ] 
[font offset is <Number >] 
[show grid lines]  // PDF formatting only  
[suppress header]  
[suppres s footer] 
[first page header is < FormName>] // only prints on first page  
[page header is <FormName >]  // will not print on first page  
[page foo ter is < FormName >] 
 
// End PDF generation / formatting only  
 
[Context Field Values]  
<FullFieldName > value is <RelatedValue >â¦ 
 
[Display Fields] 
( <ListDisplayField > 
| group label is  <Message> 
<ListDisplayField >â¦ 
)â¦ 
 
[Summary Total Fields] 
<FormField >â¦ 
 
[Instance Selection] 
[include [only] deleted records] 
where <Condition > 
 
[Additional F older Items]   // A recor d in a list can be copied to a folder. This allow s for re lated 
<KeyField >â¦   // records to be copied to a folder  as well. 
 
[[<DisplayType>] form is (< FormName > | inline)] // Form to use on an âOpenâ. Primary fo rm is used by  default. 
[when <SimpleCondition >] 
[<FormDefinition >]   // valid on inline Form only  
[drill list is <DrillListName >] 
[create ac tion is [< StateName>.]<ActionName >â¦] 
[open action is ([<StateN ame>.]<ActionName> | restricted )â¦] 
 // by default a list item can al ways be âopene dâ; th e only way to prev ent this is to use the ârestricte dâ keyword 
 
[restrict | enable) action [<StateName>.]<ActionNam e>â¦] // not valid on A uditList 

=== PAGE 73 ===
User Interface Definition  
Configuration Console Reference Guide  | 73 [when <Condition >] 
 
[restrict action (A uditCreate | AuditUpdate)â¦ ] // valid on Au ditList only 
 
[suppress standard toolba r]  // by de fault stan dard toolbar will show unless CalledOutActions are defined  
[disable all ac tions] 
[called out actions only ] 
[disable field options] 
 
[Actions] 
<CalledOutAction >â¦ 
 
[Quick Entry F ields] 
(<FormField> | <FormButton > | <CheckControl> | <FormText > | <ManualRepresentation >)â¦ 
 
[Detail Fields [(Below | On  Side)]]  // default is âBelowâ  
(<FormField> | <FormButto n> | <CheckControl> | <FormText > | <ManualRepresent ation>)â¦ 
[(valid | visible) when <S impleCondition >] 
 
[Detail Se ctions] 
[show si ngle panel tab] 
[print width is <Percent >] 
[(indent  | right align | center | left align)] // default is indent  
( <DetailSect ion> 
| <DetailSe ctionName > is a ( DashBoardView | MultiListView) ) 
[mouse over  text is <Message >] 
[title is < Message>] 
[(valid | visible) when <Si mpleCondition >] 
[show (3 | 4) colu mns]  // default is 3 columns  
[use 12 column grid] 
[print as dashboard]    // valid only on DashBoardView  
[compress columns] 
Detail Sections 
<DetailSection >â¦ 
)â¦ 
 
[Charts] 
[<ChartName> is a (BarChart | PieCha rt | LineChart | GapChart)] 
[title is <Message >] 
[is defaul t]   // one chart must be d esignated as the default  
[chart (list | elements | periods)] // default is chart list  
[show fixed scale [of < RelatedValue>]] 
[(show | hide) le gend]  // default is hide  for PieCh art; other wise def ault is show 
[(show | hide) labels]  // valid only for PieChart, default is show  
[show as donut]   // valid only for  PieChart 
[center fi eld is <RelatedField >] 
[(label is (<RelatedField> | < Message>) | no label)] // default is Field  Label 
[<TextSt yle>â¦] 
[<FieldStyle >â¦] 
[show bars (vertica lly | horizontally)] // valid onl y for BarChart, default is vert ically 
[show elements(side-by-side | stacked)] // valid only for BarChar t, default is side -by-s ide 
[show area]    // valid only for Line Chart 
element name is < Message> 
element value is <RelatedVa lue>â¦ 
[title is < Message>] 
 
[<ChartN ame> is a CalendarCh art] 
[title is < Message>] 

=== PAGE 74 ===
User Interface Definition  
74 | Configuration Console Reference Guide  [is default]   // one chart must be des ignated as the default  
[show date of <RelatedValue >]  // must be a Date, default is current date  
[show (da y | week | month)]  // def ault is month 
[legend state is  <RelatedField >] 
date [range] is < RelatedValue> [to <RelatedValue >] // Date or TimeStamp  
[text is <Message>] 
[mouse over text is <Message >] 
[raise <AlertType> alert when <SimpleCondition >â¦] 
[mouse over text i s <Message >] 
[link is <UILink>] 
 
[<ChartName > is a ScatterChart] 
[title is <Message>] 
[is defau lt] 
[point size is < RelatedValue >] 
[legend state is < RelatedField >] 
x-axis value is <RelatedValue >â¦ 
[title is <Message>] 
[show fixed [integer] scale [of <RelatedValue >]] 
[minimum value is <RelatedValue >] 
y-axis value is <RelatedValue >â¦ 
[title is <Mess age>] 
[show fixed [integer] scale [of <RelatedValue >]] 
[minimum value is < RelatedValue >] 
 
[<ChartName > is an AggregationTable ] 
[title is  <Message>] 
[is default] 
[print form is <FormName >]  // allows for a form to be used as the print la yout 
[total form is <FormName >] 
[when printing detail sect ions] 
[visible when < SimpleCondition >] 
[suppress blank rows] 
[show totals (first |  last)]  // default is âfirstâ  
[Subtotal By] 
<RelatedField >â¦ 
[page bre ak] 
[Dimensions] 
<RelatedField >â¦ 
[is default sort order [descending]] 
[(ascending | descending)] 
[label is <Message>] 
[link is <UILink >] 
[column width is < Number>] 
[caption  is (representative text | < Message>)] 
[dimension valid when < SimpleCondition >] 
  // Allows the dimensio n to be ignored altogether âboth for column display and pivot order. 
  // SimpleConditio n must be based on the incoming context fields of this list rather than a  
  // particular insta nce of this business class. If the value of  SimpleCondition is indeterminate ( it is 
  // not ba sed strictly on valid context fields of this list invocation) the  dimension will be co nsidered invalid. 
Measures  
((sum | avg | min | max) <RelatedFie ld> | instance co unt)â¦ 
[is default sort order [des cending]] 
[label is <Message>] 
[column width is < Number>] 
[link is <UILink >] 
[link is <AggregationDrillLink >.<ListName >] 
[add filter [using (and | or) ] condition ] // default is âandâ  
where <Condition > 

=== PAGE 75 ===
User Interface Definition  
Configuration Console Reference Guide  | 75 [display <Number> decimals] 
[currency symbol is <RelatedValue >]  // default is â leadingâ 
[first line and totals only ] 
[show percent symbol] 
[first line and totals only]  
[display blank when zero]  
[display negative amount us ing (minus | parens)]  
[column visible when < SimpleCondition >] 
  // Allows the entir e column to not be displayed. SimpleCondition must be based on the incoming context 
  // fields of this list rather than a particular instance of this business class. If the value of  
  // SimpleCondition is indeterminate (it is not based strictly on valid  context fields of this list invocation)  
  // the column will not display. 
 
[<ChartNam e> is a QuadrantChart] 
[title is < Message>] 
[row title is <Messa ge>] 
[column title is <Message>] 
[is defa ult] 
[show unplaced elements] // displays a list on the side of all ele ments that did not have a valid quadrant addr ess 
[header is <Message >] 
[implemen ts DragAndDrop ] 
action is [<StateName>.]< ActionName > 
[invoked.< FullFieldName> = [drop  target.]< RelatedValue >â¦] 
rows are <RelatedLink > 
[header is < Message>] // field contex t is target busclass of RelatedLink  
[mouse over text is <Message >] 
columns are <Relate dLink> 
[header is < Message>] // field  context is target busclas s of RelatedLink 
[mouse over text is <Message >] 
quadrants are < RelatedLink> 
[header i s <Messag e>] // field context is tar get busclass of Re latedLink 
[mouse over  text is <Message>] 
quadrant v alue is <RelatedValue > 
row position is <Re latedValue> 
column pos ition is <RelatedVal ue> 
[raise <AlertType > alert wh en <SimpleCondition >â¦] 
[mouse o ver text is <Me ssage>] 
[link is <UILink>] 
 
DetailSection ::=  
[<DetailSectionName >] 
[mouse over  text is <Message>] 
[title is <Message >] 
[implements ManualLoad]  
[message is < Message>] 
[description is < Message>] 
[icon is < Icon>] 
load button text is < Message> 
[(valid | visible) when <SimpleCondition>] 
[(valid | visible) for dimension <DimensionFiel d>] 
[(double width | triple widt h | quad width)] // valid  only on DashBoardView  
[span (1|2|3|4|5|6|7|8|9|10|11|12 ) columns] // valid on ly on DashBoardView with 12 column grid  
[double heig ht]   // valid only on DashBoardView  
[show in co lumn(1|2|3|4|5|6|7|8| 9|10|11|12)]  // valid only on DashBoardView  
[show <#> lines]   // valid only on Lis t in Da shBoardView â default is  5 lines 
(<Form> | <List > | link is <HttpURL> |  card view  is <CardViewNa me>) 
[<FormDefinition >]  // valid only on inline Form  
[allow nested detail sections ] // valid only on a list sect ion 

=== PAGE 76 ===
User Interface Definition  
76 | Configuration Console Reference Guide  [overview navi gation is <NavigationName>] 
[label is <Message >] 
[page break]   // used only whe n pri nting to PDF 
 
ListDisplayField ::= 
(<FormField> | <FormBut ton> | <Che ckControl> | <FormText > | <ManualRepresentation >)â¦ 
[is default  sort order [des cending]]  // valid in C olumnarView only  
[sort order is (<SetName> | primary)] 
[is default [descending]]  
[group by <FullFieldName >] // FullFieldName m ust be a field in SetName  
[Subtotal By]  // default is all fields in sor t order except last one  
<RelatedField >â¦  // must be f ield in sort order  
[page break] 
[column width is  <Number>] 
[total] 
[visible when <SimpleCondition >] 
[column visible wh en <SimpleCondition >] 
[suppress value retrieval when not visible ] 
 // Allows  the entire column to not be display ed. SimpleCondition must be based on the  incoming cont ext 
 // fields of this  list rathe r than any particular instance of this b usiness cl ass. If the valu e of Si mple Condition 
 // is inde terminate (it is not bas ed strictly  on valid context fie lds of this list invocation) the column will not display.  
[link is <Aggregation DrillLink >.<ListName >] 
[suppress when  in dimens ion <DimensionFiel d>] // valid in a Cu beView only  
[disable co py]    // valid for InlineCreate only  
Card  View 
CardViewDefinition ::= 
<CardViewName > is a Ca rdView 
[(show | hide) l abels] // hide labels is the  default 
[raise < AlertTyp e> alert when <SimpleCondition >â¦] 
[mouse over text is <Message>] 
[link is  <UILink>] 
[title is <Messa ge>] 
[no wrap]   // default is to w rap title 
[left column  is ( <RelatedValue > // Related Value mu st be an image 
 | <Icon>  
 | representative image  
 | random background )]  
[foregroun d text is < Message>] 
[display as (portrait | photo | full) image] // default is  âdisp lay as portr aitâ 
[missing image is (<ImageName > | random bac kground)] 
[foreground text  is <Message>] 
main column 
(<FormField> | <FormText > | <ManualRepresent ation>)â¦  
[visible wh en <SimpleCond ition>] 
[button row]     // depreca ted 
<FormButton >â¦ 
[right co lumn] 
[(left | right)  align]  // default is rig ht align 
(<FormField> | <FormText> | <ManualRepresentation >)â¦ 
[visible when <SimpleCondition >] 
[button row]   // depre cated 
<FormButton>â¦ 
[button row] 

=== PAGE 77 ===
User Interface Definition  
Configuration Console Reference Guide  | 77 <FormButton>â¦ 
 
SectionedCardViewDefinition ::= 
<CardViewName > is a SectionedCardView 
[Image Section]  
image is <RelatedValue > 
<FormButton >â¦ 
[use <#> lines]  // default is 4 lines  
[tag is < RelatedValue >] 
[visible when < SimpleCondition >] 
[color of < Color> [when <SimpleCondition >]â¦] 
 
[Title Section]  
title is <Message > 
[use <#> lines] // default is 1 line  
[link is <UILink >]  
 [Row Section]â¦   
// must fit on one row, overflow is not supported  
(<FormField > | <FormText > | <FormButton> | < ManualRepresentation >)â¦ 
 [Fields Section ]â¦ 
(<FormField > | <FormText > | <ManualRepresentation
>)â¦ 
 
[Action Section]  // must fit on one row, overflow is not supported  
[<CheckControl >] // left justified  
[<FormButton >]â¦ // right justified  
Instance Count Chart 
Instance CountChartDefinition  ::= 
<ChartName > is an InstanceCountCha rt 
[title is <Message >]  // defaults to Ch artName 
Chart Fields 
<RelatedValue >â¦ 
[label i s <Message>] 
[link is <UILink >] 
Forms  
FormDefinit ion ::= 
<FormName> is a Form 
[is primary] 
[when <SimpleCondition >] 
[is drill  target] 
[when <SimpleCo ndition>] 
[propagate as a drill] 
[use for (<DisplayType> | actio n [<StateName >.]<ActionName >)]â¦ 
[title is <Message>]  // defaults to Fo rmName 
 
[suppress stan dard toolbar]   // by default standard toolbar will show unles s CalledOu tActions are define d 
[disable all actions]  
[called o ut actions only] 

=== PAGE 78 ===
User Interface Definition  
78 | Configuration Console Reference Guide  [disable field options ] 
 
[print form is <FormName >]  // allows for a different form to be used when printing to pdf  
 
[Actions] 
<CalledOutActio n>â¦ 
[(restrict | enable) action [<StateName>.]< ActionName >â¦] // valid on configuration only  
[when <Condition>] 
( Layout 
<FormLayou t>â¦ 
| Manual Representation  
representation name is <Literal > 
Property Mapping  
<MessageP roperty> = <RelatedValue >â¦ 
) 
Base Definitions  
FormButton : := 
button of ( <Message > [with (<Icon> | <ActionIcon >)] 
[<TextStyle >â¦] 
 | <Icon> 
 | <ActionIcon> 
 ) 
is primary  
[(valid | visible) when < Condition >] 
[(link is < UILink> 
 | sub form is (<FormNam e> | primary | inline ) 
[<FormDefin ition>] // valid on  inline  Form only 
 | <Form>  // button is implicitly invalid if in crea te mode and target is afforded by c urrent instance  
[create action is [< StateName>.]<ActionName >] 
[open action is [< StateName>.] <ActionName >â¦] 
[<FormDefinition >]  // valid  on in line Form only  
 | <List> // button is  implicitly invalid if in create mode and target is afforded by current insta nce 
 | form invoke is <FormInvokeNam e> 
 | action is ([< RelatedLink>.] [<StateName>.]<ActionNa me> | <StandardAction >) 
 | show editor f or <RelatedField > // Can be a Binary Document, Te xt, GroupField, or Array Field 
using mime type  <RelatedValue > 
 | show prev iew of <RelatedField > // Must be a n Image 
 | view < RelatedField>  // Mu st be a Bi naryDocument or Text  
using mime type <RelatedValue > 
 | export <RelatedField >  // Must be a  BinaryDocument or Tex t 
)]â¦ 
[when <SimpleCondition >]  // Must have a conditi on if defining multiple  targets 
[(restrict | enable) action [< StateName >.]<ActionName >â¦] // valid on form invoke only  
[<Label>]   // default is  no label 
[(left align  | center |  right align) ] // left align i s default unless used in a Matri xForm ( cente r is default) 
[(top align | middle  | bottom align)] // top align is  default 
[align as label]   // make button line up in label column  
[indent]  
[display as li nk] 
[raise <AlertType > alert when <Sim pleCondition >â¦] 
[mouse over text  is <Message>] 
[link is <UILink>] 
[hidden] 
[when butt on pressed]  

=== PAGE 79 ===
User Interface Definition  
Configuration Console Reference Guide  | 79 ( validate (t his field | < RelatedField >) // RelatedField must b e a mutabl e field on a form or list  
| <RelatedField > = <RelatedValue >  // Related Field must be a mutable field on a form or lis t 
| refresh  <RelatedField >   // RelatedField must be on a form or list  
| refresh dependent panels 
)â¦ 
[when <SimpleCo ndition>] 
 
FormField :: = 
(<RelatedField > | effective date | reason code | action co mment) 
 // âeffe ctive dat eâ is a Dat e field that will se t the âas ofâ date c ontext  for any ac tion executed fr om the form  this is on  
[(label is (<R elatedFi eld> | <Mess age> | number) | no  label)] // default is Field Label  
[<TextStyle >â¦] 
[mouse over text is <Message >] 
[suppress label] [<FieldStyle
>â¦] 
[align as label]   // ma ke field lin e up in label column â valid only wi th no label 
[form is <FormName >]  // valid on Group and Arr ay fields only 
[indent]  
[display (only | as text) ]  // default to â onlyâ on Summary Form, ListD efinitio n 
[hidden entry]   // same behav ior as Pa ssword field  but no e ncryption 
[allow upd ate]   // default on non- related field  within  a normal Form  
[link is < UILink>]  // valid only when display only  
[compact format  [(only | bu tton of <Message>)]] 
[display as select]  // overrides imple ment s UserD efinedStates 
[select is [<RelatedLink >.]<ListName >] // valid on k ey fie ld only 
[default filt er operator is (contains  | starts with | equals)]  
   // valid only on alpha field ty pes 
[use text area [of <Literal > lines]]  // Use  a text area control to display this field  
[show up to <Literal > characters]  // default is 50  
[keypad is (email | telephone | url)] 
[prompt for (image | video | audi o | docume nt)] 
[compare wi th <RelatedField >]  // this field and RelatedField must be of type LPL  
[time zone is < RelatedField >]  // valid only on a TimeS tamp field; <RelatedFi eld> must be a TimeZone  
[limit to (5|10|15|20|30) minute increments]  // valid only on TimeStamp and Time fields  
[display <Number > decimals] 
[currency symbol is <RelatedValu e>] 
[first li ne and totals only] 
[show percent symbo l] 
[first line and totals only] 
[display nega tive amount u sing (minus | parens)] 
[display as (hijri | gregorian) date] 
[display as [(portrait | photo | full)] image [up to <Literal> lines] ] // default âd isplay  as por traitâ 
[missing image is ( <ImageName > | random background)] 
[foregrou nd text is <Message >]      // default number of lines is  8 
[image i s <FullFieldName >] // RelatedF ield co uld be an Array of im ages or an Array of Grou pFields that contain an image  
[title is <FullFi eldName>] // if Array of GroupFields must specify  image f ield on GroupField and may speci fy title 
[display as switch]  // valid a  Boolean type field  only 
[display as t ag] 
[color of <Color> [when < SimpleCondition >]â¦] 
[display as rating]   // must be a Numeric or Decimal field  
[display as slider ] 
range is from <RelatedValue> to < RelatedValue > 
[step is <RelatedVa lue>] 
[<AlertType> alert range is fr om <RelatedValue > to <RelatedV alue>â¦] 
[mouse over text is <Message>] 
[link is <UILink>] 
[display as  ((meter | th ermometer) chart | progress bar) [up to  <Literal> lines]] 
   // default number of lines  is 8 unless this is a prog ress bar which can hav e 1 lin e 

=== PAGE 80 ===
User Interface Definition  
80 | Configuration Console Reference Guide   [meter range is <RelatedValue >] // not required wh en Percent type field  
[<AlertType > alert range is fro m <RelatedValue> to <RelatedValue >â¦] 
[mouse over text is <Message>] 
[link is <UILink >] 
[raise < AlertType> alert when < SimpleCon dition>â¦] 
[mouse over text is <Message>] 
[show as <StatusIcon > when <SimpleCondition >â¦] 
[mouse ove r text is <Message>] 
[link is <UILink>] 
[display when blank ]  // On a SummaryForm the default is to not display blank fields  
[display zero]   // display â 0â if value i s blank 
[display blan k when zero]  // display blank if value i s zero (some field types default to show zeros)  
[display as duration]  // can be a numeric fi eld in se conds, Time, Date, or TimeStamp  
[display as byte size]  // must b e a numeri c field 
[display using < JavaFormat >] 
[display as [horizontal] radio buttons]  // must be a States or UserDefine dState s field 
[display (date | time | [date and]  hours and minutes) ] // must be a TimeStamp or Time field  
[display with time zone]   // must be a TimeStam p 
[ignore daylight savings time]   // must be a TimeStamp  
[<States >] 
[display as required [when <SimpleCondition >]] 
[hidden]    // valid on config uration only 
[required]    // valid on configuration only  
[initial value is <RelatedValu e>]  // valid on configuratio n only 
[constraint <Condition >]   // valid on configuration only  
[<Message >] 
[depends on  <RelatedField> [, <RelatedField >]â¦]  // RelatedField  must be a mutable field o n a form or list  
derived value is <RelatedValue > 
[when value changed] 
( validate (th is field | <RelatedFiel d>) // RelatedField mu st be a mutable f ield on a form or list  
| <RelatedField> = <RelatedValue >  // RelatedField mu st be a mutable f ield on  a form or list  
| refresh <RelatedFiel d>   // RelatedField  must be on a form or list  
| refresh dependent panels 
)â¦ 
[when <SimpleCo ndition>] 
 
FormLayout ::=  
<LayoutDirectiv e> 
[( <FormField > 
 | <FormButton > 
 | <CheckControl > 
 | <CaptchaControl > 
 | <ManualRepresentation > 
 | <FormText > 
 | <MultiSelectFie ld> 
 | <FormLayout >â¦ 
)]â¦ 
 SectionLa yout ::= 
<SectionDirective
> 
<FormLayout >â¦ 
 SectionDirective  ::= 
section of <SectionNam e> 
[visible when < SimpleCondition >] 
[label is <Message>] 
 ColumnOp tions ::= [grid] [distr ibuted] [independen t] [table] [disable  horizontal alignme nt]
 
 

=== PAGE 81 ===
User Interface Definition  
Configuration Console Reference Guide  | 81 LayoutDirective ::= ( paragraph  [centered] [distributed] 
 | single colu mn [independent] 
 | two co lumn   <ColumnOption s> 
 | three column <ColumnOptions > 
 | four column  <ColumnOptions > 
 | five column  <ColumnOptions > 
 | six column   <ColumnOptions > 
 | seven column <ColumnOption s> 
 | eight column <ColumnOptions > 
 | nine colu mn  <ColumnOption s> 
 | ten column   <ColumnOp tions> 
 | column heade rs  // valid only w ith â<n> column tableâ  
 | row headers  // valid only with â <n> column tableâ  
 | column(1|2|3|4|5|6|7|8|9|10 ) [of <Pe rcent>] 
 | <Header> 
 | (valid | visible) wh en [<BusinessClass >.]<SimpleCondition > 
   // mu st specify <Bus inessClass> w hen in MenuLayout 
 | locale  of <RelatedValue> 
 | display a s text 
 | blank line 
 | page break 
 | footer 
 | large menu 
 | small menu  // default 
 | <Form>  // must be top  level layout directive  
 | <List>  // must be to p level layo ut directiv e 
 ) 
 
MultiSelectField ::= 
multi-select fi eld is <FullFieldNam e>  // valid on key field  or a rray of k ey fields only 
[(label is (<RelatedField > | <Message >) | no label)] // default i s Field  Label 
[<TextStyle >â¦] 
[mouse over text is < Message>] 
[display fiel d is <RelatedField >] 
[select is [<RelatedLink >.]<ListName >]  // valid on key field only  
[use <Literal > lines]    // def ault is 5 lines 
[display as required [wh en <SimpleConditio n>]] 
[hidden]    // valid on configurat ion only 
[required]    // val id on configuration only  
[initial value is <RelatedValue >]  // valid on configuration only  
[constraint <Condition>]   // valid  on config uration only 
[<Message >] 
[when value  changed] 
( validate (this fi eld | <RelatedFiel d>) // RelatedField mu st be a mutable fi eld on a form or list  
| <RelatedField> = <RelatedValue >  // Rel atedField must be a m utable field  on a form or list  
| refresh < RelatedFiel d>   // RelatedField  must be on a form or list  
| refresh d ependent  panels 
)â¦ 
[when <S impleCondition >] 
Actio n 
ActionFormDefinition ::= 
<FormName > is an ActionForm 
[use for <DisplayT ype>] 
action is [<StateName>.]< ActionName >â¦ 

=== PAGE 82 ===
User Interface Definition  
82 | Configuration Console Reference Guide  [on completion navi gate to <Navigation Name>] 
[suppress completion message] 
[when <SimpleCo ndition>] 
 // An  ActionForm is used to format parameters on an action. Can also be used for non-parameter-based actions. 
 // When t his is specif ied and the re are parameters on the ac tion, the field sco ping i s limited to the parameters.  
 // If no param eters are defined on the action and t he ac tion is a Create  or an Update action, the field scoping is the  
 // whole business cla ss. This kind of form only  has a n OK and a Cancel button. OK  runs the specif ied Action and 
 // Cancel retu rns to the previous page.  
 // Multiple actio n can be defin ed as long as the Parame ters are th e same 
[allow non-modal intera ction] 
 // Action Forms by def ault a re modal â th ey block i nteraction on other for ms until the form is dis missed 
[title is  <Message>]  // defaults t o For mName 
Layout 
(<FormLayout > | <SectionLayout >)â¦ 
Composite 
CompositeFormDefinit ion ::= 
<FormName > is a (CompositeFor m | WizardForm)  
[is primary] 
[when <SimpleCondition>] 
[is drill ta rget] 
[when <SimpleCondition >] 
[summary fo rm is <FormName>]  // valid on Wi zardForm only â acts as a âcommi tâ boundary 
[propagate as a drill] 
[use for (<DisplayTyp e> | action [< StateName >.]<ActionName >)]â¦ 
[title is <Me ssage>]  // defaults  to FormName 
[print form is < FormName >]  // allows for a diffe rent form to be used when printing to pdf  
[background is (< RelatedValue > | theme color)] // RelatedValue must be an image  
[span he ader] 
[foreground is (dark | light)]  // default is dark   
[context form is <FormName >]  // allows common âcontextâ fields to be put outside the panelsânot valid on Wizard  
[show context form on left] 
[background is (<RelatedValue > | theme color)]  // RelatedValue must be an image  
[span header] 
[foreground is (dark | light)]   // default is dark  
[implements IndependentFormPanels] 
[implements DashBoa rdView]   // valid on CompositeForm only  
[show context fo rm on top] 
[show (3 | 4) columns ]   // default is 3 columns  
[use 12 column grid ] 
[background is (< RelatedValue > | theme color)]  // RelatedValue must be an image  
[print as dashboard] 
[compress columns] 
[implements Car tView]  // valid on Compos iteFor m only 
cart is <RelatedLink >  // must resolve to an insta nce o f this BusinessClass  
[show panel contr ol on left] 
[show panel navigation] 
[linear when <SimpleCondition >] // similar to  Wizar dForm 
[last pan el navigation is < UILink>] 
[next button title is < Message>] 
[show steps]   // valid on Wiz ardForm only â displays Steps Graphic  
[label is <Message>] 
 
[suppress standard t oolbar]  // by default standard toolbar will s how unless CalledOutActions are def ined 
[disable all actions]  
[called o ut actions only]  

=== PAGE 83 ===
User Interface Definition  
Configuration Console Reference Guide  | 83 [disable field options]  
 
[orientation is (portra it | landscape)] 
[font offse t is <Number>] 
 
[Actions] 
<CalledOutAction >â¦ 
[(restrict | enable) action [< StateName>.]<ActionName >â¦] // valid on configuration  only 
[when (<Condition>)] 
(<CompositeFormPanel > | <CompositeFormMultiListPanel >)â¦ 
 
CompositeFormPanel  ::= 
<PanelName > is a D ashBoardPanelâ¦ 
[show (3 |  4) columns]  // default i s 3 columns 
[use 12 c olumn grid] 
[title is <Message >] 
[icon is < Icon>] 
[(valid | visible) when  <SimpleCondition >] 
[mouse over text is <Me ssage>] 
[background is  (<RelatedValue > | theme color)]  // RelatedValue must be an image  
[print as das hboard] 
[compress columns] 
<CompositeFormPanel >â¦ 
 
<PanelName> is a Panelâ¦ 
[title is <Message>] 
[icon is <Icon>] 
[(valid | v isible) when <SimpleCondition >] 
[mouse ov er text is <Message>] 
[panel header is <Message>] 
[overview naviga tion is <NavigationN ame>]  // valid in a DashBoardView context  only 
[label is <Message>] 
[(double width | triple width | qu ad width)] 
[span (1|2|3|4|5|6|7|8|9|10|11|12 ) columns]  
[double h eight] 
[show in colu mn(1|2|3|4|5|6|7|8|9| 10|11|12)]  
(<FormPanelDefinition > | <FormSubPanelDefinition >) 
 FormPanel Definition ::=  
[panel text is <Message
>] 
[acknowledge action is [< StateNam e>.]<ActionName>] // valid when âs how panel navigationâ is on  
[when <SimpleCondition >] 
[acknowledge  completed when <SimpleCondition >]  // valid w hen âsho w panel navigationâ is on  
[visited acti on is [<StateName >.]<ActionName >]  // valid when âshow panel navigatio nâ is o n 
[in progre ss when <SimpleConditio n>]  // valid wh en âshow panel navigationâ is on  
[complete d when < SimpleCondit ion>]  // valid  when âshow panel navigat ionâ is on 
[raise <AlertType> a lert when <SimpleCondition >â¦] // valid when âshow panel navi gationâ is on 
[mouse over text is <Message>] 
[link is <UILink >] 
(<Form> | <Action> | < List> | <Template> | <Navigation > | <URL>) 
[<FormDefinition >]   // valid on an inline For m only 
save on next     // valid on panel navigation and wizard  
[<FormPanelActions >] 
 
FormSubPanelDefini tion ::= 
[visited action  is [<StateName>.]<ActionName>  // valid when âshow panel navigationâ is on  
[in progress when <SimpleCondition >]  // valid w hen âshow panel navigationâ is on  
[completed whe n <SimpleCondition >]  // valid when âshow panel n avigationâ is on  

=== PAGE 84 ===
User Interface Definition  
84 | Configuration Console Reference Guide  [raise <AlertType > alert when <SimpleCondition >â¦] // valid  when âshow panel nav igation â is on 
[mouse over te xt is <Message>] 
[link is  <UILink>] 
sub panels are <RelatedLink > 
title is < Message> 
[(valid | visible) when <Condition>] 
[mouse over text i s <Message>] 
[display when  <Condition>]â¦  // last panel in set cannot have âdisplay whenâ; all other s must 
<FormPanelDefini tion> 
<FormPanelDefinition > 
 
CompositeFormMultiListPanel  ::= 
<PanelName > is a MultiListPanelâ¦ 
[title is < Message>] 
[(valid | visible) when < Condition >] 
[mouse over text is <Messag e>] 
(<MultiList > | <MultiListLayout >) 
 
MultiList  ::= 
<List>â¦ 
[visible when < SimpleCondition >] 
[panel text is < Message>] 
[show <#> lines]  // defaults to 5 lines  
[<FormPanelActions >] 
 
MultiList Layout ::= 
Layout 
<MultiListLayoutDirective >â¦ 
(<MultiList> | <MultiListLayoutDirective >)â¦ 
 MultiList LayoutDirective ::= 
( single column  
| two column 
| column(1|2)  
| (valid  | visible) when [< BusinessClass >.]<SimpleCondition
> 
  // must specify <BusinessClass> when in MenuLayout 
| locale of < RelatedValue > 
) 
 
FormPanelAction s ::= 
[Special Ac tions]   // allows actions from  the p rimary  busine ss class to be called  from t his context 
<CalledOutAction >â¦ 
 

=== PAGE 85 ===
User Interface Definition  
Configuration Console Reference Guide  | 85 
 
Matrix  
MatrixFor mDefiniti on ::= 
<MatrixForm > is a Ma trixForm 
[title is < Message>]  // defaults to M atrixName 
[display negative amounts using parens] 
[display amounts in (thousands | mi llions)] 
[show in  title] 
 
[row search field is  <FullFieldName >] // FullFieldName fr om the context of the  rowâs bus iness class 
 
[implements PeriodFilter] 
( date is <FullFieldName >  // Ful lFieldName from the  context of the columnâs bus iness class 
| (monthly | weekly | daily) per iod is <F ullFieldName > 
year is < FullFieldName> 
) 
[show (day | week | m onth | quarter | y ear)] // defaults depending on filter type  
[current (date | period) i s <RelatedValue >] // Related Value from  the co ntext of this busines s class 
current year is <RelatedValu e> 
 
context fo rm is (<FormName > | inline) 
[<FormDe finition >]   // valid on inline Fo rm only 
 
Column 
Display Fields 
( <FormField>â¦ 
| <FormButto n>â¦ 
| <CheckControl >â¦ 
| <ManualRepresentation >â¦ 
) 
 
Cell 
[overview navigation is <NavigationName>] 

=== PAGE 86 ===
User Interface Definition  
86 | Configuration Console Reference Guide  [label is < Message>] 
Display Fields 
( <FormField>â¦ 
[(valid | vi sible) when <SimpleCondi tion>] 
| <FormButton>â¦ 
| <CheckContro l>â¦ 
| <ManualRepresentation >â¦ 
) 
 
Detail Fields  
( <FormField >â¦ 
| <FormButton >â¦ 
| <CheckControl>â¦ 
| <ManualRepresentation >â¦ 
) 
 
 
Search 
SearchFormDefi nition ::= 

=== PAGE 87 ===
User Interface Definition  
Configuration Console Reference Guide  | 87 <FormName> is a SearchFo rm 
[title is  <Message>] // defaults to  FormN ame 
Layout 
<FormLayout >â¦ 
Summ ary 
SummaryFormDefinition ::= 
<FormName > is a Su mmaryForm 
[title is < Message>] // defaults to FormName  
[suppress header] 
[suppress footer] 
[disallow show as pdf] 
[orientation is (portrait | landscape)] 
[font offset is <Number >] 
 
[First Page Header] 
( form is <FormName > 
| Layout 
<SummaryLayout >â¦ 
) 
[Page Header]  
[print on  first page] // not valid if Fir st Page Header is defined  
( form is <FormName > 
| Layout 
<SummaryLay out>â¦ 
) 
[Page Footer] 
( form is <FormName > 
| Layout 
<SummaryLayout >â¦ 
) 
Layout 
<SummaryLay out>â¦ 
 
SummaryLayout  ::= 
( <FormFiel d> 
| <FormButton > 
| <CheckControl > 
| <ManualRepresentation > 
| <FormText > 
| form is [<RelatedLink>.]< FormName > // can take only an OTM RelatedL ink 
[<Header>]   // if RelatedLink  is empty t hen header wi ll not display 
| list is [< RelatedLink>.]<ListName > // can tak e only an OTM Re latedLink 
[show grid lines]   
[<Header >]   // if RelatedLink is e mpty then heade r will not display  
| <LayoutDirective> 
[<SummaryLayout >â¦] 
) 

=== PAGE 88 ===
Page Definition  
88 | Configuration Console Reference Guide  Page Definition 
// Page definition files must have an exte nsion  of .page and are found in com/lawson/ forms/< ModuleName> . Page name s exist in th e same name space as 
// BusinessClass names and Busi nessTask names. 
 
// Pag es and CompositeForms ha ve a lot of similarity but also  some significant differences . 
// The sim ilarity is that they a re both made up of panels.  
// The diffe rence is in the ir ontology and their (current) capabili ty. 
 
// A C omposi teForm is defined within th e scope of a BusinessClass, BusinessTas k, or Field,  like a regular Form. Because of this it pres uppos es that al l refer ences 
// are references with in the cont ext o f that Bus iness Class. A Page is defined as an ind ividual enti ty at the same scoping level as a Bu sinessClass, Task, or Field.  
// It is als o made up of panels but each panel must designate i ts ow n particular cont ext. Pages can also have mul ti-pane panels w herea s Compos iteFor ms cannot. 
// This restrict ion is not ontologically r equired; it is just a simplification for now. 
 
Page Structure  ::= 
 
<PageName > is a SplashPage 
[title is < Message>]  // defaults to Pa geName 
[allow anonymous access] 
[show pane l control on lef t] 
 
[Context Form] 
Layout 
<FormLayou t>â¦ // valid  fields are the set of all Context fields defined  on al l Panels an d panes 
 
<PanelName > is a Panelâ¦ // multiple panels would f low on the page inline rather than have tabs  
[title is <Message >] 
[mouse over te xt is <Message >] 
<MenuPanel > 
[show in column(1|2|3|4|5|6|7|8|9|10|11|12)]  
 
<PageName > is a Page 
[title is <Message>]   // defaul ts to PageName 
[allow anonymous ac cess] 
[show panel control on lef t] 
[is report [for < WebAppName >[,<WebAppName >]â¦] 
[category is <Message >] 
[orientation is (portrait |  landscape)]  
[font offset is < Number>] 
 
[cart form is < BusinessClass >.<FormName >] // FormName must be a C omposit eForm that implements CartView  
 
[background is (< ImageName > | theme color)] 
[span header]  
[foreground is (dark | light)] // default is dark  
 
[Context Form]  
[background is (< ImageName> | theme color)] 
[span header]  
[foreground is (dark | light)]  // default is dark  
Layout 
<FormLayout >â¦  // valid fields are the  set of all C ontext fields  defined on all Pane ls and panes 
 
<PanelNam e> is a P anel â¦ 
[title is <Messa ge>] 
[mouse o ver text is <Me ssage>] 
<PanelDefin ition> 
 
<PanelName > is a DashBoardPanel â¦ 

=== PAGE 89 ===
Page Definition  
Configuration Console Reference Guide  | 89 [title is <Message >] 
[mouse over text is  <Message>] 
[show (3 | 4) co lumns]  // default is  3 columns  
[use 12 column grid ] 
[background is (< ImageName > | theme color)] 
[print as dashboard ] 
[compress columns] 
<PaneName > is a Paneâ¦ 
[title is < Message>]  // defaults to P aneName 
[(double widt h | triple width | quad width) ] 
[span (1|2|3|4|5|6|7|8|9|10|11|12) c olumns] 
[double height] 
[show in column (1|2|3|4|5|6|7|8|9|10|11|12)]  
<PanelDefinitio n> 
 
<PanelName > is a MultiP anePanel â¦ 
[title is <Message>] 
[mouse over text is <Message>] 
[vertical split is <Number >/<Number >] // default is  50/50 
pane <PaneNumber >â¦ 
<PanelDefinitio n> 
 
<PanelName > is a MultiListPanel â¦ 
[title is <Message >] 
[mouse over text is < Message>] 
[(valid | visibl e) when <Sim pleCondition >] 
<ListPanel >â¦ 
 
<PanelName> is a Colu mnarPane l â¦ 
[title is <Message >] 
[mouse over text is <Message >] 
[left column ] 
<PanelDefin ition>â¦  // can  have mul tiple panels if each one i s a Fi xedSizeList 
main column 
<PanelDefinitio n>â¦ 
[right colum n] 
<PanelDefinition >â¦ 
 
PaneNumbe r ::= (1 | 2 | 3 | 4)  // 1 is u pper l eft, 2 is lower left, 3 is upper right, 4 is lower right  
 
// The  current metaphor  for Mult iPanePanel panes is that ther e are four possi ble panes: pane 1 is th e upper l eft, pane 2 is the lower left,  
// pane 3 i s the uppe r right a nd pane 4 is the lower right. 
// Pane interaction is accomplished through infer encing  how th e actions relate to each other through the lpl business cl ass action sp ecification. 
 WorkViewPaneNumber  ::= (1 | 2 | 3) 
// Work ViewPan es are co lumnar. Ther e can be only up to 3 W orkViewP anes. 
Panels  
PanelDefinition  ::= 
[(valid | visible) when <SimpleCondition >] 
 // SimpleCondition must start wi th Sessio nKey or actor.contex t.KeyF ield 
 // This is not valid when the Pan el is used in a Multi-Pane Panel  
( <MenuPanel > 
| <ListPanel> 
| <SearchPanel > 
| <URLPanel> 

=== PAGE 90 ===
Page Definition  
90 | Configuration Console Reference Guide  ) 
List 
ListPanel ::= 
business class is  ( <BusinessClass >[(<AsOfOperator > | .<RelatedLink >)] 
 | pane<PaneNumber>.< RelatedLink > 
 | <Agent>.<RelatedLink > 
 ) 
[visible when <SimpleCondition >] // valid on  a MultiListP anel only 
[panel text is <Message>]  // valid on a Mult iListPanel only 
[show <#> lines]   // valid on  a Mul tiListPanel only  
[list is (< ListName > | inline)]  // defaults to primary l ist on re sultant busines s class 
[title is <Message>]  // default s to the  title of <Li stName> 
[display (list | <C hartName >)] // over rides t he list default  
[Row Dimensions]  // valid on a CubeView only,  over rides the CubeV iew Row Dimen sion 
<DimensionField >â¦ 
[overview navigati on is <Na vigationName >] // valid on a  DashBoardPanel only  
[label is < Message>] 
[<ListDefinition >]  // valid on inline List only  
[helper list i s <RelatedLin k>.(<ListName> | primary)â¦] 
  // valid on a r elative  pane only - <Re latedLink > is relative to pane<PaneNumber> 
[valid when <SimpleConditi on>] 
[title is <Message>] 
[<Action >] 
[invoked.<FullFieldName> = <RelatedValue >] 
[Context] 
<FieldName>â¦  // Must be an ontological context field of the busi ness c lass or, if the  list is a CubeView , it can 
  // also be a dimension. Valu es for this c an com e from a contex t session key, an 
  // âactor.age nt(BusClass) .FieldNameâ lookup, or from th e curre nt cont ext before a  
  // Nav igation brings up this page  
[Actions] 
( <CalledOutAction > 
| form is < RelatedLink >.<FormName > // <Rela tedLi nk> can only be one of the c ontext fields 
[<Label>] 
)â¦ 
Menu 
MenuPanel ::= 
Layout 
[footer is <CardViewName >] // must be first ele ment under Layout 
<MenuLayout >â¦ 
 
MenuLayout ::= 
( <FormText > 
| <MenuItem > 
[title is <Messag e>] 
[menu it em name is <MenuItemName >] 
[description is <Message >] 
[(icon is <Icon> | image is < ImageName>)] 
[allow anonymous access] 
| <LayoutDire ctive> 
[<MenuLayout >â¦] 
) 

=== PAGE 91 ===
Page Definition  
Configuration Console Reference Guide  | 91 Search 
SearchPanel :: = 
search form is <BusinessClass >.<FormName > 
[list is (<ListName> | inline)] // default s to primary list on  resulta nt busine ss class 
[<ListDe finition >]  // valid  on inline List only  
[Context]  
<FieldName >â¦ 
[Actions] 
( [action is] [< StateName>.]< ActionName>â¦ 
[<Label>] 
| form is <RelatedLink>.<FormName>â¦ // <R elatedLink> can only be one of the cont ext fields 
[<Label>] 
) 
// A context  field wi ll implicitly be used as a âf ixedâ con text to  any C reate act ion that is e xecuted â if Context of âActorâ i s spe cified 
// and  a Cre ate action is ex ecuted then the Actor field in the busines s class wi ll be populated w ith the A ctor conte xt 
URL 
URLPanel ::= 
url is [(< BusinessC lass> | pane <PaneNumber >).]<HttpURL> 
Work View 
WorkViewPanel ::= 
( business class is  ( <BusinessClass >[.<RelatedLink >] 
 | pane<PaneNumber>.< RelatedLink > 
 | <Agent>.<RelatedLink> 
 ) 
[title is <Message>]  // defaults  to the  title of <ListName>  
[show <#> lines]    // defaults  to 15 lines 
[list is (<ListName> | inline)] // defau lts to primary list o n res ultant busine ss class 
[<ListDefin ition>]  // valid on inline List only  
[sort order is (<SetName> | primary)] 
[Context]  
<FieldNam e>â¦ 
[Instance Selection]  // This is addit ive to the list definition âs (<Li stNam e>) Insta nce Sel ection 
where <Condition> 
| detail fields view of pane<PaneNumber > 
| link display view of p ane<PaneNumbe r> 
) 

=== PAGE 92 ===
Menu Definition  
92 | Configuration Console Reference Guide  
 
Menu D efinitio n 
// Menu  definitions are in the same name space as Busine ssClasses, BusinessTasks,  and Pages. A Menu de finition file h as an extension of .me nu 
 
Menu Structure ::= 
 <MenuName
> is a Menu 
[show as springboard]  // bring up the menu in a sp ringboa rd 
[Search Terms] 
<Message>â¦ 
 
(<MenuItems > | <MenuPanel >) // If a menu is used in a Navigation Bar wi thin a  .wepapp file , then the first menu ite m is âH omeâ 
  // which takes the use r to the â home pageâ in the webapp def inition file.  

=== PAGE 93 ===
Menu Definition  
Configuration Console Reference Guide  | 93 [<MenuName > is a Menu â¦ ] // This allo ws men us to be âin -linedâ within a single menu definition  file 
[Search Terms] 
<Message>â¦ 
<MenuItems > 
 
MenuItems ::= 
Menu Items 
<MenuItemName>â¦ 
[title is <Message >] 
[(icon is <Icon> | image is <ImageName >)] 
[(valid | visible) when <BusinessClass >.<SimpleCondition >] 
<MenuItem > 
[allow anon ymous access] 
[Search Terms] 
<Message>â¦ 
 MenuItem ::=  
( page is  <PageName >[.<PanelName
>] 
| list is <BusinessClass>[<AsOfOperator> ].(<ListName > | primary)  
| form is <BusinessClass >.(<FormName > | primary) 
[actor agent required] 
[create action is [< StateName>.]< ActionName >] 
[open action is  [<StateName>.] <ActionName >â¦] 
[(restrict | enable) action [< StateName >.]<ActionName >â¦] 
| action is [<BusinessClass> | <BusinessTask>].< ActionNam e> 
| link is [<BusinessClass>. ]<UILink> // except Nav igation Name when no BusinessC lass 
| menu is <MenuNam e> 
| image map i s <ImageMapName> 
| webapp is <WebAppName >  // valid internally for  configuration only  
) 
 
// âform i s <BusinessClass>â¦â, âl ist is <B usines sClass >â¦â, âlink is  <Bu sinessClass>â¦ â and âa ction is <Busi nessClass> â¦â will try  to find the m ost rele vant instance of  
// the specif ied <Business Class> in  their  context. They f irst look  for an agent of <Bu siness Class> type that is linke d with the curr ent a ctor. Failing that they  will both fill  
// in their pr imar y key s with actor conte xt va riabl es and sessi on.key va riables and then try to find  an instance based on those keys.  
 

=== PAGE 94 ===
Webservice Interface Definition  
94 | Configuration Console Reference Guide  
 
Webservic e Interface Def inition  
// A Webse rvice Interface definit ion is de fined w ithin a module and has an extension  of .wsi  
// This definitio n is required to e xecut e a W ebservice op eration f rom an lpl definition . 
 
Webservice  Interfac e Structure ::=  
 <WebserviceInterface
> is a WebserviceInterface 
wsdlURL is < Literal>  // for example - http://we bserv ices.amaz on.com/AWSECommer ceService/AW SECommerc eServic e.wsdl 
endpoint is <Literal >  // for exampl e - http:/ /soap.amazon.com/on ca/soap?Ser vice= AWSECo mmerceService  
service is <Literal>   // for exampl e - AWSEC ommerceService  
service style is <WSIServiceStyle > // for example - SO AP_V2 
authentication is <WSIAuthenticatio n> // for ex ampl e - basic 
 <ActionName> is a[n] <WSIActionType
> Action â¦  
[method is <Literal>] 
Input Record namespace is  <Literal> // for example - http://web services.amazon.com/A WSECo mme rceService/2006-11-14  
<FieldName > [<DataDefinition >]â¦ 
[attribute name is <Literal>] 
[element name is < Literal>] 
[required] 
 
Output Record 

=== PAGE 95 ===
Webservice Interface Definition  
Configuration Console Reference Guide  | 95 <FieldName> [<DataDefinition >]â¦ 
[attribute name i s <Literal>] 
[element name is < Literal>] 
[repeating] 
 
WSIServiceStyle ::=  ( RESTGET 
 | RESTPOST 
 | SOAP_V1 
 | SOAP_V2 
 | XMLHTTP 
 | FACEBOOK 
 ) 
 // These  client types will pro cess the interface sync hronously:  
 // - RESTGET uses an HTTP  GET  and retur ns an X ML st ructure. 
 // - RESTP OST uses an HT TP POST to submit an XML request that is  âone â level deep and returns a n XML s tructure. 
 // - SOAP_V1 is the first versi on of SOAP, meaning RPC e ncoding, this t ype o f client will not be supported moving forward. 
 // - SOAP_V2 is the se cond ve rsion of SOAP,  supporting D ocum ent/Literal typ e encoding, the mo st common type of 
 //  encodin g Namespacing is su pported. 
 // - XMLHTTP uses an XML request and receives an X ML res ponse. This t ype of client is to be  used for proprie tary web 
 //  services that do not use SOAP. 
 WSIAuthentication ::= ( basic 
 | token 
 ) 
 // These aut hentication type s pre dict if the clie nt needs to pas s authentication info in the re quest 
 // - bas ic uses an HTTP GET a nd returns an X ML s tructure. 
 // - token uses an HTTP POST  to submit an XML  request th at is âoneâ level deep and re turns  an X ML s tructure . 
 WSIActionType : := ( Create 
// All action s are pro cessed  synchronously  
 | Update 
 | Delete 
 | Find 
 | Instance 
 | List 
 ) 
 

=== PAGE 96 ===
Security Class Definition  
96 | Configuration Console Reference Guide  
 
 
 
Secu rity Class Definition 
Security Class St ructure ::= 
 
<SecurityClassName > is a Securi tyClass 
[extends <SecurityClassName >] 
[description is <Mess age>] 
Access Righ ts 
<PolicyDefinition >â¦ 

=== PAGE 97 ===
Security Class Definition   
Configuration Console Reference Guide  | 97 Struc ture Definitions  
AccessPolic y ::= 
<SecurableObjectSpecification > 
<AccessRu le>â¦ 
 
PolicyDefinition ::=  ( <AccessPolicy> 
 | <OntologicalPol icy> 
 ) 
 OntologicalPoli cy ::= 
<KeyField
> KeyFie ld 
<GrantRule>â¦ 
Base  Defin itions  
ActionKeyword :: = ( all actions  
 | all audit v iews 
 | all creates  // âal l createsâ  assumes âal l inquire sâ by d efault 
 | all deletes  // use âexcep tâ to deny âall inquir iesâ if this is not intended  
 | all inquiries  // separate list of objects  with a comma if on the same lin e 
 | all functions  
 | all updates 
 | all global UI configuration // valid on DataArea Secura bleObjectType only 
 | all security configuration // valid on DataArea SecurableObj ectTy pe only 
 | all personalization  // valid on Dat aArea  Secur ableObjectTyp e only 
 | limited list personalization // valid on DataAre a Secura bleOb jectType only 
 | limited form personalization // valid on DataArea SecurableObjectType only  
 | all scheduled actions // valid on Da taArea SecurableObje ctType only 
 | all actor groups  // valid  on DataArea Secur ableObjec tType only 
 | data menu  // valid on Data Area SecurableObj ectType  only 
 | future data indicator // valid on  DataArea SecurableObjectType only  
 | UpdateEffecti veDatedData 
 | ViewAuditL og 
 | ViewFullAuditLog 
 ) 
 ActionList ::= ( < SecurableAction
> 
 | <ActionKeyword > 
 ) 
 
Access ::= ( is accessible [and attacha ble] 
 | is (not | neithe r) accessible  [nor attachable]) 
 
AccessRule ::= 
<Access> [in [past][,][current][, ][future]] 
<SecurableActionSpecification > 
<Constraint > 
 Constrain t ::= ( unconditionally  
 | when <Condition
> 
 ) 
 ContentSet ::= 
All Fields for <LMObject
> 

=== PAGE 98 ===
Security Class Definition  
98 | Configuration Console Reference Guide  [excluding <FieldNa me [Field]>â¦] // separate list of fields with a  comma if on the sam e line 
 
GrantedObjectLis t ::= ( < SecurableObjectName > <SecurableObje ctType> 
 | all business clas ses 
 | all business tasks 
 ) 
 GrantedObjectSpecifica tion ::= 
( to <GrantedObjectList
>â¦ 
| all ontology 
[excluding <GrantedObjectList>â¦]  // separat e list of object s with a comma i f on the same line 
) 
 GrantRule ::= 
grants access [and attachability] 
<GrantedObjectSpecification
> 
<SecurableA ctionSpecificatio n> 
<Constraint > 
 
LMContainerT ype ::=  ( DataArea 
 | Module 
 ) 
 
LMContentType ::= ( Field 
 | KeyField 
 ) 
 
LMObject ::=  <SecurableObjectName > <LMObjectTy pe> 
 LMObject Type ::=  ( BusinessClass  
 | BusinessTask 
 | Menu 
 | MenuItem 
 | WebApp 
 ) 
 MenuItemSpecificat ion ::= <MenuItemName > MenuItem for < MenuName
> Menu 
 SecurableAction ::= [<SecurableObjectName >.][<StateName>.]<ActionName
> 
 SecurableActionSpecification  ::= 
for <Actio nList
>â¦ 
[excluding <ActionList >â¦]  // separate list of actions with a comma if o n 
the same line 
 SecurableObject Name ::= < Literal
> 
 SecurableObjectSpecif ication ::= ( <SecurableObjectName > <SecurableOb jectType
> 
 | <SecurableObjectType > Type 
 | <ContentSet > 
 | <MenuItem Specification > 
 ) 
 SecurableObjectType ::=  ( <LMObjectType
> 
 | <LMContainerType > 
 | <LMContentType > 
 ) 

=== PAGE 99 ===
Security Class Definition   
Configuration Console Reference Guide  | 99 
 
