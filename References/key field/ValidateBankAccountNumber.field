ValidateBankAccountNumber is a Field

	Representation
		Group Fields
			BankAccountValidationType
			BankAccountNumber

	Transient Fields
		ErrorMessage			is Alpha size 100
	
	Context Fields
		VendorGroup			
		
	Local Fields
		I1						is Numeric size 2
		IbanBankAccount			is Alpha size 35
		IbanConvertedAccount	is Alpha size 68
		IbanLetter				is Alpha size 1
		IbanNumber				is Decimal size 70.2
		ValidateCheckDigit
	 	LocalBankEntity 		is like BankEntity		
	 	
	Derived Fields	 
		IbanRemainder is a DerivedField
			type is Decimal size 70.2
			IbanNumber = IbanConvertedAccount
			return (IbanNumber % 97)

		IbanLetterValue	is a ConditionalField
			type is Alpha size 2
			if (IbanLetter = "A")
				"10"
			else
			if (IbanLetter = "B")
				"11"
			else
			if (IbanLetter = "C")
				"12"
			else
			if (IbanLetter = "D")
				"13"
			else
			if (IbanLetter = "E")
				"14"
			else
			if (IbanLetter = "F")
				"15"
			else
			if (IbanLetter = "G")
				"16"
			else
			if (IbanLetter = "H")
				"17"
			else
			if (IbanLetter = "I")
				"18"
			else
			if (IbanLetter = "J")
				"19"
			else
			if (IbanLetter = "K")
				"20"
			else
			if (IbanLetter = "L")
				"21"
			else
			if (IbanLetter = "M")
				"22"
			else
			if (IbanLetter = "N")
				"23"
			else
			if (IbanLetter = "O")
				"24"
			else
			if (IbanLetter = "P")
				"25"
			else
			if (IbanLetter = "Q")
				"26"
			else
			if (IbanLetter = "R")
				"27"
			else
			if (IbanLetter = "S")
				"28"
			else
			if (IbanLetter = "T")
				"29"
			else
			if (IbanLetter = "U")
				"30"
			else
			if (IbanLetter = "V")
				"31"
			else
			if (IbanLetter = "W")
				"32"
			else
			if (IbanLetter = "X")
				"33"
			else
			if (IbanLetter = "Y")
				"34"
			else
			if (IbanLetter = "Z")
				"35"
			else
				"00"

		MsgIban1 is a MessageField 
			"Account_\NumberFormatInvalidFor_\I\B\A\N"
		MsgIban2 is a MessageField 
			"Account_\NumberInvalidFor_\I\B\A\N"
		MsgCheckDigit is a MessageField
			"InvalidCheckDigitFor<BankAccountValidationType>"		
		MsgNorway is a MessageField
			"AccountNumberMustBe_\11_\digits"
		MsgDenmark is a MessageField
			"AccountMustBe_\1-4_\numbersFollowedBy_\'-'_\followedBy_\1-10_\numbers"
		MsgNZEntity is a MessageField		
			"InvalidBankBranch"
		
		IsValidBankAccount is a DerivedField
			type is Boolean					

			if (BankAccountValidationType.Iban)
				if (BankAccountNumber not matches "^((NO)[0-9A-Z]{13}|(BE|BI)[0-9A-Z]{14}|(DK|FO|FI|GL|NL|SD)[0-9A-Z]{16}|(MK|SI)[0-9A-Z]{17}|(AT|BA|EE|KZ|LT|LU|XK)[0-9A-Z]{18}|(CH|CR|HR|LI|LV)[0-9A-Z]{19}|(BG|BH|DE|GB|GE|IE|ME|RS|VA)[0-9A-Z]{20}|(AE|GI|IL|IQ|SO|TL)[0-9A-Z]{21}|(AD|CZ|DZ|ES|MD|PK|RO|SA|SE|SK|TN|VG)[0-9A-Z]{22}|(AO|CV|GW|LY|MZ|PT|ST|MZ)[0-9A-Z]{23}|(IR|IS|TR|DZ)[0-9A-Z]{24}|(BF|CF|CG|CM|DJ|FR|GA|GQ|GR|IT|KM|MC|MG|MR|SM|TD)[0-9A-Z]{25}|(AL|AZ|BF|BJ|BY|CI|CY|DO|GT|HN|HU|LB|MA|ML|NE|PL|SN|SV|TG)[0-9A-Z]{26}|(BR|EG|PS|QA|UA)[0-9A-Z]{27}|(JO|KW|MU)[0-9A-Z]{28}|(MT|SC)[0-9A-Z]{29}|(LC)[0-9A-Z]{30}|(RU)[0-9A-Z]{31})$")	
					ErrorMessage = MsgIban1 
					return false 

				IbanBankAccount = BankAccountNumber
				initialize IbanConvertedAccount
				I1 = 5
				while (I1 > 0)
					if (IbanBankAccount[I1] entered)
						if (IbanBankAccount[I1] is numeric)
							IbanConvertedAccount += IbanBankAccount[I1]
						else
							IbanLetter			  = IbanBankAccount[I1] 
							IbanConvertedAccount += IbanLetterValue[1]
							IbanConvertedAccount += IbanLetterValue[2]

					I1 += 1

					if (I1 > 35
					or  IbanBankAccount[I1] not entered)
						I1 = 1

					if (I1 = 5)
						I1 = 0

				if (IbanRemainder != 1)
					ErrorMessage = MsgIban2 
					return false 
					
			if (BankAccountValidationType.IbanAndBIC)
				if (BankAccountNumber not matches "^((NO)[0-9A-Z]{13}|(BE|BI)[0-9A-Z]{14}|(DK|FO|FI|GL|NL|SD)[0-9A-Z]{16}|(MK|SI)[0-9A-Z]{17}|(AT|BA|EE|KZ|LT|LU|XK)[0-9A-Z]{18}|(CH|CR|HR|LI|LV)[0-9A-Z]{19}|(BG|BH|DE|GB|GE|IE|ME|RS|VA)[0-9A-Z]{20}|(AE|GI|IL|IQ|SO|TL)[0-9A-Z]{21}|(AD|CZ|DZ|ES|MD|PK|RO|SA|SE|SK|TN|VG)[0-9A-Z]{22}|(AO|CV|GW|LY|MZ|PT|ST|MZ)[0-9A-Z]{23}|(IR|IS|TR|DZ)[0-9A-Z]{24}|(BF|CF|CG|CM|DJ|FR|GA|GQ|GR|IT|KM|MC|MG|MR|SM|TD)[0-9A-Z]{25}|(AL|AZ|BF|BJ|BY|CI|CY|DO|GT|HN|HU|LB|MA|ML|NE|PL|SN|SV|TG)[0-9A-Z]{26}|(BR|EG|PS|QA|UA)[0-9A-Z]{27}|(JO|KW|MU)[0-9A-Z]{28}|(MT|SC)[0-9A-Z]{29}|(LC)[0-9A-Z]{30}|(RU)[0-9A-Z]{31})$")
					ErrorMessage = MsgIban2 
					return false 				

			if (BankAccountValidationType.Bankgiro
			or  BankAccountValidationType.Plusgiro
			or  BankAccountValidationType.SocialSecurityNbr
			or  BankAccountValidationType.Fik71
			or  BankAccountValidationType.Giro04
			or  BankAccountValidationType.Inpayment73
			or  BankAccountValidationType.Inpayment75)
				ValidateCheckDigit.ValidationType 	= "T"
				ValidateCheckDigit.NumberToValidate = BankAccountNumber
				if (not ValidateCheckDigit.IsNumberValid)
					ErrorMessage = MsgCheckDigit 
					return false 		

			if (BankAccountValidationType.AccountNorway)
				if (BankAccountNumber not matches "^\d{11}$")
					ErrorMessage = MsgNorway 
					return false 		

				ValidateCheckDigit.ValidationType 	= "E"
				ValidateCheckDigit.NumberToValidate = BankAccountNumber
				if (not ValidateCheckDigit.IsNumberValid)
					ErrorMessage = MsgCheckDigit 
					return false 		

			if (BankAccountValidationType.NordeaFinland)
				ValidateCheckDigit.ValidationType 	= "A"
				ValidateCheckDigit.NumberToValidate = BankAccountNumber
				if (not ValidateCheckDigit.IsNumberValid)
					ErrorMessage = MsgCheckDigit 
					return false 		

			if (BankAccountValidationType.RegNbrAccount)
				if (BankAccountNumber not matches "^\d{1,4}\-\d{1,10}$")
					ErrorMessage = MsgDenmark 
					return false 		
			
			if (BankAccountValidationType.NewZealand)		
			    LocalBankEntity = BankAccountNumber[1:6]
			    if (BankEntityRel !exist)
			    	ErrorMessage = MsgNZEntity
			        return false
		        else
					ValidateCheckDigit.ValidationType = "E"
					ValidateCheckDigit.NumberToValidate = BankAccountNumber[7:13]
					if (not ValidateCheckDigit.IsNumberValid)
				    	ErrorMessage = MsgCheckDigit 
						return false
			
			return true
	
	Relations
	
		BankEntityRel				
			one-to-one relation to BankEntity
			Field Mapping uses symbolic key
				related.CashManagementGroup 	= VendorGroup.FinanceEnterpriseGroup
			    related.BankEntity  			= LocalBankEntity
	
