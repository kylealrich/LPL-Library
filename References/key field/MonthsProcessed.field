MonthsProcessed is a Field

	Representation
        Group Fields
        	InDeprStartDate					is Date
        	LastPeriodEnd					is Date
        	InYearEndDate					is Date
        	InYearBeginDate					is Date
        	Convention						
        	InServiceDate					is Date
        	InPrevYearEndDate				is Date
        	InPrevYearBeginDate				is Date
        	InLife							is Decimal size 7.3
			InBook							is a Book
			InCompany						is a Company
			MidQuarterMonths				is Decimal size 9.5
			MidQuarterPeriods				is Numeric size 2
			DepreciationPeriod				is Alpha 1
				States
					Current					value is "C"
					Prior					value is "P"        	
	Local Fields	 
		LocalNumberOfMonths					is Numeric size 5
		LocalTriggerMonths	 				is Decimal size 14.10		
		NumberMonths
		LocalDoNothing						is Boolean						 						
		LocalSkip							is Boolean
		LocalAddCurrentYear					is Boolean
		LocalFYMonths						is Decimal size 14.10
		LocalDays							is Numeric size 10
		LocalDays1							is Numeric size 10
		LocalDays2							is Numeric size 10
		LocalDays3							is Numeric size 10
		LocalDays4							is Numeric size 10
		LocalDays5							is Numeric size 10
		LocalDays6							is Numeric size 10
		LocalDays7							is Numeric size 10
		LocalDays8							is Numeric size 10
		LocalDays9							is Numeric size 10
		LocalDays10							is Numeric size 10
		LocalDays11							is Numeric size 10
		LocalDays12							is Numeric size 10
		LocalFirstYearCalcPeriods			is Decimal size 10.5
		LocalEndDate						is Date
		T1									is Numeric size 2
		LocalPeriodsInservice				is Numeric size 2
		LocalDepreciationPeriod				is Numeric size 2
		LocalNumberOfPeriodsPerYear 		is Numeric size 3
		LocalNoOfDaysToDepreciateInYear		is Numeric size 3
		LocalDeprSwitch						is Boolean
		LocalDiff                           is Numeric size 3
		LocalFutureDate                     is Date
		InservicePeriod						is Numeric size 2

	Transient Fields
		
		
    Relations
		CurrentBookCalendarsRel
			one-to-one relation to BookCalendar
			Field Mapping uses Set5
				related.Book							= InBook	
				related.Company							= InCompany
				
		HistoryBookCalendarRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book							= InBook	
				related.Company							= InCompany
			Instance Selection
				where (related.YearBeginDate <= InServiceDate
				and related.YearEndDate >= InServiceDate)
				
		ShortYearBookCalendarsRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set2
				related.Book                        = InBook
                related.Company                     = InCompany
			Instance Selection
				where (related.ShortYear)
	Derived Fields	 
		PeriodInMonth is a DerivedField
			type is Decimal 12.8
			T1 = 1
			if (HistoryBookCalendarRel exists)
				while (HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] <= HistoryBookCalendarRel.YearEndDate)
					LocalEndDate = HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
					if (InServiceDate <= LocalEndDate)
						LocalDepreciationPeriod = HistoryBookCalendarRel.DepreciationPeriodsPerYear
						return HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
					else
						T1 = T1+1
			else
			if(InServiceDate <= CurrentBookCalendarsRel.YearEndDate)
				while (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] <= CurrentBookCalendarsRel.YearEndDate)
					LocalEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
					if (NumberMonths.LocalNumberOfYearsPrior entered)
						LocalEndDate = LocalEndDate - NumberMonths.LocalNumberOfYearsPrior as years
					if (InServiceDate <= LocalEndDate)
						LocalDepreciationPeriod = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
						return CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
					else
						T1 = T1+1

			else
				T1	= 1
				LocalDiff = InYearBeginDate year - CurrentBookCalendarsRel.YearBeginDate year 
				while (T1 <= 54
				and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
					LocalFutureDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
					LocalFutureDate	= LocalFutureDate + (LocalDiff as years)
					if (InServiceDate <= LocalFutureDate)
						LocalDepreciationPeriod = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
						return CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]			
					else
						T1 = T1 + 1
				return
		
		ReturnNumberOfMonthsProcessed is a DerivedField
			type is Decimal 15.11
			initialize ReturnNumberOfMonthsProcessed
			LocalNumberOfPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
			if (LocalDeprSwitch)	
				if (Convention.HalfYear)
					ReturnNumberOfMonthsProcessed = 6
				if (Convention.FullYear)
					ReturnNumberOfMonthsProcessed = 12				
				if (Convention.ModifiedHalfYear)
					ReturnNumberOfMonthsProcessed = 12
					if (InDeprStartDate > InYearEndDate)
						ReturnNumberOfMonthsProcessed = 0
			
			if (Convention.FullMonth
			or Convention.ActualDaysFirstMonth
			or (!LocalDeprSwitch 
			and (Convention.HalfYear 
			or Convention.FullYear 
			or Convention.ModifiedHalfYear)))
				NumberMonths.InServiceDate 		= InServiceDate
				NumberMonths.YearEndDate		= InYearEndDate
				NumberMonths.YearBeginDate		= InYearBeginDate
				NumberMonths.Convention			= Convention
				NumberMonths.LastPeriodEnd		= LastPeriodEnd
				NumberMonths.InBook				= InBook
				NumberMonths.InCompany			= InCompany
				NumberMonths.InPrevYearEndDate	= InPrevYearEndDate
				NumberMonths.LocalDeprSwitch	= LocalDeprSwitch
				NumberMonths.InservicePeriod	= InservicePeriod			
				ReturnNumberOfMonthsProcessed	= NumberMonths.ReturnNumberOfMonths
				if (LocalDeprSwitch
				and Convention.FullMonth)
					if (LocalNumberOfPeriodsPerYear > 12)
						ReturnNumberOfMonthsProcessed   = ((ReturnNumberOfMonthsProcessed * 12) / LocalNumberOfPeriodsPerYear)
				if (NumberMonths.LocalHistoryPeriodCount entered)
					LocalFirstYearCalcPeriods		= NumberMonths.LocalHistoryPeriodCount
				else
				if (NumberMonths.LocalCurrentPeriodCount entered)
					LocalFirstYearCalcPeriods		= NumberMonths.LocalCurrentPeriodCount
				
			if (Convention.ModifiedHalfMonth) 
				NumberMonths.InServiceDate 		= InServiceDate
				NumberMonths.YearEndDate		= InYearEndDate
				NumberMonths.YearBeginDate		= InYearBeginDate
				NumberMonths.Convention			= Convention
				NumberMonths.InBook				= InBook
				NumberMonths.LastPeriodEnd		= LastPeriodEnd
				NumberMonths.InCompany			= InCompany
				NumberMonths.InPrevYearEndDate	= InPrevYearEndDate
				NumberMonths.LocalDeprSwitch	= LocalDeprSwitch
				NumberMonths.InservicePeriod	= InservicePeriod
				LocalTriggerMonths				= NumberMonths.ReturnNumberOfMonths
				if (NumberMonths.LocalHistoryPeriodCount entered)
					LocalFirstYearCalcPeriods	= NumberMonths.LocalHistoryPeriodCount
				else
				if (NumberMonths.LocalCurrentPeriodCount entered)	
					LocalFirstYearCalcPeriods	= NumberMonths.LocalCurrentPeriodCount
				LocalFYMonths					= LocalTriggerMonths
				if (LocalTriggerMonths 		= 12
				and InServiceDate month		= InYearBeginDate month
				and InServiceDate day		< InYearBeginDate day)
					ReturnNumberOfMonthsProcessed	= LocalTriggerMonths
				else
					if (InServiceDate 					< InDeprStartDate)
						if (InServiceDate 				>= InYearBeginDate)
							if ((InDeprStartDate month 	<= InYearEndDate month 
							and InDeprStartDate year  	<  InYearEndDate year
							and !LocalNumberOfPeriodsPerYear > 12)	
							or (InDeprStartDate year  	=  InYearEndDate year
							and InDeprStartDate year	>  LastPeriodEnd year
							and LastPeriodEnd month		=  InYearEndDate month)
							or (InYearEndDate year - LastPeriodEnd year > 1))
								ReturnNumberOfMonthsProcessed = LocalTriggerMonths
							else
								if (LocalNumberOfPeriodsPerYear > 12)	
									if (LocalDeprSwitch)
										LocalFYMonths       -= PeriodInMonth
										LocalTriggerMonths   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
									else
										LocalPeriodsInservice		= PeriodInMonth
										LocalFirstYearCalcPeriods 	= LocalFirstYearCalcPeriods - (LocalPeriodsInservice)
										LocalTriggerMonths 			= LocalFYMonths - ((LocalPeriodsInservice * 12) / LocalDepreciationPeriod)
								else
									LocalTriggerMonths	-= 1	
								
						else
							if (LocalNumberOfPeriodsPerYear > 12)
								if (LocalDeprSwitch)
									LocalFYMonths       -= PeriodInMonth
									LocalTriggerMonths   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
								else
									LocalPeriodsInservice		= PeriodInMonth
									LocalFirstYearCalcPeriods	= LocalFirstYearCalcPeriods - (LocalPeriodsInservice)
									LocalTriggerMonths 			= LocalFYMonths - ((LocalPeriodsInservice * 12) / LocalDepreciationPeriod)
							else
								LocalTriggerMonths		-= 1
							
					if (InServiceDate 					>= InDeprStartDate
					and InDeprStartDate month 			= InYearEndDate month
					and InDeprStartDate year 			= InYearEndDate year
					and InYearEndDate day   			< 15
					and InDeprStartDate					<= InYearEndDate)
						if (LocalNumberOfPeriodsPerYear > 12)
							if (LocalDeprSwitch)
								LocalFYMonths  		-= PeriodInMonth
								LocalTriggerMonths   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
							else
								LocalPeriodsInservice		= PeriodInMonth
								LocalFirstYearCalcPeriods	= LocalFirstYearCalcPeriods - (LocalPeriodsInservice)
								LocalTriggerMonths 			= LocalFYMonths - ((LocalPeriodsInservice * 12) / LocalDepreciationPeriod)
						else
							LocalTriggerMonths			-= 1
					if (LocalDeprSwitch
					and NumberMonths.LocalCurrentPeriodCount entered
					and LocalNumberOfPeriodsPerYear > 12)
						LocalTriggerMonths   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
					ReturnNumberOfMonthsProcessed	= LocalTriggerMonths
					if (ReturnNumberOfMonthsProcessed not entered)
						if (InDeprStartDate month 	= InYearEndDate month
						and InDeprStartDate year  	= InYearEndDate year
						and InYearEndDate day		< 15
						and InDeprStartDate			<= InYearEndDate)
							LocalDoNothing = true
						else
							if(config.ApplyAssetShortYearUpdate = true
							and first ShortYearBookCalendarsRel exists)
								ReturnNumberOfMonthsProcessed = LocalTriggerMonths
							else
								ReturnNumberOfMonthsProcessed = 12
						
			if (Convention.MidMonth)  
				NumberMonths.InServiceDate 		= InServiceDate
				NumberMonths.YearEndDate		= InYearEndDate
				NumberMonths.YearBeginDate		= InYearBeginDate
				NumberMonths.Convention			= Convention
				NumberMonths.LastPeriodEnd		= LastPeriodEnd
				NumberMonths.InPrevYearEndDate	= InPrevYearEndDate	
				NumberMonths.InBook				= InBook
				NumberMonths.InCompany			= InCompany
				NumberMonths.LocalDeprSwitch	= LocalDeprSwitch
				NumberMonths.InservicePeriod	= InservicePeriod
				ReturnNumberOfMonthsProcessed	= NumberMonths.ReturnNumberOfMonths
				if (NumberMonths.LocalHistoryPeriodCount entered)
					LocalFirstYearCalcPeriods	= NumberMonths.LocalHistoryPeriodCount
				if (NumberMonths.LocalCurrentPeriodCount entered)	
					LocalFirstYearCalcPeriods	= NumberMonths.LocalCurrentPeriodCount
				if (LocalNumberOfPeriodsPerYear > 12)
					if (LocalDeprSwitch)
						ReturnNumberOfMonthsProcessed  -= PeriodInMonth / 2
						ReturnNumberOfMonthsProcessed   = ((ReturnNumberOfMonthsProcessed * 12) / LocalNumberOfPeriodsPerYear)
					else
						LocalPeriodsInservice			= PeriodInMonth
						LocalFirstYearCalcPeriods		= LocalFirstYearCalcPeriods - ((LocalPeriodsInservice)/2)
						ReturnNumberOfMonthsProcessed	= ReturnNumberOfMonthsProcessed - (((LocalPeriodsInservice * 12)/LocalDepreciationPeriod)/2)
				else
					ReturnNumberOfMonthsProcessed	= NumberMonths.ReturnNumberOfMonths - .5
				if (ReturnNumberOfMonthsProcessed < 0)
					ReturnNumberOfMonthsProcessed = 0
				
			if (Convention.NextMonth)  
				if (LocalFYMonths = 12
				and LastPeriodEnd month		= InYearBeginDate month
				and LastPeriodEnd day		< InYearBeginDate day)
					ReturnNumberOfMonthsProcessed = LocalFYMonths
				else
					NumberMonths.InServiceDate 		= InServiceDate
					NumberMonths.YearEndDate		= InYearEndDate
					NumberMonths.YearBeginDate		= InYearBeginDate
					NumberMonths.Convention			= Convention
					NumberMonths.LastPeriodEnd		= LastPeriodEnd
					NumberMonths.InBook				= InBook
					NumberMonths.InCompany			= InCompany
					NumberMonths.InPrevYearEndDate	= InPrevYearEndDate
					NumberMonths.LocalDeprSwitch	= LocalDeprSwitch
					NumberMonths.InservicePeriod	= InservicePeriod
					LocalTriggerMonths				= NumberMonths.ReturnNumberOfMonths
					if (NumberMonths.LocalHistoryPeriodCount entered)
						LocalFirstYearCalcPeriods		= NumberMonths.LocalHistoryPeriodCount
					else
					if (NumberMonths.LocalCurrentPeriodCount entered)	
						LocalFirstYearCalcPeriods		= NumberMonths.LocalCurrentPeriodCount
					LocalFYMonths					= LocalTriggerMonths
					if (InServiceDate >= InYearBeginDate)
						if ((InDeprStartDate month		<= InYearEndDate month
						and InDeprStartDate year		<  InYearEndDate year)
						or (InDeprStartDate year		=  InYearEndDate year
						and InDeprStartDate year		>  LastPeriodEnd year
						and LastPeriodEnd month			=  InYearEndDate month)
						or  (InYearEndDate year - LastPeriodEnd year > 1))
							ReturnNumberOfMonthsProcessed = LocalFYMonths
						else
							if (LocalNumberOfPeriodsPerYear > 12)
								if (LocalDeprSwitch)
									LocalFYMonths  -= PeriodInMonth
									ReturnNumberOfMonthsProcessed   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
								else	
									LocalPeriodsInservice			= PeriodInMonth
									LocalFirstYearCalcPeriods 		= LocalFirstYearCalcPeriods - (LocalPeriodsInservice)
									ReturnNumberOfMonthsProcessed 	= LocalFYMonths - ((LocalPeriodsInservice*12)/LocalDepreciationPeriod)
							else
								ReturnNumberOfMonthsProcessed = LocalFYMonths -1
					else
						if (LocalNumberOfPeriodsPerYear > 12)
							if (LocalDeprSwitch)
								LocalFYMonths  -= PeriodInMonth
								ReturnNumberOfMonthsProcessed   = ((LocalFYMonths * 12) / LocalNumberOfPeriodsPerYear)
							else
								LocalPeriodsInservice			= PeriodInMonth
								LocalFirstYearCalcPeriods 		= LocalFirstYearCalcPeriods - (LocalPeriodsInservice)
								ReturnNumberOfMonthsProcessed	= LocalFYMonths - ((LocalPeriodsInservice*12)/LocalDepreciationPeriod)
						else
							ReturnNumberOfMonthsProcessed	= LocalFYMonths -1
				if (ReturnNumberOfMonthsProcessed not entered
				and !Convention.NextMonth)
					if (InDeprStartDate day <= 	InYearEndDate day
					and InYearEndDate day < 15
					and InDeprStartDate year = InYearEndDate year)
						LocalDoNothing = true
					else
						ReturnNumberOfMonthsProcessed = 12
				
			if (Convention.ModifiedHalfYear) 
				if (InDeprStartDate > InYearEndDate)
					initialize ReturnNumberOfMonthsProcessed
					
				
			if (Convention.ActualDays)
				if (InServiceDate > LastPeriodEnd
				and !LocalDeprSwitch)
					return ReturnNumberOfMonthsProcessed
				LocalSkip = false
				if (InPrevYearEndDate entered)
					if (InServiceDate 			<= InYearEndDate
					and InServiceDate			> InPrevYearEndDate)
						LocalSkip = true 
						
				if (LocalSkip = false
				and !LocalDeprSwitch)
					LocalSkip = true						
						
				if (LocalSkip)
					LocalDays	= InPrevYearBeginDate as days
					LocalDays1	= InServiceDate as days
					LocalDays2	= InYearEndDate as days
					LocalDays3	= InPrevYearEndDate as days
					LocalDays4	= LastPeriodEnd as days
					LocalDays5	= InYearBeginDate as days
					LocalDays6	= InDeprStartDate as days
					LocalDays7	= LocalDays4 - LocalDays5  
					LocalDays7	= LocalDays7 /10
					LocalDays7	= LocalDays7 + 1
					LocalDays8	= LocalDays2 - LocalDays5  
					LocalDays8	= LocalDays8 /10
					LocalDays8	= LocalDays8 + 1
					LocalDays9	= LocalDays2 - LocalDays1  
					LocalDays9	= LocalDays9 /10
					LocalDays9	= LocalDays9 + 1
					LocalDays10	= LocalDays4 - LocalDays1  
					LocalDays10	= LocalDays10 /10
					LocalDays10	= LocalDays10 + 1
					LocalDays11	= LocalDays3 - LocalDays1  
					LocalDays11	= LocalDays11 /10
					LocalDays11	= LocalDays11 + 1
					LocalDays12 = LocalDays3 - LocalDays   
					LocalDays12	= LocalDays12 /10
					LocalDays12	= LocalDays12 + 1
					if (DepreciationPeriod.Current)
						if (InServiceDate >= InYearBeginDate) 
							ReturnNumberOfMonthsProcessed = LocalDays10 / LocalDays9
						else
							ReturnNumberOfMonthsProcessed = LocalDays7 /LocalDays8 
					else
						if (DepreciationPeriod.Prior)
							ReturnNumberOfMonthsProcessed = LocalDays11 / LocalDays12
						else
							if (InServiceDate >= InYearBeginDate)
								ReturnNumberOfMonthsProcessed = LocalDays10 / LocalDays8
								ReturnNumberOfMonthsProcessed = ReturnNumberOfMonthsProcessed * 12
							else
								ReturnNumberOfMonthsProcessed = LocalDays10 / 365
								ReturnNumberOfMonthsProcessed = ReturnNumberOfMonthsProcessed * 12

				if (LocalDeprSwitch)
					LocalNoOfDaysToDepreciateInYear = InYearEndDate - InServiceDate
					LocalNoOfDaysToDepreciateInYear += 1
					if (InPrevYearEndDate entered)
						LocalDays = InYearEndDate - InPrevYearEndDate
						ReturnNumberOfMonthsProcessed = LocalNoOfDaysToDepreciateInYear / 10
						ReturnNumberOfMonthsProcessed *= 12
						ReturnNumberOfMonthsProcessed *= 10
						if (LocalDays > 0)
							ReturnNumberOfMonthsProcessed /= LocalDays
					else
						ReturnNumberOfMonthsProcessed = LocalNoOfDaysToDepreciateInYear + 1
						ReturnNumberOfMonthsProcessed *= 12
						ReturnNumberOfMonthsProcessed /= 365

			if (Convention.MidQuarter)
				initialize MidQuarterMonths
				initialize MidQuarterPeriods
				initialize LocalAddCurrentYear
				initialize LocalNumberOfMonths
				if (LocalDeprSwitch)
					if (InDeprStartDate month  	= 	LastPeriodEnd month)
						if (InDeprStartDate day	> 	LastPeriodEnd day)
							LocalFYMonths	= 11
						else
							LocalFYMonths	= 2
					else
						if (InDeprStartDate month  	> 	LastPeriodEnd month)	
							LocalFYMonths = 12 - (InDeprStartDate month - LastPeriodEnd month)
						else
							if (InDeprStartDate month  	< 	LastPeriodEnd month)
								LocalFYMonths = LastPeriodEnd month - InDeprStartDate month
					if (LastPeriodEnd day < 15
					and InDeprStartDate month  	!= 	LastPeriodEnd month)
						LocalFYMonths -= 1
					if (LocalFYMonths  < 3)
						ReturnNumberOfMonthsProcessed = 1.5
					else
					if (LocalFYMonths  < 6)
						ReturnNumberOfMonthsProcessed = 4.5
					else
					if (LocalFYMonths  < 9)
						ReturnNumberOfMonthsProcessed = 7.5
					else
					if (LocalFYMonths  < 12)
						ReturnNumberOfMonthsProcessed = 10.5						
				else
					if (LocalNumberOfPeriodsPerYear > 12
					and InServiceDate >= CurrentBookCalendarsRel.YearBeginDate)
						if (InServiceDate entered)
							NumberMonths.InServiceDate 	= InServiceDate
						else
							if (InDeprStartDate entered)
								NumberMonths.InServiceDate 	= InDeprStartDate
						NumberMonths.YearEndDate		= InYearEndDate
						NumberMonths.YearBeginDate		= InYearBeginDate
						NumberMonths.Convention			= Convention
						NumberMonths.LastPeriodEnd		= LastPeriodEnd
						NumberMonths.InBook				= InBook
						NumberMonths.InCompany			= InCompany
						NumberMonths.InPrevYearEndDate	= InPrevYearEndDate
						LocalFYMonths					= NumberMonths.ReturnNumberOfMonths
						MidQuarterMonths				= LocalFYMonths
						MidQuarterPeriods				= MidQuarterMonths
						if (NumberMonths.LocalHistoryPeriodCount entered)
							LocalFirstYearCalcPeriods	= NumberMonths.LocalHistoryPeriodCount
						else
						if (NumberMonths.LocalCurrentPeriodCount entered)	
							LocalFirstYearCalcPeriods	= NumberMonths.LocalCurrentPeriodCount
					else
						if (InDeprStartDate month  	= 	LastPeriodEnd month
						and InDeprStartDate year  	= 	LastPeriodEnd year)
							if (InDeprStartDate day	> 	LastPeriodEnd day)
								LocalFYMonths	= 11
							else
								LocalFYMonths	= 2
								MidQuarterMonths = 1
						else
							if (InYearEndDate	= LastPeriodEnd)
								if (LocalNumberOfPeriodsPerYear > 12)
									if (InDeprStartDate month  >=  LastPeriodEnd month)
										LocalFYMonths = 12 - (InDeprStartDate month - LastPeriodEnd month)
								if (InDeprStartDate month  >  LastPeriodEnd month)
									LocalFYMonths = 12 - (InDeprStartDate month - LastPeriodEnd month)
								else
									if (InDeprStartDate month  <  LastPeriodEnd month)
										LocalFYMonths		= LastPeriodEnd month - InDeprStartDate month
										LocalFYMonths		+= 1
										MidQuarterMonths	= LocalFYMonths
										MidQuarterPeriods	= MidQuarterMonths
							else
								if (InServiceDate entered)
									NumberMonths.InServiceDate 	= InServiceDate
								else
									if (InDeprStartDate entered)
										NumberMonths.InServiceDate 	= InDeprStartDate
								NumberMonths.YearEndDate		= InYearEndDate
								NumberMonths.YearBeginDate		= InYearBeginDate
								NumberMonths.Convention			= Convention
								NumberMonths.LastPeriodEnd		= LastPeriodEnd
								NumberMonths.InBook				= InBook
								NumberMonths.InCompany			= InCompany
								NumberMonths.InPrevYearEndDate	= InPrevYearEndDate
								LocalFYMonths					= NumberMonths.ReturnNumberOfMonths
						if (InYearEndDate day < 15
						and InDeprStartDate month != LastPeriodEnd month)
							LocalFYMonths -= 1
						if (MidQuarterMonths not entered)
							MidQuarterMonths	= LocalFYMonths
							MidQuarterPeriods	= MidQuarterMonths + 1
					if (LocalFYMonths  <= 3)
						ReturnNumberOfMonthsProcessed = 1.5
					else
					if (LocalFYMonths  <= 6)
						ReturnNumberOfMonthsProcessed = 4.5
					else
					if (LocalFYMonths  <= 9)
						ReturnNumberOfMonthsProcessed = 7.5
					else
					if (LocalFYMonths  <= 12)
						ReturnNumberOfMonthsProcessed = 10.5
			if (LocalDeprSwitch 
			and ((ReturnNumberOfMonthsProcessed * 100000000000) > 5))
				round ReturnNumberOfMonthsProcessed down to nearest 0.0000000001
			return ReturnNumberOfMonthsProcessed
