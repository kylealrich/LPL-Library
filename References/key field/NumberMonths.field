NumberMonths is a Field

	Representation
        Group Fields
        	InServiceDate					is Date
        	YearEndDate						is Date
        	YearBeginDate					is Date
        	Convention						is AlphaUpper size 2
			LastPeriodEnd					is Date 
			InBook							is a Book
			InCompany						is a Company
			InPrevYearEndDate				is Date
        	
	Local Fields	 
		NumberOfMonths						is Decimal size 7.3
		LocalStartPeriod					is Decimal size 7.3
		LocalInServicePeriod				is Numeric size 4
		LocalNumberOfYearsPrior				is Numeric size 4
		LocalNumberOfPeriods				is Decimal size 7.3
		LocalMonthEndCount					is Decimal size 7.3
		LocalPeriodsToAdd					is Numeric size 4
		LocalYearsToAdd						is Numeric size 4
		LocalInServiceDateNotFound			is Boolean
		LocalFoundStart						is Boolean
		LocalFoundEnd						is Boolean
		LocalStartCount						is Numeric size 4
		LocalEndCount						is Numeric size 4
		LocalYearCount						is Numeric size 4
		LocalMonthCount						is Numeric size 4
		LocalStopCount						is Boolean
		LocalNonSequentialMonths  			is AlphaUpper 1
		T1									is Numeric size 2
		S1									is Numeric size 2
		G1									is Numeric size 2
		LocalMonthEndDate					is Date
		LocalMonthEndMonth					is Numeric size 4
		LocalNextMonthEndMonth				is Numeric size 4
		LocalCurrentPeriodCount				is Decimal size 7.3
		LocalHistoryPeriodCount				is Decimal size 7.3
		LocalHistoryDate					is Date
		LocalPriorEndDate					is Date
		LocalArrayCount						is Numeric size 3
		LocalNumberOfPeriodsPerYear	    	is Numeric size 3
		LocalDepreciationPeriodsPerYear		is Numeric size 3
		LocalFutureEndDate                  is Date
		LocalFutureDate                     is Date
		LocalDiff                           is Numeric size 2
		LocalDeprSwitch						is Boolean
		InservicePeriod						is Numeric size 2
		LocalInServiceDate					is Date
		LocalYear							is Date
		LocalCurrentYearBeginDate           is Date
    	LocalCurrentYearEndDate 			is Date
		LocalCurrentPriorYearEndDate		is Date
		FirstCalendarYearBeginDate			is Date
		LocalYearDiff						is Numeric size 9
		LocalYears							is Numeric size 2
		LocalAllDepreciationPeriodsPerYear	is Decimal size 7.3
		LocalHistoryDepreciationCount		is Numeric size 4
		LocalBeginDate						is Date

	Transient Fields
		
		
    Relations

		CurrentBookCalendarsRel
			one-to-one relation to BookCalendar
			Field Mapping uses Set5
				related.Book							= InBook	
				related.Company							= InCompany
		
		HistoryBookCalendarRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book							= InBook	
				related.Company							= InCompany
			Instance Selection
				where (related.YearBeginDate <= InServiceDate
				and related.YearEndDate >= InServiceDate)
		
		LocalHistoryBookCalendarRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book							= InBook	
				related.Company							= InCompany
			Instance Selection
				where (related.YearEndDate = LocalHistoryDate)

		CurrentYearEndDateHistoryCalRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set3
                related.CalendarStatus				= "H"
				related.Book                        = InBook
                related.Company                     = InCompany
            Instance Selection
                where (related.YearBeginDate > InServiceDate
                and related.YearEndDate     <= LocalCurrentYearEndDate)

		PriorYearEndDateHistoryCalRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set3
                related.CalendarStatus				= "H"
               	related.Book                        = InBook
                related.Company                     = InCompany
            Instance Selection
                where (related.YearBeginDate > LocalInServiceDate
                and related.YearEndDate     <= LocalCurrentPriorYearEndDate)

		ShortYearBookCalendarsRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set2
				related.Book                        = InBook
                related.Company                     = InCompany
			Instance Selection
				where (related.ShortYear)

	Derived Fields	 
		ReturnNumberOfMonths is a DerivedField
			type is Decimal 9.3
			initialize NumberOfMonths
			initialize LocalCurrentPeriodCount
			initialize LocalHistoryPeriodCount
			if (InServiceDate > LastPeriodEnd)
				return NumberOfMonths

			if (!LocalDeprSwitch)
				LocalNonSequentialMonths	= NonSequentialMonths
				if (LocalNonSequentialMonths = "Y")
					LocalStartPeriod		= FindInServiceDate
					ReturnNumberOfMonths 	= LocalStartPeriod
					return ReturnNumberOfMonths
		
			if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
				if (LocalDeprSwitch
				and	InservicePeriod entered)
					T1	= InservicePeriod
					LocalCurrentPeriodCount = 0
					while T1 <= 13
						LocalCurrentPeriodCount	+= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
						if (YearEndDate <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1])
							return LocalCurrentPeriodCount
						T1 += 1
						
				LocalStartPeriod		= FindInServiceDate
				ReturnNumberOfMonths 	= LocalStartPeriod
				return ReturnNumberOfMonths
			
			if (InServiceDate year < InPrevYearEndDate year)
				LocalStopCount	= false
				LocalMonthCount	= InServiceDate month
				LocalYearCount	= InServiceDate year
				LocalYearCount	= LocalYearCount + 1
				NumberOfMonths	= 12 - LocalMonthCount
				NumberOfMonths	= NumberOfMonths + 1
				while (!LocalStopCount)
					if (LocalYearCount < InPrevYearEndDate year)
						NumberOfMonths	= NumberOfMonths + 12
						LocalYearCount	= LocalYearCount + 1
					else
						if (LocalYearCount	= InPrevYearEndDate year)
							if (YearBeginDate year = YearEndDate year
							or LocalYearCount != LastPeriodEnd year)
								NumberOfMonths	= NumberOfMonths + 12
							LocalYearCount	= LocalYearCount + 1
						else
							if (LastPeriodEnd > InPrevYearEndDate)
								NumberOfMonths	= NumberOfMonths + LastPeriodEnd month
							LocalStopCount = true
				return NumberOfMonths


			if (YearBeginDate year != YearEndDate year)
				LocalFoundStart = false
				LocalFoundEnd	= false
				initialize LocalStartCount
				initialize LocalEndCount
				initialize LocalMonthCount
				if (InServiceDate >= YearBeginDate)
					if (InServiceDate year 	= LastPeriodEnd year)
						LocalMonthCount 	= LastPeriodEnd month - InServiceDate month
						LocalMonthCount 	+= 1
					else
						LocalMonthCount 	= 12 - InServiceDate month
						LocalMonthCount 	+= 1
						LocalYearCount  	= InServiceDate year
						LocalYearCount  	+= 1
						if (LocalYearCount = LastPeriodEnd year)
							LocalMonthCount = LocalMonthCount + LastPeriodEnd month
						else
						 	while (!LocalYearCount 	= LastPeriodEnd year)
						 		LocalMonthCount		+= 12
						 		LocalYearCount  	+= 1
							LocalMonthCount 		= LocalMonthCount + LastPeriodEnd month
					return LocalMonthCount
				else
					if (InServiceDate year 	= LastPeriodEnd year)
						LocalMonthCount 	= LastPeriodEnd month - InServiceDate month
						LocalMonthCount 	+= 1
					else
						LocalMonthCount		= 12 - InServiceDate month
						LocalMonthCount 	+= 1
						LocalMonthCount 	= LocalMonthCount + LastPeriodEnd month
					return LocalMonthCount							

			else
				if ((InServiceDate year  <  YearEndDate year)
				and (InServiceDate month =  YearEndDate month)
				and (InServiceDate		>= YearBeginDate))
					NumberOfMonths = 12
				else
					if (((YearEndDate year - InServiceDate year) > 1)
					and (InServiceDate >= YearBeginDate))
						NumberOfMonths = 12
						if ((YearEndDate day < 15)
						and (InServiceDate month != YearEndDate month))
							NumberOfMonths += 1
					else
						if ((InServiceDate month < YearEndDate month)
						and (InServiceDate year	< YearEndDate year)
						and (InServiceDate >= YearBeginDate))
							NumberOfMonths 	= 12
							if (YearEndDate day < 15)
								NumberOfMonths += 1
						else
							if (InServiceDate month <= YearEndDate month	
							and InServiceDate year	< YearEndDate year)
								NumberOfMonths	= YearEndDate month
								NumberOfMonths 	-= 	InServiceDate month
								if (LastPeriodEnd > YearBeginDate)
									NumberOfMonths 	+= 	LastPeriodEnd month
								NumberOfMonths	+= 	1
							else
								if (InServiceDate month < YearEndDate month
								and InServiceDate year	= YearEndDate year)  
									LocalNonSequentialMonths	= NonSequentialMonths
									
									if (!LocalDeprSwitch)
										if (LocalNonSequentialMonths = "N")
											NumberOfMonths 	= 	LastPeriodEnd month	  
											NumberOfMonths 	-= 	InServiceDate month 
											NumberOfMonths	+= 	1
										else
											LocalStartPeriod		= FindInServiceDate
											ReturnNumberOfMonths 	= LocalStartPeriod
											return ReturnNumberOfMonths
									else	
										if (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[1] entered
										and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[1] > InServiceDate
										and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1] = 12)
											NumberOfMonths = 12 
										else
											NumberOfMonths = (YearEndDate month - InServiceDate month)
											NumberOfMonths += 1
								else
									if (InServiceDate month > YearEndDate month)
										NumberOfMonths =  13 
										NumberOfMonths -= (InServiceDate month - YearEndDate month)
									else
										if ((Convention 			= "MM")
										and (InServiceDate 			>= YearBeginDate)
										and (InServiceDate 			>= YearEndDate)
										and (InServiceDate month 	= YearEndDate month)
										and (InServiceDate day 		> YearEndDate day))
											NumberOfMonths = 1
										else
											if (InServiceDate month 	= YearEndDate month)
												if (InServiceDate day 	> YearEndDate day)
													NumberOfMonths = 12
												else
													if (!LocalDeprSwitch)
														NumberOfMonths = 1
													else
														if (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[1] entered
														and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[1] > InServiceDate
														and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1] = 12)
															NumberOfMonths = 12 
														else
															NumberOfMonths = 1
										if (!LocalDeprSwitch)
											if ((YearEndDate day		< 15)
											and (InServiceDate month != YearEndDate month))
												NumberOfMonths -= 1
			if (LocalDeprSwitch)
				if ((YearEndDate day		< 15)
				and (InServiceDate month != YearEndDate month))
					NumberOfMonths -= 1
			ReturnNumberOfMonths = NumberOfMonths
			return ReturnNumberOfMonths

			
		NonSequentialMonths is a DerivedField
			type is AlphaUpper 1
			T1	= 1
			while T1 < 13
				LocalMonthEndDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
				LocalMonthEndMonth	= LocalMonthEndDate month
				if (!T1 = 1)
					if (!LocalMonthEndMonth = LocalNextMonthEndMonth)
						T1 = 13
						return "Y"					
				LocalNextMonthEndMonth	= LocalMonthEndMonth + 1
				T1 = T1 + 1
			return "N"
						
		FindInServiceDate is a DerivedField  
			type is Decimal size 7.3
			initialize LocalInServicePeriod
			initialize LocalNumberOfYearsPrior
			initialize LocalNumberOfPeriods
			if (InServiceDate > LastPeriodEnd)  
				LocalNumberOfPeriods = 0
				return LocalNumberOfPeriods

			if (InServiceDate >= CurrentBookCalendarsRel.YearBeginDate
			and InServiceDate <= CurrentBookCalendarsRel.YearEndDate) 
				T1	= 1
				while (T1 <= 54
				and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
					if (InServiceDate <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1])
						LocalInServicePeriod 	= T1  
						NumberOfMonths 			= FindLastPeriodEnd
						LocalNumberOfPeriods 	= NumberOfMonths
						return LocalNumberOfPeriods
					else
						T1 = T1 + 1
				return
			else
			if(InServiceDate > CurrentBookCalendarsRel.YearEndDate) 
				T1	= 1
				LocalDiff = YearBeginDate year - CurrentBookCalendarsRel.YearBeginDate year 
				while (T1 <= 54
				and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
					LocalFutureDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
					LocalFutureDate	= LocalFutureDate + (LocalDiff as years)
					if (InServiceDate <= LocalFutureDate)
						NumberOfMonths 			= FindLastPeriodEnd
						LocalNumberOfPeriods 	= NumberOfMonths
						return LocalNumberOfPeriods
					else
						T1 = T1 + 1
				return
			else
				LocalInServiceDateNotFound 	= true
				LocalHistoryDate			= CurrentBookCalendarsRel.YearBeginDate
				LocalHistoryDate 			= LocalHistoryDate - 1 day
				constraint (InServiceDate entered
				and		LocalHistoryDate entered)
					"DepreciationDateOrImpairmentDateIsRequired"
				while LocalInServiceDateNotFound
					if (config.ApplyAssetShortYearUpdate = true
					and first ShortYearBookCalendarsRel exists)
						if(LocalHistoryBookCalendarRel exists)
							LocalHistoryDate    = LocalHistoryBookCalendarRel.YearBeginDate - 1 day
						else
							LocalHistoryDate		= LocalHistoryDate - 1 year
					else
						if(LocalHistoryBookCalendarRel exists
						and !LocalHistoryBookCalendarRel.ShortYear)
							LocalHistoryDate    = LocalHistoryBookCalendarRel.YearBeginDate - 1 day
						else
							LocalHistoryDate		= LocalHistoryDate - 1 year
					LocalNumberOfYearsPrior	+= 1
					if (InServiceDate > LocalHistoryDate)
						LocalInServiceDateNotFound = false


				if(config.ApplyAssetShortYearUpdate = true
				and first ShortYearBookCalendarsRel exists)
					if (HistoryBookCalendarRel exists)
						S1 = HistoryBookCalendarRel.NumberOfPeriods
						while (S1 > 0)
							G1	= S1 - 1
							LocalHistoryDate 	= HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[G1]
							LocalHistoryDate	= LocalHistoryDate + 1 day
							if (InServiceDate 	>= LocalHistoryDate)
								NumberOfMonths 	= FindLastPeriodEnd 
								LocalNumberOfPeriods 	= NumberOfMonths
								return LocalNumberOfPeriods						
							else
								S1	= S1 - 1
				else
					S1 = CurrentBookCalendarsRel.NumberOfPeriods
					while S1 > 0
						G1	= S1 - 1
						LocalHistoryDate 	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[G1]
						LocalHistoryDate	= LocalHistoryDate + 1 day
						LocalHistoryDate	= LocalHistoryDate - LocalNumberOfYearsPrior as years
						if (HistoryBookCalendarRel exists
						and HistoryBookCalendarRel.DepreciationPeriodsPerYear > 12)
							LocalHistoryDate 	= HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[G1]
							LocalHistoryDate	= LocalHistoryDate + 1 day
						if (InServiceDate 	>= LocalHistoryDate)
							NumberOfMonths 	= FindLastPeriodEnd 
							LocalNumberOfPeriods 	= NumberOfMonths
							return LocalNumberOfPeriods						
						else
							S1	= S1 - 1
				return 
				
		FindLastPeriodEnd is a DerivedField  
			type is Decimal size 7.3
			initialize LocalMonthEndCount	
			if (InServiceDate >= CurrentBookCalendarsRel.YearBeginDate
			and InServiceDate <= CurrentBookCalendarsRel.YearEndDate)  
				LocalMonthEndCount = 1
				LocalCurrentPeriodCount = 0
				LocalHistoryPeriodCount = 0
				T1	= LocalInServicePeriod 
				while (T1 <= 54
				and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
					LocalCurrentPeriodCount = LocalCurrentPeriodCount + CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
					if (LastPeriodEnd <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1])
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalMonthEndCount = ((LocalCurrentPeriodCount * 12) / CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						return LocalMonthEndCount
					T1 = T1 + 1
					LocalMonthEndCount += 1
				return
			else
			if (InServiceDate > CurrentBookCalendarsRel.YearEndDate)
				LocalDiff = YearBeginDate year - CurrentBookCalendarsRel.YearBeginDate year
				LocalFutureEndDate = YearEndDate
				LocalMonthEndCount = 1
				while (T1 <= 54
				and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)	
					LocalFutureDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
					LocalFutureDate	= LocalFutureDate + (LocalDiff as years)
					LocalCurrentPeriodCount = LocalCurrentPeriodCount + CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
					if (LastPeriodEnd <= LocalFutureDate)
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalMonthEndCount = ((LocalCurrentPeriodCount * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						return LocalMonthEndCount
					else
						T1	= T1 + 1
						LocalMonthEndCount += 1
					
				return 

			else 
				LocalMonthEndCount = 0
				LocalCurrentPeriodCount = 0
				LocalHistoryPeriodCount = 0
				T1 = S1
				if (HistoryBookCalendarRel exists
				and HistoryBookCalendarRel.DepreciationPeriodsPerYear > 12)
					while (T1 <= 54
					and HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalHistoryDate	= HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						LocalMonthEndCount = LocalMonthEndCount + HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
						if (LastPeriodEnd <= LocalHistoryDate)
							LocalHistoryPeriodCount = LocalMonthEndCount
							LocalMonthEndCount = ((LocalMonthEndCount * 12)/HistoryBookCalendarRel.DepreciationPeriodsPerYear)
							return LocalMonthEndCount 
						else
							T1	= T1 + 1
					LocalMonthEndCount = ((LocalMonthEndCount * 12)/HistoryBookCalendarRel.DepreciationPeriodsPerYear)
				else
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
					LocalPriorEndDate = CurrentBookCalendarsRel.YearBeginDate - LocalNumberOfYearsPrior as years - 1 day
					LocalPriorEndDate = LocalPriorEndDate + 1 year
					while (T1 <= 54
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalHistoryDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						LocalHistoryDate	= LocalHistoryDate - LocalNumberOfYearsPrior as years
						LocalMonthEndCount = LocalMonthEndCount + CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
						if (LastPeriodEnd <= LocalHistoryDate
						or (LocalMonthEndCount = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
						and	LastPeriodEnd <= LocalPriorEndDate))
							LocalHistoryPeriodCount = LocalMonthEndCount
							LocalMonthEndCount = ((LocalMonthEndCount * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
							return LocalMonthEndCount 
						else
							T1	= T1 + 1
					LocalMonthEndCount = ((LocalMonthEndCount * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
				else
					if (HistoryBookCalendarRel exists
					and HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1] = HistoryBookCalendarRel.DepreciationPeriodsPerYear)
						if (InServiceDate month <= HistoryBookCalendarRel.YearEndDate month) 
							LocalMonthEndCount = HistoryBookCalendarRel.YearEndDate month - InServiceDate month + 1
						else
						if (InServiceDate month > HistoryBookCalendarRel.YearEndDate month)
							LocalMonthEndCount = 13 - (InServiceDate month - HistoryBookCalendarRel.YearEndDate month)
						if (LastPeriodEnd <= HistoryBookCalendarRel.YearEndDate)
							return LocalMonthEndCount
					else
					if (CurrentBookCalendarsRel exists
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1] = CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						if (InServiceDate month <= CurrentBookCalendarsRel.YearEndDate month) 
							LocalMonthEndCount = CurrentBookCalendarsRel.YearEndDate month - InServiceDate month + 1
						else
						if (InServiceDate month > CurrentBookCalendarsRel.YearEndDate month)
							LocalMonthEndCount = 13 - (InServiceDate month - CurrentBookCalendarsRel.YearEndDate month)
						if (LastPeriodEnd <= CurrentBookCalendarsRel.YearEndDate)
							return LocalMonthEndCount
					else
						if(config.ApplyAssetShortYearUpdate = true
						and first ShortYearBookCalendarsRel exists)
							if (HistoryBookCalendarRel exists)
								while (T1 <= 54
								and HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
									LocalHistoryDate = HistoryBookCalendarRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
									LocalMonthEndCount 	= LocalMonthEndCount + 1
									if ((LastPeriodEnd <= LocalHistoryDate)
									or ((LastPeriodEnd month = LocalHistoryDate month) 
									and (LastPeriodEnd year = LocalHistoryDate year)))
										return LocalMonthEndCount
									else
										T1	= T1 + 1
						else
							while (T1 <= 54
							and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
								LocalHistoryDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
								LocalHistoryDate	= LocalHistoryDate - LocalNumberOfYearsPrior as years
								LocalMonthEndCount 	= LocalMonthEndCount + 1
								if ((LastPeriodEnd <= LocalHistoryDate)
								or ((LastPeriodEnd month = LocalHistoryDate month) 
								and (LastPeriodEnd year = LocalHistoryDate year)))
									return LocalMonthEndCount 
								else
									T1	= T1 + 1

				if (LocalNumberOfYearsPrior > 1) 
					if (config.ApplyAssetShortYearUpdate = true
					and first ShortYearBookCalendarsRel exists)
						LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
						LocalCurrentPriorYearEndDate        = LocalCurrentYearBeginDate - 1 day
						LocalCurrentYearEndDate             = CurrentBookCalendarsRel.YearEndDate
						FirstCalendarYearBeginDate          = first CurrentYearEndDateHistoryCalRel.YearBeginDate
						if(FirstCalendarYearBeginDate not entered)
							FirstCalendarYearBeginDate = CurrentBookCalendarsRel.YearBeginDate
						LocalInServiceDate                  = InServiceDate
						initialize LocalYearDiff
						initialize LocalAllDepreciationPeriodsPerYear
						while(LocalInServiceDate < FirstCalendarYearBeginDate)
							LocalInServiceDate = LocalInServiceDate + 1 year
							LocalYearDiff      = LocalYearDiff + 1
						LocalYearDiff                       = LocalYearDiff - 1
						if (LocalYearDiff > 0)
							LocalYearDiff                   = LocalYearDiff
						else
							LocalYearDiff                   = 0
						LocalInServiceDate                  = InServiceDate
						for each PriorYearEndDateHistoryCalRel
							LocalAllDepreciationPeriodsPerYear     += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
						LocalHistoryDepreciationCount   = LocalYearDiff * 12 + LocalAllDepreciationPeriodsPerYear
						LocalMonthEndCount = LocalMonthEndCount + LocalYearDiff * 12 + LocalAllDepreciationPeriodsPerYear
						if(CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed = 0)
							return LocalMonthEndCount
					else
						LocalYearsToAdd = LocalNumberOfYearsPrior - 1
						LocalPeriodsToAdd = LocalYearsToAdd * 12 
						LocalMonthEndCount = LocalMonthEndCount + LocalPeriodsToAdd

				T1 = 1
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
					while (T1 <= 54
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalMonthEndDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						LocalCurrentPeriodCount = LocalCurrentPeriodCount + CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
						if (LastPeriodEnd <= LocalMonthEndDate)
							LocalMonthEndCount = LocalMonthEndCount + ((LocalCurrentPeriodCount * 12) / CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
							return LocalMonthEndCount
						else
							T1	= T1 + 1
				else
					while (T1 <= 54
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalMonthEndDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						LocalMonthEndCount 	= LocalMonthEndCount + 1
						if (LastPeriodEnd <= LocalMonthEndDate)
							return LocalMonthEndCount 
						else
							T1	= T1 + 1
				return 				
				
