FinanceCurrencyAmountGroup is a Field

    Representation
        Group Fields
        	ExchangeDate
        	CurrencyAmount
			FunctionalAmount	     		is a ReportCurrencyExchange
			AlternateAmount        			is a ReportCurrencyExchange
			AlternateAmount2       			is a ReportCurrencyExchange
			AlternateAmount3				is a ReportCurrencyExchange
			ToFunctionalAmount       		is a ReportCurrencyExchange
			ToAlternateAmount       		is a ReportCurrencyExchange
			ToAlternateAmount2       		is a ReportCurrencyExchange
			ToAlternateAmount3				is a ReportCurrencyExchange
			ProjectAmount					is a ReportCurrencyExchange
			ReportAmount1      				is a ReportCurrencyExchange
			ReportAmount2      				is a ReportCurrencyExchange
			ReportAmount3					is a ReportCurrencyExchange
			ReportAmount4					is a ReportCurrencyExchange
			ReportAmount5					is a ReportCurrencyExchange

    Context Fields
		FinanceEnterpriseGroup
		CurrencyTable
		AccountingEntity
		FromCurrency
		TransactionCodeBlock

	Transient Fields
		KeepRateAndAmount				is Boolean	
		KeepRateOnly					is Boolean

    Local Fields
    	LocalCurrencyTable				is a CurrencyTable

    Derived Fields
    	AssignToCurrency				is a DerivedField
    		type is Boolean
    		if (CurrencyTable not entered)
 				LocalCurrencyTable					= FinanceEnterpriseGroup.CurrencyTable
 			else
 				LocalCurrencyTable					= CurrencyTable
			FunctionalAmount.ToCurrency				= AccountingEntity.FunctionalCurrency
			AlternateAmount.ToCurrency				= AccountingEntity.AlternateCurrency
			AlternateAmount2.ToCurrency				= AccountingEntity.AlternateCurrency2
			AlternateAmount3.ToCurrency				= AccountingEntity.AlternateCurrency3
			if (TransactionCodeBlock != blank				
			and AccountingEntity				!= TransactionCodeBlock.ToAccountingEntity)
				ToFunctionalAmount.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.FunctionalCurrency
				ToAlternateAmount.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency
				ToAlternateAmount2.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency2
				ToAlternateAmount3.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency3
			else
				initialize ToFunctionalAmount.ToCurrency
				initialize ToAlternateAmount.ToCurrency
				initialize ToAlternateAmount2.ToCurrency
				initialize ToAlternateAmount3.ToCurrency
			if (TransactionCodeBlock.Project != blank)		
				ProjectAmount.ToCurrency			= TransactionCodeBlock.Project.Currency
			else
				initialize ProjectAmount.ToCurrency
			ReportAmount1.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyOne
			ReportAmount2.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyTwo
			ReportAmount3.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyThree
			ReportAmount4.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyFour
			ReportAmount5.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyFive
 			return true

    Conditions
  		InterAccountingEntityTransaction
            when (AccountingEntity != TransactionCodeBlock.ToAccountingEntity)
  		InterAccountingEntityAlternate
            when (AccountingEntity != TransactionCodeBlock.ToAccountingEntity
            and   TransactionCodeBlock.ToAccountingEntity.AlternateCurrency entered)
  		InterAccountingEntityAlternate2
            when (AccountingEntity != TransactionCodeBlock.ToAccountingEntity
            and   TransactionCodeBlock.ToAccountingEntity.AlternateCurrency2 entered)
  		InterAccountingEntityAlternate3
            when (AccountingEntity != TransactionCodeBlock.ToAccountingEntity
            and   TransactionCodeBlock.ToAccountingEntity.AlternateCurrency3 entered)            
  		ProjectTransaction
            when (FinanceEnterpriseGroup.ProjectLabelExists
            and	  TransactionCodeBlock.Project entered)

    Field Rules
		FunctionalAmount
    		if (CurrencyTable not entered)
 				LocalCurrencyTable					= FinanceEnterpriseGroup.CurrencyTable
 			else
 				LocalCurrencyTable					= CurrencyTable 				
			FunctionalAmount.ToCurrency				= AccountingEntity.FunctionalCurrency
			AlternateAmount.ToCurrency				= AccountingEntity.AlternateCurrency
			AlternateAmount2.ToCurrency				= AccountingEntity.AlternateCurrency2
			AlternateAmount3.ToCurrency				= AccountingEntity.AlternateCurrency3
			if (TransactionCodeBlock entered
			and AccountingEntity				!= TransactionCodeBlock.ToAccountingEntity)
				ToFunctionalAmount.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.FunctionalCurrency
				ToAlternateAmount.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency
				ToAlternateAmount2.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency2
				ToAlternateAmount3.ToCurrency		= TransactionCodeBlock.ToAccountingEntity.AlternateCurrency3				
			else
				initialize ToFunctionalAmount.ToCurrency
				initialize ToAlternateAmount.ToCurrency
				initialize ToAlternateAmount2.ToCurrency
				initialize ToAlternateAmount3.ToCurrency
			if (TransactionCodeBlock.Project entered)
				ProjectAmount.ToCurrency			= TransactionCodeBlock.Project.Currency
			else
				initialize ProjectAmount.ToCurrency
			ReportAmount1.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyOne
			ReportAmount2.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyTwo
			ReportAmount3.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyThree
			ReportAmount4.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyFour
			ReportAmount5.ToCurrency			= FinanceEnterpriseGroup.ReportCurrencyFive
			if (!KeepRateAndAmount)
				if (KeepRateOnly)
					initialize FunctionalAmount.EnteredCurrencyAmount
				else
					if (FunctionalAmount.EnteredCurrencyAmount entered
					and CurrencyAmount	entered
					and FunctionalAmount.EnteredCurrencyRate entered)
						initialize FunctionalAmount.EnteredCurrencyRate
					
		AlternateAmount
			if (!AlternateAmount.ToCurrency entered)
				initialize AlternateAmount.EnteredCurrencyRate
				initialize AlternateAmount.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize AlternateAmount.EnteredCurrencyAmount
					else
						if (AlternateAmount.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and AlternateAmount.EnteredCurrencyRate entered)
							initialize AlternateAmount.EnteredCurrencyRate

		AlternateAmount2
			if (!AlternateAmount2.ToCurrency entered)
				initialize AlternateAmount2.EnteredCurrencyRate
				initialize AlternateAmount2.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize AlternateAmount2.EnteredCurrencyAmount
					else	
						if (AlternateAmount2.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and AlternateAmount2.EnteredCurrencyRate entered)
							initialize AlternateAmount2.EnteredCurrencyRate

		AlternateAmount3
			if (!AlternateAmount3.ToCurrency entered)
				initialize AlternateAmount3.EnteredCurrencyRate
				initialize AlternateAmount3.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize AlternateAmount3.EnteredCurrencyAmount
					else	
						if (AlternateAmount3.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and AlternateAmount3.EnteredCurrencyRate entered)
							initialize AlternateAmount3.EnteredCurrencyRate
																
		ToFunctionalAmount
			if (!ToFunctionalAmount.ToCurrency entered)
				initialize ToFunctionalAmount.EnteredCurrencyRate
				initialize ToFunctionalAmount.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ToFunctionalAmount.EnteredCurrencyAmount
					else			
						if (ToFunctionalAmount.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ToFunctionalAmount.EnteredCurrencyRate entered)
							initialize ToFunctionalAmount.EnteredCurrencyRate

		ToAlternateAmount
			if (!ToAlternateAmount.ToCurrency entered)
				initialize ToAlternateAmount.EnteredCurrencyRate
				initialize ToAlternateAmount.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ToAlternateAmount.EnteredCurrencyAmount
					else		
						if (ToAlternateAmount.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ToAlternateAmount.EnteredCurrencyRate entered)
							initialize ToAlternateAmount.EnteredCurrencyRate

		ToAlternateAmount2
			if (!ToAlternateAmount2.ToCurrency entered)
				initialize ToAlternateAmount2.EnteredCurrencyRate
				initialize ToAlternateAmount2.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ToAlternateAmount2.EnteredCurrencyAmount
					else		
						if (ToAlternateAmount2.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ToAlternateAmount2.EnteredCurrencyRate entered)
							initialize ToAlternateAmount2.EnteredCurrencyRate

		ToAlternateAmount3
			if (!ToAlternateAmount3.ToCurrency entered)
				initialize ToAlternateAmount3.EnteredCurrencyRate
				initialize ToAlternateAmount3.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ToAlternateAmount3.EnteredCurrencyAmount
					else		
						if (ToAlternateAmount3.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ToAlternateAmount3.EnteredCurrencyRate entered)
							initialize ToAlternateAmount3.EnteredCurrencyRate
						
		ProjectAmount
			if (!ProjectAmount.ToCurrency entered)
				initialize ProjectAmount.EnteredCurrencyRate
				initialize ProjectAmount.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ProjectAmount.EnteredCurrencyAmount
					else		
						if (ProjectAmount.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ProjectAmount.EnteredCurrencyRate entered)
							initialize ProjectAmount.EnteredCurrencyRate

		ReportAmount1
			if (!ReportAmount1.ToCurrency entered)
				initialize ReportAmount1.EnteredCurrencyRate
				initialize ReportAmount1.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ReportAmount1.EnteredCurrencyAmount
					else		
						if (ReportAmount1.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ReportAmount1.EnteredCurrencyRate entered)
							initialize ReportAmount1.EnteredCurrencyRate

		ReportAmount2
			if (!ReportAmount2.ToCurrency entered)
				initialize ReportAmount2.EnteredCurrencyRate
				initialize ReportAmount2.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ReportAmount2.EnteredCurrencyAmount
					else
						if (ReportAmount2.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ReportAmount2.EnteredCurrencyRate entered)
							initialize ReportAmount2.EnteredCurrencyRate

		ReportAmount3
			if (!ReportAmount3.ToCurrency entered)
				initialize ReportAmount3.EnteredCurrencyRate
				initialize ReportAmount3.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ReportAmount3.EnteredCurrencyAmount
					else		
						if (ReportAmount3.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ReportAmount3.EnteredCurrencyRate entered)
							initialize ReportAmount3.EnteredCurrencyRate

		ReportAmount4
			if (!ReportAmount4.ToCurrency entered)
				initialize ReportAmount4.EnteredCurrencyRate
				initialize ReportAmount4.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ReportAmount4.EnteredCurrencyAmount
					else
						if (ReportAmount4.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ReportAmount4.EnteredCurrencyRate entered)
							initialize ReportAmount4.EnteredCurrencyRate

		ReportAmount5
			if (!ReportAmount5.ToCurrency entered)
				initialize ReportAmount5.EnteredCurrencyRate
				initialize ReportAmount5.EnteredCurrencyAmount
			else
				if (!KeepRateAndAmount)
					if (KeepRateOnly)
						initialize ReportAmount5.EnteredCurrencyAmount
					else		
						if (ReportAmount5.EnteredCurrencyAmount entered
						and CurrencyAmount	entered
						and ReportAmount5.EnteredCurrencyRate entered)
							initialize ReportAmount5.EnteredCurrencyRate
