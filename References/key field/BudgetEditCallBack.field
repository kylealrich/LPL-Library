BudgetEditCallBack is a Field

    Representation
        Group Fields
        	Succeeded							is Boolean
#ifdef module rq
			BudgetEditCallBackRequisition
#endif
			BudgetEditCallBackReference			is BusinessObjectReference
#ifdef module po
        	BudgetEditCallBackPurchaseOrder
        	BudgetEditCallBackContract
#endif
#ifdef module ap
			BudgetEditCallBackPayables
			BudgetEditCallBackTravelPlan
#endif
#ifdef module cb
			BudgetEditCallBackCBTran
			BudgetEditCallBackCBAdjustment
			BudgetEditCallBackCBEft
			BudgetEditCallBackCBReturnedPmt
			BudgetEditCallBackCBPayment
			BudgetEditCallBackCBBankStatementLine
			BudgetEditCallBackCBNonCashLedgerTran
			BudgetEditCallBackCBReceipt
			BudgetEditCallBackCBFundTransfer
			BudgetEditCallBackCBWireTransfer	
#endif
			BudgetEditCallBackTest
			AutoReverseDate	is Date				
	
	Patterns
			
	Context Fields
		EvaluatingFlow
		FinanceEnterpriseGroup
		UniqueID
		ActionCode
#ifdef module cb		
		CashManagementAccount
#endif
		CurrencyTable
		BudgetEditBatch
		ForceForegroundCallback
			
	Local Fields
		BudgetEditGroup						is UniqueID
		LocalUniqueId						is UniqueID
		LocalAsyncId						is an AsyncActionRequest

	Conditions
		GLInterfaceBudgetGroupExists
			when (GLInterfaceBudgetRel exists)
		
	Relations
		BudgetEditConfigurationRel
			one-to-one relation to BudgetEditConfiguration
			Field Mapping uses symbolic key
				related.BudgetEditConfiguration = FinanceEnterpriseGroup		
		GeneralLedgerJournalRel
			one-to-one relation to GeneralLedgerJournalControl
			Field Mapping uses ByJournalUniqueID
				related.UniqueID						= LocalUniqueId
		GLInterfaceBudgetRel
			one-to-one relation to GLInterfaceBudgetGroup
			Field Mapping uses ByInterfaceUniqueID
				related.UniqueID						= LocalUniqueId
		RecurringJournalControlRel
			one-to-one relation to RecurringJournalControl
			Field Mapping uses ByRJUniqueID
				related.UniqueID						= LocalUniqueId
		RecurringJournalBridgeRel
			one-to-many relation to RecurringJournalBridge
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= RecurringJournalControlRel.AccountingEntity
				related.RecurringJournalControl		= RecurringJournalControlRel.RecurringJournalControl

#ifdef module Allocations
		AllocationRunRel
			one-to-one relation to AllocationRun
			Field Mapping uses ByUniqueID
				related.UniqueID						= LocalUniqueId
#endif

    Derived Fields
		Success			is a DerivedField
			type is Boolean
			if (!EvaluatingFlow)
				display "Success"
				Succeeded	= true
				LocalUniqueId			= BudgetEditCallBackReference.BusinessObjectKey
				if (BudgetEditCallBackReference.BusinessClassName = "GeneralLedgerJournalControl")
					if (ForceForegroundCallback)
						invoke BudgetEditCallBackRelease GeneralLedgerJournalRel in foreground
					else
						invoke BudgetEditCallBackRelease GeneralLedgerJournalRel in background
				else
				if (BudgetEditCallBackReference.BusinessClassName = "GLInterfaceBudgetGroup")
					invoke CompleteInterface GLInterfaceBudgetRel
						invoked.PrmAutoReverseDate = AutoReverseDate	
						invoked.PrmCurrencyTable   = CurrencyTable								
					invoke Purge GLInterfaceBudgetRel			
				else
				if (BudgetEditCallBackReference.BusinessClassName = "RecurringJournalControl")
					if (RecurringJournalBridgeRel exists)
						invoke AutoRelease Unreleased RecurringJournalControlRel
					else
						invoke Release Unreleased RecurringJournalControlRel
#ifdef module Allocations
				else
				if (BudgetEditCallBackReference.BusinessClassName = "AllocationRun")
					invoke EditInProgress.Success AllocationRunRel
#endif
#ifdef module rq
				else
				if (BudgetEditCallBackRequisition entered)
					display "JustBeforeTheInvokeToUpdateBudgeteResults;ReturnedSuccess<BudgetEditCallBackRequisition.Requisition>"
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchRQ = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackRequisition	= BudgetEditCallBackRequisition
							invoked.Success							= true
					else
						invoke UpdateBudgetResults BudgetEditCallBackRequisition.Requisition
							invoked.ParmSuccess = true 
#endif
#ifdef module po
				else
				if (BudgetEditCallBackPurchaseOrder entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchPO = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackPurchaseOrder	= BudgetEditCallBackPurchaseOrder
							invoked.Success							= true
					else
						invoke UpdateBudgetResults BudgetEditCallBackPurchaseOrder.PurchaseOrder
							invoked.ParmSuccess = true 
				else
				if (BudgetEditCallBackContract entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchPO = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackContract		= BudgetEditCallBackContract
							invoked.Success							= true
					else
						invoke UpdateBudgetResults BudgetEditCallBackContract.Contract
							invoked.ParmSuccess = true 
#endif
#ifdef module ap
				else
				if (BudgetEditCallBackPayables entered)
					if (ForceForegroundCallback)
						invoke UpdateBudgetResults BudgetEditCallBackPayables.PayablesInvoice in foreground
							invoked.ParmSuccess = true					
					else
						if (BudgetEditBatch entered
						and config.UseBudgetEditCallBackBatchAP = true)
							invoke Create BudgetEditCallBackBatch
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.BudgetEditCallBackPayables	= BudgetEditCallBackPayables
								invoked.Success						= true
						else
							invoke UpdateBudgetResults BudgetEditCallBackPayables.PayablesInvoice in background
								invoked.ParmSuccess = true
				else
				if (BudgetEditCallBackTravelPlan entered)
					invoke UpdateBudgetResults BudgetEditCallBackTravelPlan.ExpenseManagementTravelPlan in background
						invoked.ParmSuccess = true
#endif
#ifdef module cb
				else
				if (BudgetEditCallBackCBTran entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchCB = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackCBTran	= BudgetEditCallBackCBTran
							invoked.Success						= true
							invoked.ActionCode 					= ActionCode
					else
						if (config.UpdateBudgetResultsInBackGroundCB = true and not ForceForegroundCallback)
							invoke UpdateBudgetResults BudgetEditCallBackCBTran.CashLedgerTransaction in background
								invoked.ParmSuccess 	= true
								invoked.ParmActionCode 	= ActionCode
						else
							invoke UpdateBudgetResults BudgetEditCallBackCBTran.CashLedgerTransaction
								invoked.ParmSuccess 	= true
								invoked.ParmActionCode 	= ActionCode
				else
				if (BudgetEditCallBackCBAdjustment entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBAdjustment.CashLedgerReconciliationAdjustment
						invoked.ParmSuccess 	= true
						invoked.ParmActionCode 	= ActionCode
				else
				if (BudgetEditCallBackCBEft entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction
						invoked.ParmSuccess 	= true
						invoked.ParmActionCode 	= ActionCode
				else
				if (BudgetEditCallBackCBReturnedPmt entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment
						invoked.ParmSuccess 	= true	
						invoked.ParmActionCode 	= ActionCode	
				else
				if (BudgetEditCallBackCBPayment entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchCB = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackCBPayment	= BudgetEditCallBackCBPayment
							invoked.Success						= true
							invoked.ActionCode 					= ActionCode
					else
						if (config.UpdateBudgetResultsInBackGroundCB = true and not ForceForegroundCallback)
							invoke UpdateBudgetResults BudgetEditCallBackCBPayment.CashLedgerPayment in background
								invoked.ParmSuccess 	= true
								invoked.ParmActionCode 	= ActionCode
						else
							invoke UpdateBudgetResults BudgetEditCallBackCBPayment.CashLedgerPayment
								invoked.ParmSuccess 	= true
								invoked.ParmActionCode 	= ActionCode
				else
				if (BudgetEditCallBackCBBankStatementLine entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBBankStatementLine.BankStatementLine
						invoked.ParmSuccess 	= true
						invoked.ParmActionCode 	= ActionCode	
				else
				if (BudgetEditCallBackCBNonCashLedgerTran entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBNonCashLedgerTran.NonCashLedgerTransaction
						invoked.ParmSuccess 	= true
						invoked.ParmActionCode 	= ActionCode
				else
				if (BudgetEditCallBackCBReceipt entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBReceipt.CashLedgerCashReceiptHeader
						invoked.ParmSuccess = true
				else
				if (BudgetEditCallBackCBFundTransfer entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBFundTransfer.CashLedgerFundTransferHeader
						invoked.ParmSuccess = true
				else		
				if (BudgetEditCallBackCBWireTransfer entered)	
					invoke UpdateBudgetResults BudgetEditCallBackCBWireTransfer.WireTransferBatchDetail
						invoked.ParmSuccess 	= true
						invoked.ParmActionCode 	= ActionCode																																																												
#endif
				else
				if (BudgetEditCallBackTest entered)
					invoke TestEditCallBackSuccess BudgetEditCallBackTest.BudgetTemplate


		Failure			is a DerivedField
			type is Boolean
			if (!EvaluatingFlow)
				Succeeded	= false
				LocalUniqueId			= BudgetEditCallBackReference.BusinessObjectKey
				if (BudgetEditCallBackReference.BusinessClassName = "GeneralLedgerJournalControl")
					invoke ClearPendingFlag Unreleased GeneralLedgerJournalRel
				else
				if (BudgetEditCallBackReference.BusinessClassName = "GLInterfaceBudgetGroup")
					invoke BudgetError GLInterfaceBudgetRel
				else
				if (BudgetEditCallBackReference.BusinessClassName = "RecurringJournalControl")
					invoke ClearPendingFlag Unreleased RecurringJournalControlRel
#ifdef module Allocations
				else
				if (BudgetEditCallBackReference.BusinessClassName = "AllocationRun")
					invoke EditInProgress.Failure AllocationRunRel
#endif
#ifdef module rq
				else
				if (BudgetEditCallBackRequisition entered)
					display "JustBeforeTheInvokeToUpdateBudgeteResults;ReturnedFailure<BudgetEditCallBackRequisition.Requisition>"
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchRQ = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackRequisition	= BudgetEditCallBackRequisition
					else
						invoke UpdateBudgetResults BudgetEditCallBackRequisition.Requisition
#endif
#ifdef module po
				else
				if (BudgetEditCallBackPurchaseOrder entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchPO = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackPurchaseOrder	= BudgetEditCallBackPurchaseOrder
					else
						invoke UpdateBudgetResults BudgetEditCallBackPurchaseOrder.PurchaseOrder
				else
				if (BudgetEditCallBackContract entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchPO = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackContract		= BudgetEditCallBackContract
					else
						invoke UpdateBudgetResults BudgetEditCallBackContract.Contract
#endif
#ifdef module ap
				else
				if (BudgetEditCallBackPayables entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchAP = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackPayables	= BudgetEditCallBackPayables
					else
						invoke UpdateBudgetResults BudgetEditCallBackPayables.PayablesInvoice
				else
				if (BudgetEditCallBackTravelPlan entered)
					if (ForceForegroundCallback)
						invoke UpdateBudgetResults BudgetEditCallBackTravelPlan.ExpenseManagementTravelPlan in foreground
					else
						invoke UpdateBudgetResults BudgetEditCallBackTravelPlan.ExpenseManagementTravelPlan in background
#endif
#ifdef module cb
				else
				if (BudgetEditCallBackCBTran entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchCB = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackCBTran	= BudgetEditCallBackCBTran
					else
						invoke UpdateBudgetResults BudgetEditCallBackCBTran.CashLedgerTransaction
				else
				if (BudgetEditCallBackCBAdjustment entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBAdjustment.CashLedgerReconciliationAdjustment
				else
				if (BudgetEditCallBackCBEft entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction
				else
				if (BudgetEditCallBackCBReturnedPmt entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBReturnedPmt.CashLedgerReturnedPayment
				else
				if (BudgetEditCallBackCBPayment entered)
					if (BudgetEditBatch entered
					and config.UseBudgetEditCallBackBatchCB = true)
						invoke Create BudgetEditCallBackBatch
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.BudgetEditCallBackCBPayment	= BudgetEditCallBackCBPayment
					else
						invoke UpdateBudgetResults BudgetEditCallBackCBPayment.CashLedgerPayment
				else
				if (BudgetEditCallBackCBBankStatementLine entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBBankStatementLine.BankStatementLine
				else
				if (BudgetEditCallBackCBNonCashLedgerTran entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBNonCashLedgerTran.NonCashLedgerTransaction										
				else
				if (BudgetEditCallBackCBReceipt entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBReceipt.CashLedgerCashReceiptHeader
				else
				if (BudgetEditCallBackCBFundTransfer entered)
					invoke UpdateBudgetResults BudgetEditCallBackCBFundTransfer.CashLedgerFundTransferHeader
				else	
				if (BudgetEditCallBackCBWireTransfer entered)	
					invoke UpdateBudgetResults BudgetEditCallBackCBWireTransfer.WireTransferBatchDetail
#endif
				else
				if (BudgetEditCallBackTest entered)
					invoke TestEditCallBackFailure BudgetEditCallBackTest.BudgetTemplate
	
		InitiateFlow		is a DerivedField
			type is Boolean
			if (!EvaluatingFlow)
				display "InitiateFlow"
				BudgetEditGroup	= UniqueID
				if (BudgetEditCallBackReference entered
				and BudgetEditCallBackReference.BusinessClassName = "GeneralLedgerJournalControl")
					LocalUniqueId = BudgetEditCallBackReference.BusinessObjectKey
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackJournalControl"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							GeneralLedgerJournalRel.AccountingEntity
							GeneralLedgerJournalRel.GeneralLedgerClosePeriod
							GeneralLedgerJournalRel.GeneralLedgerJournalControl
				else
				if (BudgetEditCallBackReference entered
				and BudgetEditCallBackReference.BusinessClassName = "GLInterfaceBudgetGroup")
					LocalUniqueId = BudgetEditCallBackReference.BusinessObjectKey
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackGLTransactionInterface"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							GLInterfaceBudgetRel.GLInterfaceBudgetGroup
				else
				if (BudgetEditCallBackReference entered
				and BudgetEditCallBackReference.BusinessClassName = "RecurringJournalControl")
					LocalUniqueId = BudgetEditCallBackReference.BusinessObjectKey
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackJournalControl"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							RecurringJournalControlRel.AccountingEntity
							RecurringJournalControlRel.RecurringJournalControl
#ifdef module Allocations
				else
				if (BudgetEditCallBackReference entered
				and BudgetEditCallBackReference.BusinessClassName = "AllocationRun")
					LocalUniqueId = BudgetEditCallBackReference.BusinessObjectKey
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackAllocationRun"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							AllocationRunRel.AllocationRun
#endif
#ifdef module rq
				else
				if (BudgetEditCallBackRequisition entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackRequisition"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackRequisition
#endif
#ifdef module po
				else
				if (BudgetEditCallBackPurchaseOrder entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackPurchaseOrder"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackPurchaseOrder

				else
				if (BudgetEditCallBackContract entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackContract"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackContract

#endif
#ifdef module ap
				else
				if (BudgetEditCallBackPayables entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackPayables"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackPayables
				else
				if (BudgetEditCallBackTravelPlan entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackTravelPlan"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackTravelPlan
#endif
#ifdef module cb
				else
				if (BudgetEditCallBackCBTran entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBTran"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBTran
				else
				if (BudgetEditCallBackCBAdjustment entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBAdjustment"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBAdjustment
				else
				if (BudgetEditCallBackCBEft entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBEft"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBEft
				else
				if (BudgetEditCallBackCBReturnedPmt entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBReturnedPmt"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBReturnedPmt
				else
				if (BudgetEditCallBackCBPayment entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBPayment"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBPayment
				else
				if (BudgetEditCallBackCBBankStatementLine entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBBankStatementLine"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBBankStatementLine			
				else
				if (BudgetEditCallBackCBNonCashLedgerTran entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBNonCashLedgerTransaction"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBNonCashLedgerTran
				else
				if (BudgetEditCallBackCBReceipt entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBReceipt"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBReceipt
				else
				if (BudgetEditCallBackCBFundTransfer entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBFundTransfer"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBFundTransfer
				else
				if (BudgetEditCallBackCBWireTransfer entered)	
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackCBWireTransfer"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackCBWireTransfer																																																																					
#endif				
				else
				if (BudgetEditCallBackTest entered)
					initiate BudgetEditCallBack process
						resume on error
						title is "BudgetEditCallBackTest"
						Variables
							FinanceEnterpriseGroup
							Succeeded
							BudgetEditGroup
							BudgetEditCallBackTest

