GainLossCalculation is a Field

    Representation
        Group Fields
			DefaultSystemAccount		is Numeric 1
				States
					None					value is 0
					UnrealizedGainLoss		value is 1
					RealizedGainLoss		value is 2
			OrigCurrencyAmount			is a FinanceCurrencyAmount
			NewCurrencyAmount			is a FinanceCurrencyAmount
			GainAmount					is a FinanceCurrencyAmount
			LossAmount					is a FinanceCurrencyAmount
			GainAccount					is a FinanceCodeBlock
			LossAccount					is a FinanceCodeBlock
			AmountType					is Numeric 1
				States
					Positive				value is 0
					Negative				value is 1
					NegativeAndPositive		value is 2
			SingleSystemAccount			is Boolean
			GainLossFound				is Boolean
			SkipCurrencyExchange		is Boolean
			AccountType					is Numeric 1
				States
					Asset					value is 0
					Liability				value is 1
		        
	Patterns
		implements CompactFormat
		        
    Context Fields
		FinanceEnterpriseGroup
		CurrencyTable
		AccountingEntity
		FromCurrency
		CurrencyAmount
		ExchangeDate

	Transient Fields
		OriginFinanceCodeBlock			is a FinanceCodeBlock	

	Local Fields
		LocalCurrencyCalculationGroup	is a CurrencyCalculationGroup
		LocalFunctionalAmount	   		is a TotalAmount
		LocalAlternateAmount	   		is a TotalAmount
		LocalAlternateAmount2	   		is a TotalAmount
		LocalAlternateAmount3	   		is a TotalAmount
		LocalToFunctionalAmount       	is a TotalAmount
		LocalToAlternateAmount       	is a TotalAmount
		LocalToAlternateAmount2     	is a TotalAmount
		LocalToAlternateAmount3			is a TotalAmount
		LocalProjectAmount		   	 	is a TotalAmount
		LocalReportAmount1		    	is a TotalAmount
		LocalReportAmount2			    is a TotalAmount
		LocalReportAmount3			    is a TotalAmount
		LocalReportAmount4			    is a TotalAmount
		LocalReportAmount5			    is a TotalAmount
		LocalFunctionalRate   			is a CurrencyExchangeRate
		LocalAlternateRate    			is a CurrencyExchangeRate
		LocalAlternate2Rate    			is a CurrencyExchangeRate
		LocalAlternate3Rate    			is a CurrencyExchangeRate
		LocalToFunctionalRate   		is a CurrencyExchangeRate
		LocalToAlternateRate    		is a CurrencyExchangeRate
		LocalToAlternate2Rate    		is a CurrencyExchangeRate
		LocalToAlternate3Rate  			is a CurrencyExchangeRate
		LocalProjectRate    			is a CurrencyExchangeRate
		LocalReport1Rate    			is a CurrencyExchangeRate
		LocalReport2Rate		    	is a CurrencyExchangeRate
		LocalReport3Rate    			is a CurrencyExchangeRate
		LocalReport4Rate    			is a CurrencyExchangeRate
		LocalReport5Rate    			is a CurrencyExchangeRate
		LocalCount    					is Numeric 1
		LocalSystemAccount				is a SystemAccount
		LocalLabel						is Alpha 60
		LocalChartAccount				is like GeneralLedgerChartAccount
		LocalFinanceCodeBlock			is a FinanceCodeBlock
		LocalPositiveAndNegative		is Boolean
		LocalExecuteField				is Boolean
		LocalProject					is a Project

	Derived Fields
		DerivedCalculateAmount			is a DerivedField
			type is Boolean

			initialize LocalCount
			initialize GainAccount
			initialize LossAccount
			initialize AmountType
			

			if (SkipCurrencyExchange)
				LocalFunctionalRate				= NewCurrencyAmount.FunctionalAmount.EnteredCurrencyRate
				LocalFunctionalAmount			= NewCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
				LocalAlternateRate				= NewCurrencyAmount.AlternateAmount.EnteredCurrencyRate
				LocalAlternateAmount			= NewCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
				LocalAlternate2Rate				= NewCurrencyAmount.AlternateAmount2.EnteredCurrencyRate
				LocalAlternateAmount2			= NewCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
				LocalAlternate3Rate				= NewCurrencyAmount.AlternateAmount3.EnteredCurrencyRate
				LocalAlternateAmount3			= NewCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount								
				LocalToFunctionalRate			= NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate
				LocalToFunctionalAmount			= NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
				LocalToAlternateRate			= NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate
				LocalToAlternateAmount			= NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
				LocalToAlternate2Rate			= NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate
				LocalToAlternateAmount2			= NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
				LocalToAlternate3Rate			= NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate
				LocalToAlternateAmount3			= NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount								
				LocalProjectRate				= NewCurrencyAmount.ProjectAmount.EnteredCurrencyRate
				LocalProjectAmount				= NewCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
				LocalReport1Rate				= NewCurrencyAmount.ReportAmount1.EnteredCurrencyRate
				LocalReportAmount1				= NewCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
				LocalReport2Rate				= NewCurrencyAmount.ReportAmount2.EnteredCurrencyRate
				LocalReportAmount2				= NewCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
				LocalReport3Rate				= NewCurrencyAmount.ReportAmount3.EnteredCurrencyRate
				LocalReportAmount3				= NewCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
				LocalReport4Rate				= NewCurrencyAmount.ReportAmount4.EnteredCurrencyRate
				LocalReportAmount4				= NewCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
				LocalReport5Rate				= NewCurrencyAmount.ReportAmount5.EnteredCurrencyRate
				LocalReportAmount5				= NewCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
			else
				LocalCurrencyCalculationGroup.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				LocalCurrencyCalculationGroup.CurrencyAmount							= CurrencyAmount
				LocalCurrencyCalculationGroup.ExchangeDate								= ExchangeDate
				LocalCurrencyCalculationGroup.FromCurrency								= FromCurrency
				LocalCurrencyCalculationGroup.FunctionalAmount.ToCurrency				= AccountingEntity.FunctionalCurrency
				LocalCurrencyCalculationGroup.AlternateAmount.ToCurrency				= AccountingEntity.AlternateCurrency
				LocalCurrencyCalculationGroup.AlternateAmount2.ToCurrency				= AccountingEntity.AlternateCurrency2
				LocalCurrencyCalculationGroup.AlternateAmount3.ToCurrency				= AccountingEntity.AlternateCurrency3
				LocalCurrencyCalculationGroup.ToFunctionalAmount.ToCurrency				= OriginFinanceCodeBlock.ToAccountingEntity.FunctionalCurrency
				LocalCurrencyCalculationGroup.ToAlternateAmount.ToCurrency				= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency
				LocalCurrencyCalculationGroup.ToAlternateAmount2.ToCurrency				= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency2
				LocalCurrencyCalculationGroup.ToAlternateAmount3.ToCurrency				= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency3
				LocalCurrencyCalculationGroup.ProjectAmount.ToCurrency					= LocalProject.Currency
				LocalCurrencyCalculationGroup.ReportAmount1.ToCurrency					= FinanceEnterpriseGroup.ReportCurrencyOne
				LocalCurrencyCalculationGroup.ReportAmount2.ToCurrency					= FinanceEnterpriseGroup.ReportCurrencyTwo
				LocalCurrencyCalculationGroup.ReportAmount3.ToCurrency					= FinanceEnterpriseGroup.ReportCurrencyThree
				LocalCurrencyCalculationGroup.ReportAmount4.ToCurrency					= FinanceEnterpriseGroup.ReportCurrencyFour
				LocalCurrencyCalculationGroup.ReportAmount5.ToCurrency					= FinanceEnterpriseGroup.ReportCurrencyFive

				if (NewCurrencyAmount.FunctionalAmount.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.FunctionalAmount.EnteredCurrencyRate = NewCurrencyAmount.FunctionalAmount.EnteredCurrencyRate
				if (NewCurrencyAmount.AlternateAmount.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.AlternateAmount.EnteredCurrencyRate = NewCurrencyAmount.AlternateAmount.EnteredCurrencyRate
				if (NewCurrencyAmount.AlternateAmount2.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.AlternateAmount2.EnteredCurrencyRate = NewCurrencyAmount.AlternateAmount2.EnteredCurrencyRate
				if (NewCurrencyAmount.AlternateAmount3.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.AlternateAmount3.EnteredCurrencyRate = NewCurrencyAmount.AlternateAmount3.EnteredCurrencyRate
				if (NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ToFunctionalAmount.EnteredCurrencyRate = NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate
				if (NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ToAlternateAmount.EnteredCurrencyRate = NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate
				if (NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ToAlternateAmount2.EnteredCurrencyRate = NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate
				if (NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ToAlternateAmount3.EnteredCurrencyRate = NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate
				if (NewCurrencyAmount.ProjectAmount.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ProjectAmount.EnteredCurrencyRate = NewCurrencyAmount.ProjectAmount.EnteredCurrencyRate
				if (NewCurrencyAmount.ReportAmount1.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ReportAmount1.EnteredCurrencyRate = NewCurrencyAmount.ReportAmount1.EnteredCurrencyRate
				if (NewCurrencyAmount.ReportAmount2.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ReportAmount2.EnteredCurrencyRate = NewCurrencyAmount.ReportAmount2.EnteredCurrencyRate
				if (NewCurrencyAmount.ReportAmount3.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ReportAmount3.EnteredCurrencyRate = NewCurrencyAmount.ReportAmount3.EnteredCurrencyRate
				if (NewCurrencyAmount.ReportAmount4.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ReportAmount4.EnteredCurrencyRate = NewCurrencyAmount.ReportAmount4.EnteredCurrencyRate
				if (NewCurrencyAmount.ReportAmount5.EnteredCurrencyRate entered)
					LocalCurrencyCalculationGroup.ReportAmount5.EnteredCurrencyRate = NewCurrencyAmount.ReportAmount5.EnteredCurrencyRate

				NewCurrencyAmount.FunctionalAmount.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyRate
				NewCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				NewCurrencyAmount.AlternateAmount.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyRate
				NewCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				NewCurrencyAmount.AlternateAmount2.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyRate
				NewCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				NewCurrencyAmount.AlternateAmount3.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyRate								
				NewCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount								
				NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate	= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyRate
				NewCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyAmount
				NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate		= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyRate
				NewCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyAmount
				NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate	= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyRate
				NewCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyAmount
				NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate	= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyRate								
				NewCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount	= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyAmount								
				NewCurrencyAmount.ProjectAmount.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyRate
				NewCurrencyAmount.ProjectAmount.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				NewCurrencyAmount.ReportAmount1.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyRate
				NewCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				NewCurrencyAmount.ReportAmount2.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyRate
				NewCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				NewCurrencyAmount.ReportAmount3.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyRate
				NewCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				NewCurrencyAmount.ReportAmount4.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyRate
				NewCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				NewCurrencyAmount.ReportAmount5.EnteredCurrencyRate			= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyRate
				NewCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount

				if (FromCurrency			!= AccountingEntity.FunctionalCurrency)
					LocalFunctionalRate				= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyRate
					LocalFunctionalAmount			= LocalCurrencyCalculationGroup.FunctionalAmount.OutputCurrencyAmount
				if (AccountingEntity.AlternateCurrency entered
				and FromCurrency			!= AccountingEntity.AlternateCurrency)
					LocalAlternateRate				= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyRate
					LocalAlternateAmount			= LocalCurrencyCalculationGroup.AlternateAmount.OutputCurrencyAmount
				if (AccountingEntity.AlternateCurrency2 entered
				and FromCurrency			!= AccountingEntity.AlternateCurrency2)
					LocalAlternate2Rate				= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyRate
					LocalAlternateAmount2			= LocalCurrencyCalculationGroup.AlternateAmount2.OutputCurrencyAmount
				if (AccountingEntity.AlternateCurrency3 entered
				and FromCurrency			!= AccountingEntity.AlternateCurrency3)
					LocalAlternate3Rate				= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyRate
					LocalAlternateAmount3			= LocalCurrencyCalculationGroup.AlternateAmount3.OutputCurrencyAmount								
				if (AccountingEntity != OriginFinanceCodeBlock.ToAccountingEntity)
					if (FromCurrency			!= OriginFinanceCodeBlock.ToAccountingEntity.FunctionalCurrency)
						LocalToFunctionalRate			= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyRate
						LocalToFunctionalAmount			= LocalCurrencyCalculationGroup.ToFunctionalAmount.OutputCurrencyAmount
					if (OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency entered
					and FromCurrency			!= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency)
						LocalToAlternateRate			= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyRate
						LocalToAlternateAmount			= LocalCurrencyCalculationGroup.ToAlternateAmount.OutputCurrencyAmount
					if (OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency2 entered
					and FromCurrency			!= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency2)
						LocalToAlternate2Rate			= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyRate
						LocalToAlternateAmount2			= LocalCurrencyCalculationGroup.ToAlternateAmount2.OutputCurrencyAmount
					if (OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency3 entered
					and FromCurrency			!= OriginFinanceCodeBlock.ToAccountingEntity.AlternateCurrency3)
						LocalToAlternate3Rate			= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyRate
						LocalToAlternateAmount3			= LocalCurrencyCalculationGroup.ToAlternateAmount3.OutputCurrencyAmount								
				if (LocalProject.Currency entered
				and FromCurrency			!= LocalProject.Currency)
					LocalProjectRate				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyRate
					LocalProjectAmount				= LocalCurrencyCalculationGroup.ProjectAmount.OutputCurrencyAmount
				if (FinanceEnterpriseGroup.ReportCurrencyOne entered
				and FromCurrency			!= FinanceEnterpriseGroup.ReportCurrencyOne)
					LocalReport1Rate				= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyRate
					LocalReportAmount1				= LocalCurrencyCalculationGroup.ReportAmount1.OutputCurrencyAmount
				if (FinanceEnterpriseGroup.ReportCurrencyTwo entered
				and FromCurrency			!= FinanceEnterpriseGroup.ReportCurrencyTwo)
					LocalReport2Rate				= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyRate
					LocalReportAmount2				= LocalCurrencyCalculationGroup.ReportAmount2.OutputCurrencyAmount
				if (FinanceEnterpriseGroup.ReportCurrencyThree entered
				and FromCurrency			!= FinanceEnterpriseGroup.ReportCurrencyThree)
					LocalReport3Rate				= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyRate
					LocalReportAmount3				= LocalCurrencyCalculationGroup.ReportAmount3.OutputCurrencyAmount
				if (FinanceEnterpriseGroup.ReportCurrencyFour entered
				and FromCurrency			!= FinanceEnterpriseGroup.ReportCurrencyFour)
					LocalReport4Rate				= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyRate
					LocalReportAmount4				= LocalCurrencyCalculationGroup.ReportAmount4.OutputCurrencyAmount
				if (FinanceEnterpriseGroup.ReportCurrencyFive entered
				and FromCurrency			!= FinanceEnterpriseGroup.ReportCurrencyFive)
					LocalReport5Rate				= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyRate
					LocalReportAmount5				= LocalCurrencyCalculationGroup.ReportAmount5.OutputCurrencyAmount
				if (LocalFunctionalAmount entered)
					LocalFunctionalAmount	-= OrigCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
				if (LocalAlternateAmount entered)
					LocalAlternateAmount	-= OrigCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
				if (LocalAlternateAmount2 entered)
					LocalAlternateAmount2	-= OrigCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
				if (LocalAlternateAmount3 entered)
					LocalAlternateAmount3	-= OrigCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount							
				if (LocalToFunctionalAmount entered)
					LocalToFunctionalAmount	-= OrigCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
				if (LocalToAlternateAmount entered)
					LocalToAlternateAmount	-= OrigCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
				if (LocalToAlternateAmount2 entered)
					LocalToAlternateAmount2	-= OrigCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
				if (LocalToAlternateAmount3 entered)
					LocalToAlternateAmount3	-= OrigCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount							
				if (LocalProjectAmount entered)
					LocalProjectAmount		-= OrigCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
				if (LocalReportAmount1 entered)
					LocalReportAmount1		-= OrigCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
				if (LocalReportAmount2 entered)
					LocalReportAmount2		-= OrigCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
				if (LocalReportAmount3 entered)
					LocalReportAmount3		-= OrigCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
				if (LocalReportAmount4 entered)
					LocalReportAmount4		-= OrigCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
				if (LocalReportAmount5 entered)
					LocalReportAmount5		-= OrigCurrencyAmount.ReportAmount5.EnteredCurrencyAmount

			if (AccountType.Asset)
				if (LocalFunctionalAmount	> 0
				or  LocalAlternateAmount	> 0
				or  LocalAlternateAmount2	> 0
				or  LocalAlternateAmount3	> 0
				or  LocalToFunctionalAmount	> 0
				or  LocalToAlternateAmount	> 0
				or  LocalToAlternateAmount2	> 0
				or  LocalToAlternateAmount3	> 0
				or  LocalProjectAmount		> 0
				or  LocalReportAmount1		> 0
				or  LocalReportAmount2		> 0
				or  LocalReportAmount3		> 0
				or  LocalReportAmount4		> 0
				or  LocalReportAmount5		> 0)
					LocalCount			= 1
	
				if (LocalFunctionalAmount	< 0
				or  LocalAlternateAmount	< 0
				or  LocalAlternateAmount2	< 0
				or  LocalAlternateAmount3	< 0
				or  LocalToFunctionalAmount	< 0
				or  LocalToAlternateAmount	< 0
				or  LocalToAlternateAmount2	< 0
				or  LocalToAlternateAmount3	< 0
				or  LocalProjectAmount		< 0
				or  LocalReportAmount1		< 0
				or  LocalReportAmount2		< 0
				or  LocalReportAmount3		< 0
				or  LocalReportAmount4		< 0
				or  LocalReportAmount5		< 0)
					AmountType			= 1
					LocalCount			+= 2
			else
				if (LocalFunctionalAmount	< 0
				or  LocalAlternateAmount	< 0
				or  LocalAlternateAmount2	< 0
				or  LocalAlternateAmount3	< 0
				or  LocalToFunctionalAmount	< 0
				or  LocalToAlternateAmount	< 0
				or  LocalToAlternateAmount2	< 0
				or  LocalToAlternateAmount3	< 0
				or  LocalProjectAmount		< 0
				or  LocalReportAmount1		< 0
				or  LocalReportAmount2		< 0
				or  LocalReportAmount3		< 0
				or  LocalReportAmount4		< 0
				or  LocalReportAmount5		< 0)
					LocalCount			= 1
	
				if (LocalFunctionalAmount	> 0
				or  LocalAlternateAmount	> 0
				or  LocalAlternateAmount2	> 0
				or  LocalAlternateAmount3	> 0
				or  LocalToFunctionalAmount	> 0
				or  LocalToAlternateAmount	> 0
				or  LocalToAlternateAmount2	> 0
				or  LocalToAlternateAmount3	> 0
				or  LocalProjectAmount		> 0
				or  LocalReportAmount1		> 0
				or  LocalReportAmount2		> 0
				or  LocalReportAmount3		> 0
				or  LocalReportAmount4		> 0
				or  LocalReportAmount5		> 0)
					AmountType			= 1
					LocalCount			+= 2

			if (LocalCount = 3)
				AmountType					= 2
			if (LocalCount > 0)
				GainLossFound				= true	
							
			SingleSystemAccount				= false
			LocalPositiveAndNegative	= true
			LocalExecuteField				= SystemCodeBlockDefaults
			GainAccount						= LocalFinanceCodeBlock
			if (AmountType entered
			and !SingleSystemAccount)
				LocalPositiveAndNegative		= false
				LocalExecuteField				= SystemCodeBlockDefaults
				LossAccount						= LocalFinanceCodeBlock

			GainAmount.FunctionalAmount.EnteredCurrencyRate		= LocalFunctionalRate
			GainAmount.AlternateAmount.EnteredCurrencyRate		= LocalAlternateRate
			GainAmount.AlternateAmount2.EnteredCurrencyRate		= LocalAlternate2Rate
			GainAmount.AlternateAmount3.EnteredCurrencyRate		= LocalAlternate3Rate
			GainAmount.ToFunctionalAmount.EnteredCurrencyRate	= LocalToFunctionalRate
			GainAmount.ToAlternateAmount.EnteredCurrencyRate	= LocalToAlternateRate
			GainAmount.ToAlternateAmount2.EnteredCurrencyRate	= LocalToAlternate2Rate
			GainAmount.ToAlternateAmount3.EnteredCurrencyRate	= LocalToAlternate3Rate
			GainAmount.ProjectAmount.EnteredCurrencyRate		= LocalProjectRate
			GainAmount.ReportAmount1.EnteredCurrencyRate		= LocalReport1Rate
			GainAmount.ReportAmount2.EnteredCurrencyRate		= LocalReport2Rate
			GainAmount.ReportAmount3.EnteredCurrencyRate		= LocalReport3Rate
			GainAmount.ReportAmount4.EnteredCurrencyRate		= LocalReport4Rate
			GainAmount.ReportAmount5.EnteredCurrencyRate		= LocalReport5Rate

			LossAmount.FunctionalAmount.EnteredCurrencyRate		= LocalFunctionalRate
			LossAmount.AlternateAmount.EnteredCurrencyRate		= LocalAlternateRate
			LossAmount.AlternateAmount2.EnteredCurrencyRate		= LocalAlternate2Rate
			LossAmount.AlternateAmount3.EnteredCurrencyRate		= LocalAlternate3Rate
			LossAmount.ToFunctionalAmount.EnteredCurrencyRate	= LocalToFunctionalRate
			LossAmount.ToAlternateAmount.EnteredCurrencyRate	= LocalToAlternateRate
			LossAmount.ToAlternateAmount2.EnteredCurrencyRate	= LocalToAlternate2Rate
			LossAmount.ToAlternateAmount3.EnteredCurrencyRate	= LocalToAlternate3Rate
			LossAmount.ProjectAmount.EnteredCurrencyRate		= LocalProjectRate
			LossAmount.ReportAmount1.EnteredCurrencyRate		= LocalReport1Rate
			LossAmount.ReportAmount2.EnteredCurrencyRate		= LocalReport2Rate
			LossAmount.ReportAmount3.EnteredCurrencyRate		= LocalReport3Rate
			LossAmount.ReportAmount4.EnteredCurrencyRate		= LocalReport4Rate
			LossAmount.ReportAmount5.EnteredCurrencyRate		= LocalReport5Rate

			if (SingleSystemAccount)
				GainAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
				GainAmount.AlternateAmount.EnteredCurrencyAmount	= LocalAlternateAmount
				GainAmount.AlternateAmount2.EnteredCurrencyAmount	= LocalAlternateAmount2
				GainAmount.AlternateAmount3.EnteredCurrencyAmount	= LocalAlternateAmount3
				GainAmount.ToFunctionalAmount.EnteredCurrencyAmount	= LocalToFunctionalAmount
				GainAmount.ToAlternateAmount.EnteredCurrencyAmount	= LocalToAlternateAmount
				GainAmount.ToAlternateAmount2.EnteredCurrencyAmount	= LocalToAlternateAmount2
				GainAmount.ToAlternateAmount3.EnteredCurrencyAmount	= LocalToAlternateAmount3
				GainAmount.ProjectAmount.EnteredCurrencyAmount		= LocalProjectAmount
				GainAmount.ReportAmount1.EnteredCurrencyAmount		= LocalReportAmount1
				GainAmount.ReportAmount2.EnteredCurrencyAmount		= LocalReportAmount2
				GainAmount.ReportAmount3.EnteredCurrencyAmount		= LocalReportAmount3
				GainAmount.ReportAmount4.EnteredCurrencyAmount		= LocalReportAmount4
				GainAmount.ReportAmount5.EnteredCurrencyAmount		= LocalReportAmount5
			else
				if ((AccountType.Asset
				and  LocalFunctionalAmount	> 0)
				or  (AccountType.Liability
				and  LocalFunctionalAmount	< 0))
					GainAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
				else
					LossAmount.FunctionalAmount.EnteredCurrencyAmount	= LocalFunctionalAmount
				if ((AccountType.Asset
				and  LocalAlternateAmount	> 0)
				or  (AccountType.Liability
				and  LocalAlternateAmount	< 0))
					GainAmount.AlternateAmount.EnteredCurrencyAmount	= LocalAlternateAmount
				else
					LossAmount.AlternateAmount.EnteredCurrencyAmount	= LocalAlternateAmount
				if ((AccountType.Asset
				and  LocalAlternateAmount2	> 0)
				or  (AccountType.Liability
				and  LocalAlternateAmount2	< 0))
					GainAmount.AlternateAmount2.EnteredCurrencyAmount	= LocalAlternateAmount2
				else
					LossAmount.AlternateAmount2.EnteredCurrencyAmount	= LocalAlternateAmount2
				if ((AccountType.Asset
				and  LocalAlternateAmount3	> 0)
				or  (AccountType.Liability
				and  LocalAlternateAmount3	< 0))
					GainAmount.AlternateAmount3.EnteredCurrencyAmount	= LocalAlternateAmount3
				else
					LossAmount.AlternateAmount3.EnteredCurrencyAmount	= LocalAlternateAmount3
				if ((AccountType.Asset
				and  LocalToFunctionalAmount	> 0)
				or  (AccountType.Liability
				and  LocalToFunctionalAmount	< 0))
					GainAmount.ToFunctionalAmount.EnteredCurrencyAmount	= LocalToFunctionalAmount
				else
					LossAmount.ToFunctionalAmount.EnteredCurrencyAmount	= LocalToFunctionalAmount
				if ((AccountType.Asset
				and  LocalToAlternateAmount	> 0)
				or  (AccountType.Liability
				and  LocalToAlternateAmount	< 0))
					GainAmount.ToAlternateAmount.EnteredCurrencyAmount	= LocalToAlternateAmount
				else
					LossAmount.ToAlternateAmount.EnteredCurrencyAmount	= LocalToAlternateAmount
				if ((AccountType.Asset
				and  LocalToAlternateAmount2	> 0)
				or  (AccountType.Liability
				and  LocalToAlternateAmount2	< 0))
					GainAmount.ToAlternateAmount2.EnteredCurrencyAmount	= LocalToAlternateAmount2
				else
					LossAmount.ToAlternateAmount2.EnteredCurrencyAmount	= LocalToAlternateAmount2
				if ((AccountType.Asset
				and  LocalToAlternateAmount3	> 0)
				or  (AccountType.Liability
				and  LocalToAlternateAmount3	< 0))
					GainAmount.ToAlternateAmount3.EnteredCurrencyAmount	= LocalToAlternateAmount3
				else
					LossAmount.ToAlternateAmount3.EnteredCurrencyAmount	= LocalToAlternateAmount3
				if ((AccountType.Asset
				and  LocalProjectAmount		> 0)
				or  (AccountType.Liability
				and  LocalProjectAmount		< 0))
					GainAmount.ProjectAmount.EnteredCurrencyAmount		= LocalProjectAmount
				else
					LossAmount.ProjectAmount.EnteredCurrencyAmount		= LocalProjectAmount
				if ((AccountType.Asset
				and  LocalReportAmount1		> 0)
				or  (AccountType.Liability
				and  LocalReportAmount1		< 0))
					GainAmount.ReportAmount1.EnteredCurrencyAmount		= LocalReportAmount1
				else
					LossAmount.ReportAmount1.EnteredCurrencyAmount		= LocalReportAmount1
				if ((AccountType.Asset
				and  LocalReportAmount2		> 0)
				or  (AccountType.Liability
				and  LocalReportAmount2		< 0))
					GainAmount.ReportAmount2.EnteredCurrencyAmount		= LocalReportAmount2
				else
					LossAmount.ReportAmount2.EnteredCurrencyAmount		= LocalReportAmount2
				if ((AccountType.Asset
				and  LocalReportAmount3 	> 0)
				or  (AccountType.Liability
				and  LocalReportAmount3		< 0))	
					GainAmount.ReportAmount3.EnteredCurrencyAmount		= LocalReportAmount3
				else
					LossAmount.ReportAmount3.EnteredCurrencyAmount		= LocalReportAmount3
				if ((AccountType.Asset
				and  LocalReportAmount4		> 0)
				or  (AccountType.Liability
				and  LocalReportAmount4		< 0))
					GainAmount.ReportAmount4.EnteredCurrencyAmount		= LocalReportAmount4
				else
					LossAmount.ReportAmount4.EnteredCurrencyAmount		= LocalReportAmount4
				if ((AccountType.Asset
				and  LocalReportAmount5		> 0)
				or  (AccountType.Liability
				and  LocalReportAmount5		< 0))
					GainAmount.ReportAmount5.EnteredCurrencyAmount		= LocalReportAmount5
				else
					LossAmount.ReportAmount5.EnteredCurrencyAmount		= LocalReportAmount5

		SystemCodeBlockDefaults		is a DerivedField
			type is Boolean
			if (DefaultSystemAccount.UnrealizedGainLoss)
				LocalChartAccount			= UnrealizedGainLossAccount
				LocalLabel					= "InvalidUnrealizedGainLoss<FinanceEnterpriseGroup.AccountLabel>"
			if (DefaultSystemAccount.RealizedGainLoss)
				LocalChartAccount			= RealizedGainLossAccount
				LocalLabel					= "InvalidRealizedGainLoss<FinanceEnterpriseGroup.AccountLabel>"
			constraint (LocalChartAccount entered)
				"<LocalLabel>"
			LocalFinanceCodeBlock.GeneralLedgerChartAccount	= LocalChartAccount

			LocalFinanceCodeBlock.ToAccountingEntity	= OriginFinanceCodeBlock.ToAccountingEntity
			if (FinanceEnterpriseGroup.AccountingUnitRequired)
				LocalFinanceCodeBlock.AccountingUnit	= SystemAccountingUnitRel.AccountingUnit
				if (OriginFinanceCodeBlock.AccountingUnit entered)
					LocalFinanceCodeBlock.AccountingUnit	= OriginFinanceCodeBlock.AccountingUnit
			if (FinanceEnterpriseGroup.FinanceDimension1Required)
				LocalFinanceCodeBlock.FinanceDimension1	= FinanceDimension1Rel.FinanceDimension1
				if (OriginFinanceCodeBlock.FinanceDimension1 entered)
					LocalFinanceCodeBlock.FinanceDimension1	= OriginFinanceCodeBlock.FinanceDimension1
			if (FinanceEnterpriseGroup.FinanceDimension2Required)
				LocalFinanceCodeBlock.FinanceDimension2	= FinanceDimension2Rel.FinanceDimension2
				if (OriginFinanceCodeBlock.FinanceDimension2 entered)
					LocalFinanceCodeBlock.FinanceDimension2	= OriginFinanceCodeBlock.FinanceDimension2
			if (FinanceEnterpriseGroup.FinanceDimension3Required)
				LocalFinanceCodeBlock.FinanceDimension3	= FinanceDimension3Rel.FinanceDimension3
				if (OriginFinanceCodeBlock.FinanceDimension3 entered)
					LocalFinanceCodeBlock.FinanceDimension3	= OriginFinanceCodeBlock.FinanceDimension3
			if (FinanceEnterpriseGroup.FinanceDimension4Required)
				LocalFinanceCodeBlock.FinanceDimension4	= FinanceDimension4Rel.FinanceDimension4
				if (OriginFinanceCodeBlock.FinanceDimension4 entered)
					LocalFinanceCodeBlock.FinanceDimension4	= OriginFinanceCodeBlock.FinanceDimension4
			if (FinanceEnterpriseGroup.FinanceDimension5Required)
				LocalFinanceCodeBlock.FinanceDimension5	= FinanceDimension5Rel.FinanceDimension5
				if (OriginFinanceCodeBlock.FinanceDimension5 entered)
					LocalFinanceCodeBlock.FinanceDimension5	= OriginFinanceCodeBlock.FinanceDimension5
			if (FinanceEnterpriseGroup.FinanceDimension6Required)
				LocalFinanceCodeBlock.FinanceDimension6	= FinanceDimension6Rel.FinanceDimension6
				if (OriginFinanceCodeBlock.FinanceDimension6 entered)
					LocalFinanceCodeBlock.FinanceDimension6	= OriginFinanceCodeBlock.FinanceDimension6
			if (FinanceEnterpriseGroup.FinanceDimension7Required)
				LocalFinanceCodeBlock.FinanceDimension7	= FinanceDimension7Rel.FinanceDimension7
				if (OriginFinanceCodeBlock.FinanceDimension7 entered)
					LocalFinanceCodeBlock.FinanceDimension7	= OriginFinanceCodeBlock.FinanceDimension7
			if (FinanceEnterpriseGroup.FinanceDimension8Required)
				LocalFinanceCodeBlock.FinanceDimension8	= FinanceDimension8Rel.FinanceDimension8
				if (OriginFinanceCodeBlock.FinanceDimension8 entered)
					LocalFinanceCodeBlock.FinanceDimension8	= OriginFinanceCodeBlock.FinanceDimension8
			if (FinanceEnterpriseGroup.FinanceDimension9Required)
				LocalFinanceCodeBlock.FinanceDimension9	= FinanceDimension9Rel.FinanceDimension9
				if (OriginFinanceCodeBlock.FinanceDimension9 entered)
					LocalFinanceCodeBlock.FinanceDimension9	= OriginFinanceCodeBlock.FinanceDimension9
			if (FinanceEnterpriseGroup.FinanceDimension10Required)
				LocalFinanceCodeBlock.FinanceDimension10 = FinanceDimension10Rel.FinanceDimension10
				if (OriginFinanceCodeBlock.FinanceDimension10 entered)
					LocalFinanceCodeBlock.FinanceDimension10	= OriginFinanceCodeBlock.FinanceDimension10

		UnrealizedGainLossAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			LocalSystemAccount = SystemAccount.UnrealizedGainAndLoss 
			if (SystemAccountRel exists)
				SingleSystemAccount		= true
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				if (!LocalPositiveAndNegative)
					LocalSystemAccount = SystemAccount.UnrealizedLoss 
					return first SystemAccountRel.GeneralLedgerChartAccount
				else
					LocalSystemAccount = SystemAccount.UnrealizedGain 
					return first SystemAccountRel.GeneralLedgerChartAccount
		RealizedGainLossAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			LocalSystemAccount = SystemAccount.RealizedGainAndLoss 
			if (SystemAccountRel exists)
				SingleSystemAccount		= true
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				if (!LocalPositiveAndNegative)
					LocalSystemAccount = SystemAccount.RealizedLoss 
					return first SystemAccountRel.GeneralLedgerChartAccount
				else
					LocalSystemAccount = SystemAccount.RealizedGain 
					return first SystemAccountRel.GeneralLedgerChartAccount

	Relations
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SystemAccount						= LocalSystemAccount
		SystemAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses BySystemAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= AccountingEntity
		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension1Structure			= FinanceEnterpriseGroup.EnterpriseDim1Structure
		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension2Structure			= FinanceEnterpriseGroup.EnterpriseDim2Structure
		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension3Structure			= FinanceEnterpriseGroup.EnterpriseDim3Structure
		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension4Structure			= FinanceEnterpriseGroup.EnterpriseDim4Structure
		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension5Structure			= FinanceEnterpriseGroup.EnterpriseDim5Structure
		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension6Structure			= FinanceEnterpriseGroup.EnterpriseDim6Structure
		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension7Structure			= FinanceEnterpriseGroup.EnterpriseDim7Structure
		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension8Structure			= FinanceEnterpriseGroup.EnterpriseDim8Structure
		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension9Structure			= FinanceEnterpriseGroup.EnterpriseDim9Structure
		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension10Structure			= FinanceEnterpriseGroup.EnterpriseDim10Structure
				
