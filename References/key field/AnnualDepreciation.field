AnnualDepreciation is a Field

	Representation
        Group Fields
        	InAsset							is an Asset
        	InBook							is a Book
        	InYearEndDate					is Date
        	InYearBeginDate					is Date
        	Convention						
        	InServiceDate					is Date
        	InPrevYearEndDate				is Date
        	InAnnualDepreciation			is like InternationalAmount
        	InCompany						is a Company
        	InFirstLastFlag					is AlphaUpper size 1
        	InMethod						is a Method
        	InLife							is a Life
        	InPersonalUseCode				is a PersonalUseCode
        	InTableYear						is Numeric 2
        	InLTDDepr						is an InternationalAmount
        	InYTDDepr						is an InternationalAmount
        	InYTDDeprAllow					is an InternationalAmount
        	InLTDDeprAllow					is an InternationalAmount
        	InSalvageValue					is an InternationalAmount
        	InBasis							is an InternationalAmount
        	InLifeRemaining                 is Decimal size 14.10
        	InBusinessPercent				is a BusinessPercent
        	InStartDate						is Date
			InTaxCreditTable				is a AssetTaxCreditTable
			InFirstYearExpenseAmount		is an InternationalAmount
			InFirstAndLastYear				is a FirstAndLastYear
			InYearToDateInactiveMonths		is a YearToDateInactiveMonths
			InDepreciationStartDate			is Date
			FromProjection					is Boolean
   		     	
	Transient Fields	  
		LocalProcess						is Alpha 1
			States
				GetFirstPeriodDepreciation	value is 1
		LocalPUAnnualDepreciation			is Decimal size 26.10
		LocalPUAnnualDepreciationSave		is Decimal size 26.10
		LocalPctTableLTDDepreciation		is an InternationalAmount	
		LocalPUDeprLTD						is an InternationalAmount
		LocalPUDeprLTDAllow					is an InternationalAmount
		LocalTotalPUHDepreciation			is an InternationalAmount
		LocalTotalRCPDepreciation			is an InternationalAmount	
		PUAnnualDepDetail
		PUAnnualDepDetail1                  is like PUAnnualDepDetail
		LocalDeprYTDAllow					is an InternationalAmount
		LocalDeprLTDAllow					is an InternationalAmount
        InYTDDeprOvrrd						is an InternationalAmount	
		LocalTempDeprBonus					is an InternationalAmount
		LocalDeprBonus						is Decimal size 26.10
		LocalDeprBonusAllow					is Decimal size 26.10
		LocalDeprBonusFull					is Decimal size 26.10

		Local100Bonus						is Decimal size 26.10 
		LocalAdjBasis						is Decimal size 26.10
		LocalTotalLimits					is an InternationalAmount
		LocalDeprCP							is Decimal size 26.10
		LocalTempDeprCP						is Decimal size 26.10
		LocalDeprCPAllow					is Decimal size 26.10
		LocalASBDeprLTD						is an InternationalAmount
		LocalRecpAmount						is an InternationalAmount
		LocalOverage						is an InternationalAmount

		LocalAdjSalvage						is an InternationalAmount
		LocalDepreciationRemaining			is an InternationalAmount
		LocalSLCalculation					is AlphaUpper size 1
		LocalConvention						is a Convention
		LocalBasisReductionPercentage		is Decimal size 19.3
		LocalYearPlacedInService			is Numeric size 2
		LocalTmpDeprPd						is Numeric size 2
		LocalCurrPd							is Numeric size 2
		LocalNbrCalPd						is Decimal size 4.2
		LocalCalendarStatus                 is AlphaUpper size 1 
		LocalPDUnitsYTD						is an InternationalAmount
		LocalPDUnitsCP						is an InternationalAmount
		LocalDay1							is Numeric size 3
		LocalDay2							is Numeric size 3
		LocalDayDiff						is Decimal size 26.10
		LocalMonthDiff						is Numeric size 9
		LocalYearDiff						is Numeric size 9
		LocalNbrDays						is Numeric size 3
		LocalNbrOfDays						is Numeric size 3
		LocalNbrDaysRound					is Decimal size 7.3
		LocalNumberOfPeriodDays				is Numeric size 3
		LocalShortYearDays					is Numeric size 3
		LocalNormYEDays						is Numeric size 3
		LocalMQBeginDay						is Numeric size 7
		LocalMQBeginDayDiff					is Numeric size 7
		LocalTmpLifeDiff					is Decimal size 7.3
		LocalLife							is Decimal size 7.3
		LocalLifeCP							is Decimal size 14.10
		LocalLifeCP11						is Decimal size 15.11
		LocalTempLifeCP						is Decimal size 14.10
		LocalTempLife						is Decimal size 7.3
		LocalLifeRemaining					is Decimal size 14.10
		HalfYearLocalLifeCalc				is Decimal size 7.5
		LocalTempRemainingLife				is Decimal size 14.10
		LocalDeprePeriodsRemaining			is Decimal size 14.10
		LocalActLifeRemaining				is Decimal size 14.10
		LocalTempLifeRemaining				is Decimal size 14.10
		LifeRemaining						is Decimal size 14.10
		LocalLifeRemainingAmt				is an InternationalAmount
		LocalBeginYrLife					is Decimal size 26.10
		LocalDBPercent						is a BusinessPercent
		LocalCalcAnnual						is an InternationalAmount
		LocalBookBasis						is an InternationalAmount 
		LocalPMTrigger						is Decimal size 10
		LocalFirstLastFl					is AlphaUpper size 1
		LocalCalFound						is Boolean
		LocalSkip							is Boolean
		LocalLYA							is Boolean
		LocalNbrMonthCalPd					is Decimal size 4.2
		LocalMethodSW						is Boolean
		LocalMethodSwitched					is Alpha 1		
		LocalInsrvPdSW						is Boolean
		LocalOvrdSW							is Boolean
		LocalShortYear						is Boolean
		LocalNonCurrCalSW					is Boolean
		LocalActCalSW						is Boolean
		LocalTestInServiceDate				is Date
		ProjectedHistoryBeginDate			is Date
		ProjectedHistoryEndDate				is Date
		LocalBeginDateFound					is Boolean
		YearsToCurrentCalendar 				is Numeric 3
		LocalAnnualDepreciation				is Decimal size 26.10
		LocalAnnualDepreciationTemp			is Decimal size 26.10
		LocalAnnualDepreciationSave			is Decimal size 26.10
		LocalDeprCompare					is Decimal size 26.10
		LocalSaveMethod						is a Method
		LocalMethod							is a Method
		LocalOptMethod						is a Method
		LocalTempMethod						is a Method
		LocalTcTable						is Alpha size 10
		LocalCDB							is an InternationalAmount
		LocalCDBDate						is Date
		LocalADP							is an InternationalAmount
		LocalPUD							is an InternationalAmount
		LocalCSL							is an InternationalAmount
		LocalSL								is an InternationalAmount
		LocalInactYear						is like LifeToDateInactiveMonths
		LocalAsset							is like Asset
		LocalPersonalUseCode				is AlphaUpper size 10
		LocalLifeInYrs						is Decimal size 8.4
		LocalSumOfYrs						is Decimal size 7.2
		LocalNumberYearsRemaining			is Decimal size 11.7
		LocalDigitsValue					is Decimal size 7.3
		LocalNumberYearsRemainingD			is Decimal size 7.3
		LocalDepreciationPeriodsPerYear		is Numeric size 3
		LocalRecordType						is AlphaUpper size 1
		LocalMethodYear						is Decimal size 2
		LocalMethodUnitsOfProductionYear	is Decimal size 2
		I1 									is Numeric 2
		I2									is Numeric 2
		I3									is Numeric 2
		I6 									is Numeric 2
		I8 									is Numeric 2
		LocalUseBeginYearDate				is AlphaUpper size 1
		LocalHRecord						is AlphaUpper size 1 
		LocalDone							is Boolean
		LocalPercent						is Decimal size 6.3
		LocalMethodTableYear				is Decimal size 2 
		LocalAmmTotalUnits					is an AnnualUnitsOfProduction
		LocalUOPPdSW						is Boolean
		LocalCatchUp						is Boolean
		LocalTmpYrEndDate					is Date
		LocalTmpFromDate					is Date
		LocalInServiceDate					is Date
		FirstYearBeginDate					is Date
		NextYearBeginDate					is Date
		HalfYearBeginDate					is Date
		LocalFYMonths						is Decimal 5.2
		LocalTmpProcessedMonths				is Decimal size 14.10
		LocalCompany						is a Company
		LocalPrevYearEndDate				is Date
		LocalDeprStartDate					is Date
		TestingDate							is Date
		LocalStartDateSave					is Date
		LocalEndDate						is Date
		LocalTempYrEndDate					is Date
		LocalTempYrEndDateM6				is Date
		LocalTempYrBegDate					is Date
		LocalRecapDate						is Date
		LocalInsrvDate						is Date
		LocalYearBeginDate					is Date
		LocalYearEndDate					is Date
		LocalAdjDate						is Date
		LocalTmpToDate						is Date
		LocalExpDate						is Date 
		LocalAdjNbrDeprPd					is Decimal size 14.10
		LocalAdjNbrDeprPdClosed				is Decimal size 14.10
		LocalFirstYearMonth					is Numeric size 3
		LocalRecapType						is Alpha size 1
		LocalProcessedMonths				is Decimal size 14.10
		LocalPeriods						is Decimal 9.5
		LocalProcessedMonthsActualDays		is Decimal 9.5
		LocalPeriodsClosed					is Decimal 9.5
		LocalMonthsToAdd					is Decimal 9.5
		LocalTriggerMonths	 				is Numeric size 5		
		NumberMonths												
		MonthsProcessed												
		LocalNumberOfDepreciationPeriodsClosedSave	is Numeric size 3
		LocalNumberOfDepreciationPeriodsClosed		is Numeric size 3
		LocalNumberOfAdjDepreciationPeriodsClosed	is Decimal size 14.10
		LocalNumberOfDepreciationPeriodsPd			is Numeric size 3
		LocalNumberOfAdjDepreciationPeriodsPd		is Numeric size 3
		LocalPeriodEndDateSave						is Date
		LocalCalendarPeriodBeginDate		is Date
		CurrentCalendarPeriod 				is Numeric 2
		LocalProgram						is Alpha size 100
		LocalProgramOption					is Alpha size 1
		LocalPriorProcessSW					is Boolean
		LocalBusUseTmp						is a BusinessPercent
		StkSub								is Alpha size 2
		WrkSub								is Alpha size 2
		LocalElementCode					is AlphaUpper size 37
		LocalProcessValue					is an InternationalAmount
		LocalProcessValueAlpha				is Alpha size 15
		LocalStackValue						is a ComputeStatementValue
		LocalPeriodsFinalYear				is Numeric 2
		
		LocalCalcYtdAmt						is an InternationalAmount
		LocalCalcPUYtdAmt					is an InternationalAmount 
		LocalCalcYtdLife					is Decimal size 7.3
		LocalTotPer							is Alpha size 2
		LocalSysBeginYearLife				is Decimal size 7.3
		LocalShortYE						is Date 
		LocalNewYearEndDate					is Date
		LocalYrBeginDate					is Date
		LocalSysInsrvDate					is Date
		LocalNormYEDate						is Date
		LocalShortYEDays					is Date
		LocalFromDate						is Date
		LocalAddMonth						is Numeric size 2
		LocalAddYear						is Numeric size 2
		LocalAddDay							is Numeric size 2
		TestPeriod							is Numeric 2
		PeriodFound							is Boolean
		LocalPeriodBeginDate				is Date
		LocalPeriodEndDate					is Date
		NextLocalPeriodBeginDate			is Date
		NumberOfCalendarPeriods				is Decimal 5.2
		LocalDaysFromBeginDate				is Numeric 3
		LocalHalfYearDate					is Date
		HalfYearPeriod						is Decimal 5.2
		AddPeriods							is Numeric 2
		PriorPeriod							is Numeric 2
		CalendarDays						is Numeric 3	
		QuarterEndPeriod					is Numeric 2
		Quarter 							is Numeric 1 
		QuarterDays 						is Numeric 2
		QuarterBeginDate					is Date
		QuarterMidpoint						is Decimal 5.2
		MidQuarterDate						is Date
		MidQuarterDays						is Numeric 2
		MidQuarter1Date						is Date
		Quarter1EndDate						is Date		
		MidQuarter2Date						is Date
		Quarter2EndDate						is Date
		MidQuarter3Date						is Date
		Quarter3EndDate						is Date
		MidQuarter4Date						is Date
		Quarter4EndDate						is Date
		Q1EndDate							is Date
		Q2EndDate							is Date
		Q3EndDate 							is Date
		Q4EndDate							is Date
		
		FirstYearMonthsHalfYear				is Decimal 9.2
		CountHalfYearPeriod					is Decimal 19.3
		CountFullYearPeriod					is Decimal 19.3
		CountMidQuarterPeriod				is Decimal 19.3
		CountYears							is Numeric size 2
		LocalCountYears						is Numeric size 3
		LocalHistoryYearEndDate				is Date
		LocalNumberOfYearsPrior				is Numeric size 3

		CustomLifeRemaining					is Decimal size 14.10
		CustomLifeRemainingLastYear			is Decimal size 14.10
		CustomDeprLTD						is an InternationalAmount					
		CustomDeprYTD						is an InternationalAmount
		CustomYearEndDate					is Date 
		CustomYearBeginDate 				is Date
		LocalCounter						is Numeric size 2
		CurrentPeriodBeginDate				is Date
		LocalLastLimit					    is an InternationalAmount 
		LocalShortAnnualDepreciation		is Decimal size 26.10

		TranProcessedMonths					is Numeric size 2
		TranLocalAnnualDepreciation 		is an InternationalAmount

		LocalDeprLTD						is an InternationalAmount	
		LocalDeprYTD						is an InternationalAmount 

		LocalTempDeprLTD					is an InternationalAmount
		LocalTempDeprYTD					is an InternationalAmount

		LocalStartDate						is Date
		
		LastPeriodEnd						is Date
		LocalDeprEndDate					is Date
		LocalLastPeriodEnd					is Date
				
		SYDFirstTime						is Boolean
		
		LocalDigitsValueNumberYears			is Decimal size 7.3
		LocalDecimalValueNumberYears		is Decimal size 18.6

		NumberOfPeriodsFirstYear			is Decimal 14.10
		NumberOfPeriodsClosedFirstYear		is Decimal 12.8
		LocalNumOfPdsClosedCurrentYear		is Decimal 12.8
		
		LocalMonthsInFirstYear				is Decimal 9.7
		
		LocalMonthlyDepreciation			is Decimal 18.6
		LocalComputeOption					is a Compute
		LocalNumDeprPer						is Numeric size 2
		NumCount							is Numeric size 2
		ActualDaysPeriodsClosedFirstYear	is Decimal 12.8
		ActualDaysPeriodsClosedCurrentYear	is Decimal 12.8

		ActualDaysMonthsClosedFirstYear		is Decimal 15.8
		FirstYearDepreciationAmount			is Decimal 9.2
		FirstYearAmount						is an InternationalAmount
		LocalFirstYearPeriods				is Decimal 9.5
		LocalFirstYearPeriodsClosed			is Decimal 9.5
		CompletelyDepreciated				is Boolean
		
		MidQuarterFirstYearPeriods			is Numeric size 2
		MidQuarterFirstYearPeriodsClosed	is Numeric size 2
		MidQuarterFirstYearDepr				is an InternationalAmount
		LocalNumberOfPeriodsMQ				is an InternationalAmount
		LocalNumberOfPeriods				is Numeric size 3
		
		LocalTempPeriodsClosed				is Numeric size 2
		LocalTempDate						is Date
		G1									is Numeric size 2
		T1									is Numeric size 3
		S1									is Numeric size 3

		LocalTempNumberOfMonthsActualDays	is Decimal 14.10
		LocalNumberOfMonthsActualDays		is Decimal 14.10
		LocalDepreciationSet				is Boolean
		
		LocalNumberOfDaysYear				is Numeric size 12
		LocalTriggerNumberOfDays			is Numeric size 12
		LocalPercentYear					is Numeric size 2
		
		LocalStartMonth						is Numeric size 2
		LocalEndMonth						is Numeric size 2
		LocalLastYearPeriod					is Decimal 9.5
		LocalCountHalfYearPeriod			is Decimal 9.5
		LocalCountFullYearPeriod			is Decimal 9.5
		LocalCountNotFound					is Boolean
		LocalNumberOfPeriodsLastYear		is Decimal 9.5
		LocalDaysDiffMonth					is Numeric size 12
		LocalInServiceDiffDays				is Numeric size 12
		LocalFutureYearEndDate              is Date
		LocalNumberOfYearsFuture            is Numeric 3
		LocalDiff                           is Numeric 3	
		

		GWTLocalDeprLTD						is an InternationalAmount
		GWTLocalDeprYTD						is an InternationalAmount
		GWTLocalDeprBonus					is an InternationalAmount
		GWTLocalAdjBasis					is an InternationalAmount
		GWTLocalAnnualDepreciation			is an InternationalAmount
		GWTLocalLifeRemaining				is Decimal size 14.10
		GWTLocalProcessedMonths				is Decimal 9.2
		GWTLocalTrigger		 				is Numeric size 5
		GWTLocalBeginYrDepr					is an InternationalCost
		GWTLocalFirstLastFl					is AlphaUpper size 1
		GWTLocalHRecord						is AlphaUpper size 1
		GWTLocalBeginYrLife					is Decimal size 14.10
		GWTAddedBonusDepr					is Boolean
		LocalHisRemainPds					is Decimal size 14.10
		GWTComputeAnnualDepreciation		is an InternationalAmount
		GWTCalculateAnnual					is an InternationalAmount
		GWTCalculateDeclingBalance			is an InternationalAmount
		GWTCalculateDepreciationBonus		is an InternationalAmount
		GWTFirstYearDepreciation			is an InternationalAmount
		GWTFirstYearMonths					is an InternationalAmount
		GWTLocalDeprCP						is an InternationalAmount

		LocalPeriod								is Numeric size 2
		LocalInServiceMonth						is Numeric size 2
		LocalNumberOfDaysFirstMonth				is Numeric size 2
		LocalTotalNumberOfDaysFirstMonth		is Numeric size 2
		LocalNumberOfDaysFirstYear				is Decimal size 9.3
		LocalLifeInYears						is Decimal size 5.2
		LocalFirstMonthPercent					is Decimal size 14.10
		LocalFirstYearDepreciation				is Decimal size 20.10
		LocalLifeRemainingAcutalDaysFirstMonth	is Decimal size 14.10
		LocalFirstMonthProcessed				is Decimal size 7.3
		LocalAdjustAmount						is Decimal size 15.5
		LocalDepreciationCalculated				is Boolean
		LocalFirstYearCalcPeriods				is Decimal size 10.5
		LocalFirstYearPeriodsCount				is Decimal size 10.5
		LocalCurrentPeriodCount					is Numeric size 2
		DepreciationEndDate						is Date
		LocalSpreadOverRemainingLife			is Boolean
		LocalDate 								is Date
		LocalYearValue							is Decimal size 14.10
		LocalPortionOfYear						is Decimal size 14.10
		LocalYTDAmount							is an InternationalCost

		LocalMethodCompute						is an AssetBook compute in subject AssetMethodFormula	
		LocalMethodFormula						is a MethodFormula
		ProjectedInserviceDate					is Date
		FutureYearEndDate						is Date
		YearsInFuture							is Numeric size 3

		LocalDeprSwitch							is Boolean
		NoOfDaysToDepreciateInPeriod			is Numeric size 3
		NoOfDaysToDepreciateInYear				is Numeric size 3
		LocalNumberOfDays						is Numeric size 3
		DayDifference							is Numeric size 3
		DepreciationLifeValue					is Decimal size 7.3
		LocalDeprPdPerYear						is Decimal size 7.3
		LocalLastYearEndDate					is Date
		LocalNumberOfDaysClosed					is Numeric size 12
		NumberOfPeriodCloseRuns					is Numeric size 2
		LocalAssetBook							is an AssetBook
		LastClosedDepreciationPeriodEndDate		is Date
		CurrentDepreciationPeriodEndDate		is Date
		InservicePeriod							is Numeric size 2
		LocalMonthBeforeShortYear				is Date

		LocalCurrentYearBeginDate           	is Date
    	LocalCurrentYearEndDate 				is Date
		LocalCurrentPriorYearEndDate			is Date
		LocalCurrentPeriodDepreciation			is Decimal size 26.10
		LocalAllDepreciationPeriodsPerYear		is Decimal 14.10
		LocalTotalAnnualDepreciation			is Decimal size 26.10 
		FirstCalendarYearBeginDate				is Date

	Context Fields
   		FinanceEnterpriseGroup
		
	Conditions	 
		LocalFirstYear
			when (InFirstAndLastYear = "F")
			
		LocalLastYear
			when (InFirstAndLastYear = "L")
		
		ValidBookCalendarExists
			when (ValidBookCalendarRel exists)
		
		NRecord
			when ((LocalStartDate	 				> LocalPrevYearEndDate
			or     InServiceDate 					> LocalPrevYearEndDate
			or 	   !InLifeRemaining > 0)
			and    (InLife = 0
			and    !InFirstAndLastYear = "P")
			or     (InFirstAndLastYear = "P"
			and    InFirstAndLastYear  = "C"))
	
		LRecord
			when ((LocalStartDate 					> LocalPrevYearEndDate
			or     InServiceDate 					> LocalPrevYearEndDate)
			or 	   (!LocalLifeRemaining > 0
			and    !LocalLife = 0
			and    !InFirstAndLastYear				= "P")
			or     (InFirstAndLastYear				= "P"
			and     InFirstAndLastYear				= "C"))

		IsAnDBMethod
			when (InMethod		= "125DB"
			or 	InMethod		= "150DB"
			or	InMethod		= "175DB"
			or	InMethod		= "200DB"
			or	InMethod		= "150DB30%"
			or	InMethod		= "150DB40%"			
			or	InMethod		= "150DB50%"
			or	InMethod		= "200DB30%"
			or	InMethod		= "200DB40%"			
			or	InMethod		= "200DB50%"
			or 	InMethod		= "200DB20%"
			or 	InMethod		= "150DB20%"
			or	InMethod		= "200DB75%"
			or 	InMethod		= "150DB75%"
			or 	InMethod		= "200DB60%"
			or 	InMethod		= "150DB60%"
			or 	InMethod		= "200DB80%"
			or 	InMethod		= "150DB80%")
		
		IsCustomFormula
			when (InMethod.MethodCategoryType.User
			and InMethod.RecordType.Compute)

		IsInCurrentYearClosedPeriod
			when (InServiceDate >= CurrentBookCalendarsRel.YearBeginDate
			and  InServiceDate <= CurrentBookCalendarsRel.LastPeriodDate)	

		IsBookHasShortYear
			when (first ShortYearBookCalendarsRel exists)

				
		
    Relations

		AssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset 							= InAsset
				
		AssetBookRel	
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= LocalAsset
				related.Book							= InBook

		DepreciationAssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= InAsset
				related.Book							= AssetBookRel.ImpairmentBookOfOrigin	

		AssetTaxCreditTableRel
			one-to-one relation to AssetTaxCreditTable
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.AssetTaxCreditTable				= LocalTcTable
				
		MethodRel
			one-to-one relation to Method
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Method							= LocalMethod
				
		CurrentBookCalendarsRel
			one-to-one relation to BookCalendar
			Field Mapping uses Set5
				related.Book							= InBook	
				related.Company							= LocalCompany
		
		ValidBookCalendarRel
			one-to-many relation to BookCalendar	
			Field Mapping uses Set5
				related.Book							= InBook	
				related.Company							= LocalCompany	
			Instance Selection			
				where (LocalStartDate within related.CalendarDateRange)

		CurrentCalendarForTestInServiceDateRel
			one-to-many relation to BookCalendar	
			Field Mapping uses Set5
				related.Book							= InBook	
				related.Company							= LocalCompany	
			Instance Selection			
				where (LocalTestInServiceDate <= related.YearEndDate
				and LocalTestInServiceDate >= related.YearBeginDate)
				
		BookCalendarForInserviceDateRel  
			one-to-many relation to BookCalendar
			Field Mapping uses ByBeginDateDescending
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
			Instance Selection	
				where (related.YearBeginDate <= LocalInServiceDate
				and related.YearEndDate >= LocalInServiceDate)
				
		HistoryYearBookCalendarsRel3
			one-to-one relation to BookCalendar
			Field Mapping uses Set3
				related.CalendarStatus					= LocalCalendarStatus
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
				related.YearEndDate						= LocalYearEndDate
				
		HistoryCalendarsShortYearRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
			Instance Selection
				where (related.IsHistory
				and related.ShortYear)

		HistoryYearBookCalendarsRel2
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book 							= InBook
				related.Company 			 			= LocalCompany

		HistoryCalendarsForBookCompanyRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set2
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
			Instance Selection
				where (related.IsHistory)	
				
		HistoryYearBookCalendarsRel4
			one-to-many relation to BookCalendar
			Field Mapping uses Set3
				related.CalendarStatus					= LocalCalendarStatus
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
			Instance Selection
				where (related.YearBeginDate <= LocalInServiceDate
				and related.YearEndDate >= LocalInServiceDate)
		
		CalendarsByDateRel
			one-to-many relation to BookCalendar
			Field Mapping uses ByCompanyBookDate
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Company					= LocalCompany
                related.Book					= InBook
            Instance Selection
            	where (related.IsHistory
            	and related.YearBeginDate > LocalInServiceDate)
		
		BookCalendarByDateRel
			one-to-many relation to BookCalendar
			Field Mapping uses ByCompanyBookDate
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Company					= LocalCompany
                related.Book					= InBook
            Instance Selection
            	where (related.YearEndDate > LocalInServiceDate)
			
       	BookCalendarsByDateRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set2
				related.Book 							= InBook
				related.Company 			 			= LocalCompany
           	Instance Selection     
                where (related.YearEndDate >= LocalInServiceDate)
       
                
		MethodComputeRel 
			one-to-one relation to Method
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.Method							= LocalMethod
				
		MethodPercentTableRel 
			one-to-one relation to MethodPercentTable
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.Method 							= LocalMethod
				
				
		MethodUnitsOfProductionYearRel
			one-to-one relation to MethodUnitsOfProductionYear
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.Method							= LocalMethod
				related.MethodUnitsOfProductionYear 	= LocalMethodUnitsOfProductionYear
		
		MethodAEUnitsOfProductionYearRel
			one-to-many relation to MethodUnitsOfProductionYear
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.Method							= LocalMethod
						
		PersonalUseCodeRel
			one-to-many relation to PersonalUseCode
			Field Mapping uses Set1
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.Book							= InBook
				related.PersonalUseCode 				= LocalPersonalUseCode
				related.EffectiveDate                   <= InServiceDate
				
		PersonalUseHistoryRel		
			one-to-many relation to PersonalUseHistory
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= LocalAsset
				related.Book							= InBook
				
		AssetRecaptureRel		
			one-to-many relation to AssetRecapture
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= LocalAsset
				related.Book							= InBook	
				
		AssetRecaptureRel1		
			one-to-one relation to AssetRecapture
			Field Mapping uses Set1
				related.AssetRecapture.RecaptureType	= LocalRecapType
				related.Asset							= LocalAsset
				related.Book							= InBook
				related.AssetRecapture.RecaptureDate	= LocalEndDate	

		AllYearCalendarsRel
            one-to-many relation to BookCalendar
            Field Mapping uses ByCompanyBookDate
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                related.Company                     = LocalCompany
                related.Book                        = InBook
            Instance Selection
                where (related.YearBeginDate > LocalInServiceDate
                and related.YearEndDate     <= LocalCurrentYearEndDate)

		AllYearUntilPreviousCalendarsRel
            one-to-many relation to BookCalendar
            Field Mapping uses ByCompanyBookDate
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                related.Company                     = LocalCompany
                related.Book                        = InBook
            Instance Selection
                where (related.YearBeginDate > LocalInServiceDate
                and related.YearEndDate     <= LocalCurrentPriorYearEndDate)

		ShortYearBookCalendarsRel
            one-to-many relation to BookCalendar
            Field Mapping uses Set2
				related.Book                        = InBook
                related.Company                     = LocalCompany
			Instance Selection
				where (related.ShortYear)

	Derived Fields	 

		LocalNumberOfDeprPeriods is a DerivedField
			type is Numeric size 2
			restricted
			initialize LocalNumDeprPer
			if (AssetRel exists)
				LocalCompany	= AssetRel.Company
			else
				LocalCompany	= InCompany
			NumCount = 1
			if (CurrentBookCalendarsRel exist)
				while (NumCount < 56)
					if (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[NumCount] not entered)
						LocalNumDeprPer = NumCount - 1
						NumCount = 56
					else
						NumCount += 1
			else
				LocalNumDeprPer = 1 			
			return LocalNumDeprPer
			
		ComputeAnnualDepreciation is a DerivedField		
			type is Decimal size 26.10
			restricted
			if (InAsset entered)
				LocalAsset	= InAsset
			else
				initialize LocalAsset  
			if (!LocalDeprSwitch
			or LocalAssetBook not entered)
				LocalAssetBook = AssetBookRel.AssetBook

			if (LocalAsset entered)
				InMethod 					= LocalAssetBook.Method
				InBusinessPercent 			= LocalAssetBook.BusinessPercent
				InYTDDepr					= LocalAssetBook.YearToDateDepreciation
				InLTDDepr					= LocalAssetBook.LifeToDateDepreciation
				if (!FromProjection)
					InLTDDeprAllow			= LocalAssetBook.LifeToDateDepreciationAllowed
					InYTDDeprAllow			= LocalAssetBook.YearToDateDepreciationOverride
				if (InBook.Impairment
				and LocalAssetBook.Convention.ActualDays
				and !LocalDeprSwitch)
					InLife					= ImpairmentBookLife
				else	
					InLife					= LocalAssetBook.Life
				InTableYear					= LocalAssetBook.YearPlacedInService
				InSalvageValue				= LocalAssetBook.SalvageValue
				InTaxCreditTable			= LocalAssetBook.AssetTaxCreditTable
				InFirstYearExpenseAmount	= LocalAssetBook.FirstYearExpenseAmount
				InFirstLastFlag				= LocalAssetBook.FirstAndLastYear
				InYearToDateInactiveMonths	= LocalAssetBook.YearToDateInactiveMonths
				Convention					= LocalAssetBook.Convention
			if (InMethod entered)
				LocalMethod = InMethod
				LocalSkip = false
				if (InBusinessPercent < 100)
					LocalTempDeprLTD			= InLTDDepr
					LocalTempDeprYTD			= InYTDDepr
					if (!LocalDeprSwitch)
						LocalDeprLTDAllow		= InLTDDeprAllow
						LocalDeprYTDAllow		= InYTDDeprAllow
				if (LocalDeprSwitch)	
					LocalPMTrigger	= ProcessMethod580
				else
					LocalPMTrigger	= ProcessMethod

				if (InPersonalUseCode entered)
					if (InTableYear > 20)
						LocalYearPlacedInService	= 20
					
					
					LocalPersonalUseCode		= InPersonalUseCode
					if (PersonalUseCodeRel exists)
						if (LocalFirstYear
						and !InMethod 				= "100%BONUS"
						and  LocalProgram			= "AM255"
						and  LocalProgram			= "AM20"
						and !LocalDeprSwitch)
							LocalPUAnnualDepreciation			= LocalAnnualDepreciation
							LocalPUAnnualDepreciationSave		= LocalAnnualDepreciation
							LocalDeprBonusAllow					= LocalDeprBonus
							if (InBusinessPercent < 100)
								LocalDeprLTDAllow				= InLTDDepr
								LocalDeprYTDAllow				= InYTDDepr
								if (InMethod	= "200DB30%"
								or InMethod		= "150DB30%"
								or InMethod		= "SL30%"
								or InMethod		= "200DB40%"
								or InMethod		= "150DB40%"
								or InMethod		= "SL40%"
								or InMethod		= "100%BONUS"
								or InMethod		= "200DB50%"
								or InMethod		= "150DB50%"
								or InMethod		= "SL50%"
								or InMethod		= "SL75%"
								or InMethod		= "200DB75%"
								or InMethod		= "150DB75%"
								or InMethod		= "SL20%"
								or InMethod		= "200DB20%"
								or InMethod		= "150DB20%"
								or InMethod		= "SL60%"
								or InMethod		= "200DB60%"
								or InMethod		= "150DB60%"
								or InMethod		= "SL80%"
								or InMethod		= "200DB80%"
								or InMethod		= "150DB80%")
									LocalDeprBonus				= ((LocalDeprBonus * InBusinessPercent)/ 100)
									if ((LocalProgram			= "AM180"
									or LocalProgram				= "AM280"
									or LocalProgram				= "AM255")
									and (LocalTempDeprLTD entered
									and LocalFirstYear))
										LocalTempDeprYTD		-= LocalDeprBonus
										LocalTempDeprLTD		-= LocalDeprBonus
								
								LocalTempDeprLTD				= LocalDeprLTD
								LocalTempDeprYTD				= LocalDeprYTD
								if (InPersonalUseCode entered)
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow 	= LocalAnnualDepreciation * InBusinessPercent
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow  /= 100
								LocalAnnualDepreciation 		 = LocalAnnualDepreciation * InBusinessPercent
								LocalAnnualDepreciation 		/= 100	
						else
							if (LocalDeprSwitch)
								if (LocalMethodTableYear > 60)
									LocalMethodTableYear = 60
								while (LocalMethodTableYear < 61
								and first PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalMethodTableYear].DepreciationLimit <= 0)
									LocalMethodTableYear -= 1

								if (InBusinessPercent >= PersonalUseCodeRel.QualifyingBusinessUsePercentage)
									LocalCDB	= 580PersonalUse1
								else
									LocalCDB	= 580PersonalUse2
							else
								if (InBusinessPercent < PersonalUseCodeRel.QualifyingBusinessUsePercentage)
									LocalCDB	= PersonalUse1
								else
									LocalCDB	= PersonalUse2

				if (LocalDeprSwitch)
					LocalPUAnnualDepreciation			= LocalAnnualDepreciation
					LocalPUAnnualDepreciationSave		= LocalAnnualDepreciation
					LocalDeprBonusAllow					= LocalDeprBonus
					if (InBusinessPercent < 100)
						LocalDeprLTDAllow				= InLTDDepr
						LocalDeprYTDAllow				= InYTDDepr
						if (InMethod	= "200DB30%"
						or InMethod		= "150DB30%"
						or InMethod		= "SL30%"
						or InMethod		= "200DB40%"
						or InMethod		= "150DB40%"
						or InMethod		= "SL40%"
						or InMethod		= "100%BONUS"
						or InMethod		= "200DB50%"
						or InMethod		= "150DB50%"
						or InMethod		= "SL50%"
						or InMethod		= "SL75%"
						or InMethod		= "200DB75%"
						or InMethod		= "150DB75%"
						or InMethod		= "SL20%"
						or InMethod		= "200DB20%"
						or InMethod		= "150DB20%"
						or InMethod		= "SL60%"
						or InMethod		= "200DB60%"
						or InMethod		= "150DB60%"
						or InMethod		= "SL80%"
						or InMethod		= "200DB80%"
						or InMethod		= "150DB80%")
							LocalDeprBonus				= ((LocalDeprBonus * InBusinessPercent)/ 100)
							if ((LocalProgram			= "AM180"
							or LocalProgram				= "AM280"
							or LocalProgram				= "AM255")
							and (LocalTempDeprLTD entered
							and LocalFirstYear))
								LocalTempDeprYTD		-= LocalDeprBonus
								LocalTempDeprLTD		-= LocalDeprBonus
						
						LocalDeprLTD = LocalTempDeprLTD
						LocalDeprYTD = LocalTempDeprYTD
						if (InPersonalUseCode entered)
							PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].DepreciationAllow 	= LocalAnnualDepreciation * InBusinessPercent
							PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].DepreciationAllow  /= 100
						LocalAnnualDepreciation 		 = LocalAnnualDepreciation * InBusinessPercent
						LocalAnnualDepreciation 		/= 100
			return LocalAnnualDepreciation

		ProcessMethod580 is a DerivedField
			type is AlphaUpper size 10
			restricted
			if (InMethod = "100%BONUS"
			and InPersonalUseCode entered
			and LocalOptMethod not entered
			and InTableYear not = 1)  
				LocalMethodSW		= true
				LocalOptMethod		= "200DB"
				InMethod			= "200DB"
		
			InLifeRemaining		= InLife	
			LocalDeprStartDate	= InDepreciationStartDate
			LocalCalcAnnual 	= CalculateAnnual
			if (LocalOptMethod entered
			and	LocalMethodSW
			and !CompletelyDepreciated)
				LocalDeprCompare	= LocalAnnualDepreciation
				LocalSaveMethod		= InMethod
				if ((InMethod 	= "SL30%"
				or InMethod		= "200DB30%"
				or InMethod		= "150DB30%"
				or InMethod		= "SL40%"
				or InMethod		= "200DB40%"
				or InMethod		= "150DB40%"
				or InMethod		= "100%BONUS"
				or InMethod		= "SL50%"
				or InMethod		= "200DB50%"
				or InMethod		= "150DB50%"
				or InMethod		= "SL75%"
				or InMethod		= "200DB75%"
				or InMethod		= "150DB75%"
				or InMethod 	= "SL20%"
				or InMethod		= "200DB20%"
				or InMethod		= "150DB20%"
				or InMethod 	= "SL60%"
				or InMethod		= "200DB60%"
				or InMethod		= "150DB60%"
				or InMethod 	= "SL80%"
				or InMethod		= "200DB80%"
				or InMethod		= "150DB80%")
				and LocalDeprBonus entered
				and LocalFirstYear)
					InBasis	-= LocalDeprBonus
					GWTAddedBonusDepr	= true
					
				InMethod		= LocalOptMethod
				LocalCalcAnnual = CalculateAnnual
				InMethod		= LocalSaveMethod
				
				if ((InMethod 	= "SL30%"
				or InMethod		= "200DB30%"
				or InMethod		= "150DB30%"
				or InMethod		= "100%BONUS"
				or InMethod		= "SL40%"
				or InMethod		= "200DB40%"
				or InMethod		= "150DB40%"
				or InMethod		= "SL50%"
				or InMethod		= "200DB50%"
				or InMethod		= "150DB50%"
				or InMethod		= "SL75%"
				or InMethod		= "200DB75%"
				or InMethod		= "150DB75%"
				or InMethod 	= "SL20%"
				or InMethod		= "200DB20%"
				or InMethod		= "150DB20%"
				or InMethod 	= "SL60%"
				or InMethod		= "200DB60%"
				or InMethod		= "150DB60%"
				or InMethod 	= "SL80%"
				or InMethod		= "200DB80%"
				or InMethod		= "150DB80%")
				and LocalDeprBonus entered
				and LocalFirstYear)
					InBasis += LocalDeprBonus
					GWTAddedBonusDepr	= true
				if (InFirstAndLastYear != "P")
					if ((LocalAnnualDepreciation > 0
					and LocalAnnualDepreciation <= LocalDeprCompare)
					or	(LocalAnnualDepreciation < 0
					and LocalAnnualDepreciation >= LocalDeprCompare))
						LocalAnnualDepreciation	=  LocalDeprCompare
					else
						if (InMethod not = "100%Bonus")
							LocalMethodSwitched	= "Y"
							
						if (LocalSLCalculation = "M")
							InMethod	= "SL"
							initialize LocalSLCalculation
							LocalCalcAnnual = CalculateAnnual
				InMethod = LocalSaveMethod
					
		ProcessMethod is a DerivedField		
			type is AlphaUpper size 10
			restricted
			if (InMethod = "100%BONUS"
			and InPersonalUseCode entered
			and LocalOptMethod not entered
			and InTableYear not = 1)  
				LocalMethodSW		= true
				LocalOptMethod		= "200DB"
				InMethod			= "200DB"
			
			InLifeRemaining		= InLife	
			LocalDeprStartDate	= InStartDate
			LocalCalcAnnual 	= CalculateAnnual
			if (LocalOptMethod entered
			and	LocalMethodSW
			and !CompletelyDepreciated)
				LocalDeprCompare	= LocalAnnualDepreciation
				LocalSaveMethod		= InMethod
				if ((InMethod 	= "SL30%"
				or InMethod		= "200DB30%"
				or InMethod		= "150DB30%"
				or InMethod		= "SL40%"
				or InMethod		= "200DB40%"
				or InMethod		= "150DB40%"				
				or InMethod		= "100%BONUS"
				or InMethod		= "SL50%"
				or InMethod		= "200DB50%"
				or InMethod		= "150DB50%"
				or InMethod		= "SL75%"
				or InMethod		= "200DB75%"
				or InMethod		= "150DB75%"
				or InMethod 	= "SL20%"
				or InMethod		= "200DB20%"
				or InMethod		= "150DB20%"
				or InMethod 	= "SL60%"
				or InMethod		= "200DB60%"
				or InMethod		= "150DB60%"
				or InMethod 	= "SL80%"
				or InMethod		= "200DB80%"
				or InMethod		= "150DB80%")
				and LocalDeprBonus entered
				and LocalFirstYear)
					LocalBookBasis	-= LocalDeprBonus
					GWTAddedBonusDepr	= true
					
				InMethod		= LocalOptMethod
				LocalCalcAnnual = CalculateAnnual
				InMethod		= LocalSaveMethod
				
				if ((InMethod 	= "SL30%"
				or InMethod		= "200DB30%"
				or InMethod		= "150DB30%"
				or InMethod		= "100%BONUS"
				or InMethod		= "SL40%"
				or InMethod		= "200DB40%"
				or InMethod		= "150DB40%"
				or InMethod		= "SL50%"
				or InMethod		= "200DB50%"
				or InMethod		= "150DB50%"
				or InMethod		= "SL75%"
				or InMethod		= "200DB75%"
				or InMethod		= "150DB75%"
				or InMethod 	= "SL20%"
				or InMethod		= "200DB20%"
				or InMethod		= "150DB20%"
				or InMethod 	= "SL60%"
				or InMethod		= "200DB60%"
				or InMethod		= "150DB60%"
				or InMethod 	= "SL80%"
				or InMethod		= "200DB80%"
				or InMethod		= "150DB80%")
				and LocalDeprBonus entered
				and LocalFirstYear)
					LocalBookBasis += LocalDeprBonus
					GWTAddedBonusDepr	= true
				if (InFirstAndLastYear != "P")
					if ((LocalAnnualDepreciation entered
					and LocalAnnualDepreciation not > LocalDeprCompare)
					or	(LocalAnnualDepreciation not entered
					and LocalAnnualDepreciation not < LocalDeprCompare))
						LocalAnnualDepreciation	=  LocalDeprCompare
					else
						if (InMethod not = "100%Bonus")
							LocalMethodSW	= true
							
						if (LocalSLCalculation = "M")
							InMethod	= "SL"
							initialize LocalSLCalculation
							LocalCalcAnnual = CalculateAnnual
					InMethod = LocalSaveMethod
			
		CalculateAnnual is a DerivedField
			type is Decimal size 26.10
			restricted
			if (!LocalDeprSwitch)
				if (AssetRel exists)
					LocalCompany	= AssetRel.Company
				else
					LocalCompany	= InCompany
				if (LocalAssetBook not entered)
					LocalAssetBook = AssetBookRel.AssetBook
				if (LocalDepreciationPeriodsPerYear not entered)
					LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear			
				if (NumberOfPeriodCloseRuns not entered)
					NumberOfPeriodCloseRuns = CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				if (LastClosedDepreciationPeriodEndDate not entered)
					LastClosedDepreciationPeriodEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[NumberOfPeriodCloseRuns]
				if (CurrentDepreciationPeriodEndDate not entered)
					CurrentDepreciationPeriodEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[NumberOfPeriodCloseRuns + 1]		
			LocalAdjSalvage			= InSalvageValue
			if (InTaxCreditTable entered)
				LocalTcTable		= InTaxCreditTable
				if (AssetTaxCreditTableRel exists
				and AssetTaxCreditTableRel.BasisReductionPercentage entered)
					LocalBasisReductionPercentage = InBasis * (AssetTaxCreditTableRel.BasisReductionPercentage/100)
				else
					initialize LocalBasisReductionPercentage
						
			else
				initialize LocalBasisReductionPercentage        
					
			LocalAdjBasis	= InBasis - InFirstYearExpenseAmount - LocalBasisReductionPercentage - LocalAdjSalvage
			if (InPersonalUseCode entered)
				I2 = 1
			    LocalCalendarStatus = "H"
				for each HistoryYearBookCalendarsRel4
					if (I2 <= 60)
						PUAnnualDepDetail1.PUAnnualDepTable[I2].YearEndDate			= each.YearEndDate
						I2 +=1
				if (instance count of HistoryYearBookCalendarsRel4 < 60)
					PUAnnualDepDetail1.PUAnnualDepTable[I2].YearEndDate = CurrentBookCalendarsRel.YearEndDate
			
			initialize LocalRecordType
			initialize LocalAnnualDepreciation
			if (IsCustomFormula
			and !LocalDeprSwitch)
				LocalDBPercent		= 1.00
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod
				if (LocalMethod entered)
					LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
					LocalCDB = CustomMethod
			else
			if (LocalDeprSwitch 
			and LocalAssetBook.SpreadOverRemainingLife)
				LocalAnnualDepreciation = LocalAdjBasis - InLTDDepr
				LocalAnnualDepreciation *= 12
				if (LocalLifeRemaining > 0)
					LocalAnnualDepreciation /= LocalLifeRemaining
			else
			if (InMethod	= "200DB")
				LocalDBPercent		= 2.00
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else			
			if (InMethod	= "175DB")
				LocalDBPercent		= 1.75
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod					
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else			
			if (InMethod	= "150DB")
				LocalDBPercent		= 1.50
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod					
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else			
			if (InMethod	= "125DB")
				LocalDBPercent		= 1.25
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod					
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else			
			if (InMethod	= "0.30DB")
				LocalDBPercent		= 0.30
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod					
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else	
			if (InMethod	= "SL")
				initialize LocalOptMethod
				if (LocalDeprSwitch)
					if (Convention.ActualDaysFirstMonth)
						if (NumberOfPeriodCloseRuns not entered)
							CurrentPeriodBeginDate = InPrevYearEndDate
						else
							CurrentPeriodBeginDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[NumberOfPeriodCloseRuns]	
						if (CurrentPeriodBeginDate < InServiceDate
						and InServiceDate <= CurrentDepreciationPeriodEndDate)
							GWTLocalTrigger	= CalculateActualFirstYear
							if (LocalLifeRemaining not entered)
								LocalLifeRemaining = LocalLifeRemainingAcutalDaysFirstMonth
							LocalDepreciationSet	= true
							return
						else
							Convention = "FM"
						
					LocalMethod = InMethod
					initialize LocalOptMethod
					
					LocalInactYear = InYearToDateInactiveMonths
					if (LocalInactYear entered)
						LocalBeginYrLife			= (LocalLifeRemaining - LocalInactYear)
						LocalBeginYrLife			*= LocalNumberOfDeprPeriods
						LocalBeginYrLife			+= (NumberOfPeriodCloseRuns *12)
						if (LocalDepreciationPeriodsPerYear > 0)
							LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
						
						if (InLife < 12
						and	LocalFirstYear)
							LocalBeginYrLife		= InLife - LocalInactYear
					else
						if (Convention.ActualDays)
							LocalNumberOfDaysYear = InYearEndDate - InYearBeginDate
							LocalNumberOfDaysYear += 1
							if (LocalNumberOfDepreciationPeriodsClosed entered)
								if (InServiceDate > InYearBeginDate
								and InServiceDate <= InYearEndDate)
									LocalTmpFromDate = InServiceDate
								else
									LocalTmpFromDate = InYearBeginDate
								LocalNumberOfDaysClosed = LastClosedDepreciationPeriodEndDate - LocalTmpFromDate
								LocalNumberOfDaysClosed += 1

								if (InServiceDate > LastClosedDepreciationPeriodEndDate
								and InServiceDate <= CurrentDepreciationPeriodEndDate)
									LocalBeginYrLife = LocalLifeRemaining
								else
									LocalDayDiff = LocalNumberOfDaysClosed * LocalDepreciationPeriodsPerYear * 12
									LocalDayDiff /= LocalNumberOfDaysYear
									LocalBeginYrLife = LocalLifeRemaining * LocalDepreciationPeriodsPerYear
									LocalBeginYrLife += LocalDayDiff
									if (LocalDepreciationPeriodsPerYear > 0)
										LocalBeginYrLife /= LocalDepreciationPeriodsPerYear
							else
								LocalBeginYrLife = LocalLifeRemaining
						else
							LocalBeginYrLife			= ((LocalLifeRemaining * LocalDepreciationPeriodsPerYear) + (LocalNumberOfDepreciationPeriodsClosed * 12))
							if (LocalDepreciationPeriodsPerYear > 0)
								LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
							
						if (InLife < 12
						and	LocalFirstYear)
							LocalBeginYrLife = InLife
					if (LocalBeginYrLife >  InLife)
						LocalBeginYrLife = InLife
					if (LocalBeginYrLife <= 0)
						initialize LocalBeginYrLife
					else
						if (AssetRel.AssetProcess.Adjustment)
							LocalDeprLTD		= InLTDDepr
							LocalDeprYTD		= InYTDDepr
						if (LocalAssetBook.SpreadOverRemainingLife)
							LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD)
							LocalAnnualDepreciation *= 12
							LocalAnnualDepreciation /= LocalLifeRemaining
						else
							if (AssetBookRel.Convention.ActualDaysFirstMonth)	
								LocalAnnualDepreciation = (LocalAdjBasis * 12)
								LocalAnnualDepreciation /= InLife
							else
								LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD + LocalDeprYTD)
								LocalAnnualDepreciation *= 12
								LocalAnnualDepreciation /= LocalBeginYrLife
						if (InLife < 12)
							LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD + LocalDeprYTD)
							LocalAnnualDepreciation *= InLife
							LocalAnnualDepreciation /= LocalBeginYrLife
					if (LocalSLCalculation = "M"
					or LocalSLCalculation = "O")
						LocalAnnualDepreciation		 =  (LocalAdjBasis * 12)
						LocalAnnualDepreciation		/= InLife
				else	
					LocalCSL = CalculateStraightLine
			else		
			if (InMethod	= "SLBZERO")
				initialize LocalOptMethod
				if (LocalDeprSwitch)
					LocalCSL = CalculateSlbzero580			
				else	
					LocalCSL = CalculateSlbzero
			else		
			if (InMethod	= "SYD")
				initialize LocalOptMethod
				if (LocalDeprSwitch)
					LocalCSL = CalculateSumYearDigits580	
				else
					LocalCSL = CalculateSumYearDigits
			else		
			if (InMethod	= "ACCT-LEVEL")
				initialize LocalOptMethod
				LocalCSL = CalculateAcctLevel
			else		
			if (InMethod	= "200DB20%"
			or	InMethod	= "200DB30%"
			or  InMethod	= "200DB40%"
			or  InMethod	= "200DB50%"
			or	InMethod	= "200DB60%"
			or	InMethod	= "200DB75%"
			or	InMethod	= "200DB80%")
				LocalDBPercent		= 2.00
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else			
			if (InMethod	= "100%BONUS")
				LocalDBPercent		= 1.00
				initialize LocalOptMethod
				if (LocalDeprSwitch)
					LocalCDB = Calculate100Bonus580
				else
					LocalCDB = Calculate100Bonus
					
			else	
			if (InMethod	= "150DB20%"
			or	InMethod	= "150DB30%"
			or  InMethod	= "150DB40%"
			or  InMethod	= "150DB50%"
			or	InMethod	= "150DB60%"
			or 	InMethod	= "150DB75%"
			or	InMethod	= "150DB80%")
				LocalDBPercent		= 1.50
				LocalOptMethod		= "SL"
				LocalMethod			= InMethod
				LocalSLCalculation	= InMethod.StraightLineDepreciationMethod
				if (LocalDeprSwitch)
					LocalCDB = CalculateDeclingBalance580
				else	
					LocalCDB = CalculateDeclingBalance
			else	
			if (LocalMethod	= "SL20%"
			or	LocalMethod	= "SL30%"
			or  LocalMethod = "SL40%"
			or  LocalMethod = "SL50%"
			or	LocalMethod	= "SL60%"
			or  LocalMethod = "SL75%"
			or	LocalMethod	= "SL80%")
				initialize LocalOptMethod
				if (LocalDeprSwitch)
					if (Convention.ActualDaysFirstMonth)
						GWTLocalTrigger	= CalculateActualFirstYear
						if (LocalLifeRemaining not entered)
							LocalLifeRemaining = LocalLifeRemainingAcutalDaysFirstMonth
						LocalDepreciationSet	= true
						return
						
					LocalMethod = InMethod
					initialize LocalOptMethod
					if (LocalMethod	= "SL20%"
					or	LocalMethod	= "SL30%"
					or  LocalMethod = "SL40%"
					or  LocalMethod = "SL50%"
					or	LocalMethod	= "SL60%"
					or  LocalMethod = "SL75%"
					or	LocalMethod	= "SL80%")
						initialize LocalDeprBonus
						LocalAdjBasis	= InBasis - InFirstYearExpenseAmount 
						if (LocalFirstYear
						or InMethod = "100%BONUS")
							if 	(InMethod = "SL30%"
							or	InMethod = "200DB30%"
							or	InMethod = "150DB30%")
								LocalDeprBonus	= LocalAdjBasis * 0.30
							else
								if 	(InMethod= "SL40%"
								or	InMethod= "200DB40%"
								or	InMethod = "150DB40%")
									LocalDeprBonus	= LocalAdjBasis * 0.40
								else
									if 	(InMethod= "SL50%"
									or	InMethod= "200DB50%"
									or	InMethod = "150DB50%")
										LocalDeprBonus	= LocalAdjBasis * 0.50
									else
										if 	(InMethod	= "SL75%"
										or	InMethod	= "200DB75%"
										or	InMethod	= "150DB75%")
											LocalDeprBonus	= LocalAdjBasis * 0.75	
										else
											if 	(InMethod 	= "100%BONUS")
												LocalDeprBonus	= LocalAdjBasis * 1
											else
												if (InMethod	= "SL20%"
												or InMethod 	= "150DB20%"
												or InMethod 	= "200DB20%")
													LocalDeprBonus	= LocalAdjBasis * 0.20
												else
													if (InMethod	= "SL60%"
													or InMethod 	= "150DB60%"
													or InMethod 	= "200DB60%")
														LocalDeprBonus	= LocalAdjBasis * 0.60
													else
														if (InMethod	= "SL80%"
														or InMethod 	= "150DB80%"
														or InMethod 	= "200DB80%")
															LocalDeprBonus	= LocalAdjBasis * 0.80
						LocalAdjBasis		= LocalAdjBasis - LocalDeprBonus - LocalBasisReductionPercentage - InSalvageValue
						if ((LocalProgram = "AM180"
						or LocalProgram = "AM280"
						or LocalProgram = "AM255")
						and LocalDeprLTD entered)
							LocalDeprYTD	-= LocalDeprBonus
							LocalDeprLTD	-= LocalDeprBonus
						LocalDeprBonusAllow	= LocalDeprBonus
						LocalDeprBonusFull	= LocalDeprBonus
					LocalInactYear = InYearToDateInactiveMonths
					if (LocalInactYear entered)
						LocalBeginYrLife			= (LocalLifeRemaining - LocalInactYear)
						LocalBeginYrLife			*= LocalNumberOfDeprPeriods
						LocalBeginYrLife			+= (NumberOfPeriodCloseRuns *12)
						if (LocalDepreciationPeriodsPerYear > 0)
							LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
						
						if (InLife < 12
						and	LocalFirstYear)
							LocalBeginYrLife		= InLife - LocalInactYear
					else
						if (Convention.ActualDays)
							LocalNumberOfDaysYear = InYearEndDate - InYearBeginDate
							LocalNumberOfDaysYear += 1
							if (LocalNumberOfDepreciationPeriodsClosed entered)
								if (InServiceDate > InYearBeginDate
								and InServiceDate <= InYearEndDate)
									LocalTmpFromDate = InServiceDate
								else
									LocalTmpFromDate = InYearBeginDate
								LocalNumberOfDaysClosed = LastClosedDepreciationPeriodEndDate - LocalTmpFromDate
								LocalNumberOfDaysClosed += 1

								if (InServiceDate > LastClosedDepreciationPeriodEndDate
								and InServiceDate <= CurrentDepreciationPeriodEndDate)
									LocalBeginYrLife = LocalLifeRemaining
								else
									LocalDayDiff = LocalNumberOfDaysClosed * LocalDepreciationPeriodsPerYear * 12
									LocalDayDiff /= LocalNumberOfDaysYear
									LocalBeginYrLife = LocalLifeRemaining * LocalDepreciationPeriodsPerYear
									LocalBeginYrLife += LocalDayDiff
									if (LocalDepreciationPeriodsPerYear > 0)
										LocalBeginYrLife /= LocalDepreciationPeriodsPerYear
							else
								LocalBeginYrLife = LocalLifeRemaining
						else
							LocalBeginYrLife			= ((LocalLifeRemaining * LocalDepreciationPeriodsPerYear) + (LocalNumberOfDepreciationPeriodsClosed * 12))
							if (LocalDepreciationPeriodsPerYear > 0)
								LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
							
						if (InLife < 12
						and	LocalFirstYear)
							LocalBeginYrLife = InLife
					if (LocalBeginYrLife >  InLife)
						LocalBeginYrLife = InLife
					if (LocalBeginYrLife <= 0)
						initialize LocalBeginYrLife
					else
						if (AssetRel.AssetProcess.Adjustment)
							LocalDeprLTD		= InLTDDepr
							LocalDeprYTD		= InYTDDepr
						if (LocalAssetBook.SpreadOverRemainingLife)
							LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD)
							LocalAnnualDepreciation *= 12
							LocalAnnualDepreciation /= LocalLifeRemaining
						else
							LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD + LocalDeprYTD)
							LocalAnnualDepreciation *= 12
							LocalAnnualDepreciation /= LocalBeginYrLife
						if (InLife < 12)
							LocalAnnualDepreciation = (LocalAdjBasis - LocalDeprLTD + LocalDeprYTD)
							LocalAnnualDepreciation *= InLife
							LocalAnnualDepreciation /= LocalBeginYrLife
					if (LocalSLCalculation = "M"
					or LocalSLCalculation = "O")
						LocalAnnualDepreciation		 =  (LocalAdjBasis * 12)
						LocalAnnualDepreciation		/= InLife
				else
					LocalCSL = CalculateStraightLine
			else
				LocalMethod						= InMethod
				if (InMethod entered)
					LocalOptMethod				= InMethod.DepreciationOptimizingMethod
					LocalRecordType 			= InMethod.RecordType
					LocalSLCalculation			= InMethod.StraightLineDepreciationMethod
					if (LocalRecordType not entered)
						if (InMethod.HasCompute)
							LocalRecordType = "C"
						else
						if (InMethod.HasPercents)
							LocalRecordType = "P"
						else
						if (InMethod.HasUOPAmounts)
							LocalRecordType = "U"

					if (LocalRecordType 		= "C")
						if (LocalDeprSwitch)
							LocalBeginYrLife		= ((LocalLifeRemaining * LocalDepreciationPeriodsPerYear) + NumberOfPeriodCloseRuns *12)
							LocalBeginYrLife		/= LocalDepreciationPeriodsPerYear
							LocalAnnualDepreciation	= LocalAssetBook.CalculationAmount	
						else
							LocalBeginYrLife		= ((LocalLifeRemaining * LocalNumberOfDeprPeriods)+CurrentBookCalendarsRel.NumberOfPeriodCloseRuns *12)
							LocalBeginYrLife		/= LocalNumberOfDeprPeriods
							LocalCDB = ComputeStatment
							LocalAnnualDepreciation	= LocalProcessValue							
					else
						if (LocalRecordType 	= "P")
							if (LocalDeprSwitch)
								LocalCDB			= PercentTable580
							else
								LocalCDB			= PercentTable
								LocalPctTableLTDDepreciation += LocalAnnualDepreciation
						else
							if (LocalRecordType = "U")
								LocalCDB		= UnitsOfProduction
								if (!LocalUOPPdSW)
									LocalCDB		= CalculateAnnualUOP
				
			if ((LocalDeprSwitch 
			and LocalAssetBook.YearToDateDepreciationOverride entered)
			or (!LocalDeprSwitch
			and InYTDDeprAllow entered))
				LocalOvrdSW					= true
				if (LocalDeprSwitch)
					LocalAnnualDepreciation		= LocalAssetBook.YearToDateDepreciationOverride
					LocalAnnualDepreciationSave	= LocalAssetBook.YearToDateDepreciationOverride
				else
					LocalAnnualDepreciation		= InYTDDeprAllow
					LocalAnnualDepreciationSave	= InYTDDeprAllow
			else
				if (LocalLifeRemaining			= LocalBeginYrLife
				and LocalLifeRemaining			< .005
				and LocalProgram				= "AM255")
					initialize LocalLifeRemaining
				if (!LocalDeprSwitch)
					if (LocalAnnualDepreciation 	> 0
					and LocalAnnualDepreciation 	> LocalDepreciationRemaining
					and LocalDepreciationRemaining  > 0)
						LocalAnnualDepreciation		= LocalDepreciationRemaining
					else
						if (LocalAnnualDepreciation 		< 0
						and LocalAnnualDepreciation 		< LocalDepreciationRemaining
						and !InBook.Impairment) 
							LocalAnnualDepreciation			= LocalDepreciationRemaining
						else
							if (LocalLastYear
							and InPersonalUseCode not entered)
								LocalAnnualDepreciation		= LocalDepreciationRemaining
							else
								if (InFirstAndLastYear = "P"
								and InPersonalUseCode entered)
									LocalAnnualDepreciation	= LocalDepreciationRemaining
				else									
					LocalDepreciationRemaining = LocalAdjBasis - LocalDeprLTD + LocalDeprYTD
					if (!LocalAssetBook.SpreadOverRemainingLife)	
						if (LocalAnnualDepreciation 	> 0
						and LocalAnnualDepreciation 	> LocalDepreciationRemaining)
							if (!(LocalRecordType = "P"
							and LocalMethodTableYear > 0))
								LocalAnnualDepreciation		= LocalDepreciationRemaining
						else
							if (LocalAnnualDepreciation 		< 0
							and LocalAnnualDepreciation 		< LocalDepreciationRemaining
							and !InBook.Impairment) 
								LocalAnnualDepreciation			= LocalDepreciationRemaining
							else
								if (LocalLastYear
								and InPersonalUseCode not entered)
									LocalAnnualDepreciation		= LocalDepreciationRemaining
								else
									if (InFirstAndLastYear = "P"
									and InPersonalUseCode entered)
										LocalAnnualDepreciation	= LocalDepreciationRemaining
																				
				LocalAnnualDepreciationSave	= LocalAnnualDepreciation
			if (LocalDeprSwitch)
				LocalProcessedMonths = 12
			return LocalAnnualDepreciation

		CustomMethod is a DerivedField
			type is like InternationalAmount
			restricted
			initialize CustomDeprLTD
			initialize CustomDeprYTD
			initialize LocalDepreciationCalculated
			if (!LocalDeprSwitch)
				if (LocalAssetBook not entered)	
					LocalAssetBook = AssetBookRel.AssetBook
				if (LocalDepreciationPeriodsPerYear not entered)
					LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				if (LocalNumberOfDepreciationPeriodsClosed not entered)
					LocalNumberOfDepreciationPeriodsClosed = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
				if (InYearBeginDate not entered)
					InYearBeginDate = CurrentBookCalendarsRel.YearBeginDate 		
			CustomLifeRemaining = InLife
			if (InServiceDate < InYearBeginDate)
				CustomYearBeginDate = InServiceDate
				if (HistoryYearBookCalendarsRel4 exist)
					initialize NumberOfPeriodsFirstYear
					CustomYearEndDate					= HistoryYearBookCalendarsRel4.YearEndDate
				else
					LocalInServiceDate					= InServiceDate
					CustomYearEndDate					= GetProjectedHistoryDate
				CustomYearBeginDate						= CustomYearEndDate + 1 day
				CustomYearBeginDate 					= CustomYearBeginDate - 1 year	
				while (CustomYearBeginDate < InYearBeginDate)
					if (CustomDeprLTD not entered
					and not LocalDepreciationCalculated)
						LocalCalendarStatus		= "H"
						if (Convention.ModifiedHalfYear
						and InServiceDate > InDepreciationStartDate)
							MonthsProcessed.InServiceDate	 	= InDepreciationStartDate
						else
							MonthsProcessed.InServiceDate	 	= InServiceDate
						if (Convention.ModifiedHalfMonth)
							LocalCDBDate = AdjustInsrvDate
							if (LocalDeprStartDate > InServiceDate)
								MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
						else
							MonthsProcessed.InDeprStartDate		= InServiceDate
						MonthsProcessed.InYearBeginDate			= CustomYearBeginDate
						MonthsProcessed.InPrevYearEndDate		= CustomYearBeginDate
						MonthsProcessed.InYearEndDate			= CustomYearEndDate		
						MonthsProcessed.Convention				= Convention
						MonthsProcessed.InLife					= InLife
						MonthsProcessed.LastPeriodEnd			= CustomYearEndDate
						MonthsProcessed.InBook					= InBook
						MonthsProcessed.InCompany				= InCompany
						MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
						MonthsProcessed.InservicePeriod			= InservicePeriod
						NumberOfPeriodsFirstYear				= MonthsProcessed.ReturnNumberOfMonthsProcessed
						LocalFirstYearCalcPeriods				= MonthsProcessed.LocalFirstYearCalcPeriods
						CustomYearBeginDate 					= CustomYearBeginDate + 1 year
						if (Convention.ActualDays)
							LocalNumberOfDaysFirstYear 	= CustomYearEndDate - InServiceDate
							LocalNumberOfDaysFirstYear	+= 1
							if (HistoryYearBookCalendarsRel4 exists)
								LocalNumberOfDaysYear		= HistoryYearBookCalendarsRel4.CalendarDays
							else
								if (HistoryCalendarsForBookCompanyRel exists)
									LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays
								else
									LocalTriggerNumberOfDays	= NumberOfDaysYear
							LocalFirstYearDepreciation		= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
					else
						CustomYearBeginDate 					= CustomYearBeginDate + 1 year
						NumberOfPeriodsFirstYear				= 12
						if (Convention.ActualDays)
							LocalNumberOfMonthsActualDays += 12	
					invoke CustomMethodUpdate LocalAssetBook
						invoked.LifeRemaining				= CustomLifeRemaining
						invoked.LifeToDateDepreciation		= CustomDeprLTD
						invoked.YearToDateDepreciation		= CustomDeprYTD
					LocalMethodFormula						 	= LocalAssetBook.Method.MethodFormula
					LocalAnnualDepreciation						= LocalMethodFormula.MethodCompute compute value for LocalAssetBook
					if (CustomDeprLTD not entered
					and not LocalDepreciationCalculated)
						if (Convention.HalfYear)
							LocalAnnualDepreciation				= LocalAnnualDepreciation /2
						else
							if (Convention.MidQuarter)
								if (LocalDepreciationPeriodsPerYear > 12)
									LocalAnnualDepreciation		= LocalAnnualDepreciation / 12
								else
									LocalAnnualDepreciation		= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
								LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear								
							else
								if (Convention.ModifiedHalfYear)
									if (InServiceDate < InDepreciationStartDate)
										NumberOfPeriodsFirstYear = 0
										LocalAnnualDepreciation = 0
									else
										NumberOfPeriodsFirstYear = 12
									LocalDepreciationCalculated = true
								else
									if (Convention.FullYear)
										NumberOfPeriodsFirstYear = 12
					if (!NumberOfPeriodsFirstYear = 12
					and !Convention.HalfYear)
						if (Convention.ModifiedHalfYear)
							LocalAnnualDepreciation = 0
						else
						if (Convention.ActualDays)
							LocalAnnualDepreciation = LocalAnnualDepreciation * LocalFirstYearDepreciation
						else
							if (!Convention.MidQuarter)
								LocalMonthlyDepreciation			= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
								if (LocalDepreciationPeriodsPerYear > 12
								and CustomDeprLTD not entered
								and LocalFirstYearCalcPeriods entered)
									LocalAnnualDepreciation				= LocalMonthlyDepreciation * LocalFirstYearCalcPeriods
								else
									LocalAnnualDepreciation				= LocalMonthlyDepreciation * NumberOfPeriodsFirstYear 
							
					if (!Convention.ActualDays)
						CustomLifeRemaining						-= NumberOfPeriodsFirstYear
					CustomDeprLTD							+= LocalAnnualDepreciation
				invoke CustomMethodUpdate LocalAssetBook
					invoked.LifeRemaining				= CustomLifeRemaining
					invoked.LifeToDateDepreciation		= CustomDeprLTD
					invoked.YearToDateDepreciation		= CustomDeprYTD
				LocalMethodFormula 						= LocalAssetBook.Method.MethodFormula
				LocalAnnualDepreciation                 = LocalMethodFormula.MethodCompute compute value for LocalAssetBook
				initialize LocalDeprePeriodsRemaining
				if (CustomLifeRemaining <= 12
				and CustomLifeRemaining > 0)
					LocalDeprEndDate							= GetDepreciationEndDate
					LocalDeprePeriodsRemaining					= CustomLifeRemaining
					if (LocalDeprEndDate < CurrentBookCalendarsRel.YearEndDate)
						MonthsProcessed.InServiceDate	 		= InYearBeginDate
						MonthsProcessed.InDeprStartDate			= InYearBeginDate
						MonthsProcessed.InYearBeginDate			= InYearBeginDate
						MonthsProcessed.InPrevYearEndDate		= InYearBeginDate - 1 day
						MonthsProcessed.InYearEndDate			= CurrentBookCalendarsRel.YearEndDate		
						MonthsProcessed.Convention				= "FM"
						MonthsProcessed.InLife					= InLife
						MonthsProcessed.LastPeriodEnd			= LocalDeprEndDate
						MonthsProcessed.InBook					= InBook
						MonthsProcessed.InCompany				= InCompany
						MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
						MonthsProcessed.InservicePeriod			= InservicePeriod
						LocalPeriodsFinalYear					= MonthsProcessed.ReturnNumberOfMonthsProcessed
						LocalDeprePeriodsRemaining		= LocalPeriodsFinalYear					
					LocalAnnualDepreciation				= LocalAdjBasis - CustomDeprLTD
					LocalMonthlyDepreciation			= LocalAnnualDepreciation / LocalDeprePeriodsRemaining
					CustomLifeRemainingLastYear			= CustomLifeRemaining / LocalDeprePeriodsRemaining 
					CustomLifeRemainingLastYear			= CustomLifeRemainingLastYear * LocalNumberOfDepreciationPeriodsClosed
					CustomLifeRemaining					= CustomLifeRemaining - CustomLifeRemainingLastYear
				else
					if (CustomLifeRemaining <= 0)
						LocalMonthlyDepreciation		= 0
						CustomDeprLTD					= LocalAdjBasis
						LocalDeprePeriodsRemaining		= 0
						LocalAnnualDepreciation			= 0
					else
						if (Convention.ActualDays)
							LocalNumberOfDaysFirstYear 	= LastPeriodEnd - InYearBeginDate
							LocalNumberOfDaysFirstYear	+= 1
							LocalTriggerNumberOfDays	= NumberOfDaysYear
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
							LocalTempNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * 12
							LocalDeprYTD					= LocalFirstYearDepreciation
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
							CustomLifeRemaining				= LocalLife - LocalNumberOfMonthsActualDays
						else
							LocalDeprePeriodsRemaining		= CustomLifeRemaining
							LocalMonthlyDepreciation		= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
							if (LocalDepreciationPeriodsPerYear > 12)
								CustomLifeRemaining				= CustomLifeRemaining - ((LocalNumberOfDepreciationPeriodsClosed * 12)/LocalDepreciationPeriodsPerYear)
							else
								CustomLifeRemaining				= CustomLifeRemaining - LocalNumberOfDepreciationPeriodsClosed
				if (Convention.ActualDays)
					CustomDeprYTD = LocalDeprYTD
				else
					if (LocalNumberOfDepreciationPeriodsClosed < LocalDeprePeriodsRemaining)
						CustomDeprYTD						= LocalMonthlyDepreciation * LocalNumberOfDepreciationPeriodsClosed
					else
						CustomDeprYTD						= LocalAnnualDepreciation
			else
				MonthsProcessed.InDeprStartDate 		= InYearBeginDate
				MonthsProcessed.InServiceDate	 		= InServiceDate
				MonthsProcessed.InDeprStartDate			= InServiceDate
				MonthsProcessed.InYearBeginDate			= InYearBeginDate
				MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
				MonthsProcessed.InYearEndDate			= InYearEndDate		
				MonthsProcessed.Convention				= Convention
				MonthsProcessed.InLife					= InLife
				MonthsProcessed.LastPeriodEnd			= InYearEndDate
				MonthsProcessed.InBook					= InBook
				MonthsProcessed.InCompany				= InCompany
				MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
				MonthsProcessed.InservicePeriod			= InservicePeriod
				LocalFirstYearPeriods					= MonthsProcessed.ReturnNumberOfMonthsProcessed
				LocalTriggerMonths						= MonthsProcessed.LocalFirstYearCalcPeriods

				if (Convention.ModifiedHalfMonth)
					LocalCDBDate = AdjustInsrvDate
					if (LocalDeprStartDate > InServiceDate)
						MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
					else
						MonthsProcessed.InDeprStartDate	= InServiceDate
				MonthsProcessed.LastPeriodEnd			= LastPeriodEnd
				LocalFirstYearPeriodsClosed				= MonthsProcessed.ReturnNumberOfMonthsProcessed
				LocalCurrentPeriodCount					= MonthsProcessed.LocalFirstYearCalcPeriods
				invoke CustomMethodUpdate LocalAssetBook
					invoked.LifeRemaining				= CustomLifeRemaining
					invoked.LifeToDateDepreciation		= CustomDeprLTD
					invoked.YearToDateDepreciation		= CustomDeprYTD
				LocalMethodFormula 						= LocalAssetBook.Method.MethodFormula
				LocalAnnualDepreciation					= LocalMethodFormula.MethodCompute compute value for LocalAssetBook
				if (Convention.HalfYear)
					LocalAnnualDepreciation				= LocalAnnualDepreciation /2
					if (LocalDepreciationPeriodsPerYear > 12)
						LocalMonthlyDepreciation			= LocalAnnualDepreciation /	LocalTriggerMonths
					else
						LocalMonthlyDepreciation			= LocalAnnualDepreciation /	LocalFirstYearPeriods
				else
					if (Convention.MidQuarter)
						if (LocalDepreciationPeriodsPerYear > 12)
							LocalAnnualDepreciation		= LocalAnnualDepreciation / 12
						else
							LocalAnnualDepreciation			= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
						LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear
						LocalFirstYearPeriodsClosed		= MidQuarterFirstYearPeriodsClosed
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / MidQuarterFirstYearPeriods
					else
						if (Convention.ModifiedHalfYear)
							if (InServiceDate > InDepreciationStartDate)
								if (LocalDepreciationPeriodsPerYear > 12)
									LocalMonthlyDepreciation			= LocalAnnualDepreciation /	LocalTriggerMonths
								else
									LocalMonthlyDepreciation = LocalAnnualDepreciation / LocalFirstYearPeriods
						else
							if (Convention.FullYear)
								if (LocalDepreciationPeriodsPerYear > 12)
									LocalMonthlyDepreciation			= LocalAnnualDepreciation /	LocalTriggerMonths
								else
									LocalMonthlyDepreciation = LocalAnnualDepreciation / LocalFirstYearPeriods
							else
								if (Convention.ActualDays)
									LocalNumberOfDaysFirstYear 	= InYearEndDate - InServiceDate
									LocalNumberOfDaysFirstYear	+= 1
									LocalTriggerNumberOfDays	= NumberOfDaysYear
									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
									LocalMonthlyDepreciation		= LocalFirstYearDepreciation
									NumberOfPeriodsClosedFirstYear	= ActualDaysPeriodsClosedCurrentYear
									CustomDeprYTD				= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
									LocalNumberOfDaysFirstYear 		= LastPeriodEnd - InServiceDate
									LocalNumberOfDaysFirstYear		+= 1	
									LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
									CustomLifeRemaining				= LocalLife - (LocalNumberOfMonthsActualDays * 12)
								else
									LocalMonthlyDepreciation = LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
				if (!Convention.ActualDays)
					if (LocalDepreciationPeriodsPerYear > 12
					and LocalCurrentPeriodCount entered
					and !Convention.MidQuarter)
						CustomDeprYTD		= LocalMonthlyDepreciation * LocalCurrentPeriodCount
					else
						CustomDeprYTD		= LocalMonthlyDepreciation * LocalFirstYearPeriodsClosed
				if (Convention.ModifiedHalfMonth)
					if ((LastPeriodEnd month = InServiceDate month
					and LastPeriodEnd year = InServiceDate year)
					and CurrentInServiceMonthEndDate)
						CustomDeprYTD = 0
				if (!Convention.ActualDays)
					if (LocalDepreciationPeriodsPerYear > 12)
						LocalLifeRemaining = LocalLifeRemaining - LocalFirstYearPeriodsClosed
						CustomLifeRemaining	= LocalLifeRemaining
					else
						LocalLifeRemaining						= (12 / LocalFirstYearPeriods)
						LocalLifeRemaining						= LocalLifeRemaining * LocalFirstYearPeriodsClosed
						CustomLifeRemaining						= CustomLifeRemaining - LocalLifeRemaining
			CustomDeprLTD								+= CustomDeprYTD
			if (CustomDeprLTD > LocalAdjBasis)
				CustomDeprLTD							= LocalAdjBasis
			if (CustomLifeRemaining < 0)
				CustomLifeRemaining						= 0
			LocalLifeRemaining							= InLife
			LocalDeprLTD								= CustomDeprLTD
			LocalDeprYTD								= CustomDeprYTD

		CalculateDeclingBalance580 is a DerivedField
			type is Decimal size 26.10
			restricted	
			initialize LocalMonthsInFirstYear
			if (InMethod	= "200DB20%"
			or  InMethod	= "150DB20%"
			or	InMethod	= "200DB30%"
			or  InMethod	= "150DB30%"
			or  InMethod	= "200DB40%"
			or  InMethod	= "150DB40%"
			or  InMethod	= "200DB50%"
			or  InMethod	= "150DB50%"
			or	InMethod	= "200DB60%"
			or  InMethod	= "150DB60%"
			or	InMethod	= "200DB75%"
			or	InMethod	= "150DB75%"
			or	InMethod	= "150DB80%"
			or	InMethod	= "200DB80%")
				initialize LocalDeprBonus
				LocalAdjBasis	= InBasis - InFirstYearExpenseAmount 
				if (LocalFirstYear
				or InMethod = "100%BONUS")
					if 	(InMethod = "SL30%"
					or	InMethod = "200DB30%"
					or	InMethod = "150DB30%")
						LocalDeprBonus	= LocalAdjBasis * 0.30
					else
						if 	(InMethod= "SL40%"
						or	InMethod= "200DB40%"
						or	InMethod = "150DB40%")
							LocalDeprBonus	= LocalAdjBasis * 0.40
						else
							if 	(InMethod= "SL50%"
							or	InMethod= "200DB50%"
							or	InMethod = "150DB50%")
								LocalDeprBonus	= LocalAdjBasis * 0.50
							else
								if 	(InMethod	= "SL75%"
								or	InMethod	= "200DB75%"
								or	InMethod	= "150DB75%")
									LocalDeprBonus	= LocalAdjBasis * 0.75	
								else
									if 	(InMethod 	= "100%BONUS")
										LocalDeprBonus	= LocalAdjBasis * 1
									else
										if (InMethod	= "SL20%"
										or InMethod 	= "150DB20%"
										or InMethod 	= "200DB20%")
											LocalDeprBonus	= LocalAdjBasis * 0.20
										else
											if (InMethod	= "SL60%"
											or InMethod 	= "150DB60%"
											or InMethod 	= "200DB60%")
												LocalDeprBonus	= LocalAdjBasis * 0.60
											else
												if (InMethod	= "SL80%"
												or InMethod 	= "150DB80%"
												or InMethod 	= "200DB80%")
													LocalDeprBonus	= LocalAdjBasis * 0.80
				LocalAdjBasis		= LocalAdjBasis - LocalDeprBonus - LocalBasisReductionPercentage - InSalvageValue
				if ((LocalProgram = "AM180"
				or LocalProgram = "AM280"
				or LocalProgram = "AM255")
				and LocalDeprLTD entered)
					LocalDeprYTD	-= LocalDeprBonus
					LocalDeprLTD	-= LocalDeprBonus
				LocalDeprBonusAllow	= LocalDeprBonus
				LocalDeprBonusFull	= LocalDeprBonus

			LocalAnnualDepreciation = LocalAdjBasis - LocalDeprLTD + LocalDeprYTD 
			LocalAnnualDepreciation = LocalAnnualDepreciation * 12
			LocalAnnualDepreciation = LocalAnnualDepreciation * LocalDBPercent
			LocalAnnualDepreciation	= LocalAnnualDepreciation / InLife
			if ((LocalLastYear
			or InLife < 12)
			and InPersonalUseCode not entered)
				LocalAnnualDepreciation = LocalAdjBasis - LocalDeprLTD + LocalDeprYTD
			return LocalAnnualDepreciation
			
		CalculateDeclingBalance is a DerivedField
			type is Decimal size 19.3
			restricted	
			initialize LocalMonthsInFirstYear
			if (InMethod	= "200DB20%"
			or  InMethod	= "150DB20%"
			or	InMethod	= "200DB30%"
			or  InMethod	= "150DB30%"
			or  InMethod	= "200DB40%"
			or  InMethod	= "150DB40%"
			or  InMethod	= "200DB50%"
			or  InMethod	= "150DB50%"
			or	InMethod	= "200DB60%"
			or  InMethod	= "150DB60%"
			or	InMethod	= "200DB75%"
			or	InMethod	= "150DB75%"
			or	InMethod	= "150DB80%"
			or	InMethod	= "200DB80%")
				LocalTempDeprBonus = CalculateDepreciationBonus

			LocalLife = InLife
				
			LocalAnnualDepreciation = LocalAdjBasis 
			LocalAnnualDepreciation = LocalAnnualDepreciation * 12
			LocalAnnualDepreciation = LocalAnnualDepreciation * LocalDBPercent
			LocalAnnualDepreciation	= LocalAnnualDepreciation / LocalLife
			if (LocalLife < 12
			and InPersonalUseCode not entered)
				LocalAnnualDepreciation = LocalAdjBasis - LocalDeprLTD + LocalDeprYTD

			if (InPersonalUseCode entered)
				LocalPersonalUseCode = InPersonalUseCode
				I2 = 1
				while (I2 < 61)
					LocalTotalLimits += PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit
					I2 +=1

			if (LocalDeprLTD = 0)
				LifeRemaining = LocalLife
				LocalCountYears = 1
				LocalMonthsInFirstYear				= FirstYearInServicePeriods
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 		= CalcNumberOfYearsInService
					LocalCDB						= FirstYearMonths
					while LocalNumberOfYearsPrior	!= 1
						if (LocalCountYears = 1)
							if (InPersonalUseCode entered)
								TranLocalAnnualDepreciation = LocalAnnualDepreciation
								if(Convention.HalfYear
								and LocalCountYears = 1)
									TranLocalAnnualDepreciation = TranLocalAnnualDepreciation / 2
								LocalAnnualDepreciation = CalculatePUAnnualDepreciation	
							if (Convention.ActualDays)
								LocalCalendarStatus		= "H"
								if (HistoryYearBookCalendarsRel4 exist)
									CustomYearEndDate	= HistoryYearBookCalendarsRel4.YearEndDate
								else
									LocalNumberOfYearsPrior = CalcNumberOfYearsInService
								LocalNumberOfDaysFirstYear 	= CustomYearEndDate - InServiceDate
								LocalNumberOfDaysFirstYear	+= 1
								if (HistoryYearBookCalendarsRel4 exists)
									LocalNumberOfDaysYear		= HistoryYearBookCalendarsRel4.CalendarDays
								else
									if (HistoryCalendarsForBookCompanyRel exists)
										LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays
									else
										LocalTriggerNumberOfDays	= NumberOfDaysYear
								LocalFirstYearDepreciation		= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
								LifeRemaining 					-= LocalNumberOfMonthsActualDays
								GWTLocalBeginYrDepr				= LocalFirstYearDepreciation
							else
								if (Convention.MidQuarter)
									LocalAnnualDepreciation		= LocalAnnualDepreciation / 12
									LocalAnnualDepreciation		= LocalAnnualDepreciation * LocalMonthsInFirstYear
									GWTLocalBeginYrDepr			= LocalAnnualDepreciation
									LifeRemaining -= NumberOfPeriodsFirstYear
								else
									if (Convention.HalfYear)
										if (InPersonalUseCode entered)		
											GWTLocalBeginYrDepr		= LocalAnnualDepreciation
											TranLocalAnnualDepreciation = TranLocalAnnualDepreciation * 2
										else
											GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 2
										LifeRemaining -= 6
									else
										if (Convention.FullYear)
											GWTLocalBeginYrDepr		= LocalAnnualDepreciation
											LifeRemaining -= 12
										else
											if (Convention.ModifiedHalfYear)
												LocalCDBDate = AdjustInsrvDate
												if (LocalDeprStartDate > InServiceDate)
													GWTLocalBeginYrDepr		= 0
												else
													GWTLocalBeginYrDepr		= LocalAnnualDepreciation
													LifeRemaining -= 12
											else
												if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
													GWTLocalBeginYrDepr		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
													GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
													LifeRemaining -= ((LocalFirstYearCalcPeriods/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)* 12)
												else
													GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
													GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear
													LifeRemaining -= LocalMonthsInFirstYear
							GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr + LocalDeprBonus
							GWTAddedBonusDepr		= true
							LocalDeprLTD			= GWTLocalBeginYrDepr
							if(LocalProgram = "DepreciationRecalculation")
								LocalDeprLTDAllow			= LocalDeprLTD	
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= GWTLocalBeginYrDepr
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= GWTLocalBeginYrDepr
						else
							if (!(InPersonalUseCode entered
							and LifeRemaining <=0
							and PersonalUseCodeRel.AllowPostRecoveryDeduction))
								LocalAnnualDepreciation = LocalAdjBasis - LocalDeprLTD + LocalDeprBonus
								LocalAnnualDepreciation = LocalAnnualDepreciation
								LocalAnnualDepreciation = LocalAnnualDepreciation * 12
								LocalAnnualDepreciation = LocalAnnualDepreciation * LocalDBPercent
								LocalAnnualDepreciation	= LocalAnnualDepreciation / LocalLife
								TranLocalAnnualDepreciation = LocalAnnualDepreciation
								if (LocalMethodSW)
									LocalAnnualDepreciation = CalculateSLAnnualDepreciation	
									TranLocalAnnualDepreciation = LocalAnnualDepreciation
							if (InPersonalUseCode entered)
								LocalDepreciationRemaining = LocalAdjBasis + LocalDeprBonus - LocalDeprLTD
							if (InFirstAndLastYear = "P"
							and InPersonalUseCode entered)
								TranLocalAnnualDepreciation	= LocalDepreciationRemaining
								LocalAnnualDepreciation     = TranLocalAnnualDepreciation
							if (InPersonalUseCode entered
							and LocalCountYears <= 60)
								if (LifeRemaining  <= 0)
									LocalAnnualDepreciation = PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalCountYears].DepreciationLimit
								else
									LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
							LocalDeprLTD			= LocalDeprLTD + LocalAnnualDepreciation
							if(LocalProgram = "DepreciationRecalculation")
								LocalDeprLTDAllow			= LocalDeprLTD
							LifeRemaining = LifeRemaining - 12
							if (InPersonalUseCode entered
							and LocalCountYears < 61)
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= TranLocalAnnualDepreciation
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= TranLocalAnnualDepreciation
							if(LocalAdjBasis > 0)
								if (LocalDeprLTD > (LocalAdjBasis + LocalDeprBonus))
									LocalDeprLTD 	= LocalAdjBasis
									LocalDeprYTD	= "0"
									LocalNumberOfYearsPrior 	-= 1
									if (InPersonalUseCode entered
									and LocalCountYears < 61)
										PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].YearEndDate			= PUAnnualDepDetail1.PUAnnualDepTable[LocalCountYears].YearEndDate
									return LocalAnnualDepreciation
							if (Convention.MidQuarter)
								NumberOfPeriodsFirstYear	= NumberOfPeriodsFirstYear + 12
							if (Convention.ActualDays)
								LocalNumberOfMonthsActualDays += 12	
							if (InPersonalUseCode entered
							and LocalCountYears < 61)
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= TranLocalAnnualDepreciation
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= TranLocalAnnualDepreciation
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].YearEndDate			= PUAnnualDepDetail1.PUAnnualDepTable[LocalCountYears].YearEndDate
						
						LocalNumberOfYearsPrior 	-= 1
						LocalCountYears				+= 1
					LocalDeprYTD					= "0"
					if (GetDepreciationEndDate > CurrentBookCalendarsRel.YearEndDate
					and !(LifeRemaining <=0
					and PersonalUseCodeRel.AllowPostRecoveryDeduction))
						LocalAnnualDepreciation 		= LocalAdjBasis - LocalDeprLTD + LocalDeprBonus
						LocalAnnualDepreciation 		= LocalAnnualDepreciation
						LocalAnnualDepreciation 		= LocalAnnualDepreciation * 12
						LocalAnnualDepreciation 		= LocalAnnualDepreciation * LocalDBPercent
						LocalAnnualDepreciation			= LocalAnnualDepreciation / LocalLife
						if (LocalMethodSW)
							LocalAnnualDepreciation = CalculateSLAnnualDepreciation	
						if (InPersonalUseCode entered
						and LocalCountYears <= 60)
							TranLocalAnnualDepreciation = LocalAnnualDepreciation
							if (LifeRemaining  <= 0)
								LocalAnnualDepreciation = PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalCountYears].DepreciationLimit
							else
								LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					else
						LocalAnnualDepreciation 		= LocalAdjBasis - LocalDeprLTD + LocalDeprBonus
						if (InPersonalUseCode entered)
							TranLocalAnnualDepreciation = LocalAnnualDepreciation
							LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					if (CompletelyDepreciated
					and !InPersonalUseCode entered)
						if (!LocalDeprEndDate < InYearBeginDate)
							LocalDeprYTD	= LocalAdjBasis + LocalDeprBonus - LocalDeprLTD
							if (LocalDeprYTD < 0)
								LocalDeprYTD = 0
						LocalDeprLTD		= LocalAdjBasis + LocalDeprBonus
						LocalLifeRemaining	= 0
						LocalDepreciationSet = true
						return LocalAnnualDepreciation
					else
						if (InPersonalUseCode entered
						and LocalDeprLTD > LocalAdjBasis)	
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis - LocalDeprLTD
								if (LocalDeprYTD < 0)
									LocalDeprYTD = 0
							LocalDeprLTD		= LocalAdjBasis + LocalDeprBonus
							LocalLifeRemaining	= 0
							LocalDepreciationSet = true
							return LocalAnnualDepreciation
					if (Convention.ActualDays)
						LocalNumberOfDaysFirstYear 	= LastPeriodEnd - CurrentBookCalendarsRel.YearBeginDate
						LocalNumberOfDaysFirstYear	+= 1
						LocalTriggerNumberOfDays	= NumberOfDaysYear
						LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
						LocalTempNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * 12
						LocalDeprYTD					= LocalFirstYearDepreciation
						LocalDeprLTD					= LocalDeprLTD + LocalDeprYTD
						if(LocalProgram = "DepreciationRecalculation")
							LocalDeprYTDAllow			= LocalDeprYTD
							LocalDeprLTDAllow			= LocalDeprLTD
						LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
						LocalLifeRemaining				= LocalLife - LocalNumberOfMonthsActualDays
						LifeRemaining 					-= LocalTempNumberOfMonthsActualDays
					else
						LocalNumOfPdsClosedCurrentYear = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalInServiceDate = InServiceDate
							InServiceDate = CurrentBookCalendarsRel.YearBeginDate
							if (!Convention.MidMonth)
								LocalNumOfPdsClosedCurrentYear = NumberOfPeriodsClosedCurrentYear
							InServiceDate = LocalInServiceDate
						if (Convention.HalfYear)
							LocalLifeRemaining				= LifeRemainingHalfYear
						else						
							if (Convention.FullYear)
								LocalLifeRemaining			= LifeRemainingFullYear
							else
								if (Convention.ModifiedHalfYear)
									LocalLifeRemaining		= LifeRemainingModifiedHalfYear
								else
									LocalLifeRemaining			= LocalLife	- LocalProcessedMonths				
						if (GetDepreciationEndDate < CurrentBookCalendarsRel.YearEndDate
						and !(PersonalUseCodeRel exists
						and PersonalUseCodeRel.AllowPostRecoveryDeduction entered))
							if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
								LocalStartDate		= CurrentBookCalendarsRel.YearBeginDate
								LocalMonthlyDepreciation		= LocalAnnualDepreciation / NumberOfPeriodsCurrentYear
							else
								if (Convention.MidQuarter)
									LocalMonthlyDepreciation	= LocalAnnualDepreciation / (LifeRemainingMidQuarter + LocalNumOfPdsClosedCurrentYear)
								else
									LocalMonthlyDepreciation	= LocalAnnualDepreciation / (LocalLifeRemaining + LocalNumOfPdsClosedCurrentYear)
						else
							LocalMonthlyDepreciation		= LocalAnnualDepreciation /CurrentBookCalendarsRel.DepreciationPeriodsPerYear
						LifeRemaining -= ((LocalNumOfPdsClosedCurrentYear / CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
						LocalDeprYTD					= LocalMonthlyDepreciation * LocalNumOfPdsClosedCurrentYear	
						LocalDeprLTD					= LocalDeprLTD + LocalDeprYTD	
						if(LocalProgram = "DepreciationRecalculation")
							LocalDeprYTDAllow			= LocalDeprYTD
							LocalDeprLTDAllow			= LocalDeprLTD
						if (LocalMethodSW)
							LocalMethodSW = false	
						if(LocalAdjBasis > 0)		
							if (LocalDeprLTD > (LocalAdjBasis + LocalDeprBonus))
								LocalOverage	= LocalDeprLTD - LocalAdjBasis
								LocalDeprLTD 	= LocalAdjBasis
								LocalDeprYTD	= LocalDeprYTD - LocalOverage
								return LocalAnnualDepreciation		
				else
					if (InPersonalUseCode entered)
						TranLocalAnnualDepreciation = LocalAnnualDepreciation
						if(Convention.HalfYear)
							TranLocalAnnualDepreciation = TranLocalAnnualDepreciation /2
						LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						LocalCurrentPeriodCount	= NumberOfPeriodsClosedCurrentYear
					else
						LocalCurrentPeriodCount	= LocalProcessedMonths
						
					if (Convention.HalfYear)
						if (InPersonalUseCode not entered)
							LocalAnnualDepreciation		= LocalAnnualDepreciation / 2
						GWTLocalBeginYrDepr			= LocalAnnualDepreciation / LocalMonthsInFirstYear
						GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr * LocalCurrentPeriodCount
						LocalDeprYTD				= GWTLocalBeginYrDepr
					else
						if (Convention.MidQuarter)
							if (LocalProgram = "Proj")
								LocalCDB						= FirstYearMonths
							LocalAnnualDepreciation			= LocalAnnualDepreciation / 12
							LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear
							LocalMonthlyDepreciation		= LocalAnnualDepreciation / MidQuarterFirstYearPeriods
							GWTLocalBeginYrDepr				= LocalMonthlyDepreciation * MidQuarterFirstYearPeriodsClosed
							LocalDeprYTD					= GWTLocalBeginYrDepr
						else
							if (Convention.FullYear)
								GWTLocalBeginYrDepr			= LocalAnnualDepreciation / LocalMonthsInFirstYear
								GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr * LocalCurrentPeriodCount
								LocalDeprYTD				= GWTLocalBeginYrDepr
							else
								if (Convention.ModifiedHalfYear)
									LocalCDBDate 				= AdjustInsrvDate
									if (LocalDeprStartDate > InServiceDate)
										GWTLocalBeginYrDepr		= 0
									else
										LocalMonthsInFirstYear	= FirstYearInServicePeriods
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / LocalMonthsInFirstYear
										GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalCurrentPeriodCount
										LocalDeprYTD			= GWTLocalBeginYrDepr
								else
									if (Convention.ActualDays)
										LocalNumberOfDaysFirstYear 	= CustomYearEndDate - InServiceDate
										LocalNumberOfDaysFirstYear	+= 1
										LocalTriggerNumberOfDays	= NumberOfDaysYear
										LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
										LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
										LocalMonthlyDepreciation		= LocalFirstYearDepreciation
										NumberOfPeriodsClosedFirstYear	= ActualDaysPeriodsClosedCurrentYear
										GWTLocalBeginYrDepr				= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
										LocalDeprYTD					= GWTLocalBeginYrDepr
									else
										if (Convention.ModifiedHalfMonth)
											LocalLifeRemaining			= LocalLife - LocalProcessedMonths
										if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
											GWTLocalBeginYrDepr			= LocalAnnualDepreciation /	CurrentBookCalendarsRel.DepreciationPeriodsPerYear
											LocalDeprYTD				= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
											GWTLocalBeginYrDepr			= LocalDeprYTD
										else
											GWTLocalBeginYrDepr			= LocalAnnualDepreciation /	CurrentBookCalendarsRel.DepreciationPeriodsPerYear
											if (Convention.ModifiedHalfMonth)
												GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr * NumberOfPeriodsClosedCurrentYear
											else
												GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr * LocalProcessedMonths

					if (LocalMethodSW)
						LocalMethodSW = false		
					if (CompletelyDepreciated)
						if (!LocalDeprEndDate < InYearBeginDate)
							LocalDeprYTD	= LocalAdjBasis - LocalDeprLTD
							if (LocalDeprYTD < 0)
								LocalDeprYTD = 0
						LocalDeprLTD		= LocalAdjBasis
						LocalLifeRemaining	= 0
						LocalDepreciationSet = true
						return LocalAnnualDepreciation
					if (!InServiceDate > LastPeriodEnd)
						GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr + LocalDeprBonus
					if (Convention.ModifiedHalfMonth)
						if ((LastPeriodEnd month = InServiceDate month
						and LastPeriodEnd year = InServiceDate year)
						and CurrentInServiceMonthEndDate)
							GWTLocalBeginYrDepr = 0
					if ((!CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
					or LocalDeprBonus entered)
						LocalDeprYTD			= GWTLocalBeginYrDepr
					LocalDeprLTD				= LocalDeprYTD
					if(LocalProgram = "DepreciationRecalculation")
						LocalDeprYTDAllow			= LocalDeprYTD
						LocalDeprLTDAllow			= LocalDeprLTD
					GWTAddedBonusDepr			= true						

			LocalDepreciationSet	= true
			return LocalAnnualDepreciation	
		
		CalculateSLAnnualDepreciation is a DerivedField
			type is like InternationalAmount
			LocalDeprCompare	= LocalAnnualDepreciation
			LocalAnnualDepreciation		= ((LocalAdjBasis - LocalDeprLTD + LocalDeprBonus) / LifeRemaining)
			LocalAnnualDepreciation		= LocalAnnualDepreciation * 12 
			
			if (InFirstAndLastYear != "P")
				if ((LocalAnnualDepreciation entered
				and LocalAnnualDepreciation not > LocalDeprCompare)
				or	(LocalAnnualDepreciation not entered
				and LocalAnnualDepreciation not < LocalDeprCompare))
					LocalAnnualDepreciation	=  LocalDeprCompare
			return LocalAnnualDepreciation
				
		CalculatePUAnnualDepreciation is a DerivedField
			type is like InternationalAmount
			if (PersonalUseCodeRel.AllowAnnualDepreciationLimit)
				if (LocalTotalLimits entered)
					if (TranLocalAnnualDepreciation entered)
						if(LocalCountYears < 61)
							if (PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalCountYears].DepreciationLimit < TranLocalAnnualDepreciation)
								LocalDeprCompare	= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalCountYears].DepreciationLimit
							else
								LocalDeprCompare	= TranLocalAnnualDepreciation
						else
							LocalDeprCompare	= LocalLastLimit
					else
						if(LocalCountYears < 61)
							LocalDeprCompare		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[LocalCountYears].DepreciationLimit
					if(LocalDeprCompare = 0)
						LocalDeprCompare = LocalLastLimit

					if ((TranLocalAnnualDepreciation entered
					and LocalDeprCompare		< TranLocalAnnualDepreciation)
					or  (TranLocalAnnualDepreciation <= 0
					and LocalDeprCompare	> TranLocalAnnualDepreciation))
						LocalAnnualDepreciation	= LocalDeprCompare
					else
						LocalAnnualDepreciation = TranLocalAnnualDepreciation
					if(LocalDeprCompare != 0)
						LocalLastLimit = LocalDeprCompare
			return 	LocalAnnualDepreciation	
		
		CalculateStraightLine is a DerivedField
			type is like InternationalAmount
			restricted
			if (NumberOfPeriodCloseRuns not entered)
				NumberOfPeriodCloseRuns = CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
			if (Convention.ActualDaysFirstMonth)
				GWTLocalTrigger	= CalculateActualFirstYear
				if (LocalLifeRemaining not entered)
					LocalLifeRemaining = LocalLifeRemainingAcutalDaysFirstMonth
				LocalDepreciationSet	= true
				return
				
			LocalMethod = InMethod
			initialize LocalOptMethod
			if (LocalMethod	= "SL20%"
			or	LocalMethod	= "SL30%"
			or  LocalMethod = "SL40%"
			or  LocalMethod = "SL50%"
			or	LocalMethod	= "SL60%"
			or  LocalMethod = "SL75%"
			or	LocalMethod	= "SL80%")
				LocalAdjBasis	= CalculateDepreciationBonus

			LocalInactYear = InYearToDateInactiveMonths
   
			LocalAsset	= InAsset
			if (AssetRel exists)
				LocalCompany	= AssetRel.Company
			else
				LocalCompany	= InCompany
			if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear not entered)
				LocalDepreciationPeriodsPerYear = 1
			else
				LocalDepreciationPeriodsPerYear = LocalNumberOfDeprPeriods
			if (LocalInactYear entered)
				LocalBeginYrLife			= (InLifeRemaining - LocalInactYear)
				LocalBeginYrLife			*= LocalNumberOfDeprPeriods
				LocalBeginYrLife			+= (NumberOfPeriodCloseRuns *12)
				LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife		= InLife - LocalInactYear
			else
				LocalBeginYrLife			= ((InLifeRemaining * LocalDepreciationPeriodsPerYear) + (NumberOfPeriodCloseRuns * 12))
				LocalBeginYrLife			/= LocalDepreciationPeriodsPerYear
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife = InLife
			if (LocalBeginYrLife >  InLife)
				LocalBeginYrLife = InLife

			if (!LocalBeginYrLife > 0)
				initialize LocalAnnualDepreciation
			else
				if (AssetRel.AssetProcess.Adjustment
				and LocalProgram != "Proj")
					LocalDeprLTD		= InLTDDepr
					LocalDeprYTD		= InYTDDepr
				LocalAnnualDepreciation = (LocalAdjBasis * 12)
				LocalAnnualDepreciation /= LocalBeginYrLife
				if(config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
					LocalCurrentPeriodDepreciation	= LocalAdjBasis
					LocalCurrentPeriodDepreciation /= LocalBeginYrLife
				if (InLife < 12)
					LocalAnnualDepreciation = ((LocalAdjBasis - LocalDeprLTD + LocalDeprYTD)* InLife)
					LocalAnnualDepreciation /= LocalBeginYrLife
					InFirstAndLastYear = "L"
					if (LocalLastYear
					and LocalDeprLTD = 0
					and LocalDeprYTD = 0)
						LocalMonthlyDepreciation	= LocalAdjBasis / InLife
						if (InDepreciationStartDate < InYearBeginDate)
							LocalDeprLTD				= LocalMonthlyDepreciation * LocalProcessedMonths
							GWTAddedBonusDepr			= true
							LocalDeprLTD				= LocalDeprLTD + LocalDeprBonus
							if(GetDepreciationEndDate >= InYearBeginDate
							and GetDepreciationEndDate <= InYearEndDate)
								LocalPeriods = InLife - FirstYearInServicePeriods
								if (LocalPeriods <= NumberOfPeriodCloseRuns)
									LocalDeprYTD				= LocalMonthlyDepreciation * LocalPeriods
								else
									LocalDeprYTD				= LocalMonthlyDepreciation * NumberOfPeriodCloseRuns
						else
							LocalDeprYTD				= LocalMonthlyDepreciation * LocalProcessedMonths 
							LocalDeprYTD				= LocalDeprYTD + LocalDeprBonus
							GWTAddedBonusDepr			= true
							LocalDeprLTD				= LocalDeprYTD
					LocalLifeRemaining	= LocalLife - LocalProcessedMonths
			if (LocalSLCalculation = "M"
			or LocalSLCalculation = "O")
				LocalAnnualDepreciation		 =  (LocalAdjBasis * 12)
				LocalAnnualDepreciation		/= InLife

			if (InPersonalUseCode entered)
				LocalPersonalUseCode = InPersonalUseCode
				I2 = 1
				while (I2 < 61)
					LocalTotalLimits += PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit		
					I2 +=1

			if (LocalDeprLTD = 0)
				initialize LocalMonthlyDepreciation
				LocalMonthsInFirstYear	= FirstYearInServicePeriods
				LocalCDB 				= FirstYearMonths
				LocalCountYears 		= 1
				TranLocalAnnualDepreciation = LocalAnnualDepreciation
				if (InServiceDate < InYearBeginDate)
					if (Convention.ModifiedHalfMonth
					and CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						LocalNumberOfYearsPrior			= CalcNumberOfYearsInServiceForHM
					else
						LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					if(config.ApplyAssetShortYearUpdate = true
					and IsBookHasShortYear)
						if (InPersonalUseCode entered)
							if(Convention.HalfYear
							and LocalCountYears = 1)
								TranLocalAnnualDepreciation = TranLocalAnnualDepreciation / 2
							LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
						if (LocalCountYears = 1)
							if (Convention.ActualDays)
								LocalCalendarStatus		= "H"
								if (HistoryYearBookCalendarsRel4 exist)
									LocalNumberOfDaysYear		= HistoryYearBookCalendarsRel4.CalendarDays
									LocalNumberOfDaysFirstYear  = (HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate + 1)
									LocalTriggerNumberOfDays	= LocalNumberOfDaysFirstYear
									CustomYearEndDate			= HistoryYearBookCalendarsRel4.YearEndDate
								else
									LocalNumberOfYearsPrior 	= CalcNumberOfYearsInService
									LocalNumberOfDaysFirstYear  = (LocalYearEndDate - InServiceDate + 1)
									if (HistoryCalendarsForBookCompanyRel exists)
										LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays 
									else
										LocalTriggerNumberOfDays	= NumberOfDaysYear 

								LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
								GWTLocalBeginYrDepr		= LocalFirstYearDepreciation
							
							if (Convention.HalfYear)
								if (InPersonalUseCode not entered)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 2
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation
									TranLocalAnnualDepreciation = TranLocalAnnualDepreciation * 2
							
							if (Convention.MidQuarter)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
								GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

							if (Convention.FullMonth
							or Convention.NextMonth
							or Convention.MidMonth)
								LocalMonthsInFirstYear	= FirstYearInServicePeriods
								if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

							if(Convention.ModifiedHalfMonth)
								LocalMonthsInFirstYear	= FirstYearInServicePeriods
								if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

							if (Convention.FullYear)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation

							if (Convention.ModifiedHalfYear)
								LocalCDBDate = AdjustInsrvDate
								if (LocalDeprStartDate > InServiceDate)
									GWTLocalBeginYrDepr		= 0
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation
							GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr + LocalDeprBonus
							GWTAddedBonusDepr			= true
							LocalDeprLTD				= GWTLocalBeginYrDepr
							if(LocalProgram = "DepreciationRecalculation")
								LocalDeprLTDAllow			= LocalDeprLTD	
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= GWTLocalBeginYrDepr
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= GWTLocalBeginYrDepr
								if(parentcontext.name = "AssetProjectionParameter")
									LocalAnnualDepreciation = GWTLocalBeginYrDepr
									return LocalAnnualDepreciation
						if (Convention.MidQuarter)
							NumberOfPeriodsFirstYear	= NumberOfPeriodsFirstYear + 12
						initialize LocalAllDepreciationPeriodsPerYear
						initialize LocalYearDiff
						LocalInServiceDate                  = InServiceDate
						LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
						LocalCurrentPriorYearEndDate		= LocalCurrentYearBeginDate - 1 day
						LocalCurrentYearEndDate				= CurrentBookCalendarsRel.YearEndDate
						FirstCalendarYearBeginDate			= first AllYearCalendarsRel.YearBeginDate
						while(LocalInServiceDate < FirstCalendarYearBeginDate)
							LocalInServiceDate = LocalInServiceDate + 1 year
							LocalYearDiff      = LocalYearDiff + 1
						LocalYearDiff						= LocalYearDiff - 1
						if (LocalYearDiff > 0)
							LocalShortAnnualDepreciation		= LocalYearDiff * LocalAnnualDepreciation
						LocalInServiceDate                  = InServiceDate
						for each AllYearUntilPreviousCalendarsRel
							LocalAllDepreciationPeriodsPerYear     += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
						LocalTotalAnnualDepreciation		= LocalCurrentPeriodDepreciation * LocalAllDepreciationPeriodsPerYear
						LocalDeprLTD				= LocalDeprLTD + LocalTotalAnnualDepreciation + LocalShortAnnualDepreciation
						if(LocalProgram = "DepreciationRecalculation")
							LocalDeprLTDAllow			= LocalDeprLTD
						if (InPersonalUseCode entered
						and LocalCountYears < 61)
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= LocalAnnualDepreciation		
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= LocalAnnualDepreciation
						if (InPersonalUseCode entered
						and LocalCountYears < 61)
							PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].YearEndDate			= PUAnnualDepDetail1.PUAnnualDepTable[LocalCountYears].YearEndDate
					else
						while (LocalNumberOfYearsPrior		!= 1)
							if (InPersonalUseCode entered)
								if(Convention.HalfYear
								and LocalCountYears = 1)
									TranLocalAnnualDepreciation = TranLocalAnnualDepreciation / 2
								LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
							if (LocalCountYears = 1)
								if (Convention.ActualDays)
									LocalCalendarStatus		= "H"
									if (HistoryYearBookCalendarsRel4 exist)
										LocalNumberOfDaysYear		= HistoryYearBookCalendarsRel4.CalendarDays
										LocalNumberOfDaysFirstYear  = (HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate + 1)
										LocalTriggerNumberOfDays	= LocalNumberOfDaysFirstYear  								
										CustomYearEndDate			= HistoryYearBookCalendarsRel4.YearEndDate
									else
										LocalNumberOfYearsPrior 	= CalcNumberOfYearsInService
										LocalNumberOfDaysFirstYear	= (LocalYearEndDate - InServiceDate + 1)
										if (HistoryCalendarsForBookCompanyRel exists)
											LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays
										else
											LocalTriggerNumberOfDays	= NumberOfDaysYear 

									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
									LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
									LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
									GWTLocalBeginYrDepr		= LocalFirstYearDepreciation
								
								if (Convention.HalfYear)
									if (InPersonalUseCode not entered)
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 2
									else
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation
										TranLocalAnnualDepreciation = TranLocalAnnualDepreciation * 2
								
								if (Convention.MidQuarter)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

								if (Convention.FullMonth
								or Convention.NextMonth
								or Convention.MidMonth)
									LocalMonthsInFirstYear	= FirstYearInServicePeriods
									if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
										GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
									else
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
										GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

								if(Convention.ModifiedHalfMonth)
									LocalMonthsInFirstYear	= FirstYearInServicePeriods
									if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
										GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
									else
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
										GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear

								if (Convention.FullYear)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation

								if (Convention.ModifiedHalfYear)
									LocalCDBDate = AdjustInsrvDate
									if (LocalDeprStartDate > InServiceDate)
										GWTLocalBeginYrDepr		= 0
									else
										GWTLocalBeginYrDepr		= LocalAnnualDepreciation
								GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr + LocalDeprBonus
								GWTAddedBonusDepr			= true
								LocalDeprLTD				= GWTLocalBeginYrDepr
								if(LocalProgram = "DepreciationRecalculation")
									LocalDeprLTDAllow			= LocalDeprLTD	
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= GWTLocalBeginYrDepr
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= GWTLocalBeginYrDepr
								if(parentcontext.name = "AssetProjectionParameter")
									LocalAnnualDepreciation = GWTLocalBeginYrDepr
									return LocalAnnualDepreciation
							else
								if (Convention.MidQuarter)
									NumberOfPeriodsFirstYear	= NumberOfPeriodsFirstYear + 12
								if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear = 12
								and HistoryCalendarsShortYearRel exists)
									LocalShortAnnualDepreciation	= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
									LocalShortAnnualDepreciation = LocalShortAnnualDepreciation * HistoryCalendarsShortYearRel.DepreciationPeriodsPerYear
								if (HistoryCalendarsShortYearRel exists)
									LocalDeprLTD				= LocalDeprLTD + LocalShortAnnualDepreciation
								else
									LocalDeprLTD				= LocalDeprLTD + LocalAnnualDepreciation
								if(LocalProgram = "DepreciationRecalculation")
									LocalDeprLTDAllow			= LocalDeprLTD
								if (Convention.ActualDays)
									LocalNumberOfMonthsActualDays += 12
								if (InPersonalUseCode entered
								and LocalCountYears < 61)
									PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].Depreciation		= LocalAnnualDepreciation		
									PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].DepreciationAllow	= LocalAnnualDepreciation
							LocalNumberOfYearsPrior 		-= 1
							if (InPersonalUseCode entered
							and LocalCountYears < 61)
								PUAnnualDepDetail.PUAnnualDepTable[LocalCountYears].YearEndDate			= PUAnnualDepDetail1.PUAnnualDepTable[LocalCountYears].YearEndDate
							LocalCountYears					+= 1

					LocalDeprYTD					= "0"
					if (CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed entered)
						if (InPersonalUseCode entered)
							LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
						if (CompletelyDepreciated
						and !(Convention.HalfYear
						and LifeRemainingHalfYear > 0)
						and !InPersonalUseCode entered)
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis + LocalDeprBonus - LocalDeprLTD
								if (LocalDeprYTD < 0)
									LocalDeprYTD = 0
							LocalDeprLTD		= LocalAdjBasis + LocalDeprBonus
							LocalLifeRemaining	= 0
							LocalDepreciationSet = true
							return LocalAnnualDepreciation
						else
							if (InPersonalUseCode entered
							and LocalDeprLTD > LocalAdjBasis)	
								if (!LocalDeprEndDate < InYearBeginDate)
									LocalDeprYTD	= LocalAdjBasis + LocalDeprBonus - LocalDeprLTD
									if (LocalDeprYTD < 0)
										LocalDeprYTD = 0
								LocalDeprLTD		= LocalAdjBasis + LocalDeprBonus
								LocalLifeRemaining	= 0
								LocalDepreciationSet = true
								return LocalAnnualDepreciation
						if (Convention.ActualDays)
							LocalDeprEndDate = GetDepreciationEndDate
							if (LocalDeprEndDate < CurrentBookCalendarsRel.YearEndDate)
								LocalNumberOfDaysYear	= LocalDeprEndDate - CurrentBookCalendarsRel.YearBeginDate
								LocalNumberOfDaysYear	+= 1
								LocalAnnualDepreciation	= LocalAdjBasis - LocalDeprLTD
							else
								LocalTriggerNumberOfDays	= NumberOfDaysYear
							if (LocalDeprEndDate < LastPeriodEnd)
								LocalNumberOfDaysYear	= LocalDeprEndDate - CurrentBookCalendarsRel.YearBeginDate
								LocalNumberOfDaysYear	+= 1
							else
								LocalNumberOfDaysFirstYear 	= LastPeriodEnd - CurrentBookCalendarsRel.YearBeginDate
								LocalNumberOfDaysFirstYear	+= 1
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
							LocalTempNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							if (LocalDeprEndDate < CurrentBookCalendarsRel.YearEndDate)
								LocalTempRemainingLife				= LocalLife - LocalNumberOfMonthsActualDays
								LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * LocalTempRemainingLife
							else
								LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * 12
							LocalDeprYTD					= LocalFirstYearDepreciation
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
							LocalLifeRemaining				= LocalLife - LocalNumberOfMonthsActualDays
						else
							LocalNumOfPdsClosedCurrentYear = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
							if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
								LocalDate = InServiceDate
								InServiceDate = CurrentBookCalendarsRel.YearBeginDate
								if (!Convention.MidMonth)
									LocalNumOfPdsClosedCurrentYear = NumberOfPeriodsClosedCurrentYear
								InServiceDate = LocalDate
							LocalMonthlyDepreciation			= LocalAnnualDepreciation /CurrentBookCalendarsRel.DepreciationPeriodsPerYear
							LocalDeprYTD						= LocalMonthlyDepreciation * LocalNumOfPdsClosedCurrentYear
							if (Convention.HalfYear)
								LocalLifeRemaining				= LifeRemainingHalfYear
							else						
								if (Convention.FullYear)
									LocalLifeRemaining				= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining		= LifeRemainingModifiedHalfYear
									else
										LocalLifeRemaining					= LocalLife	- LocalProcessedMonths
						LocalDeprLTD						= LocalDeprLTD + LocalDeprYTD
						if(LocalProgram = "DepreciationRecalculation")
							LocalDeprYTDAllow			= LocalDeprYTD
							LocalDeprLTDAllow			= LocalDeprLTD
					else
						if (Convention.ActualDays)
							LocalLifeRemaining	= LocalLife - LocalNumberOfMonthsActualDays
						else
							if (Convention.HalfYear)
								LocalLifeRemaining				= LifeRemainingHalfYear
							else						
								if (Convention.FullYear)
									LocalLifeRemaining				= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining		= LifeRemainingModifiedHalfYear
									else
										LocalLifeRemaining					= LocalLife	- LocalProcessedMonths
						if (CompletelyDepreciated)
							if (LocalDeprLTD > LocalAdjBasis)
								LocalDeprLTD		= LocalAdjBasis
						if (CompletelyDepreciated
						and LifeRemainingHalfYear not entered
						and Convention.HalfYear)
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis + LocalDeprBonus - LocalDeprLTD
								if (LocalDeprYTD < 0)
									LocalDeprYTD = 0
							LocalDeprLTD		= LocalAdjBasis + LocalDeprBonus
							LocalLifeRemaining	= 0
							LocalDepreciationSet = true
							return LocalAnnualDepreciation
					
				else
					if (InPersonalUseCode entered)
						if (Convention.HalfYear)
							TranLocalAnnualDepreciation = TranLocalAnnualDepreciation / 2
						LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					LocalCurrentPeriodCount = LocalFirstYearCalcPeriods
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
					else
						if(!InPersonalUseCode entered)
							LocalMonthlyDepreciation		= LocalAdjBasis / LocalLife
						else
							LocalMonthlyDepreciation		= LocalAnnualDepreciation / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
					if (Convention.MidQuarter)
						LocalAnnualDepreciation			= LocalAnnualDepreciation / 12
						LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear
						LocalProcessedMonths			= MidQuarterFirstYearPeriodsClosed
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / MidQuarterFirstYearPeriods
						NumberOfPeriodsClosedFirstYear	= MidQuarterFirstYearPeriodsClosed

					if (Convention.MidMonth)
						if (!CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalMonthlyDepreciation	= LocalAdjBasis / LocalLife

					if (Convention.HalfYear)
						LocalMonthsInFirstYear		= FirstYearInServicePeriods
						if (InPersonalUseCode not entered)
							LocalAnnualDepreciation		= LocalAnnualDepreciation / 2
						LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear

					if (Convention.ModifiedHalfYear)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							LocalMonthlyDepreciation	= 0
						else
							LocalMonthsInFirstYear		= FirstYearInServicePeriods
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear

					if (Convention.FullYear)
						LocalMonthsInFirstYear		= FirstYearInServicePeriods
						LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear
						
					if (Convention.ActualDays)
						LocalNumberOfDaysFirstYear 		= CustomYearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear		+= 1
						if (FromProjection
						and InServiceDate < CurrentBookCalendarsRel.YearBeginDate)
							LocalInServiceDate = InServiceDate
							if (HistoryYearBookCalendarsRel4 exist)
								LocalNumberOfDaysYear			= HistoryYearBookCalendarsRel4.CalendarDays
								LocalTriggerNumberOfDays		= LocalNumberOfDaysYear 
							else
								if (HistoryCalendarsForBookCompanyRel exists)
									LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays
								else
									LocalTriggerNumberOfDays	= NumberOfDaysYear
						else	
							LocalTriggerNumberOfDays		= NumberOfDaysYear
						LocalFirstYearDepreciation		= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalAnnualDepreciation
						LocalMonthlyDepreciation		= LocalFirstYearDepreciation
						NumberOfPeriodsClosedFirstYear	= ActualDaysPeriodsClosedCurrentYear
						LocalNumberOfDaysFirstYear 		= LastPeriodEnd - InServiceDate
						LocalNumberOfDaysFirstYear		+= 1						
						LocalTempNumberOfMonthsActualDays = LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalLifeRemaining			= LocalLife - (LocalTempNumberOfMonthsActualDays * 12)
					if (InLife < NumberOfPeriodsClosedFirstYear)
						LocalDeprYTD						= LocalMonthlyDepreciation * InLife
					else
						if (Convention.ActualDays)
							LocalDeprYTD				= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
						else
							if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
								if (Convention.HalfYear
								or Convention.ModifiedHalfYear
								or Convention.FullYear)
									LocalDeprYTD			= LocalMonthlyDepreciation * LocalCurrentPeriodCount
								else
								if (Convention.MidQuarter)
									LocalDeprYTD			= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
								else
									LocalDeprYTD			= LocalMonthlyDepreciation * LocalFirstYearCalcPeriods
							else
								LocalDeprYTD			= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
					if (Convention.ModifiedHalfMonth)
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalLifeRemaining		= LocalLife - ((LocalFirstYearCalcPeriods * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						else
							LocalLifeRemaining		= LocalLife - NumberOfPeriodsClosedFirstYear					
					if (!InServiceDate > LastPeriodEnd)
						LocalDeprYTD						= LocalDeprYTD + LocalDeprBonus
					if (Convention.ModifiedHalfMonth)
						if ((LastPeriodEnd month = InServiceDate month
						and LastPeriodEnd year = InServiceDate year)
						and CurrentInServiceMonthEndDate)
							LocalDeprYTD = 0
					GWTAddedBonusDepr					= true
					LocalDeprLTD						= LocalDeprYTD
					if(LocalProgram = "DepreciationRecalculation")
						LocalDeprYTDAllow			= LocalDeprYTD
						LocalDeprLTDAllow			= LocalDeprLTD
					
			LocalDepreciationSet	= true
			return LocalAnnualDepreciation

	    Calculate100Bonus580 is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalDeprBonus
			LocalAdjBasis	= InBasis - InFirstYearExpenseAmount 
			if (LocalFirstYear
			or InMethod = "100%BONUS")
				if 	(InMethod = "SL30%"
				or	InMethod = "200DB30%"
				or	InMethod = "150DB30%")
					LocalDeprBonus	= LocalAdjBasis * 0.30
				else
					if 	(InMethod= "SL40%"
					or	InMethod= "200DB40%"
					or	InMethod = "150DB40%")
						LocalDeprBonus	= LocalAdjBasis * 0.40
					else
						if 	(InMethod= "SL50%"
						or	InMethod= "200DB50%"
						or	InMethod = "150DB50%")
							LocalDeprBonus	= LocalAdjBasis * 0.50
						else
							if 	(InMethod	= "SL75%"
							or	InMethod	= "200DB75%"
							or	InMethod	= "150DB75%")
								LocalDeprBonus	= LocalAdjBasis * 0.75	
							else
								if 	(InMethod 	= "100%BONUS")
									LocalDeprBonus	= LocalAdjBasis * 1
								else
									if (InMethod	= "SL20%"
									or InMethod 	= "150DB20%"
									or InMethod 	= "200DB20%")
										LocalDeprBonus	= LocalAdjBasis * 0.20
									else
										if (InMethod	= "SL60%"
										or InMethod 	= "150DB60%"
										or InMethod 	= "200DB60%")
											LocalDeprBonus	= LocalAdjBasis * 0.60
										else
											if (InMethod	= "SL80%"
											or InMethod 	= "150DB80%"
											or InMethod 	= "200DB80%")
												LocalDeprBonus	= LocalAdjBasis * 0.80
			LocalAdjBasis		= LocalAdjBasis - LocalDeprBonus - LocalBasisReductionPercentage - InSalvageValue
			if ((LocalProgram = "AM180"
			or LocalProgram = "AM280"
			or LocalProgram = "AM255")
			and LocalDeprLTD entered)
				LocalDeprYTD	-= LocalDeprBonus
				LocalDeprLTD	-= LocalDeprBonus
			LocalDeprBonusAllow	= LocalDeprBonus
			LocalDeprBonusFull	= LocalDeprBonus
			initialize LocalAnnualDepreciation
			initialize LocalDeprLTD
			initialize LocalDeprYTD
			LocalAdjBasis	= InBasis - InFirstYearExpenseAmount
			return LocalAdjBasis

		Calculate100Bonus is a DerivedField
			type is like InternationalAmount
			restricted	
			Local100Bonus = CalculateDepreciationBonus
			initialize LocalAnnualDepreciation
			initialize LocalDeprLTD
			initialize LocalDeprYTD
			LocalAdjBasis	= InBasis - InFirstYearExpenseAmount
			if (InPersonalUseCode entered)
				LocalPersonalUseCode = InPersonalUseCode
				I2 = 1
				while (I2 < 21)
					LocalTotalLimits += PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit		
					I2 +=1
				LocalCountYears 		= 1
				LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
				while LocalNumberOfYearsPrior		!= 1
					TranLocalAnnualDepreciation = LocalDeprBonus - LocalDeprLTD
					LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					if (TranLocalAnnualDepreciation > 0)
						LocalDeprLTD += LocalAnnualDepreciation
					LocalNumberOfYearsPrior 		-= 1
					LocalCountYears					+= 1
				if (CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed entered)
					TranLocalAnnualDepreciation = LocalDeprBonus - LocalDeprLTD
					LocalAnnualDepreciation = CalculatePUAnnualDepreciation		
					if (TranLocalAnnualDepreciation > 0)
						LocalDeprYTD		= LocalAnnualDepreciation
				if (InServiceDate < CurrentBookCalendarsRel.YearBeginDate)
					LocalDeprLTD		= LocalDeprLTD + LocalDeprYTD
				else
					LocalDeprLTD		= LocalDeprYTD
			else
				LocalDeprYTD	= LocalDeprBonus
				LocalDeprLTD	= LocalDeprBonus
			GWTAddedBonusDepr	= true
			return LocalAdjBasis		

		CalculateDepreciationBonus is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalAdjBasis	= InBasis - InFirstYearExpenseAmount - LocalBasisReductionPercentage 
			if 	(InMethod = "SL30%"
			or	InMethod = "200DB30%"
			or	InMethod = "150DB30%")
				LocalDeprBonus	= LocalAdjBasis * 0.30
			else
				if 	(InMethod= "SL40%"
				or	InMethod= "200DB40%"
				or	InMethod = "150DB40%")
					LocalDeprBonus	= LocalAdjBasis * 0.40
				else
					if 	(InMethod= "SL50%"
					or	InMethod= "200DB50%"
					or	InMethod = "150DB50%")
						LocalDeprBonus	= LocalAdjBasis * 0.50
					else
						if 	(InMethod	= "SL75%"
						or	InMethod	= "200DB75%"
						or	InMethod	= "150DB75%")
							LocalDeprBonus	= LocalAdjBasis * 0.75	
						else
							if 	(InMethod 	= "100%BONUS")
								LocalDeprBonus	= LocalAdjBasis * 1
							else
								if (InMethod	= "SL20%"
								or InMethod 	= "150DB20%"
								or InMethod 	= "200DB20%")
									LocalDeprBonus	= LocalAdjBasis * 0.20
								else
									if (InMethod	= "SL60%"
									or InMethod 	= "150DB60%"
									or InMethod 	= "200DB60%")
										LocalDeprBonus	= LocalAdjBasis * 0.60
									else
										if (InMethod	= "SL80%"
										or InMethod 	= "150DB80%"
										or InMethod 	= "200DB80%")
											LocalDeprBonus	= LocalAdjBasis * 0.80
								

			LocalAdjBasis		= LocalAdjBasis - LocalDeprBonus - InSalvageValue
			
			if (LocalProgram = "AM180"
			or LocalProgram = "AM280"
			or LocalProgram = "AM255")
				LocalDeprYTD	-= LocalDeprBonus
				LocalDeprLTD	-= LocalDeprBonus
		
			LocalDeprBonusAllow	= LocalDeprBonus
			LocalDeprBonusFull	= LocalDeprBonus
			return LocalAdjBasis

		CalculateSlbzero580 is a DerivedField
			type is like InternationalAmount
			restricted				
			if (AssetRel exists)
				LocalCompany	= AssetRel.Company
			else
				LocalCompany	= InCompany
			if (LocalInactYear entered)
				LocalBeginYrLife				= LocalLifeRemaining - LocalInactYear
				LocalBeginYrLife			   *= LocalDepreciationPeriodsPerYear
				LocalBeginYrLife			   += (LocalNumberOfDepreciationPeriodsClosed * 12)
				LocalBeginYrLife			   /= LocalDepreciationPeriodsPerYear
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife			= InLife - LocalInactYear
				
			else
				LocalBeginYrLife				= LocalLifeRemaining * LocalDepreciationPeriodsPerYear
				LocalBeginYrLife			   += (LocalNumberOfDepreciationPeriodsClosed * 12)
				LocalBeginYrLife			   /= LocalDepreciationPeriodsPerYear
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife			= InLife 
			if (LocalBeginYrLife >  InLife)
				LocalBeginYrLife 				= InLife
			if (LocalBeginYrLife not entered
			or LocalBeginYrLife <= 0)
				initialize LocalAnnualDepreciation
			else
				if (AssetRel.AssetProcess.Adjustment)
					LocalDeprLTD				= InLTDDepr
					LocalDeprYTD				= InYTDDepr
				if (LocalAssetBook.SpreadOverRemainingLife)
					LocalAnnualDepreciation 	= LocalAdjBasis	- LocalDeprLTD
					LocalAnnualDepreciation     = LocalAnnualDepreciation * 12
					LocalAnnualDepreciation	    = LocalAnnualDepreciation / LocalLifeRemaining
				else				
					LocalAnnualDepreciation 	= LocalAdjBasis - LocalDeprLTD + LocalDeprYTD 
					LocalAnnualDepreciation     = LocalAnnualDepreciation * 12
					LocalAnnualDepreciation	    = LocalAnnualDepreciation / LocalBeginYrLife
					
				if (InLife < 12)
					LocalAnnualDepreciation 	= LocalAdjBasis - LocalDeprLTD + LocalDeprYTD 
					LocalAnnualDepreciation     = LocalAnnualDepreciation * InLife
					LocalAnnualDepreciation     = LocalAnnualDepreciation / LocalBeginYrLife
			if (LocalSLCalculation = "M"
			or LocalSLCalculation = "O")
				LocalAnnualDepreciation 		= LocalAdjBasis	* 12
				LocalAnnualDepreciation			= LocalAnnualDepreciation / InLife

		CalculateSlbzero is a DerivedField
			type is like InternationalAmount
			restricted				
			if (AssetRel exists)
				LocalCompany	= AssetRel.Company
			else
				LocalCompany	= InCompany
			if (!LocalDeprSwitch)
				if (NumberOfPeriodCloseRuns not entered)
					NumberOfPeriodCloseRuns= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				if (LocalNumberOfDepreciationPeriodsClosed not entered)
					LocalNumberOfDepreciationPeriodsClosed = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
			if (InYearToDateInactiveMonths entered)
				LocalBeginYrLife				= LocalLifeRemaining - LocalInactYear
				LocalBeginYrLife				= LocalBeginYrLife * LocalNumberOfDeprPeriods
				LocalBeginYrLife				= LocalBeginYrLife + (NumberOfPeriodCloseRuns *12)
				LocalBeginYrLife				= LocalBeginYrLife / LocalNumberOfDeprPeriods
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife			= InLife - LocalInactYear
				
			else
				if (LocalLifeRemaining > 0)
					LocalBeginYrLife				= LocalLifeRemaining * LocalNumberOfDeprPeriods
				else
					LocalBeginYrLife				= LocalNumberOfDeprPeriods
				LocalBeginYrLife				= LocalBeginYrLife + (NumberOfPeriodCloseRuns *12)
				LocalBeginYrLife				= LocalBeginYrLife / LocalNumberOfDeprPeriods
				
				if (InLife < 12
				and	LocalFirstYear)
					LocalBeginYrLife			= InLife 
					
				if (LocalBeginYrLife >  InLife)
					LocalBeginYrLife 			= InLife
					
				if (LocalBeginYrLife entered)
					initialize LocalAnnualDepreciation
				else
					if (AssetRel.AssetProcess.Adjustment)
						LocalDeprLTD			= InLTDDepr
						LocalDeprYTD			= InYTDDepr

			LocalAnnualDepreciation 	= LocalAdjBasis		
			LocalAnnualDepreciation	= LocalAnnualDepreciation / InLife
			LocalAnnualDepreciation = LocalAnnualDepreciation * 12
			
			if (InLife < 12)
				LocalAnnualDepreciation 	= LocalAdjBasis		
				LocalAnnualDepreciation = LocalAnnualDepreciation / LocalBeginYrLife
				if (LocalLastYear
				and LocalDeprLTD = 0
				and LocalDeprYTD = 0)
					LocalMonthlyDepreciation	= LocalAdjBasis / InLife
					LocalDeprYTD				= LocalMonthlyDepreciation * NumberOfPeriodCloseRuns 
					LocalDeprLTD				= LocalMonthlyDepreciation * LocalProcessedMonths
					LocalDeprLTD				+= LocalDeprYTD

					LocalLifeRemaining	= LocalLife - LocalProcessedMonths
					LocalLifeRemaining	= LocalLifeRemaining - LocalNumberOfDepreciationPeriodsClosed
			if (LocalSLCalculation = "M"
			or LocalSLCalculation = "O")
				LocalAnnualDepreciation 	= LocalAdjBasis		
				LocalAnnualDepreciation	= LocalAnnualDepreciation / InLife	


			if (LocalDeprLTD = 0)
				initialize LocalMonthlyDepreciation
				LocalCDB 		= FirstYearMonths
				LocalCountYears = 1
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					while LocalNumberOfYearsPrior		!= 1
						if (LocalCountYears = 1)
							if (Convention.ActualDays)
								LocalCalendarStatus		= "H"
								if (HistoryYearBookCalendarsRel4 exist)
									CustomYearEndDate	= HistoryYearBookCalendarsRel4.YearEndDate
								else
									LocalNumberOfYearsPrior = CalcNumberOfYearsInService
								LocalNumberOfDaysFirstYear 	= CustomYearEndDate - InServiceDate
								LocalNumberOfDaysFirstYear	+= 1
								
								LocalTriggerNumberOfDays	= NumberOfDaysYear
								LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
								GWTLocalBeginYrDepr		= LocalFirstYearDepreciation
							
							if (Convention.HalfYear)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 2
							
							if (Convention.MidQuarter)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
								GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * NumberOfPeriodsFirstYear
							
							if (Convention.FullMonth
							or Convention.NextMonth
							or Convention.MidMonth
							or Convention.ModifiedHalfMonth)
								LocalMonthsInFirstYear	= FirstYearInServicePeriods
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation /12
								GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear
							
							if (Convention.FullYear)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation 

							if (Convention.ModifiedHalfYear)
								LocalCDBDate = AdjustInsrvDate
								if (LocalDeprStartDate > InServiceDate)
									GWTLocalBeginYrDepr		= 0
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation
							LocalDeprLTD				= GWTLocalBeginYrDepr
						else
							if (Convention.MidQuarter)
								NumberOfPeriodsFirstYear	= NumberOfPeriodsFirstYear + 12
							LocalDeprLTD				= LocalDeprLTD + LocalAnnualDepreciation
							if (Convention.ActualDays)
								LocalNumberOfMonthsActualDays += 12
						LocalCountYears					+= 1
						LocalNumberOfYearsPrior 		-= 1
					LocalDeprYTD					= "0"
					if (LocalNumberOfDepreciationPeriodsClosed entered)
						if (CompletelyDepreciated)
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis - LocalDeprLTD
							LocalDeprLTD	= LocalAdjBasis
							return LocalAnnualDepreciation
						if (Convention.ActualDays)
							LocalNumberOfDaysFirstYear 	= LastPeriodEnd - CurrentBookCalendarsRel.YearBeginDate
							LocalNumberOfDaysFirstYear	+= 1
							
							LocalTriggerNumberOfDays	= NumberOfDaysYear
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
							LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
							LocalDeprYTD					= LocalFirstYearDepreciation
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
							LocalLifeRemaining				= LocalLife - LocalNumberOfMonthsActualDays
						else
							LocalMonthlyDepreciation			= LocalAnnualDepreciation /12
							LocalDeprYTD						= LocalMonthlyDepreciation * LocalNumberOfDepreciationPeriodsClosed	
							if (Convention.HalfYear)
								LocalLifeRemaining				= LifeRemainingHalfYear
							else						
								if (Convention.FullYear)
									LocalLifeRemaining				= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining		= LifeRemainingModifiedHalfYear
									else
										LocalLifeRemaining					= LocalLife	- LocalProcessedMonths
						LocalDeprLTD						= LocalDeprLTD + LocalDeprYTD
				else
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					LocalMonthlyDepreciation		= LocalAdjBasis / LocalLife
					
					if (Convention.MidQuarter)
						LocalAnnualDepreciation			= LocalAnnualDepreciation / 12
						LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear
						LocalProcessedMonths			= MidQuarterFirstYearPeriodsClosed
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / MidQuarterFirstYearPeriods
						NumberOfPeriodsClosedFirstYear	= MidQuarterFirstYearPeriodsClosed

					if (Convention.MidMonth)
						LocalMonthlyDepreciation	= LocalAdjBasis / LocalLife

					if (Convention.HalfYear)
						LocalMonthsInFirstYear		= FirstYearInServicePeriods
						LocalAnnualDepreciation		= LocalAnnualDepreciation /2
						LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear

					if (Convention.ModifiedHalfYear)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							LocalMonthlyDepreciation	= 0
						else
							LocalMonthsInFirstYear		= FirstYearInServicePeriods
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear

					if (Convention.FullYear)
						LocalMonthsInFirstYear		= FirstYearInServicePeriods
						LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear	

					if (Convention.ActualDays)
						LocalNumberOfDaysFirstYear 	= CustomYearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear	+= 1
						
						LocalTriggerNumberOfDays	= NumberOfDaysYear
						LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
						
						LocalMonthlyDepreciation		= LocalFirstYearDepreciation
						NumberOfPeriodsClosedFirstYear	= ActualDaysPeriodsClosedCurrentYear
					if (InLife < NumberOfPeriodsClosedFirstYear)
						LocalDeprYTD						= LocalMonthlyDepreciation * InLife
					else
						LocalDeprYTD						= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear

					if (Convention.ModifiedHalfMonth)
						LocalLifeRemaining		= LocalLife - NumberOfPeriodsClosedFirstYear
						if ((LastPeriodEnd month = InServiceDate month
						and LastPeriodEnd year = InServiceDate year)
						and CurrentInServiceMonthEndDate)
							LocalDeprYTD = 0
					LocalDeprLTD						= LocalDeprYTD
			LocalDepreciationSet	= true

		CalculateSumYearDigits580 is a DerivedField
			type is Decimal size 26.10
			restricted				
			LocalLifeInYrs						= InLife /12
			
			LocalSumOfYrs						= LocalLifeInYrs 
			LocalSumOfYrs						*= (LocalLifeInYrs + 1)
			LocalSumOfYrs						/= 2
			LocalBeginYrLife				    = LocalLifeRemaining * LocalDepreciationPeriodsPerYear
			LocalBeginYrLife					+= (LocalNumberOfDepreciationPeriodsClosed * 12)
			LocalBeginYrLife					/= LocalDepreciationPeriodsPerYear
			if (LocalBeginYrLife > InLife)
				LocalBeginYrLife				= InLife
			LocalNumberYearsRemaining			= (LocalBeginYrLife / 12)
			LocalAnnualDepreciation 			= LocalNumberYearsRemaining * LocalAdjBasis
			LocalAnnualDepreciation			   /= LocalSumOfYrs
			return LocalAnnualDepreciation

		CalculateSumYearDigits is a DerivedField
			type is like InternationalAmount
			restricted
			if (!LocalDeprSwitch)
				if (LocalDepreciationPeriodsPerYear not entered)
					LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				if (LocalNumberOfDepreciationPeriodsClosed not entered)
					LocalNumberOfDepreciationPeriodsClosed = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
				if (InYearBeginDate not entered)
					InYearBeginDate = CurrentBookCalendarsRel.YearBeginDate	 					
			LocalLifeInYrs						= InLife /12
			LocalSumOfYrs						= ((LocalLifeInYrs * (LocalLifeInYrs +1)) / 2)
			if (SYDFirstTime)
				SYDFirstTime					= false
				LocalBeginYrLife				= InLife
			else
				LocalBeginYrLife					= InLife - CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				
			LocalNumberYearsRemaining		= (LocalBeginYrLife /12)
			LocalDigitsValueNumberYears		= LocalNumberYearsRemaining
			LocalAnnualDepreciation		= (LocalLifeInYrs * LocalAdjBasis)
			LocalAnnualDepreciation		/=	LocalSumOfYrs
			if (LocalDeprLTD = 0)
				LocalCountYears = 1
				LocalMonthsInFirstYear	= FirstYearInServicePeriods
				if (InServiceDate < InYearBeginDate)
					if (Convention.ModifiedHalfMonth
					and LocalDepreciationPeriodsPerYear > 12)
						LocalNumberOfYearsPrior			= CalcNumberOfYearsInServiceForHM
					else
						LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					LocalYearValue   = LocalLifeInYrs
					while LocalNumberOfYearsPrior		!= 1
						if (LocalCountYears = 1)
							if (Convention.ActualDays)
								LocalCalendarStatus		= "H"
								if (HistoryYearBookCalendarsRel4 exist)
									LocalNumberOfDaysYear		= HistoryYearBookCalendarsRel4.CalendarDays
									LocalNumberOfDaysFirstYear  = (HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate + 1)
									LocalTriggerNumberOfDays	= LocalNumberOfDaysFirstYear  								
									CustomYearEndDate			= HistoryYearBookCalendarsRel4.YearEndDate
								else
									LocalNumberOfYearsPrior 	= CalcNumberOfYearsInService
									LocalNumberOfDaysFirstYear	= (LocalYearEndDate - InServiceDate + 1)
									if (HistoryCalendarsForBookCompanyRel exists)
										LocalNumberOfDaysYear		= last HistoryCalendarsForBookCompanyRel.CalendarDays
									else
										LocalTriggerNumberOfDays	= NumberOfDaysYear

								LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalPortionOfYear  = LocalNumberOfMonthsActualDays
								LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays * 12
								GWTLocalBeginYrDepr		= LocalFirstYearDepreciation

							if (Convention.HalfYear)
								GWTLocalBeginYrDepr = LocalAnnualDepreciation /2
								LocalPortionOfYear  = 0.5

							if (Convention.FullMonth
							or Convention.NextMonth
							or Convention.ModifiedHalfMonth
							or Convention.MidMonth)
								LocalMonthsInFirstYear	= FirstYearInServicePeriods
								if (LocalDepreciationPeriodsPerYear > 12)
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalFirstYearCalcPeriods
									LocalPortionOfYear  = LocalFirstYearCalcPeriods / LocalDepreciationPeriodsPerYear
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
									GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear
									LocalPortionOfYear  = LocalMonthsInFirstYear / LocalDepreciationPeriodsPerYear
							
							if (Convention.MidQuarter)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation / 12
								GWTLocalBeginYrDepr		= GWTLocalBeginYrDepr * LocalMonthsInFirstYear
								LocalPortionOfYear  = LocalMonthsInFirstYear / 12

							if (Convention.FullYear)
								GWTLocalBeginYrDepr		= LocalAnnualDepreciation
								LocalPortionOfYear  = 1

							if (Convention.ModifiedHalfYear)
								LocalCDBDate = AdjustInsrvDate
								if (LocalDeprStartDate > InServiceDate)
									GWTLocalBeginYrDepr		= 0
									LocalPortionOfYear  = 0
								else
									GWTLocalBeginYrDepr		= LocalAnnualDepreciation
									LocalPortionOfYear  = 1

							LocalDeprLTD = GWTLocalBeginYrDepr
						else
							if (LocalCountYears = 2)
								LocalYearValue   = LocalYearValue - LocalPortionOfYear
							else
								LocalYearValue   = LocalYearValue - 1
							LocalAnnualDepreciation		 = (LocalYearValue * LocalAdjBasis)
							LocalAnnualDepreciation		/=	LocalSumOfYrs
							if (Convention.ActualDays)
								LocalNumberOfMonthsActualDays += 12
							if(LocalYearValue > 0)
								LocalDeprLTD  += LocalAnnualDepreciation
							else
								end while

						LocalNumberOfYearsPrior 		-= 1
						LocalCountYears					+= 1 

					LocalDeprYTD					= "0"
					if (LocalNumberOfDepreciationPeriodsClosed entered)
						if (CompletelyDepreciated)
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis - LocalDeprLTD
								if (LocalDeprYTD < 0)
									LocalDeprYTD = 0
							LocalDeprLTD		= LocalAdjBasis
							LocalLifeRemaining	= 0
							LocalDepreciationSet = true
							return
						if (LocalCountYears = 1
						or LocalCountYears = 2)
							LocalYearValue   = LocalYearValue - LocalPortionOfYear
						else
							LocalYearValue   = LocalYearValue - 1

						LocalAnnualDepreciation		= (LocalYearValue * LocalAdjBasis)
						LocalAnnualDepreciation		/=	LocalSumOfYrs
						
						if (Convention.ActualDays)
							LocalDeprEndDate = GetDepreciationEndDate
							if (LocalDeprEndDate < CurrentBookCalendarsRel.YearEndDate)
								LocalNumberOfDaysYear	= LocalDeprEndDate - InYearBeginDate
								LocalNumberOfDaysYear	+= 1
								LocalAnnualDepreciation	= LocalAdjBasis - LocalDeprLTD
							else
								LocalTriggerNumberOfDays	= NumberOfDaysYear
							if (LocalDeprEndDate < LastPeriodEnd)
								LocalNumberOfDaysYear	= LocalDeprEndDate - InYearBeginDate
								LocalNumberOfDaysYear	+= 1
							else
								LocalNumberOfDaysFirstYear 	= LastPeriodEnd - InYearBeginDate
								LocalNumberOfDaysFirstYear	+= 1
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
							LocalTempNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							if (LocalDeprEndDate < CurrentBookCalendarsRel.YearEndDate)
								LocalTempRemainingLife				= LocalLife - LocalNumberOfMonthsActualDays
								LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * LocalTempRemainingLife
							else
								LocalTempNumberOfMonthsActualDays	= LocalTempNumberOfMonthsActualDays * 12
							LocalYTDAmount					= LocalFirstYearDepreciation
							LocalNumberOfMonthsActualDays	= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
							LocalLifeRemaining				= LocalLife - LocalNumberOfMonthsActualDays
						else
							if(LocalYearValue < 1)
								LocalYTDAmount          = LocalAnnualDepreciation / LocalYearValue
								LocalYTDAmount 		   /= LocalDepreciationPeriodsPerYear
								LocalYTDAmount		   *= LocalNumberOfDepreciationPeriodsClosed
							else
								LocalYTDAmount 			= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
								LocalYTDAmount		   *= LocalNumberOfDepreciationPeriodsClosed

						LocalDeprYTD            =  LocalYTDAmount
						LocalDeprLTD			=  LocalDeprLTD + LocalDeprYTD
					else
						if (CompletelyDepreciated)
							if (LocalDeprLTD > LocalAdjBasis)
								LocalDeprLTD		= LocalAdjBasis

				else
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					LocalCurrentPeriodCount = LocalFirstYearCalcPeriods
					if (Convention.ActualDays)
						LocalNumberOfDaysFirstYear 		= CustomYearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear		+= 1
						LocalTriggerNumberOfDays		= NumberOfDaysYear
						LocalFirstYearDepreciation		= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalAnnualDepreciation
						LocalMonthlyDepreciation		= LocalFirstYearDepreciation
						NumberOfPeriodsClosedFirstYear	= ActualDaysPeriodsClosedCurrentYear
						LocalNumberOfDaysFirstYear 		= LastPeriodEnd - InServiceDate
						LocalNumberOfDaysFirstYear		+= 1						
						LocalTempNumberOfMonthsActualDays = LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
						LocalLifeRemaining			= LocalLife - (LocalTempNumberOfMonthsActualDays * 12)
					else
					if (Convention.HalfYear)
						LocalAnnualDepreciation 		= LocalAnnualDepreciation /2
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / LocalMonthsInFirstYear
					else
					if(Convention.FullYear)
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / LocalMonthsInFirstYear
					else
					if (Convention.ModifiedHalfYear)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							LocalMonthlyDepreciation	= 0
						else
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear
					else
					if (Convention.MidQuarter)
						if (LocalProgram = "Proj")
							LocalCDB						= FirstYearMonths
						LocalAnnualDepreciation			= LocalAnnualDepreciation / 12
						LocalAnnualDepreciation			= LocalAnnualDepreciation * NumberOfPeriodsFirstYear
						LocalMonthlyDepreciation		= LocalAnnualDepreciation / MidQuarterFirstYearPeriods
						NumberOfPeriodsClosedFirstYear	= MidQuarterFirstYearPeriodsClosed
					else
						LocalMonthlyDepreciation			= LocalAnnualDepreciation / LocalDepreciationPeriodsPerYear
					if (Convention.ActualDays)
						LocalDeprYTD				= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
					else
						if (LocalDepreciationPeriodsPerYear > 12)
							if (Convention.HalfYear
							or Convention.ModifiedHalfYear
							or Convention.FullYear)
								LocalDeprYTD			= LocalMonthlyDepreciation * LocalCurrentPeriodCount
							else
							if (Convention.MidQuarter)
								LocalDeprYTD			= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
							else
								LocalDeprYTD			= LocalMonthlyDepreciation * LocalFirstYearCalcPeriods
						else
							LocalDeprYTD			= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
					
					if (Convention.ModifiedHalfMonth)
						if ((LastPeriodEnd month = InServiceDate month
						and LastPeriodEnd year = InServiceDate year)
						and CurrentInServiceMonthEndDate)
							LocalDeprYTD = 0
					LocalDeprLTD			= LocalDeprYTD

				if (Convention.ModifiedHalfMonth)
					LocalCDBDate = AdjustInsrvDate
					if (LocalDeprStartDate > InServiceDate
					and !LocalDepreciationPeriodsPerYear > 12)
						LocalLifeRemaining		= LocalLife - (LocalProcessedMonths - 1)

				LocalDepreciationSet	= true
			return LocalAnnualDepreciation
		
		DigitsValue       is a DerivedField
			type is Numeric 12
 			restricted	
 			LocalDigitsValue = LocalDigitsValueNumberYears
 			round LocalDigitsValue down to nearest 1
 			return LocalDigitsValue

		NumberOfDaysYear	is a DerivedField
			type is Numeric 12
 			restricted	
 			LocalNumberOfDaysYear	= CurrentBookCalendarsRel.YearEndDate - CurrentBookCalendarsRel.YearBeginDate 
 			LocalNumberOfDaysYear	= LocalNumberOfDaysYear + 1
 			return LocalNumberOfDaysYear
 			
		DecimalValue      is a DerivedField
        	type is Decimal 18.6
			restricted	
            LocalDecimalValueNumberYears = LocalNumberYearsRemaining - DigitsValue
            return LocalDecimalValueNumberYears
				
		CalculateAcctLevel is a DerivedField
			type is like InternationalAmount
			restricted				
			initialize	LocalAnnualDepreciation
			initialize	LocalBeginYrLife
			
		ComputeStatment is a DerivedField
			type is like InternationalAmount
			if (MethodComputeRel exists)
				return LocalProcessValue
						
		PercentTable580 is a DerivedField
			type is like InternationalAmount
			if (LocalMethodTableYear > 50
			or LocalMethod.MethodPercents.MethodPercent[LocalMethodTableYear] = 0)
				I1 = 50
				InTableYear = I1
				while (I1 not = 1
				and LocalMethod.MethodPercents.MethodPercent[I1] = 0)
					InTableYear = I1
					I1 -= 1 
			else
				InTableYear = LocalMethodTableYear		
			LocalPercent			= LocalMethod.MethodPercents.MethodPercent[InTableYear]
			LocalAnnualDepreciation = (LocalAdjBasis * LocalPercent)
			LocalAnnualDepreciation /= 100
			return LocalAnnualDepreciation

		PercentTable is a DerivedField
			type is like InternationalAmount
			initialize LocalAnnualDepreciation
			initialize LocalDeprLTD
			initialize LocalDeprYTD
			LocalNumberOfYearsPrior 	= CalcNumberOfYearsInService
			LocalYearPlacedInService	= LocalNumberOfYearsPrior
			if (LocalRecordType	= "P")
				if (LocalComputeOption not = "Y")
					LocalCDB 					= FindRecoveryYear
				LocalPercent			= LocalMethod.MethodPercents.MethodPercent[LocalMethodYear]
				LocalAnnualDepreciation = (LocalAdjBasis * LocalPercent)
				LocalAnnualDepreciation /= 100
				if (!InServiceDate < InYearBeginDate)
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					LocalMonthsInFirstYear		= FirstYearInServicePeriods
					LocalMonthlyDepreciation	= LocalAnnualDepreciation / LocalMonthsInFirstYear
					if (Convention.HalfYear)
						LocalLifeRemaining		= LifeRemainingHalfYear
					else
						if (Convention.FullYear)
							LocalLifeRemaining	= LifeRemainingFullYear
						else
							LocalLifeRemaining	= LocalLife	- NumberOfPeriodsClosedFirstYear
					LocalDeprYTD = LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
					LocalDeprLTD = LocalDeprYTD
				else
					LocalPercentYear = LocalYearPlacedInService
					LocalPercentYear = 1
					while LocalPercentYear != LocalYearPlacedInService
						LocalPercent			= LocalMethod.MethodPercents.MethodPercent[LocalPercentYear]
						LocalAnnualDepreciation = (LocalAdjBasis * LocalPercent)
						LocalAnnualDepreciation /= 100
						LocalDeprLTD			= LocalDeprLTD + LocalAnnualDepreciation
						LocalPercentYear 		+= 1
					LocalPercent				= LocalMethod.MethodPercents.MethodPercent[LocalPercentYear]
					LocalAnnualDepreciation 	= (LocalAdjBasis * LocalPercent)
					LocalAnnualDepreciation 	/= 100
					LocalDeprEndDate			= GetDepreciationEndDate
					if (LocalDeprEndDate > CurrentBookCalendarsRel.YearEndDate)
						LocalDeprYTD 				= (LocalAnnualDepreciation / (CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * LocalNumberOfDepreciationPeriodsClosedSave)
						LocalDeprLTD 				= LocalDeprLTD + LocalDeprYTD
					else
						if (!LocalDeprEndDate > LastPeriodEnd)
							LocalDeprYTD	= InBasis - LocalDeprLTD
							LocalDeprLTD	= InBasis
						else
							LocalNumberOfPeriodsLastYear	= NumberOfPeriodsLastYear
								if (Convention.FullYear)
									LocalDeprYTD	= 0
									LocalDeprLTD	= InBasis
								else
									LocalDeprYTD	= LocalAnnualDepreciation / LocalNumberOfPeriodsLastYear
									LocalDeprYTD	= LocalDeprYTD * CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
									LocalDeprLTD 	= LocalDeprLTD + LocalDeprYTD
					if (Convention.MidQuarter)
						LocalLifeRemaining	= LifeRemainingMidQuarter															
			LocalDepreciationSet = true
			return LocalAnnualDepreciation
				
				
		FindRecoveryYear is a DerivedField
			type is Decimal size 2
			restricted				
			if (MethodPercentTableRel.MethodPercents.MethodPercent[LocalMethodYear] > 50
			or MethodPercentTableRel.MethodPercents.MethodPercent[LocalMethodYear] not entered)
				initialize I1
				I1 = 50
				while (I1 > 0)
					if (MethodPercentTableRel.MethodPercents.MethodPercent[I1] entered)
						LocalMethodYear = I1
						I1 = 0
					else
						I1 -=1	
			else
				LocalMethodYear= MethodPercentTableRel.MethodPercents.MethodPercent[LocalMethodYear]
			return LocalMethodYear
								
			
		UnitsOfProduction is a DerivedField
			type is like InternationalAmount
			LocalUOPPdSW						= false
			if (MethodUnitsOfProductionYearRel exists)				
				I1 = 1
				while (I1 <= 55)
					if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered
					or MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1] entered)
						LocalUOPPdSW	= true
						I1 = 56
					else
						I1 += 1	
			else
				initialize LocalAnnualDepreciation
				
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AE")
				LocalMethod	= MethodComputeRel.Method
				initialize LocalAmmTotalUnits
				for each MethodAEUnitsOfProductionYearRel
					if (each.ActualYearlyUnitsOfProduction entered)
						if (LocalCatchUp = true
						and each.MethodUnitsOfProductionYear != LocalMethodYear)
							LocalAmmTotalUnits	 	+= 	each.EstimatedYearlyUnitsOfProduction
						else
							LocalAmmTotalUnits		+= each.ActualYearlyUnitsOfProduction
					else
						LocalAmmTotalUnits			+= each.EstimatedYearlyUnitsOfProduction
			else
				LocalMethod	= AssetBookRel.Method
				LocalAmmTotalUnits					= MethodRel.TotalEstimatedUnits
				
			if (MethodUnitsOfProductionYearRel exists)
				if ((MethodUnitsOfProductionYearRel.ActualYearlyUnitsOfProduction entered
				and MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AE")
				or (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AO"
				and LocalUOPPdSW 												= false))
					LocalAnnualDepreciation	 = LocalAdjBasis * MethodUnitsOfProductionYearRel.ActualYearlyUnitsOfProduction
					LocalAnnualDepreciation /= LocalAmmTotalUnits
					
				else
					LocalAnnualDepreciation	 = LocalAdjBasis * MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction
					LocalAnnualDepreciation /= LocalAmmTotalUnits
					
			return LocalAnnualDepreciation

		CalculateAnnualUOP is a DerivedField
			type is like InternationalAmount
			restricted
			if (LocalDeprLTD = 0)
				initialize LocalMonthlyDepreciation
				LocalMonthsInFirstYear	= FirstYearInServicePeriods
				LocalMethodYear			= 0
				LocalCDB 				= FirstYearMonths
				LocalCountYears 		= 1
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					while LocalNumberOfYearsPrior		!= 1
						LocalMethodUnitsOfProductionYear = LocalCountYears
						LocalAnnualDepreciation 		 = UnitsOfProduction
						if (LocalCountYears = 1)
							if (Convention.ActualDays)
								LocalCalendarStatus		= "H"
								if (HistoryYearBookCalendarsRel4 exist)
									LocalNumberOfDaysYear		 = HistoryYearBookCalendarsRel4.CalendarDays
									LocalNumberOfDaysFirstYear   = (HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate + 1)
								else
									LocalNumberOfDaysFirstYear	 = (LocalYearEndDate - InServiceDate + 1)
									if (HistoryCalendarsForBookCompanyRel exists)
										LocalNumberOfDaysYear	 = last HistoryCalendarsForBookCompanyRel.CalendarDays
									else
										LocalTriggerNumberOfDays = NumberOfDaysYear 
								LocalNumberOfMonthsActualDays	 = LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
								LocalNumberOfMonthsActualDays	 = LocalNumberOfMonthsActualDays * 12
							LocalDeprLTD				= LocalAnnualDepreciation
						else
							LocalDeprLTD				= LocalDeprLTD + LocalAnnualDepreciation
							if (Convention.ActualDays)
								LocalNumberOfMonthsActualDays += 12
						LocalCountYears					+= 1
						LocalNumberOfYearsPrior 		-= 1
					
					LocalDeprYTD					= "0"
					if (CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed entered)
						if (CompletelyDepreciated)
							if (!LocalDeprEndDate < InYearBeginDate)
								LocalDeprYTD	= LocalAdjBasis - LocalDeprLTD
								if (LocalDeprYTD < 0)
									LocalDeprYTD = 0
							LocalDeprLTD		= LocalAdjBasis
							LocalLifeRemaining	= 0
							LocalDepreciationSet = true
							return LocalAnnualDepreciation
						if (Convention.ActualDays)
							LocalNumberOfDaysFirstYear			= LastPeriodEnd - CurrentBookCalendarsRel.YearBeginDate
							LocalNumberOfDaysFirstYear			+= 1
							LocalTriggerNumberOfDays			= NumberOfDaysYear
							LocalTempNumberOfMonthsActualDays	= LocalNumberOfDaysFirstYear / LocalNumberOfDaysYear
							LocalTempNumberOfMonthsActualDays 	= LocalTempNumberOfMonthsActualDays * 12
							LocalNumberOfMonthsActualDays		= LocalNumberOfMonthsActualDays + LocalTempNumberOfMonthsActualDays
							LocalLifeRemaining					= LocalLife - LocalNumberOfMonthsActualDays
						else
							if (Convention.HalfYear)
								LocalLifeRemaining			= LifeRemainingHalfYear
							else						
								if (Convention.FullYear)
									LocalLifeRemaining		= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining	= LifeRemainingModifiedHalfYear
									else
										LocalLifeRemaining	= LocalLife	- LocalProcessedMonths
						if (LocalLifeRemaining <= CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
							LocalAnnualDepreciation		= LocalAdjBasis - LocalDeprLTD
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / (LocalLifeRemaining + CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed)
						else
						if (LocalCountYears entered)
							LocalMethodUnitsOfProductionYear = LocalCountYears
							LocalAnnualDepreciation			 = UnitsOfProduction
							LocalMonthlyDepreciation		 = LocalAnnualDepreciation /CurrentBookCalendarsRel.DepreciationPeriodsPerYear
						LocalDeprYTD			= LocalMonthlyDepreciation * CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed	
						LocalDeprLTD			= LocalDeprLTD + LocalDeprYTD
				else
					LocalMethodUnitsOfProductionYear = 1
					LocalAnnualDepreciation = UnitsOfProduction
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					if (Convention.ActualDays)
						LocalDeprYTD				= LocalAnnualDepreciation * ActualDaysPeriodsClosedCurrentYear
					else
						if (Convention.HalfYear)
							LocalAnnualDepreciation		= LocalAnnualDepreciation /2
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / FirstYearInServicePeriods
						else
							LocalMonthlyDepreciation	= LocalAnnualDepreciation / FirstYearInServicePeriods
					if (!Convention.ActualDays)
						if (InLife < NumberOfPeriodsClosedFirstYear)
							LocalDeprYTD	= LocalMonthlyDepreciation * InLife
						else
							LocalDeprYTD	= LocalMonthlyDepreciation * NumberOfPeriodsClosedFirstYear
					if (Convention.ModifiedHalfMonth)
						LocalLifeRemaining	= LocalLife - NumberOfPeriodsClosedFirstYear					
					if (Convention.ModifiedHalfMonth)
						if ((LastPeriodEnd month = InServiceDate month
						and LastPeriodEnd year = InServiceDate year)
						and CurrentInServiceMonthEndDate)
							LocalDeprYTD = 0
					LocalDeprLTD						= LocalDeprYTD
					
			LocalDepreciationSet	= true
			return LocalAnnualDepreciation

		ComputeBookDepreciation is a DerivedField	
			type is like InternationalAmount
			restricted
			initialize LocalDeprLTD
			LocalMethodYear	= 1		
			LocalCatchUp	= true
			LocalUOPPdSW	= false
			LocalAsset		= InAsset
			SYDFirstTime	= true
			if (AssetRel exists)
				LocalCompany	= AssetRel.Company
			else
				LocalCompany	= InCompany
			if (LocalAsset entered
			and InBook entered)
				InMethod 					= AssetBookRel.Method
				InBusinessPercent 			= AssetBookRel.BusinessPercent
				InYTDDepr					= AssetBookRel.YearToDateDepreciation
				InLTDDepr					= AssetBookRel.LifeToDateDepreciation
				if (!FromProjection)
					InLTDDeprAllow			= AssetBookRel.LifeToDateDepreciationAllowed
					InYTDDeprAllow			= AssetBookRel.YearToDateDepreciationOverride
				InLife						= AssetBookRel.Life
				InTableYear					= AssetBookRel.YearPlacedInService
				InSalvageValue				= AssetBookRel.SalvageValue
				InTaxCreditTable			= AssetBookRel.AssetTaxCreditTable
				InFirstYearExpenseAmount	= AssetBookRel.FirstYearExpenseAmount
				InFirstLastFlag				= AssetBookRel.FirstAndLastYear
				InYearToDateInactiveMonths	= AssetBookRel.YearToDateInactiveMonths
				InServiceDate				= AssetBookRel.InServiceDate
				InDepreciationStartDate		= AssetBookRel.DepreciationStartDate
				LocalLife	= InLife
				if(!LocalInServiceDate entered)
					LocalInServiceDate = InServiceDate
				LocalDeprEndDate			= GetDepreciationEndDate
				
				if (Convention.HalfYear
				or Convention.FullMonth)
					LocalStartDate		= InServiceDate
					LocalStartDateSave	= InServiceDate
				else
					if ((Convention.ModifiedHalfMonth   
					or Convention.ModifiedHalfYear
					or Convention.MidMonth)
					and InServiceDate > InDepreciationStartDate)
						LocalStartDate				= InServiceDate
						LocalStartDateSave			= InServiceDate
					else
						if (Convention.MidQuarter
						and InServiceDate < InDepreciationStartDate)
							LocalStartDate			= InServiceDate
							LocalStartDateSave		= InServiceDate
						else
							if (Convention.FullYear)
								LocalStartDate		= InServiceDate
								LocalStartDateSave	= InServiceDate
							else
								LocalStartDate		= InDepreciationStartDate
								LocalStartDateSave	= InDepreciationStartDate
								
			initialize	LocalTempMethod
			
			if (InTaxCreditTable not entered)
				LocalTcTable	= InTaxCreditTable
				if (AssetTaxCreditTableRel exists)
					if (AssetTaxCreditTableRel.BasisReductionPercentage entered)
						LocalBasisReductionPercentage		= (InBasis * (AssetTaxCreditTableRel.BasisReductionPercentage / 100))
					else
						initialize LocalBasisReductionPercentage
				else
					initialize LocalBasisReductionPercentage					
			
			if (CurrentBookCalendarsRel exists)
				I6	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns + 1
				LocalEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
			else
				initialize LocalEndDate
			
			LocalMethod	= AssetBookRel.Method
			if (MethodRel exists)
				if (!MethodRel.MethodCategoryType.System)
					LocalOptMethod								= MethodRel.DepreciationOptimizingMethod
					LocalRecordType								= MethodRel.RecordType
					if (MethodRel.RecordType.UnitsOfProduction)
						LocalUOPPdSW							= false
						LocalMethodUnitsOfProductionYear		= InTableYear
						if (!MethodUnitsOfProductionYearRel exists)
							initialize LocalAnnualDepreciation
						else
							I1 = 1
							while (I1 < 55)
								if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered
								or MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1] entered)
									LocalUOPPdSW	= true
									I1 = 56
								else
									I1 += 1	
			if (((LocalStartDate	> LocalEndDate
			and !Convention.MidQuarter)
			or (InServiceDate 		> LocalEndDate
			and Convention.MidQuarter))
			and (!MethodUnitsOfProductionYearRel exist))
				LocalFirstLastFl 	= "F"
				LocalDone 			= true 
				LocalLifeRemaining	= LocalLife
			if (!LocalDone)
				LocalFirstLastFl 	= "F"
				initialize LocalNumberOfDepreciationPeriodsClosed	  
				LocalNumberOfDepreciationPeriodsClosedSave	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				LocalPeriodEndDateSave		= LocalEndDate
				if (Convention.ModifiedHalfYear
				and InDepreciationStartDate	= LocalStartDate)
					if (LocalLife 			<= 12)
						LocalFirstLastFl	= "L"
					else
						LocalFirstLastFl	= "M"
				if (LocalProgram 		!= "AM580")     
					InServiceDate 		= AssetBookRel.InServiceDate
				if (AssetBookRel.InServiceDate 	> LocalPrevYearEndDate
				and LocalNumberOfDepreciationPeriodsClosedSave not entered)
					LocalCDB			= ComputeBookDepreciationContinue
				else
					LocalHRecord		= "N"	
					LocalEndDate		= DerivedBookCalendarEndDate
						if (AssetBookRel exists)
							InBook				= AssetBookRel.Book

						if (AssetRel exists)
							LocalCompany			= AssetRel.Company
						else
							LocalCompany			= InCompany
					if (HistoryCalendarsForBookCompanyRel exists
					or  IsCustomFormula)
						LocalHRecord				= "H"     
					else 
						if (ValidBookCalendarExists
						and (AssetBookRel.Convention.FullMonth
						or AssetBookRel.Convention.ModifiedHalfMonth
						or AssetBookRel.Convention.MidMonth
						or AssetBookRel.Convention.NextMonth))
							LocalHRecord = "V"
							LocalEndDate = first ValidBookCalendarRel.YearEndDate
				if (LocalHRecord		= "N")
					LocalCDB			= 	PreviousYears
				if (LocalHRecord		= "H")
					LocalCDB			= 	PreviousYears
					LocalCDB			= 	PreviousYearsH
				else
					if (LocalHRecord	= "V")
						LocalCDB		= 	PreviousYearsH
				LocalCatchUp			= false
				LocalCDB			= ComputeBookDepreciationContinue
			if (Convention.MidQuarter)
				LocalLifeRemaining		= LifeRemainingMidQuarter
		DerivedBookCalendarEndDate is a DerivedField
			type is Date	
			restricted	
			if (LocalInServiceDate entered)
				LocalDepreciationPeriodsPerYear		= first ValidBookCalendarRel.DepreciationPeriodsPerYear
				return first ValidBookCalendarRel.YearEndDate
		
		DerivedInServiceDate is a DerivedField
			type is Date
			restricted
			InBook					= InBook
			LocalCompany			= InAsset.Company
			if (InServiceDate not entered)
				InServiceDate		= AssetRel.LastAssetItemPurchaseDate
				LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
			else
				LocalInServiceDate	= InServiceDate
			return LocalInServiceDate	
			
								
		ComputeBookDepreciationContinue is a DerivedField	
			type is like InternationalAmount
			restricted
			if (IsCustomFormula)
				if (Convention.HalfYear)
					LocalLifeRemaining				= LifeRemainingHalfYear
				else
					if (Convention.FullYear)
						LocalLifeRemaining			= LifeRemainingFullYear
					else
						if (Convention.MidQuarter)
							LocalLifeRemaining	= LifeRemainingMidQuarter
						else
							if (Convention.ModifiedHalfYear)
								LocalLifeRemaining	= CustomLifeRemaining
								return
							else
								LocalLifeRemaining	= CustomLifeRemaining
				if (LocalLifeRemaining < 0)
					LocalLifeRemaining = 0
				return
			
			if (Convention.ActualDaysFirstMonth)
				if (LocalLifeRemainingAcutalDaysFirstMonth entered)
					LocalLifeRemaining					= LocalLifeRemainingAcutalDaysFirstMonth
					return				
			if (InServiceDate 	not > LocalPrevYearEndDate 
			and LocalFirstYear
			and !InMethod			= "100%Bonus")
				if (LocalMethodTableYear not > 1)
					LocalMethodTableYear		+= 1
					if (LocalLife <= 12)
						LocalFirstLastFl		= "L"
					else
						LocalFirstLastFl		= "M"
				else
					if (LocalLife <= 12)
						LocalFirstLastFl		= "L"
					else
						LocalFirstLastFl		= "M"
							
			if (InServiceDate 	not > LocalPrevYearEndDate  
			and LocalFirstYear
			and InMethod			= "100%Bonus"
			and (!Convention.ModifiedHalfMonth
			and  !Convention.NextMonth))
				if (!LocalMethodTableYear > 1)
					LocalMethodTableYear		+= 1
					if (LocalLife <= 12)
						LocalFirstLastFl		= "L"
					else
						LocalFirstLastFl		= "M"
				else
					if (LocalLife <= 12)
						LocalFirstLastFl		= "L"
					else
						LocalFirstLastFl		= "M"
								
			if (!InServiceDate 	> LocalPrevYearEndDate  
			and LocalFirstYear
			and InMethod				= "100%Bonus"
			and (Convention.ModifiedHalfMonth
			or  Convention.NextMonth))
				if (LocalMethodTableYear > 1)
					if (LocalLife <= 12)
						LocalFirstLastFl		= "L"
					else
						LocalFirstLastFl		= "M"
							
			if (!InServiceDate 	> LocalPrevYearEndDate
			and LocalFirstYear
			and InMethod				= "100%Bonus"
			and LocalMethodTableYear			= 1)
				if (Convention.ModifiedHalfMonth)
					if (!InServiceDate 												> LocalPrevYearEndDate
					and LocalEndDate												> LocalPeriodEndDateSave
					and CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed	= 0)
						if (InServiceDate day							> 15)
							LocalFirstLastFl		= "M"
						else
							LocalFirstLastFl		= "F"
							
			if (!InServiceDate 	> LocalPrevYearEndDate
			and LocalFirstYear
			and InMethod				= "100%Bonus"
			and LocalMethodTableYear			= 1)
				if (Convention.NextMonth)
					if (!InServiceDate 	> LocalPeriodEndDateSave
					and LocalEndDate					> LocalPeriodEndDateSave)
						if (CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed	= 0)
							LocalFirstLastFl		= "F"
						else
							LocalFirstLastFl		= "M"
			if (LocalFirstYear)   
				if (LocalUOPPdSW)
					LocalCDB						= ComputeAnnualDepreciation
					LocalADP						= AdjustDeprPeriods
					LocalPUD						= PeriodUOPDepreciation
					if (LocalStartDate < LocalPeriodEndDateSave)
						LocalLifeCP					= (LocalCurrPd - LocalNumberOfAdjDepreciationPeriodsClosed)
						
					if (LocalLife entered)
						LocalLifeRemaining			-= LocalLifeCP
					LocalDeprLTD					= LocalDeprYTD
				else
					initialize LocalNumberOfDepreciationPeriodsClosed   
					I1 = 1
					while (I1 != CurrentBookCalendarsRel.NumberOfPeriodCloseRuns +1)
						LocalCDB						= XFirstYear	
						LocalEndDate						= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1]
						LocalNumberOfDepreciationPeriodsPd	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I1] 
						if ((!AssetBookRel.Convention.FullMonth
						and !AssetBookRel.Convention.ModifiedHalfMonth
						and !AssetBookRel.Convention.MidQuarter
						and !LocalStartDate 			> LocalEndDate)
						or  (!AssetBookRel.Convention.FullMonth
						and !AssetBookRel.Convention.MidQuarter
						and !AssetBookRel.InServiceDate > LocalEndDate
						and !AssetBookRel.Convention.ModifiedHalfMonth))
							LocalCDB					= CalcDepreciation
							LocalDeprYTD				+= LocalDeprCP
							LocalDeprLTD				+= LocalDeprCP
							LocalDeprYTDAllow			+= LocalDeprCPAllow
							LocalDeprLTDAllow			+= LocalDeprCPAllow
							LocalFirstYearMonth			+= LocalNumberOfDepreciationPeriodsPd
							if (LocalLife entered)
								LocalLifeRemaining		-= LocalLifeCP
						I1 += 1
					if (Convention.ModifiedHalfMonth)
						if (!CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
							LocalLifeRemaining		= LocalLife - LocalProcessedMonths
					LocalNumberOfDepreciationPeriodsClosed += LocalNumberOfDepreciationPeriodsPd
					
					if (InMethod = "200DB30%"
					or InMethod = "150DB30%"
					or InMethod = "SL30%"
					or InMethod = "100%BONUS%"
					or InMethod = "200DB40%"
					or InMethod = "150DB40%"
					or InMethod = "SL40%"
					or InMethod = "200DB50%"
					or InMethod = "150DB50%"
					or InMethod = "SL50%"
					or InMethod = "SL75%"
					or InMethod	= "200DB75%"
					or InMethod	= "150DB75%"
					or InMethod = "SL20%"
					or InMethod	= "200DB20%"
					or InMethod	= "150DB20%"
					or InMethod = "SL60%"
					or InMethod	= "200DB60%"
					or InMethod	= "150DB60%"
					or InMethod = "SL80%"
					or InMethod	= "200DB80%"
					or InMethod	= "150DB80%")
						if (!GWTAddedBonusDepr)
							LocalDeprLTD		+= LocalDeprBonus
							LocalDeprLTDAllow	+= LocalDeprBonusAllow
							LocalDeprYTD		+= LocalDeprBonus
							LocalDeprYTDAllow	+= LocalDeprBonusAllow
							GWTAddedBonusDepr	= true
						
						if (InPersonalUseCode entered    
						and PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit < LocalDeprLTD
						and PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit < LocalDeprYTD)
							LocalDeprLTD		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit
							LocalDeprLTDAllow	= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit
							LocalDeprYTD		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit
							LocalDeprYTDAllow	= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[1].DepreciationLimit
							
						if (InMethod = "100%Bonus"
						and InPersonalUseCode not entered)
							initialize LocalLifeRemaining    
					if (Convention.ActualDays)
						LocalLifeRemaining					= LocalLife - LocalProcessedMonthsActualDays
				if (LocalDeprYTD not entered
				and LocalDeprLTD entered
				and InServiceDate 	> LocalPrevYearEndDate)
					LocalDeprYTD	= LocalDeprLTD
			else
				if (LocalLastYear)
					if (InPersonalUseCode entered)
						LocalPUDeprLTD		= LocalDeprLTD	
						LocalPUDeprLTDAllow	= LocalDeprLTDAllow
						initialize LocalNumberOfDepreciationPeriodsClosed    
						I1 = 1
						while (!I1 > CurrentBookCalendarsRel.NumberOfPeriodCloseRuns)
							LocalCDB							= XLastYear
							I1 += 1
					if (LocalDeprBonus > 0
					and !GWTAddedBonusDepr)
						LocalDeprLTD		+= LocalDeprBonus
						GWTAddedBonusDepr	= true
					if (InLife < 12)
						LocalProcessedMonths	= FirstYearMonths
						LocalLifeRemaining		= LocalLife - LocalProcessedMonths
				else
					if (!LocalFirstLastFl 		= "C")
						LocalCDB									= ComputeAnnualDepreciation
						if (!LocalDepreciationSet)
							LocalNumberOfDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosedSave
							LocalDeprYTD							= LocalAnnualDepreciation * LocalNumberOfDepreciationPeriodsClosed
							LocalDeprYTD							/= LocalNumberOfDeprPeriods
							LocalDeprYTDAllow						= LocalPUAnnualDepreciation * LocalNumberOfDepreciationPeriodsClosed
							LocalDeprYTDAllow						/= LocalNumberOfDeprPeriods
							if (LocalUOPPdSW)
								LocalCDB							= PeriodUOPDepreciation
								LocalDeprLTD						= LocalPUDeprLTD
								LocalDeprLTDAllow					= LocalPUDeprLTDAllow
							LocalDeprLTD							+= LocalDeprYTD
							LocalDeprLTDAllow						+= LocalDeprYTDAllow	
						if (LocalLife entered)
							if (Convention.HalfYear)
								LocalLifeRemaining				= LifeRemainingHalfYear
							else
								if (Convention.FullYear)
									LocalLifeRemaining				= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining		= LifeRemainingModifiedHalfYear
									else
										if (Convention.MidQuarter)
											LocalLifeRemaining	= LifeRemainingMidQuarter
										else
											if (!(Convention.ActualDays
											and LocalLifeRemaining entered))
												if 	(CurrentBookCalendarsRel exists
												and  CurrentBookCalendarsRel.NumberOfPeriodCloseRuns = 0
												and !HistoryCalendarsShortYearRel exists)
													LocalPeriodsClosed			= NumberOfPeriodsClosed
													LocalLifeRemaining			= LocalLife - LocalPeriodsClosed
													if (LocalLifeRemaining < 0)
														LocalLifeRemaining = 0
												else
													if (Convention.ModifiedHalfMonth)
														LocalCDBDate = AdjustInsrvDate
														if (LocalDeprStartDate > InServiceDate)
															if (!CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
																if(config.ApplyAssetShortYearUpdate = true
																and IsBookHasShortYear)
																	LocalLifeRemaining		= LocalLife - LocalProcessedMonths
																else
																	LocalProcessedMonths 	= LocalProcessedMonths -1
																	LocalLifeRemaining		= LocalLife - LocalProcessedMonths
													else												
														if (!Convention.ActualDays)
															if (Convention.ActualDaysFirstMonth
															and LocalLifeRemainingAcutalDaysFirstMonth entered)
																LocalLifeRemaining				= LocalLifeRemainingAcutalDaysFirstMonth
															else
																LocalLifeRemaining				= LocalLife - LocalProcessedMonths
																if (Convention.ActualDaysFirstMonth)
																	if (LocalLife - LocalProcessedMonths < 0)
																		LocalLifeRemaining = 0
					else
						LocalCDB								= ComputeAnnualDepreciation
						LocalNumberOfDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosedSave
						if (LocalProcessedMonths > InLife)
							if (!InMethod	= "SLBZERO")
								LocalProcessedMonths = InLife
						LocalMonthlyDepreciation			= LocalAnnualDepreciation / LocalNumberOfDeprPeriods
						if (CompletelyDepreciated
						and !InPersonalUseCode entered
						and !InMethod	= "SLBZERO")
							LocalDeprLTD = LocalAdjBasis + LocalDeprBonus
						if (LocalDeprBonus > 0
						and !GWTAddedBonusDepr)
							LocalDeprLTD		+= LocalDeprBonus
							GWTAddedBonusDepr	= true
						if (LocalLife entered)
							if (Convention.ActualDays)
								if (!LocalLifeRemaining entered)
									LocalLifeRemaining							= LocalLife - LocalProcessedMonthsActualDays
							else
								if (Convention.HalfYear)
									LocalLifeRemaining				= LifeRemainingHalfYear
								else
									if (Convention.FullYear)
										LocalLifeRemaining				= LifeRemainingFullYear
									else
										if (Convention.ModifiedHalfYear)
											LocalLifeRemaining		= LifeRemainingModifiedHalfYear
										else
											if (Convention.MidQuarter)
												LocalLifeRemaining	= LifeRemainingMidQuarter
											else
												if (CurrentBookCalendarsRel exists
												and CurrentBookCalendarsRel.NumberOfPeriodCloseRuns = 0)
													LocalPeriodsClosed			= NumberOfPeriodsClosed
													LocalLifeRemaining			= LocalLife - LocalPeriodsClosed
													if (LocalLifeRemaining < 0)
														LocalLifeRemaining = 0												
												else
													if (Convention.ActualDaysFirstMonth
													and LocalLifeRemainingAcutalDaysFirstMonth entered)
														LocalLifeRemaining				= LocalLifeRemainingAcutalDaysFirstMonth
													else
														LocalLifeRemaining			= LocalLife - LocalProcessedMonths
														if (Convention.ActualDaysFirstMonth)
															if (LocalLife - LocalProcessedMonths < 0)
																LocalLifeRemaining = 0
					if (InBusinessPercent = 100
					and InPersonalUseCode not entered)
						LocalLifeRemainingAmt					= InBasis - InSalvageValue - InFirstYearExpenseAmount - LocalDeprLTD
					else
						LocalLifeRemainingAmt					= InBasis - InSalvageValue - InFirstYearExpenseAmount - LocalDeprLTDAllow
					if (LocalLifeRemaining not entered
					and LocalLife entered)
						LocalFirstLastFl						= "C"
					if ((LocalFirstLastFl						= "M"
					or  LocalFirstLastFl						= "L"
					or 	LocalFirstLastFl						= "C")
					and InMethod								= "100%Bonus"
					and !IsInCurrentYearClosedPeriod
					and InPersonalUseCode not entered)
						LocalDeprLTD							= AssetBookRel.Basis
						if (LocalFirstLastFl					!= "C")
							initialize LocalLifeRemaining
						LocalFirstLastFl						= "C"
						initialize LocalDeprYTD
						initialize LocalDeprCP
						initialize LocalDeprLTDAllow
						initialize LocalDeprCPAllow

						
					if (LocalFirstLastFl						= "P"
					and InMethod								= "100%Bonus"
					and InPersonalUseCode entered
					and LocalLifeRemaining entered)
						LocalFirstLastFl						= "L"
						
					LocalPriorProcessSW							= false
		
					if (LocalFirstYear
					and InPersonalUseCode entered			
					and InMethod						= "100%Bonus"
					and LocalDeprBonus not entered)
						initialize LocalDeprCP
			if (!InMethod.RecordType.Percent)
				LocalCDB				= CalcDepreciation				
			
		XFirstYear is a DerivedField  
			type is like InternationalAmount
			restricted
			LocalEndDate						= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1]
			LocalNumberOfDepreciationPeriodsPd	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I1] 
			if ((!AssetBookRel.Convention.FullMonth
			and !AssetBookRel.Convention.ModifiedHalfMonth
			and !AssetBookRel.Convention.MidQuarter
			and !LocalStartDate 			> LocalEndDate)
			or  (!AssetBookRel.Convention.FullMonth
			and !AssetBookRel.Convention.MidQuarter
			and !AssetBookRel.Convention.ModifiedHalfMonth
			and !AssetBookRel.InServiceDate > LocalEndDate))
				LocalCDB					= CalcDepreciation
				LocalDeprYTD				+= LocalDeprCP
				LocalDeprLTD				+= LocalDeprCP
				LocalDeprYTDAllow			+= LocalDeprCPAllow
				LocalDeprLTDAllow			+= LocalDeprCPAllow
				LocalFirstYearMonth			+= LocalNumberOfDepreciationPeriodsPd
				if (LocalLife entered)
					LocalLifeRemaining		-= LocalLifeCP
			LocalNumberOfDepreciationPeriodsClosed += LocalNumberOfDepreciationPeriodsPd
				
		XLastYear is a DerivedField
			type is like InternationalAmount
			restricted
			LocalSkip = false
			if (!LocalLifeRemaining > 0
			and LocalLife != 0)
				LocalSkip = true
			if (!LocalSkip)
				LocalNumberOfDepreciationPeriodsPd	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I1]
				LocalCDB								= CalcDepreciation
				LocalDeprYTD							+= LocalDeprCP
				LocalPUDeprLTD							+= LocalDeprCP
				LocalDeprLTD							+= LocalDeprCP
				LocalDeprYTDAllow						+= LocalDeprCPAllow
				LocalPUDeprLTDAllow						+= LocalDeprCPAllow
				LocalDeprLTDAllow						+= LocalDeprCPAllow
				LocalNumberOfDepreciationPeriodsClosed	+= LocalNumberOfDepreciationPeriodsPd
				if (LocalLife entered)
					LocalLifeRemaining		-= LocalLifeCP
		
		PreviousYearsH is a DerivedField		
			type is like InternationalAmount
			restricted
			if (InLife entered)
				LocalCDB 							= FirstYearMonths
			if (LocalFirstLastFl 				= "C")
				if (LocalHRecord				= "L")
					LocalPriorProcessSW			= true	
			else
				if (HistoryYearBookCalendarsRel3.ShortYear)
					initialize LocalCalcYtdAmt
					initialize LocalCalcPUYtdAmt
					initialize LocalCalcYtdLife
					initialize LocalTotPer
					initialize LocalSysBeginYearLife
					LocalShortYE			= HistoryYearBookCalendarsRel3.YearEndDate
					LocalPrevYearEndDate 	= (HistoryYearBookCalendarsRel3.YearBeginDate -1 day)
					LocalNewYearEndDate		= HistoryYearBookCalendarsRel3.YearEndDate
					LocalYearBeginDate		= HistoryYearBookCalendarsRel3.YearBeginDate
					LocalInsrvDate			= AssetBookRel.InServiceDate
					LocalNormYEDate			= HistoryYearBookCalendarsRel3.OriginalYearEndDate
					initialize LocalNormYEDays
					initialize LocalShortYEDays

					LocalCDB 	= CalcShortYearAmounts
					LocalAnnualDepreciation		= LocalCalcYtdAmt
					LocalPUAnnualDepreciation	= LocalCalcPUYtdAmt
					LocalProcessedMonths		= LocalCalcYtdLife
					if (LocalFirstYear)
						LocalFirstLastFl = "M"
					LocalCDB = PreviousYearsHContinue
			if (LocalFirstYear)
				LocalCDB		= FirstYearDepreciation
				if ((AssetBookRel.Method = "200DB30%"
				or AssetBookRel.Method = "150DB30%"
				or AssetBookRel.Method = "SL30%"
				or AssetBookRel.Method = "200DB40%"
				or AssetBookRel.Method = "150DB40%"
				or AssetBookRel.Method = "SL40%"
				or AssetBookRel.Method = "200DB50%"
				or AssetBookRel.Method = "150DB50%"
				or AssetBookRel.Method = "SL50%"
				or AssetBookRel.Method = "SL75%")				
				and AssetBookRel.PersonalUseCode not entered)
					if (!GWTAddedBonusDepr)
						LocalDeprLTD		= LocalDeprLTD + LocalDeprBonus
						LocalDeprYTD		= LocalDeprYTD + LocalDeprBonus
						LocalDeprLTDAllow	= LocalDeprLTDAllow + LocalDeprBonusAllow
						GWTAddedBonusDepr	= true
				else
					if (AssetBookRel.PersonalUseCode entered)
						if (LocalProcessedMonths < 12)
							if (AssetBookRel.Convention.ModifiedHalfYear
							and LocalProcessedMonths not entered)
								initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation
								initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow
							else
								if (AssetBookRel.Convention.FullMonth
								or AssetBookRel.Convention.ModifiedHalfMonth
								or AssetBookRel.Convention.MidMonth
								or AssetBookRel.Convention.NextMonth
								or AssetBookRel.Convention.ActualDays
								or AssetBookRel.Convention.MidQuarter)
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow	*=  LocalProcessedMonths
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow	/=  12
								else
									if (AssetBookRel.Convention.ModifiedHalfMonth)
								 		PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow	/=  2
								 		
						if (AssetBookRel.Method = "200DB30%"
						or AssetBookRel.Method 	= "150DB30%"
						or AssetBookRel.Method 	= "SL30%"
						or AssetBookRel.Method 	= "200DB40%"
						or AssetBookRel.Method 	= "150DB40%"
						or AssetBookRel.Method 	= "SL40%"
						or AssetBookRel.Method 	= "200DB50%"
						or AssetBookRel.Method 	= "150DB50%"
						or AssetBookRel.Method 	= "SL50%"
						or AssetBookRel.Method 	= "SL75%")						
							PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow 	+= LocalDeprBonus
							LocalAnnualDepreciation													+= LocalDeprBonus																								 						
				
					if (AssetBookRel.Life > 12)
						LocalFirstLastFl	= "M"
				if (LocalFirstYear 
				or LocalFirstLastFl = "F"
				or LocalLifeRemaining = 0)
					if (Convention.ActualDays)
						ActualDaysMonthsClosedFirstYear = ActualDaysPeriodsClosedFirstYear * 12
						LocalLifeRemaining	= LocalLife - ActualDaysMonthsClosedFirstYear
					else
						if (Convention.HalfYear)
							LocalLifeRemaining				= LifeRemainingHalfYear
						else					
							if (Convention.FullYear)
								LocalLifeRemaining				= LifeRemainingFullYear
							else
								if (Convention.ModifiedHalfYear)
									LocalLifeRemaining		= LifeRemainingModifiedHalfYear
								else
									if (Convention.MidQuarter)
										LocalLifeRemaining	= LifeRemainingMidQuarter
									else
										if (Convention.ModifiedHalfMonth)
											LocalCDBDate = AdjustInsrvDate
											if (LocalDeprStartDate > InServiceDate)
												if (!CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
													if(config.ApplyAssetShortYearUpdate = true
													and IsBookHasShortYear)
														LocalLifeRemaining      = LocalLife - LocalProcessedMonths
													else
														LocalProcessedMonths    = LocalProcessedMonths -1
														LocalLifeRemaining      = LocalLife - LocalProcessedMonths
										else									
											LocalLifeRemaining	= LocalLife - LocalProcessedMonths
				else
					LocalLifeRemaining -= LocalProcessedMonths
			else
				if (LocalLastYear)
					LocalCDB					= LastYearDepreciation
				else
					LocalCDB					= ComputeAnnualDepreciation
			LocalCDB = PreviousYearsHContinue

		PreviousYearsHContinue is a DerivedField  
			type is like InternationalAmount
			restricted
			if (AssetBookRel.PersonalUseCode not entered
			and LocalFirstLastFl = "P")
				LocalDeprLTD					+= LocalAnnualDepreciation
				LocalDeprLTDAllow				+= LocalPUAnnualDepreciation
			else
				if (AssetBookRel.PersonalUseCode entered
				and LocalLastYear)
					LocalDeprLTD				+= LocalAnnualDepreciation 
					LocalDeprLTDAllow			+= LocalAnnualDepreciation
				else
				
					LocalPUDeprLTDAllow			+= LocalPUAnnualDepreciation
					LocalPUDeprLTD				+= LocalAnnualDepreciation
					
			if (LocalFirstLastFl		= "P")
				LocalLifeRemainingAmt	= AssetBookRel.Basis - AssetBookRel.SalvageValue - LocalBasisReductionPercentage - LocalDeprLTDAllow
		
			if (LocalLifeRemaining 		not entered
			and	LocalLifeRemainingAmt 	not entered
			and LocalLife 				entered)
				LocalFirstLastFl		= "C"
				
			if (MethodRel.MethodCategoryType.System)
				if (LocalLife			<= 12)
					if ((!AssetBookRel.Convention.ModifiedHalfMonth
					and  LocalProcessedMonths					<= LocalLife)
					or  (LocalDeprLTD entered
					and  LocalProcessedMonths					< LocalLife))
						LocalMethodYear							+= 1	
				else
					if (!AssetBookRel.Convention.ModifiedHalfMonth
					or   LocalDeprLTD entered)
						if (LocalFirstLastFl					= "M"
						or (!LocalFirstLastFl					= "C"
						and PersonalUseCodeRel.AllowPostRecoveryDeduction = "Y"))
							LocalMethodYear						+= 1	
			else
				LocalMethodYear									+= 1	
		
			if (LocalLife entered
			and LocalFirstLastFl	!= "P"
			and LocalFirstLastFl	!= "C")
				if (LocalFirstYear 
				or LocalLifeRemaining = 0)
					if (Convention.ActualDays)
						ActualDaysMonthsClosedFirstYear = ActualDaysPeriodsClosedFirstYear * 12						
						LocalLifeRemaining	= LocalLife - ActualDaysMonthsClosedFirstYear
					else
						if (Convention.HalfYear)
							LocalLifeRemaining				= LifeRemainingHalfYear
						else
							if (Convention.FullYear)
								LocalLifeRemaining				= LifeRemainingFullYear
							else
								if (Convention.ModifiedHalfYear)
									LocalLifeRemaining		= LifeRemainingModifiedHalfYear
								else
									if (Convention.MidQuarter)
										LocalLifeRemaining	= LifeRemainingMidQuarter
									else
										LocalLifeRemaining	= LocalLife - LocalProcessedMonths
				if (!LocalLifeRemaining > 12
				and LocalLifeRemaining entered
				and LocalLife entered)
					if (AssetBookRel.PersonalUseCode entered)
						LocalDeprLTDAllow		= LocalPUDeprLTDAllow
						LocalDeprLTD			= LocalPUDeprLTD
						LocalFirstLastFl		= "P"
					else
						LocalFirstLastFl		= "L"
				else
					if (LocalLifeRemaining not entered
					and AssetBookRel.Basis entered
					and AssetBookRel.PersonalUseCode entered
					and PersonalUseCodeRel.AllowPostRecoveryDeduction = "Y")
						LocalDeprLTDAllow		= LocalPUDeprLTDAllow
						LocalDeprLTD			= LocalPUDeprLTD
						LocalFirstLastFl		= "P"
						
			if (LocalHRecord = "L")	
				LocalPriorProcessSW				= true		
							
						
		CalcShortYearAmounts is a DerivedField
			type is like InternationalAmount
			restricted	
			LocalSysBeginYearLife					= 	LocalLifeRemaining * HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
			LocalSysBeginYearLife					+= (HistoryYearBookCalendarsRel3.NumberOfPeriodCloseRuns *12)
			LocalSysBeginYearLife					/= (HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear)
			
			if (LocalSysBeginYearLife > LocalLife)
				LocalSysBeginYearLife				= LocalLife
				
			if (LocalFirstYear
			or AssetBookRel.DepreciationStartDate > LocalShortYE)
				LocalCDB =	710FirstYears
			else
				if (LocalLastYear)
					LocalCDB =	770LastYear
				else
					LocalCDB =	760MiddleYear
			
		
		770LastYear is a DerivedField
			type is like InternationalAmount
			restricted
			LocalCDB				= CalcDepreciation
			if (!LocalShortYE		> LocalExpDate)
				LocalCalcYtdAmt		= LocalAnnualDepreciation
				LocalCalcPUYtdAmt	= LocalPUAnnualDepreciation
				LocalCalcYtdLife	= LocalLifeRemaining
			else
				LocalShortYearDays	= LocalPrevYearEndDate day - LocalShortYE day
				LocalNormYEDays		= LocalPrevYearEndDate day - LocalExpDate 
				
				LocalCalcYtdAmt		= ((LocalAnnualDepreciation * LocalShortYearDays) / LocalNormYEDays)
				LocalCalcPUYtdAmt	= ((LocalPUAnnualDepreciation * LocalShortYearDays) / LocalNormYEDays)
				LocalCalcYtdLife	= (LocalLifeRemaining - (LocalSysBeginYearLife - (LocalSysBeginYearLife * LocalShortYearDays) / LocalNormYEDays))		
		
			
		760MiddleYear is a DerivedField
			type is like InternationalAmount
			restricted
			LocalShortYearDays	= LocalPrevYearEndDate day - LocalShortYE day
			LocalNormYEDays		= LocalPrevYearEndDate day - LocalNormYEDate day
			LocalCDB			= CalcDepreciation
			LocalCalcYtdAmt		= ((LocalAnnualDepreciation * LocalShortYearDays) / LocalNormYEDays)
			LocalCalcPUYtdAmt	= ((LocalPUAnnualDepreciation * LocalShortYearDays) / LocalNormYEDays)
			LocalCalcYtdLife	= (LocalLifeRemaining - (LocalSysBeginYearLife-(12 * LocalShortYearDays) / LocalNormYEDays))		
		
		710FirstYears is a DerivedField
			type is like InternationalAmount
			restricted				
			if (AssetBookRel.Convention.FullYear
			and AssetBookRel.DepreciationStartDate 	> LocalYearBeginDate)
				LocalDeprStartDate					= LocalYearBeginDate
			
			LocalSkip = false	
			if (!AssetBookRel.Convention.HalfYear
			and !AssetBookRel.Convention.MidQuarter)
				if (LocalDeprStartDate 	> LocalShortYE
				or LocalInsrvDate		> LocalShortYE)
					initialize LocalCalcYtdAmt
					initialize LocalCalcPUYtdAmt
					initialize LocalCalcYtdLife
					LocalYearEndDate		= LocalNewYearEndDate
					LocalPrevYearEndDate	= LocalYearBeginDate - 1 day
					LocalSysInsrvDate		= LocalInsrvDate
					LocalCDBDate 			= AdjustInsrvDate  
					LocalYearEndDate		= LocalNormYEDate
					LocalInsrvDate			= LocalSysInsrvDate
					
					LocalSkip				= true
			
			if (!LocalSkip)	
				if (AssetBookRel.Convention.HalfYear
				and !LocalSkip)
					LocalCDB 				= 720ConvHY
				else
					LocalCDB				= 730ConvMQ
					
				if (!LocalDeprStartDate > LocalPrevYearEndDate)
					LocalDeprStartDate = LocalPrevYearEndDate + 1 day
				else
					if (LocalDeprStartDate > LocalShortYE)
						if (AssetBookRel.Convention.ModifiedHalfYear)
							LocalDeprStartDate = LocalShortYE day +1
							initialize LocalCalcYtdAmt
							initialize LocalCalcPUYtdAmt
							initialize LocalCalcYtdLife
							LocalSkip = true
						else
							LocalDeprStartDate = LocalShortYE
			if (!LocalSkip)
				LocalNormYEDays				= LocalPrevYearEndDate day - LocalNormYEDate day
				
				LocalShortYEDays 			= LocalDeprStartDate day - LocalShortYE day
				LocalShortYEDays 			+= 1
				LocalCDB					= ComputeAnnualDepreciation	
				
				LocalCalcYtdAmt				= LocalAnnualDepreciation * LocalShortYEDays
				LocalCalcYtdAmt				/= LocalNormYEDate
					
				LocalCalcPUYtdAmt			= LocalPUAnnualDepreciation * LocalShortYEDays
				LocalCalcPUYtdAmt			/= LocalNormYEDate	
				
				LocalCalcYtdLife			= LocalProcessedMonths	* LocalShortYEDays
				LocalCalcYtdLife			/= LocalNormYEDate
				
				if (AssetBookRel.Convention.HalfYear)
					if (LocalCalcYtdAmt		> LocalAnnualDepreciation /2)
						LocalCalcYtdAmt		= LocalAnnualDepreciation /2
						LocalCalcPUYtdAmt	= LocalPUAnnualDepreciation /2
				
				if (AssetBookRel.Method = "200DB30%"
				or AssetBookRel.Method 	= "150DB30%"
				or AssetBookRel.Method 	= "SL30%"
				or AssetBookRel.Method 	= "200DB40%"
				or AssetBookRel.Method 	= "150DB40%"
				or AssetBookRel.Method 	= "SL40%"
				or AssetBookRel.Method 	= "200DB50%"
				or AssetBookRel.Method 	= "150DB50%"
				or AssetBookRel.Method 	= "SL50%"
				or AssetBookRel.Method 	= "SL75%")				 
					LocalCalcYtdAmt		+= LocalDeprBonus
					LocalCalcPUYtdAmt	+= LocalDeprBonus	
		
		AdjustInsrvDate is a DerivedField
			type is Date		
			restricted	
			LocalCompany			= InAsset.Company			
			LocalAsset				= InAsset
			LocalInsrvDate			= InServiceDate
			LocalYearBeginDate		= InYearBeginDate
			LocalPrevYearEndDate 	= InPrevYearEndDate
			LocalDeprStartDate		= LocalInsrvDate
			initialize					LocalNonCurrCalSW
			initialize					LocalActCalSW
			if (InYearBeginDate entered)
				LocalCompany			= InAsset.Company
				InBook					= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate		= InServiceDate
  				LocalPrevYearEndDate 		= InYearBeginDate - 1 day 
			
			if (Convention.ActualDays)
				LocalCompany		= InAsset.Company
				InBook				= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				LocalDeprStartDate			= LocalInsrvDate
				LocalStartDate 				= LocalDeprStartDate			
				return LocalDeprStartDate

			else
			if (Convention.FullMonth)
				LocalCompany		= InAsset.Company
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= InServiceDate
				else
					LocalInServiceDate	= InServiceDate
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12
				and InServiceDate >= CurrentBookCalendarsRel.YearBeginDate
				and InServiceDate <= CurrentBookCalendarsRel.YearEndDate)
					T1 = 1
					while (T1 <= 54
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						if (InServiceDate <= LocalTempYrEndDate)
							if (T1 != 1)
								LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
							else
								LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
							end while
						else
							T1 = T1+1	
							
				else
					T1 = 1
					if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
						LocalCalendarStatus = "C"
					else
						LocalCalendarStatus = "H"
					if (HistoryYearBookCalendarsRel4 exists)
						while (T1 <= 54
						and HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
								else
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.YearBeginDate
								end while
							else
								T1 = T1+1
					else
					if (CalendarsByDateRel exists)
						LocalAddYear = CalcNumberOfYearsInService
						LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
						while (T1 <= 54
						and CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1]
									LocalTempYrBegDate = LocalTempYrBegDate + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CalendarsByDateRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
					else
					if(LocalInServiceDate < first BookCalendarByDateRel.YearBeginDate)
						LocalAddYear = CalcNumberOfYearsInService - 1
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
						
					else
						LocalAddYear =  CalcNumberOfYearsInServiceFuture
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate + LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
								end while
							else
								T1 = T1+1
									
				LocalDeprStartDate = LocalTempYrBegDate 
				LocalStartDate = LocalDeprStartDate
				return LocalDeprStartDate

			else
			if (Convention.ModifiedHalfMonth)
				LocalCompany		= InAsset.Company
				InBook				= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
					T1 = 1
					if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
						LocalCalendarStatus = "C"
					else
						LocalCalendarStatus = "H"
					if (HistoryYearBookCalendarsRel4 exists)
						while (T1 <= 54
						and HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
								else
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.YearBeginDate
								end while
							else
								T1 = T1+1
					else
					if (CalendarsByDateRel exists)
						LocalAddYear = CalcNumberOfYearsInService
						LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
						while (T1 <= 54
						and CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1]
									LocalTempYrBegDate = LocalTempYrBegDate + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CalendarsByDateRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
					else 
					if(InServiceDate < first BookCalendarByDateRel.YearBeginDate)
						LocalAddYear = CalcNumberOfYearsInService - 1
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
					else
						T1=1
						LocalAddYear = CalcNumberOfYearsInServiceFuture
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate + LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
									
								end while
							else
								T1 = T1+1

					LocalInServiceDiffDays = LocalInServiceDate - LocalTempYrBegDate
					LocalDaysDiffMonth = LocalTempYrEndDate - LocalTempYrBegDate
					LocalDaysDiffMonth = LocalDaysDiffMonth /2
					if (LocalInServiceDiffDays > LocalDaysDiffMonth)
						LocalDeprStartDate = LocalTempYrEndDate + 1 day
					else
						LocalDeprStartDate = LocalInServiceDate
						LocalDeprStartDate day 		-= LocalInServiceDiffDays
				else
					if (LocalDeprStartDate day		< 16)
						LocalDeprStartDate day 		-= LocalDeprStartDate day
						LocalDeprStartDate day 		+= 1 day
					else 
						LocalDeprStartDate day 		-= LocalDeprStartDate day
						LocalDeprStartDate day 		+= 1 day 
						LocalDeprStartDate month 	+= 1 month
				LocalStartDate = LocalDeprStartDate		
				return LocalDeprStartDate

			else
			if (Convention.NextMonth)
				LocalCompany		= InAsset.Company
				InBook				= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12
				and (InServiceDate >= CurrentBookCalendarsRel.YearBeginDate
				and InServiceDate <= CurrentBookCalendarsRel.YearEndDate))
					T1 = 1
					while (T1 <= 54
					and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
						LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
						if (InServiceDate <= LocalTempYrEndDate)
							if (T1 != 1)
								LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
							else
								LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
							end while
						else
							T1 = T1+1	
					LocalDeprStartDate = LocalTempYrEndDate + 1 day
				else
					T1 = 1
					if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
						LocalCalendarStatus = "C"
					else
						LocalCalendarStatus = "H"
					if (HistoryYearBookCalendarsRel4 exists)
						while (T1 <= 54
						and HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
								else
									LocalTempYrBegDate = HistoryYearBookCalendarsRel4.YearBeginDate
								end while
							else
								T1 = T1+1
					else
					if (CalendarsByDateRel exists)
						LocalAddYear = CalcNumberOfYearsInService
						LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
						while (T1 <= 54
						and CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CalendarsByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1]
									LocalTempYrBegDate = LocalTempYrBegDate + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CalendarsByDateRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
					else
					if(InServiceDate < first BookCalendarByDateRel.YearBeginDate)
						LocalAddYear = CalcNumberOfYearsInService - 1
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate - LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate - LocalAddYear as years
								end while
							else
								T1 = T1+1
					else	
						LocalAddYear = CalcNumberOfYearsInServiceFuture
						while (T1 <= 54
						and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1] entered)	
							LocalTempYrEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
							LocalTempYrEndDate = LocalTempYrEndDate + LocalAddYear as years
							if (InServiceDate <= LocalTempYrEndDate)
								if (T1 != 1)
									LocalTempYrBegDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1 -1] + 1 day
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
								else
									LocalTempYrBegDate = CurrentBookCalendarsRel.YearBeginDate
									LocalTempYrBegDate = LocalTempYrBegDate + LocalAddYear as years
								end while
							else
								T1 = T1+1
					LocalDeprStartDate = LocalTempYrEndDate + 1 day
					if(LocalDeprStartDate day = 29
					and LocalDeprStartDate month = 2)
						LocalDeprStartDate = LocalDeprStartDate + 1 day
				LocalStartDate = LocalDeprStartDate
				return LocalDeprStartDate

			else
			if (Convention.MidMonth)
				LocalCompany		= InAsset.Company
				InBook				= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				LocalDeprStartDate day		-= LocalDeprStartDate day
				LocalDeprStartDate day	 	+= 15 days
				LocalStartDate = LocalDeprStartDate		
				return LocalDeprStartDate			

			else
			if (Convention.MidQuarter)
				LocalCompany		= InAsset.Company
				InBook				= InBook
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				initialize LocalYearBeginDate	
				if (LocalInServiceDate entered)
					if (BookCalendarForInserviceDateRel exists)	
						LocalYearBeginDate		= first BookCalendarForInserviceDateRel.YearBeginDate
					else 
					if(BookCalendarsByDateRel exists)
						LocalYearBeginDate  	= first BookCalendarsByDateRel.YearBeginDate
						if (LocalYearBeginDate 	> LocalInServiceDate)
							LocalBeginDateFound 		= false
							while (LocalBeginDateFound 	= false)
								LocalYearBeginDate		= (LocalYearBeginDate - 1 year)
								if (LocalYearBeginDate	<= LocalInServiceDate) 
									LocalBeginDateFound = true
					else 
						LocalAddYear = CalcNumberOfYearsInServiceFuture
						LocalYearBeginDate = CurrentBookCalendarsRel.YearBeginDate + (LocalAddYear as years)			
					
				MidQuarter1Date		= (LocalYearBeginDate + 45 days)
				Quarter1EndDate		= (LocalYearBeginDate + 90 days - 1 day)
				if (LocalInServiceDate	<= Quarter1EndDate)
					LocalDeprStartDate 	= MidQuarter1Date
				else
					MidQuarter2Date			= (LocalYearBeginDate + 136 days)
					Quarter2EndDate			= (LocalYearBeginDate + 180 days)
					if (LocalInServiceDate 	<= Quarter2EndDate)
						LocalDeprStartDate 	= MidQuarter2Date
					else 
						MidQuarter3Date			= (LocalYearBeginDate + 227 days)
						Quarter3EndDate			= (LocalYearBeginDate + 272 days)
						if (LocalInServiceDate 	<= Quarter3EndDate)
							LocalDeprStartDate 	= MidQuarter3Date
						else
							MidQuarter4Date			= (LocalYearBeginDate + 318 days)
							Quarter4EndDate			= (LocalYearBeginDate + 364 days)				
							if (LocalInServiceDate	<= Quarter4EndDate)	
								LocalDeprStartDate 	= MidQuarter4Date
				LocalStartDate = LocalDeprStartDate	
				return LocalDeprStartDate			
											
			else						
			if (Convention.ModifiedHalfYear)
				TestPeriod 					= 1
				InBook						= InBook
				LocalCompany				= InAsset.Company
				if (LocalInsrvDate entered)
					InServiceDate		= LocalInsrvDate
					LocalInServiceDate	= LocalInsrvDate
				else
				if (InServiceDate entered)
					LocalInServiceDate		= InServiceDate
					LocalInsrvDate			= InServiceDate
				else 	
				if (AssetBookRel.InServiceDate entered)
					LocalInsrvDate			= AssetBookRel.InServiceDate
					InServiceDate			= AssetBookRel.InServiceDate
					LocalInServiceDate		= AssetBookRel.InServiceDate
				else 
					LocalInsrvDate			= AssetRel.LastAssetItemPurchaseDate	
					InServiceDate			= AssetRel.LastAssetItemPurchaseDate	
					LocalInServiceDate		= AssetRel.LastAssetItemPurchaseDate					
				NumberOfCalendarPeriods		= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
				HalfYearPeriod 				= (NumberOfCalendarPeriods / 2)
				round HalfYearPeriod up to nearest 1
				TestPeriod					= HalfYearPeriod
				if (LocalInServiceDate entered)
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
							LocalCalendarStatus = "C"
						else
							LocalCalendarStatus = "H"
						S1 = 1
						T1 = 0
						if (HistoryYearBookCalendarsRel4 exists)
							while (T1 < TestPeriod)
								T1 = T1+ (HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 +=1
							if (LocalInServiceDate <= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1])
								LocalDeprStartDate = HistoryYearBookCalendarsRel4.YearBeginDate
							else
								LocalDeprStartDate = HistoryYearBookCalendarsRel4.YearEndDate + 1 day
						else
						if (BookCalendarByDateRel exists)
							while (T1 < TestPeriod)
								T1= T1+ (BookCalendarByDateRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInService
							LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
							if (LocalInServiceDate <= (BookCalendarByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] - LocalAddYear as years))
								if (LocalAddYear > 0)
									LocalDeprStartDate = BookCalendarByDateRel.YearBeginDate - LocalAddYear as years
								else
									LocalDeprStartDate = BookCalendarByDateRel.YearBeginDate
							else
								if (LocalAddYear > 0)
									LocalDeprStartDate = BookCalendarByDateRel.YearEndDate + 1 day
									LocalDeprStartDate -= LocalAddYear as years
								else
									LocalDeprStartDate = BookCalendarByDateRel.YearEndDate + 1 day
						else
							while (T1 < TestPeriod)
								T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInServiceFuture
							if (LocalInServiceDate >= (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] + LocalAddYear as years))
								if (LocalAddYear > 0)
									LocalDeprStartDate = CurrentBookCalendarsRel.YearEndDate + LocalAddYear as years + 1 day
								else
									LocalDeprStartDate = CurrentBookCalendarsRel.YearBeginDate + 1 year
							else
								if (LocalAddYear > 0)
									LocalDeprStartDate = CurrentBookCalendarsRel.YearBeginDate 
									LocalDeprStartDate += LocalAddYear as years
								else
									LocalDeprStartDate = CurrentBookCalendarsRel.YearBeginDate 
	
								
						
					else	
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1])
							if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
								LocalCalendarStatus = "C"
							else
								LocalCalendarStatus = "H"
							
							if (HistoryYearBookCalendarsRel4 exists)	
								LocalNbrOfDays	= HistoryYearBookCalendarsRel4.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								LocalDiff = LocalInServiceDate - HistoryYearBookCalendarsRel4.YearBeginDate
								if(LocalDiff as days < LocalNbrOfDays)
									LocalDeprStartDate = HistoryYearBookCalendarsRel4.YearBeginDate
								else
									LocalDeprStartDate = HistoryYearBookCalendarsRel4.YearEndDate + 1
								
							else
							if (BookCalendarByDateRel exists)
								LocalAddYear = CalcNumberOfYearsInService
								LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
								LocalNbrOfDays	= BookCalendarByDateRel.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								LocalDate = LocalInServiceDate + LocalAddYear as years
								LocalDiff = LocalDate - BookCalendarByDateRel.YearBeginDate
								if(LocalDiff as days< LocalNbrOfDays)
									LocalDeprStartDate = BookCalendarByDateRel.YearBeginDate
								else
									LocalDeprStartDate = BookCalendarByDateRel.YearEndDate + 1
								LocalDeprStartDate = LocalDeprStartDate - LocalAddYear as years
								
								
							else
								LocalAddYear = CalcNumberOfYearsInServiceFuture
								LocalDate = LocalInServiceDate - LocalAddYear as years
								LocalDiff = (LocalDate - CurrentBookCalendarsRel.YearBeginDate)
								LocalNbrOfDays	= CurrentBookCalendarsRel.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								if(LocalDiff as days < LocalNbrOfDays)
									LocalDeprStartDate = CurrentBookCalendarsRel.YearBeginDate
								else
									LocalDeprStartDate = CurrentBookCalendarsRel.YearEndDate + 1
								LocalDeprStartDate +=LocalAddYear as years
						else
							T1=0
							S1=1
							LocalBeginDateFound 		= false
							YearsToCurrentCalendar 		= 0
							LocalTestInServiceDate		= LocalInServiceDate
							if (BookCalendarForInserviceDateRel exists)
								while (T1 < HalfYearPeriod)
									T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
									S1 += 1
								if (LocalInServiceDate <= (first BookCalendarForInserviceDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1-1]))
									LocalDeprStartDate	= (first BookCalendarForInserviceDateRel.YearBeginDate)
								else 
									LocalDeprStartDate	= ((first BookCalendarForInserviceDateRel.YearEndDate) + 1 day)
									
							else
							if(LocalInServiceDate < first BookCalendarByDateRel.YearBeginDate)
								while (T1 < HalfYearPeriod)
									T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
									S1 += 1
								while (LocalBeginDateFound 	= false)	
									YearsToCurrentCalendar		+= 1	
									LocalTestInServiceDate		= LocalTestInServiceDate + 1 year
									if (CurrentCalendarForTestInServiceDateRel exists)
										if (LocalTestInServiceDate <= (CurrentCalendarForTestInServiceDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1-1]))
											LocalDeprStartDate	= (CurrentCalendarForTestInServiceDateRel.YearBeginDate)
											LocalDeprStartDate	= LocalDeprStartDate - YearsToCurrentCalendar as years
										else 
											LocalDeprStartDate	= ((CurrentCalendarForTestInServiceDateRel.YearEndDate) + 1 day)
											LocalDeprStartDate	= LocalDeprStartDate - YearsToCurrentCalendar as years
										LocalBeginDateFound = true
							else
								while (T1 < HalfYearPeriod)
									T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
									S1 += 1
								
								while (LocalBeginDateFound 	= false)	
									YearsToCurrentCalendar		+= 1
									LocalTestInServiceDate		= LocalTestInServiceDate - 1 year			
									if (CurrentCalendarForTestInServiceDateRel exists)
										if (LocalTestInServiceDate <= (CurrentCalendarForTestInServiceDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1-1]))
											LocalDeprStartDate	= (CurrentCalendarForTestInServiceDateRel.YearBeginDate)
											LocalDeprStartDate	= LocalDeprStartDate + YearsToCurrentCalendar as years
										else 
											LocalDeprStartDate	= ((CurrentCalendarForTestInServiceDateRel.YearEndDate) + 1 day)
											LocalDeprStartDate	= LocalDeprStartDate + YearsToCurrentCalendar as years
										LocalBeginDateFound = true
								
						
				LocalStartDate = LocalDeprStartDate						
				return LocalDeprStartDate			
			
			else						
			if (Convention.HalfYear)
				TestPeriod 					= 1
				InBook						= InBook
				LocalCompany				= InAsset.Company
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				if (LocalInServiceDate entered)
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						NumberOfCalendarPeriods		= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						HalfYearPeriod 				= (NumberOfCalendarPeriods / 2)
						round HalfYearPeriod up to nearest 1
						TestPeriod					= HalfYearPeriod
						if (InServiceDate > CurrentBookCalendarsRel.YearBeginDate)
							LocalCalendarStatus = "C"
						else
							LocalCalendarStatus = "H"
						S1 = 1
						T1 = 0
						if (HistoryYearBookCalendarsRel4 exists)
							while (T1 < TestPeriod)
								T1 = T1+ (HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 +=1
							LocalDeprStartDate = HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1]
							LocalDeprStartDate += 1 day
						else
						if (BookCalendarByDateRel exists)
							while (T1 < TestPeriod)
								T1= T1+ (BookCalendarByDateRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInService
							LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
							LocalDeprStartDate = BookCalendarByDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] - LocalAddYear as years
							LocalDeprStartDate += 1 day
						
						else
							while (T1 < TestPeriod)
								T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInServiceFuture
							LocalDeprStartDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] + LocalAddYear as years
							LocalDeprStartDate += 1 day
					else
						S1 = 1
						T1 = 0
						NumberOfCalendarPeriods		= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						HalfYearPeriod 				= (NumberOfCalendarPeriods / 2)
						round HalfYearPeriod up to nearest 1
						TestPeriod					= HalfYearPeriod
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[1])
							if (InServiceDate >= CurrentBookCalendarsRel.YearBeginDate)
								LocalCalendarStatus = "C"
							else
								LocalCalendarStatus = "H"
							if (HistoryYearBookCalendarsRel4 exists)
								LocalNbrOfDays	= HistoryYearBookCalendarsRel4.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								LocalDeprStartDate = HistoryYearBookCalendarsRel4.YearBeginDate + LocalNbrOfDays as days
								LocalDeprStartDate += 1 day
							else
							if (BookCalendarByDateRel exists)
								LocalAddYear = CalcNumberOfYearsInService
								LocalAddYear = LocalAddYear - (instance count of CalendarsByDateRel) - 1
								LocalNbrOfDays	= BookCalendarByDateRel.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								LocalDeprStartDate = BookCalendarByDateRel.YearBeginDate + LocalNbrOfDays as days
								LocalDeprStartDate = LocalDeprStartDate - LocalAddYear as years
								LocalDeprStartDate += 1 day
							else
								LocalAddYear = CalcNumberOfYearsInServiceFuture
								LocalNbrOfDays	= CurrentBookCalendarsRel.CalendarDays
								LocalNbrOfDays	= LocalNbrOfDays / 2
								LocalDeprStartDate = CurrentBookCalendarsRel.YearBeginDate + LocalNbrOfDays as days
								LocalDeprStartDate += 1 day
								LocalDeprStartDate +=LocalAddYear as years
						else
						if (BookCalendarForInserviceDateRel exists)	
							while (T1 < HalfYearPeriod)
								T1= T1+ (first BookCalendarForInserviceDateRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalDeprStartDate = BookCalendarForInserviceDateRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1]
							LocalDeprStartDate += 1 day
							
						else
						if(LocalInServiceDate < first BookCalendarByDateRel.YearBeginDate)
							while (T1 < HalfYearPeriod)
								T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInService - 1
							LocalDeprStartDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] - LocalAddYear as years
							LocalDeprStartDate += 1 day

						else
							T1=0
							S1=1
							while (T1 < HalfYearPeriod)
								T1= T1+ (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[S1])
								S1 += 1
							LocalAddYear = CalcNumberOfYearsInServiceFuture
							LocalDeprStartDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[S1 - 1] + LocalAddYear as years
							LocalDeprStartDate += 1 day
								
								
					LocalStartDate = LocalDeprStartDate
					return LocalDeprStartDate			

			else
			if (Convention.FullYear)
				InBook					= InBook
				LocalCompany			= InAsset.Company
				if (InServiceDate not entered)
					InServiceDate		= AssetRel.LastAssetItemPurchaseDate
					LocalInServiceDate	= AssetRel.LastAssetItemPurchaseDate
				else
					LocalInServiceDate	= InServiceDate
				if (LocalInServiceDate entered)					
					if (BookCalendarForInserviceDateRel exists)	
						LocalYearBeginDate	= (first BookCalendarForInserviceDateRel.YearBeginDate)
						LocalDeprStartDate	= LocalYearBeginDate
						LocalStartDate 		= LocalDeprStartDate
	
					else
					if (LocalInServiceDate < first BookCalendarByDateRel.YearBeginDate)
						LocalBeginDateFound 		= false
						YearsToCurrentCalendar 		= 0
						LocalTestInServiceDate		= LocalInServiceDate
						while (LocalBeginDateFound 	= false)	
							YearsToCurrentCalendar	+= 1			
							LocalTestInServiceDate	= LocalTestInServiceDate + 1 year
							if (CurrentCalendarForTestInServiceDateRel exists)
								LocalYearBeginDate	= (CurrentCalendarForTestInServiceDateRel.YearBeginDate)
								LocalYearBeginDate	= LocalYearBeginDate - YearsToCurrentCalendar as years
								LocalDeprStartDate	= LocalYearBeginDate
								LocalStartDate 		= LocalDeprStartDate
								LocalBeginDateFound = true
					else
						LocalBeginDateFound 		= false
						YearsToCurrentCalendar 		= 0
						LocalTestInServiceDate		= LocalInServiceDate
						while (LocalBeginDateFound 	= false)	
							YearsToCurrentCalendar	+= 1			
							LocalTestInServiceDate	= LocalTestInServiceDate - 1 year
							if (CurrentCalendarForTestInServiceDateRel exists)
								LocalYearBeginDate	= (CurrentCalendarForTestInServiceDateRel.YearBeginDate)
								LocalYearBeginDate	= LocalYearBeginDate + YearsToCurrentCalendar as years
								LocalDeprStartDate	= LocalYearBeginDate
								LocalStartDate 		= LocalDeprStartDate
								LocalBeginDateFound = true
			
			return LocalDeprStartDate			
				
		550Option6 is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalTempYrEndDate = InYearEndDate
			if (LocalTempYrEndDate year - LocalDeprStartDate year 	> 1
			and LocalDeprStartDate									>= LocalYearBeginDate)
				LocalFYMonths										= 11 months
			else
				if (LocalDeprStartDate month						= LocalTempYrEndDate month
				and LocalDeprStartDate year							= LocalTempYrEndDate year
				and LocalDeprStartDate								> LocalTempYrEndDate)
					LocalFYMonths									= 11 months
				else
					if (LocalDeprStartDate month					= LocalTempYrEndDate month)
						if (LocalDeprStartDate day					> LocalTempYrEndDate day)
							LocalFYMonths							= 11 months
						else
							LocalFYMonths							= 2 months
					else
						if (LocalDeprStartDate month				> LocalTempYrEndDate month)
							LocalFYMonths							= 12 - (LocalDeprStartDate month - 	LocalTempYrEndDate month)
						else
							if (LocalDeprStartDate month			< LocalTempYrEndDate month)
								LocalFYMonths						= LocalTempYrEndDate month -  LocalDeprStartDate month
						
						if (LocalTempYrEndDate day					< 15 days
						and LocalDeprStartDate month				!= LocalTempYrEndDate month)
							LocalFYMonths							-= 1
			
			LocalAddDay = 1
			LocalYearBeginDate										-= 1 day
			LocalDayDiff											= LocalTempYrEndDate - LocalYearBeginDate 
			if (LocalFYMonths										< 3)
				initialize LocalNbrDaysRound
				LocalNbrDaysRound									+= (LocalDayDiff * .875)
				round LocalNbrDaysRound down to nearest 1
				LocalYearBeginDate									+= LocalNbrDaysRound as days
				
			else
				if (LocalFYMonths									< 6)							
					LocalYearBeginDate day							+= (LocalDayDiff * .625)
					round LocalYearBeginDate day down to nearest 1
				else
					if (LocalFYMonths								< 9)							
						LocalYearBeginDate day						+= (LocalDayDiff * .375)
						round LocalYearBeginDate day down to nearest 1
					else
						if (LocalFYMonths							< 12)							
							LocalYearBeginDate day					+= (LocalDayDiff * .125)
							round LocalYearBeginDate day down to nearest 1
							
		
			LocalDeprStartDate										=  LocalYearBeginDate
			LocalStartDate = LocalDeprStartDate						
			return LocalDeprStartDate			
		
		730ConvMQ is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalMQBeginDayDiff										= LocalPrevYearEndDate day - LocalShortYE day
			LocalMQBeginDay											= LocalPrevYearEndDate day + (LocalMQBeginDay * .25)
			
			LocalPrevYearEndDate day								= LocalMQBeginDay
			if (!LocalInsrvDate										> LocalPrevYearEndDate)
				LocalMQBeginDay										= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * (1 / 8))
				LocalPrevYearEndDate day							= LocalMQBeginDay 
				LocalCDB											= 730ConvMQContinue
			else
				LocalMQBeginDay										= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * .5)
				round LocalMQBeginDay down to nearest 1
				LocalPrevYearEndDate day							= LocalMQBeginDay
				if (!LocalInsrvDate									> LocalPrevYearEndDate)
					LocalMQBeginDay									= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * (3 / 8))
					LocalPrevYearEndDate day						= LocalMQBeginDay
					LocalCDB										= 730ConvMQContinue
				else
					LocalMQBeginDay									= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * .75)
					LocalPrevYearEndDate day						= LocalMQBeginDay
					if (!LocalInsrvDate								> LocalPrevYearEndDate)
						LocalMQBeginDay								= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * (5 / 8))
						LocalPrevYearEndDate day					= LocalMQBeginDay
						LocalCDB									= 730ConvMQContinue
					else
						if (!LocalInsrvDate							> LocalPrevYearEndDate)
							LocalMQBeginDay							= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * (5 / 8))
							LocalPrevYearEndDate day				= LocalMQBeginDay
							LocalCDB								= 730ConvMQContinue
						else
							if (!LocalInsrvDate						> LocalShortYE)
								LocalMQBeginDay						= LocalPrevYearEndDate day + (LocalMQBeginDayDiff * (7 / 8))
			LocalStartDate = LocalDeprStartDate		
			return LocalDeprStartDate			
					
		730ConvMQContinue is a DerivedField
			type is like InternationalAmount
			restricted				
			if (LocalPrevYearEndDate day 	< 15)
				LocalPrevYearEndDate day 	= 1
			else
				LocalPrevYearEndDate day	= 15
				
			LocalDeprStartDate				= LocalPrevYearEndDate				
			LocalStartDate = LocalDeprStartDate					
			return LocalDeprStartDate			
				
							
		720ConvHY is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalSkip = false
			LocalDay1 = LocalShortYE day +1
			LocalDay2 = LocalPrevYearEndDate day +1
			if (!LocalDay1 = 1
			and !LocalDay2 = 1)
				LocalSkip = true
			
			if (!LocalSkip)	
				if (LocalPrevYearEndDate month > LocalShortYE month)
					LocalTotPer			= 13 + LocalShortYE month - LocalPrevYearEndDate month
				else
					LocalTotPer			= LocalShortYE month - LocalPrevYearEndDate month +1
					
				LocalDeprStartDate		= LocalPrevYearEndDate
				
				LocalStartDate month	+= LocalTotPer/2
				
				if (LocalTotPer = 1 
				or LocalTotPer = 2
				or LocalTotPer = 3
				or LocalTotPer = 5
				or LocalTotPer = 7
				or LocalTotPer = 9
				or LocalTotPer = 11)
					LocalStartDate day = 15
				else
					LocalStartDate day = 1	
					
				if (LocalStartDate month > 12)
					LocalStartDate 		-= 12
					LocalDeprStartDate	+= 1000
					LocalSkip 			= true
					
			if (!LocalSkip)
				LocalDayDiff					= (LocalPrevYearEndDate day  - LocalShortYE day)
				LocalPrevYearEndDate day		+= (LocalDayDiff /2)
				if (LocalPrevYearEndDate day	< 15)
					LocalPrevYearEndDate day 	= 1
				else
					LocalPrevYearEndDate day 	= 15
					
				LocalDeprStartDate			=	 LocalPrevYearEndDate
				LocalStartDate = LocalDeprStartDate					
				return LocalDeprStartDate			
					
		PreviousYears is a DerivedField			
			type is like InternationalAmount
			restricted
			if (InLife entered)
				LocalCDB 							= FirstYearMonths				
			LocalPersonalUseCode = AssetBookRel.PersonalUseCode
			if (AssetBookRel.FirstAndLastYear.First)
				LocalCDB 							= FirstYearDepreciation
				if ((AssetBookRel.Method = "200DB30%"
				or AssetBookRel.Method = "150DB30%"
				or AssetBookRel.Method = "SL30%"
				or AssetBookRel.Method = "200DB40%"
				or AssetBookRel.Method = "150DB40%"
				or AssetBookRel.Method =  "SL40%"
				or AssetBookRel.Method = "200DB50%"
				or AssetBookRel.Method = "150DB50%"
				or AssetBookRel.Method =  "SL50%"
				or AssetBookRel.Method =  "SL75%")				
				and AssetBookRel.PersonalUseCode not entered)
					if (!GWTAddedBonusDepr)
						LocalDeprLTD		= LocalDeprLTD + LocalDeprBonus
						LocalDeprLTDAllow	= LocalDeprLTDAllow + LocalDeprBonusAllow
				else
					if (AssetBookRel.PersonalUseCode entered)
						if (LocalProcessedMonths < 12)
							if (AssetBookRel.Convention.ModifiedHalfYear
							and LocalProcessedMonths not entered)
								initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation
								initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow
							else
								if (AssetBookRel.Convention.FullMonth
								or AssetBookRel.Convention.ModifiedHalfMonth
								or AssetBookRel.Convention.MidMonth
								or AssetBookRel.Convention.NextMonth
								or AssetBookRel.Convention.ActualDays
								or AssetBookRel.Convention.MidQuarter)
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation	*=  LocalProcessedMonths
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation	/=  12
								else
									if (AssetBookRel.Convention.ModifiedHalfMonth)
								 		PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation	/=  2
										
						if (AssetBookRel.Method	= "200DB30%"
						or AssetBookRel.Method 	= "150DB30%"
						or AssetBookRel.Method 	= "SL30%"
						or AssetBookRel.Method 	= "200DB40%"
						or AssetBookRel.Method 	= "150DB40%"
						or AssetBookRel.Method 	= "SL40%"
						or AssetBookRel.Method 	= "200DB50%"
						or AssetBookRel.Method 	= "150DB50%"
						or AssetBookRel.Method 	= "SL50%"
						or AssetBookRel.Method 	= "SL75%")
							PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow 	+= LocalDeprBonus
							LocalAnnualDepreciation													+= LocalDeprBonus																
							
				if (AssetBookRel.Life > 12)
					LocalFirstLastFl	= "M"
				else
					if (LocalLastYear)
						LocalCDB					= LastYearDepreciation
					else
						LocalCDB					= ComputeAnnualDepreciation
					
				if (AssetBookRel.PersonalUseCode not entered
				and  AssetBookRel.FirstAndLastYear = "P")
					LocalDeprLTD 				+= LocalAnnualDepreciation
					LocalDeprLTDAllow			+= PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow
				else
					if (AssetBookRel.PersonalUseCode entered
					and (LocalFirstLastFl		= "L"
					or  LocalProgram			= "AM20"))
						LocalDeprLTD			+= PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation
						LocalDeprLTDAllow		+= PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow
					else
						LocalDeprLTD			+= PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation
						LocalDeprLTDAllow		+= PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].DepreciationAllow
						LocalPUDeprLTDAllow		+= LocalPUAnnualDepreciation		
						LocalPUDeprLTD			+= LocalAnnualDepreciation
						
						
				if (AssetBookRel.FirstAndLastYear = "P")
					LocalLifeRemainingAmt		= AssetBookRel.Basis - AssetBookRel.SalvageValue - LocalBasisReductionPercentage - LocalDeprLTDAllow
					
					if (LocalLifeRemaining 		not entered
					and LocalLifeRemainingAmt	not entered
					and LocalLife				entered)
						LocalFirstLastFl	= "C"
						
				if (MethodRel.MethodCategoryType.System)
					if (LocalLife					<= 12)
						if ((!AssetBookRel.Convention.ModifiedHalfMonth
						and LocalProcessedMonths	< LocalLife)
						or (LocalDeprLTD	entered
						and LocalProcessedMonths < LocalLife))
							LocalStartDate year 	+= 1
							LocalMethodTableYear 	+= 1
						else
							if (!AssetBookRel.Convention.ModifiedHalfMonth
							or LocalDeprLTD entered)
								LocalStartDate year 	+= 1
								if (LocalFirstLastFl 	= "M"
								or (!LocalFirstLastFl 	= "C"
								and	PersonalUseCodeRel.AllowPostRecoveryDeduction))
									LocalMethodTableYear += 1
				else
					LocalStartDate year 	+= 1
					LocalMethodTableYear 	+= 1
					
				if (LocalLife entered
				and !AssetBookRel.FirstAndLastYear = "P"
				and !LocalFirstLastFl = "C")					
					if (LocalFirstLastFl = "F"
					or  LocalLifeRemaining = 0)
						if (Convention.ActualDays)
							ActualDaysMonthsClosedFirstYear	= ActualDaysPeriodsClosedFirstYear * 12
							LocalLifeRemaining	= LocalLife - ActualDaysMonthsClosedFirstYear
						else
							if (Convention.HalfYear)
								LocalLifeRemaining				= LifeRemainingHalfYear
							else						
								if (Convention.FullYear)
									LocalLifeRemaining				= LifeRemainingFullYear
								else
									if (Convention.ModifiedHalfYear)
										LocalLifeRemaining		= LifeRemainingModifiedHalfYear
									else
										if (Convention.MidQuarter)
											LocalLifeRemaining	= LifeRemainingMidQuarter
										else
											if (Convention.ModifiedHalfMonth)
												LocalCDBDate = AdjustInsrvDate
												if (LocalDeprStartDate > InServiceDate)
													if(config.ApplyAssetShortYearUpdate = true
													and IsBookHasShortYear)
														LocalLifeRemaining      = LocalLife - LocalProcessedMonths 
													else
														LocalProcessedMonths    = LocalProcessedMonths -1
														LocalLifeRemaining      = LocalLife - LocalProcessedMonths
											else											
												LocalLifeRemaining	= LocalLife - LocalProcessedMonths
					else
						LocalLifeRemaining -= LocalProcessedMonths
					if (!LocalLifeRemaining > 12
					and LocalLifeRemaining entered
					and LocalLife entered)
						if (AssetBookRel.PersonalUseCode entered)
							LocalDeprLTDAllow		= LocalPUDeprLTDAllow	
							LocalDeprLTD			= LocalPUDeprLTD	
							LocalFirstLastFl		= "P"
						else
							LocalFirstLastFl		= "L"
					else
						if (LocalLifeRemaining not entered
						and AssetBookRel.Basis entered
						and AssetBookRel.PersonalUseCode entered
						and PersonalUseCodeRel.AllowPostRecoveryDeduction)
							LocalDeprLTDAllow		= LocalPUDeprLTDAllow
							LocalDeprLTD			= LocalPUDeprLTD
							LocalFirstLastFl		= "P"
			
			if (LocalHRecord = "L")
				LocalPriorProcessSW	= true	

		FirstYearDepreciation640 is a DerivedField
			type is like InternationalAmount
			if (Convention.NextMonth)
				NumberOfPeriodsFirstYear = LocalDepreciationPeriodsPerYear				
			if (!LocalFirstLastFl = "C")
				LocalAnnualDepreciation 			= ComputeAnnualDepreciation
			if (InLife entered)
				LocalCDB 							= FirstYearMonths650
				
			if (LocalAssetBook.YearToDateDepreciationOverride not entered
			and (!MethodRel.RecordType = "U")
			and !(Convention.ActualDaysFirstMonth 
			and LocalStartDate <= InServiceDate 
			and InServiceDate <= LocalEndDate))
				if (MethodRel.RecordType = "P"
				and LocalMethod.MethodPercents entered)
					LocalAnnualDepreciationSave			= LocalAnnualDepreciation
					LocalPUAnnualDepreciationSave		= LocalPUAnnualDepreciation
				else
					LocalLife = InLife
					if (LocalLife < 12)
						if (LocalProcessedMonths < LocalLife)
							if (!InMethod.MethodCategoryType.User
							and (Convention.FullMonth
							or Convention.ModifiedHalfMonth
							or Convention.MidMonth
							or Convention.NextMonth
							or Convention.ActualDays
							or Convention.MidQuarter))
								LocalAnnualDepreciation			=  LocalAnnualDepreciation * LocalProcessedMonths
								if (LocalLife > 0)
									LocalAnnualDepreciation 	= LocalAnnualDepreciation / LocalLife
								LocalPUAnnualDepreciation 		=  LocalPUAnnualDepreciation * LocalProcessedMonths
								if (LocalLife > 0)
									LocalPUAnnualDepreciation 	= LocalPUAnnualDepreciation / LocalLife
								LocalAnnualDepreciationSave		= LocalAnnualDepreciation
								LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation
						else
							LocalAnnualDepreciationSave		= LocalAnnualDepreciation
							LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation	
							
					else
						if (Convention.FullYear)
							if (InPersonalUseCode entered)
								PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation += LocalDeprBonusFull
						else
							if (Convention.FullMonth
							or Convention.ModifiedHalfMonth
							or Convention.MidMonth
							or Convention.NextMonth
							or Convention.ActualDays
							or Convention.MidQuarter)
								if (!LocalAssetBook.SpreadOverRemainingLife)
									LocalAnnualDepreciation		= LocalAnnualDepreciation * LocalProcessedMonths
									LocalAnnualDepreciation		= LocalAnnualDepreciation / 12
									LocalPUAnnualDepreciation	= LocalPUAnnualDepreciation * LocalProcessedMonths
									LocalPUAnnualDepreciation 	= LocalPUAnnualDepreciation / 12
									if (InPersonalUseCode entered)
										PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation += LocalDeprBonusFull
							else
								if (Convention.HalfYear)
									if (InPersonalUseCode entered
									and LocalDeprCompare < LocalAnnualDepreciationTemp)
										PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation / 2 
										PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation + LocalDeprBonusFull
									else
										LocalAnnualDepreciation		/= 2
										LocalPUAnnualDepreciation	/= 2
										if (InPersonalUseCode entered)
											PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation / 2 
											PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation + LocalDeprBonusFull
								else	
									if (Convention.ModifiedHalfYear)
										if (LocalProcessedMonths not entered)
											if (InPersonalUseCode entered)
												initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation
											initialize LocalAnnualDepreciation
											initialize LocalPUAnnualDepreciation
										else
											if (InPersonalUseCode entered)
												PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodTableYear].Depreciation + LocalDeprBonusFull
						LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation			
						LocalAnnualDepreciationSave		= LocalAnnualDepreciation
			return FirstYearDepreciationAmount

		FirstYearDepreciation is a DerivedField
			type is like InternationalAmount
			if (Convention.NextMonth)	
				NumberOfPeriodsFirstYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				
			LocalFirstLastFl						= InFirstLastFlag
			if (!LocalFirstLastFl = "C")
				LocalAnnualDepreciation 			= ComputeAnnualDepreciation
			if (InLife entered)
				LocalCDB 							= FirstYearMonths
			FirstYearDepreciationAmount				= LocalAnnualDepreciation
			if (InYTDDeprAllow not entered
			and (!MethodRel.RecordType = "U"))
				if (MethodRel.RecordType = "P"
				and LocalMethod.MethodPercents entered)   
					LocalNumberOfDepreciationPeriodsClosed = LocalProcessedMonths
					LocalAnnualDepreciation				= (LocalAnnualDepreciation / NumberOfPeriodsFirstYear)
					LocalAnnualDepreciationSave			= LocalAnnualDepreciation
					LocalPUAnnualDepreciationSave		= LocalPUAnnualDepreciation
				else
					LocalLife = InLife
					if (LocalLife < 12)
						if (LocalProcessedMonths < LocalLife)
							if (Convention.FullMonth
							or Convention.ModifiedHalfMonth
							or Convention.MidMonth
							or Convention.NextMonth
							or Convention.ActualDays
							or Convention.MidQuarter)
								LocalAnnualDepreciation			=  LocalAnnualDepreciation * LocalProcessedMonths
								if (LocalLife > 0)
									LocalAnnualDepreciation 	= LocalAnnualDepreciation / LocalLife
								LocalPUAnnualDepreciation 		=  LocalPUAnnualDepreciation * LocalProcessedMonths
								if (LocalLife > 0)
									LocalPUAnnualDepreciation 	= LocalPUAnnualDepreciation / LocalLife
								LocalAnnualDepreciationSave		= LocalAnnualDepreciation
								LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation
							else
								LocalAnnualDepreciationSave		= LocalAnnualDepreciation
								LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation	
							
					else
						if (Convention.FullYear)
							if (InPersonalUseCode entered)
								PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation += LocalDeprBonusFull
						else
							if (Convention.FullMonth
							or Convention.ModifiedHalfMonth
							or Convention.MidMonth
							or Convention.NextMonth
							or Convention.ActualDays
							or Convention.MidQuarter)
								if (!(Convention.MidQuarter 
								and LocalProgram = "Proj"))
									FirstYearDepreciationAmount	= FirstYearDepreciationAmount / 12
									FirstYearDepreciationAmount = FirstYearDepreciationAmount * NumberOfPeriodsFirstYear
									if(InMethod	= "SYD")
										if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12
										and !Convention.ActualDays)
											FirstYearAmount	= ((LocalAnnualDepreciation/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)*LocalFirstYearPeriodsCount)
										else
											FirstYearAmount	= ((LocalAnnualDepreciation/12)*NumberOfPeriodsFirstYear)
										return FirstYearAmount
								LocalAnnualDepreciation		= LocalAnnualDepreciation * LocalProcessedMonths
								LocalAnnualDepreciation		= LocalAnnualDepreciation / NumberOfPeriodsFirstYear  
								LocalPUAnnualDepreciation	= LocalPUAnnualDepreciation * LocalProcessedMonths
								LocalPUAnnualDepreciation 	= LocalPUAnnualDepreciation / NumberOfPeriodsFirstYear  
								if (InPersonalUseCode entered)
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation * LocalProcessedMonths
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation / 12
									PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation + LocalDeprBonusFull
							else
								if (Convention.ModifiedHalfYear)
									if (LocalProcessedMonths not entered)
										if (InPersonalUseCode entered)
											initialize PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation
											initialize LocalAnnualDepreciation
											initialize LocalPUAnnualDepreciation
									else
										if (InPersonalUseCode entered)
											PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation = PUAnnualDepDetail.PUAnnualDepTable[LocalMethodYear].Depreciation + LocalDeprBonusFull
								else
									if (Convention.ActualDaysFirstMonth
									and LocalProgram = "Proj")
										if(CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
											LocalStartDate = CurrentBookCalendarsRel.YearBeginDate
											LocalPeriodsClosed = 13 - NumberOfPeriodsFirstYear
											NumberOfPeriodsFirstYear = CountPeriods445Calendar
											FirstYearDepreciationAmount = FirstYearDepreciationAmount  + LocalFirstYearDepreciation - ((NumberOfPeriodsFirstYear * (12 / CurrentBookCalendarsRel.DepreciationPeriodsPerYear)) * LocalMonthlyDepreciation)
										else
											FirstYearDepreciationAmount = FirstYearDepreciationAmount  + LocalFirstYearDepreciation - ((13 - NumberOfPeriodsFirstYear) * LocalMonthlyDepreciation)
									else
										if (!Convention.MidQuarter 
										and !Convention.HalfYear
										and LocalProgram = "Proj")
											FirstYearDepreciationAmount	= FirstYearDepreciationAmount / 12
											FirstYearDepreciationAmount = FirstYearDepreciationAmount * NumberOfPeriodsFirstYear
												
					
					LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation			
					LocalAnnualDepreciationSave		= LocalAnnualDepreciation

			return FirstYearDepreciationAmount
					
		FirstYearMonths650 is a DerivedField
			type is like InternationalAmount
			restricted
			LocalInServiceDate	= InServiceDate
			if (Convention.HalfYear)
				LocalProcessedMonths = 6
			else
			if (Convention.ModifiedHalfYear)
				LocalProcessedMonths = 12
				if (InDepreciationStartDate > InYearEndDate)
					LocalProcessedMonths = 0
			else
			if (Convention.FullYear)
				LocalProcessedMonths = 12	
			else
				initialize NumberOfPeriodsFirstYear
				MonthsProcessed.InServiceDate	 		= InServiceDate
				if (Convention.ModifiedHalfMonth)
					MonthsProcessed.InDeprStartDate		= LocalStartDate
					if (LocalProgram = "Proj")
						MonthsProcessed.InDeprStartDate	= InDepreciationStartDate	
				else
					MonthsProcessed.InDeprStartDate		= InServiceDate
				MonthsProcessed.InYearBeginDate			= InYearBeginDate
				MonthsProcessed.InYearEndDate			= InYearEndDate		
				MonthsProcessed.Convention				= Convention
				MonthsProcessed.InLife					= InLife
				MonthsProcessed.LastPeriodEnd			= InYearEndDate
				MonthsProcessed.InBook					= InBook
				MonthsProcessed.InCompany				= InCompany
				MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
				MonthsProcessed.InservicePeriod			= InservicePeriod
				MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate

				if (Convention.ActualDays)
					if (CurrentBookCalendarsRel exists)
						if (NumberOfPeriodCloseRuns = 0)
							LastPeriodEnd	= InYearBeginDate
							LastPeriodEnd	= 	LastPeriodEnd - 1 day
						else
							LastPeriodEnd = LastClosedDepreciationPeriodEndDate
					else
						initialize LastPeriodEnd

					if (InServiceDate < InYearBeginDate
					and I6 = 0)
						LastPeriodEnd							= InPrevYearEndDate				
					if (InServiceDate < InYearBeginDate)
						LocalCalendarStatus				= "H"
						if (HistoryYearBookCalendarsRel4 exists)
							MonthsProcessed.InPrevYearEndDate		= HistoryYearBookCalendarsRel4.YearEndDate
							MonthsProcessed.InPrevYearBeginDate		= HistoryYearBookCalendarsRel4.YearBeginDate
						else 
							ProjectedHistoryBeginDate  	= first BookCalendarsByDateRel.YearBeginDate
							ProjectedHistoryEndDate		= first BookCalendarsByDateRel.YearEndDate
							if (ProjectedHistoryBeginDate <= LocalInServiceDate)
								MonthsProcessed.InPrevYearEndDate		= ProjectedHistoryBeginDate
								MonthsProcessed.InPrevYearBeginDate		= ProjectedHistoryEndDate
							else 
								LocalBeginDateFound 			= false
								while (LocalBeginDateFound 		= false)
									ProjectedHistoryBeginDate	= (ProjectedHistoryBeginDate - 1 year)
									ProjectedHistoryEndDate		= (ProjectedHistoryEndDate - 1 year)
									if (ProjectedHistoryBeginDate 			<= LocalInServiceDate) 
										MonthsProcessed.InPrevYearEndDate	= ProjectedHistoryBeginDate
										MonthsProcessed.InPrevYearBeginDate	= ProjectedHistoryEndDate							
										LocalBeginDateFound = true
						MonthsProcessed.LastPeriodEnd			= LastPeriodEnd
						MonthsProcessed.DepreciationPeriod		= blank
					else
						if (FromProjection
						and InServiceDate <= InYearEndDate)
							MonthsProcessed.LastPeriodEnd		= InYearEndDate
						else
							MonthsProcessed.LastPeriodEnd		= LastPeriodEnd
						MonthsProcessed.DepreciationPeriod		= blank	
					NoOfDaysToDepreciateInYear = CurrentBookCalendarsRel.YearEndDate - InServiceDate
					NoOfDaysToDepreciateInYear += 1
				
				NumberOfPeriodsFirstYear				= MonthsProcessed.ReturnNumberOfMonthsProcessed
				LocalProcessedMonths = NumberOfPeriodsFirstYear

			if (InLife < 12)
				if (Convention.FullYear
				or Convention.HalfYear
				or (Convention.ModifiedHalfYear
				and LocalProcessedMonths = 12))
					NumberMonths.InBook				= InBook
					NumberMonths.InCompany			= InCompany
					NumberMonths.InServiceDate 		= InServiceDate
					NumberMonths.YearEndDate		= InYearEndDate
					NumberMonths.YearBeginDate		= InYearBeginDate
					NumberMonths.Convention			= Convention
					LocalProcessedMonths			= NumberMonths.ReturnNumberOfMonths	
					TranProcessedMonths				= LocalProcessedMonths
				else
					LocalTmpProcessedMonths			= LocalProcessedMonths
					TranProcessedMonths				= LocalProcessedMonths
				if (LocalTmpProcessedMonths > LocalLife
				or  LocalConvention.HalfYear)
					LocalTmpProcessedMonths 			= InLife
					TranProcessedMonths					= InLife
					LocalFYMonths						= InLife
					LocalProcessedMonths				= InLife
			return LocalProcessedMonths

		FirstYearMonths is a DerivedField
			type is like InternationalAmount
			restricted
			if (!InLife entered)
				InLife = AssetBookRel.Life
				
			if (!Convention entered)
				Convention = AssetBookRel.Convention
				
			if (!InServiceDate entered)
				InServiceDate	= AssetBookRel.InServiceDate
			LocalInServiceDate	= InServiceDate
			if (CurrentBookCalendarsRel exists)
				I6	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				LastPeriodEnd = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
			else
				initialize LastPeriodEnd
			if (InServiceDate < InYearBeginDate
			and I6 = 0)
				LastPeriodEnd							= InPrevYearEndDate
			if (LastPeriodEnd entered)
				if(config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
					if (Convention.ModifiedHalfMonth)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
					else
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear <= 12)
							MonthsProcessed.InDeprStartDate		= InServiceDate
				else
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						if (Convention.ModifiedHalfMonth)
							LocalCDBDate = AdjustInsrvDate
							if (LocalDeprStartDate > InServiceDate)
								MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
					else
						MonthsProcessed.InDeprStartDate		= InServiceDate
				MonthsProcessed.InServiceDate	 		= InServiceDate
				MonthsProcessed.InYearBeginDate			= InYearBeginDate
				MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
				MonthsProcessed.InYearEndDate			= InYearEndDate		
				MonthsProcessed.Convention				= Convention
				MonthsProcessed.InLife					= InLife
				MonthsProcessed.LastPeriodEnd			= LastPeriodEnd
				MonthsProcessed.InBook					= InBook
				MonthsProcessed.InCompany				= InCompany
				LocalProcessedMonths					= MonthsProcessed.ReturnNumberOfMonthsProcessed
				if (LocalProcessedMonthsActualDays not entered)
					LocalProcessedMonthsActualDays		= LocalProcessedMonths
					if (LocalProcessedMonthsActualDays > InLife)
						LocalProcessedMonthsActualDays	= InLife
				if (Convention.MidQuarter)
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						MidQuarterFirstYearPeriodsClosed	= MonthsProcessed.LocalFirstYearCalcPeriods
					else
						MidQuarterFirstYearPeriodsClosed	= MonthsProcessed.MidQuarterMonths
					if (InServiceDate < InYearBeginDate)
						LocalProcessedMonths			= LocalProcessedMonths + CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
				if (Convention.ActualDays)
					if (InServiceDate < InYearBeginDate)
						LocalCalendarStatus						= "H"
						MonthsProcessed.InServiceDate	 		= InServiceDate
						MonthsProcessed.InDeprStartDate			= InServiceDate
						MonthsProcessed.InYearBeginDate			= InYearBeginDate
						if (HistoryYearBookCalendarsRel4 exists)
							MonthsProcessed.InPrevYearEndDate		= HistoryYearBookCalendarsRel4.YearEndDate
							MonthsProcessed.InPrevYearBeginDate		= HistoryYearBookCalendarsRel4.YearBeginDate
						else 
							ProjectedHistoryBeginDate  = first BookCalendarsByDateRel.YearBeginDate
							ProjectedHistoryEndDate	= first BookCalendarsByDateRel.YearEndDate
							if (ProjectedHistoryBeginDate <= LocalInServiceDate)
								MonthsProcessed.InPrevYearEndDate		= ProjectedHistoryBeginDate
								MonthsProcessed.InPrevYearBeginDate		= ProjectedHistoryEndDate
							else 
								LocalBeginDateFound 			= false
								while (LocalBeginDateFound 		= false)
									ProjectedHistoryBeginDate	= (ProjectedHistoryBeginDate - 1 year)
									ProjectedHistoryEndDate		= (ProjectedHistoryEndDate - 1 year)
									if (ProjectedHistoryBeginDate 			<= LocalInServiceDate) 
										MonthsProcessed.InPrevYearEndDate	= ProjectedHistoryBeginDate
										MonthsProcessed.InPrevYearBeginDate	= ProjectedHistoryEndDate							
										LocalBeginDateFound = true
										
						MonthsProcessed.InYearEndDate			= InYearEndDate		
						MonthsProcessed.Convention				= Convention
						MonthsProcessed.InLife					= InLife
						MonthsProcessed.LastPeriodEnd			= LastPeriodEnd
						MonthsProcessed.InBook					= InBook
						MonthsProcessed.InCompany				= InCompany
						MonthsProcessed.DepreciationPeriod		= "P"
						ActualDaysPeriodsClosedFirstYear		= MonthsProcessed.ReturnNumberOfMonthsProcessed
						MonthsProcessed.DepreciationPeriod		= "C"
						ActualDaysPeriodsClosedCurrentYear		= MonthsProcessed.ReturnNumberOfMonthsProcessed
						MonthsProcessed.DepreciationPeriod		= blank
					else
						MonthsProcessed.InServiceDate	 		= InServiceDate
						MonthsProcessed.InDeprStartDate			= InServiceDate
						MonthsProcessed.InYearBeginDate			= InYearBeginDate
						MonthsProcessed.InYearEndDate			= InYearEndDate		
						MonthsProcessed.Convention				= Convention
						MonthsProcessed.InLife					= InLife
						if (FromProjection
						and InServiceDate <= InYearEndDate)
							MonthsProcessed.LastPeriodEnd		= InYearEndDate
						else
							MonthsProcessed.LastPeriodEnd		= LastPeriodEnd
						MonthsProcessed.InBook					= InBook
						MonthsProcessed.InCompany				= InCompany
						MonthsProcessed.DepreciationPeriod		= "C"
						ActualDaysPeriodsClosedCurrentYear		= MonthsProcessed.ReturnNumberOfMonthsProcessed						
						MonthsProcessed.DepreciationPeriod		= blank	
			else
				LocalProcessedMonths					= 0
			initialize NumberOfPeriodsFirstYear
			MonthsProcessed.InServiceDate	 		= InServiceDate
			if (Convention.ModifiedHalfMonth
			and LocalProgram = "Proj")
				MonthsProcessed.InDeprStartDate		= InDepreciationStartDate
			else
				MonthsProcessed.InDeprStartDate		= InServiceDate
			MonthsProcessed.InYearBeginDate			= InYearBeginDate
			MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
			MonthsProcessed.InYearEndDate			= InYearEndDate		
			MonthsProcessed.Convention				= Convention
			MonthsProcessed.InLife					= InLife
			MonthsProcessed.LastPeriodEnd			= InYearEndDate
			MonthsProcessed.InBook					= InBook
			MonthsProcessed.InCompany				= InCompany
			NumberOfPeriodsFirstYear				= MonthsProcessed.ReturnNumberOfMonthsProcessed
			LocalFirstYearPeriodsCount				= MonthsProcessed.LocalFirstYearCalcPeriods
			if (Convention.MidQuarter)
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
					MidQuarterFirstYearPeriods		= MonthsProcessed.LocalFirstYearCalcPeriods
				else
					MidQuarterFirstYearPeriods		= MonthsProcessed.MidQuarterPeriods

			if (InLife < 12)
				if(Convention.FullYear
				or  Convention.HalfYear
				or  (Convention.ModifiedHalfYear
				and LocalProcessedMonths = 12))
					NumberMonths.InBook				= InBook
					NumberMonths.InCompany			= InCompany
					NumberMonths.InServiceDate 		= InServiceDate
					NumberMonths.YearEndDate		= InYearEndDate
					NumberMonths.YearBeginDate		= InYearBeginDate
					NumberMonths.Convention			= Convention
					LocalProcessedMonths			= NumberMonths.ReturnNumberOfMonths
					TranProcessedMonths				= LocalProcessedMonths
				else
					LocalTmpProcessedMonths			= LocalProcessedMonths
					TranProcessedMonths				= LocalProcessedMonths
					
			if (LocalTmpProcessedMonths > LocalLife
			or  LocalConvention.HalfYear)
				LocalTmpProcessedMonths 			= InLife
				TranProcessedMonths					= InLife
				LocalFYMonths						= InLife
				LocalProcessedMonths				= InLife
			return LocalProcessedMonths
				
		LastYearDepreciation is a DerivedField
			type is like InternationalAmount
			LocalCDB					= ComputeAnnualDepreciation
			if (InLife entered)
				LocalProcessedMonths	= InLifeRemaining

		PersonalUse1 is a DerivedField
			type is like InternationalAmount
			restricted				
			if (InAsset entered)
				LocalAsset					= InAsset

			initialize	LocalEndDate
			LocalBusUseTmp					= PersonalUseCodeRel.QualifyingBusinessUsePercentage

			for each PersonalUseHistoryRel
				if (each.BusinessPercent < LocalBusUseTmp)
					LocalBusUseTmp				= each.BusinessPercent	
				
			if (LocalBusUseTmp < PersonalUseCodeRel.QualifyingBusinessUsePercentage)
				if (PersonalUseCodeRel.OptionalDepreciationLife	= "Y")
					LocalTempMethod			= LocalMethod
					LocalMethod				= PersonalUseCodeRel.OptionalDepreciationMethod
					if (PersonalUseCodeRel.OptionalDepreciationLife entered)
						LocalPMTrigger		= ProcessMethod
					else
						LocalLifeRemaining	= LocalLifeRemaining + (PersonalUseCodeRel.OptionalDepreciationLife - LocalLife)
						LocalLife			= PersonalUseCodeRel.OptionalDepreciationLife
						LocalPMTrigger		= ProcessMethod
			if (PersonalUseCodeRel.AllowAnnualDepreciationLimit = "Y")
				LocalCDB					= LimitOption

		580PersonalUse1 is a DerivedField
			type is like InternationalAmount
			restricted				
			if (InAsset entered)
				LocalAsset					= InAsset

			initialize	LocalEndDate
			LocalBusUseTmp					= PersonalUseCodeRel.QualifyingBusinessUsePercentage
			for each PersonalUseHistoryRel
				if (each.BusinessPercent < LocalBusUseTmp)
					LocalBusUseTmp				= each.BusinessPercent	
			if (LocalBusUseTmp < PersonalUseCodeRel.QualifyingBusinessUsePercentage)
				if (PersonalUseCodeRel.ChangeMethodBelowQualifyingPercentage = "Y")
					LocalTempMethod			= LocalMethod
					LocalMethod				= PersonalUseCodeRel.OptionalDepreciationMethod
					if (PersonalUseCodeRel.OptionalDepreciationLife not entered)
						LocalPMTrigger		= ProcessMethod580
					else
						LocalLifeRemaining	= LocalLifeRemaining + (PersonalUseCodeRel.OptionalDepreciationLife - LocalLife)
						LocalLife			= PersonalUseCodeRel.OptionalDepreciationLife
						LocalPMTrigger		= ProcessMethod580
			if (PersonalUseCodeRel.AllowAnnualDepreciationLimit = "Y")
				LocalCDB					= 580LimitOption

		PersonalUse2 is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalRecapType	= "D"
			if (InAsset entered)
				LocalAsset	= InAsset

			initialize LocalRecapDate
			initialize LocalEndDate	
			LocalBusUseTmp	= PersonalUseCodeRel.QualifyingBusinessUsePercentage
			
			if (PersonalUseCodeRel.RecaptureDepreciationBelowQualifyingPercentage
			and	(LocalProgram	= "AM40"
			or  LocalProgram	= "AM180"))
				LocalCDB		= RecaptureDepr
				
			if (PersonalUseCodeRel.ChangeMethodBelowQualifyingPercentage)
				LocalMethod				= PersonalUseCodeRel.OptionalDepreciationMethod
				if (PersonalUseCodeRel.OptionalDepreciationLife not entered)
					LocalCDB			= ProcessMethod
				else
					LocalLifeRemaining	+= (PersonalUseCodeRel.OptionalDepreciationLife - LocalLife)
					LocalLife			= PersonalUseCodeRel.OptionalDepreciationLife
					LocalCDB			= ProcessMethod	
			if (PersonalUseCodeRel.AllowAnnualDepreciationLimit)
				LocalCDB				= 	LimitOption

		580PersonalUse2 is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalRecapType	= "D"
			if (InAsset entered)
				LocalAsset	= InAsset

			initialize LocalRecapDate
			initialize LocalEndDate	
			LocalBusUseTmp	= PersonalUseCodeRel.QualifyingBusinessUsePercentage
			
			if (PersonalUseCodeRel.RecaptureDepreciationBelowQualifyingPercentage
			and	(LocalProgram	= "AM40"
			or  LocalProgram	= "AM180"))
				LocalCDB		= RecaptureDepr
				
			if (PersonalUseCodeRel.ChangeMethodBelowQualifyingPercentage)
				LocalMethod				= PersonalUseCodeRel.OptionalDepreciationMethod
				if (PersonalUseCodeRel.OptionalDepreciationLife not entered)
					LocalCDB			= ProcessMethod580
				else
					LocalLifeRemaining	+= (PersonalUseCodeRel.OptionalDepreciationLife - LocalLife)
					LocalLife			= PersonalUseCodeRel.OptionalDepreciationLife
					LocalCDB			= ProcessMethod580	
			if (PersonalUseCodeRel.AllowAnnualDepreciationLimit)
				LocalCDB				= 	580LimitOption

		LimitOption is a DerivedField
			type is like InternationalAmount	
			initialize LocalTotalLimits
			if (LocalFirstYear
			and (AssetBookRel.Method = "200DB30%"
			or AssetBookRel.Method = "150DB30%"
			or AssetBookRel.Method = "SL30%"
			or AssetBookRel.Method = "200DB40%"
			or AssetBookRel.Method = "150DB40%"
			or AssetBookRel.Method = "SL40%"
			or AssetBookRel.Method = "200DB50%"
			or AssetBookRel.Method = "150DB50%"
			or AssetBookRel.Method = "SL50%"
			or AssetBookRel.Method = "SL75%"))
				LocalAnnualDepreciation		+= LocalDeprBonus

			if (LocalFirstYear
			and AssetBookRel.Method = "100%BONUS")
				LocalAnnualDepreciation		= LocalDeprBonus
			
			I2 = 1
			while (I2 < 21)
				LocalTotalLimits += PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit				
				I2 +=1
				
			if (LocalMethodTableYear > 20)
				I2	= 20
			else
				I2	= LocalMethodTableYear
		
			if (LocalTotalLimits entered)
				while (I2 > 1
				and PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit > 0
				and PersonalUseCodeRel.AllowPostRecoveryDeduction = false)
					I2 -= 1
				
				if (LocalAnnualDepreciation entered)
					if (PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit < LocalAnnualDepreciation)
						LocalDeprCompare	= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit
					else
						LocalDeprCompare	= LocalAnnualDepreciation
				else
					LocalDeprCompare		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit
					
				if (LocalAnnualDepreciation not entered
				and LocalProgram		= "AM255")
					LocalDeprCompare		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit	 
						
				LocalDeprCPAllow			= LocalAnnualDepreciation
				if ((LocalAnnualDepreciation entered
				and LocalDeprCompare		< LocalAnnualDepreciation)
				or  (LocalAnnualDepreciation <= 0
				and LocalDeprCompare	> LocalAnnualDepreciation))
					if (!LocalFirstYear)
						if (LocalAnnualDepreciation entered)
							LocalAnnualDepreciation	= LocalDeprCompare
					else
						if (AssetBookRel.Method = "200DB30%"
						or AssetBookRel.Method = "150DB30%"
						or AssetBookRel.Method = "100%BONUS"
						or AssetBookRel.Method = "SL30%"
						or AssetBookRel.Method = "200DB40%"
						or AssetBookRel.Method = "150DB40%"
						or AssetBookRel.Method = "SL40%"
						or AssetBookRel.Method = "200DB50%"
						or AssetBookRel.Method = "150DB50%"
						or AssetBookRel.Method = "SL50%"
						or AssetBookRel.Method = "SL75%")
							LocalAnnualDepreciation -= LocalDeprBonus
							LocalCDB				=  FirstYearLimit
							
					if (LocalFirstYear
					and AssetBookRel.Method = "200DB30%"
					and AssetBookRel.Method = "150DB30%"
					and AssetBookRel.Method = "SL30%"
					and AssetBookRel.Method = "100%BONUS"
					and AssetBookRel.Method = "200DB40%"
					and AssetBookRel.Method = "150DB40%"
					and AssetBookRel.Method = "SL40%"
					and AssetBookRel.Method = "200DB50%"
					and AssetBookRel.Method = "150DB50%"
					and AssetBookRel.Method = "SL50%"
					and AssetBookRel.Method = "SL75%")
						if (LocalAnnualDepreciation > LocalDeprBonus)
							LocalAnnualDepreciation -= LocalDeprBonus
							LocalAnnualDepreciation	*= 12
							LocalAnnualDepreciation /= LocalProcessedMonths
						else
							if ((LocalProgram = "AM180"
							or  LocalProgram = "AM280"
							or  LocalProgram  ="AM255")
							and LocalDeprYTD entered)
								LocalDeprYTD		+= LocalDeprBonus
								LocalDeprLTD		+= LocalDeprBonus
								LocalDeprBonus		=  LocalAnnualDepreciation
								LocalDeprYTD		-= LocalDeprBonus
								LocalDeprLTD		-= LocalDeprBonus
							else
								LocalDeprBonus		=  LocalAnnualDepreciation
							
							if (AssetBookRel.Method = "100%BONUS"
							and LocalMethodYear = 1)
								LocalASBDeprLTD		= LocalAnnualDepreciation
						
						initialize LocalAnnualDepreciation
						
				else
					if (LocalFirstYear
					and LocalProgram = "AM20"
					and (AssetBookRel.Method = "200DB30%"
					or	AssetBookRel.Method = "150DB30%"
					or	AssetBookRel.Method = "SL30%"
					or	AssetBookRel.Method = "100%BONUS"
					or	AssetBookRel.Method = "200DB40%"
					or	AssetBookRel.Method = "150DB40%"
					or	AssetBookRel.Method = "SL40%"
					or	AssetBookRel.Method = "200DB50%"
					or	AssetBookRel.Method = "150DB50%"
					or	AssetBookRel.Method = "SL50%"
					or	AssetBookRel.Method = "SL75%"))
						LocalAnnualDepreciation -= 	LocalDeprBonus

		580LimitOption is a DerivedField
			type is like InternationalAmount	
			initialize LocalTotalLimits
			if (LocalFirstYear
			and Convention.HalfYear
			and LocalAnnualDepreciation != 0)
				LocalAnnualDepreciation /= 2

			if (LocalAssetBook not entered)
				LocalAssetBook = AssetBookRel.AssetBook

			if (LocalMethod not entered
			or LocalMethod != LocalAssetBook.Method)
				LocalMethod = LocalAssetBook.Method

			if (LocalFirstYear
			and (LocalMethod = "200DB30%"
			or LocalMethod = "SL40%"
			or LocalMethod = "200DB75%"
			or LocalMethod = "150DB75%"
			or LocalMethod = "SL75%"
			or LocalMethod = "200DB40%"
			or LocalMethod = "150DB40%"
			or LocalMethod = "150DB30%"
			or LocalMethod = "SL30%"
			or LocalMethod = "200DB50%"
			or LocalMethod = "150DB50%"
			or LocalMethod = "SL50%"
			or LocalMethod = "SL20%"
			or LocalMethod = "200DB20%"
			or LocalMethod = "150DB20%"
			or LocalMethod = "SL60%"
			or LocalMethod = "200DB60%"
			or LocalMethod = "150DB60%"
			or LocalMethod = "SL80%"
			or LocalMethod = "200DB80%"
			or LocalMethod = "150DB80%"))
				LocalAnnualDepreciation		+= LocalDeprBonus

			if (LocalFirstYear
			and LocalAssetBook.Method = "100%BONUS")
				LocalAnnualDepreciation		= LocalDeprBonus
			
			I2 = 1
			while (I2 < 21)
				LocalTotalLimits += PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit				
				I2 +=1
			if (LocalMethodTableYear > 20)
				I2	= 20
			else
				I2	= LocalMethodTableYear
			if (LocalTotalLimits entered)
				while (I2 > 1
				and PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit > 0
				and PersonalUseCodeRel.AllowPostRecoveryDeduction = false)
					I2 -= 1
				if (LocalAnnualDepreciation entered)
					if (PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit < LocalAnnualDepreciation)
						LocalDeprCompare	= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit
					else
						LocalDeprCompare	= LocalAnnualDepreciation
				else
					LocalDeprCompare		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit
				if (LocalAnnualDepreciation not entered
				and LocalProgram		= "AM255")
					LocalDeprCompare		= PersonalUseCodeRel.DepreciationLimitArray.DepreciationLimitGroup[I2].DepreciationLimit	 
						
				LocalDeprCPAllow			= LocalAnnualDepreciation
				if ((LocalAnnualDepreciation > 0
				and LocalDeprCompare		< LocalAnnualDepreciation)
				or  (LocalAnnualDepreciation <= 0
				and LocalDeprCompare	> LocalAnnualDepreciation))
					if (!LocalFirstYear)
						LocalAnnualDepreciation	= LocalDeprCompare
					else
						if (LocalMethod = "200DB30%"
						or LocalMethod = "SL40%"
						or LocalMethod = "200DB75%"
						or LocalMethod = "150DB75%"
						or LocalMethod = "SL75%"
						or LocalMethod = "200DB40%"
						or LocalMethod = "150DB40%"
						or LocalMethod = "150DB30%"
						or LocalMethod = "SL30%"
						or LocalMethod = "200DB50%"
						or LocalMethod = "150DB50%"
						or LocalMethod = "SL50%"
						or LocalMethod = "SL20%"
						or LocalMethod = "200DB20%"
						or LocalMethod = "150DB20%"
						or LocalMethod = "SL60%"
						or LocalMethod = "200DB60%"
						or LocalMethod = "150DB60%"
						or LocalMethod = "SL80%"
						or LocalMethod = "200DB80%"
						or LocalMethod = "150DB80%")
							LocalAnnualDepreciation -= LocalDeprBonus
						LocalCDB				=  580FirstYearLimit
							
					if (LocalFirstYear
					and (LocalMethod = "200DB30%"
					or LocalMethod = "150DB30%"
					or LocalMethod = "SL30%"
					or LocalMethod = "SL40%"
					or LocalMethod = "200DB75%"
					or LocalMethod = "150DB75%"
					or LocalMethod = "SL75%"
					or LocalMethod = "200DB40%"
					or LocalMethod = "150DB40%"
					or LocalMethod = "100%BONUS"
					or LocalMethod = "200DB50%"
					or LocalMethod = "150DB50%"
					or LocalMethod = "SL50%"
					or LocalMethod = "SL20%"
					or LocalMethod = "200DB20%"
					or LocalMethod = "150DB20%"
					or LocalMethod = "SL60%"
					or LocalMethod = "200DB60%"
					or LocalMethod = "150DB60%"
					or LocalMethod = "SL80%"
					or LocalMethod = "200DB80%"
					or LocalMethod = "150DB80%"))
						if (LocalAnnualDepreciation > LocalDeprBonus)
							LocalAnnualDepreciation -= LocalDeprBonus
							LocalAnnualDepreciation	*= 12
							LocalAnnualDepreciation /= LocalProcessedMonths
						else
							if ((LocalProgram = "AM180"
							or  LocalProgram = "AM280"
							or  LocalProgram  ="AM255")
							and LocalDeprYTD entered)
								LocalDeprYTD		+= LocalDeprBonus
								LocalDeprLTD		+= LocalDeprBonus
								LocalDeprBonus		=  LocalAnnualDepreciation
								LocalDeprYTD		-= LocalDeprBonus
								LocalDeprLTD		-= LocalDeprBonus
							else
								LocalDeprBonus		=  LocalAnnualDepreciation
							
								if (LocalMethod = "100%BONUS"
								and LocalMethodTableYear = 1)
									LocalASBDeprLTD		= LocalAnnualDepreciation
						
							initialize LocalAnnualDepreciation
						
				else
					if (LocalFirstYear
					and LocalProgram = "AM20"
					and (LocalMethod = "200DB30%"
					or	LocalMethod = "150DB30%"
					or	LocalMethod = "SL30%"
					or	LocalMethod = "SL40%"
					or	LocalMethod = "200DB75%"
					or	LocalMethod = "150DB75%"
					or	LocalMethod = "SL75%"					
					or	LocalMethod = "200DB40%"
					or	LocalMethod = "150DB40%"
					or	LocalMethod = "100%BONUS"
					or	LocalMethod = "200DB50%"
					or	LocalMethod = "150DB50%"
					or	LocalMethod = "SL50%"
					or	LocalMethod = "SL20%"
					or	LocalMethod = "200DB20%"
					or	LocalMethod = "150DB20%"
					or	LocalMethod = "SL60%"
					or	LocalMethod = "200DB60%"
					or	LocalMethod = "150DB60%"))
						LocalAnnualDepreciation -= 	LocalDeprBonus

		FirstYearLimit is a DerivedField
			type is like InternationalAmount	
			LocalDone = false
			if (!AssetBookRel.Method = "200DB"
			and !AssetBookRel.Method = "175DB"
			and !AssetBookRel.Method = "150DB"
			and !AssetBookRel.Method = "125DB"
			and !AssetBookRel.Method = "SL"
			and !AssetBookRel.Method = "SYD"
			and !AssetBookRel.Method = "ACCT-LEVEL"
			and !AssetBookRel.Method = "150DB30%"
			and !AssetBookRel.Method = "200DB30%"
			and !AssetBookRel.Method = "SL30%"
			and !AssetBookRel.Method = "150DB40%"
			and !AssetBookRel.Method = "200DB40%"
			and !AssetBookRel.Method = "SL40%"
			and !AssetBookRel.Method = "100%BONUS"
			and !AssetBookRel.Method = "200DB50%"
			and !AssetBookRel.Method = "150DB50%"
			and !AssetBookRel.Method = "SL50%"
			and !AssetBookRel.Method = "SL75%")
				LocalMethod		= AssetBookRel.Method
				if ((MethodRel exists)
				and (MethodRel.RecordType.Percent
				or MethodRel.RecordType.UnitsOfProduction)
				and	LocalDeprCompare > LocalAnnualDepreciation)
					LocalAnnualDepreciation	= LocalDeprCompare
					LocalDone = true
			
			if (!LocalDone)
				LocalCDB 							 = FirstYearMonths
				
			LocalAnnualDepreciationTemp				 = LocalDeprBonus + LocalAnnualDepreciation
			LocalAnnualDepreciationTemp				*= LocalProcessedMonths
			LocalAnnualDepreciationTemp				/= 12
					
			if (LocalNumberOfDepreciationPeriodsClosedSave entered
			and LocalStartDate	 > LocalPrevYearEndDate
			and LocalProgram	= "AM20")
				LocalAnnualDepreciationTemp 		=  LocalAnnualDepreciationTemp / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				LocalAnnualDepreciationTemp 		*= LocalNumberOfDepreciationPeriodsClosedSave	
						
			if (AssetBookRel.Method = "200DB30%"
			or  AssetBookRel.Method = "150DB30"
			or  AssetBookRel.Method = "SL30%"
			or  AssetBookRel.Method = "100%BONUS"
			or  AssetBookRel.Method = "200DB40%"
			or  AssetBookRel.Method = "150DB40%"
			or  AssetBookRel.Method = "SL40%"
			or  AssetBookRel.Method = "200DB50%"
			or  AssetBookRel.Method = "150DB50%"
			or  AssetBookRel.Method = "SL50%"
			or  AssetBookRel.Method = "SL75%")
				if ((LocalAnnualDepreciation > 0
				and LocalDeprCompare		< LocalAnnualDepreciationTemp)
				or  (LocalAnnualDepreciation < 0
				and LocalDeprCompare		> LocalAnnualDepreciationTemp))
					LocalAnnualDepreciation	= LocalDeprCompare
				else
					LocalAnnualDepreciation *= LocalProcessedMonths
					LocalAnnualDepreciation /= 12
					LocalAnnualDepreciation += LocalDeprBonus
			else
				if ((LocalAnnualDepreciation		> 0
				and  LocalDeprCompare 				< ((LocalAnnualDepreciation * LocalProcessedMonths)/12))
				or  (LocalAnnualDepreciation		< 0
				and  LocalDeprCompare      			> ((LocalAnnualDepreciation * LocalProcessedMonths)/12)))
					LocalAnnualDepreciation			= LocalDeprCompare

		580FirstYearLimit is a DerivedField
			type is like InternationalAmount	
			LocalDone = false
			if (!LocalMethod = "200DB"
			and !LocalMethod = "175DB"
			and !LocalMethod = "150DB"
			and !LocalMethod = "125DB"
			and !LocalMethod = "SL"
			and !LocalMethod = "SYD"
			and !LocalMethod = "ACCT-LEVEL"
			and !LocalMethod = "150DB30%"
			and !LocalMethod = "200DB30%"
			and !LocalMethod = "SL40%"
			and !LocalMethod = "200DB75%"
			and !LocalMethod = "150DB75%"
			and !LocalMethod = "SL75%"
			and !LocalMethod = "150DB40%"
			and !LocalMethod = "200DB40%"
			and !LocalMethod = "SL30%"
			and !LocalMethod = "200DB50%"
			and !LocalMethod = "150DB50%"
			and !LocalMethod = "SL50%"
			and !LocalMethod = "200DB20%"
			and !LocalMethod = "150DB20%"
			and !LocalMethod = "SL20%"
			and !LocalMethod = "200DB60%"
			and !LocalMethod = "150DB60%"
			and !LocalMethod = "SL60%"
			and !LocalMethod = "200DB80%"
			and !LocalMethod = "150DB80%"
			and !LocalMethod = "SL80%")
				LocalMethod		= AssetBookRel.Method
				if ((MethodRel exists)
				and (MethodRel.RecordType.Percent
				or MethodRel.RecordType.UnitsOfProduction)
				and	((LocalAnnualDepreciation > 0 
				and LocalDeprCompare < LocalAnnualDepreciation) 
				or (LocalAnnualDepreciation < 0 
				and LocalDeprCompare > LocalAnnualDepreciation)))	
					LocalAnnualDepreciation	= LocalDeprCompare
					LocalDone = true
			
			if (!LocalDone)
				LocalCDB 							 = FirstYearMonths650
				
				LocalAnnualDepreciationTemp				 = LocalAnnualDepreciation * LocalProcessedMonths
				LocalAnnualDepreciationTemp				/= 12
				LocalAnnualDepreciationTemp				+= LocalDeprBonus
				if (LocalNumberOfDepreciationPeriodsClosedSave entered
				and LocalStartDate	 > LocalPrevYearEndDate
				and LocalProgram	= "AM20")
					LocalAnnualDepreciationTemp 		=  LocalAnnualDepreciationTemp / CurrentBookCalendarsRel.DepreciationPeriodsPerYear
					LocalAnnualDepreciationTemp 		*= LocalNumberOfDepreciationPeriodsClosedSave
							
				if (LocalMethod = "200DB30%"
				or LocalMethod = "150DB30%"
				or LocalMethod = "SL40%"
				or LocalMethod = "200DB75%"
				or LocalMethod = "150DB75%"
				or LocalMethod = "SL75%"
				or LocalMethod = "200DB40%"
				or LocalMethod = "150DB40%"
				or LocalMethod = "SL30%"
				or LocalMethod = "200DB50%"
				or LocalMethod = "150DB50%"
				or LocalMethod = "SL50%"
				or LocalMethod = "SL20%"
				or LocalMethod = "200DB20%"
				or LocalMethod = "150DB20%"
				or LocalMethod = "SL60%"
				or LocalMethod = "200DB60%"
				or LocalMethod = "150DB60%"
				or LocalMethod = "SL80%"
				or LocalMethod = "200DB80%"
				or LocalMethod = "150DB80%")
					if ((LocalAnnualDepreciation > 0
					and LocalDeprCompare		< LocalAnnualDepreciationTemp)
					or  (LocalAnnualDepreciation < 0
					and LocalDeprCompare		> LocalAnnualDepreciationTemp))
						LocalAnnualDepreciation	= LocalDeprCompare
					else
						LocalAnnualDepreciation *= LocalProcessedMonths
						LocalAnnualDepreciation /= 12
						LocalAnnualDepreciation += LocalDeprBonus
				else
					if ((LocalAnnualDepreciation		> 0
					and  LocalDeprCompare 				< ((LocalAnnualDepreciation * LocalProcessedMonths)/12))
					or  (LocalAnnualDepreciation		< 0
					and  LocalDeprCompare      			> ((LocalAnnualDepreciation * LocalProcessedMonths)/12)))
						LocalAnnualDepreciation			= LocalDeprCompare
						
						
		RecaptureDepr is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalTotalPUHDepreciation
			initialize LocalTotalRCPDepreciation
			for each PersonalUseHistoryRel
				LocalTotalPUHDepreciation 				+= each.YearlyDepreciationAllowed
			
			initialize LocalRecapDate	
			for each AssetRecaptureRel
				LocalTotalRCPDepreciation				+= each.RecaptureAmount
			
				
			LocalTempDeprLTD							= LocalDeprLTD
			LocalTempDeprYTD							= LocalDeprYTD
			LocalTempLifeRemaining						= LocalLifeRemaining
			LocalTempLife								= LocalLife
			
			if (PersonalUseCodeRel.ChangeMethodBelowQualifyingPercentage)
				LocalTempMethod							= LocalMethod
				LocalMethod								= PersonalUseCodeRel.OptionalDepreciationMethod
				if (PersonalUseCodeRel.OptionalDepreciationLife entered)
					LocalLife							= PersonalUseCodeRel.OptionalDepreciationLife
				else
					LocalLifeRemaining					= LocalLife				
				
			if (PersonalUseCodeRel.ChangeMethodBelowQualifyingPercentage)
				initialize LocalDeprLTD
				initialize LocalDeprYTD	
				LocalCDB 								 = XFunction
			else
				LocalDeprLTD							-= LocalDeprYTD
			
			LocalRecpAmount								=  LocalTotalPUHDepreciation * 100
			LocalRecpAmount								-= LocalTotalRCPDepreciation * 100
			LocalRecpAmount								-= LocalDeprLTD * LocalBusUseTmp
			LocalRecpAmount								/= 100
			
			LocalDeprLTD								= LocalTempDeprLTD
			LocalDeprYTD								= LocalTempDeprYTD
			LocalLifeRemaining							= LocalTempLifeRemaining
			LocalLife									= LocalTempLife
			if (LocalRecpAmount entered)
				LocalRecapType							= "D"
				LocalRecapDate							= LocalEndDate
				if (AssetRecaptureRel1 exists)
					invoke Update AssetRecaptureRel
						invoked.RecaptureAmount			= LocalRecpAmount
				else
					invoke Create AssetRecapture
						invoked.AssetRecapture.RecaptureType	= "D"
						invoked.Asset							= InAsset
						invoked.Book							= InBook
						invoked.AssetRecapture.RecaptureDate	= LocalEndDate
						invoked.RecaptureAmount					= LocalRecpAmount
						invoked.TransactionNumberOfDecimals		= AssetBookRel.TransactionNumberOfDecimals
        				
		XFunction is a DerivedField	
			type is like InternationalAmount	
			restricted				
			LocalSkip									= false
			if (AssetBookRel.Convention.HalfYear)
				LocalStartDate							= AssetBookRel.InServiceDate	
			else
				if (AssetBookRel.Convention.ModifiedHalfYear
				and AssetBookRel.InServiceDate 			> AssetBookRel.DepreciationStartDate)
					LocalStartDate						= AssetBookRel.InServiceDate
				else
					LocalStartDate						= AssetBookRel.DepreciationStartDate
					
			if (LocalMethod 							= "UOP")
				LocalMethodTableYear						= 1
			
			if (LocalStartDate							> LocalEndDate)				
				LocalSkip								= true
				
			if (!LocalSkip)
				LocalFirstLastFl						= "F"
				LocalNumberOfDepreciationPeriodsClosedSave	= LocalNumberOfDepreciationPeriodsClosed
				initialize LocalNumberOfDepreciationPeriodsClosed		
															
				
				while ((LocalStartDate > LocalEndDate
				or LocalStartDate <= LocalPrevYearEndDate)
				and (LocalLifeRemaining entered
				or LocalMethod		= "UOP"))	
					LocalCDB 							= PreviousYears590			
				
				if (AssetBookRel.InServiceDate 			<= LocalPrevYearEndDate
				and LocalFirstYear)
					LocalMethodTableYear				+= 1
					LocalFirstLastFl					= "M"
				
			else
				if (!LocalMethod					= "UOP")
					initialize LocalMethodTableYear
								
					
						
		PreviousYears590 is a DerivedField		
			type is like InternationalAmount
			restricted
			if (LocalFirstYear)
				LocalCDB				= FirstYearDepreciation590
				LocalFirstLastFl		= "M"
			else
				if (LocalLastYear)
					LocalCDB			= LastYearDepreciation590
				else
					LocalCDB			= ProcessMethod
					
			LocalDeprLTD				+= LocalAnnualDepreciation
			LocalStartDate year 		+= 1
			LocalMethodTableYear 		+= 1
			
			if (!LocalMethod			= "UOP")
				LocalLifeRemaining		-= LocalProcessedMonths
				if (!LocalLifeRemaining	> 12
				and LocalLifeRemaining entered
				and !LocalMethod		= "UOP")
					LocalFirstLastFl	= "L"
				
		FirstYearDepreciation590 is a DerivedField
			type is like InternationalAmount
			restricted
			if (Convention not entered)
				Convention = LocalAssetBook.Convention
			LocalCDB				= ProcessMethod
			
			LocalSkip				= false
			if (!LocalMethod		= "UOP")
				LocalSkip				= true
			
			if (!LocalSkip)	
				LocalCDB			= FirstYearMonths
				if (LocalRecordType	= "P"
				and MethodPercentTableRel exists)
					LocalSkip		= true
					
			if (!LocalSkip)
				if (Convention.FullMonth
				or 	Convention.ModifiedHalfMonth
				or 	Convention.ActualDays
				or 	Convention.MidQuarter
				or 	Convention.MidMonth)
					LocalAnnualDepreciation	*= LocalProcessedMonths
					LocalAnnualDepreciation	/= 12
				else
					if (Convention.HalfYear)
						LocalAnnualDepreciation	/= 2
					else
						if (Convention.ModifiedHalfYear
						and LocalProcessedMonths not entered)
							initialize LocalAnnualDepreciation
						
		LastYearDepreciation590 is a DerivedField
			type is like InternationalAmount	
			restricted
			LocalCDB					= ProcessMethod
			if (!LocalMethod			= "UOP")
				LocalProcessedMonths	= LocalLifeRemaining
				
		PeriodUOPDepreciation is a DerivedField
			type is like InternationalAmount
			restricted				
			initialize LocalPDUnitsYTD
			initialize LocalPDUnitsCP
			I1 = 1
			while (!I1 > 55
			or !I3 > HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear)
				if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered)
					LocalPDUnitsYTD	+= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1]
				else
					LocalPDUnitsYTD	+= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1]
				I1 += 1	
					
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AE")
				LocalAmmTotalUnits	-= MethodUnitsOfProductionYearRel.ActualYearlyUnitsOfProduction
				LocalAmmTotalUnits	+= LocalPDUnitsYTD
				
				LocalAnnualDepreciation  = LocalAdjBasis * LocalPDUnitsYTD
				LocalAnnualDepreciation /= LocalAmmTotalUnits
				
			LocalCurrPd = HistoryYearBookCalendarsRel3.NumberOfPeriodCloseRuns	
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AO")
				LocalPDUnitsYTD			= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction	
				I1 = 1
				while (!I1 > LocalCurrPd)
					if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered)
						LocalPDUnitsCP += MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1]
					I1 += 1	
			else
				if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "EO")
					LocalPDUnitsYTD			= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction	
					I1 = 1
					while (!I1 > LocalCurrPd)
						if (MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1] entered)
							LocalPDUnitsCP += MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1]
						I1 += 1
				else
					I1 = 1
					while (!I1 > LocalCurrPd)
						if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered)
							LocalPDUnitsCP += MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1]
						else
							LocalPDUnitsCP += MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1]
						I1 += 1		
						
			LocalDeprYTD 		= LocalPDUnitsCP / LocalPDUnitsYTD
			LocalDeprYTD		*= LocalAnnualDepreciation
			LocalDeprYTDAllow 	= LocalPDUnitsCP / LocalPDUnitsYTD
			LocalDeprYTD		*= LocalPUAnnualDepreciation

		AdjustDeprPeriods is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalInsrvPdSW								= false
			LocalNumberOfAdjDepreciationPeriodsClosed	= 0
			if (LocalDepreciationPeriodsPerYear not entered)
				LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
			I1 = 1
			while (I1 < LocalDepreciationPeriodsPerYear
			or	    LocalInsrvPdSW = true)
				if (!LocalStartDate	> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1])
					LocalInsrvPdSW = true
				else
					LocalNumberOfAdjDepreciationPeriodsClosed	+= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I1]
				I1 += 1
					
			if (LocalNumberOfDepreciationPeriodsClosed 		> LocalNumberOfAdjDepreciationPeriodsClosed)
				LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
				LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
			else												
				I1 -= 1
				
				if (I1 = 1)
					LocalYearBeginDate day		= LocalYearBeginDate day -1
					LocalTmpFromDate			= LocalYearBeginDate
				else
					I8 = I1 - 1
					LocalTmpFromDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I8]
				
				LocalNumberOfPeriodDays	= LocalTmpFromDate day - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1] day
				
				LocalNbrDays		= LocalStartDate day - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1] day
				LocalNbrDays		+= 1
				
				LocalAdjNbrDeprPd	= LocalNbrDays * LocalNumberOfDepreciationPeriodsPd
				LocalAdjNbrDeprPd	/= LocalAdjNbrDeprPd
				
				LocalAdjNbrDeprPdClosed	= LocalNumberOfAdjDepreciationPeriodsClosed +(LocalNumberOfDepreciationPeriodsPd - LocalAdjNbrDeprPd)
				
		AdjustDeprPeriods610 is a DerivedField
			type is like InternationalAmount
			restricted				
			LocalInsrvPdSW								= false
			LocalNumberOfAdjDepreciationPeriodsClosed	= 0
			I1 = 1
			while (I1 <= LocalDepreciationPeriodsPerYear
			and	    LocalInsrvPdSW = false)
				if (!LocalStartDate	> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1])
					LocalInsrvPdSW = true
				else
					LocalNumberOfAdjDepreciationPeriodsClosed	+= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I1]
				I1 += 1
					
			if (LocalNumberOfDepreciationPeriodsClosed 		> LocalNumberOfAdjDepreciationPeriodsClosed)
				LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
				LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
			else												
				I1 -= 1
				if (I1 = 1)
					LocalYearBeginDate 			= InYearBeginDate - 1 day
					LocalTmpFromDate			= LocalYearBeginDate
				else
					I8 = I1 - 1
					LocalTmpFromDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I8]
				LocalNumberOfPeriodDays	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1] - LocalTmpFromDate
				LocalNbrDays		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I1] - LocalStartDate
				LocalNbrDays 		+= 1
				NoOfDaysToDepreciateInPeriod = LocalNbrDays
				LocalAdjNbrDeprPd	= NoOfDaysToDepreciateInPeriod * LocalNumberOfDepreciationPeriodsPd
				LocalAdjNbrDeprPd	/= LocalNumberOfPeriodDays 
				LocalNumberOfAdjDepreciationPeriodsPd = LocalAdjNbrDeprPd
				
				LocalNumberOfAdjDepreciationPeriodsClosed	+= (LocalNumberOfDepreciationPeriodsPd - LocalAdjNbrDeprPd)
		CalcDepreciation is a DerivedField
			type is like InternationalAmount	
			restricted
			if (!Convention entered)	
				Convention = AssetBookRel.Convention
			if (!InServiceDate entered)
				InServiceDate = AssetBookRel.InServiceDate	
			if (LocalTcTable entered)
				if (AssetTaxCreditTableRel exists)
					if (AssetTaxCreditTableRel.BasisReductionPercentage entered)
						LocalBasisReductionPercentage = AssetBookRel.Basis * (AssetTaxCreditTableRel.BasisReductionPercentage/100)
					else
						initialize LocalBasisReductionPercentage
				else
					initialize LocalBasisReductionPercentage
					
				LocalUOPPdSW = false
				initialize LocalLifeCP
				
				if (Convention.FullYear)
					LocalStartDate					= InServiceDate
					LocalStartDateSave				= InServiceDate
				else
					if (Convention.HalfYear)
						LocalStartDate				= InServiceDate 		
						LocalStartDateSave			= InServiceDate
					else
						if (Convention.ModifiedHalfYear
						and LocalInsrvDate	> LocalStartDate)
							LocalStartDate			= InServiceDate 		
							LocalStartDateSave		= InServiceDate
						else
							LocalStartDate			= LocalDeprStartDate
							LocalStartDateSave		= LocalDeprStartDate
							
				
				initialize LocalOvrdSW	
				
			if ((!Convention.FullMonth
			and !Convention.ModifiedHalfMonth
			and !Convention.MidQuarter
			and LocalStartDate 			> LocalEndDate)
			or  (!Convention.FullMonth
			and !Convention.MidQuarter
			and InServiceDate > LocalEndDate)
			or 	(Convention.ModifiedHalfMonth
			and LocalStartDate 			<= InServiceDate
			and InServiceDate > LocalEndDate)
			or (Convention.ModifiedHalfMonth
			and LocalStartDate 				> InServiceDate 
			and LocalStartDate 				> LocalEndDate)
			or (LocalLife entered
			and LocalLifeRemaining entered
			and !LocalFirstLastFl		= "P"
			and AssetBookRel.PersonalUseCode not entered))
				initialize LocalAnnualDepreciation
				initialize LocalPUAnnualDepreciation
				initialize LocalDeprCP
				initialize LocalDeprCPAllow
				initialize LocalLifeCP
				initialize LocalProcessedMonths
			else
				if (LocalFirstYear)
					initialize LocalDeprBonus
					initialize LocalDeprBonusFull
					initialize LocalDeprBonusAllow
					LocalCDB				= FirstYearAlloc
				else
					if (LocalLastYear)
						initialize LocalDeprBonus
						initialize LocalDeprBonusFull
						initialize LocalDeprBonusAllow
						if (AssetBookRel.Method	= "100%Bonus"
						and AssetBookRel.PersonalUseCode entered)
							if (LocalOptMethod entered)
								LocalMethod	= LocalOptMethod
							else
								LocalMethod	= "200DB"
						LocalCDB				= LastYearAlloc
					else
						initialize LocalDeprBonus
						initialize LocalDeprBonusFull
						initialize LocalDeprBonusAllow
						if (LocalMethod = "100%Bonus"
						and AssetBookRel.PersonalUseCode entered)
							if (LocalOptMethod entered)
								LocalMethod	= LocalOptMethod
							else
								LocalMethod	= "200DB"
						LocalCDB				= MiddleYearAlloc

		FirstYearAlloc is a DerivedField
			type is like InternationalAmount
			restricted
			LocalCDB	= FirstYearDepreciation
			LocalSkip	= false
			if (LocalAnnualDepreciation not entered
			and !LocalMethod	= "200DB30%"
			and !LocalMethod	= "150DB30%"
			and !LocalMethod	= "SL30%"
			and !LocalMethod	= "100%BONUS"
			and !LocalMethod	= "200DB40%"
			and !LocalMethod	= "150DB40%"
			and !LocalMethod	= "SL40%"
			and !LocalMethod	= "200DB50%"
			and !LocalMethod	= "150DB50%"
			and !LocalMethod	= "SL50%"
			and !LocalMethod	= "SL75%")
				initialize LocalDeprCP
				initialize LocalDeprCPAllow
				initialize LocalLifeCP
				initialize LocalLifeCP11
				LocalSkip 		= true
			
			if (!LocalSkip)
				if (LocalAnnualDepreciation not entered
				and LocalDeprBonus			not entered
				and LocalMethod	= "200DB30%"
				or  LocalMethod	= "150DB30%"
				or  LocalMethod	= "SL30%"
				or  LocalMethod	= "100%BONUS"
				or  LocalMethod	= "200DB40%"
				or  LocalMethod	= "150DB40%"
				or LocalMethod	= "SL40%"
				or  LocalMethod	= "200DB50%"
				or  LocalMethod	= "150DB50%"
				or LocalMethod	= "SL50%"
				or LocalMethod	= "SL75%")
					initialize LocalDeprCP
					initialize LocalDeprCPAllow
					initialize LocalLifeCP
					initialize LocalLifeCP11
					LocalSkip = true
					
			if (!LocalSkip)
				if (AssetBookRel.Convention.ActualDays)
					if (LocalLife		= LocalLifeRemaining
					and LocalLife		entered)
						LocalCDB		= AdjustDeprPeriods    
					else
						LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
						LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
				else
					LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
					LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
				if (AssetBookRel.Convention.MidMonth)
					if (LocalDeprLTD not entered
					and LocalNbrCalPd >= 12)  
						LocalNumberOfAdjDepreciationPeriodsClosed += LocalNumberOfAdjDepreciationPeriodsPd * 0.5
						
				if (AssetBookRel.Convention.MidMonth
				and LocalDeprLTD not entered
				and LocalNbrCalPd >= 12
				and (LocalProgram = "AM180"
				or  LocalProgram = "AM280"
				or  LocalProgram = "AM255")
				and CurrentBookCalendarsRel.NumberOfPeriodCloseRuns  > 0
				and LocalDeprStartDate <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns])
					LocalNumberOfAdjDepreciationPeriodsClosed -= LocalNumberOfAdjDepreciationPeriodsPd * 0.5
					
				if (LocalInactYear entered
				and !LocalShortYear
				and !LocalOvrdSW)
					LocalAnnualDepreciation 		*= LocalProcessedMonths 
					LocalAnnualDepreciation 		-= (LocalInactYear * LocalAnnualDepreciation)
					if (LocalProcessedMonths > 0)
						LocalAnnualDepreciation 		/= LocalProcessedMonths
					LocalAnnualDepreciationSave		= LocalAnnualDepreciation
					
					LocalPUAnnualDepreciation 		*= LocalProcessedMonths
					LocalPUAnnualDepreciation 		-= (LocalInactYear * LocalPUAnnualDepreciation)
					if (LocalProcessedMonths > 0)
						LocalPUAnnualDepreciation 		/= LocalProcessedMonths
					LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation
					
				if (LocalLife < 12
				and LocalTmpProcessedMonths > LocalLife)
					LocalDeprCP				= LocalNumberOfAdjDepreciationPeriodsPd * LocalAnnualDepreciationSave
					if (LocalLife > 0)
						LocalDeprCP				/= LocalLife
					LocalDeprCP				*= 12
					if (HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear > 0)
						LocalDeprCP			/= HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
					LocalTempDeprCP			= LocalPUAnnualDepreciationSave - LocalDeprYTD
					
					if ((LocalDeprCP entered
					and LocalDeprCP			> LocalTempDeprCP)
					or  (LocalDeprCP 		< 0
					and LocalDeprCP			< LocalTempDeprCP))
						LocalDeprCP			= LocalTempDeprCP
				else
					LocalDeprCP				= LocalNumberOfAdjDepreciationPeriodsPd * LocalAnnualDepreciationSave
					LocalDeprCP				-= LocalDeprYTD
					if (HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear > 0)
						LocalDeprCP				/= HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
					LocalDeprCP				-= LocalNumberOfAdjDepreciationPeriodsClosed
					
				if (LocalLife < 12
				and LocalTmpProcessedMonths > LocalLife)
					LocalDeprCPAllow		= LocalNumberOfAdjDepreciationPeriodsPd * LocalPUAnnualDepreciationSave
					if (LocalLife > 0)
						LocalDeprCPAllow		/= LocalLife
					LocalDeprCPAllow		*= 12/HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
					
					LocalTempDeprCP			= LocalPUAnnualDepreciationSave
					LocalTempDeprCP			-= LocalDeprYTDAllow
			
					if ((LocalDeprCPAllow 	> 0
					and LocalDeprCPAllow	> LocalTempDeprCP)
					or  (LocalDeprCPAllow 	< 0
					and LocalDeprCPAllow    < LocalTempDeprCP))
						LocalDeprCPAllow	= LocalTempDeprCP
				else
					LocalDeprCPAllow		=  LocalNumberOfAdjDepreciationPeriodsPd * LocalPUAnnualDepreciationSave
					LocalDeprCPAllow	   	-= LocalDeprYTDAllow
					if (HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear > 0)
						LocalDeprCPAllow		/= HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
					LocalDeprCPAllow		-= LocalNumberOfAdjDepreciationPeriodsClosed
					
			
			if (LocalLife entered
			and !LocalFirstLastFl		= "P")
				if (LocalLife 				< 12
				and LocalTmpProcessedMonths	> LocalLife)
					LocalLifeCP				= LocalNumberOfAdjDepreciationPeriodsPd * LocalProcessedMonths
					LocalLifeCP				-= LocalInactYear	
					if (LocalLife > 0)
						LocalLifeCP				/= LocalLife	
					LocalLifeCP				*= 12/HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear
					
					if (LocalLifeCP > LocalLifeRemaining)
						LocalLifeCP = LocalLifeRemaining
				else
					LocalLifeCP				= (LocalNumberOfAdjDepreciationPeriodsPd * (LocalProcessedMonths - (LocalLife - (LocalLifeRemaining - LocalInactYear))))
					LocalHisRemainPds		= HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear - LocalNumberOfAdjDepreciationPeriodsClosed
					if (LocalHisRemainPds > 0)
						LocalLifeCP			/= (HistoryYearBookCalendarsRel3.DepreciationPeriodsPerYear - LocalNumberOfAdjDepreciationPeriodsClosed)
						
			LocalSkip = false
			if (LocalUOPPdSW)	
				if (LocalProgram = "AM255"
				and LocalProgramOption	= "A")
					LocalDeprCP				= LocalAnnualDepreciation
					LocalDeprCPAllow		= LocalAnnualDepreciation
				else
					LocalCDB				= CalcDeprCP  
					if (LocalLifeCP			< LocalLifeRemaining
					and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfAdjDepreciationPeriodsClosed)
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalTempDeprCP		= LocalPUAnnualDepreciation - LocalDeprYTDAllow
			
				LocalSkip = true
			
			if (!LocalSkip)
				if (AssetBookRel.Convention.MidMonth
				and LocalDeprLTD not entered
				and (LocalProgram = "AM180"
				or  LocalProgram = "AM280"
				or 	LocalProgram = "AM255")
				and CurrentBookCalendarsRel.NumberOfPeriodCloseRuns entered
				and LocalDeprStartDate  <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns])
					LocalSkip = true
			if (!LocalSkip)	
				if (AssetBookRel.Convention.MidMonth
				and LocalLife > LocalLifeRemaining)
					if (LocalNbrCalPd >= 12)
						LocalLifeCP			*= 0.5
						LocalDeprCP			*= 0.5
						LocalDeprCPAllow	*= 0.5
					else
						LocalNbrMonthCalPd		= 12/LocalNbrCalPd
						LocalTempLifeCP			= LocalProcessedMonths
						while (LocalTempLifeCP 	>= LocalNbrMonthCalPd)
							LocalTempLifeCP		-= LocalNbrMonthCalPd
							
						LocalLifeCP				= LocalTempLifeCP
						LocalDeprCP				= ((LocalAnnualDepreciationSave / LocalProcessedMonths) * LocalLifeCP)
						LocalDeprCPAllow		= ((LocalPUAnnualDepreciationSave / LocalProcessedMonths) * LocalLifeCP)
				
				if (LocalAnnualDepreciation not entered
				and LocalDeprYTD not entered
				and LocalMethod	= "200DB30%"
				or  LocalMethod	= "150DB30%"
				or  LocalMethod	= "SL30%"
				or  LocalMethod	= "200DB40%"
				or  LocalMethod	= "150DB40%"
				or  LocalMethod	= "SL40%"
				or  LocalMethod	= "100%BONUS"
				or  LocalMethod	= "200DB50%"
				or  LocalMethod	= "150DB50%"
				or  LocalMethod	= "SL50%"
				or  LocalMethod	= "SL75%")
					initialize LocalDeprCP
					initialize LocalDeprCPAllow
					
				if (AssetBookRel.PersonalUseCode not entered
				and LocalDeprCPAllow != LocalDeprCP)
					LocalDeprCPAllow	= LocalDeprCP
					
				if (AssetBookRel.PersonalUseCode entered
				and AssetBookRel.Method 	= "100%BONUS"
				and LocalDeprCP entered)
					initialize LocalDeprCP
									
		LastYearAlloc is a DerivedField
			type is like InternationalAmount
			restricted	
			LocalCDB					= LastYearDepreciation
			LocalPrevYearEndDate		= LocalYearBeginDate - 1 day
			if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns  > 0)
				LocalTmpFromDate		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns]
			else
				LocalTmpFromDate	 	= LocalPrevYearEndDate
				
			LocalNbrDays				= LocalTmpFromDate day - LocalYearEndDate day
			LocalExpDate				= ((LocalNbrDays -1)*12)	
			LocalExpDate				+= LocalLifeRemaining
			LocalExpDate				*= LocalNbrDays
			LocalExpDate 				/= 12
			
			
			LocalSkip = false
			if (AssetBookRel.Convention.NextMonth)
				if (LocalLife entered
				and !AssetBookRel.FirstAndLastYear = "P")
					LocalLifeCP		= ((LocalNumberOfDepreciationPeriodsPd * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
					
				if (LocalLifeCP				> LocalLifeRemaining)
					LocalLifeCP				= LocalLifeRemaining
					
				if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns entered)
					if (!LocalExpDate		> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns])
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP			= LocalLifeRemaining
						LocalSkip 			= true

				else
					if (!LocalExpDate > LocalPrevYearEndDate)
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP			= LocalLifeRemaining
						LocalSkip 			= true	
				if (!LocalSkip)
					if (LocalAnnualDepreciation not entered)
						initialize LocalDeprCP
						initialize LocalDeprCPAllow
						LocalSkip = true
			else
				if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns entered)
					LocalFromDate	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns]
				else
					LocalFromDate	= LocalPrevYearEndDate
				
				LocalSkip = false
				if (LocalDeprYTD			= LocalDeprLTD
				and LocalInactYear not entered
				and LocalStartDate 			<= LocalFromDate
				and LocalLife				<= 12)
					LocalNbrDays			= LocalPrevYearEndDate day - LocalYearEndDate day 
					LocalExpDate			= ((LocalStartDate day -7) + (LocalLife * LocalNbrDays) / 12)
					if (LocalExpDate		> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns+1])
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP			= LocalLifeRemaining
						LocalSkip			= true
				else
					if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns entered)
						LocalFromDate		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns]
					else
						LocalFromDate		= LocalPrevYearEndDate
					
					LocalActLifeRemaining	= (((LocalExpDate - LocalFromDate)/LocalNbrDays)*12)
					if (LocalActLifeRemaining > ((CurrentBookCalendarsRel.DepreciationPeriodsPerYear - CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed) * (12 / CurrentBookCalendarsRel.DepreciationPeriodsPerYear)))
						initialize LocalTmpDeprPd
						I6	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns + 1
						while (I6 <= 55)
							if (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6] >= LocalExpDate)
								LocalTmpDeprPd	+= 	CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I6]
								end while
							else 
								LocalTmpDeprPd	+= 	CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I6]	
								I6 += 1	
		
						LocalLifeRemaining	= ((LocalTmpDeprPd / CurrentBookCalendarsRel.DepreciationPeriodsPerYear)*12) 
						LocalLifeCP			= ((LocalLifeRemaining * LocalNumberOfDepreciationPeriodsPd)/LocalTmpDeprPd)
						LocalDeprCP			= (((LocalAnnualDepreciation - LocalDeprYTD) * LocalNumberOfDepreciationPeriodsPd)/ LocalTmpDeprPd)
						LocalDeprCPAllow	= LocalDeprCP
						LocalSkip = true
					else
						LocalLifeCP			= (LocalNumberOfDepreciationPeriodsPd /(CurrentBookCalendarsRel.DepreciationPeriodsPerYear - CurrentBookCalendarsRel.NumberOfPeriodCloseRuns)* LocalLifeRemaining)
						LocalDeprCP			= ((LocalAnnualDepreciation - CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * (LocalAnnualDepreciation - LocalDeprYTD))
						LocalDeprCPAllow	= LocalDeprCP
						LocalSkip = true
						
				if (!LocalSkip)
					LocalSkip = false
					if (LocalLife entered
					and !AssetBookRel.FirstAndLastYear = "P")
						LocalLifeCP		= ((LocalNumberOfDepreciationPeriodsPd * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						
					if (LocalLifeCP				> LocalLifeRemaining)
						LocalLifeCP				= LocalLifeRemaining
						
					if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns entered)
						if (!LocalExpDate		> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[CurrentBookCalendarsRel.NumberOfPeriodCloseRuns])
							LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
							LocalDeprCPAllow	= LocalDeprCP
							LocalLifeCP			= LocalLifeRemaining
							LocalSkip 			= true
						else
							LocalSkip 			= true
					else
						if (!LocalExpDate > LocalPrevYearEndDate)
							LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
							LocalDeprCPAllow	= LocalDeprCP
							LocalLifeCP			= LocalLifeRemaining
							LocalSkip 			= true	
					if (!LocalSkip)
						if (LocalAnnualDepreciation not entered)
							initialize LocalDeprCP
							initialize LocalDeprCPAllow
							LocalSkip = true						
					if (!LocalSkip)
						if (LocalUOPPdSW)
							if (LocalProgram 		= "AM255"
							and LocalProgramOption	= "A")
								LocalDeprCP			= LocalAnnualDepreciation
								LocalDeprCPAllow	= LocalAnnualDepreciation
								if (!LocalLifeCP	< LocalLifeRemaining
								and LocalNumberOfDepreciationPeriodsPd	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns)
									LocalDeprCP		= LocalAnnualDepreciation - LocalDeprYTD
								else
									LocalTempDeprCP	= LocalPUAnnualDepreciation - LocalDeprYTDAllow
							else
								LocalCDB								= 625CalcDeprCP  
								if (!LocalLifeCP						< LocalLifeRemaining
								and LocalNumberOfDepreciationPeriodsPd	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns)
									LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
									LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
							LocalSkip = true
					if (!LocalSkip)
						LocalDeprCP	= ((LocalNumberOfDepreciationPeriodsPd * 12) * (LocalAnnualDepreciation - LocalDeprYTD) / (CurrentBookCalendarsRel.DepreciationPeriodsPerYear * LocalLifeRemaining))
						LocalTempDeprCP	= LocalAnnualDepreciation - LocalDeprYTD
						
						if ((LocalDeprCP 						> 0
						and LocalDeprCP 						> LocalTempDeprCP)
						or (LocalDeprCP					 		< 0
						and LocalDeprCP							< LocalTempDeprCP)
						or  LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalDeprCP							= LocalTempDeprCP
							
						LocalDeprCPAllow						= ((LocalNumberOfDepreciationPeriodsPd * 12) * (LocalPUAnnualDepreciation - LocalDeprYTDAllow)) 
						LocalDeprCPAllow						/= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear * LocalLifeRemaining)
						LocalTempDeprCP							= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						
						if ((LocalDeprCPAllow entered
						and LocalDeprCPAllow 					> LocalTempDeprCP)
						or  (LocalDeprCPAllow 					< 0
						and LocalDeprCPAllow 					< LocalTempDeprCP)
						or  LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalDeprCPAllow					= LocalTempDeprCP
							
						if (LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalLifeCP							= LocalLifeRemaining
			
		MiddleYearAlloc is a DerivedField
			type is like InternationalAmount
			restricted	
			LocalCDB					= ComputeAnnualDepreciation
			if (LocalLife entered
			and !AssetBookRel.FirstAndLastYear = "P")
				LocalLifeCP				=  LocalNumberOfDepreciationPeriodsPd *12
				LocalLifeCP				/= CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				
			if (LocalInactYear entered
			and !LocalShortYear
			and !LocalOvrdSW)
				LocalAnnualDepreciation	*= 12
				LocalAnnualDepreciation	-= LocalInactYear
				LocalAnnualDepreciation	*= LocalAnnualDepreciation
				LocalAnnualDepreciation	/= 12
				
			if (LocalInactYear entered
			and !LocalShortYear
			and !LocalOvrdSW)
				LocalPUAnnualDepreciation	*= 12
				LocalPUAnnualDepreciation	-= LocalInactYear
				LocalPUAnnualDepreciation	*= LocalPUAnnualDepreciation
				LocalPUAnnualDepreciation	/= 12				
			LocalDeprCP						= LocalNumberOfDepreciationPeriodsPd
			LocalDeprCP						*= (LocalAnnualDepreciation - LocalDeprYTD)
			LocalDeprCP						/= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
			LocalDeprCPAllow				= LocalNumberOfDepreciationPeriodsPd
			LocalDeprCPAllow				*= (LocalPUAnnualDepreciation - LocalDeprYTDAllow)
			LocalDeprCPAllow				/= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
			
			if (LocalUOPPdSW)
				if (LocalProgram							= "AM255"
				and LocalProgramOption						= "A")
					LocalDeprCP								= LocalAnnualDepreciation
					LocalDeprCPAllow						= LocalAnnualDepreciation
					if (!LocalLifeCP						< LocalDeprCP
					and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfDepreciationPeriodsClosed)
						LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
						LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
				else
					LocalCDB	= CalcDeprCP
					if (!LocalLifeCP						< LocalLifeRemaining
					and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfDepreciationPeriodsClosed)
						LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
						LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						
			LocalTmpLifeDiff												= (LocalLife - LocalLifeRemaining)
			if (LocalDeprYTD												!= LocalDeprLTD
			and !LocalTmpLifeDiff											< 12
			and !LocalTmpLifeDiff											> LocalNumberOfDepreciationPeriodsClosed)
				if (LocalDeprYTD											= LocalDeprLTD
				and LocalInactYear not entered)
					if (LocalDeprCP											> (LocalAnnualDepreciation /12)
					and LocalTmpLifeDiff 									< 12)
						if (LocalDeprCP not entered)	
							LocalLifeCP										= 12 - LocalTmpLifeDiff
							LocalLifeCP										/= (CurrentBookCalendarsRel.DepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
							LocalLifeCP										*= LocalDeprCP
						else
							LocalLifeCP										=  12 - LocalTmpLifeDiff 
							LocalLifeCP										/= ((LocalAnnualDepreciation - LocalDeprYTD) / LocalDeprCP)
							
					if (((LocalLife - LocalLifeRemaining + LocalLifeCP) 	!= 12)
					and CurrentBookCalendarsRel.DepreciationPeriodsPerYear = (LocalNumberOfDepreciationPeriodsClosed + LocalNumberOfDepreciationPeriodsPd)
					and LocalTmpLifeDiff									< 12)
						LocalLifeCP											= 12 -(LocalLife - LocalLifeRemaining)
															
		LastYearAlloc620 is a DerivedField
			type is like InternationalAmount
			restricted	
			LocalCDB					= LastYearDepreciation
			LocalPrevYearEndDate		= InYearBeginDate - 1 day
			if (NumberOfPeriodCloseRuns  > 0)
				LocalTmpFromDate		= LastClosedDepreciationPeriodEndDate
			else
				LocalTmpFromDate	 	= LocalPrevYearEndDate

			if (LocalLifeRemaining > 1)	
				LocalExpDate 			= LocalTmpFromDate + LocalLifeRemaining as months
			else
				LocalDay1 				= LocalLifeRemaining * 30
				LocalExpDate 			= LocalTmpFromDate + LocalDay1 as days

			LocalLastYearEndDate		= LocalExpDate
			LocalSkip = false
			I6 = NumberOfPeriodCloseRuns
			if (!Convention.NextMonth)
				if (I6 entered)
					LocalFromDate	= LastClosedDepreciationPeriodEndDate
				else
					LocalFromDate	= LocalPrevYearEndDate
				
				LocalSkip = false
				if (LocalDeprYTD			= LocalDeprLTD
				and LocalInactYear not entered
				and LocalStartDate 			<= LocalFromDate
				and LocalLife				<= 12)
					LocalNbrDays			= LocalYearEndDate - LocalPrevYearEndDate
					LocalExpDate			= ((LocalStartDate - 7 days) + (LocalLife * LocalNbrDays) / 12)
					if (LocalExpDate		<= CurrentDepreciationPeriodEndDate)
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP11		= LocalLifeRemaining
						LocalSkip			= true
					else
						if (I6 entered)
							LocalFromDate		= LastClosedDepreciationPeriodEndDate
						else
							LocalFromDate		= LocalPrevYearEndDate
						
						LocalActLifeRemaining	= LocalExpDate - LocalFromDate
						LocalActLifeRemaining	/= LocalNbrDays
						LocalActLifeRemaining	*= 12
						if (LocalActLifeRemaining <= ((LocalDepreciationPeriodsPerYear - CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed) * (12 / LocalDepreciationPeriodsPerYear)))
							initialize LocalTmpDeprPd
							I2	= I6 + 1
							while (I2 <= 55
							and CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I2] < LocalExpDate)
								LocalTmpDeprPd	+= 	CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I2]
								I2 += 1
							if (I2 <= 55) 
								LocalTmpDeprPd	+= 	CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I2]	
										
			
							LocalLifeRemaining	= (LocalTmpDeprPd / LocalDepreciationPeriodsPerYear)
							LocalLifeRemaining *= 12 
							LocalLifeCP11		= (LocalLifeRemaining * (LocalNumberOfDepreciationPeriodsPd/LocalTmpDeprPd))
							LocalDeprCP			= ((LocalAnnualDepreciation - LocalDeprYTD) * (LocalNumberOfDepreciationPeriodsPd/ LocalTmpDeprPd))
							LocalDeprCPAllow	= LocalDeprCP
							LocalSkip = true
						else
							LocalLifeCP11		= (LocalNumberOfDepreciationPeriodsPd /(LocalDepreciationPeriodsPerYear - NumberOfPeriodCloseRuns) * LocalLifeRemaining)
							LocalDeprCP			= (LocalNumberOfDepreciationPeriodsPd /(LocalDepreciationPeriodsPerYear - NumberOfPeriodCloseRuns) * (LocalAnnualDepreciation - LocalDeprYTD))
							LocalDeprCPAllow	= LocalDeprCP
							LocalSkip = true
			if ((LocalLifeCP11 * 100000000000) > 5)
				round LocalLifeCP11 down to nearest 0.0000000001
			LocalLifeCP = LocalLifeCP11

			if (!LocalSkip)
				if (LocalLife entered
				and !InFirstAndLastYear = "P")
					LocalLifeCP11	= ((LocalNumberOfDepreciationPeriodsPd * 12)/LocalDepreciationPeriodsPerYear)
				
				if ((LocalLifeCP11 * 100000000000) > 5)
					round LocalLifeCP11 down to nearest 0.0000000001
				LocalLifeCP = LocalLifeCP11				
				
				if (LocalLifeCP				> LocalLifeRemaining)
					LocalLifeCP				= LocalLifeRemaining
				if (I6 entered)
					if (LocalExpDate		<= LastClosedDepreciationPeriodEndDate)
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP			= LocalLifeRemaining
						LocalSkip 			= true
				else
					if (LocalExpDate <= LocalPrevYearEndDate)
						LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
						LocalDeprCPAllow	= LocalDeprCP
						LocalLifeCP			= LocalLifeRemaining
						LocalSkip 			= true	
				if (!LocalSkip)
					if (LocalAnnualDepreciation = 0)
						initialize LocalDeprCP
						initialize LocalDeprCPAllow
						LocalSkip = true
				if (!LocalSkip)
					if (LocalUOPPdSW)
						if (LocalProgram 		= "AM255"
						and LocalProgramOption	= "A")
							LocalDeprCP			= LocalAnnualDepreciation
							LocalDeprCPAllow	= LocalAnnualDepreciation
							if (!LocalLifeCP	< LocalLifeRemaining
							and LocalNumberOfDepreciationPeriodsPd	= NumberOfPeriodCloseRuns)
								LocalDeprCP		= LocalAnnualDepreciation - LocalDeprYTD
								LocalTempDeprCP	= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						else
							LocalCDB								= 625CalcDeprCP	
							if (LocalLifeCP							> LocalLifeRemaining
							and LocalNumberOfDepreciationPeriodsPd	= NumberOfPeriodCloseRuns)
								LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
								LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						LocalSkip = true

				if(!LocalSkip)
					if (Convention.ActualDaysFirstMonth)
						LocalDeprCP             = LocalAdjBasis / LocalLife
					else
					if(Convention.ActualDays)
						if (LocalAssetBook.DepreciationEndDate entered)
							LocalLastYearEndDate = LocalAssetBook.DepreciationEndDate
							if(LocalLastYearEndDate < LocalYearEndDate)
								LocalTempDate = LocalLastYearEndDate
							else
								LocalTempDate = LocalYearEndDate
							LocalNbrDays = LocalTempDate - LocalPrevYearEndDate
							NoOfDaysToDepreciateInYear = LocalNbrDays
						else
							LocalCounter = 0
							while (LocalCounter < LocalLife)
								LocalLastYearEndDate = InServiceDate + 1 month
								LocalCounter += 1
							if( LocalLastYearEndDate < LocalYearEndDate)
								LocalTempDate = LocalLastYearEndDate
							else
								LocalTempDate = LocalYearEndDate
							NoOfDaysToDepreciateInYear = LocalTempDate - LocalPrevYearEndDate - 1 day

						LocalNbrDays = 0

						LocalNumberOfDaysYear = LocalYearEndDate - LocalPrevYearEndDate
						if (LocalNumberOfDaysYear = 0)
							LocalNumberOfDaysYear = 1
						if(NumberOfPeriodCloseRuns entered)
							LocalTempDate = LastClosedDepreciationPeriodEndDate
						else
							LocalTempDate = LocalPrevYearEndDate
						LocalNbrDays = CurrentDepreciationPeriodEndDate - LocalTempDate
						if (NoOfDaysToDepreciateInPeriod not entered)
							NoOfDaysToDepreciateInPeriod = 	LocalNbrDays
						LocalLifeCP11 = (NoOfDaysToDepreciateInPeriod * 12) 
						LocalLifeCP11 /= LocalNumberOfDaysYear
						if ((LocalLifeCP11 * 100000000000) > 5)
							round LocalLifeCP11 down to nearest 0.0000000001
						LocalLifeCP = LocalLifeCP11

						if(LocalAssetBook.Method = "SL"
						and LocalLifeRemaining > 0)
							if (LocalAssetBook.DepreciationEndDate entered)
								if(NumberOfPeriodCloseRuns entered)
									I1 = NumberOfPeriodCloseRuns
									LocalTempDate = LastClosedDepreciationPeriodEndDate
								else
									LocalTempDate = LocalPrevYearEndDate
								LocalNbrDays = LocalAssetBook.DepreciationEndDate - LocalTempDate
								if(LocalNbrDays entered)
									LocalDeprCP  = (LocalAnnualDepreciationSave - LocalDeprYTD) 
									LocalDeprCP *= NoOfDaysToDepreciateInPeriod 
									LocalDeprCP /= LocalNbrDays
								else
									LocalDeprCP = LocalAnnualDepreciationSave - LocalDeprYTD
							else
								I3 = NumberOfPeriodCloseRuns + 1
								initialize LocalNumberOfDays
								initialize DayDifference
								DepreciationLifeValue = LocalLifeRemaining
								while (DepreciationEndDate <= LocalYearEndDate)
									if(DepreciationLifeValue < 1)
										if (I3 > 1)
											LocalTempDate = LastClosedDepreciationPeriodEndDate
										else
											LocalTempDate = LocalYrBeginDate
											DayDifference += 1
										LocalNbrDays 		= LocalTempDate - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I3]
										DayDifference 		+= LocalNbrDays
										DayDifference 		*= DepreciationLifeValue
										LocalNumberOfDays 	+= DayDifference
									else
										if (I3 > 1)
											LocalTempDate = LastClosedDepreciationPeriodEndDate
										else
											LocalNumberOfDays 	+= 1
											LocalTempDate 		= LocalYrBeginDate
										LocalNbrDays		= LocalTempDate - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I3] 
										LocalNumberOfDays 	+= LocalNbrDays
										DepreciationEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I3]
									DepreciationLifeValue =  DepreciationLifeValue - (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I3])
									if(DepreciationLifeValue  <= 0
									or CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I3] <= 0)
										end while
									I3 += 1
								LocalDeprCP  = (LocalAnnualDepreciationSave - LocalDeprYTD) 
								LocalDeprCP *= NoOfDaysToDepreciateInPeriod
								LocalDeprCP /= LocalNumberOfDays
						else
							LocalDeprCP  = LocalAnnualDepreciationSave
							LocalDeprCP *= NoOfDaysToDepreciateInPeriod
							LocalDeprCP /= NoOfDaysToDepreciateInYear
						NoOfDaysToDepreciateInPeriod = 0	
					else
						if (LocalAssetBook.SpreadOverRemainingLife)
							LocalDeprCP  = LocalNumberOfDepreciationPeriodsPd
							LocalDeprCP *= LocalAnnualDepreciation
							LocalDeprCP /= LocalDepreciationPeriodsPerYear
						else
							LocalDeprCP  = LocalNumberOfDepreciationPeriodsPd * 12
							LocalDeprCP *= (LocalAnnualDepreciation - LocalDeprYTD)
							LocalDeprCP /= (LocalDepreciationPeriodsPerYear * LocalLifeRemaining)
					if (!LocalAssetBook.SpreadOverRemainingLife)
						LocalTempDeprCP	= LocalAnnualDepreciation - LocalDeprYTD
						if ((LocalDeprCP 						> 0
						and LocalDeprCP 						> LocalTempDeprCP)
						or (LocalDeprCP					 		< 0
						and LocalDeprCP							< LocalTempDeprCP)
						or  LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalDeprCP							= LocalTempDeprCP
						LocalDeprCPAllow						= ((LocalNumberOfDepreciationPeriodsPd * 12) * (LocalPUAnnualDepreciation - LocalDeprYTDAllow)) 
						LocalDeprCPAllow						/= (LocalDepreciationPeriodsPerYear * LocalLifeRemaining)
						LocalTempDeprCP							= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						if ((LocalDeprCPAllow > 0
						and LocalDeprCPAllow 					> LocalTempDeprCP)
						or  (LocalDeprCPAllow 					< 0
						and LocalDeprCPAllow 					< LocalTempDeprCP)
						or  LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalDeprCPAllow					= LocalTempDeprCP
						if (LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalLifeCP							= LocalLifeRemaining
					else
						LocalTempDeprCP	= LocalAdjBasis - LocalDeprLTD
						if (LocalDeprCP 						> 0
						and LocalDeprCP 						> LocalTempDeprCP)
							LocalDeprCP							= LocalTempDeprCP
						if (LocalLifeRemaining - LocalLifeCP 	<= 0.005)
							LocalDeprCP							= LocalTempDeprCP
						if (LocalLifeRemaining <= 1
						and LocalDeprCP  != LocalTempDeprCP)
							LocalDeprCP					= LocalTempDeprCP
			
		MiddleYearAlloc630 is a DerivedField
			type is like InternationalAmount
			restricted	
			LocalCDB					= ComputeAnnualDepreciation
			if (LocalLife entered
			and !InFirstLastFlag = "P")
				LocalLifeCP11				=  LocalNumberOfDepreciationPeriodsPd * 12
				LocalLifeCP11				/= LocalDepreciationPeriodsPerYear
				round LocalLifeCP11 to nearest 0.001
				LocalLifeCP = LocalLifeCP11
			if (LocalInactYear entered
			and !LocalShortYear
			and !LocalOvrdSW)
				LocalAnnualDepreciation	*= 12
				LocalAnnualDepreciation	-= (LocalInactYear * LocalAnnualDepreciation)
				LocalAnnualDepreciation	/= 12
				
				LocalPUAnnualDepreciation	*= 12
				LocalPUAnnualDepreciation	-= (LocalInactYear * LocalPUAnnualDepreciation)
				LocalPUAnnualDepreciation	/= 12
			if(Convention.ActualDays)
				LocalNbrDays = LocalYearEndDate - LocalPrevYearEndDate 
				if(NumberOfPeriodCloseRuns entered)
					LocalNumberOfPeriodDays = LocalEndDate - LastClosedDepreciationPeriodEndDate
				else
					LocalNumberOfPeriodDays = LocalEndDate - LocalPrevYearEndDate
				if (NoOfDaysToDepreciateInPeriod not entered)
					NoOfDaysToDepreciateInPeriod = 	LocalNumberOfPeriodDays
			    LocalLifeCP11				=  NoOfDaysToDepreciateInPeriod * 12
				LocalLifeCP11			   /= LocalNbrDays
				if ((LocalLifeCP11 * 100000000000) > 5)
					round LocalLifeCP11 down to nearest 0.0000000001
				LocalLifeCP = LocalLifeCP11
				if (InMethod	= "SL"
				and LocalLifeRemaining entered
				and LocalProgram != "AM255")
					LocalDeprCP						 = (LocalAnnualDepreciationSave - LocalDeprYTD)
					LocalDeprCP						*= NoOfDaysToDepreciateInPeriod
					if(NumberOfPeriodCloseRuns entered)
						LocalDeprCP                 /= (LocalYearEndDate - LastClosedDepreciationPeriodEndDate)
					else
						LocalDeprCP                 /= (LocalYearEndDate - LocalPrevYearEndDate)
				else
					LocalDeprCP						 = LocalAnnualDepreciationSave
					LocalDeprCP						*= NoOfDaysToDepreciateInPeriod
					LocalDeprCP                 	/= LocalNbrDays
				NoOfDaysToDepreciateInPeriod = 0
			else
				if (LocalAssetBook.SpreadOverRemainingLife)
					LocalDeprCP						 = LocalNumberOfDepreciationPeriodsPd
					LocalDeprCP						*= LocalAnnualDepreciation
					LocalDeprCP                 	/= LocalDepreciationPeriodsPerYear
				else
					LocalDeprCP						 = LocalNumberOfDepreciationPeriodsPd
					LocalDeprCP						*= (LocalAnnualDepreciation - LocalDeprYTD)
					LocalDeprCP						/= (LocalDepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
			LocalDeprCPAllow				= LocalNumberOfDepreciationPeriodsPd
			LocalDeprCPAllow				*= (LocalPUAnnualDepreciation - LocalDeprYTDAllow)
			LocalDeprCPAllow				/= (LocalDepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
			if (LocalUOPPdSW)
				if (LocalProgram							= "AM255"
				and LocalProgramOption						= "A")
					LocalDeprCP								= LocalAnnualDepreciation
					LocalDeprCPAllow						= LocalAnnualDepreciation
					if (LocalLifeCP						   	>= LocalDeprCP
					and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfDepreciationPeriodsClosed)
						LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
						LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
				else
					LocalCDB	= CalcDeprCP
					if (LocalLifeCP							>= LocalLifeRemaining
					and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfDepreciationPeriodsClosed)
						LocalDeprCP							= LocalAnnualDepreciation - LocalDeprYTD
						LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
						
			LocalTmpLifeDiff 	= LocalLife - LocalLifeRemaining
			LocalSkip 			= false
			if (LocalDeprYTD = LocalDeprLTD
			and LocalTmpLifeDiff < 12
			and LocalTmpLifeDiff > LocalNumberOfDepreciationPeriodsClosed)
				LocalSkip = true
			if (!LocalSkip)
				if (LocalDeprYTD = LocalDeprLTD
				and LocalInactYear not entered)
					if (LocalDeprCP	> (LocalAnnualDepreciation /12)
					and LocalTmpLifeDiff < 12)
						if (LocalDeprCP not entered)
							LocalLifeCP11										= 12 - LocalTmpLifeDiff
							LocalLifeCP11										/= (LocalDepreciationPeriodsPerYear - LocalNumberOfDepreciationPeriodsClosed)
							LocalLifeCP11										*= LocalNumberOfDepreciationPeriodsPd
						else
							LocalLifeCP11										=  12 - LocalTmpLifeDiff 
							LocalLifeCP11										/= ((LocalAnnualDepreciation - LocalDeprYTD) / LocalDeprCP)
						if ((LocalLifeCP11 * 100000000000) > 5)
							round LocalLifeCP11 down to nearest 0.0000000001
						LocalLifeCP = LocalLifeCP11
					if (((LocalLife - LocalLifeRemaining + LocalLifeCP) 	!= 12)
					and LocalDepreciationPeriodsPerYear = (LocalNumberOfDepreciationPeriodsClosed + LocalNumberOfDepreciationPeriodsPd)
					and LocalTmpLifeDiff									< 12)
						LocalLifeCP											= 12 - (LocalLife - LocalLifeRemaining)
			
		625CalcDeprCP is a DerivedField
			type is like InternationalAmount
			restricted				
			initialize LocalPDUnitsYTD
			if (LocalDepreciationPeriodsPerYear not entered)
				LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
			LocalCurrPd 				= HistoryYearBookCalendarsRel3.NumberOfPeriodCloseRuns
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AO")				
				LocalPDUnitsCP 			= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd]
				LocalPDUnitsYTD			= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction
			else
				if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "EO")
					LocalPDUnitsCP		= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[LocalCurrPd]
					LocalPDUnitsYTD		= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction
				else
					if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd] entered)
						LocalPDUnitsCP 	+= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd]
					else
						LocalPDUnitsCP 	+= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[LocalCurrPd]
						
			I1 = 1
			while (I1 <= 55
			or I1 <= LocalDepreciationPeriodsPerYear)
				if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered)
					LocalPDUnitsYTD 	+= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1]
				else
					LocalPDUnitsYTD 	+= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1]
						
									
			LocalDeprCP			= ((LocalPDUnitsCP / LocalPDUnitsYTD) * LocalAnnualDepreciation)
			LocalTempDeprCP		= LocalAnnualDepreciation - LocalDeprYTD
			
			if ((LocalDeprCP 					> 0
			and LocalDeprCP 					> LocalPDUnitsCP)
			or  (LocalDeprCP 					< 0
			and LocalDeprCP 					< LocalTempDeprCP))
				LocalDeprCP						= LocalTempDeprCP
				
			LocalDeprCPAllow					= LocalPDUnitsCP * LocalPUAnnualDepreciation
			LocalDeprCPAllow					/= LocalPDUnitsYTD 
			
			LocalTempDeprCP						= LocalPUAnnualDepreciation - LocalDeprYTDAllow
			
			if ((LocalDeprCPAllow 				> 0
			and LocalDeprCPAllow				> LocalTempDeprCP)
			or	(LocalDeprCPAllow				< 0
			and LocalDeprCPAllow				< LocalTempDeprCP))
				LocalDeprCPAllow				= LocalTempDeprCP				
			
			
		CalcDeprCP is a DerivedField
			type is like InternationalAmount
			restricted			
			initialize LocalPDUnitsYTD
			if (LocalDepreciationPeriodsPerYear not entered)
				LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear			
			LocalCurrPd 				= HistoryYearBookCalendarsRel3.NumberOfPeriodCloseRuns		
			I1 = 1
			while (I1 <= 55
			and I1 <= LocalDepreciationPeriodsPerYear)	
				if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1] entered)
					LocalPDUnitsYTD 	+= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[I1]
				else
					LocalPDUnitsYTD 	+= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[I1]
				I1 += 1	
			
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AE")		
				LocalAmmTotalUnits	 	-= 	MethodUnitsOfProductionYearRel.ActualYearlyUnitsOfProduction			
				LocalAmmTotalUnits		+= LocalPDUnitsYTD
				
				LocalAnnualDepreciation	= LocalAdjBasis * LocalPDUnitsYTD
				LocalAnnualDepreciation /= LocalAmmTotalUnits
											
			if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "AO")				
				LocalPDUnitsCP 			= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd]
				LocalPDUnitsYTD			= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction
			else
				if (MethodUnitsOfProductionYearRel.PeriodDepreciationConvention = "EO")
					LocalPDUnitsCP		= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[LocalCurrPd]
					LocalPDUnitsYTD		= MethodUnitsOfProductionYearRel.EstimatedYearlyUnitsOfProduction
				else
					if (MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd] entered)
						LocalPDUnitsCP 	+= MethodUnitsOfProductionYearRel.ActualPeriodUnitsOfProduction.ActPdUnits[LocalCurrPd]
					else
						LocalPDUnitsCP 	+= MethodUnitsOfProductionYearRel.EstimatedPeriodUnitsOfProduction.EstPdUnits[LocalCurrPd]
									
			LocalDeprCP			= ((LocalPDUnitsCP / LocalPDUnitsYTD) * LocalAnnualDepreciation)
			LocalDeprCPAllow	= ((LocalPDUnitsCP / LocalPDUnitsYTD) * LocalPUAnnualDepreciation)		
					
		LifeRemainingHalfYear is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalFirstYearPeriods		
			initialize LocalFirstYearPeriodsClosed
			if (InServiceDate not entered)	
				InServiceDate = DerivedInServiceDate
			if (InServiceDate entered)	
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					if(config.ApplyAssetShortYearUpdate = true
					and IsBookHasShortYear)
						LocalInServiceDate                  = InServiceDate
						LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
						LocalCurrentPriorYearEndDate		= LocalCurrentYearBeginDate - 1 day
						LocalCurrentYearEndDate				= CurrentBookCalendarsRel.YearEndDate
						FirstCalendarYearBeginDate			= first AllYearCalendarsRel.YearBeginDate
						LocalYearDiff						= FirstCalendarYearBeginDate year - InServiceDate year
						LocalYearDiff						= LocalYearDiff - 1
						if (LocalYearDiff > 0)
							LocalYearDiff					= LocalYearDiff
						else
							LocalYearDiff					= 0
						CountHalfYearPeriod					= FirstYearInServicePeriods + (LocalYearDiff * 12)
						for each AllYearUntilPreviousCalendarsRel
							CountHalfYearPeriod         	+= ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
					else
						LocalCountYears	= 1
						while LocalNumberOfYearsPrior		!= 1
							if (LocalCountYears = 1)
								CountHalfYearPeriod		= 6
							else
								CountHalfYearPeriod	+= 12
							LocalCountYears 		+= 1
							LocalNumberOfYearsPrior -= 1
					if (DepreciationEndDate entered)
						LocalDeprEndDate			= GetDepreciationEndDate
					else
						LocalDeprEndDate			= AdjustInsrvDate + InLife as months
						LocalDeprEndDate			= LocalDeprEndDate - 1
					if (LocalDeprEndDate > CurrentBookCalendarsRel.YearEndDate
                    or (LocalDeprEndDate <= CurrentBookCalendarsRel.YearEndDate
                    and LocalDeprEndDate year = CurrentBookCalendarsRel.YearEndDate year))
						if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
							CountHalfYearPeriod		= CountHalfYearPeriod + ((CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
						else
							CountHalfYearPeriod 	= CountHalfYearPeriod + CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
					else
						if (!LocalDeprEndDate > LastPeriodEnd)
							CountHalfYearPeriod = LocalLife
						else
							LocalNumberOfPeriodsLastYear	= NumberOfPeriodsLastYear
							LocalLastYearPeriod 			= 6/LocalNumberOfPeriodsLastYear
							LocalCountHalfYearPeriod 		= LocalLastYearPeriod * CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
							if (LocalCountHalfYearPeriod > 6)
								LocalCountHalfYearPeriod = 6
							CountHalfYearPeriod				= CountHalfYearPeriod + LocalCountHalfYearPeriod
					CountYears			+= 1
					LocalLifeRemaining	= LocalLife - CountHalfYearPeriod
				else
					MonthsProcessed.InDeprStartDate 		= InYearBeginDate
					MonthsProcessed.InServiceDate	 		= InServiceDate
					MonthsProcessed.InDeprStartDate			= InServiceDate
					MonthsProcessed.InYearBeginDate			= InYearBeginDate
					MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
					MonthsProcessed.InYearEndDate			= InYearEndDate		
					MonthsProcessed.Convention				= Convention
					MonthsProcessed.InLife					= InLife
					MonthsProcessed.LastPeriodEnd			= InYearEndDate
					MonthsProcessed.InBook					= InBook
					MonthsProcessed.InCompany				= InCompany
					MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
					MonthsProcessed.InservicePeriod			= InservicePeriod
					LocalFirstYearPeriods					= MonthsProcessed.ReturnNumberOfMonthsProcessed
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						FirstYearMonthsHalfYear				= MonthsProcessed.LocalFirstYearCalcPeriods
					LocalFirstYearPeriodsClosed				= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns

					G1	= 1
					initialize LocalTempPeriodsClosed
					while G1 !> LocalFirstYearPeriodsClosed
						LocalTempDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[G1]
						if (!InServiceDate > LocalTempDate)
							if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
								LocalTempPeriodsClosed			+= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[G1]
							else
								LocalTempPeriodsClosed			+= 1
						G1		+= 1
					LocalFirstYearPeriodsClosed				= LocalTempPeriodsClosed	 
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						HalfYearLocalLifeCalc					= (6/FirstYearMonthsHalfYear)
					else
						HalfYearLocalLifeCalc					= (6/LocalFirstYearPeriods)
					LocalLifeRemaining						= HalfYearLocalLifeCalc * LocalFirstYearPeriodsClosed
					LocalLifeRemaining						= LocalLife - LocalLifeRemaining
			if (LocalLifeRemaining < 0)
				LocalLifeRemaining = 0
			return LocalLifeRemaining

		LifeRemainingFullYear is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalFirstYearPeriods		
			initialize LocalFirstYearPeriodsClosed
			initialize CountFullYearPeriod
			if (InServiceDate not entered)	
				InServiceDate = DerivedInServiceDate
			if (InServiceDate entered)	
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 	= CalcNumberOfYearsInService
					if(config.ApplyAssetShortYearUpdate = true
					and IsBookHasShortYear)
						LocalInServiceDate                  = InServiceDate
						LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
						LocalCurrentPriorYearEndDate		= LocalCurrentYearBeginDate - 1 day
						LocalCurrentYearEndDate				= CurrentBookCalendarsRel.YearEndDate
						FirstCalendarYearBeginDate			= first AllYearCalendarsRel.YearBeginDate
						LocalYearDiff						= FirstCalendarYearBeginDate year - InServiceDate year
						LocalYearDiff						= LocalYearDiff - 1
						if (LocalYearDiff > 0)
							LocalYearDiff					= LocalYearDiff
						else
							LocalYearDiff					= 0
						CountFullYearPeriod =		FirstYearInServicePeriods + (LocalYearDiff * 12)
						for each AllYearUntilPreviousCalendarsRel
							CountFullYearPeriod         += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
					else
						CountYears	= 1
						while LocalNumberOfYearsPrior		!= 1
							CountFullYearPeriod		+= 12
							CountYears 				+= 1
							LocalNumberOfYearsPrior -= 1
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						CountFullYearPeriod		= CountFullYearPeriod + ((CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
					else
						CountFullYearPeriod		= CountFullYearPeriod + CurrentBookCalendarsRel.NumberOfPeriodCloseRuns	
					CountYears					+= 1
					LocalLifeRemaining	= LocalLife - CountFullYearPeriod
					if (CountFullYearPeriod >= LocalLife)
						LocalLifeRemaining = 0
				else
					MonthsProcessed.InDeprStartDate 		= InYearBeginDate
					MonthsProcessed.InServiceDate	 		= InServiceDate
					MonthsProcessed.InDeprStartDate			= InServiceDate
					MonthsProcessed.InYearBeginDate			= InYearBeginDate
					MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
					MonthsProcessed.InYearEndDate			= InYearEndDate		
					MonthsProcessed.Convention				= Convention
					MonthsProcessed.InLife					= InLife
					MonthsProcessed.LastPeriodEnd			= InYearEndDate
					MonthsProcessed.InBook					= InBook
					MonthsProcessed.InCompany				= InCompany
					MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
					MonthsProcessed.InservicePeriod			= InservicePeriod
					LocalFirstYearPeriods					= MonthsProcessed.ReturnNumberOfMonthsProcessed
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						FirstYearMonthsHalfYear				= MonthsProcessed.LocalFirstYearCalcPeriods
					LocalFirstYearPeriodsClosed				= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns

					G1	= 1
					initialize LocalTempPeriodsClosed
					while G1 !> LocalFirstYearPeriodsClosed
						LocalTempDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[G1]
						if (!InServiceDate > LocalTempDate)
							if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
								LocalTempPeriodsClosed			+= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[G1]
							else
								LocalTempPeriodsClosed			+= 1
						G1		+= 1
					LocalFirstYearPeriodsClosed				= LocalTempPeriodsClosed	 
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						LocalLifeRemaining						= (12/FirstYearMonthsHalfYear)
					else
						LocalLifeRemaining						= (12/LocalFirstYearPeriods)
					LocalLifeRemaining						= LocalLifeRemaining * LocalFirstYearPeriodsClosed
					LocalLifeRemaining						= LocalLife - LocalLifeRemaining
			return LocalLifeRemaining

		GetProjectedHistoryDate is a DerivedField
			type is Date
			restricted
			if (LocalInServiceDate not entered)	
				LocalInServiceDate = DerivedInServiceDate
			if (LocalInServiceDate entered)	
				ProjectedHistoryBeginDate 	= first BookCalendarsByDateRel.YearBeginDate
				ProjectedHistoryEndDate		= first BookCalendarsByDateRel.YearEndDate
				if (ProjectedHistoryBeginDate > LocalInServiceDate)
					LocalBeginDateFound 			= false
					while (LocalBeginDateFound 		= false)
						ProjectedHistoryEndDate		= (ProjectedHistoryBeginDate - 1 day)
						ProjectedHistoryBeginDate	= (ProjectedHistoryBeginDate - 1 year)
						if (ProjectedHistoryBeginDate 			<= LocalInServiceDate) 
							LocalBeginDateFound = true
				return ProjectedHistoryEndDate

		CalcNumberOfYearsInService is a DerivedField
			type is Numeric 3
			restricted
			if (LocalInServiceDate not entered)
				LocalInServiceDate = DerivedInServiceDate
			if (LocalInServiceDate entered)	
				if (Convention.ModifiedHalfMonth)
					LocalCDBDate 		= AdjustInsrvDate
					LocalInServiceDate 	= LocalDeprStartDate
				LocalNumberOfYearsPrior = 1
				LocalHistoryYearEndDate = CurrentBookCalendarsRel.YearBeginDate
				LocalHistoryYearEndDate = LocalHistoryYearEndDate - 1 day
				LocalDaysDiffMonth = NumberOfDaysYear
				while LocalHistoryYearEndDate >= LocalInServiceDate
					LocalNumberOfYearsPrior += 1
					LocalCompany = InAsset.Company
					LocalYearEndDate = LocalHistoryYearEndDate
					if (HistoryYearBookCalendarsRel3 exists)
						LocalHistoryYearEndDate = HistoryYearBookCalendarsRel3.YearBeginDate - 1 day
						LocalDaysDiffMonth = HistoryYearBookCalendarsRel3.CalendarDays
					else
						if (Convention.ActualDays)
							LocalHistoryYearEndDate	= LocalHistoryYearEndDate - LocalDaysDiffMonth as days
						else
							LocalHistoryYearEndDate	= LocalHistoryYearEndDate - 1 year
				return LocalNumberOfYearsPrior

		
		CalcNumberOfYearsInServiceFuture is a DerivedField
			type is Numeric 3
			restricted
			if (LocalInServiceDate not entered)
				LocalInServiceDate = DerivedInServiceDate
			if (LocalInServiceDate entered)	
				LocalNumberOfYearsFuture = 0
				LocalFutureYearEndDate = CurrentBookCalendarsRel.YearEndDate
				while LocalFutureYearEndDate <= LocalInServiceDate
					LocalNumberOfYearsFuture += 1
					LocalFutureYearEndDate	= LocalFutureYearEndDate + 1 year
				return LocalNumberOfYearsFuture
		
		CalcNumberOfYearsInServiceForHM is a DerivedField
			type is Numeric 3
			restricted
			LocalInServiceDate 	= AssetBookRel.InServiceDate
			if (LocalInServiceDate entered)	
				LocalNumberOfYearsPrior = 1
				LocalHistoryYearEndDate = CurrentBookCalendarsRel.YearBeginDate
				LocalHistoryYearEndDate = LocalHistoryYearEndDate - 1 day
				while LocalHistoryYearEndDate >= LocalInServiceDate
					LocalNumberOfYearsPrior += 1
					LocalCompany = InAsset.Company
					LocalYearEndDate = LocalHistoryYearEndDate
					if (HistoryYearBookCalendarsRel3 exists)
						LocalHistoryYearEndDate = HistoryYearBookCalendarsRel3.YearBeginDate - 1 day
					else
						LocalHistoryYearEndDate	= LocalHistoryYearEndDate - 1 year
				return LocalNumberOfYearsPrior

		FirstYearInServicePeriods is a DerivedField  
			type is Decimal 9.7
			restricted
			if (LocalLife < 12)
				LocalMonthsInFirstYear = LocalLife			
			
			if (Convention.MidQuarter
			or  Convention.ActualDays
			or  Convention.MidMonth
			or  Convention.FullMonth
			or  Convention.FullYear
			or  Convention.NextMonth
			or  Convention.HalfYear
			or  Convention.ActualDaysFirstMonth
			or  Convention.ModifiedHalfMonth
			or Convention.ModifiedHalfYear)
				if (InServiceDate not entered)	
					InServiceDate = DerivedInServiceDate
				if (InServiceDate entered)				
					LocalInServiceDate			= InServiceDate
					if (InServiceDate < InYearBeginDate)
						LocalCalendarStatus		= "H"
						if (HistoryYearBookCalendarsRel4 exist)
							initialize NumberOfPeriodsFirstYear
							CustomYearEndDate				= HistoryYearBookCalendarsRel4.YearEndDate
						else
							CustomYearEndDate				= GetProjectedHistoryDate
						CustomYearBeginDate					= CustomYearEndDate + 1 day
						CustomYearBeginDate 				= CustomYearBeginDate - 1 year		
					else
						CustomYearBeginDate					= InYearBeginDate
						CustomYearEndDate 					= InYearEndDate

					if (Convention.ModifiedHalfMonth)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
						else
							MonthsProcessed.InDeprStartDate	= InServiceDate
					if (Convention.NextMonth
					and InMethod	= "SYD"
					and LocalProgram = "Proj")
						MonthsProcessed.InDeprStartDate 	= InDepreciationStartDate
					MonthsProcessed.InServiceDate	 		= InServiceDate
					MonthsProcessed.InYearBeginDate			= CustomYearBeginDate
					MonthsProcessed.InPrevYearEndDate		= CustomYearBeginDate - 1 day
					MonthsProcessed.InYearEndDate			= CustomYearEndDate		
					MonthsProcessed.Convention				= Convention
					MonthsProcessed.InLife					= InLife
					MonthsProcessed.LastPeriodEnd			= CustomYearEndDate
					MonthsProcessed.InBook					= InBook
					MonthsProcessed.InCompany				= InCompany
					MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
					MonthsProcessed.InservicePeriod			= InservicePeriod
					LocalMonthsInFirstYear					= MonthsProcessed.ReturnNumberOfMonthsProcessed
					if (!(config.ApplyAssetShortYearUpdate = true
					and first ShortYearBookCalendarsRel exists))
						LocalMonthBeforeShortYear				= HistoryCalendarsShortYearRel.YearBeginDate - 1 day
						if (Convention.ModifiedHalfMonth
						and HistoryCalendarsShortYearRel exists
						and InServiceDate month	= LocalMonthBeforeShortYear month
						and InServiceDate year	= HistoryCalendarsShortYearRel.YearBeginDate year
						and InServiceDate day > 15)
							LocalMonthsInFirstYear					= 1
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
						LocalFirstYearCalcPeriods			= MonthsProcessed.LocalFirstYearCalcPeriods
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12
					and !InServiceDate < CurrentBookCalendarsRel.YearBeginDate)
						LocalStartDate			= InServiceDate - CalcNumberOfYearsInServiceFuture as years
						LocalPeriodsClosed		= LocalMonthsInFirstYear
						LocalMonthsInFirstYear	= CountPeriods445Calendar				
			return LocalMonthsInFirstYear

		NumberOfPeriodsClosedCurrentYear is a DerivedField  
			type is Decimal 9.5
			restricted
			if (CurrentBookCalendarsRel exists)
				if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns = 0)
					LocalPeriodsClosed	= 0
					return LocalPeriodsClosed
				else
					I6	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
					LastPeriodEnd = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]

			CustomYearBeginDate						= InYearBeginDate
			CustomYearEndDate 						= InYearEndDate
			if (InServiceDate > LastPeriodEnd)
				LocalPeriodsClosed	= 0
				return LocalPeriodsClosed
				 
			if (LastPeriodEnd > CustomYearEndDate)
				MonthsProcessed.LastPeriodEnd		= CustomYearEndDate
			else
				MonthsProcessed.LastPeriodEnd		= LastPeriodEnd

			if (Convention.ModifiedHalfMonth)
				LocalCDBDate = AdjustInsrvDate
				if (LocalDeprStartDate > InServiceDate)
					MonthsProcessed.InDeprStartDate	= LocalDeprStartDate
				else
					MonthsProcessed.InDeprStartDate	= InServiceDate
				
			MonthsProcessed.InServiceDate	 		= InServiceDate
			MonthsProcessed.InYearBeginDate			= CustomYearBeginDate
			MonthsProcessed.InYearEndDate			= CustomYearEndDate		
			MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
			MonthsProcessed.Convention				= Convention
			MonthsProcessed.InLife					= InLife
			MonthsProcessed.InBook					= InBook
			MonthsProcessed.InCompany				= InCompany
			MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
			MonthsProcessed.InservicePeriod			= InservicePeriod
			LocalPeriodsClosed						= MonthsProcessed.ReturnNumberOfMonthsProcessed
			if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12)
				LocalFirstYearCalcPeriods				= MonthsProcessed.LocalFirstYearCalcPeriods
			if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear > 12
			and !InServiceDate < CurrentBookCalendarsRel.YearBeginDate)
				LocalStartDate		= InServiceDate
				LocalPeriodsClosed	= CountPeriods445Calendar		
			return LocalPeriodsClosed			
			
		NumberOfPeriodsCurrentYear is a DerivedField
			type is Decimal 9.5
			restricted
			initialize LocalNumberOfPeriods
			T1	= 1
			while LocalStartDate < GetDepreciationEndDate
				LocalNumberOfPeriods += CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
				LocalStartDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
				T1 += 1
			return LocalNumberOfPeriods

		NumberOfPeriodsLastYear is a DerivedField
			type is Decimal 9.5
			restricted
			if (CurrentBookCalendarsRel exists)
				I6	= 1
				LocalCountNotFound = true
				while LocalCountNotFound
					LocalPeriodEndDate = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
					if (LocalDeprEndDate > LocalPeriodEndDate)
						I6 += 1
					else
						LocalCountNotFound = false
			return I6

		NumberOfPeriodsClosed is a DerivedField  
			type is Decimal 9.5
			restricted
			initialize LocalMonthsToAdd
			LastPeriodEnd	= InPrevYearEndDate
			if (InServiceDate < InYearBeginDate)
				LocalCalendarStatus		= "H"
				if (HistoryYearBookCalendarsRel4 exist)
					CustomYearEndDate					= HistoryYearBookCalendarsRel4.YearEndDate
				else
					LocalInServiceDate					= InServiceDate
					CustomYearEndDate					= GetProjectedHistoryDate
				CustomYearBeginDate						= CustomYearEndDate + 1 day
				CustomYearBeginDate 					= CustomYearBeginDate - 1 year
				if (config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
                    for each AllYearUntilPreviousCalendarsRel
                        LocalMonthsToAdd     += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
				else
					LocalMonthsToAdd						= InYearBeginDate year - CustomYearBeginDate year
					LocalMonthsToAdd						-= 1
					LocalMonthsToAdd						= LocalMonthsToAdd * 12
			else
				CustomYearBeginDate						= InYearBeginDate
				CustomYearEndDate 						= InYearEndDate
			if (LastPeriodEnd > CustomYearEndDate)
				MonthsProcessed.LastPeriodEnd			= CustomYearEndDate
			else
				MonthsProcessed.LastPeriodEnd			= LastPeriodEnd
			if (InPrevYearEndDate > CustomYearBeginDate)
				MonthsProcessed.InPrevYearEndDate		= CustomYearBeginDate - 1 day
			else
				MonthsProcessed.InPrevYearEndDate		= InPrevYearEndDate
				
			if (LastPeriodEnd entered)
				MonthsProcessed.InServiceDate	 		= InServiceDate
				MonthsProcessed.InDeprStartDate			= InServiceDate
				if(config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
					if (Convention.ModifiedHalfMonth)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							MonthsProcessed.InDeprStartDate = LocalDeprStartDate
				MonthsProcessed.InYearBeginDate			= CustomYearBeginDate
				MonthsProcessed.InYearEndDate			= CustomYearEndDate		
				MonthsProcessed.Convention				= Convention
				MonthsProcessed.InLife					= InLife
				MonthsProcessed.InBook					= InBook
				MonthsProcessed.InCompany				= InCompany
				MonthsProcessed.LocalDeprSwitch			= LocalDeprSwitch
				MonthsProcessed.InservicePeriod			= InservicePeriod
				LocalPeriodsClosed						= MonthsProcessed.ReturnNumberOfMonthsProcessed
				LocalPeriodsClosed						= LocalPeriodsClosed + LocalMonthsToAdd
			return LocalPeriodsClosed

		CalculateActualFirstYear is a DerivedField 
			type is Decimal 19.3
			restricted
			if (!LocalDeprSwitch)
				if ((InServiceDate > LastPeriodEnd
				or LastPeriodEnd not entered)
				and LocalProgram != "Proj")
					LocalLifeRemainingAcutalDaysFirstMonth = InLife
					return
			initialize LocalPeriod
			initialize LocalNumberOfDaysFirstMonth
			initialize LocalTotalNumberOfDaysFirstMonth
			initialize LocalNumberOfDaysFirstYear
			initialize LocalFirstMonthPercent
			initialize LocalFirstYearDepreciation
			if (!LocalDeprSwitch)
				if (LocalDepreciationPeriodsPerYear not entered)
					LocalDepreciationPeriodsPerYear = CurrentBookCalendarsRel.DepreciationPeriodsPerYear
				if (LocalNumberOfDepreciationPeriodsClosed not entered)
					LocalNumberOfDepreciationPeriodsClosed = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
				if (InYearBeginDate not entered)
					InYearBeginDate = CurrentBookCalendarsRel.YearBeginDate		
				if (LocalProgram = "Proj")
					LocalLife = InLife
			if (LocalDeprLTD = 0)
				LocalMonthlyDepreciation	= LocalAdjBasis / LocalLife
				LocalLifeInYears			= LocalLife / 12
				LocalAnnualDepreciation		= LocalAdjBasis / LocalLifeInYears
				if (LocalDeprSwitch)
					LocalCDB 		= FirstYearMonths650
				else
					LocalCDB 		= FirstYearMonths
				LocalCountYears = 1
				if (InServiceDate < InYearBeginDate)
					LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
					LocalCalendarStatus		= "H"
					if (HistoryYearBookCalendarsRel4 exist)
						LocalPeriod = 1
						while InServiceDate >  HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod]
							LocalPeriod += 1
						if (LocalPeriod = 1)
							LocalTotalNumberOfDaysFirstMonth 	= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - HistoryYearBookCalendarsRel4.YearBeginDate
						else
							LocalTotalNumberOfDaysFirstMonth 	= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod-1] + 1 day)
						LocalTotalNumberOfDaysFirstMonth 		+= 1
						LocalNumberOfDaysFirstMonth			= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InServiceDate
						LocalNumberOfDaysFirstMonth 		+= 1
						LocalNumberOfDaysFirstYear 			= HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear			+= 1
					else
						CustomYearEndDate					= GetProjectedHistoryDate
						LocalPeriod 						= 1
						LocalInServiceMonth					= InServiceDate month
						ProjectedInserviceDate				= InServiceDate + (LocalNumberOfYearsPrior as years - 1 year)
						while ProjectedInserviceDate		 >  CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod]
							LocalPeriod 					+= 1
						if (LocalPeriod = 1)
							LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InYearBeginDate
						else
							LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod-1] + 1 day)
						LocalTotalNumberOfDaysFirstMonth	+= 1
						LocalNumberOfDaysFirstMonth			= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (LocalNumberOfYearsPrior as years - 1 year) - InServiceDate
						LocalNumberOfDaysFirstMonth 		+= 1
						LocalNumberOfDaysFirstYear 			= CustomYearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear	+= 1
					LocalFirstMonthPercent		= LocalNumberOfDaysFirstMonth / LocalNumberOfDaysFirstYear
					if (InServiceDate is leap year)
						LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 366
						LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
					else
						LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 365
						LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
					LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalFirstMonthPercent
					while LocalNumberOfYearsPrior		!= 1
						if (LocalCountYears = 1)
							LocalMonthsInFirstYear	= FirstYearInServicePeriods
							if(LocalDepreciationPeriodsPerYear > 12)
								if (HistoryYearBookCalendarsRel4 exists)
									LocalMonthsInFirstYear	= LocalMonthsInFirstYear - (HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[LocalPeriod] * (12 / HistoryYearBookCalendarsRel4.DepreciationPeriodsPerYear))
								else
									LocalMonthsInFirstYear	= LocalMonthsInFirstYear - (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[LocalPeriod] * (12 / LocalDepreciationPeriodsPerYear))
							else
								LocalMonthsInFirstYear	= LocalMonthsInFirstYear - 1
							GWTLocalBeginYrDepr		= LocalMonthlyDepreciation * LocalMonthsInFirstYear
							GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr + LocalFirstYearDepreciation
							GWTLocalBeginYrDepr			= GWTLocalBeginYrDepr + LocalDeprBonus
							GWTAddedBonusDepr			= true
							LocalDeprLTD				= GWTLocalBeginYrDepr
						else
							LocalDeprLTD				= LocalDeprLTD + (LocalMonthlyDepreciation * 12)
						LocalCountYears					+= 1
						LocalNumberOfYearsPrior 		-= 1
					LocalDeprYTD						= LocalMonthlyDepreciation * ( LocalNumberOfDepreciationPeriodsClosed * (12 / LocalDepreciationPeriodsPerYear) )
					LocalDeprLTD						= LocalDeprLTD + LocalDeprYTD
				else
					LocalPeriod 						= 1
					LocalInServiceMonth					= InServiceDate month
					if (InServiceDate >= InYearBeginDate
					and InServiceDate <= CurrentBookCalendarsRel.YearEndDate)
						while InServiceDate 				> CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod]
							LocalPeriod 					+= 1
						if (LocalPeriod = 1)
							LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InYearBeginDate
						else
							LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod-1] + 1 day)
						LocalTotalNumberOfDaysFirstMonth	+= 1
						LocalNumberOfDaysFirstMonth			= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InServiceDate
						LocalNumberOfDaysFirstMonth 		+= 1
						LocalNumberOfDaysFirstYear 			= CurrentBookCalendarsRel.YearEndDate - InServiceDate
						LocalNumberOfDaysFirstYear			+= 1
						if(LocalDepreciationPeriodsPerYear > 12)
							LocalStartDate = InYearBeginDate
							LocalPeriodsClosed = LocalPeriod
							LocalPeriod = CountPeriods445Calendar

						NumberOfPeriodsClosedFirstYear	= LocalNumberOfDepreciationPeriodsClosed - LocalPeriod
						LocalFirstMonthPercent			= LocalNumberOfDaysFirstMonth / LocalNumberOfDaysFirstYear
						if (InServiceDate is leap year)
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 366
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
						else
							LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 365
							LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
						LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalFirstMonthPercent
						LocalDeprCP						= LocalFirstYearDepreciation
						if (!LocalDeprSwitch)
							LocalDeprYTD			= LocalMonthlyDepreciation * (NumberOfPeriodsClosedFirstYear * (12 / LocalDepreciationPeriodsPerYear) )
							LocalDeprYTD			= LocalDeprYTD + LocalFirstYearDepreciation
							LocalDeprLTD			= LocalDeprYTD
					else
						if (LocalProgram = "Proj"
						and InServiceDate > CurrentBookCalendarsRel.YearEndDate)
							LocalCalendarStatus	= "F"
							LocalInServiceDate	= InServiceDate
							if (HistoryYearBookCalendarsRel4 exists)
								while InServiceDate 				> HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod]
									LocalPeriod 					+= 1
								if (LocalPeriod = 1)
									LocalTotalNumberOfDaysFirstMonth	= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - HistoryYearBookCalendarsRel4.YearBeginDate
								else
									LocalTotalNumberOfDaysFirstMonth	= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod-1] + 1 day)
								LocalTotalNumberOfDaysFirstMonth	+= 1
								LocalNumberOfDaysFirstMonth			= HistoryYearBookCalendarsRel4.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InServiceDate
								LocalNumberOfDaysFirstMonth 		+= 1
								LocalNumberOfDaysFirstYear 			= HistoryYearBookCalendarsRel4.YearEndDate - InServiceDate
								LocalNumberOfDaysFirstYear			+= 1
								if(HistoryYearBookCalendarsRel4.DepreciationPeriodsPerYear > 12)
									LocalStartDate = InYearBeginDate
									LocalPeriodsClosed = LocalPeriod
									LocalPeriod = CountPeriods445Calendar

								NumberOfPeriodsClosedFirstYear	= HistoryYearBookCalendarsRel4.NumberOfDepreciationPeriodsClosed - LocalPeriod
								LocalFirstMonthPercent			= LocalNumberOfDaysFirstMonth / LocalNumberOfDaysFirstYear
								if (InServiceDate is leap year)
									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 366
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								else
									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 365
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalFirstMonthPercent
							else
								FutureYearEndDate	= CurrentBookCalendarsRel.YearEndDate
								while (InServiceDate > FutureYearEndDate)
									FutureYearEndDate	+= 1 year
									YearsInFuture		+= 1
								ProjectedInserviceDate	 = InServiceDate - YearsInFuture as years
								while ProjectedInserviceDate		 >  CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod]
									LocalPeriod 					+= 1
								if (LocalPeriod = 1)
									LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - InYearBeginDate
								else
									LocalTotalNumberOfDaysFirstMonth	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod-1] + 1 day)
								LocalTotalNumberOfDaysFirstMonth	+= 1
								LocalNumberOfDaysFirstMonth			= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[LocalPeriod] - ProjectedInserviceDate
								LocalNumberOfDaysFirstMonth 		+= 1
								LocalNumberOfDaysFirstYear 			= FutureYearEndDate - InServiceDate
								LocalNumberOfDaysFirstYear	+= 1
								if(LocalDepreciationPeriodsPerYear > 12)
									LocalStartDate = InYearBeginDate
									LocalPeriodsClosed = LocalPeriod
									LocalPeriod = CountPeriods445Calendar

								NumberOfPeriodsClosedFirstYear	= LocalNumberOfDepreciationPeriodsClosed - LocalPeriod
								LocalFirstMonthPercent			= LocalNumberOfDaysFirstMonth / LocalNumberOfDaysFirstYear
								if (InServiceDate is leap year)
									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 366
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								else
									LocalFirstYearDepreciation	= LocalNumberOfDaysFirstYear / 365
									LocalFirstYearDepreciation	= LocalFirstYearDepreciation * LocalAnnualDepreciation
								LocalFirstYearDepreciation		= LocalFirstYearDepreciation * LocalFirstMonthPercent
				if (LocalDeprSwitch)
					LocalFirstMonthProcessed				= LocalNumberOfDaysFirstMonth * 12
					LocalFirstMonthProcessed			   /= LocalNumberOfDaysFirstYear
				else			
					LocalFirstMonthProcessed				= LocalNumberOfDaysFirstMonth / LocalTotalNumberOfDaysFirstMonth
				LocalLifeRemainingAcutalDaysFirstMonth	= LocalLife - LocalProcessedMonths
				LocalLifeRemainingAcutalDaysFirstMonth	= LocalLifeRemainingAcutalDaysFirstMonth + 1
				LocalLifeRemainingAcutalDaysFirstMonth	= LocalLifeRemainingAcutalDaysFirstMonth - LocalFirstMonthProcessed
				LocalLifeCP								= LocalFirstMonthProcessed
				if (LocalDeprLTD > LocalAdjBasis)
					LocalAdjustAmount	= LocalDeprLTD - LocalAdjBasis
					LocalDeprYTD		= LocalDeprYTD - LocalAdjustAmount
					if (LocalDeprYTD < 0)
						LocalDeprYTD 	= 0
					LocalDeprLTD		= LocalDeprLTD - LocalAdjustAmount
					LocalLifeRemainingAcutalDaysFirstMonth	= 0
				else
				if (LocalLifeRemainingAcutalDaysFirstMonth = 0)
					LocalAdjustAmount	= LocalAdjBasis - LocalDeprLTD
					if (LocalDeprYTD > 0)
						LocalDeprYTD		= LocalDeprYTD + LocalAdjustAmount
					LocalDeprLTD		= LocalAdjBasis
				return LocalFirstYearDepreciation					
			
		GetDepreciationEndDate is a DerivedField
			type is Date
			restricted
			LocalLastPeriodEnd	= GetLastPeriodEndDate
			if (DepreciationEndDate entered)
				LocalDeprEndDate	= DepreciationEndDate
			else
				LocalDeprEndDate	= LocalInServiceDate + InLife as months
				LocalDeprEndDate	= LocalDeprEndDate - 1
			if (!LocalDeprEndDate > LocalLastPeriodEnd)
				CompletelyDepreciated = true
			return LocalDeprEndDate
			
		GetImpairmentEndDate is a DerivedField
			type is Date  
			restricted
			LocalLastPeriodEnd	= GetLastPeriodEndDate
			LocalDeprEndDate	= DepreciationAssetBookRel.InServiceDate + DepreciationAssetBookRel.Life as months
			LocalDeprEndDate	= LocalDeprEndDate - 1
			if (!LocalDeprEndDate > LocalLastPeriodEnd)
				CompletelyDepreciated = true
			return LocalDeprEndDate
					
		GetLastPeriodEndDate is a DerivedField
			type is Date
			restricted			
			if (CurrentBookCalendarsRel exists)
				if (CurrentBookCalendarsRel.NumberOfPeriodCloseRuns = 0)
					LocalLastPeriodEnd	= CurrentBookCalendarsRel.YearBeginDate
					LocalLastPeriodEnd	= 	LocalLastPeriodEnd - 1 day
				else
					I6	= CurrentBookCalendarsRel.NumberOfPeriodCloseRuns
					LocalLastPeriodEnd = CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
				return LocalLastPeriodEnd			

		LifeRemainingModifiedHalfYear is a DerivedField
			type is like InternationalAmount
			restricted
			initialize CountFullYearPeriod	
			if (InServiceDate < InYearBeginDate)
				LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
				LocalCountYears	= 1
				if(config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
					if (LocalCountYears = 1)
						LocalCDBDate = AdjustInsrvDate
						if (LocalDeprStartDate > InServiceDate)
							CountFullYearPeriod	= 0
						else
							CountFullYearPeriod		= 12
					else
						LocalInServiceDate                  = InServiceDate
						LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
						LocalCurrentPriorYearEndDate		= LocalCurrentYearBeginDate - 1 day
						LocalCurrentYearEndDate				= CurrentBookCalendarsRel.YearEndDate
						FirstCalendarYearBeginDate			= first AllYearCalendarsRel.YearBeginDate
						LocalYearDiff						= FirstCalendarYearBeginDate year - InServiceDate year
						LocalYearDiff						= LocalYearDiff - 1
						if (LocalYearDiff > 0)
							LocalYearDiff					= LocalYearDiff
						else
							LocalYearDiff					= 0

					CountFullYearPeriod =		FirstYearInServicePeriods + (LocalYearDiff * 12)
					for each AllYearUntilPreviousCalendarsRel
						CountFullYearPeriod         += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
				else
					while LocalNumberOfYearsPrior		!= 1
						if (LocalCountYears = 1)
							LocalCDBDate = AdjustInsrvDate
							if (LocalDeprStartDate > InServiceDate)
								CountFullYearPeriod	= 0
							else
								CountFullYearPeriod		= 12
						else
							CountFullYearPeriod	+= 12
						LocalCountYears 		+= 1
						LocalNumberOfYearsPrior -= 1					
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
					CountFullYearPeriod		= CountFullYearPeriod + ((CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
				else
					CountFullYearPeriod		= CountFullYearPeriod + CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
			else
				LocalCDBDate = AdjustInsrvDate
				if (LocalDeprStartDate > InServiceDate)	
					CountFullYearPeriod	= 0
				else
					LocalMonthsInFirstYear			= FirstYearInServicePeriods
					NumberOfPeriodsClosedFirstYear	= NumberOfPeriodsClosedCurrentYear
					if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
						CountFullYearPeriod			= 12 / LocalMonthsInFirstYear
					else
						CountFullYearPeriod			= CurrentBookCalendarsRel.DepreciationPeriodsPerYear / LocalMonthsInFirstYear
					CountFullYearPeriod				= CountFullYearPeriod * NumberOfPeriodsClosedFirstYear
					
			LocalLifeRemaining	= LocalLife - CountFullYearPeriod
			if (LocalLifeRemaining < 0)
				LocalLifeRemaining = 0
			return 	LocalLifeRemaining

		LifeRemainingMidQuarter is a DerivedField
			type is Decimal 9.5
			restricted
			initialize CountMidQuarterPeriod	
			if (InServiceDate < InYearBeginDate)
				LocalNumberOfYearsPrior 			= CalcNumberOfYearsInService
				LocalCountYears	= 1
				if(config.ApplyAssetShortYearUpdate = true
				and IsBookHasShortYear)
					LocalInServiceDate                  = InServiceDate
					LocalCurrentYearBeginDate           = CurrentBookCalendarsRel.YearBeginDate
					LocalCurrentPriorYearEndDate		= LocalCurrentYearBeginDate - 1 day
					LocalCurrentYearEndDate				= CurrentBookCalendarsRel.YearEndDate
					FirstCalendarYearBeginDate			= first AllYearCalendarsRel.YearBeginDate
					LocalYearDiff						= FirstCalendarYearBeginDate year - InServiceDate year
					LocalYearDiff						= LocalYearDiff - 1
					if (LocalYearDiff > 0)
						LocalYearDiff					= LocalYearDiff
					else
						LocalYearDiff					= 0
					CountMidQuarterPeriod =		FirstYearInServicePeriods + (LocalYearDiff * 12)
					for each AllYearUntilPreviousCalendarsRel
						CountMidQuarterPeriod         += ((each.NumberOfDepreciationPeriodsClosed/CurrentBookCalendarsRel.DepreciationPeriodsPerYear) * 12)
				else
					while LocalNumberOfYearsPrior		!= 1
						if (LocalCountYears = 1)
							CountMidQuarterPeriod =		FirstYearInServicePeriods
						else
							CountMidQuarterPeriod	+= 12
						LocalCountYears 			+= 1
						LocalNumberOfYearsPrior 	-= 1
				if (CurrentBookCalendarsRel.DepreciationPeriodsPerYear >12)
					CountMidQuarterPeriod		= CountMidQuarterPeriod + ((CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed * 12)/CurrentBookCalendarsRel.DepreciationPeriodsPerYear)
				else
					CountMidQuarterPeriod		= CountMidQuarterPeriod + CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
			else
				CountMidQuarterPeriod			= NumberOfPeriodsFirstYear / MidQuarterFirstYearPeriods
				CountMidQuarterPeriod			= CountMidQuarterPeriod * MidQuarterFirstYearPeriodsClosed
			LocalLifeRemaining	= LocalLife - CountMidQuarterPeriod
			if (LocalLifeRemaining < 0)
				LocalLifeRemaining = 0
			return 	LocalLifeRemaining

		CountPeriods445Calendar is a DerivedField
			type is Numeric 3
			restricted			
			initialize LocalNumberOfPeriods
			initialize S1
			T1	= 1
			while (T1 <= 54 
			and S1 < LocalPeriodsClosed)	
				if (LocalStartDate <= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1])
					LocalNumberOfPeriods += CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[T1]
						S1 += 1
				T1 += 1
			return LocalNumberOfPeriods
										
		ImpairmentBookLife is a DerivedField
			type is Decimal 9.5
			restricted
			return (((GetImpairmentEndDate - InServiceDate) / 364) * 12)
		
		CurrentInServiceMonthEndDate is a DerivedField
			type is Boolean
			restricted
			T1 = CurrentBookCalendarsRel.NumberOfPeriodCloseRuns -1
			if (T1 != 0)
				LocalDaysDiffMonth = LastPeriodEnd - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
				LocalInServiceDiffDays = InServiceDate - CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[T1]
			else
				LocalDaysDiffMonth = LastPeriodEnd - CurrentBookCalendarsRel.YearBeginDate + 1
				LocalInServiceDiffDays = InServiceDate - CurrentBookCalendarsRel.YearBeginDate + 1
			LocalDaysDiffMonth = LocalDaysDiffMonth / 2
			if (LocalInServiceDiffDays >= (LocalDaysDiffMonth))
				return true
			else
				return false
			 
		CalculateBookDepreciation is a DerivedField	
			type is like InternationalAmount
			restricted
			LocalDeprSwitch 				= true
			LocalCompany					= InCompany
			LocalAsset      				= InAsset
			LocalFirstLastFl				= InFirstLastFlag
			InFirstAndLastYear				= InFirstLastFlag
			LocalLifeRemaining				= InLifeRemaining
			LocalLife						= InLife
			LocalDeprLTD					= InLTDDepr
			LocalDeprYTD					= InYTDDepr
			LocalProgram 					= "AM180"
			LocalYearEndDate	 			= InYearEndDate
			LocalNumberOfDepreciationPeriodsClosed = CurrentBookCalendarsRel.NumberOfDepreciationPeriodsClosed
			
			LocalPrevYearEndDate 			= InPrevYearEndDate 

			if (Convention.FullYear
			or Convention.HalfYear)
				LocalStartDate = InServiceDate
			else
			if ((Convention.ModifiedHalfMonth
			or Convention.ModifiedHalfYear
			or Convention.MidMonth)
			and InServiceDate > InDepreciationStartDate)
				LocalStartDate = InServiceDate
			else
				if (Convention.MidQuarter
				and InServiceDate < InDepreciationStartDate)
					LocalStartDate = InServiceDate
				else
					if (Convention.FullYear)
						LocalStartDate = InServiceDate
					else
						LocalStartDate = InDepreciationStartDate
			LocalStartDateSave = LocalStartDate
			if (CurrentBookCalendarsRel exists)
				I6										= NumberOfPeriodCloseRuns + 1
				LocalEndDate							= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
				LocalNumberOfDepreciationPeriodsPd 		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodNumbers.DepreciationPeriodNumber[I6]
				LastClosedDepreciationPeriodEndDate 	= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[NumberOfPeriodCloseRuns]
				CurrentDepreciationPeriodEndDate 		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I6]
			else
				initialize LocalEndDate
			if ((!Convention.FullMonth and !Convention.MidQuarter and !Convention.ModifiedHalfMonth and LocalStartDate > LocalEndDate)
			or ((Convention.FullMonth or Convention.MidQuarter) and InServiceDate > LocalEndDate)
			or (Convention.ModifiedHalfMonth and LocalStartDate <= InServiceDate and InServiceDate > LocalEndDate)
			or (Convention.ModifiedHalfMonth and LocalStartDate > InServiceDate and LocalStartDate > LocalEndDate)
			or (InFirstLastFlag = "C" and InLife != 0)
			or (InLife != 0 and LocalLifeRemaining <= 0 and InFirstLastFlag != "P" and InPersonalUseCode not entered))
				initialize LocalAnnualDepreciation
				initialize LocalPUAnnualDepreciation
				initialize LocalDeprCP
				initialize LocalDeprCPAllow
				initialize LocalLifeCP
				initialize LocalProcessedMonths
			else
				if (InFirstLastFlag = "F")
					initialize LocalDeprBonus
					initialize LocalDeprBonusFull
					initialize LocalDeprBonusAllow
					LocalCDB = FirstYearAlloc610
				else
					if (InFirstLastFlag = "L")
						initialize LocalDeprBonus
						initialize LocalDeprBonusFull
						initialize LocalDeprBonusAllow
						if (InMethod = "100%BONUS"
						and InPersonalUseCode entered)
							if (LocalOptMethod entered)
								InMethod = LocalOptMethod
							else
								InMethod = "200DB"
						LocalCDB = LastYearAlloc620
					else
						initialize LocalDeprBonus
						initialize LocalDeprBonusFull
						initialize LocalDeprBonusAllow
						if (InMethod = "100%BONUS"
						and InPersonalUseCode entered)
							if (LocalOptMethod entered)
								InMethod = LocalOptMethod
							else
								InMethod = "200DB"
						LocalCDB = MiddleYearAlloc630


		FirstYearAlloc610 is a DerivedField
			type is like InternationalAmount
			restricted
			LocalCDB	= FirstYearDepreciation640
			LocalSkip	= false
			if (LocalAnnualDepreciation not entered
			and (!LocalMethod	= "200DB30%"
			and !LocalMethod	= "SL40%"
			and LocalMethod		= "200DB75%"	
			and LocalMethod		= "150DB75%"
			and !LocalMethod	= "SL75%"
			and !LocalMethod	= "200DB40%"
			and !LocalMethod	= "150DB40%"
			and !LocalMethod	= "150DB30%"
			and !LocalMethod	= "SL30%"
			and !LocalMethod	= "100%BONUS"
			and !LocalMethod	= "200DB50%"
			and !LocalMethod	= "150DB50%"
			and !LocalMethod	= "SL50%"
			and !LocalMethod	= "SL20%"
			and !LocalMethod	= "200DB20%"
			and !LocalMethod	= "150DB20%"
			and !LocalMethod	= "SL60%"
			and !LocalMethod	= "200DB60%"
			and !LocalMethod	= "150DB60%"
			and !LocalMethod	= "SL80%"
			and !LocalMethod	= "200DB80%"
			and !LocalMethod	= "150DB80%"))
				initialize LocalDeprCP
				initialize LocalDeprCPAllow
				initialize LocalLifeCP
				initialize LocalLifeCP11
				LocalSkip 		= true
		
			if (!LocalSkip)
				if (LocalAnnualDepreciation not entered
				and LocalDeprBonus			not entered
				and (LocalMethod	= "200DB30%"
				or LocalMethod	= "SL40%"
				or LocalMethod	= "200DB75%"
				or LocalMethod	= "150DB75%"
				or LocalMethod	= "SL75%"
				or LocalMethod	= "200DB40%"
				or LocalMethod	= "150DB40%"
				or LocalMethod	= "150DB30%"
				or LocalMethod	= "SL30%"
				or LocalMethod	= "100%BONUS"
				or LocalMethod	= "200DB50%"
				or LocalMethod	= "150DB50%"
				or LocalMethod	= "SL50%"
				or LocalMethod	= "SL20%"
				or LocalMethod	= "200DB20%"
				or LocalMethod	= "150DB20%"
				or LocalMethod	= "SL60%"
				or LocalMethod	= "200DB60%"
				or LocalMethod	= "150DB60%"
				or LocalMethod	= "SL80%"
				or LocalMethod	= "200DB80%"
				or LocalMethod	= "150DB80%"))
					initialize LocalDeprCP
					initialize LocalDeprCPAllow
					initialize LocalLifeCP
					initialize LocalLifeCP11
					LocalSkip = true
			if (!LocalSkip)
				if (Convention.ActualDaysFirstMonth
				and LocalStartDate <= InServiceDate
				and InServiceDate <= LocalEndDate)
					LocalSkip = true
			if (!LocalSkip)
				if (Convention.ActualDays)	
					if (LocalLife		= LocalLifeRemaining
					and LocalLife		entered)
						LocalCDB		= AdjustDeprPeriods610    
					else
						if (LocalLife not entered
						and LocalDeprLTD = 0)
							LocalCDB		= AdjustDeprPeriods610
						else	
							LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
							LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
				else
					LocalNumberOfAdjDepreciationPeriodsPd		= LocalNumberOfDepreciationPeriodsPd
					LocalNumberOfAdjDepreciationPeriodsClosed 	= LocalNumberOfDepreciationPeriodsClosed
				if (Convention.MidMonth)
					if (LocalDeprLTD not entered
					and LocalNbrCalPd >= 12)  
						LocalNumberOfAdjDepreciationPeriodsClosed += (LocalNumberOfAdjDepreciationPeriodsPd * 0.5)
				if (Convention.MidMonth
				and LocalDeprLTD not entered
				and LocalNbrCalPd >= 12
				and (LocalProgram = "AM180"
				or  LocalProgram = "AM280"
				or  LocalProgram = "AM255")
				and NumberOfPeriodCloseRuns  > 0
				and InDepreciationStartDate <= LastClosedDepreciationPeriodEndDate)
					LocalNumberOfAdjDepreciationPeriodsClosed -= (LocalNumberOfAdjDepreciationPeriodsPd * 0.5)
				if (LocalInactYear entered
				and !LocalShortYear	
				and !LocalOvrdSW)	
					LocalAnnualDepreciation 		*= LocalProcessedMonths 
					LocalAnnualDepreciation 		-= (LocalInactYear * LocalAnnualDepreciation)
					if (LocalProcessedMonths > 0)
						LocalAnnualDepreciation 		/= LocalProcessedMonths
					LocalAnnualDepreciationSave		= LocalAnnualDepreciation
					
					LocalPUAnnualDepreciation 		*= LocalProcessedMonths
					LocalPUAnnualDepreciation 		-= (LocalInactYear * LocalPUAnnualDepreciation)
					if (LocalProcessedMonths > 0)
						LocalPUAnnualDepreciation 		/= LocalProcessedMonths
					LocalPUAnnualDepreciationSave	= LocalPUAnnualDepreciation
					
				if (LocalLife < 12
				and LocalTmpProcessedMonths > LocalLife)
					LocalDeprCP				= LocalNumberOfAdjDepreciationPeriodsPd * LocalAnnualDepreciationSave
					if (LocalLife > 0)
						LocalDeprCP				/= LocalLife
					LocalDeprCP				*= 12
					if (LocalDepreciationPeriodsPerYear > 0)
						LocalDeprCP			/= LocalDepreciationPeriodsPerYear
					LocalTempDeprCP			= LocalPUAnnualDepreciationSave - LocalDeprYTD
					
					if ((LocalDeprCP entered
					and LocalDeprCP			> LocalTempDeprCP)
					or  (LocalDeprCP 		< 0
					and LocalDeprCP			< LocalTempDeprCP))
						LocalDeprCP			= LocalTempDeprCP
				else
				if (Convention.ActualDaysFirstMonth)
					LocalDeprCP = LocalAdjBasis - LocalLife
				else
				if (Convention.ActualDays)
					I2 = 1
					if (LocalNumberOfAdjDepreciationPeriodsClosed not entered)
						LocalTmpFromDate	= InYearBeginDate
						LocalTmpToDate		= CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I2]
					else
						if (NumberOfPeriodCloseRuns entered)
							if (InServiceDate > LastClosedDepreciationPeriodEndDate
							and InServiceDate <= LocalEndDate)
								LocalTmpFromDate = InServiceDate - 1 day
							else
								LocalTmpFromDate = LastClosedDepreciationPeriodEndDate
						else
							LocalTmpFromDate = LocalPrevYearEndDate
						LocalTmpToDate = LocalEndDate
					if (NoOfDaysToDepreciateInPeriod not entered)
						NoOfDaysToDepreciateInPeriod = (LocalTmpToDate - LocalTmpFromDate)						
					LocalNbrDays		 = LocalYearEndDate - LocalPrevYearEndDate
					LocalLifeCP11 = NoOfDaysToDepreciateInPeriod * 12
					LocalLifeCP11 /= LocalNbrDays
					if ((LocalLifeCP11 * 100000000000) > 5)	
						round LocalLifeCP11 down to nearest 0.0000000001
					LocalLifeCP = LocalLifeCP11
					if (InMethod = "SL"
					and LocalLifeRemaining > 0)
						if (NumberOfPeriodCloseRuns entered)
							if (InServiceDate > LastClosedDepreciationPeriodEndDate
							and InServiceDate <= LocalEndDate)
								LocalTmpFromDate = InServiceDate - 1 day
							else
								LocalTmpFromDate = LastClosedDepreciationPeriodEndDate
						else
							if (CurrentBookCalendarsRel.DepreciationPeriods.DepreciationPeriodEndDates.DepreciationPeriodEndDate[I2] >= InServiceDate
							and LocalPrevYearEndDate <= InServiceDate)
								LocalTmpFromDate = InServiceDate - 1 day
							else
								LocalTmpFromDate = LocalPrevYearEndDate
						LocalTmpToDate = LocalYearEndDate
						LocalNbrDays = LocalTmpToDate - LocalTmpFromDate
						LocalDeprCP = (LocalAnnualDepreciationSave - LocalDeprYTD)
						LocalDeprCP *= NoOfDaysToDepreciateInPeriod
						LocalDeprCP /= LocalNbrDays
					else
						LocalDeprCP = LocalAnnualDepreciationSave * NoOfDaysToDepreciateInPeriod
						if (NoOfDaysToDepreciateInYear entered)
							LocalDeprCP /= NoOfDaysToDepreciateInYear
					initialize NoOfDaysToDepreciateInPeriod			 
				else
					if (LocalAssetBook.SpreadOverRemainingLife)
						LocalDeprCP				= LocalNumberOfAdjDepreciationPeriodsPd * LocalAnnualDepreciationSave
						if (LocalDepreciationPeriodsPerYear > 0)
							LocalDeprCP			/= LocalDepreciationPeriodsPerYear
					else
						if (AssetBookRel.Convention.ActualDaysFirstMonth)
							if (LocalDepreciationPeriodsPerYear > 12)
								LocalAnnualDepreciation  = (LocalAdjBasis * 12)
								LocalAnnualDepreciation /= LocalLife
								LocalDeprCP				 = (LocalNumberOfDepreciationPeriodsPd * LocalAnnualDepreciation)
								LocalDeprCP				/= LocalDepreciationPeriodsPerYear
							else
								LocalDeprCP 			 = (LocalNumberOfDepreciationPeriodsPd * LocalAdjBasis)
								LocalDeprCP 			/= LocalLife
						else
							LocalDeprCP				= LocalNumberOfAdjDepreciationPeriodsPd * (LocalAnnualDepreciationSave - LocalDeprYTD)
							LocalDeprPdPerYear		= LocalDepreciationPeriodsPerYear - LocalNumberOfAdjDepreciationPeriodsClosed
							if (LocalDeprPdPerYear > 0)
								LocalDeprCP			/= LocalDeprPdPerYear
				if (LocalLife < 12
				and LocalTmpProcessedMonths > LocalLife)
					LocalDeprCPAllow		= LocalNumberOfAdjDepreciationPeriodsPd * LocalPUAnnualDepreciationSave
					if (LocalLife > 0)
						LocalDeprCPAllow		/= LocalLife
					LocalDeprCPAllow		*= 12/LocalDepreciationPeriodsPerYear
					
					LocalTempDeprCP			= LocalPUAnnualDepreciationSave
					LocalTempDeprCP			-= LocalDeprYTDAllow
					
					if ((LocalDeprCPAllow 	> 0
					and LocalDeprCPAllow	> LocalTempDeprCP)
					or  (LocalDeprCPAllow 	< 0
					and LocalDeprCPAllow    < LocalTempDeprCP))
						LocalDeprCPAllow	= LocalTempDeprCP
				else
					LocalDeprCPAllow		=  LocalNumberOfAdjDepreciationPeriodsPd * (LocalAnnualDepreciationSave - LocalDeprYTDAllow)
					LocalDeprPdPerYear	   	= LocalDepreciationPeriodsPerYear - LocalNumberOfAdjDepreciationPeriodsClosed
					if (LocalDeprPdPerYear > 0)
						LocalDeprCPAllow		/= LocalDeprPdPerYear
					
				if (LocalLife entered
				and !LocalFirstLastFl		= "P")
					if (LocalLife 				< 12
					and LocalTmpProcessedMonths	> LocalLife)
						LocalLifeCP11				= LocalNumberOfAdjDepreciationPeriodsPd * LocalProcessedMonths
						LocalLifeCP11				-= LocalInactYear	
						if (LocalLife > 0)
							LocalLifeCP11				/= LocalLife	
						LocalLifeCP11				*= 12/LocalDepreciationPeriodsPerYear
						if (LocalLifeCP11 > LocalLifeRemaining)
							LocalLifeCP11 = LocalLifeRemaining
					else
						if (Convention.FullMonth
						and AssetBookRel.Convention.ActualDaysFirstMonth)
							if (LocalDepreciationPeriodsPerYear > 12)
								LocalLifeCP11  = (LocalNumberOfDepreciationPeriodsPd * 12)
								LocalLifeCP11 /= LocalDepreciationPeriodsPerYear
							else
								LocalLifeCP11 = 1
						else
							if (!AssetBookRel.Convention.ActualDays)
								LocalHisRemainPds		= LocalDepreciationPeriodsPerYear - LocalNumberOfAdjDepreciationPeriodsClosed
								LocalLifeCP11			= ((LocalNumberOfAdjDepreciationPeriodsPd * (LocalProcessedMonths - (LocalLife - (LocalLifeRemaining - LocalInactYear)))) / LocalHisRemainPds)
				if (LocalAssetBook.SpreadOverRemainingLife)
					LocalLifeCP11 = LocalNumberOfAdjDepreciationPeriodsPd * 12
					if (LocalDepreciationPeriodsPerYear > 0)
						LocalLifeCP11 /= LocalDepreciationPeriodsPerYear
				if ((LocalLifeCP11 * 100000000000) > 5)
					round LocalLifeCP11 down to nearest 0.0000000001
				LocalLifeCP = LocalLifeCP11
				LocalSkip = false
				if (LocalUOPPdSW)	
					if (LocalProgram = "AM255"
					and LocalProgramOption	= "A")
						LocalDeprCP				= LocalAnnualDepreciation
						LocalDeprCPAllow		= LocalAnnualDepreciation
					else
						LocalCDB				= CalcDeprCP	
						if (LocalLifeCP			< LocalLifeRemaining
						and LocalNumberOfDepreciationPeriodsPd	= LocalNumberOfAdjDepreciationPeriodsClosed)
							LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
							LocalTempDeprCP		= LocalPUAnnualDepreciation - LocalDeprYTDAllow
							LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
							LocalDeprCP			= LocalAnnualDepreciation - LocalDeprYTD
					LocalSkip = true
		
			if (!LocalSkip)
				if (Convention.MidMonth
				and LocalDeprLTD not entered
				and (LocalProgram = "AM180"
				or  LocalProgram = "AM280"
				or 	LocalProgram = "AM255")
				and NumberOfPeriodCloseRuns entered
				and LocalDeprStartDate  <= LastClosedDepreciationPeriodEndDate)
					LocalSkip = true
			if (!LocalSkip)	
				if (Convention.MidMonth
				and LocalLife = LocalLifeRemaining)
					if (LocalNbrCalPd >= 12)
						LocalLifeCP			*= 0.5
						LocalDeprCP			*= 0.5
						LocalDeprCPAllow	*= 0.5
					else
						LocalNbrMonthCalPd		= 12/LocalNbrCalPd
						LocalTempLifeCP			= LocalProcessedMonths
						while (LocalTempLifeCP 	>= LocalNbrMonthCalPd)
							LocalTempLifeCP		-= LocalNbrMonthCalPd
						LocalLifeCP				= LocalTempLifeCP
						LocalDeprCP				= ((LocalAnnualDepreciationSave / LocalProcessedMonths) * LocalLifeCP)
						LocalDeprCPAllow		= ((LocalPUAnnualDepreciationSave / LocalProcessedMonths) * LocalLifeCP)
				if (LocalAnnualDepreciation not entered
				and LocalDeprYTD not entered
				and (LocalMethod	= "200DB30%"
				or  LocalMethod	= "SL40%"
				or  LocalMethod	= "200DB75%"
				or  LocalMethod	= "150DB75%"
				or  LocalMethod	= "SL75%"
				or  LocalMethod	= "200DB40%"
				or  LocalMethod	= "150DB40%"
				or  LocalMethod	= "150DB30%"
				or  LocalMethod	= "SL30%"
				or  LocalMethod	= "100%BONUS"
				or  LocalMethod	= "200DB50%"
				or  LocalMethod	= "150DB50%"
				or  LocalMethod	= "SL50%"
				or  LocalMethod	= "SL20%"
				or  LocalMethod	= "200DB20%"
				or  LocalMethod	= "150DB20%"
				or  LocalMethod	= "SL60%"
				or  LocalMethod	= "200DB60%"
				or  LocalMethod	= "150DB60%"
				or  LocalMethod	= "SL80%"
				or  LocalMethod	= "200DB80%"			
				or  LocalMethod	= "150DB80%"))
					initialize LocalDeprCP
					initialize LocalDeprCPAllow
				if (LocalAssetBook.PersonalUseCode not entered
				and LocalDeprCPAllow != LocalDeprCP)
					LocalDeprCPAllow	= LocalDeprCP
				if (LocalAssetBook.PersonalUseCode entered
				and LocalAssetBook.Method 	= "100%BONUS"
				and LocalDeprCP entered)
					initialize LocalDeprCP
					
