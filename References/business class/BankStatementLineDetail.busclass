BankStatementLineDetail is a BusinessClass
	owned by cashmgmt
	prefix is CBSLD

	Ontology
		symbolic key is BankStatementLineDetail

	Patterns
		implements Archivable

	Persistent Fields
		CashManagementAccount
		BankStatement
		BankStatementLine
		DebitCreditIndicator
		StatementDate					  	is a snapshot of BankStatement.StatementDate
		TransactionNumber				  	is Alpha 16
		RelatedReference				  	is a BankStatementLineReference
		BankReference					  	is a BankStatementLineReference
		TextReference					  	is a BankStatementLineReference
		StatementIntraday				  	is Boolean
			default label is "Intraday"
		Description						  	is a BankStatementLineDescription
		LineAmount						  	is an InternationalAmount
		CorporateBaseAmount				  	is an InternationalAmount
		LocationCurrencyAmount			  	is an InternationalAmount
		CompanyCurrencyAmount			  	is an InternationalAmount
		OriginalLineAmount				  	is an InternationalAmount
		LineCurrency					  	is a FromCurrency
			default label is "Currency"
		LineDetailStatus					is Numeric 1
			default label is "Status"
			States
				Unreconciled	value is 0
				Reconciled		value is 1
				Pending			value is 2
 		CurrencyGainLossLine				is Boolean
 		ReconSummaryRecord
		PendingReconcileDate			  	is Date
		ReconciliationIdentifier
		Comment							  	is Text




		OverrideCategory					is a CashTransactionCategory
		BankTransactionCode
		CreatedCashLedgerSourceRecord		is a CashLedgerSourceRecord
		CreatedCashLedgerTransaction	  	is a CashLedgerTransaction
		StatementLinePostingOption
	
	Local Fields
		LocalCashManagementGroup			is like CashManagementGroup
		LocalCashManagementAccount			is like CashManagementAccount
		LocalBankStatement					is like BankStatement
		LocalBankStatementLine				is like BankStatementLine
		LocalCashLedgerTransaction		  	is a CashLedgerTransaction view
		LastCashLedgerGLDistribution	  	is a CashLedgerGLDistribution view
		LastBankStatementLineDistribution 	is a BankStatementLineDistribution view
		LocalAccountInformation			  	is a FinanceCodeBlockFull
		LocalCashAllocationCode			  	is an CashAllocationCode
		LocalCashCode						is like CashCode
		LocalTransactionDate				is Date
		LocalRoundedLineAmount				is an InternalAmount
		DistributionRunningTotal		  	is an InternationalAmount
		AutoNumberingAction			 		is Numeric 1
			States
				OverrideNumberWithAnAutoGeneratedNumber	value is 1
				BypassAutoTransactionNumbering			value is 2
	
	Derived Fields
		AutoCashTransactionCreateDescription is a MessageField
			restricted
			"StatementLineDetailCategory;<OverrideCategory>"
		
		CreatedCashLedgerTransactionLineMatchField is a DerivedField
			type is AlphaUpper 20
			restricted
			return (BankTransactionCode + CreatedCashLedgerTransaction.TransactionNumber)
	
	

							
	Field Rules








		
		DebitCreditIndicator
			if (DebitCreditIndicator !entered)	
				if (LineAmount >= 0)
					DebitCreditIndicator = "C"
				else
					DebitCreditIndicator = "D"
						
		RelatedReference
			RelatedReference -= "\\\\"
			RelatedReference -= " "
			default to BankStatementLine.RelatedReference
			
		BankReference
			BankReference -= "\\\\"
			BankReference -= " "
			default to BankStatementLine.BankReference
		
		TextReference
			TextReference -= "\\\\"
			TextReference -= " "
			default to BankStatementLine.TextReference
		
		Description
			Description -= "\\\\"
			Description -= " "
			default to BankStatementLine.Description
		
		LineAmount
			required
			if (LineAmount changed)
				if (LineAmount >= 0)
					DebitCreditIndicator = "C"
				else
					DebitCreditIndicator = "D"
							
		LineCurrency
			default to BankStatement.StatementCurrency

		CorporateBaseAmount
			if (!CurrencyGainLossLine)
				CorporateBaseAmount	= (LineAmount * BankStatement.CorporateBaseEndingBalance.EnteredCurrencyRate)
		
		CompanyCurrencyAmount
			if (!CurrencyGainLossLine)
				CompanyCurrencyAmount = (LineAmount * BankStatement.CompanyCurrencyEndingBalance.EnteredCurrencyRate)

		LocationCurrencyAmount
			if (!CurrencyGainLossLine)
				LocationCurrencyAmount	= (LineAmount * BankStatement.LocationCurrencyEndingBalance.EnteredCurrencyRate)

		CurrencyGainLossLine
			force default to BankStatementLine.CurrencyGainLossLine
		
		Comment
			default to BankStatementLine.Comment

		OverrideCategory
			if (OverrideCategory changed
			and !StatementIntraday)
				constraint (BankStatementLine.StatementLinePostingOption.NonPosting)
					"LinePostingOptionShouldBe_\Non_\PostingToUpdateOverrideCategory"
				if (HasReleasedOrPostedDistributions)
					confirmation required
						"ReleasedOrPostedDistributionsExistForLineDetail;UpdatingCategoryWillNotUpdateDistributions;AdditionalDistributionsCanBeManuallyEnteredIfNeeded"
				else				
				if  (CreatedCashLedgerTransaction entered)
					confirmation required
						"CashLedgerTransactionsExistForLineDetail;UpdatingOverrideCategoryWillNotUpdateCashLedgerTransaction;AdditionalDistributionsCanBeManuallyEnteredIfNeeded"
					constraint (!OverrideCategory.StatementLinePostingOption.PostToGeneralLedger)
						"CannotAssignGlobalLedgerPostingCategoryToLineDetailWithCashLedgerTransaction"	
				else				
					if (UnreleasedLineDistributionRel exists)					
						confirmation required
							"DistributionInformationWillBeUpdated;WouldYouLikeToContinue?"	
						invoke Delete UnreleasedLineDistributionRel
					StatementLinePostingOption	= OverrideCategory.StatementLinePostingOption
					LocalAccountInformation		= OverrideCategory.CategoryAccount 
					LocalCashAllocationCode		= OverrideCategory.CashAllocationCode
					invoke DetailDistributionCreation
				
	Conditions
		LineCurrencyNotCorporateBaseCurrency
			restricted
			when (LineCurrency != CashManagementGroup.Currency)
			
		LineCurrencyNotCompanyCurrency
			restricted
			when (LineCurrency != CashManagementAccount.LegalEntity.Currency)
		
		LineCurrencyNotLocationCurrency
			restricted
			when (LineCurrency != CashManagementAccount.CashManagementLocation.Currency)
		
		HasReleasedOrPostedDistributions
			restricted
			when (ReleasedOrPostedLineDistributionRel exists)
			
	Sets
		ByReconciledStatus
			Sort Order
				CashManagementGroup
				CashManagementAccount
				BankStatement
				LineDetailStatus
				PendingReconcileDate
				BankStatementLine
				BankStatementLineDetail
		
		ByReconciledStatusByAccount
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineDetailStatus
				StatementDate
				BankStatement
				BankStatementLine
				BankStatementLineDetail
		
		ByBankStatementLine
			Sort Order
				CashManagementGroup
				CashManagementAccount
				BankStatement
				BankStatementLine
				BankStatementLineDetail
				
	Relations
		HideForAuditorRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor			= actor
 				related.ActorRole.Role	= "RECONExternalAuditor_ST"		

		NoLineDetailBankStatementReconciliationRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByBankStatementLine
				related.CashManagementGroup		= LocalCashManagementGroup
				related.CashManagementAccount	= LocalCashManagementAccount
				related.BankStatement			= LocalBankStatement
				related.BankStatementLine		= LocalBankStatementLine
			Instance Selection
				where (!related.BankStatementLineDetail entered)
		
		UnreleasedLineDistributionRel is a BankStatementLineDistribution set
			Instance Selection
				where (related.Status.Entered
				and    related.BankStatementLineDetail = BankStatementLineDetail)

		ReleasedOrPostedLineDistributionRel is a BankStatementLineDistribution set
			Instance Selection
				where (related.Status > 0
				and    related.Status < 3
				and    related.BankStatementLineDetail = BankStatementLineDetail)

	Rule Blocks

		DetailDistributionCreation
			if (!StatementIntraday)
				if (StatementLinePostingOption.PostToCashLedger)
					if (OverrideCategory.PostingCashCode entered
					and OverrideCategory.PostingCashCode.BankAccountNumber != CashManagementAccount)
						confirmation required
							"OverrideBankAccountCashCode<OverrideCategory.PostingCashCode>OnCategory<OverrideCategory>IsAssociatedWithAccount<OverrideCategory.PostingCashCode.BankAccountNumber>;CashLedgerTransactionWillBeCreatedWithCashCode<CashManagementAccount.CashCode>FromAccount<CashManagementAccount>"
					if (OverrideCategory.PostingCashCode entered
					and OverrideCategory.PostingCashCode.BankAccountNumber = CashManagementAccount)
						LocalCashCode							= OverrideCategory.PostingCashCode
					else
						LocalCashCode							= CashManagementAccount.CashCode
					if (LineAmount >= 0)
						BankTransactionCode				= CashManagementAccount.CreditTransactionCode
					else
						BankTransactionCode				= CashManagementAccount.DebitTransactionCode	
					if (!BankStatementLine.AutoNumberingAllowed)
						invoke UpdateCashLedgerTransactionNumbering CashManagementAccount	

						
					invoke Create CashLedgerTransaction
						assign result to LocalCashLedgerTransaction
						fill in user fields from OverrideCategory	
						fill in user fields from BankStatement				
						fill in user fields from this instance				
						invoked.CashManagementGroup				= CashManagementGroup
						if (LineAmount >= 0)
							invoked.IssuedBankAmountUnsigned	= LineAmount						
						else
							invoked.IssuedBankAmountUnsigned	= (LineAmount * -1)
						invoked.BankTransactionCode				= BankTransactionCode
						invoked.CashCode						= LocalCashCode	
						invoked.CashLedgerSourceRecord			= "CBT"
						if (BankStatementLine.AutoNumberingAllowed)
							invoked.TransactionNumber			= blank
							invoked.AutoNumberingAction			= BankStatementLine.AutoNumberingAction.OverrideNumberWithAnAutoGeneratedNumber
						else						
							invoked.TransactionNumber			= CashManagementAccount.CashLedgerTransactionNumbering
						if (OverrideCategory.PostingCompany entered)
							invoked.Company						= OverrideCategory.PostingCompany
						else
							invoked.Company						= CashManagementAccount.LegalEntity
						invoked.IssueDate						= BankStatementLine.TransactionDate	
						invoked.GeneralLedgerPostDate			= BankStatementLine.CashLedgerPostingDate
						invoked.Description						= AutoCashTransactionCreateDescription
						invoked.CreatedFromBankStatement		= BankStatement
						invoked.CreatedFromBankStatementLine	= BankStatementLine	
						invoked.CreatedFromBankStatementLineDetail	= BankStatementLineDetail	
						if (OverrideCategory.OverrideEventCode entered)
            				invoked.GeneralLedgerEvent 			= OverrideCategory.OverrideEventCode
					BankTransactionCode				= LocalCashLedgerTransaction.BankTransactionCode
					CreatedCashLedgerSourceRecord	= "CBT"
					CreatedCashLedgerTransaction	= LocalCashLedgerTransaction.CashLedgerTransaction
					if (LocalAccountInformation entered)
						increment LocalCashLedgerTransaction.CashLedgerTransaction.LastDistributionSequence
						invoke Create CashLedgerGLDistribution
							fill in user fields from OverrideCategory	
							fill in user fields from BankStatement				
							fill in user fields from this instance				
							fill in fields from LocalCashLedgerTransaction.CashLedgerTransaction
							invoked.CashLedgerSourceRecord							= "CBT"
							invoked.CashLedgerGLDistribution.BankTransactionCode	= LocalCashLedgerTransaction.BankTransactionCode
							invoked.CashLedgerGLDistribution.TransactionIDNumber	= LocalCashLedgerTransaction.CashLedgerTransaction
							invoked.CashLedgerGLDistribution.SequenceNumber			= LocalCashLedgerTransaction.CashLedgerTransaction.LastDistributionSequence
							invoked.CompanyAccountingEntity							= CashManagementAccount.LegalEntity.AccountingEntity
							invoked.LocalControlDocumentNumber						= LocalCashLedgerTransaction.CashLedgerTransaction.TransactionNumber	
							invoked.LocalDocumentNumber								= LocalCashLedgerTransaction.CashLedgerTransaction.TransactionNumber	
							invoked.LocalExchangeDate								= BankStatementLine.TransactionDate	
							invoked.LocalPostingDate								= BankStatementLine.CashLedgerPostingDate
							invoked.LocalGeneralLedgerEvent							= "CL"
							invoked.LocalDescription								= AutoCashTransactionCreateDescription
							invoked.LocalKeepRateOnly								= false
							invoked.GLFinanceCodeBlock								= LocalAccountInformation
							invoked.GLTransactionAmount								= (LineAmount *-1)
					else
						if (LocalCashAllocationCode entered)
							for each LocalCashAllocationCode.CashAllocationCodeDetail set
								increment LocalCashLedgerTransaction.CashLedgerTransaction.LastDistributionSequence
								invoke Create CashLedgerGLDistribution
									assign result to LastCashLedgerGLDistribution
									fill in user fields from OverrideCategory	
									fill in user fields from BankStatement				
									fill in user fields from this instance				
									fill in fields from LocalCashLedgerTransaction.CashLedgerTransaction
									invoked.CashLedgerSourceRecord							= "CBT"
									invoked.CashLedgerGLDistribution.BankTransactionCode	= LocalCashLedgerTransaction.BankTransactionCode
									invoked.CashLedgerGLDistribution.TransactionIDNumber	= LocalCashLedgerTransaction.CashLedgerTransaction
									invoked.CashLedgerGLDistribution.SequenceNumber			= LocalCashLedgerTransaction.CashLedgerTransaction.LastDistributionSequence
									invoked.CompanyAccountingEntity		= CashManagementAccount.LegalEntity.AccountingEntity
									invoked.LocalControlDocumentNumber	= LocalCashLedgerTransaction.CashLedgerTransaction.TransactionNumber	
									invoked.LocalDocumentNumber			= LocalCashLedgerTransaction.CashLedgerTransaction.TransactionNumber	
									invoked.LocalExchangeDate			= BankStatementLine.TransactionDate		
									invoked.LocalPostingDate			= BankStatementLine.CashLedgerPostingDate
									invoked.LocalGeneralLedgerEvent		= "CL"		
									invoked.LocalDescription			= AutoCashTransactionCreateDescription
									invoked.LocalKeepRateOnly			= false
									invoked.GLFinanceCodeBlock			= each.AllocationAccount
									if (LocalCashAllocationCode.AllocationType.AccountOnly)
										invoked.BypassUnitAndAmountEdit = true
									if (LocalCashAllocationCode.AllocationType.Amount)
										invoked.GLTransactionAmount		= each.AllocationAmount
									if (LocalCashAllocationCode.AllocationType.Percent)
										LocalRoundedLineAmount = ((LineAmount *-1) * each.AllocationPercent)
										round LocalRoundedLineAmount to nearest BankStatementLine.DerivedLocalRoundTo
										invoked.GLTransactionAmount 	= LocalRoundedLineAmount
								if (LocalCashAllocationCode.AllocationType.Percent)
									DistributionRunningTotal += LocalRoundedLineAmount	
							if  (LocalCashAllocationCode.AllocationType.Percent
							and (LineAmount - DistributionRunningTotal) != 0)
								invoke Update LastCashLedgerGLDistribution.CashLedgerGLDistribution
									fill in user fields from OverrideCategory	
									fill in user fields from BankStatement				
									fill in user fields from this instance				
									invoked.GLTransactionAmount -= (LineAmount + DistributionRunningTotal)	
				else
				if (StatementLinePostingOption.PostToGeneralLedger) 
					if (LocalAccountInformation entered)
						invoke CreateFromReclassification BankStatementLineDistribution
							assign result to LastBankStatementLineDistribution
							fill in user fields from OverrideCategory	
							fill in user fields from BankStatement				
							fill in user fields from this instance				
							invoked.CashManagementGroup	 	= CashManagementGroup
							invoked.CashManagementAccount	= CashManagementAccount
							invoked.BankStatement			= BankStatement
							invoked.BankStatementLine		= BankStatementLine
							invoked.BankStatementLineDetail = BankStatementLineDetail
							invoked.PostingDate				= BankStatementLine.CashLedgerPostingDate
							invoked.GLFinanceCodeBlock		= LocalAccountInformation
							invoked.GLTransactionAmount		= (LineAmount *-1)
							invoked.StatementLineCategory = OverrideCategory
					else
					if (LocalCashAllocationCode entered)
						for each LocalCashAllocationCode.CashAllocationCodeDetail set
							invoke CreateFromReclassification BankStatementLineDistribution
								assign result to LastBankStatementLineDistribution
								fill in user fields from OverrideCategory	
								fill in user fields from BankStatement				
								fill in user fields from this instance				
								invoked.CashManagementGroup	 	= CashManagementGroup
								invoked.CashManagementAccount	= CashManagementAccount
								invoked.BankStatement			= BankStatement
								invoked.BankStatementLine		= BankStatementLine
								invoked.PostingDate				= BankStatementLine.CashLedgerPostingDate
								invoked.GLFinanceCodeBlock		= each.AllocationAccount
								invoked.StatementLineCategory = OverrideCategory
								if (LocalCashAllocationCode.AllocationType.Amount)
									invoked.GLTransactionAmount		= each.AllocationAmount
								if (LocalCashAllocationCode.AllocationType.Percent)
									LocalRoundedLineAmount = ((LineAmount *-1) * each.AllocationPercent)
									round LocalRoundedLineAmount to nearest BankStatementLine.DerivedLocalRoundTo
									invoked.GLTransactionAmount		= LocalRoundedLineAmount
								if (LocalCashAllocationCode.AllocationType.AccountOnly)
									invoked.BypassUnitAndAmountEdit = true
								invoked.Comment					= each.Comment
							
							if (LocalCashAllocationCode.AllocationType.Percent)
								DistributionRunningTotal += LocalRoundedLineAmount
								
						if  (LocalCashAllocationCode.AllocationType.Percent
						and (LineAmount - DistributionRunningTotal) != 0)
							invoke Update LastBankStatementLineDistribution.BankStatementLineDistribution
								fill in user fields from OverrideCategory	
								fill in user fields from BankStatement				
								fill in user fields from this instance				
								invoked.GLTransactionAmount += ((LineAmount *-1) - DistributionRunningTotal)

  	Actions
  		Create is a Create Action
		    Action Rules
		    	constraint (!BankStatementLine.StatementLinePostingOption.PostToCashLedger)
					"PostingOptionCannotBePostToCashLedgerWhenCreatingBankStatementLineDetails"
			Exit Rules
				StatementLinePostingOption	= OverrideCategory.StatementLinePostingOption
				LocalAccountInformation		= OverrideCategory.CategoryAccount 
				LocalCashAllocationCode		= OverrideCategory.CashAllocationCode
				invoke DetailDistributionCreation
				invoke UpdateLineExceptionStatus BankStatementLine				
		    	
  		Update is an Update Action
  			valid when (!ReconciliationIdentifier entered)
			Field Rules
				OverrideCategory
					if (LineDetailStatus.Reconciled)
						cannot be changed
							"UpdateNotAllowedOnReconciledStatementLineDetails"
					if (OverrideCategory changed)
						invoke UpdateCashTransactionCategory ReconciliationIdentifier.BankStatementReconciliation
							invoked.CashTransactionCategory		= OverrideCategory
			Exit Rules
				invoke UpdateLineExceptionStatus BankStatementLine
  		
  		UpdateStatementDetails is a Set Action


            	
            Parameters
	            PrmCashManagementGroup				is a CashManagementGroup
	            PrmCashManagementAccount			is a CashManagementAccount
	            PrmApplyToAll						is Boolean
	            PrmBankStatementLineDetailSelection	is a BankStatementLineDetail group
	            PrmBankStatement					is a BankStatement
	            PrmBankStatementLine				is a BankStatementLine
	        
	        Parameter Rules
	        	PrmApplyToAll
	        		if (!PrmBankStatementLineDetailSelection entered)
	        			required
	        				"MustEnterALineDetailSelectionOrApplyToAll"
	        				
	        	PrmBankStatementLineDetailSelection
	        		if (PrmApplyToAll entered)
						cannot be entered
							"CanEnterEitherALineDetailSelectionOrApplyToAll"
	        	
	        	PrmCashManagementAccount
	        		required
	        			"AccountIsRequired"

	        	PrmBankStatement
	        		required
	        			"StatementNumberIsRequired"
	        			
	        	PrmBankStatementLine
	        		required
	        			"LineNumberIsRequired"
	        						   
            Sort Order is ByReconciledStatusByAccount	
                
            Instance Selection
                where   (CashManagementGroup = PrmCashManagementGroup              
                and		 LineDetailStatus.Unreconciled
                and     (PrmApplyToAll
                or		 BankStatementLineDetail within PrmBankStatementLineDetailSelection)) 
                
            Action Rules
            	Set Rules
	            	Entrance Rules
	            		confirmation required
	            			"Caution:ThisActionWillUpdateAllSelectedRecordsWithTheNewStatementDetails;WouldYouLikeToContinue?"
            			
                Instance Rules
					if (CashManagementAccount != PrmCashManagementAccount)
                		CashManagementAccount = PrmCashManagementAccount
                		
					if (BankStatement != PrmBankStatement)
                		BankStatement = PrmBankStatement
                		
                	if (BankStatementLine != PrmBankStatementLine)
                		BankStatementLine = PrmBankStatementLine
	    

	            
  		Delete is a Delete Action
			valid when (!ReconciliationIdentifier entered)
			Entrance Rules
				if (CreatedCashLedgerTransaction entered)
					constraint (CreatedCashLedgerTransaction.Status.Unreleased)
						"BankStatementLineDetailHasReleasedCashLedgerTransaction;CannotDelete"
					invoke Delete CreatedCashLedgerTransaction
			Exit Rules
				invoke UpdateLineExceptionStatus BankStatementLine		
			
  		Purge is a Purge Action
  			restricted
  		
  		UpdateLineDetailStatus is an Instance Action
  			default label is untranslatable
  			restricted
  			Parameters
  				PrmLineStatus 					is Numeric 1
					default label is "Status"
					States
						Unreconciled	value is 0
						Reconciled		value is 1
						Pending			value is 2
				PrmCashManagementAccount		is a CashManagementAccount
				PrmReconSummaryRecord			is a BankStatementReconciliation
				PrmPendingReconcileDate			is Date
				PrmInitializeReconSummaryRecord	is Boolean
				PrmInitializeReconIdentifier	is Boolean
				
  			Action Rules
  				LineDetailStatus = PrmLineStatus
				if (PrmReconSummaryRecord entered)
					ReconSummaryRecord = PrmReconSummaryRecord
				if (PrmPendingReconcileDate entered)
					PendingReconcileDate = PrmPendingReconcileDate
				if (PrmInitializeReconSummaryRecord)
					initialize ReconSummaryRecord
				if (PrmInitializeReconIdentifier)
					initialize ReconciliationIdentifier
				if (!PrmLineStatus.Reconciled)
					initialize PendingReconcileDate	





				if (PrmLineStatus.Pending
				and BankStatement.StatementStatus.Unreconciled)
					invoke UpdateReconciliationStatus Unreconciled BankStatement
				
				if (PrmLineStatus.Reconciled
				and old LineDetailStatus.Pending
				and BankStatement.StatementStatus.Unreconciled)
					invoke UpdateReconciliationStatus Unreconciled BankStatement
						
		LoadLineDetailsIntoReconciliation is a Set Action
			default label is untranslatable
			restricted
			Parameters
  				PrmCashManagementGroup		is a CashManagementGroup
  				PrmCashManagementAccount	is a CashManagementAccount
  				PrmBankStatement			is a BankStatement
  				PrmBankStatementLine		is a BankStatementLine
  				PrmMassStatementLoad		is Boolean
  				PrmMassAccountLoad			is Boolean
  				
  			Parameter Rules
  				PrmCashManagementGroup		required
  				PrmCashManagementAccount	required
  			
			Local Fields
				LocalReconciliationIdentifier is a BankStatementReconciliation view
				BackgroundGroup				  is AlphaUpper up to 50
				
  			Sort Order is ByBankStatementLine	
				
			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
  				and    CashManagementAccount = PrmCashManagementAccount
  				and	  (!PrmBankStatement entered
  				or     BankStatement = PrmBankStatement)
  				and    !StatementIntraday
				and    !ReconciliationIdentifier entered
				and    !CurrencyGainLossLine)
  				
			Action Rules
				Empty Set Rules
					if (PrmBankStatement entered)
						increment PrmBankStatement.CompletedReconLoadProcesses
						if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
							if (PrmMassStatementLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
							invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
								invoked.PrmCashManagementGroup		= PrmCashManagementGroup
								invoked.PrmCashManagementAccount	= PrmCashManagementAccount
								invoked.PrmBankStatement			= PrmBankStatement
					else
						increment PrmCashManagementAccount.CompletedReconLoadProcesses
						if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
							if (PrmMassAccountLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
							invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
								invoked.PrmMassAccountLoad	= PrmMassAccountLoad
				
				BankStatementLine Set Rules
					Exit Rules
						LocalCashManagementGroup = PrmCashManagementGroup
						LocalCashManagementAccount = PrmCashManagementAccount
						LocalBankStatement = BankStatement
						LocalBankStatementLine = BankStatementLine
						if (NoLineDetailBankStatementReconciliationRel exists) 
							invoke Delete NoLineDetailBankStatementReconciliationRel
						
				Set Rules
					Exit Rules
						if (PrmBankStatement entered)
							increment PrmBankStatement.CompletedReconLoadProcesses
							if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
								if (PrmMassStatementLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
								invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
									invoked.PrmCashManagementGroup		= PrmCashManagementGroup
									invoked.PrmCashManagementAccount	= PrmCashManagementAccount
									invoked.PrmBankStatement			= PrmBankStatement
						else
							increment PrmCashManagementAccount.CompletedReconLoadProcesses
							if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
								if (PrmMassAccountLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
								invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
									invoked.PrmMassAccountLoad	= PrmMassAccountLoad
									
				Instance Rules
					invoke Create BankStatementReconciliation
						assign result to LocalReconciliationIdentifier
						fill in fields from this instance
						invoked.LineType					= 1 
						if(OverrideCategory.StatementLinePostingOption.PostToGeneralLedger)
							invoked.PostStatementLine		= true
						if (LineAmount < 0)
							invoked.TransactionAmount		= (LineAmount * -1)
						else
							invoked.TransactionAmount 		= LineAmount
						invoked.DebitCreditIndicator		= DebitCreditIndicator
						invoked.TransactionDate				= BankStatementLine.TransactionDate
						invoked.BankTransactionCode		  	= BankStatementLine.BankTransactionCode
						invoked.TransactionType				= BankStatementLine.TransactionType
						if(OverrideCategory entered)
							invoked.CashTransactionCategory		= OverrideCategory
						else
							invoked.CashTransactionCategory		= BankStatementLine.CashTransactionCategory
						invoked.RelatedReference			= RelatedReference
						invoked.BankReference				= BankReference
						invoked.TextReference				= TextReference
						
					ReconciliationIdentifier	= LocalReconciliationIdentifier.BankStatementReconciliation
					
					if (LineDetailStatus.Reconciled)
						invoke MarkAsReconciled LocalReconciliationIdentifier.BankStatementReconciliation

		BankStatementLineDetailPurge is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup						is a CashManagementGroup
				PrmCashManagementAccount					is a CashManagementAccount
				PrmDetailPurgeCutoffDate					is Date
			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
				and    CashManagementAccount = PrmCashManagementAccount
				and    BankStatement.StatementStatus.Closed
				and    StatementDate <= PrmDetailPurgeCutoffDate)
			Action Rules
				Instance Rules
					invoke PurgeInternal ReconciliationIdentifier.BankStatementReconciliation
					invoke Purge

		
		DetailDistributionCreation is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				include DetailDistributionCreation
			Exit Rules
				if (StatementLinePostingOption.PostToCashLedger
				and CashManagementAccount.AutoReleaseCashLedgerTransactions)
					invoke Unreleased.Release LocalCashLedgerTransaction.CashLedgerTransaction
						resume on error	
