RequisitionTransaction is a BusinessClass
    owned by rq
    prefix is RQT
    classic name is RQTRANS

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        FromCompanyLocation
        RequisitionTransaction
            classic name for RequisitionTransaction.RequisitionDocumentType is DOC-TYPE
            classic name for RequisitionTransaction.Requisition is REQ-NUMBER
            classic name for RequisitionTransaction.DocumentNumberNumeric is DOC-NBR-NUM
            classic name for RequisitionTransaction.RequisitionSequence is SEQ
            classic name for RequisitionTransaction.RequisitionLine is LINE-NBR
        TransactionDate         is Date
            classic name is TRANS-DATE
        ItemType
        Item
        Quantity
        StockUOM                is a UnitOfMeasure
        UnitCost                is an InternationalCost
        Company                 is an InventoryCompany
        RequestingLocation		is like RequestingLocation
            classic name is REQ-LOCATION
        Note
        MajorPurchasingClass
            classic name is PURCH-MAJOR
        MinorPurchasingClass
            classic name is PURCH-MINOR
        TransactionUnitCost     is an InternationalCost
            classic name is TRAN-UNIT-COST
        TransactionCurrencyCode is a Currency
            classic name is TRAN-CURR-CODE
        ConversionRate          is an EnteredCurrencyConversionRate
            classic name is CNV-RATE

	Local Fields
		LocalPurchaseOrderLine	is like PurchaseOrderLine
		RoundedValue
		LocalFinanceEnterpriseGroup			is like FinanceEnterpriseGroup
		LocalCompany						is like Company
		LocalInventoryReportGroup  			is an InventoryReportGroup
		LocalRequestingLocation				is a RequestingLocation
		LocalItem							is an Item
		LocalDateRange						is a DateRange
		FormulaHelper
		LocalInventoryControlResult			is like InventoryControlResult
		LocalParLocationUtilizationHeader 	is like ParLocationUtilizationHeader	
		
    Derived Fields

        LineExtendedAmount is a DerivedField										
            type is like InternationalCost
            restricted
            classic name is LINE-EXT
            return (Quantity * UnitCost)

		DerivedSquareRoot is a DerivedField
			type is like UnsignedQuantity
			restricted
			constraint (FormulaHelper.GetSquareRoot)
				"FailedToGetSquareRoot"
			return FormulaHelper.SquareRoot

    Conditions
    	HasInventoryReportGroupLocation
			restricted
			when (InventoryReportGroupLocationRel exists)    		

        IsInventoryOrNonstock
        	restricted
            classic name is ITEM
            when (ItemType.Inventoried
            or    ItemType.NonStock)

        IsInventory	
        	restricted
            classic name is ITEMLOC
            when (ItemType.Inventoried)
            
        RequestingLocationExists
        	when (RequestingLocationRel exists)
        	
        SecurityGroupAllowsAccess
			restricted
			when (Company !entered
			or   (Company entered
			and   Company.SecurityGroupAllowsAccess))

    Relations
		ParLocationUtilizationCurrentHeaderRel
			one-to-many relation to ParLocationUtilizationHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.InventoryControlResult			= LocalInventoryControlResult
			Instance Selection
				where (related.InventoryLocation		= LocalRequestingLocation)
  		ParLocationUtilizationHeaderRel
	    	one-to-many relation to ParLocationUtilizationHeader
	    	Field Mapping uses symbolic key
	    		related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
	    		related.InventoryControlResult			= LocalInventoryControlResult
	    		related.ParLocationUtilizationHeader	= LocalParLocationUtilizationHeader
	    		    
	    ParLocationUtilizationLineRel
	    	one-to-many relation to ParLocationUtilizationLine
	    	Field Mapping uses symbolic key
	    		related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
	    		related.InventoryControlResult			= LocalInventoryControlResult
	    		related.ParLocationUtilizationHeader	= LocalParLocationUtilizationHeader
	    	Instance Selection
	    		where (related.Item						= Item)
    
    	InventoryControlResultRel
    		one-to-one relation to InventoryControlResult
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
    			related.InventoryControlResult			= LocalInventoryControlResult

    	RequisitionTransactionsRel
    		one-to-many relation to RequisitionTransaction
    		Field Mapping uses Set4
    			related.Company							= Company
    			related.RequestingLocation				= RequestingLocation
				related.FromCompanyLocation.FromCompany	 = FromCompanyLocation.FromCompany 
				related.FromCompanyLocation.FromLocation = FromCompanyLocation.FromLocation
    			related.Item							= Item
			Instance Selection
				where (related.TransactionDate within LocalDateRange
				and	   related.RequisitionTransaction.RequisitionDocumentType.Issue)    		
    	
    	ParItemRel
    		one-to-many relation to ItemLocation
    		Field Mapping uses symbolic key
    			related.Company							= Company
    			related.InventoryLocation				= RequestingLocation
    			related.Item							= Item
    			
		InventoryReportGroupLocationRel
			one-to-many relation to InventoryReportGroupLocation
			Field Mapping uses symbolic key
				related.Company	                         = LocalCompany
				related.InventoryReportGroup             = LocalInventoryReportGroup
			Instance Selection
				where (related.InventoryLocation = RequestingLocation)

        ItemLocationRel
            classic name is ITEMLOC
            one-to-one relation to ItemLocation
            valid when (IsInventory)
            required
            Field Mapping uses symbolic key
                related.Company           = FromCompanyLocation.FromCompany
                related.InventoryLocation = FromCompanyLocation.FromLocation
                related.Item              = Item

        ItemRel
            one-to-one relation to Item
            valid when (IsInventoryOrNonstock)
            required
            Field Mapping uses symbolic key
                related.ItemGroup = Company.ItemGroup
                related.Item      = Item
                
        RequisitionRel
			one-to-one relation to Requisition
			Field Mapping uses symbolic key
				related.Company     = Company
				related.Requisition = RequisitionTransaction.Requisition 
				
		RequestingLocationRel
			one-to-one relation to RequestingLocation
			Field Mapping uses symbolic key
				related.Company				= FromCompanyLocation.FromCompany
				related.RequestingLocation	= RequestingLocation
				
		ProcessedOrRejectedRequisitionRel
			one-to-many relation to Requisition
			Field Mapping uses symbolic key
				related.Company		= Company
				related.Requisition = RequisitionTransaction.Requisition
			Instance Selection
				where (related.IsProcessedOrRejected)
		
		DuplicateRequisitionTransactionRel
			one-to-many relation to RequisitionTransaction
			Field Mapping uses Set3
				related.Company							 = Company
				related.RequestingLocation				 = RequestingLocation
				related.FromCompanyLocation.FromCompany	 = FromCompanyLocation.FromCompany 
				related.FromCompanyLocation.FromLocation = FromCompanyLocation.FromLocation
			Instance Selection
				where (related.TransactionDate 									<= TransactionDate
				and	   related.RequisitionTransaction.Requisition 				= RequisitionTransaction.Requisition
				and    related.RequisitionTransaction.RequisitionDocumentType 	= RequisitionTransaction.RequisitionDocumentType.PoReceiving
				and    related.RequisitionTransaction.DocumentNumberNumeric 	= RequisitionTransaction.DocumentNumberNumeric
				and    related.RequisitionTransaction.RequisitionLine 			= RequisitionTransaction.RequisitionLine
				and    related.RequisitionTransaction.RequisitionSequence 		< RequisitionTransaction.RequisitionSequence)
		
		PurchaseOrderLineSourcesRel
			one-to-many relation to PurchaseOrderLineSource	
			Field Mapping uses Set2
				related.PurchaseOrderLineSource.OperatingCompany         = Company
				related.PurchaseOrderLineSource.SourceDocumentOrigin     = SourceDocumentOrigin.Requisitions
				related.PurchaseOrderLineSource.SourceDocumentNumeric    = RequisitionTransaction.Requisition
				related.PurchaseOrderLineSource.SourceDocumentLineNumber = RequisitionTransaction.RequisitionLine			

		PurchaseOrderReceiptLineRel
			one-to-one relation to PurchaseOrderReceiptLine
			Field Mapping uses symbolic key
				related.Company						= FromCompanyLocation.FromCompany
				related.PurchaseOrderReceipt		= RequisitionTransaction.DocumentNumberNumeric
				related.PurchaseOrderReceiptLine	= LocalPurchaseOrderLine
					
		WarehouseShipmentLineRel
			one-to-one relation to WarehouseShipmentLine
			Field Mapping uses symbolic key
				related.Company						= FromCompanyLocation.FromCompany
				related.InventoryLocation			= FromCompanyLocation.FromLocation
				related.WarehouseShipment			= RequisitionTransaction.DocumentNumberNumeric
				related.WarehouseShipmentLine		= RequisitionTransaction.RequisitionLine
				
    Sets

        Set1
            primary
            indexed
            Sort Order
                FromCompanyLocation
                RequisitionTransaction

        Set2
            indexed
            Sort Order
                FromCompanyLocation
                Item
                TransactionDate descending
                RequisitionTransaction

        Set3
            indexed
            Sort Order
                Company
                RequestingLocation
				FromCompanyLocation.FromCompany
				FromCompanyLocation.FromLocation
                TransactionDate
                RequisitionTransaction.Requisition
                RequisitionTransaction.RequisitionDocumentType
                RequisitionTransaction.DocumentNumberNumeric
                RequisitionTransaction.RequisitionSequence
                RequisitionTransaction.RequisitionLine

        Set4
            indexed
            Sort Order
                Company
                RequestingLocation
				FromCompanyLocation.FromCompany
				FromCompanyLocation.FromLocation
                Item
                TransactionDate
                RequisitionTransaction.Requisition
                RequisitionTransaction.RequisitionDocumentType
                RequisitionTransaction.DocumentNumberNumeric
                RequisitionTransaction.RequisitionSequence
                RequisitionTransaction.RequisitionLine
                
    Actions
    
    	Create is a Create Action
    		
    		Exit Rules
    		
    			invoke UpdateDateAndTime RequisitionRel
    				invoked.PrmLastDeliverySequence = RequisitionTransaction.RequisitionSequence
    				invoked.PrmLastUpdateDate 		= current timestamp
    				invoked.PrmLastUpdateBy 		= actor 
    
		Delete is a Delete Action
			restricted
			
		Purge is a Purge Action
			restricted
			
		PurgeRequisitionTransaction is a Set Action
			restricted
			
			Parameters
				PrmCompany										is an InventoryCompany
				PrmPurgeTransactions							is AlphaUpper size 1
					States
						PurgeTransactions		value is "Y"
						No						value is "N"
				PrmTransactionDate								is Date
			
			Instance Selection
				include deleted records
				where (Company	= PrmCompany
				and   (PrmTransactionDate not entered or (TransactionDate <= PrmTransactionDate)))
				
			Action Rules
				Instance Rules
					if (PrmPurgeTransactions.PurgeTransactions)
						if (ProcessedOrRejectedRequisitionRel exists or RequisitionRel not exists)
							invoke Purge

		DepartmentUsageReportDataCorrection	is a Set Action
			restricted
			Parameters
				PrmCompany			is an InventoryCompany
					default label is "Company" 
			
			Parameter Rules
				PrmCompany
					required
			
			Local Fields
				LocalActor			is an Actor		
			
			Instance Selection
				where ((RequisitionTransaction.RequisitionDocumentType.PoReceiving
				or      RequisitionTransaction.RequisitionDocumentType.Issue)
				and     Company = PrmCompany)
			Sort Order is Set3
			
			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "DepartmentUsageReportDataCorrection:NoDataToProcessForCompany<PrmCompany>"
						priority is medium
						detail is "DepartmentUsageReportDataCorrection:NoDataToProcessForCompany<PrmCompany>"
				Set Rules
							
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "DepartmentUsageReportDataCorrectionForCompany<PrmCompany>Completed"
							priority is medium
							detail is "DepartmentUsageReportDataCorrectionForCompany<PrmCompany>Completed"
				Instance Rules
					if (DuplicateRequisitionTransactionRel exists)
						invoke Delete
					else
						if (RequisitionTransaction.RequisitionDocumentType.PoReceiving)
							for each PurchaseOrderLineSourcesRel
								initialize LocalPurchaseOrderLine
								LocalPurchaseOrderLine = each.PurchaseOrderLine
								if (PurchaseOrderReceiptLineRel exists
								and Item = PurchaseOrderReceiptLineRel.Item)
									
									if (PurchaseOrderReceiptLineRel.IsCatchWeightItem)
										Quantity = PurchaseOrderReceiptLineRel.CatchWeightQuantity
									else
										Quantity = PurchaseOrderReceiptLineRel.DerivedReceivedQuantityInStockUOM
									
									if (PurchaseOrderReceiptLineRel.OriginalUnitCost entered)
										UnitCost = (PurchaseOrderReceiptLineRel.OriginalUnitCost / PurchaseOrderReceiptLineRel.VendorPriceUOMMultiplier)
									else
										initialize UnitCost
									
									initialize RoundedValue	
									
									if (ItemType.Special)
										StockUOM = PurchaseOrderReceiptLineRel.ReceivedUOM
										
									if (UnitCost entered)
										RoundedValue.RoundInput		= UnitCost
										RoundedValue.RoundingType 	= RoundedValue.RoundingType.Normal
										if (ItemType.Inventoried or ItemType.NonStock)
											RoundedValue.RoundTo	= 1/(10^Item.NumberOfDecimalsCost)
										else
											RoundedValue.RoundTo	= 1/(10^Company.NumberOfDecimalsCost)
										UnitCost					= RoundedValue.RoundResult
						else
						if (RequisitionTransaction.RequisitionDocumentType.Issue)
							if (WarehouseShipmentLineRel exists)
								if (WarehouseShipmentLineRel.IsCatchWeightItem)
									Quantity		= WarehouseShipmentLineRel.CatchWeightQuantity
								else
									Quantity		= WarehouseShipmentLineRel.ShippedQuantity
								
								UnitCost = WarehouseShipmentLineRel.RequisitionLineRel.DerivedUnitCostInStockUOM
							
		ParLocationUtilization is a Set Action
			Parameters
				PrmCompany								is an InventoryCompany
					default label is "Company"
				PrmReportGroup							is an InventoryReportGroup
					default label is "ReportGroup"
				PrmParLocation							is an InventoryLocation
					default label is "ParLocation"
				PrmReplenishDays						is Decimal size 3.1
					default label is "ReplenishDays"
				PrmDateRange							is a DateRange
					default label is "DateRange"
				PrmInventoryControlResult				is like InventoryControlResult
				PrmParLocationUtilizationHeader			is like ParLocationUtilizationHeader
				PrmPrintOption							is Boolean
				PrmUpdateOption							is Boolean
				PrmParLocationUtilizationReportGroup	is a ReportDistributionGroup
				PrmAllParLocations						is Boolean
			
			Sort Order
				Company
				RequestingLocation
				Item
				TransactionDate
			
			Instance Selection
				where  (Company = PrmCompany
				and    ((PrmAllParLocations and ParItemRel.CartParLocation)
						or	  ((PrmParLocation entered and RequestingLocation = PrmParLocation)
						or		(PrmReportGroup entered and HasInventoryReportGroupLocation)))
				and	    TransactionDate within PrmDateRange
				and	    RequisitionTransaction.RequisitionDocumentType.Issue)
			
			Local Fields			
				LocalNumberOfDays					is Numeric size 8
				LocalAverageUtilization				is Decimal size 6.2
				LocalRecommendedParLevel			is like UnsignedQuantity
					precision is Item.NumberOfDecimalsQuantity
						round to precision
				LocalTransactionDate				is Date
				LocalImpact							is like InternationalAmount

			Accumulators
				TotalCount
				TotalIssuedQuantity
				SumDeviation
				TotalDaysWithTransaction
			
			Parameter Rules
				PrmReportGroup
					if (PrmParLocation entered)
						cannot be entered
							"CannotEnterBothReportGroupAndLocation"
							
					LocalCompany 							= PrmCompany
					LocalInventoryReportGroup 				= PrmReportGroup

				PrmDateRange
					LocalNumberOfDays						= PrmDateRange.End - PrmDateRange.Begin
					LocalDateRange							= PrmDateRange
			
				PrmInventoryControlResult
					LocalFinanceEnterpriseGroup				= PrmCompany.FinanceEnterpriseGroup
					LocalInventoryControlResult				= PrmInventoryControlResult
					LocalParLocationUtilizationHeader 		= PrmParLocationUtilizationHeader
					
			Action Rules
				Item Set Rules
					Entrance Rules
						for each RequisitionTransactionsRel
							increment TotalCount by 1
							TotalIssuedQuantity += each.Quantity
							
						initialize TotalDaysWithTransaction
												
					Exit Rules
						LocalRequestingLocation				= RequestingLocation
						LocalFinanceEnterpriseGroup			= PrmCompany.FinanceEnterpriseGroup
						LocalInventoryControlResult 		= PrmInventoryControlResult
						
						FormulaHelper.Value					= (SumDeviation / (TotalCount - 1))
						
						LocalRecommendedParLevel 			= (((TotalIssuedQuantity / TotalCount) + (2 * DerivedSquareRoot)) * TotalCount * (PrmReplenishDays / LocalNumberOfDays))
						LocalAverageUtilization				= (TotalIssuedQuantity / (LocalNumberOfDays + 1))
						
						LocalImpact							= ParItemRel.ItemLocationReplenishFromRel.DerivedLastCostUsed * (LocalRecommendedParLevel - ParItemRel.ReorderPoint)
						if (PrmAllParLocations)
							LocalParLocationUtilizationHeader	=  first ParLocationUtilizationCurrentHeaderRel.ParLocationUtilizationHeader
						else
							LocalParLocationUtilizationHeader	= PrmParLocationUtilizationHeader
						invoke Update ParLocationUtilizationLineRel
							invoked.UnitCost												= ParItemRel.ItemLocationReplenishFromRel.DerivedLastCostUsed
							invoked.AverageUtilization										= LocalAverageUtilization
							invoked.AverageDailyCost										= LocalAverageUtilization * ParItemRel.ItemLocationReplenishFromRel.DerivedLastCostUsed
							invoked.RecommendedParLevel										= LocalRecommendedParLevel 
							invoked.Impact													= LocalImpact
							invoked.TotalReplenishmentQuantity								= TotalIssuedQuantity
							invoked.TotalDaysWithTransaction								= TotalDaysWithTransaction								= TotalDaysWithTransaction
							
						invoke Update ParLocationUtilizationHeaderRel
							invoked.ImpactTotal											   += LocalImpact
						
						if (PrmUpdateOption
						and LocalRecommendedParLevel entered)
							invoke FastUpdate ParItemRel
								invoked.SuggestedReorderPoint								= LocalRecommendedParLevel
								invoked.AverageUtilization									= LocalAverageUtilization
				
				Set Rules
					Exit Rules
						LocalFinanceEnterpriseGroup		= PrmCompany.FinanceEnterpriseGroup
						LocalInventoryControlResult 	= PrmInventoryControlResult
						
						invoke GenerateReport InventoryControlResultRel
							invoked.PrmParLocationUtilizationReportGroup	= PrmParLocationUtilizationReportGroup
						
				Instance Rules
					SumDeviation 			+=  ((Quantity - (TotalIssuedQuantity / TotalCount)) * (Quantity - (TotalIssuedQuantity / TotalCount)))

					if (LocalTransactionDate != TransactionDate)
						TotalDaysWithTransaction 	+= 1
						LocalTransactionDate 		 = TransactionDate

