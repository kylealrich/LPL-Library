TransferPricingSourceWeight is a BusinessClass
	default label is "TransferPricingSourceAddress"
	owned by transpricing
	
	prefix is TPSW
	
	Ontology
		symbolic key is TransferPricingSourceWeight
		
	
	Patterns
	
	Persistent Fields
		SourceEntity						is Numeric size 1
			States
				BillToEntity			value is 2
				SpecificEntity			value is 3
		SourceAddress						is a FinanceAddress	 
			holds pii
		AllocateAmountType
			default label is "AmountType"

		TreatBlankAccountingUnitAsEmpty		is Boolean
		TreatBlankProjectAsEmpty			is Boolean
		TreatBlankDimension1AsEmpty			is Boolean
		TreatBlankDimension2AsEmpty			is Boolean
		TreatBlankDimension3AsEmpty			is Boolean
		TreatBlankDimension4AsEmpty			is Boolean
		TreatBlankDimension5AsEmpty			is Boolean
		TreatBlankDimension6AsEmpty			is Boolean
		TreatBlankDimension7AsEmpty			is Boolean
		TreatBlankDimension8AsEmpty			is Boolean
		TreatBlankDimension9AsEmpty			is Boolean
		TreatBlankDimension10AsEmpty		is Boolean


		ConvertCurrency						is Boolean

		
	Context Fields
		TransferPricingSource
		
	Transient Fields
		AccountingEntity
		CurrencyDate				is Date
			default label is untranslatable
		CurrentPeriod				is a GeneralLedgerCalendarPeriod
		AccountingUnitStructure
			derive value from FinanceEnterpriseGroup.EnterpriseAUStructure
		ProjectStructure
			derive value from FinanceEnterpriseGroup.EnterpriseProjectStructure
		FinanceDimension1Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim1Structure
		FinanceDimension2Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim2Structure
		FinanceDimension3Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim3Structure
		FinanceDimension4Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim4Structure
		FinanceDimension5Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim5Structure
		FinanceDimension6Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim6Structure
		FinanceDimension7Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim7Structure
		FinanceDimension8Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim8Structure
		FinanceDimension9Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim9Structure
		FinanceDimension10Structure
			derive value from FinanceEnterpriseGroup.EnterpriseDim10Structure
		
	Local Fields
		TransactionAmount			is a CurrencyAmount
		TotalAmount					is an InternationalAmount
		CurrentAccountingEntity		is an AccountingEntity
		CurrentProject				is a Project

		CurrentCurrency				is a Currency
		FromCurrency
		ExchangeDate
		CurrencyTable
		CurrencyExchange
		
			
	Field Rules
		AllocateAmountType
			default to TransferPricing.AllocateAmountType
	
	Relations
		AccountingUnitShadowRel
			one-to-many relation to AccountingUnitShadow
			Field Mapping uses BySummaryAccountingUnit
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryEntity						= SourceAddress.AccountingEntity
				related.SummaryAccountingUnit				= SourceAddress.AccountingUnit
			Instance Selection
				where (related.AccountingUnitType.Posting)	
	
		AccountShadowRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount 
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount	= SourceAddress.GeneralLedgerChartAccount
			Instance Selection
				where (related.ChartType.Posting)
				
		ProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryProject						= SourceAddress.Project
			Instance Selection
				where (related.ProjectType.Posting)
				
		Dimension1ShadowRel
			one-to-many relation to FinanceDimension1Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension1			= SourceAddress.FinanceDimension1
			Instance Selection
				where (related.DimensionType.Posting)
				
		Dimension2ShadowRel
			one-to-many relation to FinanceDimension2Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension2			= SourceAddress.FinanceDimension2
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension3ShadowRel
			one-to-many relation to FinanceDimension3Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension3			= SourceAddress.FinanceDimension3
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension4ShadowRel
			one-to-many relation to FinanceDimension4Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension4			= SourceAddress.FinanceDimension4
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension5ShadowRel
			one-to-many relation to FinanceDimension5Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension5			= SourceAddress.FinanceDimension5
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension6ShadowRel
			one-to-many relation to FinanceDimension6Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension6			= SourceAddress.FinanceDimension6
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension7ShadowRel
			one-to-many relation to FinanceDimension7Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension7			= SourceAddress.FinanceDimension7
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension8ShadowRel
			one-to-many relation to FinanceDimension8Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension8			= SourceAddress.FinanceDimension8
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension9ShadowRel
			one-to-many relation to FinanceDimension9Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension9			= SourceAddress.FinanceDimension9
			Instance Selection
				where (related.DimensionType.Posting)
								
		Dimension10ShadowRel
			one-to-many relation to FinanceDimension10Shadow
			Field Mapping uses BySummaryDimension
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SummaryFinanceDimension10			= SourceAddress.FinanceDimension10
			Instance Selection
				where (related.DimensionType.Posting)
	
	Derived Fields
		ComputedValue is a DerivedField
			type is like InternationalAmount
			restricted
			return TotalAmount
	
		MatrixMap is a DerivedField
			type is LPLText
			restricted

			MatrixMap += "related.AccountingEntity = AccountingEntity\n"

			if (FinanceEnterpriseGroup.AccountingUnitSelected
			and not TreatBlankAccountingUnitAsEmpty)
				if (SourceAddress.AccountingUnit entered)
					if (SourceAddress.AccountingUnit.PostingAccountingUnit)
						MatrixMap += "related.GeneralLedgerTotal.AccountingUnit = SourceAddress.AccountingUnit\n"
					else
						MatrixMap += "related.GeneralLedgerTotal.AccountingUnit = AccountingUnitShadowRel.AccountingUnit\n"
				else
					MatrixMap += "related.GeneralLedgerTotal.AccountingUnit = AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
						
				
			if (SourceAddress.GeneralLedgerChartAccount.ChartType.Posting)
				MatrixMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = SourceAddress.GeneralLedgerChartAccount\n"
			else
				MatrixMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = AccountShadowRel.GeneralLedgerChartAccount\n"
			
			if (FinanceEnterpriseGroup.ProjectEntry
			and not TreatBlankProjectAsEmpty)
				if (SourceAddress.Project entered)
					if (SourceAddress.Project.ProjectType.Posting)
						MatrixMap += "related.GeneralLedgerTotal.Project = SourceAddress.Project\n"
					else
						MatrixMap += "related.GeneralLedgerTotal.Project = ProjectShadowRel.Project\n"
				else
					MatrixMap += "related.GeneralLedgerTotal.Project = ProjectStructure.ProjectNode\n"

			if (FinanceEnterpriseGroup.FinanceDimension1Entry
			and not TreatBlankDimension1AsEmpty)
				if (SourceAddress.FinanceDimension1 entered) 
					if (SourceAddress.FinanceDimension1.PostingDimension)
						MatrixMap += "related.FinanceDimension1 = SourceAddress.FinanceDimension1\n"
					else
						MatrixMap += "related.FinanceDimension1 = Dimension1ShadowRel.FinanceDimension1\n"
				else
					MatrixMap += "related.FinanceDimension1 = FinanceDimension1Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension2Entry
			and not TreatBlankDimension2AsEmpty)
				if (SourceAddress.FinanceDimension2 entered)
					if (SourceAddress.FinanceDimension2.PostingDimension)
						MatrixMap += "related.FinanceDimension2 = SourceAddress.FinanceDimension2\n"
					else
						MatrixMap += "related.FinanceDimension2 = Dimension2ShadowRel.FinanceDimension2\n"
				else
					MatrixMap += "related.FinanceDimension2 = FinanceDimension2Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension3Entry
			and not TreatBlankDimension3AsEmpty)
				if (SourceAddress.FinanceDimension3 entered)
					if (SourceAddress.FinanceDimension3.PostingDimension)
						MatrixMap += "related.FinanceDimension3 = SourceAddress.FinanceDimension3\n"
					else
						MatrixMap += "related.FinanceDimension3 = Dimension3ShadowRel.FinanceDimension3\n"
				else
					MatrixMap += "related.FinanceDimension3 = FinanceDimension3Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension4Entry
			and not TreatBlankDimension4AsEmpty)
				if (SourceAddress.FinanceDimension4 entered)
					if (SourceAddress.FinanceDimension4.PostingDimension)
						MatrixMap += "related.FinanceDimension4 = SourceAddress.FinanceDimension4\n"
					else
						MatrixMap += "related.FinanceDimension4 = Dimension4ShadowRel.FinanceDimension4\n"
				else
					MatrixMap += "related.FinanceDimension4 = FinanceDimension4Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension5Entry
			and not TreatBlankDimension5AsEmpty)
				if (SourceAddress.FinanceDimension5 entered)
					if (SourceAddress.FinanceDimension5.PostingDimension)
						MatrixMap += "related.FinanceDimension5 = SourceAddress.FinanceDimension5\n"
					else
						MatrixMap += "related.FinanceDimension5 = Dimension5ShadowRel.FinanceDimension5\n"
				else
					MatrixMap += "related.FinanceDimension5 = FinanceDimension5Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension6Entry
			and not TreatBlankDimension6AsEmpty)
				if (SourceAddress.FinanceDimension6 entered)
					if (SourceAddress.FinanceDimension6.PostingDimension)
						MatrixMap += "related.FinanceDimension6 = SourceAddress.FinanceDimension6\n"
					else
						MatrixMap += "related.FinanceDimension6 = Dimension6ShadowRel.FinanceDimension6\n"
				else
					MatrixMap += "related.FinanceDimension6 = FinanceDimension6Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension7Entry
			and not TreatBlankDimension7AsEmpty)
				if (SourceAddress.FinanceDimension7 entered) 
					if (SourceAddress.FinanceDimension7.PostingDimension)
						MatrixMap += "related.FinanceDimension7 = SourceAddress.FinanceDimension7\n"
					else
						MatrixMap += "related.FinanceDimension7 = Dimension7ShadowRel.FinanceDimension7\n"
				else
					MatrixMap += "related.FinanceDimension7 = FinanceDimension7Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension8Entry
			and not TreatBlankDimension8AsEmpty)
				if (SourceAddress.FinanceDimension8 entered)
					if (SourceAddress.FinanceDimension8.PostingDimension)
						MatrixMap += "related.FinanceDimension8 = SourceAddress.FinanceDimension8\n"
					else
						MatrixMap += "related.FinanceDimension8 = Dimension8ShadowRel.FinanceDimension8\n"
				else
					MatrixMap += "related.FinanceDimension8 = FinanceDimension8Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension9Entry
			and not TreatBlankDimension9AsEmpty)
				if (SourceAddress.FinanceDimension9 entered) 
					if (SourceAddress.FinanceDimension9.PostingDimension)
						MatrixMap += "related.FinanceDimension9 = SourceAddress.FinanceDimension9\n"
					else
						MatrixMap += "related.FinanceDimension9 = Dimension9ShadowRel.FinanceDimension9\n"
				else
					MatrixMap += "related.FinanceDimension9 = FinanceDimension9Structure.DimensionNode\n"
			
			if (FinanceEnterpriseGroup.FinanceDimension10Entry
			and not TreatBlankDimension10AsEmpty)
				if (SourceAddress.FinanceDimension10 entered) 
					if (SourceAddress.FinanceDimension10.PostingDimension)
						MatrixMap += "related.FinanceDimension10 = SourceAddress.FinanceDimension10\n"
					else
						MatrixMap += "related.FinanceDimension10 = Dimension10ShadowRel.FinanceDimension10\n"
				else
					MatrixMap += "related.FinanceDimension10 = FinanceDimension10Structure.DimensionNode\n"

			MatrixMap += "related.GeneralLedgerTotal.EntityYearPeriod = CurrentPeriod\n"
			MatrixMap += "related.GeneralLedgerTotal.Currency where (NetTransactionAmount not empty)\n"

			return MatrixMap
	

		DynamicMeasures is a DerivedField
			type is LPLText
			restricted
			DynamicMeasures = "NetTransactionAmount\n"
			if (TransferPricing.AllocateAmountType.FunctionalAmount)
				DynamicMeasures += "NetFunctionalAmount\n"
			else 
			if (TransferPricing.AllocateAmountType.AlternateAmount)
				DynamicMeasures += "NetAlternateAmount\n"
			else 
			if (TransferPricing.AllocateAmountType.AlternateAmount2)
				DynamicMeasures += "NetAlternateAmount2\n"
			else 
			if (TransferPricing.AllocateAmountType.AlternateAmount3)
				DynamicMeasures += "NetAlternateAmount3\n"
			else 
			if (TransferPricing.AllocateAmountType.ProjectAmount)
				DynamicMeasures += "NetProjectAmount\n"
			else 
			if (TransferPricing.AllocateAmountType.ReportAmount1)
				DynamicMeasures += "NetReportAmount1\n"
			else 
			if (TransferPricing.AllocateAmountType.ReportAmount2)
				DynamicMeasures += "NetReportAmount2\n"
			else 
			if (TransferPricing.AllocateAmountType.ReportAmount3)
				DynamicMeasures += "NetReportAmount3\n"
			else 
			if (TransferPricing.AllocateAmountType.ReportAmount4)
				DynamicMeasures += "NetReportAmount4\n"
			else 
			if (TransferPricing.AllocateAmountType.ReportAmount5)
				DynamicMeasures += "NetReportAmount5\n"
			DynamicMeasures += "NetUnitsAmount"
			return DynamicMeasures
	
	Cube Relations
		MatrixRel
			matrix relation to GeneralLedgerTotal
			allow dimension reordering
			dynamic mapping is MatrixMap
        	Dimension Mapping
				related.GeneralLedgerTotal.Ledger				= TransferPricing.Ledger
				related.Scenario								= FinanceEnterpriseGroup.ActualsScenario
			dynamic preload measures are DynamicMeasures
	
	Actions
		Create is a Create Action
		
		Update is an Update Action
		
		Delete is a Delete Action
		
		Calculate is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity		is an AccountingEntity
				PrmCurrencyDate			is Date
				PrmCurrentPeriod		is a GeneralLedgerCalendarPeriod
			Action Rules
				AccountingEntity	= PrmAccountingEntity
				CurrentPeriod		= PrmCurrentPeriod
				CurrencyDate		= PrmCurrencyDate
			
				initialize TotalAmount
				for each MatrixRel
					CurrentAccountingEntity = each.AccountingEntity
					CurrentProject 			= each.GeneralLedgerTotal.Project
					if (AllocateAmountType.FunctionalAmount)
						TransactionAmount 	= each.NetFunctionalAmount
						CurrentCurrency		= CurrentAccountingEntity.FunctionalCurrency
					else 
					if (TransferPricing.AllocateAmountType.AlternateAmount)
						TransactionAmount	= each.NetAlternateAmount
						CurrentCurrency		= CurrentAccountingEntity.AlternateCurrency
					else 
					if (TransferPricing.AllocateAmountType.AlternateAmount2)
						TransactionAmount 	= each.NetAlternateAmount2
						CurrentCurrency		= CurrentAccountingEntity.AlternateCurrency2
					else 
					if (TransferPricing.AllocateAmountType.AlternateAmount3)
						TransactionAmount 	= each.NetAlternateAmount3
						CurrentCurrency		= CurrentAccountingEntity.AlternateCurrency3
					else 
					if (TransferPricing.AllocateAmountType.ProjectAmount)
						TransactionAmount 	= each.NetProjectAmount
						CurrentCurrency		= CurrentProject.Currency
					else 
					if (TransferPricing.AllocateAmountType.ReportAmount1)
						TransactionAmount 	= each.NetReportAmount1
						CurrentCurrency		= FinanceEnterpriseGroup.ReportCurrencyOne
					else 
					if (TransferPricing.AllocateAmountType.ReportAmount2)
						TransactionAmount 	= each.NetReportAmount2
						CurrentCurrency		= FinanceEnterpriseGroup.ReportCurrencyTwo
					else 
					if (TransferPricing.AllocateAmountType.ReportAmount3)
						TransactionAmount 	= each.NetReportAmount3
						CurrentCurrency		= FinanceEnterpriseGroup.ReportCurrencyThree
					else 
					if (TransferPricing.AllocateAmountType.ReportAmount4)
						TransactionAmount 	= each.NetReportAmount4
						CurrentCurrency		= FinanceEnterpriseGroup.ReportCurrencyFour
					else 
					if (TransferPricing.AllocateAmountType.ReportAmount5)
						TransactionAmount 	= each.NetReportAmount5
						CurrentCurrency		= FinanceEnterpriseGroup.ReportCurrencyFive
					else
						TransactionAmount 	= each.NetTransactionAmount
						CurrentCurrency		= each.GeneralLedgerTotal.Currency
							
					if (TransferPricing.Currency != CurrentCurrency)
						initialize CurrencyExchange
						FromCurrency				= CurrentCurrency
						ExchangeDate				= CurrencyDate
						CurrencyTable				= TransferPricing.CurrencyTable
						CurrencyExchange.ToCurrency = TransferPricing.Currency
						TransactionAmount			= CurrencyExchange.OutputCurrencyAmount
					
					TotalAmount += TransactionAmount
					
				if (TotalAmount < 0)
					TotalAmount = TotalAmount * -1
				
				
