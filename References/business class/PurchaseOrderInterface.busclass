PurchaseOrderInterface is a BusinessClass
	owned by po
	prefix is PIF
	classic name is POINTERFAC

	Ontology
		symbolic key is PurchaseOrderInterface
			classic set name is PIFSET0
			classic name for PurchaseOrderInterface.SourceDocumentOrigin is ORIGIN-CD
			classic name for PurchaseOrderInterface.SourceDocumentNumeric is SOURCE-DOC-N
			classic name for PurchaseOrderInterface.SourceDocumentAlpha is SOURCE-DOC-A
			classic name for PurchaseOrderInterface.OperatingCompany is OPER-COMPANY
			classic name for PurchaseOrderInterface.RequestingLocation is REQ-LOCATION
			classic name for PurchaseOrderInterface.LineNumber is LINE-NBR

	Patterns
		implements StaticJava
		disable AuditIndex
		disable Auditing
		disable EffectiveDated
		implements CreateStamp
		implements UpdateStamp

	Persistent Fields

		ProcurementGroup				is like ProcurementGroup
			classic name is PROCURE-GROUP
		Actor
		Vendor
		PurchaseFromLocation 			is a VendorLocation
			classic name is PURCH-FR-LOC
		POCode
		ShipToLocation					is an InventoryLocation
			classic name is LOCATION
		ItemType
		Buyer
			classic name is BUYER-CODE
		ServiceCode
		Item
		Description
		VendorName 
			holds pii
		VendorItem
			classic name is VEN-ITEM
		Contract
			delete ignored
		ContractLine
			delete ignored
		TaxCode
		Taxable                         is Boolean
			classic name is TAXABLE-FLAG
		EnteredUOM						is a UnitOfMeasure
		EnteredUOMMultiplier            is an UOMMultiplier
			classic name is ENT-UOM-MULT
		Quantity						is an UnsignedQuantity
			precision is DerivedNumberOfDecimalsQuantity
		EnteredUnitCost                 is an InternationalCost
			classic name is ENT-UNIT-CST
			precision is DerivedNumberOfDecimalsCost
		OverrideCost                    is Boolean
			classic name is OVERIDE-CST-FL
		Dropship                        is Boolean
			classic name is DROPSHIP-FL
		DropshipName                    is a Name	 
			holds pii
			classic name is SH-NAME
		DropshipAddress                 is a PostalAddressV2	
			holds pii
			classic name for DropshipAddress.DeliveryAddress.AddressLine1 is SH-ADDR1
			classic name for DropshipAddress.DeliveryAddress.AddressLine2 is SH-ADDR2
			classic name for DropshipAddress.DeliveryAddress.AddressLine3 is SH-ADDR3
			classic name for DropshipAddress.DeliveryAddress.AddressLine4 is SH-ADDR4
			classic name for DropshipAddress.Municipality is SH-CITY-ADDR5
			classic name for DropshipAddress.StateProvince is SH-STATE-PROV
			classic name for DropshipAddress.PostalCode is SH-POST-CODE
			classic name for DropshipAddress.County is SH-COUNTY
			classic name for DropshipAddress.Country is SH-COUNTRY-CD
		DropshipPhoneNumber				is a TelephoneNumber 
			holds pii
			classic name for DropshipPhoneNumber.InternationalPrefix is SH-PHONE-PREF
			classic name for DropshipPhoneNumber.SubscriberNumber is SH-PHONE
			classic name for DropshipPhoneNumber.Extension is SH-PHONE-EXT
		DropshipContact					is an AddressContact
			classic name is SH-CONTACT
		RequestedDeliveryDate			is Date
			classic name is REQ-DEL-DATE
		LateDeliveryDate				is Date
			classic name is LATE-DL-DATE
		ProcessLevel                    is a PayablesProcessLevel
		MajorPurchasingClass
			classic name is PURCH-MAJCL
		MinorPurchasingClass
			classic name is PURCH-MINCL
		Manufacturer
			classic name for Manufacturer.ManufacturerCode is MANUF-CODE
			classic name for Manufacturer.ManufacturerDivision is MANUF-DIVISION
		ManufacturerNumber
			classic name is MANUF-NBR
		MSDSRequired                    is Boolean
			classic name is MSDS-FLAG
		UserDate3                       is Date
		UserDate4                       is Date
		PurchaseOrderUserField2
			classic name is PO-USER-FLD-2
		PurchaseOrderUserField4         is a UserFld2
			classic name is PO-USER-FLD-4
		PurchaseOrderUserField6         is a UserFld3
			classic name is PO-USER-FLD-6
		UserDate1                       is Date
		UserDate2                       is Date
		PurchaseOrderUserField1
			classic name is PO-USER-FLD-1
		PurchaseOrderUserField3         is a UserField2
			classic name is PO-USER-FLD-3
		PurchaseOrderUserField5         is a UserFld2
			classic name is PO-USER-FLD-5
		InspectionRequired              is Boolean
			classic name is INSP-REQ-FL
		CertificationRequired           is Boolean
			classic name is CERT-REQ-FL
		CostOption
		Requester
		DeliverTo
		CostCode
			classic name is COST-CD
		AllocationPriority
			classic name is ALLOC-PRI
		RequisitionInterfaceInformation
			classic name for RequisitionInterfaceInformation.SurgerySystemSource is RQSRC-MACHINE
			classic name for RequisitionInterfaceInformation.SurgerySystemRequisitionReference is PAR-ORDER-ID
		PunchoutId
		TransactionCurrencyCode         is a Currency
			classic name is TRAN-CURR-CODE
		CnvRate
		PurchaseOrderBillToName         is a Name	 
			holds pii
			classic name is POB-NAME
		PurchaseOrderBillToAddress      is a PostalAddressV2	
			holds pii
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine1 is POB-ADDR1
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine2 is POB-ADDR2
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine3 is POB-ADDR3
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine4 is POB-ADDR4
			classic name for PurchaseOrderBillToAddress.Municipality is POB-CITY-ADDR5
			classic name for PurchaseOrderBillToAddress.StateProvince is POB-STATE-PROV
			classic name for PurchaseOrderBillToAddress.PostalCode is POB-POSTAL-CD
			classic name for PurchaseOrderBillToAddress.County is POB-COUNTY
			classic name for PurchaseOrderBillToAddress.Country is POB-COUNTRY-CD
		PurchaseOrderBillToContact      is an AddressContact
			classic name is POB-CONTACT
		Exception                       is Boolean
			classic name is EXCEPTION-FL
		ReplenishmentWorksheet          is Numeric size 1
			classic name is WORKSHEET-FL
			States
				No             value is 0
				YesNotSelected value is 1
				YesSelected    value is 2
		OneSourceDocumentToOnePO        is Boolean
			classic name is ONE-SRC-ONE-PO
		SourcingEventWorksheet          is Boolean            
			classic name is EVT-WORKSHEET
		CommodityCode					is a CommCodes
		UseProcurementCard              is Boolean
			classic name is P-CARD-FLAG
		ProcurementCardNumber
			classic name is PCARD-NBR
		PurchaseOrderBillToPhoneNumber  is a TelephoneNumber 
			holds pii
			classic name for PurchaseOrderBillToPhoneNumber.InternationalPrefix is POB-PHONE-PREF
			classic name for PurchaseOrderBillToPhoneNumber.SubscriberNumber is POB-PHONE
			classic name for PurchaseOrderBillToPhoneNumber.Extension is POB-PHONE-EXT
		PurchaseOrderBillToEmailAddress	is an EmailAddressMulti 
			holds pii
			sql name is POrderBillToEmailAddress
			classic name is POB-EMAIL-ADDR
		ProductTaxCategory
			classic name is PROD-TAX-CAT
		ItemGTIN
			classic name is GTIN
		PurchaseOrderUserField7         is a UserFld7
			classic name is PO-USER-FLD-7
		EAMOperationNumber              is an OperationNumber
			classic name is EAM-OPER-NBR
		EAMSequenceNumber               is a SeqNbr
			classic name is EAM-SEQ-NBR
		EAMWorkOrderNumber              is a WorkOrderNumber
			classic name is EAM-WO-NBR
		PatientProcedure
			classic name is HPP-OBJ-ID
			restricted
			delete ignored
		CnCode                          is a ConsignCode
		GlobalLineType
			classic name is GLBL-LINE-TYPE
		GlobalDocumentType
			classic name is GLBL-DOC-TYPE
		IsSelected is Boolean 
		RemainingQuantity				is like UnsignedQuantity
		EAMWorkOrder
		EAMWorkOrderActivity
		EAMProjectID
		EAMProjectType
		EAMProjectTaxCode
		EAMManufacturing
		EAMTrade
		EAMCommodityCode
		EAMLineType
		Chemical						is Boolean
		RebuildRepair					is Boolean
		TestRequired					is Boolean
		FilterByPurchasingClasses		is Boolean
		FilterByVendors					is Boolean
		FilterByRequestingLocation		is Boolean
		FilterItemsWithNoVendor			is Boolean
		FilterItemsWithNoCost			is Boolean
		InterfaceRunID					is like POInterfaceResult
		SortBuyer						is like Buyer
		SortRequestingLocation			is like RequestingLocation
		SortSourceDocument				is like SourceDocumentNumeric
		EAMDescription					is a Description3
		AribaPOType
		QuoteNumber						is Alpha size 30
		Confirming						is Boolean
		E2GCompCode						is a Name	 
			holds pii
		ShippingNotes					is Text
		EAMTool							is a EAMToolField  
		AccruedTaxAmount				is an InternationalAmount
		InvoicedTaxAmount				is an InternationalAmount
		ExternalRequisition				is an ExternalReqNbr
		HSNSACCode
		CreateDate						is Date
		DeliveryMethod

	Transient Fields
		TransientQuantity				is like Quantity
			derive value from DisplayQuantity
		TransientPurchaseOrderDate				is Date

	Local Fields
		ProcurementCostDefault
		LocalExecuteCostDefaulting              is Boolean
		LocalForCostDefault						is Boolean
		LocalPurchaseOrder						is a PurchaseOrder
		LocalPurchaseOrderLine					is a PurchaseOrderLine
		LocalPurchaseOrderLineSource			is a PurchaseOrderLineSource
	   	LocalSetPurchaseOrderLineSource			is a PurchaseOrderLineSource view
		LocalInterfaceRunID						is a POInterfaceResult
		LocalCombineInterfaces					is Boolean
		LocalMatchingStockless					is Boolean
		UOMCalculation							
		LocalPOCodeOverride						is Boolean
		LocalAddToPurchaseOrder					is Boolean
		LocalReleaseCount						is Numeric size 5
		LocalInventoryLocation					is an InventoryLocation
		LocalDistributionAccount				is like FinanceCodeBlock
		LocalCurrencyExchange					is a CurrencyExchange
		LocalFinanceEnterpriseGroup				is like FinanceEnterpriseGroup
		LocalFromCurrency						is a FromCurrency
		LocalExchangeDate						is a ExchangeDate
		LocalTransactionAmount					is a CurrencyAmount
		LocalToCurrency							is a ToCurrency
		LocalCurrencyTable                      is a CurrencyTable
		LocalOutputQty							is like Quantity
		RoundedValue
		LocalCompany                            is like InventoryCompany
		LocalRequestingLocation					is like RequestingLocation
		LocalDefaultDeliveryDate				is Date
		LocalVendor								is a Vendor
		LocalPurchaseFromLocation				is like PurchaseFromLocation
		LocalBuyer								is a Buyer
		LocalPOCode								is a POCode
		LocalChangeBillTo						is Boolean
		LocalChangeProcessLevel					is Boolean
		LocalSameItemUpdated					is Boolean
		LocalFromBuyerUnselect                  is Boolean
		CalculateTax
		LocalExecuteCalculateTax				is Alpha 1
		LocalLineTaxAmount						is like InternationalAmount
		LocalProcurementGroup					is like ProcurementGroup
		LocalLocationControl					is a LocationControl
		ForProcessing							is Boolean
		LocalEnteredUnitCost					is like InternationalCost
		LocalConversionRate						is an EnteredCurrencyConversionRate
		LocalActor								is an Actor
		LocalTransactionErrorMessage			is Alpha 150
		LocalHeaderErrorReceived				is Boolean
		LocalOtherErrorReceived					is Boolean
		LocalPurchaseOrderBillToName			is a Name	 
			holds pii
		LocalPurchaseOrderBillToAddress			is a PostalAddressV2	
			holds pii
		LocalPurchaseOrderBillToContact			is an AddressContact
		LocalPurchaseOrderBillToPhoneNumber		is a TelephoneNumber 
			holds pii
		LocalPurchaseOrderBillToEmailAddress	is an EmailAddressMulti 
			holds pii
		LocalCreateNewPurchaseOrder				is Boolean
		LocalCreateNewPurchaseOrderLine			is Boolean
		LocalCombineLines					is Boolean
		LocalPOInterfaceResult					is like POInterfaceResult
		LocalInventoryReportGroup				is like InventoryReportGroup
		LocalRequisition						is like Requisition
		LocalShipToLocation						is like InventoryLocation
		I1										is Numeric 1
		DoDebug									is Boolean
		LocalEmptyInterface						is Boolean
		LocalBypassHeaderAmountUpdate			is Boolean
		LocalCompanyPurchaseOrderCount			is Numeric 9
		LocalTotalLineAddOnCost					is a CurrencyAmount
		LocalAccruedAOCAmount					is a CurrencyAmount
		LocalInvoicedAOCAmount					is a CurrencyAmount
		LocalCreatedByFES						is Boolean
		LocalInvokedFromBatch					is Boolean
		ValidateBuyer
		LocalFromCapitated	                    is Boolean 
		LocalComputeQuantity					is like Quantity
		LocalCustomerOrder						is like CustomerOrder

	Field Groups
		VendorAndLocation
			Vendor
			PurchaseFromLocation

	Derived Fields



		MobileProcurementGroupDisplay	is a LabelField
			"<ProcurementGroupRel.Description>"
		MobileProcurementCompanyDisplay	is a LabelField
			"<PurchaseOrderInterface.OperatingCompany>_-_<PurchaseOrderInterface.OperatingCompany.Name>"
		MobileQuantityDisplay			is a LabelField
			"<Quantity>_<EnteredUOM>"
		MobileTotalCostDisplay			is a LabelField
			"<TotalCost>_<TransactionCurrencyCode>"
		MobileItemDisplay				is a LabelField
			"Item:<Item>"
		MobileMissingInformation		is a LabelField
			"MissingInformation"


		UOMWithStockOnHandCardViewDisplay 			is a LabelField
			"<EnteredUOM>_|_SOH:<ItemLocationRel.StockOnHandQuantity>"



		QuantityWithUOMDisplay			is a LabelField
			"<Quantity>_<EnteredUOM>"
		TotalCostWithCurrencyDisplay	is a LabelField
			"<TotalCost>_<TransactionCurrencyCode>"
		MissingVendorDisplay  		    is a LabelField
			"MissingVendor_orBuyer"

		MissingBuyerOrVendorOrCostMessage		is a MessageField
			"EitherBuyer,VendorOrCostIsMissing;NeedsBuyerIntervention"

		MissingBuyerTag 						is a MessageField
			"Missing_Buyer"
		MissingVendorTag  						is a MessageField
			"Missing_Vendor"
		MissingCostTag 							is a MessageField
			"Missing_Cost"
		MissingBuyerAndVendorTag 				is a MessageField
			"Missing_Buyer_and_Vendor"
		MissingBuyerAndCostTag  				is a MessageField
			"Missing_Buyer_and_Cost"
		MissingVendorAndCostTag  				is a MessageField
			"Missing_Vendor_and_Cost"
		MissingBuyerAndVendorAndCostTag  		is a MessageField
			"Missing_Buyer,_Vendor_and_Cost"

		MissingBuyerMessage 					is a MessageField
			"BuyerIsMissing;Needs_BuyerIntervention"
		MissingVendorMessage 					is a MessageField
			"VendorIsMissing;Needs_BuyerIntervention"
		MissingCostMessage 						is a MessageField
			"CostIsMissing;Needs_BuyerIntervention"
		MissingBuyerAndVendorMessage 			is a MessageField
			"BuyerAnd_VendorAreMissing;Needs_BuyerIntervention"
		MissingBuyerAndCostMessage 				is a MessageField
			"BuyerAnd_CostAreMissing;Needs_BuyerIntervention"
		MissingVendorAndCostMessage 			is a MessageField
			"VendorAnd_CostAreMissing;Needs_BuyerIntervention"
		MissingBuyerAndVendorAndCostMessage 	is a MessageField
			"Buyer,_VendorAnd_CostAreMissing;Needs_BuyerIntervention"																

		OneDayOldMessage						is a MessageField
			"ThisPurchaseRequestIsOneDayOld"
		MoreThanOneDayOldMessage				is a MessageField
			"ThisPurchaseRequestIsMoreThanOneDayOld"
		SpecialOrServiceMessage					is a MessageField
			"ThisRequestIsForSpecialOrServiceItem"

		RequisitionLabel						is a LabelField
			"Requisition"
		PurchaseInterfaceCompanyDisplay	   		is a LabelField
			"<Company>_-_<Company.Name>"


		TotalCost is a DerivedField
			type is like InternationalAmount
			return (DerivedLineCost + DerivedLineAOCAmount + AccruedTaxAmount + InvoicedTaxAmount)

    	InvalidContractMessage 			is a MessageField
			restricted
			"CannotUse;ContractIsInA<Contract.ContractStatus>Status"

    	InvalidContractLineMessage 		is a MessageField
			restricted
			"ContractLineIsOnHold,InErrorOrClosed"
    	
    	DerivedContractErrorMessage 	is a DerivedField
			type is Text
			if (IsInvalidContract)
				return InvalidContractMessage
			else
				return InvalidContractLineMessage

		ItemSummary is a MessageField
			default label is "Item"
			"<Description>_(<Item>)"

		RequesterName is a MessageField
			default label is "Requester"
			"<Requester.Employee.FirstLastName>_(<Requester>)"

		CompanyNameUI is a MessageField
			default label is "Company"
			"<Company.Name>_(<Company>)"

		RequestingLocationName is a MessageField
			default label is "RequestingLocation"
			"<PurchaseOrderInterface.RequestingLocation.Name>_(<PurchaseOrderInterface.RequestingLocation>)"

		OperatingCompanyName is a MessageField
			default label is "OperatingCompany"
			"<PurchaseOrderInterface.OperatingCompany.Name>_(<PurchaseOrderInterface.OperatingCompany>)"




		DerivedLineCost is a DerivedField
			type is like InternationalAmount
			return (Quantity * EnteredUnitCost)

		CalcTaxRate is a DerivedField
			type is like ChrgRate
			restricted
			return first TxtaxrateRel.Rate

		DerivedLineTaxAmount is a DerivedField
			type is like InternationalAmount
			initialize CalculateTax
			CalculateTax.TaxEntity			= Company
			CalculateTax.TaxCode			= TaxCode
			CalculateTax.TaxableAmount		= DerivedLineCost
			CalculateTax.TaxDate			= DerivedTransactionDate
			CalculateTax.Function			= CalculateTax.Function.CalculateTax
			LocalExecuteCalculateTax		= CalculateTax.ExecuteCalculateTax
			LocalLineTaxAmount				+= CalculateTax.OutputTotalTaxAmount
			return LocalLineTaxAmount

		DerivedConvertedCost	is a DerivedField
			type is like InternationalAmount
			restricted
			if (not RequisitionLineRel.TransactionCurrencyCode = LocalFromCurrency)
				initialize LocalCurrencyExchange
				LocalExchangeDate					= current corporate date
				LocalCurrencyTable                  = RequisitionRel.CurrencyTable
				LocalToCurrency						= RequisitionLineRel.TransactionCurrencyCode
				return LocalCurrencyExchange.OutputCurrencyAmount
			else
				return LocalTransactionAmount

		DerivedLineAOCAmount is a DerivedField
			type is like InternationalAmount
			if (FromRequisitions)

				initialize LocalTotalLineAddOnCost
				for each RequisitionLineAddOnChargesRel
					initialize LocalTransactionAmount

					LocalFromCurrency			= each.DerivedCurrency

					if (each.AddOnChargeEntryMethod.RatePercentage)
						LocalTransactionAmount 		= (each.AddOnChargePercent * DerivedLineCost)
						if (each.AddOnCharge.AddOnChargeType.Allowance
						and LocalTransactionAmount > 0)
							LocalTransactionAmount = LocalTransactionAmount * -1
						LocalTotalLineAddOnCost	+= LocalTransactionAmount
					else
						if (each.AddOnChargeEntryMethod.UnitCost)
							LocalTransactionAmount		= (each.EnteredUnitCost * Quantity)
						else
							LocalTransactionAmount		= each.TotalAddOnChargeAmount

						LocalTotalLineAddOnCost += DerivedConvertedCost

					if (each.TaxCode entered
					and LocalTransactionAmount entered)
						initialize LocalAccruedAOCAmount
						initialize LocalInvoicedAOCAmount
						initialize CalculateTax
						CalculateTax.TaxEntity						= GeneralLedgerCompanyForCompanyRel.AccountingEntity
						if (RequisitionLineRel.RequestedDeliveryDate entered)
							CalculateTax.TaxDate					= RequisitionLineRel.RequestedDeliveryDate
						else
							CalculateTax.TaxDate					= RequisitionRel.CreationDate
						if (RequisitionLineRel.PurchaseFromLocation.VendorLocation.TaxCode not entered)
							CalculateTax.FromTaxCode				= each.Vendor.TaxCode
						else
							CalculateTax.FromTaxCode				= RequisitionLineRel.PurchaseFromLocation.VendorLocation.TaxCode

						CalculateTax.TaxableAmount					= LocalTransactionAmount
						CalculateTax.TaxCode						= each.TaxCode
						CalculateTax.Function						= "C"

						if (RequisitionRel.DropshipAddress not entered)
							CalculateTax.PostalAddress				= RequisitionRel.FromCompanyLocation.FromLocation.PostalAddress
						else
							CalculateTax.PostalAddress				= RequisitionRel.DropshipAddress
						CalculateTax.ThirdPartyFunction				= "I"
						CalculateTax.System							= "RQ"
						CalculateTax.DontCreateLogFile				= true

						if (TaxEntityRel.ThirdParty.Sabrix)
							CalculateTax.CallingModule				= "Requisition"
							CalculateTax.System						= "RQ"
							CalculateTax.InFinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
							CalculateTax.TaxEntity					= GeneralLedgerCompanyForCompanyRel.AccountingEntity
							CalculateTax.InvoiceCompany				= Company
							CalculateTax.ProcessLevel				= each.Requisition.RequestingLocation.ProcessLevel
							CalculateTax.Invoice					= each.Requisition
							CalculateTax.Vendor						= each.Vendor
							CalculateTax.InvoiceDate				= current corporate date
							CalculateTax.TaxCode					= each.TaxCode
							CalculateTax.PostalAddress				= each.Location.PostalAddressForPurchaseOrder
							CalculateTax.BypassEditing				= true

						LocalExecuteCalculateTax					= CalculateTax.ExecuteCalculateTax
						for each CalculateTax.TaxTable.TaxTableOutput
							if (each.AccrualFlag = "A")
								LocalAccruedAOCAmount 	+= each.TaxAmount5DP
							else
								LocalInvoicedAOCAmount	+= each.TaxAmount5DP

						if (each.AddOnChargeEntryMethod.UnitCost
						or  each.AddOnChargeEntryMethod.TotalAmount)
							LocalTransactionAmount	= LocalAccruedAOCAmount
							LocalAccruedAOCAmount	= DerivedConvertedCost
							LocalTransactionAmount	= LocalInvoicedAOCAmount
							LocalInvoicedAOCAmount	= DerivedConvertedCost

						LocalTotalLineAddOnCost += (LocalAccruedAOCAmount + LocalInvoicedAOCAmount)
						
				return LocalTotalLineAddOnCost

			else
			if (FromOrderEntry)
				return CustomerOrderLineRel.LinesAOCSum
			else
				return 0

		DerivedTransactionDate is a DerivedField
			type is Date
			if (FromRequisitions)
				if (RequisitionLineRel.RequestedDeliveryDate entered)
					return RequisitionLineRel.RequestedDeliveryDate
				else
					return RequisitionRel.CreationDate
			else
			if (FromOrderEntry)
				return CustomerOrderRel.TaxDate
			else
				return current corporate date

		CommentCount is a DerivedField
			type is Alpha size up to 20
			restricted


			if (CalcCommentCount > 0)
				return "(" + CalcCommentCount + ")"
			else
				return ""

		CalcCommentCount is a ComputeField
			type is Numeric size 2

			(instance count of PurchaseOrderInterfaceCommentRel + instance count of RequisitionCommentRel + instance count of RequisitionLineCommentRel)

		DescriptionConcat is a DerivedField
			type is like Description
			if (Item.Description2 entered)
				return Description + " | " + Item.Description2
			else
				return Description

		RlnRemainingCommitment is a DerivedField
			type is Decimal size 13.4
			restricted
			if (RequisitionLineRel exists)
				if ( (RequisitionLineRel.RemainingCommitment - Quantity) <= 0  )
					return 0

		InCompany is a DerivedField
			type is Alpha size 4
			restricted
			if ( (PurchaseOrderInterface.OperatingCompany entered and PurchaseOrderInterface.OperatingCompany != Company)
			or ( RequisitionLinesOpenRel exists) )
				return PurchaseOrderInterface.OperatingCompany
			else
				return Company

		DerivedPOCodeForPO is a DerivedField
			type is like POCode
			restricted
			if (Company.POCodeDefaultMethod.InventoryLocation)
				return ShipToLocation.POCode
			else
			if (Company.POCodeDefaultMethod.RequestingLocation)
				return RequestingLocationRel.POCode
			else
			if (Company.POCodeDefaultMethod.VendorOrVendorLocation)
				if (PurchasingVendorRel.POCode entered)
					return PurchasingVendorRel.POCode
				else
					return PurchaseFromLocationRel.POCode
			else
			if (Company.POCodeDefaultMethod.BuyerGroup)
				return Buyer.BuyerGroup.POCode
			else
			if (Company.POCodeDefaultMethod.System)
				if (FromOrderEntry)
					return Company.CustomerOrderDefaultPOCode
				else
				if (FromRequisitions)
					return Company.RequisitionsDefaultPOCode
				else
				if (PurchaseOrderInterface.SourceDocumentOrigin.InventoryControl)
					return Company.InventoryControlDefaultPOCode
				else
				if (PurchaseOrderInterface.SourceDocumentOrigin.PurchaseOrder)
					return Company.PurchaseOrderDefaultPOCode

		LastLineNumber is a ComputeField
			type is Numeric size 6
			restricted
			(first ReplenishmentPOWorksheetRel.PurchaseOrderInterface.LineNumber + 1)

		CalculateSupplyDemand is a ComputeField
			type is Decimal size 13.4
			(ItemLocationRel.DerivedSupplyDemand)

		DisplayQuantity is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			initialize UOMCalculation
			UOMCalculation.InputQuantity		= Quantity
			UOMCalculation.InputUOMConversion	= EnteredUOMMultiplier
			UOMCalculation.Method				= UOMCalculation.Method.ConvertToStock
			LocalOutputQty						= UOMCalculation.OutputQuantity


			initialize RoundedValue
			RoundedValue.RoundInput				= LocalOutputQty
			RoundedValue.RoundingType			= RoundedValue.RoundingType.Normal
			RoundedValue.RoundTo				= 1
			LocalOutputQty						= RoundedValue.RoundResult

			return LocalOutputQty

		StoredQuantity is a DerivedField
			type is like Quantity
			restricted
			if (HasItemLocationStockUOM)
				if (EnteredUOM = DerivedLocationStockUOM)
					return TransientQuantity
				else
					initialize UOMCalculation
					UOMCalculation.InputQuantity		= TransientQuantity
					UOMCalculation.InputUOM				= DerivedLocationStockUOM
					UOMCalculation.Method				= UOMCalculation.Method.ConvertToAlternate
					UOMCalculation.InputToUOMConversion = EnteredUOMMultiplier
					return UOMCalculation.OutputQuantity
			else
			if (UseDirectItemBuyUOM)
				return TransientQuantity
			else
				initialize UOMCalculation
				UOMCalculation.InputQuantity		= TransientQuantity
				UOMCalculation.InputUOM				= Item.StockUOM
				UOMCalculation.Method				= UOMCalculation.Method.ConvertToAlternate
				UOMCalculation.InputToUOMConversion = EnteredUOMMultiplier
				UOMCalculation.ValidateDecimal = true
				return UOMCalculation.OutputQuantity

		LeadTimeDays is a DerivedField
			type is Numeric size 3
			LeadTimeDays = ItemLocationRel.LeadtimeDays
			if (LeadTimeDays not entered)
				if (PurchaseFromLocation entered)
					LeadTimeDays				= PurchaseFromLocationRel.LeadtimeDays
			if (LeadTimeDays not entered)
				if (PurchasingVendorRel exists)
					LeadTimeDays				= PurchasingVendorRel.LeadtimeDays


		IC66CreateCompletionMessage is a MessageField
			restricted
			"ChangeComplete.Continue."

		IC66CreateUnitCostMissingCompletionMessage is a MessageField
			restricted
			"ChangeComplete;UnitCostMissing;Use_\Manage_\Purchase_\Request"

		IC66ReleaseOneItemCompletionMessage is a MessageField
			restricted
			"ReleaseComplete;OneItemReleased"

		IC66ReleaseMultipleItemsCompletionMessage is a MessageField
			restricted
			"ReleaseComplete;<LocalReleaseCount>ItemsReleased"

		IC66ReleaseNoItemsCompletionMessage is a MessageField
			restricted
			"NoItemsReleased"

		DerivedFormTitle                   is a MessageField
			restricted
			"Source:<PurchaseOrderInterface.SourceDocumentOrigin>_<PurchaseOrderInterface.SourceDocumentNumeric>_Line:<PurchaseOrderInterface.LineNumber>"

		ReplenishmentWorksheetCreatedMessage is a DerivedField
			type is Text
			restricted
			if	(EnteredUnitCost not entered
			and (CostOption.CostRequired
			or 	 CostOption not entered))
				return IC66CreateUnitCostMissingCompletionMessage
			else
				return IC66CreateCompletionMessage

		DerivedNumberOfDecimalsQuantity is a ConditionalField
			type is Numeric size 1
			restricted
			if (ItemType.NonStock
			or  ItemType.Inventoried)
				Item.NumberOfDecimalsQuantity
			else
			if (ItemType.Special
			or  ItemType.Service)
				InventoryCompanyRel.NumberOfDecimalsQuantity
			else
				4

		DerivedNumberOfDecimalsCost is a ConditionalField
			type is Numeric size 1
			restricted
			if (ItemType.NonStock
			or  ItemType.Inventoried)
				Item.NumberOfDecimalsCost
			else
			if (ItemType.Special
			or  ItemType.Service)
				InventoryCompanyRel.NumberOfDecimalsCost
			else
				8

		DerivedLocationControl is a DerivedField
			type is AlphaUpper size 1
			if (PurchaseFromLocation entered
			and PurchaseFromLocationRel exists)
				return PurchaseFromLocationRel.LocationControl
			else
			if (PurchasingVendorRel exists)
				return PurchasingVendorRel.LocationControl
			else
				return LocationControl.CannotCombineRequisitions

		SelectedInterfacesByActorCount is a DerivedField
		   	type is Numeric size 10
			restricted
			return instance count of SelectedInterfaceByActorRel


		MiscellaneousAOCErrorMessage					is a MessageField
			"Miscellaneous_\Add_\On_\Charge:_"
		PurchaseOrderLineAOCErrorMessage				is a MessageField
			"Purchase_\Order_\Line_\Add_\On_\Charge:_"
		PurchaseOrderLineDistributionErrorMessage		is a MessageField
			"Purchase_\Order_\Line_\Distribution:_"
		PurchaseOrderLineUpdateErrorMessage				is a MessageField
			"Purchase_\Order_\LineCombine:_"
		PurchaseOrderHeaderCreateErrorMessage			is a MessageField
			"Purchase_\OrderCreate:_"
		PurchaseOrderLineCreateErrorMessage				is a MessageField
			"Purchase_\Order_\LineCreate:_"





		RejectUOM			is a MessageField
			"<EnteredUOM>IsNotAValidBuyUOMForItem<Item>"
		DerivedErrorMessage is a DerivedField
			type is Text
			restricted
			if  (IsItem
			and  not ValidItemUOMRel.DefaultForBuying
			and  not ValidItemUOMRel.OKForBuying)
				return RejectUOM
		DerivedCnCode1 is a DerivedField
			type is AlphaUpper size 2
			restricted
			return blank
		DerivedCnCode2 is a DerivedField
			type is AlphaUpper size 2
			restricted
			return blank
		DerivedCnCode3 is a DerivedField
			type is AlphaUpper size 2
			restricted
			return blank
		DerivedCnCode4 is a DerivedField
			type is AlphaUpper size 2
			restricted
			return blank

		DerivedBypassSubstitution is a DerivedField
			type is Boolean
			restricted
			if (RequisitionLineRel.BypassSubstitution
				or (PurchaseOrderInterface.SourceDocumentAlpha = "IC_REORDER"
				and Item.ItemGroup.IgnoreSubstituteItemsInReplenishment))
				return true
			else
				return false

		DerivedLocationStockUOM				is a DerivedField 
			type is like UnitOfMeasure
			return ItemLocationRel.ItemLocationStockUOM.UnitOfMeasure

		DerivedLocationStockUOMMultiplier 	is a DerivedField
			type is like UOMMultiplier
			return ItemLocationRel.ItemLocationStockUOM.ItemUOM.UOMConversion

		DerivedOrderUOMRounding				is a DerivedField 
			type is Boolean
			return ItemLocationRel.HasOrderUOMRounding

		DerivedDefaultBuyLocationItemUOM	is a DerivedField 
			type is like UnitOfMeasure
			return LocationItemUOMDefaultBuyingRel.UnitOfMeasure


		DerivedSpecialHandlingCode					is a DerivedField
			type is like SpecialHandlingCode
			if (FromRequisitions)
				return RequisitionLineRel.SpecialHandlingCode
			else
			if (FromInventoryControl)
				return Item.SpecialHandlingCode

		DerivedSpecialHandlingDescription			is a DerivedField
			type is like Description
			if (FromRequisitions)
				return RequisitionLineRel.SpecialHandlingCode.Description
			else
			if (FromInventoryControl)
				return Item.SpecialHandlingCode.Description

		DerivedSpecialHandlingInstructions			is a DerivedField
			type is like Description4
			if (FromRequisitions)
				return RequisitionLineRel.SpecialHandlingInstructions
			else
			if (FromInventoryControl)
				return Item.SpecialHandlingInstructions
			
		DerivedTimeSensitive						is a DerivedField
			type is Boolean
			if (FromRequisitions)
				return RequisitionLineRel.SpecialHandlingCode.TimeSensitive
			else
			if (FromInventoryControl)
				return Item.SpecialHandlingCode.TimeSensitive

		DerivedHandlingTimeInMinutes				is a DerivedField
			type is Numeric 3
			if (FromRequisitions)
				return RequisitionLineRel.HandlingTimeInMinutes
			else
			if (FromInventoryControl)
				return Item.HandlingTimeInMinutes

		DerivedMissingBuyerOrVendorOrCostTag		is a DerivedField
			type is Text
			if (MissingBuyer)
				return MissingBuyerTag
			if (MissingVendor)
				return MissingVendorTag
			if (MissingCost)
				return MissingCostTag
			if (MissingBuyerAndVendor)
				return MissingBuyerAndVendorTag
			if (MissingBuyerAndCost)
				return MissingBuyerAndCostTag
			if (MissingVendorAndCost)
				return MissingVendorAndCostTag
			if (MissingBuyerAndVendorAndCost)
				return MissingBuyerAndVendorAndCostTag

		DerivedMissingBuyerOrVendorOrCostMessage	is a DerivedField
			type is Text
			restricted
			if (MissingBuyer)
				return MissingBuyerMessage
			if (MissingVendor)
				return MissingVendorMessage
			if (MissingCost)
				return MissingCostMessage
			if (MissingBuyerAndVendor)
				return MissingBuyerAndVendorMessage
			if (MissingBuyerAndCost)
				return MissingBuyerAndCostMessage
			if (MissingVendorAndCost)
				return MissingVendorAndCostMessage
			if (MissingBuyerAndVendorAndCost)
				return MissingBuyerAndVendorAndCostMessage
				
		DerivedHasRequisitionLineAddOnCharges is a DerivedField
			type is Boolean
			restricted
			return HasRequisitionLineAddOnCharges
			
		DerivedPurchaseOrderInterfaceDisplay is a DerivedField
			type is Alpha size up to 150
			restricted
			return "Company:" + Company + " Source:" + PurchaseOrderInterface.SourceDocumentOrigin + " Document:" + PurchaseOrderInterface.SourceDocumentNumeric + " Operating Company:" + PurchaseOrderInterface.OperatingCompany + " Requesting Location:" + PurchaseOrderInterface.RequestingLocation + " Line:" + PurchaseOrderInterface.LineNumber
						
	Conditions
		RecordExists
			restricted
			when (PurchaseOrderInterface exists)

		ContractHasError
			restricted
			when (IsInvalidContract
			or	  IsInvalidContractLine)

		IsInvalidContract
			restricted
			when (Contract entered
			and  not (Contract.ContractStatus.Active
			or    Contract.ContractStatus.Amendment
			or    Contract.ContractStatus.Addendum
			or   (Contract.ContractStatus.ReadyToActivate and Contract.HasBeenActivated)))

		IsInvalidContractLine
			restricted
			when (ContractLine entered
			and  (ContractLine.OnHold
			or    ContractLine.ErrorsExist
			or    ContractLine.LineClosed))

		TaxNotComputed
			restricted
			when (Taxable
			and   TaxCode entered
			and   not (AccruedTaxAmount entered or InvoicedTaxAmount entered))

		HasProcurementTemplateLineDistribution
			restricted
			when (FromProcurementTemplate
			and   ProcurementTemplateLinenRel.DistributionAccount entered)

		ContractBlanketOrStanding
			when (Contract entered
			and  (CostCode.Blanket
			or    CostCode.Standing))

		LastCostOrPO
			when (CostCode.LastPoCreated
			or 	  CostCode.LastCost)

		ContractOrBlanketOrCatalogQuoteOrStanding
			when (CostCode.Contract
			or	  CostCode.Blanket
			or	  CostCode.CatalogQuote
			or    CostCode.Standing)

		TierParticipant
			when (CostCode.TierReqLocParticipant
			or	  CostCode.TierIcLocationParticipant
			or	  CostCode.TierCompanyParticipant)

		OneDayOld
			when ((current corporate date - CreateDate) = 1)
		MoreThanOneDayOld
			when ((current corporate date - CreateDate) > 1)

		UseDirectItemBuyUOM
			restricted
			when (Item.StockUOM = EnteredUOM)

		DefaultVendorItemRelExists
			restricted
			when (DefaultVendorItemRel exists)

		HasManufacturerInformation
			restricted
			when (Manufacturer.ManufacturerCode entered
			or    Manufacturer.ManufacturerDivision entered
			or    ManufacturerNumber entered)

		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		HasCostFromBlanketContract
			classic name is BLKT-HAVE-COST
			restricted
			when (CostCode.Blanket
			and   ReplenishmentWorksheet.No
			and   not SourcingEventWorksheet
			and   (EnteredUnitCost entered
				or    CostOption.NoCharge
				or    CostOption.VendorDetermined))

		HasBuyer
			classic name is BUYER
			restricted
			when (Buyer entered)






		HasContract
			restricted
			when (Contract entered
			and   (EnteredUnitCost >  0
				or    CostOption.NoCharge))

		HasCostAndVendor
			classic name is HAVE-COST-VEN
			restricted
			when (Vendor entered
			and   ReplenishmentWorksheet.No
			and   not SourcingEventWorksheet
			and   (EnteredUnitCost entered
				or    CostOption.NoCharge
				or    CostOption.VendorDetermined))

		IsReplenishmentWorksheet
			classic name is IC-WORKSHEET
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.InventoryControl
			and   not ReplenishmentWorksheet.No)

		IsInventoried
			classic name is ITEMLOC
			restricted
			when (ItemType.Inventoried)

		IsItem
			classic name is ITEMMAST
			restricted
			when (ItemType.Inventoried
			or    ItemType.NonStock)

		SpecialOrService
			restricted
			when (ItemType.Special
			or    ItemType.Service)

		IsCatchWeightItem
			when (IsItem
			and   Item.IsCatchWeightItem)

		NoVendorAndCost
			classic name is NO-VEND-COST
			restricted
			when (Vendor not entered
			and   EnteredUnitCost not entered)

		IsNonInventory
			restricted
			when (not ItemType.Inventoried)

		FromInventoryControl
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.InventoryControl)

		FromOrderEntry
			classic name is ORDER-ENTRY
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.OrderEntry)

		FromProcurementTemplate
			classic name is PROC-TEMPLATE
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.ProcurementTemplates)

		FromRequisitions
			classic name is REQUISITIONS
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions)

		FromRequisitionAndNotInEventWorksheet
			classic name is RQ-NON-SRC-EVT
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
			and   not SourcingEventWorksheet)

		InProcessOnEvent
			restricted
			when (PurchaseOrderInterfaceOnEvent exists)

		InEventWorksheet
			restricted
 			when (SourcingEventWorksheetRel exists)

		RequireEvent
			restricted
 			when (SourcingEventWorksheet)

 		HasSelection
 			restricted
 			when (SelectedInterfaceByActorRel exists)







		IsInvalidForOverride
			restricted
			when ((!Buyer.OverrideContractCost and !Buyer.OverrideLastPOLastCost and OverrideCost and !CostCode.StrategicSourcing)
			or (!Buyer.OverrideContractCost and (CostCode.Contract or CostCode.CatalogQuote or CostCode.Blanket))
			or (!Buyer.OverrideLastPOLastCost and (CostCode.LastCost or CostCode.LastPoCreated)))

		IsSelectedByActor
			when (Actor = actor)

		IsSelectedByOther
			when (IsSelected and Actor != actor)

		IsMyRequisition
			restricted
			when (Buyer = actor.agent(Employee).Employee)

		IsSelectedCondition
			when (IsSelected)

		MissingBuyerOrVendorOrCost
			restricted
			when (Buyer not entered
			or    Vendor not entered
			or    (CostOption.CostRequired
			and   EnteredUnitCost not entered))

		MissingBuyer
			restricted
			when (Buyer not entered
			and   Vendor entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost entered))

		MissingVendor
			restricted
			when (Buyer entered
			and   Vendor not entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost entered))

		MissingCost
			restricted
			when (Buyer entered
			and   Vendor entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost not entered))

		MissingBuyerAndVendor
			restricted
			when (Buyer not entered
			and   Vendor not entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost entered))

		MissingBuyerAndCost
			restricted
			when (Buyer not entered
			and   Vendor entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost not entered))

		MissingVendorAndCost
			restricted
			when (Buyer entered
			and   Vendor not entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost not entered))

		MissingBuyerAndVendorAndCost
			restricted
			when (Buyer not entered
			and   Vendor not entered
			and  (CostOption.CostRequired
			and   EnteredUnitCost not entered))

		IsForManagePurchaseRequests
			restricted
			when (not SourcingEventWorksheet)

		HasRequisition
			restricted
			when (RequisitionRel exists)

		POCommentExists
			restricted
			when (RequisitionLinePOCommentRel exists)

		HasRequisitionComment
			restricted
			when (RequisitionCommentRel exists)

		HasCustomerOrderComment
			restricted
			when (StandardOrderCommentsRel exists
			or    LastStandardOrderCommentsRel exists)

		HasRequisitionLineComment
			restricted
			when (RequisitionLineCommentRel exists)

		HasCustomerOrderLineComment
			restricted
			when (OrderEntryOrderCommentsForLineRel exists)

		HasPurchaseOrderInterfaceComment
			restricted
			when (PurchaseOrderInterfaceCommentRel exists)

		HasSomeRequisitionComment
			restricted
			when (HasRequisitionComment
			or    HasRequisitionLineComment)

		HasMiscellaneousRequisitionAddOnCharges
			restricted
			when (MiscellaneousRequisitionAddOnChargesRel exists)

		HasRequisitionLineAddOnCharges
			restricted
			when (RequisitionLineAddOnChargesRel exists)

		HasCustomerOrderLineAddOnCharges
			restricted
			when (CustomerOrderLineAddOnChargesRel exists)

		HasRequisitionLineDistributions
			restricted
			when (RequisitionLineDistributionsRel exists)

		HasCustomerLineDistributions
			restricted
			when (CustomerOrderLineRel.CustomerOrderLineDistributionsRel exists)

		IsAnyFilterValueEntered
			restricted
			when ((Company entered)
			or 	(PurchaseOrderInterface.SourceDocumentOrigin entered)
			or 	(PurchaseOrderInterface.OperatingCompany entered)
			or 	(Vendor entered)
			or 	(PurchaseFromLocation entered)
			or  (Buyer entered)
			or  (CostOption entered)
			or  (POCode entered)
			or  (Manufacturer entered)
			or  (PurchaseOrderInterface.RequestingLocation entered)
			or  (Contract entered)
			or  (Item entered)
			or  (ItemType entered))

		IsItemWithNoCost
			when (EnteredUnitCost not entered)

		IsItemWithNoVendor
			when (Vendor not entered)

		HasBuyerPurchasingClass
			when  (MajorPurchasingClass entered
			and    BuyerPurchasingClassRel exists)

		HasBuyerLocation
			when ((ShipToLocation entered
					or PurchaseOrderInterface.RequestingLocation entered)
				and BuyerShipToLocationRel exists
				or BuyerRequestingLocationRel exists)

		HasBuyerVendor
			when  (Vendor entered
			and	   BuyerVendorRel exists)

		POWorkSheetSearchFilter
			restricted
			when  ((!HasBuyerPurchasingClass
			and 	!HasBuyerLocation
			and 	!HasBuyerVendor)
			or	   (!HasBuyerPurchasingClass
			and 	!HasBuyerLocation
			and 	HasBuyerVendor)
			or	   (!HasBuyerPurchasingClass
			and 	HasBuyerLocation
			and 	!HasBuyerVendor)
			or	   (HasBuyerPurchasingClass
			and 	!HasBuyerLocation
			and 	!HasBuyerVendor)
			or	   (!HasBuyerPurchasingClass
			and 	HasBuyerLocation
			and 	HasBuyerVendor)
			or	   (HasBuyerPurchasingClass
			and 	!HasBuyerLocation
			and 	HasBuyerVendor)
			or	   (HasBuyerPurchasingClass
			and 	HasBuyerLocation
			and 	!HasBuyerVendor)
			or	   (HasBuyerPurchasingClass
			and 	HasBuyerLocation
			and 	HasBuyerVendor))

		ContractHasVendorLocation
			restricted
			when (Contract.HasApPurchFrom)

		SingleDocumentToPO
			restricted
			when (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
			and   RequisitionRel.OneSourceDocumentToOnePO.Yes)

		CostCodeBlanket
			restricted
			when (CostCode.Blanket)

		MixContractsOnPurchaseOrder
			restricted
			when ((PurchaseFromLocation entered
			and	   PurchaseFromLocationRel.MixContractsOnPurchaseOrder)
			or    (PurchaseFromLocation not entered
			and    PurchasingVendorRel.MixContractsOnPurchaseOrder))

		IsAribaEnabled
			restricted
			when (ProcurementGroupRel.AribaEnabled)
		IsHSNSACCodeEnabled
			restricted
			when (GeneralLedgerCompanyForCompanyRel.RequireHSNSACCode)

		IsInBuyerFilter
			when (actor.agent(Employee).Employee entered
			and	 (not actor.agent(Employee).Employee.Buyer.FilterByBuyer or Buyer = actor.agent(Employee).Employee)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterByPurchasingClasses or BuyerPurchasingClassRel exists)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterByVendors or BuyerVendorRel exists)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterByLocation or BuyerShipToLocationRel exists)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterByRequestingLocation or BuyerRequestingLocationRel exists)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterItemsWithNoCost or EnteredUnitCost not entered)
			and	 (not actor.agent(Employee).Employee.Buyer.FilterItemsWithNoVendor or Vendor not entered)
			and	 (actor.agent(Employee).Employee.Buyer.FilterFromPriority not entered
			or	 (AllocationPriority >= actor.agent(Employee).Employee.Buyer.FilterFromPriority
			and	  AllocationPriority <= actor.agent(Employee).Employee.Buyer.FilterToPriority))
			and	 (actor.agent(Employee).Employee.Buyer.FilterDeliveryDays not entered or RequestedDeliveryDate < current corporate date + actor.agent(Employee).Employee.Buyer.FilterDeliveryDays)
			and	 (actor.agent(Employee).Employee.Buyer.FilterPOCode not entered or POCode = actor.agent(Employee).Employee.Buyer.FilterPOCode)
			and	 (actor.agent(Employee).Employee.Buyer.FilterManufacturer.ManufacturerCode not entered or Manufacturer.ManufacturerCode = actor.agent(Employee).Employee.Buyer.FilterManufacturer.ManufacturerCode)
			and	 (actor.agent(Employee).Employee.Buyer.FilterManufacturer.ManufacturerDivision not entered or Manufacturer.ManufacturerDivision = actor.agent(Employee).Employee.Buyer.FilterManufacturer.ManufacturerDivision)
			and	 (actor.agent(Employee).Employee.Buyer.FilterContract not entered or Contract = actor.agent(Employee).Employee.Buyer.FilterContract)
			and	 (actor.agent(Employee).Employee.Buyer.FilterItemType not entered or ItemType = actor.agent(Employee).Employee.Buyer.FilterItemType))

		HasRequester
			when (Requester entered)

		RequestingLocationEntered
			when (PurchaseOrderInterface.RequestingLocation entered)

		HasItemLocationStockUOM
			when (IsItem
			and   ItemLocationRel.HasItemLocationStockUOM)

		HasSpecialHandlingCode
			when ((FromRequisitions and RequisitionLineRel.HasSpecialHandlingCode)
			or (FromInventoryControl and Item.HasSpecialHandlingCode))
		
		IsValidActorContext			
			restricted
			when (GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

	Relations
		TaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
				related.TaxEntity 				= GeneralLedgerCompanyForCompanyRel.AccountingEntity

		PurchasingVendorRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup							= ProcurementGroup
				related.Vendor								= Vendor

	   	PurchaseFromLocationRel
	   		one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup							= ProcurementGroup
				related.Vendor								= Vendor
				related.PurchaseFromLocation				= PurchaseFromLocation

		DefaultVendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup					= ProcurementGroup
				related.Item								= Item
				related.Vendor								= Vendor
			Instance Selection
				where (related.UseAsDefault)

		VendorItemOneToOneRel
			one-to-one relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup					= ProcurementGroup
				related.Item								= Item
				related.Vendor								= Vendor
				related.VendorItem							= VendorItem

		ItemByManufacturerInformationRel
			one-to-many relation to Item
			Field Mapping uses Set8
				related.ItemGroup	                       	= ProcurementGroup
				related.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
				related.ManufacturerNumber	     			= ManufacturerNumber

		CustomerOrderLineRel
			one-to-one relation to CustomerOrderLine
			Field Mapping uses symbolic key
				related.Company           = Company
				related.CustomerOrder     = PurchaseOrderInterface.SourceDocumentNumeric
				related.CustomerOrderLine = PurchaseOrderInterface.LineNumber

		CustomerOrderLineAddOnChargesRel
			one-to-many relation to CustomerOrderAddOnCharge
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company           = Company
				and	   related.CustomerOrder     = PurchaseOrderInterface.SourceDocumentNumeric
				and	   related.CustomerOrderLine = PurchaseOrderInterface.LineNumber
				and	   related.IsCustomerOrderLine
				and    related.IsAddOnCharge)

		ItemlocRel
			one-to-one relation to ItemLocation
			valid when (IsInventoried)
			required
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = ShipToLocation
				related.Item              = Item

		MiscellaneousRequisitionAddOnChargesRel
			one-to-many relation to RequisitionLineAddOnCharge
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company					= PurchaseOrderInterface.OperatingCompany
				and    related.Requisition				= PurchaseOrderInterface.SourceDocumentNumeric
				and    related.RequisitionLine			= blank)

		RequisitionLineAddOnChargesRel
			one-to-many relation to RequisitionLineAddOnCharge
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company					= PurchaseOrderInterface.OperatingCompany
				and    related.Requisition				= PurchaseOrderInterface.SourceDocumentNumeric
				and    related.RequisitionLine			= PurchaseOrderInterface.LineNumber
				and    related.IsLineAddOnCharge)

		RequisitionLineDistributionsRel
			one-to-many relation to RequisitionLineDistribution
			valid when (IsNonInventory)
			Field Mapping uses symbolic key
				related.Company					= PurchaseOrderInterface.OperatingCompany
				related.Requisition				= PurchaseOrderInterface.SourceDocumentNumeric
				related.RequisitionLine			= PurchaseOrderInterface.LineNumber

		PurchaseOrderInterfaceAddOnChargeRel
			one-to-many relation to PurchaseOrderInterfaceAddOnCharge
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.PurchaseOrderInterfaceAddOnCharge.SourceDocumentOrigin = PurchaseOrderInterface.SourceDocumentOrigin
				and    related.PurchaseOrderInterfaceAddOnCharge.SourceDocumentNumeric = PurchaseOrderInterface.SourceDocumentNumeric
				and   (related.PurchaseOrderInterfaceAddOnCharge.LineNumber = LocalPurchaseOrderLine
				or 	   related.PurchaseOrderInterfaceAddOnCharge.LineNumber = blank))
		
		PurchaseOrderAndLineAddOnChargeRel
			one-to-many relation to PurchaseOrderAndLineAddOnCharge
			Field Mapping uses Set8
				related.Company							= Company
				related.PurchaseOrder					= LocalPurchaseOrder
			Instance Selection
				where (related.AddOnCharge 				= first PurchaseOrderInterfaceAddOnChargeRel.PurchaseOrderInterfaceAddOnCharge.AddOnCharge
				and    related.TotalAddOnChargeAmount	= first PurchaseOrderInterfaceAddOnChargeRel.TotalAddOnChargeAmount)

		PurchaseOrderInterfaceHeaderAddOnChargeRel
			one-to-many relation to PurchaseOrderInterfaceAddOnCharge
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.PurchaseOrderInterfaceAddOnCharge.SourceDocumentOrigin = PurchaseOrderInterface.SourceDocumentOrigin
				and   related.PurchaseOrderInterfaceAddOnCharge.SourceDocumentNumeric = PurchaseOrderInterface.SourceDocumentNumeric
				and   related.PurchaseOrderInterfaceAddOnCharge.LineNumber not entered)

		PurchaseOrderInterfaceCommentRel is a PurchaseOrderInterfaceComment set

		ProcurementTemplateLinenRel
			one-to-one relation to ProcurementTemplateLine
			valid when (FromProcurementTemplate)
			required
			Field Mapping uses Set4
				related.ProcurementGroup        = ProcurementGroup
				related.TemplateDocumentNumber  = PurchaseOrderInterface.SourceDocumentNumeric
				related.ProcurementTemplateLine = PurchaseOrderInterface.LineNumber

		ProcurementGroupRel
			one-to-one relation to ProcurementGroup
			Field Mapping uses symbolic key
				related.ProcurementGroup			= PurchaseOrderInterface.ProcurementGroup


		RequestingLocationRel
			one-to-one relation to RequestingLocation
			valid when (FromRequisitions)
			Field Mapping uses symbolic key
				related.Company 			= PurchaseOrderInterface.OperatingCompany
				related.RequestingLocation	= PurchaseOrderInterface.RequestingLocation

		RequisitionRel
			one-to-one relation to Requisition
			valid when (FromRequisitions)
			Field Mapping uses symbolic key
				related.Company			= PurchaseOrderInterface.OperatingCompany
				related.Requisition		= PurchaseOrderInterface.SourceDocumentNumeric

		ByCompanyRequisitionRel
			one-to-one relation to Requisition
			valid when (FromRequisitions)
			Field Mapping uses symbolic key
				related.Company			= InCompany
				related.Requisition		= PurchaseOrderInterface.SourceDocumentNumeric

		RequisitionLineRel
			one-to-one relation to RequisitionLine
			required
			Field Mapping uses symbolic key
				related.Company         = PurchaseOrderInterface.OperatingCompany
				related.Requisition     = PurchaseOrderInterface.SourceDocumentNumeric
				related.RequisitionLine = PurchaseOrderInterface.LineNumber

		RequisitionLinePOCommentRel
			one-to-many relation to RequisitionLineComment
			Field Mapping uses ByCommentType
				related.Company         = PurchaseOrderInterface.OperatingCompany
				related.Requisition     = PurchaseOrderInterface.SourceDocumentNumeric
				related.RequisitionLine = PurchaseOrderInterface.LineNumber
				related.CommentType     = "P"

		RequisitionLineCommentRel
			one-to-many relation to RequisitionLineComment
			Field Mapping uses ByCommentType
				related.Company         = PurchaseOrderInterface.OperatingCompany
				related.Requisition     = PurchaseOrderInterface.SourceDocumentNumeric
				related.RequisitionLine = PurchaseOrderInterface.LineNumber
			Instance Selection
				where ((not related.CommentType.PrintOnPickList
				and		not related.CommentType.PrintOnRequisition)
				or 		related.CommentType.PrintOnDeliveryTicket)


		RequisitionCommentRel
			one-to-many relation to RequisitionComment
			Field Mapping uses ByCommentType
				related.Company         = PurchaseOrderInterface.OperatingCompany
				related.Requisition     = PurchaseOrderInterface.SourceDocumentNumeric
			Instance Selection
				where (not (related.CommentType.PrintOnPickList
				or			related.CommentType.PrintOnRequisition))

		OrderEntryOrderCommentsForLineRel
			one-to-many relation to OrderEntryOrderComment
			Field Mapping uses symbolic key
				related.Company                 		= Company
				related.Customer                		= blank
				related.OrderEntryStandardOrder 		= blank
				related.CustomerOrder           		= PurchaseOrderInterface.SourceDocumentNumeric
			Instance Selection
				where (related.CustomerOrderLine = PurchaseOrderInterface.LineNumber)

		StandardOrderCommentsRel
			one-to-many relation to OrderEntryOrderComment
			Field Mapping uses symbolic key
				related.Company                 		= Company
				related.Customer                		= blank
				related.OrderEntryStandardOrder 		= blank
				related.CustomerOrder           		= PurchaseOrderInterface.SourceDocumentNumeric
			Instance Selection
				where (related.CustomerOrderLine not entered)

		LastStandardOrderCommentsRel
			one-to-many relation to OrderEntryOrderComment
			Field Mapping uses symbolic key
				related.Company                 		= Company
				related.Customer                		= blank
				related.OrderEntryStandardOrder 		= blank
				related.CustomerOrder           		= PurchaseOrderInterface.SourceDocumentNumeric
			Instance Selection
				where (related.CustomerOrderLine = 999999)

		ByCompanyRequisitionLineRel
			one-to-one relation to RequisitionLine
			required
			Field Mapping uses symbolic key
				related.Company         = InCompany
				related.Requisition     = PurchaseOrderInterface.SourceDocumentNumeric
				related.RequisitionLine = PurchaseOrderInterface.LineNumber

		RequisitionLinesOpenRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set4
				related.Company     = PurchaseOrderInterface.OperatingCompany
				related.Requisition = PurchaseOrderInterface.SourceDocumentNumeric

		SourcingEventWorksheetRel
			one-to-one relation to SourcingEventWorksheet
			Field Mapping uses ByPurchaseOrderInterface
				related.Company									= Company
				related.PurchaseOrderInterface                  = PurchaseOrderInterface

		SelectedByActor
			one-to-many relation to SourcingEventWorksheet
			Field Mapping uses symbolic key
				related.Actor						= actor

		PurchaseOrderInterfaceOnEvent
			one-to-many relation to SourcingEventLineSource
			Field Mapping uses ByPurchaseOrderInterface
				related.Company					= Company
				related.OriginCode				= PurchaseOrderInterface.SourceDocumentOrigin
				related.SourceDocumentNumeric	= PurchaseOrderInterface.SourceDocumentNumeric
				related.OperatingCompany		= PurchaseOrderInterface.OperatingCompany
				related.RequestingLocation		= PurchaseOrderInterface.RequestingLocation
				related.LineNumber				= PurchaseOrderInterface.LineNumber

		SourcingCompanyRel
			one-to-one relation to SourcingCompany
			Field Mapping uses symbolic key
				related.Company                 = Company

		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company                 = Company
				related.PurchaseOrder			= LocalPurchaseOrder

		AllSelectedForCombineRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses symbolic key
			Instance Selection
				where (related.IsSelected 	 = true
				and    related.Actor		 = Actor)

		SelectedInterfaceByActorRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses symbolic key
			Instance Selection
				where	(related.IsSelected = true
				and		related.Actor	  = actor
				and		related.ReplenishmentWorksheet.No)









		ContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup	 	= ProcurementGroup
				related.ItemNumber			= Item
				related.Contract		 	= Contract

		NotOnHoldContractLineItemsRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup		= ProcurementGroup
				related.ItemNumber			= Item
			Instance Selection
				where (not related.OnHold
				and related.Contract.Vendor = Vendor
				and related.Contract.ApPoPurchaseFrom.PurchaseFromLocation = PurchaseFromLocation)

		ItemUOMRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup               = ProcurementGroup
				related.Item                    = Item

		ValidItemUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup     = ProcurementGroup
				related.Item          = Item
				related.UnitOfMeasure = EnteredUOM

		ItemLocationUsingLocalLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= LocalInventoryLocation
				related.Item					= Item

		ItemReplenishmentSourceRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= ShipToLocation
				related.Item					= Item

		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= ShipToLocation
				related.Item					= Item

		SameItemInPurchaseOrderLineRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company									= Company
				related.PurchaseOrder							= LocalPurchaseOrder
			Instance Selection
				where  (related.Item								= Item
				and    (Vendor not entered
				or	    related.Vendor 								= Vendor)
				and	   (PurchaseFromLocation not entered
				or      related.PurchaseFromLocation 				= PurchaseFromLocation)
				and    (Buyer not entered
				or      related.Buyer 								= Buyer)
				and     related.CnCode 								= CnCode
				and     related.EnteredBuyUOM 						= EnteredUOM
				and     related.EnteredBuyUOMMultiplier 			= EnteredUOMMultiplier
				and    (ShipToLocation not entered
				or      related.ShipToLocation 						= ShipToLocation)
				and     related.Contract		 					= Contract
				and     related.ItemType 							= ItemType
				and     related.Taxable 							= Taxable
				and 	related.TaxCode 							= TaxCode
				and 	related.MSDSRequired 						= MSDSRequired
				and 	related.InspectionRequired 					= InspectionRequired
				and 	related.CertificationRequired 				= CertificationRequired
				and 	related.CostOption 							= CostOption
				and 	related.LateDeliveryDate					= LateDeliveryDate
				and 	related.Description 						= Description
				and 	related.MajorPurchasingClass 				= MajorPurchasingClass
				and 	related.MinorPurchasingClass 				= MinorPurchasingClass
				and 	related.Manufacturer 						= Manufacturer
				and 	related.ManufacturerNumber 					= ManufacturerNumber
				and 	related.VendorBuyUnitCost 					= EnteredUnitCost
				and 	related.PunchoutId 							= PunchoutId
				and 	related.RequisitionInterfaceInformation		= RequisitionInterfaceInformation
				and 	related.CommodityCode 						= CommodityCode
				and 	related.GlobalLineType 						= GlobalLineType
				and		related.EAMWorkOrder						= EAMWorkOrder
				and		related.EAMWorkOrderActivity				= EAMWorkOrderActivity)

		PurchaseOrderLineItemRel 
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
				related.PurchaseOrderLine							= LocalPurchaseOrderLine
			Instance Selection
				where  (related.Vendor								= Vendor
				and		related.PurchaseFromLocation				= PurchaseFromLocation
				and		related.ShipToLocation 						= ShipToLocation
				and     related.EnteredBuyUOM 						= EnteredUOM
				and     related.EnteredBuyUOMMultiplier 			= EnteredUOMMultiplier
				and     related.Contract		 					= Contract
				and     related.ItemType 							= ItemType
				and     related.ItemType						not = "S" 
				and     related.Taxable 							= Taxable
				and 	related.TaxCode 							= TaxCode
				and 	related.MSDSRequired 						= MSDSRequired
				and 	related.InspectionRequired 					= InspectionRequired
				and 	related.CertificationRequired 				= CertificationRequired
				and 	related.CostOption 							= CostOption
				and 	related.LateDeliveryDate					= LateDeliveryDate
				and	   (RequestedDeliveryDate not entered
					or	   (RequestedDeliveryDate < current corporate date
					and		related.EarlyDeliveryDate = LocalDefaultDeliveryDate) 
					or      related.EarlyDeliveryDate				= RequestedDeliveryDate)
				and 	related.Description 						= Description
				and 	related.MajorPurchasingClass 				= MajorPurchasingClass
				and 	related.MinorPurchasingClass 				= MinorPurchasingClass
				and 	related.Manufacturer 						= Manufacturer
				and 	related.ManufacturerNumber 					= ManufacturerNumber
				and 	related.VendorBuyUnitCost 					= EnteredUnitCost
				and 	related.PunchoutId 							= PunchoutId
				and 	related.RequisitionInterfaceInformation		= RequisitionInterfaceInformation
				and 	related.CommodityCode 						= CommodityCode
				and		related.PatientProcedure not entered
				and 	related.GlobalLineType 						= GlobalLineType
				and		related.CnCode 								= CnCode
				and		related.AddOnChargeExists					= false)


		PurchaseOrderLineItemRel1
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
				related.PurchaseOrderLine							= LocalPurchaseOrderLine

		PurchaseOrderLineItemRel2
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
			Instance Selection
				where  (related.Vendor								= Vendor
				and		related.PurchaseFromLocation				= PurchaseFromLocation
				and		related.ShipToLocation 						= ShipToLocation
				and     related.EnteredBuyUOM 						= EnteredUOM
				and     related.EnteredBuyUOMMultiplier 			= EnteredUOMMultiplier)

		PurchaseOrderLineItemRel3
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
			Instance Selection
				where  (related.Contract		 					= Contract
				and     related.ItemType 							= ItemType
				and     related.ItemType						not = "S" 
				and     related.Taxable 							= Taxable
				and 	related.TaxCode 							= TaxCode
				and 	related.MSDSRequired 						= MSDSRequired
				and 	related.InspectionRequired 					= InspectionRequired
				and 	related.CertificationRequired 				= CertificationRequired
				and 	related.CostOption 							= CostOption)

		PurchaseOrderLineItemRel4
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
			Instance Selection
				where  (related.LateDeliveryDate					= LateDeliveryDate
				and	   (RequestedDeliveryDate not entered
					or	   (RequestedDeliveryDate < current corporate date
					and		related.EarlyDeliveryDate = current corporate date)
					or      related.EarlyDeliveryDate				= RequestedDeliveryDate))

		PurchaseOrderLineItemRel5
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set7
				related.Company										= Company
				related.PurchaseOrder								= LocalPurchaseOrder
				related.Item										= Item
			Instance Selection
				where  (related.Description 						= Description
				and 	related.MajorPurchasingClass 				= MajorPurchasingClass
				and 	related.MinorPurchasingClass 				= MinorPurchasingClass
				and 	related.Manufacturer 						= Manufacturer
				and 	related.ManufacturerNumber 					= ManufacturerNumber
				and 	related.VendorBuyUnitCost 					= EnteredUnitCost
				and 	related.PunchoutId 							= PunchoutId
				and 	related.RequisitionInterfaceInformation		= RequisitionInterfaceInformation
				and 	related.CommodityCode 						= CommodityCode
				and		related.PatientProcedure not entered
				and 	related.GlobalLineType 						= GlobalLineType
				and		related.CnCode 								= CnCode
				and		related.AddOnChargeExists					= false)

		SameAccountInPurchaseOrderLineDistributionsRel
			one-to-many relation to PurchaseOrderLineDistribution
			Field Mapping uses symbolic key
				related.Company                   = Company
				related.PurchaseOrder             = LocalPurchaseOrder
				related.PurchaseOrderLine         = LocalPurchaseOrderLine
			Instance Selection
				where (related.AddOnCharge not entered
				and    related.DistributionAccount	= LocalDistributionAccount
				and    related.CreatedByFES	= LocalCreatedByFES)

		InterfacedCustomerOrderRel
			one-to-one relation to CustomerOrder
			Field Mapping uses symbolic key
				related.Company													= Company
				related.CustomerOrder											= LocalCustomerOrder
		
		CustomerOrderRel
			one-to-one relation to CustomerOrder
			Field Mapping uses symbolic key
				related.Company													= Company
				related.CustomerOrder											= PurchaseOrderInterface.SourceDocumentNumeric

		ReplenishmentPOWorksheetRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses ByLineNumberDescending
				related.Company											= Company
				related.PurchaseOrderInterface.SourceDocumentOrigin		= SourceDocumentOrigin.InventoryControl
				related.PurchaseOrderInterface.SourceDocumentAlpha		= "IC_REORDER"
				related.PurchaseOrderInterface.OperatingCompany			= Company

		TxtaxrateRel
			one-to-many relation to TaxRate
			Field Mapping uses symbolic key
			Instance Selection
				where (related.TaxRate.TaxCode = TaxCode)

		ContractParticipantLocationsRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup = ProcurementGroup
				related.Contract	  = Contract
			Instance Selection
				where (related.ContractParticipant.ParticipantLocation.Company  = Company
				and   (related.ContractParticipant.ParticipantLocation.Location not entered
				or 	   related.ContractParticipant.ParticipantLocation.Location = ShipToLocation))

		RelatedItemOnContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup		= ProcurementGroup
				related.Contract 			= Contract
			Instance Selection
				where (related.ItemNumber	= Item)

		RelatedVendorItemOnContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup		= ProcurementGroup
				related.Contract 			= Contract
			Instance Selection
				where (related.VendorItem	= VendorItem)

		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company = PurchaseOrderInterface.OperatingCompany

		InventoryCompanyOfFromCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company          = Company

		BuyerPurchasingClassRel
			one-to-many relation to BuyerPurchasingClass
			Field Mapping uses symbolic key
				related.HROrganization	= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer			= actor.agent(Employee).Employee
				related.ItemGroup		= actor.agent(Employee).Employee.Buyer.ProcurementGroup
			Instance Selection
				where   (related.BuyerPurchasingClass.MajorPurchasingClass = MajorPurchasingClass
				and		(related.BuyerPurchasingClass.MinorPurchasingClass not entered
				or		 related.BuyerPurchasingClass.MinorPurchasingClass = MinorPurchasingClass))

		BuyerShipToLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization 		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= actor.agent(Employee).Employee
				related.Company				= Company
			Instance Selection
				where  (related.Location not entered
				or		related.Location = ShipToLocation)

		BuyerRequestingLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= actor.agent(Employee).Employee
				related.Company				= Company
			Instance Selection
				where  (related.RequestingLocation not entered
				or		related.RequestingLocation	= PurchaseOrderInterface.RequestingLocation)

		BuyerVendorRel
			one-to-many relation to BuyerVendor
			Field Mapping uses symbolic key
				related.HROrganization						= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer								= actor.agent(Employee).Employee
				related.VendorGroup							= Vendor.VendorGroup
			Instance Selection
				where 	(related.BuyerVendor.Vendor					= Vendor
				and		(related.BuyerVendor.PurchaseFromLocation not entered
				or 		 related.BuyerVendor.PurchaseFromLocation	= PurchaseFromLocation))

		FilterBuyerPurchasingClassRel
			one-to-many relation to BuyerPurchasingClass
			Field Mapping uses symbolic key
				related.HROrganization		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= Buyer
				related.ItemGroup			= ProcurementGroup
			Instance Selection
				where   (related.BuyerPurchasingClass.MajorPurchasingClass = MajorPurchasingClass
				and		(related.BuyerPurchasingClass.MinorPurchasingClass not entered
				or		 related.BuyerPurchasingClass.MinorPurchasingClass = MinorPurchasingClass))

		FilterBuyerVendorRel
			one-to-many relation to BuyerVendor
			Field Mapping uses symbolic key
				related.HROrganization		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= Buyer
				related.VendorGroup			= Vendor.VendorGroup
			Instance Selection
				where 	(related.BuyerVendor.Vendor					= Vendor
				and		(related.BuyerVendor.PurchaseFromLocation not entered
				or 		 related.BuyerVendor.PurchaseFromLocation	= PurchaseFromLocation))

		FilterBuyerLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= Buyer
				related.Company				= Company
			Instance Selection
				where (related.Location = ShipToLocation)

		FilterBuyerRequestingLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses symbolic key
				related.HROrganization		= actor.agent(Employee).Employee.Buyer.HROrganization
				related.Buyer				= Buyer
				related.Company				= Company
			Instance Selection
				where (related.RequestingLocation	= PurchaseOrderInterface.RequestingLocation)

 		PurchaseOrderRequesterLineSourceRel
 			one-to-many relation to PurchaseOrderLineSource
 			Field Mapping uses Set2
				related.PurchaseOrderLineSource.OperatingCompany		= PurchaseOrderInterface.OperatingCompany
				related.PurchaseOrderLineSource.SourceDocumentOrigin	= PurchaseOrderInterface.SourceDocumentOrigin
				related.PurchaseOrderLineSource.SourceDocumentNumeric	= PurchaseOrderInterface.SourceDocumentNumeric

		FilterInventoryReportGroupLocationRel
			one-to-many relation to InventoryReportGroupLocation
			Field Mapping uses symbolic key
				related.Company						= LocalCompany
				related.InventoryReportGroup		= LocalInventoryReportGroup
			Instance Selection
				where (related.InventoryLocation 	= ShipToLocation)

		FilterRequisitionRel
			one-to-one relation to Requisition
			Field Mapping uses symbolic key
				related.Company						= LocalCompany
				related.Requisition					= LocalRequisition

	   	FilterVendorLocationRel
	   		one-to-one relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup					= LocalProcurementGroup
				related.Vendor						= LocalVendor
				related.VendorLocation				= LocalPurchaseFromLocation

	   	FilterVendorRel
	   		one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup					= LocalProcurementGroup
				related.Vendor						= LocalVendor

		POInterfaceResultDetailRel
			one-to-many relation to POInterfaceResultDetail
			Field Mapping uses ByCompany
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.POInterfaceResult			= LocalPOInterfaceResult
				related.Company						= Company
			Instance Selection
				where (related.PurchaseOrder		= LocalPurchaseOrder
				and	   related.PurchaseOrderLine	= LocalPurchaseOrderLine
				and	   related.HasPurchaseOrderLineDetails)

		CompanySummaryPOInterfaceResultDetailRel
			one-to-many relation to POInterfaceResultDetail
			Field Mapping uses ByCompany
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.POInterfaceResult			= LocalPOInterfaceResult
				related.Company						= LocalCompany
			Instance Selection
				where (related.IsSummary)

		PurchaseOrderWithLineResultDetailRel
			one-to-many relation to POInterfaceResultDetail
			Field Mapping uses ByCompany
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.POInterfaceResult			= LocalPOInterfaceResult
				related.Company						= LocalCompany
			Instance Selection
				where (related.PurchaseOrder		= LocalPurchaseOrder
				and	   related.IsProcessed)

		LocationItemUOMDefaultBuyingRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  					= Company
				related.InventoryLocation 			= ShipToLocation
				related.Item						= Item
			Instance Selection
				where (related.DefaultForBuying)

		LocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  					= Company
				related.InventoryLocation 			= ShipToLocation
				related.Item						= Item
				related.UnitOfMeasure				= EnteredUOM

		VendorBuyLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  					= Company
				related.InventoryLocation 			= ShipToLocation
				related.Item						= Item
				related.UnitOfMeasure				= DefaultVendorItemRel.VendorBuyUOM.UnitOfMeasure

		VendorPriceLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  					= Company
				related.InventoryLocation 			= ShipToLocation
				related.Item						= Item
				related.UnitOfMeasure				= VendorItem.VendorPriceUOM

		GeneralLedgerCompanyForCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company						= Company

		CurrencyRelationshipRel
			one-to-one relation to CurrencyRelationship
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				 = GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
				related.CurrencyRelationship.FromCurrency	 = LocalFromCurrency
				related.CurrencyRelationship.ToCurrency		 = LocalToCurrency


		LocalPurchasingVendorRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup				= LocalProcurementGroup
				related.Vendor					= LocalVendor
		LocalPurchaseFromLocationRel
			one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup				= LocalProcurementGroup
				related.Vendor					= LocalVendor
				related.PurchaseFromLocation	= LocalPurchaseFromLocation
		InterfaceForVendorRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses symbolic key
			Instance Selection
				where (related.IsSelected = true
				and    related.Actor      = actor
				and    related.Company    = LocalCompany)
		InterfaceForVendorAndLocationRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses ByVendorPurchaseFromLocation
			Instance Selection
				where (related.Dropship   = false)


	Sets
		ByActor
			Sort Order
				Actor
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByBuyer
			Sort Order
				Buyer
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByVendor
			Sort Order
				Vendor
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByItem
			Sort Order
				Item
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByContractLine
			Sort Order
				ProcurementGroup
				Contract
				ContractLine
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByRequestedDeliveryDate
			Sort Order
				RequestedDeliveryDate
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		ByLineNumberDescending
			indexed
			Sort Order
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.LineNumber descending

		ByCompanyLocationItem
			indexed
			Sort Order
				Company
				ShipToLocation
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				Item
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		Set10
			indexed
			Sort Order
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.LineNumber
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.RequestingLocation

		Set2
			indexed
			Instance Selection
				where (HasCostAndVendor)
			Sort Order
				Company
				Vendor
				PurchaseFromLocation
				Buyer
				POCode
				ProcessLevel
				Item
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		Set3
			indexed
			Sort Order
				ProcurementGroup
				Company
				Item
				Vendor
				PurchaseFromLocation
				PurchaseOrderInterface

		Set7
			indexed
			Instance Selection
				where (HasCostFromBlanketContract)
			Sort Order
				Company
				Contract
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

		Set8
			indexed
			Instance Selection
				where (FromOrderEntry)
			Sort Order
				ProcurementGroup
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.LineNumber
				Vendor
				PurchaseFromLocation
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation

		Set9
			indexed
			Instance Selection
				where (IsReplenishmentWorksheet)
			Sort Order
				Company
				PurchaseOrderInterface.SourceDocumentAlpha
				ShipToLocation
				Item
				Vendor
				PurchaseFromLocation
				PurchaseOrderInterface.LineNumber

		Set1
			not indexed
			Sort Order
				ProcurementGroup
				Company
				Vendor
				PurchaseFromLocation
				PurchaseOrderInterface

		ByVendorPurchaseFromLocation
			duplicates
			Sort Order
				Company
				Vendor
				PurchaseFromLocation

		ByShipToLocation
			Sort Order
				Company
				ShipToLocation
				ItemLocationRel.PreferredBin
				PurchaseOrderInterface

		ByBin
			Sort Order
				Company
				ItemLocationRel.PreferredBin
				ShipToLocation
				PurchaseOrderInterface

	Rule Blocks

		CreatePurchaseOrderHeader 



			LocalRequestingLocation = PurchaseOrderInterface.RequestingLocation
			include GetBillToDetails

			invoke Unreleased.Create PurchaseOrder
				assign result to LocalSetPurchaseOrder
				fill in fields from this instance
					except invoked.PatientProcedure
					except invoked.POCode
					except invoked.TaxCode
				invoked.Company 				= LocalCompany
				invoked.LocalFromInterface		= true
				invoked.DefaultDeliveryDate     = LocalDefaultDeliveryDate
				invoked.Vendor 					= LocalVendor
				invoked.PurchaseFromLocation 	= LocalSetPurchaseFromLocation
				invoked.Buyer 					= LocalBuyer
				invoked.UseProcurementCard		= LocalVendor.UseProcurementCard
				if (Dropship)
					invoked.Dropship 			= Dropship
					invoked.DropshipName		= DropshipName
					invoked.DropshipAddress		= DropshipAddress
				if (ContractBlanketOrStanding)
					invoked.BlanketOrStandingContract	= Contract
				invoked.FromInterfaceUpdate		= true
				invoked.InterfaceInProcess		= PurchaseOrder.InterfaceInProcess.CreateInProcess
				invoked.PurchaseOrderBillToName 		= LocalPurchaseOrderBillToName
				invoked.PurchaseOrderBillToAddress		= LocalPurchaseOrderBillToAddress
				invoked.PurchaseOrderBillToContact 		= LocalPurchaseOrderBillToContact
				invoked.PurchaseOrderBillToPhoneNumber 	= LocalPurchaseOrderBillToPhoneNumber
				invoked.PurchaseOrderBillToEmailAddress = LocalPurchaseOrderBillToEmailAddress
				invoked.ProcessLevel					= ProcessLevel
				invoked.POCode							= LocalPOCode  
				invoked.ShippingNotes					= ShippingNotes
				invoked.Confirming				        = Confirming
				invoked.AribaPOType					    = AribaPOType
				invoked.QuoteNumber						= QuoteNumber
				invoked.ExternalRequisition				= ExternalRequisition
				if (not MixContractsOnPurchaseOrder)
					if (Contract entered
					and Contract.TermsCode not entered)
						invoked.BypassTermCodeDefaulting = true
					else
						invoked.TermCode				 = Contract.TermsCode

		CreatePurchaseOrderHeaderForProcessPurchase 



			LocalRequestingLocation = PurchaseOrderInterface.RequestingLocation

			invoke Unreleased.Create PurchaseOrder
				assign result to LocalSetPurchaseOrder
				resume on error
					LocalTransactionErrorMessage 		= error message
					LocalHeaderErrorReceived			= true
				fill in fields from this instance
					except invoked.PatientProcedure
					except invoked.POCode
					except invoked.TaxCode
				invoked.LocalFromInterface				= true
				invoked.Company 						= Company
				invoked.DefaultDeliveryDate     		= LocalDefaultDeliveryDate
				invoked.Vendor 							= Vendor
				invoked.PurchaseFromLocation 			= PurchaseFromLocation
				invoked.Buyer 							= SortBuyer
				invoked.UseProcurementCard				= Vendor.UseProcurementCard
				if (Dropship)
					invoked.Dropship 					= Dropship
					invoked.DropshipName				= DropshipName
					invoked.DropshipAddress				= DropshipAddress

				if (ContractBlanketOrStanding)
					invoked.BlanketOrStandingContract	= Contract
				invoked.FromInterfaceUpdate				= true
				invoked.InterfaceInProcess				= PurchaseOrder.InterfaceInProcess.CreateInProcess

				invoked.PurchaseOrderBillToName 		= LocalPurchaseOrderBillToName
				invoked.PurchaseOrderBillToAddress		= LocalPurchaseOrderBillToAddress
				invoked.PurchaseOrderBillToContact 		= LocalPurchaseOrderBillToContact
				invoked.PurchaseOrderBillToPhoneNumber 	= LocalPurchaseOrderBillToPhoneNumber
				invoked.PurchaseOrderBillToEmailAddress = LocalPurchaseOrderBillToEmailAddress
				invoked.ProcessLevel					= ProcessLevel
				invoked.POCode							= POCode
				invoked.ShippingNotes					= ShippingNotes
				invoked.Confirming				        = Confirming
				invoked.AribaPOType					    = AribaPOType
				invoked.QuoteNumber						= QuoteNumber
				invoked.ExternalRequisition				= ExternalRequisition
				if (not MixContractsOnPurchaseOrder)
					if (Contract entered
					and Contract.TermsCode not entered)
						invoked.BypassTermCodeDefaulting = true
					else
						invoked.TermCode				 = Contract.TermsCode


		DoCostDefaulting
			LocalForCostDefault = true
			if (Contract changed and not ItemType.Service)
				initialize ContractLine					

			if (ContractLine entered
			and ContractLine.UsesUOMSMustMatch
			and ContractLine.UOM != EnteredUOM)
				initialize Contract
				initialize ContractLine
			
			ProcurementCostDefault.InRequestingCompany			= PurchaseOrderInterface.OperatingCompany
			ProcurementCostDefault.InRequestingLocation			= PurchaseOrderInterface.RequestingLocation
			if (IsItem)
				ProcurementCostDefault.InStockless				= PurchaseOrderInterface.RequestingLocation.Stockless
			else
				ProcurementCostDefault.InIgnoreStockless		= true
			ProcurementCostDefault.InCompany					= Company
			ProcurementCostDefault.InItem						= Item
			ProcurementCostDefault.InQuantity					= Quantity
			ProcurementCostDefault.InItemType					= ItemType
			ProcurementCostDefault.InQuantityUOM				= EnteredUOM
			ProcurementCostDefault.InCostOption					= CostOption
			ProcurementCostDefault.InVendor						= Vendor
			ProcurementCostDefault.InVendorItem					= VendorItem
			ProcurementCostDefault.InLocation					= ShipToLocation
			ProcurementCostDefault.InProcurementGroup			= ProcurementGroup
			ProcurementCostDefault.InManufacturerCode			= Manufacturer.ManufacturerCode
			ProcurementCostDefault.InManufacturerDivision		= Manufacturer.ManufacturerDivision
			ProcurementCostDefault.InManufacturerNumber			= ManufacturerNumber
			ProcurementCostDefault.InContractGroup				= Contract.ContractGroup
			ProcurementCostDefault.InContract					= Contract
			ProcurementCostDefault.InContractLine				= ContractLine
			ProcurementCostDefault.InDate						= current corporate date
			ProcurementCostDefault.InPurchaseFromLocation		= PurchaseFromLocation
			ProcurementCostDefault.InDoUpdates					= true
			ProcurementCostDefault.InDoDebug					= DoDebug
			
			LocalExecuteCostDefaulting	= ProcurementCostDefault.DefaultUnitCost
			
			if (ProcurementCostDefault.InStockless
			and not ProcurementCostDefault.LocalFoundCost)
				initialize ProcurementCostDefault.InStockless
				LocalExecuteCostDefaulting	= ProcurementCostDefault.DefaultUnitCost
			
			if (ProcurementCostDefault.LocalFoundCost)
				EnteredUnitCost		 = ProcurementCostDefault.OutputUnitCost
				CostOption			 = ProcurementCostDefault.OutputCostOption
				CostCode			 = ProcurementCostDefault.OutputCostCode
				Contract			 = ProcurementCostDefault.OutputContract
				ContractLine		 = ProcurementCostDefault.OutputContractLine
				Vendor				 = ProcurementCostDefault.OutputVendor
				PurchaseFromLocation = ProcurementCostDefault.OutputPurchaseFromLocation
				VendorItem			 = ProcurementCostDefault.OutputVendorItem	
			else
				LocalForCostDefault = false

		GetBillToDetails
			if (FromInventoryControl)
				if (PurchaseOrderBillToName not entered)
					if (ShipToLocation.PurchaseOrderBillToName entered)
						LocalPurchaseOrderBillToName			= ShipToLocation.PurchaseOrderBillToName
					else
						LocalPurchaseOrderBillToName			= Company.PurchaseOrderBillToName

				if (PurchaseOrderBillToAddress not entered)
					if (ShipToLocation.PurchaseOrderBillToAddress entered)
						LocalPurchaseOrderBillToAddress			= ShipToLocation.PurchaseOrderBillToAddress
					else
						LocalPurchaseOrderBillToAddress			= Company.PurchaseOrderBillToAddress

				if (PurchaseOrderBillToContact not entered)
					if (ShipToLocation.PurchaseOrderBillToContact entered)
						LocalPurchaseOrderBillToContact			= ShipToLocation.PurchaseOrderBillToContact
					else
						LocalPurchaseOrderBillToContact			= Company.PurchaseOrderBillToContact

				if (PurchaseOrderBillToPhoneNumber not entered)
					if (ShipToLocation.PurchaseOrderBillToPhoneNumber entered)
						LocalPurchaseOrderBillToPhoneNumber		= ShipToLocation.PurchaseOrderBillToPhoneNumber
					else
						LocalPurchaseOrderBillToPhoneNumber		= Company.PurchaseOrderBillToPhoneNumber

				if (PurchaseOrderBillToEmailAddress not entered)
					if (ShipToLocation.PurchaseOrderBillToEmailAddress entered)
						LocalPurchaseOrderBillToEmailAddress    = ShipToLocation.PurchaseOrderBillToEmailAddress
					else
						LocalPurchaseOrderBillToEmailAddress    = Company.PurchaseOrderBillToEmailAddress
			else
				LocalPurchaseOrderBillToName 					= PurchaseOrderBillToName
				LocalPurchaseOrderBillToAddress					= PurchaseOrderBillToAddress
				LocalPurchaseOrderBillToContact 				= PurchaseOrderBillToContact
				LocalPurchaseOrderBillToPhoneNumber 			= PurchaseOrderBillToPhoneNumber
				LocalPurchaseOrderBillToEmailAddress			= PurchaseOrderBillToEmailAddress


		UpdatePurchaseOrderHeader 

			if (FromRequisitions)
				if (PurchaseOrderBillToName 	entered
				and PurchaseOrderBillToAddress 	entered
				and PurchaseOrderBillToName 	not = LocalPurchaseOrder.PurchaseOrderBillToName
				and PurchaseOrderBillToAddress 	not = LocalPurchaseOrder.PurchaseOrderBillToAddress)
					LocalChangeBillTo = true

				if (ProcessLevel entered
				and ProcessLevel not = LocalPurchaseOrder.ProcessLevel)
					LocalChangeProcessLevel = true

				if (LocalChangeBillTo
				or  LocalChangeProcessLevel)
					invoke UpdatePurchaseOrderFromInterface LocalPurchaseOrder
						if (LocalChangeBillTo)
							invoked.PurchaseOrderBillToName 		= PurchaseOrderBillToName
							invoked.PurchaseOrderBillToAddress		= PurchaseOrderBillToAddress
							invoked.PurchaseOrderBillToContact 		= PurchaseOrderBillToContact
							invoked.PurchaseOrderBillToPhoneNumber 	= PurchaseOrderBillToPhoneNumber
							invoked.PurchaseOrderBillToEmailAddress = PurchaseOrderBillToEmailAddress
						if (LocalChangeProcessLevel)
							invoked.ProcessLevel					= ProcessLevel

		CreatePurchaseOrderLine	
			if (not FromOrderEntry
			and LocalCombineInterfaces)
				if (RequisitionLineRel.DistributionBy.ByPercent)
					ConvertToQuantityDistribution = true		
			invoke Unreleased.Create PurchaseOrderLine
				assign result to LocalSetPurchaseOrderLine
				resume on error
					LocalTransactionErrorMessage 		= error message
					LocalSetErrorReceived				= true

				fill in fields from this instance
				invoked.PurchaseOrder				  	= LocalPurchaseOrder
				if (LocalDefaultDeliveryDate entered)
					invoked.EarlyDeliveryDate			= LocalDefaultDeliveryDate
				else
				if (RequestedDeliveryDate entered)
					if (RequestedDeliveryDate < current corporate date)
						initialize invoked.EarlyDeliveryDate
					else
						invoked.EarlyDeliveryDate       = RequestedDeliveryDate

				invoked.LateDeliveryDate				= LateDeliveryDate
				invoked.EnteredBuyUOM				 	= EnteredUOM
				invoked.EnteredBuyUOMMultiplier		 	= EnteredUOMMultiplier
				invoked.E2GCompCode						= E2GCompCode

				if (FromRequisitions) 
					if  (PurchaseOrderInterface.RequestingLocation.Stockless
					and (not LocalCombineInterfaces   
					or   LocalMatchingStockless))     
						if (Contract.Stockless
						and ItemType.Inventoried)
							invoked.ItemType = ItemType.NonStock
						invoked.TransientStocklessRequestingLocation = true

					if (HasRequisitionLineAddOnCharges)
						invoked.TransientBypassAOCCreation 	= true
					if (not IsInventoried)
						invoked.BypassDistributionCreation  = true
						if (ConvertToQuantityDistribution)
							invoked.DistributionBy			= DistributionBy.ByQuantity
						else
							invoked.DistributionBy			= RequisitionLineRel.DistributionBy
					if (RequisitionLineRel.UNSPSCCode entered)
						invoked.UNSPSCCode					= RequisitionLineRel.UNSPSCCode
					if (RequisitionRel.ForCapitatedProcedure)
						invoked.CapitatedProcedureLine      = RequisitionLineRel.CapitatedProcedureLine 
						invoked.CapitatedComponentGroup     = RequisitionLineRel.CapitatedComponentGroup
						invoked.CapitatedProcedureLevel     = RequisitionLineRel.CapitatedProcedureLevel
				else
				if (FromOrderEntry
				or  HasProcurementTemplateLineDistribution)
					invoked.BypassDistributionCreation		= true

				LocalEnteredUnitCost = EnteredUnitCost
				if 	(((CostCode.Entered or CostCode.Punchout)
				or   (Contract entered and ItemType.Service and ServiceCode.Amount))
				and  (not FromRequisitions or Contract = RequisitionLineRel.Contract))
					invoked.TransientBypassCostDefaulting			= true
				else
					invoked.LocalUnitCostFromInterface				= LocalEnteredUnitCost 
					initialize LocalEnteredUnitCost

					invoked.LocalCostCodeFromInterface				= CostCode
					initialize invoked.CostCode

					invoked.LocalOperatingCompanyFromInterface		= PurchaseOrderInterface.OperatingCompany
					invoked.LocalRequestingLocationFromInterface	= PurchaseOrderInterface.RequestingLocation

				invoked.FromInterfaceUpdate				= true
				invoked.BypassHeaderAmountUpdate		= LocalBypassHeaderAmountUpdate

				invoked.SpecialHandlingCode				= RequisitionLineRel.SpecialHandlingCode
				invoked.SpecialHandlingInstructions		= RequisitionLineRel.SpecialHandlingInstructions
				invoked.HandlingTimeInMinutes			= RequisitionLineRel.HandlingTimeInMinutes
				if (TransactionCurrencyCode != LocalPurchaseOrder.Currency)
					initialize LocalCurrencyExchange
		   			LocalFinanceEnterpriseGroup			= LocalPurchaseOrder.Company.ProcurementGroup.FinanceEnterpriseGroup
					LocalExchangeDate					= current corporate date
					LocalFromCurrency					= TransactionCurrencyCode
					LocalCurrencyTable                  = LocalPurchaseOrder.CurrencyTable
					LocalToCurrency						= LocalPurchaseOrder.Currency
					LocalTransactionAmount				= LocalEnteredUnitCost
					LocalConversionRate					= LocalCurrencyExchange.OutputCurrencyRate


					if (CurrencyRelationshipRel.MultDiv.Divide)
						invoked.VendorBuyUnitCost		= (LocalEnteredUnitCost / LocalConversionRate)
					else
						invoked.VendorBuyUnitCost		= (LocalEnteredUnitCost * LocalConversionRate)
				else
					invoked.VendorBuyUnitCost			= LocalEnteredUnitCost
				initialize invoked.EnteredUnitCost
				if (ItemType.Special or ItemType.Service)
					invoked.EnteredBuyUOM			  	= EnteredUOM
					invoked.EnteredBuyUOMMultiplier	  	= 1
				if (RequisitionLineRel.PatientProcedure exists)
					invoked.PatientProcedure 			= RequisitionLineRel.PatientProcedure
				




				invoked.TransientBypassSubstitution = DerivedBypassSubstitution

			LocalPurchaseOrderLine = LocalSetPurchaseOrderLine.PurchaseOrderLine

		ProcessPurchaseOrderInterface 
			if (not FromOrderEntry
			and LocalCombineInterfaces)
				if (SameItemInPurchaseOrderLineRel exists)
					invoke Update SameItemInPurchaseOrderLineRel		
						if (LocalMatchingStockless
						and PurchaseOrderInterface.RequestingLocation.Stockless)
							invoked.TransientStocklessRequestingLocation 	= true
						invoked.BypassQuantityFromSource					= true
						invoked.Quantity									+= Quantity
						if (not IsInventoried)
							invoked.BypassDistributionCreation  			= true
						invoked.TransientUpdateFromPOInterface				= true
					LocalSameItemUpdated = true
					LocalPurchaseOrderLine = first SameItemInPurchaseOrderLineRel.PurchaseOrderLine


			if (not LocalSameItemUpdated)
				include CreatePurchaseOrderLine

			if (not LocalSetErrorReceived)
				include CreateRelatedBusinessClasses


		CreateRelatedBusinessClasses




				invoke SystemCreate PurchaseOrderLineSource
					assign result to LocalSetPurchaseOrderLineSource
					fill in fields from this instance
					invoked.PurchaseOrder									= LocalPurchaseOrder
					invoked.PurchaseOrderLine 								= LocalPurchaseOrderLine
					invoked.PurchaseOrderLineSource.SourceDocumentOrigin	= PurchaseOrderInterface.SourceDocumentOrigin
					invoked.PurchaseOrderLineSource.OperatingCompany		= PurchaseOrderInterface.OperatingCompany
					invoked.PurchaseOrderLineSource.SourceDocumentNumeric	= PurchaseOrderInterface.SourceDocumentNumeric
					invoked.PurchaseOrderLineSource.SourceDocumentAlpha		= PurchaseOrderInterface.SourceDocumentAlpha
					invoked.PurchaseOrderLineSource.SourceDocumentLineNumber= PurchaseOrderInterface.LineNumber
					invoked.RequestingLocation								= PurchaseOrderInterface.RequestingLocation
				LocalPurchaseOrderLineSource = LocalSetPurchaseOrderLineSource.PurchaseOrderLineSource


				include CreateOrUpdatePurchaseOrderLineDistribution

				if (FromRequisitions)

					if  (IsInventoried
					and (Company != PurchaseOrderInterface.OperatingCompany
					or 	 PurchaseOrderInterface.RequestingLocation != ShipToLocation))
						invoke CreateWarehouseDemand RequisitionLineRel
							if (VendorItem.VendorBuyUOM entered
							and EnteredUOM != VendorItem.VendorBuyUOM)
								initialize UOMCalculation
								UOMCalculation.InputUOM			= VendorItem.VendorBuyUOM
								UOMCalculation.InputToUOM		= EnteredUOM
								UOMCalculation.InputQuantity	= Quantity
								UOMCalculation.Method			= UOMCalculation.Method.ConvertToAlternate
								invoked.PrmQuantity				= UOMCalculation.OutputQuantity
							else
								invoked.PrmQuantity				= Quantity


					if (HasMiscellaneousRequisitionAddOnCharges) 
						for each MiscellaneousRequisitionAddOnChargesRel


							if (instance count of PurchaseOrderRequesterLineSourceRel = 1)
								invoke CreatePurchaseOrderLineAddOnCharge PurchaseOrderAndLineAddOnCharge
									resume on error
										LocalTransactionErrorMessage 		= error message
										LocalOtherErrorReceived				= true
									fill in fields from each
										except invoked.TotalAddOnChargeAmount
										except invoked.EnteredUnitCost
										except invoked.AddOnChargePercent
									invoked.Company 												= Company
				 					invoked.PurchaseOrder 											= LocalPurchaseOrder
									invoked.AddOnCharge												= each.AddOnCharge
									invoked.ShipToLocation											= each.Location
									invoked.AddOnChargeOrigin										= PurchaseOrderAndLineAddOnCharge.AddOnChargeOrigin.Requisition
									invoked.FromRequisition                                         = each.Requisition
									if (each.AddOnChargeEntryMethod.TotalAmount)
										invoked.TotalAddOnChargeAmount								= each.TotalAddOnChargeAmount
									else
										if (each.AddOnChargeEntryMethod.UnitCost)
											invoked.EnteredUnitCost									= each.EnteredUnitCost
										else
											if (each.AddOnChargeEntryMethod.RatePercentage)
												invoked.AddOnChargePercent							= each.AddOnChargePercent


								if (InterfaceRunID entered and LocalOtherErrorReceived)
									LocalTransactionErrorMessage = MiscellaneousAOCErrorMessage + LocalTransactionErrorMessage
									include CreateErrorPOInterfaceResult


					if (HasRequisitionLineAddOnCharges)
						for each RequisitionLineAddOnChargesRel
							invoke CreatePurchaseOrderLineAddOnCharge PurchaseOrderAndLineAddOnCharge
								resume on error
									LocalTransactionErrorMessage 		= error message
									LocalOtherErrorReceived				= true
								fill in fields from each
									except invoked.TotalAddOnChargeAmount
									except invoked.EnteredUnitCost
									except invoked.AddOnChargePercent
									except invoked.Quantity
								invoked.Company 												= Company
			 					invoked.PurchaseOrder 											= LocalPurchaseOrder
			 					invoked.PurchaseOrderLine 										= LocalPurchaseOrderLine
								invoked.AddOnCharge												= each.AddOnCharge
								invoked.ShipToLocation											= each.Location
								invoked.AddOnChargeOrigin										= PurchaseOrderAndLineAddOnCharge.AddOnChargeOrigin.Requisition
								invoked.FromRequisition                                         = each.Requisition
								if (each.AddOnChargeEntryMethod.TotalAmount)
									invoked.TotalAddOnChargeAmount								= each.TotalAddOnChargeAmount
								else
									if (each.AddOnChargeEntryMethod.UnitCost)
										invoked.EnteredUnitCost									= each.EnteredUnitCost
									else
										if (each.AddOnChargeEntryMethod.RatePercentage)
											invoked.AddOnChargePercent							= each.AddOnChargePercent


							if (InterfaceRunID entered and LocalOtherErrorReceived)
								LocalTransactionErrorMessage = PurchaseOrderLineAOCErrorMessage + LocalTransactionErrorMessage
								include CreateErrorPOInterfaceResult


					if (LocalSetLastOrigin   not = PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
					or  LocalSetLastDocument not = PurchaseOrderInterface.SourceDocumentNumeric)
						if (HasRequisitionComment)

							for each RequisitionCommentRel
								if (not each.CommentType.PrintOnPickList
								and not each.CommentType.PrintOnRequisition
								and not each.CommentType.DisplayOnly)
									invoke SystemCreate PurchaseOrderComment
										fill in fields from each
										invoked.Company 			= Company
										invoked.PurchaseOrder		= LocalPurchaseOrder



					if (HasRequisitionLineComment)
						for each RequisitionLineCommentRel
							if (not each.CommentType.DisplayOnly)
								invoke SystemCreateLine PurchaseOrderLineComment
									fill in fields from each
										except invoked.Attachment.FSMAttachmentIDM
									invoked.Company				= Company
									invoked.PurchaseOrder		= LocalPurchaseOrder
									invoked.PurchaseOrderLine	= LocalPurchaseOrderLine
									invoked.Attachment.File		= each.Attachment.File
									invoked.Attachment.MimeType	= each.Attachment.MimeType
									invoked.Attachment.Title	= each.Attachment.Title

							if (each.CommentType.PrintOnDeliveryTicket)
								invoke SystemCreate PurchaseOrderLineSourceComment
									fill in fields from each
									invoked.Company					= Company
									invoked.PurchaseOrder			= LocalPurchaseOrder
									invoked.PurchaseOrderLine		= LocalPurchaseOrderLine
									invoked.PurchaseOrderLineSource	= LocalPurchaseOrderLineSource
				else
	 			if (FromOrderEntry)

					if (PurchaseOrderAndLineAddOnChargeRel not exists)
						for each PurchaseOrderInterfaceAddOnChargeRel
							invoke CreatePurchaseOrderLineAddOnCharge PurchaseOrderAndLineAddOnCharge
								fill in fields from each
								invoked.Company 												= LocalPurchaseOrder.Company
								invoked.PurchaseOrder 											= LocalPurchaseOrder
								invoked.AddOnCharge												= each.PurchaseOrderInterfaceAddOnCharge.AddOnCharge
								invoked.TotalAddOnChargeAmount									= each.TotalAddOnChargeAmount

	 				if (HasCustomerOrderLineAddOnCharges)
						for each CustomerOrderLineAddOnChargesRel
							invoke CreatePurchaseOrderLineAddOnCharge PurchaseOrderAndLineAddOnCharge
								fill in fields from each
								invoked.Company 												= LocalPurchaseOrder.Company
			 					invoked.PurchaseOrder 											= LocalPurchaseOrder
			 					invoked.PurchaseOrderLine 										= LocalPurchaseOrderLine
								invoked.AddOnCharge												= each.AddOnCharge
								if (each.ChargeType.FlatAmount)
									invoked.TotalAddOnChargeAmount								= each.Cost
								else
									if (each.ChargeType.UnitPrice)
										invoked.EnteredUnitCost									= each.UnitCost
									else
										invoked.AddOnChargePercent								= each.CostPercent


							if (InterfaceRunID entered and LocalOtherErrorReceived)
								LocalTransactionErrorMessage = PurchaseOrderLineAOCErrorMessage + LocalTransactionErrorMessage
								include CreateErrorPOInterfaceResult



					if (LocalSetLastOrigin   not = PurchaseOrderInterface.SourceDocumentOrigin.OrderEntry
					or  LocalSetLastDocument not = PurchaseOrderInterface.SourceDocumentNumeric)
						if (HasCustomerOrderComment)
							for each StandardOrderCommentsRel
								if (each.PrintCode.BothDisplayAndPrint
								or  each.PrintCode.Print
								or  each.PrintCode.OrderEntryForms)
									invoke SystemCreate PurchaseOrderComment
										fill in fields from each
										invoked.PurchaseOrder		= LocalPurchaseOrder
										invoked.CommentType			= "P"
							for each LastStandardOrderCommentsRel
								if (each.PrintCode.BothDisplayAndPrint
								or  each.PrintCode.Print
								or  each.PrintCode.OrderEntryForms)
									invoke SystemCreate PurchaseOrderComment
										fill in fields from each
										invoked.PurchaseOrder		= LocalPurchaseOrder
										invoked.CommentType			= "T"


					if (HasCustomerOrderLineComment)

						for each OrderEntryOrderCommentsForLineRel
							if (each.PrintCode.BothDisplayAndPrint
							or  each.PrintCode.Print
							or  each.PrintCode.OrderEntryForms)
								invoke SystemCreateLine PurchaseOrderLineComment
									fill in fields from each
										except invoked.Attachment.FSMAttachmentIDM
									invoked.PurchaseOrder			= LocalPurchaseOrder
									invoked.PurchaseOrderLine		= LocalPurchaseOrderLine
									invoked.CommentType				= "P"
									invoked.Attachment.File			= each.Attachment.File
									invoked.Attachment.MimeType		= each.Attachment.MimeType
									invoked.Attachment.Title		= each.Attachment.Title


				if (HasPurchaseOrderInterfaceComment)
					for each PurchaseOrderInterface.PurchaseOrderInterfaceCommentRel
						invoke SystemCreateLine PurchaseOrderLineComment
							fill in fields from each
								except invoked.Attachment.FSMAttachmentIDM
							invoked.PurchaseOrder		= LocalPurchaseOrder
							invoked.PurchaseOrderLine	= LocalPurchaseOrderLine
							invoked.Attachment.File		= each.Attachment.File
							invoked.Attachment.MimeType	= each.Attachment.MimeType
							invoked.Attachment.Title	= each.Attachment.Title
						if (each.CommentType.PrintOnDeliveryTicket)
							invoke SystemCreate PurchaseOrderLineSourceComment
								fill in fields from each
								invoked.PurchaseOrder			= LocalPurchaseOrder
								invoked.PurchaseOrderLine		= LocalPurchaseOrderLine
								invoked.PurchaseOrderLineSource	= LocalPurchaseOrderLineSource

				LocalSetLastOrigin 				= PurchaseOrderInterface.SourceDocumentOrigin
				LocalSetLastDocument			= PurchaseOrderInterface.SourceDocumentNumeric


				if (Quantity < RemainingQuantity)
					RemainingQuantity -= Quantity
					Quantity = RemainingQuantity
					include CalculateLineTaxTotal

					if (InterfaceRunID entered)
						initialize InterfaceRunID				
						initialize SortBuyer						
						initialize SortRequestingLocation			
						initialize SortSourceDocument	
				else

					if (FromOrderEntry)
						LocalCustomerOrder = PurchaseOrderInterface.SourceDocumentNumeric
						invoke Delete
						if (InterfacedCustomerOrderRel.IsFullyInterfaced)
							invoke Delete PurchaseOrderInterfaceAddOnChargeRel
					else
						invoke Delete

		CreateOrUpdatePurchaseOrderLineDistribution 
			if (IsNonInventory) 
				if (FromRequisitions)
					if (HasRequisitionLineDistributions)

						for each RequisitionLineDistributionsRel
							LocalDistributionAccount = each.DistributionAccount
							LocalCreatedByFES		 = each.CreatedByFES
							if (SameAccountInPurchaseOrderLineDistributionsRel exists)
								invoke UpdateQuantityFromInterface first SameAccountInPurchaseOrderLineDistributionsRel
									if (SameAccountInPurchaseOrderLineDistributionsRel.PurchaseOrderLine.DistributionBy.ByQuantity)
										invoked.PrmDistributionQuantity     += each.DerivedDistributionQuantity * (Quantity / each.RequisitionLine.Quantity)	
									else
									if (SameAccountInPurchaseOrderLineDistributionsRel.PurchaseOrderLine.DistributionBy.ByAmount)
										invoked.PrmDistributionAmount		+= each.DistributionAmount * (Quantity / each.RequisitionLine.Quantity)				
									else
										invoked.PrmDistributionPercent		= each.DistributionPercent
							else
								if (each.AddOnCharge not entered)
									if (LocalInvokedFromBatch)
										invoke CreateRestricted PurchaseOrderLineDistribution
											invoked.Company						= Company
											invoked.PurchaseOrder				= LocalPurchaseOrder
											invoked.PurchaseOrderLine 			= LocalPurchaseOrderLine
											invoked.DistributionAccount			= each.DistributionAccount
											invoked.AssetInformation            = each.AssetInformation
											invoked.TransientGeneralLedgerSystemCode = "RQ"
											invoked.TransientBypassCommittedContractValidation = true
											invoked.CreatedByFES				= each.CreatedByFES
											invoked.FESManuallyUpdated			= each.FESManuallyUpdated
											if (ConvertToQuantityDistribution
											or  each.DistributionByQuantity)
												invoked.DistributionQuantity	= each.DerivedDistributionQuantity * (Quantity / each.RequisitionLine.Quantity) 
											else
											if (each.DistributionByAmount)
												invoked.DistributionAmount 		= each.DistributionAmount * (Quantity / each.RequisitionLine.Quantity) 
											else
												invoked.DistributionPercent 	= each.DistributionPercent
									else
										invoke CreateRestricted PurchaseOrderLineDistribution
											resume on error
												LocalTransactionErrorMessage 	= error message
												LocalOtherErrorReceived			= true
											invoked.Company						= Company
											invoked.PurchaseOrder				= LocalPurchaseOrder
											invoked.PurchaseOrderLine 			= LocalPurchaseOrderLine
											invoked.DistributionAccount			= each.DistributionAccount
											invoked.AssetInformation            = each.AssetInformation
											invoked.TransientGeneralLedgerSystemCode = "RQ"
											invoked.TransientBypassCommittedContractValidation = true
											invoked.CreatedByFES				= each.CreatedByFES
											invoked.FESManuallyUpdated			= each.FESManuallyUpdated
											if (ConvertToQuantityDistribution
											or  each.DistributionByQuantity)
												invoked.DistributionQuantity	= each.DerivedDistributionQuantity * (Quantity / each.RequisitionLine.Quantity) 
											else
											if (each.DistributionByAmount)
												invoked.DistributionAmount 		= each.DistributionAmount * (Quantity / each.RequisitionLine.Quantity) 
											else
												invoked.DistributionPercent 	= each.DistributionPercent
									

									if (InterfaceRunID entered and LocalOtherErrorReceived)
										LocalTransactionErrorMessage = PurchaseOrderLineDistributionErrorMessage + LocalTransactionErrorMessage
										include CreateErrorPOInterfaceResult
				else
				if (FromOrderEntry)
					if (HasCustomerLineDistributions)
						if (LocalInvokedFromBatch)
							invoke CreateRestricted PurchaseOrderLineDistribution
								invoked.Company								= Company
								invoked.PurchaseOrder						= LocalPurchaseOrder
								invoked.PurchaseOrderLine 					= LocalPurchaseOrderLine
								invoked.DistributionAccount					= CustomerOrderLineRel.ExpenseAccount
								invoked.TransientGeneralLedgerSystemCode 	= "OE"
								invoked.TransientBypassCommittedContractValidation = true
						else
							invoke CreateRestricted PurchaseOrderLineDistribution
								resume on error
									LocalTransactionErrorMessage 			= error message
									LocalOtherErrorReceived					= true
								invoked.Company								= Company
								invoked.PurchaseOrder						= LocalPurchaseOrder
								invoked.PurchaseOrderLine 					= LocalPurchaseOrderLine
								invoked.DistributionAccount					= CustomerOrderLineRel.ExpenseAccount
								invoked.TransientGeneralLedgerSystemCode 	= "OE"
								invoked.TransientBypassCommittedContractValidation = true

					if (InterfaceRunID entered and LocalOtherErrorReceived)
						LocalTransactionErrorMessage = PurchaseOrderLineDistributionErrorMessage + LocalTransactionErrorMessage
						include CreateErrorPOInterfaceResult
				else
				if (HasProcurementTemplateLineDistribution)
					if (LocalInvokedFromBatch)
						invoke CreateRestricted PurchaseOrderLineDistribution
							invoked.Company									= Company
							invoked.PurchaseOrder							= LocalPurchaseOrder
							invoked.PurchaseOrderLine 						= LocalPurchaseOrderLine
							invoked.DistributionAccount						= ProcurementTemplateLinenRel.DistributionAccount
							invoked.TransientGeneralLedgerSystemCode 		= "PO"
							invoked.TransientBypassCommittedContractValidation = true
					else
						invoke CreateRestricted PurchaseOrderLineDistribution
								resume on error
									LocalTransactionErrorMessage 				= error message
									LocalOtherErrorReceived						= true
							invoked.Company									= Company
							invoked.PurchaseOrder							= LocalPurchaseOrder
							invoked.PurchaseOrderLine 						= LocalPurchaseOrderLine
							invoked.DistributionAccount						= ProcurementTemplateLinenRel.DistributionAccount
							invoked.TransientGeneralLedgerSystemCode 		= "PO"
							invoked.TransientBypassCommittedContractValidation = true

				if (InterfaceRunID entered and LocalOtherErrorReceived)
					LocalTransactionErrorMessage = PurchaseOrderLineDistributionErrorMessage + LocalTransactionErrorMessage
					include CreateErrorPOInterfaceResult


		CheckVendorAndPurchaseFromLocationFields 
			if (LocalPurchaseOrder.PurchaseFromLocationRel.LocationControl.CannotMixRequestingLocationsOnPO
			or 	LocalPurchaseOrder.PurchasingVendorRel.LocationControl.CannotMixRequestingLocationsOnPO)
				LocalSetCannotMixReqLoc 	= true
				LocalSetRequestingLocation 	= PurchaseOrderInterface.RequestingLocation
			if ((LocalPurchaseOrder.PurchaseFromLocationRel exists
			and  LocalPurchaseOrder.PurchaseFromLocationRel.MixContractsOnPurchaseOrder)
			or  (LocalPurchaseOrder.PurchaseFromLocationRel not exists
			and  LocalPurchaseOrder.PurchasingVendorRel.MixContractsOnPurchaseOrder))
				LocalSetMixContractsOnPurchaseOrder = true

		ValidateSelection 
			constraint (Quantity entered)
				"MustEnterQuantityForItem<Item>"
			if (not LocalAddToPurchaseOrder) 

				if (POCode entered
				and LocalPurchaseOrder.POCode entered
				and not LocalPOCodeOverride)
					if (LocalSetPOCode entered)
						constraint (POCode = LocalPurchaseOrder.POCode)
							"CheckPOCodeOverrideFlag,RecordsWithDifferentPOCodes.PurchaseOrder_\POCode<LocalPurchaseOrder.POCode>;_\Request_\POCode<POCode>"
					else
						constraint (POCode = LocalPurchaseOrder.POCode)
							"HeaderAndLinePOCodesDoNotMatch.PurchaseOrder_\POCode<LocalPOCode>;_\Request_\POCode<POCode>"
			else 
				if (POCode entered)
					if (LocalPurchaseOrder.POCode entered)
						constraint (POCode = LocalPurchaseOrder.POCode or LocalPOCodeOverride)
							"HeaderAndLinePOCodesDoNotMatch.PurchaseOrder_\POCode<LocalPOCode>;_\Request_\POCode<POCode>"
					else  
						constraint (LocalPOCodeOverride)
							"CheckPOCodeOverrideFlag,RecordsWithDifferentPOCodes.PurchaseOrder_\POCode<LocalPurchaseOrder.POCode>;_\Request_\POCode<POCode>"

			constraint (Dropship 		= LocalPurchaseOrder.Dropship
			and			DropshipName 	= LocalPurchaseOrder.DropshipName
			and 		DropshipAddress = LocalPurchaseOrder.DropshipAddress)
				"CannotAttachToPurchaseOrder,DropShipInformationDoNotMatch"		

			if (LocalPurchaseOrder.HasProcessLevel)
				constraint (ProcessLevel not entered
				or		   (ProcessLevel = LocalPurchaseOrder.ProcessLevel))
					"CannotAttachToPurchaseOrder,ProcessLevelsDoNotMatch.Purchase_\Order_\ProcessLevel<LocalPurchaseOrder.ProcessLevel>;_\Request_\ProcessLevel<ProcessLevel>"

			if (IsItem)
				if (HasItemLocationStockUOM)
					if (not LocationItemUOMRel.OKForBuying)
						constraint (DerivedOrderUOMRounding)					
							"<EnteredUOM>IsNotValidBuyUnitOfMeasureOnLocationForItem<Item>"  
				else
					constraint (ValidItemUOMRel.DefaultForBuying
					or 			ValidItemUOMRel.OKForBuying)  
						"<EnteredUOM>IsNotAValidBuyUOMForItem<Item>"

			if (CostCode.Blanket)
				constraint (Contract = LocalPurchaseOrder.BlanketOrStandingContract)
					"CannotCombineRecordsFromDifferentBlanketOrders"

			if (HasContract)
				if (LocalPurchaseOrder.BlanketOrStandingContract entered)
						constraint (Contract = LocalPurchaseOrder.BlanketOrStandingContract)
							"CannotEnterDifferentContractForBlanketOrStandingPurchaseOrder.PurchaseOrder_\Contract<LocalPurchaseOrder.BlanketOrStandingContract>;_\Request_\Contract<Contract>"

			if (LocalSetContract entered
			and Contract entered
			and not LocalSetMixContractsOnPurchaseOrder)
				constraint (Contract = LocalSetContract)
					"VendorDoesNotAllowDifferentContractsOnSamePurchaseOrder.PurchaseOrderLine_\Contract<LocalSetContract>;_\Request_\Contract<Contract>"

				invoke ValidateContract Contract
					invoked.EditDate		= current corporate date
					if (LocalPurchaseOrder.FromBlanket)
						invoked.Source      = 4 
					else
					if (LocalPurchaseOrder.FromStanding)
						invoked.Source      = 5 
					else
						invoked.Source      = 1 
					invoked.PrmVendor       = LocalPurchaseOrder.Vendor
					if (ContractHasVendorLocation)
						invoked.PrmVendorLocation = LocalPurchaseOrder.PurchaseFromLocation 
					if (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
					and PurchaseOrderInterface.RequestingLocation.Stockless)
						invoked.PrmStockless = true
					invoked.PrmSource = DerivedFormTitle

			if (LocalSetCannotMixReqLoc)
				constraint (LocalSetRequestingLocation = PurchaseOrderInterface.RequestingLocation)
					"VendorDoesNotAllowDifferentRequestingLocationsOnSamePurchaseOrder.PurchaseOrderLine_\RequestingLocation<LocalSetRequestingLocation>;_\Request_\RequestingLocation<PurchaseOrderInterface.RequestingLocation>"

			if (LocalAddToPurchaseOrder)
				if (LocalSetPunchoutId entered)
					constraint (PunchoutId entered)
						"CannotAddItem<Item>.PunchoutItemExistOnPurchaseOrder"

			if (LocalSetPunchoutId entered and PunchoutId entered)
				constraint (LocalSetVendor = Vendor)
					"CannotAdd.VendorMustBeTheSameWhenProcessingPunchoutItems.PurchaseOrderLine_\Vendor<LocalSetVendor>;_\Request_\Vendor<Vendor>"

			constraint (DeliveryMethod = LocalPurchaseOrder.DeliveryMethod)
				"CannotCombineRecordsWithDifferentDeliveryMethods"

			include ValidateTaxCode


		ValidateSelectionForCombine 
			constraint (not LocalPurchaseOrder.PurchaseFromLocationRel.LocationControl.CannotCombineRequisitions)
				"PurchasingVendorDoesNotAllowCombiningLines"
			constraint (not LocalPurchaseOrder.PurchasingVendorRel.LocationControl.CannotCombineRequisitions)
				"PurchasingVendorDoesNotAllowCombiningLines"
			constraint (!ItemType.Service)
				"CannotCombineServiceItems"

			constraint (RequisitionLineAddOnChargesRel not exist)
				"CannotCombineLinesWithLineAddOnCharges"
			LocalFirstRecord = true
			LocalSameStockless = true
			for each AllSelectedForCombineRel
				constraint (not IsCatchWeightItem)
						"CannotCombineCatchWeightItems"

				if (FromRequisitions)
					if (LocalFirstRecord)
						initialize LocalFirstRecord
						CompareDistributionBy = each.RequisitionLineRel.DistributionBy
						CompareStocklessRequestingLocation = each.RequisitionLineRel.RequestingLocation.Stockless
					else
						if (CompareDistributionBy != each.RequisitionLineRel.DistributionBy)
							ConvertToQuantityDistribution = true
						if (CompareStocklessRequestingLocation != each.RequisitionLineRel.RequestingLocation.Stockless)
							initialize LocalSameStockless

				if (FromOrderEntry)
					constraint (each.FromOrderEntry)
						"CannotCombineOrderEntryItemsWithNonOrderEntryItems"
				if (each.FromOrderEntry)
					constraint (FromOrderEntry)
						"CannotCombineOrderEntryItemsWithNonOrderEntryItems"

				if (LocalPurchaseOrder.PurchaseFromLocationRel.LocationControl.CannotMixRequestingLocationsOnPO
				or  LocalPurchaseOrder.PurchasingVendorRel.LocationControl.CannotMixRequestingLocationsOnPO)
					constraint(PurchaseOrderInterface.RequestingLocation = each.PurchaseOrderInterface.RequestingLocation)
						"PurchasingVendorDoesNotAllowCombiningLinesWithMixedRequestingLocations"

				constraint (TransactionCurrencyCode = each.TransactionCurrencyCode)
					"CannotCombineRecordsWithDifferentTransactionCurrencyCodes"

				constraint (POCode = each.POCode)
					"CannotCombineRecordsWithDifferentPOCodes"

				constraint (Company = each.Company)
					"CannotCombineLinesWithDifferentCompanies"

				constraint (PurchaseFromLocation = each.PurchaseFromLocation)
					"CannotCombineLinesWithDifferentPurchaseFromLocations"

				constraint (Buyer = each.Buyer)
					"CannotCombineLinesWithDifferentBuyers"

				constraint (CnCode = each.CnCode)
					"CannotCombineLinesWithDifferentBillCodes"		

				constraint (Item = each.Item)
					"CannotCombineLines;ItemsDoNotMatch"

				constraint (PurchaseOrderInterface.OperatingCompany = each.PurchaseOrderInterface.OperatingCompany)
					"CannotCombineLines;OperatingCompaniesDoNotMatch"

				constraint (EnteredUOM = each.EnteredUOM)
					"CannotCombineLines;EnteredUnitOfMeasuresDoNotMatch"

				constraint (VendorItem.VendorBuyUOM.UnitOfMeasure = each.VendorItem.VendorBuyUOM.UnitOfMeasure)
					"CannotCombineLines;EnteredVendorBuyUnitOfMeasuresDoNotMatch"

				constraint (EnteredUOMMultiplier = each.EnteredUOMMultiplier)
					"CannotCombineLines;EnteredUnitOfMeasureMultipliersDoNotMatch"

				constraint (ShipToLocation = each.ShipToLocation)
					"CannotCombineLines;ShipToLocationsDoNotMatch"

				constraint (DropshipName = each.DropshipName)
					"CannotCombineLines;DropshipNamesDoNotMatch"

				constraint (DropshipAddress = each.DropshipAddress)
					"CannotCombineLines;DropshipAddressesDoNotMatch"

				constraint (DropshipPhoneNumber = each.DropshipPhoneNumber)
					"CannotCombineLines;DropshipPhoneNumbersDoNotMatch"

				constraint (DropshipContact = each.DropshipContact)
					"CannotCombineLines;DropshipContactsDoNotMatch"

				constraint (Contract = each.Contract)
					"CannotCombineLines;ContractsDoNotMatch"

				constraint (ItemType = each.ItemType)
					"CannotCombineLines;ItemTypesDoNotMatch"

				constraint (Taxable = each.Taxable)
					"CannotCombineLines;TaxableFlagsDoNotMatch"

				constraint (TaxCode = each.TaxCode)
					"CannotCombineLines;TaxCodesDoNotMatch"

				constraint (MSDSRequired = each.MSDSRequired)
					"CannotCombineLines;M\S\D\SFlagsDoNotMatch"

				constraint (InspectionRequired = each.InspectionRequired)
					"CannotCombineLines;InspectionRequiredFlagsDoNotMatch"

				constraint (CertificationRequired = each.CertificationRequired)
					"CannotCombineLines;CertificationRequiredFlagsDoNotMatch"

				constraint (CostOption = each.CostOption)
					"CannotCombineLines;CostOptionsDoNotMatch"

				constraint (LateDeliveryDate = each.LateDeliveryDate)
					"CannotCombineLines;LateDeliveryDatesDoNotMatch"

				constraint (Description = each.Description)
					"CannotCombineLines;DescriptionsDoNotMatch"

				constraint (MajorPurchasingClass = each.MajorPurchasingClass)
					"CannotCombineLines;MajorPurchasingClassesDoNotMatch"

				constraint (MinorPurchasingClass = each.MinorPurchasingClass)
					"CannotCombineLines;MinorPurchasingClassesDoNotMatch"

				constraint (Manufacturer = each.Manufacturer)
					"CannotCombineLines;ManufacturersDoNotMatch"

				constraint (ManufacturerNumber = each.ManufacturerNumber)
					"CannotCombineLines;ManufacturerNumbersDoNotMatch"

				constraint (EnteredUnitCost = each.EnteredUnitCost)
					"CannotCombineLines;EnteredUnitCostsDoNotMatch"

				constraint (PunchoutId = each.PunchoutId)
					"CannotCombineLines;PunchoutIdsDoNotMatch"

				constraint (RequisitionInterfaceInformation = each.RequisitionInterfaceInformation)
					"CannotCombineLines;RequisitionInterfaceInformationDoesNotMatch"

				constraint (CommodityCode = each.CommodityCode)
					"CannotCombineLines;CommodityCodesDoNotMatch"

				constraint (GlobalLineType = each.GlobalLineType)
					"CannotCombineLines;GlobalLineTypesDoNotMatch"
					
				constraint (PatientProcedure.VisitNumber			= each.PatientProcedure.VisitNumber
				and	  		PatientProcedure.PatientID				= each.PatientProcedure.PatientID
				and	  		PatientProcedure.CaseNumber				= each.PatientProcedure.CaseNumber
				and	  		PatientProcedure.Procedure				= each.PatientProcedure.Procedure
				and	  		PatientProcedure.ProcedureModifier		= each.PatientProcedure.ProcedureModifier
				and	  		PatientProcedure.ProcedureDate			= each.PatientProcedure.ProcedureDate
				and	  		PatientProcedure.PhysicianName			= each.PatientProcedure.PhysicianName
				and	  		PatientProcedure.NurseCoordinator		= each.PatientProcedure.NurseCoordinator
		   		and	  		PatientProcedure.PatientLastName		= each.PatientProcedure.PatientLastName
				and	  		PatientProcedure.PatientFirstName		= each.PatientProcedure.PatientFirstName
				and	  		PatientProcedure.PatientMiddleName		= each.PatientProcedure.PatientMiddleName
				and	  		PatientProcedure.Birthdate				= each.PatientProcedure.Birthdate
				and	  		PatientProcedure.Gender					= each.PatientProcedure.Gender
				and	  		PatientProcedure.SocialSecurityNumber 	= each.PatientProcedure.SocialSecurityNumber
		   		and	  		PatientProcedure.SalesRepresentative 	= each.PatientProcedure.SalesRepresentative
				and	  		PatientProcedure.OrderNumber			= each.PatientProcedure.OrderNumber
				and	  		PatientProcedure.Requestor				= each.PatientProcedure.Requestor
		   		and	  		PatientProcedure.Lot					= each.PatientProcedure.Lot
				and	  		PatientProcedure.SerialNumber			= each.PatientProcedure.SerialNumber
				and	  		PatientProcedure.UserDefinedField1		= each.PatientProcedure.UserDefinedField1
				and	  		PatientProcedure.UserDefinedField2		= each.PatientProcedure.UserDefinedField2)
					"CannotCombineRecordsWithDifferentProcedureInformation"

				if ((LocalPurchaseOrder.PurchaseFromLocationRel exists
				and  not LocalPurchaseOrder.PurchaseFromLocationRel.MixContractsOnPurchaseOrder)
				or  (LocalPurchaseOrder.PurchaseFromLocationRel not exists
				and  not LocalPurchaseOrder.PurchasingVendorRel.MixContractsOnPurchaseOrder)
				and  Contract entered
				and  each.Contract entered)
					constraint (Contract = each.Contract)
						"VendorDoesNotAllowDifferentContractsOnSamePurchaseOrder"

				constraint (CustomerOrderLineRel.CustomerOrder = each.CustomerOrderLineRel.CustomerOrder)
					"CannotCombineLinesWithDifferentOrderNumbers"

				constraint (DeliveryMethod = each.DeliveryMethod)
					"CannotCombineLinesWithDifferentDeliveryMethods"


		CreateProcessedPOInterfaceResult 
			LocalSetProcessedCount +=1
			invoke Create POInterfaceResultDetail
				invoked.FinanceEnterpriseGroup				= PrmFinanceEnterpriseGroup
				invoked.Company								= PrmCompany
				invoked.POInterfaceResult					= PrmPOInterfaceResult
				invoked.SourceDocumentOrigin				= PurchaseOrderInterface.SourceDocumentOrigin
				invoked.SourceDocumentNumeric				= PurchaseOrderInterface.SourceDocumentNumeric
				invoked.SourceDocumentAlpha					= PurchaseOrderInterface.SourceDocumentAlpha
				invoked.OperatingCompany					= PurchaseOrderInterface.OperatingCompany
				invoked.RequestingLocation					= PurchaseOrderInterface.RequestingLocation
				invoked.LineNumber							= PurchaseOrderInterface.LineNumber
				invoked.Quantity							= Quantity
				invoked.DeliverTo							= DeliverTo
				invoked.PurchaseOrder						= LocalPurchaseOrder
				invoked.PurchaseOrderLine					= LocalPurchaseOrderLine
				invoked.Vendor								= Vendor
				invoked.PurchaseFromLocation				= PurchaseFromLocation
				invoked.Buyer								= SortBuyer
				if (LocalCreateNewPurchaseOrderLine)
					invoked.Dropship						= Dropship
					if (CostCode.Blanket)
						invoked.BlanketContract				= Contract
					invoked.Item							= Item
					invoked.ItemType						= ItemType
					invoked.ShipToLocation					= ShipToLocation
					invoked.OrderedQuantity					= Quantity
					invoked.EnteredUOM						= EnteredUOM
					invoked.EnteredUnitCost					= EnteredUnitCost
					invoked.Currency						= TransactionCurrencyCode
					invoked.VendorItem						= VendorItem
					invoked.LateDeliveryDate				= LateDeliveryDate
					invoked.EarlyDeliveryDate       		= LocalPurchaseOrderLine.EarlyDeliveryDate


		CreateRejectedPOInterfaceResult 
			LocalSetRejectedCount +=1
			invoke Create POInterfaceResultDetail
				invoked.FinanceEnterpriseGroup				= LocalSetPOInterfaceResult.FinanceEnterpriseGroup
				invoked.Company								= LocalSetPOInterfaceResult.Company
				invoked.POInterfaceResult					= LocalSetPOInterfaceResult
				invoked.SourceDocumentOrigin				= PurchaseOrderInterface.SourceDocumentOrigin
				invoked.SourceDocumentNumeric				= PurchaseOrderInterface.SourceDocumentNumeric
				invoked.SourceDocumentAlpha					= PurchaseOrderInterface.SourceDocumentAlpha
				invoked.OperatingCompany					= PurchaseOrderInterface.OperatingCompany
				invoked.RequestingLocation					= PurchaseOrderInterface.RequestingLocation
				invoked.LineNumber							= PurchaseOrderInterface.LineNumber
				invoked.Vendor								= Vendor
				invoked.PurchaseFromLocation				= PurchaseFromLocation
				invoked.Buyer								= SortBuyer
				invoked.Item								= Item
				invoked.RecordType							= POInterfaceResultDetail.RecordType.Rejected
				invoked.ErrorMessage						= LocalTransactionErrorMessage


			initialize InterfaceRunID
			initialize LocalSetErrorReceived

		CreateErrorPOInterfaceResult 
			invoke Create POInterfaceResultDetail
				invoked.FinanceEnterpriseGroup				= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup 
				invoked.Company								= Company
				invoked.POInterfaceResult					= LocalPOInterfaceResult
				invoked.RecordType							= POInterfaceResultDetail.RecordType.Error
				invoked.PurchaseOrder						= LocalSetPurchaseOrder.PurchaseOrder
				invoked.PurchaseOrderLine					= LocalPurchaseOrderLine
				invoked.ErrorMessage						= LocalTransactionErrorMessage
			initialize LocalOtherErrorReceived


		ProcessExitInterfaceSet 
			include ProcessPreviousPurchaseOrder

			invoke Update PrmPOInterfaceResult
				invoked.ProcessedCount			+= LocalSetProcessedCount
				invoked.RejectedCount			+= LocalSetRejectedCount
				invoked.PurchaseOrderCount		+= LocalSetPurchaseOrderCount


			invoke Update CompanySummaryPOInterfaceResultDetailRel
				invoked.ProcessedCount			+= LocalSetProcessedCount
				invoked.RejectedCount			+= LocalSetRejectedCount
				invoked.PurchaseOrderCount		+= LocalSetPurchaseOrderCount


		ProcessPreviousPurchaseOrder 
			if (LocalSetPurchaseOrder entered)


				LocalCompany 					= PrmCompany
				LocalFinanceEnterpriseGroup 	= PrmCompany.FinanceEnterpriseGroup
				LocalPOInterfaceResult 			= PrmPOInterfaceResult
				LocalPurchaseOrder 				= LocalSetPurchaseOrder.PurchaseOrder

				if (PurchaseOrderWithLineResultDetailRel exist)

					invoke FinishInterface LocalSetPurchaseOrder.PurchaseOrder
						invoked.PrmReleasePurchaseOrder = PrmPOInterfaceResult.ReleasePurchaseOrder
						invoked.PrmPOInterfaceResult	= PrmPOInterfaceResult
				else

					invoke Purge LocalSetPurchaseOrder.PurchaseOrder
				initialize LocalPurchaseOrderLine
				initialize LocalSetPurchaseOrder


		GetManufacturerInformation 
			if (DefaultVendorItemRelExists)
				Manufacturer.ManufacturerCode			= first DefaultVendorItemRel.Manufacturer.ManufacturerCode
				Manufacturer.ManufacturerDivision		= first DefaultVendorItemRel.Manufacturer.ManufacturerDivision
				ManufacturerNumber						= first DefaultVendorItemRel.ManufacturerNumber
			if (not HasManufacturerInformation)
				Manufacturer.ManufacturerCode			= Item.Manufacturer.ManufacturerCode
				Manufacturer.ManufacturerDivision		= Item.Manufacturer.ManufacturerDivision
				ManufacturerNumber						= Item.ManufacturerNumber
			if (not HasManufacturerInformation)
				LocalInventoryLocation					= ShipToLocation
				Manufacturer.ManufacturerCode			= ItemLocationUsingLocalLocationRel.Manufacturer.ManufacturerCode
				Manufacturer.ManufacturerDivision		= ItemLocationUsingLocalLocationRel.Manufacturer.ManufacturerDivision
				ManufacturerNumber						= ItemLocationUsingLocalLocationRel.ManufacturerNumber

		DoUnitCostDefaulting
			if (EnteredUnitCost not entered
			and Item entered)
				ProcurementCostDefault.InCompany					= Company
				ProcurementCostDefault.InItem						= Item
				ProcurementCostDefault.InQuantity					= Quantity
				ProcurementCostDefault.InItemType					= ItemType
				ProcurementCostDefault.InQuantityUOM				= EnteredUOM
				ProcurementCostDefault.InCostOption					= CostOption
				ProcurementCostDefault.InVendor						= Vendor
				ProcurementCostDefault.InVendorItem					= VendorItem
				ProcurementCostDefault.InLocation					= ShipToLocation
				ProcurementCostDefault.InProcurementGroup			= ProcurementGroup
				ProcurementCostDefault.InManufacturerCode			= Manufacturer.ManufacturerCode
				ProcurementCostDefault.InManufacturerDivision		= Manufacturer.ManufacturerDivision
				ProcurementCostDefault.InManufacturerNumber			= ManufacturerNumber
				ProcurementCostDefault.InUnitCost					= EnteredUnitCost
				ProcurementCostDefault.InContractGroup				= Contract.ContractGroup
				ProcurementCostDefault.InContract					= Contract
				ProcurementCostDefault.InContractLine				= ContractLine
				ProcurementCostDefault.InDate						= current corporate date
				ProcurementCostDefault.InPurchaseFromLocation		= PurchaseFromLocation
				Execute	= ProcurementCostDefault.DefaultUnitCost
				if (ProcurementCostDefault.InStockless
				and ProcurementCostDefault.OutputUnitCost not entered
				and not ProcurementCostDefault.OutputCostOption.NoCharge
				and not ProcurementCostDefault.OutputCostOption.VendorDetermined)
					ProcurementCostDefault.InStockless	= false
					Execute	= ProcurementCostDefault.DefaultUnitCost
				EnteredUnitCost		= ProcurementCostDefault.OutputUnitCost
				CostOption			= ProcurementCostDefault.OutputCostOption
				CostCode			= ProcurementCostDefault.OutputCostCode
				Contract			= ProcurementCostDefault.OutputContract
				ContractLine		= ProcurementCostDefault.OutputContractLine
				VendorItem			= ProcurementCostDefault.OutputVendorItem

		CalculateLineTaxTotal
			initialize CalculateTax
			initialize AccruedTaxAmount
			initialize InvoicedTaxAmount
			if (Taxable and TaxCode entered
			and not TaxEntityRel.ThirdParty.VertexOSeries
			and not TaxEntityRel.ThirdParty.Sabrix)
				CalculateTax.TaxEntity						= GeneralLedgerCompanyForCompanyRel.AccountingEntity
				if (PurchaseFromLocation.VendorLocation.TaxCode not entered)
					CalculateTax.FromTaxCode				= Vendor.TaxCode
				else
					CalculateTax.FromTaxCode				= PurchaseFromLocation.VendorLocation.TaxCode
				CalculateTax.TaxableAmount					= DerivedLineCost
				CalculateTax.TaxCode						= TaxCode
				CalculateTax.TaxDate						= DerivedTransactionDate
				CalculateTax.Function						= CalculateTax.Function.CalculateTax
				LocalExecuteCalculateTax					= CalculateTax.ExecuteCalculateTax
				for each CalculateTax.TaxTable.TaxTableOutput
					if (each.AccrualFlag = "A") 
						AccruedTaxAmount 					+= each.TaxAmount5DP
					else
						InvoicedTaxAmount 					+= each.TaxAmount5DP

		ValidateTaxCode
			if (Taxable
			and TaxCode entered
			and not TaxEntityRel.ThirdParty.VertexOSeries
			and not TaxEntityRel.ThirdParty.Sabrix)
				CalculateTax.TaxEntity                      = GeneralLedgerCompanyForCompanyRel.AccountingEntity
				CalculateTax.TaxCode                        = TaxCode
				CalculateTax.Function                       = CalculateTax.Function.Inquire
				LocalExecuteCalculateTax                    = CalculateTax.ExecuteCalculateTax
				constraint (CalculateTax.OutputErrorNumber not entered)
					"<CalculateTax.OutputErrorMessage>"

		CreatePOInterfaceResult 
			invoke Create POInterfaceResult
				assign result to LocalSetPOInterfaceResult
				invoked.FinanceEnterpriseGroup		= PrmPurchasingCompany.FinanceEnterpriseGroup
				invoked.Company						= PrmPurchasingCompany
				invoked.Actor						= actor
				invoked.RunDateStart				= current timestamp
				invoked.ProcurementGroup			= PrmPurchasingCompany.ProcurementGroup
				invoked.ProcessByProcurementGroup	= PrmProcessByProcurementGroup
				invoked.DefaultBuyer				= PrmDefaultBuyer
				invoked.IncludeAllCostOptions		= PrmIncludeAllCostOptions
				invoked.DefaultDeliveryDays			= PrmDefaultDeliveryDays
				invoked.ReleasePurchaseOrder		= PrmReleasePurchaseOrder
				invoked.CombineOnPOLine				= PrmCombineOnPOLine
				invoked.OneShipToPerPO				= PrmOneShipToPerPO
				invoked.MaximumPOLines				= PrmMaximumPOLines
				invoked.SystemCode					= PrmSystemCode
				invoked.VendorOption				= PrmVendorOption
				invoked.Vendor						= PrmVendorAndPurchaseFrom
				invoked.FilterBuyer					= PrmFilterBuyer
				invoked.BuyerOnPurchasingClasses	= PrmBuyerOnPurchasingClasses
				invoked.BuyerOnVendor				= PrmBuyerOnVendor
				invoked.BuyerOnLocation				= PrmBuyerOnLocation
				invoked.BuyerOnRequestingLocation	= PrmBuyerOnRequestingLocation
				invoked.FilterDeliveryDays			= PrmFilterDeliveryDays
				invoked.FilterFromPriority			= PrmFilterFromPriority
				invoked.FilterToPriority			= PrmFilterToPriority
				invoked.FilterLocation				= PrmFilterLocation
				invoked.FilterReportGroup			= PrmFilterReportGroup
				invoked.POCodeOption				= PrmPOCodeOption
				invoked.FilterPOCode				= PrmFilterPOCode
				invoked.FilterMajorPurchasingClass	= PrmFilterMajorPurchasingClass
				invoked.FilterMinorPurchasingClass	= PrmFilterMinorPurchasingClass
				invoked.FilterRequestingLocation	= PrmFilterRequestingLocation
				invoked.FilterItem					= PrmFilterItem
				invoked.FilterItemType				= PrmFilterItemType
				invoked.FilterManufacturer			= PrmFilterManufacturer
				invoked.FilterRequestingCompany		= PrmFilterRequestingCompany
				invoked.FilterRequisition			= PrmFilterRequisition
				invoked.FilterProcurementTemplate	= PrmFilterProcurementTemplate
				invoked.BillCodeOption				= PrmBillCodeOption
				invoked.FilterConsignCode			= PrmFilterBillCode
				invoked.FilterAccountingUnit		= PrmFilterAccountingUnit
				invoked.FilterActivity				= PrmFilterActivity
				invoked.FilterCostCode				= PrmFilterCostCode
				if (LocalEmptyInterface)
			   		invoked.Status					= POInterfaceResult.Status.Complete

		PurchaseOrderHeaderAndLineInterfacing 











			if (not LocalCreateNewPurchaseOrder)

				if  (LocalSetLocationControl.CannotMixRequestingLocationsOnPO) 
					if (LocalSetSourceCompany		not = PurchaseOrderInterface.OperatingCompany
					or  LocalSetRequestingLocation	not = PurchaseOrderInterface.RequestingLocation)
						LocalCreateNewPurchaseOrder = true
				else
				if  (LocalSetLocationControl.CannotCombineRequisitions) 	  
					if (LocalSetSourceCompany		not = PurchaseOrderInterface.OperatingCompany
					or  LocalSetSourceOrigin 	 	not = PurchaseOrderInterface.SourceDocumentOrigin
					or  LocalSetSourceNumeric	 	not = PurchaseOrderInterface.SourceDocumentNumeric) 
						LocalCreateNewPurchaseOrder = true

			if (not LocalCreateNewPurchaseOrder)

				if (LocalSetPurchaseOrder  not entered)
					LocalCreateNewPurchaseOrder = true
				else
				if (Vendor					not = LocalSetPurchaseOrder.PurchaseOrder.Vendor
				or	PurchaseFromLocation	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseFromLocation
				or	SortBuyer				not = LocalSetPurchaseOrder.PurchaseOrder.Buyer)
					LocalCreateNewPurchaseOrder = true
				else
				if ((PrmPOInterfaceResult.OneShipToPerPO and ShipToLocation		not = LocalSetPurchaseOrder.PurchaseOrder.ShipToLocation)
				or (POCode entered 					 	 and POCode				not = LocalSetPurchaseOrder.PurchaseOrder.POCode)
				or (ProcessLevel entered  				 and ProcessLevel 		not = LocalSetPurchaseOrder.PurchaseOrder.ProcessLevel)
				or (GlobalDocumentType entered			 and GlobalDocumentType	not = LocalSetPurchaseOrder.PurchaseOrder.GlobalDocumentType)
				or (CnCode entered						 and CnCode				not = LocalSetCnCode))
					LocalCreateNewPurchaseOrder = true
				else
				if (Contract entered and LocalSetContract entered
					and not MixContractsOnPurchaseOrder
					and ((LocalSetContract	not = Contract)
					or 	 (LocalSetTermsCode	not = Contract.TermsCode)))
					LocalCreateNewPurchaseOrder = true
				else
				if (PrmPOInterfaceResult.MaximumPOLines entered 	and LocalSetPurchaseOrder.PurchaseOrder.NumberOfLines not < PrmPOInterfaceResult.MaximumPOLines)
					LocalCreateNewPurchaseOrder = true
				else
					include GetBillToDetails
					if ((LocalPurchaseOrderBillToName 	 entered	and LocalPurchaseOrderBillToName	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToName)
					or  (LocalPurchaseOrderBillToContact entered	and LocalPurchaseOrderBillToContact	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToContact)
					or  (LocalPurchaseOrderBillToAddress entered
					and (LocalPurchaseOrderBillToAddress.DeliveryAddress.AddressLine1	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.DeliveryAddress.AddressLine1
					or   LocalPurchaseOrderBillToAddress.DeliveryAddress.AddressLine2	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.DeliveryAddress.AddressLine2
					or   LocalPurchaseOrderBillToAddress.DeliveryAddress.AddressLine3	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.DeliveryAddress.AddressLine3
					or   LocalPurchaseOrderBillToAddress.DeliveryAddress.AddressLine4	not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.DeliveryAddress.AddressLine4
					or   LocalPurchaseOrderBillToAddress.Municipality					not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.Municipality
					or   LocalPurchaseOrderBillToAddress.StateProvince 					not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.StateProvince
					or   LocalPurchaseOrderBillToAddress.PostalCode						not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.PostalCode
					or   LocalPurchaseOrderBillToAddress.County							not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.County
					or   LocalPurchaseOrderBillToAddress.Country						not = LocalSetPurchaseOrder.PurchaseOrder.PurchaseOrderBillToAddress.Country)))
						LocalCreateNewPurchaseOrder = true

			LocalDefaultDeliveryDate 		= current corporate date + PrmPOInterfaceResult.DefaultDeliveryDays as days
			initialize LocalSetErrorReceived

			if	(LocalCreateNewPurchaseOrder)

				include ProcessPreviousPurchaseOrder

				initialize LocalSetContract
				initialize LocalSetTermsCode
				initialize LocalSetCnCode
				initialize LocalSetItem
				initialize LocalSetLineHasAOC
				if (Contract entered)
					LocalSetContract			= Contract
					LocalSetTermsCode			= Contract.TermsCode
				if (CnCode entered)
					LocalSetCnCode				= CnCode
				LocalSetSourceOrigin			= PurchaseOrderInterface.SourceDocumentOrigin
				LocalSetSourceCompany			= PurchaseOrderInterface.OperatingCompany
				LocalSetSourceNumeric 			= PurchaseOrderInterface.SourceDocumentNumeric
				LocalDefaultDeliveryDate 		= current corporate date + PrmPOInterfaceResult.DefaultDeliveryDays as days

				include CreatePurchaseOrderHeaderForProcessPurchase
				LocalSetPurchaseOrderCount		+=1

			if (LocalHeaderErrorReceived)
				LocalTransactionErrorMessage 	= PurchaseOrderHeaderCreateErrorMessage + LocalTransactionErrorMessage
				include CreateRejectedPOInterfaceResult
			else

				LocalFinanceEnterpriseGroup = GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup 
				LocalCompany				= Company 
				LocalPOInterfaceResult		= PrmPOInterfaceResult
				LocalPurchaseOrder			= LocalSetPurchaseOrder.PurchaseOrder
				LocalPurchaseOrderLine		= LocalSetPurchaseOrderLine.PurchaseOrderLine





				if (PrmPOInterfaceResult.CombineOnPOLine
				and not IsCatchWeightItem)
					if (LocalSetItem			= Item
					and LocalSetSourceCompany	= PurchaseOrderInterface.OperatingCompany
					and PurchaseOrderLineItemRel exists)
						LocalCombineLines = true

						if (LocalSetLocationControl.CombineRequisitionsToPOLineByLocation) 
							if (LocalSetRequestingLocation	not = PurchaseOrderInterface.RequestingLocation)
								LocalCombineLines = false


						if (LocalCombineLines)
							if (LocalSetLineHasAOC				
							or  HasRequisitionLineAddOnCharges) 
								LocalCombineLines = false

						if (LocalCombineLines)
							if (LocalSetRequestingLocation.Stockless not = PurchaseOrderInterface.RequestingLocation.Stockless)
								LocalCombineLines = false
							else
								LocalMatchingStockless 		= true


				if (LocalCombineLines)

					invoke Update PurchaseOrderLineItemRel
						resume on error
							LocalTransactionErrorMessage 		= error message
							LocalSetErrorReceived				= true
						invoked.BypassQuantityFromSource		= true
						invoked.Quantity						+= Quantity
						invoked.BypassHeaderAmountUpdate		= true
						if (not IsInventoried)
							invoked.BypassDistributionCreation  = true

					if (LocalSetErrorReceived)
						LocalTransactionErrorMessage 			= PurchaseOrderLineUpdateErrorMessage + LocalTransactionErrorMessage

					else 
						LocalPurchaseOrderLine 					= PurchaseOrderLineItemRel.PurchaseOrderLine
						invoke Update POInterfaceResultDetailRel
							invoked.OrderedQuantity				+= Quantity

				if (not LocalCombineLines
				or  LocalSetErrorReceived) 

					initialize LocalSetErrorReceived
					LocalSetItem 					= Item
					LocalCombineInterfaces 			= PrmPOInterfaceResult.CombineOnPOLine	
					LocalSetLineHasAOC 				= HasRequisitionLineAddOnCharges
					LocalSetRequestingLocation		= PurchaseOrderInterface.RequestingLocation
					LocalBypassHeaderAmountUpdate 	= true
					include CreatePurchaseOrderLine
					LocalCreateNewPurchaseOrderLine = true

					if (LocalSetErrorReceived)
						LocalTransactionErrorMessage 			= PurchaseOrderLineCreateErrorMessage + LocalTransactionErrorMessage

				if (LocalSetErrorReceived)
					include CreateRejectedPOInterfaceResult
				else
				if (LocalPurchaseOrderLine entered)
					include CreateProcessedPOInterfaceResult
					include CreateRelatedBusinessClasses




























































	Field Rules
		Dropship
			default to ShipToLocation.DefaultDropshipPurchaseOrder

		DropshipName
			if (Dropship)
				if (ShipToLocation.DefaultDropshipPurchaseOrder)
					default to ShipToLocation.NameForPurchaseOrder
				constraint (DropshipName entered)
					"MustEnterNameToPerformDropship"

		DropshipAddress
			if (Dropship)
				if (ShipToLocation.DefaultDropshipPurchaseOrder)
					default to ShipToLocation.PostalAddressForPurchaseOrder
				constraint (DropshipAddress.DeliveryAddress.AddressLine1 entered)
					"MustEnterAddressToPerformDropship"

		RemainingQuantity
			default to Quantity

		ProcurementGroup
			force default to Company.ProcurementGroup

		Item
			if  (FromOrderEntry
			or  ((old ItemType.Inventoried or IsInventoried)
			and  FromRequisitions))
				cannot be changed
					"ItemCannotBeChanged"
			required

		GlobalLineType
			constraint (GlobalLineType.Active)
				"LineTypeIsNotActive"

		Vendor
			if (ItemType.Special
			and RequisitionRel.Requester.RequireVendorForSpecials
			and not SourcingEventWorksheet)
				required
					"RequesterSetup:VendorIsRequiredForSpecialTypeItems"
			if (ItemType.Service
			and RequisitionRel.Requester.RequireVendorForServices
			and not SourcingEventWorksheet)
				required
					"RequesterSetup:VendorIsRequiredForServiceTypeItems"
			if (PurchaseFromLocation entered)
				required
					"CannotEnterPurchaseFromLocationWithoutVendor"
			if (Vendor.VendorStatus entered)
				constraint(Vendor.VendorStatus != "D" or Vendor.VendorStatus != "I")
					"TheVendorIsInactive"

		PurchaseFromLocation
			default to Vendor.NormalPurchaseFromLocation	

		Buyer
			default to RequisitionRel.Buyer
			default to PurchaseFromLocationRel.Buyer
			default to PurchasingVendorRel.Buyer
			if (!IsAnyFilterValueEntered)
				FilterByPurchasingClasses 		= actor.agent(Employee).Buyer.FilterByPurchasingClasses
				FilterByVendors					= actor.agent(Employee).Buyer.FilterByVendors
				FilterByRequestingLocation		= actor.agent(Employee).Buyer.FilterByRequestingLocation
				FilterItemsWithNoVendor			= actor.agent(Employee).Buyer.FilterItemsWithNoVendor
				FilterItemsWithNoCost			= actor.agent(Employee).Buyer.FilterItemsWithNoCost
				ItemType						= actor.agent(Employee).Buyer.FilterItemType
				POCode							= actor.agent(Employee).Buyer.FilterPOCode
				Manufacturer					= actor.agent(Employee).Buyer.FilterManufacturer
				Contract						= actor.agent(Employee).Buyer.FilterContract

            if (action type.Create
            or (action type.Update
            and (Buyer changed
            or   PurchaseOrderInterface.RequestingLocation changed
            or   ShipToLocation changed
            or   Vendor changed
            or   PurchaseFromLocation changed
            or   MajorPurchasingClass changed
            or   MinorPurchasingClass changed)))
				initialize ValidateBuyer
				ValidateBuyer.InPurchasingCompany			= Company
				ValidateBuyer.InShipToLocation				= ShipToLocation
				ValidateBuyer.InVendor						= Vendor
				ValidateBuyer.InPurchaseFromLocation		= PurchaseFromLocation
				ValidateBuyer.InMajorPurchasingClass		= MajorPurchasingClass
				ValidateBuyer.InMinorPurchasingClass		= MinorPurchasingClass
				ValidateBuyer.InItemType					= ItemType
				ValidateBuyer.InRequestingLocation			= PurchaseOrderInterface.RequestingLocation
				constraint (ValidateBuyer.IsValidBuyer)
					"<ValidateBuyer.ErrorMessage>"



		RequestedDeliveryDate
			if (RequestedDeliveryDate changed)
				constraint (RequestedDeliveryDate >= current corporate date)
					"DeliveryDateCannotBePriorToCurrentDate"

	   	EnteredUOM 
			if (Item changed)
				if (FromRequisitions
				and ItemType.NonStock)
					if (HasItemLocationStockUOM)
						constraint (LocationItemUOMRel.OKForBuying)
							"<EnteredUOM>IsNotValidUnitOfMeasureOnLocationForThisItem<Item>"
					else
						constraint (ValidItemUOMRel.OKForBuying)
							"<EnteredUOM>IsNotValidBuyingUnitOfMeasureForThisItem<Item>"
			else
				if 	(old EnteredUOM entered
				and (IsInventoried
				or 	ItemType.NonStock))
					if (FromOrderEntry)
						constraint (ItemUOMRel.OKForBuying)
							"OrderLineChangedToInvalidBuyUnitOfMeasure"
					else
						cannot be changed
							"CannotChangeBuyUOMForInventoryOrNon-stockItems"

			if (ItemType.Service
			and ContractLineRel exists)
				cannot be changed
					"ServiceItemUOMCannotBeChangedIfTheItemIsOnAContract"

	   	Quantity
			if (FromOrderEntry)
				if (EnteredUOM not changed)
					cannot be changed
						"CannotChangeItem,OriginIsOrderEntry"	
				else
					initialize UOMCalculation
					UOMCalculation.InputUOM 		= old EnteredUOM
					UOMCalculation.InputToUOM		= EnteredUOM
					UOMCalculation.InputQuantity	= old Quantity
					UOMCalculation.Method			= UOMCalculation.Method.ConvertToAlternate
					constraint (Quantity = UOMCalculation.OutputQuantity)
						"CannotChangeItem,OriginIsOrderEntry"

			if (ServiceCode.Amount)
				constraint(Quantity = 1)
					"ServiceItemByAmount,QuantityMustBe1"

			if (not ReplenishmentWorksheet.No)
				required
					"ReorderQuantityIsRequired"
			else
				required

		Description
			initial value is Item.Description
			if (IsItem)
				force default to Item.Description
			else
				default to ContractLine.ItemDescription

			if (IsInventoried)
				cannot be changed
					"CannotChangeDescriptionForInventoriedTypeItem"

		ShipToLocation
			required
			if (FromOrderEntry)
				cannot be changed
					"CannotChangeLocation,OriginIsOrderEntry"

			if (ContractBlanketOrStanding)
				if (Contract.ContractParticipantsExist)
					constraint (ContractParticipantLocationsRel exists)
						"CannotAdd,LocationDoesNotParticipateInBlanketContract"


		VendorItem
			if (Company.CostOrVendorItemDefaultingOrder.VendorItemBeforeCost)
				default to DefaultVendorItemRel.VendorItem

		EnteredUnitCost 
			if (Item changed
			and EnteredUnitCost not entered)
				include DoCostDefaulting
			
			if (not LocalForCostDefault)
				if (not ItemType.Service
				and old EnteredUnitCost entered
				and EnteredUnitCost changed)
					constraint (HasBuyer)
						"MustEnterBuyerToChangeUnitCost"		

					if (IsInvalidForOverride)
						cannot be changed
							"BuyerNotAuthorizedToOverrideCost"		

				if (EnteredUnitCost changed)
					constraint (Buyer.OverrideLastPOLastCost
					or 			not LastCostOrPO)
						"BuyerNotAuthorizedToChangeUnitCost"

					constraint (Buyer.OverrideSourcingCost
					or 			not CostCode.StrategicSourcing)
						"BuyerNotAuthorizedToChangeUnitCost"

					constraint (Buyer.OverrideContractCost
					or			not (ContractOrBlanketOrCatalogQuoteOrStanding
					or               TierParticipant))
						"BuyerNotAuthorizedToChangeUnitCost"

					if (ContractOrBlanketOrCatalogQuoteOrStanding or TierParticipant)
						if (Contract entered and ServiceCode.Amount)
							if (ContractLine.BaseCost entered)
								constraint (EnteredUnitCost <= ContractLine.BaseCost)
									"UnitCostForServiceItem<Item>MustNotExceedContractLineBaseCost"
						else
							CostCode = CostCode.Entered
							initialize Contract
							initialize ContractLine
							initialize Manufacturer
							initialize ManufacturerNumber

			if  (action type.Create
			or	 TaxCode changed
			or   Quantity changed
			or   EnteredUnitCost changed)
				include CalculateLineTaxTotal

		Manufacturer
			if (IsItem)
				if (VendorItem exists)
					if (VendorItem.Manufacturer entered)
						force default to VendorItem.Manufacturer
					
					if (VendorItem.ManufacturerNumber entered)
						force default ManufacturerNumber to VendorItem.ManufacturerNumber
				else
				if  (ItemLocationRel exists
				and (ItemLocationRel.Manufacturer entered
				or   ItemLocationRel.ManufacturerNumber entered)) 
					default to ItemLocationRel.Manufacturer
					default ManufacturerNumber to ItemLocationRel.ManufacturerNumber
				else
				if  (Item exists
				and (Item.Manufacturer entered
				or   Item.ManufacturerNumber entered))
					default to Item.Manufacturer
					default ManufacturerNumber to Item.ManufacturerNumber
				else
				if  (ItemGTIN entered
				and (ItemGTIN.Manufacturer entered
				or   ItemGTIN.ManufacturerNumber entered))
					default to ItemGTIN.Manufacturer
					default ManufacturerNumber to ItemGTIN.ManufacturerNumber
				
			default to ContractLine.Manufacturer
			default ManufacturerNumber to ContractLine.ManufacturerNumber   

		OverrideCost
			if (OverrideCost changed)

				if (VendorItem exists

				and EnteredUOM != VendorItem.VendorPriceUOM.UnitOfMeasure
				and IsItem)



					initialize UOMCalculation
					UOMCalculation.InputUOM 		= EnteredUOM
					UOMCalculation.InputToUOM		= VendorItem.VendorPriceUOM.UnitOfMeasure
					UOMCalculation.InputUnitCost	= OverrideCost
					UOMCalculation.Method			= UOMCalculation.Method.ConvertToAlternate
					if (UOMCalculation.OutputUnitCost != EnteredUnitCost
					and UOMCalculation.OutputUnitCost != 0)
						constraint (HasBuyer)
							"MustEnterBuyerToChangeUnitCost"

					if (not LocalForCostDefault
					and IsInvalidForOverride)
						cannot be changed
							"BuyerNotAuthorizedToOverrideCost"		

		IsSelected
			if(ReplenishmentWorksheet.YesSelected)
				IsSelected	= true

		CostCode
			if ((old Vendor entered and Vendor changed)
			or 	(old EnteredUnitCost entered and EnteredUnitCost changed)
			or 	(old ShipToLocation entered and ShipToLocation changed)
			or 	(old PurchaseFromLocation entered and PurchaseFromLocation changed)
			or 	(old PurchaseOrderInterface.RequestingLocation entered and PurchaseOrderInterface.RequestingLocation changed))
				if (not LocalForCostDefault)
					force default to CostCode.Entered
				if (Buyer.OverrideContractCost
				and Buyer.OverrideLastPOLastCost)
					OverrideCost = true
				else
					OverrideCost = false
			else
			if (Contract changed)
				if (not LocalForCostDefault)
					force default to CostCode.Entered
				if (Buyer.OverrideContractCost
				and Buyer.OverrideLastPOLastCost)
					OverrideCost = true
				else
					OverrideCost = false

		ItemType
			if (Item exists)
				if (ItemLocationRel exists)
					if (ItemLocationRel.InventoryTracked)
						default to ItemType.Inventoried
					else
						default to ItemType.NonStock
						constraint (!ItemType.Inventoried)
							"ItemTypeCannotBeInventoried;Item<Item>NotInventoryTracked"
				else
					default to ItemType.NonStock
					constraint (!ItemType.Inventoried)
						"ItemTypeCannotBeInventoried;ItemLocationDoesNotExistForItem<Item>"
			else
				default to ItemType.Special

		ServiceCode
			constraint (ItemType.Service)
				"ServiceCodeCanOnlyBeEnteredForServiceTypeItems"
			if (ItemType.Service)
				default to ServiceCode.Quantity
				required

		CostOption
			default to CostOption.CostRequired

		POCode
			default to RequisitionLineRel.POCode
			if (Company.POCodeDefaultMethod.InventoryLocation)
				default to ShipToLocation.POCode
			else
			if (Company.POCodeDefaultMethod.RequestingLocation)
				default to RequestingLocationRel.POCode
			else
			if (Company.POCodeDefaultMethod.VendorOrVendorLocation)
				default to PurchaseFromLocationRel.POCode
				default to PurchasingVendorRel.POCode
			else
			if (Company.POCodeDefaultMethod.BuyerGroup)
				default to Buyer.BuyerGroup.POCode
			else
			if (Company.POCodeDefaultMethod.System)
				if (FromOrderEntry)
					default to Company.CustomerOrderDefaultPOCode
				else
				if (FromRequisitions)
					default to Company.RequisitionsDefaultPOCode
				else
				if (PurchaseOrderInterface.SourceDocumentOrigin.InventoryControl)
					default to Company.InventoryControlDefaultPOCode
				else
				if (PurchaseOrderInterface.SourceDocumentOrigin.PurchaseOrder)
					default to Company.PurchaseOrderDefaultPOCode

		CnCode
			default to POCode.ConsignCode

		Contract
			if  (!ItemType.Service
			and (Contract entered
			and not Contract.AllowReferenceOfItemsNotOnContract))
				if (Item entered)
					constraint (RelatedItemOnContractLineRel exists)
						"Item<Item>IsNotOnReferencedContract"
				else
					if (VendorItem entered)
						constraint (RelatedVendorItemOnContractLineRel exists)
							"VendorItemIsNotOnReferencedContract"

			invoke ValidateContract Contract
				invoked.EditDate		= current corporate date
				if (CostCode.Blanket)
					invoked.Source      = 4 
				else
				if (CostCode.Standing)
					invoked.Source      = 5 
				else
					invoked.Source      = 1 
				invoked.PrmVendor       = Vendor
				if (ContractHasVendorLocation)
					invoked.PrmVendorLocation = PurchaseFromLocation
				if (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
				and PurchaseOrderInterface.RequestingLocation.Stockless)
					invoked.PrmStockless = true
				invoked.PrmSource = DerivedFormTitle

		ContractLine
			if (Contract changed and Contract not entered)
				initialize ContractLine

			if (ItemType.Service
			and Contract entered
			and not Contract.AllowReferenceOfItemsNotOnContract)
				required
					"ContractLineIsRequiredForServiceItemOnContract"
					
				constraint (Item = ContractLine.ItemNumber)
					"Item<Item>DoesNotMatchItemOnContract<Contract>Line<ContractLine>"

				constraint (not ContractLine.OnHold)
					"ContractLineOnHold;CannotUse"

				constraint (not ContractLine.ErrorsExist)
					"CannotEnterAServiceLineThatHasErrors"

				constraint (not ContractLine.ContractLineState.Closed)
					"CannotEnterAContractLineThatIsClosed"

				constraint (ContractLine.CanUseForCostDefaulting)
					"MustEnterAContractLineThatCanBeUsedForCostDefaulting"

				constraint (ContractLine.ForServiceCostDefaulting)
					"ContractLineIsNotAServiceItemType"
					
		TransientPurchaseOrderDate
			default to current corporate date

		TaxCode
			if (Taxable
			and	action type.Update
			and not TaxEntityRel.ThirdParty.VertexOSeries
			and not TaxEntityRel.ThirdParty.Sabrix)
				CalculateTax.TaxEntity                      = GeneralLedgerCompanyForCompanyRel.AccountingEntity
				CalculateTax.TaxCode                        = TaxCode
				CalculateTax.Function                       = CalculateTax.Function.Inquire
				LocalExecuteCalculateTax                    = CalculateTax.ExecuteCalculateTax
				constraint (CalculateTax.OutputErrorNumber not entered)
					"<CalculateTax.OutputErrorMessage>"

		HSNSACCode
			if (IsHSNSACCodeEnabled)
				default to RequisitionLineRel.HSNSACCode
				required
					"HSN_/SACCodeIsRequired"
			else
				cannot be entered
					"CannotEnter,HSN_/SACCodeFlagIsNotSetAtGlobalLedgerCompany"
			if (IsSelected)
				cannot be changed
					"PurchaseOrderInterfaceIsSelectedForPurchaseOrderCreation;CannotChangeHSN_/SACCode"

	Create Rules
		if (CreateDate not entered)
			CreateDate = current corporate date

	Actions
		PopulateBlankItem is a Set Action
			restricted
			Parameters
				PrmCompany		is a PurchasingCompany
			Instance Selection
				where (Company = PrmCompany
				and	  (ItemType.Service or ItemType.Special)
				and	   Item not entered)
			Action Rules
				Instance Rules
					if (ItemType.Special
					and VendorItem entered)
						Item = VendorItem
					else
						Item = Description

		Create is a Create Action
			restricted

		Delete is a Delete Action
			restricted

		Cancel is an Instance Action
			Parameters
				PrmCancelQuantity			is an UnsignedQuantity
					default label is "CancelQuantity"
			Parameter Rules
				PrmCancelQuantity
					initial value is Quantity
					default to Quantity

			Local Fields
				LocalToBeCancelledInReqLine	is an UnsignedQuantity

			Action Rules
				constraint (PrmCancelQuantity <= RemainingQuantity)
					"CannotCancel<PrmCancelQuantity>Only<RemainingQuantity>LeftOnInterface"

				RemainingQuantity -= PrmCancelQuantity
				Quantity = RemainingQuantity

				if (FromRequisitions)
			 		if (RequisitionLineRel.EnteredUOM != EnteredUOM)
		 				initialize UOMCalculation
		 				UOMCalculation.InputUOM				= EnteredUOM
		 				UOMCalculation.InputToUOM			= RequisitionLineRel.EnteredUOM
						UOMCalculation.InputQuantity		= PrmCancelQuantity
		 				UOMCalculation.Method				= UOMCalculation.Method.ConvertToAlternate
						LocalToBeCancelledInReqLine 		= UOMCalculation.OutputQuantity
					else
						LocalToBeCancelledInReqLine			= PrmCancelQuantity

					invoke Processed.UpdateInterfaceCancelQuantity ByCompanyRequisitionLineRel
						invoked.PrmCancelQuantity  = LocalToBeCancelledInReqLine

				if (RemainingQuantity entered)

					if (FromOrderEntry
					or FromRequisitions)
						for each PurchaseOrderInterfaceAddOnChargeRel
							invoke Update each
								invoked.Quantity = Quantity
				else
					if (FromOrderEntry
					or FromRequisitions)
						for each PurchaseOrderInterfaceAddOnChargeRel
							invoke Delete each

					invoke Delete


		Update is an Update Action
			Entrance Rules
				if  (CostCode.Punchout
				and  PurchaseFromLocation entered)
					constraint (PurchaseFromLocationRel.AllowChangeToPunchoutPurchaseOrder)
						"CannotChangeLine,ItHasCostCodeOfPunchout"

			Action Rules

				if (Item changed)
					if (FromRequisitions)
						initialize Contract
						initialize ContractLine
						initialize VendorItem
						initialize CostCode
						if (Item exists)
							initialize ItemType
							initialize ServiceCode
						if (ItemType.Service)
							CertificationRequired = false
							initialize Manufacturer
							initialize ManufacturerNumber
						if (ItemType.NonStock)
							if (EnteredUOM not entered)
								if (HasItemLocationStockUOM)
									EnteredUOM 		= DerivedLocationStockUOM 
								else
									EnteredUOM 		= ItemUOMRel.DefaultForBuying

							Description			= Item.Description
							Manufacturer 		= Item.Manufacturer
							ManufacturerNumber 	= Item.ManufacturerNumber
						if (ItemLocationRel exist)
							if (ItemType.NonStock
							and not ItemLocationRel.InventoryTracked)
								InspectionRequired = ItemLocationRel.InspectionRequired
							else
								InspectionRequired = false
						CertificationRequired = Item.CertificationRequired

				if (VendorItem exists)
					constraint (VendorItem.Active)
						"VendorItemIsNotActive"

				if (IsItem)
					constraint (Item exists and Item.Active)
						"Item<Item>IsNotActive"


				if (not ItemType.Service
				and EnteredUnitCost entered
				and Buyer.OverrideContractCost
				and Buyer.OverrideLastPOLastCost)
					OverrideCost = true

				if (not FromOrderEntry
				and Quantity changed
				and IsItem
				and EnteredUOM changed)
					initialize UOMCalculation
					UOMCalculation.InputUOM 		= old EnteredUOM
					UOMCalculation.InputToUOM		= EnteredUOM
					UOMCalculation.InputQuantity	= Quantity
					UOMCalculation.Method			= UOMCalculation.Method.ConvertToAlternate
					Quantity = UOMCalculation.OutputQuantity

				if (CostOption.NoCharge
				and EnteredUnitCost > 0)
					if (CostOption not changed
					and EnteredUnitCost changed)
						CostOption =  CostOption.CostRequired
					if (CostOption changed
					and EnteredUnitCost not changed)
						EnteredUnitCost = 0

		MobileUpdate is an Update Action
			default label is "UpdatePurchaseRequest"
			Entrance Rules
				if  (CostCode.Punchout
				and  PurchaseFromLocation entered)
					constraint (PurchaseFromLocationRel.AllowChangeToPunchoutPurchaseOrder)
						"CannotChangeLine,ItHasCostCodeOfPunchout"

			Action Rules
				display "[POInterface]-MobileUpdate-ActionRules"

				if (Item changed)
					if (FromRequisitions)
						initialize Contract
						initialize ContractLine
						initialize VendorItem
						initialize CostCode
						if (ItemType.Service)
							CertificationRequired = false
							initialize Manufacturer
							initialize ManufacturerNumber
						if (ItemType.NonStock)
							if (EnteredUOM not entered)
								if (HasItemLocationStockUOM)
									EnteredUOM 		= DerivedLocationStockUOM 
								else
									EnteredUOM 		= ItemUOMRel.DefaultForBuying

							Description			= Item.Description
							Manufacturer 		= Item.Manufacturer
							ManufacturerNumber 	= Item.ManufacturerNumber
						if (ItemLocationRel exist)
							if (ItemType.NonStock
							and not ItemLocationRel.InventoryTracked)
								InspectionRequired = ItemLocationRel.InspectionRequired
							else
								InspectionRequired = false
						CertificationRequired = Item.CertificationRequired

				if (VendorItem exists)
					constraint (VendorItem.Active)
						"VendorItemIsNotActive"

				if (IsItem)
					constraint (Item exists and Item.Active)
						"ItemIsNotActive"

				if (not ItemType.Service
				and EnteredUnitCost entered
				and Buyer.OverrideContractCost
				and Buyer.OverrideLastPOLastCost)
					OverrideCost = true

				if (not FromOrderEntry
				and Quantity changed
				and IsItem
				and EnteredUOM changed)
					initialize UOMCalculation
					UOMCalculation.InputUOM 		= old EnteredUOM
					UOMCalculation.InputToUOM		= EnteredUOM
					UOMCalculation.InputQuantity	= Quantity
					UOMCalculation.Method			= UOMCalculation.Method.ConvertToAlternate
					Quantity = UOMCalculation.OutputQuantity

				if (CostOption.NoCharge
				and EnteredUnitCost > 0)
					if (CostOption not changed
					and EnteredUnitCost changed)
						CostOption =  CostOption.CostRequired
					if (CostOption changed
					and EnteredUnitCost not changed)
						EnteredUnitCost = 0

		UpdateNoEdits is an Update Action
			restricted
			bypass field rules

		SendToEvent is an Instance Action
			Entrance Rules
				constraint (FromRequisitions)
					"LineSourceMustBeRequisitionForEvent"

			Action Rules
				SourcingEventWorksheet  = true


		ReplenishmentPOWorksheetSelectRecord is an Instance Action
			completion message is "RecordSelected"
			default label is "SelectReplenishmentPurchaseOrderRequest"
			Entrance Rules
				constraint (not IsSelectedCondition or Actor = actor)
					"PurchaseOrderRequestIsSelectedByAnotherUser"
			Action Rules
				IsSelected = true
				ReplenishmentWorksheet						= ReplenishmentWorksheet.YesSelected
				Actor      = actor

		ReplenishmentPOWorksheetUnSelectRecord is an Instance Action
			valid when (IsSelectedCondition)
			completion message is "RecordUnselected"
			default label is "UnselectReplenishmentPurchaseOrderRequest"
			Entrance Rules
				constraint (Actor = actor)
					"PurchaseOrderRequestIsSelectedByAnotherUser"
			Action Rules
				IsSelected = false
				ReplenishmentWorksheet		= ReplenishmentWorksheet.YesNotSelected
				initialize Actor

		ReplenishmentPOWorksheetSelectAllRecords is a Set Action
			run in foreground
			completion message is "SelectAllComplete.RecordsSelected"
			default label is "SelectAllReplenishmentPurchaseOrderRequests"
			Parameters
				PrmFilterCompany				is a PurchasingCompany
					default label is "Company"
				PrmFilterVendor					is a Vendor
					default label is "Vendor"
				PrmFilterPurchaseFromLocation	is a VendorLocation
					default label is "PurchaseFromLocation"
				PrmFilterShipToLocation			is an InventoryLocation
					default label is "ShipToLocation"
				PrmFilterItem					is an Item
					default label is "Item"
				PrmFilterQuantityToOrder		is an UnsignedQuantity
					default label is "QuantityToOrder"
				PrmFilterUOM					is a UnitOfMeasure
					default label is "UOM"

			Parameter Rules
				PrmFilterCompany
					required

			Instance Selection
				where (not IsSelected
				and	   ReplenishmentWorksheet.YesNotSelected
				and	  (PrmFilterCompany not entered or (PrmFilterCompany entered and Company = PrmFilterCompany))
				and	  (PrmFilterVendor  not entered or (PrmFilterVendor  entered and Vendor  = PrmFilterVendor))
				and	  (PrmFilterPurchaseFromLocation not entered or (PrmFilterPurchaseFromLocation entered and PurchaseFromLocation = PrmFilterPurchaseFromLocation))
				and	  (PrmFilterShipToLocation not entered or (PrmFilterShipToLocation entered and ShipToLocation = PrmFilterShipToLocation))
				and	  (PrmFilterItem    not entered or (PrmFilterItem    entered and Item = PrmFilterItem))
				and	  (PrmFilterQuantityToOrder not entered or (PrmFilterQuantityToOrder entered and Quantity = PrmFilterQuantityToOrder))
				and	  (PrmFilterUOM     not entered or (PrmFilterUOM entered and EnteredUOM = PrmFilterUOM)))
			Action Rules
				Instance Rules
					invoke ReplenishmentPOWorksheetSelectRecord PurchaseOrderInterface

		ReplenishmentPOWorksheetUnselectAllRecords is a Set Action
			run in foreground
			completion message is "UnselectAllComplete.RecordsUnselected"
			default label is "UnselectAllReplenishmentPurchaseOrderRequests"
			Instance Selection
				where (IsSelected and ReplenishmentWorksheet.YesSelected)
			Action Rules
				Instance Rules
					invoke ReplenishmentPOWorksheetUnSelectRecord PurchaseOrderInterface

		ReplenishmentPOWorksheetRelease is a Set Action
			completion message is "<LocalCompletionMessage>"
			run in foreground
			default label is "Release"
			Instance Selection
				where (IsSelected
				and    ReplenishmentWorksheet.YesSelected
				and    Actor = actor)
			Local Fields
				LocalCompletionMessage									is Alpha size 50
			Accumulators
				LocalSetReleaseCount
			Action Rules
				Instance Rules
					RemainingQuantity									= Quantity
					ReplenishmentWorksheet								= ReplenishmentWorksheet.No

					initialize IsSelected
					initialize Actor

					LocalSetReleaseCount									+= 1

				Set Rules
					Exit Rules
						LocalReleaseCount								= LocalSetReleaseCount
						if(LocalSetReleaseCount = 1)
							LocalCompletionMessage = IC66ReleaseOneItemCompletionMessage
						else
							if (LocalSetReleaseCount > 1)
								LocalCompletionMessage = IC66ReleaseMultipleItemsCompletionMessage
							else
								LocalCompletionMessage = IC66ReleaseNoItemsCompletionMessage

		RepelenishmentPOWorksheetUpdate is an Update Action
			default label is "UpdateReplenishmentPurchaseOrderRequest"
			Field Rules
				Item
					constraint(ItemLocationRel exists)
						"ItemDoesNotExistAtThisLocation" 
					constraint(ItemLocationRel.InventoryTracked)
						"ItemIsNotInventoryTracked" 
					cannot be changed
						"CannotChangeTheItemOnALine"	
				ShipToLocation
					cannot be changed
						"LocationCannotBeChanged"
			Action Rules
				Quantity						= StoredQuantity
				ReplenishmentWorksheet			= ReplenishmentWorksheet.YesNotSelected

		ReplenishmentPOWorksheetDelete is a Delete Action
			valid when (IsReplenishmentWorksheet)
			default label is "DeleteReplenishmentPurchaseOrderRequest"
			Action Rules
				constraint (IsReplenishmentWorksheet)
					"DeleteReplenishmentPurchaseOrderRequestActionIsAvailableForReplenishmentPurchaseOrderRequestsOnly"
				invoke Delete PurchaseOrderInterface

		ReplenishmentPOWorksheetCreate is a Create Action
			default label is "CreateReplenishmentPurchaseOrderRequest"

			Local Fields
				Execute												is Boolean
			Field Rules
				Item
					constraint(ItemReplenishmentSourceRel exists and ItemReplenishmentSourceRel.Vendor entered)
						"Item<Item>RequiresReplenishmentVendor" 
					constraint(ItemLocationRel exists)
						"ItemDoesNotExistAtThisLocation" 
					constraint(ItemLocationRel.InventoryTracked)
						"ItemIsNotInventoryTracked" 

				EnteredUnitCost
					include DoUnitCostDefaulting

			Action Rules
				ProcurementGroup									= Company.ProcurementGroup
				PurchaseOrderInterface.OperatingCompany				= Company
				Vendor												= first ItemReplenishmentSourceRel.Vendor
				PurchaseFromLocation								= first ItemReplenishmentSourceRel.PurchaseFromLocation
				PurchaseOrderInterface.SourceDocumentOrigin			= SourceDocumentOrigin.InventoryControl
				PurchaseOrderInterface.SourceDocumentAlpha			= "IC_REORDER"
				if (first ReplenishmentPOWorksheetRel.PurchaseOrderInterface.LineNumber > PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber)
					PurchaseOrderInterface.LineNumber					= LastLineNumber
				else
					PurchaseOrderInterface.LineNumber					= PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber + 1	
				Buyer												= ItemLocationRel.Buyer
				ItemType											= ItemType.Inventoried
				Dropship											= false
				if (ItemLocationRel.NoCharge)
					CostOption										= CostOption.NoCharge
				OverrideCost										= false

				TaxCode												= ItemLocationRel.PurchaseTaxCode
				Taxable												= ItemLocationRel.PurchaseTaxable
				InspectionRequired									= ItemLocationRel.InspectionRequired
				if (current corporate date >= ItemLocationRel.MSDSDate and Item.MSDSRequired)
					MSDSRequired									= Item.MSDSRequired
				else
					MSDSRequired									= ItemLocationRel.MSDSOrder
				Description											= Item.Description
				MajorPurchasingClass								= Item.MajorPurchasingClass
				MinorPurchasingClass								= Item.MinorPurchasingClass
				CertificationRequired								= Item.CertificationRequired
				VendorName											= first ItemReplenishmentSourceRel.Vendor.VendorName
				ReplenishmentWorksheet								= ReplenishmentWorksheet.YesSelected
				Actor												= actor

				if (first ReplenishmentPOWorksheetRel.PurchaseOrderInterface.LineNumber > PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber)
					increment PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber by (LastLineNumber - PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber)
				else
					increment PurchaseOrderInterface.OperatingCompany.LastInterfaceLineNumber by 1

				include GetManufacturerInformation

				if (DefaultVendorItemRel.VendorBuyUOM.UnitOfMeasure entered)
					if (Company.CostOrVendorDefaultingOrder.VendorFirstThenCost)
						VendorItem									= first DefaultVendorItemRel.VendorItem

					if (NotOnHoldContractLineItemsRel exists)
						CostOption									= NotOnHoldContractLineItemsRel.CostOption
					if (HasItemLocationStockUOM)	
						constraint (VendorBuyLocationItemUOMRel.OKForBuying)
							"VendorItemBuyUnitOfMeasureOf<VendorItem.VendorBuyUOM.UnitOfMeasure>IsNotAValidUOMOnTheLocation"
					EnteredUOM										= DefaultVendorItemRel.VendorBuyUOM.UnitOfMeasure
					EnteredUOMMultiplier							= DefaultVendorItemRel.VendorBuyUOM.UOMConversion

				else
					if(ItemLocationRel.DefaultSourceUOM entered)
						EnteredUOM										= ItemLocationRel.DefaultSourceUOM
						EnteredUOMMultiplier							= ItemLocationRel.DefaultSourceUOM.UOMConversion
					else
					if (HasItemLocationStockUOM)
						EnteredUOM										= LocationItemUOMDefaultBuyingRel.UnitOfMeasure
						EnteredUOMMultiplier							= LocationItemUOMDefaultBuyingRel.DerivedUOMMultiplier
					else
						EnteredUOM										= Item.DefaultBuyUOM
						EnteredUOMMultiplier							= Item.DefaultBuyUOMMultiplier

				Quantity											= StoredQuantity

		CreateEventWorksheet is an Instance Action
 			default label is "SelectForEvent"
 			Entrance Rules

				constraint (FromRequisitions)
					"LineSourceMustBeRequisitionForEvent"

 			Action Rules
 				invoke UpdateNoEdits
 					invoked.SourcingEventWorksheet	= true
 					invoked.CostCode 				= CostCode.Entered
 					invoked.OverrideCost 			= true





 				if (SelectedByActor exists)
 					constraint (PurchaseOrderInterface.Company = first SelectedByActor.PurchaseOrderInterface.Company)
 						"FromCompaniesMustMatchForAllRecordsSelected"
 					if (DropshipAddress entered)
 						for each SelectedByActor
 							constraint (each.PurchaseOrderInterface.SourceDocumentNumeric = PurchaseOrderInterface.SourceDocumentNumeric)
 								"CannotCombineDifferentRequisitionsIfUsingDropshipAddress"
 				constraint (RequireEvent)
 					"RequisitionDoesNotRequireEventCreation"
 				constraint (!InEventWorksheet
 				and			!InProcessOnEvent)
 					"RequisitionAlreadySelectedOrInProcess"
 				invoke Create SourcingEventWorksheet
 					invoked.Actor				= actor
 					invoked.PurchaseOrderInterface	= PurchaseOrderInterface
 					invoked.ItemNumber			= Item
 					invoked.ItemDescription		= Description
 					invoked.ItemType			= ItemType
			 		invoked.ServiceCode			= ServiceCode
			 		invoked.Location			= ShipToLocation
			 		invoked.EnteredUom			= EnteredUOM
			 		invoked.Manufacturer		= Manufacturer
					invoked.ManufacturerNumber	= ManufacturerNumber
			 		invoked.CommodityCode		= CommodityCode
			 		if (SourcingCompanyRel.UseCommentsForEventLineDesc
					and POCommentExists)
						invoked.ReqlineDescription	= first RequisitionLinePOCommentRel.CommentText
			 		else
			 			invoked.ReqlineDescription  = Description
			 		invoked.RequestedDeliveryDate	= RequestedDeliveryDate
 					if (RequisitionLineRel.DistributionBy.ByQuantity)
						invoked.DistributionType = 1
					else
 					if (RequisitionLineRel.DistributionBy.ByPercent)
						invoked.DistributionType = 2
					else
 					if (RequisitionLineRel.DistributionBy.ByAmount)
						invoked.DistributionType = 3
 					fill in fields from PurchaseOrderInterface

		SendToPO is an Instance Action 
			valid when (SourcingEventWorksheet)
			Action Rules
				SourcingEventWorksheet = false

		SelectForPurchaseOrder is an Instance Action
			valid when (!IsSelectedCondition)
			completion message is "SelectedForPurchaseOrderCreation"
			Entrance Rules
				constraint (not IsSelectedCondition or Actor = actor)
					"PurchaseOrderRequestIsSelectedByAnotherUser"
				constraint (Quantity entered)
					"QuantityIsRequired"
			Action Rules
				IsSelected = true
				Actor      = actor

				if (IsItem)
					if (Item exists)
						constraint (Item.Active)
							"Item<Item>IsInactive"
						constraint (not Item.Discontinued)
							"Item<Item>IsDiscontinued"
					if (ItemLocationRel exists)
						constraint (ItemLocationRel.ItemLocation.Active)
							"Item<Item>AtLocation<ShipToLocation>IsInactive"
						constraint (not ItemLocationRel.ItemLocation.Discontinued)
							"Item<Item>AtLocation<ShipToLocation>IsDiscontinued"

				if (VendorItem exists)
					constraint (VendorItem.Active)
						"VendorItem<VendorItem>IsInactive"

				include ValidateTaxCode

		UnselectInterfaceRecord is an Instance Action
			default label is "UnselectForPurchaseOrder"
			valid when (IsSelectedCondition)
			completion message is "UnselectedForPurchaseOrderCreation"
			Entrance Rules
				if (LocalFromBuyerUnselect = false)
					constraint (Actor = actor)
						"PurchaseOrderRequestIsSelectedByAnotherUser"
			Action Rules
				IsSelected = false
				initialize Actor
				initialize InterfaceRunID

		UnselectAllRecordsForABuyer is a Set Action
			run in foreground
			Parameters
				PrmBuyer    	is an Actor

			Parameter Rules
				PrmBuyer
					required

			Sort Order
				Actor
				Company
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.LineNumber

			Instance Selection
				where (IsSelected = true
				and    PrmBuyer   = Actor)

			Action Rules
				Instance Rules
					LocalFromBuyerUnselect = true
					invoke UnselectInterfaceRecord

		UnselectAllMyRecords is a Set Action
			run in foreground
			Instance Selection
				where (IsSelected = true
				and    Actor      = actor)

			Action Rules
				Instance Rules
					invoke UnselectInterfaceRecord

		SelectAll is a Set Action
			disable resume on error
			run in foreground
			Parameters
				FilterCompany					is a PurchasingCompany
					default label is "Company"
				FilterOperatingCompany			is an OperatingCompany
				FilterSystem					is a SourceDocumentOrigin
				FilterDocument					is a SourceDocumentNumeric
				FilterVendor					is a Vendor
				FilterBuyer						is a Buyer
				FilterPurchaseFromLocation		is a VendorLocation
				FilterRequestingLocation		is a RequestingLocation
				FilterShipToLocation			is an InventoryLocation
				FilterItem						is an Item
				FilterItemType					is an ItemType
				FilterManufacturer			    is a Manufacturer
				FilterPOCode					is a POCode
				FilterCostOption				is a CostCode
				FilterException					is Boolean
				FilterMinorClass				is a MinorPurchasingClass
				FilterMajorClass				is a MajorPurchasingClass
				FilterContract					is a Contract
				FilterNoVendor					is Boolean
				FilterNoCost					is Boolean
				FilterAllocationPriority		is Numeric 2
				FilterDeliveryMethod			is a DeliveryMethod

			Parameter Rules
				FilterCompany
					required

			Instance Selection
				where	(IsSelected = false
				and 	(FilterCompany not entered
				or 		(FilterCompany entered
				and		 Company = FilterCompany))
				and 	(FilterOperatingCompany not entered
				or 		(FilterOperatingCompany entered
				and		 PurchaseOrderInterface.OperatingCompany = FilterOperatingCompany))
				and 	(FilterSystem not entered
				or 		(FilterSystem entered
				and		 PurchaseOrderInterface.SourceDocumentOrigin = FilterSystem))
				and 	(FilterDocument not entered
				or 		(FilterDocument entered
				and		 PurchaseOrderInterface.SourceDocumentNumeric = FilterDocument))
				and 	(FilterVendor not entered
				or 		(FilterVendor entered
				and		 Vendor = FilterVendor))
				and 	(FilterBuyer not entered
				or 		(FilterBuyer entered
				and		 Buyer = FilterBuyer))
				and 	(FilterRequestingLocation not entered
				or 		(FilterRequestingLocation entered
				and		 PurchaseOrderInterface.RequestingLocation = FilterRequestingLocation))
				and 	(FilterPurchaseFromLocation not entered
				or 		(FilterPurchaseFromLocation entered
				and		 PurchaseFromLocation = FilterPurchaseFromLocation))
				and 	(FilterShipToLocation not entered
				or 		(FilterShipToLocation entered
				and		 ShipToLocation = FilterShipToLocation))
				and 	(FilterItem not entered
				or 		(FilterItem entered
				and		 Item = FilterItem))
				and 	(FilterItemType not entered
				or 		(FilterItemType entered
				and		 ItemType = FilterItemType))
				and 	(FilterManufacturer not entered
				or 		(FilterManufacturer entered
				and		 Manufacturer = FilterManufacturer))
				and 	(FilterPOCode not entered
				or 		(FilterPOCode entered
				and		 POCode = FilterPOCode))
				and 	(FilterCostOption not entered
				or 		(FilterCostOption entered
				and		 CostOption = FilterCostOption))
				and 	(FilterException not entered
				or 		(FilterException entered
				and		 Exception = FilterException))
				and 	(FilterMinorClass not entered
				or 		(FilterMinorClass entered
				and		 MinorPurchasingClass = FilterMinorClass))
				and 	(FilterMajorClass not entered
				or 		(FilterMajorClass entered
				and		 MajorPurchasingClass = FilterMajorClass))
				and 	(FilterContract not entered
				or 		(FilterContract entered
				and		 Contract = FilterContract))
				and 	(not FilterNoVendor
				or 		(FilterNoVendor
				and		 Vendor not entered))
				and 	(FilterAllocationPriority not entered
				or 		(FilterAllocationPriority entered
				and		 AllocationPriority = FilterAllocationPriority))
				and 	(not FilterNoCost
				or 		(FilterNoCost
				and		 EnteredUnitCost = 0))
				and 	(FilterDeliveryMethod not entered
				or 		(FilterDeliveryMethod entered
				and		 DeliveryMethod = FilterDeliveryMethod)))

			Action Rules
				Instance Rules
					invoke UpdateNoEdits
						invoked.IsSelected = true
						invoked.Actor      = actor

		CreatePurchaseOrder is a Set Action
			completion message is "CreationOf_\PurchaseOrder<LocalSetPurchaseOrder.PurchaseOrder>InProcess;PleaseRefreshTheScreenToSeeIfTheProcessHasCompleted"
			run in foreground
			Parameters
				PrmVendor						is a Vendor
					default label is "Vendor"
				PrmPurchaseFromLocation			is a VendorLocation
					default label is "PurchaseFromLocation"
				PrmBuyer						is a Buyer
			   		default label is "Buyer"
			   	PrmPOCode						is a POCode
				PrmDefaultDeliveryDate			is Date
			   	PrmCompany						is a PurchasingCompany
				PrmCombine						is Boolean
				PrmPOCodeOverride				is Boolean
				PrmReleasePurchaseOrder			is Boolean
				PrmFromCapitated                is Boolean 
			Parameter Rules
				PrmCompany
					required
						"PurchasingCompanyIsRequired"
					initial value is first SelectedInterfaceByActorRel.Company
				PrmVendor
					initial value is first SelectedInterfaceByActorRel.Vendor
				PrmPurchaseFromLocation
					initial value is first SelectedInterfaceByActorRel.PurchaseFromLocation
				PrmBuyer
					initial value is actor.agent(Employee).Employee
				PrmDefaultDeliveryDate
					constraint (PrmDefaultDeliveryDate >= TransientPurchaseOrderDate)
						"DeliveryDateCannotBePriorToCurrentDate"
				PrmPOCode
					if (PrmPOCodeOverride)
						required
							"PO_\CodeIsRequiredWhenPO_\Code_\OverrideIsTrue"
			Local Fields
				LocalSetPurchaseOrder					is a PurchaseOrder view
				ConvertToQuantityDistribution			is Boolean
				LocalFirstRecord						is Boolean
				CompareDistributionBy					is a DistributionBy
				LocalSetPunchoutId						is like PunchoutId
				LocalSetVendor                          is like Vendor
				LocalSetPurchaseFromLocation			is like VendorLocation
				LocalSetCnCode							is a ConsignCode
				LocalSetContract						is a Contract
				LocalSetMixContractsOnPurchaseOrder     is Boolean
				LocalSetCannotMixReqLoc				    is Boolean
				LocalSetRequestingLocation				is a RequestingLocation
				LocalSameStockless						is Boolean
				CompareStocklessRequestingLocation		is Boolean
				LocalSetPOCode							is a POCode
		   	Instance Selection
		   		where (IsSelected = true
		   		and	   ReplenishmentWorksheet.No
		   		and    Company    = PrmCompany
		   		and    Actor      = actor)

			Action Rules
				Set Rules
					Entrance Rules
						LocalCompany 					= PrmCompany
						if (PrmVendor not entered)
							constraint (Vendor entered)
								"VendorIsRequired"
							LocalVendor						= Vendor
							LocalSetPurchaseFromLocation	= PurchaseFromLocation
						else
							LocalVendor						= PrmVendor
							LocalSetPurchaseFromLocation	= PrmPurchaseFromLocation
						if (PrmBuyer not entered)
							constraint (Buyer entered)
								"BuyerIsRequired"
							LocalBuyer					= Buyer
						else
							LocalBuyer					= PrmBuyer
						LocalDefaultDeliveryDate 		= PrmDefaultDeliveryDate
						if (PrmPOCodeOverride)
							LocalPOCode					= PrmPOCode
						else
							LocalPOCode					= POCode
						include CreatePurchaseOrderHeader

						LocalPurchaseOrder 				= LocalSetPurchaseOrder.PurchaseOrder
						include CheckVendorAndPurchaseFromLocationFields
						LocalSetPunchoutId 				= PunchoutId
						LocalSetVendor                  = LocalPurchaseOrder.Vendor
						LocalSetCnCode					= CnCode
						LocalSetContract				= Contract
						LocalSetPOCode					= PrmPOCode
						if (PrmCombine)
							include ValidateSelectionForCombine

					Exit Rules
						invoke CreatePurchaseOrderLinesBatch PurchaseOrderInterface
							invoked.PrmPurchaseOrder				 = LocalSetPurchaseOrder.PurchaseOrder
							invoked.PrmCompany						 = PrmCompany
							invoked.PrmReleasePurchaseOrder			 = PrmReleasePurchaseOrder
							invoked.PrmCombine						 = PrmCombine
							invoked.PrmConvertToQuantityDistribution = ConvertToQuantityDistribution
							invoked.PrmSameStockless				 = LocalSameStockless
							invoked.PrmDefaultDeliveryDate			 = PrmDefaultDeliveryDate
							invoked.PrmBuyer						 = PrmBuyer

				Instance Rules
					LocalPurchaseOrder 				= LocalSetPurchaseOrder.PurchaseOrder
					if (PrmDefaultDeliveryDate not entered)
						constraint (RequestedDeliveryDate entered)
							"MustHaveADeliveryDateOnAllSelectedRecordsOrEnterADefaultDeliveryDate"
						constraint (RequestedDeliveryDate >= LocalPurchaseOrder.PurchaseOrderDate)
							"DeliveryDateCannotBeEarlierThanPurchaseOrderDate.ChangeDeliveryDateOrEnterADefaultDeliveryDate"
					LocalCombineInterfaces 			= PrmCombine
					LocalPOCodeOverride 			= PrmPOCodeOverride
					LocalFromCapitated              = PrmFromCapitated
					include ValidateSelection
					include UpdatePurchaseOrderHeader

		CreatePurchaseOrderLinesBatch is a Set Action
			completion message is "CreatePurchaseOrderCompleted._\PO<LocalSetPurchaseOrder>"
			restricted
			Parameters
		   		PrmCompany								is a PurchasingCompany
		   		PrmPurchaseOrder						is like PurchaseOrder
		   		PrmReleasePurchaseOrder					is Boolean
				PrmCombine								is Boolean
				PrmConvertToQuantityDistribution		is Boolean
				PrmSameStockless						is Boolean
				PrmDefaultDeliveryDate					is Date
				PrmBuyer								is a Buyer
				
			Local Fields
				LocalSetPurchaseOrder					is a PurchaseOrder
				LocalSetPurchaseOrderLine				is a PurchaseOrderLine view
				ConvertToQuantityDistribution			is Boolean
		   		LocalSetErrorReceived					is Boolean
		   		LocalTransactionErrorMessage			is Alpha 150
		   		LocalSetPurchaseOrderInterface			is a PurchaseOrderInterface
		   		LocalSetLastOrigin 						is a SourceDocumentOrigin
		   		LocalSetLastDocument					is a SourceDocumentNumeric
		   	Instance Selection
		   		where (IsSelected = true
		   		and	   ReplenishmentWorksheet.No
		   		and    Company    = PrmCompany
		   		and    Actor      = actor)

			Action Rules
				Set Rules
					Entrance Rules
						LocalSetPurchaseOrder 			= PrmPurchaseOrder
						LocalCombineInterfaces 			= PrmCombine
						LocalMatchingStockless			= PrmSameStockless
						ConvertToQuantityDistribution	= PrmConvertToQuantityDistribution
					Exit Rules
						invoke Update LocalSetPurchaseOrder.PurchaseOrder
							invoked.InterfaceInProcess 	= 0
							invoked.FromInterfaceUpdate	= false
						if (LocalSetErrorReceived)
							LocalActor = actor
							send notification
								to LocalActor
								description is "CreatePurchaseOrderLineErrorForNewPO<LocalSetPurchaseOrder>"
								priority is high
								detail is "Manage_\Purchase_\Request:_\PurchaseOrder<LocalSetPurchaseOrder>Created.ErrorInCreationOfPurchaseOrderLine:_<LocalTransactionErrorMessage>.Request:_\Company=<PrmCompany>,PurchaseOrderInterface=<LocalSetPurchaseOrderInterface>"
						else
							invoke SendRequesterPOCreateNotification LocalSetPurchaseOrder

							if (PrmCombine)
								invoke ResetPurchaseOrderTotals LocalSetPurchaseOrder
								for each LocalSetPurchaseOrder.PurchaseOrderLine set
									invoke RollUpAmountsToHeader each
								for each LocalSetPurchaseOrder.PurchaseOrderAndLineAddOnCharge set
									invoke RollUpAmountsToHeader each
							if (PrmReleasePurchaseOrder)
								invoke Unreleased.Release LocalSetPurchaseOrder
									resume on error
				Instance Rules
					if (not LocalSetErrorReceived)
						LocalPurchaseOrder 				= LocalSetPurchaseOrder
						LocalPurchaseOrderLine 			= LocalSetPurchaseOrderLine.PurchaseOrderLine
						LocalCombineInterfaces 			= PrmCombine
						LocalMatchingStockless			= PrmSameStockless
						LocalDefaultDeliveryDate		= PrmDefaultDeliveryDate
						if (PrmBuyer entered)
							Buyer = PrmBuyer
						include ProcessPurchaseOrderInterface
						if (LocalSetErrorReceived)
							LocalSetPurchaseOrderInterface	= PurchaseOrderInterface

		AddToPurchaseOrder is a Set Action
			completion message is "AddToPurchaseOrder<PrmPurchaseOrder>InProcess;PleaseRefreshTheScreenToSeeIfTheProcessHasCompleted"
			run in foreground
			Parameters
			   	PrmCompany						is a PurchasingCompany
					default label is "Company"
				PrmPurchaseOrder 				is a PurchaseOrder
			  		default label is "PurchaseOrder"
			  	PrmReleasePurchaseOrder			is Boolean
			  	PrmCombine						is Boolean
			  	PrmPOCodeOverride				is Boolean
			Parameter Rules
				PrmCompany
					required
						"PurchasingCompanyIsRequired"
					initial value is first SelectedInterfaceByActorRel.Company
				PrmPurchaseOrder
					required
					constraint (PrmPurchaseOrder.Closed.No)
						"CannotUseClosedOrHistoricalPurchaseOrder"
			Local Fields
				LocalSetPunchoutId						is like PunchoutId
				LocalSetVendor                          is a Vendor
				LocalSetCnCode							is a ConsignCode
				LocalSetContract						is a Contract
				LocalSetMixContractsOnPurchaseOrder     is Boolean
				LocalSetCannotMixReqLoc     			is Boolean
				LocalSetRequestingLocation				is a RequestingLocation
				LocalSameStockless						is Boolean
				LocalSetPOCode							is a POCode
		   	Instance Selection
		   		where (IsSelected = true
		   		and	   ReplenishmentWorksheet.No
		   		and    Company    = PrmCompany
		   		and    Actor      = actor)

			Action Rules
				Set Rules
					Entrance Rules
						invoke UpdatePurchaseOrderFromInterface PrmPurchaseOrder
							invoked.InterfaceInProcess 	= 2
							invoked.FromInterfaceUpdate	= true
						LocalPurchaseOrder				= PrmPurchaseOrder
						include CheckVendorAndPurchaseFromLocationFields
						LocalSetPunchoutId 				= first PrmPurchaseOrder.PurchaseOrderLinesRel.PunchoutId
						LocalSetVendor      			= PrmPurchaseOrder.Vendor
						LocalSetCnCode					= first PrmPurchaseOrder.PurchaseOrderLinesRel.CnCode
						LocalSetContract   				= first PrmPurchaseOrder.PurchaseOrderLinesRel.Contract
					Exit Rules
						invoke AddToPurchaseOrderLinesBatch PurchaseOrderInterface
							invoked.PrmPurchaseOrder		= PrmPurchaseOrder
							invoked.PrmCompany				= PrmCompany
							invoked.PrmReleasePurchaseOrder	= PrmReleasePurchaseOrder
							invoked.PrmCombine				= PrmCombine
							invoked.PrmSameStockless		= LocalSameStockless
				Instance Rules
					LocalAddToPurchaseOrder 		= true
					LocalPurchaseOrder				= PrmPurchaseOrder
					LocalCombineInterfaces			= PrmCombine
					LocalPOCodeOverride				= PrmPOCodeOverride
					include ValidateSelection
					include UpdatePurchaseOrderHeader

		AddToPurchaseOrderLinesBatch is a Set Action
			completion message is "AddToPurchaseOrder<PrmPurchaseOrder>Completed"
			restricted
			Parameters
		   		PrmCompany								is a PurchasingCompany
		   		PrmPurchaseOrder						is like PurchaseOrder
		   		PrmReleasePurchaseOrder					is Boolean
				PrmCombine								is Boolean
				PrmConvertToQuantityDistribution		is Boolean
				PrmSameStockless						is Boolean
			Local Fields
				LocalSetPurchaseOrder					is a PurchaseOrder
				LocalSetPurchaseOrderLine				is a PurchaseOrderLine view
				ConvertToQuantityDistribution			is Boolean
		   		LocalSetErrorReceived					is Boolean
		   		LocalTransactionErrorMessage			is Alpha 150
		   		LocalSetPurchaseOrderInterface			is a PurchaseOrderInterface
		   		LocalSetLastOrigin 						is a SourceDocumentOrigin
		   		LocalSetLastDocument					is a SourceDocumentNumeric
		   	Instance Selection
		   		where (IsSelected = true
		   		and	   ReplenishmentWorksheet.No
		   		and    Company    = PrmCompany
		   		and    Actor      = actor)

			Action Rules
				Set Rules
					Entrance Rules
						LocalSetPurchaseOrder 			= PrmPurchaseOrder
						LocalCombineInterfaces 			= PrmCombine
						LocalMatchingStockless			= PrmSameStockless
						ConvertToQuantityDistribution	= PrmConvertToQuantityDistribution
					Exit Rules
						invoke UpdatePurchaseOrderFromInterface LocalSetPurchaseOrder
							invoked.InterfaceInProcess 	= 0
							invoked.FromInterfaceUpdate	= true
						if (LocalSetErrorReceived)
							LocalActor = actor
							send notification
								to LocalActor
								description is "AddToPurchaseOrder<LocalSetPurchaseOrder>Error"
								priority is high
								detail is "Manage_\Purchase_\Request:_\CreatePurchaseOrderLineError._<LocalTransactionErrorMessage>._Request:Company=<PrmCompany>,PurchaseOrderInterface=<LocalSetPurchaseOrderInterface>"
						else
							invoke SendRequesterPOLineAddNotification LocalSetPurchaseOrder

							if (PrmCombine)
								invoke ResetPurchaseOrderTotals LocalSetPurchaseOrder
								for each LocalSetPurchaseOrder.PurchaseOrderLine set
									invoke RollUpAmountsToHeader each
								for each LocalSetPurchaseOrder.PurchaseOrderAndLineAddOnCharge set
									invoke RollUpAmountsToHeader each
							if (PrmReleasePurchaseOrder)
								invoke Unreleased.Release LocalSetPurchaseOrder
									resume on error
				Instance Rules
					if (not LocalSetErrorReceived)
						LocalPurchaseOrder 				= LocalSetPurchaseOrder
						LocalPurchaseOrderLine 			= LocalSetPurchaseOrderLine.PurchaseOrderLine
						LocalCombineInterfaces 			= PrmCombine
						if (PurchaseOrderRequesterLineSourceRel exists)
							LocalSetLastDocument		= PurchaseOrderInterface.SourceDocumentNumeric
							LocalSetLastOrigin 			= PurchaseOrderInterface.SourceDocumentOrigin		
						include ProcessPurchaseOrderInterface
						if (LocalSetErrorReceived)
							LocalSetPurchaseOrderInterface	= PurchaseOrderInterface

		PopulateBlankTaxRecords is a Set Action
			restricted
			run in background

			Parameters
				PrmCompany		is a PurchasingCompany

			Parameter Rules
				PrmCompany
					required

			Instance Selection
				where (Company = PrmCompany
				and    TaxNotComputed)

			Action Rules
				Instance Rules
					include CalculateLineTaxTotal

		UpdateClassesAndCodes is a Set Action
			restricted
			run in background

			Parameters
				PrmItemGroup				is an ItemGroup
				PrmItem						is like Item
				PrmMajorPurchasingClass		is a MajorPurchasingClass
				PrmMinorPurchasingClass		is a MinorPurchasingClass
				PrmCommodityCode			is a CommCodes
				PrmActor					is an Actor

			Local Fields
				LocalUpdatedRecordCount		is Numeric size 5

			Instance Selection
				where (ProcurementGroup		 = PrmItemGroup
				and	   Item					 = PrmItem
				and	   IsItem
				and	  (MajorPurchasingClass	!= PrmMajorPurchasingClass
				or	   MinorPurchasingClass != PrmMinorPurchasingClass
				or	   CommodityCode		!= PrmCommodityCode))

			Action Rules
				Set Rules
					Exit Rules
						send notification
							to PrmActor
							description is "Purchase_\RequestsFor_\Item<PrmItem>UpdatedSuccessfully"
							priority is high
							detail is "<LocalUpdatedRecordCount>_\Purchase_\RequestRecordsFor_\Item<PrmItem>HaveBeenUpdatedWithTheCorrect_\Purchasing_\ClassAnd_\Commodity_\CodeInformation."

				Instance Rules
					if (PrmMajorPurchasingClass != MajorPurchasingClass)
						MajorPurchasingClass 		= PrmMajorPurchasingClass

					if (PrmMinorPurchasingClass != MinorPurchasingClass)
						MinorPurchasingClass 		= PrmMinorPurchasingClass

					if (PrmCommodityCode != CommodityCode)
						CommodityCode				= PrmCommodityCode

					LocalUpdatedRecordCount += 1


		ProcessPurchaseRequest is a Set Action 
			restricted
			completion message is "ProcessPurchaseRequestHasBeenSubmitted;PleaseViewProcessPurchaseRequestResults"
			Parameters
				PrmPurchasingCompany			is a PurchasingCompany
					default label is "Company"
				PrmProcessByProcurementGroup 	is Boolean 
					default label is "ProcessAllCompaniesInProcurementGroup"
				PrmDefaultBuyer					is a Buyer
					default label is "DefaultBuyer"
				PrmIncludeAllCostOptions		is AlphaUpper size 1
					default label is "IncludeAllCostOptions"
					States
						Yes 				value is "Y"
						CostRequiredOnly  	value is "N"
				PrmDefaultDeliveryDays			is Numeric size 3
					default label is "DefaultDeliveryDays"
				PrmReleasePurchaseOrder			is Boolean
					default label is "ReleasePurchaseOrder"
				PrmCombineOnPOLine             	is Boolean
					default label is "CombineOnPOLine "
				PrmOneShipToPerPO				is Boolean
					default label is "OneShipTo_perP\O"
				PrmMaximumPOLines				is like Requisition
					default label is "MaximumNumber_ofLines_onP\O"
				PrmSystemCode              		is AlphaUpper size 2
					default label is "SystemCode"
					States
						InventoryControl  	value is "IC"
						Requisitions      	value is "RQ"
						OrderEntry        	value is "OE"
						CaseCarts         	value is "CX"
						StrategicSourcing 	value is "SS"
				PrmVendorAndPurchaseFrom		is a VendorArray
				PrmVendorOption          		is AlphaUpper size 1
					default label is "VendorOption"
					States
						Include 			value is "I"
						Exclude 			value is "E"
				PrmFilterBuyer            		is a Buyer
					default label is "Buyer"
				PrmBuyerOnPurchasingClasses		is Boolean
					default label is "BuyerPurchaseClasses"
				PrmBuyerOnVendor				is Boolean
					default label is "Vendors"
				PrmBuyerOnLocation				is Boolean
					default label is "Locations"
				PrmBuyerOnRequestingLocation	is Boolean
					default label is "RequestingLocations"
				PrmFilterDeliveryDays			is Numeric size 3
					default label is "DeliveryDays"
				PrmFilterFromPriority			is Numeric size 2
					default label is "FromPriority"
				PrmFilterToPriority				is Numeric size 2
					default label is "ToPriority"
				PrmFilterLocation				is an InventoryLocation
					default label is "ShipToLocation"
				PrmFilterReportGroup			is an InventoryReportGroup
					default label is "ReportGroup"
				PrmFilterPOCode					is a POCodeArray
					default label is "P\OCode"
				PrmPOCodeOption					is AlphaUpper size 1
					default label is "P\OCodeOption"
					States
						Include 			value is "I"
						Exclude 			value is "E"
				PrmFilterMajorPurchasingClass	is a MajorPurchasingClass
					default label is "FromPurchasingClass"
				PrmFilterMinorPurchasingClass	is a MinorPurchasingClass
					default label is "ToPurchasingClass"
				PrmFilterRequestingLocation		is a RequestingLocation
					default label is "RequestingLocation"
		  		PrmFilterItem					is an Item
					default label is "Item"
				PrmFilterItemType				is AlphaUpper size 1
					default label is "ItemType"
					States
						Inventory 			value is "I"
						Nonstock  			value is "N"
						Special   			value is "X"
						Service   			value is "S"
				PrmFilterManufacturer			is a Manufacturer
					default label is "Manufacturer"
				PrmFilterRequestingCompany		is like InventoryCompany
					default label is "RequestingCompany"
				PrmFilterRequisition				is like Requisition
					default label is "RequisitionNumber"
				PrmFilterProcurementTemplate	is a ProcurementTemplate
					default label is "ProcurementTemplateNumber"
				PrmFilterBillCode				is a BillCodeArray
				PrmBillCodeOption				is AlphaUpper size 1
					default label is "BillCodeOption"
					States
						Include 			value is "I"
						Exclude 			value is "E"
				PrmFilterAccountingUnit			is an AccountingUnit
					default label is "AccountingUnit"
				PrmFilterActivity				is a Project
					default label is "Project"
				PrmFilterCostCode				is a CostCode
					default label is "UnitCostOrigin"
			Parameter Rules
				PrmPurchasingCompany
					required
					LocalProcurementGroup 	= PrmPurchasingCompany.ProcurementGroup
				PrmDefaultBuyer
					required
				PrmIncludeAllCostOptions
					initial value is PrmIncludeAllCostOptions.CostRequiredOnly
					required
				PrmDefaultDeliveryDays
					required
				PrmFilterBuyer
					if (PrmBuyerOnPurchasingClasses)
						required
							"MustEnterBuyerIfLimitingByBuyerClass"
					if (PrmBuyerOnVendor)
						required
							"MustEnterBuyerIfLimitingByBuyerVendors"
					if (PrmBuyerOnLocation)
						required
							"MustEnterBuyerIfLimitingByBuyerLocations"
					if (PrmBuyerOnRequestingLocation)
						required
							"MustEnterBuyerIfLimitingByBuyerRequestingLocations"
				PrmFilterFromPriority
					if (PrmFilterToPriority entered)
						required
							"MustEnterBothEndsOfThePriorityRange"
				PrmFilterToPriority
					if (PrmFilterFromPriority entered)
						required
							"MustEnterBothEndsOfThePriorityRange"
				PrmVendorOption		
					if (PrmVendorAndPurchaseFrom entered)
						required
					constraint (PrmVendorAndPurchaseFrom entered)
						"VendorMustBeEntered"
				PrmVendorAndPurchaseFrom
					for each PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom
						if (each.PurchaseFromLocation entered)
							constraint (each.Vendor entered)
								"VendorMustBeEntered"
							constraint (each.PurchaseFromLocation exists)
								"PurchaseFromLocation<each.PurchaseFromLocation>DoesNotExist"
				PrmPOCodeOption 	
					if (PrmFilterPOCode entered)
						required
					constraint (PrmFilterPOCode entered)
						"POCodeMustBeEntered"
				PrmBillCodeOption 	
					if (PrmFilterBillCode entered)
						required
					constraint (PrmFilterBillCode entered)
						"BillCodeMustBeEntered"
				PrmFilterRequisition
					constraint (PrmFilterRequestingCompany entered)
						"RequestingCompanyMustBeEntered"
					LocalCompany		= PrmFilterRequestingCompany
					LocalRequisition 	= PrmFilterRequisition
					if (PrmProcessByProcurementGroup)
						cannot be entered
							"CannotBeEnteredWhenProcessingAllCompaniesInProcurementGroup"
					constraint (FilterRequisitionRel.Status.Processed)
						"RequisitionIsNotProcessed"
					constraint (not FilterRequisitionRel.Closed)
						"RequisitionIsAlreadyClosed"
				PrmFilterLocation
					if (PrmProcessByProcurementGroup)
						cannot be entered
							"CannotBeEnteredWhenProcessingAllCompaniesInProcurementGroup"
				PrmFilterReportGroup
					if (PrmProcessByProcurementGroup)
						cannot be entered
							"CannotBeEnteredWhenProcessingAllCompaniesInProcurementGroup"
					LocalInventoryReportGroup = PrmFilterReportGroup
				PrmFilterRequestingLocation
					if (PrmProcessByProcurementGroup)
						cannot be entered
							"CannotBeEnteredWhenProcessingAllCompaniesInProcurementGroup"

			Local Fields
				TempAsyncIdPOI					is an AsyncActionRequest
				LocalSetPOInterfaceResult		is a POInterfaceResult
				LocalTransactionErrorMessage	is Alpha 150
				LocalSetErrorReceived			is Boolean
			Accumulators
				LocalSetRejectedCount
				LocalSetForProcessingCount

			Instance Selection
				where	(InterfaceRunID not entered
				and      ReplenishmentWorksheet.No
				and      not SourcingEventWorksheet

				and     ((PrmProcessByProcurementGroup
				and       Company.ProcurementGroup 	= PrmPurchasingCompany.ProcurementGroup)
				or        Company 					= PrmPurchasingCompany)

				and      Vendor entered

				and     (PrmIncludeAllCostOptions.Yes
					or   CostOption.CostRequired)

				and		(PrmSystemCode not entered
					or   PrmSystemCode = PurchaseOrderInterface.SourceDocumentOrigin)

				and		(PrmVendorOption not entered
					or       ((PrmVendorOption.Include
					and	     ((Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].Vendor
					and 	   (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].PurchaseFromLocation not entered
					or		    PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].PurchaseFromLocation))
					or	      (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].Vendor
					and 	   (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].PurchaseFromLocation not entered
					or		    PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].PurchaseFromLocation))
					or	      (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].Vendor
					and 	   (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].PurchaseFromLocation not entered
					or		    PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].PurchaseFromLocation))
					or	      (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].Vendor
					and 	   (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].PurchaseFromLocation not entered
					or		    PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].PurchaseFromLocation))))
					or    	 (PrmVendorOption.Exclude
					and      ((PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].PurchaseFromLocation not entered
					and	        Vendor not = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].Vendor)
					or         (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].PurchaseFromLocation entered
					and	        not (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].Vendor and PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[1].PurchaseFromLocation)))
					and      ((PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].PurchaseFromLocation not entered
					and	        Vendor not = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].Vendor)
					or         (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].PurchaseFromLocation entered
					and	        not (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].Vendor and PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[2].PurchaseFromLocation)))
					and      ((PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].PurchaseFromLocation not entered
					and	       Vendor not = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].Vendor)
					or        (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].PurchaseFromLocation entered
					and	       not (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].Vendor and PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[3].PurchaseFromLocation)))
					and      ((PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].PurchaseFromLocation not entered
					and	       Vendor not = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].Vendor)
					or        (PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].PurchaseFromLocation entered
					and	       not (Vendor = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].Vendor and PurchaseFromLocation = PrmVendorAndPurchaseFrom.VendorAndPurchaseFrom[4].PurchaseFromLocation))))))

				and     (Buyer not entered
				or      (PrmFilterBuyer not entered
					or  (PrmFilterBuyer = Buyer
					and 	(PrmBuyerOnPurchasingClasses = false
					or   	 FilterBuyerPurchasingClassRel exists)
					and 	(PrmBuyerOnVendor = false
					or       FilterBuyerVendorRel exists)
					and     (PrmBuyerOnLocation = false
					or       FilterBuyerLocationRel exists)
					and     (PrmBuyerOnRequestingLocation = false
					or       FilterBuyerRequestingLocationRel exists))))

				and		(PrmFilterLocation not entered
					or		 ShipToLocation = PrmFilterLocation)

				and		(PrmFilterReportGroup not entered
					or		 FilterInventoryReportGroupLocationRel exists)

				and		(PrmFilterRequestingLocation not entered
					or		 PurchaseOrderInterface.RequestingLocation = PrmFilterRequestingLocation)

				and		(PrmPOCodeOption not entered
					or  (PrmPOCodeOption.Include and POCode entered
						and	     (POCode = PrmFilterPOCode.POCode[1]
						or	      POCode = PrmFilterPOCode.POCode[2]
						or	      POCode = PrmFilterPOCode.POCode[3]
						or	      POCode = PrmFilterPOCode.POCode[4]))
					or   (PrmPOCodeOption.Exclude
						and		(POCode not entered
						or      (POCode not = PrmFilterPOCode.POCode[1]
						and	      POCode not = PrmFilterPOCode.POCode[2]
						and	      POCode not = PrmFilterPOCode.POCode[3]
						and	      POCode not = PrmFilterPOCode.POCode[4]))))

				and		(PrmBillCodeOption not entered
					or	(PrmBillCodeOption.Include and CnCode entered
					and		(CnCode = PrmFilterBillCode.BillCode[1]
					or		 CnCode = PrmFilterBillCode.BillCode[2]
					or		 CnCode = PrmFilterBillCode.BillCode[3]
					or		 CnCode = PrmFilterBillCode.BillCode[4]))
					or   (PrmBillCodeOption.Exclude
					and		(CnCode not entered
					or		(CnCode not = PrmFilterBillCode.BillCode[1]
					and		 CnCode not = PrmFilterBillCode.BillCode[2]
					and		 CnCode not = PrmFilterBillCode.BillCode[3]
					and		 CnCode not = PrmFilterBillCode.BillCode[4]))))

				and		(PrmFilterDeliveryDays not entered
					or   RequestedDeliveryDate < current corporate date + PrmFilterDeliveryDays)

				and		(PurchaseOrderInterface.SourceDocumentOrigin.InventoryControl 
					or		 (PrmFilterFromPriority not entered
					or		 (AllocationPriority >= PrmFilterFromPriority
					and		  AllocationPriority <= PrmFilterToPriority)))

				and		((PrmFilterMajorPurchasingClass not entered
					or        MajorPurchasingClass = PrmFilterMajorPurchasingClass)

				and      (PrmFilterMinorPurchasingClass not entered
					or        MinorPurchasingClass = PrmFilterMinorPurchasingClass))

				and		(PrmFilterItem not entered
					or		 Item = PrmFilterItem)

				and		(PrmFilterItemType not entered
					or		 ItemType = PrmFilterItemType)

				and		(PrmFilterManufacturer not entered
					or        Manufacturer = PrmFilterManufacturer)

				and		(PrmFilterCostCode not entered
					or		 CostCode = PrmFilterCostCode)

				and		(PrmFilterRequisition not entered
					or		 (PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
					and 	  PurchaseOrderInterface.OperatingCompany = PrmFilterRequestingCompany
					and 	  PurchaseOrderInterface.SourceDocumentNumeric = PrmFilterRequisition))

				and		(PrmFilterProcurementTemplate not entered
					or		 (PurchaseOrderInterface.SourceDocumentOrigin.ProcurementTemplates
					and 	  PurchaseOrderInterface.SourceDocumentNumeric = PrmFilterProcurementTemplate)))

			Sort Order
				Company
			Action Rules
				Empty Set Rules
					LocalEmptyInterface = true
					include CreatePOInterfaceResult

				Set Rules
					Entrance Rules

						include CreatePOInterfaceResult
						invoke CreatePOInterfaceSummary PurchasingCompany 
							invoked.PrmCompany						= PrmPurchasingCompany
							invoked.PrmProcessByProcurementGroup 	= PrmProcessByProcurementGroup
							invoked.PrmFinanceEnterpriseGroup		= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
							invoked.PrmPOInterfaceResult			= LocalSetPOInterfaceResult
					Exit Rules
						invoke SendCompletedProcessPurchaseRequestNotification LocalSetPOInterfaceResult in background
							run after TempAsyncIdPOI

				Company Set Rules
					Entrance Rules
						initialize LocalSetRejectedCount
						initialize LocalSetForProcessingCount
					Exit Rules
						if (LocalSetRejectedCount entered)
							invoke Update LocalSetPOInterfaceResult
								invoked.RejectedCount			+= LocalSetRejectedCount

						if (LocalSetForProcessingCount entered)
							invoke ProcessOneSourceDocumentToOnePO
								run after TempAsyncIdPOI
								assign async action request id to TempAsyncIdPOI
								invoked.PrmCompany					= Company
								invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
								invoked.PrmPOInterfaceResult 		= LocalSetPOInterfaceResult

							invoke ProcessBlanketInterface
								run after TempAsyncIdPOI
								assign async action request id to TempAsyncIdPOI
								invoked.PrmCompany					= Company
								invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
								invoked.PrmPOInterfaceResult 		= LocalSetPOInterfaceResult

							invoke ProcessDropShipInterface
								run after TempAsyncIdPOI
								assign async action request id to TempAsyncIdPOI
								invoked.PrmCompany					= Company
								invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
								invoked.PrmPOInterfaceResult 		= LocalSetPOInterfaceResult

							invoke ProcessLocationControl
								run after TempAsyncIdPOI
								assign async action request id to TempAsyncIdPOI
								invoked.PrmCompany					= Company
								invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup
								invoked.PrmPOInterfaceResult 		= LocalSetPOInterfaceResult

				Instance Rules


					if (PrmFilterAccountingUnit entered) 
						for each RequisitionLineRel.RequisitionLineDistributionsRel
							if (PrmFilterAccountingUnit = each.DistributionAccount.ToAccountingEntity)
								ForProcessing = true
								end for each
					else
						ForProcessing = true

					if (ForProcessing)
						if (PrmFilterActivity entered)
							ForProcessing = false
							for each RequisitionLineRel.RequisitionLineDistributionsRel
								if (PrmFilterActivity = each.DistributionAccount.Project)
									ForProcessing = true
									end for each
						else
							ForProcessing = true

					if (ForProcessing)
						InterfaceRunID			= LocalSetPOInterfaceResult
						LocalLocationControl 	= DerivedLocationControl

						initialize SortRequestingLocation
						initialize SortSourceDocument

						if (LocalLocationControl.CannotMixRequestingLocationsOnPO 	
						or  LocalLocationControl.CannotCombineRequisitions)			
							SortRequestingLocation 	= PurchaseOrderInterface.RequestingLocation

							if (LocalLocationControl.CannotCombineRequisitions) 	
								SortSourceDocument 	= PurchaseOrderInterface.SourceDocumentNumeric

						if (Buyer entered)
							SortBuyer = Buyer
						else
							SortBuyer = PrmDefaultBuyer

						LocalSetForProcessingCount +=1



		ProcessOneSourceDocumentToOnePO	is a Set Action
			restricted
			Parameters
				PrmCompany						is a PurchasingCompany
				PrmFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmPOInterfaceResult			is a POInterfaceResult
			Local Fields
				LocalSetPOInterfaceResult		is a POInterfaceResult
				LocalSetPurchaseOrder			is a PurchaseOrder view
				LocalSetPurchaseOrderLine		is a PurchaseOrderLine view
				LocalSetSourceOrigin			is like SourceDocumentOrigin
				LocalSetSourceCompany			is like InventoryCompany
				LocalSetSourceNumeric			is like SourceDocumentNumeric
				LocalSetRequestingLocation		is a RequestingLocation
				LocalSetItem					is like Item
				LocalSetContract				is like Contract
				LocalSetTermsCode				is like TermsCode
				LocalSetCnCode					is like ConsignCode
		   		LocalSetLineHasAOC					is Boolean
				ConvertToQuantityDistribution	is Boolean
		   		LocalSetErrorReceived			is Boolean
		   		LocalTransactionErrorMessage	is Alpha 150
		   		LocalSetLastOrigin 				is like SourceDocumentOrigin
		   		LocalSetLastDocument			is like SourceDocumentNumeric
		   		LocalSetLocationControl			is a LocationControl
			Accumulators
				LocalSetProcessedCount
				LocalSetRejectedCount
				LocalSetPurchaseOrderCount
			Instance Selection
				where (Company					= PrmCompany
				and	   InterfaceRunID 			= PrmPOInterfaceResult
				and	   OneSourceDocumentToOnePO)
			Sort Order
				Company
				PurchaseOrderInterface.OperatingCompany
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				Vendor
				PurchaseFromLocation
				Contract
				TransactionCurrencyCode
				SortBuyer
				SortRequestingLocation
				ShipToLocation
				POCode
				ProcessLevel
				Item
				PurchaseOrderInterface.LineNumber

			Action Rules
				Set Rules
					Entrance Rules

						LocalSetPOInterfaceResult		= PrmPOInterfaceResult
					Exit Rules
						include ProcessExitInterfaceSet
				Instance Rules
					LocalFinanceEnterpriseGroup = GeneralLedgerCompanyForCompanyRel.FinanceEnterpriseGroup 
					LocalCompany				= Company 

					if (LocalSetSourceCompany		not = PurchaseOrderInterface.OperatingCompany
					or  LocalSetSourceOrigin 	 	not = PurchaseOrderInterface.SourceDocumentOrigin
					or  LocalSetSourceNumeric	 	not = PurchaseOrderInterface.SourceDocumentNumeric)
						LocalCreateNewPurchaseOrder = true

					include PurchaseOrderHeaderAndLineInterfacing


		ProcessBlanketInterface	is a Set Action
			restricted
			Parameters
				PrmCompany						is a PurchasingCompany
				PrmFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmPOInterfaceResult			is a POInterfaceResult
			Local Fields
				LocalSetPOInterfaceResult		is a POInterfaceResult
				LocalSetPurchaseOrder			is a PurchaseOrder view
				LocalSetPurchaseOrderLine		is a PurchaseOrderLine view
				LocalSetSourceOrigin			is like SourceDocumentOrigin
				LocalSetSourceCompany			is like InventoryCompany
				LocalSetSourceNumeric			is like SourceDocumentNumeric
				LocalSetRequestingLocation		is a RequestingLocation
				LocalSetItem					is like Item
		   		LocalSetContract				is like Contract
				LocalSetTermsCode				is like TermsCode
				LocalSetCnCode					is like ConsignCode
				ConvertToQuantityDistribution	is Boolean
		   		LocalSetErrorReceived			is Boolean
		   		LocalTransactionErrorMessage	is Alpha 150
		   		LocalSetLastOrigin 				is like SourceDocumentOrigin
		   		LocalSetLastDocument			is like SourceDocumentNumeric
		   		LocalSetLocationControl			is a LocationControl
		   		LocalSetLineHasAOC					is Boolean
			Accumulators
				LocalSetProcessedCount
				LocalSetRejectedCount
				LocalSetPurchaseOrderCount
			Instance Selection
				where (Company					= PrmCompany
				and	   InterfaceRunID 			= PrmPOInterfaceResult
		   		and    CostCode.Blanket)
			Sort Order
				Company
				Vendor
				PurchaseFromLocation
				Contract
				TransactionCurrencyCode
				SortBuyer
				PurchaseOrderInterface.OperatingCompany
				SortRequestingLocation
				ShipToLocation
				POCode
				ProcessLevel
				SortSourceDocument
				Item
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.LineNumber
			Action Rules
				Empty Set Rules
				Set Rules
					Entrance Rules

						LocalSetPOInterfaceResult		= PrmPOInterfaceResult
					Exit Rules
						include ProcessExitInterfaceSet

				PurchaseFromLocation Set Rules
					Entrance Rules
						LocalSetLocationControl = DerivedLocationControl

				Instance Rules 
					if (LocalSetContract not = Contract)
						LocalCreateNewPurchaseOrder = true

					include PurchaseOrderHeaderAndLineInterfacing


		ProcessDropShipInterface	is a Set Action
			restricted
			Parameters
				PrmCompany						is a PurchasingCompany
				PrmFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmPOInterfaceResult			is a POInterfaceResult
			Local Fields
				LocalSetPOInterfaceResult		is a POInterfaceResult
				LocalSetPurchaseOrder			is a PurchaseOrder view
				LocalSetPurchaseOrderLine		is a PurchaseOrderLine view
				LocalSetSourceOrigin			is like SourceDocumentOrigin
				LocalSetSourceCompany			is like InventoryCompany
				LocalSetSourceNumeric			is like SourceDocumentNumeric
				LocalSetRequestingLocation		is a RequestingLocation
				LocalSetItem					is like Item
		   		LocalSetContract				is like Contract
				LocalSetTermsCode				is like TermsCode
				LocalSetCnCode					is like ConsignCode
				ConvertToQuantityDistribution	is Boolean
				LocalSetDropshipName			is like Name	 
					holds pii
				LocalSetDropshipAddress			is like PostalAddressV2
				LocalSetDropshipPhoneNumber		is like TelephoneNumber 
					holds pii
				LocalSetDropshipContact         is like AddressContact
		   		LocalSetErrorReceived			is Boolean
		   		LocalTransactionErrorMessage	is Alpha 150
		   		LocalSetLastOrigin 				is like SourceDocumentOrigin
		   		LocalSetLastDocument			is like SourceDocumentNumeric
		   		LocalSetLocationControl			is a LocationControl
		   		LocalSetLineHasAOC				is Boolean
			Accumulators
				LocalSetProcessedCount
				LocalSetRejectedCount
				LocalSetPurchaseOrderCount
			Instance Selection
				where (Company					= PrmCompany
				and	   InterfaceRunID 			= PrmPOInterfaceResult
		   		and    Dropship)
			Sort Order
				Company
				DropshipName
				DropshipAddress.DeliveryAddress.AddressLine1
				DropshipAddress.DeliveryAddress.AddressLine2
				DropshipAddress.DeliveryAddress.AddressLine3
				DropshipAddress.DeliveryAddress.AddressLine4
				DropshipAddress.Municipality
				DropshipAddress.StateProvince
				DropshipAddress.PostalCode
				DropshipAddress.County
				DropshipAddress.Country
				DropshipPhoneNumber.InternationalPrefix
				DropshipPhoneNumber.SubscriberNumber
				DropshipPhoneNumber.Extension
				DropshipContact
				Vendor
				PurchaseFromLocation
				Contract
				TransactionCurrencyCode
				SortBuyer
				PurchaseOrderInterface.OperatingCompany
				SortRequestingLocation
				ShipToLocation
				POCode
				ProcessLevel
				SortSourceDocument
				Item
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.LineNumber
			Action Rules
				Empty Set Rules
				Set Rules
					Entrance Rules

						LocalSetPOInterfaceResult			= PrmPOInterfaceResult
					Exit Rules
						include ProcessExitInterfaceSet

				PurchaseFromLocation Set Rules
					Entrance Rules
						LocalSetLocationControl = DerivedLocationControl

				Instance Rules 
					if 	(LocalSetDropshipName										not = DropshipName
						or  (DropshipAddress entered
						and (LocalSetDropshipAddress.DeliveryAddress.AddressLine1	not = DropshipAddress.DeliveryAddress.AddressLine1
						or   LocalSetDropshipAddress.DeliveryAddress.AddressLine2	not = DropshipAddress.DeliveryAddress.AddressLine2
						or   LocalSetDropshipAddress.DeliveryAddress.AddressLine3	not = DropshipAddress.DeliveryAddress.AddressLine3
						or   LocalSetDropshipAddress.DeliveryAddress.AddressLine4	not = DropshipAddress.DeliveryAddress.AddressLine4
						or   LocalSetDropshipAddress.Municipality					not = DropshipAddress.Municipality
						or   LocalSetDropshipAddress.StateProvince 					not = DropshipAddress.StateProvince
						or   LocalSetDropshipAddress.PostalCode						not = DropshipAddress.PostalCode
						or   LocalSetDropshipAddress.County							not = DropshipAddress.County
						or   LocalSetDropshipAddress.Country						not = DropshipAddress.Country))
						or	(DropshipPhoneNumber entered
						and (LocalSetDropshipPhoneNumber.InternationalPrefix		not = DropshipPhoneNumber.InternationalPrefix
						or	 LocalSetDropshipPhoneNumber.SubscriberNumber			not = DropshipPhoneNumber.SubscriberNumber
						or	 LocalSetDropshipPhoneNumber.Extension					not = DropshipPhoneNumber.Extension))
						or	 LocalSetDropshipContact        						not = DropshipContact)
						LocalCreateNewPurchaseOrder = true
					else
					if  (LocalSetContract 	 		 								not = Contract)
						LocalCreateNewPurchaseOrder = true
					else
					if  (LocalSetRequestingLocation									not = PurchaseOrderInterface.RequestingLocation)
						LocalCreateNewPurchaseOrder = true

					include PurchaseOrderHeaderAndLineInterfacing

					if (LocalCreateNewPurchaseOrder)
						LocalSetDropshipName			= DropshipName
						LocalSetDropshipAddress			= DropshipAddress
						LocalSetDropshipPhoneNumber		= DropshipPhoneNumber
						LocalSetDropshipContact			= DropshipContact


		ProcessLocationControl	is a Set Action
			restricted
			Parameters
				PrmCompany						is a PurchasingCompany
				PrmFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmPOInterfaceResult			is a POInterfaceResult
				PrmVendor						is like Vendor
				PrmPurchaseFromLocation			is like VendorLocation
				PrmByLocation					is Boolean
			Local Fields
				LocalSetPOInterfaceResult		is a POInterfaceResult
				LocalSetPurchaseOrder			is a PurchaseOrder view
				LocalSetPurchaseOrderLine		is a PurchaseOrderLine view
				LocalSetSourceOrigin			is like SourceDocumentOrigin
				LocalSetSourceCompany			is like InventoryCompany
				LocalSetSourceNumeric			is like SourceDocumentNumeric
				LocalSetRequestingLocation		is a RequestingLocation
				LocalSetItem					is like Item
		   		LocalSetContract				is like Contract
				LocalSetTermsCode				is like TermsCode
				LocalSetCnCode					is like ConsignCode
				ConvertToQuantityDistribution	is Boolean
		   		LocalSetErrorReceived			is Boolean
		   		LocalTransactionErrorMessage	is Alpha 150
		   		LocalSetLastOrigin 				is like SourceDocumentOrigin
		   		LocalSetLastDocument			is like SourceDocumentNumeric
				LocalSetLocationControl			is a LocationControl
				LocalSetLineHasAOC				is Boolean
			Accumulators
				LocalSetProcessedCount
				LocalSetRejectedCount
				LocalSetPurchaseOrderCount
			Instance Selection
				where (Company					= PrmCompany
				and	   InterfaceRunID 			= PrmPOInterfaceResult)
			Sort Order
				Company
				Vendor
				PurchaseFromLocation
				Contract
				TransactionCurrencyCode
				SortBuyer
				PurchaseOrderInterface.OperatingCompany
				SortRequestingLocation
				ShipToLocation
				POCode
				ProcessLevel
				SortSourceDocument
				Item
				PurchaseOrderInterface.RequestingLocation
				PurchaseOrderInterface.SourceDocumentOrigin
				PurchaseOrderInterface.SourceDocumentNumeric
				PurchaseOrderInterface.SourceDocumentAlpha
				PurchaseOrderInterface.LineNumber

			Action Rules
				Empty Set Rules
				Set Rules
					Entrance Rules

						LocalSetPOInterfaceResult			= PrmPOInterfaceResult
					Exit Rules
						include ProcessExitInterfaceSet

				PurchaseFromLocation Set Rules
					Entrance Rules
						LocalSetLocationControl = DerivedLocationControl

				Instance Rules
					include PurchaseOrderHeaderAndLineInterfacing




		UpdateSelection	is a Set Action
			restricted

		CombineRequisitions is a Set Action
			restricted

		CreatePOByRequestingLocation is a Set Action
			restricted

		CreateWithoutCombiningRequisition is a Set Action
			restricted

        ProcessSingleSource    is a Set Action
            restricted

	
		CreateOrUpdatePurchaseOrderLineDistributionFromBatch is an Instance Action
			restricted					
			Parameters
				PrmPurchaseOrder				is like PurchaseOrder
				PrmPurchaseOrderLine			is like PurchaseOrderLine
				PrmCombineLines                 is Boolean
			Parameter Rules
				PrmPurchaseOrder
					required
				PrmPurchaseOrderLine
					required
			Local Fields
				LocalSetPurchaseOrder					is a PurchaseOrder
				ConvertToQuantityDistribution			is Boolean
			Action Rules
			    if (PrmCombineLines
			    and PurchaseOrderInterface.SourceDocumentOrigin.Requisitions
			    and RequisitionLineRel.DistributionBy.ByPercent)
					ConvertToQuantityDistribution = true
			    	
				LocalInvokedFromBatch	= true
				LocalPurchaseOrder 		= PrmPurchaseOrder
				LocalSetPurchaseOrder	= LocalPurchaseOrder
				LocalPurchaseOrderLine 	= PrmPurchaseOrderLine
				include CreateOrUpdatePurchaseOrderLineDistribution
		

