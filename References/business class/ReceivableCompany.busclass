ReceivableCompany is a BusinessClass
	owned by ar
	prefix is ACO
	classic name is ARCOMP

	Ontology
		symbolic key is ReceivableCompany
			classic set name is ACOSET1


	Patterns
		implements StaticJava
		disable AuditIndex


	Persistent Fields

		CustomerGroupField
		Name
		PostalAddress									is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY
			classic name for PostalAddress.StateProvince is STATE
			classic name for PostalAddress.PostalCode is ZIP
			classic name for PostalAddress.Country is COUNTRY-CODE
			classic name for PostalAddress.Region is REGION
		PhoneNumber										is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.SubscriberNumber is PHONE-NMBR
		FaxNumber 
			holds pii
			classic name for FaxNumber.SubscriberNumber is FAX-NMBR
		LastChargebackNumber							is Numeric size 7
			disable Auditing	
			classic name is CHRG-BACK-NBR
		LastProfromaTaxInvoiceNumber					is Numeric size 7
			disable Auditing	
		TransBatchNumbering								is Boolean
			classic name is INV-BTCH-FL
		LastAutoTransBatchNumber						is a BatchNumber
			disable Auditing	
			classic name is INV-BTCH-NBR
		TransBatchTotalBalancing						is Boolean
			classic name is INV-BTCH-TL
		PaymentBatchNumbering							is Boolean
			classic name is AUTO-BTCH-FL
		LastPaymentAutoBatchNumber						is a BatchNumber
			disable Auditing	
			classic name is AUTO-BAT-NBR
		PaymentBatchTotalBalancing						is Boolean
			classic name is BTCH-CNTRL-TL
		LastChargebackBatchNumber						is a BatchNumber
			disable Auditing	
			classic name is SUMM-BTCH-NBR
		LastRTMPaymentNumber							is Numeric size 7
			disable Auditing	
			classic name is LAST-RTM-NBR
		LastConvertedPaymentBatchNbr					is a BatchNumber
			disable Auditing	
			classic name is LAST-CONV-BTCH
		CustomerRiskCode								is a RiskCd
			classic name is RISK-CD
		AutomaticMemoApplication						is Boolean
			classic name is OFFSET-FL
		ReceivableGeneralLedgerCode
			classic name is AR-CODE
			default label is "ReceivableGlobalLedgerCode"
		ReceivedNotAppliedReceivableGeneralLedgerCode	is a ReceivableGeneralLedgerCode
			sql name is RNAReceivableGeneralLedgerCode
			classic name is NOT-APPLD-CD
			default label is "ReceivedNotAppliedReceivableGlobalLedgerCode"
		PrepaymentReceivableGeneralLedgerCode			is a ReceivableGeneralLedgerCode
			sql name is PReceivableGeneralLedgerCode
			classic name is PRE-PAY-CODE
			default label is "PrepaymentReceivableGlobalLedgerCode"
		ProformaPrepaymentReceivableGeneralLedgerCode	is a ReceivableGeneralLedgerCode
			default label is "ProformaPrepaymentReceivableGlobalLedgerCode"
		ProformaTaxInvoiceCode							is a ReceivableGeneralLedgerCode
		CustomerDeletRetentionMonths					is Numeric size 3
			classic name is CUST-RETEN
		AgeCreditsRule									is AlphaUpper size 1
			classic name is AGE-CREDITS
			States
				AgedToLastDebitColumn	value is "L"
				AgedInCurrentColumn		value is "N"
				AgedRespectiveToDate	value is "R"
		AgePaymentsRule									is AlphaUpper size 1
			classic name is AGE-PYMNT
			States
				AgedToLastDebitColumn	value is "L"
				AgedInCurrentColumn		value is "N"
				AgedRespectiveToDate	value is "R"
		AgeDisputesRule									is AlphaUpper size 1
			classic name is AGE-DISPUTES
			States
				AgedInCurrentColumn		value is "N"
				AgeByTransactionDate	value is "Y"
		AgingMethod										is AlphaUpper size 1
			classic name is AGE-TYPE
			States
				AgeByDueDate			value is "D"
				AgeByTransactionDate	value is "T"
		CurrentAgingPeriod								is an AgePeriods
			classic name is AGE-CURRENT
		AgePeriodses									is an AgePeriodsX4InArcomp
			classic name is AGE-PERIODS
		DisputedTransFinanceCharged						is Boolean
			classic name is DISPUTES-FIN










		CashOperatorRequired							is Boolean
			classic name is AUDIT-APP-FL
		TransactionOperatorRequired						is Boolean
			classic name is AUDIT-MEMO-FL
		ApplicationReviewRequired						is Boolean
			classic name is APP-REVIEW-FL
		ApplicationDiscountGraceDays					is a DiscGracePd
			classic name is DISC-GRACE-PD
		LatePaymentAndFinanceCharges					is AlphaUpper size 1
			classic name is LATE-PAY-FL
			States
				None				value is blank
				Both				value is "B"
				FinanceCharges		value is "F"
				LatePaymentCharges	value is "L"
		FinanceChargeCalculationMethod					is AlphaUpper size 1
			classic name is FIN-CALC-TYPE
			States
				CalculatePerTransaction	value is "D"
				NetBalanceCalculation	value is "N"
		LastFinanceChargeNumber							is Numeric size 7
			disable Auditing	
			classic name is FIN-AUTO-NBR
		FinanceChargeCode
			classic name is FIN-CHRG-CD
		FinanceChargeDueDateGraceDays					is a FinGracDays
			classic name is FIN-GRAC-DAYS
		MinimumFinanceChargeAmount						is a FinMinChrg
			classic name is FIN-MIN-CHRG
		PrintFinanceChargeDocument						is Boolean
			classic name is FIN-DOC-PRNT
		FinanceChargeReceivableGeneralLedgerCode		is a ReceivableGeneralLedgerCode
			sql name is FCReceivableGeneralLedgerCode
			classic name is FIN-GL-CODE
			default label is "FinanceChargeReceivableGlobalLedgerCode"
		Currency
			classic name is CURRENCY-CD
		MultiCurrencyProcessing							is Boolean
			classic name is MULTI-CURR-FL
		CurrencyRateOverride							is a RateOvrFl
			classic name is RATE-OVR-FL
		TransactionCurrencyOverride						is Boolean
			classic name is INV-CUR-OVR
		VerifyGLDateWithinGLDateRange					is Boolean
			classic name is VERIFY-GLDATE
		DefaultApplicationDate							is AlphaUpper size 1
			classic name is DFLT-APP-DATE
			States
				PaymentCreditPostDate		value is "P"
				SystemDate					value is "S"
				LatestTransactionPostDate	value is "L"
		ReceivableHoldCode
			classic name is HOLD-CODE
		PaymentOverApplication							is Boolean
			classic name is OVER-APP-FL
		ApplyDisplayPastDueDiscount						is Boolean
			classic name is DISC-DSP-FL
		TransactionDueDateChangeAllowed					is Boolean
			sql name is TDueDateChangeAllowed
			classic name is UPD-DUE-DATE
		CompanySetUpIsIncomplete						is Boolean
			classic name is INCOMPLETE-FL
		BaseNumberOfDecimals
			classic name is BASE-ND
		TrasactionAgingDisplayDate						is AlphaUpper size 1
			classic name is DISPLAY-DATE
			States
				TransactionDate	value is "T"
				DueDate			value is "D"
		AgingTransactionSequence						is AlphaUpper size 1
			classic name is TRANS-SEQUENCE
			States
				TransactionNumber	value is "T"
				DueDate				value is "D"
		BillOfExchangeBankRisk							is Boolean
			classic name is BANK-RISK-OPT
		BillOfExchAcceptAccounting						is AlphaUpper size 1
			classic name is ACCEPT-ACCTING
			States
				NoGeneralLedgerUpdateRequiredAtAcceptance	value is "N"
					default label is "NoGlobalLedgerUpdateRequiredAtAcceptance"
				YesGeneralLedgerUpdateRequiredAtAcceptance	value is "Y"
					default label is "YesGlobalLedgerUpdateRequiredAtAcceptance"
		BOEAcceptanceReceivableGeneralLedgerCode		is a ReceivableGeneralLedgerCode
			sql name is BOEARGeneralLedgerCode
			classic name is DT-ACCPT-CODE
			default label is "BOEAcceptanceReceivableGlobalLedgerCode"
		BOEFinancialRevenueReceivableGeneralLedgerCode	is a ReceivableGeneralLedgerCode
			sql name is BOEFRRGeneralLedgerCode
			classic name is FIN-REV-CODE
			default label is "BOEFinancialRevenueReceivableGlobalLedgerCode"
		BOEFinancialExpenseReceivableGeneralLedgerCode	is a ReceivableGeneralLedgerCode
			sql name is BOEFERGeneralLedgerCode
			classic name is FIN-EXP-CODE
			default label is "BOEFinancialExpenseReceivableGlobalLedgerCode"
		BOEDishonoredExpenseReceivableGeneralLedgerCode	is a ReceivableGeneralLedgerCode
			sql name is BOEDERGeneralLedgerCode
			classic name is DIS-EXP-CODE
			default label is "BOEDishonoredExpenseReceivableGlobalLedgerCode"
		LastBillOfExchangeNumber						is a LastDraftNumber
			disable Auditing	
			classic name is LAST-DRAFT-NBR
		LastBOERemittanceNumber							is a RemitNumber
			disable Auditing	
			classic name is REMIT-NUMBER
		LastGroupedObligationNumber						is Numeric size 7
			disable Auditing	
			classic name is REASSIGN-NBR
		BillOfExchangeNumberingType						is AlphaUpper size 1
			classic name is DRAFT-NBR-OPT
			States
				AutomaticNumbering	value is "A"
				ManualNumbering		value is "M"
		DepositBankCode									is a BankTransactionCode
			classic name is DEP-INST-CODE
		RTMPaymentBankCode								is a BankTransactionCode
			classic name is RTM-INST-CODE
		DepositAdjustmentBankCode						is a BankTransactionCode
			classic name is ADJ-INST-CODE
		EFTDepositBankCode								is a BankTransactionCode
			classic name is EFT-INST-CODE
		EFTCreditPaymentBankCode						is a BankTransactionCode
			classic name is EFTPAY-INST-CD
		BOEDiscountRemittanceBankCode					is a BankTransactionCode
			classic name is DSC-REMIT-INST
		DetailGLTransPerPayment							is AlphaUpper size 1
			classic name is DTL-PAYMENT
			States
				NoDetailAccrualInterfacing	value is "N"
				YesDetailAccrualInterfacing	value is "Y"
		DetailGLTransPerApplication						is AlphaUpper size 1
			classic name is DTL-APPL
			States

				YesDetailAccrualInterfacing		value is "Y"
		DetailGLTransPerFinanceCharge					is AlphaUpper size 1
			classic name is DTL-FIN-CHRG
			States
				NoDetailAccrualInterfacing	value is "N"
				YesDetailAccrualInterfacing	value is "Y"
		ChargeMinimumFinanceCharge						is Boolean
			classic name is MINIMUM
		FinanceChargeCycle
			classic name is FIN-CYCLE
		TransactionHistoryDeletePeriods					is a HistPer
			sql name is THistoryDeletePeriods
			classic name is HIST-PER
		EFTDebitCompanyCashCode							is a CompanyCashCode
			context of EFTDebitCashCode
		EFTDebitCashCode								is a CashCode
			classic name is CASH-CODE
		EFTCreditCompanyCashCode						is a CompanyCashCode
			context of EFTCreditCashCode
		EFTCreditCashCode								is a CashCode
			classic name is CR-CASH-CODE
		EFTACHCompanyID									is AlphaUpper size 10
			classic name is ACH-COMP-ID
		LastEFTBalancingDebitMemoNbr					is Numeric size 7
			disable Auditing	
			classic name is LAST-EFT-NBR
		TransactionCurrencyDisplay						is AlphaUpper size 1
			classic name is CURR-DISPLAY
			States
				BaseCurrency		value is "B"
				TransactionCurrency	value is "T"
		EditPaymentRemitTransactions					is Boolean
			classic name is EDIT-REMIT
		SummarizeMultiLineTransactions					is Boolean
			classic name is SUM-LINE
		ThirdPartyPayer									is Boolean
			classic name is THIRD-PARTY
		FinanceChargeInterestRatesByDate				is AlphaUpper size 1
			sql name is FChargeInterestRatesByDate
			classic name is INT-BY-DATE-FL
			States
				YesCalculateFinanceChargesByInterestRatesByDate			value is "Y"
				CalculateFinanceChargesByFixedInterestRateOverDateRange	value is "N"
		LastDunningLetterCycleID						is a DunCycleId
			disable Auditing	
			classic name is DUN-CYCLE-ID
		DunningLetterCycleStatus						is AlphaUpper size 1
			classic name is DUN-CYCLE-STAT
			States
				DunningRecordsSelected	value is "1"
				PrintedOrCreatedCSVFile	value is "2"
				DunningHistoryProduced	value is "3"
				DunningCycleComplete	value is "4"
		IncludeBOETransInBalance						is Boolean
			classic name is OB-DRF-FL
		ProcessBOEOnRemittance							is Boolean
			classic name is REMIT-CNTL
		ApplicationDiscountTaxRecovery					is Boolean
			classic name is DISC-TAX-RCV
		LatePaymentChargeRounding						is Boolean
			classic name is LATE-CH-RND-FL
		VendorClass
			classic name is VEN-CLASS
		VendorCreateAndInterfaceToAP					is Boolean
			classic name is VEND-AR-TO-AP
		EnableElectronicFundsTransfer					is Boolean
			classic name is EFT-PROCESS
		EFTCalendar										is a SystemCalendar

		EFTDueDays										is a DueDays
			classic name is DUE-DAYS
		EFTDueDaysType									is AlphaUpper size 1
			classic name is DUE-TYPE
			States
				ActualDays	value is "A"
				BankDays	value is "M"
		EFTGLDays										is a GlDays
			classic name is GL-DAYS
		EFTGLDaysType									is AlphaUpper size 1
			classic name is GL-TYPE
			States
				ActualDays	value is "A"
				BankDays	value is "M"
		EFTDepositDays									is a DepositDays
			classic name is DEPOSIT-DAYS
		EFTDepositDaysType								is AlphaUpper size 1
			classic name is DEPOSIT-TYPE
			States
				ActualDays	value is "A"
				BankDays	value is "M"
		CustomerChangeAudit								is Boolean
			classic name is CUST-AUDIT
		NatAccountTransUpdateSource						is AlphaUpper size 1
			classic name is NA-TRAN-FL
			States
				TransactionsUpdatedInMaintenanceForm	value is "N"
				TransactionsUpdatedWithMassUpdateLogic	value is "Y"
		AllowRebateEntry								is Boolean
		CreditChargebackPrefix							is AlphaUpper size 2
			classic name is CREDIT-CB-PRFX
		LastCreditChargebackNumber						is Numeric size 7
			disable Auditing	
			classic name is CREDIT-CB-NBR
		InterfaceTransDistribCreate						is Boolean
			classic name is INTRF-DST-CREA
		InterfaceTransDistribSummary					is Boolean
			classic name is INTRF-DST-SUM
		VerifyDepoistDateGLDateRange					is Boolean
			classic name is VERIFY-DEP-DTE
		CreditAgencyReportingNumber						is a DunsNumber
			classic name is DUNS-NUMBER
		EmployerIdentificationNumber					is an EmpAcctNbr	 
			holds pii
			classic name is EIN
		FinanceChargeTransactionPrefix					is a FinalRank
			classic name is FIN-CHG-PRFX
		PeriodsPerYear									is Numeric 2
			States
				Twelve		value is "12"
				Thirteen	value is "13"
		PeriodOffset									is Numeric 2
		RequestDate										is Date
			disable Auditing	
		RequestedYear									is Numeric 4
			disable Auditing	
		RequestedPeriod									is Numeric 2
			disable Auditing	
		ProjectCreditMemoPrefix							is AlphaUpper size 5		
		ProjectInvoicePrefix							is AlphaUpper size 5		
		ProjectInvoiceNumber							is Numeric 12				
			disable Auditing	
		ProjectCreditNumber								is Numeric 12				
			disable Auditing	
		ProjectCreditDebitMemoReason					is a CreditDebitMemoReason	

		ICBillingDefaultProcessLevel					is a ReceivableProcessLevel
		ICBillingDefaultCustomer						is a Customer
		ICBillingDefaultCompanyCustomer					is a CompanyCustomer
		ICBillingDefaultCustomerShipTo					is a CustomerShipTo
		ICBillingInvoicePrefix							is AlphaUpper 2
		ICBillingInvoiceNumber							is Numeric 12
			disable Auditing	
		ICBillingDefaultCashCode						is a CashCode
		ICBillingDefaultCompanyCashCode					is a CompanyCashCode
			context of ICBillingDefaultCashCode
		ICBillingDefaultBankTransactionCode				is a BankTransactionCode
		ICBillingDefaultBankFeeCode						is a BankTransactionCode
		ICBillingReverseBankFeeCode						is a BankTransactionCode		
		ICBillingCreditMemoPrefix						is AlphaUpper 2
		ICBillingCreditMemoNumber						is Numeric 12
			disable Auditing	
		ICBillingDefaultCreditMemoReason				is a CreditDebitMemoReason
		IntercompanyBillingInvoice
		SLBillingDefaultProcessLevel					is a ReceivableProcessLevel 
		SLBillingInvoicePrefix							is AlphaUpper 2 			
		SubleaseBillingInvoiceTemplate												
		ExpandedAgingPeriods							is Boolean
		AgeFuture										is an AgePeriods
		RequirePaymentCashCodes							is Boolean
		LastPayablesInterfaceInvoice					is Numeric size 8
			disable Auditing	
		AllowZeroPayments								is Boolean
		UseIDM											is Boolean
			default label is "UseIDMTemplate"
		UseIDMForDunningLetter							is Boolean
			protected
			restricted
		IDMAdvancedDunningLetterTemplate				is a IDMOutputSettings
			default label is "AdvancedDunningLetter"
			protected
			restricted
		IDMBasicDunningLetterTemplate					is a IDMOutputSettings
			default label is "BasicDunningLetter"
			protected
			restricted
		UseIDMForARStatementPrint						is Boolean
			protected
			restricted
		IDMStatementPrintTemplate						is a IDMOutputSettings
			default label is "StatementPrint"
			restricted
			protected
		UseIDMForLatePaymentCharge						is Boolean
			protected
			restricted
		IDMLatePaymentChargeTemplate					is a IDMOutputSettings
			default label is "LatePaymentCharge"
			protected
			restricted
		IDMLatePaymentChargeTemplateNet					is a IDMOutputSettings
			default label is "LatePaymentChargeNet"
			protected
			restricted
		ProrateGainLossToDistributions					is Boolean
			default label is "ProrateGainLossAmountToDistributions"
		ApplyCashAcrossReceivableCompanies				is Boolean	
			default label is "ApplyCashAcrossReceivableCompanies"	
		PreventWriteOffBeforeTransactionGLDate			is Boolean	
			default label is "PreventWriteOffBeforeTransactionGLDate"	
		MarkedAsPaidOffsetAccount		is a FinanceCodeBlockFull	
			default label is "ReceivableMark_asPaidDefaultAccount"	
		MarkedAsPaidReceivableReason					is an ApplicationAdjustmentReason	
			default label is "Mark_asPaidReceivableReason"	

		UseBillFromFunctionalCurrency					is AlphaUpper 1
			States
				UseIntercompanyBillingGroupValue	value is blank
				Yes									value is "Y"
				No									value is "N"
		VoucherReference								is Boolean
			default label is "AssignVoucherReference"
		VoucherReferenceLastRunDate						is Date
			protected
			default label is "LastRunDate"
		VoucherReferenceFormat							is AlphaUpper 50
			Text Variables
				YearYYYY
				YearYY
				MonthMM
				999999999999
				000000000009
				999999
				000009
		VoucherReferenceReportingBasis					is a ReportingBasis
		IDMPaymentRequestNoticeTemplate					is a IDMOutputSettings
			protected
			restricted
		IntercompanyBillingInvoiceIDMTemplate			is an IDMOutputSettings
			protected
			restricted
		ParallelReferenceCheckDigit						is AlphaUpper 1
			States
				NoCheckDigit	value is blank
				MOD10			value is "T"
		ParallelReferenceFormat							is AlphaUpper 100
			Text Variables
				CustomerID
				InvoiceNumber
				Company
				ProcessLevel
				YearYYYY
				YearYY
		DetailPayablesInterface							is Boolean
		ClaimsAndLiabilitiesReporting					is Boolean
			default label is "ClaimsAndLiabilitiesReport"
		ThresholdAmount									is an InternationalAmount
			default label is "ReportThresholdAmount"
		ForeignTradePaymentReport						is Boolean
			default label is "ForeignTradeAndPaymentReport"
		ForeignTradePaymentAmount						is an InternationalAmount
			default label is "ReportThresholdAmount"
		ReceivablesStatementTemplate			is an IDMTemplate
			default label is "ReceivableStatement"
		BasicDunningLetterTemplate		  is an IDMTemplate
			default label is "BasicDunningLetter"
		UseEWayBillNumber					is Boolean
		AdvancedDunningLetterTemplate		is an IDMTemplate
			default label is "AdvancedDunningLetter"
		PaymentRequestNoticeTemplate		is an IDMTemplate
			default label is "PaymentRequestNotice"
		ReceivableInvoiceTemplate			is an IDMTemplate
			default label is "ReceivableInvoice"
		AllowRemittanceChanges							is Boolean
		AdministrativeFee								is Boolean
		AdminFeeReceivableGeneralLedgerCode				is a ReceivableGeneralLedgerCode
			default label is "AdminFeeCode"
		ReceivableStatementIDMEmailTemplate				is an IDMTemplate
			default label is "ReceivableStatement"
		ReceivableStatementIDMEmailSubject 				is Alpha size 255
			default label is "ReceivableStatement"	
			Text Variables
				CompanyName
				CustomerName
				AsOfDate
		BasicDunningLetterIDMEmailTemplate				is an IDMTemplate
			default label is "BasicDunningLetter"
		BasicDunningLetterIDMEmailSubject 				is Alpha size 255
			default label is "BasicDunningLetter"
			Text Variables
				CompanyName
				CustomerName
				PrintDate
		AdvancedDunningLetterIDMEmailTemplate				is an IDMTemplate
			default label is "AdvancedDunningLetter"
		AdvancedDunningLetterIDMEmailSubject 				is Alpha size 255
			default label is "AdvancedDunningLetter"
			Text Variables
				CompanyName
				CustomerName
				PrintDate				
		PaymentRequestNoticeIDMEmailTemplate			is an IDMTemplate
			default label is "PaymentRequestNotice"
		PaymentRequestNoticeIDMEmailSubject 			is Alpha size 255
			default label is "PaymentRequestNotice"
			Text Variables
				CompanyName
				CustomerName
				PrintDate		
		EFTNotificationPrintIDMTemplate					is an IDMTemplate
			default label is "EFTNotificationPrint"
		OverApplyInvoice								is Boolean 
		OverApplyInvoiceCreditPrefix					is AlphaUpper size 2
			default label is "OverApplyCreditMemoPrefix"	
		LastOverApplyInvoiceCreditNumber				is Numeric size 7
			disable Auditing	
			default label is "LastOverApplyCreditMemoNumber"
		OverApplyCreditDebitPrefix						is AlphaUpper size 2 
			default label is "OverApplyDebitMemoPrefix"
		LastOverApplyCreditDebitNumber					is Numeric size 7
			disable Auditing	
			default label is "LastOverApplyDebitMemoNumber"
		OverApplyReasonCode								is AlphaUpper size 4
		OverApplyReasonCodeDescription					is Alpha size up to 60
		AllowZeroPaymentAdjustments						is Boolean 
		EFTNotificationPrintIDMEmailTemplate			is an IDMTemplate
			default label is "EFTNotificationPrint"
		EFTNotificationPrintIDMEmailSubject 			is Alpha size 255
			default label is "EFTNotificationPrint"
			Text Variables
				CompanyName
				CustomerName
				PrintDate
		ReceivableInvoiceIDMEmailTemplate				is an IDMTemplate
			default label is "ReceivableInvoice"
		ReceivableInvoiceIDMEmailSubject 				is Alpha size 255
			default label is "ReceivableInvoice"
			Text Variables
				CompanyName
				CustomerName
				Transaction
				TransactionDate
		AllocateTaxPointPayment							is Boolean
		SelectFundDistributionSet						is Boolean 
		DetailedInvoiceAccrualDistributions				is Boolean
			default label is "AllowDetailedInvoiceAccrualDistributions"
		DetailedCashDistributions						is Boolean
			default label is "AllowDetailedCashDistributions"
		DetailedRNADistributions						is Boolean
			default label is "AllowDetailedRNADistributions"
		DetailFinanceStructureOptions
		OutputXML										is Alpha size 1	
			States
				NoXML						value is blank
				Germany						value is "G"		
		ReceivableActivitySummaryRunning				is Boolean	
		AllowHistoricalApplicationReversal				is Boolean	
		IntercompanyBillingInvoiceFromEmailAddress		is an EmailAddress
			default label is "FromEmail"
		IntercompanyBillingInvoiceEmailTemplate			is an IDMTemplate
			default label is "EmailTemplate"
		IntercompanyBillingInvoiceEmailSubject			is Alpha size 255
			default label is "EmailSubject"
			Text Variables
				ReceivableCompanyNumber
				ReceivableCompanyName
				PayableCompanyNumber
				PayableCompanyName
				InvoiceNumber
				InvoiceDate
		RetainInvoiceToAP								is Boolean
		BillingInvoiceIDMTemplate						is an IDMTemplate
			default label is "BillingInvoiceTemplate"
		IntercompanyBillingInvoiceEmailRecipient		is Numeric 1
			default label is "EmailRecipient"
			States
				PayablesCompany				value is 0
				Customer					value is 1
		FrontEndSplitARDistributions					is Boolean
		SubleaseBillingInvoiceIDMTemplate				is an IDMTemplate
		SubleaseBillingInvoiceEmailTemplate				is an IDMTemplate
		SubleaseBillingInvoiceEmailSubject				is Alpha size 255
			Text Variables
				CompanyName
				CustomerName
				SubleaseBillingInvoice
				InvoiceDate
		InvoiceEntryTemplate 							is Numeric 1 
			States
				Standard          		value is 0
                Expanded          		value is 1
		ReceivableInvoiceExpandedTemplate				is an IDMTemplate
			default label is "ReceivableInvoiceExpanded"
		ReceivableInvoiceExpandedIDMEmailTemplate		is an IDMTemplate
			default label is "ReceivableInvoiceExpanded"
		CreateInvoiceDetailsPerLine						is Boolean 
		AutomaticManualInvoiceNumbering					is Boolean 
		ManualInvoicePrefix 							is AlphaUpper size 5 
		ManualInvoiceNumber 							is Numeric size 12 
			disable Auditing
		ManualMemoPrefix 								is AlphaUpper size 5 
		ManualMemoNumber 								is Numeric size 12 
			disable Auditing
		AutoCashAlgorithmVariance						is like InternationalAmount
		AutoCashAlgorithmReasonType						is a ReceivableReasonType
		AutoCashAlgorithmReasonCode 					is a ReceivableReason
		AutoCashAlgorithmMaximunInvoices 				is Numeric size 1
		AutoCashAlgorithmCombination					is Numeric size 1
		AllowUnreleasedPaymentApplications				is Boolean		
		OrganizationIdentifier 							is AlphaUpper size 10		
		AllowPrepaymentTax								is Boolean					
		PrepaymentTaxCode								is a TaxCode				
		PrepaymentTaxControlGLAccount					is a FinanceCodeBlockFull	

		PaymentReceiptIDMTemplate						is an IDMTemplate
			default label is "PaymentReceipt"
		PaymentReceiptIDMEmailTemplate					is an IDMTemplate
			default label is "PaymentReceipt"
		PaymentReceiptIDMEmailSubject					is Alpha size 255
			default label is "PaymentReceipt"
			Text Variables
				Company
				CompanyName
				Customer
				CustomerName
				PaymentNumber
				DepositDate
		GenerateIDMPaymentReceiptUponRelease			is Boolean
		AllowIDMPrepaymentReceiptsOnly					is Boolean
		GenerateIDMReceivableInvoiceUponRelease			is Boolean
		InterfaceUnreleasedInvoices 					is Boolean	
		AllowManualChargebackInvoiceNumbering				is Boolean
		CompanyCustomerReceivableGlobalLedgerForChargeback	is Boolean
			default label is "UseCompanyCustomerReceivableGlobalLedgerForChargeback"
		CompanyTotal									is an InternationalAmount
			precision is BaseNumberOfDecimals
			disable Auditing
		BalanceConversionResult							is a ReceivablesJobResult 
			disable Auditing
		EFTTraceCounter									is Numeric size 7
			disable Auditing
		LanguageCode									is an IsoLocale	
		ApprovalCode			

	Local Fields
		ValidateReceivablePrefix
		PartialPeriod									is Decimal size 4.2
		LocalPrefix										is AlphaUpper 5
		LocalInvoiceType								is like ReceivableInvoiceType
		LocalThreeCharacterPrefixEdit					is Boolean
		LocalFiveCharacterPrefixEdit					is Boolean						
		LocalEditGenericCharacterNumberPrefix			is Boolean
		LocalSystemAccount								is a SystemAccount
		LocalICBillingDefaultCustomer					is like Customer
		I1												is Numeric 3
		LocalAgingCode									is a AgingCode
		LocalYear										is Year
		LocalSampleVoucherReference						is AlphaUpper 50
			Text Variables
				YearYYYY		value is DerivedCurrentDate year
				YearYY			value is DerivedYear[3:4]
				MonthMM			value is DerivedPaddedMonth
				999999999999	value is MessageSequence12
				000000000009	value is MessageZeroPaddedSequenceNum12
				999999			value is MessageSequence6
				000009			value is MessageZeroPaddedSequenceNum6
		LocalAsOfDateIDM								is Date
		LocalCustomerIDM								is like Customer
		LocalPrintDateIDM								is Date
		LocalReceivableOperator							is like ReceivableOperator
		LocalSampleParallelReference					is AlphaUpper 100
			Text Variables
				CustomerID		value is DerivedSampleCustomerID
				InvoiceNumber	value is DerivedSampleInvoice
				Company			value is DerivedSampleCompany
				ProcessLevel	value is DerivedSampleProcessLevel
				YearYYYY		value is DerivedYear
				YearYY			value is DerivedYear[3:4]
		LocalBasicDunningLetterIDMEmailSubject 			is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "John Doe"
				PrintDate		value is current corporate date
		LocalAdvancedDunningLetterIDMEmailSubject		is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "Jane Doe"
				PrintDate		value is current corporate date
		LocalReceivableStatementIDMEmailSubject			is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "John Doe"
				AsOfDate		value is current corporate date
		LocalPaymentRequestNoticeIDMEmailSubject		is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "Jane Doe"
				PrintDate		value is current corporate date
		LocalEFTNotificationPrintIDMEmailSubject		is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "John Doe"
				PrintDate		value is current corporate date				
		LocalReceivableInvoiceIDMEmailSubject		is Alpha size 255 
			holds pii
			Text Variables
				CompanyName		value is Name	 
				CustomerName	value is "John Doe"
				Transaction		value is "M212103131"
				TransactionDate	value is current corporate date			
		LocalCompanyGroup			is a GeneralLedgerCompanyGroup
		LocalIntercompanyBillingInvoiceEmailSubject is Alpha size 255
			Text Variables
				ReceivableCompanyNumber	 value is Company
				ReceivableCompanyName	 value is Name
				PayableCompanyNumber 	 value is "1022"
				PayableCompanyName		 value is Name
				InvoiceNumber			 value is "IC90986"
				InvoiceDate 			 value is current corporate date
				
		LocalSubleaseBillingInvoiceEmailSubject is Alpha size 255
			Text Variables
				CompanyName				 value is Name
				CustomerName			 value is "John Doe"
				SubleaseBillingInvoice 	 value is "1022"
				InvoiceDate 			 value is current corporate date
		
		LocalPaymentReceiptIDMEmailSubject is Alpha size 255
			Text Variables
				Company					value is Company
				CompanyName				value is Name
				Customer				value is "1"			
				CustomerName			value is "John Doe"
				PaymentNumber		 	value is "1022"
				DepositDate 			value is current corporate date
	Transient Fields

		RGLCode									is like ReceivableGeneralLedgerCode
		ReceivedNotAppliedRGLCode				is like ReceivableGeneralLedgerCode
		PrepaymentRGLCode						is like ReceivableGeneralLedgerCode
		FinanceChargeRGLCode					is like ReceivableGeneralLedgerCode
		BOEAcceptanceRGLCode					is like ReceivableGeneralLedgerCode
		BOEFinancialRevenueRGLCode				is like ReceivableGeneralLedgerCode
		BOEFinancialExpenseRGLCode				is like ReceivableGeneralLedgerCode
		BOEDishonoredExpenseRGLCode				is like ReceivableGeneralLedgerCode
		

		RGLCodeDescription						is a Description
		ReceivedNotAppliedRGLCodeDescription	is a Description
		PrepaymentRGLCodeDescription			is a Description
		FinanceChargeRGLCodeDescription			is a Description
		BOEAcceptanceRGLCodeDescription			is a Description
		BOEFinancialRevenueRGLCodeDescription	is a Description
		BOEFinancialExpenseRGLCodeDescription	is a Description
		BOEDishonoredExpenseRGLCodeDescription	is a Description

		RGLCodeAccount							is a FinanceCodeBlock	
		ReceivedNotAppliedRGLCodeAccount		is a FinanceCodeBlock	
		PrepaymentRGLCodeAccount				is a FinanceCodeBlock	
		FinanceChargeRGLCodeAccount				is a FinanceCodeBlock	
		BOEAcceptanceRGLCodeAccount				is a FinanceCodeBlock	
		BOEFinancialRevenueRGLCodeAccount		is a FinanceCodeBlock	
		BOEFinancialExpenseRGLCodeAccount		is a FinanceCodeBlock	
		BOEDishonoredExpenseRGLCodeAccount		is a FinanceCodeBlock	
		ICBClearingAccount						is a FinanceCodeBlock
		SampleVoucherReferenceNumber			is AlphaUpper 50
			derive value from DerivedStructuredVoucherReferenceNumber
		TransientAdministrativeFee				is Boolean
			derive value from AdministrativeFee
		AdminFeeCode							is like ReceivableGeneralLedgerCode
		AdminFeeCodeDescription					is a Description
		AdminFeeCodeAccount						is a FinanceCodeBlock


	Derived Fields

		AffiliateOwnershipRequiredMessage	is a MessageField
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,AffiliateOwnershipMustBeDefinedForEachCompanyCustomerWhereAffiliateFlagIsEnabled"

		CompanyEntityCountryRequiredMessage	is a MessageField
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,_Country/\JurisdictionInAddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

		AffiliateOwnershipRequiredMsg	is a MessageField
			restricted
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,AffiliateOwnershipMustBeDefinedForEachCompanyCustomerWhereAffiliateFlagIsEnabled"

		CompanyEntityCountryRequiredMsg	is a MessageField
			restricted
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,_Country/\JurisdictionInAddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

		ClaimsAndLiabilitiesRequireMsg is a DerivedField
			type is MessageField
			restricted
			if (DisplayCompanyEntityCountryRequiredMsg)
				return CompanyEntityCountryRequiredMsg
			else
				return AffiliateOwnershipRequiredMsg

		ActorSecurityGroup is a DerivedField
			type is like CompanySecurityGroup
			return actor.context.CompanySecurityGroup

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforAccountingEntity"

		ContextMessageText is a MessageField
			restricted
			"Company<Company>"

		DefaultReceivableProcessLevel is a DerivedField
			type is like ReceivableProcessLevel
			restricted
			return first DefaultProcessLevelRel.ReceivableProcessLevel

		ReceivableCompanyAndName is a MessageField	
			restricted	
			default label is "Company"
			"<Name>_(<Company>)"

		RepresentativeText is a StringField
			type is Text
			default label is "Company"
			Company " - " Name

		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			return RepresentativeText


		DerivedOperator is a DerivedField
			type is like ReceivableOperator
			restricted
			if (!CashOperatorRequired)
				return actor

		ICBClearingAccountBuilt is a DerivedField
			type is Boolean
			ICBClearingAccount = ICBillingDefaultProcessLevel.AccountingUnitFinanceCodeBlock
			if (!ICBClearingAccount.Ledger entered)
				ICBClearingAccount.Ledger = Company.CustomerBusinessGroup.FinanceEnterpriseGroup.CoreLedger
			ICBClearingAccount.ToAccountingEntity			 = Company.AccountingEntity
			LocalSystemAccount								 = SystemAccount.IntercompanyBillingClearing
			ICBClearingAccount.GeneralLedgerChartAccount	 = first SystemAccountRel.GeneralLedgerChartAccount
			return true

		DerivedCurrencyTable is a DerivedField
			type is like CurrencyTable
			if  (CompanySystemClosingControlRel exists)
				return CompanySystemClosingControlRel.CurrencyTable
			else
				return Company.CurrencyTable

		DerivedLastPaymentAutoBatchNumber is a DerivedField 
			type is like BatchNumber
			return LastPaymentAutoBatchNumber
		
		DerivedLastAutoTransBatchNumber is a DerivedField 
			type is like BatchNumber
			return LastAutoTransBatchNumber

		DerivedLastManualInvoiceNumber is a DerivedField
			type is Numeric 12
			return ManualInvoiceNumber

		DerivedLastManualMemoNumber is a DerivedField
			type is Numeric 12
			return ManualMemoNumber

		DerivedICBillingInvoiceNumber is a DerivedField 
			type is Numeric 12
			return ICBillingInvoiceNumber

		DerivedICBillingCreditMemoNumber is a DerivedField 
			type is Numeric 12
			return ICBillingCreditMemoNumber

		DerivedLastChargebackBatchNumber is a DerivedField 
			type is like BatchNumber
			return LastChargebackBatchNumber

		DerivedLastChargebackNumber is a DerivedField 
			type is Numeric size 7
			return LastChargebackNumber

		DerivedLastRTMPaymentNumber is a DerivedField 
			type is Numeric size 7
			return LastRTMPaymentNumber

		DerivedLastGroupedObligationNumber is a DerivedField 
			type is Numeric size 7
			return LastGroupedObligationNumber

		DerivedCreditChargebackPrefix is a DerivedField 
			type is AlphaUpper size 2
			return CreditChargebackPrefix

		DerivedLastCreditChargebackNumber is a DerivedField 
			type is Numeric size 7
			return LastCreditChargebackNumber

		DerivedLastDunningLetterCycleID is a DerivedField 
			type is like DunCycleId
			return LastDunningLetterCycleID

		DerivedLastEFTBalancingDebitMemoNbr is a DerivedField 
			type is Numeric size 7
			return LastEFTBalancingDebitMemoNbr

		DerivedLastOverApplyInvoiceCreditNumber is a DerivedField 
			type is Numeric size 7
			return LastOverApplyInvoiceCreditNumber

		DerivedLastOverApplyCreditDebitNumber is a DerivedField 
			type is Numeric size 7
			return LastOverApplyCreditDebitNumber

		DerivedLastFinanceChargeNumber is a DerivedField 
			type is Numeric size 7
			return LastFinanceChargeNumber

		DerivedLastBOERemittanceNumber is a DerivedField 
			type is like RemitNumber
			return LastBOERemittanceNumber

		DerivedLastBillOfExchangeNumber is a DerivedField 
			type is like LastDraftNumber
			return LastBillOfExchangeNumber

		DerivedProjectCreditNumber is a DerivedField 
			type is Numeric size 12
			return ProjectCreditNumber

		DerivedProjectInvoiceNumber is a DerivedField 
			type is Numeric size 12
			return ProjectInvoiceNumber

		ZeroFilledLastChargeback is a ConditionalField
			type is Alpha 7
			restricted
			if (LastChargebackNumber < 10)
				"000000" + LastChargebackNumber
			else
			if (LastChargebackNumber < 100)
				"00000" + LastChargebackNumber
			else
			if (LastChargebackNumber < 1000)
				"0000" + LastChargebackNumber
			else
			if (LastChargebackNumber < 10000)
				"000" + LastChargebackNumber
			else
			if (LastChargebackNumber < 100000)
				"00" + LastChargebackNumber
			else
			if (LastChargebackNumber < 1000000)
				"0" + LastChargebackNumber
			else
				LastChargebackNumber

		ZeroFilledLastProfromaTaxInvoiceNumber is a ConditionalField
			type is Alpha 7
			restricted
			if (LastProfromaTaxInvoiceNumber < 10)
				"000000" + LastProfromaTaxInvoiceNumber
			else
			if (LastProfromaTaxInvoiceNumber < 100)
				"00000" + LastProfromaTaxInvoiceNumber
			else
			if (LastProfromaTaxInvoiceNumber < 1000)
				"0000" + LastProfromaTaxInvoiceNumber
			else
			if (LastProfromaTaxInvoiceNumber < 10000)
				"000" + LastProfromaTaxInvoiceNumber
			else
			if (LastProfromaTaxInvoiceNumber < 100000)
				"00" + LastProfromaTaxInvoiceNumber
			else
			if (LastProfromaTaxInvoiceNumber < 1000000)
				"0" + LastProfromaTaxInvoiceNumber
			else
				LastProfromaTaxInvoiceNumber

		ZeroFilledLastCreditChargeback is a ConditionalField
			type is Alpha 7
			restricted
			if (LastCreditChargebackNumber < 10)
				"000000" + LastCreditChargebackNumber
			else
			if (LastCreditChargebackNumber < 100)
				"00000" + LastCreditChargebackNumber
			else
			if (LastCreditChargebackNumber < 1000)
				"0000" + LastCreditChargebackNumber
			else
			if (LastCreditChargebackNumber < 10000)
				"000" + LastCreditChargebackNumber
			else
			if (LastCreditChargebackNumber < 100000)
				"00" + LastCreditChargebackNumber
			else
			if (LastCreditChargebackNumber < 1000000)
				"0" + LastCreditChargebackNumber
			else
				LastCreditChargebackNumber

		ZeroFilledLastOverApplyInvoiceCreditNumber is a ConditionalField
			type is Alpha 7
			restricted
			if (LastOverApplyInvoiceCreditNumber < 10)
				"000000" + LastOverApplyInvoiceCreditNumber
			else
			if (LastOverApplyInvoiceCreditNumber < 100)
				"00000" + LastOverApplyInvoiceCreditNumber
			else
			if (LastOverApplyInvoiceCreditNumber < 1000)
				"0000" + LastOverApplyInvoiceCreditNumber
			else
			if (LastOverApplyInvoiceCreditNumber < 10000)
				"000" + LastOverApplyInvoiceCreditNumber
			else
			if (LastOverApplyInvoiceCreditNumber < 100000)
				"00" + LastOverApplyInvoiceCreditNumber
			else
			if (LastOverApplyInvoiceCreditNumber < 1000000)
				"0" + LastOverApplyInvoiceCreditNumber
			else
				LastOverApplyInvoiceCreditNumber
				
		ZeroFilledLastOverApplyCreditDebitNumber is a ConditionalField
			type is Alpha 7
			restricted
			if (LastOverApplyCreditDebitNumber < 10)
				"000000" + LastOverApplyCreditDebitNumber
			else
			if (LastOverApplyCreditDebitNumber < 100)
				"00000" + LastOverApplyCreditDebitNumber
			else
			if (LastOverApplyCreditDebitNumber < 1000)
				"0000" + LastOverApplyCreditDebitNumber
			else
			if (LastOverApplyCreditDebitNumber < 10000)
				"000" + LastOverApplyCreditDebitNumber
			else
			if (LastOverApplyCreditDebitNumber < 100000)
				"00" + LastOverApplyCreditDebitNumber
			else
			if (LastOverApplyCreditDebitNumber < 1000000)
				"0" + LastOverApplyCreditDebitNumber
			else
				LastOverApplyCreditDebitNumber

		DerivedCurrentDate is a DerivedField
			type is Date
			restricted
			return current corporate date

		DerivedYear is a DerivedField
			type is AlphaUpper size 4
			restricted
			return current year

		DerivedMonth is a DerivedField
			type is Numeric size 2
			restricted
			return DerivedCurrentDate month
			
		MessageSequence6 is a MessageField
			restricted
			"123456"

		MessageSequence12 is a MessageField
			restricted
			"123456789012"

		DerivedPaddedMonth is a DerivedField
			type is AlphaUpper 2
			restricted
			if (DerivedCurrentDate month < 10)
				DerivedPaddedMonth	= "0" + DerivedMonth
			else
				return DerivedCurrentDate month

		MessageZeroPaddedSequenceNum12 is a MessageField
			restricted
			"000000000001"

		MessageZeroPaddedSequenceNum6 is a MessageField
			restricted
			"000001"

		DerivedStructuredVoucherReferenceNumber is a DerivedField
			type is AlphaUpper size 50
			restricted
			LocalSampleVoucherReference				 = VoucherReferenceFormat
			DerivedStructuredVoucherReferenceNumber	 = LocalSampleVoucherReference text

		DerivedSampleInvoice  is a MessageField
			restricted
			"000000001"	

		DerivedSampleCustomerID	 is a MessageField
			restricted
			"123456789"

		DerivedSampleCompany		is a MessageField
			restricted
			"2222"

		DerivedSampleProcessLevel	is a MessageField
			restricted
			"33333"

		DerivedStructedParallelReference	is a DerivedField
			type is AlphaUpper size 100
			restricted
			LocalSampleParallelReference		=	ParallelReferenceFormat
			DerivedStructedParallelReference	=	LocalSampleParallelReference text
			if (!ParallelReferenceCheckDigit.NoCheckDigit)
				DerivedStructedParallelReference = DerivedStructedParallelReference + "X"

		DerivedBasicDunningIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalBasicDunningLetterIDMEmailSubject	=	BasicDunningLetterIDMEmailSubject
			return LocalBasicDunningLetterIDMEmailSubject text

		DerivedAdvancedDunningIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalAdvancedDunningLetterIDMEmailSubject	=	AdvancedDunningLetterIDMEmailSubject
			return LocalAdvancedDunningLetterIDMEmailSubject text

		DerivedReceivableStatementIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalReceivableStatementIDMEmailSubject		=	ReceivableStatementIDMEmailSubject
			return LocalReceivableStatementIDMEmailSubject text

		DerivedPaymentRequestNoticeIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalPaymentRequestNoticeIDMEmailSubject	=	PaymentRequestNoticeIDMEmailSubject
			return LocalPaymentRequestNoticeIDMEmailSubject text

		DerivedEFTNotificationPrintIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalEFTNotificationPrintIDMEmailSubject	=	EFTNotificationPrintIDMEmailSubject
			return LocalEFTNotificationPrintIDMEmailSubject text			

		DerivedReceivableInvoiceIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalReceivableInvoiceIDMEmailSubject		=	ReceivableInvoiceIDMEmailSubject
			return LocalReceivableInvoiceIDMEmailSubject text

		DerivedCreditAnalyst is a DerivedField 
			type is like Name
			holds pii
			return last CreditAnalystRel.Name

		DerivedCreditAnalystPhone is a DerivedField
			type is Alpha size 15
			return last CreditAnalystRel.PhoneNumber.SubscriberNumber	

		UserDefaultPrinter is a DerivedField
			type is like IDMPrinter
			if (UseIDM)
				return UserDefaultPrinterRel.IDMPrinter	

		DerivedIntercompanyBillingInvoiceEmailSubject is a DerivedField
			type is Alpha size 255
			LocalIntercompanyBillingInvoiceEmailSubject = IntercompanyBillingInvoiceEmailSubject
			return LocalIntercompanyBillingInvoiceEmailSubject text

		DerivedSubleaseBillingInvoiceEmailSubject is a DerivedField
			type is Alpha size 255
			restricted
			LocalSubleaseBillingInvoiceEmailSubject = SubleaseBillingInvoiceEmailSubject
			return LocalSubleaseBillingInvoiceEmailSubject text

		DerivedPaymentReceiptIDMEmailSubject is a DerivedField
			type is Alpha size 255
			restricted
			LocalPaymentReceiptIDMEmailSubject = PaymentReceiptIDMEmailSubject
			return LocalPaymentReceiptIDMEmailSubject text

	Rule Blocks
		ValidatePrefix
			initialize ValidateReceivablePrefix
			ValidateReceivablePrefix.EditReceivableCompany		 = Company
			ValidateReceivablePrefix.EditSystem					 = "AR"
			ValidateReceivablePrefix.EditReceivablePrefix		 = LocalPrefix
			ValidateReceivablePrefix.EditReceivableInvoiceType	 = LocalInvoiceType
			ValidateReceivablePrefix.EditThreeCharacterPrefix	 = LocalThreeCharacterPrefixEdit
			ValidateReceivablePrefix.EditFiveCharacterPrefix	 = LocalFiveCharacterPrefixEdit				
			ValidateReceivablePrefix.EditGenericCharacterNumberPrefix = LocalEditGenericCharacterNumberPrefix
			constraint (ValidateReceivablePrefix.ErrorNumber not entered)
				"<ValidateReceivablePrefix.ErrorMessage>"
			initialize LocalThreeCharacterPrefixEdit
			initialize LocalFiveCharacterPrefixEdit
			initialize LocalEditGenericCharacterNumberPrefix


	Field Rules


		PeriodsPerYear
			default to "12"
			required
		PeriodOffset
			if (PeriodsPerYear.Twelve)
				constraint (PeriodOffset <= 11 and PeriodOffset >= -11)
					"IfPeriodOffsetEntered,ValueMustBeLessThan12"	
			if (PeriodsPerYear.Thirteen)
				constraint (PeriodOffset <= 12 and PeriodOffset >= -12)
					"IfPeriodOffsetEntered,ValueMustBeLessThan13"

		Currency
			force default to Company.GeneralLedgerCompany.Currency
		BaseNumberOfDecimals
			force default to Company.GeneralLedgerCompany.Currency.NumberOfDecimals
		RGLCode



		RGLCodeDescription



		RGLCodeAccount
			constraint (RGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"









					
		ReceivedNotAppliedRGLCodeDescription



		ReceivedNotAppliedRGLCode



		ReceivedNotAppliedRGLCodeAccount
			constraint (ReceivedNotAppliedRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"










					
		PrepaymentRGLCode



		PrepaymentRGLCodeDescription



		PrepaymentRGLCodeAccount
			constraint (PrepaymentRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"











					
		FinanceChargeRGLCode




		BOEAcceptanceRGLCode
			if (BOEAcceptanceRGLCodeDescription entered
			or	BOEAcceptanceRGLCodeAccount entered)
				required
					"B\O\EAcceptanceCodeRequiredIfGlobalLedgerAccount_orDescriptionEntered"
		BOEFinancialRevenueRGLCode
			if (BOEFinancialRevenueRGLCodeDescription entered
			or	BOEFinancialRevenueRGLCodeAccount entered)
				required
					"FinancialRevenueCodeRequiredIfGlobalLedgerAccount_orDescriptionEntered"
		BOEFinancialExpenseRGLCode
			if (BOEFinancialExpenseRGLCodeDescription entered
			or	BOEFinancialExpenseRGLCodeAccount entered)
				required
					"FinancialExpenseCodeRequiredIfGlobalLedgerAccount_orDescriptionEntered"
		BOEDishonoredExpenseRGLCode
			if (BOEDishonoredExpenseRGLCodeDescription entered
			or	BOEDishonoredExpenseRGLCodeAccount entered)
				required
					"DishonoredCodeRequiredIfGlobalLedgerAccount_orDescriptionEntered"

		FinanceChargeRGLCodeAccount
			constraint (FinanceChargeRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"






		BOEAcceptanceRGLCodeAccount
			constraint (BOEAcceptanceRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"
			if (BOEAcceptanceRGLCode entered
			or	BOEAcceptanceRGLCodeDescription entered)
				required
					"GlobalLedgerAccountRequiredIfB\O\EAcceptanceCode_orDescriptionEntered"
		BOEFinancialRevenueRGLCodeAccount
			constraint (BOEFinancialRevenueRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"
			if (BOEFinancialRevenueRGLCode entered
			or	BOEFinancialRevenueRGLCodeDescription entered)
				required
					"GlobalLedgerAccountRequiredIfFinancialRevenueCode_orDescriptionEntered"
		BOEFinancialExpenseRGLCodeAccount
			constraint (BOEFinancialExpenseRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"
			if (BOEFinancialExpenseRGLCode entered
			or	BOEFinancialExpenseRGLCodeDescription entered)
				required
					"GlobalLedgerAccountRequiredIfFinancialExpenseCode_orDescriptionEntered"
		BOEDishonoredExpenseRGLCodeAccount
			constraint (BOEDishonoredExpenseRGLCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"
			if (BOEDishonoredExpenseRGLCode entered
			or	BOEDishonoredExpenseRGLCodeDescription entered)
				required
					"GlobalLedgerAccountRequiredIfDishonoredCode_orDescriptionEntered"

		FinanceChargeRGLCodeDescription
			if (FinanceChargeRGLCode entered
			or	FinanceChargeRGLCodeAccount entered)
				required
					"DescriptionRequiredIfFinanceG\LCode_orGlobalLedgerAccountEntered"
		BOEAcceptanceRGLCodeDescription
			if (BOEAcceptanceRGLCode entered
			or	BOEAcceptanceRGLCodeAccount entered)
				required
					"DescriptionRequiredIfB\O\EAcceptanceCode_orGlobalLedgerAccountEntered"
		BOEFinancialRevenueRGLCodeDescription
			if (BOEFinancialRevenueRGLCode entered
			or	BOEFinancialRevenueRGLCodeAccount entered)
				required
					"DescriptionRequiredIfFinancialRevenueCode_orGlobalLedgerAccountEntered"
		BOEFinancialExpenseRGLCodeDescription
			if (BOEFinancialExpenseRGLCode entered
			or	BOEFinancialExpenseRGLCodeAccount entered)
				required
					"DescriptionRequiredIfFinancialExpenseCode_orGlobalLedgerAccountEntered"
		BOEDishonoredExpenseRGLCodeDescription
			if (BOEDishonoredExpenseRGLCode entered
			or	BOEDishonoredExpenseRGLCodeAccount entered)
				required
					"DescriptionRequiredIfDishonoredCode_orGlobalLedgerAccountEntered"


		Name
			required

		CustomerGroupField

			required
			constraint (CustomerGroupField.CustomerGroup = Company.CustomerBusinessGroup)
				"CustomerGroup<CustomerGroupField.CustomerGroup>MustBeSameAsCustomerBusinessGroup<Company.CustomerBusinessGroup>OnGlobalLedgerCompany"

























		PaymentBatchNumbering
			default to true
			if (!PaymentBatchNumbering)
				constraint (LastPaymentAutoBatchNumber not entered)
					"CannotEnterBatchNumber;AutoNumberingOn"				  

			if (ICBillingDefaultProcessLevel entered)
				constraint (PaymentBatchNumbering)
					"AutomaticPaymentBatchNumberingMustBeCheckedIfProcessingIntercompanyBilling"

		PaymentBatchTotalBalancing
			default to true
			
		InterfaceTransDistribSummary
			if (InterfaceTransDistribSummary = "Y")
				constraint (InterfaceTransDistribCreate = "Y")

					"Interface_\Summarized_\Historical_\DistributionsMustBe_\'N';_\Interface_\Historical_\Distributions=_\'N'"

		TransBatchNumbering
			default to true
			if (!TransBatchNumbering)
				constraint (LastAutoTransBatchNumber not entered)
					"CannotEnterBatchNumber;AutoNumberingSet"				









		LastAutoTransBatchNumber






		VendorCreateAndInterfaceToAP
			if (!VendorCreateAndInterfaceToAP)
				constraint (VendorClass not entered)
					"DefaultVendorClassMustBeSpaces;InterfaceToPayablesNotChecked"
			if (VendorCreateAndInterfaceToAP)
				constraint (VendorClass entered)
					"DefaultVendorClassRequired;InterfaceToPayablesChecked"

			if (VendorCreateAndInterfaceToAP changed
			and !VendorCreateAndInterfaceToAP)
				constraint (ARToAPApplicationSelectRecordsRel not exist)
					"CannotTurnOffARToAPInterfaceAsInterfaceSelectedRecordsExist"

		DetailPayablesInterface
			if (DetailPayablesInterface)
				constraint (VendorCreateAndInterfaceToAP)
					"CannotCheckDetailPayablesInterfaceAsInterfaceToPayablesIsNotSetToTrue"
		
		RetainInvoiceToAP
			if (RetainInvoiceToAP)
				constraint (DetailPayablesInterface)
					"CannotCheck_\Retain_\InvoiceTo_\APAs_\Detail_\Payables_\InterfaceIsNotSetToTrue"			
					
		BillingInvoiceIDMTemplate
			constraint (BillingInvoiceIDMTemplate.IDMDocumentType.IntercompanyBillingInvoice)
				"InvalidTemplate"
				
			constraint (IntercompanyBillingInvoice not entered)
				"CanOnlySetUpOne_Billing_Invoice_Template"
				
		SubleaseBillingInvoiceIDMTemplate
			constraint (SubleaseBillingInvoiceIDMTemplate.IDMDocumentType.SubleaseBillingInvoice)
				"InvalidTemplate"

		PaymentReceiptIDMTemplate
			if (UseIDM)
				required

				constraint (PaymentReceiptIDMTemplate.IDMDocumentType.PaymentReceipt)
					"InvalidTemplate"
			else
				initialize
		
		GenerateIDMPaymentReceiptUponRelease
			initial value is true
		
		GenerateIDMReceivableInvoiceUponRelease
			initial value is true
				





		VerifyGLDateWithinGLDateRange
			required
			default to true







		TransactionHistoryDeletePeriods
			required
			default to 6 

		DepositBankCode
			required
			constraint (DepositBankCode.BankTransactionCode.BankTransactionType.BankService)
				"PaymentCodeMustBeBankServiceType"						 
			constraint (DepositBankCode.BankTransactionCode.TransactionType.CreditTransaction)
				"AccountBalanceTypeMust_=_\C"							  

		RTMPaymentBankCode
			required
			constraint (RTMPaymentBankCode.BankTransactionCode.BankTransactionType.BankService)
				"PaymentCodeMustBeBankServiceType"						 
			constraint (RTMPaymentBankCode.BankTransactionCode.TransactionType.DebitTransaction)
				"AccountBalanceTypeMust_=_\D"							  
				
		DepositAdjustmentBankCode
			required
			constraint (DepositAdjustmentBankCode.BankTransactionCode.BankTransactionType.BankService)
				"PaymentCodeMustBeBankServiceType"						 
			constraint (DepositAdjustmentBankCode.BankTransactionCode.TransactionType.DebitTransaction)
				"AccountBalanceTypeMust_=_\D"							  









		VendorClass
			if (VendorClass entered)
				constraint (VendorCreateAndInterfaceToAP)
					"DefaultVendorClassEntered;InterfaceToPayablesMustBeChecked"					













		MarkedAsPaidReceivableReason
			if (MarkedAsPaidOffsetAccount entered)
				required
					"MarkedAs_\Paid_\Offset_\Receivable_\ReasonIsRequiredWhenMarkedAs_\Paid_\Offset_\AccountIsEntered."
			if (MarkAsPaidReceivableReasonRelExists)
				required
					"MarkedAs_\Paid_\Receivable_\Reason_\CodeExists."


		ReceivableGeneralLedgerCode



		ReceivedNotAppliedReceivableGeneralLedgerCode



		PrepaymentReceivableGeneralLedgerCode











		CurrentAgingPeriod
			constraint (CurrentAgingPeriod >= 1)
				"NegativeValueNotAllowed"

			if (ExpandedAgingPeriods)
				required
					"CurrentDaysMustBeEntered"

		AgePeriodses
			default to CustomerGroupField.CustomerGroup.AgePeriodses

			if (AgePeriodses.AgePeriods[1] = 0
			and AgePeriodses.AgePeriods[2] = 0
			and AgePeriodses.AgePeriods[3] = 0
			and AgePeriodses.AgePeriods[4] = 0)
				AgePeriodses.AgePeriods[1] = 30
				AgePeriodses.AgePeriods[2] = 60
				AgePeriodses.AgePeriods[3] = 90
				AgePeriodses.AgePeriods[4] = 120

			if (ExpandedAgingPeriods
			and AgePeriodses.AgePeriods[5] = 0
			and AgePeriodses.AgePeriods[6] = 0
			and AgePeriodses.AgePeriods[7] = 0)
				AgePeriodses.AgePeriods[5] = 150
				AgePeriodses.AgePeriods[6] = 180
				AgePeriodses.AgePeriods[7] = 210

			constraint (AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[2]
			and		AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[3]
			and		AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[4])
				"AgingDaysMustBeInAscendingOrder"

			constraint (AgePeriodses.AgePeriods[1] >= 1)
				"AgingDaysMustBeInAscendingOrder"

			constraint (AgePeriodses.AgePeriods[2] < AgePeriodses.AgePeriods[3]
			and		AgePeriodses.AgePeriods[2] < AgePeriodses.AgePeriods[4])
				"AgingDaysMustBeInAscendingOrder"

			constraint (AgePeriodses.AgePeriods[2] >= 1)
				"AgingDaysMustBeInAscendingOrder"

			constraint (AgePeriodses.AgePeriods[3] < AgePeriodses.AgePeriods[4])
				"AgingDaysMustBeInAscendingOrder"

			constraint (AgePeriodses.AgePeriods[3] >= 1)
				"AgingDaysMustBeInAscendingOrder"

			if (ExpandedAgingPeriods)
				constraint (AgePeriodses.AgePeriods[5] entered
				and			AgePeriodses.AgePeriods[6] entered
				and			AgePeriodses.AgePeriods[7] entered)
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[5]
				and		AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[6]
				and		AgePeriodses.AgePeriods[1] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[2] < AgePeriodses.AgePeriods[5]
				and		AgePeriodses.AgePeriods[2] < AgePeriodses.AgePeriods[6]
				and		AgePeriodses.AgePeriods[2] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[3] < AgePeriodses.AgePeriods[5]
				and		AgePeriodses.AgePeriods[3] < AgePeriodses.AgePeriods[6]
				and		AgePeriodses.AgePeriods[3] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[4] < AgePeriodses.AgePeriods[5]
				and		AgePeriodses.AgePeriods[4] < AgePeriodses.AgePeriods[6]
				and		AgePeriodses.AgePeriods[4] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[4] >= 1)
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[5] < AgePeriodses.AgePeriods[6]
				and		AgePeriodses.AgePeriods[5] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[5] >= 1)
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[6] < AgePeriodses.AgePeriods[7])
					"AgingDaysMustBeInAscendingOrder"

				constraint (AgePeriodses.AgePeriods[6] >= 1)
					"AgingDaysMustBeInAscendingOrder"
			else
				initialize AgePeriodses.AgePeriods[5]
				initialize AgePeriodses.AgePeriods[6]
				initialize AgePeriodses.AgePeriods[7]
				initialize AgeFuture

		FinanceChargeInterestRatesByDate
			default to "N"
			if (FinanceChargeInterestRatesByDate = "Y")
				constraint (LatePaymentAndFinanceCharges = "L"
				or			LatePaymentAndFinanceCharges = "B" 
				or		  LatePaymentAndFinanceCharges not entered)
					"IntChargeByDate_=_\Y,ChargeTypeMustBe_\L,_\B,OrSpace"	
			if (FinanceChargeInterestRatesByDate = "N")
				constraint (!LatePaymentChargeRounding)
					"IntChargeByDate_=_\N,CannotRoundLateCharges"			 

		FinanceChargeCode
			if (FinanceChargeCode not entered)
				constraint (LatePaymentAndFinanceCharges not entered
				and			FinanceChargeCycle not entered
				and		MinimumFinanceChargeAmount not entered
				and		 !PrintFinanceChargeDocument)
					"FinanceChargeCodeRequired"							   
				constraint (LatePaymentAndFinanceCharges not entered)
					"FinanceChargeRequired"								   
			constraint (FinanceChargeCycle entered)
				"CycleCodeRequired;FinanceRateCodeEntered"				 




		FinanceChargeCycle
			if (FinanceChargeCycle not entered)
				constraint (LatePaymentAndFinanceCharges not entered
				and		 FinanceChargeCode not entered)
					"FinanceCycleCodeRequired"		

		FinanceChargeCalculationMethod
			default to "N"
			if (FinanceChargeCalculationMethod = "N")
				constraint (LatePaymentAndFinanceCharges not = "L"
				or			LatePaymentAndFinanceCharges not = "B")	
					"CalcMethodMust_=_\DWhenLatePayment_=_\LOr_\B"			

		MinimumFinanceChargeAmount
			if (MinimumFinanceChargeAmount not entered)
				constraint (!ChargeMinimumFinanceCharge)
					"MinimumChargeMethodCannot_=_\Y,MinChargeNotEntered"	  







		EnableElectronicFundsTransfer
			if (EnableElectronicFundsTransfer entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  
				if (EFTCalendar not entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"CalendarRequired;_\E\F\TProcess_=_\Y"				   
				if (EFTDueDays not entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"DueDaysRequired;_\E\F\TProcess_=_\Y"					
				if (EFTDueDaysType not entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"DueDayTypeRequired;_\E\F\TProcess_=_\Y"				 
				if (EFTGLDays entered
				and EFTGLDaysType	not entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"G\LTypeRequired"										
				if (EFTGLDays not entered
				and EFTGLDaysType	entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"G\LDaysRequired"										
				if (EFTDepositDays entered
				and EFTDepositDaysType not entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"DepositTypeRequired"									
				if (EFTDepositDays not entered
				and EFTDepositDaysType entered)
					constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
					or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="C" )
						"DepositDaysRequired"									

			if (EnableElectronicFundsTransfer not = "Y")
				constraint (EFTCalendar not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   
				constraint (EFTDueDays not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   
				constraint (EFTDueDaysType not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   
				constraint (EFTGLDays not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   
				constraint (EFTDepositDays not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   
				constraint (EFTDepositDaysType not entered)
					"CannotEnter_\E\F\TField;_\E\F\TProcessingNot_=_\Y"	   



		CreditChargebackPrefix
			if (action type.Create
			or (action type.Update
			and old CreditChargebackPrefix not = CreditChargebackPrefix))
				LocalPrefix			= CreditChargebackPrefix
				LocalInvoiceType	= "C"
				include ValidatePrefix

			constraint (CreditChargebackPrefix != ProjectCreditMemoPrefix)
				"CreditChargebackPrefixCannotBeTheSameAsProjectCreditMemoPrefix"

			constraint (CreditChargebackPrefix != ProjectInvoicePrefix)
				"CreditChargebackPrefixCannotBeTheSameAsProjectInvoicePrefix"

			constraint (CreditChargebackPrefix != ICBillingInvoicePrefix)
				"CreditChargebackPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"

			constraint (CreditChargebackPrefix != ICBillingCreditMemoPrefix)
				"CreditChargebackPrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
			
			constraint (CreditChargebackPrefix != OverApplyInvoiceCreditPrefix)
				"CreditChargebackPrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

			constraint (CreditChargebackPrefix != OverApplyCreditDebitPrefix)
				"CreditChargebackPrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

			constraint (CreditChargebackPrefix != SLBillingInvoicePrefix)
				"CreditChargebackPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"
				
		FinanceChargeTransactionPrefix
			if (action type.Create
			or (action type.Update
			and old FinanceChargeTransactionPrefix not = FinanceChargeTransactionPrefix))
				LocalPrefix						= FinanceChargeTransactionPrefix
				LocalInvoiceType				= "D"
				LocalThreeCharacterPrefixEdit	= true
				include ValidatePrefix

				LocalInvoiceType				= "C"
				LocalThreeCharacterPrefixEdit	= true
				include ValidatePrefix

		EFTCalendar
			if (EFTCalendar entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTDueDays
			if (EFTDueDays entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTDueDaysType
			if (EFTDueDaysType entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTGLDays
			if (EFTGLDays entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTGLDaysType
			if (EFTGLDaysType entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTDepositDays
			if (EFTDepositDays entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTDepositDaysType
			if (EFTDepositDaysType entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TField;_\E\F\TProcess_=_\N"			 
				constraint (!CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess
				or			CustomerGroupField.CustomerGroup.EFTProcessingLevel !="G" )
					"CannotAdd_\E\F\TAttributes_-_\GroupProcessingSpecified"  

		EFTDebitCashCode
			if (EFTDebitCashCode entered)
		 		if (CustomerGroupField.CustomerGroup.EFTProcessingLevel.GroupLevelProcessing)	
		 			constraint (EFTDebitCashCodeExistenceRel not exists)
						"Company<first EFTDebitCashCodeExistenceRel.Company>AlreadyHas_\E\F\TAttributesDefined"
				constraint (EFTCreditCashCode entered
				and		 EFTDepositBankCode entered
				and		 EFTCreditPaymentBankCode entered
				and		 EFTACHCompanyID entered)
					"Other_\E\F\TFieldsRequired;CashCodeEntered"			  
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnterCashCode;_\E\F\TProcess_=_\N"				 









				constraint (EFTDebitCashCodeRel exists)
					"EFTDebitCompanyCashCodeRelationshipDoesNotExist"
				if (action type.Create
				or EFTDebitCashCode changed)
					constraint (EFTDebitCashCodeRel.Active)
						"CompanyCashCodeIsNotActive"

		EFTCreditCashCode
			if (EFTCreditCashCode entered)
				constraint (EFTDebitCashCode entered
				and		 EFTDepositBankCode entered
				and		 EFTCreditPaymentBankCode entered
				and		 EFTACHCompanyID entered)
					"Other_\E\F\TFieldsRequired;CreditCashCodeEntered"						
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnterCashCode;_\E\F\TProcess_=_\N"				 
				constraint (EFTCreditCashCodeRel exists)
					"EFTCreditCompanyCashCodeRelationshipDoesNotExist"
				if (action type.Create
				or EFTCreditCashCode changed)
					constraint (EFTCreditCashCodeRel.Active)
						"CompanyCashCodeIsNotActive"

		EFTDepositBankCode
			if (EFTDepositBankCode entered)
				constraint (EFTDebitCashCode entered
				and		 EFTCreditPaymentBankCode entered
				and		 EFTCreditCashCode entered
				and		 EFTACHCompanyID entered)
					"Other_\E\F\TFieldsRequired;_\E\F\TPayCodeEntered"								
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnterDebitPaymentCode;_\E\F\TProcess_=_\N"		 
				constraint (EFTDepositBankCode.BankTransactionCode.BankTransactionType.BankService)
					"PaymentCodeMustBeBankServiceType"						
				constraint (EFTDepositBankCode.BankTransactionCode.TransactionType.CreditTransaction)
					"AccountBalanceTypeMust_=_\C"							 

		EFTACHCompanyID
			if (EFTACHCompanyID entered)
				constraint (EFTDebitCashCode entered
				and		 EFTCreditCashCode entered
				and		 EFTCreditPaymentBankCode entered
				and		 EFTDepositBankCode entered)
					"Other_\E\F\TFieldsRequired;Company_\I\DEntered"		  
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnter_\E\F\TCompany_\I\D;_\E\F\TProcess_=_\N"		 

		EFTCreditPaymentBankCode
			if (EFTCreditPaymentBankCode entered)
				constraint (CustomerGroupField.CustomerGroup.ElectronicFundsTransferProcess)
					"CannotEnterCreditPaymentCode;_\E\F\TProcess_=_\N"		
				constraint (EFTCreditPaymentBankCode.BankTransactionCode.BankTransactionType.BankService)
					"CreditPaymentCodeMustBeBankServiceType"				  
				constraint (EFTCreditPaymentBankCode.BankTransactionCode.TransactionType.DebitTransaction)
					"AccountBalanceTypeMust_=_\D"							 





		ReceivableHoldCode
			required

		BillOfExchAcceptAccounting
			default to "Y"

		BillOfExchangeBankRisk
			default to true

		TransactionCurrencyDisplay
			default to "B"

		DefaultApplicationDate
			initial value is DefaultApplicationDate.LatestTransactionPostDate  
			default to DefaultApplicationDate.LatestTransactionPostDate  

		BillOfExchangeNumberingType
			default to "A"

		DetailGLTransPerApplication
			force default to "Y"

		DetailGLTransPerFinanceCharge
			default to "N"

		DetailGLTransPerPayment
			default to "N"
			if (DetailedCashDistributions)
				constraint (DetailGLTransPerPayment.YesDetailAccrualInterfacing)
					"MustHave_\Detail_\PaymentsSetTo_\Yes_\Detail_\Accrual_\InterfacingToSelect_\Allow_\Detailed_\Cash_\Distributions"

		TransBatchTotalBalancing
			default to true

		NatAccountTransUpdateSource
			default to "N"

		IncludeBOETransInBalance
			default to true

		AutomaticMemoApplication
			default to true

		SelectFundDistributionSet 
			if (SelectFundDistributionSet changed)
				if (!Company.FinanceEnterpriseGroup.FundAccounting)
					constraint (!SelectFundDistributionSet)
						"MustHave_Fund_AccountingTurnedOnToEnable_Specify_Distribution_Mix"
				constraint (!HasPartiallyAppliedInvoices)
					"AllInvoicesForThisCompanyMustBeFullyAppliedOrFullyOpenBeforeEnablingOrDisabling_Specify_Distribution_Mix.MustFullyApplyInvoice<first ReceivableInvoiceDetailInvoicePartiallyApplied.ReceivableInvoiceDetail.Invoice>OrReverseItsApplications"

		DetailedInvoiceAccrualDistributions
			if (DetailedInvoiceAccrualDistributions)
				constraint (!GeneralLedgerCompanyRel.FinanceEnterpriseGroup.FundAccounting)
					"CannotSelect_\Allow_\Detailed_\Invoice_\Accrual_\DistributionsIf_\Fund_\AccountingIsEnabled"

		DetailedCashDistributions
			if (DetailedCashDistributions)
				constraint (!GeneralLedgerCompanyRel.FinanceEnterpriseGroup.FundAccounting)
					"CannotSelect_\Allow_\Detailed_\Cash_\DistributionsIf_\Fund_\AccountingIsEnabled"

		DetailedRNADistributions
			if (DetailedRNADistributions)
				constraint (DetailedInvoiceAccrualDistributions)
					"MustSelect_\Allow_\Detailed_\Invoice_\Accrual_\Distributions"
				constraint (DetailedCashDistributions)
					"MustSelect_\Allow_\Detailed_\Cash_\Distributions"
				constraint (DetailFinanceStructureOptions entered)
					"MustChooseAtLeastOne_\Finance_\Structure_\Segment_\For_\Application_\Matching"




		CurrencyRateOverride
			default to "N"

		EFTDebitCompanyCashCode

			
		EFTCreditCompanyCashCode



		ProjectCreditMemoPrefix
			if (!IsProjectInvoicing)
				cannot be entered
					"CreditMemoPrefixCannotBeEnteredFinanceEnterpriseGroup<Company.CustomerBusinessGroup.FinanceEnterpriseGroup>NotSetUpForProjectInvoicing"				
			else
				if (ProjectInvoicePrefix entered
				or	ProjectCreditDebitMemoReason entered)
					required
						"CreditMemoPrefixIsRequiredWhenCreditReasonCodeOrInvoicePrefixEntered"

			constraint (ProjectCreditMemoPrefix != ProjectInvoicePrefix)
				"CreditMemoPrefixAndInvoicePrefixCannotBeTheSame"

			constraint (ProjectCreditMemoPrefix != CreditChargebackPrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsCreditChargebackPrefix"

			constraint (ProjectCreditMemoPrefix != ICBillingInvoicePrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"

			constraint (ProjectCreditMemoPrefix != ICBillingCreditMemoPrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
				
			constraint (ProjectCreditMemoPrefix != OverApplyInvoiceCreditPrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

			constraint (ProjectCreditMemoPrefix != OverApplyCreditDebitPrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

			constraint (ProjectCreditMemoPrefix != SLBillingInvoicePrefix)
				"ProjectCreditMemoPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"
				
		ProjectInvoicePrefix
			if (!IsProjectInvoicing)
				cannot be entered
					"InvoicePrefixCannotBeEnteredFinanceEnterpriseGroup<Company.CustomerBusinessGroup.FinanceEnterpriseGroup>NotSetUpForProjectInvoicing"
			else
				if (ProjectCreditMemoPrefix entered
				or	ProjectCreditDebitMemoReason entered)
					required
						"InvoicePrefixIsRequiredWhenCreditMemoPrefixOrCreditReasonCodeEntered"

			constraint (ProjectInvoicePrefix != ProjectCreditMemoPrefix)
				"CreditMemoPrefixAndInvoicePrefixCannotBeTheSame"

			constraint (ProjectInvoicePrefix != CreditChargebackPrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsCreditChargebackPrefix"

			constraint (ProjectInvoicePrefix != ICBillingInvoicePrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"

			constraint (ProjectInvoicePrefix != ICBillingCreditMemoPrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
			
			constraint (ProjectInvoicePrefix != OverApplyInvoiceCreditPrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

			constraint (ProjectInvoicePrefix != OverApplyCreditDebitPrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

			constraint (ProjectInvoicePrefix != SLBillingInvoicePrefix)
				"ProjectInvoicePrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"
				
		ProjectCreditDebitMemoReason
			if (!IsProjectInvoicing)
				cannot be entered
					"CreditMemoPrefixCannotBeEnteredFinanceEnterpriseGroup<Company.CustomerBusinessGroup.FinanceEnterpriseGroup>NotSetUpForProjectInvoicing"
			else
				if (ProjectCreditMemoPrefix entered
				or  ProjectInvoicePrefix entered)
					required
						"CreditReasonCodeIsRequiredWhenCreditMemoPrefixOrInvoicePrefixEntered"

		ICBillingDefaultProcessLevel
			constraint (Company.IntercompanyBilling)
				"GlobalLedgerCompanyNotSetForIntercompanyBilling"

			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingDefaultProcessLevelRequiredWhenEnteringOtherIntercompanyBillingFields"

			if (ICBillingDefaultProcessLevel entered)
				constraint (PaymentBatchNumbering)
					"AutomaticPaymentBatchNumberingMustBeCheckedForIntercompanyBilling"

		ICBillingDefaultCustomer
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingDefaultCustomerRequiredWhenEnteringOtherIntercompanyBillingFields"

			constraint (!ReceivableCompanyICBCustomerRel exists)
				"CustomerAlreadyBeingUsedAsAnIntercompanyBillingCustomerForCompany<first ReceivableCompanyICBCustomerRel.Company>"

			constraint (ICBillingDefaultCompanyCustomer.TermsCode.IsNetTermsWithNoDiscounts)
				"IntercompanyBillingDefaultCustomerMustBeSetupWithNet_Payment_TermsWithNoDiscounts"

			constraint (ICBillingDefaultCompanyCustomer.AutomaticCashApplication)
				"IntercompanyBillingDefaultCustomerMustBeSetupFor_Automatic_Cash_Application"

			constraint (ICBillingDefaultCompanyCustomer.AutomaticApplicationMethod.Remittance)
				"IntercompanyBillingDefaultCustomerMustBeSetupWith_Application_Method=_Remittance"

			constraint (ICBillingDefaultCompanyCustomer.ReceivableProcessingMethod.OpenItem)
				"IntercompanyBillingDefaultCustomerMustBeSetupWith_Processing_Method=_Open_Item"

			constraint (ICBillingDefaultCompanyCustomer.BankTransactionCode.BankTransactionType.CashPayment)
				"IntercompanyBillingDefaultCustomerMustBeSetupWithA_Payment_CodeThatIsCashPaymentTypeAndTransactionOriginOfPayable"

			constraint (ICBillingDefaultCompanyCustomer.BankTransactionCode.TransactionOrigin.Payable)
				"IntercompanyBillingDefaultCustomerMustBeSetupWithA_Payment_CodeThatIsCashPaymentTypeAndTransactionOriginOfPayable"

			constraint (ICBillingDefaultCompanyCustomer.NationalAccountIndicator.No)
				"IntercompanyBillingDefaultCustomerCannotBeParentOrChildCustomerInANationalAccountRelationship"	

			constraint (!ICBillingDefaultCompanyCustomer.HasVendor)
				"IntercompanyBillingDefaultCustomerCannotBeReleatedToAVendor"	

			constraint (!NationalAccountParentCustomerRelExists)
				"IntercompanyBillingDefaultCustomerIsRelatedToANationalAccountParentCustomer"	

			constraint (!NationalAccountChildCustomerRelExists)
				"IntercompanyBillingDefaultCustomerIsRelatedToANationalAccountChildCustomer"	

		ICBillingInvoicePrefix
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingInvoicePrefixRequiredWhenEnteringOtherIntercompanyBillingFields"

			constraint (ICBillingInvoicePrefix != CreditChargebackPrefix)
				"IntercompanyBillingInvoicePrefixCannotBeTheSameAsCreditChargebackPrefix"

			constraint (ICBillingInvoicePrefix != ProjectCreditMemoPrefix)
				"IntercompanyBillingInvoicePrefixCannotBeTheSameAsProjectCreditMemoPrefix"

			constraint (ICBillingInvoicePrefix != ProjectInvoicePrefix)
				"IntercompanyBillingInvoicePrefixCannotBeTheSameAsProjectInvoicePrefix"

			constraint (ICBillingInvoicePrefix != ICBillingCreditMemoPrefix)
				"IntercompanyBillingInvoicePrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
				
			constraint (ICBillingInvoicePrefix != OverApplyInvoiceCreditPrefix)
				"ICBillingInvoicePrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"
				
			constraint (ICBillingInvoicePrefix != OverApplyCreditDebitPrefix)
				"ICBillingInvoicePrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

			constraint (ICBillingInvoicePrefix != SLBillingInvoicePrefix)
				"ICBillingInvoicePrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

		SLBillingInvoicePrefix
			if (AnySLBillingInvoiceFieldEntered)
				required
					"SubleaseInvoicePrefixRequiredWhenEnteringOtherSubleaseBillingFields"
					
			constraint (SLBillingInvoicePrefix != CreditChargebackPrefix)
				"SubleaseInvoicePrefixCannotBeTheSameAsCreditChargebackPrefix"

			constraint (SLBillingInvoicePrefix != ProjectCreditMemoPrefix)
				"SubleaseInvoicePrefixCannotBeTheSameAsProjectCreditMemoPrefix"

			constraint (SLBillingInvoicePrefix != ProjectInvoicePrefix)
				"SubleaseInvoicePrefixCannotBeTheSameAsProjectInvoicePrefix"

			constraint (SLBillingInvoicePrefix != ICBillingInvoicePrefix)
				"SubleaseInvoicePrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"
				
			constraint (SLBillingInvoicePrefix != ICBillingCreditMemoPrefix)
				"SubleaseInvoicePrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"

			constraint (SLBillingInvoicePrefix != OverApplyInvoiceCreditPrefix)
				"SLBillingInvoicePrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

			constraint (SLBillingInvoicePrefix != OverApplyCreditDebitPrefix)
				"SLBillingInvoicePrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

		ICBillingDefaultCashCode
			if (AnyIntercompanyBillingFieldEntered)
				default to ICBillingDefaultProcessLevel.CashCode
				required
					"IntercompanyBillingDefaultCashCodeRequiredWhenEnteringOtherIntercompanyBillingFields"

		ICBillingDefaultBankTransactionCode
			if (AnyIntercompanyBillingFieldEntered)
				default to DepositBankCode
				required
					"IntercompanyBillingDefaultBankTransactionCodeRequiredWhenEnteringOtherIntercompanyBillingFields"

			constraint (ICBillingDefaultBankTransactionCode.BankTransactionType.BankService)
				"DefaultBankTransactionCodeMustBeBankServiceType"
			constraint (ICBillingDefaultBankTransactionCode.TransactionType.CreditTransaction)
				"DefaultBankTransactionCodeMustBeCreditTransactionType"

		ICBillingDefaultBankFeeCode
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingDefaultBankFeeCodeRequiredWhenEnteringOtherIntercompanyBillingFields"

			constraint (ICBillingDefaultBankFeeCode.BankTransactionType.BankService)
				"BankFeeCodeMustBeBankServiceType"
			constraint (ICBillingDefaultBankFeeCode.TransactionType.DebitTransaction)
				"BankFeeCodeMustBeDebitTransactionType"

		ICBillingReverseBankFeeCode		
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingReverseBankFeeCodeRequiredWhenEnteringOtherIntercompanyBillingFields"
			constraint (ICBillingReverseBankFeeCode.BankTransactionType.BankService)
				"ReverseBankFeeCodeMustBeBankServiceType"
			constraint (ICBillingReverseBankFeeCode.TransactionType.CreditTransaction)
				"ReverseBankFeeCodeMustBeCreditTransactionType"

		ICBillingCreditMemoPrefix
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingCreditMemoPrefixRequiredWhenEnteringOtherIntercompanyBillingFields"

			constraint (ICBillingCreditMemoPrefix != CreditChargebackPrefix)
				"IntercompanyBillingCreditMemoPrefixCannotBeTheSameAsCreditChargebackPrefix"

			constraint (ICBillingCreditMemoPrefix != ProjectCreditMemoPrefix)
				"IntercompanyBillingCreditMemoPrefixCannotBeTheSameAsProjectCreditMemoPrefix"

			constraint (ICBillingCreditMemoPrefix != ProjectInvoicePrefix)
				"IntercompanyBillingCreditMemoPrefixCannotBeTheSameAsProjectInvoicePrefix"

			constraint (ICBillingCreditMemoPrefix != ICBillingInvoicePrefix)
				"IntercompanyBillingCreditMemoPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"
				
			constraint (ICBillingCreditMemoPrefix != OverApplyInvoiceCreditPrefix)
				"ICBillingCreditMemoPrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"
				
			constraint (ICBillingCreditMemoPrefix != OverApplyCreditDebitPrefix)
				"ICBillingCreditMemoPrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"
			
			constraint (ICBillingCreditMemoPrefix != SLBillingInvoicePrefix)
				"ICBillingCreditMemoPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

		ICBillingDefaultCreditMemoReason
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingDefaultCreditMemoReasonCodeRequiredWhenEnteringOtherIntercompanyBillingFields"

		AgeFuture
			constraint (AgeFuture>= 1)
				"NegativeValueNotAllowed"

			if (ExpandedAgingPeriods)
				required
					"FutureDaysMustBeEntered"
					
		VoucherReferenceFormat
			if (VoucherReference)
				required

		VoucherReferenceReportingBasis
			if (VoucherReference)
				required
				
		ParallelReferenceFormat
			if (!ParallelReferenceCheckDigit.NoCheckDigit)
				required
					"ParallelReferenceFormatRequiredWhenCheckDigitTypeIsEntered;CheckDigitType=<ParallelReferenceCheckDigit>"

		ForeignTradePaymentReport
			constraint (Company.AccountingEntity.AddressCode entered)
				"AddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

			if (UnreportedForeignTradeAndPaymentRel exist)
				cannot be changed
					"UnprocessedRecordsInForeignTradeAndPaymentExist"

		ForeignTradePaymentAmount
			if (ForeignTradePaymentReport)
				required
			else
				initialize

		ReceivablesStatementTemplate
			if (UseIDM)
				required
				
				constraint (ReceivablesStatementTemplate.IDMDocumentType.ReceivablesStatement)
					"InvalidTemplate"

		BasicDunningLetterTemplate
			if  (UseIDM)
				required
				
				constraint (BasicDunningLetterTemplate.IDMDocumentType.BasicDunningLetter)
					"InvalidTemplate"
				
		AdvancedDunningLetterTemplate
			if  (UseIDM)
				required
				
				constraint (AdvancedDunningLetterTemplate.IDMDocumentType.AdvancedDunningLetter)
					"InvalidTemplate"				
				
		PaymentRequestNoticeTemplate
			if (UseIDM)
				required
				
				constraint (PaymentRequestNoticeTemplate.IDMDocumentType.PaymentRequestNotice)
					"InvalidTemplate"

		ReceivableInvoiceTemplate
			if (UseIDM)
				required
				
				constraint (ReceivableInvoiceTemplate.IDMDocumentType.ReceivableInvoice)
					"InvalidTemplate"		

		ReceivableInvoiceExpandedTemplate
			if (UseIDM)
				required
				
				if (ReceivableInvoiceExpandedTemplate entered)
					constraint (ReceivableInvoiceExpandedTemplate.IDMDocumentType.ReceivableInvoiceExpanded)
						"InvalidTemplate"			
	
		AdministrativeFee
			if (action type.Create)
				force default to TransientAdministrativeFee
			
		AdminFeeReceivableGeneralLedgerCode
			if (action type.Update)
				if (AdministrativeFee)
					required
						"FinanceChargeAdminFeeCodeRequiredIfAdministrativeFeeIsEnabled"
				if (AdminFeeReceivableGeneralLedgerCode entered)
					constraint (AdministrativeFee)
						"CannotEnterAdminFeeCode;AdministrativeFeeIsNotChecked"
	
		ReceivableStatementIDMEmailTemplate		
			constraint (ReceivableStatementIDMEmailTemplate.IDMDocumentType.ReceivableStatementEmail)
				"InvalidTemplate"						

		BasicDunningLetterIDMEmailTemplate		
			constraint (BasicDunningLetterIDMEmailTemplate.IDMDocumentType.BasicDunningLetterEmail)
				"InvalidTemplate"	
									
		AdvancedDunningLetterIDMEmailTemplate	
			constraint (AdvancedDunningLetterIDMEmailTemplate.IDMDocumentType.AdvancedDunningLetterEmail)
				"InvalidTemplate"			
				
		PaymentRequestNoticeIDMEmailTemplate			
			constraint (PaymentRequestNoticeIDMEmailTemplate.IDMDocumentType.PaymentRequestNoticeEmail)
				"InvalidTemplate"			

		EFTNotificationPrintIDMTemplate
			if (UseIDM
			and EnableElectronicFundsTransfer)
				required
				
				constraint (EFTNotificationPrintIDMTemplate.IDMDocumentType.EFTNotificationPrint)
					"InvalidTemplate"					
			else
				initialize
				
		ReceivableInvoiceIDMEmailTemplate			
			constraint (ReceivableInvoiceIDMEmailTemplate.IDMDocumentType.ReceivableInvoiceEmail)
				"InvalidTemplate"			

		ReceivableInvoiceExpandedIDMEmailTemplate
			constraint (ReceivableInvoiceExpandedIDMEmailTemplate.IDMDocumentType.ReceivableInvoiceExpandedEmail)
				"InvalidTemplate"	

		AdminFeeCode
			if (action type.Create)
				if (TransientAdministrativeFee)
					required
						"FinanceChargeAdminFeeCodeRequiredIfAdministrativeFeeIsEnabled"
	
				if (AdminFeeCodeDescription entered
				or	AdminFeeCodeAccount entered)
					required
						"FinanceChargeAdminFeeCodeRequiredIfGlobalLedgerAccount_orDescriptionEntered"
				
				if (AdminFeeCode entered)
					constraint (TransientAdministrativeFee)
						"CannotEnterAdminFeeCode;AdministrativeFeeIsNotChecked"
			
		AdminFeeCodeAccount
			if (action type.Create)
				if (TransientAdministrativeFee)
					required
						"FinanceChargeGlobalLedgerAccountRequiredIfAdministrativeFeeIsEnabled"
				if (AdminFeeCode entered
				or	AdminFeeCodeDescription entered)
					required
						"FinanceChargeGlobalLedgerAccountRequiredIfAdminFeeCode_orDescriptionEntered"
				if (AdminFeeCodeAccount entered)
					constraint (TransientAdministrativeFee)
						"CannotEnterAdminFeeCodeAccount;AdministrativeFeeIsNotChecked"
					constraint (AdminFeeCodeAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
						"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"
			

		AdminFeeCodeDescription
			if (action type.Create)
				if (TransientAdministrativeFee)
					required
						"FinanceChargeAdminFeeDescriptionRequiredIfAdministrativeFeeIsEnabled"
				if (AdminFeeCode entered
				or	AdminFeeCodeAccount entered)
					required
						"FinanceChargeAdminFeeDescriptionRequiredIfAdminFeeCode_orGlobalLedgerAccountEntered"
				if (AdminFeeCodeDescription entered)
					constraint (TransientAdministrativeFee)
						"CannotEnterAdminFeeCodeDescription;AdministrativeFeeIsNotChecked"
		
		OverApplyInvoiceCreditPrefix
			if (!OverApplyInvoice)
				if (LastOverApplyInvoiceCreditNumber not entered
				and LastOverApplyCreditDebitNumber not entered
				and OverApplyReceivableReasonRel not exists)
					cannot be entered
						"CannotEnter_\Over\Apply\Credit\Memo\Prefix;_\Over\Apply\InvoiceFlagMustBeChecked"
			else
				required
				if (action type.Update
				and old OverApplyInvoiceCreditPrefix != blank)
					cannot be changed
				
				if (action type.Create
				or  (action type.Update
				and  old OverApplyInvoiceCreditPrefix != OverApplyInvoiceCreditPrefix ))
					LocalPrefix			= OverApplyInvoiceCreditPrefix
					LocalInvoiceType	= "C"
					include ValidatePrefix
				
				constraint (OverApplyInvoiceCreditPrefix != CreditChargebackPrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsCreditChargebackPrefix"

				constraint (OverApplyInvoiceCreditPrefix != ProjectCreditMemoPrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsProjectCreditMemoPrefix"
	
				constraint (OverApplyInvoiceCreditPrefix != ProjectInvoicePrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsProjectInvoicePrefix"
	
				constraint (OverApplyInvoiceCreditPrefix != ICBillingInvoicePrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"
					
				constraint (OverApplyInvoiceCreditPrefix != ICBillingCreditMemoPrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsICBillingCreditMemoPrefix"
	
				constraint (OverApplyInvoiceCreditPrefix != OverApplyCreditDebitPrefix)
					"OverApplyCreditMemoPrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

				constraint (OverApplyInvoiceCreditPrefix != SLBillingInvoicePrefix)
					"OverApplyInvoiceCreditPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

		OverApplyCreditDebitPrefix
			if (!OverApplyInvoice)
				if (LastOverApplyInvoiceCreditNumber not entered
				and LastOverApplyCreditDebitNumber not entered
				and OverApplyReceivableReasonRel not exists)
					cannot be entered
						"CannotEnter_\Over\Apply\Debit\Memo\Prefix;_\Over\Apply\InvoiceFlagMustBeChecked"
			else
				required
				if (action type.Update
				and old OverApplyCreditDebitPrefix != blank )
					cannot be changed
				
				if (action type.Create
				or  (action type.Update
				and old OverApplyCreditDebitPrefix != OverApplyCreditDebitPrefix ))
					LocalPrefix			= OverApplyCreditDebitPrefix
					LocalInvoiceType	= "D"
					include ValidatePrefix
					
				constraint (OverApplyCreditDebitPrefix != CreditChargebackPrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsCreditChargebackPrefix"

				constraint (OverApplyCreditDebitPrefix != ProjectCreditMemoPrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsProjectCreditMemoPrefix"
	
				constraint (OverApplyCreditDebitPrefix != ProjectInvoicePrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsProjectInvoicePrefix"
	
				constraint (OverApplyCreditDebitPrefix != ICBillingInvoicePrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"
					
				constraint (OverApplyCreditDebitPrefix != ICBillingCreditMemoPrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsICBillingCreditMemoPrefix"
	
				constraint (OverApplyCreditDebitPrefix != OverApplyInvoiceCreditPrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

				constraint (OverApplyCreditDebitPrefix != SLBillingInvoicePrefix)
					"OverApplyDebitMemoPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

		OverApplyReasonCode
			if (!OverApplyInvoice)
				if (LastOverApplyInvoiceCreditNumber not entered
				and LastOverApplyCreditDebitNumber not entered
				and OverApplyReceivableReasonRel not exists)
					cannot be entered
						"CannotEnter_\Over\Apply\Reason\Code;_\Over\Apply\InvoiceFlagMustBeChecked"
			else
				required
				if (action type.Update
				and IsOldReasonCodeNotBlank)
					cannot be changed
				
		OverApplyReasonCodeDescription
			if (!OverApplyInvoice)
				if (LastOverApplyInvoiceCreditNumber not entered
				and LastOverApplyCreditDebitNumber not entered
				and OverApplyReceivableReasonRel not exists)
					cannot be entered
						"CannotEnter_\Over\Apply\Reason\Code\Description;_\Over\Apply\InvoiceFlagMustBeChecked"
			else
				required
		
		AllowZeroPaymentAdjustments
			if (!AllowZeroPayments)
				cannot be entered
					"CannotEnter_\Allow\Zero\Payment\Adjustments;AllowZeroPaymentsFlagMustBeChecked" 

		ClaimsAndLiabilitiesReporting	
			if (not ClaimsAndLiabilitiesReporting)
				initialize ThresholdAmount	
				initialize OutputXML
				
			constraint (Company.AccountingEntity.AddressCode entered)
				"AddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

			constraint (Company.AccountingEntity.AddressCode.PostalAddress.Country entered)
				"Country/\JurisdictionInAddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

			if ((ClaimsAndLiabilitiesReporting changed
			or ThresholdAmount changed
			or OutputXML	   changed)
			and PayablesCompanyRel exists)
				invoke FastUpdate PayablesCompanyRel
					invoked.ClaimsAndLiabilitiesReporting = ClaimsAndLiabilitiesReporting
					invoked.ThresholdAmount 			  = ThresholdAmount
					invoked.OutputXML					  = OutputXML

		ThresholdAmount
			if (ClaimsAndLiabilitiesReporting)
				required
				constraint (ThresholdAmount > 0)
					"ThresholdAmountCannotBeNegative"
								
		IntercompanyBillingInvoiceFromEmailAddress
			default to config.DefaultFromEmailAddress
			
		IntercompanyBillingInvoiceEmailTemplate
			if (UseIDM)
				constraint (IntercompanyBillingInvoiceEmailTemplate.IDMDocumentType.IntercompanyBillingInvoiceEmail)
					"InvalidTemplate"

		SubleaseBillingInvoiceEmailTemplate
			if (UseIDM)
				constraint (SubleaseBillingInvoiceEmailTemplate.IDMDocumentType.SubleaseBillingInvoiceEmail)
					"InvalidTemplate"

		PaymentReceiptIDMEmailTemplate
			if (UseIDM)
				constraint (PaymentReceiptIDMEmailTemplate.IDMDocumentType.PaymentReceiptEmail)
					"InvalidTemplate"
			else
				initialize

		CreateInvoiceDetailsPerLine
			if (CreateInvoiceDetailsPerLine)
				constraint (InvoiceEntryTemplate.Expanded)
					"Create_\Invoice_\Details_\Per_\LineCanOnlyBeSelectedIf_\Invoice_\Entry_\TemplateIs_\Expanded"

		AutomaticManualInvoiceNumbering
			if (AutomaticManualInvoiceNumbering)
				constraint (ManualInvoicePrefix entered)
					"Manual_\Invoice_\PrefixIsRequiredIf_\Automatic_\Manual_\Invoice_\NumberingIsSelected"
				constraint (ManualMemoPrefix entered)
					"Manual_\Memo_\PrefixIsRequiredIf_\Automatic_\Manual_\Invoice_\NumberingIsSelected"

		ManualInvoicePrefix
			if (AutomaticManualInvoiceNumbering)
				constraint (ManualMemoPrefix != ManualInvoicePrefix)
					"ManualMemoPrefixAndManualInvoicePrefixCannotBeTheSame"

				constraint (ManualInvoicePrefix != ProjectInvoicePrefix)
					"ManualInvoicePrefixAndProjectInvoicePrefixCannotBeTheSame"

				constraint (ManualInvoicePrefix != ProjectCreditMemoPrefix)
					"ManualInvoicePrefixAndProjectCreditMemoPrefixCannotBeTheSame"

				constraint (ManualInvoicePrefix != CreditChargebackPrefix)
					"ManualInvoicePrefixCannotBeTheSameAsCreditChargebackPrefix"

				constraint (ManualInvoicePrefix != ICBillingInvoicePrefix)
					"ManualInvoicePrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"

				constraint (ManualInvoicePrefix != ICBillingCreditMemoPrefix)
					"ManualInvoicePrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
				
				constraint (ManualInvoicePrefix != OverApplyInvoiceCreditPrefix)
					"ManualInvoicePrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

				constraint (ManualInvoicePrefix != OverApplyCreditDebitPrefix)
					"ManualInvoicePrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

				constraint (ManualInvoicePrefix != SLBillingInvoicePrefix)
					"ManualInvoicePrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

				if (action type.Create
				or (action type.Update
				and old ManualInvoicePrefix != ManualInvoicePrefix))
					LocalPrefix								= ManualInvoicePrefix
					LocalEditGenericCharacterNumberPrefix	= true
					LocalInvoiceType						= "I"
					include ValidatePrefix


		ManualMemoPrefix
			if (AutomaticManualInvoiceNumbering)
				constraint (ManualMemoPrefix != ManualInvoicePrefix)
					"ManualMemoPrefixAndManualInvoicePrefixCannotBeTheSame"

				constraint (ManualMemoPrefix != ProjectInvoicePrefix)
					"ManualMemoPrefixAndProjectInvoicePrefixCannotBeTheSame"

				constraint (ManualMemoPrefix != ProjectCreditMemoPrefix)
					"ManualMemoPrefixAndProjectCreditMemoPrefixCannotBeTheSame"

				constraint (ManualMemoPrefix != CreditChargebackPrefix)
					"ManualMemoPrefixCannotBeTheSameAsCreditChargebackPrefix"

				constraint (ManualMemoPrefix != ICBillingInvoicePrefix)
					"ManualMemoPrefixCannotBeTheSameAsIntercompanyBillingInvoicePrefix"

				constraint (ManualMemoPrefix != ICBillingCreditMemoPrefix)
					"ManualMemoPrefixCannotBeTheSameAsIntercompanyBillingCreditMemoPrefix"
				
				constraint (ManualMemoPrefix != OverApplyInvoiceCreditPrefix)
					"ManualMemoPrefixCannotBeTheSameAsOverApplyCreditMemoPrefix"

				constraint (ManualMemoPrefix != OverApplyCreditDebitPrefix)
					"ManualMemoPrefixCannotBeTheSameAsOverApplyDebitMemoPrefix"

				constraint (ManualMemoPrefix != SLBillingInvoicePrefix)
					"ManualMemoPrefixCannotBeTheSameAsSubleaseBillingInvoicePrefix"

				if (action type.Create
				or (action type.Update
				and old ManualMemoPrefix != ManualMemoPrefix))
					LocalPrefix								= ManualMemoPrefix
					LocalEditGenericCharacterNumberPrefix	= true
					LocalInvoiceType						= "D"
					include ValidatePrefix
					LocalEditGenericCharacterNumberPrefix	= true
					LocalInvoiceType						= "C"
					include ValidatePrefix


		AutoCashAlgorithmReasonType
			if (IsReceivableCompany)
				force default to "AD"

		AutoCashAlgorithmVariance
			if (IsReceivableCompany)
				if (AutoCashAlgorithmCombination entered
				or  AutoCashAlgorithmReasonCode entered
				or  AutoCashAlgorithmMaximunInvoices entered)
					required
						"IfAnyOneAlgorithmOptionIsEnteredAllMustBeEntered"
				if (AutoCashAlgorithmVariance entered)
					constraint (AutoCashAlgorithmVariance > 0)
						"VarianceCannotBeNegative"

		AutoCashAlgorithmReasonCode
			if (IsReceivableCompany)
				if (AutoCashAlgorithmCombination entered
				or  AutoCashAlgorithmVariance entered
				or  AutoCashAlgorithmMaximunInvoices entered)
					required
						"IfAnyOneAlgorithmOptionIsEnteredAllMustBeEntered"
				
				if (AutoCashAlgorithmReasonCode entered)
					constraint (AutoCashAlgorithmReasonCode.ReceivableReasonType.CashApplicationAdjustment)
						"ReasonCodeTypeIsNotAdjustment"

					constraint (AutoCashAlgorithmReasonCode.ReceivableAdjustmentReasonType.OverShort)
						"ReasonCodeTypeMustBeOverShort"

					constraint (!AutoCashAlgorithmReasonCode.ReceivableAdjustmentReasonType.Chargeback)
						"ReasonCode;ReasonCodeTypeCannotBeChargeback"
					
					constraint (AutoCashAlgorithmReasonCode != "CURR")
						"CURRIsAReservedReasonCode"

		AutoCashAlgorithmMaximunInvoices
			if (IsReceivableCompany)
				if (AutoCashAlgorithmCombination entered
				or  AutoCashAlgorithmReasonCode entered
				or  AutoCashAlgorithmVariance entered)
					required
						"IfAnyOneAlgorithmOptionIsEnteredAllMustBeEntered"

				if (AutoCashAlgorithmMaximunInvoices entered)
					constraint (AutoCashAlgorithmMaximunInvoices > 0)
						"MaximumInvoicesMustBeGreaterThanZero"

					constraint (AutoCashAlgorithmMaximunInvoices < 6)
						"MaximumInvoicesCannotBeGreaterThanFive"

		AutoCashAlgorithmCombination
			if (IsReceivableCompany)
				if (AutoCashAlgorithmReasonCode entered
				or  AutoCashAlgorithmVariance entered
				or  AutoCashAlgorithmMaximunInvoices entered)
					required
						"IfAnyOneAlgorithmOptionIsEnteredAllMustBeEntered"

				if (AutoCashAlgorithmCombination entered)
					constraint (AutoCashAlgorithmCombination  > 0)
						"CombinationInvoicesMustBeGreaterThanZero"

					constraint (AutoCashAlgorithmCombination <= AutoCashAlgorithmMaximunInvoices)
						"CombinationInvoicesCannotBeGreaterThanMaximumInvoices"

		CashOperatorRequired  
			if (CashOperatorRequired changed and CashOperatorRequired = true)
				if (ReceivablePaymentHeaderUnreleasedRel exists)
					constraint (false)
						"CannotRequireOperatorID,UnreleasedPaymentBatchExists"

		TransactionOperatorRequired  
			if (TransactionOperatorRequired changed and TransactionOperatorRequired = true)
				if (ReceivableInvoiceBatchUnreleasedRel exists)
					constraint (false)
						"CannotRequireOperatorID,UnreleasedInvoiceBatchExists"

		AllowPrepaymentTax   
			if (old AllowPrepaymentTax != blank
			and AllowPrepaymentTax = blank
			and ReceivablePrepaymentRel exists)
				cannot be changed
					"CannotChangeAllowPrepaymentTax,ReceivablePrepaymentRecordsExists"

			if (old AllowPrepaymentTax != blank
			and AllowPrepaymentTax = blank
			and !ReceivablePrepaymentRel exists)
				initialize PrepaymentTaxCode
				initialize PrepaymentTaxControlGLAccount


		PrepaymentTaxCode
			if (!AllowPrepaymentTax)
				cannot be entered
					"CannotEnter_\Prepayment_\Tax_\Code;_\Allow_\Prepayment_\TaxFlagMustBeChecked"
			else
				required
					"Prepayment_\Tax_\CodeIsRequired;_\Allow_\Prepayment_\TaxFlagIsChecked"
				if (action type.Update
				and old PrepaymentTaxCode != blank
				and ReceivablePrepaymentRel exists)
					cannot be changed
						"CannotChangePrepaymentTaxCode,ReceivablePrepaymentRecordsExists;_\Prepayment_\Tax_\CodeEffectiveDateRatesCanBeAdded"

			constraint (IsTaxEntityUsesInforTax)
				"Tax_\EntitiesMustUseThe_\Infor_\TaxSystemToAddA_\Prepayment_\Tax_\Code"

			constraint (!IsTaxTableCode)  
				"TaxCodeCannotBeTaxTableTypeToAddA_\Prepayment_\Tax_\Code"

			if (any PrepaymentTaxCode.TaxRateRel.Rate = 0) 
				constraint (PrepaymentTaxCode not entered)
					"TaxCodeMustNotHaveAZeroRateToAddA_\Prepayment_\Tax_\Code"

			constraint (IsTaxPointInvoiceDate)
				"TaxPointMustBeInvoiceDateToAddA_\Prepayment_\Tax_\Code"


		PrepaymentTaxControlGLAccount
			if (!AllowPrepaymentTax)
				if (old AllowPrepaymentTax)
					initialize PrepaymentTaxControlGLAccount
				cannot be entered
					"CannotEnter_\Prepayment_\Tax_\Control_\G\L_\Account;_\Allow_\Prepayment_\TaxFlagMustBeChecked"
			else
				required
					"Prepayment_\Tax_\Control_\G\L_\AccountIsRequired;_\Allow_\Prepayment_\TaxFlagIsChecked"
			
			constraint (PrepaymentTaxControlGLAccount.ToAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity)
				"<Company.CustomerBusinessGroup.FinanceEnterpriseGroup.AccountingEntityLabel>MustBe<Company.GeneralLedgerCompany.AccountingEntity>"

		
		InterfaceUnreleasedInvoices
			if(InterfaceUnreleasedInvoices)
				if (!AnyIntercompanyBillingFieldEntered)
					cannot be entered
						"InterfaceUnreleasedInvoicesShouldBeEnabledOnlyWhenOtherIntercompanyBillingFieldsEntered"
				constraint(TransBatchNumbering)
					"AutomaticBatchNumberingShouldBeEnabled"

		ApprovalCode
			if(!AnyIntercompanyBillingFieldEntered
			and ApprovalCode entered)
				cannot be entered
					"ApprovalCodeShouldBeEnteredOnlyWhenOtherIntercompanyBillingFieldsAreEntered"

	Conditions
		DisplayAffiliateOwnershipRequiredMsg
			restricted
			when (ClaimsAndLiabilitiesReporting
			and Company.AccountingEntity.AddressCode.PostalAddress.Country entered
			and CompanyCustomerWithNoAffiliateOwnershipRel exists)

		DisplayCompanyEntityCountryRequiredMsg
			restricted
			when (ClaimsAndLiabilitiesReporting
			and Company.AccountingEntity.AddressCode.PostalAddress.Country not entered)

		DisplayClaimsAndLiabilitiesRequireMsg
			restricted
			when (DisplayCompanyEntityCountryRequiredMsg
			or	DisplayAffiliateOwnershipRequiredMsg)

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or	CompanySecurityGroupMemberRel exists)

		IsReceivableCompany
			restricted
			when (ReceivableCompanyRel exists)

		IsReceivableGeneralLedgerCodeAccountsReceivable
			restricted
			when (ReceivableGeneralLedgerCodeAccountsReceivableRel exists)

		IsReceivableGeneralLedgerCodeReceivedNotApplied
			restricted
			when (ReceivableGeneralLedgerCodeReceivedNotAppliedRel exists)

		IsReceivableGeneralLedgerCodeFinanceCharge
			restricted
			when (ReceivableGeneralLedgerCodeFinanceChargeRel exists)

		IsReceivableGeneralLedgerCodePrepayment
			restricted
			when (ReceivableGeneralLedgerCodePrepaymentRel exists)

		IsReceivableGeneralLedgerCodeBOEAcceptance
			restricted
			when (ReceivableGeneralLedgerCodeBOEAcceptanceRel exists)

		IsReceivableGeneralLedgerCodeBOEFinancialRevenue
			restricted
			when (ReceivableGeneralLedgerCodeBOEFinancialRevenueRel exists)

		IsReceivableGeneralLedgerCodeBOEFinancialExpense
			restricted
			when (ReceivableGeneralLedgerCodeBOEFinancialExpenseRel exists)

		IsReceivableGeneralLedgerCodeBOEDishonoredExpense
			restricted
			when (ReceivableGeneralLedgerCodeBOEDishonoredExpenseRel exists)

		IsApplyCashAcrossReceivableCompanies	
			when (Company.ReceivableCompany.ApplyCashAcrossReceivableCompanies = "1")	

		HasPendingAdjustments
			restricted
			when (CompanyPendingAdjustmentsRel exists)

		HasBillingCompany
			restricted
			when (BillingCompanyRel exists)




		IsProjectInvoicing
			restricted
			when (Company.CustomerBusinessGroup.FinanceEnterpriseGroup.ProjectInvoicing)

		AnyIntercompanyBillingFieldEntered
			restricted
			when (ICBillingDefaultCustomer entered
			or	ICBillingDefaultProcessLevel entered
			or	ICBillingInvoicePrefix entered
			or	ICBillingDefaultCashCode entered
			or	ICBillingDefaultBankTransactionCode entered
			or	ICBillingCreditMemoPrefix entered
			or	ICBillingDefaultCreditMemoReason entered
			or	ICBillingReverseBankFeeCode entered)		

		AnySLBillingInvoiceFieldEntered
			restricted
			when (SLBillingInvoicePrefix entered
			or	SLBillingDefaultProcessLevel entered
			or	SubleaseBillingInvoiceTemplate entered)

		DefaultICBCustomerEntered
			restricted
			when (ICBillingDefaultCustomer entered)

		IsFinanceChargeLatePayment
			restricted
			when (LatePaymentAndFinanceCharges.LatePaymentCharges
			or	LatePaymentAndFinanceCharges.FinanceCharges
			or	  LatePaymentAndFinanceCharges.Both)

		InvoicesWithVoucherReferenceExist
			restricted
			when (ReceivableInvoiceWithVoucherReferenceRel exists)

		MarkAsPaidReceivableReasonRelExists	
			restricted
			when (MarkAsPaidReceivableReasonRel exists)

		ReceivableCompanyMarkedAsPaidReceivableReasonExists
			restricted
			when (Company.ReceivableCompany.MarkedAsPaidReceivableReason exists)

		ReceivableCompanyCurrencyRateOverrideYes
			restricted
			when (Company.ReceivableCompany.CurrencyRateOverride = "Y")

		HasDefaultPrinter
			restricted
			when (UserDefaultPrinterRel exists)

		IsOldReasonCodeNotBlank
			restricted
			when (old OverApplyReasonCode != blank
			and	  old OverApplyReasonCodeDescription != blank)

		HasPartiallyAppliedInvoices
			restricted
			when (ReceivableInvoiceDetailInvoicePartiallyApplied exists)

		HasAlternateOrReportCurrency
			restricted
			when (Company.AccountingEntity.AlternateCurrency entered
			or	Company.AccountingEntity.AlternateCurrency2 entered
			or	Company.AccountingEntity.AlternateCurrency3 entered
			or	Company.FinanceEnterpriseGroup.ReportCurrencyOne entered
			or	Company.FinanceEnterpriseGroup.ReportCurrencyTwo entered
			or	Company.FinanceEnterpriseGroup.ReportCurrencyThree entered
			or	Company.FinanceEnterpriseGroup.ReportCurrencyFour entered
			or	Company.FinanceEnterpriseGroup.ReportCurrencyFive entered)

		NationalAccountParentCustomerRelExists
			restricted
			when (NationalAccountParentCustomerRel exists) 

		NationalAccountChildCustomerRelExists
			restricted
			when (NationalAccountChildCustomerRel exists) 		

		IsAlgorithmValuesEntered
			restricted
			when (AutoCashAlgorithmVariance  entered
			and AutoCashAlgorithmReasonCode  entered
			and AutoCashAlgorithmMaximunInvoices entered
			and AutoCashAlgorithmCombination entered)

		IsTaxEntityUsesInforTax		
			restricted
			when (PrepaymentTaxCode.TaxEntityRel.ThirdParty.InforTax)

		IsTaxPointInvoiceDate		
			restricted
			when (PrepaymentTaxCode.TaxEntityRel.TaxPoint.InvoiceDate
			or   PrepaymentTaxCode.TaxCodeAccountsRel.TaxPoint.InvoiceDate)

		IsTaxTableCode		
			restricted
			when (PrepaymentTaxCode.IsTaxTable)

		HasReceivableReportExtendedPrintConfiguration		
			restricted
			when (ReceivableReportExtendedPrintConfigurationRel exists)

	Relations

		SecurityGroupRel
			one-to-one relation to FinanceDimensionSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.DimensionGroupType				 = 2
				related.FinanceDimensionSecurityGroup	 = ActorSecurityGroup

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		SecurityGroupDetailRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses Set1
				related.Company						 = Company
				related.GeneralLedgerCompanyGroup	 = SecurityGroupRel.GeneralLedgerCompanyGroup

		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company					 = Company

		CompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup 	= LocalCompanyGroup
				related.Company						= Company

		DefaultProcessLevelRel
			one-to-many relation to ReceivableProcessLevel
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.DefaultProcessLevel)

		IDMOutputSettingsDunningLetterRel
			one-to-many relation to IDMOutputSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
			Instance Selection
				where (related.DocumentType	 = IDMAdvancedDunningLetterTemplate.DocumentType.AdvancedDunningLetter
				or	   related.DocumentType	 = IDMBasicDunningLetterTemplate.DocumentType.BasicDunningLetter)

		IDMOutputSettingsARStatementPrintRel
			one-to-many relation to IDMOutputSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
			Instance Selection
				where (related.DocumentType		 = IDMStatementPrintTemplate.DocumentType.ReceivablesStatement)

		IDMOutputSettingsLatePaymentChargeRel
			one-to-many relation to IDMOutputSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
			Instance Selection
				where (related.DocumentType		 = IDMLatePaymentChargeTemplate.DocumentType.LatePaymentCharge)

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode	 = "AR"
				related.Company					 = Company

		AgingCodeRel
			one-to-many relation to AgingCode
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivableDistributionCategoryRel
			classic name is ARCATEGORY
			one-to-many relation to ReceivableDistributionCategory
			Field Mapping uses symbolic key
				related.Company	 = Company

		ChargebackTextCodeRel
			classic name is ARCHGBAKTX
			one-to-many relation to ChargebackTextCode
			delete restricted
			Field Mapping uses Set1
			Instance Selection
				where (related.ChargebackTextCode.Company	 = Company)

		ReceivableGeneralLedgerCodeRel
			classic name is ARCODE
			one-to-many relation to ReceivableGeneralLedgerCode
			delete cascades
			Field Mapping uses symbolic key
				related.Company	 = Company

		CompanyCustomerRel
			classic name is ARCUSTOMERS
			one-to-many relation to CompanyCustomer
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivableInvoiceDetailRel
			classic name is AROITEMS
			one-to-many relation to ReceivableInvoiceDetail
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivableInvoiceDetailWithProjectRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company	 = Company
			Instance Selection
				where (related.IsProjectOrProjectContract)

		ReceivableInvoiceDetailInvoicePartiallyApplied
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3								
				related.Company	 = Company
			Instance Selection
				where (related.NotAllInvoiceDetailAreAppliedForThisInvoice)

		FinanceChargeLanguageTextRel
			classic name is ARPAYNOTTX
			one-to-many relation to FinanceChargeLanguageText
			delete restricted
			Field Mapping uses Set1
			Instance Selection
				where (related.Company	 = Company)

		ReceivableProcessLevelRel
			classic name is ARPROCLEVELS
			one-to-many relation to ReceivableProcessLevel
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivablePaymentHeaderRel
			classic name is ARPYMNTHEADERS
			one-to-many relation to ReceivablePaymentHeader
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivablePaymentHeaderUnreleasedRel 
			one-to-many relation to ReceivablePaymentHeader
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company
			Instance Selection
				where (related.IsUnreleased)

		ReceivablePaymentWithProjectRel
			one-to-many relation to ReceivablePayment
			Field Mapping uses symbolic key
				related.Company	 = Company
			Instance Selection
				where (related.IsProject)				

		ReceivableReasonRel
			classic name is ARREASONS
			one-to-many relation to ReceivableReason
			delete cascades
			Field Mapping uses symbolic key
				related.Company	 = Company

		RTMPaymentLanguageTextRel
			classic name is ARRTMTX
			one-to-many relation to RTMPaymentLanguageText
			delete restricted
			Field Mapping uses Set1
			Instance Selection
				where (related.RTMPaymentLanguageText.Company	 = Company)

		ReceivableStatementLanguageTextRel
			classic name is ARSTMPRTTX
			one-to-many relation to ReceivableStatementLanguageText
			delete restricted
			Field Mapping uses Set1
			Instance Selection
				where (related.ReceivableStatementLanguageText.Company	 = Company)

		ReceivableTransactionSummaryRel
			classic name is ARSUMMARY
			one-to-many relation to ReceivableTransactionSummary
			delete cascades
			Field Mapping uses Set2
				related.Company	 = Company

		CreditAnalystRel
			classic name is CRANALYST
			one-to-many relation to CreditAnalyst
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company

		ReceivableDefaultCodeRel
			classic name is CUST-DEFAULTS
			one-to-many relation to ReceivableDefaultCode
			delete cascades
			Field Mapping uses symbolic key
				related.Company	 = Company

		SalesRepresentativeRel
			classic name is SALESREP
			one-to-many relation to SalesRepresentative
			delete cascades
			Field Mapping uses symbolic key
				related.Company	 = Company

		CompanyCustomerStaticAgingRel
			classic name is STATICCUST
			one-to-many relation to CompanyCustomerStaticAging
			Field Mapping uses symbolic key
				related.Company	 = Company

		TerritoryRel
			one-to-many relation to Territory
			delete cascades
			Field Mapping uses symbolic key
				related.Company	 = Company








		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company	 = Company

		OtherReceivableCompanyRel
			one-to-many relation to ReceivableCompany
			Field Mapping uses Set2
				related.CustomerGroupField.CustomerGroup	 = CustomerGroupField.CustomerGroup
			Instance Selection
				where (related.Company	 != Company)

		EFTDebitCashCodeExistenceRel
			one-to-many relation to ReceivableCompany
			Field Mapping uses Set2
				related.CustomerGroupField.CustomerGroup	 = CustomerGroupField.CustomerGroup
			Instance Selection
				where (related.Company	 != Company
				and	related.EFTDebitCashCode entered)			

		ReceivableUserFieldDefinitionCRel
			one-to-one relation to ReceivableUserFieldDefinition
			Field Mapping uses symbolic key
				related.ReceivableUserFieldDefinition.Company		 = Company
				related.ReceivableUserFieldDefinition.UserFieldType	 = "C"

		ReceivableUserFieldDefinitionTRel
			one-to-one relation to ReceivableUserFieldDefinition
			Field Mapping uses symbolic key
				related.ReceivableUserFieldDefinition.Company		 = Company
				related.ReceivableUserFieldDefinition.UserFieldType	 = "T"

		ReceivableUserFieldDefinitionPRel
			one-to-one relation to ReceivableUserFieldDefinition
			Field Mapping uses symbolic key
				related.ReceivableUserFieldDefinition.Company		 = Company
				related.ReceivableUserFieldDefinition.UserFieldType	 = "P"

		ReceivableUserFieldDefinitionBRel
			one-to-one relation to ReceivableUserFieldDefinition
			Field Mapping uses symbolic key
				related.ReceivableUserFieldDefinition.Company		 = Company
				related.ReceivableUserFieldDefinition.UserFieldType	 = "B"

		ReceivableGeneralLedgerCodeAccountsReceivableRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company						 = Company
				related.ReceivableGeneralLedgerCode	 = ReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeReceivedNotAppliedRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = ReceivedNotAppliedReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeFinanceChargeRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = FinanceChargeReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodePrepaymentRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = PrepaymentReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeBOEAcceptanceRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = BOEAcceptanceReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeBOEFinancialRevenueRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = BOEFinancialRevenueReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeBOEFinancialExpenseRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = BOEFinancialExpenseReceivableGeneralLedgerCode

		ReceivableGeneralLedgerCodeBOEDishonoredExpenseRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = BOEDishonoredExpenseReceivableGeneralLedgerCode

		GainLossReceivableReasonRel
			classic name is ARREASONS
			one-to-many relation to ReceivableReason
			delete cascades
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	"CURR"
			Instance Selection
				where (related.ReceivableAdjustmentReasonType	 =	"OS")

		MarkAsPaidReceivableReasonRel							
			one-to-one relation to ReceivableReason				
			delete cascades										
			Field Mapping uses symbolic key						
				related.Company						 =	Company	
				related.ReceivableReasonType		 =	"AD"	//IEFIN-40063 / IEFIN-56201 Switched from MP to "AD"
				related.ReceivableReason			 =	MarkedAsPaidReceivableReason	//IEFIN-40063 / IEFIN-56201 Switched from "MP"

		MarkAsPaidReceivableReasonRel2							
			one-to-many relation to ReceivableReason				
			delete cascades										
			Field Mapping uses symbolic key						
				related.Company						 =	Company	
				related.ReceivableReasonType		 =	"AD"	//IEFIN-40063 / IEFIN-56201 Switched from MP to "AD"
				related.ReceivableReason			 =	MarkedAsPaidReceivableReason	//IEFIN-40063 / IEFIN-56201 Switched from "MP"
			Instance Selection
				where (related.ReceivableAdjustmentReasonType	 =	"MP")












		NationalAccountParentRel
			one-to-many relation to NationalAccount
			Field Mapping uses symbolic key
			Instance Selection
				where (related.NationalAccount.NationalAccountGroup.NatCompany	 = Company)

		NationalAccountParentCustomerRel
			one-to-many relation to NationalAccount
			Field Mapping uses Set5
				related.NationalAccount.NationalAccountGroup.NatCompany	 = OtherReceivableCompanyRel.Company
				related.NationalAccount.NationalAccountGroup.NatCustomer = ICBillingDefaultCustomer

		NationalAccountChildCustomerRel
			one-to-many relation to NationalAccount
			Field Mapping uses Set2
				related.NationalAccount.InvoiceAccountGroup.Company	 = OtherReceivableCompanyRel.Company
				related.NationalAccount.InvoiceAccountGroup.Customer = ICBillingDefaultCustomer

		CompanyAdjustmentsRel
			one-to-many relation to ReceivableApplicationAdjustment
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (IsValidForActorContext)





		CompanyPendingAdjustmentsRel
			one-to-many relation to ReceivablePendingAdjustment
			Field Mapping uses Set2
				related.User		= actor
			Instance Selection
				where (related.Company = Company
				and   (related.Source		= "R"
				or	   related.Source		= "A"))

		OpenTransactionsForCompanyRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3
				related.Company	 = Company
			Instance Selection
				where (related.IsOpen)

		ReceivableCommentsRel is a CompanyCustomerComment set

		BillingCompanyRel
			one-to-one relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company	 = Company

		EFTDebitCashCodeRel
			one-to-one relation to CompanyCashCode
			Field Mapping uses symbolic key
				related.Company				 = Company
				related.CashCode			 = EFTDebitCashCode

		EFTCreditCashCodeRel
			one-to-one relation to CompanyCashCode
			Field Mapping uses symbolic key
				related.Company				 = Company
				related.CashCode			 = EFTCreditCashCode

		ReceivableInvoiceBatchRel
			one-to-many relation to ReceivableInvoiceBatch
			Field Mapping uses symbolic key
				related.Company				 = Company

		ReceivableInvoiceBatchUnreleasedRel 
			one-to-many relation to ReceivableInvoiceBatch
			Field Mapping uses symbolic key
				related.Company				 = Company
			Instance Selection
				where (related.IsUnreleased)







		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.SystemAccount			 = LocalSystemAccount

		CustomerGroupRel
			one-to-one relation to CustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup	 = CustomerGroupField.CustomerGroup

		AgingPeriodForCompanyRel	
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses symbolic key
			Instance Selection
				where (related.CustomerGroup	 = CustomerGroupField.CustomerGroup
				and	related.ReceivableCompany	 = Company
				and	related.AgingCode			 = blank
				and	related.AgePeriodSequence	 = I1
				and	related.SetupIndicator		 = "R")

		AgingPeriodForAgingCodeRel	
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses symbolic key
			Instance Selection
				where (related.CustomerGroup	 = blank
				and	related.ReceivableCompany	 = Company
				and	related.AgingCode			 = LocalAgingCode
				and	related.SetupIndicator		 = "A"
				and	related.AgePeriodSequence	 = I1)

		ExpandedAgingPeriodRel
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses ByCustomerGroup
				related.CustomerGroup		 = CustomerGroupField.CustomerGroup
				related.ReceivableCompany	 = Company
				related.AgingCode			 = blank
			Instance Selection
				where ((related.AgePeriodSequence	 = 8
				or		related.AgePeriodSequence	 = 9
				or		related.AgePeriodSequence	 = 10
				or		related.AgePeriodSequence	 = 11)
				and	   (related.SetupIndicator		 = "R"))

		ReceivableCompanyICBCustomerRel
			one-to-many relation to ReceivableCompany
			Field Mapping uses ByICBCustomerDefault
				related.CustomerGroupField.CustomerGroup	 = CustomerGroupField.CustomerGroup
				related.ICBillingDefaultCustomer			 = ICBillingDefaultCustomer
			Instance Selection
				where (related.UniqueID	 != UniqueID)

		OpenIntercompanyBillingDocumentRel	
			one-to-many relation to IntercompanyBillingDocumentHeader
			Field Mapping uses OpenDocumentsByCustomer
				related.IntercompanyBillingGroup	 = Company.BusinessGroup.FinanceEnterpriseGroup
				related.ReceivableEntity.Customer	 = LocalICBillingDefaultCustomer
			Instance Selection	
				where (related.ReceivableEntity.Company.CustomerGroupField.CustomerGroup = CustomerGroupField.CustomerGroup)	

		OpenIntercompanyBillingDocument2Rel		
			one-to-many relation to IntercompanyBillingDocumentHeader
			Field Mapping uses ByPayableReceivableCompanies
				related.IntercompanyBillingGroup	 = Company.BusinessGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.ReceivableEntity.Company	 = Company)

		ARToAPApplicationSelectRecordsRel
			one-to-many relation to ARToAPApplicationSelect
			Field Mapping uses symbolic key
				related.Company				 = Company

		ReceivableInvoiceWithVoucherReferenceRel
			one-to-many relation to ReceivableInvoice
			Field Mapping uses ByGeneralLedgerDate
				related.Company				 = Company
			Instance Selection
				where (related.VoucherReferenceNumber entered)

		GeneralLedgerCalendarPeriodYearRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.TopNode					 = VoucherReferenceReportingBasis.GeneralLedgerCalendar.TopNode
			Instance Selection
				where (related.PeriodType.Year
				and	related.Year				 = LocalYear)










		ReceivablePaymentNoticeDetailNotPrintedRel
			one-to-many relation to ReceivablePaymentNoticeDetail
			Field Mapping uses Set2
				related.Company	 = Company
			Instance Selection
				where (LocalAsOfDateIDM	not entered
				and	LocalCustomerIDM	not entered
				and	LocalPrintDateIDM	not entered
				and	related.UpdateDate	not entered)


		CompanyCustomerIDMCustomerRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = LocalCustomerIDM
			Instance Selection
				where (LocalAsOfDateIDM entered
				and	   LocalCustomerIDM entered
				and	   LocalPrintDateIDM not entered)


		CompanyCustomerIDMPrintDateRel
			one-to-many relation to ReceivablePaymentNoticeDetail
			Field Mapping uses Set2
				related.Company = Company
				related.UpdateDate = LocalPrintDateIDM
			Instance Selection
				where (LocalAsOfDateIDM not entered
				and	LocalCustomerIDM not entered
				and	LocalPrintDateIDM entered)

		CompanyCustomerIDMRel
			classic name is ARCUSTOMERS
			one-to-many relation to CompanyCustomer
			delete restricted
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = LocalCustomerIDM

		InterCompanyBillingGroupIDMRel
			one-to-one relation to IntercompanyBillingGroup
			Field Mapping uses symbolic key
				related.IntercompanyBillingGroup	 = Company.BusinessGroup.FinanceEnterpriseGroup

		ReceivableOperatorRel
			one-to-one relation to ReceivableOperator
			Field Mapping uses symbolic key
				related.Company				 = Company
				related.ReceivableOperator	 = LocalReceivableOperator

		UnreportedForeignTradeAndPaymentRel
			one-to-many relation to ForeignTradeAndPayments
			Field Mapping uses Set4
				related.Company		= Company
			Instance Selection
				where (related.System = "AR"
				and	!related.Reported)
				
		UserDefaultPrinterRel
			one-to-one relation to UserDefaultPrinter
			Field Mapping uses symbolic key
				related.UserDefaultPrinter.Actor	= actor

		ReceivableGeneralLedgerCodeAdminFeeRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = Company
				related.ReceivableGeneralLedgerCode	 = AdminFeeReceivableGeneralLedgerCode
		
		OverApplyReceivableReasonRel
			one-to-many relation to ReceivableReason
			delete cascades
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =  OverApplyReasonCode
			Instance Selection
				where (related.ReceivableAdjustmentReasonType	 =	"OA")

		ReceivableReasonTaxWithholdingRel	
			one-to-many relation to ReceivableReason	
			delete cascades	
			Field Mapping uses symbolic key	
				related.Company	 = Company	
			Instance Selection	
				where (related.ReceivableAdjustmentReasonType.TaxWithholding	
				and related.Active)	

		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company	= Company

		TaxEntityRel
            one-to-one relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
                related.TaxEntity 				= GeneralLedgerCompanyRel.AccountingEntity

		CompanyCustomerWithNoAffiliateOwnershipRel
			one-to-many relation to CompanyCustomer
			delete restricted
			Field Mapping uses symbolic key
				related.Company	 = Company
			Instance Selection
				where (related.IsForeignVendor
				and related.Affiliate
				and related.AffiliateOwnership not entered)
				
		ReceivableReportExtendedPrintConfigurationRel		
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "ReceivableReportExtendedPrint"

		ShowReceivablesColumnarSearchConfigurationRel
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "ShowReceivablesColumnarSearch"

		ReceivablePrepaymentRel
			one-to-many relation to ReceivablePrepayment
			Field Mapping uses symbolic key
				related.Company							 = Company
			Instance Selection
				where (related.ReferenceType.External)


	Sets

		Set2
			indexed
			Sort Order
				CustomerGroupField.CustomerGroup
				Company

		ByICBCustomerDefault
			Instance Selection
				where (DefaultICBCustomerEntered)
			Sort Order
				CustomerGroupField.CustomerGroup
				ICBillingDefaultCustomer
				Company


	Actions
		Create is a Create Action
			Field Rules
				CurrentAgingPeriod
					default to CustomerGroupField.CustomerGroup.CurrentAgingPeriod

				AgingMethod
					default to CustomerGroupField.CustomerGroup.AgingMethod

				AgeCreditsRule
					default to CustomerGroupField.CustomerGroup.AgeCreditsRule

				AgePaymentsRule
					default to CustomerGroupField.CustomerGroup.AgePaymentsRule

				AgeDisputesRule
					default to CustomerGroupField.CustomerGroup.AgeDisputesRule

				TrasactionAgingDisplayDate
					default to CustomerGroupField.CustomerGroup.AgingDisplayDate

				AgingTransactionSequence
					default to CustomerGroupField.CustomerGroup.AgingTransactionSequence

				ProjectCreditMemoPrefix
					LocalPrefix			= ProjectCreditMemoPrefix
					LocalInvoiceType	= "C"
					LocalFiveCharacterPrefixEdit	= true						
					include ValidatePrefix

				ProjectInvoicePrefix
					LocalPrefix			= ProjectInvoicePrefix
					LocalInvoiceType	= "I"
					LocalFiveCharacterPrefixEdit	= true						
					include ValidatePrefix

				ICBillingInvoicePrefix
					LocalPrefix			= ICBillingInvoicePrefix
					LocalInvoiceType	= "I"
					include ValidatePrefix

				ICBillingCreditMemoPrefix
					LocalPrefix			= ICBillingCreditMemoPrefix
					LocalInvoiceType	= "C"
					include ValidatePrefix

				SLBillingInvoicePrefix
					LocalPrefix			= SLBillingInvoicePrefix
					LocalInvoiceType	= "I"
					include ValidatePrefix

				ApplyCashAcrossReceivableCompanies 
					default to true

			Exit Rules
				invoke Create ReceivableGeneralLedgerCode
					invoked.ReceivableGeneralLedgerCode = RGLCode
					invoked.Company						= Company
					invoked.DistributionAccount			= RGLCodeAccount
					invoked.Description					= RGLCodeDescription
					invoked.UsedFlag					= true
					invoked.Active						= true

				invoke Create ReceivableGeneralLedgerCode
					invoked.ReceivableGeneralLedgerCode	= ReceivedNotAppliedRGLCode
					invoked.Company						= Company
					invoked.DistributionAccount			= ReceivedNotAppliedRGLCodeAccount
					invoked.Description					= ReceivedNotAppliedRGLCodeDescription
					invoked.UsedFlag					= true
					invoked.Active						= true

				invoke Create ReceivableGeneralLedgerCode
					invoked.ReceivableGeneralLedgerCode	= PrepaymentRGLCode
					invoked.Company						= Company
					invoked.DistributionAccount			= PrepaymentRGLCodeAccount
					invoked.Description					= PrepaymentRGLCodeDescription
					invoked.UsedFlag					= true
					invoked.Active						= true

				if (FinanceChargeRGLCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= FinanceChargeRGLCode
						invoked.Company						= Company
						invoked.DistributionAccount			= FinanceChargeRGLCodeAccount
						invoked.Description					= FinanceChargeRGLCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true

				if (BOEAcceptanceRGLCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= BOEAcceptanceRGLCode
						invoked.Company						= Company
						invoked.DistributionAccount			= BOEAcceptanceRGLCodeAccount
						invoked.Description					= BOEAcceptanceRGLCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true

				if (BOEFinancialRevenueRGLCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= BOEFinancialRevenueRGLCode
						invoked.Company						= Company
						invoked.DistributionAccount			= BOEFinancialRevenueRGLCodeAccount
						invoked.Description					= BOEFinancialRevenueRGLCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true

				if (BOEFinancialExpenseRGLCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= BOEFinancialExpenseRGLCode
						invoked.Company						= Company
						invoked.DistributionAccount			= BOEFinancialExpenseRGLCodeAccount
						invoked.Description					= BOEFinancialExpenseRGLCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true

				if (BOEDishonoredExpenseRGLCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= BOEDishonoredExpenseRGLCode
						invoked.Company						= Company
						invoked.DistributionAccount			= BOEDishonoredExpenseRGLCodeAccount
						invoked.Description					= BOEDishonoredExpenseRGLCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true

				if (AdminFeeCode entered)
					invoke Create ReceivableGeneralLedgerCode
						invoked.ReceivableGeneralLedgerCode	= AdminFeeCode
						invoked.Company						= Company
						invoked.DistributionAccount			= AdminFeeCodeAccount
						invoked.Description					= AdminFeeCodeDescription
						invoked.UsedFlag					= true
						invoked.Active						= true
				

				ReceivableGeneralLedgerCode						= RGLCode
				ReceivedNotAppliedReceivableGeneralLedgerCode   = ReceivedNotAppliedRGLCode
				PrepaymentReceivableGeneralLedgerCode			= PrepaymentRGLCode
				FinanceChargeReceivableGeneralLedgerCode		= FinanceChargeRGLCode
				BOEAcceptanceReceivableGeneralLedgerCode		= BOEAcceptanceRGLCode
				BOEFinancialRevenueReceivableGeneralLedgerCode  = BOEFinancialRevenueRGLCode
				BOEFinancialExpenseReceivableGeneralLedgerCode  = BOEFinancialExpenseRGLCode
				BOEDishonoredExpenseReceivableGeneralLedgerCode	= BOEDishonoredExpenseRGLCode
				AdminFeeReceivableGeneralLedgerCode				= AdminFeeCode
				
				if (MultiCurrencyProcessing)
					invoke CreateForReceivableReason GainLossReceivableReasonRel
						invoked.ReceivableAdjustmentReasonType  = "OS"
						invoked.Description						= "Currency Gain Loss"
						invoked.Active							= true
	
				if (OverApplyReasonCode entered)
					invoke Create ReceivableReason
						invoked.Company							= Company
						invoked.ReceivableReasonType			= "AD"
						invoked.ReceivableReason				= OverApplyReasonCode	
						invoked.Description						= OverApplyReasonCodeDescription
						invoked.ReceivableAdjustmentReasonType	= "OA"	
						invoked.Active							= true















				if (ExpandedAgingPeriods)
					I1 = 1
					while (I1 <= 11)
						invoke Create ReceivableAgePeriod
							invoked.CustomerGroup = CustomerGroupField.CustomerGroup
							invoked.ReceivableCompany = Company
							initialize invoked.AgingCode
							invoked.SetupIndicator	= ReceivableAgePeriod.SetupIndicator.ForReceivableCompany
							invoked.AgePeriodSequence = I1
						I1 += 1
				else
					I1 = 1
					while (I1 <= 7)
						invoke Create ReceivableAgePeriod
							invoked.CustomerGroup = CustomerGroupField.CustomerGroup
							invoked.ReceivableCompany = Company
							initialize invoked.AgingCode
							invoked.SetupIndicator	= ReceivableAgePeriod.SetupIndicator.ForReceivableCompany
							invoked.AgePeriodSequence = I1
						I1 += 1

		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 
			bypass field rules 

		Update is an Update Action
			Field Rules
				AgingMethod
					default to "D"

				AgeCreditsRule
					default to "L"

				AgePaymentsRule
					default to "L"

				AgeDisputesRule
					default to "Y"

				TrasactionAgingDisplayDate
					default to "T"

				AgingTransactionSequence
					default to "T"

				ProjectCreditMemoPrefix
					if (ProjectCreditMemoPrefix changed
					and ProjectCreditMemoPrefix entered)
						LocalPrefix			= ProjectCreditMemoPrefix
						LocalInvoiceType	= "C"
						LocalFiveCharacterPrefixEdit	= true							
						include ValidatePrefix

				ProjectInvoicePrefix
					if (ProjectInvoicePrefix changed
					and ProjectInvoicePrefix entered)
						LocalPrefix			= ProjectInvoicePrefix
						LocalInvoiceType	= "I"
						LocalFiveCharacterPrefixEdit	= true							
						include ValidatePrefix

				ICBillingInvoicePrefix
					if (ICBillingInvoicePrefix changed
					and ICBillingInvoicePrefix entered)
						LocalPrefix			= ICBillingInvoicePrefix
						LocalInvoiceType	= "I"
						include ValidatePrefix

				ICBillingCreditMemoPrefix
					if (ICBillingCreditMemoPrefix changed
					and ICBillingCreditMemoPrefix entered)
						LocalPrefix			= ICBillingCreditMemoPrefix
						LocalInvoiceType	= "C"
						include ValidatePrefix

				SLBillingInvoicePrefix
					if (SLBillingInvoicePrefix changed
					and SLBillingInvoicePrefix entered)
						LocalPrefix			= SLBillingInvoicePrefix
						LocalInvoiceType	= "I"
						include ValidatePrefix

			Action Rules
				if (ICBillingDefaultCustomer changed)
					if (old ICBillingDefaultCustomer entered)
						LocalICBillingDefaultCustomer = old ICBillingDefaultCustomer
						constraint (!OpenIntercompanyBillingDocumentRel exists)
							"IntercompanyBillingDefaultCustomerCannotBeChangedOrRemoved;Open_(Unreleased,PendingApproval,OrReleased)BillingDocumentsExistForThisCompany"
			
			Exit Rules
				if (Name changed)	
					invoke UpdateTextSearch CompanyCustomer
						invoked.PrmCompany = Company
					
				if (ReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeAccountsReceivableRel
						invoked.UsedFlag = true

				constraint (ReceivableGeneralLedgerCode entered)	
					"Receivable_\Global_\Ledger_\CodeIsRequiredFor_\Receivable_\Company<Company>."	

				if (ReceivedNotAppliedReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeReceivedNotAppliedRel
						invoked.UsedFlag = true

				constraint (ReceivedNotAppliedReceivableGeneralLedgerCode entered)	
					"Received_\Not_\Applied_\Receivable_\Global_\Ledger_\CodeIsRequiredFor_\Receivable_\Company<Company>."	

				if (PrepaymentReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodePrepaymentRel
						invoked.UsedFlag = true

				constraint (PrepaymentReceivableGeneralLedgerCode entered)	
					"Prepayment_\Receivable_\Global_\Ledger_\CodeIsRequiredFor_\Receivable_\Company<Company>."	

				if (FinanceChargeReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeFinanceChargeRel
						invoked.UsedFlag = true

				if (BOEAcceptanceReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeBOEAcceptanceRel
						invoked.UsedFlag = true

				if (BOEFinancialRevenueReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeBOEFinancialRevenueRel
						invoked.UsedFlag = true
				
				if (BOEFinancialExpenseReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeBOEFinancialExpenseRel
						invoked.UsedFlag = true

				if (BOEDishonoredExpenseReceivableGeneralLedgerCode changed)
					invoke Update ReceivableGeneralLedgerCodeBOEDishonoredExpenseRel
						invoked.UsedFlag = true
						
				if (AdministrativeFee)
					if (AdminFeeReceivableGeneralLedgerCode changed)
						invoke Update ReceivableGeneralLedgerCodeAdminFeeRel
							invoked.UsedFlag = true


				if ((MultiCurrencyProcessing
				or	HasAlternateOrReportCurrency)
				and !GainLossReceivableReasonRel exists)
					invoke CreateForReceivableReason GainLossReceivableReasonRel
						invoked.ReceivableAdjustmentReasonType  = "OS"
						invoked.Description						= "Currency Gain Loss"
						invoked.Active							= true
				
				if ((OverApplyReasonCode entered
				or 	OverApplyReasonCode changed)
				and  !OverApplyReceivableReasonRel exists)
					invoke Create ReceivableReason
						invoked.Company						= Company
						invoked.ReceivableReasonType		= "AD"
						invoked.ReceivableReason			= OverApplyReasonCode
						invoked.Description					= OverApplyReasonCodeDescription
						invoked.ReceivableAdjustmentReasonType	= "OA"
						invoked.Active						= true
				if (OverApplyReasonCodeDescription changed)
					invoke Update OverApplyReceivableReasonRel
						invoked.Description					= OverApplyReasonCodeDescription


























				I1 = 1
				while (I1 <= 7)
					if (AgingPeriodForCompanyRel not exists)
						invoke Create ReceivableAgePeriod
							invoked.CustomerGroup = CustomerGroupField.CustomerGroup
							invoked.ReceivableCompany = Company
							initialize invoked.AgingCode
							invoked.SetupIndicator = ReceivableAgePeriod.SetupIndicator.ForReceivableCompany
							invoked.AgePeriodSequence = I1
					I1 += 1

				if (ExpandedAgingPeriods)
					if (ExpandedAgingPeriodRel not exists)
						I1 = 8	
						while (I1 <= 11)
							invoke Create ReceivableAgePeriod
								invoked.CustomerGroup = CustomerGroupField.CustomerGroup
								invoked.ReceivableCompany = Company
								initialize invoked.AgingCode
								invoked.SetupIndicator	= ReceivableAgePeriod.SetupIndicator.ForReceivableCompany
								invoked.AgePeriodSequence = I1
							I1 += 1

				else
					invoke Delete ExpandedAgingPeriodRel

		T2VUpdate is an Update Action				
			restricted 
			default label is untranslatable 
			bypass field rules 

		Delete is a Delete Action

		FastUpdate is an Update Action
			restricted
			bypass field rules
			Exit Rules


		ProcessPendingAdjustments is an Instance Action
			valid when (HasPendingAdjustments)
			Parameters
				Operator is like ReceivableOperator
			Parameter Rules
				Operator
					initial value is DerivedOperator
					if (CashOperatorRequired)
						required
			Action Rules
				invoke ProcessRecords ReceivablePendingAdjustment
					invoked.PrmUser			= actor
					invoked.PrmSource		= "R"
					invoked.PrmCompany		= Company
					invoked.PrmOperator		= Operator

				invoke ProcessRecords ReceivablePendingAdjustment
					invoked.PrmUser			= actor
					invoked.PrmSource		= "A"
					invoked.PrmCompany		= Company
					invoked.PrmOperator		= Operator

		RemovePendingAdjustments is an Instance Action
			valid when (HasPendingAdjustments)
			Action Rules
				invoke Purge CompanyPendingAdjustmentsRel




























		DeriveRequestedYearPeriod is an Instance Action
			restricted
			Parameters
				Company								is a ReceivableCompany
				EffectiveDate						is Date
			Parameter Rules
				Company
					required
				EffectiveDate
					required

			Action Rules
				RequestDate = EffectiveDate

				if (Company.PeriodsPerYear.Twelve)
					RequestedYear = RequestDate year
					RequestedPeriod = RequestDate month
					if (Company.PeriodOffset entered)
						RequestedPeriod += Company.PeriodOffset
						if (RequestedPeriod > 12)
							RequestedYear += 1
							RequestedPeriod -=12
				else
					RequestedYear = RequestDate year

					RequestedPeriod = RequestDate week / 4
					PartialPeriod = RequestDate week % 4
					if (PartialPeriod entered)
						RequestedPeriod += 1
					if (Company.PeriodOffset entered)
						RequestedPeriod += Company.PeriodOffset
						if (RequestedPeriod > 13)
							RequestedYear += 1
							RequestedPeriod -=13


		UpdateCustomerGroup is an Instance Action
			restricted
			Parameters
				PrmCustomerGroup		is a CustomerGroup

			Parameter Rules
				PrmCustomerGroup
					required

			Action Rules
				constraint (CompanyCustomerRel not exist)
					"CannotChangeCustomerGroupOnReceivableCompany;AtLeastOneCompanyCustomerRecordExists"

				CustomerGroupField.CustomerGroup = PrmCustomerGroup


		ChangeLastPaymentAutoBatchNumber is an Instance Action 
			valid when (PaymentBatchNumbering)
			default label is "ChangeLastBatch"
			Parameters
				PrmLastBatch	is a BatchNumber
					default label is "LastBatch"	
			Parameter Rules
				PrmLastBatch
					initial value is LastPaymentAutoBatchNumber
			Action Rules
				constraint (PaymentBatchNumbering)
					"CannotEnterBatchNumber;AutoNumberingOn"
				constraint (PrmLastBatch > LastPaymentAutoBatchNumber)  
					"LastPaymentBatchNumberMustBeGreaterThanPreviousPaymentBatchNumber"
				LastPaymentAutoBatchNumber = PrmLastBatch
		ChangeLastAutoTransBatchNumber is an Instance Action 
			valid when (TransBatchNumbering)
			default label is "ChangeLastBatch"
			Parameters
				PrmLastBatch	is a BatchNumber
					default label is "LastBatch"	
			Parameter Rules
				PrmLastBatch
					initial value is LastAutoTransBatchNumber
			Action Rules
				constraint (TransBatchNumbering)
					"CannotEnterBatchNumber;AutoNumberingOn"
				constraint (PrmLastBatch > LastAutoTransBatchNumber)  
					"LastTransactionBatchNumberMustBeGreaterThanPreviousTransactionBatchNumber"
				LastAutoTransBatchNumber = PrmLastBatch	

		ChangeLastManualInvoiceNumber is an Instance Action
			valid when (AutomaticManualInvoiceNumbering)
			default label is "ChangeLastManualInvoiceNumber"
			Parameters
				PrmLastManualInvoiceNumber is Numeric 12
					default label is "LastManualInvoiceNumber"
			Parameter Rules
				PrmLastManualInvoiceNumber
					initial value is ManualInvoiceNumber
			Action Rules
				constraint (AutomaticManualInvoiceNumbering)
					"CannotEnterLastManualInvoiceNumber;AutomaticManualInvoiceNumberingIsNotSelected"
				constraint (PrmLastManualInvoiceNumber > ManualInvoiceNumber)  
					"LastManualInvoiceNumberMustBeGreaterThanPreviousManualInvoiceNumber"
				ManualInvoiceNumber = PrmLastManualInvoiceNumber


		ChangeLastManualMemoNumber is an Instance Action
			valid when (AutomaticManualInvoiceNumbering)
			default label is "ChangeLastManualMemoNumber"
			Parameters
				PrmLastManualMemoNumber is Numeric 12
					default label is "LastManualMemoNumber"
			Parameter Rules
				PrmLastManualMemoNumber
					initial value is ManualMemoNumber
			Action Rules
				constraint (AutomaticManualInvoiceNumbering)
					"CannotEnterLastManualMemoNumber;AutomaticManualInvoiceNumberingIsNotSelected"
				constraint (PrmLastManualMemoNumber > ManualMemoNumber) 
					"LastManualMemoNumberMustBeGreaterThanPreviousManualMemoNumber"
				ManualMemoNumber = PrmLastManualMemoNumber


		ChangeICBillingInvoiceNumber is an Instance Action 
			valid when (ICBillingDefaultProcessLevel entered)
			default label is "ChangeLastInvoiceNumber"
			Parameters
				PrmLastInvoiceNumber is Numeric 12
					default label is "LastInvoiceNumber"	
			Parameter Rules
				PrmLastInvoiceNumber
					initial value is ICBillingInvoiceNumber
			Action Rules
				constraint (ICBillingDefaultProcessLevel entered)
					"Process_LevelMustBeEnteredIfProcessing_Intercompany_Billing"
				constraint (PrmLastInvoiceNumber > ICBillingInvoiceNumber)  
					"LastIntercompanyBillingInvoiceNumberMustBeGreaterThanPreviousIntercompanyBillingInvoiceNumber" 
				ICBillingInvoiceNumber = PrmLastInvoiceNumber


		ChangeICBillingCreditMemoNumber is an Instance Action 
			valid when (ICBillingDefaultProcessLevel entered)
			default label is "ChangeLastCreditMemoNumber"
			Parameters
				PrmLastCreditMemoNumber	is Numeric 12
					default label is "LastCreditMemoNumber"	
			Parameter Rules
				PrmLastCreditMemoNumber
					initial value is ICBillingCreditMemoNumber
			Action Rules
				constraint (ICBillingDefaultProcessLevel entered)
					"Process_LevelMustBeEnteredIfProcessing_Intercompany_Billing"
				constraint (PrmLastCreditMemoNumber > ICBillingCreditMemoNumber)  
					"LastIntercompanyBillingCreditMemoNumberMustBeGreaterThanPreviousIntercompanyBillingCreditMemoNumber" 
				ICBillingCreditMemoNumber = PrmLastCreditMemoNumber

		
		ChangeLastOverApplyNumbers is an Instance Action 
			default label is "ChangeLastNumbers"
			Parameters
				PrmLastOverApplyInvoiceCreditNumber	is Numeric 7
					default label is "LastOverApplyCreditMemo"  
				PrmLastOverApplyCreditDebitNumber	is Numeric 7
					default label is "LastOverApplyDebitMemo"	  
			Parameter Rules
				PrmLastOverApplyInvoiceCreditNumber
					initial value is LastOverApplyInvoiceCreditNumber
				PrmLastOverApplyCreditDebitNumber
					initial value is LastOverApplyCreditDebitNumber
			Action Rules
				if (PrmLastOverApplyInvoiceCreditNumber != DerivedLastOverApplyInvoiceCreditNumber) 
					constraint (PrmLastOverApplyInvoiceCreditNumber > LastOverApplyInvoiceCreditNumber)  
						"LastOverApplyCreditMemoNumberMustBeGreaterThanPreviousOverApplyCreditMemoNumber" 
				if (PrmLastOverApplyCreditDebitNumber != DerivedLastOverApplyCreditDebitNumber)  
					constraint (PrmLastOverApplyCreditDebitNumber > LastOverApplyCreditDebitNumber)  
						"LastOverApplyDebitMemoNumberMustBeGreaterThanPreviousOverApplyDebitMemoNumber" 
				LastOverApplyInvoiceCreditNumber 	= PrmLastOverApplyInvoiceCreditNumber
				LastOverApplyCreditDebitNumber 		= PrmLastOverApplyCreditDebitNumber

		
		ChangeLastFinanceChargeNumber is an Instance Action 
			default label is "ChangeLastNumber"
			Parameters
				PrmLastFinanceChargeNumber	is Numeric 7
					default label is "LastNumber"
			Parameter Rules
				PrmLastFinanceChargeNumber
					initial value is LastFinanceChargeNumber
			Action Rules
				constraint (PrmLastFinanceChargeNumber > LastFinanceChargeNumber)  
					"LastFinanceChargeNumberMustBeGreaterThanPreviousFinanceChargeNumber" 
				LastFinanceChargeNumber 	= PrmLastFinanceChargeNumber

		
		ChangeLastBOENumbers is an Instance Action 
			default label is "ChangeLastNumbers"
			Parameters
				PrmLastBOERemittanceNumber 	is like RemitNumber
					default label is "RemittanceNumber"
				PrmLastBillOfExchangeNumber is like LastDraftNumber
					default label is "LastB\O\ENumber"	
			Parameter Rules
				PrmLastBOERemittanceNumber
					initial value is LastBOERemittanceNumber
				PrmLastBillOfExchangeNumber
					initial value is LastBillOfExchangeNumber
			Action Rules
				if (PrmLastBOERemittanceNumber != DerivedLastBOERemittanceNumber)  
					constraint (PrmLastBOERemittanceNumber > LastBOERemittanceNumber)  
						"LastBillOfExchangeRemittanceNumberMustBeGreaterThanPreviousBillOfExchangeRemittanceNumber"
				if (PrmLastBillOfExchangeNumber != DerivedLastBillOfExchangeNumber)  
					constraint (PrmLastBillOfExchangeNumber  > LastBillOfExchangeNumber)  
						"LastBillOfExchangeNumberMustBeGreaterThanPreviousBillOfExchangeNumber" 
				LastBOERemittanceNumber 	= PrmLastBOERemittanceNumber
				LastBillOfExchangeNumber 	= PrmLastBillOfExchangeNumber

		
		ChangeLastProjectInvoiceNumbers is an Instance Action 
			default label is "ChangeLastNumbers"
			Parameters
				PrmProjectCreditNumber 	is Numeric size 12
					default label is "LastCreditMemoNumber"
				PrmProjectInvoiceNumber is Numeric size 12
					default label is "LastInvoiceNumber"	
			Parameter Rules
				PrmProjectCreditNumber
					initial value is ProjectCreditNumber
				PrmProjectInvoiceNumber
					initial value is ProjectInvoiceNumber
			Action Rules
				if (PrmProjectCreditNumber != DerivedProjectCreditNumber)    
					constraint (PrmProjectCreditNumber > ProjectCreditNumber)
						"LastProjectCreditNumberMustBeGreaterThanPreviousProjectCreditNumber"  
				if (PrmProjectInvoiceNumber != DerivedProjectInvoiceNumber)  
					constraint (PrmProjectInvoiceNumber  > ProjectInvoiceNumber)  
						"LastProjectInvoiceNumberMustBeGreaterThanPreviousProjectInvoiceNumber" 
				ProjectCreditNumber 	= PrmProjectCreditNumber
				ProjectInvoiceNumber 	= PrmProjectInvoiceNumber

		
		ChangeMiscellaneousLastNumbers is an Instance Action 
			default label is "ChangeLastNumbers"
			Parameters
				PrmLastChargebackBatchNumber 	is a BatchNumber
				PrmLastChargebackNumber			is Numeric size 7
				PrmLastRTMPaymentNumber			is Numeric size 7
				PrmLastGroupedObligationNumber	is Numeric size 7
				PrmLastCreditChargebackNumber	is Numeric size 7
				PrmLastDunningLetterCycleID		is a DunCycleId
				PrmLastEFTBalancingDebitMemoNbr	is Numeric size 7
			Parameter Rules
				PrmLastChargebackBatchNumber
					initial value is LastChargebackBatchNumber
				
				PrmLastChargebackNumber
					initial value is LastChargebackNumber
				
				PrmLastRTMPaymentNumber
					initial value is LastRTMPaymentNumber

				PrmLastGroupedObligationNumber
					initial value is LastGroupedObligationNumber

				PrmLastCreditChargebackNumber
					initial value is LastCreditChargebackNumber

				PrmLastDunningLetterCycleID
					initial value is LastDunningLetterCycleID

				PrmLastEFTBalancingDebitMemoNbr
					initial value is LastEFTBalancingDebitMemoNbr
			Action Rules
				if (PrmLastChargebackBatchNumber != DerivedLastChargebackBatchNumber)   
					constraint (PrmLastChargebackBatchNumber > LastChargebackBatchNumber) 
						"LastRTMAndChargebackBatchNumberMustBeGreaterThanPreviousRTMAndChargebackBatchNumber" 

				if (PrmLastChargebackNumber != DerivedLastChargebackNumber)   
					constraint (PrmLastChargebackNumber  > LastChargebackNumber) 
						"LastChargebackNumberMustBeGreaterThanPreviousChargebackNumber" 

				if (PrmLastRTMPaymentNumber != DerivedLastRTMPaymentNumber)   
					constraint (PrmLastRTMPaymentNumber > LastRTMPaymentNumber) 
						"LastRTMPaymentNumberMustBeGreaterThanPreviousRTMPaymentNumber" 

				if (PrmLastGroupedObligationNumber != DerivedLastGroupedObligationNumber)   
					constraint (PrmLastGroupedObligationNumber  > LastGroupedObligationNumber) 
						"LastGroupedObligationNumberMustBeGreaterThanPreviousGroupedObligationNumber"

				if (PrmLastCreditChargebackNumber != DerivedLastCreditChargebackNumber)   
					constraint (PrmLastCreditChargebackNumber > LastCreditChargebackNumber) 
						"LastCreditChargebackNumberMustBeGreaterThanPreviousCreditChargebackNumber" 

				if (PrmLastDunningLetterCycleID != DerivedLastDunningLetterCycleID)   
					constraint (PrmLastDunningLetterCycleID  > LastDunningLetterCycleID) 
						"LastDunningLetterCycleIDMustBeGreaterThanPreviousDunningLetterCycleID"

				if (PrmLastEFTBalancingDebitMemoNbr != DerivedLastEFTBalancingDebitMemoNbr)   
					constraint (PrmLastEFTBalancingDebitMemoNbr > LastEFTBalancingDebitMemoNbr) 
						"LastEFTBalancingDebitMemoNunberMustBeGreaterThanPreviousEFTBalancingDebitMemoNumber" 
				LastChargebackBatchNumber 		= PrmLastChargebackBatchNumber
				LastChargebackNumber 			= PrmLastChargebackNumber
				LastRTMPaymentNumber 			= PrmLastRTMPaymentNumber
				LastGroupedObligationNumber 	= PrmLastGroupedObligationNumber
				LastCreditChargebackNumber 		= PrmLastCreditChargebackNumber
				LastDunningLetterCycleID 		= PrmLastDunningLetterCycleID
				LastEFTBalancingDebitMemoNbr 	= PrmLastEFTBalancingDebitMemoNbr


		CreateReceivableAgePeriod is an Update Action 
			restricted
			Action Rules
				invoke Update

			Exit Rules
				for each AgingCodeRel
					invoke Update each




		CreateReceivableAgePeriods is a Set Action		

			restricted

			Action Rules
				Set Rules
					Exit Rules
						invoke CreateReceivableAgePeriods AgingCode
				Instance Rules
					invoke Update

		
		ReceivablesColumnarSearch is a Set Action
			restricted
			default label is "ReceivablesColumnarSearchLists"
			Instance Selection
				where (false)
			Action Rules
				Empty Set Rules
					if (ShowReceivablesColumnarSearchConfigurationRel exists)
						if (ShowReceivablesColumnarSearchConfigurationRel.Value = "true")
							invoke Update ShowReceivablesColumnarSearchConfigurationRel
								invoked.Value   = false
						else
							invoke Update ShowReceivablesColumnarSearchConfigurationRel
								invoked.Value   = true
					else
						invoke Create ShowReceivablesColumnarSearchConfigurationRel
							invoked.Type        = 8233 
							invoked.Length      = 1
							invoked.Value       = true


		UpdateLastPayablesInterface	is an Instance Action
			valid when (VendorCreateAndInterfaceToAP)
			Parameters
				PrmLastPayablesInterfaceInvoice			is Numeric size 8
					default label is "LastPayablesInterfaceInvoice"
			Action Rules
				constraint (PrmLastPayablesInterfaceInvoice >= 0)
					"LastPayablesInterfaceInvoiceCannotBeANegativeNumber"
				if (PrmLastPayablesInterfaceInvoice < LastPayablesInterfaceInvoice)
					confirmation required
						"LastPayablesInterfaceInvoiceIsLessThanTheExistingValue"
				LastPayablesInterfaceInvoice 		= PrmLastPayablesInterfaceInvoice


		Netting is a Set Action
			Parameters
				PrmBalanceOption							is AlphaUpper size 1
					States
						ARToAP				value is "A"
							default label is "ReceivablesToPayables"
						APToAR				value is "B"
							default label is "PayablesToReceivables"
						LesserToGreater	value is "C"
						GreaterToLesser	value is "D"
				PrmFEG										is a FinanceEnterpriseGroup

				PrmGeneralLedgerCompany						is a GeneralLedgerCompany
				PrmReceivableCompany						is a ReceivableCompany
				PrmARPostDate								is Date
				PrmARProcessLevel							is a ReceivableProcessLevel
					context of PrmReceivableCompany
				PrmInvoiceDate								is Date
				PrmTermsCode								is a TermsCode
					context of PrmFEG
				PrmMemoReason								is a CreditDebitMemoReason
					context of PrmReceivableCompany
				PrmARAccrualCode							is a PayablesAccrualCode
					context of PrmVendorGroup
				PrmDueDate									is Date
				PrmDescription								is a Description

				PrmPayablesCompany							is a PayablesCompany
				PrmARAPPostDate								is Date
				PrmAPInvoiceDate							is Date
				PrmReasonType								is a ReceivableReasonType
				PrmReceivableReason							is a ReceivableReason
					context of PrmReceivableCompany
				PrmVendorGroup								is a VendorGroup
				PrmAuthorityCode							is a PayablesAuthorityCode
					context of PrmVendorGroup
				PrmOperator									is an Operator 
					holds pii
				PrmARAPDescription							is a Description
				PrmARAPProcessLevel							is a PayablesProcessLevel
					context of PrmPayablesCompany

				PrmAccrualCode								is a ReceivableGeneralLedgerCode
					context of PrmReceivableCompany
				PrmARAPTermsCode							is a TermsCode
					context of PrmFEG
				PrmARAPDueDate								is Date
				PrmDistributionClearingAccount				is a FinanceCodeBlock
				PrmDetailInterface							is Boolean
				PrmHSNSACCode								is a HSNSACCode
					context of PrmFEG

			Parameter Rules
				PrmFEG
					initial value is PrmGeneralLedgerCompany.FinanceEnterpriseGroup
					default to PrmGeneralLedgerCompany.FinanceEnterpriseGroup

				PrmBalanceOption
					required
						"BalanceOptionIsRequired"  

				PrmGeneralLedgerCompany
					required
					PrmReceivableCompany = PrmGeneralLedgerCompany
					PrmPayablesCompany = PrmGeneralLedgerCompany

				PrmReceivableCompany
					initial value is PrmGeneralLedgerCompany.Company
					required

				PrmPayablesCompany
					initial value is PrmGeneralLedgerCompany.Company
					required

					constraint (PrmPayablesCompany = PrmReceivableCompany)
						"ReceivableCompanyShouldBeEqualToPayablesCompany"

				PrmARPostDate
					initial value is current corporate date
					if (!PrmBalanceOption.ARToAP)
						default to current corporate date
						required
							"PostDateIsRequired"

					if (PrmReceivableCompany.CompanySystemClosingControlRel.Control and PrmReceivableCompany.VerifyGLDateWithinGLDateRange)		
						constraint (PrmARPostDate within PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate)
							"PostDate<PrmARPostDate>IsNotWithinValidEntryDatesForCompany;ValidDateRangeIs<PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<PrmReceivableCompany.CompanySystemClosingControlRel.ValidEntryDate.End>"


				PrmARProcessLevel
					if (!PrmBalanceOption.ARToAP)
						required
							"ProcessLevelIsRequired"

				PrmARAPProcessLevel
					if (!PrmBalanceOption.APToAR)
						required
							"ProcessLevelIsRequired"

				PrmInvoiceDate
					default to PrmARPostDate

				PrmTermsCode
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterAPToARTermsCodeWhenDetailInterfaceFlagIs=True"
							
					else
						if (!PrmBalanceOption.ARToAP)														
							if (PrmTermsCode entered)
								constraint (PrmDueDate not entered)
									"DueDateEntered;CannotEnterTermsCode"
									
							if (PrmTermsCode not entered)
								constraint (PrmDueDate entered)
									"MustEnterTermsCodeOrDueDate"
						
				PrmDueDate
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterAPToARDueDateWhenDetailInterfaceFlagIs=True"
							
					else
						if (!PrmBalanceOption.ARToAP)								
							if (PrmDueDate entered)
								constraint (PrmTermsCode not entered)
									"TermsCodeEntered;CannotEnterDueDate"
	
							if (PrmDueDate not entered)
								constraint (PrmTermsCode entered)
									"MustEnterTermsCodeOrDueDate"
	
							if (PrmDueDate entered)
								constraint (PrmDueDate >= current corporate date)
									"DueDateCannotBeLessThanToday"

				PrmMemoReason
					if (!PrmBalanceOption.ARToAP)
						required
							"MemoReasonIsRequired"


				PrmVendorGroup
					PrmVendorGroup = PrmPayablesCompany.BusinessGroup

				PrmARAPPostDate
					initial value is current corporate date
					if (!PrmBalanceOption.APToAR)
						required
							"PostDateIsRequired"

				PrmAPInvoiceDate
					initial value is current corporate date
					if (!PrmBalanceOption.APToAR)
						default to current corporate date

				PrmReceivableReason
					if (!PrmBalanceOption.APToAR)
						required
							"ReceivableReasonIsRequired"
					constraint (PrmReceivableReason != "CURR")
						"CURRIsAReservedReasonCode"

				PrmARAPTermsCode
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterARToAPTermsCodeWhenDetailInterfaceFlagIs=True"
							
					else
						if (!PrmBalanceOption.APToAR)							
							if (PrmARAPTermsCode entered)
								constraint (PrmARAPDueDate not entered)
									"DueDateEntered;CannotEnterTermsCode"
	
							if (PrmARAPTermsCode not entered)
								constraint (PrmARAPDueDate entered)
									"MustEnterTermsCodeOrDueDate"
						

				PrmARAPDueDate
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterARToAPDueDateWhenDetailInterfaceFlagIs=True"
							
					else
						if (!PrmBalanceOption.APToAR)							
							if (PrmARAPDueDate entered)
								constraint (PrmARAPTermsCode not entered)
									"TermsCodeEntered;CannotEnterDueDate"
	
							if (PrmARAPDueDate not entered)
								constraint (PrmARAPTermsCode entered)
									"MustEnterTermsCodeOrDueDate"
	
							if (PrmARAPDueDate entered)
								constraint (PrmARAPDueDate >= current corporate date)
									"DueDateCannotBeLessThanToday"
				PrmOperator
					if (!PrmBalanceOption.APToAR)
						if (PrmReceivableCompany.CashOperatorRequired)
							required
								"OperatorIsRequired"
						else
							force default to actor

				PrmReasonType
					default to "AD"
					initial value is "AD"
				
				PrmDistributionClearingAccount
					if (!PrmBalanceOption.ARToAP)
						required
							"ClearingAccountIsRequired"
				
				PrmHSNSACCode
					if (PrmGeneralLedgerCompany.RequireHSNSACCode)
						required
							"HSN/SACCodeIsRequired"
					else
						cannot be entered
							"CannotEnter,HSN_/SACCodeFlagIsNotSetAtGlobalLedgerCompany"


			Instance Selection
				where (Company = PrmReceivableCompany)

			Action Rules
				Instance Rules
					invoke Netting PayablesCompany
						invoked.PrmBalanceOption					= PrmBalanceOption
						invoked.PrmGeneralLedgerCompany				= PrmGeneralLedgerCompany
						invoked.PrmReceivableCompany				= PrmReceivableCompany
						invoked.PrmFEG								= PrmFEG
						invoked.PrmARPostDate						= PrmARPostDate
						invoked.PrmARProcessLevel					= PrmARProcessLevel
						invoked.PrmInvoiceDate						= PrmInvoiceDate
						invoked.PrmTermsCode						= PrmTermsCode
						invoked.PrmMemoReason						= PrmMemoReason
						invoked.PrmARAccrualCode					= PrmARAccrualCode
						invoked.PrmDueDate							= PrmDueDate
						invoked.PrmDescription						= PrmDescription
						invoked.PrmPayablesCompany					= PrmPayablesCompany
						invoked.PrmARAPPostDate						= PrmARAPPostDate
						invoked.PrmReasonType						= PrmReasonType
						invoked.PrmReceivableReason					= PrmReceivableReason
						invoked.PrmVendorGroup						= PrmVendorGroup
						invoked.PrmAuthorityCode					= PrmAuthorityCode
						invoked.PrmOperator							= PrmOperator
						invoked.PrmARAPDescription					= PrmARAPDescription
						invoked.PrmARAPProcessLevel					= PrmARAPProcessLevel

						invoked.PrmAccrualCode						= PrmAccrualCode
						invoked.PrmARAPTermsCode					= PrmARAPTermsCode
						invoked.PrmARAPDueDate						= PrmARAPDueDate
						invoked.PrmAPInvoiceDate					= PrmAPInvoiceDate
						invoked.PrmDistributionClearingAccount	  	= PrmDistributionClearingAccount
						invoked.PrmDetailInterface					= PrmDetailInterface
						if (PrmGeneralLedgerCompany.RequireHSNSACCode)
							invoked.PrmHSNSACCode					= PrmHSNSACCode

		AssignVoucherReferenceNumber is an Instance Action
			restricted
			run in background

			Parameters
				PrmYearOption				is Numeric 1
					States
						CurrentYear		value is 1
						PreviousYear	value is 2

			Local Fields
				LocalPeriodStartDate		is Date
				LocalPeriodEndDate			is Date

			Entrance Rules
				if (PrmYearOption.CurrentYear)
					LocalYear			 = VoucherReferenceReportingBasis.BasisYear
					LocalPeriodStartDate = GeneralLedgerCalendarPeriodYearRel.DerivedStartDate
					LocalPeriodEndDate	 = GeneralLedgerCalendarPeriodYearRel.DerivedEndDate

				if (PrmYearOption.PreviousYear)
					LocalYear = (VoucherReferenceReportingBasis.BasisYear - 1)
					LocalPeriodStartDate = GeneralLedgerCalendarPeriodYearRel.DerivedStartDate
					LocalPeriodEndDate	 = GeneralLedgerCalendarPeriodYearRel.DerivedEndDate

			Action Rules
				invoke AssignVoucherReferenceNumber ReceivableInvoice
					invoked.PrmCompany		   = Company
					invoked.PrmPeriodStartDate = LocalPeriodStartDate
					invoked.PrmPeriodEndDate   = LocalPeriodEndDate

			Exit Rules
				invoke FastUpdate
					invoked.VoucherReferenceLastRunDate = current corporate date


		CreatePaymentRequestNotice is an Instance Action
			restricted
			Parameters
				PrmAsOfDate					is Date
				PrmCustomer					is a Customer
				PrmPrintDate				is Date
				PrmIDMPrinter				is an IDMPrinter
					
			Action Rules
				LocalAsOfDateIDM 	= PrmAsOfDate
				LocalCustomerIDM 	= PrmCustomer
				LocalPrintDateIDM 	= PrmPrintDate

				if (ReceivablePaymentNoticeDetailNotPrintedRel exists)
					for each distinct ReceivablePaymentNoticeDetail.Customer in ReceivablePaymentNoticeDetailNotPrintedRel
						LocalCustomerIDM = each.ReceivablePaymentNoticeDetail.Customer
						invoke CreatePaymentRequestNoticeInIDM CompanyCustomerIDMRel
							invoked.PrmIDMPrinter	= PrmIDMPrinter
							
				if (CompanyCustomerIDMCustomerRel exists)
					for each CompanyCustomerIDMCustomerRel
						invoke CreatePaymentRequestNoticeInIDM each
							invoked.PrmAsOfDate 	= PrmAsOfDate
							invoked.PrmIDMPrinter	= PrmIDMPrinter
						
				if (CompanyCustomerIDMPrintDateRel exists)
					for each distinct ReceivablePaymentNoticeDetail.Customer in CompanyCustomerIDMPrintDateRel
						LocalCustomerIDM = each.ReceivablePaymentNoticeDetail.Customer
						invoke CreatePaymentRequestNoticeInIDM CompanyCustomerIDMRel
							invoked.PrmPrintDate 	= PrmPrintDate
							invoked.PrmIDMPrinter	= PrmIDMPrinter



		ValidateReceivableOperator is an Instance Action
			restricted
			Parameters
				PrmReceivableOperator is like ReceivableOperator
			Action Rules
				LocalReceivableOperator = PrmReceivableOperator
				constraint (ReceivableOperatorRel exists)
					"OperatorDoesNotExist"


		CreateMarkedAsPaidReceivableReason is an Instance Action	
			valid when (MarkedAsPaidReceivableReason !entered)
			confirmation required
				"TheCreationOfA_\MarkedAs_\Paid_\Receivable_\ReasonIsAPermanentAction.PleaseNoteThatThis_\Receivable_\ReasonCannotBeModified.However,The_\MarkedAs_\Paid_\Offset_\AccountCanBeUpdatedAtALaterTime.DoYouWantToProceed?"	
			completion message is "MarkAsPaidReceivableReasonOf<MarkedAsPaidReceivableReason>HasBeenCreated"

			Parameters
				PrmReceivableReasonType				is a ReceivableReasonType
				PrmMarkedAsPaidReceivableReason		is AlphaUpper size 4
				PrmMarkedAsPaidOffsetAccount		is a FinanceCodeBlockFull

			Parameter Rules
				PrmReceivableReasonType
					default to "AD"
					initial value is "AD"
				PrmMarkedAsPaidReceivableReason
					required
					initial value is MarkedAsPaidReceivableReason
						when (MarkedAsPaidReceivableReason entered)	
					if (MarkedAsPaidReceivableReason entered)
						cannot be changed
				PrmMarkedAsPaidOffsetAccount
					required
					initial value is MarkedAsPaidOffsetAccount
						when (MarkedAsPaidReceivableReason entered)	

			Entrance Rules

			Action Rules
				MarkedAsPaidReceivableReason	 = PrmMarkedAsPaidReceivableReason
				MarkedAsPaidOffsetAccount		 = PrmMarkedAsPaidOffsetAccount


				invoke Create MarkAsPaidReceivableReasonRel
					invoked.ReceivableAdjustmentReasonType	 =	"MP"
					invoked.Description						 =	"Mark As Paid"
					invoked.Active							 =	true

			Exit Rules


		UpdateMarkedAsPaidOffsetAccount is an Instance Action
			valid when (MarkedAsPaidReceivableReason entered)

			Parameters
				PrmMarkedAsPaidOffsetAccount		is a FinanceCodeBlockFull

			Parameter Rules
				PrmMarkedAsPaidOffsetAccount
					initial value is MarkedAsPaidOffsetAccount

			Action Rules
				MarkedAsPaidOffsetAccount		 = PrmMarkedAsPaidOffsetAccount

			Exit Rules

				if (MarkedAsPaidOffsetAccount not entered		
				and MarkAsPaidReceivableReasonRel2 exists)
					invoke FastUpdate MarkAsPaidReceivableReasonRel2
						invoked.Active								 = false

				if (MarkedAsPaidOffsetAccount entered				
				and MarkAsPaidReceivableReasonRel2 exists)
					invoke FastUpdate MarkAsPaidReceivableReasonRel2
						invoked.Active							= true


		SendNotificationForEmptyReceivableStatement is an Instance Action
			restricted
			Local Fields
				LocalActor							is an Actor
			Action Rules
				LocalActor = actor
				
				send notification
					to LocalActor
					description is "NoRecordsToProcessForReceivablesStatementForCompany_<Company>"
					priority is high
					detail is "NoRecordsToProcessForReceivablesStatement.PleaseCheckTheInvoicesAndParametersToProcessAndRunTheBatchProgramAgain."
					
		UpdateTotal is an Instance Action
			restricted
			Parameters
				PrmCompanyTotal              is an InternationalAmount
				PrmBalanceConversionResult   is a ReceivablesJobResult
			Action Rules
				CompanyTotal           += PrmCompanyTotal
				BalanceConversionResult = PrmBalanceConversionResult
				
		InitializeBalance is a Set Action
			restricted
			Parameters
				PrmCustomerGroup is a CustomerGroup
			
			Instance Selection 
				where (PrmCustomerGroup = CustomerGroupField.CustomerGroup)
				
			Action Rules
				Instance Rules
					initialize  CompanyTotal
			
					
					
		RebuildReceivableProjectTransactions is a Set Action
			restricted	
			completion message is "RebuildReceivableProjectTransactionsComplete."
			Parameters
				PrmCompany							is a ReceivableCompany
				PrmCompanyGroup						is a GeneralLedgerCompanyGroup
					default label is "CompanyGroup"		

			Parameter Rules
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"CompanyOrCompanyGroupRequired"

				PrmCompanyGroup
					if (PrmCompany entered)
						cannot be entered
							"CannotEnterCompanyGroupIfCompanyEntered"
					LocalCompanyGroup = PrmCompanyGroup
			
			Local Fields
				RecordCount		is Numeric 10
				LocalActor	  is Actor
						
			Instance Selection 
				where  (CompanyGroupRel exists	
				or 		PrmCompany = Company)
					


				
			Action Rules
				Instance Rules
				
					for each ReceivableInvoiceDetailWithProjectRel
						invoke UpdateReceivableProjectTransaction each
						RecordCount = RecordCount + 1
					
					for each ReceivablePaymentWithProjectRel
						invoke UpdateReceivableProjectTransaction each
						RecordCount = RecordCount + 1

				Set Rules
					Exit Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "RebuildReceivableProjectTransactionsCompleted"
							priority is medium
							detail is "TotalRecordsUpdated=<RecordCount>"

