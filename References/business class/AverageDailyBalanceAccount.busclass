AverageDailyBalanceAccount is a BusinessClass
	owned by ad
	prefix is ADBAD   
    
    Ontology
    	symbolic key is AverageDailyBalanceAccount

    Patterns

	Context Fields

    Persistent Fields
        ADBDimension1				is like AccountingUnit
        ADBDimension2				is like AccountingUnit
        ADBDimension3				is like AccountingUnit
		Active
		NonChartAccount				is Boolean
        TransactionLedger			is like Ledger
	        default label is "Ledger"
	    TransactionCurrency			is like Currency
	    LastADBDate					is Date
	    	disable Auditing

    Transient Fields

	Local Fields
		LocalGeneralLedgerCalendar			is like GeneralLedgerCalendar
		LocalCloseLedger					is like Ledger
		LocalTransactionLedger				is like Ledger
		LocalTransactionCurrency			is like Currency
		LocalAccountingEntity				is like AccountingEntity
		LocalReportingChart					is like ReportingChart
		LocalBeginBalancePeriod				is like GeneralLedgerCalendarPeriod
		LocalReportingBasis					is a ReportingBasis
		LocalRunDate						is Date
		LocalDate							is Date
		LocalSummaryPeriodType	 			is Numeric 1
			States
				Year					    value is 1
				Quarter					    value is 2
				Month					    value is 3
				Week					    value is 4
				Day							value is 8					
				EndDate					    value is 5
				TopNode    	   				value is 7
		LocalInstGeneralLedgerChartAccount		is like GeneralLedgerChartAccount
		LocalInstDimensionCode					is Alpha 70
		LocalInstGeneralLedgerCalendarPeriod	is like GeneralLedgerCalendarPeriod
		LocalSystemAccount						is a SystemAccount
		LocalBasisYear							is like GeneralLedgerCloseYear
		LocalAverageDailyBalanceTransaction		is a AverageDailyBalanceTransaction

		LocalAccountingUnit					is like AccountingUnit
		LocalProject						is like AccountingUnit
		LocalDimension1						is like AccountingUnit
		LocalDimension2						is like AccountingUnit
		LocalDimension3						is like AccountingUnit
		LocalDimension4						is like AccountingUnit
		LocalDimension5						is like AccountingUnit
		LocalDimension6						is like AccountingUnit
		LocalDimension7						is like AccountingUnit
		LocalDimension8						is like AccountingUnit
		LocalDimension9						is like AccountingUnit
		LocalDimension10					is like AccountingUnit

		LocalStructureRow					is like StructureRow
		LocalCodeBlockDimensionType			is like CodeBlockDimensionType
		LocalADBDimension					is like AccountingUnit
		LocalZeroStringLength				is Numeric 2

	Derived Fields
		DerivedUndistributedRetainedEarnings is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.UndistributedRetainedEarnings
			return first SystemAccountRel.GeneralLedgerChartAccount
		DerivedRetainedEarnings is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.RetainedEarnings
			if (FinanceEnterpriseGroup.SystemSubAccount entered
			and SystemAccountRel exists)
				return first SystemAccountRel.Account + "-" + FinanceEnterpriseGroup.SystemSubAccount
			else
				return first SystemAccountRel.GeneralLedgerChartAccount
		DerivedBeginBalancePeriod is a StringField
			type is AlphaUpper 20
			restricted
			LocalBasisYear
			"000"
		DerivedADBDimensionCode	is a StringField
			type is Alpha 70
			restricted
			DerivedADBTransactionCurrency
			DerivedADBLedger
			DerivedADBDimension1SeqNumber
			DerivedADBDimension2SeqNumber
			DerivedADBDimension3SeqNumber

		DerivedZeroString	is a StringField
			type is AlphaUpper 20
			restricted
			"00000000000000000000"

		DerivedADBLedger				is a DerivedField
			type is like Ledger
			restricted
			if (FinanceEnterpriseGroup.IncludeLedgerInAverageDailyBalance)
				LocalZeroStringLength = (DerivedZeroString size - TransactionLedger size)
				if (LocalZeroStringLength > 0)
					DerivedADBLedger = DerivedZeroString[1:LocalZeroStringLength] + TransactionLedger
				else
					return TransactionLedger
			else
				return ""
		DerivedADBTransactionCurrency	is a DerivedField
			type is like Currency
			restricted
			if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
				LocalZeroStringLength = (5 - TransactionCurrency size)
				if (LocalZeroStringLength > 0)
					DerivedADBTransactionCurrency = DerivedZeroString[1:LocalZeroStringLength] + TransactionCurrency
				else
					return TransactionCurrency
			else
				return ""
		DerivedADBDimension1SeqNumber	is a DerivedField
			type is AlphaRight 7
			restricted
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension1 entered)
				LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension1.Type
				return DerivedADBDimensionSeqNumber
			else
				return ""
		DerivedADBDimension2SeqNumber	is a DerivedField
			type is AlphaRight 7
			restricted
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension2 entered)
				LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension2.Type
				return DerivedADBDimensionSeqNumber
			else
				return ""
		DerivedADBDimension3SeqNumber	is a DerivedField
			type is AlphaRight 7
			restricted
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension3 entered)
				LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension3.Type
				return DerivedADBDimensionSeqNumber
			else
				return ""
		DerivedADBDimensionSeqNumber		is a DerivedField
			type is AlphaRight 7
			restricted
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.AccountingUnit)
				return AccountingUnitRel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Project)
				return ProjectRel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension1)
				return FinanceDimension1Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension2)
				return FinanceDimension2Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension3)
				return FinanceDimension3Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension4)
				return FinanceDimension4Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension5)
				return FinanceDimension5Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension6)
				return FinanceDimension6Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension7)
				return FinanceDimension7Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension8)
				return FinanceDimension8Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension9)
				return FinanceDimension9Rel.DerivedSequenceNumber
			else
			if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension10)
				return FinanceDimension10Rel.DerivedSequenceNumber
			else
				return ""
	Conditions
		UseAllBalanceSheetAccounts
			restricted
			when (FinanceEnterpriseGroup.AllBalanceSheetAccounts)

		HasFinanceDimension10
			restricted
			when (FinanceEnterpriseGroup.ADBDimensions.Dimension1.Type.Dimension10
			or    FinanceEnterpriseGroup.ADBDimensions.Dimension2.Type.Dimension10
			or    FinanceEnterpriseGroup.ADBDimensions.Dimension3.Type.Dimension10)

	Sets
		ByEntityAccountADBDimensions
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				AverageDailyBalanceAccount.GeneralLedgerChartAccount
				ADBDimension1
				ADBDimension2
				ADBDimension3
				AverageDailyBalanceAccount.DimensionCode

	Relations
		GeneralLedgerCalendarDateRel
			one-to-one relation to GeneralLedgerCalendarDate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.GeneralLedgerCalendar						= LocalGeneralLedgerCalendar
				related.GeneralLedgerCalendarDate					= LocalDate
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 							   >=  LocalDate)
		GeneralLedgerPeriodShadowRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses BySummaryPeriodType
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.GeneralLedgerCalendar						= LocalGeneralLedgerCalendar
				related.GeneralLedgerCalendarPeriod					= first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
				related.SummaryPeriodType							= LocalSummaryPeriodType

		GeneralLedgerTotalForAccountRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByAccountPeriodUnitDim1
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.Scenario										= FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger						= LocalCloseLedger
				related.AccountingEntity								= LocalAccountingEntity
				related.GeneralLedgerTotal.EntityYearPeriod				= LocalBeginBalancePeriod
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount
			Instance Selection
				where ((LocalTransactionLedger   not entered or related.GeneralLedgerTotal.PrimaryLedger = LocalTransactionLedger)
				and    (LocalTransactionCurrency not entered or related.GeneralLedgerTotal.Currency      = LocalTransactionCurrency))
		GeneralLedgerTotalForAccountAndDimensionRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByAccountPeriodUnitDim1
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.Scenario										= FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger						= LocalCloseLedger
				related.AccountingEntity								= LocalAccountingEntity
				related.GeneralLedgerTotal.EntityYearPeriod				= LocalBeginBalancePeriod
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount
			Instance Selection
				where ((LocalTransactionLedger   not entered or related.GeneralLedgerTotal.PrimaryLedger  = LocalTransactionLedger)
				and    (LocalTransactionCurrency not entered or related.GeneralLedgerTotal.Currency       = LocalTransactionCurrency)
				and    (LocalAccountingUnit      not entered or related.GeneralLedgerTotal.AccountingUnit = LocalAccountingUnit)
				and    (LocalProject             not entered or related.GeneralLedgerTotal.Project        = LocalProject)
				and    (LocalDimension1          not entered or related.FinanceDimension1                 = LocalDimension1)
				and    (LocalDimension2          not entered or related.FinanceDimension2                 = LocalDimension2)
				and    (LocalDimension3          not entered or related.FinanceDimension3                 = LocalDimension3)
				and    (LocalDimension4          not entered or related.FinanceDimension4                 = LocalDimension4)
				and    (LocalDimension5          not entered or related.FinanceDimension5                 = LocalDimension5)
				and    (LocalDimension6          not entered or related.FinanceDimension6                 = LocalDimension6)
				and    (LocalDimension7          not entered or related.FinanceDimension7                 = LocalDimension7)
				and    (LocalDimension8          not entered or related.FinanceDimension8                 = LocalDimension8)
				and    (LocalDimension9          not entered or related.FinanceDimension9                 = LocalDimension9)
				and    (LocalDimension10         not entered or related.FinanceDimension10                = LocalDimension10))

		AverageDailyBalanceAmountRel
			one-to-many relation to AverageDailyBalanceAmount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup								= FinanceEnterpriseGroup
				related.ReportingBasis										= LocalReportingBasis
				related.AccountingEntity									= LocalAccountingEntity
				related.AverageDailyBalanceAmount.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount
				related.AverageDailyBalanceAmount.DimensionCode				= AverageDailyBalanceAccount.DimensionCode
				related.AverageDailyBalanceAmount.RunDate					<= LocalRunDate

		ReportingChartAccountRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses AccountByChartType
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.ReportingChart					= LocalReportingChart
				related.ChartType						= 2 
				related.GeneralLedgerChartAccount		= AverageDailyBalanceAccount.GeneralLedgerChartAccount

		ADBTransactionRel
			one-to-many relation to AverageDailyBalanceTransaction
			Field Mapping uses ByStatusEntityAccount
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.Status											= 0
				related.AccountingEntity								= AccountingEntity
				related.AverageDailyBalanceTransaction.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount

		UpdateAverageDailyBalanceAmountRel
			one-to-one relation to AverageDailyBalanceAmount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup								= FinanceEnterpriseGroup
				related.ReportingBasis										= LocalReportingBasis
				related.AccountingEntity									= LocalAccountingEntity
				related.AverageDailyBalanceAmount.GeneralLedgerChartAccount	= LocalInstGeneralLedgerChartAccount
				related.AverageDailyBalanceAmount.DimensionCode				= LocalInstDimensionCode
				related.AverageDailyBalanceAmount.RunDate					= LocalDate

		UpdateAverageDailyBalanceAggregateRel
			one-to-one relation to AverageDailyBalanceAggregate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup										= FinanceEnterpriseGroup
				related.ReportingBasis												= LocalReportingBasis
				related.AccountingEntity											= LocalAccountingEntity
				related.AverageDailyBalanceAggregate.GeneralLedgerChartAccount		= LocalInstGeneralLedgerChartAccount
				related.AverageDailyBalanceAggregate.DimensionCode					= LocalInstDimensionCode
				related.AverageDailyBalanceAggregate.GeneralLedgerCalendarPeriod	= LocalInstGeneralLedgerCalendarPeriod

		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SystemAccount				= LocalSystemAccount


		PreviousYearUnprocessedADBTransactionRel
			one-to-many relation to AverageDailyBalanceTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup										= FinanceEnterpriseGroup
				related.AccountingEntity											= AccountingEntity
			Instance Selection
				where (related.AverageDailyBalanceTransaction.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount	
				and    related.AverageDailyBalanceTransaction.DimensionCode				= AverageDailyBalanceAccount.DimensionCode
				and    related.AverageDailyBalanceTransaction.PostingDate				< LocalRunDate											
				and    related.Status 													= 0)													

		StartDateUnprocessedADBTransactionRel
			one-to-many relation to AverageDailyBalanceTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup										= FinanceEnterpriseGroup
				related.AccountingEntity											= AccountingEntity
			Instance Selection
				where (related.AverageDailyBalanceTransaction.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount	
				and    related.AverageDailyBalanceTransaction.DimensionCode				= AverageDailyBalanceAccount.DimensionCode
				and    related.AverageDailyBalanceTransaction.PostingDate				= LocalRunDate											
				and    related.Status													= 0)													

		PostedGeneralLedgerTransactionForAccountRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.FinanceCodeBlock.GeneralLedgerChartAccount 	= AverageDailyBalanceAccount.GeneralLedgerChartAccount		
				related.PostingDate									= LocalRunDate												
				related.AccountingEntity							= AccountingEntity
			Instance Selection
				where (related.Status.Posted
				and    (LocalTransactionLedger   not entered or related.FinanceCodeBlock.Ledger = LocalTransactionLedger)
				and    (LocalTransactionCurrency not entered or related.CurrencyCode            = LocalTransactionCurrency))

		PostedGeneralLedgerTransactionForAccountAndDimensionRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.FinanceCodeBlock.GeneralLedgerChartAccount 	= AverageDailyBalanceAccount.GeneralLedgerChartAccount		
				related.PostingDate									= LocalRunDate												
				related.AccountingEntity							= AccountingEntity
			Instance Selection
				where (related.Status.Posted
				and    (LocalTransactionLedger   not entered or related.FinanceCodeBlock.Ledger             = LocalTransactionLedger)
				and    (LocalTransactionCurrency not entered or related.CurrencyCode                        = LocalTransactionCurrency)
				and    (LocalAccountingUnit      not entered or related.FinanceCodeBlock.AccountingUnit		= LocalAccountingUnit)
				and    (LocalProject             not entered or related.FinanceCodeBlock.Project			= LocalProject)
				and    (LocalDimension1          not entered or related.FinanceCodeBlock.FinanceDimension1	= LocalDimension1)
				and    (LocalDimension2          not entered or related.FinanceCodeBlock.FinanceDimension2	= LocalDimension2)
				and    (LocalDimension3          not entered or related.FinanceCodeBlock.FinanceDimension3	= LocalDimension3)
				and    (LocalDimension4          not entered or related.FinanceCodeBlock.FinanceDimension4	= LocalDimension4)
				and    (LocalDimension5          not entered or related.FinanceCodeBlock.FinanceDimension5	= LocalDimension5)
				and    (LocalDimension6          not entered or related.FinanceCodeBlock.FinanceDimension6	= LocalDimension6)
				and    (LocalDimension7          not entered or related.FinanceCodeBlock.FinanceDimension7	= LocalDimension7)
				and    (LocalDimension8          not entered or related.FinanceCodeBlock.FinanceDimension8	= LocalDimension8)
				and    (LocalDimension9          not entered or related.FinanceCodeBlock.FinanceDimension9	= LocalDimension9)
				and    (LocalDimension10         not entered or related.FinanceCodeBlock.FinanceDimension10	= LocalDimension10))



		AccountingUnitRel
			one-to-one relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity 			= AccountingEntity
				related.AccountingUnit				= LocalAccountingUnit
		ProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Project						= LocalProject
		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1			= LocalDimension1
		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension2			= LocalDimension2
		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension3			= LocalDimension3
		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension4			= LocalDimension4
		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension5			= LocalDimension5
		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension6			= LocalDimension6
		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension7			= LocalDimension7
		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension8			= LocalDimension8
		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension9			= LocalDimension9
		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension10			= LocalDimension10


	Field Rules
		AccountingEntity
			required

		AverageDailyBalanceAccount.GeneralLedgerChartAccount
			required
			if (not FinanceEnterpriseGroup.IncludeIncomeStatementAccounts)
				constraint (AverageDailyBalanceAccount.GeneralLedgerChartAccount.ChartSection.BalanceSheet)
					"AccountMustBeBalanceSheet"
		
		ADBDimension1
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension1 entered)
				if (not (FinanceEnterpriseGroup.ADBDimensions.Dimension1.Type.Dimension10
#ifdef module cam
				and      FinanceEnterpriseGroup.CustodialAccountManagement
#endif
				))
					required

			if (old ADBDimension1 entered)
				constraint (ADBDimension1 not changed)
					"CannotChange<FinanceEnterpriseGroup.ADBDimensions.Dimension1.Label>;DeleteAndRe-addRecord."	

		ADBDimension2
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension2 entered)
				if (not (FinanceEnterpriseGroup.ADBDimensions.Dimension2.Type.Dimension10
#ifdef module cam
				and      FinanceEnterpriseGroup.CustodialAccountManagement
#endif
				))
					required

			if (ADBDimension2 changed
			and old ADBDimension2 entered)
				constraint (ADBDimension2 not changed)
					"CannotChange<FinanceEnterpriseGroup.ADBDimensions.Dimension2.Label>;DeleteAndRe-addRecord."	

		ADBDimension3
			if (FinanceEnterpriseGroup.ADBDimensions.Dimension3 entered)
				if (not (FinanceEnterpriseGroup.ADBDimensions.Dimension3.Type.Dimension10
#ifdef module cam
				and      FinanceEnterpriseGroup.CustodialAccountManagement
#endif
				))
					required

			if (old ADBDimension3 entered)
				constraint (ADBDimension3 not changed)
					"CannotChange<FinanceEnterpriseGroup.ADBDimensions.Dimension3.Label>;DeleteAndRe-addRecord."	

		TransactionLedger
			if (FinanceEnterpriseGroup.IncludeLedgerInAverageDailyBalance)
				required
			if (old TransactionLedger entered)
				constraint (TransactionLedger not changed)	
					"CannotChangeLedger;DeleteAndRe-addRecord."
		TransactionCurrency
			if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
				required
			if (old TransactionCurrency entered)
				constraint (TransactionCurrency not changed)
					"CannotChangeCurrency;DeleteAndRe-addRecord."
	Rule Blocks
		GetCalendarPeriod
			LocalGeneralLedgerCalendar			= PrmReportingBasis.GeneralLedgerCalendar
			if (GeneralLedgerCalendarDateRel exists)
				LocalYTDCalendarPeriod			= GeneralLedgerCalendarDateRel.YearToDateCalendarPeriod
				LocalQTDCalendarPeriod			= GeneralLedgerCalendarDateRel.QuarterToDateCalendarPeriod
				LocalMTDCalendarPeriod			= GeneralLedgerCalendarDateRel.MonthToDateCalendarPeriod
				LocalWTDCalendarPeriod			= GeneralLedgerCalendarDateRel.WeekToDateCalendarPeriod
			else
				LocalSummaryPeriodType			= 1
				if (GeneralLedgerPeriodShadowRel exists)
					LocalYTDCalendarPeriod		= GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod
				LocalSummaryPeriodType			= 2
				if (GeneralLedgerPeriodShadowRel exists)
					LocalQTDCalendarPeriod		= GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod
				LocalSummaryPeriodType			= 3
				if (GeneralLedgerPeriodShadowRel exists)
					LocalMTDCalendarPeriod		= GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod
				LocalSummaryPeriodType			= 4
				if (GeneralLedgerPeriodShadowRel exists)
					LocalWTDCalendarPeriod		= GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod

		AssignToLocalDimensions
			initialize LocalAccountingUnit
			initialize LocalProject
			initialize LocalDimension1
			initialize LocalDimension2
			initialize LocalDimension3
			initialize LocalDimension4
			initialize LocalDimension5
			initialize LocalDimension6
			initialize LocalDimension7
			initialize LocalDimension8
			initialize LocalDimension9
			initialize LocalDimension10

			LocalStructureRow			= FinanceEnterpriseGroup.ADBDimensions.Dimension1
			LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension1.Type
			LocalADBDimension			= ADBDimension1
			include MappedADBDimension

			LocalStructureRow			= FinanceEnterpriseGroup.ADBDimensions.Dimension2
			LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension2.Type
			LocalADBDimension			= ADBDimension2
			include MappedADBDimension

			LocalStructureRow			= FinanceEnterpriseGroup.ADBDimensions.Dimension3
			LocalCodeBlockDimensionType	= FinanceEnterpriseGroup.ADBDimensions.Dimension3.Type
			LocalADBDimension			= ADBDimension3
			include MappedADBDimension

		MappedADBDimension
			if (LocalStructureRow entered)
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.AccountingUnit)
					LocalAccountingUnit			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Project)
					LocalProject				= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension1)
					LocalDimension1				= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension2)
					LocalDimension2 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension3)
					LocalDimension3 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension4)
					LocalDimension4 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension5)
					LocalDimension5 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension6)
					LocalDimension6 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension7)
					LocalDimension7 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension8)
					LocalDimension8 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension9)
					LocalDimension9 			= LocalADBDimension
				else
				if (LocalCodeBlockDimensionType = CodeBlockDimensionType.Dimension10)
					LocalDimension10 			= LocalADBDimension

		GetBeginBalance	
			include AssignToLocalDimensions
			if (FinanceEnterpriseGroup.ADBSelection.AccountOnly)
				LocalDate								= first GeneralLedgerTotalForAccountRel.PeriodEndingDate
				LocalBalanceOnPostDate					= (sum GeneralLedgerTotalForAccountRel.NetFunctionalAmount)
				if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
					LocalOnPostDateTransactionAmount	= (sum GeneralLedgerTotalForAccountRel.NetTransactionAmount)
					LocalOnPostDateAlternateAmount1		= (sum GeneralLedgerTotalForAccountRel.NetAlternateAmount)
					LocalOnPostDateAlternateAmount2		= (sum GeneralLedgerTotalForAccountRel.NetAlternateAmount2)
					LocalOnPostDateAlternateAmount3		= (sum GeneralLedgerTotalForAccountRel.NetAlternateAmount3)
					LocalOnPostDateReportAmount1		= (sum GeneralLedgerTotalForAccountRel.NetReportAmount1)
					LocalOnPostDateReportAmount2		= (sum GeneralLedgerTotalForAccountRel.NetReportAmount2)
					LocalOnPostDateReportAmount3		= (sum GeneralLedgerTotalForAccountRel.NetReportAmount3)
					LocalOnPostDateReportAmount4		= (sum GeneralLedgerTotalForAccountRel.NetReportAmount4)
					LocalOnPostDateReportAmount5		= (sum GeneralLedgerTotalForAccountRel.NetReportAmount5)
			else
			if (FinanceEnterpriseGroup.ADBAccountWithDimension)
				LocalDate								= first GeneralLedgerTotalForAccountAndDimensionRel.PeriodEndingDate
				LocalBalanceOnPostDate					= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetFunctionalAmount)
				if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
					LocalOnPostDateTransactionAmount	= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetTransactionAmount)
					LocalOnPostDateAlternateAmount1		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetAlternateAmount)
					LocalOnPostDateAlternateAmount2		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetAlternateAmount2)
					LocalOnPostDateAlternateAmount3		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetAlternateAmount3)
					LocalOnPostDateReportAmount1		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetReportAmount1)
					LocalOnPostDateReportAmount2		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetReportAmount2)
					LocalOnPostDateReportAmount3		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetReportAmount3)
					LocalOnPostDateReportAmount4		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetReportAmount4)
					LocalOnPostDateReportAmount5		= (sum GeneralLedgerTotalForAccountAndDimensionRel.NetReportAmount5)

		UpdateAggregateAmounts	
			LocalReportingBasis							= PrmReportingBasis
			LocalAccountingEntity						= PrmAccountingEntity
			LocalInstGeneralLedgerChartAccount			= AverageDailyBalanceAccount.GeneralLedgerChartAccount
			LocalInstDimensionCode						= AverageDailyBalanceAccount.DimensionCode

			if (LocalYTDCalendarPeriodOld entered
			and LocalYTDCalendarPeriod		!= LocalYTDCalendarPeriodOld)
				LocalInstGeneralLedgerCalendarPeriod					= LocalYTDCalendarPeriodOld
				invoke Update UpdateAverageDailyBalanceAggregateRel
					invoked.ADBDimension1          						= ADBDimension1
					invoked.ADBDimension2          						= ADBDimension2
					invoked.ADBDimension3          						= ADBDimension3
					invoked.PrmBalanceOnPostDate						= LocalYTDAggregateOnPostDate
					invoked.PrmBalanceOnTransactionDate					= LocalYTDAggregateOnTranDate
					invoked.TransactionLedger							= TransactionLedger
					invoked.TransactionCurrency							= TransactionCurrency
					invoked.PrmOnPostDateTransactionAmount				= TranAmountYTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount1				= AltAmount1YTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount2				= AltAmount2YTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount3				= AltAmount3YTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount1					= ReportAmt1YTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount2					= ReportAmt2YTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount3					= ReportAmt3YTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount4					= ReportAmt4YTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount5					= ReportAmt5YTDAggregateOnPostDate
				LocalYTDCalendarPeriodOld								= LocalYTDCalendarPeriod
				initialize LocalYTDAggregateOnPostDate
				initialize LocalYTDAggregateOnTranDate
				initialize TranAmountYTDAggregateOnPostDate
				initialize AltAmount1YTDAggregateOnPostDate
				initialize AltAmount2YTDAggregateOnPostDate
				initialize AltAmount3YTDAggregateOnPostDate
				initialize ReportAmt1YTDAggregateOnPostDate
				initialize ReportAmt2YTDAggregateOnPostDate
				initialize ReportAmt3YTDAggregateOnPostDate
				initialize ReportAmt4YTDAggregateOnPostDate
				initialize ReportAmt5YTDAggregateOnPostDate
			if (LocalQTDCalendarPeriodOld entered
			and LocalQTDCalendarPeriod		!= LocalQTDCalendarPeriodOld)
				LocalInstGeneralLedgerCalendarPeriod					= LocalQTDCalendarPeriodOld
				invoke Update UpdateAverageDailyBalanceAggregateRel
					invoked.ADBDimension1          						= ADBDimension1
					invoked.ADBDimension2          						= ADBDimension2
					invoked.ADBDimension3          						= ADBDimension3
					invoked.PrmBalanceOnPostDate						= LocalQTDAggregateOnPostDate
					invoked.PrmBalanceOnTransactionDate					= LocalQTDAggregateOnTranDate
					invoked.TransactionLedger							= TransactionLedger
					invoked.TransactionCurrency							= TransactionCurrency
					invoked.PrmOnPostDateTransactionAmount				= TranAmountQTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount1				= AltAmount1QTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount2				= AltAmount2QTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount3				= AltAmount3QTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount1					= ReportAmt1QTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount2					= ReportAmt2QTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount3					= ReportAmt3QTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount4					= ReportAmt4QTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount5					= ReportAmt5QTDAggregateOnPostDate
				LocalQTDCalendarPeriodOld								= LocalQTDCalendarPeriod
				initialize LocalQTDAggregateOnPostDate
				initialize LocalQTDAggregateOnTranDate
				initialize TranAmountQTDAggregateOnPostDate
				initialize AltAmount1QTDAggregateOnPostDate
				initialize AltAmount2QTDAggregateOnPostDate
				initialize AltAmount3QTDAggregateOnPostDate
				initialize ReportAmt1QTDAggregateOnPostDate
				initialize ReportAmt2QTDAggregateOnPostDate
				initialize ReportAmt3QTDAggregateOnPostDate
				initialize ReportAmt4QTDAggregateOnPostDate
				initialize ReportAmt5QTDAggregateOnPostDate
			if (LocalMTDCalendarPeriodOld entered
			and LocalMTDCalendarPeriod		!= LocalMTDCalendarPeriodOld)
				LocalInstGeneralLedgerCalendarPeriod					= LocalMTDCalendarPeriodOld
				invoke Update UpdateAverageDailyBalanceAggregateRel
					invoked.ADBDimension1          						= ADBDimension1
					invoked.ADBDimension2          						= ADBDimension2
					invoked.ADBDimension3          						= ADBDimension3
					invoked.PrmBalanceOnPostDate						= LocalMTDAggregateOnPostDate
					invoked.PrmBalanceOnTransactionDate					= LocalMTDAggregateOnTranDate
					invoked.TransactionLedger							= TransactionLedger
					invoked.TransactionCurrency							= TransactionCurrency
					invoked.PrmOnPostDateTransactionAmount				= TranAmountMTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount1				= AltAmount1MTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount2				= AltAmount2MTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount3				= AltAmount3MTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount1					= ReportAmt1MTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount2					= ReportAmt2MTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount3					= ReportAmt3MTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount4					= ReportAmt4MTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount5					= ReportAmt5MTDAggregateOnPostDate
				LocalMTDCalendarPeriodOld								= LocalMTDCalendarPeriod
				initialize LocalMTDAggregateOnPostDate
				initialize LocalMTDAggregateOnTranDate
				initialize TranAmountMTDAggregateOnPostDate
				initialize AltAmount1MTDAggregateOnPostDate
				initialize AltAmount2MTDAggregateOnPostDate
				initialize AltAmount3MTDAggregateOnPostDate
				initialize ReportAmt1MTDAggregateOnPostDate
				initialize ReportAmt2MTDAggregateOnPostDate
				initialize ReportAmt3MTDAggregateOnPostDate
				initialize ReportAmt4MTDAggregateOnPostDate
				initialize ReportAmt5MTDAggregateOnPostDate
			if (LocalWTDCalendarPeriodOld entered
			and LocalWTDCalendarPeriod		!= LocalWTDCalendarPeriodOld)
				LocalInstGeneralLedgerCalendarPeriod					= LocalWTDCalendarPeriodOld
				invoke Update UpdateAverageDailyBalanceAggregateRel
					invoked.ADBDimension1          						= ADBDimension1
					invoked.ADBDimension2          						= ADBDimension2
					invoked.ADBDimension3          						= ADBDimension3
					invoked.PrmBalanceOnPostDate						= LocalWTDAggregateOnPostDate
					invoked.PrmBalanceOnTransactionDate					= LocalWTDAggregateOnTranDate
					invoked.TransactionLedger							= TransactionLedger
					invoked.TransactionCurrency							= TransactionCurrency
					invoked.PrmOnPostDateTransactionAmount				= TranAmountWTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount1				= AltAmount1WTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount2				= AltAmount2WTDAggregateOnPostDate
					invoked.PrmOnPostDateAlternateAmount3				= AltAmount3WTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount1					= ReportAmt1WTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount2					= ReportAmt2WTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount3					= ReportAmt3WTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount4					= ReportAmt4WTDAggregateOnPostDate
					invoked.PrmOnPostDateReportAmount5					= ReportAmt5WTDAggregateOnPostDate
				LocalWTDCalendarPeriodOld								= LocalWTDCalendarPeriod
				initialize LocalWTDAggregateOnPostDate
				initialize LocalWTDAggregateOnTranDate
				initialize TranAmountWTDAggregateOnPostDate
				initialize AltAmount1WTDAggregateOnPostDate
				initialize AltAmount2WTDAggregateOnPostDate
				initialize AltAmount3WTDAggregateOnPostDate
				initialize ReportAmt1WTDAggregateOnPostDate
				initialize ReportAmt2WTDAggregateOnPostDate
				initialize ReportAmt3WTDAggregateOnPostDate
				initialize ReportAmt4WTDAggregateOnPostDate
				initialize ReportAmt5WTDAggregateOnPostDate

		ValidateCodeBlock
			if (LocalAccountingUnit entered)
				constraint (AccountingUnitRel exists)
					"<FinanceEnterpriseGroup.AccountingUnitLabel>DoesNotExist"

			if (LocalProject entered)
				constraint (ProjectRel exists)
					"<FinanceEnterpriseGroup.ProjectLabel>DoesNotExist"

			if (LocalDimension1 entered)
				constraint (FinanceDimension1Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension1Label>DoesNotExist"

			if (LocalDimension2 entered)
				constraint (FinanceDimension2Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension2Label>DoesNotExist"

			if (LocalDimension3 entered)
				constraint (FinanceDimension3Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension3Label>DoesNotExist"

			if (LocalDimension4 entered)
				constraint (FinanceDimension4Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension4Label>DoesNotExist"

			if (LocalDimension5 entered)
				constraint (FinanceDimension5Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension5Label>DoesNotExist"

			if (LocalDimension6 entered)
				constraint (FinanceDimension6Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension6Label>DoesNotExist"

			if (LocalDimension7 entered)
				constraint (FinanceDimension7Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension7Label>DoesNotExist"

			if (LocalDimension8 entered)
				constraint (FinanceDimension8Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension8Label>DoesNotExist"

			if (LocalDimension9 entered)
				constraint (FinanceDimension9Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension9Label>DoesNotExist"

			if (LocalDimension10 entered)
				constraint (FinanceDimension10Rel exists)
					"<FinanceEnterpriseGroup.FinanceDimension10Label>DoesNotExist"

		InitializeSysteREAccountAmounts

			initialize LocalBeginBalance
			initialize LocalBalanceOnPostDate
			initialize LastBalanceOnPostDate
			initialize ADBPreviousYearUnprocessedAmount
			initialize ADBStartDateUnprocessedAmount
			initialize LocalGLPostedAmount

			initialize TranAmountBeginBalance						
			initialize AlternateAmount1BeginBalance
			initialize AlternateAmount2BeginBalance
			initialize AlternateAmount3BeginBalance
			initialize ReportAmount1BeginBalance
			initialize ReportAmount2BeginBalance
			initialize ReportAmount3BeginBalance
			initialize ReportAmount4BeginBalance
			initialize ReportAmount5BeginBalance

			initialize LocalOnPostDateTransactionAmount				
			initialize LocalOnPostDateAlternateAmount1
			initialize LocalOnPostDateAlternateAmount2
			initialize LocalOnPostDateAlternateAmount3
			initialize LocalOnPostDateReportAmount1
			initialize LocalOnPostDateReportAmount2
			initialize LocalOnPostDateReportAmount3
			initialize LocalOnPostDateReportAmount4
			initialize LocalOnPostDateReportAmount5

			initialize LastOnPostDateTransactionAmount				
			initialize LastOnPostDateAlternateAmount1
			initialize LastOnPostDateAlternateAmount2
			initialize LastOnPostDateAlternateAmount3
			initialize LastOnPostDateReportAmount1
			initialize LastOnPostDateReportAmount2
			initialize LastOnPostDateReportAmount3
			initialize LastOnPostDateReportAmount4
			initialize LastOnPostDateReportAmount5

			initialize TranAmountADBPrevYearUnprocessed				
			initialize AltAmount1ADBPrevYearUnprocessed
			initialize AltAmount2ADBPrevYearUnprocessed
			initialize AltAmount3ADBPrevYearUnprocessed
			initialize ReportAmt1ADBPrevYearUnprocessed
			initialize ReportAmt2ADBPrevYearUnprocessed
			initialize ReportAmt3ADBPrevYearUnprocessed
			initialize ReportAmt4ADBPrevYearUnprocessed
			initialize ReportAmt5ADBPrevYearUnprocessed

			initialize TranAmountADBStartDateUnprocessed			
			initialize AltAmount1ADBStartDateUnprocessed
			initialize AltAmount2ADBStartDateUnprocessed
			initialize AltAmount3ADBStartDateUnprocessed
			initialize ReportAmt1ADBStartDateUnprocessed
			initialize ReportAmt2ADBStartDateUnprocessed
			initialize ReportAmt3ADBStartDateUnprocessed
			initialize ReportAmt4ADBStartDateUnprocessed
			initialize ReportAmt5ADBStartDateUnprocessed

			initialize GLTransactionAmount							
			initialize GLAlternateAmount1
			initialize GLAlternateAmount2
			initialize GLAlternateAmount3
			initialize GLReportAmount1
			initialize GLReportAmount2
			initialize GLReportAmount3
			initialize GLReportAmount4
			initialize GLReportAmount5

		AccumulateAggregateAmount

			LocalYTDAggregateOnPostDate			+= LocalBalanceOnPostDate
			LocalQTDAggregateOnPostDate			+= LocalBalanceOnPostDate
			LocalMTDAggregateOnPostDate			+= LocalBalanceOnPostDate
			LocalWTDAggregateOnPostDate			+= LocalBalanceOnPostDate
			LocalYTDAggregateOnTranDate			+= LocalBalanceOnTransactionDate
			LocalQTDAggregateOnTranDate			+= LocalBalanceOnTransactionDate
			LocalMTDAggregateOnTranDate			+= LocalBalanceOnTransactionDate
			LocalWTDAggregateOnTranDate			+= LocalBalanceOnTransactionDate

			if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
				TranAmountYTDAggregateOnPostDate	+= LocalOnPostDateTransactionAmount
				TranAmountQTDAggregateOnPostDate	+= LocalOnPostDateTransactionAmount
				TranAmountMTDAggregateOnPostDate	+= LocalOnPostDateTransactionAmount
				TranAmountWTDAggregateOnPostDate	+= LocalOnPostDateTransactionAmount

				AltAmount1YTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount1
				AltAmount1QTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount1
				AltAmount1MTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount1
				AltAmount1WTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount1

				AltAmount2YTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount2
				AltAmount2QTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount2
				AltAmount2MTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount2
				AltAmount2WTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount2

				AltAmount3YTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount3
				AltAmount3QTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount3
				AltAmount3MTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount3
				AltAmount3WTDAggregateOnPostDate	+= LocalOnPostDateAlternateAmount3

				ReportAmt1YTDAggregateOnPostDate	+= LocalOnPostDateReportAmount1
				ReportAmt1QTDAggregateOnPostDate	+= LocalOnPostDateReportAmount1
				ReportAmt1MTDAggregateOnPostDate	+= LocalOnPostDateReportAmount1
				ReportAmt1WTDAggregateOnPostDate	+= LocalOnPostDateReportAmount1

				ReportAmt2YTDAggregateOnPostDate	+= LocalOnPostDateReportAmount2
				ReportAmt2QTDAggregateOnPostDate	+= LocalOnPostDateReportAmount2
				ReportAmt2MTDAggregateOnPostDate	+= LocalOnPostDateReportAmount2
				ReportAmt2WTDAggregateOnPostDate	+= LocalOnPostDateReportAmount2

				ReportAmt3YTDAggregateOnPostDate	+= LocalOnPostDateReportAmount3
				ReportAmt3QTDAggregateOnPostDate	+= LocalOnPostDateReportAmount3
				ReportAmt3MTDAggregateOnPostDate	+= LocalOnPostDateReportAmount3
				ReportAmt3WTDAggregateOnPostDate	+= LocalOnPostDateReportAmount3

				ReportAmt4YTDAggregateOnPostDate	+= LocalOnPostDateReportAmount4
				ReportAmt4QTDAggregateOnPostDate	+= LocalOnPostDateReportAmount4
				ReportAmt4MTDAggregateOnPostDate	+= LocalOnPostDateReportAmount4
				ReportAmt4WTDAggregateOnPostDate	+= LocalOnPostDateReportAmount4

				ReportAmt5YTDAggregateOnPostDate	+= LocalOnPostDateReportAmount5
				ReportAmt5QTDAggregateOnPostDate	+= LocalOnPostDateReportAmount5
				ReportAmt5MTDAggregateOnPostDate	+= LocalOnPostDateReportAmount5
				ReportAmt5WTDAggregateOnPostDate	+= LocalOnPostDateReportAmount5

    Actions

		Create is a Create Action
			default label is untranslatable
			valid when (!UseAllBalanceSheetAccounts)
			Entrance Rules
				include AssignToLocalDimensions
				include ValidateCodeBlock
				if (AverageDailyBalanceAccount.DimensionCode not entered)
					AverageDailyBalanceAccount.DimensionCode = DerivedADBDimensionCode
			Action Rules
										
			Exit Rules
			
		Update is an Update Action
			default label is untranslatable
			valid when (!UseAllBalanceSheetAccounts)
			Entrance Rules
				if (!Active)
					constraint (ADBTransactionRel not exists)
						"TransactionsExistsCannotInactivate<FinanceEnterpriseGroup.AccountLabel>"						

			Action Rules

			Exit Rules	

		Delete is a Delete Action
			default label is untranslatable
			valid when (!UseAllBalanceSheetAccounts)
			Entrance Rules
				constraint (!ADBTransactionRel exists)
					"TransactionsExistsCannotInactivate<FinanceEnterpriseGroup.AccountLabel>"						

			Exit Rules

		UpdateDailyAggregateAmount is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmAccountingEntity				is a AccountingEntity
					default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>"
				PrmLastRunDate					is Date
					default label is "LastRunDate"
				PrmRunDate				is Date
					default label is "RunDate"
				PrmNonChartAccountOnly			is Boolean
				PrmAccount                      is like GeneralLedgerChartAccount
				PrmFiscalYear					is like GeneralLedgerCloseYear
				PrmGetAccountBeginBalance		is Boolean	
				PrmDimension1					is like AccountingUnit
				PrmDimension2					is like AccountingUnit
				PrmDimension3					is like AccountingUnit
				PrmStartDate					is Date
				PrmProcessingType				is Numeric 1
					States
						DailyBalanceProcessing	value is 0
						RecalculatePreviousYear value is 4
						RecalculateCurrentYear	value is 5

			Parameter Rules
				PrmReportingBasis
					LocalReportingBasis			= PrmReportingBasis
					LocalGeneralLedgerCalendar	= PrmReportingBasis.GeneralLedgerCalendar
					LocalCloseLedger			= PrmReportingBasis.DerivedCloseLedger
					LocalReportingChart			= PrmReportingBasis.ReportingChart
					LocalBeginBalancePeriod		= PrmReportingBasis.CurrentBeginBalancePeriod
				PrmAccountingEntity
					LocalAccountingEntity		= PrmAccountingEntity

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Set Is
				PrmFinanceEnterpriseGroup
				PrmReportingBasis
				PrmAccountingEntity

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and    !AverageDailyBalanceAccount.GeneralLedgerChartAccount.SystemAccount.AverageDailyBalance
				and    AccountingEntity				= PrmAccountingEntity	
				and    (PrmAccount       not entered or PrmAccount       = AverageDailyBalanceAccount.GeneralLedgerChartAccount)
				and    (PrmDimension1    not entered or PrmDimension1    = ADBDimension1)
				and    (PrmDimension2    not entered or PrmDimension2    = ADBDimension2)
				and    (PrmDimension3    not entered or PrmDimension3    = ADBDimension3)
				and    (NonChartAccount or (not PrmNonChartAccountOnly and ReportingChartAccountRel exists))
				and    Active)

			Sort Order
				FinanceEnterpriseGroup
				Active
				AccountingEntity
				AverageDailyBalanceAccount.GeneralLedgerChartAccount

			Accumulators
				FunctionalTotal

			Local Fields
				LocalGetBeginningBalance			is Boolean
				LocalLastADBDate					is Date
				LocalYTDCalendarPeriod				is like GeneralLedgerCalendarPeriod
				LocalQTDCalendarPeriod				is like GeneralLedgerCalendarPeriod
				LocalMTDCalendarPeriod				is like GeneralLedgerCalendarPeriod
				LocalWTDCalendarPeriod				is like GeneralLedgerCalendarPeriod
				LocalYTDCalendarPeriodOld			is like GeneralLedgerCalendarPeriod
				LocalQTDCalendarPeriodOld			is like GeneralLedgerCalendarPeriod
				LocalMTDCalendarPeriodOld			is like GeneralLedgerCalendarPeriod
				LocalWTDCalendarPeriodOld			is like GeneralLedgerCalendarPeriod

				LocalBalanceOnPostDate				is an InternationalAmount
				LocalBalanceOnTransactionDate		is an InternationalAmount
				LocalYTDAggregateOnPostDate			is an InternationalAmount
				LocalQTDAggregateOnPostDate			is an InternationalAmount
				LocalMTDAggregateOnPostDate			is an InternationalAmount
				LocalWTDAggregateOnPostDate			is an InternationalAmount
				LocalYTDAggregateOnTranDate			is an InternationalAmount
				LocalQTDAggregateOnTranDate			is an InternationalAmount
				LocalMTDAggregateOnTranDate			is an InternationalAmount
				LocalWTDAggregateOnTranDate			is an InternationalAmount

				LocalOnPostDateTransactionAmount	is an InternationalAmount
				LocalOnPostDateAlternateAmount1		is an InternationalAmount
				LocalOnPostDateAlternateAmount2		is an InternationalAmount
				LocalOnPostDateAlternateAmount3		is an InternationalAmount
				LocalOnPostDateReportAmount1		is an InternationalAmount
				LocalOnPostDateReportAmount2		is an InternationalAmount
				LocalOnPostDateReportAmount3		is an InternationalAmount
				LocalOnPostDateReportAmount4		is an InternationalAmount
				LocalOnPostDateReportAmount5		is an InternationalAmount
				TranAmountYTDAggregateOnPostDate	is an InternationalAmount	
				TranAmountQTDAggregateOnPostDate	is an InternationalAmount
				TranAmountMTDAggregateOnPostDate	is an InternationalAmount
				TranAmountWTDAggregateOnPostDate	is an InternationalAmount
				AltAmount1YTDAggregateOnPostDate	is an InternationalAmount	
				AltAmount1QTDAggregateOnPostDate	is an InternationalAmount
				AltAmount1MTDAggregateOnPostDate	is an InternationalAmount
				AltAmount1WTDAggregateOnPostDate	is an InternationalAmount
				AltAmount2YTDAggregateOnPostDate	is an InternationalAmount	
				AltAmount2QTDAggregateOnPostDate	is an InternationalAmount
				AltAmount2MTDAggregateOnPostDate	is an InternationalAmount
				AltAmount2WTDAggregateOnPostDate	is an InternationalAmount
				AltAmount3YTDAggregateOnPostDate	is an InternationalAmount	
				AltAmount3QTDAggregateOnPostDate	is an InternationalAmount
				AltAmount3MTDAggregateOnPostDate	is an InternationalAmount
				AltAmount3WTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt1YTDAggregateOnPostDate	is an InternationalAmount	
				ReportAmt1QTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt1MTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt1WTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt2YTDAggregateOnPostDate	is an InternationalAmount	
				ReportAmt2QTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt2MTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt2WTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt3YTDAggregateOnPostDate	is an InternationalAmount	
				ReportAmt3QTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt3MTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt3WTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt4YTDAggregateOnPostDate	is an InternationalAmount	
				ReportAmt4QTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt4MTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt4WTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt5YTDAggregateOnPostDate	is an InternationalAmount	
				ReportAmt5QTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt5MTDAggregateOnPostDate	is an InternationalAmount
				ReportAmt5WTDAggregateOnPostDate	is an InternationalAmount

			Action Rules
				Empty Set Rules

				Set Rules
				
				Instance Rules
					if (PrmGetAccountBeginBalance)	
						LocalCloseLedger			= PrmReportingBasis.DerivedCloseLedger
						LocalTransactionLedger		= TransactionLedger
						LocalTransactionCurrency	= TransactionCurrency
						LocalAccountingEntity       = PrmAccountingEntity
						LocalBasisYear              = PrmFiscalYear
						LocalBeginBalancePeriod		= DerivedBeginBalancePeriod
						include GetBeginBalance
						LastADBDate									= LocalDate 
						LocalReportingBasis							= PrmReportingBasis
						LocalAccountingEntity						= PrmAccountingEntity
						LocalInstGeneralLedgerChartAccount			= AverageDailyBalanceAccount.GeneralLedgerChartAccount
						LocalInstDimensionCode						= AverageDailyBalanceAccount.DimensionCode
						invoke Update UpdateAverageDailyBalanceAmountRel
							invoked.ADBDimension1					= ADBDimension1
							invoked.ADBDimension2					= ADBDimension2
							invoked.ADBDimension3					= ADBDimension3
							invoked.PrmBalanceOnPostDate			= LocalBalanceOnPostDate
							invoked.PrmBalanceOnTransactionDate		= LocalBalanceOnPostDate
							invoked.TransactionLedger				= TransactionLedger
							invoked.TransactionCurrency				= TransactionCurrency
					        invoked.PrmOnPostDateTransactionAmount	= LocalOnPostDateTransactionAmount
					        invoked.PrmOnPostDateAlternateAmount1	= LocalOnPostDateAlternateAmount1
					        invoked.PrmOnPostDateAlternateAmount2	= LocalOnPostDateAlternateAmount2
					        invoked.PrmOnPostDateAlternateAmount3	= LocalOnPostDateAlternateAmount3
							invoked.PrmOnPostDateReportAmount1		= LocalOnPostDateReportAmount1
							invoked.PrmOnPostDateReportAmount2		= LocalOnPostDateReportAmount2
							invoked.PrmOnPostDateReportAmount3		= LocalOnPostDateReportAmount3
							invoked.PrmOnPostDateReportAmount4		= LocalOnPostDateReportAmount4
							invoked.PrmOnPostDateReportAmount5		= LocalOnPostDateReportAmount5

					initialize LocalBalanceOnPostDate
					initialize LocalBalanceOnTransactionDate
					initialize LocalYTDAggregateOnPostDate
					initialize LocalYTDAggregateOnTranDate
					initialize LocalQTDAggregateOnPostDate
					initialize LocalQTDAggregateOnTranDate
					initialize LocalMTDAggregateOnPostDate
					initialize LocalMTDAggregateOnTranDate
					initialize LocalWTDAggregateOnPostDate
					initialize LocalWTDAggregateOnTranDate

					initialize LocalOnPostDateTransactionAmount
					initialize LocalOnPostDateAlternateAmount1
					initialize LocalOnPostDateAlternateAmount2
					initialize LocalOnPostDateAlternateAmount3
					initialize LocalOnPostDateReportAmount1
					initialize LocalOnPostDateReportAmount2
					initialize LocalOnPostDateReportAmount3
					initialize LocalOnPostDateReportAmount4
					initialize LocalOnPostDateReportAmount5
					initialize TranAmountYTDAggregateOnPostDate
					initialize TranAmountQTDAggregateOnPostDate
					initialize TranAmountMTDAggregateOnPostDate
					initialize TranAmountWTDAggregateOnPostDate
					initialize AltAmount1YTDAggregateOnPostDate
					initialize AltAmount1QTDAggregateOnPostDate
					initialize AltAmount1MTDAggregateOnPostDate
					initialize AltAmount1WTDAggregateOnPostDate
					initialize AltAmount2YTDAggregateOnPostDate
					initialize AltAmount2QTDAggregateOnPostDate
					initialize AltAmount2MTDAggregateOnPostDate
					initialize AltAmount2WTDAggregateOnPostDate
					initialize AltAmount3YTDAggregateOnPostDate
					initialize AltAmount3QTDAggregateOnPostDate
					initialize AltAmount3MTDAggregateOnPostDate
					initialize AltAmount3WTDAggregateOnPostDate
					initialize ReportAmt1YTDAggregateOnPostDate
					initialize ReportAmt1QTDAggregateOnPostDate
					initialize ReportAmt1MTDAggregateOnPostDate
					initialize ReportAmt1WTDAggregateOnPostDate
					initialize ReportAmt2YTDAggregateOnPostDate
					initialize ReportAmt2QTDAggregateOnPostDate
					initialize ReportAmt2MTDAggregateOnPostDate
					initialize ReportAmt2WTDAggregateOnPostDate
					initialize ReportAmt3YTDAggregateOnPostDate
					initialize ReportAmt3QTDAggregateOnPostDate
					initialize ReportAmt3MTDAggregateOnPostDate
					initialize ReportAmt3WTDAggregateOnPostDate
					initialize ReportAmt4YTDAggregateOnPostDate
					initialize ReportAmt4QTDAggregateOnPostDate
					initialize ReportAmt4MTDAggregateOnPostDate
					initialize ReportAmt4WTDAggregateOnPostDate
					initialize ReportAmt5YTDAggregateOnPostDate
					initialize ReportAmt5QTDAggregateOnPostDate
					initialize ReportAmt5MTDAggregateOnPostDate
					initialize ReportAmt5WTDAggregateOnPostDate


					LocalReportingBasis					= PrmReportingBasis
					LocalGeneralLedgerCalendar			= PrmReportingBasis.GeneralLedgerCalendar
					LocalCloseLedger					= PrmReportingBasis.DerivedCloseLedger
					LocalTransactionLedger				= TransactionLedger
					LocalTransactionCurrency			= TransactionCurrency
					LocalAccountingEntity				= PrmAccountingEntity
					LocalInstGeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount
					LocalInstDimensionCode				= AverageDailyBalanceAccount.DimensionCode
					LocalRunDate						= PrmRunDate
					LocalGetBeginningBalance			= true
					initialize LocalDate
					initialize LocalLastADBDate
					if (LastADBDate entered
					or PrmProcessingType.RecalculatePreviousYear
					or PrmProcessingType.RecalculateCurrentYear)
						if (PrmProcessingType.RecalculatePreviousYear
						or  PrmProcessingType.RecalculateCurrentYear)  
							LocalDate = PrmStartDate
						else
							LocalDate = LastADBDate
						if (UpdateAverageDailyBalanceAmountRel exists)
							LocalGetBeginningBalance				= false
							LocalLastADBDate						= UpdateAverageDailyBalanceAmountRel.AverageDailyBalanceAmount.RunDate
							LocalBalanceOnPostDate					= UpdateAverageDailyBalanceAmountRel.BalanceOnPostDate
							LocalBalanceOnTransactionDate			= UpdateAverageDailyBalanceAmountRel.BalanceOnTransactionDate
							if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
								LocalOnPostDateTransactionAmount	= UpdateAverageDailyBalanceAmountRel.OnPostDateTransactionAmount
								LocalOnPostDateAlternateAmount1		= UpdateAverageDailyBalanceAmountRel.OnPostDateAlternateAmount1
								LocalOnPostDateAlternateAmount2		= UpdateAverageDailyBalanceAmountRel.OnPostDateAlternateAmount2
								LocalOnPostDateAlternateAmount3		= UpdateAverageDailyBalanceAmountRel.OnPostDateAlternateAmount3
								LocalOnPostDateReportAmount1		= UpdateAverageDailyBalanceAmountRel.OnPostDateReportAmount1
								LocalOnPostDateReportAmount2		= UpdateAverageDailyBalanceAmountRel.OnPostDateReportAmount2
								LocalOnPostDateReportAmount3		= UpdateAverageDailyBalanceAmountRel.OnPostDateReportAmount3
								LocalOnPostDateReportAmount4		= UpdateAverageDailyBalanceAmountRel.OnPostDateReportAmount4
								LocalOnPostDateReportAmount5		= UpdateAverageDailyBalanceAmountRel.OnPostDateReportAmount5
					else
						if (PrmLastRunDate entered					
						and AverageDailyBalanceAmountRel exists)
							LocalGetBeginningBalance				= false
							LocalLastADBDate						= last AverageDailyBalanceAmountRel.AverageDailyBalanceAmount.RunDate
							LocalBalanceOnPostDate					= last AverageDailyBalanceAmountRel.BalanceOnPostDate
							LocalBalanceOnTransactionDate			= last AverageDailyBalanceAmountRel.BalanceOnTransactionDate
							if (FinanceEnterpriseGroup.CalculateADBOption.AllCurrencyAmounts)
								LocalOnPostDateTransactionAmount	= last AverageDailyBalanceAmountRel.OnPostDateTransactionAmount
								LocalOnPostDateAlternateAmount1		= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount1
								LocalOnPostDateAlternateAmount2		= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount2
								LocalOnPostDateAlternateAmount3		= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount3
								LocalOnPostDateReportAmount1		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount1
								LocalOnPostDateReportAmount2		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount2
								LocalOnPostDateReportAmount3		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount3
								LocalOnPostDateReportAmount4		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount4
								LocalOnPostDateReportAmount5		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount5
					if (LocalLastADBDate entered)
						if (AverageDailyBalanceAccount.GeneralLedgerChartAccount = DerivedUndistributedRetainedEarnings
						or  AverageDailyBalanceAccount.GeneralLedgerChartAccount.ChartSection.IncomeStatement)
							initialize LocalYTDCalendarPeriodOld
							initialize LocalYTDCalendarPeriod
							LocalDate 					= LocalLastADBDate		
							include GetCalendarPeriod
							LocalYTDCalendarPeriodOld	= LocalYTDCalendarPeriod
							initialize LocalYTDCalendarPeriod
							LocalDate 					= LocalLastADBDate + 1 	
							include GetCalendarPeriod
							if (LocalYTDCalendarPeriodOld entered
							and LocalYTDCalendarPeriodOld	not = LocalYTDCalendarPeriod)	
								initialize LocalBalanceOnPostDate
								initialize LocalBalanceOnTransactionDate
								initialize LocalOnPostDateTransactionAmount
								initialize LocalOnPostDateAlternateAmount1
								initialize LocalOnPostDateAlternateAmount2
								initialize LocalOnPostDateAlternateAmount3
								initialize LocalOnPostDateReportAmount1
								initialize LocalOnPostDateReportAmount2
								initialize LocalOnPostDateReportAmount3
								initialize LocalOnPostDateReportAmount4
								initialize LocalOnPostDateReportAmount5
						LocalDate = LocalLastADBDate + 1 	
						if (PrmGetAccountBeginBalance
						or  (PrmLastRunDate not entered and FinanceEnterpriseGroup.AllBalanceSheetAccounts)) 
							include AccumulateAggregateAmount
					else
						if  ((PrmProcessingType.DailyBalanceProcessing and PrmLastRunDate entered)
						and  AverageDailyBalanceAccount.GeneralLedgerChartAccount.ChartSection.BalanceSheet
						and  AverageDailyBalanceAccount.GeneralLedgerChartAccount not = DerivedUndistributedRetainedEarnings)
							LocalCloseLedger			= PrmReportingBasis.DerivedCloseLedger
							LocalBeginBalancePeriod		= PrmReportingBasis.CurrentBeginBalancePeriod
							include GetBeginBalance
							LocalBalanceOnTransactionDate	= LocalBalanceOnPostDate

					if (!LocalDate entered)
						LocalDate			= LocalRunDate

					if (LocalBalanceOnPostDate entered
					or  LocalBalanceOnTransactionDate entered)
						initialize LocalYTDCalendarPeriod
						initialize LocalQTDCalendarPeriod
						initialize LocalMTDCalendarPeriod
						initialize LocalWTDCalendarPeriod
						include GetCalendarPeriod
						LocalYTDCalendarPeriodOld		= LocalYTDCalendarPeriod
						LocalQTDCalendarPeriodOld		= LocalQTDCalendarPeriod
						LocalMTDCalendarPeriodOld		= LocalMTDCalendarPeriod
						LocalWTDCalendarPeriodOld		= LocalWTDCalendarPeriod
						while (LocalDate	<= LocalRunDate)
							LocalReportingBasis							= PrmReportingBasis
							LocalAccountingEntity						= PrmAccountingEntity
							LocalInstGeneralLedgerChartAccount			= AverageDailyBalanceAccount.GeneralLedgerChartAccount
							LocalInstDimensionCode						= AverageDailyBalanceAccount.DimensionCode
							invoke Update UpdateAverageDailyBalanceAmountRel
								invoked.ADBDimension1					= ADBDimension1
								invoked.ADBDimension2					= ADBDimension2
								invoked.ADBDimension3					= ADBDimension3
								invoked.PrmBalanceOnPostDate			= LocalBalanceOnPostDate
								invoked.PrmBalanceOnTransactionDate		= LocalBalanceOnTransactionDate
								invoked.TransactionLedger				= TransactionLedger
								invoked.TransactionCurrency				= TransactionCurrency
						        invoked.PrmOnPostDateTransactionAmount	= LocalOnPostDateTransactionAmount
						        invoked.PrmOnPostDateAlternateAmount1	= LocalOnPostDateAlternateAmount1
						        invoked.PrmOnPostDateAlternateAmount2	= LocalOnPostDateAlternateAmount2
						        invoked.PrmOnPostDateAlternateAmount3	= LocalOnPostDateAlternateAmount3
								invoked.PrmOnPostDateReportAmount1		= LocalOnPostDateReportAmount1
								invoked.PrmOnPostDateReportAmount2		= LocalOnPostDateReportAmount2
								invoked.PrmOnPostDateReportAmount3		= LocalOnPostDateReportAmount3
								invoked.PrmOnPostDateReportAmount4		= LocalOnPostDateReportAmount4
								invoked.PrmOnPostDateReportAmount5		= LocalOnPostDateReportAmount5
							include UpdateAggregateAmounts
							LocalLastADBDate	= LocalDate
							LocalDate			+= 1
							initialize LocalYTDCalendarPeriod
							initialize LocalQTDCalendarPeriod
							initialize LocalMTDCalendarPeriod
							initialize LocalWTDCalendarPeriod
							include GetCalendarPeriod
							include AccumulateAggregateAmount
							if ((AverageDailyBalanceAccount.GeneralLedgerChartAccount.ChartSection.IncomeStatement or LocalInstGeneralLedgerChartAccount = DerivedUndistributedRetainedEarnings)
							and (LocalYTDCalendarPeriodOld entered and LocalYTDCalendarPeriodOld not = LocalYTDCalendarPeriod)) 
								if (PrmProcessingType.DailyBalanceProcessing) 
									LastADBDate	= LocalLastADBDate
								end while	
							else
							if (LocalDate > LocalRunDate
							and PrmProcessingType.DailyBalanceProcessing) 
								LastADBDate	= LocalRunDate

						initialize LocalYTDCalendarPeriod
						initialize LocalQTDCalendarPeriod
						initialize LocalMTDCalendarPeriod
						initialize LocalWTDCalendarPeriod
						include UpdateAggregateAmounts

		UpdateADBBeginningBalance is a Set Action			
			default label is untranslatable
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is a AccountingEntity
					default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmReportingBasisYear			is like ReportingBasisYear
					default label is "ReportingBasisYear"
				PrmCloseLedger					is a Ledger
					default label is "CloseLedger"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					RetainedEarnings 			= PrmFinanceEnterpriseGroup.DisplayRetainedEarnings
				PrmReportingBasis
					LocalReportingChart			= PrmReportingBasis.ReportingChart

		    Local Fields
        	    RetainedEarnings				is like GeneralLedgerChartAccount
				LocalBalanceOnPostDate			is an InternationalAmount						
				LocalBeginBalance				is a InternationalAmount						
				LastBalanceOnPostDate			is a InternationalAmount						
				LastBalanceOnTransactionDate	is a InternationalAmount						
				LastADBDailyAmountRunDate		is Date
				LocalTimeStamp					is TimeStamp
				LocalGLPostedAmount						is a InternationalAmount				
				ADBStartDateUnprocessedAmount			is a InternationalAmount				
				ADBPreviousYearUnprocessedAmount		is a InternationalAmount				
				LocalYear								is a GeneralLedgerCalendarYear

				TranAmountBeginBalance				is an InternationalAmount			
				AlternateAmount1BeginBalance		is an InternationalAmount
				AlternateAmount2BeginBalance		is an InternationalAmount
				AlternateAmount3BeginBalance		is an InternationalAmount
				ReportAmount1BeginBalance			is an InternationalAmount
				ReportAmount2BeginBalance			is an InternationalAmount
				ReportAmount3BeginBalance			is an InternationalAmount
				ReportAmount4BeginBalance			is an InternationalAmount
				ReportAmount5BeginBalance			is an InternationalAmount
				LocalOnPostDateTransactionAmount	is an InternationalAmount			
				LocalOnPostDateAlternateAmount1		is an InternationalAmount
				LocalOnPostDateAlternateAmount2		is an InternationalAmount
				LocalOnPostDateAlternateAmount3		is an InternationalAmount
				LocalOnPostDateReportAmount1		is an InternationalAmount
				LocalOnPostDateReportAmount2		is an InternationalAmount
				LocalOnPostDateReportAmount3		is an InternationalAmount
				LocalOnPostDateReportAmount4		is an InternationalAmount
				LocalOnPostDateReportAmount5		is an InternationalAmount
				LastOnPostDateTransactionAmount		is an InternationalAmount			
				LastOnPostDateAlternateAmount1		is an InternationalAmount
				LastOnPostDateAlternateAmount2		is an InternationalAmount
				LastOnPostDateAlternateAmount3		is an InternationalAmount
				LastOnPostDateReportAmount1			is an InternationalAmount
				LastOnPostDateReportAmount2			is an InternationalAmount
				LastOnPostDateReportAmount3			is an InternationalAmount
				LastOnPostDateReportAmount4			is an InternationalAmount
				LastOnPostDateReportAmount5			is an InternationalAmount
				TranAmountADBPrevYearUnprocessed	is an InternationalAmount			
				AltAmount1ADBPrevYearUnprocessed	is an InternationalAmount
				AltAmount2ADBPrevYearUnprocessed	is an InternationalAmount
				AltAmount3ADBPrevYearUnprocessed	is an InternationalAmount
				ReportAmt1ADBPrevYearUnprocessed	is an InternationalAmount
				ReportAmt2ADBPrevYearUnprocessed	is an InternationalAmount
				ReportAmt3ADBPrevYearUnprocessed	is an InternationalAmount
				ReportAmt4ADBPrevYearUnprocessed	is an InternationalAmount
				ReportAmt5ADBPrevYearUnprocessed	is an InternationalAmount
				TranAmountADBStartDateUnprocessed	is an InternationalAmount			
				AltAmount1ADBStartDateUnprocessed	is an InternationalAmount
				AltAmount2ADBStartDateUnprocessed	is an InternationalAmount
				AltAmount3ADBStartDateUnprocessed	is an InternationalAmount
				ReportAmt1ADBStartDateUnprocessed	is an InternationalAmount
				ReportAmt2ADBStartDateUnprocessed	is an InternationalAmount
				ReportAmt3ADBStartDateUnprocessed	is an InternationalAmount
				ReportAmt4ADBStartDateUnprocessed	is an InternationalAmount
				ReportAmt5ADBStartDateUnprocessed	is an InternationalAmount
				GLTransactionAmount					is an InternationalAmount			
				GLAlternateAmount1					is an InternationalAmount
				GLAlternateAmount2					is an InternationalAmount
				GLAlternateAmount3					is an InternationalAmount
				GLReportAmount1						is an InternationalAmount
				GLReportAmount2						is an InternationalAmount
				GLReportAmount3						is an InternationalAmount
				GLReportAmount4						is an InternationalAmount
				GLReportAmount5						is an InternationalAmount

			Instance Selection
				where (FinanceEnterpriseGroup							    = PrmFinanceEnterpriseGroup
				and    !AverageDailyBalanceAccount.GeneralLedgerChartAccount.SystemAccount.AverageDailyBalance
				and    AccountingEntity									    = PrmAccountingEntity	
				and    AverageDailyBalanceAccount.GeneralLedgerChartAccount	= RetainedEarnings
				and    Active)

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						LocalTimeStamp = current timestamp

				Instance Rules
					initialize LocalRunDate
					initialize LocalYear
					include InitializeSysteREAccountAmounts

					LocalReportingBasis                = PrmReportingBasis
					LocalAccountingEntity              = AccountingEntity
					LocalRunDate                       = PrmNewYearDate


					if (AverageDailyBalanceAmountRel exists)
						LastBalanceOnPostDate			= last AverageDailyBalanceAmountRel.BalanceOnPostDate
						LastADBDailyAmountRunDate		= last AverageDailyBalanceAmountRel.AverageDailyBalanceAmount.RunDate
						LastBalanceOnTransactionDate	= last AverageDailyBalanceAmountRel.BalanceOnTransactionDate
						LastOnPostDateTransactionAmount	= last AverageDailyBalanceAmountRel.OnPostDateTransactionAmount
						LastOnPostDateAlternateAmount1	= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount1
						LastOnPostDateAlternateAmount2	= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount2
						LastOnPostDateAlternateAmount3	= last AverageDailyBalanceAmountRel.OnPostDateAlternateAmount3
						LastOnPostDateReportAmount1		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount1
						LastOnPostDateReportAmount2		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount2
						LastOnPostDateReportAmount3		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount3
						LastOnPostDateReportAmount4		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount4
						LastOnPostDateReportAmount5		= last AverageDailyBalanceAmountRel.OnPostDateReportAmount5


						LocalTransactionLedger		= TransactionLedger
						LocalTransactionCurrency	= TransactionCurrency
						LocalCloseLedger			= PrmCloseLedger
						LocalBeginBalancePeriod		= PrmNewYear
						include GetBeginBalance


						if (FinanceEnterpriseGroup.ADBSelection.AccountOnly)
							LocalYear					= PostedGeneralLedgerTransactionForAccountRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
							LocalGLPostedAmount			= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount)
							GLTransactionAmount			= (sum PostedGeneralLedgerTransactionForAccountRel.TransactionAmount)
							GLAlternateAmount1			= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount)
							GLAlternateAmount2			= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount)
							GLAlternateAmount3			= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount)
							GLReportAmount1				= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount)
							GLReportAmount2				= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount)
							GLReportAmount3				= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount)
							GLReportAmount4				= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount)
							GLReportAmount5				= (sum PostedGeneralLedgerTransactionForAccountRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount)
						else
						if (FinanceEnterpriseGroup.ADBAccountWithDimension)
							include AssignToLocalDimensions
							LocalYear					= PostedGeneralLedgerTransactionForAccountAndDimensionRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
							LocalGLPostedAmount			= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount)
							GLTransactionAmount			= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.TransactionAmount)
							GLAlternateAmount1			= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount)
							GLAlternateAmount2			= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount)
							GLAlternateAmount3			= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount)
							GLReportAmount1				= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount)
							GLReportAmount2				= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount)
							GLReportAmount3				= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount)
							GLReportAmount4				= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount)
							GLReportAmount5				= (sum PostedGeneralLedgerTransactionForAccountAndDimensionRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount)


						ADBPreviousYearUnprocessedAmount	= (sum PreviousYearUnprocessedADBTransactionRel.FunctionalAmount)
						TranAmountADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.TransactionAmount)
						AltAmount1ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.AlternateAmount1)
						AltAmount2ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.AlternateAmount2)
						AltAmount3ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.AlternateAmount3)
						ReportAmt1ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.ReportAmount1)
						ReportAmt2ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.ReportAmount2)
						ReportAmt3ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.ReportAmount3)
						ReportAmt4ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.ReportAmount4)
						ReportAmt5ADBPrevYearUnprocessed	= (sum PreviousYearUnprocessedADBTransactionRel.ReportAmount5)

						ADBStartDateUnprocessedAmount		= ((sum StartDateUnprocessedADBTransactionRel.FunctionalAmount)  - LocalGLPostedAmount)
						TranAmountADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.TransactionAmount) - GLTransactionAmount)
						AltAmount1ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.AlternateAmount1)  - GLAlternateAmount1)
						AltAmount2ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.AlternateAmount2)  - GLAlternateAmount2)
						AltAmount3ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.AlternateAmount3)  - GLAlternateAmount3)
						ReportAmt1ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.ReportAmount1)     - GLReportAmount1)
						ReportAmt2ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.ReportAmount2)     - GLReportAmount2)
						ReportAmt3ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.ReportAmount3)     - GLReportAmount3)
						ReportAmt4ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.ReportAmount4)     - GLReportAmount4)
						ReportAmt5ADBStartDateUnprocessed	= ((sum StartDateUnprocessedADBTransactionRel.ReportAmount5)     - GLReportAmount5)


						LocalBeginBalance				= (LocalBalanceOnPostDate - ADBPreviousYearUnprocessedAmount - LastBalanceOnPostDate - ADBStartDateUnprocessedAmount)
						TranAmountBeginBalance			= (LocalOnPostDateTransactionAmount - TranAmountADBPrevYearUnprocessed - LastOnPostDateTransactionAmount - TranAmountADBStartDateUnprocessed)
						AlternateAmount1BeginBalance	= (LocalOnPostDateAlternateAmount1  - AltAmount1ADBPrevYearUnprocessed - LastOnPostDateAlternateAmount1  - AltAmount1ADBStartDateUnprocessed)
						AlternateAmount2BeginBalance	= (LocalOnPostDateAlternateAmount2  - AltAmount2ADBPrevYearUnprocessed - LastOnPostDateAlternateAmount2  - AltAmount2ADBStartDateUnprocessed)
						AlternateAmount3BeginBalance	= (LocalOnPostDateAlternateAmount3  - AltAmount3ADBPrevYearUnprocessed - LastOnPostDateAlternateAmount3  - AltAmount3ADBStartDateUnprocessed)
						ReportAmount1BeginBalance		= (LocalOnPostDateReportAmount1     - ReportAmt1ADBPrevYearUnprocessed - LastOnPostDateReportAmount1     - ReportAmt1ADBStartDateUnprocessed)
						ReportAmount2BeginBalance		= (LocalOnPostDateReportAmount2     - ReportAmt2ADBPrevYearUnprocessed - LastOnPostDateReportAmount2     - ReportAmt2ADBStartDateUnprocessed)
						ReportAmount3BeginBalance		= (LocalOnPostDateReportAmount3     - ReportAmt3ADBPrevYearUnprocessed - LastOnPostDateReportAmount3     - ReportAmt3ADBStartDateUnprocessed)
						ReportAmount4BeginBalance		= (LocalOnPostDateReportAmount4     - ReportAmt4ADBPrevYearUnprocessed - LastOnPostDateReportAmount4     - ReportAmt4ADBStartDateUnprocessed)
						ReportAmount5BeginBalance		= (LocalOnPostDateReportAmount5     - ReportAmt5ADBPrevYearUnprocessed - LastOnPostDateReportAmount5     - ReportAmt5ADBStartDateUnprocessed)

						LocalAverageDailyBalanceTransaction.GeneralLedgerChartAccount	= AverageDailyBalanceAccount.GeneralLedgerChartAccount
						LocalAverageDailyBalanceTransaction.DimensionCode				= AverageDailyBalanceAccount.DimensionCode
						LocalAverageDailyBalanceTransaction.PostingDate					= LocalRunDate
						LocalAverageDailyBalanceTransaction.TransactionDate				= LocalRunDate
						LocalAverageDailyBalanceTransaction.RunDate						= LocalTimeStamp
						invoke Update LocalAverageDailyBalanceTransaction
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.AccountingEntity				= AccountingEntity
							invoked.ADBDimension1					= ADBDimension1
							invoked.ADBDimension2					= ADBDimension2
							invoked.ADBDimension3					= ADBDimension3
							invoked.PrmFunctionalAmount				= LocalBeginBalance
							invoked.NonChartAccount					= true	
							invoked.TransactionLedger				= TransactionLedger
							invoked.Year							= LocalYear
							invoked.TransactionCurrency				= TransactionCurrency
							invoked.PrmTransactionAmount			= TranAmountBeginBalance
							invoked.PrmAlternateAmount1				= AlternateAmount1BeginBalance
							invoked.PrmAlternateAmount2				= AlternateAmount2BeginBalance
							invoked.PrmAlternateAmount3				= AlternateAmount3BeginBalance
							invoked.PrmReportAmount1				= ReportAmount1BeginBalance
							invoked.PrmReportAmount2				= ReportAmount2BeginBalance
							invoked.PrmReportAmount3				= ReportAmount3BeginBalance
							invoked.PrmReportAmount4				= ReportAmount4BeginBalance
							invoked.PrmReportAmount5				= ReportAmount5BeginBalance

		Purge is a Purge Action
			default label is untranslatable
			restricted

		PurgeData is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup

			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)

			Action Rules
				Instance Rules
					invoke Purge
