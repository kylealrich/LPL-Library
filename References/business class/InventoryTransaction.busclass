InventoryTransaction is a BusinessClass
	owned by ic
	prefix is IAC
	classic name is ICACTIVITY

	Ontology
		symbolic key is InventoryTransaction
			classic set name is IACSET1

			classic name for InventoryLocation is LOCATION

	Patterns
		implements StaticJava
		implements BODId
		disable AuditIndex
		implements Archivable

	Persistent Fields

		InventoryDocumentType
			classic name is DOC-TYPE
		Reference1					is a Reference
		Reference2					is a Reference
		TransactionDate				is TimeStamp
			classic name is TRANS-DATE
		GeneralLedgerDate			is Date
			classic name is GL-DATE
			default label is "GlobalLedgerDate"
		EstimatedDeliveryDate		is Date
			classic name is EST-DEL-DATE
		InterfaceInProcess			is Boolean
		OriginatingInterfaceRun		is a InventoryTransactionInterfaceResult          
			delete ignored
		TransactionQuantityTotal	is Decimal size 13.4
			classic name is DOC-TOTAL
			disable Auditing
			protected
		IntransitTransfer			is Boolean
			classic name is INTRANSIT-FL


		Reprint						is Boolean
			classic name is REPRINT-FL
		NumberOfCartons
			classic name is CARTONS
		LastLineNumber				is a LineNumber
			classic name is LINE-NBR
			disable Auditing
			protected
		FromToCompanyLocation
			classic name for FromToCompanyLocation.FromToCompany is FROM-TO-CMPY
			classic name for FromToCompanyLocation.FromToLocation is FROM-TO-LOC
		Status						is Numeric size 1
			protected
			States
				Unreleased			value is 0
				Released			value is 1
				GlobalLedgerUpdated	value is 2
				NonGlobalLedger		value is 3
				IntermediateStatus	value is 5
				ReleaseInProgress	value is 7
				CreateInProgress	value is 8
		IntransitReceivingStatus	is Numeric 1
			protected
			States
				NoReceiving			value is 0
				ReadyToReceive		value is 1
				ReceivingInProcess	value is 2
				ReceivingCompleted	value is 3
		RelatedVendorReturn 		is a VendorReturn
			delete ignored
		NumberOfLines
			disable Auditing
			protected
		CurrencyTable
		DefaultDistributionAccount	is a FinanceCodeBlock
			default label is "DefaultDebitAccount"
		OriginatingTransaction		is BusinessObjectReference
			protected
		OriginatingIssueLocation	is an InventoryLocation
		OriginatingIssueDocument	is an InventoryTransaction
			context of OriginatingIssueLocation

		DownloadedByArray
	Transient Fields
	
		IntransitAndReceivingDocumentType	is like InventoryDocumentType 
		IntransitAndReceivingDocumentNumber	is like InventoryTransaction
		IntransitAndReceivingDocument		is like InventoryTransaction
		InventoryTransactionType			is AlphaUpper size 2
			derive value from DerivedInventoryType
			States
				InventoryReceipt	value is "RC"
				InventoryIssue		value is "IS"
				InventoryTransfer	value is "IT"
				Adjustment			value is "AJ"
				BinTransfer			value is "BT"
		ReceiveAll							is Boolean
		SkipForWorkOrder					is Boolean
		SkipDistributions					is Boolean
		TransientOverrideLocation			is Boolean
			default label is "OverrideInventoryLocation"
		TransientReturnAllLines				is Boolean
			default label is "ReturnAllLines"
		InventoryReturnDocumentType			is like InventoryDocumentType
			derive value from DerivedReturnDocumentType
		TransientReturnWizard				is Boolean
			derive value from DerivedReturnWizard				
		TransientStatus						is Numeric size 1
			States
				Unreleased	value is 0
				Released	value is 1
		WarehouseShipment
			context of InventoryLocation
		TransientOnline						is Alpha size 1
			derive value from DerivedReturnYes

	Local Fields
		LocalNativeLPLBODTrigger						is Boolean
		LocalLineVariationID							is Alpha size 25
		
		LoopCounter							is Numeric 2
		ValidTransactionDate				is Boolean
		FutureYearPerOne					is Date
		FutureGeneralLedgerDateCheck		is Boolean
		NewInventoryTransaction				is an InventoryTransaction view
		LocalInventoryTransaction			is like InventoryTransaction
		LocalDateForValidation				is Date
		LocalGeneralLedgerDateValidation	is Boolean
		LocalTransactionDateValidation		is Boolean
		TotalQuantity						is Decimal size 13.4
		LocalLimitForBatchInvoke			is Numeric 3
		LocalUseBatchRelease				is Boolean	


		LocalCurrentDate					is Date
		LocalDocType						is AlphaUpper 2
		LocalError							is AlphaUpper 200		
		
		TCLocalAccountingEntity				is like AccountingEntity
		TCLocalAccountingUnit				is AlphaUpper 12
		TCLocalLocation						is AlphaUpper 15
		TCLocalTransaction					is Numeric 10					
		TCLocalTransactionDate				is Date
		TCLocalItem							is Numeric 10
		TimeStampInGMT

		LocalHasError						is Boolean
		LocalErrorLevel						is Numeric 2
		LocalRunGroup						is like RunGroup
		LocalInventoryTransactionImport		is like InventoryTransactionImport	
		AsyncId								is an AsyncActionRequest
		
		LocalHistoryTransactionCutOffDate	is Date
		
		LocalCompany						is like InventoryCompany
		LocalInventoryDocumentType			is like InventoryDocumentType


		NativeLPLBODTrigger					is Boolean    
		LocalMainUserTemplate				is Alpha size 250
		ShipmentLineCount					is Numeric size 9
		LocalShipmentLine					is Alpha size 25
		AdvanceShipLineCount				is Numeric size 9
		LocalAdvanceShipLine				is Alpha size 25
		LocalASNDocumentType				is Alpha size 20
		LocalInventoryLocation				is AlphaUpper size 50
		LocalAccountingEntity				is Alpha size 100
		LocalDocNbrOut						is Alpha size 30
		LocalTriggerFrom					is Alpha size 100	
	    LocalReference						is Alpha 40
	    LocalBODTrigger 					is Boolean

		
		ActionCode							is Alpha size 1
			States
				Create  value is "C"
				Update	value is "U"
				Delete	value is "D"
		LocalBODCurrentTimeStamp			is a BODCurrentTimeStamp		

		LocalVariationID					is Numeric 15
		LocalLineNumber						is Numeric 9	
		LocalItemDescription				is Alpha size 60
		LocalLineQuantity					is Decimal size 13
		LocalLineUOM						is AlphaUpper size 4
		LocalItemName						is AlphaUpper size 32
		LocalLineBin						is AlphaUpper 10
		LocalLineLot						is AlphaUpper 30
		LocalWorkOrderID					is AlphaUpper 30
		LocalWorkOrderActivity				is Numeric 8

		NewBODTracker  				is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
		LocalConfigurationParameter	is Alpha size up to 200
		LocalAEAlreadyExecuted			is Boolean
		
	Context Fields
		AuditDateRange						is a DateRange
		FSMInboundBODTracker
	Derived Fields
		OriginatingDocument					is a DerivedField
			type is like InventoryTransaction
			if (OriginatingTransaction.BusinessClassName = "CustomerOrderReturn")
				return OriginatingTransaction(CustomerOrderReturn).CustomerOrderReturn
			else
			if (OriginatingTransaction.BusinessClassName = "POReceiptAdjustmentAndInspection")
				return OriginatingTransaction(POReceiptAdjustmentAndInspection).POReceiptAdjustmentAndInspection
			else
			if (OriginatingTransaction.BusinessClassName = "PurchaseOrderReceipt")
				return OriginatingTransaction(PurchaseOrderReceipt).PurchaseOrderReceipt.PurchaseOrderReceipt
			else
			if (OriginatingTransaction.BusinessClassName = "VendorReturn")
				return OriginatingTransaction(VendorReturn).VendorReturn
			else
			if (OriginatingTransaction.BusinessClassName = "Requisition")
				return OriginatingTransaction(Requisition).Requisition
			else
			if (OriginatingTransaction.BusinessClassName = "WarehouseShipment")
				return OriginatingTransaction(WarehouseShipment).WarehouseShipment
			else
			if (OriginatingTransaction.BusinessClassName = "InventoryCostHistory")
				return OriginatingTransaction(InventoryCostHistory).InventoryTransaction
			else
			if (OriginatingTransaction.BusinessClassName = "WorkOrder")
				return OriginatingTransaction(WorkOrder).WorkOrder
			else
			if (OriginatingTransaction.BusinessClassName = "InventoryTransaction")
				return OriginatingTransaction(InventoryTransaction).InventoryTransaction
			else
			if (OriginatingTransaction.BusinessClassName = "KitchenOrder")
				return OriginatingTransaction(KitchenOrder).KitchenOrder
			else
				return blank
	
		ContextMessageEntityType is a DerivedField
			type is Alpha 30
			restricted
			if (InventoryTransactionType.InventoryReceipt)
				return "InforInventoryReceipt"
			else
				if (InventoryTransactionType.InventoryIssue)
					return "InforInventoryIssue"
				else
					if (InventoryTransactionType.InventoryTransfer)
						return "InforInventoryTransfer"
					else
						if (InventoryTransactionType.Adjustment)
							return "InforInventoryAdjustment"
						else
							if (InventoryTransactionType.BinTransfer)
								return "InforBinTransfer"
							else
								return "InforMiscInventoryTransactions"

		ContextMessageText is a DerivedField
			type is Alpha 30
			restricted
			if (InventoryTransactionType.InventoryReceipt)
				return "InventoryReceiptForCompany<Company>AtLocation<InventoryLocation>WithDocumentNumber<InventoryTransaction>"
			else
				if (InventoryTransactionType.InventoryIssue)
					return "InventoryIssueForCompany<Company>AtLocation<InventoryLocation>WithDocumentNumber<InventoryTransaction>"
				else
					if (InventoryTransactionType.InventoryTransfer)
						return "InvenoryTransferForCompany<Company>AtLocation<InventoryLocation>WithDocumentNumber<InventoryTransaction>"
					else
						if (InventoryTransactionType.Adjustment)
							return "InvenoryAdjustmentForCompany<Company>AtLocation<InventoryLocation>WithDocumentNumber<InventoryTransaction>"
		
		StatusMsgTagField is a DerivedField
			type is MessageField
			default label is "Status"
			if (IsReleased)
				return ReleasedTagMsg
			if (IsUnreleased)
				return UnreleasedTagMsg
			if (Status.GlobalLedgerUpdated)
				return GLUpdatedTagMsg
			if (Status.NonGlobalLedger)
				return NonGLTagMsg
			if(Status.IntermediateStatus)
				return IntermediateStatusTagMsg
			if(Status.ReleaseInProgress)
				return ReleaseInProgressTagMsg
			if(Status.CreateInProgress)
				return CreateInProgressTagMsg

		ReleasedTagMsg is a MessageField
			restricted
			"Released"

		UnreleasedTagMsg is a MessageField
			restricted
			"Unreleased"

		GLUpdatedTagMsg is a MessageField
			restricted
			"GlobalLedgerUpdated"
		
		NonGLTagMsg is a MessageField
			restricted
			"NonGlobalLedger"
		
		IntermediateStatusTagMsg is a MessageField
			restricted
			"IntermediateStatus"

		ReleaseInProgressTagMsg is a MessageField
			restricted
			"ReleaseInProgress"

		CreateInProgressTagMsg is a MessageField
			restricted
			"CreateInProgress"




















		DerivedTransactionDate is a DerivedField
			type is Date
			restricted
			TimeStampInGMT.Value = TransactionDate
			return TimeStampInGMT.CorporateDate

		ReceivedDateMessage													is a MessageField
			restricted
			"ReceivedDateCannotBeGreaterThanCurrentDate" 
		TransferDateMessage													is a MessageField
			restricted
			"TransferDateCannotBeGreaterThanCurrentDate" 
		IssueDateMessage													is a MessageField
			restricted
			"IssueDateCannotBeGreaterThanCurrentDate" 
		AdjustmentDate														is a MessageField
			restricted
			"AdjustmentDateCannotBeGreaterThanCurrentDate" 
		CostAdjustmentDate													is a MessageField
			restricted
			"TransactionDateCannotBeGreaterThanCurrentDate" 

		NoInventoryTransactionsToReviewMessage								is a MessageField
			restricted
			"All_Transactions_Reviewed"
	
		DerivedMessageForDates												is a DerivedField	
			type is Alpha size up to 200
			restricted	
			if (InventoryTransaction.InventoryDocumentType.BinTransfer
			or  InventoryTransaction.InventoryDocumentType.InventoryTransfer)
				return TransferDateMessage
			else
			if (InventoryTransaction.InventoryDocumentType.InventoryReceipt
			or  InventoryTransaction.InventoryDocumentType.IntransitReceiving
			or  InventoryTransaction.InventoryDocumentType.ReceivingTransfer)
				return ReceivedDateMessage
			else
			if(InventoryTransaction.InventoryDocumentType.InventoryIssue)
				return IssueDateMessage
			else
			if(InventoryTransaction.InventoryDocumentType.Adjustment)
				return AdjustmentDate
			else
			if(InventoryTransaction.InventoryDocumentType.CostAdjustment)
				return CostAdjustmentDate

		GeneralLedgerDateValidationMessage									is a MessageField
			restricted
			"InventoryPeriodIsClosedForGlobalLedgerDate<GeneralLedgerDate>"
		TransactionDateValidationMessage									is a MessageField
			restricted
			"InventoryPeriodIsClosedForTransactionDate<TransactionDate>"

		DerivedMessageForDateValidation										is a DerivedField
			type is Alpha size up to 200
			restricted	

			if (LocalGeneralLedgerDateValidation)
				return GeneralLedgerDateValidationMessage
			else
			if (LocalTransactionDateValidation)
				return TransactionDateValidationMessage

		GeneralLedgerDateCurrentYearPeriodsValidationMessage				is a MessageField
			restricted
			"GlobalLedgerDateNotWithinCurrentYearPeriods"

		TransactionDateCurrentYearPeriodsValidationMessage					is a MessageField
			restricted
			"TransactionDateNotWithinCurrentYearPeriods"		

		DerivedMessageForCurrentYearPeriodsValidation						is a DerivedField
			type is Alpha size up to 200
			restricted	
		
			if (LocalGeneralLedgerDateValidation)
				return GeneralLedgerDateCurrentYearPeriodsValidationMessage
			else
			if (LocalTransactionDateValidation)
				return TransactionDateCurrentYearPeriodsValidationMessage			

		DerivedValidCloseControlDateMessage		is a DerivedField
			type is Alpha size up to 200
			restricted
			if (LocalGeneralLedgerDateValidation)
				return PostDateMessage
			else
			if (LocalTransactionDateValidation)
				return TransactionDateMessage
			
		TransactionDateMessage		is a MessageField
			restricted
			"TransactionDateOf<LocalDateForValidation>NotWithinValidEntryDatesForCompany<Company>;ValidDateRangeIs<ICSystemClosingControlRel.ValidEntryDate.Begin>-<ICSystemClosingControlRel.ValidEntryDate.End>"
			
		PostDateMessage		is a MessageField
			restricted
			"PostDateOf<LocalDateForValidation>NotWithinValidEntryDatesForCompany<Company>;ValidDateRangeIs<ICSystemClosingControlRel.ValidEntryDate.Begin>-<ICSystemClosingControlRel.ValidEntryDate.End>"
			
					

		OffsetAccountLabel													is a DerivedField
			type is Alpha size up to 200
			restricted		
			if (InventoryTransaction.IsInventoryIssues)  
				return	DebitAccountMessage 
			else
			if (InventoryTransaction.IsInventoryReceipt)	
				return CreditAccountMessage 
			else
				return OffsetAccountMessage

		DebitAccountMessage												is a MessageField
			restricted
			"Debit_Account"
		CreditAccountMessage											is a MessageField
			restricted
			"Credit_Account"
		OffsetAccountMessage											is a MessageField
			restricted
			"Offset_Account"

		DerivedMessageForLocationLabel									is a DerivedField	
			type is Alpha size up to 200
			restricted		
			if (InventoryTransaction.InventoryDocumentType.InventoryIssue)
				return	LabelIssueLocationMessage 
			else
			if (InventoryTransaction.InventoryDocumentType.IntransitReceiving
			or	InventoryTransaction.InventoryDocumentType.ReceivingTransfer)
				return LabelReceivingLocationMessage 
			else
			if (InventoryTransaction.InventoryDocumentType.InventoryTransfer)
				return LabelTransferLocationMessage

		LabelIssueLocationMessage										is a MessageField
			restricted
			"RequestingLocation"
		LabelReceivingLocationMessage									is a MessageField
			restricted
			"FromLocation"
		LabelTransferLocationMessage									is a MessageField
			restricted
			"ToLocation"

		LabelForReceivedDateMessage									is a MessageField
			restricted
			"ReceivedDate"
		LabelForTransferDateMessage									is a MessageField
			restricted
			"TransferDate"			
		LabelForIssueDateMessage 										is a MessageField
			restricted
			"IssueDate"	
		LabelForAdjustmentDateMessage 									is a MessageField
			restricted
			"AdjustmentDate"
		LabelForIntransitReceivingOrReceivingTransfer					is a MessageField
			restricted
			"ReceivedDate"
				
		TransactionDateLabel											is a DerivedField     		
			type is Alpha size 15
			restricted
			if (IsInventoryReceipt)
				return LabelForReceivedDateMessage 
			else
			if (IsBinTransferOrInventoryTransfer)	
				return LabelForTransferDateMessage 
			else 
			if (IsInventoryIssues)
				return LabelForIssueDateMessage  	
			else 
			if (IsInventoryAdjustments)
				return LabelForAdjustmentDateMessage
			else
			if (IsIntransitReceivingOrReceivingTransfer)
				return LabelForIntransitReceivingOrReceivingTransfer	
		
		DerivedInventoryType											is a DerivedField
			type is AlphaUpper size 2
			restricted
			if (InventoryDocumentType.InventoryReceipt
			or	InventoryDocumentType.InventoryIssue        	     
			or  InventoryDocumentType.InventoryTransfer              
			or  InventoryDocumentType.Adjustment                     
			or  InventoryDocumentType.BinTransfer
			or 	InventoryDocumentType.RequisitionReturn)
				return InventoryDocumentType   
			 				
		TotalReceiveQuantity                                           is a DerivedField
			type is Decimal 13.4
			initialize TotalQuantity
			for each InventoryTransactionLinesReceivedCompletedRel
				TotalQuantity  = TotalQuantity + each.Quantity 
			return TotalQuantity
		
		CurrentMonth	is a DerivedField
			type is Numeric size 2
			return LocalCurrentDate month
		
		CurrentYear 	is a DerivedField
			type is Numeric size 4
			return LocalCurrentDate year
		
		TransactionMonth is a DerivedField
			type is Numeric size 2
			return InventoryTransaction.TransactionDate month
		
		TransactionYear is a DerivedField
			type is Numeric size 4
			return InventoryTransaction.TransactionDate year

		DerivedInventoryTransactionTitle is a DerivedField
			type is Alpha 35
			if (!RecordExists)
				return InventoryTransactionTitleNoRecord
			else 
				return InventoryTransactionTitle

		InventoryTransactionTitleNoRecord is a LabelField
			"InventoryTransaction"

		InventoryTransactionTitle is a LabelField
			"InventoryTransaction<InventoryTransaction>"

		DerivedInventoryReturnsTitle is a DerivedField
			type is Alpha 35
			if (not RecordExists)
				return InventoryReturnsTitleNoRecord
			else 
				return InventoryReturnsTitle

		DerivedReturnDocumentType 		is a DerivedField
			type is AlphaUpper size 2
			return InventoryDocumentType.InventoryReturns
			
		InventoryReturnsTitleNoRecord 	is a LabelField
			"InventoryReturns"

		InventoryReturnsTitle 			is a LabelField
			"InventoryReturns#<InventoryTransaction>"	

		DerivedReturnWizard 			is a DerivedField
			type is Boolean
			return true
					

		MobileTransactionCompany is a LabelField
			"<Company>_-_<Company.Name>"
		MobileTransactionLocation is a LabelField
			"<InventoryLocation>_-_<InventoryLocation.Name>"

		MobileTransactionStatus is a DerivedField
			type is Alpha 20
			default label is "Status"
			if(Status.Unreleased)
				return "Unreleased"
			if(Status.Released)
				return "Released"
			if(Status.GlobalLedgerUpdated)
				return "Global Ledger Updated"
			if(Status.NonGlobalLedger)
				return "Non-Global Ledger"
			if(Status.IntermediateStatus)
				return "Intermediate Status"
			if(Status.ReleaseInProgress)
				return "Release In Progress"

		MobileIntransitTransfer is a DerivedField
			type is Alpha 20
			default label is "Type"
			if(IntransitTransfer)
				return "In Transit"
			else
				return "Direct Transfer"

		MobileReference1 is a DerivedField
			type is Alpha 40
			default label is "Reference1"
			if (Reference1 entered)
				return "Reference1: " + Reference1
			else
				return blank





		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
						
		DerivedRequiredCleanDocId is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedRQLocationMigrate is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RQLocationMigrate"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedDistributionCentre is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "DistributionCentre"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
								
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
		
		DerivedCSFNonSORForItem is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsCSF_NonSOR_For_Item"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return bod id.VariationID
			
		BODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			restricted
			BODCurrentTimeStamp = system current timestamp
			return BODCurrentTimeStamp
			
		AlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			return BODCurrentTimeStamp
		
		BODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return AlphaCurrentTimeStamp[1:4] + "-" + AlphaCurrentTimeStamp[5:6] + "-" + AlphaCurrentTimeStamp[7:8] + "T" + AlphaCurrentTimeStamp[9:10] + ":" + AlphaCurrentTimeStamp[11:12] + ":" + AlphaCurrentTimeStamp[13:14] + "Z"
		
		DerivedFinanceEnterpriseGroup is a DerivedField
			type is AlphaUpper size 4
			restricted
			return Company.FinanceEnterpriseGroup
		
		DerivedAE is a DerivedField
		 	type is AlphaUpper size 12
		 	restricted
		 	if(DerivedRequiredCleanDocId = "Y")
		 		return DerivedBODCrossAccountingEntity
		 	else
		 		return Company.AccountingEntity
		 		
		DerivedShipAE is a DerivedField
			type is AlphaUpper size 12
		 	restricted
		 	if(DerivedRequiredCleanDocId = "Y")
		 		return DerivedShipToAE
		 	else
		 		return FromToCompanyLocation.FromToCompany.AccountingEntity
		 	
		DerivedAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedAE
			
		DerivedBODCrossAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return DerivedAccountingEntity
				
		DerivedGLCCrossAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(FSMBODCrossReferenceDetailRel.DestinationValue entered)
					LocalAccountingEntity = FSMBODCrossReferenceDetailRel.DestinationValue
				else
					LocalAccountingEntity = DerivedCrossGLC
				return LocalAccountingEntity
			else
				return LocalAccountingEntity
				
		DerivedCrossGLC is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedConfigFEG = "Y")
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedInventoryTransactionCompany
			else
				return DerivedInventoryTransactionCompany
		
		DerivedInventoryTransactionCompany is a DerivedField
			type is Alpha size 4
			restricted
			return InventoryTransaction.Company using "%d"
			
		DerivedShipToAE is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				return DerivedCrossShipToAE
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedShipAE
		
		DerivedCrossShipToAE is a DerivedField
			type is Alpha size 100
			restricted
			if(FSMBODCrossReferenceDetailASRel.DestinationValue entered)
				return FSMBODCrossReferenceDetailASRel.DestinationValue
			else
				return DerivedCrossShipToGLC
				
		DerivedCrossShipToGLC is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedConfigFEG = "Y")
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d"
			else
				return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d"
		
		DerivedAdvShipToAE is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedRequiredCleanDocId != "Y")
				if(DerivedInventoryDocumentType = "IS")
					return DerivedBODCrossAccountingEntity
				else
					return DerivedShipToAE
			else
				if(DerivedInventoryDocumentType = "IS")
					return DerivedBODCrossAccountingEntity
				else
					return DerivedShipToAE
					
		DerivedAdvFromAE is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedRequiredCleanDocId != "Y")
				if(DerivedInventoryDocumentType = "IS")
					return DerivedShipToAE
				else
					return DerivedBODCrossAccountingEntity
			else
				if(DerivedInventoryDocumentType = "IS")
					return DerivedShipToAE
				else
					return DerivedBODCrossAccountingEntity
					
		DerivedITAE  is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IT")
				return DerivedAdvShipToAE
			else
				return DerivedBODCrossAccountingEntity
		
		DerivedITLocation is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IT")
				return DerivedFromToLocation
			else
				return DerivedLocation
				
		
		DerivedITWarehouseLocation is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IT")
				return DerivedFromToLocation
			else
				return DerivedLocation
				
		DerivedLocation is a DerivedField
			type is AlphaUpper size 50
			restricted
			if(DerivedRequiredCleanDocId != "Y")
				return InventoryTransaction.Company using "%d" + DerivedDelimiter + InventoryTransaction.InventoryLocation
			else
				return InventoryTransaction.InventoryLocation
				
		DerivedAdvShipLocation is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType != "IS" and DerivedInventoryEAMLoc = "2" and DerivedRequiredCleanDocId != "Y" )
				return InventoryTransaction.Company using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.FromToLocation
			else
				return  DerivedLocation
		
		DerivedInventoryDocumentType is a DerivedField
			type is AlphaUpper size 4
			restricted
			return InventoryTransaction.InventoryDocumentType
		
		DerivedActionCode is a DerivedField
			type is Alpha size 10
			restricted
			return "Add"		
		
		DerivedDocID is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedRequiredCleanDocId != "Y")
				return DerivedInventoryTransactionCompany + DerivedDelimiter + DerivedDisplayID
			else
				return DerivedDisplayID
				
		DerivedFromID is a DerivedField
			type is AlphaUpper size 50
			restricted
			if(DerivedRequiredCleanDocId != "Y" )
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation
				else
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.FromToLocation
			else
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.FromToCompanyLocation.RequestingLocation
				else
					return InventoryTransaction.FromToCompanyLocation.FromToLocation
					
		DerivedAdvFromID is a DerivedField
			type is AlphaUpper size 50
			restricted
			if(DerivedRequiredCleanDocId != "Y" )
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation
				else
					return InventoryTransaction.Company using "%d" + DerivedDelimiter + InventoryTransaction.InventoryLocation 
			else
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.FromToCompanyLocation.RequestingLocation
				else
					return InventoryTransaction.InventoryLocation 
					
		DerivedNameID is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return FromToCompanyLocation.RequestingLocation.Name
			else
				return FromToCompanyLocation.FromToLocation.Name
			
		DerivedDocNbrOut is a DerivedField
			type is Alpha size 30
			restricted
			if(DerivedInventoryDocumentType = "IT")	
				return DerivedDocID + DerivedDelimiter + "T"
			else
				return DerivedDocID + DerivedDelimiter + "I"
						
		DerivedShipmentBodID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:"+DerivedTenantID+":" + DerivedBODCrossAccountingEntity + ":" +DerivedLocation+":"+DerivedDocNbrOut+":"+"?Shipment&verb=Process&TrackerID="+LocalFSMInboundBODTracker 	
		
		DerivedAdvanceShipBodID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:"+DerivedTenantID+":" + DerivedBODCrossAccountingEntity + ":" +DerivedLocation+":"+DerivedDocNbrOut+":"+"?AdvanceShipNotice&verb=Process&TrackerID="+LocalFSMInboundBODTracker
		
		DerivedITBODID is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IT")
				return "infor-nid:"+DerivedTenantID+":" + DerivedITAE + ":" +DerivedLocation+":"+DerivedDocNbrOut+":"+"?AdvanceShipNotice&verb=Process&TrackerID="+LocalFSMInboundBODTracker
			else
				return DerivedAdvanceShipBodID
		
		DerivedDisplayID is a DerivedField
			type is Alpha size 12 
			restricted
			return InventoryTransaction using "%d"
		
		DeriveddateToUse is a DerivedField
			type is Alpha size 50
			restricted
			if(InventoryTransactionLinesRel.UpdateDate = "")
				return InventoryTransactionLinesRel.TransactionDate
			else
				return InventoryTransactionLinesRel.UpdateDate
				
		DerivedShipmentDocumentType is a DerivedField
			type is Alpha size 20
			restricted
			return "Transfer"
		
		DerivedASNDocumentType is a DerivedField
			type is Alpha size 20
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return "CustomerReturn"
			else 
				return "Transfer"
		
		DerivedStatus is a DerivedField
			type is Alpha 10
			restricted
			return "Released"
		
		DerivedASNStatus is a DerivedField
			type is Alpha 10
			restricted
			return "Open"
		
		DerivedFromToLocation is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedRequiredCleanDocId != "Y" )
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.Company using "%d" + DerivedDelimiter + InventoryLocation
				else
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.FromToLocation
			else
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.InventoryLocation
				else
					return InventoryTransaction.FromToCompanyLocation.FromToLocation	
				
		DerivedShiptoName is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.Company using "%d" + DerivedDelimiter +InventoryTransaction.FromToCompanyLocation.RequestingLocation+ DerivedDelimiter +InventoryTransaction.FromToCompanyLocation.RequestingLocation.Name
			else
				return InventoryLocation.Company using "%d" + DerivedDelimiter +InventoryLocation.InventoryLocation+ DerivedDelimiter + InventoryLocation.Name
				
		DerivedShipFromID is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedRQLocationMigrate = "Y" and DerivedInventoryDocumentType = "IS" and DerivedRequiredCleanDocId = "Y")
				return "RQL"+DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation
			else
				return DerivedFromID
		
		DerivedShipToID is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedRQLocationMigrate = "Y" and DerivedInventoryDocumentType = "IS" and DerivedRequiredCleanDocId = "Y")
				return "RQL"+DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation
			else
				return DerivedAdvFromID
		

		DerivedShipFromName is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.Name
		
		DerivedAdvShipToName is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedDistributionCentre = "Y")
				if(DerivedInventoryDocumentType = "IS")
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation.Name
				else
				if(DerivedInventoryDocumentType = "IT")
					return InventoryTransaction.FromToCompanyLocation.FromToCompany using "%d" + DerivedDelimiter + InventoryTransaction.FromToCompanyLocation.RequestingLocation + DerivedDelimiter + InventoryTransaction.InventoryLocation.Name

		DerivedShipFromAddress1 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine1
		
		DerivedShipFromAddress2 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine2
				
		DerivedShipFromAddress3 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine3
				
		DerivedShipFromAddress4 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine4
				
		DerivedShiptFromMunicipality is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.Municipality
		
		DerivedShipFromStateProvince is a DerivedField
			type is AlphaUpper size 3
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.StateProvince
				
		DerivedShipFromCountry is a DerivedField
			type is AlphaUpper size 3
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.Country
		
		DerivedShipFromPostalCode is a DerivedField
			type is Alpha size 20
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.PostalCode

		
		DerivedName is a DerivedField
			type is Alpha size 100
			restricted
			return InventoryLocation.Name 
		
		DerivedShiptoAddress1 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine1
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.DeliveryAddress.AddressLine1
		
		DerivedShiptoAddress2 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine2
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.DeliveryAddress.AddressLine2
				
		DerivedShiptoAddress3 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine3
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.DeliveryAddress.AddressLine3
				
		DerivedShiptoAddress4 is a DerivedField
			type is Alpha size 50
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.DeliveryAddress.AddressLine4
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.DeliveryAddress.AddressLine4
				
		DerivedShiptoMunicipality is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.Municipality
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.Municipality
		
		DerivedShiptoStateProvince is a DerivedField
			type is AlphaUpper size 3
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.StateProvince
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.StateProvince
				
		DerivedShiptoCountry is a DerivedField
			type is AlphaUpper size 3
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.Country
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.Country
		
		DerivedShiptoPostalCode is a DerivedField
			type is Alpha size 20
			restricted
			if(DerivedInventoryDocumentType = "IS")
				return InventoryTransaction.FromToCompanyLocation.RequestingLocation.PostalAddress.PostalCode
			else
				return InventoryTransaction.FromToCompanyLocation.FromToLocation.PostalAddress.PostalCode	
				
		DerivedTransientQuantityValue is a DerivedField
			type is Alpha size 50
			restricted
			return InventoryTransactionLinesRel.TransientQuantityValue
			
		DerivedInvLocEAMLocation is a DerivedField
			type is Alpha size 10
			restricted
			return InventoryLocation.EAMLocation
		
		DerivedInventoryEAMLoc is a DerivedField
			type is Alpha size 4
			restricted
			if(InventoryLocation.EAMLocation.EAMLocation)
				return "1"
			else 
			if(InventoryLocation.EAMLocation.SCELocation)
				return "2"
			else
				return " "
				
		ShipToPartyRQLocationMigrateBODXML is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedRQLocationMigrate = "Y" and DerivedRequiredCleanDocId = "Y")
				ShipToPartyRQLocationMigrateBODXML += 	template.IONProcessAdvanceShipNotice_ShipToParty_RQLocationMigrate_ST document for this instance
			else
				return ""
		
		ShipFromPartyRQLocationMigrateBODXML is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedRQLocationMigrate = "Y" and DerivedRequiredCleanDocId = "Y")
				ShipFromPartyRQLocationMigrateBODXML += template.IONProcessAdvanceShipNotice_ShipFromPartyRQL_ST document for this instance
			else
				return ""

		InventoryTransactionShipmentXMLBOD is a DerivedField 			
			type is XMLDocument
			restricted
			InventoryTransactionShipmentXMLBOD = template.IONProcessAdvanceShipNotice_ProcessShipmentHeader_ST document for this instance
				
		InventoryTransactionAdvanceShipNoticeXMLBOD is a DerivedField 			
			type is XMLDocument
			restricted
			InventoryTransactionAdvanceShipNoticeXMLBOD = template.IONProcessAdvanceShipNotice_AdvanceShipNoticeHeader_ST document for this instance
		
					
		InventoryTransactionAdvanceShipItemXMLBOD is a DerivedField	
			type is XMLDocument
			restricted
			if (InventoryTransactionLinesRel exist)	
				for each InventoryTransactionLinesRel
					each.LocalASNDocumentType			= DerivedASNDocumentType
					each.LocalAccountingEntity			= DerivedBODCrossAccountingEntity
					each.LocalInventoryLocation			= DerivedLocation
					each.LocalDocNbrOut					= DerivedDocNbrOut
					InventoryTransactionAdvanceShipItemXMLBOD += template.IONProcessAdvanceShipNotice_AdvanceShipNoticeItem_ST document for each
				return InventoryTransactionAdvanceShipItemXMLBOD
				
		InventoryTransactionShipmentItemXMLBOD is a DerivedField	
			type is XMLDocument
			restricted
			if(InventoryTransactionLinesRel exist)
				for each InventoryTransactionLinesRel
					if ((each.TransientQuantityValue > 0 and DerivedInventoryDocumentType = "IS" and DerivedInventoryEAMLoc = "2") or (DerivedInventoryDocumentType = "IT" and DerivedInventoryEAMLoc = "2"))
						each.LocalShipmentLineCount			= ShipmentLineCount
						each.LocalASNDocumentType			= DerivedASNDocumentType
						each.LocalInventoryLocation			= DerivedLocation
						each.LocalAccountingEntity			= DerivedBODCrossAccountingEntity
						each.LocalDocNbrOut					= DerivedDocNbrOut
						InventoryTransactionShipmentItemXMLBOD += template.IONProcessAdvanceShipNotice_ProcessShipmentItem_ST document for each
				return InventoryTransactionShipmentItemXMLBOD
		
		InventoryTransactionShipmentLineXMLBOD is a DerivedField	
			type is Boolean
			restricted
			if(InventoryTransactionLinesRel exist)
				for each InventoryTransactionLinesRel
					if ((each.TransientQuantityValue > 0 and DerivedInventoryDocumentType = "IS" and DerivedInventoryEAMLoc = "2") or (DerivedInventoryDocumentType = "IT" and DerivedInventoryEAMLoc = "2"))
						LocalShipmentLine = "true"	
				return LocalShipmentLine	
		
		InventoryTransactionAdvanceShipLineXMLBOD is a DerivedField	
			type is Boolean
			restricted
			if(InventoryTransactionLinesRel exist)
				for each InventoryTransactionLinesRel
					if ((each.TransientQuantityValue < 0 and DerivedInventoryDocumentType = "IS" and DerivedInventoryEAMLoc = "2") or (DerivedInventoryDocumentType = "IT" and DerivedInventoryEAMLoc = "2") or (DerivedInventoryDocumentType = "IT" and DerivedInventoryEAMLoc != "2"))
						LocalAdvanceShipLine = "true"	
				return LocalAdvanceShipLine	
					




		DerivedLawsonCompany is a DerivedField
			type is Alpha size 4 
			restricted
			return Company using "%d"

		DerivedBODAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company.GeneralLedgerCompany.AccountingEntity
		
		DerivedBodLocation is a DerivedField
			type is AlphaUpper size 50
			restricted
			if(DerivedRequiredCleanDocId = "Y")
				return InventoryTransaction.InventoryLocation
			else
				return InventoryTransaction.Company using "%d" + DerivedDelimiter + InventoryTransaction.InventoryLocation
		
		DerivedBODDocumentID is a DerivedField
			type is Alpha 75
			restricted
			if(DerivedRequiredCleanDocId = "Y")
				return InventoryTransaction
			else
				return DerivedInventoryTransactionCompany + DerivedDelimiter + InventoryTransaction
					
		DerivedBODId is a DerivedField
			type is Alpha size 150
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedBODAccountingEntity + ":" + DerivedBodLocation + ":" + DerivedBODDocumentID + ":" + "?InventoryAdjustment&verb=Sync&TrackerID="+LocalFSMInboundBODTracker
		
		DerivedBODActionCode is a DerivedField
			type is Alpha size 10
			restricted
			if (InventoryTransactionLinesRel.ActionCode.Create or InventoryTransactionLinesRel.ActionCode.Update or action type.Create or action type.Update)
				return "Add"
			else
			if (InventoryTransactionLinesRel.ActionCode.Delete or action type.Delete)
				return "Replace"
		
		DerivedBODDisplayID is a DerivedField
			type is Alpha size 12 
			restricted
			return InventoryTransaction using "%d"
		
		DerivedTransDate is a DerivedField
			type is Alpha size 25
			restricted
			return TransactionDate
			
		DerivedIctTransDate is a DerivedField
			type is Alpha size 25
			restricted
			if (TransactionDate entered)
				return DerivedTransDate[1:4] + "-" + DerivedTransDate[5:6] + "-" + DerivedTransDate[7:8]
			else 
				return ""
		DerivedFormattedInvTransDate is a DerivedField
			type is Alpha size 25
			restricted
			if (TransactionDate entered)
				return DerivedTransDate[1:4] + "-" + DerivedTransDate[5:6] + "-" + DerivedTransDate[7:8] +  "T" + DerivedTransDate[9:10] + ":" + DerivedTransDate[11:12] + ":" + DerivedTransDate[13:14] + "Z"
			else 
				return ""
					
		DerivedStatusCode is a DerivedField
			type is Alpha size 10
			restricted
			if (InventoryTransactionLinesRel.ActionCode.Create or InventoryTransactionLinesRel.ActionCode.Update or action type.Create or action type.Update)
				return "Open"
			else
			if (InventoryTransactionLinesRel.ActionCode.Delete or action type.Delete)
				return "Deleted"
		
		DerivedAccentity is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return Company.AccountingEntity
			
		DerivedBODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return InventoryTransactionLinesRel.LocalLineVariationID
		
		InventoryTransactionLineXML is a DerivedField
			type is XMLDocument
			restricted
			if (InventoryTransactionLinesRel exists)
				for each InventoryTransactionLinesRel
					InventoryTransactionLineXML += template.IONSyncInventoryAdjLine_ST document for each
				return InventoryTransactionLineXML
			else
				return ""
		
		SyncInventoryTransactionXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			SyncInventoryTransactionXMLBOD = template.IONSyncInventoryAdjHeader_ST document for this instance
			return SyncInventoryTransactionXMLBOD	
			

		DerivedIsRelease is a DerivedField 
			type is Boolean
			if (InventoryTransactionLinesRel exists)
				return true
			else
				return false
				
		DerivedOneYearReplicationData is a DerivedField	
        	type is Boolean
            if ((current date - create date) <  360)
                return true
            else
                return false 

		DerivedSplitInventoryReturn is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "SplitInventoryReturn"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IntegratingApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedCrossAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedRequiredCleanDocId = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return ""
		DerivedWorkOrder is a DerivedField
			type is AlphaUpper size 30
			restricted
			return InventoryTransactionReturnRel.EAMWorkOrder
		
		DerivedWorkOrderActivity is a DerivedField
			type is Numeric 8
			restricted
			return InventoryTransactionReturnRel.EAMWorkOrderActivity	
			
		DerivedInventoryReturnBODID is a DerivedField
			type is Alpha size 150
			restricted
			return "infor-nid:"+DerivedTenantID+":" + DerivedBODAccountingEntity + ":" +DerivedBodLocation+":"+DerivedInventoryReturnDocumentID+":"+"?ReceiveDelivery&verb=Sync&TrackerID="+LocalFSMInboundBODTracker
				
		DerivedInventoryReturnDocumentID is a DerivedField
			type is Alpha size 75
			restricted
			if (DerivedSplitInventoryReturn = "Y")
				if (DerivedRequiredCleanDocId = "Y")
					return InventoryTransaction + DerivedDelimiter + LocalLineNumber
				else
					return DerivedInventoryTransactionCompany + DerivedDelimiter + InventoryTransaction + DerivedDelimiter + LocalLineNumber
			else
				return DerivedBODDocumentID
		
		DerivedItemName is a DerivedField
			type is AlphaUpper size 100
			restricted
			if(DerivedRequiredCleanDocId = "Y" or DerivedCSFNonSORForItem = "Y")
				return LocalItemName
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company.GeneralLedgerCompany.BusinessGroup + DerivedDelimiter +  LocalItemName
		
		SyncRDInventoryTransactionSplitReturnLotBODXML is a DerivedField
	       	type is XMLDocument
	        restricted
            if (InventoryTransactionLineDetailRel exist)
                for each InventoryTransactionLineDetailRel
                	if(each.Lot exists)
	                    LocalLineLot = each.Lot
	                else
	                	LocalLineLot= "*" 
                    SyncRDInventoryTransactionSplitReturnLotBODXML += template.IONSyncSyncReceiveDelivery_InventoryTransactionReturnLot_ST document for this instance
            else
                LocalLineLot= "*" 
                SyncRDInventoryTransactionSplitReturnLotBODXML = template.IONSyncSyncReceiveDelivery_InventoryTransactionReturnLot_ST document for this instance
	        	
		SyncRDInventoryTransactionHeaderBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncRDInventoryTransactionHeaderBODXML = template.IONSyncReceiveDelivery_InventoryTrnasactionHeader_ST document for this instance
		
		SyncRDInventoryTransactionLineXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(InventoryTransactionReturnRel exists)
				for each InventoryTransactionReturnRel
					each.LocalAccountingEntity = DerivedCrossAccountingEntity
					each.LocalLineVariationID  = LocalVariationID
					SyncRDInventoryTransactionLineXMLBOD += template.IONSyncReceiveDelivery_InventoryTransactionLine_ST document for each	
				return 	SyncRDInventoryTransactionLineXMLBOD
			else 
				return ""
		
		SyncRDInventoryTransactionSplitReturnBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncRDInventoryTransactionSplitReturnBODXML = template.IONSyncReceiveDelivery_InventoryTransactionSplitReturn_ST document for this instance


		DerivedTotalOpenLines	is a DerivedField
			type is like LineNumber
			return instance count of InventoryTransactionLinesReceivedCompletedRel

		DerivedTotalLinesWithSavedQty		is a DerivedField
			type is like LineNumber
			return instance count of MSCMInventoryTransactionIntransitSavedRecQtyRel
		
		DerivedReturnYes is a DerivedField
			type is Alpha size 1
			restricted
			return "Y"
	Conditions

		IsIntransitReceiving
			restricted
			when (InventoryTransaction.InventoryDocumentType.IntransitReceiving)


		
		IsNotAWarehouseLocationAndNotIsBinTransferOrInventoryTransfer
			restricted
			when (not InventoryLocation.UseAsWarehouseLocation
			and	  not IsBinTransferOrInventoryTransfer)

		IsNotAWarehouseLocationAndIsInventoryTransfer
			restricted
			when (not InventoryLocation.UseAsWarehouseLocation
			and   IsInventoryTransfer)

		IsAWarehouseLocationAndNotIsBinTransferOrInventoryTransfer
			restricted
			when (InventoryLocation.UseAsWarehouseLocation
			and   not IsBinTransferOrInventoryTransfer)

		IsAWarehouseLocationAndIsInventoryTransfer
			restricted
			when (InventoryLocation.UseAsWarehouseLocation
			and   IsInventoryTransfer)	
			
		IntransitReceivingNotCompleted
			restricted
			when (InventoryTransaction.InventoryDocumentType.IntransitReceiving
			and   not IntransitReceivingStatus.ReceivingCompleted)

		NotIntransitReceivingOrInterfaceInProcess
			restricted
			when (!IsIntransitReceiving
			and   !InterfaceInProcess
			and   !IsInventoryBinTransfer)

		NotIntransitReceivingAndNotInterfaceInProcess
			when (!IsIntransitReceiving
			and   !IsInventoryReceivingTransfer
			and   !InterfaceInProcess)

		ForReleaseAndPrintTransaction
			restricted
			when (IsInventoryIssues
			and   !InterfaceInProcess)

		IsUnreleased
			restricted
			when (Status.Unreleased)

		IsReleased
			restricted
			when (Status.Released)

		IsUnreleasedOrReleaseInProgress
			restricted
			when (Status.Unreleased
			or    Status.ReleaseInProgress)

		IsCreateInProgress
			when (Status.CreateInProgress)

		IsInventoryTransferOrIntransitReceiving
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryTransfer
			or   InventoryTransaction.InventoryDocumentType.IntransitReceiving)

		IsInventoryReceipt
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryReceipt)

		IsInventoryIssues
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryIssue)

		IsInventoryTransfer
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryTransfer)
			
		IsInventoryIntransitReceiving
			restricted
			when (InventoryTransaction.InventoryDocumentType.IntransitReceiving)
			
		IsInventoryAdjustments
			restricted
			when (InventoryTransaction.InventoryDocumentType.Adjustment)
 
	 	IsCostAdjustment
	 		restricted
			when (InventoryTransaction.InventoryDocumentType.CostAdjustment
			or    InventoryTransaction.InventoryDocumentType.StandardCostValuationUpdate)

	 	IsStandardCostValuationUpdate
	 		restricted
			when (InventoryTransaction.InventoryDocumentType.StandardCostValuationUpdate)

		IsInventoryBinTransfer
			restricted
			when (InventoryTransaction.InventoryDocumentType.BinTransfer)
			
		IsInventoryReceivingTransfer
			restricted
			when (InventoryTransaction.InventoryDocumentType.ReceivingTransfer)

		IsInventoryReturns
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryReturns)

		IsInventoryIssuesOrReturns
			restricted
			when (InventoryTransaction.InventoryDocumentType.InventoryIssue
			or    InventoryTransaction.InventoryDocumentType.InventoryReturns)
			
		IsDirectTransfer
			restricted
			when (InventoryTransaction.InventoryDocumentType.DirectTransfer)
		

		IsPurchaseOrderReceiptInspection
			restricted
			when (InventoryTransaction.InventoryDocumentType.AcceptedInspectionItem
			or    InventoryTransaction.InventoryDocumentType.RejectedInspectionItem)
		
		IsInspectionReject
			restricted
			when (InventoryTransaction.InventoryDocumentType.RejectedInspectionItem)
			
		IsPurchaseOrderReceiptAdjustment
			restricted
			when (InventoryTransaction.InventoryDocumentType.PurchaseOrderReceiptAdjustment)
		
		IsPurchaseOrderReceipt
			restricted
			when (InventoryTransaction.InventoryDocumentType.PurchaseOrderReceipt)
		
		IsPhysicalInventoryAdjustment
			restricted
			when (InventoryDocumentType.PhysicalInventoryAdjustment )    	
			
		IsShipment
			restricted
			when (InventoryTransaction.InventoryDocumentType.Shipment)
		
		IsCustomerReturn
			restricted
			when (InventoryTransaction.InventoryDocumentType.CustomerReturn)
		
		IsVendorReturnOrAdjustment
			restricted
			when (InventoryTransaction.InventoryDocumentType.VendorReturn
			or    InventoryTransaction.InventoryDocumentType.VendorReturnCancel
			or    InventoryTransaction.InventoryDocumentType.VendorReturnAdjustment)
		
		IsRequisitionReturn
			restricted
			when (InventoryTransaction.InventoryDocumentType.RequisitionReturn)
		
		IsVendorReturn
			restricted
			when (InventoryTransaction.InventoryDocumentType.VendorReturn)
			
		IsVendorReturnAdjustment
			restricted
			when (InventoryTransaction.InventoryDocumentType.VendorReturnAdjustment)
			
		IsVendorReturnCancel
			restricted
			when (InventoryTransaction.InventoryDocumentType.VendorReturnCancel)

		IsInventoryTransferBinTransferAndIsInventoryIntransitReceiving    
			restricted
			when (IsInventoryIntransitReceiving
			or    IsInventoryBinTransfer
			or    IsInventoryTransfer
			or    IsInventoryReceivingTransfer
			or    IsDirectTransfer)

		IsReceiptAdjustmentsIssuesAndIntransitReceiving											
			restricted
			when (IsInventoryReceipt
			or    IsInventoryAdjustments
			or 	  IsInventoryIssues
			or	  IsInventoryReturns
			or 	  IsInventoryIntransitReceiving
			or    IsCostAdjustment 
			or    IsInventoryReceivingTransfer)
			
		IsReceiptAdjustmentsIssuesAndTransfer													
			restricted
			when (IsInventoryReceipt
			or    IsInventoryAdjustments
			or 	  IsInventoryIssues
			or    IsInventoryReturns
			or    IsCostAdjustment 
			or    IsInventoryReceivingTransfer)
					
		IsIssuesOrAdjustments																	
			restricted
			when (IsInventoryIssues
			or    IsInventoryAdjustments)

		DisplayDocumentType
			restricted
			when (InventoryTransactionLinesRel exist
			or    IsInventoryReturns)

		DisplayInventoryTransactionType
			restricted
			when (InventoryTransactionLinesRel not exist
			and   not IsInventoryReturns)

		DisplayTransactionDate
			restricted
			when (InventoryTransactionType.InventoryReceipt
			or	  InventoryTransactionType.BinTransfer
			or	  InventoryTransactionType.InventoryTransfer
			or	  InventoryTransactionType.InventoryIssue
			or	  InventoryTransactionType.Adjustment
			or	  IsInventoryReturns)

		IsValidForReturn
			restricted
			when (IsInventoryIssues
			and   IsReleased
			and   first InventoryTransactionLinesValidForReturnRel exists)
	
		IsValidForRelease
			restricted
			when (IsUnreleased
			and   not IsCreateInProgress)

		IssueTransactionHasCatchWeight
			when (IssueInventoryTransactionLinesWithCatchWeightRel exists)

		ReturnLinesNonCatchWeight
			restricted
			when (not IsCreateInProgress
			and   not HasCatchWeightItem)

		ReturnLinesWithCatchWeight
			restricted
			when (not IsCreateInProgress
			and   HasCatchWeightItem)

		HasMultipleBinsLines
			restricted
			when (InventoryTransactionLinesMultipleBinsEnteredForIntransitReceivingRel exists)
			 
		BinRequiredOnLinesForInventoryReceiving
			restricted
			when (InventoryTransactionLinesBinAndMultipleBinsNotEnteredForIntransitReceivingRel exists)
			
		HasCatchWeightQuantityForInventoryReceiving
			restricted
			when (InventoryTransactionLinesCatchWeightQuantityForIntransitReceivingRel exists)
			
		HasCompletedReceivedLines
			restricted
			when(InventoryTransactionLinesReceivedCompletedRel exists)

		HasCatchWeightItem
			restricted
			when(InventoryTransactionLinesWithCatchWeightItemRel exists)
		
		RecordExists
			restricted
			when (InventoryTransaction exists)

		LinesExists
			restricted
			when (InventoryTransactionLinesRel exist)

		IsBinTransferOrInventoryTransfer
			restricted
			when (IsInventoryBinTransfer
			or    IsInventoryTransfer)

		IsInventoryIssuesOrInventoryTransfer
			restricted	
			when (IsInventoryIssues
			or    IsInventoryTransfer)	

		IsIntransitReceivingOrInventoryTransfer
			restricted	
			when (IsInventoryIntransitReceiving
			or    IsInventoryTransfer)	

		IsIntransitReceivingOrReceivingTransfer
			restricted
			when (IsInventoryIntransitReceiving
			or	  IsInventoryReceivingTransfer)			

		IsTransferOrIssue
			restricted
			when (InventoryTransactionType.InventoryIssue
			or    InventoryTransactionType.InventoryTransfer)
		
		HasTransactionLines
			restricted
			when (InventoryTransactionLinesRel exist)
			

		IsDirectTransferOrInventoryTransfer
			restricted
			when (InventoryTransaction.IsDirectTransfer               //"DT"
			or    InventoryTransaction.IsInventoryTransfer)           //"IT"

		IsVendorReturnAdjustmentOrVendorReturnCancel
			restricted
			when (InventoryTransaction.IsVendorReturnAdjustment       //"VA"
			or    InventoryTransaction.IsVendorReturnCancel)          //"VI"

		IsTransactionDateValidforDocumentTypes
			restricted
			when (InventoryDocumentType.InventoryReceipt               
			or	  InventoryDocumentType.InventoryIssue   
			or	  InventoryDocumentType.InventoryReturns              
			or 	  InventoryDocumentType.Adjustment                     
			or 	  InventoryDocumentType.CostAdjustment                  
			or    InventoryDocumentType.DirectTransfer                  
			or    InventoryDocumentType.InventoryTransfer               
			or    InventoryDocumentType.IntransitReceiving              
			or    InventoryDocumentType.ReceivingTransfer               
			or    InventoryDocumentType.BinTransfer                     
			or    InventoryDocumentType.PhysicalInventoryAdjustment )    	
 
 		IsNotPhysicalInventory
			restricted
			when (IsReceiptAdjustmentsIssuesAndIntransitReceiving               
			or    IsDirectTransferOrInventoryTransfer
			or	  IsInventoryBinTransfer)
			

		IsAcceptedInspection
			restricted
			when (InventoryDocumentType.AcceptedInspectionItem)
			
		IsRejectedInspection
			restricted
			when (InventoryDocumentType.RejectedInspectionItem) 
			
		HasMainTab																	
			restricted
			when (RecordExists
			and  (InventoryDocumentType.InventoryTransfer
			or    InventoryDocumentType.DirectTransfer
			or    InventoryDocumentType.IntransitReceiving
			or    InventoryDocumentType.ReceivingTransfer))
			
		HasReleaseEnable
			restricted
			when (Status.Unreleased
			and	  HasLineQuantityUpdated)	

		IsDirectOrInventoryTransfer
			restricted
			when (InventoryDocumentType.InventoryTransfer
			or    InventoryDocumentType.DirectTransfer)

		BinTransferLineIsReleasedOrIntermediate
			restricted
			when (InventoryDocumentType.BinTransfer
			and ReleasedOrIntermediateLinesRel exists)
			
		HasWarehouseShipmentCreated
			restricted
			when (InventoryTransactionLinesForWarehouseShipmentRel exists)
			
		HasInventoryTransactionDrillBack
			restricted
			when (IsInventoryIntransitReceiving
			or    IsInventoryReceivingTransfer)
				
		HasLineQuantityUpdated
			restricted
			when (InventoryTransactionLinesQunatityForIntransitReceivingRel exists)
			
		AllLinesNonGlobalLedger
			restricted
			when (NotNonGlobalLedgerLinesRel not exists)

		ShowToCompany 
			when (InventoryTransactionType.InventoryTransfer
			or    InventoryDocumentType.DirectTransfer
			or    InventoryTransactionType.InventoryIssue
			or    IsIntransitReceivingOrReceivingTransfer)
		
		ReferenceEntered
			restricted
			when (Reference1 entered
			or 	  Reference2 entered)
		

		IsBinTransferOrAdjustment
			restricted
			when (InventoryTransactionType.Adjustment
			or    InventoryTransactionType.BinTransfer)



		IsToPurge
			restricted
			when(InventoryTransactionLinesPurgeWithDeletedRel exists)		  
			
		CustomerOrderReadyForPurge
			restricted
			when (CustomerOrderPurgeRel exists
			and   InventoryDocumentType.Shipment)
			
		CustomerOrderReturnIsClosed
			restricted
			when (CustomerOrderReturnPurgeRel exists
			and   InventoryDocumentType.CustomerReturn)

		IsInventoryTransactionToPurge
		 	restricted
		 	when (InventoryTransactionToPurgeRel exists)

		DisplayPreciseUnitCost
			restricted
			when (IsReceiptAdjustmentsIssuesAndIntransitReceiving
			and   Status.Unreleased)
			
		DisplayUnitCost
			restricted
			when (IsReceiptAdjustmentsIssuesAndIntransitReceiving
			and   !Status.Unreleased)
		
		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		IsMobileSupplyChainTransaction
			restricted
			when (MobileSupplyChainConfigurationRel.MobileSupplyChainEnabled
			and  (MobileSupplyChainInventoryTransactionRel exists
			or    MSCMInventoryTransactionByIntransitRecRel exists))

		
		
	Relations
		InterEntityRelationRel
			one-to-one relation to GLInterEntityRelation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
				related.AccountingEntity			= Company.AccountingEntity
				related.ToAccountingEntity			= FromToCompanyLocation.FromToCompany.AccountingEntity
		
		InventoryTransactionLinesRel 													is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				or     related.TransactionSystemCode	= "RQ"
				or     related.TransactionSystemCode	= "PO"
				or     related.TransactionSystemCode	= "OE"
				or     related.TransactionSystemCode	= "WO")
		
		UnreleasedInventoryTransactionLinesRel 											is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.Status.Unreleased)

		ReleasedOrIntermediateLinesRel													is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.IsReleasedOrIntermediate)
		
		InventoryTransactionLinesMultipleBinsEnteredForIntransitReceivingRel  			is a InventoryTransactionLine(InventoryTransaction) set 
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				and    related.InventoryTransactionLine.WarehouseShipment not entered
				and    related.MultipleBins
				and    related.OpenQuantity entered
				or    (related.ItemLocation.LotTracked.LotRequiredAtReceipt
				or     related.ItemLocation.SerialTracked.SerialRequiredAtReceipt)
				and    related.HasMultipleDetailLines)
						
		InventoryTransactionLinesBinAndMultipleBinsNotEnteredForIntransitReceivingRel  	is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				and    related.InventoryTransactionLine.WarehouseShipment not entered
				and    related.IsBinAndMultipleBinsNotEnteredForIntransitReceiving)
						  
		InventoryTransactionLinesReceivedCompletedRel									is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				and    related.InventoryTransactionLine.WarehouseShipment not entered
				and   !related.IntransitReceivingStatus.ReceivingCompleted)          
			
		InventoryTransactionLinesCatchWeightQuantityForIntransitReceivingRel 		    is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				and    related.InventoryTransactionLine.WarehouseShipment not entered
				and    related.IsCatchWeightQuantityForIntransitReceiving)        

		InventoryTransactionLinesQunatityForIntransitReceivingRel 		    is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.TransactionSystemCode	= "IC"
				and    related.InventoryTransactionLine.WarehouseShipment not entered
				and    related.HasQuantity)        
		
		InventoryTransactionLinesWithCatchWeightItemRel						is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.IsCatchWeightItem)        

		ICSystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses symbolic key
				related.Company						= Company
				related.GeneralLedgerSystemCode		= "IC"
				
		WarehouseShipmentRel
			one-to-one relation to WarehouseShipment
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation           = InventoryLocation
				related.WarehouseShipment           = first InventoryTransactionLinesRel.OriginatingTransactionDocument 
				
		PurchaseOrderReceiptRel
			one-to-one relation to PurchaseOrderReceipt
			Field Mapping uses symbolic key
				related.Company						= Company
				related.PurchaseOrderReceipt        = first InventoryTransactionLinesRel.OriginatingTransactionDocument
				
		CustomerOrderReturnRel
			one-to-one relation to CustomerOrderReturn
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CustomerOrderReturn         = first InventoryTransactionLinesRel.OriginatingTransactionDocument	

		VendorReturnRel
			one-to-one relation to VendorReturn
			Field Mapping uses symbolic key
				related.Company						= Company
				related.VendorReturn                = first InventoryTransactionLinesRel.OriginatingTransactionDocument  
				
		POReceiptAdjustmentRel
			one-to-one relation to POReceiptAdjustmentAndInspection
				Field Mapping uses symbolic key
					related.Company                			 = Company
					related.AdjustmentInspectionDocumentType = "RA"
					related.POReceiptAdjustmentAndInspection = first InventoryTransactionLinesRel.OriginatingTransactionDocument
					
		POReceiptAdjustmentAndInspectionRel
			one-to-one relation to POReceiptAdjustmentAndInspection
				Field Mapping uses symbolic key
					related.Company                			 = Company
					related.AdjustmentInspectionDocumentType = "IN"
					related.POReceiptAdjustmentAndInspection = first InventoryTransactionLinesRel.OriginatingTransactionDocument
					
		RequisitionRel
			one-to-one relation to Requisition
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Requisition                 = first InventoryTransactionLinesRel.OriginatingTransactionDocument  
					
		InventoryTransactionLinesForWarehouseShipmentRel						is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where ((related.TransactionSystemCode	= "OE"
				or     related.TransactionSystemCode    = "RQ")	
				and    related.HasWarehouseShipmentCreated)   		
				
		InventoryTransactionForDrillBackRel
			one-to-one relation to InventoryTransaction
			Field Mapping uses symbolic key
				related.Company						= FromToCompanyLocation.FromToCompany
				related.InventoryLocation           = FromToCompanyLocation.FromToLocation
				related.InventoryTransaction		= first InventoryTransactionLinesRel.FromDocument
					
		InventoryTransactionLinesForDistributionsRel 							is a InventoryTransactionLine(InventoryTransaction) set

		InventoryTransactionLinesValidForReturnRel	    	is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.Quantity < 0
				and    related.DerivedQuantityAvailableForReturn > 0)

		IssueInventoryTransactionLinesWithCatchWeightRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation           = OriginatingIssueLocation
				related.InventoryTransaction		= OriginatingIssueDocument
			Instance Selection
				where (related.IsCatchWeightItem)

		IssueInventoryTransactionOfReturnRel
			one-to-one relation to InventoryTransaction
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= OriginatingIssueLocation
				related.InventoryTransaction		= OriginatingIssueDocument

		IssueInventoryTransactionLinesForReturnRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= OriginatingIssueLocation
				related.InventoryTransaction		= OriginatingIssueDocument
			Instance Selection
				where (related.Quantity < 0
				and    related.DerivedQuantityAvailableForReturn > 0)   

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "IC"
				related.Company						= Company
					
		NotNonGlobalLedgerLinesRel is an InventoryTransactionLine set
			Instance Selection
				where (not related.Status.NonGlobalLedger)
				

		InventoryTransactionInterfaceRel
			one-to-many relation to TrueCostInventoryTransactionInterface
			Field Mapping uses symbolic key
			Instance Selection
				where (related.TrueCostInventoryTransactionInterface.AccountingEntity	= TCLocalAccountingEntity
				and related.TrueCostInventoryTransactionInterface.AccountingUnit		= TCLocalAccountingUnit
				and related.TrueCostInventoryTransactionInterface.Location				= TCLocalLocation
				and related.TrueCostInventoryTransactionInterface.Transaction			= TCLocalTransaction					
				and related.TrueCostInventoryTransactionInterface.Item					= TCLocalItem)			

		InventoryTransactionImportRel
			one-to-one relation to InventoryTransactionImport
			Field Mapping uses ByRunGroup
				related.RunGroup 					= LocalRunGroup
				related.Company 					= Company
				related.InventoryLocation 			= InventoryLocation
				related.InventoryDocumentType 		= InventoryDocumentType
				related.InventoryTransactionImport 	= LocalInventoryTransactionImport
		
		InventoryTransactionImportRecordRel 
			one-to-one relation to InventoryTransactionImport
			Field Mapping uses ByRunGroup
				related.RunGroup 					= LocalRunGroup
				related.Company 					= LocalCompany
				related.InventoryLocation 			= LocalInventoryLocation
				related.InventoryDocumentType 		= LocalInventoryDocumentType
				related.InventoryTransactionImport 	= LocalInventoryTransactionImport

		InventoryTransactionLinesPurgeWithDeletedRel 						is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				include deleted records
				where(related.Status.NonGlobalLedger
				or    related.Status.GlobalLedgerUpdated
				or   (related.Status.Released
				and   related.ForPurgeDistributionIsPosted))
		
		CustomerOrderPurgeRel
			one-to-many relation to CustomerOrder
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CustomerOrder		            = WarehouseShipmentRel.WarehouseDemand.DemandDocument
			Instance Selection
				include deleted records
				where (related.InventoryLocation		= InventoryLocation
				and    related.Status.ReadyForPurge)

		CustomerOrderReturnPurgeRel
			one-to-many relation to CustomerOrderReturn
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CustomerOrderReturn            = first InventoryTransactionLinesRel.OriginatingTransactionDocument
 			Instance Selection
				include deleted records
				where (related.InventoryLocation		= InventoryLocation
				and    related.Status.Closed)
		
		InventoryTransactionToPurgeRel	is a InventoryTransactionLineDistribution set
			Instance Selection
				where (not related.SkipInventoryTransactionPurging)

		InterfacedIntransitReceivingTransactionRel 
			one-to-many relation to InventoryTransaction
			Field Mapping uses Set2
				related.Company				= FromToCompanyLocation.FromToCompany
				related.InventoryLocation	= FromToCompanyLocation.FromToLocation
			Instance Selection
				where (related.OriginatingTransaction = reference to this instance
				and    related.Status.Unreleased
				and    related.NumberOfLines > 0)					

		FSMBODConfigurationRDRel
			one-to-one relation to FSMBODConfiguration
				Field Mapping uses symbolic key
					related.FSMBODConfiguration.Verb 		= 1
					related.FSMBODConfiguration.Noun 		= "ReceiveDelivery"
					related.FSMBODConfiguration.Direction 	= 1
		
		InventoryTransactionReturnRel		
			one-to-many relation to InventoryTransactionLine	
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= OriginatingIssueLocation
				related.InventoryTransaction		= InventoryTransaction
				related.TransactionSystemCode		="IC"
		
		InventoryTransactionReturnLineRel		
			one-to-many relation to InventoryTransactionLine	
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= OriginatingIssueLocation
				related.InventoryTransaction		= InventoryTransaction
				related.TransactionSystemCode		="IC"
			Instance Selection
				where (related.InventoryTransactionLine.LineNumber	= LocalLineNumber)
		
		InventoryTransactionLineDetailRel
			one-to-many relation to InventoryTransactionLineDetail
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= OriginatingIssueLocation
				related.InventoryTransaction				= InventoryTransaction
			Instance Selection
				where (related.InventoryTransactionLine.LineNumber		= LocalLineNumber)
				
		InventoryTransactionLineRel		
			one-to-many relation to InventoryTransactionLine	
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= InventoryLocation
				related.InventoryTransaction		= InventoryTransaction
				related.TransactionSystemCode		="IC"



		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "AdvanceShipNotice"
            	related.FSMBODConfiguration.Direction 	= 1
				
		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField		 = "CSFGLC"
				related.FSMBODCrossReference.DestinationField	 = "DESTAE"
			Instance Selection
				where (related.SourceValue = DerivedCrossGLC)
				
		FSMBODCrossReferenceDetailASRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField		 = "CSFGLC"
				related.FSMBODCrossReference.DestinationField	 = "DESTAE"
			Instance Selection
				where (related.SourceValue = DerivedCrossShipToGLC)
        




		FSMBODConfigurationIARel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "InventoryAdjustment"
            	related.FSMBODConfiguration.Direction 	= 1


		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
		
		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company


		MobileSupplyChainInventoryTransactionRel
			one-to-many relation to MobileSupplyChainInventoryTransaction
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
			Instance Selection
				where (related.InventoryTransaction		= InventoryTransaction)

		MobileSupplyChainConfigurationRel
            one-to-one relation to MobileSupplyChainConfiguration
            Field Mapping uses symbolic key
                related.MobileSupplyChainConfiguration = Company.FinanceEnterpriseGroup

		MSCMInventoryTransactionByIntransitRecRel
			one-to-many relation to MobileSupplyChainInventoryTransaction
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
			Instance Selection
				where (related.OriginatingIntransitRec	= InventoryTransaction
				and not ErrorMessage entered)

		MSCMInventoryTransactionIntransitSavedRecQtyRel			is a InventoryTransactionLine(InventoryTransaction) set
			Instance Selection
				where (related.Quantity entered)


	Sets

		Set2
			indexed
			Instance Selection
				where (IsIntransitReceiving)
			Sort Order
				Company
				InventoryLocation
				InventoryTransaction
				
		Set3
			indexed
			Instance Selection
				where (IsInventoryTransfer)
			Sort Order
				Company
				InventoryLocation
				FromToCompanyLocation.FromToCompany
				FromToCompanyLocation.FromToLocation
				InventoryTransaction

		ByDocumentType
			indexed
			Sort Order
				Company
				InventoryLocation
				InventoryDocumentType
				InventoryTransaction

		ByTransactionDateTime
			indexed
			Sort Order
				Company
				InventoryLocation
				TransactionDate
				InventoryTransaction

		ByOriginatingTransaction
			bypass no duplicates validation
			Sort Order
				OriginatingTransaction


	Rule Blocks

		ReleaseValidations
			LocalErrorLevel = 1
			constraint (!IsIntransitReceiving)						
				"ReleaseActionIsNotValidForDocumentType<InventoryTransaction.InventoryDocumentType>"				
			
			constraint (InventoryLocation.Status.Active
			or 			InventoryLocation.Status.AddInactive)
				"DocumentCannotBeReleased;InventoryLocation<InventoryLocation>IsInactive" 	 
	
			constraint (InventoryTransactionLinesRel exists)	
				"DocumentCannotBeReleased;DoesNotHaveAnyLines"								

		
		CreateIntransitAndReceivingTransfer
			invoke Unreleased.Create InventoryTransaction
				assign result to NewInventoryTransaction
				invoked.Company											= FromToCompanyLocation.FromToCompany
				invoked.InventoryLocation								= FromToCompanyLocation.FromToLocation
				invoked.FromToCompanyLocation.FromToLocation			= InventoryLocation
				invoked.FromToCompanyLocation.FromToCompany				= Company
				invoked.NumberOfCartons									= NumberOfCartons
				invoked.EstimatedDeliveryDate							= EstimatedDeliveryDate
				invoked.GeneralLedgerDate								= EstimatedDeliveryDate
				invoked.TransactionDate									= TransactionDate	
				invoked.IntransitTransfer								= IntransitTransfer                            
				if (IntransitTransfer)
					invoked.InventoryDocumentType						= InventoryDocumentType.IntransitReceiving
					invoked.IntransitReceivingStatus					= 1
					IntransitAndReceivingDocumentType	                = InventoryDocumentType.IntransitReceiving
				else
					invoked.InventoryDocumentType  						= InventoryDocumentType.ReceivingTransfer
					invoked.IntransitReceivingStatus					= 0					
					IntransitAndReceivingDocumentType	                = InventoryDocumentType.ReceivingTransfer
				invoked.OriginatingTransaction							= reference to this instance
					
			IntransitAndReceivingDocumentNumber		            		= NewInventoryTransaction.InventoryTransaction
			
		CreateReceivingTransfer
			
			invoke Unreleased.Create InventoryTransaction
				assign result to NewInventoryTransaction
				invoked.Company											= Company
				invoked.InventoryLocation								= InventoryLocation
				invoked.FromToCompanyLocation.FromToLocation			= FromToCompanyLocation.FromToLocation
				invoked.FromToCompanyLocation.FromToCompany				= FromToCompanyLocation.FromToCompany
				invoked.IntransitTransfer								= IntransitTransfer
				invoked.InventoryTransaction.InventoryDocumentType  	= InventoryDocumentType.ReceivingTransfer
				invoked.IntransitReceivingStatus						= 0
				invoked.NumberOfCartons									= NumberOfCartons
				invoked.EstimatedDeliveryDate							= EstimatedDeliveryDate
				invoked.GeneralLedgerDate								= GeneralLedgerDate
				invoked.TransactionDate									= TransactionDate	
				invoked.OriginatingTransaction							= reference to this instance
				
				IntransitAndReceivingDocumentType	    	            = InventoryDocumentType.ReceivingTransfer

			IntransitAndReceivingDocumentNumber		            		= NewInventoryTransaction.InventoryTransaction		
		
		ValidateDate
			if (ICSystemClosingControlRel.Control = true)
				if (ICSystemClosingControlRel.ValidEntryDate entered
				and LocalGeneralLedgerDateValidation)
					constraint (LocalDateForValidation within ICSystemClosingControlRel.ValidEntryDate)
						"<DerivedValidCloseControlDateMessage>"
			
			initialize ValidTransactionDate
			initialize LoopCounter
			
			while (LoopCounter <= Company.NumberOfPeriods
			and    ValidTransactionDate = false)
				LoopCounter +=1
				
				if (LoopCounter = 1)
					if (LocalDateForValidation > Company.LastYearEndDate
					and LocalDateForValidation <= Company.YearPeriodStatusArray.YearPeriodStatus[LoopCounter].YearPeriod)
						ValidTransactionDate = true
				else
					if (LocalDateForValidation > Company.YearPeriodStatusArray.YearPeriodStatus[LoopCounter - 1].YearPeriod
					and LocalDateForValidation <= Company.YearPeriodStatusArray.YearPeriodStatus[LoopCounter].YearPeriod)
						ValidTransactionDate = true

				if (LoopCounter = Company.NumberOfPeriods)
					FutureYearPerOne = Company.YearPeriodStatusArray.YearPeriodStatus[1].YearPeriod + 1 year
					if (LocalDateForValidation > Company.YearPeriodStatusArray.YearPeriodStatus[LoopCounter].YearPeriod)
						constraint (FutureYearPerOne >= TransactionDate)
							"TransactionDateGreaterThanNextYearFirstPeriodEndDate<FutureYearPerOne>"      							
						ValidTransactionDate  		 = true
						FutureGeneralLedgerDateCheck = true

			constraint (ValidTransactionDate)
				"<DerivedMessageForCurrentYearPeriodsValidation>"																	
 	
			constraint (Company.YearPeriodStatusArray.YearPeriodStatus[LoopCounter].Status.Open)
				"<DerivedMessageForDateValidation>"

		ReleaseLogic
			initialize LocalUseBatchRelease
			LocalLimitForBatchInvoke = 50
			if (NumberOfLines > LocalLimitForBatchInvoke)
				LocalUseBatchRelease = true
	
			if (LocalUseBatchRelease)
				make transition to ReleaseInProgress
				invoke BatchRelease InventoryTransactionLine in background
					assign async action request id to AsyncId
					invoked.PrmCompany									= Company
					invoked.PrmLocation	    							= InventoryLocation
					invoked.PrmTransaction 								= InventoryTransaction
					invoked.PrmIntransitAndReceivingDocumentType  		= IntransitAndReceivingDocumentType
					invoked.PrmIntransitAndReceivingDocumentNumber  	= IntransitAndReceivingDocumentNumber
					invoked.PrmIntransitTransferDocumentNumber			= InventoryTransaction
					invoked.PrmReceiveAll								= ReceiveAll
					invoked.PrmSkipDistributions						= SkipDistributions
					if (PrmReleaseFromInterface)
						invoked.PrmReleaseFromInterface					= PrmReleaseFromInterface
						invoked.PrmInspectionHoldQuantity				= PrmInspectionHoldQuantity
						invoked.PrmInspectionHoldCatchWeightQuantity	= PrmInspectionHoldCatchWeightQuantity
						invoked.PrmRunGroup								= LocalRunGroup
						invoked.PrmInventoryTransactionImport			= LocalInventoryTransactionImport
				
				if ((IsDirectTransferOrInventoryTransfer and not IntransitTransfer)
				or   IsIntransitReceiving)
					invoke BatchReleaseTransaction NewInventoryTransaction.InventoryTransaction in background
						run after AsyncId
						invoked.PrmInventoryCompany 	= NewInventoryTransaction.InventoryTransaction.Company
						invoked.PrmLocation 			= NewInventoryTransaction.InventoryTransaction.InventoryLocation
						invoked.PrmInventoryTransaction = NewInventoryTransaction.InventoryTransaction
						if (PrmReleaseFromInterface)
							invoked.PrmRunGroup						= LocalRunGroup
							invoked.PrmCompany						= Company
							invoked.PrmFromLocation 				= InventoryLocation
							invoked.PrmDocumentType					= InventoryTransaction.InventoryDocumentType
							invoked.PrmInventoryTransactionImport 	= LocalInventoryTransactionImport						

			else
				invoke BatchRelease InventoryTransactionLine in foreground
					invoked.PrmCompany									= Company
					invoked.PrmLocation	    							= InventoryLocation
					invoked.PrmTransaction 								= InventoryTransaction
					invoked.PrmIntransitAndReceivingDocumentType  		= IntransitAndReceivingDocumentType
					invoked.PrmIntransitAndReceivingDocumentNumber  	= IntransitAndReceivingDocumentNumber
					invoked.PrmIntransitTransferDocumentNumber			= InventoryTransaction
					invoked.PrmReceiveAll								= ReceiveAll
					invoked.PrmSkipDistributions						= SkipDistributions
					if (PrmReleaseFromInterface)
						invoked.PrmReleaseFromInterface					= PrmReleaseFromInterface
						invoked.PrmInspectionHoldQuantity				= PrmInspectionHoldQuantity
						invoked.PrmInspectionHoldCatchWeightQuantity	= PrmInspectionHoldCatchWeightQuantity
						invoked.PrmRunGroup								= LocalRunGroup
						invoked.PrmInventoryTransactionImport			= LocalInventoryTransactionImport
				
				if ((IsDirectTransferOrInventoryTransfer and not IntransitTransfer)
				or   IsIntransitReceiving)
					invoke BatchReleaseTransaction NewInventoryTransaction.InventoryTransaction in foreground
						invoked.PrmInventoryCompany 	= NewInventoryTransaction.InventoryTransaction.Company
						invoked.PrmLocation 			= NewInventoryTransaction.InventoryTransaction.InventoryLocation
						invoked.PrmInventoryTransaction = NewInventoryTransaction.InventoryTransaction
						if (PrmReleaseFromInterface)
							invoked.PrmRunGroup						= LocalRunGroup
							invoked.PrmCompany						= Company
							invoked.PrmFromLocation 				= InventoryLocation
							invoked.PrmDocumentType					= InventoryDocumentType
							invoked.PrmInventoryTransactionImport 	= LocalInventoryTransactionImport

				if (IntransitReceivingStatus.ReceivingCompleted)
					make transition to Released    	

		
			

	Field Rules
		InventoryDocumentType
			if (InventoryTransactionType.InventoryReceipt)
				InventoryTransaction.InventoryDocumentType 	= InventoryDocumentType.InventoryReceipt
			else 
			if (InventoryTransactionType.InventoryIssue)
				InventoryTransaction.InventoryDocumentType 	= InventoryDocumentType.InventoryIssue
			else 
			if (InventoryTransactionType.InventoryTransfer)
				InventoryTransaction.InventoryDocumentType 	= InventoryDocumentType.InventoryTransfer
			else 
			if (InventoryTransactionType.Adjustment)
				InventoryTransaction.InventoryDocumentType 	= InventoryDocumentType.Adjustment
			else 
			if (InventoryTransaction.InventoryDocumentType.BinTransfer
			or  InventoryTransactionType.BinTransfer)
				InventoryTransaction.InventoryDocumentType  = InventoryDocumentType.BinTransfer
			else 
			if (InventoryTransaction.InventoryDocumentType.CostAdjustment)	
				InventoryTransaction.InventoryDocumentType 	= InventoryDocumentType.CostAdjustment							
			else
				required
			
			if (InventoryTransactionLinesRel exist)
				cannot be changed
					"CannotChangeDocumentType;LinesExists"			
						
		InventoryLocation
	
			if (action type.Update)
				constraint (!InventoryLocation.Status.Inactive)
					"InventoryLocation<InventoryLocation>IsInactive"	           						



			if (IsInventoryTransfer)
				if (InventoryLocation.PostalAddress.Country =  "BR")
					constraint (IntransitTransfer)
						"IntransitTransferShouldBeSelectedForBrazilCountryCode"   						//"IC22.307"
		
		FromToCompanyLocation
			if (Company != FromToCompanyLocation.FromToCompany) 
				constraint (InterEntityRelationRel.Active)
					"ActiveInterEntityRelationshipNotDefined"
				
			if (action type.Update)
				constraint (!FromToCompanyLocation.FromToLocation.Status.Inactive)
					"InventoryLocation<FromToCompanyLocation.FromToLocation>IsInactiveForToCompany<FromToCompanyLocation.FromToCompany>"
			
			if (!SkipForWorkOrder)
				if (IsInventoryTransfer
				or 	IsInventoryIssues
				or 	IsInventoryIntransitReceiving
				or  IsDirectTransfer)
			
					if (FromToCompanyLocation.FromToCompany not entered)
						FromToCompanyLocation.FromToCompany = Company
				
					if (InventoryTransactionLinesRel exists)
						cannot be changed
				
				if (IsInventoryIssues)	
					constraint (FromToCompanyLocation.RequestingLocation entered) 
						"RequestingLocationIsRequiredForToCompany<FromToCompanyLocation.FromToCompany>"				
			
			if (IsInventoryTransfer)	
				constraint (Company.ItemGroup = FromToCompanyLocation.FromToCompany.ItemGroup)
					"ItemGroupShouldBeEqualForFromAndToCompany"	 	
				constraint (FromToCompanyLocation.FromToLocation entered)
					"InventoryLocationIsRequiredForToCompany<FromToCompanyLocation.FromToCompany>"
						
				if (Company = FromToCompanyLocation.FromToCompany) 	
					constraint (InventoryLocation != FromToCompanyLocation.FromToLocation)
						"FromAndToInventoryLocationsCannotBeEqualForSameCompany"  		  
						
			if (IsInventoryBinTransfer)                           
				FromToCompanyLocation.FromToCompany   = Company
				FromToCompanyLocation.FromToLocation  = InventoryLocation
				
		
		EstimatedDeliveryDate		
			if (WarehouseShipment not entered
			and IsInventoryTransfer and IntransitTransfer)
				required
					
				constraint (EstimatedDeliveryDate >= current corporate date)
					"EstimatedDeliveryDateShouldBeGreaterThanOrEqualToToday'sDateForIntransitTransfer"

		GeneralLedgerDate		                                  
			initial value is current corporate date
			default to current corporate date
			LocalDateForValidation				= GeneralLedgerDate
			initialize LocalTransactionDateValidation
			LocalGeneralLedgerDateValidation	= true
			include ValidateDate
			
		TransactionDate
			initial value is current timestamp
			default to current timestamp
						
			constraint (DerivedTransactionDate <= current corporate date)													
				"<DerivedMessageForDates>"
			
			constraint (Company.YearPeriodStatusArray.YearPeriodStatus[1].YearPeriod entered)
				"PeriodEndDatesHaveNotBeenEntered"   														
				
			LocalDateForValidation			= DerivedTransactionDate
			initialize LocalGeneralLedgerDateValidation
			LocalTransactionDateValidation	= true
			include ValidateDate		
		
			if (IsInventoryReturns)
				constraint (DerivedTransactionDate >= IssueInventoryTransactionOfReturnRel.DerivedTransactionDate)
					"ReturnDateMustBeGreaterThanIssueDate"
			








									

		IntransitReceivingStatus
			default to IntransitReceivingStatus.NoReceiving
			
		CurrencyTable
			default to CompanySystemClosingControlRel.CurrencyTable
			default to Company.FinanceEnterpriseGroup.CurrencyTable
	
		DefaultDistributionAccount

			if (InventoryTransactionType.InventoryIssue)
				default to FromToCompanyLocation.RequestingLocation.IssueAccount
			else
			if (not IsInventoryReturns)
				initialize
				
		Reprint
			if (InventoryTransaction.InventoryDocumentType.IntransitReceiving)
				default to true
				
	
	Create Rules
		constraint (not (InventoryTransactionType.InventoryReceipt 
		or               InventoryTransactionType.InventoryTransfer)
		or               InventoryLocation.Status.Active)
			"InventoryLocation<InventoryLocation>MustBeActive"
						
	StateCycles

		InventoryTransactionProcessing is a StateCycle
			state field is Status
			
			Unreleased is a State
			
				Create is a Create Action
									
				CreateReceipt is a Create Action
					default label is "Create"
					Action Rules
						if (TransientOnline not entered)
							InventoryTransactionType = InventoryTransactionType.InventoryReceipt
				
				CreateIssue is a Create Action
					default label is "Create"
					Action Rules
						if (TransientOnline not entered)
							InventoryTransactionType = InventoryTransactionType.InventoryIssue
						
				CreateTransfer is a Create Action
					default label is "Create"
					Action Rules
						if (TransientOnline not entered)
							InventoryTransactionType = InventoryTransactionType.InventoryTransfer
						
				CreateAdjustment is a Create Action
					default label is "Create"
					Action Rules
						if (TransientOnline not entered)
							InventoryTransactionType = InventoryTransactionType.Adjustment
						
				CreateBinTransfer is a Create Action
					default label is "Create"
					Action Rules
						if (TransientOnline not entered)
							InventoryTransactionType = InventoryTransactionType.BinTransfer
				
				CreateInventoryReturns is a Create Action 
					Entrance Rules
						constraint (OriginatingIssueDocument exists)
							"Originating_Issue_DocumentDoesNotExist"
						
						constraint (OriginatingIssueDocument.IsReleased)
							"InventoryIssueMustBeReleased"
						
						InventoryDocumentType  	= InventoryDocumentType.InventoryReturns
						if (not TransientOverrideLocation)
							InventoryLocation = OriginatingIssueLocation
						else
							constraint (InventoryLocation entered)
								"MustEnter_Inventory_Location"	

						FromToCompanyLocation.FromToLocation			= OriginatingIssueDocument.FromToCompanyLocation.FromToLocation
						FromToCompanyLocation.FromToCompany				= OriginatingIssueDocument.FromToCompanyLocation.FromToCompany
						FromToCompanyLocation.RequestingLocation		= OriginatingIssueDocument.FromToCompanyLocation.RequestingLocation
			
					Exit Rules
						if (TransientReturnAllLines)
							if (instance count of IssueInventoryTransactionLinesForReturnRel > 50)
								make transition to CreateInProgress

								invoke CreateReturnLinesFromIssueLineSet InventoryTransactionLine in background
									invoked.PrmInventoryCompany			= Company
									invoked.PrmInventoryTransaction		= InventoryTransaction
									invoked.PrmInventoryLocation		= InventoryLocation
									invoked.PrmOriginalLocation			= OriginatingIssueLocation
									invoked.PrmOriginalTransaction		= OriginatingIssueDocument
							else
								invoke CreateReturnLinesFromIssueLineSet InventoryTransactionLine in foreground
									invoked.PrmInventoryCompany			= Company
									invoked.PrmInventoryTransaction		= InventoryTransaction
									invoked.PrmInventoryLocation		= InventoryLocation
									invoked.PrmOriginalLocation			= OriginatingIssueLocation
									invoked.PrmOriginalTransaction		= OriginatingIssueDocument

				Update is an Update Action
					valid when (!InterfaceInProcess)				
					
					Exit Rules
						if (GeneralLedgerDate changed
						or  TransactionDate   changed)	
							invoke FastUpdate InventoryTransactionLineRel
								invoked.GeneralLedgerDate = GeneralLedgerDate
								invoked.TransactionDate   = DerivedTransactionDate
	
						if (ReceiveAll)
							invoke ReceivingUpdate UnreleasedInventoryTransactionLinesRel
										
				Delete is a Delete Action				
					valid when (NotIntransitReceivingAndNotInterfaceInProcess)
					Entrance Rules
						constraint (OriginatingTransaction not entered)
							"CannotDelete;TransactionCreatedBy<OriginatingTransaction.BusinessClassName>_<OriginatingDocument>"
							
						invoke Delete InventoryTransactionLinesRel
				
				SystemDelete is a Delete Action
					restricted
					Entrance Rules
						invoke Delete InventoryTransactionLinesRel
						
				Release is an Instance Action			
					valid when (NotIntransitReceivingOrInterfaceInProcess)
					Action Rules
						constraint (OriginatingTransaction not entered)
							"CannotRelease;TransactionCreatedBy<OriginatingTransaction.BusinessClassName>_<OriginatingDocument>"

						invoke FinalRelease

                        if (IsMobileSupplyChainTransaction
						and MobileSupplyChainInventoryTransactionRel.IsPrintingEnabled)
							invoke PrintInventoryTransactionTicket MobileSupplyChainInventoryTransactionRel

					Exit Rules
						if(InventoryDocumentType.InventoryReturns)
							invoke TriggerInventoryReturnRules


				ReleaseAndPrint is an Instance Action	
					valid when (ForReleaseAndPrintTransaction)
					Action Rules
						constraint (OriginatingTransaction not entered)
							"CannotRelease;TransactionCreatedBy<OriginatingTransaction.BusinessClassName>_<OriginatingDocument>"
						
						invoke FinalRelease
						invoke InventoryIssueDocument InventoryIssueDocument
							invoked.Company		= Company
							invoked.Location 	= InventoryLocation
							invoked.Document	= InventoryTransaction

				FinalRelease is an Instance Action
					restricted
					Parameters
						PrmInspectionHoldQuantity				is like Quantity
						PrmInspectionHoldCatchWeightQuantity	is like Quantity
						PrmSkipDistributionFromPO				is Boolean
						PrmReleaseFromInterface					is Boolean
					Action Rules
						SkipDistributions 				= PrmSkipDistributionFromPO
						
						include ReleaseValidations
							
						if (IsInventoryTransfer or IsDirectTransfer)												
							if (not IntransitTransfer
							or  InterfacedIntransitReceivingTransactionRel not exists)
								include CreateIntransitAndReceivingTransfer
							else
								IntransitAndReceivingDocumentNumber = first InterfacedIntransitReceivingTransactionRel.InventoryTransaction

						include ReleaseLogic
					
					Exit Rules
			 			invoke TriggerBROrderInventoryTransaction
					
			 	TransitionToReleased is an Instance Action
			 		restricted
			 		Action Rules
			 			if (not IsIntransitReceiving)
			 				include ReleaseValidations
			 			make transition to Released
			 						
				Transfer is an Instance Action
					default label is "Release"
					valid when (IsInventoryBinTransfer)
					Action Rules
						constraint (InventoryTransactionLinesRel exists)	
							"CannotPerformTransfer;DoesNotHaveAnyLines"
							
						for each InventoryTransactionLine set
							invoke Unreleased.Transfer each
					Exit Rules
						make transition to NonGlobalLedger
									
 			CreateInProgress is a State
				TransitionToUnreleased is an Instance Action
					restricted
					Action Rules
						make transition to Unreleased

			ReleaseInProgress is a State
				TransitionToReleased is an Instance Action
					restricted
					Action Rules
						make transition to Released
						if (IsIntransitReceiving)
							IntransitReceivingStatus = IntransitReceivingStatus.ReceivingCompleted
				
				TransitionToUnreleased is an Instance Action
					restricted
					Action Rules
						make transition to Unreleased

			Released is a State
			
				UpdateToNonGeneralLedgerFromPOInspection  	is an Instance Action
					default label is "UpdateToNonGlobalLedgerFromPOInspection"
					restricted
					Action Rules
					
						invoke Released.NonGeneralLedgerForInspection InventoryTransactionLinesRel
						make transition to NonGlobalLedger
							
			GlobalLedgerUpdated is a State
			
			NonGlobalLedger is a State		

			IntermediateStatus is a State

	Actions
		
		FinishCreateReturnLines is an Instance Action
			restricted
			Parameters
			Action Rules
				if (IsCreateInProgress)
					invoke CreateInProgress.TransitionToUnreleased

		FastUpdate is an Update Action
			restricted
			bypass field rules

		Purge is a Purge Action
			restricted
			bypass relational integrity rules
			Action Rules
			
		
		CreateFromImport is a Create Action
			restricted
			
		ReleaseFromReceiptLine is an Instance Action
			restricted
			Action Rules
				Status = Status.Released
				
		RefreshAndLock is an Instance Action
			restricted
			refresh and lock this instance
		
		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location" 
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"	
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
				PrmVariationID       is Alpha size 22
					default label is "VariationID"	
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				
		UpdateFromInterface is an Instance Action
			restricted
			Parameters
				SetInterfaceInProcessFalse 	is Boolean
				ReleaseInventoryTransaction is Boolean
				SetInterfaceInProcessTrue  	is Boolean
				PrmOriginatingInterfaceRun 	is like InventoryTransactionInterfaceResult
				PrmRunGroup 				is like RunGroup
				PrmInventoryTransactionImport is like InventoryTransactionImport
			Action Rules
				LocalRunGroup 					 = PrmRunGroup
				LocalInventoryTransactionImport  = PrmInventoryTransactionImport
				if (SetInterfaceInProcessFalse = true)
					InterfaceInProcess = false
				if (SetInterfaceInProcessTrue = true)
					InterfaceInProcess = true
				if (PrmOriginatingInterfaceRun entered)
					OriginatingInterfaceRun = PrmOriginatingInterfaceRun
				
			Exit Rules
				if (ReleaseInventoryTransaction
				and not Status.Released)
					if (Status.ReleaseInProgress)
						invoke ReleaseInProgress.TransitionToUnreleased
					if (IsUnreleased)
						invoke Unreleased.FinalRelease
							resume on error
								LocalHasError = true
								LocalError	  = error message
							invoked.PrmReleaseFromInterface = true
						if (LocalHasError)
							invoke SetError InventoryTransactionImportRel
				 				invoked.PrmErrorMessage = LocalError
				 				invoked.PrmResult 		= OriginatingInterfaceRun
				 				invoked.PrmErrorLevel 	= LocalErrorLevel
				else
					if (InventoryTransactionImportRel.ErrorMessage not entered)
						invoke FinishInterfaceResult InventoryTransactionImportRel
							invoked.PrmResult		= OriginatingInterfaceRun

						invoke FastDelete InventoryTransactionImportRel

		FixUnreleasedBinTransfers is a Set Action
			restricted
			Parameters
				PrmCompany		is a InventoryCompany
					default label is "InventoryCompany"
			Instance Selection
				where (Company = PrmCompany
				and	   IsInventoryBinTransfer
				and    AllLinesNonGlobalLedger
				and    Status.Unreleased)
			Action Rules
				Instance Rules
					make transition to NonGlobalLedger
					
		BatchReleaseTransaction is a Set Action
			restricted
			Parameters
				PrmInventoryCompany 			is an InventoryCompany
				PrmLocation 					is an InventoryLocation
				PrmInventoryTransaction			is an InventoryTransaction
				PrmRunGroup						is like RunGroup
				PrmCompany						is like InventoryCompany
				PrmFromLocation					is like InventoryLocation
				PrmDocumentType					is like InventoryDocumentType
				PrmInventoryTransactionImport 	is like InventoryTransactionImport
			Parameter Rules
				PrmInventoryCompany
					required
				PrmLocation
					required
				PrmInventoryTransaction
					required 
			Instance Selection
				where (Company 				= PrmInventoryCompany
				and    InventoryLocation	= PrmLocation
				and    InventoryTransaction = PrmInventoryTransaction)
			Action Rules
				Set Rules
					Entrance Rules
						LocalRunGroup 					= PrmRunGroup
						LocalCompany 					= PrmCompany
						LocalInventoryLocation 			= PrmFromLocation
						LocalInventoryDocumentType 		= PrmDocumentType				
						LocalInventoryTransactionImport = PrmInventoryTransactionImport
				
				Instance Rules
					if (InventoryTransactionImportRecordRel.ErrorMessage not entered
					and InventoryTransaction entered)
						invoke FinalRelease InventoryTransaction
					else
					if (InventoryTransaction entered)
						invoke SystemDelete InventoryTransaction

		IntransitReceiving is an Update Action
			default label is "Receive"
			valid when (IsIntransitReceiving)
			Action Rules
				constraint (IsIntransitReceiving)
					"ReceiveActionIsNotValidForDocumentType<InventoryTransaction.InventoryDocumentType>"

			Exit Rules
				if (IsUnreleased
				and GeneralLedgerDate changed)
					invoke FastUpdate InventoryTransactionLineRel
						invoked.GeneralLedgerDate = GeneralLedgerDate
				if (ReceiveAll)
					invoke ReceivingUpdate UnreleasedInventoryTransactionLinesRel

		ReleaseReceiving is an Instance Action
			restricted
			Action Rules
				invoke Receive	

				if (IsMobileSupplyChainTransaction)
					if (last MSCMInventoryTransactionByIntransitRecRel.InventoryTransaction not entered)

						invoke UpdateSavedTransferReceipt last MSCMInventoryTransactionByIntransitRecRel
							invoked.InventoryTransaction			= NewInventoryTransaction.InventoryTransaction

						if (MSCMInventoryTransactionByIntransitRecRel.IsPrintingEnabled)
							invoke PrintInventoryTransactionTicket last MSCMInventoryTransactionByIntransitRecRel

		Receive is an Instance Action
			restricted
			Parameters
				PrmInspectionHoldQuantity				is like Quantity 
				PrmInspectionHoldCatchWeightQuantity	is like Quantity
				PrmReleaseFromInterface					is Boolean
			Action Rules
				constraint (!BinRequiredOnLinesForInventoryReceiving)
					"EitherMultipleBinsMustBeSelectedOrBinMustBeEntered"
					
				constraint (!HasCatchWeightQuantityForInventoryReceiving)
					"QuantityMustBeEqualToOpenQuantityForItem<first InventoryTransactionLinesCatchWeightQuantityForIntransitReceivingRel.Item>"
				
				include CreateReceivingTransfer
				include ReleaseLogic

				if (HasCompletedReceivedLines)
					IntransitReceivingStatus   = 2
				else
					IntransitReceivingStatus   = 3
					invoke ReleaseIntransitLine UnreleasedInventoryTransactionLinesRel



























#ifdef module truecost
		LoadToTrueCostInventoryTransactionInterface is a Set Action
			default label is "InterfaceInventoryTransactions"
			completion message is "InterfaceInventoryTransactionsComplete"

			Local Fields
				LocalYear	is Numeric 4
				LocalMonth 	is Numeric 2
				
				
		 	Parameters    		 		
		 		PrmRunGroup			is a RunGroup
		 			default label is "RunGroup"			
				PrmTransactionDate	is Date
					default label is "TransactionDate"
					
		 	Parameter Rules
		 		PrmRunGroup
		 			required	
		 		PrmTransactionDate
		 			default to current corporate date
		 			required		 		 
					LocalYear 	= PrmTransactionDate year
					LocalMonth	= PrmTransactionDate month
										
			Instance Selection
				where (InventoryTransaction.Status.Released
				and (InventoryTransaction.InventoryDocumentType.InventoryIssue
				or InventoryTransaction.InventoryDocumentType.RequisitionReturn)
				and InventoryTransaction.TransactionDate year 	= LocalYear
				and InventoryTransaction.TransactionDate month 	= LocalMonth)
											
			Action Rules

			 	Set Rules
					Entrance Rules
						LocalCurrentDate = current corporate date	
								
				Instance Rules    				
					
					for each InventoryTransactionLinesRel    						
						invoke Create TrueCostInventoryTransactionInterface
							fill in fields from each
							invoked.TrueCostInventoryTransactionInterface.RunGroup	= 	PrmRunGroup
							invoked.TrueCostConfiguration							=	actor.context.TrueCostConfiguration		
							invoked.AccountingEntity								=	each.InventoryAccount.ToAccountingEntity
							invoked.AccountingUnit									= 	each.InventoryAccount.AccountingUnit
							invoked.Location										= 	each.InventoryLocation
							invoked.Transaction										=	each.InventoryTransaction					
							invoked.TransactionDate									=	each.TransactionDate
							invoked.Item											=	each.Item
							invoked.Quantity										=	-1*each.Quantity 
							invoked.UnitCost										=	each.UnitCost

#endif
		InventoryTransactionPurge is a Set Action
			restricted
			Parameters			
				PrmCompany									is an InventoryCompany
					default label is "Company"
				PrmHistoryTransactionsCutoffDate			is Date
					default label is "CutoffDate"
				PrmPurgeOption								is Numeric 1
					default label is "ActionOption"
					States
						PurgeRecords 	value is 1
						ReportOnly		value is 2			
			Instance Selection
				include deleted records
				where  (Company						= PrmCompany
				and		(((Status.NonGlobalLedger
				or        Status.GlobalLedgerUpdated
				or        Status.Released) and IsToPurge)
				or        CustomerOrderReadyForPurge
				or        CustomerOrderReturnIsClosed)
				and      IsInventoryTransactionToPurge
				and	     TransactionDate date      <= PrmHistoryTransactionsCutoffDate)
			Action Rules
				Set Rules
					Entrance Rules
					Exit Rules

				Instance Rules
					invoke InventoryTransactionLinePurge InventoryTransactionLine
						invoked.PrmCompany 							= PrmCompany
						invoked.PrmInventoryTransaction				= InventoryTransaction
						invoked.PrmInventoryLocation				= InventoryLocation
						invoked.PrmPurgeOption						= PrmPurgeOption
			

		TriggerInventoryTransactionNativeLPLOUTBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				LocalReference				= FSMInboundBODTracker.Reference5
				if(InventoryTransactionShipmentLineXMLBOD)
					LocalMainUserTemplate = "IONProcessAdvanceShipNotice_ProcessShipmentHeader_ST"
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 2
					invoked.PrmNoun						= "AdvanceShipNotice"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryTransaction"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany 					= Company
					invoked.PrmMainUserTemplate			= LocalMainUserTemplate
				NativeLPLBODTrigger   = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger       = true
				if(Company.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered and LocalReference not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "AdvanceShipNotice"						
							invoked.BODDocumentID			= DerivedDocNbrOut
							invoked.BODVariationID			= DerivedVariationID
							invoked.Status					= 1
							invoked.Direction				= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= InventoryTransaction
							invoked.Reference4 				= "InventoryTransaction"
							invoked.Reference5				= "Shipment"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						invoke SendInventoryTransactionNativeLPL
							resume on error
		                   		Error            							= true
		                        ErrorMessage     							= error message
		                if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedShipmentBodID
								invoked.BODXML								= InventoryTransactionShipmentXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedShipmentBodID
								invoked.BODXML								= InventoryTransactionShipmentXMLBOD
					else
					if(LocalReference = "Shipment")
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocNbrOut
							invoked.BODVariationID			= DerivedVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= InventoryTransaction
							invoked.Reference4 				= "InventoryTransaction"
							invoked.Reference5				= "Shipment"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						invoke SendInventoryTransactionNativeLPL
							resume on error
		                   		Error            							= true
		                        ErrorMessage     							= error message
		                if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedShipmentBodID
								invoked.BODXML								= InventoryTransactionShipmentXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedShipmentBodID
								invoked.BODXML								= InventoryTransactionShipmentXMLBOD
							
				if(InventoryTransactionAdvanceShipLineXMLBOD)
					LocalMainUserTemplate = "IONProcessAdvanceShipNotice_AdvanceShipNoticeHeader_ST"
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 2
					invoked.PrmNoun						= "AdvanceShipNotice"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryTransaction"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany 					= Company
					invoked.PrmMainUserTemplate			= LocalMainUserTemplate
				NativeLPLBODTrigger   = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger       = true
				if(Company.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered and LocalReference not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "AdvanceShipNotice"						
							invoked.BODDocumentID			= DerivedDocNbrOut
							invoked.BODVariationID			= DerivedVariationID
							invoked.Status					= 1
							invoked.Direction				= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= InventoryTransaction
							invoked.Reference4 				= "InventoryTransaction"
							invoked.Reference5				= "AdvanceShipNotice"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						invoke SendAdvanceShipNoticeNativeLPL
							resume on error
		                   		Error            							= true
		                        ErrorMessage     							= error message
		                if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedAdvanceShipBodID
								invoked.BODXML								= InventoryTransactionAdvanceShipNoticeXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedAdvanceShipBodID
								invoked.BODXML						     	= InventoryTransactionAdvanceShipNoticeXMLBOD 
					else
					if(LocalReference = "AdvanceShipNotice")
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocNbrOut
							invoked.BODVariationID			= DerivedVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= InventoryTransaction
							invoked.Reference4 				= "InventoryTransaction"
							invoked.Reference5				= "AdvanceShipNotice"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						invoke SendAdvanceShipNoticeNativeLPL
							resume on error
		                   		Error            							= true
		                        ErrorMessage     							= error message
		                if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedAdvanceShipBodID
								invoked.BODXML								= InventoryTransactionAdvanceShipNoticeXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedAdvanceShipBodID
								invoked.BODXML						     	= InventoryTransactionAdvanceShipNoticeXMLBOD
				
		SendInventoryTransactionNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(InventoryTransactionShipmentLineXMLBOD)
	    			send ion bod
						bod is InventoryTransactionShipmentXMLBOD
						bod type is "Process.Shipment"
						accounting entity is DerivedBODCrossAccountingEntity
						document id is DerivedDocNbrOut
	    				variation id is DerivedVariationID
	    				location is DerivedLocation
	    				
	    SendAdvanceShipNoticeNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
	    		if(InventoryTransactionAdvanceShipLineXMLBOD)
					send ion bod
						bod is InventoryTransactionAdvanceShipNoticeXMLBOD
						bod type is "Process.AdvanceShipNotice"
						accounting entity is DerivedBODCrossAccountingEntity
						document id is DerivedDocNbrOut
	    				variation id is DerivedVariationID
	    				location is DerivedLocation


		TriggerInventoryAdjNativeLPLOUTBOD is an Instance Action
			default label is untranslatable
			restricted
			Entrance Rules
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationIARel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "InventoryAdjustment"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryTransaction"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany 					= Company
					invoked.PrmMainUserTemplate			= "IONSyncInventoryAdjHeader_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationIARel.NativeLPLBODTrigger
				LocalLineVariationID = bod id.VariationID
				if(Company.FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationIARel exists and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "InventoryAdjustment"	
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryTransaction
							invoked.Reference3				= InventoryLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker			= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryTransaction
							invoked.Reference3				= InventoryLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendInventoryAdjBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= SyncInventoryTransactionXMLBOD
							invoked.BODID								= DerivedBODId
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= SyncInventoryTransactionXMLBOD
							invoked.BODID									= DerivedBODId
								
		SendInventoryAdjBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is SyncInventoryTransactionXMLBOD
					bod type is "Sync.InventoryAdjustment"
					accounting entity is DerivedBODAccountingEntity
					document id is  DerivedBODDocumentID
					variation id is DerivedBODVariationID
					location is DerivedBodLocation


		
		TriggerBROrderInventoryTransaction is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if (Company.FinanceEnterpriseGroup.BODTrigger and InventoryDocumentType.InventoryTransfer and !LocalBODTrigger)	
					if (!action type.Delete)
						if (action != "UpdateBODIdFields") 
							ActionCode = ActionCode.Update
						if (action type.Create)
							ActionCode = ActionCode.Create
						increment bod id.VariationID
						LocalBODCurrentTimeStamp.CurrentTimeStamp = current timestamp
						trigger "BROrderInventoryTransactionService" PA service
							resume on error
							title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>IC:<InventoryTransaction>"
							Criteria
								Company.FinanceEnterpriseGroup
								Company
							Variables	
								include persistent fields from InventoryTransaction
								ActionCode
								bod id.VariationID
									variable name is VariationId
								LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
									variable name is CurrentTimeStamp
								Company.FinanceEnterpriseGroup
									variable name is FinanceEnterpriseGroup
								Company.AccountingEntity										
									variable name is Accountingentity





		

		TriggerInventoryReturnRules is an Instance Action
			restricted
			Parameters
			Action Rules
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					trigger "InventoryReturnService" PA service
						resume on error
						title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>IT:<InventoryTransaction>"
						Criteria
							Company.FinanceEnterpriseGroup
							Company.GeneralLedgerCompany.AccountingEntity
							Company
						Variables
							include persistent fields from InventoryTransaction
							InventoryTransaction
								variable name is InventoryTransaction
							Company.FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup
							Company.GeneralLedgerCompany.AccountingEntity
								variable name is AccountingEntity
							Company
								variable name is LawsonCompany
							Company.GeneralLedgerCompany.BusinessGroup
								variable name is BusinessGroup
			
		SendInventoryReturnNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Action Rules
				if (DerivedSplitInventoryReturn = "Y")
					send ion bod
						bod is SyncRDInventoryTransactionSplitReturnBODXML
						bod type is "Sync.ReceiveDelivery"
						document id is  DerivedInventoryReturnDocumentID
						variation id is LocalVariationID
						accounting entity is DerivedBODAccountingEntity
				else
					send ion bod
						bod is SyncRDInventoryTransactionHeaderBODXML
						bod type is "Sync.ReceiveDelivery"
						document id is  DerivedInventoryReturnDocumentID
						variation id is LocalVariationID
						accounting entity is DerivedBODAccountingEntity
						
		TriggerInventoryReturnNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
				RestartFlag is Boolean
			Action Rules
				if(DerivedSplitInventoryReturn = "Y")
					LocalMainUserTemplate	= "IONSyncReceiveDelivery_InventoryTransactionSplitReturn_ST"
				else
					LocalMainUserTemplate	= "IONSyncReceiveDelivery_InventoryTrnasactionHeader_ST"
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRDRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "ReceiveDelivery"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryTransaction"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany 					= Company
					invoked.PrmMainUserTemplate			= LocalMainUserTemplate
				LocalNativeLPLBODTrigger = FSMBODConfigurationRDRel.NativeLPLBODTrigger
				if(Company.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger and DerivedIntegratingApplication = "EAM")
					LocalVariationID = bod id.VariationID
					if (DerivedSplitInventoryReturn = "Y")
						if (RestartFlag)
							LocalVariationID= FSMInboundBODTracker.BODVariationID
							LocalLineNumber = FSMInboundBODTracker.Reference4
							if(InventoryTransactionReturnLineRel exists)
								LocalItemDescription	= InventoryTransactionReturnLineRel.Item.Description
								LocalItemName			= InventoryTransactionReturnLineRel.Item
								LocalLineQuantity		= InventoryTransactionReturnLineRel.TransientQuantityValue
								LocalLineUOM			= InventoryTransactionReturnLineRel.TransactionUOM
								LocalLineBin 			= InventoryTransactionReturnLineRel.Bin
								LocalWorkOrderID		= InventoryTransactionReturnLineRel.EAMWorkOrder
								LocalWorkOrderActivity	= InventoryTransactionReturnLineRel.EAMWorkOrderActivity
								if (LocalLineBin not entered)
									LocalLineBin = "*"
								LocalFSMInboundBODTracker		= FSMInboundBODTracker	
								invoke Update FSMInboundBODTrackerRel
									invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
									invoked.BODDocumentID			= DerivedInventoryReturnDocumentID
									invoked.BODVariationID			= LocalVariationID
									invoked.Status					= 1
									invoked.StartDate				= system current timestamp
									invoked.Direction				= 1
									invoked.BODAccountingEntity		= DerivedBODAccountingEntity
									invoked.Reference1				= Company
								    invoked.Reference2				= InventoryTransaction
								    invoked.Reference3				= InventoryLocation
								    invoked.Reference5				= "InventoryTransaction"
									initialize invoked.Error			
									initialize invoked.ErrorMessage
								invoke SendInventoryReturnNativeLPLBOD
									resume on error
										Error            							= true
										ErrorMessage     							= error message
								if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 								= Error
										invoked.ErrorMessage 						= ErrorMessage
										invoked.Status								= 2
										invoked.BODID								= DerivedInventoryReturnBODID
										invoked.CloseDate							= system current timestamp
										invoked.BODXML								= SyncRDInventoryTransactionSplitReturnBODXML
								else
									invoke Update FSMInboundBODTrackerRel
										invoked.Status								= 3
										invoked.BODID								= DerivedInventoryReturnBODID
										invoked.CloseDate							= system current timestamp
										invoked.BODXML								= SyncRDInventoryTransactionSplitReturnBODXML	
						else
							if(InventoryTransactionReturnRel exists)
								for each InventoryTransactionReturnRel
									LocalLineNumber 		= each.InventoryTransactionLine.LineNumber
									LocalItemDescription	= each.Item.Description
									LocalItemName			= each.Item
									LocalLineQuantity		= each.TransientQuantityValue
									LocalLineUOM			= each.TransactionUOM
									LocalLineBin 			= each.Bin
									LocalWorkOrderID		= each.EAMWorkOrder
									LocalWorkOrderActivity	= each.EAMWorkOrderActivity
									if (LocalLineBin not entered)
										LocalLineBin = "*"
									if(FSMInboundBODTracker not entered)
										LocalVariationID = LocalVariationID+1
										invoke Create FSMInboundBODTracker
											assign result to NewBODTracker
											invoked.Verb 					= 1
											invoked.Noun 					= "ReceiveDelivery"					
											invoked.BODDocumentID			= DerivedInventoryReturnDocumentID
											invoked.BODVariationID			= LocalVariationID
											invoked.Status					= 1
											invoked.StartDate				= system current timestamp
											invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
											invoked.Direction				= 1
											invoked.BODAccountingEntity		= DerivedBODAccountingEntity
											invoked.Reference1				= Company
											invoked.Reference2				= InventoryTransaction
											invoked.Reference3				= InventoryLocation
											invoked.Reference4				= LocalLineNumber
											invoked.Reference5				= "InventoryTransaction"
											initialize invoked.Error			
											initialize invoked.ErrorMessage					
										LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
									invoke SendInventoryReturnNativeLPLBOD
										resume on error
											Error            							= true
											ErrorMessage     							= error message
									if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.BODID								= DerivedInventoryReturnBODID
											invoked.CloseDate							= system current timestamp
											invoked.BODXML								= SyncRDInventoryTransactionSplitReturnBODXML
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status								= 3
											invoked.BODID								= DerivedInventoryReturnBODID
											invoked.CloseDate							= system current timestamp
											invoked.BODXML								= SyncRDInventoryTransactionSplitReturnBODXML	
					else
						LocalVariationID = LocalVariationID+1
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 1
								invoked.Noun 					= "ReceiveDelivery"					
								invoked.BODDocumentID			= DerivedInventoryReturnDocumentID
								invoked.BODVariationID			= LocalVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= DerivedBODAccountingEntity
								invoked.Reference1				= Company
								invoked.Reference2				= InventoryTransaction
								invoked.Reference3				= InventoryLocation
								invoked.Reference5				= "InventoryTransaction"
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker	
						else
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
								invoked.BODDocumentID			= DerivedInventoryReturnDocumentID
								invoked.BODVariationID			= LocalVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.BODAccountingEntity		= DerivedBODAccountingEntity
								invoked.Reference1				= Company
								invoked.Reference2				= InventoryTransaction
								invoked.Reference3				= InventoryLocation
								invoked.Reference5				= "InventoryTransaction"
								initialize invoked.Error			
								initialize invoked.ErrorMessage 
						invoke SendInventoryReturnNativeLPLBOD
							resume on error
								Error            							= true
								ErrorMessage     							= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.BODID								= DerivedInventoryReturnBODID
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SyncRDInventoryTransactionHeaderBODXML
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.BODID								= DerivedInventoryReturnBODID
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SyncRDInventoryTransactionHeaderBODXML	

		TriggerMSCMDownload is an Instance Action
			restricted
			Local Fields
				Counter is Numeric size 2

			Action Rules
				Counter = 1
				while (Counter <= sizeofarray DownloadedByArray)
					if (DownloadedByArray.DownloadedBy[Counter] entered and DownloadedByArray.DownloadedBy[Counter] = actor)
						end while
					else
					if (DownloadedByArray.DownloadedBy[Counter] not entered)
						DownloadedByArray.DownloadedBy[Counter] = actor
						end while
					Counter += 1
