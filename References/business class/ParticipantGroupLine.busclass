ParticipantGroupLine is a BusinessClass
    owned by procurement
    prefix is PGL

    Ontology
    	symbolic key is ParticipantGroupLine    

	Patterns
		enable explicit context override
	
	Persistent Fields
    	Company						is Numeric size 4
		AccountingUnit				is a FinanceCodeBlockNoAccount
		PurchaseMethod
		NewForContracts             is Boolean
		
	Transient Fields
		LocalContract 				is Numeric size 15
		ParticipantFound			is Boolean
		MemberFound                 is Boolean
		
    Local Fields
    	LocalSetToAmendment         is Boolean
    	LocalHasDistributorContract is Boolean
		LocalLocation               is like InventoryLocation
		LocalRequestingLocation     is like RequestingLocation 
		LocalCompany                is like InventoryCompany
		LocalPricingGroup           is like PricingGroup 

    Derived Fields
    	CompanyName is a StringField 
     		type is like Name
    		holds pii
			ParticipantGroupLine.ParticipantLocation.Company.Name
    	LocationName is a StringField 
     		type is like Name
    		holds pii
			ParticipantGroupLine.ParticipantLocation.Location.Name
    	RequestingLocationName is a StringField 
     		type is like Name
    		holds pii
			ParticipantGroupLine.ParticipantLocation.RequestingLocation.Name
    	PricingGroupDescription is a StringField
    		type is Alpha size 60
    		ParticipantGroupLine.ParticipantLocation.PricingGroup.Description
    	DepartmentName is a StringField
     		type is Alpha size 30
			ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment.Description
		
	Conditions
		
		ActiveNewForContracts
			restricted
			when (NewForContracts
			and   Active)
		
		PricingGroupOnly
			restricted
			when (ParticipantGroupLine.ParticipantLocation.PricingGroup entered)
		
		LocationCompanyOnly
			restricted
			when (ParticipantGroupLine.ParticipantLocation.Location = blank
			and	  ParticipantGroupLine.ParticipantLocation.RequestingLocation = blank
			and   ParticipantGroupLine.ParticipantLocation.Company entered)
			
		HasLocOrReqLoc
			restricted
			when (ParticipantGroupLine.ParticipantLocation.Location != blank
			or    ParticipantGroupLine.ParticipantLocation.RequestingLocation != blank)
			
		LocationType
			restricted
			when (HasLocOrReqLoc
			or    ParticipantGroupLine.ParticipantLocation.PricingGroup.LocationPricingGroup)
			
		CompanyType
			restricted
			when (LocationCompanyOnly
			or    ParticipantGroupLine.ParticipantLocation.PricingGroup.CompanyPricingGroup)
		
		Active
			restricted
			when ((HasLoc
			and   ParticipantGroupLine.ParticipantLocation.Location.Status.Active)
			or   (HasRequestingLocation
			and   ParticipantGroupLine.ParticipantLocation.RequestingLocation.Active)
			or   (!HasLoc
			and   !HasRequestingLocation))
		
		InactiveLocation
			restricted
			when ((HasLoc
			and   !ParticipantGroupLine.ParticipantLocation.Location.IsActive)
			or   (HasRequestingLocation
			and   !ParticipantGroupLine.ParticipantLocation.RequestingLocation.Active))
		
		NonStocklessReqLoc
			restricted
			when  (ParticipantGroupLine.ParticipantLocation.RequestingLocation != blank
			and   !ParticipantGroupLine.ParticipantLocation.RequestingLocation.Stockless)
			
		HasLoc
			restricted
			when (ParticipantGroupLine.ParticipantLocation.Location != blank)

		HasRequestingLocation
			restricted
			when (ParticipantGroupLine.ParticipantLocation.RequestingLocation != blank)
		
		DepartmentCompanyOnly
			restricted
			when (ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment	= blank)
			
		MemberOnly
			restricted
			when (ParticipantGroup.MemberGroup)
		
		HasDept
			restricted
			when (ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment	!= blank)
				
		HasContracts
			restricted
			when (ParticipantGroup.ParticipantGroupContractsRel exists)
			
		MixedCompanies
			restricted
			when (MixedCompanyRel exists)
			
	Sets
		ByLocReqLocSet
      		Sort Order
           		ProcurementGroup
           		ParticipantGroup
            	ParticipantGroupLine.ParticipantLocation.Company
            	ParticipantGroupLine.ParticipantLocation.Location
            	ParticipantGroupLine.ParticipantLocation.RequestingLocation
            Instance Selection
            	where (HasLocOrReqLoc)

		ByDeptSet
      		Sort Order
           		ProcurementGroup
           		ParticipantGroup
           		ParticipantGroupLine.ContractCompanyDepartment.ContractCompany
           		ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment
            Instance Selection
            	where (HasDept)
            	
        ByNewLine
        	Sort Order
        		ProcurementGroup
        		ParticipantGroup
            	ParticipantGroupLine.ParticipantLocation.Company
            	ParticipantGroupLine.ParticipantLocation.Location
            	ParticipantGroupLine.ParticipantLocation.RequestingLocation
            	ParticipantGroupLine.ParticipantLocation.PricingGroup
        	Instance Selection
        		where (NewForContracts)

		ByCompanyFirst
			Sort Order 
				ProcurementGroup 
				ParticipantGroupLine.ParticipantLocation.Company 
            	ParticipantGroupLine.ParticipantLocation.Location
            	ParticipantGroupLine.ParticipantLocation.RequestingLocation
            	ParticipantGroupLine.ParticipantLocation.PricingGroup
				ParticipantGroup 				

    Relations
    	MixedCompanyRel
    		one-to-many relation to ParticipantGroupLine
            Field Mapping uses symbolic key
          		related.ProcurementGroup													= ProcurementGroup
          		related.ParticipantGroup													= ParticipantGroup
           	Instance Selection
           		where (related.ParticipantGroupLine.ParticipantLocation.Company	!= ParticipantGroupLine.ParticipantLocation.Company)
    	
    	CompanyOnlyRel
    		one-to-one relation to ParticipantGroupLine
            Field Mapping uses symbolic key
          		related.ProcurementGroup													= ProcurementGroup
          		related.ParticipantGroup													= ParticipantGroup
           		related.ParticipantGroupLine.ParticipantLocation.Company					= ParticipantGroupLine.ParticipantLocation.Company
           		related.ParticipantGroupLine.ParticipantLocation.Location					= blank
           		related.ParticipantGroupLine.ParticipantLocation.RequestingLocation	    	= blank
           		related.ParticipantGroupLine.ParticipantLocation.PricingGroup               = blank
           		related.ParticipantGroupLine.ContractCompanyDepartment.ContractCompany		= 0
           		related.ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment	= blank
           		
    	LocReqLocRel
    		one-to-many relation to ParticipantGroupLine
            Field Mapping uses ByLocReqLocSet
          		related.ProcurementGroup			   						= ProcurementGroup
          		related.ParticipantGroup			   						= ParticipantGroup          		
            	related.ParticipantGroupLine.ParticipantLocation.Company 	= ParticipantGroupLine.ParticipantLocation.Company

		LocalInventoryCompanyRel 
			one-to-one relation to InventoryCompany 
			Field Mapping uses symbolic key 
				related.Company 		= LocalCompany

		LocalPricingGroupRel 
			one-to-one relation to PricingGroup 
			Field Mapping uses symbolic key 
				related.ContractGroup   = ProcurementGroup
				related.PricingGroup    = LocalPricingGroup		

    	OtherParticipantGroupLine
    		one-to-many relation to ParticipantGroupLine
    		Field Mapping uses symbolic key
    			related.ProcurementGroup													= ProcurementGroup
          		related.ParticipantGroup													= ParticipantGroup
          	Instance Selection
          		where (related.UniqueID          != UniqueID)
    			
    	DeptCompanyOnlyRel
    		one-to-one relation to ParticipantGroupLine
            Field Mapping uses symbolic key
          		related.ProcurementGroup													= ProcurementGroup
          		related.ParticipantGroup													= ParticipantGroup
           		related.ParticipantGroupLine.ParticipantLocation.Company					= 0
           		related.ParticipantGroupLine.ParticipantLocation.Location					= blank
           		related.ParticipantGroupLine.ParticipantLocation.RequestingLocation	    	= blank
           		related.ParticipantGroupLine.ParticipantLocation.PricingGroup               = blank
           		related.ParticipantGroupLine.ContractCompanyDepartment.ContractCompany		= ParticipantGroupLine.ContractCompanyDepartment.ContractCompany
           		related.ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment	= blank
           		
    	DeptRel
    		one-to-many relation to ParticipantGroupLine
            Field Mapping uses 		ByDeptSet
          		related.ProcurementGroup			   									= ProcurementGroup
          		related.ParticipantGroup			   									= ParticipantGroup          		
           		related.ParticipantGroupLine.ContractCompanyDepartment.ContractCompany 	= ParticipantGroupLine.ContractCompanyDepartment.ContractCompany

    	PoCompanyRel
    		one-to-one relation to PurchasingCompany
            Field Mapping uses Set2
          		related.ProcurementGroup	= ProcurementGroup
          		related.Company				= Company
				
		ContractTierMembersRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= LocalContract
				related.ContractTierMember.Company  					= ParticipantGroupLine.ParticipantLocation.Company
				related.ContractTierMember.Location 					= ParticipantGroupLine.ParticipantLocation.Location
				related.ContractTierMember.RequestingLocation      		= ParticipantGroupLine.ParticipantLocation.RequestingLocation
				related.ContractTierMember.PricingGroup                 = ParticipantGroupLine.ParticipantLocation.PricingGroup
		
		ContractTierMembersCompanyOnlyRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= LocalContract
			Instance Selection
				where (related.CompanyOnly)
		
		ContractTierMembersLocReqLocRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= LocalContract
			Instance Selection
				where (related.HasLocOrReqLoc)
		
		ContractPricingMembersRel
			one-to-one relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 							= ProcurementGroup 
				related.Contract 					   							= LocalContract
				related.ContractDistributorPricingMember.Company  				= ParticipantGroupLine.ParticipantLocation.Company
				related.ContractDistributorPricingMember.Location 				= ParticipantGroupLine.ParticipantLocation.Location
				related.ContractDistributorPricingMember.RequestingLocation     = ParticipantGroupLine.ParticipantLocation.RequestingLocation
				related.ContractDistributorPricingMember.PricingGroup           = ParticipantGroupLine.ParticipantLocation.PricingGroup
				related.ContractDistributorPricingMember.ManufacturerContract   = LocalContract
		
		ContractPricingMembersCompanyOnlyRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= blank
			Instance Selection
				where (related.CompanyOnly)
		
		ContractPricingMembersLocReqLocRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= blank
			Instance Selection
				where (related.HasLocOrReqLoc)
		
		ContractLocationRel 
			one-to-one relation to ContractAndLineLocation 
			Field Mapping uses ByContractOnly 
				related.ContractGroup			  	 										= ProcurementGroup 
				related.Contract 					   										= LocalContract
				related.ContractAndLineLocation.Company	  									= ParticipantGroupLine.ParticipantLocation.Company
				related.ContractAndLineLocation.Location 									= ParticipantGroupLine.ParticipantLocation.Location
				related.ContractAndLineLocation.RequestingLocation      					= ParticipantGroupLine.ParticipantLocation.RequestingLocation

		ContractLocationOnlyRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByLocationOnly
				related.ContractGroup								= ProcurementGroup
				related.Contract        							= LocalContract
				related.ContractAndLineLocation.Company 			= ParticipantGroupLine.ParticipantLocation.Company 
				related.ContractAndLineLocation.Location			= LocalLocation
		ContractRequestingLocationRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByRequestingLocationOnly
				related.ContractGroup								= ProcurementGroup
				related.Contract        							= LocalContract
				related.ContractAndLineLocation.Company 			= ParticipantGroupLine.ParticipantLocation.Company 
				related.ContractAndLineLocation.RequestingLocation 	= LocalRequestingLocation

		CompanyActiveLocationRel 
			one-to-many relation to InventoryLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ParticipantGroupLine.ParticipantLocation.Company 
			Instance Selection 
				where (related.Status = 0)	

		CompanyActiveRequestingLocationRel 
			one-to-many relation to RequestingLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ParticipantGroupLine.ParticipantLocation.Company 
			Instance Selection 
				where (related.Active)	

		ContractParticipantsRel
			one-to-one relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup			  	 										= ProcurementGroup 
				related.Contract 					   										= LocalContract
				related.ContractParticipant.ParticipantLocation.Company  					= ParticipantGroupLine.ParticipantLocation.Company
				related.ContractParticipant.ParticipantLocation.Location 					= ParticipantGroupLine.ParticipantLocation.Location
				related.ContractParticipant.ParticipantLocation.RequestingLocation      	= ParticipantGroupLine.ParticipantLocation.RequestingLocation
           		related.ContractParticipant.ParticipantLocation.PricingGroup                = ParticipantGroupLine.ParticipantLocation.PricingGroup
           		related.ContractParticipant.ContractCompanyDepartment.ContractCompany		= ParticipantGroupLine.ContractCompanyDepartment.ContractCompany
          		related.ContractParticipant.ContractCompanyDepartment.ContractDepartment	= ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment
         
        ContractParticipantsCompanyOnlyRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= LocalContract
			Instance Selection
				where (related.CompanyOnly)
		
		ContractParticipantsLocReqLocRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup			  	 					= ProcurementGroup 
				related.Contract 					   					= LocalContract
			Instance Selection
				where (related.HasLocOrReqLoc)
        
        ParticipantGroupContractRel
         	one-to-many relation to ParticipantGroupContract
         	Field Mapping uses ByParticipantGroup
         		related.ProcurementGroup				= ProcurementGroup
         		related.ParticipantGroup                = ParticipantGroup
         	Instance Selection
         		where (!related.Contract.ContractStatus.Closed)
         		
        ParticipantGroupSingleContractRel
         	one-to-one relation to ParticipantGroupContract
         	Field Mapping uses ByParticipantGroup
         		related.ProcurementGroup				= ProcurementGroup
         		related.ParticipantGroup                = ParticipantGroup
         		related.Contract                        = LocalContract		

        ContractGroupEmailTemplate2Rel
			one-to-one relation to ContractGroupEmailTemplate2
			Field Mapping uses symbolic key
				related.ContractGroup     = ProcurementGroup

		ContractGroupRel
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key
				related.ContractGroup     = ProcurementGroup         		
	Field Rules
		Company
			default to ParticipantGroupLine.ParticipantLocation.Company
			constraint(PoCompanyRel exists)
				"POCompanyDoesNotExist"
				
		AccountingUnit
			if (AccountingUnit.AccountingUnit entered)
				AccountingUnit.ToAccountingEntity = ParticipantGroupLine.ParticipantLocation.Company

	Actions
    	Create is a Create Action
    		Action Rules
    			
    			if (OtherParticipantGroupLine exists)
	    			if (!MemberOnly)
	    			
		    			if (CompanyType)
		    				constraint (first OtherParticipantGroupLine.CompanyType)
		    					"CannotAdd;ParticipantsExistByLocationOrRequestingLocation"
		    					
		    			if (LocationType)
		    				constraint (first OtherParticipantGroupLine.LocationType)
		    					"CannotAdd;ParticipantRecordExistsForWholeCompany"    					
		    		
		    			if (LocationCompanyOnly)
		    				constraint (!DeptRel exists)
		    					"CannotAdd;ParticipantsExistByDepartment"
		    			if (HasDept)
		    				constraint (!DeptCompanyOnlyRel exists)
		    					"CannotAdd;ParticipantRecordExistsForWholeCompany"
		    					
		    		if (MemberOnly)
		    		
		    			if (CompanyType)
		    				constraint (first OtherParticipantGroupLine.CompanyType)
		    					"CannotAdd;MembersExistByLocationOrRequestingLocation"
		    			if (LocationType)
		    				constraint (first OtherParticipantGroupLine.LocationType)
		    					"CannotAdd;MemberRecordExistsForWholeCompany"    					
		    		
	    			
    				if (PricingGroupOnly)
    					if (first OtherParticipantGroupLine.CompanyType)
    						constraint (ParticipantGroupLine.ParticipantLocation.PricingGroup.CompanyPricingGroup)
    							"CannotAttachALocationTypePricingGroupToAParticipantGroupThatContainsCompaniesOrCompanyPricingGroups"
    					else
    					if (first OtherParticipantGroupLine.LocationType)
    						constraint (ParticipantGroupLine.ParticipantLocation.PricingGroup.LocationPricingGroup)
    							"CannotAttachACompanyTypePricingGroupToAParticipantGroupThatContainsLocationsOrLocationPricingGroups"
	    		
				if (ParticipantGroupLine.ParticipantLocation.PricingGroup entered)
					constraint (ParticipantGroupLine.ParticipantLocation.Company !entered)
						"CannotEnterCompanyAndPricingGroup"
					constraint (ParticipantGroupLine.ContractCompanyDepartment.ContractCompany !entered)
						"CannotEnterDepartmentAndPricingGroup"	    		
   					constraint (!ParticipantGroupLine.ParticipantLocation.PricingGroup.NoDetails)
   						"PricingGroupHasNoCompaniesOrLocationsAttached"
	    			
	    	Exit Rules 
			
				if (HasContracts)
	    			default NewForContracts to true   

					if (ContractGroupRel.AutoAddFromParticipantGroup)
						invoke CreateNewMembersAndParticipants

    	Update is an Update Action

    	Delete is a Delete Action
    	
		CreateLocationsForAContractInstance is an Instance Action 
			restricted 
			Parameters 
				ParmContract               is like Contract 
				LineLevel                  is Boolean
				CompanyOption              is Numeric 1				
			Action Rules 
					LocalContract = ParmContract
					if (HasLocOrReqLoc)
						if (ContractLocationRel !exists)
							if (HasLoc
							or (HasRequestingLocation
							and !ContractGroupRel.DoNotUseRequestingLocations))
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup 	= ProcurementGroup 
									invoked.Contract        = ParmContract 
									invoked.ContractAndLineLocation.Company 			= ParticipantGroupLine.ParticipantLocation.Company 
									invoked.ContractAndLineLocation.Location			= ParticipantGroupLine.ParticipantLocation.Location 
									invoked.ContractAndLineLocation.RequestingLocation	= ParticipantGroupLine.ParticipantLocation.RequestingLocation
									invoked.ClinicalSystemUse                           = true 
									invoked.LineLevel                                   = LineLevel 
						else
						if (ContractLocationRel exists
						and ContractLocationRel.ClinicalSystemUse = false)
							invoke Update ContractLocationRel 
								invoked.ClinicalSystemUse = true 
								invoked.LineLevel         = LineLevel 
								
					if (LocationCompanyOnly)
						LocalCompany = ParticipantGroupLine.ParticipantLocation.Company
						invoke CreateLocationsForAContractInstance LocalInventoryCompanyRel
							invoked.ParmContractGroup   		= ProcurementGroup
							invoked.ParmContract            	= ParmContract
							invoked.CompanyOption           	= CompanyOption 
							invoked.LineLevel               	= LineLevel 			

		CreateLocationsForAContract is a Set Action 
			restricted 
			Parameters
				ParmProcurementGroup		is a ProcurementGroup
				ParmContract            	is a Contract
				ParmParticipantGroup    	is a ParticipantGroup
				CompanyOption           	is Numeric 1
				LineLevel               	is Boolean 

			Instance Selection
				where (ParmProcurementGroup		= ProcurementGroup
				and    ParmParticipantGroup     = ParticipantGroup)
				
			Sort Order
				ProcurementGroup
				ParticipantGroup
				ParticipantGroupLine
				
			Action Rules
			
				ParticipantGroup Set Rules
					Entrance Rules 
						if (ParticipantGroup.CompanyType)
							invoke CreateContractLocationsSet InventoryLocation 
								invoked.ParmContractGroup 		= ProcurementGroup
								invoked.ParmContract      		= ParmContract
								invoked.LineLevel         		= LineLevel  
								invoked.ParmParticipantGroup	= ParticipantGroup

							if (!ContractGroupRel.DoNotUseRequestingLocations)	
								invoke CreateContractLocations RequestingLocation 
									invoked.ParmContractGroup 		= ProcurementGroup
									invoked.ParmContract      		= ParmContract
									invoked.LineLevel         		= LineLevel  
									invoked.ParmParticipantGroup	= ParticipantGroup								
					
					Exit Rules 
		 				LocalContract = ParmContract
						if (ParticipantGroupSingleContractRel !exists)
			 				invoke Create ParticipantGroupContract     
								invoked.ParticipantGroup = ParmParticipantGroup
								invoked.Contract         = ParmContract
								invoked.ProcurementGroup = ParmProcurementGroup	
								invoked.LocationOnly     = true 
				
				Instance Rules						
					LocalContract = ParmContract
					if (HasLocOrReqLoc)
						if (ContractLocationRel !exists)
							if (HasLoc
							or (HasRequestingLocation
							and !ContractGroupRel.DoNotUseRequestingLocations))
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup 	= ParmProcurementGroup 
									invoked.Contract        = ParmContract 
									invoked.ContractAndLineLocation.Company 			= ParticipantGroupLine.ParticipantLocation.Company 
									invoked.ContractAndLineLocation.Location			= ParticipantGroupLine.ParticipantLocation.Location 
									invoked.ContractAndLineLocation.RequestingLocation	= ParticipantGroupLine.ParticipantLocation.RequestingLocation
									invoked.ClinicalSystemUse                           = true 
									invoked.LineLevel                                   = LineLevel 
						else
						if (ContractLocationRel exists
						and ContractLocationRel.ClinicalSystemUse = false)
							invoke Update ContractLocationRel 
								invoked.ClinicalSystemUse = true 
								invoked.LineLevel         = LineLevel 
								
					if (PricingGroupOnly)
						if (ParticipantGroupLine.ParticipantLocation.PricingGroup.LocationsExist
						or  ParticipantGroupLine.ParticipantLocation.PricingGroup.RequestingLocationsExist)
							LocalPricingGroup = ParticipantGroupLine.ParticipantLocation.PricingGroup
							invoke CreateLocationsForAContractInstance LocalPricingGroupRel 
								invoked.ParmProcurementGroup		= ParmProcurementGroup
								invoked.ParmContract        		= ParmContract 
								invoked.CompanyOption      			= CompanyOption
								invoked.LineLevel               	= LineLevel 

		CreateMembersForAContract is a Set Action
			restricted
			Parameters
				ParmProcurementGroup	is a ProcurementGroup
				ParmContract            is a Contract
				ParmParticipantGroup    is a ParticipantGroup
				ParmTier                is a Tier
				
			Instance Selection
				where (ParmProcurementGroup		= ProcurementGroup
				and    ParmParticipantGroup     = ParticipantGroup)
				
			Sort Order
				ProcurementGroup
				ParticipantGroup
				ParticipantGroupLine
				
			Action Rules
			
				Instance Rules
				
					LocalContract = ParmContract
					if (ParmContract.IsManufacturerContract)
						if (ContractTierMembersRel !exists)
							invoke Create ContractTierMember
								invoked.ContractGroup 								= ParmProcurementGroup
								invoked.Contract 									= ParmContract		
								invoked.ContractTierMember.Company 					= ParticipantGroupLine.ParticipantLocation.Company		
								invoked.ContractTierMember.Location 				= ParticipantGroupLine.ParticipantLocation.Location		
								invoked.ContractTierMember.RequestingLocation		= ParticipantGroupLine.ParticipantLocation.RequestingLocation
								invoked.ContractTierMember.PricingGroup             = ParticipantGroupLine.ParticipantLocation.PricingGroup
								invoked.Tier                                        = ParmTier	
								invoked.PurchaseMethod                              = PurchaseMethod		
								invoked.LocalFromGroupLine                          = true
					else
					if (ParmContract.IsDistributorContract)
						if (ContractPricingMembersRel !exists)
							invoke Create ContractDistributorPricingMember
								invoked.ContractGroup 										= ParmProcurementGroup
								invoked.Contract 											= ParmContract	
								invoked.ContractDistributorPricingMember.Company			= ParticipantGroupLine.ParticipantLocation.Company		
								invoked.ContractDistributorPricingMember.Location			= ParticipantGroupLine.ParticipantLocation.Location		
								invoked.ContractDistributorPricingMember.RequestingLocation	= ParticipantGroupLine.ParticipantLocation.RequestingLocation
								invoked.ContractDistributorPricingMember.PricingGroup 		= ParticipantGroupLine.ParticipantLocation.PricingGroup
					else
					if (ParmContract.IsNotDistributorAndNotManufacturer)
						if (ContractParticipantsRel !exists)
							invoke Create ContractParticipant
								fill in fields from this instance
								invoked.ContractGroup 														= ParmProcurementGroup
								invoked.Contract 															= ParmContract		
								invoked.ContractParticipant.ParticipantLocation.Company 					= ParticipantGroupLine.ParticipantLocation.Company		
								invoked.ContractParticipant.ParticipantLocation.Location 					= ParticipantGroupLine.ParticipantLocation.Location		
								invoked.ContractParticipant.ParticipantLocation.RequestingLocation			= ParticipantGroupLine.ParticipantLocation.RequestingLocation
								invoked.ContractParticipant.ParticipantLocation.PricingGroup				= ParticipantGroupLine.ParticipantLocation.PricingGroup				
				           		invoked.ContractParticipant.ContractCompanyDepartment.ContractCompany		= ParticipantGroupLine.ContractCompanyDepartment.ContractCompany
	          					invoked.ContractParticipant.ContractCompanyDepartment.ContractDepartment	= ParticipantGroupLine.ContractCompanyDepartment.ContractDepartment
	 				
	 				if (ParticipantGroupSingleContractRel !exists)
		 				invoke Create ParticipantGroupContract     
							invoked.ParticipantGroup = ParmParticipantGroup
							invoked.Contract         = ParmContract
							invoked.ProcurementGroup = ParmProcurementGroup					

    	CheckForExistingParticipant is an Instance Action
    		restricted
			Parameters
				ContractGroup
				Contract
			Parameter Rules
				ContractGroup
					required
				Contract
					required
    		Action Rules
    			LocalContract		= Contract
    			ParticipantFound = false
     			if (ContractParticipantsRel exists)
    				ParticipantFound = true
    				
    	CheckForExistingTierMember is an Instance Action
    		restricted
			Parameters
				ContractGroup
				Contract
			Parameter Rules
				ContractGroup
					required
				Contract
					required
    		Action Rules
    			LocalContract		= Contract
    			MemberFound = false
     			if (ContractTierMembersRel exists)
     				MemberFound = true
    	
    	CheckForExistingPricingMember is an Instance Action
    		restricted
			Parameters
				ContractGroup
				Contract
			Parameter Rules
				ContractGroup
					required
				Contract
					required
    		Action Rules
    			LocalContract		= Contract
    			MemberFound = false
     			if (ContractPricingMembersRel exists)
     				MemberFound = true
     				
     	CreateNewMembersAndParticipants is an Instance Action    
     		run in background
     		restricted
     		Parameters
     			PrmContract              is a Contract
				NewInventoryLocation     is like InventoryLocation
				NewRequestingLocation    is like RequestingLocation
     			
     		Action Rules
     			
				if (Active)
					for each ParticipantGroupContractRel
	     				if ((PrmContract !entered
	     				or  (PrmContract entered
	     				and  each.Contract  = PrmContract))
						and NewRequestingLocation !entered
						and NewInventoryLocation  !entered)
	     					if (!each.Contract.Stockless
	     					or  !NonStocklessReqLoc)
		     					LocalContract       = each.Contract

		     					if (!each.LocationOnly)
									if (each.Contract.IsManufacturerContract)
										if (ContractTierMembersRel !exists)
											if  (each.Contract.ContractStatus.Active
											and (PurchaseMethod !entered
											or  !each.Contract.HasDefaultTier))
												invoke TransitionToAmendment Active each.Contract
												LocalSetToAmendment = true
											invoke CreateFromGroup ContractTierMember
												invoked.ContractGroup								= ProcurementGroup
												invoked.Contract									= each.Contract
												invoked.ContractTierMember							= ParticipantGroupLine.ParticipantGroupLine.ParticipantLocation
												invoked.PurchaseMethod								= PurchaseMethod
											if (each.Contract.ContractStatus.Active)
												invoke ReleaseMembers each.Contract
											if (each.Contract.HasDistributorContract)
												LocalHasDistributorContract = true
									else
									if   (each.Contract.IsDistributorContract)
										if (ContractPricingMembersRel !exists)
											if  (each.Contract.ContractStatus.Active
											and !each.Contract.HasDefaultPricingIdentifier)
												invoke TransitionToAmendment Active each.Contract
												LocalSetToAmendment = true
											invoke CreateFromGroup ContractDistributorPricingMember
												invoked.ContractGroup								= ProcurementGroup
												invoked.Contract									= each.Contract
												invoked.ContractDistributorPricingMember			= ParticipantGroupLine.ParticipantGroupLine.ParticipantLocation
											if (each.Contract.ContractStatus.Active)
												invoke ReleaseMembers each.Contract
									else
									if (each.Contract.IsNotDistributorAndNotManufacturer
									and each.Contract.ContractParticipantsExist)
										if (ContractParticipantsRel !exists)
											invoke CreateFromGroup ContractParticipant
												invoked.ContractGroup        						= ProcurementGroup
												invoked.Contract             						= each.Contract
												invoked.Company										= Company	
												invoked.AccountingUnit								= AccountingUnit
												invoked.ContractParticipant.ContractParticipant		= ParticipantGroupLine.ParticipantGroupLine
									if (LocalSetToAmendment         = true)
										send email
											to each.Contract.PrimaryContactRel.DerivedEmail
											cc each.Contract.DerivedSecondaryContactEmailAddressList
											from config.DefaultFromEmailAddress
											subject "<ContractGroupEmailTemplate2Rel.FinalParticipantGroupContractAmendedSubject>"
											Contents
												"<ContractGroupEmailTemplate2Rel.FinalParticipantGroupContractAmendedContent>ContractIs<each.Contract>_-_<each.Contract.Name>"
									
										invoke Create ContractNotificationEmail
											invoked.ContractGroup					= ProcurementGroup
											invoked.Contract						= each.Contract
											initialize invoked.ContractDeliverable
											initialize invoked.ContractMilestone
											initialize invoked.SentToMilestoneContact			
											initialize invoked.SentToDeliverableContact
											invoked.SentToEmailAddress				= each.Contract.PrimaryContactRel.DerivedEmail
											invoked.SentToCc                        = each.Contract.DerivedSecondaryContactEmailAddressList
											invoked.SentFromPrimaryContractContact	= each.Contract.PrimaryContact
											invoked.SentFromEmailAddress			= each.Contract.PrimaryContactRel.DerivedEmail
											invoked.EmailSubjectLine				= ContractGroupEmailTemplate2Rel.FinalParticipantGroupContractAmendedSubject
											invoked.EmailContent					= ContractGroupEmailTemplate2Rel.FinalParticipantGroupContractAmendedContent + "Contract Is {each.Contract} - {each.Contract.Name}"
											invoked.NotificationType				= 6
									
									if (LocalHasDistributorContract = true)	
										send email
											to each.Contract.PrimaryContactRel.DerivedEmail
											cc each.Contract.DerivedSecondaryContactEmailAddressList
											from each.Contract.PrimaryContactRel.DerivedEmail
											subject "<ContractGroupEmailTemplate2Rel.FinalParticipantGroupDistributorContractSubject>"
											Contents
												"<ContractGroupEmailTemplate2Rel.FinalParticipantGroupDistributorContractContent>ContractIs<each.Contract>_-_<each.Contract.Name>"
										invoke Create ContractNotificationEmail
											invoked.ContractGroup					= ProcurementGroup
											invoked.Contract						= each.Contract
											initialize invoked.ContractDeliverable
											initialize invoked.ContractMilestone
											initialize invoked.SentToMilestoneContact			
											initialize invoked.SentToDeliverableContact
											invoked.SentToEmailAddress				= each.Contract.PrimaryContactRel.DerivedEmail
											invoked.SentToCc                        = each.Contract.DerivedSecondaryContactEmailAddressList
											invoked.SentFromPrimaryContractContact	= each.Contract.PrimaryContact
											invoked.SentFromEmailAddress			= each.Contract.PrimaryContactRel.DerivedEmail
											invoked.EmailSubjectLine				= ContractGroupEmailTemplate2Rel.FinalParticipantGroupDistributorContractSubject
											invoked.EmailContent					= ContractGroupEmailTemplate2Rel.FinalParticipantGroupDistributorContractContent + "Contract Is {each.Contract} - {each.Contract.Name}"
											invoked.NotificationType				= 6
				     			else
								if (each.Contract.EnableClinicalSystemUseLocations
								and each.LocationOnly)
									if (HasLocOrReqLoc)
										if (ContractLocationRel !exists)
											invoke Create ContractAndLineLocation 
												invoked.ContractGroup 								= ProcurementGroup 
												invoked.Contract        							= each.Contract 
												invoked.ContractAndLineLocation.Company 			= ParticipantGroupLine.ParticipantLocation.Company 
												invoked.ContractAndLineLocation.Location			= ParticipantGroupLine.ParticipantLocation.Location 
												invoked.ContractAndLineLocation.RequestingLocation	= ParticipantGroupLine.ParticipantLocation.RequestingLocation
												invoked.ClinicalSystemUse                           = true 
										else
										if (ContractLocationRel exists
										and ContractLocationRel.ClinicalSystemUse = false)
											invoke Update ContractLocationRel 
												invoked.ClinicalSystemUse = true 
									else 
									if (PricingGroupOnly)
										if (ParticipantGroupLine.ParticipantLocation.PricingGroup.LocationsExist
										or  ParticipantGroupLine.ParticipantLocation.PricingGroup.RequestingLocationsExist)
											LocalPricingGroup = ParticipantGroupLine.ParticipantLocation.PricingGroup
											invoke CreateLocationsForAContractInstance LocalPricingGroupRel 
												invoked.ParmProcurementGroup	= ProcurementGroup
												invoked.ParmContract        	= each.Contract 
									else
									if (LocationCompanyOnly)
										LocalCompany = ParticipantGroupLine.ParticipantLocation.Company
										invoke CreateLocationsForAContractInstance LocalInventoryCompanyRel
											invoked.ParmContractGroup   	= ProcurementGroup
											invoked.ParmContract            = each.Contract

						else
						if ((NewInventoryLocation entered
						or   NewRequestingLocation entered)
						and  each.Contract.EnableClinicalSystemUseLocations)
							LocalCompany = ParticipantGroupLine.ParticipantLocation.Company
							invoke CreateLocationsForAContractInstance LocalInventoryCompanyRel
								invoked.ParmContractGroup   	= ProcurementGroup
								invoked.ParmContract            = each.Contract
								invoked.ParmInventoryLocation   = NewInventoryLocation
								invoked.ParmRequestingLocation  = NewRequestingLocation							

										

				   	NewForContracts = false	
