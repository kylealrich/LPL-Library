ProjectStructureValidation is a BusinessClass
    owned by Projects
    prefix is PJSV

    Ontology
    	symbolic key is ProjectStructureValidation
    		
    Persistent Fields
    	Project
    	StructureValidationCodeBlock
    	ValidationCondition		is LPLText
			disable Auditing
		StructureDimension		is like GeneralLedgerChartAccount

	Local Fields
		LocalProject			is like Project
		LocalStructureDimension	is like GeneralLedgerChartAccount

	Derived Fields
		StructureDimensionDescription is a DerivedField
			type is like Description
			if (StructureValidationCodeBlock.FinanceDimension3 entered)
				return StructureValidationCodeBlock.FinanceDimension3.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension4 entered)
				return StructureValidationCodeBlock.FinanceDimension4.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension5 entered)
				return StructureValidationCodeBlock.FinanceDimension5.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension6 entered)
				return StructureValidationCodeBlock.FinanceDimension6.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension7 entered)
				return StructureValidationCodeBlock.FinanceDimension7.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension8 entered)
				return StructureValidationCodeBlock.FinanceDimension8.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension9 entered)
				return StructureValidationCodeBlock.FinanceDimension9.Description
			else
			if (StructureValidationCodeBlock.FinanceDimension10 entered)
				return StructureValidationCodeBlock.FinanceDimension10.Description
			else
			if (StructureValidationCodeBlock.GeneralLedgerChartAccount entered)
				return StructureValidationCodeBlock.GeneralLedgerChartAccount.AccountDescription
			
    Conditions

    Relations
    	ProjectStructureValidationRuleRel
    		one-to-many relation to ProjectStructureValidationRule
    		Field Mapping uses ByRuleOption
    			related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
    			related.ProjectStructureValidation	= ProjectStructureValidation
				
		ProjectStructureValidationRel
			one-to-one relation to ProjectStructureValidation
			Field Mapping uses ByStructureDimension
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= LocalProject
				related.StructureDimension		= LocalStructureDimension

    Sets
		ByStructureDimension
			Sort Order
				FinanceEnterpriseGroup
				Project
				StructureDimension
				
    Field Rules
    	Project
    		required
    			"<FinanceEnterpriseGroup.ProjectLabel>Required"
            cannot be changed

    	StructureValidationCodeBlock
 	    	cannot be changed


    		constraint (FinanceEnterpriseGroup.StructureValidationDimension entered)
    			"StructureValidationDimensionNotDefinedOnFinanceEnterpriseGroup"
    	StructureDimension
    		cannot be changed
	   		StructureDimension = StructureValidationCodeBlock.EnteredDimension

	Actions
		Create is a Create Action
			Action Rules
				constraint (FinanceEnterpriseGroup.StructureValidationDimension entered)
					"StructureValidationDimensionMustSelectedOnFinanceEnterpriseGroupToUseThisFeature"
				LocalProject			= Project
				LocalStructureDimension = StructureValidationCodeBlock.EnteredDimension
				constraint (ProjectStructureValidationRel not exists)
					"StructureValidationAlreadyExists"
	    		constraint (Project.ProjectInEnterpriseStructureRel exists)
    				"<FinanceEnterpriseGroup.ProjectLabel>MustBeEitherPostingOrSummaryTypeAndWithinTheEnterpriseStructure"

		Delete is a Delete Action
			
		Update is an Update Action

		Copy is an Instance Action
			Parameters
				NewProject 						is a Project
				NewStructureValidationCodeBlock is a StructureValidationCodeBlock
			Parameter Rules
				NewProject
					required
						"CopyTo<FinanceEnterpriseGroup.ProjectLabel>Required"
			Local Fields
				ProjectStructureValidationView is a ProjectStructureValidation view
			Action Rules
				LocalProject			= NewProject
				LocalStructureDimension = NewStructureValidationCodeBlock.EnteredDimension
					constraint (ProjectStructureValidationRel not exists)
						"FinanceStructureValidationAlreadyExists"
				invoke Create
					assign result to ProjectStructureValidationView
					invoked.FinanceEnterpriseGroup		 = FinanceEnterpriseGroup
					invoked.Project						 = NewProject
					invoked.StructureValidationCodeBlock = NewStructureValidationCodeBlock
				for each ProjectStructureValidationRule set
					invoke Create ProjectStructureValidationRule
						fill in fields from each
						invoked.ProjectStructureValidation = ProjectStructureValidationView.ProjectStructureValidation

		GenerateValidationCondition is an Instance Action
			restricted
			Local Fields
				LocalGroupCondition		is LPLText
				LocalQuote				is Alpha 1
				LocalRuleGroup			is Numeric 2
				LocalFound				is Boolean
				LocalDimension			is Numeric 2
				Counter					is Numeric size 4
				Counter2				is Numeric size 4
				LastCounter				is Numeric size 4
				ValidationRuleTable
			Action Rules
				for each ProjectStructureValidationRuleRel
					LocalFound = true
					if (Counter < 9999)
						Counter += 1
						ValidationRuleTable.ValidationRule[Counter].RuleGroup = each.RuleGroup
						ValidationRuleTable.ValidationRule[Counter].Dimension = each.ProjectCodeBlockDimension
						ValidationRuleTable.ValidationRule[Counter].RuleOption = each.RuleOption
						ValidationRuleTable.ValidationRule[Counter].FromValue = each.FromValue
						ValidationRuleTable.ValidationRule[Counter].ToValue = each.ToValue
						LastCounter = Counter
					else
						end for each
						
				Counter = 1
				while (Counter <= LastCounter)
					if (Counter = 1)
						ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin = true
						LocalRuleGroup = ValidationRuleTable.ValidationRule[Counter].RuleGroup
					if (Counter = LastCounter)
						ValidationRuleTable.ValidationRule[Counter].RuleGroupEnd = true
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroup != LocalRuleGroup)
						ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin = true
						LocalRuleGroup = ValidationRuleTable.ValidationRule[Counter].RuleGroup
						LocalDimension = blank
						Counter2 = Counter - 1
						ValidationRuleTable.ValidationRule[Counter2].RuleGroupEnd = true
					if (ValidationRuleTable.ValidationRule[Counter].RuleOption.Exclude)
						LocalDimension = blank
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroup = LocalRuleGroup
					and ValidationRuleTable.ValidationRule[Counter].RuleOption.Include
					and Counter != LastCounter)
						if (ValidationRuleTable.ValidationRule[Counter].Dimension != LocalDimension)
							LocalDimension = ValidationRuleTable.ValidationRule[Counter].Dimension
							Counter2 = Counter + 1
							if (ValidationRuleTable.ValidationRule[Counter2].RuleGroup = LocalRuleGroup
							and ValidationRuleTable.ValidationRule[Counter2].RuleOption.Include
							and ValidationRuleTable.ValidationRule[Counter2].Dimension = LocalDimension)
								ValidationRuleTable.ValidationRule[Counter].SubGroupBegin = true
								ValidationRuleTable.ValidationRule[Counter].InSubGroup = true
					if (Counter != 1)
						Counter2 = Counter - 1			
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroup = LocalRuleGroup
					and ValidationRuleTable.ValidationRule[Counter].RuleOption.Include
					and ValidationRuleTable.ValidationRule[Counter].Dimension = LocalDimension
					and ValidationRuleTable.ValidationRule[Counter2].Dimension = LocalDimension
					and ValidationRuleTable.ValidationRule[Counter2].RuleOption.Include
					and ValidationRuleTable.ValidationRule[Counter2].InSubGroup)
						ValidationRuleTable.ValidationRule[Counter].InSubGroup = true
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroup = LocalRuleGroup
					and ValidationRuleTable.ValidationRule[Counter].RuleOption.Include
					and ValidationRuleTable.ValidationRule[Counter].Dimension = LocalDimension
					and ValidationRuleTable.ValidationRule[Counter].InSubGroup)
						if (Counter = LastCounter)
							ValidationRuleTable.ValidationRule[Counter].SubGroupEnd = true
						else
							Counter2 = Counter + 1
							if (ValidationRuleTable.ValidationRule[Counter2].RuleGroup != LocalRuleGroup
							or  ValidationRuleTable.ValidationRule[Counter2].RuleOption.Exclude
							or  ValidationRuleTable.ValidationRule[Counter2].Dimension != LocalDimension)
								ValidationRuleTable.ValidationRule[Counter].SubGroupEnd = true
					Counter += 1
							
				LocalQuote				= "\""
				LocalGroupCondition		= "("
				Counter = 1
				while (Counter <= LastCounter)
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin)
						if (Counter = 1)
							LocalGroupCondition += "("
						else
							LocalGroupCondition += " or ("
					if (ValidationRuleTable.ValidationRule[Counter].SubGroupBegin)
						if (ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin)
							LocalGroupCondition += "("
						else
							LocalGroupCondition += " and ("
					if  (ValidationRuleTable.ValidationRule[Counter].RuleOption.Exclude
					and !ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin)
						LocalGroupCondition += " and "
					if  (ValidationRuleTable.ValidationRule[Counter].RuleOption.Include
					and !ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin
					and !ValidationRuleTable.ValidationRule[Counter].InSubGroup)
						LocalGroupCondition += " and "
					if  (ValidationRuleTable.ValidationRule[Counter].RuleOption.Include
					and  ValidationRuleTable.ValidationRule[Counter].InSubGroup
					and !ValidationRuleTable.ValidationRule[Counter].SubGroupBegin
					and !ValidationRuleTable.ValidationRule[Counter].RuleGroupBegin)
						LocalGroupCondition += " or "
					if (ValidationRuleTable.ValidationRule[Counter].RuleOption.Exclude)
						LocalGroupCondition += "!"
					LocalGroupCondition += "(FinanceCodeBlock." + ValidationRuleTable.ValidationRule[Counter].Dimension.DimensionName + " >= "
					LocalGroupCondition += LocalQuote
					LocalGroupCondition += ValidationRuleTable.ValidationRule[Counter].FromValue
					LocalGroupCondition += LocalQuote
					LocalGroupCondition += " and FinanceCodeBlock." + ValidationRuleTable.ValidationRule[Counter].Dimension.DimensionName + " <= "
					LocalGroupCondition += LocalQuote
					LocalGroupCondition += ValidationRuleTable.ValidationRule[Counter].ToValue
					LocalGroupCondition += LocalQuote
					LocalGroupCondition += ")"
					if (ValidationRuleTable.ValidationRule[Counter].SubGroupEnd)
						LocalGroupCondition += ")"
					if (ValidationRuleTable.ValidationRule[Counter].RuleGroupEnd)
						LocalGroupCondition += ")"
					Counter += 1
				
				LocalGroupCondition += ")"
				if (LocalFound)
					ValidationCondition 	= LocalGroupCondition
				else
					initialize ValidationCondition

				
