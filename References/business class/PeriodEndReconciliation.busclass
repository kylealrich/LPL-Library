PeriodEndReconciliation  is a BusinessClass
	owned by reconciliation	
	prefix is PERN
	
	Ontology
		symbolic key is PeriodEndReconciliation 
		
	Persistent Fields								
		LevelType							 is Numeric 1
			default label is "Type"
			States
				Account			value is 0
				Group			value is 1
				NonAccount		value is 2
		ReconciliationGroup					 is a Name	 
			holds pii
		ReconciliationGroupMethod			 is Numeric 1
			default label is "ReconciliationMethod"
			States
				Consolidated	value is 0
				Independent		value is 1
		NonAccountReconciliation			 is a Name	 
			holds pii
		TopLevelAccountGroup				 is a ReconciliationAccountGroup
		ReconciliationAccountGroup
		Description							 is Alpha 100
		Status								 is Numeric 2
			States
				Open			value is 0
				InProcess		value is 1
				PendingApproval	value is 3
				Closed			value is 7
    	AssetAdditions						 is an InternationalAmount
    	AssetAdjustments					 is an InternationalAmount
    	AssetTransfers						 is an InternationalAmount
    	AssetDisposals						 is an InternationalAmount
    	CloseTask
    	FinanceTeam
    		default label is "Team"
		AssignedResource					 is a FinanceTeamMember
			default label is "TeamMember"
			delete ignored
		ApprovalCode						 is a snapshot of PeriodEndReconciliation.ReconciliationAccount.ApprovalCode 
		Rejected							 is Boolean
		ApprovalLevel						 is Numeric 8
		ReassignToApprovalLevel				 is an ApprovalCodeResource
		Approver							 is a FinanceResource
		ApproverTeam						 is a FinanceTeamField
		TaskOwner 							 is a FinanceTeamMember
			delete ignored
		ViewableByAuditor					 is Boolean
		FinancialForm						 is Alpha 6
		ClosedLedgerAmount					 is an InternationalAmount
 		BackgroundGroupAsyncId 				 is an AsyncActionRequest
			delete ignored
			disable Auditing
		ReportDocument
			delete ignored
		ReconciliationPolicy
 		AutoReconciled						 is Boolean
 		NonAccountBalance					 is an InternationalAmount
		ReconciliationCodeBlock
			default label is "ReconciliationAccount"
 		DimensionCodeValue					 is AlphaUpper 15
		ReconciliationIsOutOfBalance 		 is Boolean
			disable Auditing
		DistributionApprovalCode			 is like ApprovalCode
		DistributionApprovalLevel			 is Numeric 8
		DistributionApprover				 is a FinanceResource
		DistributionApproverTeam			 is a FinanceTeamField
		ReassignToApprovalLevelForDistribution is an ApprovalCodeResource
    	InProcessTimestamp					 is TimeStamp
    	PendingApprovalTimestamp			 is TimeStamp
    	ClosedTimestamp						 is TimeStamp
		OriginalSubmittingResource			 is like Actor
		
	Transient Fields
		CreatedFromReconciliationAccount	 is Boolean
    	CreatedFromBatch					 is Boolean
    						
	Local Fields
		LocalCloseTask						 is a CloseTask
		LocalApprovalLevel					 is Numeric 8
		LocalApprover						 is a FinanceResource
		LocalApproverTeam					 is a FinanceTeamField
		LocalApproverList					 is Alpha 250
		LocalFirstApproverAssigned			 is Boolean
		LocalReconciliationManagementGroup	 is like ReconciliationManagementGroup
		LocalReconciliationAccountStructure	 is like ReconciliationAccountStructure
		LocalReconciliationAccount			 is like ReconciliationAccount
		LocalGeneralLedgerCloseConfiguration is like GeneralLedgerCloseConfiguration
		LocalGeneralLedgerClosePeriod		 is AlphaUpper size 20
		LocalPeriodEndReconciliation		 is like SequenceNumber
		LocalUniqueID						 is a UniqueID
		BackgroundGroup						 is AlphaUpper up to 70
		OldBackgroundGroup					 is AlphaUpper up to 70
		LocalAccountingEntity				 is like AccountingEntity
		LocalLedgerAmountCalculated			 is Boolean
		LocalPriorPeriodLedgerAmountCalculated is Boolean
		LocalLedgerPeriodCount				 is Numeric 2
		LocalOutOfBalancePeriodCount		 is Numeric 2
		LocalGLTransactionPeriodCount		 is Numeric 2
		LocalLedgerAmount					 is like InternationalAmount
		LocalPriorPeriodLedgerAmount		 is like InternationalAmount
		LocalOutOfBalanceAmount				 is like InternationalAmount
		LocalHasGLTransactions				 is Boolean
		LocalReconSubsystemBalanceFound		 is Boolean
		LocalActor							 is an Actor
		BypassActiveCodeBlockEdit
		LocalTeamMemberOverridden			 is Boolean
		LocalApprovalCode					 is like ApprovalCode
		LocalDistributionApprovalLevel		 is Numeric 8
		LocalDistributionApprover			 is a FinanceResource
		LocalDistributionApproverTeam		 is a FinanceTeamField
		LocalApproverListForDistribution	 is Alpha 250
		LocalFirstApproverAssignedForDistribution is Boolean
		
	Context Fields
		EnterpriseGroup
		Currency
				
	Rule Blocks
		InitiateApprovalProcessFlow
			LocalReconciliationManagementGroup	 = ReconciliationManagementGroup
			LocalReconciliationAccountStructure	 = ReconciliationAccountStructure
			LocalReconciliationAccount			 = PeriodEndReconciliation.ReconciliationAccount
			LocalGeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
			LocalGeneralLedgerClosePeriod		 = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			LocalPeriodEndReconciliation		 = PeriodEndReconciliation.SequenceNumber
			LocalUniqueID						 = UniqueID
					
			initiate ReconciliationApproval process
				title is "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>:<DerivedReconciliationAccountDescription>"
				Variables
					LocalReconciliationManagementGroup
					LocalReconciliationAccountStructure
					LocalReconciliationAccount
					LocalGeneralLedgerCloseConfiguration
					LocalGeneralLedgerClosePeriod
					LocalPeriodEndReconciliation
					LocalUniqueID
				URLs
					"<linkback(webapp is Approver navigation is ProcessFlowForm text is \"ViewPeriodEndReconciliation\" session key EnterpriseGroup is EnterpriseGroup)>"
		
		InitiateDistributionApprovalProcessFlow
			initiate ReconciliationDistributionApproval process
				title is "DistributionForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>:<DerivedReconciliationAccountDescription>"
				Variables
					ReconciliationManagementGroup
					ReconciliationAccountStructure
					PeriodEndReconciliation.ReconciliationAccount
						variable name is ReconciliationAccount
					PeriodEndReconciliation.GeneralLedgerCloseConfiguration
						variable name is GeneralLedgerCloseConfiguration
					PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
						variable name is GeneralLedgerCalendarPeriod
					PeriodEndReconciliation.SequenceNumber
						variable name is PeriodEndReconciliation
					LocalApprovalCode
						variable name is ApprovalCode
					UniqueID
						variable name is LocalUniqueID
					RejectReconReasonCodeRequired
						variable name is RejectReconReasonCodeRequired
				URLs
					"<linkback(webapp is Approver navigation is ProcessFlowForm text is \"ViewPeriodEndReconciliation\" session key EnterpriseGroup is EnterpriseGroup)>"
								
		BuildTeamApproverActorList
			LocalApproverList = ""
			LocalFirstApproverAssigned = false
			for each FinanceTeamMembersFromCurrentApprovalLevelRel
				if (LocalFirstApproverAssigned)
					LocalApproverList = LocalApproverList + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverList = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssigned = true
		
		BuildTeamApproverActorListForDistribution
			LocalApproverListForDistribution = ""
			LocalFirstApproverAssignedForDistribution = false
			for each FinanceTeamMembersFromCurrentApprovalLevelDistributionRel
				if (LocalFirstApproverAssignedForDistribution)
					LocalApproverListForDistribution = LocalApproverListForDistribution + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverListForDistribution = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssignedForDistribution = true
					
		GetNextEscalationApprovalLevel
			LocalApprovalLevel		= ApprovalLevel
			if (first LocalApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalApprovalLevel	= ApprovalLevel + 1
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
			else
				LocalApprovalLevel	= first LocalApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
		
		GetNextEscalationApprovalLevelForDistribution
			LocalDistributionApprovalLevel		= DistributionApprovalLevel
			if (first LocalDistributionApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalDistributionApprovalLevel	= DistributionApprovalLevel + 1
				LocalDistributionApprover		= first LocalDistributionApprovalCodeLevelRel.Approver
				LocalDistributionApproverTeam	= first LocalDistributionApprovalCodeLevelRel.ApprovalTeam
			else
				LocalDistributionApprovalLevel	= first LocalDistributionApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalDistributionApprover		= first LocalDistributionApprovalCodeLevelRel.Approver
				LocalDistributionApproverTeam	= first LocalDistributionApprovalCodeLevelRel.ApprovalTeam
				
		GetNextApprovalLevel
			if (ApprovalLevel < 1)
				LocalApprovalLevel	= first ApprovalCodeResourceRel.ApprovalLevel
				LocalApprover		= first ApprovalCodeResourceRel.Approver
				LocalApproverTeam	= first ApprovalCodeResourceRel.ApprovalTeam
			else
				LocalApprovalLevel		= ApprovalLevel + 1
				if (LocalApprovalCodeLevelRel exists)
					LocalApprovalLevel	= first LocalApprovalCodeLevelRel.ApprovalLevel
					LocalApprover		= first LocalApprovalCodeLevelRel.Approver
					LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
				else
					if(ReconciliationManagementGroup.EnforceReconcilerCannotBeApprover
					and OriginalSubmittingResource = LocalActor)
						include SendNotApprovedMessageForReconciliation
						LocalApprovalLevel 	= ApprovalLevel
						LocalApprover		= Approver
						LocalApproverTeam	= ApproverTeam
					else
						initialize LocalApprovalLevel
						initialize LocalApprover
						initialize LocalApproverTeam
		
		GetNextApprovalLevelForDistribution
			if (DistributionApprovalLevel < 1)
				LocalDistributionApprovalLevel	= first DistributionApprovalCodeResourceRel.ApprovalLevel
				LocalDistributionApprover		= first DistributionApprovalCodeResourceRel.Approver
				LocalDistributionApproverTeam	= first DistributionApprovalCodeResourceRel.ApprovalTeam
			else
				LocalDistributionApprovalLevel		= DistributionApprovalLevel + 1
				if (LocalDistributionApprovalCodeLevelRel exists)
					LocalDistributionApprovalLevel	= first LocalDistributionApprovalCodeLevelRel.ApprovalLevel
					LocalDistributionApprover		= first LocalDistributionApprovalCodeLevelRel.Approver
					LocalDistributionApproverTeam	= first LocalDistributionApprovalCodeLevelRel.ApprovalTeam
				else
					if(ReconciliationManagementGroup.EnforceReconcilerCannotBeApprover
					and OriginalSubmittingResource = LocalActor)
						include SendNotApprovedMessageForDistributions
						LocalDistributionApprovalLevel  = DistributionApprovalLevel
						LocalDistributionApprover		= DistributionApprover
						LocalDistributionApproverTeam	= DistributionApproverTeam
					else
						initialize LocalDistributionApprovalLevel
						initialize LocalDistributionApprover
						initialize LocalDistributionApproverTeam

		SendNotApprovedMessageForReconciliation
			if (AssignedResource.TeamMember.EmailAddress entered)
				send email
					to 		AssignedResource.TeamMember.EmailAddress
					from 	config.DefaultFromEmailAddress 
					subject "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>:_<PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName>HasNotBeenApproved"		
					Contents
						"ReconciliationHasNotBeenApproved.A_\ReconcilerCannotApproveTheirOwnReconciliation;PleaseReassignToAnother_\Approver."

		SendNotApprovedMessageForDistributions
			if (AssignedResource.TeamMember.EmailAddress entered)
				send email
					to 		AssignedResource.TeamMember.EmailAddress
					from	config.DefaultFromEmailAddress 
					subject "DistributionsForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>:_<PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName>HaveNotBeenApproved"		
					Contents
						"DistributionsHaveNotBeenApproved.A_\ReconcilerCannotApproveTheirOwnDistributions;PleaseReassignToAnother_\Approver."
					
		UpdateCloseTask  
			if (CloseTask changed)
				if (CloseTask entered
				and !CloseTask.ReconciliationTask)
					invoke QuickUpdateFromRecon CloseTask
						invoked.UpdateReconTaskToTrue = true
				if (old CloseTask entered)
					LocalCloseTask = old CloseTask
					invoke QuickUpdateFromRecon LocalCloseTask
						invoked.UpdateReconTaskToFalse = true

		ReconciliationCompletionEdits
			if (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
				constraint (OutOfBalance = 0)
					"CannotCompleteReconciliationWhenPeriodIsOutOfBalance"
				if (PeriodEndReconciliation.ReconciliationAccount.RequireSupportingDoco)
					constraint (HasSupportingDocumentation)
						"SupportingDocumentationRequiredOnReconciliationDetail"
						
			constraint (!EnteredDistributionsRel exist)
				"AllDistributionsMustBeReleasedToCompleteReconciliation"
			constraint (!ReleasedDistributionsRel exist)
				"AllDistributionsMustBeJournalizedToCompleteReconciliation"
			constraint (!UnpostedPeriodAmortizedDetailRel exist)
				"DistributionsForAmortizationHaveNotBeenCreated"
			constraint (HasInactiveResourcesOnApprovalLevels)
				"InactiveResourcesOnApprovalLevels;CannotComplete"	
			
			if (ApprovalCode entered)
				constraint (ApprovalCode.HasApprovalLevels)
					"CannotComplete;TheApprovalCodeHasNoApprovalLevels"
				constraint (!ApprovalCode.HasTeamWithNoMembers)
					"CannotComplete;TheApprovalCodeHasATeamWithNoMembers"
				constraint (!ApprovalCode.HasInvalidEscalations)
					"CannotComplete:TheApprovalCodeHasInvalidEscalationSettings"
				constraint (!ApprovalCode.HasInactiveResources)
					"CannotComplete;TheApprovalCodeHasInactiveResources"
			
			ClosedLedgerAmount = LedgerAmount
			
			if (PeriodEndReconciliation.ReconciliationAccount.RequiresApproval)
				if (IsGroupStandaloneOrNonAccount) 
					include GetNextApprovalLevel
					ApprovalLevel = LocalApprovalLevel
					Approver = LocalApprover
					ApproverTeam = LocalApproverTeam
					include InitiateApprovalProcessFlow
				
				make transition to PendingApproval
			else
				make transition to Closed
		
		CreateAssetReconciliationDetails	
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
			and IsConsolidatedGroupStandaloneOrAccountWithinIndependentGroup
			and CalculatedAssetEndingBalance != 0)			
				invoke CreatePeriodDetail ReconciliationPeriodDetail
					invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.TransactionDate					= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
					invoked.ReferenceNumber					= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName + " ASSET RECONCILIATION"
					invoked.Description						= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName + " ASSET RECONCILIATION"
					invoked.StartPeriod						= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
					invoked.DetailPeriod					= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			    	invoked.PeriodAmount					= CalculatedAssetEndingBalance

		SendApprovalRejectionNotifications
			if (AssignedResource.TeamMember.EmailAddress entered)
				send email
					to		AssignedResource.TeamMember.EmailAddress
					from	config.DefaultFromEmailAddress 
					subject "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
					Contents
						"RejectedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"

			LocalActor = AssignedResource.TeamMember.FinanceResourceActor
			if (LocalActor entered)					
				if (ReconciliationReconcilerRel exists)					
					send notification
						to	LocalActor
						description is "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
						priority is very high
						linkback (webapp is Reconciler navigation is ResourceNotificationNav text is "ViewReconciliation") 
				else
					send notification
						to	LocalActor
						description is "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
						priority is very high
						linkback (webapp is ReconciliationManager navigation is ResourceNotificationNav text is "ViewReconciliation") 
		
		SendApprovalRejectionNotificationsForDistributions
			if (AssignedResource.TeamMember.EmailAddress entered)
				send email
					to		AssignedResource.TeamMember.EmailAddress
					from	config.DefaultFromEmailAddress 
					subject "DistributionForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
					Contents
						"RejectedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"

			LocalActor = AssignedResource.TeamMember.FinanceResourceActor
			if (LocalActor entered)					
				if (ReconciliationReconcilerRel exists)					
					send notification
						to	LocalActor
						description is "DistributionForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
						priority is very high
						linkback (webapp is Reconciler navigation is ResourceNotificationNav text is "ViewReconciliation") 
				else
					send notification
						to	LocalActor
						description is "DistributionForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasRejected:<DerivedReconciliationAccountDescription>"
						priority is very high
						linkback (webapp is ReconciliationManager navigation is ResourceNotificationNav text is "ViewReconciliation")
										                 				
	Derived Fields




			
		AccountingEntity is a DerivedField
			type is like AccountingEntity
			return ReconciliationCodeBlock.AccountingEntity 
		
		AccountingUnit is a DerivedField
			type is like AccountingUnit
			return ReconciliationCodeBlock.AccountingUnit
		
		GeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
			return ReconciliationCodeBlock.GeneralLedgerChartAccount
		
		Project is a DerivedField
			type is like Project
			return ReconciliationCodeBlock.Project
			
		FinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			return ReconciliationCodeBlock.FinanceDimension1
		
		FinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			return ReconciliationCodeBlock.FinanceDimension2
			
		FinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			return ReconciliationCodeBlock.FinanceDimension3
			
		FinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			return ReconciliationCodeBlock.FinanceDimension4
			
		FinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			return ReconciliationCodeBlock.FinanceDimension5
			
		FinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			return ReconciliationCodeBlock.FinanceDimension6
		
		FinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			return ReconciliationCodeBlock.FinanceDimension7
			
		FinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			return ReconciliationCodeBlock.FinanceDimension8
			
		FinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			return ReconciliationCodeBlock.FinanceDimension9
			
		FinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			return ReconciliationCodeBlock.FinanceDimension10

		
		DerivedTransactionDate	is a DerivedField
			type is Date
			return first ReconciliationSubsystemBalanceRel.ReconciliationSubsystemBalance.ReconciliationDate
		
		DerivedReferenceNumber  is a StringField
			type is Alpha 50
			PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName
			" ACCRUAL"
					
		DerivedAMReferenceNumber  is a StringField
			type is Alpha 50
			PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName
			" ASSET RECONCILIATION"

		DerivedSummaryGeneralLedgerCalendarPeriod is a DerivedField
			type is like SummaryGeneralLedgerCalendarPeriod
			return first GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod

		DerivedYTDTopNodeCubeValue is a StringField
			type is AlphaUpper up to 30
			ReconciliationManagementGroup.FinanceEnterpriseGroup
			"/"
			first GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod
			"_YTD"
		
		DerivedPriorPeriodYTDTopNodeCubeValue is a StringField
			type is AlphaUpper up to 30
			ReconciliationManagementGroup.FinanceEnterpriseGroup
			"/"
			last GeneralLedgerPeriodShadowPriorPeriodRel.SummaryGeneralLedgerCalendarPeriod
			"_YTD"

		DerivedLTDTopNodeCubeValue is a StringField
			type is AlphaUpper up to 30
			ReconciliationManagementGroup.FinanceEnterpriseGroup
			"/"
			first GeneralLedgerPeriodShadowRel.SummaryGeneralLedgerCalendarPeriod
			"_LTD"

		DerivedPriorPeriodLTDTopNodeCubeValue is a StringField
			type is AlphaUpper up to 30
			ReconciliationManagementGroup.FinanceEnterpriseGroup
			"/"
			last GeneralLedgerPeriodShadowPriorPeriodRel.SummaryGeneralLedgerCalendarPeriod
			"_LTD"

		DerivedPeriodEndSystem is a DerivedField
			type is like GeneralLedgerSystemCode
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.PayablesAccrual)
				return "AP"
			else
				if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Receivables)
					return "AR"
				return blank
		
		DerivedPeriodEndCompany is a DerivedField
			type is like GeneralLedgerCompany
			if (DerivedPeriodEndSystem	= "AP")
				return PayablesCompanyRel.Company
			else
				if (DerivedPeriodEndSystem = "AR")
					return ReceivablesCompanyRel.Company			
		
		DerivedAccrualAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (DerivedPeriodEndSystem = "AP")
				return PayablesAccrualCodeDetailRel.DistributionAccount.GeneralLedgerChartAccount
			else
				if (DerivedPeriodEndSystem = "AR")
					return ReceivablesAccrualCodeRel.DistributionAccount.GeneralLedgerChartAccount
				else
					return ""
				
		ReconciliationCubeMap is a DerivedField
			type is LPLText
			if (LevelType.Account)
				if (ReconciliationAccountStructure.ReportingBasis.CalendarTopNode entered)
					if (ReconciliationCodeBlock.GeneralLedgerChartAccount.ChartSection.BalanceSheet)
						ReconciliationCubeMap += "related.GeneralLedgerTotal.EntityYearPeriod = DerivedYTDTopNodeCubeValue\n"
					else
						ReconciliationCubeMap += "related.GeneralLedgerTotal.EntityYearPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod\n"
				
				if (ReconciliationAccountStructure.ReportingBasis.AccountingUnitTopNodeGroup.DimensionNode entered)
					if (ReconciliationCodeBlock.AccountingUnit entered)
						ReconciliationCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ReconciliationCodeBlock.AccountingUnit\n"
					else
						ReconciliationCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ReconciliationAccountStructure.ReportingBasis.AccountingUnitTopNodeCubeValue\n"
				
				if (ReconciliationAccountStructure.ReportingBasis.ProjectTopNode entered)	
					if (ReconciliationCodeBlock.Project entered)
						ReconciliationCubeMap += "related.GeneralLedgerTotal.Project = ReconciliationCodeBlock.Project\n"
					else
						ReconciliationCubeMap += "related.GeneralLedgerTotal.Project = ReconciliationAccountStructure.ReportingBasis.ProjectTopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension1TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension1 entered)
						ReconciliationCubeMap += "related.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension1 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension1TopNodeCubeValue\n"
				
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension2TopNode entered)	
					if (ReconciliationCodeBlock.FinanceDimension2 entered)
						ReconciliationCubeMap += "related.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension2 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension2TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension3TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension3 entered)
						ReconciliationCubeMap += "related.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension3 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension3TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension4TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension4 entered)
						ReconciliationCubeMap += "related.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension4 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension4TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension5TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension5 entered)
						ReconciliationCubeMap += "related.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension5 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension5TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension6TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension6 entered)
						ReconciliationCubeMap += "related.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension6 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension6TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension7TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension7 entered)
						ReconciliationCubeMap += "related.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension7 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension7TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension8TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension8 entered) 
						ReconciliationCubeMap += "related.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension8 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension8TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension9TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension9 entered)
						ReconciliationCubeMap += "related.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension9 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension9TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension10TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension10 entered)
						ReconciliationCubeMap += "related.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10\n"
					else
						ReconciliationCubeMap += "related.FinanceDimension10 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension10TopNodeCubeValue\n"

		ReconciliationPriorPeriodCubeMap is a DerivedField
			type is LPLText
			if (LevelType.Account)
				if (ReconciliationAccountStructure.ReportingBasis.CalendarTopNode entered)
					if (ReconciliationCodeBlock.GeneralLedgerChartAccount.ChartSection.BalanceSheet)
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.EntityYearPeriod = DerivedPriorPeriodYTDTopNodeCubeValue\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.EntityYearPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.DerivedPreviousPeriod\n"

				if (ReconciliationAccountStructure.ReportingBasis.AccountingUnitTopNodeGroup.DimensionNode entered)
					if (ReconciliationCodeBlock.AccountingUnit entered)
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ReconciliationCodeBlock.AccountingUnit\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ReconciliationAccountStructure.ReportingBasis.AccountingUnitTopNodeCubeValue\n"
				
				if (ReconciliationAccountStructure.ReportingBasis.ProjectTopNode entered)	
					if (ReconciliationCodeBlock.Project entered)
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.Project = ReconciliationCodeBlock.Project\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.GeneralLedgerTotal.Project = ReconciliationAccountStructure.ReportingBasis.ProjectTopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension1TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension1 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension1 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension1TopNodeCubeValue\n"
				
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension2TopNode entered)	
					if (ReconciliationCodeBlock.FinanceDimension2 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension2 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension2TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension3TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension3 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension3 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension3TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension4TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension4 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension4 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension4TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension5TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension5 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension5 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension5TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension6TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension6 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension6 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension6TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension7TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension7 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension7 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension7TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension8TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension8 entered) 
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension8 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension8TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension9TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension9 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension9 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension9TopNodeCubeValue\n"
					
				if (ReconciliationAccountStructure.ReportingBasis.FinanceDimension10TopNode entered)
					if (ReconciliationCodeBlock.FinanceDimension10 entered)
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10\n"
					else
						ReconciliationPriorPeriodCubeMap += "related.FinanceDimension10 = ReconciliationAccountStructure.ReportingBasis.FinanceDimension10TopNodeCubeValue\n"

		DynamicMeasure is a DerivedField
			type is LPLText
			if (LevelType.Account)
				if (ReconciliationAccountStructure.ReconciliationCurrency.EntityFunctional)
					DynamicMeasure = "NetFunctionalAmount"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Project)
					DynamicMeasure = "NetProjectAmount"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Report1)
					DynamicMeasure = "NetReportAmount1"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Report2)
					DynamicMeasure = "NetReportAmount2"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Report3)
					DynamicMeasure = "NetReportAmount3"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Report4)
					DynamicMeasure = "NetReportAmount4"
				else
				if (ReconciliationAccountStructure.ReconciliationCurrency.Report5)
					DynamicMeasure = "NetReportAmount5"
			
		LedgerAmount is a DerivedField
			type is like InternationalAmount
			default label is "LedgerAmount"
			if (LevelType.Account)
				if (LocalLedgerAmountCalculated)
					return LocalLedgerAmount
				LocalLedgerAmountCalculated = true
				
				if (DynamicMeasure = "NetFunctionalAmount")
					LocalLedgerAmount = ReconciliationCubeRel.NetFunctionalAmount
				else
				if (DynamicMeasure = "NetProjectAmount")
					LocalLedgerAmount = ReconciliationCubeRel.NetProjectAmount
				else
				if (DynamicMeasure = "NetReportAmount1")
					LocalLedgerAmount = ReconciliationCubeRel.NetReportAmount1
				else
				if (DynamicMeasure = "NetReportAmount2")
					LocalLedgerAmount = ReconciliationCubeRel.NetReportAmount2	
				else
				if (DynamicMeasure = "NetReportAmount3")
					LocalLedgerAmount = ReconciliationCubeRel.NetReportAmount3
				else
				if (DynamicMeasure = "NetReportAmount4")
					LocalLedgerAmount = ReconciliationCubeRel.NetReportAmount4
				else
				if (DynamicMeasure = "NetReportAmount5")
					LocalLedgerAmount = ReconciliationCubeRel.NetReportAmount5
			
				return LocalLedgerAmount
		
		PriorPeriodLedgerAmount is a DerivedField
			type is like InternationalAmount
			default label is "PriorPeriodLedgerAmount"
			if (LevelType.Account)
				if (LocalPriorPeriodLedgerAmountCalculated)
					return LocalPriorPeriodLedgerAmount
				LocalPriorPeriodLedgerAmountCalculated = true
				
				if (DynamicMeasure = "NetFunctionalAmount")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetFunctionalAmount
				else
				if (DynamicMeasure = "NetProjectAmount")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetProjectAmount
				else
				if (DynamicMeasure = "NetReportAmount1")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetReportAmount1
				else
				if (DynamicMeasure = "NetReportAmount2")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetReportAmount2	
				else
				if (DynamicMeasure = "NetReportAmount3")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetReportAmount3
				else
				if (DynamicMeasure = "NetReportAmount4")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetReportAmount4
				else
				if (DynamicMeasure = "NetReportAmount5")
					LocalPriorPeriodLedgerAmount = ReconciliationPriorPeriodCubeRel.NetReportAmount5
			
				return LocalPriorPeriodLedgerAmount
			
		GroupLedgerAmount is a DerivedField
			type is like InternationalAmount
			return (sum PeriodEndReconciliationChildrenRel.LedgerAmount)

		PriorPeriodGroupLedgerAmount is a DerivedField
			type is like InternationalAmount
			return (sum PeriodEndReconciliationChildrenRel.PriorPeriodLedgerAmount)

		DerivedCurrency is a DerivedField
			type is Alpha 10
			default label is "Currency"
			if (ReconciliationAccountStructure.ReconciliationCurrency.EntityFunctional)
				return ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Project)
				return ReconciliationAccountStructure.ReportingBasis.ProjectStructure.Currency
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report1)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyOne
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report2)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyTwo
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report3)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyThree
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report4)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFour
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report5)
				return ReconciliationManagementGroup.FinanceEnterpriseGroup.ReportCurrencyFive
				
		DetailAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.PayablesAccrual)

				return (sum PeriodDetailsRel.PeriodAmount)
			else 
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Receivables)

				return (sum PeriodDetailsRel.PeriodAmount)	
			else
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return (first BankStatementRel.EndingBalance + sum PeriodDetailsRel.PeriodAmount)
			else
				return (sum PeriodDetailsRel.PeriodAmount + sum PeriodAmortizedDetailRel.RemainingBalance)

		GroupDetailAmount is a DerivedField
			type is like InternationalAmount
			return (DetailAmount + sum PeriodEndReconciliationChildrenRel.DetailAmount)
			
		YearToDateAssetAdditions is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodYearToDateRel.AssetAdditions)

		YearToDateAssetAdjustments is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodYearToDateRel.AssetAdjustments)

		YearToDateAssetTransfers is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodYearToDateRel.AssetTransfers)

		YearToDateAssetDisposals is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodYearToDateRel.AssetDisposals)

		YearToDateGroupAssetAdditions is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.YearToDateAssetAdditions)

		YearToDateGroupAssetAdjustments is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.YearToDateAssetAdjustments)

		YearToDateGroupAssetTransfers is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.YearToDateAssetTransfers)

		YearToDateGroupAssetDisposals is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.YearToDateAssetDisposals)
			
		PreviousPeriodLedgerAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (first PreviousPeriodEndReconciliationRel.GroupLedgerAmount)
				else
					return (first PreviousPeriodEndReconciliationRel.LedgerAmount)
		
		PriorPeriodLedgerAmountForAsset is a DerivedField
			type is like InternationalAmount
			default label is "PreviousPeriodLedgerAmount"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return PriorPeriodGroupLedgerAmount
				else
					return PriorPeriodLedgerAmount
							
		PreviousYearEndLedgerAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (first PreviousYearEndPeriodRel.GroupLedgerAmount)
				else
					return (first PreviousYearEndPeriodRel.LedgerAmount)
		
		ReconciliationDetailAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return GroupDetailAmount
				else
					return DetailAmount
							
		CalculatedAssetEndingBalance is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (PriorPeriodLedgerAmountForAsset + DerivedGroupAssetAdditions + DerivedGroupAssetAdjustments + DerivedGroupAssetTransfers + DerivedGroupAssetDisposals)
				else
					return (PriorPeriodLedgerAmountForAsset + AssetAdditions + AssetAdjustments + AssetTransfers + AssetDisposals)
				
		AssetOutOfBalanceAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (CalculatedAssetEndingBalance - GroupLedgerAmount)
				else
					return (CalculatedAssetEndingBalance - LedgerAmount)

		CalculatedYearToDateAssetEndingBalance is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (PreviousYearEndLedgerAmount + YearToDateGroupAssetAdditions + YearToDateGroupAssetAdjustments + YearToDateGroupAssetTransfers - YearToDateGroupAssetDisposals)
				else
					return (PreviousYearEndLedgerAmount + YearToDateAssetAdditions + YearToDateAssetAdjustments + YearToDateAssetTransfers - YearToDateAssetDisposals)

		YearToDateAssetOutOfBalanceAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				if (IsConsolidatedGroup)
					return (CalculatedYearToDateAssetEndingBalance - GroupLedgerAmount)
				else
					return (CalculatedYearToDateAssetEndingBalance - LedgerAmount)

		ReconcilingAmount is a DerivedField
			type is like InternationalAmount
			default label is "ReconcilingItems"
			return (sum PeriodReconcilingDetailRel.PeriodAmount)
				
		OpenBankTransactionsAmount is a DerivedField
			type is like InternationalAmount
			default label is "OpenBankTransactions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return (first BankStatementRel.OutstandingDeposits - first BankStatementRel.AllPendingDepositLineAmount - first BankStatementRel.OutstandingPayments + first BankStatementRel.AllPendingPaymentLineAmount)
		
		OpenGroupBankTransactionsAmount is a DerivedField
			type is like InternationalAmount
			default label is "OpenBankTransactions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return (sum PeriodEndReconciliationChildrenRel.OpenBankTransactionsAmount)
					
		UnpostedBankStatementDistributionsAmount is a DerivedField
			type is like InternationalAmount
			default label is "UnpostedBankStatementDistributions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return (first BankStatementRel.UnpostedDistribution - first BankStatementRel.PostedDistributionsForPeriod)

		UnpostedGroupBankStatementDistributionsAmount is a DerivedField
			type is like InternationalAmount
			default label is "UnpostedBankStatementDistributions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return (sum PeriodEndReconciliationChildrenRel.UnpostedBankStatementDistributionsAmount)
		
		UnpostedDistributionAmount is a DerivedField
			type is like InternationalAmount
			default label is "UnpostedDistributions"
			return (sum UnpostedDistributionsRel.DistributionAmount.CurrencyAmount * -1)

		UnpostedGroupDistributionAmount is a DerivedField
			type is like InternationalAmount
			default label is "UnpostedDistributions"
			return (sum PeriodEndReconciliationChildrenRel.UnpostedDistributionAmount)
		
		OutOfBalance is a DerivedField 
			type is like InternationalAmount
			if (IsStandaloneAccount
			or  IsAccountWithinIndependentGroup)
				return (DetailAmount - LedgerAmount - ReconcilingAmount + OpenBankTransactionsAmount - UnpostedBankStatementDistributionsAmount - UnpostedDistributionAmount)
			else
			if (IsConsolidatedGroup)
				return (GroupDetailAmount - GroupLedgerAmount - ReconcilingAmount + OpenGroupBankTransactionsAmount - UnpostedGroupBankStatementDistributionsAmount - UnpostedGroupDistributionAmount)
			else
			if (LevelType.NonAccount)
				return (DetailAmount - NonAccountBalance - ReconcilingAmount)
								
		GroupClosedLedgerAmount is a DerivedField
			type is like InternationalAmount
			return (sum PeriodEndReconciliationChildrenRel.ClosedLedgerAmount)

		DerivedClosedLedgerAmount is a DerivedField
			type is like InternationalAmount
			default label is "ClosedLedgerAmount"
			if (LevelType.Group)
				return GroupClosedLedgerAmount
			else
			if (LevelType.Account)
				return ClosedLedgerAmount
		
		DerivedCurrentLedgerAmount is a DerivedField
			type is like InternationalAmount
			default label is "CurrentLedgerAmount"
			if (LevelType.Group)
				return GroupLedgerAmount
			else
			if (LevelType.Account)
				return LedgerAmount
					
		ClosedLedgerOutOfBalanceAmount is a DerivedField
			type is like InternationalAmount
			if (LevelType.Group)
				return (GroupLedgerAmount - GroupClosedLedgerAmount)
			else
			if (LevelType.Account)
				return (LedgerAmount - ClosedLedgerAmount)

		NumReconciliationsByStatus is a ComputeField
			type is Numeric size 5
			(instance count of ReconciliationsByStatusRel)

		ReconciliationsStatusCount is a DerivedField
			type is Numeric size 1
			return 1

		BlankDisplay is a StringField
			type is AlphaRight size 10
			" "
			
		DetailAmountLabel is a LabelField
			"ReconciliationDetails"
		
		PrepaidDetailAmountLabel is a LabelField	
			"Reconciliation/AmortizationDetails"
				
		BankStatementBalanceLabel is a LabelField
			"BankStatementBalance"
			
		DerivedDetailAmountLabel is a DerivedField
			type is Alpha 80
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return BankStatementBalanceLabel
			else
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid)	
				return PrepaidDetailAmountLabel
			else
				return DetailAmountLabel

		RelatedBankStatement is a DerivedField
			type is like BankStatement
			default label is "BankStatement"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return first BankStatementRel.BankStatement
		
		RelatedBankStatementDate is a DerivedField
			type is Date
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash)
				return first BankStatementRel.StatementDate
				
		DerivedAssetAdditions is a DerivedField
			type is like InternationalAmount
			default label is "AssetAdditions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum AssetAdditionGeneralLedgerTransactionRel.TransactionAmount)
			
    	DerivedAssetAdjustments is a DerivedField
			type is like InternationalAmount
			default label is "AssetAdjustments"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum AssetAdjustmentGeneralLedgerTransactionRel.TransactionAmount)
			
    	DerivedAssetTransfers is a DerivedField
			type is like InternationalAmount
			default label is "AssetTransfers"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum AssetTransferGeneralLedgerTransactionRel.TransactionAmount)
			
    	DerivedAssetDisposals is a DerivedField
			type is like InternationalAmount
			default label is "AssetDisposals"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum AssetDisposalGeneralLedgerTransactionRel.TransactionAmount)
			
		DerivedGroupAssetAdditions is a DerivedField
			type is like InternationalAmount
			default label is "AssetAdditions"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.AssetAdditions)
			
    	DerivedGroupAssetAdjustments is a DerivedField
			type is like InternationalAmount
			default label is "AssetAdjustments"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.AssetAdjustments)
			
    	DerivedGroupAssetTransfers is a DerivedField
			type is like InternationalAmount
			default label is "AssetTransfers"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.AssetTransfers)
			
    	DerivedGroupAssetDisposals is a DerivedField
			type is like InternationalAmount
			default label is "AssetDisposals"
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset)
				return (sum PeriodEndReconciliationChildrenRel.AssetDisposals)
			

		DerivedCurrentApprovalResource is a DerivedField
			type is Numeric 9
			return first CurrentApprovalCodeLevelRel.Approver
			
		DerivedNextApprovalLevel is a DerivedField
			type is Numeric 8
			LocalApprovalLevel = ApprovalLevel
			include GetNextApprovalLevel
			return LocalApprovalLevel
			
		DerivedCurrentApprovalActor is a DerivedField
			type is Actor
			return first CurrentApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeam is a DerivedField
			type is AlphaUpper 20
			return first CurrentApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorList is a DerivedField
			type is Alpha 250
			include BuildTeamApproverActorList
			return LocalApproverList

		DerivedCurrentApproverEscalationDays is a DerivedField
			type is Numeric 6
			if (first CurrentApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHours is a DerivedField
			type is Decimal 6.2
			if (first CurrentApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99

		ReconciliationCompletionMessage is a DerivedField
			type is Alpha up to 50
			if (PeriodEndReconciliation.ReconciliationAccount.RequiresApproval)
				return SubmittedForApprovalMessage
			else
				return CompletedMessage
				
		SubmittedForApprovalMessage is a MessageField
			"ReconciliationHasBeenSubmittedForApproval"
			
		CompletedMessage is a MessageField
			"ReconciliationCompleted"
			
		DisplayCurrentApproverDesc is a ConditionalField
			type is Alpha 100
			if (Approver entered)
				Approver.PreferredSimplePresentationName
			else
				ApproverTeam.FinanceTeam.Description
				
		DisplayAssignedTo is a ConditionalField
			type is Alpha size 200
			if (!AssignedResource entered)
				FinanceTeam.Description
			else
				AssignedResource.FinanceTeamMember.TeamMember.PreferredSimplePresentationName
		
		DerivedReconciliationLevelLabel is a DerivedField
			type is Alpha 25
			if (!ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity)
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit)
					return actor.context.FinanceEnterpriseGroup.AccountingUnitLabel
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Project)
					return actor.context.FinanceEnterpriseGroup.ProjectLabel
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension1Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension2Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension3Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension4Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension5Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension6Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension7Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension8Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension9Label
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10)
					return actor.context.FinanceEnterpriseGroup.FinanceDimension10Label
					
		DerivedReconciliationLevelValue is a DerivedField
			type is AlphaUpper 26
			if (!ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity)
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit)
					return ReconciliationCodeBlock.AccountingUnit
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Project)
					return ReconciliationCodeBlock.Project
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1)
					return ReconciliationCodeBlock.FinanceDimension1
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2)
					return ReconciliationCodeBlock.FinanceDimension2
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3)
					return ReconciliationCodeBlock.FinanceDimension3
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4)
					return ReconciliationCodeBlock.FinanceDimension4
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5)
					return ReconciliationCodeBlock.FinanceDimension5
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6)
					return ReconciliationCodeBlock.FinanceDimension6
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7)
					return ReconciliationCodeBlock.FinanceDimension7
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8)
					return ReconciliationCodeBlock.FinanceDimension8
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9)
					return ReconciliationCodeBlock.FinanceDimension9
				else
				if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10)
					return ReconciliationCodeBlock.FinanceDimension10
		
		DerivedReconciliationAccountString is a DerivedField
			type is Alpha up to 70
			if (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity)
				return ReconciliationCodeBlock.AccountingEntity + "-" + ReconciliationCodeBlock.GeneralLedgerChartAccount
			else
				return ReconciliationCodeBlock.AccountingEntity + "-" + DerivedReconciliationLevelValue + "-" + ReconciliationCodeBlock.GeneralLedgerChartAccount
		
		DerivedReconciliationAccountDescription is a DerivedField
			type is Alpha up to 150
			if (LevelType.NonAccount)
				return NonAccountReconciliation
			else
			if (LevelType.Group)
				return ReconciliationGroup
			else
				return DerivedReconciliationAccountString + " " + ReconciliationCodeBlock.GeneralLedgerChartAccount.AccountDescription
		
		TotalDistributionAmount is a DerivedField
			type is like InternationalAmount
			return sum EnteredDistributionsRel.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
		
		TotalDistributionNonOffsetAmount is a DerivedField
			type is like InternationalAmount
			return sum EnteredDistributionsNonOffsetRel.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
		
		AbsoluteTotalDistributionNonOffsetAmount is a DerivedField
			type is like InternationalAmount
			if (TotalDistributionNonOffsetAmount < 0)
				return TotalDistributionNonOffsetAmount * -1
			else
				return TotalDistributionNonOffsetAmount
					
		PeriodEndDistributionPostingMessage is a MessageField 
			restricted
			"PeriodEndReconciliationDistributionPosting"
		
		DerivedLevelType is a DerivedField 
			type is Alpha 12
			if (LevelType.Account)
				return "Account"
			else
			if (LevelType.Group)
				return "Group"
			else
				return "NonAccount"
		
		HasChildrenWithDifferentAccountingEntities is a DerivedField 
			type is Boolean
			if (LevelType.Group)
				LocalAccountingEntity = first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.AccountingEntity
				if (ChildrenHasDifferentAccountingEntitiesRel exists)
					return true
				else
					return false
		
		DerivedLedgerAmountZeroForPeriods is a DerivedField 
			type is Boolean
			if (!IsAccountWithinConsolidatedGroup
			and ReconciliationPolicy entered
			and ReconciliationPolicy.ZeroLedgerAmount
			and Status < 3)
				initialize LocalLedgerAmount
				LocalLedgerPeriodCount = 1
				for each CurrentPreviousPeriodEndReconciliationRel
					if (LocalLedgerPeriodCount <= ReconciliationPolicy.ZeroLedgerAmountPeriods)
						if (IsConsolidatedGroup)
							LocalLedgerAmount += each.GroupLedgerAmount
						else
							LocalLedgerAmount += each.LedgerAmount
						LocalLedgerPeriodCount += 1
					else
						end for each
						
				if (LocalLedgerAmount = 0)
					return true
				else
					return false
				
		DerivedOutOfBalanceAmountZeroForPeriods is a DerivedField 
			type is Boolean
			if (!IsAccountWithinConsolidatedGroup
			and ReconciliationPolicy entered
			and ReconciliationPolicy.ZeroOutOfBalanceAmount
			and Status < 3)
				initialize LocalOutOfBalanceAmount
				LocalOutOfBalancePeriodCount = 1
				for each CurrentPreviousPeriodEndReconciliationRel
					if (LocalOutOfBalancePeriodCount <= ReconciliationPolicy.ZeroOutOfBalanceAmountPeriods)
						LocalOutOfBalanceAmount += each.OutOfBalance
						LocalOutOfBalancePeriodCount += 1
					else
						end for each
						
				if (LocalOutOfBalanceAmount = 0)
					return true
				else
					return false
		
		NoLedgerTransactionsExistForSpecifiedPeriods is a DerivedField 
			type is Boolean
			if (!IsAccountWithinConsolidatedGroup
			and ReconciliationPolicy entered
			and ReconciliationPolicy.NoLedgerTransactions
			and Status < 3)
				initialize LocalHasGLTransactions
				LocalGLTransactionPeriodCount = 1
				for each CurrentPreviousPeriodEndReconciliationRel
					if (LocalGLTransactionPeriodCount <= ReconciliationPolicy.NoLedgerTransactionsPeriods)
						if (IsConsolidatedGroup)
							if (!each.GroupHasGLTransactions)
								LocalGLTransactionPeriodCount += 1
							else
								LocalHasGLTransactions = true
								end for each
						else
							if (!each.HasGLTransactions)
								LocalGLTransactionPeriodCount += 1
							else
								LocalHasGLTransactions = true
								end for each
					else
						end for each
						
				if (!LocalHasGLTransactions)
					return true
				else
					return false
		
		ViewableByAuditorMessage is a MessageField
			"ViewableByAuditor"

		OpenMessage is a MessageField
			"Open_\Reconciliations"

		InProcessMessage is a MessageField
			"In_\Process_\Reconciliations"

		PendingApprovalMessage is a MessageField
			"Pending_\Approval_\Reconciliations"

		ClosedMessage is a MessageField
			"Closed_\Reconciliations"

		DerivedReconciliationStatusText is a DerivedField
			type is Alpha 50
			if (Status.Open)
				return OpenMessage
			else
			if (Status.InProcess)
				return InProcessMessage
			else
			if (Status.PendingApproval)
				return PendingApprovalMessage
			else
			if (Status.Closed)
				return ClosedMessage
		
		UnpostedTransactionsErrorMessage is a MessageField
			"GlobalLedgerHasUnpostedTransactionsForThisPeriod"

		RequiredDocumentationErrorMessage is a MessageField
			"SupportingDocumentationRequiredOn_\Reconciliation_\Details"

		DerivedClosePeriodDisplay is a StringField
			type is Alpha 8
			PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
			"-"
			PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
		
		DerivedCurrentApprovalResourceForDistribution is a DerivedField
			type is Numeric 9
			return first CurrentDistributionApprovalCodeLevelRel.Approver
			
		DerivedNextApprovalLevelForDistribution is a DerivedField
			type is Numeric 8
			LocalDistributionApprovalLevel = DistributionApprovalLevel
			include GetNextApprovalLevelForDistribution
			return LocalDistributionApprovalLevel
			
		DerivedCurrentApprovalActorForDistribution is a DerivedField
			type is Actor
			return first CurrentDistributionApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeamForDistribution is a DerivedField
			type is AlphaUpper 20
			return first CurrentDistributionApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorListForDistribution is a DerivedField
			type is Alpha 250
			include BuildTeamApproverActorListForDistribution
			return LocalApproverListForDistribution

		DerivedCurrentApproverEscalationDaysForDistribution is a DerivedField
			type is Numeric 6
			if (first CurrentDistributionApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentDistributionApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHoursForDistribution is a DerivedField
			type is Decimal 6.2
			if (first CurrentDistributionApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentDistributionApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99
				
	Relations
		GeneralLedgerTransactionRel
		    one-to-many relation to GeneralLedgerTransaction
		    Field Mapping uses ByAccount
		        related.FinanceEnterpriseGroup = ReconciliationManagementGroup
		        related.FinanceCodeBlock.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
		    Instance Selection
		        where (related.AccountingEntity = ReconciliationCodeBlock.AccountingEntity
		        and   !related.Status.Memo
		        and    related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
		        and    related.FinanceCodeBlock.Ledger = any ReconciliationAccountStructure.ReportingBasis.LedgerTopNode.ChildrenRel.Ledger
		        and   (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
		        and    related.FinanceCodeBlock.AccountingUnit = ReconciliationCodeBlock.AccountingUnit)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
		        and    related.FinanceCodeBlock.Project = ReconciliationCodeBlock.Project)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
		        and    related.FinanceCodeBlock.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
		        and    related.FinanceCodeBlock.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
		        and    related.FinanceCodeBlock.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
		        and    related.FinanceCodeBlock.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
		        and    related.FinanceCodeBlock.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
		        and    related.FinanceCodeBlock.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
		        and    related.FinanceCodeBlock.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
		        and    related.FinanceCodeBlock.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
		        and    related.FinanceCodeBlock.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9)
		        or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
		        and    related.FinanceCodeBlock.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10)))
		
		GeneralLedgerTransactionRel2
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByGeneralLedgerTotalOrder
				related.FinanceEnterpriseGroup		= ReconciliationManagementGroup
				related.AccountingEntity			= ReconciliationCodeBlock.AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				and	   related.FinanceCodeBlock.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
				and	   related.FinanceCodeBlock.Ledger = any ReconciliationAccountStructure.ReportingBasis.LedgerTopNode.ChildrenRel.Ledger
				and   !related.Status.Memo
				and   (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
				and    related.FinanceCodeBlock.AccountingUnit = ReconciliationCodeBlock.AccountingUnit)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
				and    related.FinanceCodeBlock.Project = ReconciliationCodeBlock.Project)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
				and    related.FinanceCodeBlock.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
				and    related.FinanceCodeBlock.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
				and    related.FinanceCodeBlock.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
				and    related.FinanceCodeBlock.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
				and    related.FinanceCodeBlock.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
				and    related.FinanceCodeBlock.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
				and    related.FinanceCodeBlock.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
				and    related.FinanceCodeBlock.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
				and    related.FinanceCodeBlock.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
				and    related.FinanceCodeBlock.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10)))

		UnpostedGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (related.Status < 2) 
 
 		NonAPGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "AP")
 
  		NonARGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "AR"
				and    !related.System = "BR"
				and    !related.System = "BL")

 		NonAssetGeneralLedgerTransactionRel
 			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "AM")
		
		AssetAdditionGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (related.System = "AM"
				and    related.GeneralLedgerEvent = "AA")
		
		AssetAdjustmentGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (related.System = "AM"
				and    related.GeneralLedgerEvent = "AS")
		
		AssetTransferGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (related.System = "AM"
				and    related.GeneralLedgerEvent = "AT")
				
		AssetDisposalGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (related.System = "AM"
				and    related.GeneralLedgerEvent = "DI")
								
  		NonCashAccountGeneralLedgerTransactionRel
  			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "AP"
				and    !related.System = "AR"
				and    !related.System = "CB"
				and	   !related.System = "CT")
				
  		NonRNIMNRGeneralLedgerTransactionRel
  			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "AP"
				and    !related.System = "IC"
				and    !related.System = "PO")

 		NonInventoryGeneralLedgerTransactionRel
			one-to-many relation using GeneralLedgerTransactionRel
			Instance Selection
				where (!related.System = "IC")
				
 		PeriodEndReconciliationByPeriodRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup   												= ReconciliationManagementGroup
				related.ReconciliationAccountStructure  												= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	  	    						= PeriodEndReconciliation.ReconciliationAccount
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration 						= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				
		ReconciliationsByStatusRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatus
				related.ReconciliationManagementGroup 													= ReconciliationManagementGroup 
				related.ReconciliationAccountStructure													= ReconciliationAccountStructure
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration 					 	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod 	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				related.Status					 														= Status

		AllReconciliationByStatusRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatusCount
				related.ReconciliationManagementGroup 							= ReconciliationManagementGroup
				related.Status													= Status
				related.AssignedResource.TeamMember								= AssignedResource.TeamMember 

 		OpenReconciliationsByCloseTaskRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByCloseTask
				related.ReconciliationManagementGroup 													= ReconciliationManagementGroup 
				related.CloseTask				 														= CloseTask
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.UniqueID != UniqueID
				and    related.Status < 7   
				and    !related.IsAccountWithinConsolidatedGroup) 
		
		OpenPeriodReconciliationWithinGroupRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByStatus
				related.ReconciliationManagementGroup													= ReconciliationManagementGroup
				related.ReconciliationAccountStructure													= ReconciliationAccountStructure
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration							= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.Status < 3 
				and	   related.UniqueID != UniqueID
				and    related.ParentPeriodEndReconciliation.ReconciliationAccount entered
				and	   related.ParentPeriodEndReconciliation.ReconciliationAccount = ParentPeriodEndReconciliation.ReconciliationAccount)
  		
		GeneralLedgerCompanyRel
			one-to-many relation to GeneralLedgerCompany
            Field Mapping uses ByAccountingEntity
            	related.FinanceEnterpriseGroup 	= ReconciliationManagementGroup
            	related.AccountingEntity 		= ReconciliationCodeBlock.AccountingEntity

		PayablesCompanyRel
            one-to-one relation to PayablesCompany
            Field Mapping uses symbolic key
            	related.Company = GeneralLedgerCompanyRel.Company
                
		ReceivablesCompanyRel
            one-to-one relation to ReceivableCompany
            Field Mapping uses symbolic key
            	related.Company = GeneralLedgerCompanyRel.Company
                
		PayablesAccrualCodeDetailRel
			one-to-many relation to PayablesAccrualCodeDetail
			Field Mapping uses ByCompany
				related.Company = PayablesCompanyRel.Company
			Instance Selection
				where (related.VendorGroup.FinanceEnterpriseGroup = ReconciliationManagementGroup
				and	   related.DistributionAccount.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount)
		
		ReceivablesAccrualCodeRel
			one-to-many relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company = ReceivablesCompanyRel.Company

		PayablesInvoiceDistributionRel
			one-to-many relation to PayablesInvoiceDistribution
			Field Mapping uses ByDistributionAccount
				related.Status = 9		
				related.DistributionAccount.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
			Instance Selection
				where (related.DistributionType.ExpenseAccrual	
				and	   related.DistributionAccount.ToAccountingEntity = ReconciliationCodeBlock.AccountingEntity

				and    (!related.PayablesInvoice.Status.Paid)
				and	   related.DerivedEntityCalendarPeriodTwo <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				and   (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
				and    related.DistributionAccount.AccountingUnit = ReconciliationCodeBlock.AccountingUnit)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
				and    related.DistributionAccount.Project = ReconciliationCodeBlock.Project)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
				and    related.DistributionAccount.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
				and    related.DistributionAccount.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
				and    related.DistributionAccount.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
				and    related.DistributionAccount.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
				and    related.DistributionAccount.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
				and    related.DistributionAccount.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
				and    related.DistributionAccount.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
				and    related.DistributionAccount.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
				and    related.DistributionAccount.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
				and    related.DistributionAccount.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10)))
		
		PayablesInvoiceDistributionToAccrualRel
			one-to-many relation to PayablesInvoiceDistribution
			Field Mapping uses ByDistributionAccount
				related.Status = 9	
				related.DistributionAccount.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
			Instance Selection
				where (related.DistributionType.Distribution
				and	   related.DistributionAccount.ToAccountingEntity = ReconciliationCodeBlock.AccountingEntity
				and	   related.DerivedEntityCalendarPeriodTwo <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				and   (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
				and    related.DistributionAccount.AccountingUnit = ReconciliationCodeBlock.AccountingUnit)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
				and    related.DistributionAccount.Project = ReconciliationCodeBlock.Project)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
				and    related.DistributionAccount.FinanceDimension1 = ReconciliationCodeBlock.FinanceDimension1)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
				and    related.DistributionAccount.FinanceDimension2 = ReconciliationCodeBlock.FinanceDimension2)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
				and    related.DistributionAccount.FinanceDimension3 = ReconciliationCodeBlock.FinanceDimension3)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
				and    related.DistributionAccount.FinanceDimension4 = ReconciliationCodeBlock.FinanceDimension4)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
				and    related.DistributionAccount.FinanceDimension5 = ReconciliationCodeBlock.FinanceDimension5)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
				and    related.DistributionAccount.FinanceDimension6 = ReconciliationCodeBlock.FinanceDimension6)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
				and    related.DistributionAccount.FinanceDimension7 = ReconciliationCodeBlock.FinanceDimension7)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
				and    related.DistributionAccount.FinanceDimension8 = ReconciliationCodeBlock.FinanceDimension8)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
				and    related.DistributionAccount.FinanceDimension9 = ReconciliationCodeBlock.FinanceDimension9)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
				and    related.DistributionAccount.FinanceDimension10 = ReconciliationCodeBlock.FinanceDimension10)))
						
		PayablesInvoiceAccrualReconciliationRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												= PayablesCompanyRel.Company
				related.ReconciliationSubsystemBalance.ReconciliationDate	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
				related.SystemCode 											= "AP"
			Instance Selection
				where (related.ReconciliationSubsystemBalance.AccrualCode = any PayablesAccrualCodeDetailRel.PayablesAccrualCode
				and	   related.ReconciliationSubsystemBalance.InvoiceCurrency = PayablesCompanyRel.Company.Currency)
		
		ReceivablesAccrualReconciliationRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												= ReceivablesCompanyRel.Company
				related.ReconciliationSubsystemBalance.ReconciliationDate	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
				related.SystemCode 											= "AR"
			Instance Selection
				where (related.ReconciliationSubsystemBalance.AccrualCode = any ReceivablesAccrualCodeRel.ReceivableGeneralLedgerCode
				and	   related.ReconciliationSubsystemBalance.InvoiceCurrency = ReceivablesCompanyRel.Company.Currency)
		
		ReconciliationSubsystemBalanceRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												= DerivedPeriodEndCompany	
				related.ReconciliationSubsystemBalance.ReconciliationDate	= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
			Instance Selection
				where (related.SystemCode = DerivedPeriodEndSystem)
		
		TransactionReconDetailRel
			one-to-many relation to TransactionReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= PeriodEndReconciliation.ReconciliationAccount
				
		AllPeriodEndTransReconDetailRel
			one-to-many relation to PeriodEndTransReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= PeriodEndReconciliation.ReconciliationAccount
				
		PeriodEndTransReconDetailRel
			one-to-many relation to PeriodEndTransReconDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.GeneralLedgerClosePeriod 		= PeriodEndReconciliation.GeneralLedgerClosePeriod

		SummaryPeriodEndTransReconDetailRel
			one-to-many relation to PeriodEndTransReconDetail
			Field Mapping uses BySummaryRecordsFirst
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.GeneralLedgerClosePeriod 		= PeriodEndReconciliation.GeneralLedgerClosePeriod
				related.SummaryRecord				   	= true
			
		NonSummaryPeriodEndTransReconDetailRel
			one-to-many relation to PeriodEndTransReconDetail
			Field Mapping uses BySummaryRecordsFirst
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.ReconciliationAccount	  	   	= PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.GeneralLedgerClosePeriod 		= PeriodEndReconciliation.GeneralLedgerClosePeriod
				related.SummaryRecord				   	= false
		
		MatchedTransactionReconDetailRel
			one-to-many relation using SummaryPeriodEndTransReconDetailRel
			Instance Selection
				where (!related.SelectedForMatch)
		
		GLTransactionsLoadedInPeriodReconRel
			one-to-many relation using NonSummaryPeriodEndTransReconDetailRel 
			Instance Selection
				where (related.ReconTransactionType.GeneralLedger
				and   !related.ReconMatchNumber entered
				and   !related.SelectedForMatch)
		
		InterfacedTransactionsLoadedInPeriodReconRel
			one-to-many relation using NonSummaryPeriodEndTransReconDetailRel
			Instance Selection
				where (related.ReconTransactionType.InterfacedTransaction
				and   !related.ReconMatchNumber entered
				and   !related.SelectedForMatch)
		
		OpenCashLedgerTransactionRel	
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup			= ReconciliationManagementGroup
				related.CashManagementAccount		= PeriodEndReconciliation.ReconciliationAccount.CashManagementAccount
				related.Status 						= 1 
				related.CashCode					= PeriodEndReconciliation.ReconciliationAccount.CashManagementAccount.CashCode

		ReconAccountGroupPeriodRel
			one-to-one relation to ReconAccountGroupPeriod
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 	= ReconciliationAccountStructure
				related.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
				related.ReconciliationAccountGroup		= TopLevelAccountGroup

		PeriodDetailsRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup			 = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure			 = ReconciliationAccountStructure
				related.ReconciliationAccount					 = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration			 = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconciliationDetail)

		PeriodDetailsWithAttachmentsRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconciliationDetail
				and    related.HasAttachment)

		PeriodDetailsWithReportDocumentRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconciliationDetail
				and    related.ReportDocument entered)
				
		PeriodReconcilingDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.ReconcilingItem)

		PeriodAmortizedDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.DetailType.Amortization
				and   !related.ExcludeAmortizationDetail
				and   (related.ReconciliationDetail.Active
                or     related.HasPeriodEndDistribution) 
				and    related.CatchUpPeriod.GeneralLedgerCalendarPeriod <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)

		UnpostedPeriodAmortizedDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration	         = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where  (related.DetailType.Amortization
				and    !related.ExcludeAmortizationDetail
				and	    related.ReconciliationDetail.Active
				and     related.PeriodAmount entered	
				and    !related.HasPeriodEndDistribution 
				and     related.CatchUpPeriod.GeneralLedgerCalendarPeriod <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)

		ReconciliationDetailRel
			one-to-many relation to ReconciliationDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.DetailType.ReconciliationDetail)

		ReconcilingItemRel
			one-to-many relation to ReconciliationDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.DetailType.ReconcilingItem)

		ReconciliationAmortizationOutOfBalanceRel
			one-to-many relation to ReconciliationDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.DetailType.Amortization
				and    related.AmortizationDetailsOutOfBalance)		
				
		UnpostedDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (!related.Status.Posted
				and    !related.OffsetDistribution)

		EnteredAmortizationDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered
				and    related.CreatedFromAmortization
				and    related.ReconciliationPeriodDetail entered)

		EnteredDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered)
		
		EnteredDistributionsNonOffsetRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered
				and !related.OffsetDistribution)
				
		PendingApprovalDistributionsOffsetRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.PendingApproval
				and related.OffsetDistribution)
		
		EnteredDistributionsOffsetRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered
				and related.OffsetDistribution)
						
		PendingApprovalDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.PendingApproval)
						
		ZeroAmountDistributionRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered
				and    related.DistributionAmount.CurrencyAmount=0)

		EnteredDistributionsForGroupRel
			one-to-many relation to PeriodEndDistribution
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.PeriodEndReconciliation			= PeriodEndReconciliation children.PeriodEndReconciliation
			Instance Selection
				where (related.Status.Entered)
				
		ReleasedAmortizationDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Released
				and    related.CreatedFromAmortization
				and    related.ReconciliationPeriodDetail entered)
				
		ReleasedDistributionsRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Released)

		ReleasedDistributionsForGroupRel
			one-to-many relation to PeriodEndDistribution
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.PeriodEndReconciliation			= PeriodEndReconciliation children.PeriodEndReconciliation
			Instance Selection
				where (related.Status.Released)
					
		BankStatementRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDescendDate
				related.CashManagementGroup		= ReconciliationManagementGroup
				related.CashManagementAccount	= PeriodEndReconciliation.ReconciliationAccount.CashManagementAccount
			Instance Selection
				where (related.StatementDate <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
				and	   related.StatementType.PreviousDay)

		PeriodEndReconciliationRel
    		one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup  					= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= PeriodEndReconciliation.ReconciliationAccount
				
		CurrentPreviousPeriodEndReconciliationRel
    		one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup  					= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)
				
		PreviousPeriodEndReconciliationRel
    		one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup  					= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod < PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)

		PreviousYearEndPeriodRel
    		one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup  					= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Year < PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Year)

		PeriodYearToDateRel
    		one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup  					= ReconciliationManagementGroup
				related.ReconciliationAccountStructure 					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Year = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Year
				and    related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod <= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)

		CurrentApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= ApprovalLevel

		ApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= ApprovalCode

		LocalApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= LocalApprovalLevel
		
		FinanceTeamMembersFromCurrentApprovalLevelRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.FinanceTeam				= first CurrentApprovalCodeLevelRel.ApprovalTeam
		
		CurrentDistributionApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= DistributionApprovalCode
				related.ApprovalLevel			= DistributionApprovalLevel

		DistributionApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= DistributionApprovalCode

		LocalDistributionApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= DistributionApprovalCode
				related.ApprovalLevel			= LocalDistributionApprovalLevel
		
		FinanceTeamMembersFromCurrentApprovalLevelDistributionRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.FinanceTeam				= first CurrentDistributionApprovalCodeLevelRel.ApprovalTeam
				
		MyTeamsRel 
			one-to-many relation to FinanceTeamMember
			Field Mapping uses ByFinanceTeam
				related.FinanceEnterpriseGroup		 = ReconciliationManagementGroup
				related.FinanceTeam  				 = FinanceTeam
				related.FinanceTeamMember.TeamMember = actor.agent(Employee).Employee			

		ClosePeriodRel
			one-to-one relation to ClosePeriod
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.ClosePeriod.Year		= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
				related.ClosePeriod.Period		= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
				
		ClosePeriodTaskRel
			one-to-many relation to ClosePeriodTask
			Field Mapping uses ByCreatedFrom
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.CreatedFrom				= CloseTask
				related.ClosePeriod.Year		= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
				related.ClosePeriod.Period		= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
			Instance Selection
				where (related.TaskLevel.Detail)

		ClosePeriodTaskOpenInSamePeriodRel
			one-to-many relation to ClosePeriodTask
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.ClosePeriod.Year		= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
				related.ClosePeriod.Period		= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
			Instance Selection
				where (related.OpenPeriodOpenTask)

		CloseTaskForClosePeriodTaskOpenInSamePeriodRel
			one-to-many relation to CloseTask
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.CloseTask				= ClosePeriodTaskOpenInSamePeriodRel.CreatedFrom

		ClosePeriodTaskScheduledOrOpenInSamePeriodRel
			one-to-many relation to ClosePeriodTask
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.ClosePeriod.Year		= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
				related.ClosePeriod.Period		= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
			Instance Selection
				where (related.ScheduledPeriodTask
				or     related.OpenPeriodOpenTask)

		CloseTaskForClosePeriodTaskScheduledOrOpenInSamePeriodRel
			one-to-many relation to CloseTask
			Field Mapping uses symbolic key
				related.CloseManagementGroup	= ReconciliationManagementGroup
				related.CloseTask				= ClosePeriodTaskScheduledOrOpenInSamePeriodRel.CreatedFrom

		ReconciliationAccountRel
			one-to-one relation to ReconciliationAccount
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup   = ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= PeriodEndReconciliation.ReconciliationAccountStructure
				related.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount

		PeriodEndAccountCommentRel
			one-to-many relation to ReconciliationAccountComment
			Field Mapping uses symbolic key
 				related.ReconciliationManagementGroup   = ReconciliationManagementGroup
				related.ReconciliationAccountStructure  = ReconciliationAccountStructure
				related.ReconciliationAccount	  	    = PeriodEndReconciliation.ReconciliationAccount
 				related.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
 				related.GeneralLedgerClosePeriod	    = PeriodEndReconciliation.GeneralLedgerClosePeriod
			Instance Selection
				where (!HasAuditorRole
				or 	  (HasAuditorRole
				and    related.ReconCommentType.All))

		ReconciliationAccountCommentRel
			one-to-many relation to ReconciliationAccountComment
			Field Mapping uses symbolic key
 				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = PeriodEndReconciliation.ReconciliationAccount
			Instance Selection
				where (!related.GeneralLedgerClosePeriod entered
				and   (!HasAuditorRole
				or 	  (HasAuditorRole
				and    related.ReconCommentType.All)))
				
		HideForAuditorRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor					= actor
 				related.ActorRole.Role			= ReconciliationManagementGroup.AuditorRole	
 				
		ReconciliationReconcilerRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor					= LocalActor
 				related.ActorRole.Role			= ReconciliationManagementGroup.ReconcilerRole
		
		MyApproverReconTeamRel 
			one-to-many relation to FinanceTeamMember
			Field Mapping uses ByFinanceTeam
				related.FinanceEnterpriseGroup		 = ReconciliationManagementGroup
				related.FinanceTeam  				 = ApproverTeam
				related.FinanceTeamMember.TeamMember = actor.agent(Employee).Employee	

		GeneralLedgerPeriodShadowRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = ReconciliationManagementGroup
				related.GeneralLedgerCalendar       = ReconciliationAccountStructure.ReportingBasis.GeneralLedgerCalendar
				related.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.SummaryPeriodType.Month)
		
		GeneralLedgerPeriodShadowPriorPeriodRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses BySummaryPeriodType2
				related.FinanceEnterpriseGroup      = ReconciliationManagementGroup
				related.GeneralLedgerCalendar       = ReconciliationAccountStructure.ReportingBasis.GeneralLedgerCalendar
				related.SummaryPeriodType			= 3 
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod < PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				and    related.SummaryGeneralLedgerCalendarPeriod != DerivedSummaryGeneralLedgerCalendarPeriod)

		PeriodEndReconciliationChildrenRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.PeriodEndReconciliation			= PeriodEndReconciliation children.PeriodEndReconciliation
		
		PendingApprovalClosedPeriodEndReconciliationChildrenRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.PeriodEndReconciliation			= PeriodEndReconciliation children.PeriodEndReconciliation
			Instance Selection
				where (related.Status > 1) 

		ChildrenHasGLTransactionsRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.HasGLTransactions)
				
		ChildrenHasOtherRequiredFieldsRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.HasOtherRequiredFields)
		
		ChildrenHasDifferentAccountingEntitiesRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.ReconciliationCodeBlock.AccountingEntity != LocalAccountingEntity)
		
		ChildrenHasUnpostedGeneralLedgerTransactionRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.HasUnpostedGLTransactions)

		EnteredDistributionsClosedPeriodRel is a PeriodEndDistribution set
			Instance Selection
				where (related.Status.Entered
				and related.IsPeriodClosed)
 		
 		AccountingEntityRel
		    one-to-one relation to AccountingEntity
		    Field Mapping uses symbolic key
		        related.FinanceEnterpriseGroup = ReconciliationManagementGroup
		        related.AccountingEntity       = ReconciliationCodeBlock.AccountingEntity
        
        ChildrenHasAccountingEntityApprovalRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.HasChildrenAccountingEntityApprovalAmount)
				
		ChildrenHasDistributionApprovalRel
			one-to-many relation using PeriodEndReconciliationChildrenRel
			Instance Selection
				where (related.CanManualApproveRejectDistributionsForAccount)
		
		ApprovalCodeResourceByResourceRel					
			one-to-one relation to ApprovalCodeResource
			Field Mapping uses ByApprover
				related.FinanceEnterpriseGroup	= ReconciliationManagementGroup
				related.ApprovalCode			= LocalApprovalCode
				related.Approver				= LocalApprover
											
	Cube Relations
		ReconciliationCubeRel
			cell relation to GeneralLedgerTotal
			dynamic mapping is ReconciliationCubeMap
        	Dimension Mapping
				related.Scenario					 				 = ReconciliationManagementGroup.FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	 				 = ReconciliationAccountStructure.ReportingBasis.LedgerTopNode
				related.AccountingEntity 							 = ReconciliationCodeBlock.AccountingEntity
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
			dynamic preload measures are DynamicMeasure

		ReconciliationPriorPeriodCubeRel
			cell relation to GeneralLedgerTotal
			dynamic mapping is ReconciliationPriorPeriodCubeMap
        	Dimension Mapping
				related.Scenario					 				 = ReconciliationManagementGroup.FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	 				 = ReconciliationAccountStructure.ReportingBasis.LedgerTopNode
				related.AccountingEntity 							 = ReconciliationCodeBlock.AccountingEntity
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = ReconciliationCodeBlock.GeneralLedgerChartAccount
			dynamic preload measures are DynamicMeasure
			
	Sets 
		PendingApproval
			Sort Order
				Status
				Approver
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				PeriodEndReconciliation.SequenceNumber
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				PeriodEndReconciliation.ReconciliationAccount
				
		ByPeriod
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.SequenceNumber
		
		ByPeriodCodeBlock
			duplicates
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
	            PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				ReconciliationCodeBlock.AccountingEntity
				ReconciliationCodeBlock.GeneralLedgerChartAccount
				ReconciliationCodeBlock.AccountingUnit
	            ReconciliationCodeBlock.Project
	            DimensionCodeValue
				ReconciliationGroup
				
		ByNonAccountReconciliation
			duplicates
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				NonAccountReconciliation
						
		ByAccountPeriodDescending
			Sort Order
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod	descending
				PeriodEndReconciliation.SequenceNumber

		ByStatus
			Sort Order
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				Status
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.SequenceNumber
				
		ByStatusCount
			duplicates
			Sort Order
				ReconciliationManagementGroup
				Status
				AssignedResource

 		ByCloseTask
 			Sort Order
				ReconciliationManagementGroup  
				CloseTask		
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				ReconciliationAccountStructure
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.SequenceNumber

		ByAssignedResource
			Sort Order
				ReconciliationManagementGroup  
				AssignedResource
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				PeriodEndReconciliation.ReconciliationAccount
				ReconciliationAccountStructure
				PeriodEndReconciliation.SequenceNumber

		ByReconciliationAccountGroup
			duplicates
			Sort Order
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				TopLevelAccountGroup
 				ReconciliationAccountGroup

 		
 		ByUniqueID
			Sort Order
				UniqueID

		ByReconciliationIsOutOfBalance
            Sort Order
                ReconciliationManagementGroup  
                ReconciliationAccountStructure
                ReconciliationIsOutOfBalance        
                PeriodEndReconciliation.GeneralLedgerCloseConfiguration
                PeriodEndReconciliation.GeneralLedgerClosePeriod
                PeriodEndReconciliation.ReconciliationAccount
                PeriodEndReconciliation.SequenceNumber 
		
		ByLevelType
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				LevelType
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.SequenceNumber
				
    Conditions
		ReconForMyApprovalTeam
			restricted
			when (MyApproverReconTeamRel exists)
			
		CanStartReconciliation
			restricted
			when  (Status.Open
			and   (CloseTask !entered
			or    (CloseTask entered
			and    ClosePeriodTaskRel exists
			and    first ClosePeriodTaskRel.ScheduledInProcess)))

		StartReconciliationLateValid
			restricted
			when (Status.Open
			and   IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			and   CloseTask entered
			and   ClosePeriodTaskRel exists
			and   first ClosePeriodTaskRel.StartingLate)
			
		StartReconciliationValid
			restricted
			when (Status.Open
			and   IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			and  (CloseTask !entered
			or  ((CloseTask entered
			and   (!ClosePeriodRel exists
			or     ClosePeriodRel.CloseManagementStatus.Unscheduled)
			or   (ClosePeriodTaskRel exists
			and   !first ClosePeriodTaskRel.StartingLate)))))
			
		ShowSelectStatusOpenActiveDetailTasks
			restricted
			when (Status.Open
			and  (!ClosePeriodRel exists
			or    ClosePeriodRel.CloseManagementStatus.Unscheduled))

		ShowSelectStatusOpenSamePeriodScheduledOrOpen
			restricted
			when (Status.Open
			and  (ClosePeriodRel.CloseManagementStatus.Scheduled
			or    ClosePeriodRel.CloseManagementStatus.Open))

		ShowSelectStatusInProcess
			restricted
			when (Status.InProcess)

		ShowNoSelectStatusPendingApprovalOrClosed
			restricted
			when (Status.PendingApproval
			or    Status.Closed)

 		CompleteReconciliationLateValid
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			and   CloseTask entered
			and   first ClosePeriodTaskRel.ClosingLate)
			
		CompleteReconciliationValid
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			and  (CloseTask !entered
			or   !first ClosePeriodTaskRel.ClosingLate))
		
    	ReconciliationCanBeUpdated
    		restricted
    		when (Status.Open
    		or    Status.InProcess)

    	HasPeriodEndTransReconDetails
    		restricted
    		when (PeriodEndTransReconDetailRel exists)
    	
    	CanRestoreDetailTransactionReconciliation
    		restricted
    		when (HasPeriodEndTransReconDetails
    		and   ReconciliationCanBeUpdated)
    			
    	HasInactiveResourcesOnApprovalLevels
    		restricted
    		when (!ApprovalCode.HasInactiveResources)

		HasUnpostedGLTransactions
			restricted
			when (UnpostedGeneralLedgerTransactionRel exists)

		GroupHasUnpostedGLTransactions
			restricted
			when (IsConsolidatedGroup
			and	  ChildrenHasUnpostedGeneralLedgerTransactionRel exists)
			
		HasUnpostedPeriodEndDistributions
			restricted
			when (UnpostedDistributionsRel exists)

		HasUnpostedGroupPeriodEndDistributions
			restricted
			when (UnpostedGroupDistributionAmount entered)
			
		HasAmortizationDetails
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid
			and   PeriodAmortizedDetailRel exists)

		HasUnpostedPeriodAmortizationDetails
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid
			and   UnpostedPeriodAmortizedDetailRel exists)

		HasEnteredAmortizationDistributions
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid
			and   EnteredAmortizationDistributionsRel exists)

		HasReleasedAmortizationDistributions
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid
			and   ReleasedAmortizationDistributionsRel exists)
			
		HasUnreleasedDistributions
			restricted
			when (EnteredDistributionsRel exists)
			
		HasReleasedDistributions
			restricted
			when ((LevelType.Account
			and    ReleasedDistributionsRel exists)
			or	  (IsConsolidatedGroup
			and	   ReleasedDistributionsForGroupRel exists))
						
		HasUnpostedBankStatementDistributions
			restricted
			when (UnpostedBankStatementDistributionsAmount entered)
		
		HasUnpostedGroupBankStatementDistributions
			restricted
			when (UnpostedGroupBankStatementDistributionsAmount entered)
			
		RejectReconReasonCodeRequired
			restricted
			when (ReconciliationManagementGroup.RejectReconReasonCodeRequired)

		ReopenReconciliationReasonCodeRequired
			restricted
			when (ReconciliationManagementGroup.ReopenReconReasonCodeRequired
			or   (first ClosePeriodTaskRel.TaskStatus.Closed
			and   ReconciliationManagementGroup.CloseManagementGroup.ReopenTaskReasonCodeRequired))

		HasAssignedAccountGroup
			restricted
			when (ReconciliationAccountGroup entered)

		HasParent
			restricted
			when (ParentPeriodEndReconciliation.ReconciliationAccount entered)
			
		HasChild
    		restricted
			when (PeriodEndReconciliation children exist)
	
    	GroupWithChildren
    		restricted
    		when (LevelType.Group
    		and   HasChild)
    	
    	GroupWithNoChildren
    		restricted
    		when (LevelType.Group
    		and   !HasChild)
    	
    	IsConsolidatedGroup
    		restricted
    		when (LevelType.Group
    		and   ReconciliationGroupMethod.Consolidated)
    		
    	IsIndependentGroup
    		restricted
    		when (LevelType.Group
    		and   ReconciliationGroupMethod.Independent)
    		
    	IsAccountWithinGroup 
    		restricted
    		when (LevelType.Account
    		and   ParentPeriodEndReconciliation.ReconciliationAccount entered)
    	
    	IsAccountWithinConsolidatedGroup
    		restricted
    		when (LevelType.Account
    		and   ParentPeriodEndReconciliation.ReconciliationAccount entered
    		and   ParentPeriodEndReconciliation.ReconciliationGroupMethod.Consolidated)
    		
    	IsAccountWithinIndependentGroup
    		restricted
    		when (LevelType.Account
    		and   ParentPeriodEndReconciliation.ReconciliationAccount entered
    		and   ParentPeriodEndReconciliation.ReconciliationGroupMethod.Independent)
    	
    	IsIndependentGroupOrAccountWithinIndependentGroup
    		restricted
    		when (IsIndependentGroup
    		or	  IsAccountWithinIndependentGroup)
    	
    	IsConsolidatedGroupOrAccountWithinConsolidatedGroup
    		restricted
    		when (IsConsolidatedGroup
    		or	  IsAccountWithinConsolidatedGroup)
    	
    	IsAccountWithinIndependentGroupInOpenStatus
    		restricted
    		when (IsAccountWithinIndependentGroup
			and	  ParentPeriodEndReconciliation.Status < 3) 
    				
    	IsStandaloneAccount
    		restricted
    		when (LevelType.Account
    		and  !ParentPeriodEndReconciliation.ReconciliationAccount entered 
			and  !ParentPeriodEndReconciliation.GeneralLedgerCloseConfiguration entered
			and  !ParentPeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod entered
			and  !ParentPeriodEndReconciliation.SequenceNumber entered)
    	
    	IsGroupOrStandalone 
    		restricted
			when (LevelType.Group
			or	  IsStandaloneAccount)
		
		IsGroupStandaloneOrNonAccount 
			restricted
			when (LevelType.Group
			or	  IsStandaloneAccount
			or	  LevelType.NonAccount)
				
		IsConsolidatedGroupOrStandalone
			restricted
			when (IsConsolidatedGroup
			or	  IsStandaloneAccount)
			
		IsConsolidatedGroupStandaloneOrNonAccount
			restricted
			when (IsConsolidatedGroup
			or	  IsStandaloneAccount
			or	  LevelType.NonAccount)
		
		IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			restricted
			when (IsConsolidatedGroup
			or	  IsStandaloneAccount
			or	  LevelType.NonAccount
			or	  IsAccountWithinIndependentGroup)
		
		IsConsolidatedGroupStandaloneOrAccountWithinIndependentGroup
			restricted
			when (IsConsolidatedGroup
			or	  IsStandaloneAccount
			or	  IsAccountWithinIndependentGroup)
				
		ReconciliationAccountIsGroup
    		restricted
    		when (PeriodEndReconciliation.ReconciliationAccount.LevelType.Group) 
    	
		ReconciliationAccountIsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
							
		RequiresDetailDocumentations
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.RequireSupportingDoco
			and   !PeriodDetailsWithAttachmentsRel exists
			and   !PeriodDetailsWithReportDocumentRel exists)

		HasSupportingDocumentation
			restricted
			when (PeriodDetailsWithAttachmentsRel exists
			or    PeriodDetailsWithReportDocumentRel exists)
			
		HasAccountComments
			restricted
			when (ReconciliationAccountCommentRel exists)

		HasAccountCommentsAndAttachments
			restricted
			when (ReconciliationAccountCommentRel exists)

		FinancialFormEntered
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.FinancialForm entered)

		ReconciliationsForMyTeam
			restricted
			when (MyTeamsRel exists)
			
		HideForAuditor
			restricted
			when (!HideForAuditorRel exists)
		
		HasAuditorRole
			restricted
			when (HideForAuditorRel exists)
		
		DisplayOtherReconciliations
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup
			and   !HasAuditorRole)

		CanRemoveFromAuditorView
			restricted
			when (ViewableByAuditor
			and  !ParentPeriodEndReconciliation.ReconciliationAccount entered 
			and  !ParentPeriodEndReconciliation.GeneralLedgerCloseConfiguration entered
			and  !ParentPeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod entered
			and  !ParentPeriodEndReconciliation.SequenceNumber entered)
		
		CanAddToAuditorView
			restricted
			when (!ViewableByAuditor
			and   !ParentPeriodEndReconciliation.ReconciliationAccount entered 
			and   !ParentPeriodEndReconciliation.GeneralLedgerCloseConfiguration entered
			and   !ParentPeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod entered
			and   !ParentPeriodEndReconciliation.SequenceNumber entered)
			
		ShowReconciliationDetailsTab
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
			
		ShowReconcilingItemsTab
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
			
		ShowNonCashAccount
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Cash
			and   LevelType.Account)
		
		ShowAccrualCodesTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.PayablesAccrual
			and   LevelType.Account)
			
		ShowNonAPJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.PayablesAccrual
			and   LevelType.Account)
			
		ShowNonARJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Receivables
			and   LevelType.Account)
			
		ShowNonAssetJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
			and   LevelType.Account)
			
		ShowNonRNIJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.ReceivedNotInvoiced
			and   LevelType.Account)	
	
		ShowNonMNRJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.MatchedNotReceived
			and   LevelType.Account)		
	
		ShowNonInventoryJournalTransactionsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Inventory
			and   LevelType.Account)	

		ShowInvoicePostedToAccrualAccountTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.PayablesAccrual
			and   LevelType.Account)	

		ShowAssetAmountsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
			and   LevelType.Account)				

		ShowAssetGroupAmountsTab
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
			and   IsConsolidatedGroup)
			
		ShowLedgerTransactionsTab
			restricted
			when (HideForAuditor
			and   LevelType.Account)
		
		ShowDistributionsTab
			restricted
			when (HideForAuditor
			and   LevelType.Account)
		
		ShowCommentsTab
			restricted
			when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
		
		ShowApprovalCommentsTab
			restricted
			when (HideForAuditor
			and   IsGroupStandaloneOrNonAccount
			and	  ReconciliationReasonCodeUsage set exists)

		ShowCreateAmortizationButton
			restricted
			when (LevelType.Account
			and	  PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Prepaid)
		
		InactiveAccount
			restricted
			when (ReconciliationCodeBlock entered
			and   !ReconciliationCodeBlock.GeneralLedgerChartAccount.Active)

		IsFirstReconciliationByStatus 
			restricted
			when (first ReconciliationsByStatusRel.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			and   first ReconciliationsByStatusRel.PeriodEndReconciliation.ReconciliationAccount = PeriodEndReconciliation.ReconciliationAccount)
		
		AccountingEntityOtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
			
		AccountingUnitOtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
			and  (ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		ProjectOtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension1OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension2OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension3OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension4OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension5OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension6OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension7OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension8OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension9OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension10Required))
		
		Dimension10OtherRequiredFields
			restricted
			when (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
			and  (ReconciliationManagementGroup.AccountingUnitRequired
			or 	  ReconciliationManagementGroup.ProjectRequired
			or 	  ReconciliationManagementGroup.FinanceDimension1Required
			or 	  ReconciliationManagementGroup.FinanceDimension2Required
			or 	  ReconciliationManagementGroup.FinanceDimension3Required
			or 	  ReconciliationManagementGroup.FinanceDimension4Required
			or 	  ReconciliationManagementGroup.FinanceDimension5Required
			or 	  ReconciliationManagementGroup.FinanceDimension6Required
			or 	  ReconciliationManagementGroup.FinanceDimension7Required
			or 	  ReconciliationManagementGroup.FinanceDimension8Required
			or 	  ReconciliationManagementGroup.FinanceDimension9Required))
		
		HasOtherRequiredFields
			restricted
			when (AccountingEntityOtherRequiredFields
			or	  AccountingUnitOtherRequiredFields
			or	  ProjectOtherRequiredFields
			or	  Dimension1OtherRequiredFields
			or	  Dimension2OtherRequiredFields
			or	  Dimension3OtherRequiredFields
			or	  Dimension4OtherRequiredFields
			or	  Dimension5OtherRequiredFields
			or	  Dimension6OtherRequiredFields
			or	  Dimension7OtherRequiredFields
			or	  Dimension8OtherRequiredFields
			or	  Dimension9OtherRequiredFields
			or	  Dimension10OtherRequiredFields)
														
		CanReleaseOtherRequiredFields
			restricted
			when (((LevelType.Account
			and    EnteredDistributionsRel exists
			and    HasOtherRequiredFields)
			or    (IsConsolidatedGroup
			and    EnteredDistributionsForGroupRel exists
			and    ChildrenHasOtherRequiredFieldsRel exists))
			and    !ZeroAmountDistributionRel exists)

		CanReleaseDistributions
			restricted
			when (((LevelType.Account
			and    EnteredDistributionsRel exists
			and    !HasOtherRequiredFields)
			or    (IsConsolidatedGroup
			and    EnteredDistributionsForGroupRel exists
			and    !ChildrenHasOtherRequiredFieldsRel exists))
			and    !ZeroAmountDistributionRel exists)
		
		RequireAccountingUnit
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
			and	  ReconciliationManagementGroup.AccountingUnitRequired)
		
		RequireProject
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Project
			and	  ReconciliationManagementGroup.ProjectRequired)
		
		RequireFinanceDimension1
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
			and	  ReconciliationManagementGroup.FinanceDimension1Required)	
		
		RequireFinanceDimension2
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
			and	  ReconciliationManagementGroup.FinanceDimension2Required)
		
		RequireFinanceDimension3
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
			and	  ReconciliationManagementGroup.FinanceDimension3Required)
			
		RequireFinanceDimension4
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
			and	  ReconciliationManagementGroup.FinanceDimension4Required)
			
		RequireFinanceDimension5
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
			and	  ReconciliationManagementGroup.FinanceDimension5Required)
			
		RequireFinanceDimension6
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
			and	  ReconciliationManagementGroup.FinanceDimension6Required)
			
		RequireFinanceDimension7
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
			and	  ReconciliationManagementGroup.FinanceDimension7Required)
		
		RequireFinanceDimension8
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
			and	  ReconciliationManagementGroup.FinanceDimension8Required)
		
		RequireFinanceDimension9
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
			and	  ReconciliationManagementGroup.FinanceDimension9Required)
			
		RequireFinanceDimension10
			restricted
			when (!ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
			and	  ReconciliationManagementGroup.FinanceDimension10Required)
		
		CanManualApproveReject
			restricted
			when (Status.PendingApproval
			and	  IsGroupStandaloneOrNonAccount) 
		
		CanManualApproveRejectDistributions
			restricted
			when (CanManualApproveRejectDistributionsForAccount
			or CanManualApproveRejectDistributionsForGroup)
		
		CanManualApproveRejectDistributionsForAccount
			restricted
			when (PendingApprovalDistributionsRel exists)
			
		CanManualApproveRejectDistributionsForGroup
			restricted
			when (ChildrenHasDistributionApprovalRel exists)
			
		GroupHasGLTransactions
 			restricted
 			when (IsConsolidatedGroup
 			and   ChildrenHasGLTransactionsRel exists)
		
		HasGLTransactions
 			restricted
 			when (GeneralLedgerTransactionRel exists)
 			
		ShowStatusAlert 
			restricted
			when (Status.Open
			and	  ReconciliationPolicy entered
			and   ReconciliationPolicy.NoLedgerTransactions
			and	  !NoLedgerTransactionsExistForSpecifiedPeriods)
		
		CanExecuteReconciliationPolicies
			restricted
			when (ReconciliationPolicy entered
			and   ReconciliationCanBeUpdated
			and   IsConsolidatedGroupStandaloneOrAccountWithinIndependentGroup)
		
		ShowDetailReconciliationNav
			restricted
			when (HideForAuditor
			and   PeriodEndReconciliation.ReconciliationAccount.AccountSetupForDetailReconciliations
			and   !HasPeriodEndTransReconDetails)
		
		HasMatchedTransactions 
			restricted
			when (MatchedTransactionReconDetailRel exists)
		
		ListOverListManualReconView
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ListOverListManualReconView)
		
		ReconciliationAccountPurposeEntered
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.Purpose entered)
		
		ResourceNotAssignedForReopen
			restricted
			when (!AssignedResource.TeamMember entered
			and   !PeriodEndReconciliation.ReconciliationAccount.AssignedResource.TeamMember entered)
		
		CanUpdateReconciliationDetails
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
			and	  IsConsolidatedGroupStandaloneOrAccountWithinIndependentGroup
			and  !Status.Closed
			and   CalculatedAssetEndingBalance != ReconciliationDetailAmount)
					
		HighPriority
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.Priority.High)
		
		HighRisk
			restricted
			when (PeriodEndReconciliation.ReconciliationAccount.Risk.High)
		
		CanReassign
			restricted
			when (IsGroupStandaloneOrNonAccount
			and   Status < 3) 
	
		IsOutOfBalance
			restricted
			when (OutOfBalance != 0)
	
		IsValidForActorContext			
			restricted
			when (ReconciliationManagementGroup = actor.context.FinanceEnterpriseGroup)
		
		HasAccountApproval
			restricted
			when(!ReconciliationCodeBlock.AccountingEntity.JournalApproval.None
			and AbsoluteTotalDistributionNonOffsetAmount > ReconciliationCodeBlock.AccountingEntity.JournalApprovalAmount)
		
		HasChildrenAccountingEntityApprovalAmount
 			restricted
 			when (AccountingEntityRel exists
 			and !AccountingEntityRel.JournalApproval.None
 			and AbsoluteTotalDistributionNonOffsetAmount > ReconciliationCodeBlock.AccountingEntity.JournalApprovalAmount)
 		
 		HasChildrenApprovalAmount
 			restricted
 			when (ChildrenHasAccountingEntityApprovalRel exists)
 		
 		HasDistributionApproval
 			restricted
 			when(HasAccountApproval
 			or HasChildrenApprovalAmount)
 				
	Field Rules
    	Description
    		initial value is PeriodEndReconciliation.ReconciliationAccount.Description
			default to PeriodEndReconciliation.ReconciliationAccount.Description
			
    	PeriodEndReconciliation.GeneralLedgerCloseConfiguration
			initial value is PeriodEndReconciliation.ReconciliationAccount.CloseConfiguration
			default to PeriodEndReconciliation.ReconciliationAccount.CloseConfiguration
		
		CloseTask
			constraint (CloseTask.TaskLevel.Detail)
				"CloseTaskMustBeADetailLevelTask"

			if (ClosePeriodRel.CloseManagementStatus.Scheduled
			or  ClosePeriodRel.CloseManagementStatus.Open)
				constraint (ClosePeriodTaskRel exists)
					"CloseTaskDoesNotExistForThePeriod<DerivedClosePeriodDisplay>"
				constraint (first ClosePeriodTaskRel.ScheduledInProcess)
					"CloseTaskMustBeInA_ScheduledOr_In_ProcessStatusForThePeriod"
				if (Status.InProcess)
					constraint (ClosePeriodRel.CloseManagementStatus.Open)
						"ClosePeriodMustBeOpenForWork"
					if (first ClosePeriodTaskRel.TaskStatus.Scheduled)
						if (first ClosePeriodTaskRel.StartingLate)
							invoke StartWorkLate ClosePeriodTaskRel
						else
							invoke StartWork ClosePeriodTaskRel

			if (LevelType.Group) 
				invoke FastUpdate PeriodEndReconciliation children
					invoked.CloseTask = CloseTask
					
    	FinanceTeam
    		initial value is PeriodEndReconciliation.ReconciliationAccount.FinanceTeam
    		default to PeriodEndReconciliation.ReconciliationAccount.FinanceTeam
 			if (AssignedResource entered)
				default to AssignedResource.FinanceTeam
				required
					"MustSelectATeamWhenTeamMemberEntered"
    		if (LevelType.Group 
			and FinanceTeam changed)
				if (IsIndependentGroup
				and PendingApprovalClosedPeriodEndReconciliationChildrenRel exists)
					confirmation required
						"AllAccountsAreNotInAnOpenOrInProcessStatus;WouldYouLikeToContinue?"
				invoke FastUpdate PeriodEndReconciliation children
					invoked.FinanceTeam = FinanceTeam
					
		AssignedResource		
			initial value is PeriodEndReconciliation.ReconciliationAccount.AssignedResource
				when (!LocalTeamMemberOverridden)   
			if (!LocalTeamMemberOverridden)
				default to PeriodEndReconciliation.ReconciliationAccount.AssignedResource
			if (LevelType.Group 
			and AssignedResource changed)
				if (IsIndependentGroup
				and PendingApprovalClosedPeriodEndReconciliationChildrenRel exists)
					confirmation required
						"AllAccountsAreNotInAnOpenOrInProcessStatus;WouldYouLikeToContinue?"
				invoke FastUpdate PeriodEndReconciliation children
					invoked.AssignedResource = AssignedResource
					
		TopLevelAccountGroup
			if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountGroup.ParentAccountGroup entered)
				force default to PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountGroup.ParentAccountGroup
			else
				force default to PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountGroup
			
		ReconciliationAccountGroup
			force default to PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountGroup
			if (LevelType.Group 
			and ReconciliationAccountGroup changed)
				invoke FastUpdate PeriodEndReconciliation children
					invoked.ReconciliationAccountGroup = ReconciliationAccountGroup
			
		ReconciliationPolicy
			default to PeriodEndReconciliation.ReconciliationAccount.ReconciliationPolicy

		ReconciliationCodeBlock
			force default to PeriodEndReconciliation.ReconciliationAccount.ReconciliationCodeBlock

		DimensionCodeValue
			force default to PeriodEndReconciliation.ReconciliationAccount.DimensionCodeValue

	Form Invokes
		CreateAmortization
			invoke CreateAmortization ReconciliationDetail
	     	 	invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup
     	 		invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
	            invoked.ReconciliationAccount 			= PeriodEndReconciliation.ReconciliationAccount
    		    invoked.DetailType						= 3
    		    invoked.Active							= true
                
	Actions
		TransitionToInProcessStatus is an Instance Action
			restricted
			Action Rules
				if   (Status.Open
				and  (CloseTask !entered
				or   (CloseTask	entered
				and   ClosePeriodRel.CloseManagementStatus.Open
				and   !first ClosePeriodTaskRel.StartingLate)))
					if (IsAccountWithinConsolidatedGroup)
						invoke StartReconciliation Open ParentPeriodEndReconciliation
					else
						invoke StartReconciliation Open this instance
						
		LoadAndReconcile is an Instance Action
			restricted
			Action Rules
				invoke TransitionToInProcessStatus PeriodEndReconciliation
					
				BackgroundGroup = ReconciliationManagementGroup + "," + ReconciliationAccountStructure + "," + PeriodEndReconciliation.ReconciliationAccount + "," + PeriodEndReconciliation.GeneralLedgerCloseConfiguration + "," + PeriodEndReconciliation.GeneralLedgerClosePeriod + "-1"
				if (PeriodEndReconciliation.ReconciliationAccount.LoadGeneralLedgerTransactions)	
					invoke LoadGLTransIntoReconciliation GeneralLedgerTransaction in background group(BackgroundGroup)
						assign async background group id to BackgroundGroupAsyncId
						invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
						invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
						invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
						invoked.PrmCloseConfiguration				= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
						invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
						if (PeriodEndReconciliation.ReconciliationAccount.GeneralLedgerTransactionLevel.GeneralLedgerTransaction)
							invoked.PrmTransactionLevel					= 1	
						else
							invoked.PrmTransactionLevel					= 2	
							
				if (PeriodEndReconciliation.ReconciliationAccount.LoadInterfaceTransactions)	
					invoke LoadIntoReconciliation ReconciliationInterface in background group(BackgroundGroup)
						assign async background group id to BackgroundGroupAsyncId
						invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
						invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
						invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount

				invoke ProcessMatchRulesForBlankLineMatchField TransactionReconDetail in background group(BackgroundGroup)
					assign async background group id to BackgroundGroupAsyncId
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					
				OldBackgroundGroup = BackgroundGroup
				BackgroundGroup = ReconciliationManagementGroup + "," + ReconciliationAccountStructure + "," + PeriodEndReconciliation.ReconciliationAccount + "," + PeriodEndReconciliation.GeneralLedgerCloseConfiguration + "," + PeriodEndReconciliation.GeneralLedgerClosePeriod + "-2"
							
				invoke MatchRecords TransactionReconDetail in background group(BackgroundGroup)
					run after background group(OldBackgroundGroup)
					assign async background group id to BackgroundGroupAsyncId
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount

		RestoreDetailTransactionReconciliation is an Instance Action
			valid when (CanRestoreDetailTransactionReconciliation)
			Local Fields
				LocalAsyncId 			is an AsyncActionRequest
				LocalBackgroundGroup	is AlphaUpper 50
				
			Action Rules
				constraint (PeriodEndReconciliation.GeneralLedgerClosePeriod = last AllPeriodEndTransReconDetailRel.GeneralLedgerClosePeriod) 
					"CanOnlyRestoreTheLastSavedDetailTransactionReconciliation"
				
				if (TransactionReconDetailRel exists)
					confirmation required
						"AllTransactionsLoadedInTheCurrentDetailTransactionReconciliationQueueWillBeDeletedAndRestoredWithTheTransactionsSavedToPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>:<PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodName>;WouldYouLikeToContinue?"
							
				if (PeriodEndReconciliation.ReconciliationAccount.HasMatchedTransactions
				or	PeriodEndReconciliation.ReconciliationAccount.HasUnmatchedTransactionsWithAdjustments)
					invoke ClearAllReconciliationsAndAdjustments PeriodEndReconciliation.ReconciliationAccount in background
						assign async action request id to LocalAsyncId
				
				LocalBackgroundGroup = "DeleteTransactions:" + current timestamp
				
				invoke DeleteGLTransactions TransactionReconDetail in background group(LocalBackgroundGroup)
					run after LocalAsyncId
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
				
				invoke DeleteInterfaceTransactions TransactionReconDetail in background group(LocalBackgroundGroup)
					run after LocalAsyncId
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount	
				
				invoke RestoreDetailTransactionReconciliation PeriodEndTransReconDetail
					run after background group(LocalBackgroundGroup)
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod 	   	= PeriodEndReconciliation.GeneralLedgerClosePeriod

  		CreateAmortizationDistributions is an Instance Action
  			valid when (HasUnpostedPeriodAmortizationDetails)
			completion message is "CreatePeriodDistributionsHasBeenSubmittedToTheQueueForProcessing"
			Entrance Rules
				constraint (ReconciliationAmortizationOutOfBalanceRel !exists)		
					"CannotCreateAmortizationDistributionsWhenDetailsAreOutOfBalance"
				constraint (Status < 3) 
					"CannotCreateAmortizationDistributionsAsPeriodReconciliationIsPendingApprovalOrClosed;MustReopenReconciliationOrExcludeAmortizationDetail"
			Action Rules
				invoke CreateAmortizationPeriodDistributions ReconciliationPeriodDetail
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
				
				invoke TransitionToInProcessStatus PeriodEndReconciliation

		UpdateApprovalCode is an Instance Action
			restricted
			Parameters
				PrmApprovalCode	is an ApprovalCode

			Action Rules
				ApprovalCode = PrmApprovalCode
					
		UpdateApprovalLevel is an Instance Action
			restricted
			Parameters
				ParmEscalate		is Boolean
				ParmReassign		is Boolean
				ParmCurrentActor	is an Actor
			Action Rules
				LocalActor = ParmCurrentActor
				if (ParmReassign)
					if (ReassignToApprovalLevel entered)
						ApprovalLevel = ReassignToApprovalLevel.ApprovalLevel
						initialize ReassignToApprovalLevel
				else
					if (ParmEscalate)
						include GetNextEscalationApprovalLevel
						ApprovalLevel		= LocalApprovalLevel
						Approver			= LocalApprover
						ApproverTeam		= LocalApproverTeam
					else
						include GetNextApprovalLevel
						ApprovalLevel		= LocalApprovalLevel
						Approver			= LocalApprover
						ApproverTeam		= LocalApproverTeam
		
		UpdateApprovalLevelForDistribution is an Instance Action
			restricted
			Parameters
				ParmEscalate		is Boolean
				ParmReassign		is Boolean
				ParmCurrentActor	is an Actor
			Action Rules
				LocalActor = ParmCurrentActor
				if (ParmReassign)
					if (ReassignToApprovalLevelForDistribution entered)
						DistributionApprovalLevel = ReassignToApprovalLevelForDistribution.ApprovalLevel
						initialize ReassignToApprovalLevelForDistribution
				else
					if (ParmEscalate)
						include GetNextEscalationApprovalLevelForDistribution
						DistributionApprovalLevel		= LocalDistributionApprovalLevel
						DistributionApprover			= LocalDistributionApprover
						DistributionApproverTeam		= LocalDistributionApproverTeam
					else
						include GetNextApprovalLevelForDistribution
						DistributionApprovalLevel		= LocalDistributionApprovalLevel
						DistributionApprover			= LocalDistributionApprover
						DistributionApproverTeam		= LocalDistributionApproverTeam
					
		UpdateReconciliationAccountGroup is an Instance Action
			restricted
			Parameters
				PrmReconciliationAccountGroup	is a ReconciliationAccountGroup
				
			Action Rules							
				if (PrmReconciliationAccountGroup.ParentAccountGroup entered)
					TopLevelAccountGroup = PrmReconciliationAccountGroup.ParentAccountGroup
				else
					TopLevelAccountGroup = PrmReconciliationAccountGroup
				
				ReconciliationAccountGroup = PrmReconciliationAccountGroup
				
				if (IsConsolidatedGroup
				and ReconciliationAccountGroup changed)
					invoke FastUpdate PeriodEndReconciliation children
						invoked.ReconciliationAccountGroup = PrmReconciliationAccountGroup
					
				if (ReconciliationAccountGroup changed
				and ReconciliationAccountGroup entered)
					invoke Update ReconAccountGroupPeriodRel
						
		Approve is an Instance Action
			restricted
			Action Rules						
				make transition to Closed
				
				invoke ApproveAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
			
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke Approve each
										
   		ManualApprove is an Instance Action
    		valid when (CanManualApproveReject)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
			Action Rules						
				make transition to Closed
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam
				
				cancel ReconciliationApproval process
				
				invoke ApproveAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
				
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke ManualApprove each
		
		ManualApproveDistributions is an Instance Action
    		valid when (CanManualApproveRejectDistributions)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
			Action Rules						
				initialize DistributionApprovalLevel
				initialize DistributionApprover
				initialize DistributionApproverTeam
				cancel ReconciliationDistributionApproval process
				
				invoke ApproveAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
					
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke ManualApproveDistributions each
						
		ApproveDistributions is an Instance Action
		    restricted
		    Action Rules	
						
		        invoke ApproveAllDistributions PeriodEndDistribution
		            invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
		            invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
		            invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
		            invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
		            invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
		            invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
		        
		        if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke ApproveDistributions each
											
		Reject is an Instance Action
			restricted
			Action Rules
				Rejected = true
				make transition to InProcess
				initialize PendingApprovalTimestamp
				
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber

			Exit Rules
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke Reject each
				
				if (!IsAccountWithinGroup)
					include SendApprovalRejectionNotifications
		
		RejectDistributions is an Instance Action
			restricted
			Entrance Rules
		        invoke PendingApproval.RejectDistributionRelease PendingApprovalDistributionsOffsetRel
		        invoke Delete EnteredDistributionsOffsetRel
		        
			Action Rules
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
				
			Exit Rules				
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke RejectDistributions each
							
				include SendApprovalRejectionNotificationsForDistributions
					
				initialize DistributionApprovalCode
				initialize DistributionApprovalLevel
				initialize DistributionApprover
				initialize DistributionApproverTeam
				initialize ReassignToApprovalLevelForDistribution
								
		ManualReject is an Instance Action
    		valid when (CanManualApproveReject)
			subject is RejectReconciliation
			Parameters
				PrmComment		is Alpha size up to 500
			
			Action Rules
				if (ReconciliationManagementGroup.RejectReconReasonCodeRequired)			
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingTheReconciliation"												
				Rejected = true
				make transition to InProcess
				initialize PendingApprovalTimestamp
				
				cancel ReconciliationApproval process
					
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
	
			Exit Rules
				invoke Create ReconciliationReasonCodeUsage
					invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
					invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
					invoked.ReasonCode												= reason code
					invoked.Description												= reason code.Description
					invoked.Type													= 1 
					invoked.Comment													= PrmComment
				
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke ManualReject each
							invoked.reason code	= reason code
							invoked.PrmComment 	= PrmComment
				
				if (!IsAccountWithinGroup)
					include SendApprovalRejectionNotifications 
		
		ManualRejectDistributions is an Instance Action
    		valid when (CanManualApproveRejectDistributions)
			subject is RejectReconciliation
			Parameters
				PrmComment		is Alpha size up to 500
			Entrance Rules
		        invoke PendingApproval.RejectDistributionRelease PendingApprovalDistributionsOffsetRel
		        invoke Delete EnteredDistributionsOffsetRel
		        
			Action Rules
				if (ReconciliationManagementGroup.RejectReconReasonCodeRequired)			
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingTheReconciliationDistribution"												
				
				cancel ReconciliationDistributionApproval process
				
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
			Exit Rules
				invoke Create ReconciliationReasonCodeUsage
					invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
					invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
					invoked.ReasonCode												= reason code
					invoked.Description												= reason code.Description
					invoked.Type													= 3 
					invoked.Comment													= PrmComment
				
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke ManualRejectDistributions each
							invoked.reason code	= reason code
							invoked.PrmComment 	= PrmComment
							
				if (!IsAccountWithinGroup)
					include SendApprovalRejectionNotificationsForDistributions
					
				initialize DistributionApprovalCode
				initialize DistributionApprovalLevel
				initialize DistributionApprover
				initialize DistributionApproverTeam
				initialize ReassignToApprovalLevelForDistribution
									
		RejectWithReasonCode is an Instance Action
			restricted
			subject is RejectReconciliation
			reason code required
			action comment required

			Action Rules
				Rejected = true
				make transition to InProcess
				initialize PendingApprovalTimestamp
				
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
					
			Exit Rules
				invoke Create ReconciliationReasonCodeUsage
					invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
					invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
					invoked.ReasonCode												= reason code
					invoked.Description												= reason code.Description
					invoked.Type													= 1 
					invoked.Comment													= action comment

				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke RejectWithReasonCode each
							invoked.reason code		= reason code
							invoked.action comment 	= action comment
				
				if (!IsAccountWithinGroup)
					include SendApprovalRejectionNotifications
							
		RejectWithReasonCodeDistributions is an Instance Action
			restricted
			subject is RejectReconciliation
			reason code required
			action comment required
			
			Entrance Rules
		        invoke PendingApproval.RejectDistributionRelease PendingApprovalDistributionsOffsetRel
		        invoke Delete EnteredDistributionsOffsetRel
		        
			Action Rules
				invoke RejectAllDistributions PeriodEndDistribution
					invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
					
			Exit Rules
				invoke Create ReconciliationReasonCodeUsage
					invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
					invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
					invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
					invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
					invoked.ReasonCode												= reason code
					invoked.Description												= reason code.Description
					invoked.Type													= 3 
					invoked.Comment													= action comment
				
				if(PeriodEndReconciliation.ReconciliationAccount.IsAccountWithinGroup)
					invoke Create ReconciliationReasonCodeUsage
						invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
						invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
						invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount.ParentReconciliationAccount
						invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
						invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
						invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
						invoked.ReasonCode												= reason code
						invoked.Description												= reason code.Description
						invoked.Type													= 3 
						invoked.Comment													= action comment
						
				if (LevelType.Group) 
					for each PeriodEndReconciliation children
						invoke RejectWithReasonCodeDistributions each
							invoked.reason code		= reason code
							invoked.action comment 	= action comment
							
				include SendApprovalRejectionNotificationsForDistributions
				
				initialize DistributionApprovalCode
				initialize DistributionApprovalLevel
				initialize DistributionApprover
				initialize DistributionApproverTeam
				initialize ReassignToApprovalLevelForDistribution
												
		FastUpdate is an Update Action
			restricted
			bypass field rules
		
		GlobalDelete is a Delete Action
			restricted
		
		AutoComplete is an Instance Action
			restricted
			Action Rules
				ClosedLedgerAmount = LedgerAmount
				AutoReconciled = true
				make transition to Closed
			
				if (IsConsolidatedGroup)
					for each PeriodEndReconciliation children
						invoke AutoComplete InProcess each
				
				if (IsAccountWithinIndependentGroup)
					if (!OpenPeriodReconciliationWithinGroupRel exists)
						invoke FastUpdate ParentPeriodEndReconciliation
							invoked.Status = 7 
											
		ExecuteAutoReconciliationPolicies is an Instance Action
			valid when (CanExecuteReconciliationPolicies)
			Action Rules
				invoke EvaluateReconciliationPolicy
					invoked.PrmReconciliationManagementGroup 	= ReconciliationManagementGroup
					invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
					invoked.PrmGeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
					invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
						
 		EvaluateReconciliationPolicy is a Set Action
 			restricted
 			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				PrmGeneralLedgerCloseConfiguration	is a GeneralLedgerCloseConfiguration
				PrmGeneralLedgerClosePeriod			is a GeneralLedgerClosePeriod
					
			Parameter Rules
				PrmReconciliationManagementGroup
					required
						"ReconciliationManagementGroupIsRequired"
				
				PrmReconciliationAccountStructure
					required
						"ReconciliationAccountStructureIsRequired"
								
			Local Fields
				LocalLedgerAmountZero				is Boolean
				LocalExecuteAutoComplete			is Boolean
				
			Instance Selection
				where   (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and		 ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and		 !IsAccountWithinConsolidatedGroup
				and		 ReconciliationPolicy entered
				and		 ReconciliationPolicy.Active
				and		 ReconciliationCanBeUpdated
				and     (!PrmGeneralLedgerClosePeriod entered
				or	    (PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PrmGeneralLedgerCloseConfiguration 
				and		 PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod))
				and	    (!PrmReconciliationAccount entered
				or 		 PeriodEndReconciliation.ReconciliationAccount = PrmReconciliationAccount))
				
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationPolicy
				PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				PeriodEndReconciliation.GeneralLedgerClosePeriod
				PeriodEndReconciliation.ReconciliationAccount
				PeriodEndReconciliation.SequenceNumber

			Action Rules
				Instance Rules
					initialize LocalLedgerAmountZero
					initialize LocalExecuteAutoComplete
					
					if (ReconciliationPolicy.ZeroLedgerAmount
					and ReconciliationPolicy.ZeroOutOfBalanceAmount)
						if (DerivedLedgerAmountZeroForPeriods)
							LocalLedgerAmountZero = true
						
						if (LocalLedgerAmountZero)	
							if (DerivedOutOfBalanceAmountZeroForPeriods)
								LocalExecuteAutoComplete = true
					else
					if (ReconciliationPolicy.ZeroLedgerAmount)
						if (DerivedLedgerAmountZeroForPeriods)
							LocalExecuteAutoComplete = true
					else		
					if (ReconciliationPolicy.ZeroOutOfBalanceAmount)
						if (DerivedOutOfBalanceAmountZeroForPeriods)
							LocalExecuteAutoComplete = true
						
					if (LocalExecuteAutoComplete)
						if (!ReconciliationPolicy.NoLedgerTransactions
						or (ReconciliationPolicy.NoLedgerTransactions
						and NoLedgerTransactionsExistForSpecifiedPeriods))
							invoke AutoComplete
		
		SwitchToCombinedListView is an Instance Action
			valid when (ListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView PeriodEndReconciliation.ReconciliationAccount
					invoked.UseCombinedListView	= true

		SwitchToListOverListView is an Instance Action
			valid when (!ListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView PeriodEndReconciliation.ReconciliationAccount
					invoked.UseListOverListView	= true

		UpdateReconciliationDetails is an Instance Action
			restricted
			Action Rules
				if (PeriodDetailsRel exists)
					invoke Update first PeriodDetailsRel
						invoked.PeriodAmount = CalculatedAssetEndingBalance
				else
					include CreateAssetReconciliationDetails
		
		UpdateAssetAmounts is an Instance Action
			restricted
			Action Rules
				if (IsConsolidatedGroup)
					for each PeriodEndReconciliation children
						invoke UpdateAssetAmounts each
				else
					AssetAdditions = DerivedAssetAdditions
					AssetAdjustments = DerivedAssetAdjustments
					AssetTransfers = DerivedAssetTransfers
					AssetDisposals = DerivedAssetDisposals
					
		UpdatePeriodReconciliationCodeBlock is a Set Action
			restricted
 			Parameters
				PrmReconciliationManagementGroup is a ReconciliationManagementGroup

			Parameter Rules
				PrmReconciliationManagementGroup
					required
						"ReconciliationManagementGroupIsRequired"
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and    LevelType.Account)
				
			Sort Order is primary

			Action Rules
				Instance Rules
					ReconciliationCodeBlock = PeriodEndReconciliation.ReconciliationAccount.ReconciliationCodeBlock
					DimensionCodeValue = PeriodEndReconciliation.ReconciliationAccount.DimensionCodeValue
					
		UpdateClosedReconciliationsOutOfBalanceWithLedger is a Set Action
			restricted
            Parameters
                PrmReconciliationManagementGroup    is a ReconciliationManagementGroup
                	default label is "ReconciliationManagementGroup"
                PrmReconciliationAccountStructure   is a ReconciliationAccountStructure
                	default label is "ReconciliationAccountStructure"
 
            Parameter Rules
                PrmReconciliationManagementGroup
                    required
                        "ReconciliationManagementGroupIsRequired"
            
            Instance Selection
                where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
                and   (!PrmReconciliationAccountStructure entered
                or    (PrmReconciliationAccountStructure entered
                and    ReconciliationAccountStructure = PrmReconciliationAccountStructure))
                and    ReconciliationIsOutOfBalance)
               
            Sort Order is ByReconciliationIsOutOfBalance
 
            Action Rules
                Set Rules
                    Exit Rules
                    	invoke CalculateReconciliationIsOutOfBalance
                        	invoked.PrmReconciliationManagementGroup    = PrmReconciliationManagementGroup
                            invoked.PrmReconciliationAccountStructure   = PrmReconciliationAccountStructure
		
                Empty Set Rules
					invoke CalculateReconciliationIsOutOfBalance
						invoked.PrmReconciliationManagementGroup    = PrmReconciliationManagementGroup
						invoked.PrmReconciliationAccountStructure   = PrmReconciliationAccountStructure

				Instance Rules
                    ReconciliationIsOutOfBalance = false
                    
		CalculateReconciliationIsOutOfBalance is a Set Action
			restricted
            Parameters
                PrmReconciliationManagementGroup    is a ReconciliationManagementGroup
                	default label is "ReconciliationManagementGroup"
                PrmReconciliationAccountStructure   is a ReconciliationAccountStructure
                	default label is "ReconciliationAccountStructure"
               
            Parameter Rules
                PrmReconciliationManagementGroup
                    required
                        "ReconciliationManagementGroupIsRequired"
               
            Instance Selection
                where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
                and   (!PrmReconciliationAccountStructure entered
                or    (PrmReconciliationAccountStructure entered
                and    ReconciliationAccountStructure = PrmReconciliationAccountStructure))
                and   Status.Closed
                and   ClosedLedgerOutOfBalanceAmount entered)
               
            Sort Order is ByStatus
 
            Action Rules
                Instance Rules
                	ReconciliationIsOutOfBalance = true

		UpdateReconciliationAssetAmounts is a Set Action
			restricted
            Parameters
                PrmReconciliationManagementGroup    is a ReconciliationManagementGroup
                	default label is "ReconciliationManagementGroup"
                PrmReconciliationAccountStructure   is a ReconciliationAccountStructure
                	default label is "ReconciliationAccountStructure"
 				PrmReconciliationAccount   			is a ReconciliationAccount
                	default label is "ReconciliationAccount"
				PrmCloseConfiguration				is a GeneralLedgerCloseConfiguration
				PrmGeneralLedgerClosePeriod			is a GeneralLedgerClosePeriod
                	
            Parameter Rules
                PrmReconciliationManagementGroup
                    required
                        "ReconciliationManagementGroupIsRequired"
            	PrmReconciliationAccountStructure
                    required
                        "ReconciliationAccountStructureIsRequired"                       
            Instance Selection
                where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
                and    ReconciliationAccountStructure = PrmReconciliationAccountStructure
                and   (!PrmReconciliationAccount entered
                or    (PrmReconciliationAccount entered
                and    PeriodEndReconciliation.ReconciliationAccount = PrmReconciliationAccount))
				and   (!PrmGeneralLedgerClosePeriod entered
				or    (PrmGeneralLedgerClosePeriod entered
				and    PeriodEndReconciliation.GeneralLedgerClosePeriod = PrmGeneralLedgerClosePeriod))
                and    PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
				and	   IsConsolidatedGroupStandaloneOrAccountWithinIndependentGroup)
               
            Sort Order is ByPeriod
 
            Action Rules
				Instance Rules
					invoke UpdateAssetAmounts
								
		Reassign is an Instance Action
        	valid when (CanReassign)
		    completion message is "PeriodEndReconciliation<DerivedReconciliationAccountString>ReassignedTo<PrmAssignedResource.PreferredPresentationName>"
		    Parameters
		        PrmFinanceTeam		is a FinanceTeam
		            default label is "Team"
		        PrmAssignedResource	is a FinanceTeamMember
		            default label is "TeamMember"

		    Parameter Rules
		        PrmFinanceTeam
		            required
						"TeamIsRequired"
		            
		        PrmAssignedResource	
					if (Status.InProcess)
		            	required
							"TeamMemberIsRequiredForInProcessReconciliations"
		            
		    Action Rules
		        if (IsIndependentGroup
				and PendingApprovalClosedPeriodEndReconciliationChildrenRel exists)
					confirmation required
						"AllAccountsAreNotInAnOpenOrInProcessStatus;WouldYouLikeToContinue?"

				FinanceTeam = PrmFinanceTeam
				AssignedResource = PrmAssignedResource
		        if (LevelType.Group) 
					invoke Reassign PeriodEndReconciliation children
						invoked.PrmFinanceTeam			= FinanceTeam
						invoked.PrmAssignedResource		= AssignedResource
					
		    Exit Rules
		        if (!IsAccountWithinConsolidatedGroup)
		            LocalActor = PrmAssignedResource.TeamMember.FinanceResourceActor
		            if (LocalActor entered)					
						if (ReconciliationReconcilerRel exists)					
							send notification
								to	LocalActor
								description is "PeriodEndReconciliation<DerivedReconciliationAccountString>WasReassigned:<DerivedReconciliationAccountDescription>"
								priority is very high
								linkback (webapp is Reconciler navigation is ResourceNotificationNav text is "ViewReconciliation")
						else
							send notification
								to	LocalActor
								description is "PeriodEndReconciliation<DerivedReconciliationAccountString>WasReassigned:<DerivedReconciliationAccountDescription>"
								priority is very high
								linkback (webapp is ReconciliationManager navigation is ResourceNotificationNav text is "ViewReconciliation")
                    
	StateCycles
		ReconciliationLifeCyle is a StateCycle
			state field is Status
			
			Open is a State
				Create is a Create Action
					valid when (ReconciliationAccountIsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
					Field Rules
						CloseTask
							default to PeriodEndReconciliation.ReconciliationAccount.CloseTask

					Action Rules
						constraint (!PeriodEndReconciliationByPeriodRel exists)
							"PeriodReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>AlreadyExists"
						
						PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.ReconciliationAccount.CloseConfiguration
						
						if (ReconciliationAccountIsGroup) 
							LevelType = LevelType.Group
							ReconciliationGroup = PeriodEndReconciliation.ReconciliationAccount.ReconciliationGroup
							ReconciliationGroupMethod = PeriodEndReconciliation.ReconciliationAccount.ReconciliationGroupMethod
							
						if (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
							if (!CreatedFromBatch)
								invoke SchedulePeriodDetails ReconciliationDetail
									invoked.PrmReconciliationManagementGroup   = ReconciliationManagementGroup
									invoked.PrmReconciliationAccountStructure  = ReconciliationAccountStructure
									invoked.PrmReconciliationAccount	   	   = PeriodEndReconciliation.ReconciliationAccount
									invoked.PrmGeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
									invoked.PrmDetailPeriod    			       = PeriodEndReconciliation.GeneralLedgerClosePeriod
									invoked.PrmReportDocument				   = ReportDocument
														
					Exit Rules
						if (CloseTask entered
						and !CloseTask.ReconciliationTask)
							invoke QuickUpdateFromRecon CloseTask
								invoked.UpdateReconTaskToTrue = true
								
						if (ReconciliationAccountGroup entered)
							invoke Update ReconAccountGroupPeriodRel
						
						if (LevelType.Group			
						and !CreatedFromReconciliationAccount)
							for each PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountChildrenRel
								invoke Create PeriodEndReconciliation
									invoked.ReconciliationManagementGroup   								= ReconciliationManagementGroup
									invoked.ReconciliationAccountStructure  								= ReconciliationAccountStructure
									invoked.PeriodEndReconciliation.ReconciliationAccount	  	    		= each.ReconciliationAccount
									invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration 		= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
									invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod        		= PeriodEndReconciliation.GeneralLedgerClosePeriod
									invoked.ParentPeriodEndReconciliation.ReconciliationAccount	  	      	= PeriodEndReconciliation.ReconciliationAccount
									invoked.ParentPeriodEndReconciliation.GeneralLedgerCloseConfiguration 	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
									invoked.ParentPeriodEndReconciliation.GeneralLedgerClosePeriod        	= PeriodEndReconciliation.GeneralLedgerClosePeriod
									invoked.ParentPeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
									invoked.Description					    								= each.Description
									invoked.BypassActiveCodeBlockEdit										= true
						
						if (DerivedPeriodEndSystem entered
						and ReconciliationSubsystemBalanceRel exists
						and !CreatedFromReconciliationAccount)
							LocalReconSubsystemBalanceFound	= false
							for each ReconciliationSubsystemBalanceRel
								if (GeneralLedgerChartAccount = DerivedAccrualAccount)
									LocalReconSubsystemBalanceFound = true
									end for each
									
							if (LocalReconSubsystemBalanceFound)						

								if (PeriodDetailsRel exists)
									invoke Update PeriodDetailsRel
										invoked.ReportDocument					= ReportDocument
								    	invoked.PeriodAmount					= ReconciliationSubsystemBalanceRel.ReportTotal
								else
									invoke CreatePeriodDetail ReconciliationPeriodDetail
										invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup
										invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
										invoked.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
										invoked.ReferenceNumber					= DerivedReferenceNumber
										invoked.Description						= DerivedReferenceNumber
										invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
										invoked.TransactionDate					= DerivedTransactionDate
										invoked.StartPeriod						= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
										invoked.DetailPeriod					= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
										invoked.ReportDocument					= ReportDocument
								    	invoked.PeriodAmount					= ReconciliationSubsystemBalanceRel.ReportTotal
								    	
						if (IsAccountWithinIndependentGroup
						and !PeriodEndReconciliation.ReconciliationAccount.Active)
							Status = Status.Closed
						
						if (PeriodEndReconciliation.ReconciliationAccount.ReconciliationAccountType.Asset
						and LevelType.Account)
							AssetAdditions			= DerivedAssetAdditions
	    					AssetAdjustments		= DerivedAssetAdjustments
	    					AssetTransfers			= DerivedAssetTransfers
	    					AssetDisposals			= DerivedAssetDisposals
	    					
				Update is an Update Action
					Exit Rules
						if (ReconciliationAccountGroup changed
						and ReconciliationAccountGroup entered)
							invoke Update ReconAccountGroupPeriodRel

						if (IsConsolidatedGroup)
							if (CloseTask changed
							or  FinanceTeam	changed
							or  AssignedResource changed
							or  ReconciliationPolicy changed)
								for each PeriodEndReconciliation children
									invoke FastUpdate each
										invoked.CloseTask		 	 = CloseTask
										invoked.FinanceTeam 	 	 = FinanceTeam
										invoked.AssignedResource 	 = AssignedResource
										invoked.ReconciliationPolicy = ReconciliationPolicy
						else
						if (IsIndependentGroup)
							if (FinanceTeam	changed
							or  AssignedResource changed)
								for each PeriodEndReconciliation children
									invoke FastUpdate each
										invoked.FinanceTeam 	 	 = FinanceTeam
										invoked.AssignedResource 	 = AssignedResource
							
				Delete is a Delete Action
					valid when (!HasParent)
					Entrance Rules
						invoke GlobalDelete PeriodEndReconciliation children
						for each PeriodDetailsRel
							invoke Delete each			
						
					Exit Rules
						if (CloseTask entered)
							invoke QuickUpdateFromRecon CloseTask
								invoked.UpdateReconTaskToFalse = true

				StartReconciliationLate is an Instance Action
					default label is "StartReconciliation"
					valid when (StartReconciliationLateValid)
					subject is StartTaskLate

					Parameters
						PrmComment		is Alpha size up to 500

					Action Rules
						if (CloseTask entered)
							constraint (ClosePeriodRel.CloseManagementStatus.Open)
								"ReconciliationAssociatedToACloseTask;ThePeriodMustBeScheduledAndOpenForWork"
							if (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
								constraint (CanStartReconciliation)
									"CannotStartReconciliationWhenCloseTask:<CloseTask>HasNotBeenScheduled"
							invoke StartWorkLate ClosePeriodTaskRel
								invoked.reason code	= reason code
								invoked.PrmComment	= PrmComment
						make transition to InProcess
						if (IsAccountWithinIndependentGroup)
							invoke FastUpdate ParentPeriodEndReconciliation
								invoked.Status = 1 
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke StartReconciliationLate Open each
									invoked.reason code	= reason code
									invoked.PrmComment 	= PrmComment
					Exit Rules
						invoke Create ReconciliationReasonCodeUsage
							invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
							invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
							invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
							invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
							invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
							invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
							invoked.ReasonCode												= reason code
							invoked.Description												= reason code.Description
							invoked.Type													= 4 
							invoked.Comment													= PrmComment
							
				StartReconciliation is an Instance Action
					valid when (StartReconciliationValid)
					Action Rules
						if (CloseTask entered)
							constraint (ClosePeriodRel.CloseManagementStatus.Open)
								"ReconciliationAssociatedToACloseTask;ThePeriodMustBeScheduledAndOpenForWork"
							constraint (CanStartReconciliation)
								"CannotStartReconciliationWhenCloseTask:<CloseTask>HasNotBeenScheduled"
							invoke StartWork ClosePeriodTaskRel
						make transition to InProcess
						if (IsAccountWithinIndependentGroup)
							invoke FastUpdate ParentPeriodEndReconciliation
								invoked.Status = 1 
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke StartReconciliation Open each
								
			InProcess is a State
				on entrance to InProcess
					Action Rules
						constraint (AssignedResource entered)
							"TeamMemberIsRequiredToStartReconciliation"
						if(!InProcessTimestamp entered)
							InProcessTimestamp = current timestamp
						initialize ApprovalLevel
						initialize Approver
						initialize ApproverTeam
						initialize ClosedLedgerAmount
						initialize ReconciliationIsOutOfBalance
						
				Update is an Update Action
					Field Rules
						AssignedResource 	required
						
					Exit Rules
						if (ReconciliationAccountGroup changed
						and ReconciliationAccountGroup entered)
							invoke Update ReconAccountGroupPeriodRel

				Delete is a Delete Action
					valid when (!HasParent)
					Entrance Rules
						invoke GlobalDelete PeriodEndReconciliation children
						for each PeriodDetailsRel
							invoke Delete each			
						
					Exit Rules
						if (CloseTask entered)
							invoke QuickUpdateFromRecon CloseTask
								invoked.UpdateReconTaskToFalse = true

				DeleteAmortizationDistributions is an Instance Action
					valid when (HasEnteredAmortizationDistributions)
					Action Rules
						invoke DeleteAmortizationDistributions PeriodAmortizedDetailRel
		
				ReleaseDistributionsOtherRequiredFields is an Instance Action
					default label is "ReleaseDistributions"
					valid when (CanReleaseOtherRequiredFields)
					Parameters
						AccountingEntity
						AccountingUnit
						Project
						FinanceDimension1
						FinanceDimension2
						FinanceDimension3
						FinanceDimension4
						FinanceDimension5
						FinanceDimension6
						FinanceDimension7
						FinanceDimension8
						FinanceDimension9
						FinanceDimension10
						OffsetDescription	is Alpha 100
							default label is "Description" 
						PrmApprovalCode		is a ApprovalCode
							default label is "ApprovalCode"
							
					Parameter Rules
						AccountingEntity


							initial value is ReconciliationCodeBlock.AccountingEntity
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.AccountingEntity
							default to ReconciliationCodeBlock.AccountingEntity
							default to first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.AccountingEntity
							required
								"<actor.context.FinanceEnterpriseGroup.AccountingEntityLabel>IsRequired"
				
						AccountingUnit
							initial value is ReconciliationCodeBlock.AccountingUnit
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.AccountingUnit
							if (RequireAccountingUnit)
								required
									"<actor.context.FinanceEnterpriseGroup.AccountingUnitLabel>IsRequired"
									
						Project
							initial value is ReconciliationCodeBlock.Project
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.Project
							if (RequireProject)
								required
									"<actor.context.FinanceEnterpriseGroup.ProjectLabel>IsRequired"
									
						FinanceDimension1
							initial value is ReconciliationCodeBlock.FinanceDimension1
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension1
							if (RequireFinanceDimension1)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension1Label>IsRequired"
									
						FinanceDimension2
							initial value is ReconciliationCodeBlock.FinanceDimension2
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension2
							if (RequireFinanceDimension2)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension2Label>IsRequired"
									
						FinanceDimension3
							initial value is ReconciliationCodeBlock.FinanceDimension3
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension3
							if (RequireFinanceDimension3)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension3Label>IsRequired"
									
						FinanceDimension4
							initial value is ReconciliationCodeBlock.FinanceDimension4
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension4
							if (RequireFinanceDimension4)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension4Label>IsRequired"
									
						FinanceDimension5
							initial value is ReconciliationCodeBlock.FinanceDimension5
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension5
							if (RequireFinanceDimension5)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension5Label>IsRequired"
									
						FinanceDimension6
							initial value is ReconciliationCodeBlock.FinanceDimension6
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension6
							if (RequireFinanceDimension6)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension6Label>IsRequired"
									
						FinanceDimension7
							initial value is ReconciliationCodeBlock.FinanceDimension7
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension7
							if (RequireFinanceDimension7)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension7Label>IsRequired"
									
						FinanceDimension8
							initial value is ReconciliationCodeBlock.FinanceDimension8
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension8
							if (RequireFinanceDimension8)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension8Label>IsRequired"
									
						FinanceDimension9
							initial value is ReconciliationCodeBlock.FinanceDimension9
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension9
							if (RequireFinanceDimension9)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension9Label>IsRequired"
									
						FinanceDimension10
							initial value is ReconciliationCodeBlock.FinanceDimension10
							initial value is first PeriodEndReconciliationChildrenRel.ReconciliationCodeBlock.FinanceDimension10
							if (RequireFinanceDimension10)
								required
									"<actor.context.FinanceEnterpriseGroup.FinanceDimension10Label>IsRequired"

						OffsetDescription
							initial value is PeriodEndDistributionPostingMessage
							default to PeriodEndDistributionPostingMessage
							
						PrmApprovalCode
							if (HasDistributionApproval)
								required

					Action Rules
						if (LevelType.Account) 
							constraint (TotalDistributionNonOffsetAmount != 0)
								"SumOfTheEnteredDistributionAmountsCannotEqualZero"	
							invoke Create PeriodEndDistribution
								fill in fields from this instance
								invoked.ReconciliationManagementGroup		  					= ReconciliationManagementGroup
								invoked.ReconciliationAccountStructure		  					= ReconciliationAccountStructure
								invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
								invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
								invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
								invoked.GLFinanceCodeBlock					  					= ReconciliationCodeBlock
								invoked.GLFinanceCodeBlock.ToAccountingEntity 					= ReconciliationCodeBlock.AccountingEntity
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit)
									invoked.GLFinanceCodeBlock.AccountingUnit	  				= ReconciliationCodeBlock.AccountingUnit
								else
									invoked.GLFinanceCodeBlock.AccountingUnit	  				= AccountingUnit
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Project)
									invoked.GLFinanceCodeBlock.Project			  				= ReconciliationCodeBlock.Project
								else
									invoked.GLFinanceCodeBlock.Project 			  				= Project
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1)
									invoked.GLFinanceCodeBlock.FinanceDimension1  				= ReconciliationCodeBlock.FinanceDimension1
								else
									invoked.GLFinanceCodeBlock.FinanceDimension1  				= FinanceDimension1
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2)
									invoked.GLFinanceCodeBlock.FinanceDimension2  				= ReconciliationCodeBlock.FinanceDimension2
								else
									invoked.GLFinanceCodeBlock.FinanceDimension2  				= FinanceDimension2
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3)
									invoked.GLFinanceCodeBlock.FinanceDimension3  				= ReconciliationCodeBlock.FinanceDimension3
								else
									invoked.GLFinanceCodeBlock.FinanceDimension3  				= FinanceDimension3
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4)
									invoked.GLFinanceCodeBlock.FinanceDimension4  				= ReconciliationCodeBlock.FinanceDimension4
								else
									invoked.GLFinanceCodeBlock.FinanceDimension4  				= FinanceDimension4
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5)
									invoked.GLFinanceCodeBlock.FinanceDimension5  				= ReconciliationCodeBlock.FinanceDimension5
								else
									invoked.GLFinanceCodeBlock.FinanceDimension5  				= FinanceDimension5
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6)
									invoked.GLFinanceCodeBlock.FinanceDimension6  				= ReconciliationCodeBlock.FinanceDimension6
								else
									invoked.GLFinanceCodeBlock.FinanceDimension6  				= FinanceDimension6
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7)
									invoked.GLFinanceCodeBlock.FinanceDimension7  				= ReconciliationCodeBlock.FinanceDimension7
								else
									invoked.GLFinanceCodeBlock.FinanceDimension7  				= FinanceDimension7
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8)
									invoked.GLFinanceCodeBlock.FinanceDimension8  				= ReconciliationCodeBlock.FinanceDimension8
								else
									invoked.GLFinanceCodeBlock.FinanceDimension8  				= FinanceDimension8
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9)
									invoked.GLFinanceCodeBlock.FinanceDimension9  				= ReconciliationCodeBlock.FinanceDimension9
								else
									invoked.GLFinanceCodeBlock.FinanceDimension9  				= FinanceDimension9
								if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10)
									invoked.GLFinanceCodeBlock.FinanceDimension10  				= ReconciliationCodeBlock.FinanceDimension10
								else
									invoked.GLFinanceCodeBlock.FinanceDimension10 				= FinanceDimension10
								invoked.GLTransactionAmount					  					= TotalDistributionAmount * -1
								invoked.DistributionAmount.CurrencyAmount	  					= TotalDistributionAmount * -1
								invoked.Description							  					= OffsetDescription
								invoked.OffsetDistribution					  					= true
							if(HasDistributionApproval and ReconciliationCodeBlock.AccountingEntity.BypassApprovalCode != PrmApprovalCode)
								invoke SubmitForDistributionApproval
									invoked.PrmApprovalCode = PrmApprovalCode
							else	
								invoke ReleaseAllDistributions PeriodEndDistribution
									invoked.PrmReconciliationManagementGroup	  = ReconciliationManagementGroup
									invoked.PrmReconciliationAccountStructure	  = ReconciliationAccountStructure
									invoked.PrmReconciliationAccount			  = PeriodEndReconciliation.ReconciliationAccount
									invoked.PrmGeneralLedgerCloseConfiguration    = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
									invoked.PrmGeneralLedgerClosePeriod			  = PeriodEndReconciliation.GeneralLedgerClosePeriod
				
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								if (each.EnteredDistributionsRel exists)
									invoke ReleaseDistributionsOtherRequiredFields InProcess each
										invoked.AccountingEntity		= each.AccountingEntity
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit)
											invoked.AccountingUnit		= each.AccountingUnit
										else
											invoked.AccountingUnit		= AccountingUnit
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Project)
											invoked.Project				= each.Project
										else
											invoked.Project				= Project
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1)
											invoked.FinanceDimension1	= each.FinanceDimension1
										else
											invoked.FinanceDimension1	= FinanceDimension1
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2)
											invoked.FinanceDimension2	= each.FinanceDimension2
										else
											invoked.FinanceDimension2	= FinanceDimension2
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3)
											invoked.FinanceDimension3	= each.FinanceDimension3
										else
											invoked.FinanceDimension3	= FinanceDimension3
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4)
											invoked.FinanceDimension4	= each.FinanceDimension4
										else
											invoked.FinanceDimension4	= FinanceDimension4
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5)
											invoked.FinanceDimension5	= each.FinanceDimension5
										else
											invoked.FinanceDimension5	= FinanceDimension5
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6)
											invoked.FinanceDimension6	= each.FinanceDimension6
										else
											invoked.FinanceDimension6	= FinanceDimension6
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7)
											invoked.FinanceDimension7	= each.FinanceDimension7
										else
											invoked.FinanceDimension7	= FinanceDimension7
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8)
											invoked.FinanceDimension8	= each.FinanceDimension8
										else
											invoked.FinanceDimension8	= FinanceDimension8
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9)
											invoked.FinanceDimension9	= each.FinanceDimension9
										else
											invoked.FinanceDimension9	= FinanceDimension9
										if (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10)
											invoked.FinanceDimension10	= each.FinanceDimension10
										else
											invoked.FinanceDimension10	= FinanceDimension10
										invoked.PrmApprovalCode = PrmApprovalCode
										
						if(EnteredDistributionsClosedPeriodRel exists)
							confirmation required
								"PeriodIsClosedForOneOrMore_\Accounting_\Entities.ReopenPeriodBeforeJournalizingOrDistributionsWillBePostedToCurrentOpenPeriod;DoYouWantToContinue?"
						
				ReleaseDistributions is an Instance Action
					valid when (CanReleaseDistributions)
					Parameters
						OffsetDescription	is Alpha 100
							default label is "Description"
						PrmApprovalCode		is a ApprovalCode
							default label is "ApprovalCode"
							
					Parameter Rules
						OffsetDescription
							initial value is PeriodEndDistributionPostingMessage
							default to PeriodEndDistributionPostingMessage
						PrmApprovalCode
							if (HasDistributionApproval)
								required
								
					Action Rules
						if (LevelType.Account) 
							constraint (TotalDistributionNonOffsetAmount != 0)
								"SumOfTheEnteredDistributionAmountsCannotEqualZero"
							invoke Create PeriodEndDistribution
								fill in fields from this instance
								invoked.ReconciliationManagementGroup		  					= ReconciliationManagementGroup
								invoked.ReconciliationAccountStructure		  					= ReconciliationAccountStructure
								invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
								invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration
								invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
								invoked.GLFinanceCodeBlock					  					= ReconciliationCodeBlock
								invoked.GLFinanceCodeBlock.ToAccountingEntity 					= ReconciliationCodeBlock.AccountingEntity
								invoked.GLTransactionAmount					  					= TotalDistributionAmount * -1
								invoked.DistributionAmount.CurrencyAmount	  					= TotalDistributionAmount * -1
								invoked.Description							  					= OffsetDescription
								invoked.OffsetDistribution					  					= true
								
							if(HasDistributionApproval and ReconciliationCodeBlock.AccountingEntity.BypassApprovalCode != PrmApprovalCode)
								invoke SubmitForDistributionApproval
									invoked.PrmApprovalCode = PrmApprovalCode
							else	
								invoke ReleaseAllDistributions PeriodEndDistribution
									invoked.PrmReconciliationManagementGroup	  = ReconciliationManagementGroup
									invoked.PrmReconciliationAccountStructure	  = ReconciliationAccountStructure
									invoked.PrmReconciliationAccount			  = PeriodEndReconciliation.ReconciliationAccount
									invoked.PrmGeneralLedgerCloseConfiguration    = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
									invoked.PrmGeneralLedgerClosePeriod			  = PeriodEndReconciliation.GeneralLedgerClosePeriod
				
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								if (each.EnteredDistributionsRel exists)
									invoke ReleaseDistributions InProcess each
										invoked.PrmApprovalCode = PrmApprovalCode

						if(EnteredDistributionsClosedPeriodRel exists)
							confirmation required
								"PeriodIsClosedForOneOrMore_\Accounting_\Entities.ReopenPeriodBeforeJournalizingOrDistributionsWillBePostedToCurrentOpenPeriod;DoYouWantToContinue?"	
				
				SubmitForDistributionApproval is an Instance Action
					restricted
					default label is "SubmitForDistributionApproval"
					Parameters
						PrmApprovalCode		is a ApprovalCode
							default label is "ApprovalCode"
							
					Action Rules
						if(ReconciliationManagementGroup.EnforceReconcilerCannotBeApprover)
							LocalApprovalCode = PrmApprovalCode
							LocalApprover	  = actor.agent(Employee).Employee
							constraint (!ApprovalCodeResourceByResourceRel exists)
								"PersonSubmittingDistributionsCannotBeTheApprover"
							OriginalSubmittingResource = actor

						invoke Entered.SetToPendingApproval EnteredDistributionsRel
						DistributionApprovalCode = PrmApprovalCode
						LocalApprovalCode = PrmApprovalCode
						include GetNextApprovalLevelForDistribution
						DistributionApprovalLevel = LocalDistributionApprovalLevel
						DistributionApprover = LocalDistributionApprover
						DistributionApproverTeam = LocalDistributionApproverTeam
						include InitiateDistributionApprovalProcessFlow
										
				JournalizeDistributions is an Instance Action 
					valid when (HasReleasedDistributions)
					Action Rules
						if (LevelType.Account) 
							invoke JournalizeDistributions PeriodEndDistribution
								invoked.PrmReconciliationManagementGroup	= ReconciliationManagementGroup
								invoked.PrmReconciliationAccountStructure	= ReconciliationAccountStructure
								invoked.PrmReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
								invoked.PrmPeriodEndReconciliation			= PeriodEndReconciliation.SequenceNumber
								invoked.PrmGeneralLedgerCloseConfiguration  = PeriodEndReconciliation.ReconciliationAccount.CloseConfiguration
								invoked.PrmGeneralLedgerClosePeriod			= PeriodEndReconciliation.GeneralLedgerClosePeriod
								invoked.PrmPostThruPeriod					= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
						
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke JournalizeDistributions InProcess each
															
				CompleteReconciliationLate is an Instance Action
					default label is "Complete"
					subject is CloseTaskLate 
					valid when (CompleteReconciliationLateValid)

					Parameters
						PrmLateComment		is Alpha size up to 500

					Action Rules
						if (ReconciliationManagementGroup.CloseManagementGroup.CloseLateReasonCodeRequired)
							constraint (reason code entered)			
								"ReasonCodeIsRequiredForClosingReconciliationLate"	

						if(ReconciliationManagementGroup.EnforceReconcilerCannotBeApprover
						and PeriodEndReconciliation.ReconciliationAccount.RequiresApproval)
							LocalApprovalCode = ApprovalCode
							LocalApprover	  = actor.agent(Employee).Employee
							constraint (!ApprovalCodeResourceByResourceRel exists)
								"PersonSubmittingReconciliationCannotBeTheApprover"
							OriginalSubmittingResource = actor

						include ReconciliationCompletionEdits
						
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke CompleteReconciliationLate InProcess each
									invoked.reason code		= reason code
									invoked.PrmLateComment 	= PrmLateComment
						
						if (IsAccountWithinIndependentGroup)
							if (!OpenPeriodReconciliationWithinGroupRel exists)
								invoke CompleteReconciliationLate InProcess ParentPeriodEndReconciliation
									invoked.reason code		= reason code
									invoked.PrmLateComment 	= PrmLateComment
											
						invoke Create TaskReasonCodeUsage
							invoked.CloseManagementGroup	= ReconciliationManagementGroup
							invoked.ClosePeriod.Year		= PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
							invoked.ClosePeriod.Period		= PeriodEndReconciliation.GeneralLedgerClosePeriod.PeriodNumber
							invoked.ClosePeriodTask			= first ClosePeriodTaskRel.ClosePeriodTask
							invoked.ReasonCode				= reason code
							invoked.Description				= reason code.Description
							invoked.Type					= 3 
							invoked.Comment					= PrmLateComment
					Exit Rules
						invoke Create ReconciliationReasonCodeUsage
							invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
							invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
							invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
							invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
							invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
							invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
							invoked.ReasonCode												= reason code
							invoked.Description												= reason code.Description
							invoked.Type													= 4 
							invoked.Comment													= PrmLateComment

				Complete is an Instance Action
					valid when (CompleteReconciliationValid)
					completion message is "<ReconciliationCompletionMessage>"
					Action Rules
						if(ReconciliationManagementGroup.EnforceReconcilerCannotBeApprover
						and PeriodEndReconciliation.ReconciliationAccount.RequiresApproval)
							LocalApprovalCode = ApprovalCode
							LocalApprover	  = actor.agent(Employee).Employee
							constraint (!ApprovalCodeResourceByResourceRel exists)
								"PersonSubmittingReconciliationCannotBeTheApprover"
							OriginalSubmittingResource = actor

						include ReconciliationCompletionEdits
					
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke Complete InProcess each
								
						if (IsAccountWithinIndependentGroup)
							if (!OpenPeriodReconciliationWithinGroupRel exists)
								invoke Complete InProcess ParentPeriodEndReconciliation
								 		
			PendingApproval is a State
				on entrance to PendingApproval
					Action Rules
						PendingApprovalTimestamp = current timestamp
						
				Resume is an Instance Action
					valid when (IsAccountWithinIndependentGroupInOpenStatus)
					Action Rules
						initialize AutoReconciled
						initialize PendingApprovalTimestamp
							
						make transition to InProcess
						
						ViewableByAuditor = false
										
			Closed is a State
				on entrance to Closed
					Action Rules
						ViewableByAuditor = true
						ClosedTimestamp = current timestamp
						if (!OpenReconciliationsByCloseTaskRel exists)
							invoke CloseTask ClosePeriodTaskRel
				
				RemoveFromAuditorView is an Instance Action
					valid when (CanRemoveFromAuditorView)
					Action Rules
						ViewableByAuditor = false
						if (LevelType.Group) 
							for each PeriodEndReconciliation children
								invoke FastUpdate each
									invoked.ViewableByAuditor = false
								 	
				AddToAuditorView is an Instance Action
					valid when (CanAddToAuditorView)
					Action Rules
						ViewableByAuditor = true
						if (LevelType.Group) 
							for each PeriodEndReconciliation children
								invoke FastUpdate each
									invoked.ViewableByAuditor = true
								 
				Reopen is an Instance Action
					valid when (IsConsolidatedGroupStandaloneNonAccountOrAccountWithinIndependentGroup)
					subject is ReopenReconciliation
					Parameters
						PrmFinanceTeam		is a FinanceTeam
				    		default label is "Team"
						PrmAssignedResource	is a FinanceTeamMember
							default label is "TeamMember"
						PrmComment			is Alpha size up to 500
					
					Parameter Rules
						PrmAssignedResource
							if (PrmFinanceTeam entered)
								required
									"TeamMemberIsRequiredWhenTeamIsEnteredWhileReopeningThePeriodReconciliation"
								
					Action Rules
						if (IsAccountWithinIndependentGroup)
							constraint (PeriodEndReconciliation.ReconciliationAccount.Active)
								"CannotReopen;ReconciliationAccountWithinIndependentGroup<ParentPeriodEndReconciliation.ReconciliationGroup>IsInactive"
							
						if (ReconciliationManagementGroup.ReopenReconReasonCodeRequired)			
							constraint (reason code entered)
								"ReasonCodeIsRequiredForReopeningTheReconciliation"
								
						if (first ClosePeriodTaskRel.TaskStatus.Closed
						and ReconciliationManagementGroup.CloseManagementGroup.ReopenTaskReasonCodeRequired)			
							constraint (reason code entered)
								"ReasonCodeIsRequiredForReopeningTheAssociatedCloseTask"												
						
						if (PrmFinanceTeam entered)
							FinanceTeam			= PrmFinanceTeam
						
						if (PrmAssignedResource entered)
							AssignedResource	= PrmAssignedResource
						
						initialize AutoReconciled
						initialize PendingApprovalTimestamp
						initialize ClosedTimestamp
							
						make transition to InProcess
						
						ViewableByAuditor = false
		
						if (IsConsolidatedGroup)
							for each PeriodEndReconciliation children
								invoke Reopen Closed each
									invoked.PrmFinanceTeam		= FinanceTeam
									invoked.PrmAssignedResource	= AssignedResource
									invoked.PrmComment  		= PrmComment
									invoked.reason code			= reason code
						
						if (IsAccountWithinIndependentGroup
						and	ParentPeriodEndReconciliation.Status.Closed)
							invoke Reopen Closed ParentPeriodEndReconciliation
								invoked.PrmFinanceTeam		= FinanceTeam
								invoked.PrmAssignedResource	= AssignedResource
								invoked.PrmComment  		= PrmComment
								invoked.reason code			= reason code
												
					Exit Rules
						invoke Create ReconciliationReasonCodeUsage
							invoked.ReconciliationManagementGroup							= ReconciliationManagementGroup
							invoked.ReconciliationAccountStructure							= ReconciliationAccountStructure
							invoked.PeriodEndReconciliation.ReconciliationAccount			= PeriodEndReconciliation.ReconciliationAccount
							invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PeriodEndReconciliation.GeneralLedgerCloseConfiguration
							invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= PeriodEndReconciliation.GeneralLedgerClosePeriod
							invoked.PeriodEndReconciliation.SequenceNumber					= PeriodEndReconciliation.SequenceNumber
							invoked.ReasonCode												= reason code
							invoked.Description												= reason code.Description
							invoked.Type													= 2 
							invoked.Comment													= PrmComment
						
						if (first ClosePeriodTaskRel.TaskStatus.Closed)
							invoke Reopen ClosePeriodTaskRel
						
						if (!IsAccountWithinConsolidatedGroup)
							LocalActor = AssignedResource.TeamMember.FinanceResourceActor
							if (LocalActor entered)					
								if (ReconciliationReconcilerRel exists)					
									send notification
										to	LocalActor
										description is "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasReopened:<DerivedReconciliationAccountDescription>"
										priority is very high
										linkback (webapp is Reconciler navigation is ResourceNotificationNav text is "ViewReconciliation")
								else
									send notification
										to	LocalActor
										description is "ReconciliationForPeriod<PeriodEndReconciliation.GeneralLedgerClosePeriod>WasReopened:<DerivedReconciliationAccountDescription>"
										priority is very high
										linkback (webapp is ReconciliationManager navigation is ResourceNotificationNav text is "ViewReconciliation")
