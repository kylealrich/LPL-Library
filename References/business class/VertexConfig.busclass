VertexConfig is a BusinessClass	
    owned by tx
    prefix is VtxCf

	Ontology
		symbolic key is VertexConfig   

	Patterns
        disable EffectiveDated
		disable Auditing
		implements CreateStamp
		implements UpdateStamp

	Persistent Fields
		DefaultVersion			is a VertexConfigVersion
		LastLookupSequence		is Numeric 6				
		LastSequence			
        ContactName      		is Alpha 100
        PhoneNumber      		is a TelephoneNumber 
        	holds pii
        EmailAddress
        CommentText
        WriteToLogFile			is Boolean
        Logo					is a LogoAttachment
 		DisplayOn				is Boolean
 			restricted 										

 			default label is untranslatable
 		DebugMode				is Boolean
  		ReturnAssistedParameters is Boolean			
		ReturnVertexTaxIn		is Alpha 1				 
			States
				Default			value is blank	 
				Summary			value is "S"	 			 
				Detail			value is "D"	
					default label is "Detail"
			restricted 										

    Relations			 

        VertexVersionRel
        	one-to-many relation to VertexConfigVersion
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= VertexConfig

		VertexConfigVersionRel
        	one-to-many relation to VertexConfigVersion
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= VertexConfig 
			Instance Selection
				where (related.VertexConfigVersion.Version 			= DefaultVersion.Version
				and	   related.VertexConfigVersion.ServiceRelease 	= DefaultVersion.ServiceRelease
				and	   related.VertexConfigVersion.ServerName 		= DefaultVersion.ServerName)

		VertexConfigVersionRel1to1
        	one-to-one relation to VertexConfigVersion
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= VertexConfig 
				related.VertexConfigVersion.Version 				= DefaultVersion.Version
				related.VertexConfigVersion.ServiceRelease 			= DefaultVersion.ServiceRelease
				related.VertexConfigVersion.ServerName 				= DefaultVersion.ServerName				
								  
  		VertexGenericTaxCodeRel
			one-to-one relation to TaxCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= VertexConfig
				related.TaxCode						= "00"

		TaxLogHeaderRel	 
			one-to-many relation to TaxLogHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= VertexConfig

 		TaxConfigurationRel	
        	one-to-one relation to TaxConfiguration
        	Field Mapping uses symbolic key
				related.TaxConfiguration = VertexConfig




        Vertex7AccrualParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "ACCRUAL.WSI.WSDL" 

        Vertex7QuotationParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "QUOTATION.WSI.WSDL" 
                
        Vertex7InvoiceParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICE.WSI.WSDL" 

        Vertex7InvVerParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICEVERIFICATION.WSI.WSDL" 

       	Vertex7PurchOrderParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE.WSI.WSDL"

      	Vertex7LookupTaxAreaParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.WSDL"
                                                               					
 



        Vertex8AccrualParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "ACCRUAL80.WSI.WSDL" 
 
        Vertex8QuotationParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "QUOTATION80.WSI.WSDL" 
                
        Vertex8InvoiceParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICE80.WSI.WSDL" 

        Vertex8InvVerParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICEVERIFICATION80.WSI.WSDL" 

       	Vertex8PurchOrderParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE80.WSI.WSDL"

      	Vertex8LookupTaxAreaParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS80.WSI.WSDL"    




       	VertexCalculateTax90Rel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90.WSI.ENDPOINT"
 
      	VertexLookupTaxAreas90Rel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90.WSI.ENDPOINT"
											

	Transient Fields	

		VertexCentralLink						is a URLAddress
			derive value from VertexConfigVersionRel.VertexCentralURL

	Conditions
		LogFileRecordsExist
			restricted
			when (TaxLogHeaderRel exist)
		VertexVersion7
			restricted
			when (DefaultVersion.Version[1:1] = 7)
		VertexVersion8
			restricted
			when (DefaultVersion.Version[1:1] = 8)			
		VertexVersion9
			restricted
			when (DefaultVersion.Version[1:1] = 9)
								

	Local Fields

		CompletionMessage			is Alpha 100						      		

	Field Rules

		DefaultVersion
			if (action type.Update)	
				required


	Derived Fields

		VertexTaxCodeDescription is a MessageField
			restricted
			"VertexTaxCode"
		DerivedVertexVersion is a DerivedField
			type is Alpha 1
			return DefaultVersion.Version[1:1]
			
		VertexLinkMsg is a DerivedField	  
			type is MessageField
			return "<" + PutVertexLinkHereMsg + ">"
			 
			return blank		
		PutVertexLinkHereMsg is a MessageField
			"PutVertexLinkHere"
									

	Actions

		Create is a Create Action
			Action Rules
				if (VertexGenericTaxCodeRel not exist)
					invoke Create VertexGenericTaxCodeRel
						invoked.FinanceEnterpriseGroup 	= VertexConfig
						invoked.TaxCode					= "00"
						invoked.TaxType					= "S"
						invoked.Description				= VertexTaxCodeDescription						
																	
		Update is an Update Action
		Delete is a Delete Action
			
		IncrementLastLookupSequence is an Instance Action
			restricted
			Action Rules
				if (LastLookupSequence = 999999)
					initialize LastLookupSequence
				LastLookupSequence = LastLookupSequence + 1	

		ToggleWriteToLogFlag is an Instance Action		
			restricted
			valid when (DebugMode)	
			completion message is "Write\To\LogIsNow:<WriteToLogFile>"				
			Action Rules
				if (WriteToLogFile)
					WriteToLogFile = false
				else
					WriteToLogFile = true	

		LoadVertexV9TemplateFiles is an Instance Action
			restricted
			valid when (TaxConfigurationRel.VertexVersion9UT)


			Parameters
				LoadCalculateTaxRecord 	is Boolean
				LoadLookupTaxAreaRecord is Boolean				
			Action Rules
				invoke LoadV9TemplatePatternFiles TaxConfigurationRel in foreground
					invoked.LoadCalculateTaxRecord	= LoadCalculateTaxRecord
					invoked.LoadLookupTaxAreaRecord	= LoadLookupTaxAreaRecord



		LoadVertexConfigParameters is an Instance Action

			completion message is "<CompletionMessage>"	



			Parameters
				UpdateTrustedId is Boolean
				PrmTrustedId is a VertexTrustedId
					default label is "TrustedId"
				LoadCalcTaxConfigParameter is Boolean		 
					default label is "Load_\Calculate\Tax_\Configuration\Parameter"
				LoadLookupTaxAreasConfigParameter is Boolean
					default label is "Load_\Lookup\Tax\Areas_\Configuration\Parameter"






				CalcTaxWsdlValue is Text		 
					default label is "Calculate\Tax_\W\S\D\LValue"				
				LookupTaxAreaWsdlValue is Text
					default label is "Lookup\Tax\Areas_\W\S\D\LValue"
			Local Fields
				VertexVersion is Alpha 1
					States
						Seven	value is "7"
						Eight	value is "8"
						Nine	value is "9"			




			Action Rules




				VertexVersion = DerivedVertexVersion 						
				if (UpdateTrustedId)
					constraint (PrmTrustedId entered)
						"TrustedIDRequired"
					if (DefaultVersion.TrustedId not entered)
						invoke Update DefaultVersion 
							invoked.TrustedId = PrmTrustedId
				if (LoadCalcTaxConfigParameter)
					constraint (CalcTaxWsdlValue entered)
						"CalculateTaxURLRequired"
				if (LoadLookupTaxAreasConfigParameter)
					constraint (LookupTaxAreaWsdlValue entered)
						"LookupTaxAreasURLRequired"
						



				if (VertexVersion.Seven)
					if (LoadLookupTaxAreasConfigParameter)						
						if (Vertex7LookupTaxAreaParamRel not exist)
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.WSDL"    	 
								invoked.Type									= blank
								invoked.Length									= blank  
								invoked.Value 									= LookupTaxAreaWsdlValue
							CompletionMessage = "ConfigurationParametersSuccessfullyCreated"
						else
							invoke Update Vertex7LookupTaxAreaParamRel	 
									invoked.Type								= blank
									invoked.Length								= blank 
									invoked.Value 								= LookupTaxAreaWsdlValue									
							CompletionMessage = "ConfigurationParameterAlreadyExists"						 		
							
					if (LoadCalcTaxConfigParameter)
						if (Vertex7AccrualParamRel exists)
							invoke Update Vertex7AccrualParamRel
								invoked.Value 									= CalcTaxWsdlValue
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "ACCRUAL.WSI.WSDL"  
								invoked.Length									= 300  
								invoked.Value 									= CalcTaxWsdlValue								
							
						if (Vertex7QuotationParamRel exists)
							invoke Update Vertex7QuotationParamRel
								invoked.Value 									= CalcTaxWsdlValue	 
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "QUOTATION.WSI.WSDL"  
								invoked.Length									= 300             	
								invoked.Value 									= CalcTaxWsdlValue

						if (Vertex7InvoiceParamRel exists)
							invoke Update Vertex7InvoiceParamRel
								invoked.Value 									= CalcTaxWsdlValue
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "INVOICE.WSI.WSDL"  
								invoked.Length									= 300  
								invoked.Value 									= CalcTaxWsdlValue									
								
						if (Vertex7PurchOrderParamRel exists)
							invoke Update Vertex7PurchOrderParamRel
								invoked.Value 									= CalcTaxWsdlValue	 					
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE.WSI.WSDL"  
								invoked.Length									= 300         
								invoked.Value 									= CalcTaxWsdlValue								
								
						if (Vertex7InvVerParamRel exists)
							invoke Update Vertex7InvVerParamRel
								invoked.Value 									= CalcTaxWsdlValue	 					
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "INVOICEVERIFICATION.WSI.WSDL"  
								invoked.Length									= 300
								invoked.Value 									= CalcTaxWsdlValue								
								
							CompletionMessage = "ConfigurationParameterAlreadyExistsForVersion<VertexVersion>"	

				if (VertexVersion.Eight)



					if (LoadLookupTaxAreasConfigParameter)	
						if (Vertex8LookupTaxAreaParamRel exists)
							invoke Update Vertex8LookupTaxAreaParamRel
								invoked.Value 									= LookupTaxAreaWsdlValue							
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "LOOKUPTAXAREAS80.WSI.WSDL"    	 
								invoked.Type									= blank
								invoked.Length									= 300  
								invoked.Value 									= LookupTaxAreaWsdlValue			
									
					if (LoadCalcTaxConfigParameter)
						if (Vertex8AccrualParamRel exists)
							invoke Update Vertex8AccrualParamRel
								invoked.Value 									= CalcTaxWsdlValue	
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "ACCRUAL80.WSI.WSDL"  // No "s", No ?wsdl
								invoked.Length									= 300  
								invoked.Value 									= CalcTaxWsdlValue								
							
						if (Vertex8QuotationParamRel exists)
							invoke Update Vertex8QuotationParamRel
								invoked.Value 									= CalcTaxWsdlValue	 
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "QUOTATION80.WSI.WSDL"  
								invoked.Length									= 300             	
								invoked.Value 									= CalcTaxWsdlValue

						if (Vertex8InvoiceParamRel exists)
							invoke Update Vertex8InvoiceParamRel
								invoked.Value 									= CalcTaxWsdlValue
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "INVOICE80.WSI.WSDL"  
								invoked.Length									= 300  
								invoked.Value 									= CalcTaxWsdlValue									
								
						if (Vertex8PurchOrderParamRel exists)
							invoke Update Vertex8PurchOrderParamRel
								invoked.Value 									= CalcTaxWsdlValue	 					
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE80.WSI.WSDL"  
								invoked.Length									= 300         
								invoked.Value 									= CalcTaxWsdlValue								
								
						if (Vertex8InvVerParamRel exists)
							invoke Update Vertex8InvVerParamRel
								invoked.Value 									= CalcTaxWsdlValue	 				
						else
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "INVOICEVERIFICATION80.WSI.WSDL"  
								invoked.Length									= 300
								invoked.Value 									= CalcTaxWsdlValue								
					
							CompletionMessage = "ConfigurationParameterAlreadyExistsForVersion<VertexVersion>"		

					 



				if (VertexVersion.Nine)
					if (CalcTaxWsdlValue matches "wsdl")				// No "s", No ?wsdl
						constraint (true)
							"RemovedTheQuestionMarkAndWsdlForVersion9"	
					
					if (LoadCalcTaxConfigParameter)
						if (VertexCalculateTax90Rel not exist)		 
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90.WSI.ENDPOINT"    
								invoked.Type									= blank
								invoked.Length									= blank   
								invoked.Value 									= CalcTaxWsdlValue	 
							CompletionMessage = "ConfigurationParametersSuccessfullyCreatedForVersion9"
						else
							invoke Update VertexCalculateTax90Rel	 
									invoked.Type								= blank
									invoked.Length								= blank  
									invoked.Value 								= CalcTaxWsdlValue
							CompletionMessage = "ConfigurationParameterAlreadyExists;ValueUpdatedForVersion<VertexVersion>"							

					if (LoadLookupTaxAreasConfigParameter)		
						if (VertexLookupTaxAreas90Rel not exist)			 
							invoke Create ConfigurationParameter	 
								invoked.ConfigurationParameter.ConfigurationID	= "config"
								invoked.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90.WSI.ENDPOINT"    
								invoked.Type									= blank
								invoked.Length									= blank  
								if (LookupTaxAreaWsdlValue entered)
									invoked.Value 								= LookupTaxAreaWsdlValue
								else	
									invoked.Value 								= VertexLinkMsg
							CompletionMessage = "ConfigurationParametersSuccessfullyCreated"
						else
							invoke Update VertexLookupTaxAreas90Rel	 
									invoked.Type								= blank
									invoked.Length								= blank  
									invoked.Value 								= LookupTaxAreaWsdlValue
							CompletionMessage = "ConfigurationParameterAlreadyExistsForVersion<VertexVersion>"		


		ClearTaxConfigurationCommentText is an Instance Action	

			Parameters
			Local Fields
			Parameter Rules	
			Action Rules
				invoke Update TaxConfigurationRel				
					initialize invoked.CommentText  

