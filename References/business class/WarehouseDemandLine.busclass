WarehouseDemandLine is a BusinessClass
    owned by wh
    prefix is WDM
    classic name is WHDEMAND

    Ontology
        symbolic key is WarehouseDemandLine
            classic set name is WDMSET0
            classic name for WarehouseDemandLine.DemandDocumentType is DOC-TYPE
            classic name for WarehouseDemandLine.LineNumber is LINE-NBR
            classic name for WarehouseDemandLine.ComponentSequence is COMPONENT-SEQ
            classic name for WarehouseDemand.DemandSystemCode is SYSTEM-CD
            classic name for WarehouseDemand.DemandDocument is DOC-NBR
            classic name for InventoryLocation is LOCATION

    Patterns
        implements StaticJava
        disable AuditIndex
	
	Context Fields
		Requisition
		RequisitionLine
		PurchaseOrder
		PurchaseOrderLine
		PurchaseOrderLineSource
		PurchaseOrderReceipt
		PurchaseOrderReceiptLine
		CustomerOrder
		CustomerOrderLine
		WarehouseShipment
		WarehouseShipmentLine
		WarehouseShipmentLineComponent
		InventoryTransaction
		InventoryTransactionLine
		WorkOrder
		WorkOrderItem

    Persistent Fields
        DocumentNumberNumeric
            classic name is DOC-NBR-NUM
        DemandRecordType                is AlphaUpper size 1
            classic name is RECORD-TYPE
            States
                Demand 			value is "D"
                Supply 			value is "S"
				Reservation 	value is "R"
        ItemDescription                 is a Description
            classic name is ITEM-DESC
        Destination
        RouteStop						is like RouteStop
            classic name is STOP
        RouteExists                     is Boolean
            classic name is RTE-CREATE-FL
        Status                          is Numeric size 1
            States
                Unreleased            value is 0
                ReleasedForProcessing value is 1
                    default label is "Released for Processing"
                Released              value is 2
        OnHold                          is Boolean
            classic name is HOLD-FL
        FutureDemand                    is Boolean
            classic name is FUTURE-FL
        Allocatable                     is Boolean
            classic name is ALLOCABLE-FL
        AllocationBasis
            classic name is ALLOC-BASIS
        LineType                        is AlphaUpper size 1
            States
                Inventoried value is "I"
                Nonstock    value is "N"
                Special     value is "X"
        FillOrKill
        Quantity
			protected
			precision is Item.NumberOfDecimalsQuantity
		KitType                         is AlphaUpper size 1
            classic name is KIT-FL
            States
                MakeToOrderKit value is "O"
                    default label is "Make-to-Order Kit"
                MakeToStockKit value is "S"
                    default label is "Make-to-Stock Kit"
                NotAKit        value is "N"
                    default label is "Not a Kit"
		KitComplete                     is Boolean
		BasedOnPurchaseOrderReceipt     is Boolean
            classic name is PO-FLAG
        AllocatedQuantity               is a Quantity
            classic name is ALLOC-QTY
			precision is Item.NumberOfDecimalsQuantity
        BackorderedQuantity             is a Quantity
			protected
            classic name is BACKORD-QTY
			precision is Item.NumberOfDecimalsQuantity
        PrintedQuantity                 is a Quantity
			protected
            classic name is PRINTED-QTY
			precision is Item.NumberOfDecimalsQuantity
        InProcessQuantity               is a Quantity
			protected
            classic name is IN-PROC-QTY
			precision is Item.NumberOfDecimalsQuantity
        ShippedQuantity                 is a Quantity
			protected
            classic name is SHIPPED-QTY
			precision is Item.NumberOfDecimalsQuantity
        PreAssembledKitQuantity         is a Quantity
			protected
            classic name is PRE-ASMBLD-KIT
			precision is Item.NumberOfDecimalsQuantity
        DetailQuantity                  is a Quantity
			protected
            classic name is DETAIL-QTY
			precision is Item.NumberOfDecimalsQuantity
		ReservedQuantity                  is a Quantity
			protected
			precision is Item.NumberOfDecimalsQuantity
        UnitPrice                       is an InternationalCost
        UnitCost                        is an InternationalCost
        	precision is Item.NumberOfDecimalsCost
        TransactionUOM                  is a UnitOfMeasure
            classic name is TRAN-UOM
        TransactionUOMMultiplier        is an UOMMultiplier
            classic name is TRAN-UOM-MULT
        ConfirmDemand                   is Boolean
            classic name is FIRM-FL
        RequireCompleteShipment         is Boolean
            classic name is SHIP-COMP-FL
        BackorderAllowed                is Boolean
            classic name is BACK-ORD-FL
        RequirePickingFeedback          is Boolean
            classic name is PICKING-REQ
        RequirePackingFeedback          is Boolean
            classic name is PACKING-REQ
        DetailRequired                  is Boolean
            classic name is DETAIL-REQ
        AllocationPriority
            classic name is ALLOC-PRI
        MSDSRequired                    is Boolean
            classic name is MSDS-REQ-FL
        Vendor
        Carrier                         is a Vendor
        CustomerShipTo                  is a ShipTo
            classic name is CUST-SHIP-TO



        CompanyAndLocation
        	classic name for CompanyAndLocation.RequestingCompany is REQ-COMPANY
            classic name for CompanyAndLocation.RequestingLocation is REQ-LOCATION
        AllocationDate                  is Date
            classic name is ALLOCATE-DT
        RouteHeader						is like RouteHeader
		EstimatedTransactionDate		is Date
			classic name is EST-TRAN-DT
        SuggestedLot                    is an ItemLot

        Rush                            is Boolean
            classic name is RUSH-FL
        WarehouseDemandLineObjectID     is an ObjId
            classic name is OBJ-ID-DMND
        WarehouseSequence
            classic name is SEQ
        EnteredItem
        ItemEntryMethod
            classic name is ENTRY-FL
        RequisitionInterfaceInformation
            classic name for RequisitionInterfaceInformation.SurgerySystemSource is RQSRC-MACHINE
            classic name for RequisitionInterfaceInformation.SurgerySystemRequisitionReference is PAR-ORDER-ID
        ShippingAccount                 is a FinanceCodeBlock
            classic name for ShippingAccount.AccountingUnit is SHIP-ACCT-UNIT
            classic name for ShippingAccount.GeneralLedgerChartAccount is SHIP-ACCOUNT
        ItemLocation
        HSNSACCode
		EAMWorkOrder
			protected
		EAMWorkOrderActivity
			protected
		ErrorMessage				is Alpha size 150
		PickListPrintRun			is like WarehouseResult
		ScheduledProcedure 			is like ScheduledProcedure
			protected
		ScheduledProcedureLine		is like ScheduledProcedureLine
			protected
		PreferenceCardTransaction	is Boolean
			protected
		WarehouseZone
			protected	

	Local Fields
		LocalNotReadyForRelease 				is Boolean
		LocalMinimumCompleteKit					is like Quantity
		LocalAllocatableQuantity				is like Quantity
		LocalComponentQuantity					is like Quantity
		LocalUpdateFromAllocation				is Boolean
		LocalAllocatedQuantity					is like Quantity		
		LocalBackorderedQuantity				is like Quantity		
		LocalUnallocatedItemLocation 			is like Quantity		
		LocalBackorderedItemLocation 			is like Quantity		
		LocalAllocatedItemLocation	 			is like Quantity		
		LocalPrintedQuantity					is like Quantity 
		LocalInProcessQuantity					is like Quantity 
		LocalPreAssembledKitQuantity			is like Quantity 
		LocalDetailQuantity						is like Quantity 
		LocalShippedQuantity					is like Quantity

		LocalDropship 							is Boolean			
		LeadtimeDays														
		LocalPercentChange						is like LeadtimeDays			
		LocalLastLeadtime 						is like LeadtimeDays			
		LocalItem 								is like Item
		LocalLeadtimeControl                	is AlphaUpper size 1
		LocalQuantity							is like Quantity
		LocalComSeq								is Numeric size 3
		LocalComponentItem						is like Item
		LocalKitComponentSequence				is Numeric size 3
		LocalKitItemCompany						is like Company
		LocalKitItemLocation					is like InventoryLocation
		LocalDetailCatchweightQuantity			is like Quantity
		LocalKitComponentQuantity				is like Quantity
		LocalItemGroup							is like ItemGroup
		LocalCompany							is like InventoryCompany 
		LocalLocation							is like InventoryLocation 
		LocalWarehouseBatch						is like WarehouseBatch
		LocalShipmentNumber  					is like WarehouseShipment
		LocalShipmentLine  						is like WarehouseShipmentLine
		LocalKitComponent						is Numeric size 3
		LocalReportFinanceEnterpriseGroup 		is like FinanceEnterpriseGroup
		LocalWarehouseResult					is like WarehouseResult
		LocalReqLocationGroup					is like RequestingReportGroup
		LocalErrorMessage						is Alpha size 150
		LocalBinTotalBinQuantity				is like Quantity
		LocalTempCounter						is Numeric 2	
		LocalTransactionUOM						is like UnitOfMeasure
		LocalShipmentOutRecordType              is Numeric size 1
            States
            	Shipment						value is 1
            	ShipmentLine					value is 2
            	ShipmentLineComponent			value is 3
            	ShipmentLineDetail				value is 4
            	Comment							value is 5
		LocalCounter							is Numeric size 9
		LocalBin								is like Bin
		LocalSerial								is like ItemSerialNumber
		LocalLot								is like ItemLot
		LocalSublot								is like Sublot
		LocalNotAllowDetailCreation				is Boolean
		LocalWarehouseShipment 					is like WarehouseShipment
		LocalWarehouseShipmentLine				is like WarehouseShipmentLine
		LocalExcessQuantity 					is like Quantity

	Transient Fields
		TransientOriginatingTransaction			is BusinessObjectReference
		TransAllocatedQuantity					is like Quantity
			derive value from DerivedAllocatedAndPrintedQuantity
			precision is Item.NumberOfDecimalsQuantity
		TransOnOrderQuantity					is like Quantity
		CancelQuantity							is like Quantity
		TransWhoecAllocable             		is AlphaUpper size 1		
			States
                Batch 							value is "B"
                Online   						value is "O"
		TransActionType 						is AlphaUpper size 1		
        	States
        		Change							value is "C"
        		Add								value is "A"
        		Delete							value is "D"
        		Release							value is "R"
        		BackorderedAllocation			value is "B"
        		HoldDeallocation				value is "H"
        		
        TransFunctionCode						is AlphaUpper size 1		
       		States
	       		A								value is "A"
	       		C								value is "C"
	    		B								value is "B"
	    		D								value is "D"  
	    		
	    TransKitSpecialFunction					is AlphaUpper size 1		
      		States
      			NotEntered						value is "N"
      			Alloc							value is "A"	
      			Backord							value is "B"
	    TransAlloc								is Boolean					
		TransDeAlloc							is Boolean					
		TransSLSQuote							is Boolean						
		TransORIGSLSQuote						is Boolean
		TransOrderType							is like OrderEntryOrderType	
		TransUnAllocatedQuantity				is like Quantity
		TransientOnline							is Alpha size 1
			derive value from DeriveReturnYes

	Derived Fields
		TransactionDateErrorMessage is a MessageField
    		restricted
    		"DocumentTransactionDateIsGreaterThanParameterTransactionDate"

		KitOptionErrorMessage is a MessageField
    		restricted
			"LineHasKitOptionsToBeSelected"
		
		DemandOnHoldErrorMessage is a MessageField
    		restricted
			"DemandIsOnHold"
		
		CustomerOnHoldErrorMessage is a MessageField
    		restricted
			"Customer" + WarehouseDemand.Customer + "OnHold;DemandNotProcessed"
		
		PickListPrintedErrorMessage is a MessageField
    		restricted
			"PickListForThisDocumentHasAlreadyBeenPrinted"

		InsufficientSOHErrorMessage is a MessageField
    		restricted
			"InsufficientStockOnHandQuantityInTheRequestedUOM"

		LinesOnBackOrderErrorMessage is a MessageField
    		restricted
			"OrderIsShipComplete;SomeLinesAreOnBackorder"
		
		LinesOnHoldErrorMessage is a MessageField
    		restricted
			"OrderIsShipComplete;LinesOnHoldOrFutureShipDate"
		
		LinesAllocatedErrorMessage is a MessageField
    		restricted
			"OrderIsShipComplete;SomeLinesAreNotAllocated"
		
		BackOrderExistsErrorMessage is a MessageField
    		restricted
			"OrderLineIsShipComplete;BackorderExists"

		ContainsRoutingInfoErrorMessage is a MessageField
    		restricted
			"DocumentContainsRoutingInformation"

		InsufficientBinDetailsErrorMessage is a MessageField
    		restricted
			"Insufficient_BinDetailsAvailableForThisItem"
		
		OrderOnHoldErrorMessage is a MessageField
    		restricted
			"OrderIsPlacedOnHold"

		DeriveReturnYes is a DerivedField
			type is Alpha size 1
			return "Y"

		DerivedSetOriginatingTransaction is a DerivedField
			type is Boolean
			if (WarehouseShipmentLineComponent entered)
				TransientOriginatingTransaction = reference to WarehouseShipmentLineComponent
				return true
			else
			if (WarehouseShipmentLine entered)
				TransientOriginatingTransaction = reference to WarehouseShipmentLine
				return true
			else
			if (InventoryTransactionLine entered)
				TransientOriginatingTransaction = reference to InventoryTransactionLine
				return true
			else
			if (WorkOrderItem entered)
				TransientOriginatingTransaction = reference to WorkOrderItem
				return true
			else
			if (CustomerOrderLine entered)
				TransientOriginatingTransaction = reference to CustomerOrderLine
				return true
			else
			if (PurchaseOrderLineSource entered)
				TransientOriginatingTransaction = reference to PurchaseOrderLineSource
				return true
			else
			if (PurchaseOrderReceiptLine entered)
				TransientOriginatingTransaction = reference to PurchaseOrderReceiptLine
				return true
			else
			if (PurchaseOrderLine entered)
				TransientOriginatingTransaction = reference to PurchaseOrderLine
				return true
			else
			if (RequisitionLine entered)
				TransientOriginatingTransaction = reference to RequisitionLine
				return true
			else
				TransientOriginatingTransaction = reference to this instance
				return true
			
		PurchaseOrderMessage is a MessageField
			restricted
			"Vendor:<Vendor>_-_<Vendor.VendorName>"
			
		RequisitionMessage is a MessageField
			restricted
			"Requesting_Location:<RequisitionLineRel.RequestingLocation>_-_<RequisitionLineRel.RequestingLocation.Name>"
			
		CustomerOrderMessage is a MessageField
			restricted
			"Customer:<WarehouseDemand.Customer>_-_<WarehouseDemand.BillName>"
			
		DemandExceedsAllocationMsg is a MessageField
			"AllocatedQuantityIsLessThanDemand"

		DemandLineDisplay is a LabelField
			"DocumentType<WarehouseDemandLine.DemandDocumentType>-Line<WarehouseDemandLine.LineNumber>"

		DemandOrigin                        	is a DerivedField
			type is MessageField
			if (FromCustomerOrder)
				return CustomerOrderMessage
			else
			if (FromRequisition)
				return RequisitionMessage
			else
			if (FromPO)
				return PurchaseOrderMessage

        OpenDemandQuantity                  	is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity		
            classic name is OPEN-DEMAND
            return (Quantity - PrintedQuantity)
		




			
        QuantityInTransactionUOM            	is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
        	restricted		
            classic name is TRAN-QUANTITY
            return (Quantity / TransactionUOMMultiplier)

        AllocatedQuantityInTransactionUOM   	is a DerivedField		
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
        	restricted	
            classic name is TRAN-ALLOCATED
			if (IsCatchWeight)
				return AllocatedQuantity
			else
				return (AllocatedQuantity / TransactionUOMMultiplier)

        BackorderedQuantityInTransactionUOM 	is a DerivedField		
            type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity 
        	restricted			
            classic name is TRAN-BACKORD
            return (BackorderedQuantity / TransactionUOMMultiplier)

        PrintedQuantityInTransactionUOM     	is a DerivedField		
            type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity 		
        	restricted	
            classic name is TRAN-PRINTED
            return (PrintedQuantity / TransactionUOMMultiplier)

        InProcessQuantityInTransactionUOM   	is a DerivedField		
            type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity 		
        	restricted	
            classic name is TRAN-IN-PROC
            return (InProcessQuantity / TransactionUOMMultiplier)

        ShippedQuantityInTransactionUOM     	is a DerivedField		
            type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity 		
        	restricted	
            classic name is TRAN-SHIPPED
            return (ShippedQuantity / TransactionUOMMultiplier)

		DerivedUOM								is a DerivedField
			type is like UnitOfMeasure
			default label is "UOM"
			if (HasItemLocationStockUOM)
				return DerivedLocationStockUOM
			else
			if (IsCatchWeight)
				return TransactionUOM
			else
				return Item.StockUOM

		DerivedLocationStockUOMMultiplier			is a DerivedField  
			type is like UOMMultiplier
			return ItemLocation.ItemLocationStockUOM.ItemUOM.UOMConversion

		DerivedLocationStockUOM						is a DerivedField 
			type is like UnitOfMeasure
			return ItemLocation.ItemLocationStockUOM.UnitOfMeasure

        OpenQuantityInLocationStockUOM            	is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
            return OpenQuantity / DerivedLocationStockUOMMultiplier

        OpenDemandQuantityInLocationStockUOM		is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
            return OpenDemandQuantity / DerivedLocationStockUOMMultiplier

        AllocatedQuantityInLocationStockUOM			is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
            return AllocatedQuantity / DerivedLocationStockUOMMultiplier

        PrintedQuantityInLocationStockUOM			is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
            return PrintedQuantity / DerivedLocationStockUOMMultiplier

        DerivedOpenQuantity            				is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
            if (HasItemLocationStockUOM)
				return OpenQuantityInLocationStockUOM
			else
				return OpenQuantity		

        DerivedOpenDemandQuantity					is a DerivedField	
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity	
			default label is "OpenDemandQuantity"
            if (HasItemLocationStockUOM)
				return OpenDemandQuantityInLocationStockUOM
			else
				return OpenDemandQuantity		

		DerivedAllocatableQuantityDisplay			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "AllocatableQuantity"
			if (HasItemLocationStockUOM)
				return AllocatableQuantityOfItemLocation / DerivedLocationStockUOMMultiplier
			else
				return AllocatableQuantityOfItemLocation

		DerivedAllocatedQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "AllocatedQuantity"
			if (HasItemLocationStockUOM)
				return AllocatedQuantity / DerivedLocationStockUOMMultiplier
			else
				return AllocatedQuantity

		DerivedBackorderedQuantityDisplay			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "BackorderedQuantity"
			if (HasItemLocationStockUOM)
				return BackorderedQuantity / DerivedLocationStockUOMMultiplier
			else
				return BackorderedQuantity

		DerivedPrintedQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "PrintedQuantity"
			if (HasItemLocationStockUOM)
				return PrintedQuantity / DerivedLocationStockUOMMultiplier
			else
				return PrintedQuantity

		DerivedInProcessQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "InProcessQuantity"
			if (HasItemLocationStockUOM)
				return InProcessQuantity / DerivedLocationStockUOMMultiplier
			else
				return InProcessQuantity

		DerivedShippedQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "ShippedQuantity"
			if (HasItemLocationStockUOM)
				return ShippedQuantity / DerivedLocationStockUOMMultiplier
			else
				return ShippedQuantity

		DerivedDetailQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "DetailQuantity"
			if (HasItemLocationStockUOM)
				return DetailQuantity / DerivedLocationStockUOMMultiplier
			else
				return DetailQuantity

		DerivedQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "Quantity"
			if (HasItemLocationStockUOM)
				return Quantity / DerivedLocationStockUOMMultiplier
			else
				return Quantity

		DerivedCancelableQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "CancelableQuantity"
			if (HasItemLocationStockUOM)
				return CancelableQuantity / DerivedLocationStockUOMMultiplier
			else
				return CancelableQuantity

		DerivedCancelledQuantityDisplay				is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity	
			default label is "CancelledQuantity"
			if (HasItemLocationStockUOM)
				return CancelledQuantity / DerivedLocationStockUOMMultiplier
			else
				return CancelledQuantity

        DisplayQuantity                     	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-QUANTITY
            if (IsCatchWeight)
                Quantity
            else
                QuantityInTransactionUOM

        DisplayAllocatedQuantity            	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-ALLOCATED
            if (IsCatchWeight)
                AllocatedQuantity
            else
                AllocatedQuantityInTransactionUOM

        DisplayBackorderedQuantity          	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-BACKORD
            if (IsCatchWeight)
                BackorderedQuantity
            else
                BackorderedQuantityInTransactionUOM

        DisplayPrintedQuantity              	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-PRINTED
            if (IsCatchWeight)
                PrintedQuantity
            else
                PrintedQuantityInTransactionUOM

        DisplayInProcessQuantity            	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-IN-PROC
            if (IsCatchWeight)
                InProcessQuantity
            else
                InProcessQuantityInTransactionUOM

        DisplayShippedQuantity              	is a ConditionalField
            type is Decimal size 17.4
            restricted
            classic name is DISP-SHIPPED
            if (IsCatchWeight)
                ShippedQuantity
            else
                ShippedQuantityInTransactionUOM

		StockOnHandQuantityItemLocation 		is a DerivedField
    		type is like Quantity
    			precision is Item.NumberOfDecimalsQuantity
			restricted
    		if (IsCatchWeight)
                return ItemLocation.SecondaryQuantity
            else
    			return ItemLocation.StockOnHandQuantity
                
    	AllocatableQuantityOfItemLocation 		is a DerivedField
    		type is like Quantity
    			precision is Item.NumberOfDecimalsQuantity
    		if (IsCatchWeight)
    			return ItemLocationRel.CatchWeightAllocatableQuantity
            else
                return ItemLocationRel.AllocatableQuantity

		DerivedAllocatedAndPrintedQuantity      is a DerivedField
			type is like Quantity
			restricted
			if (action type.Update)
				return 0
			else
				if (HasItemLocationStockUOM)
					return AllocatedQuantityInLocationStockUOM - PrintedQuantityInLocationStockUOM
				else
					return AllocatedQuantity - PrintedQuantity
		
		DerivedNotYetPrintedQuantity is a DerivedField
			type is like Quantity
			restricted
			return AllocatedQuantity - PrintedQuantity
		
		DerivedPrintedQuantityForPickList is a DerivedField
			type is like Quantity
			restricted
			if (HasItemLocationStockUOM)
				return AllocatedQuantityInLocationStockUOM - PrintedQuantityInLocationStockUOM
			else
				return AllocatedQuantity - PrintedQuantity

		DerivedAllocatableQuantity              is a DerivedField
			type is like Quantity
			restricted
			if (LineType changed)
				return AllocatableQuantityOfItemLocation
			else
				if (ItemLocationRel.AvailableToAllocateBackorderSubtract)
					return (AllocatableQuantityOfItemLocation + old AllocatedQuantity + old BackorderedQuantity)
				return (AllocatableQuantityOfItemLocation + old AllocatedQuantity)

		DerivedAllocatedQuantity is a DerivedField
			type is like Quantity
			restricted


			if (not LineType.Inventoried or DerivedAllocatableQuantity >= Quantity)
				LocalAllocatableQuantity = Quantity
			else
			if (DerivedAllocatableQuantity > 0)
				LocalAllocatableQuantity = DerivedAllocatableQuantity
			else
				initialize LocalAllocatableQuantity
			
			if (WarehouseDemandLine.ComponentSequence entered)
				round LocalAllocatableQuantity down to nearest LocalComponentQuantity
			
			return LocalAllocatableQuantity

		DerivedAllocatedWithReservedQuantity is a DerivedField
			type is like Quantity
			restricted
			if (PreferenceCardTransaction)
				if (not LineType.Inventoried)
					LocalAllocatableQuantity = Quantity
				else
					LocalAllocatableQuantity = DerivedScheduledReservedQuantity
					if (Quantity > DerivedScheduledReservedQuantity)
						LocalExcessQuantity = Quantity - DerivedScheduledReservedQuantity
						if (DerivedAllocatableQuantity >= LocalExcessQuantity)
							LocalAllocatableQuantity += LocalExcessQuantity
						else
						if (DerivedAllocatableQuantity > 0)
							LocalAllocatableQuantity += DerivedAllocatableQuantity
					else
					if (Quantity < DerivedScheduledReservedQuantity)
						LocalAllocatableQuantity = Quantity

				return LocalAllocatableQuantity
			else
				return DerivedAllocatedQuantity

		DerivedCompleteComponent is a DerivedField
			type is like Quantity
			restricted
			return (AllocatedQuantity / LocalComponentQuantity)
			
        CancelableQuantity                  	is a DerivedField		
            type is like Quantity 
            	precision is Item.NumberOfDecimalsQuantity		
            return (Quantity - AllocatedQuantity)

		UnAllocatedQuantity						is a DerivedField		
			type is like Quantity 
				precision is Item.NumberOfDecimalsQuantity		
			restricted	
			return (Quantity - AllocatedQuantity - BackorderedQuantity)

		CancelledQuantity						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return RequisitionLineRel.KilledQuantity

		OpenQuantity 							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (DemandRecordType.Demand)
				return ((Quantity - ShippedQuantity) * -1)
			else
				return (Quantity)
		
		DerivedKitItemCompany					is a DerivedField
			type is like Company
			restricted
			if (KitItemRel exists)
				return KitItemRel.KitItem.Company
			else
			if (KitItemNoCompanyNoLocationRel exists)
				return KitItemNoCompanyNoLocationRel.KitItem.Company
		
		DerivedKitItemLocation					is a DerivedField
			type is like InventoryLocation
			restricted
			if (KitItemRel exists)
				return KitItemRel.KitItem.InventoryLocation
			else
			if (KitItemNoCompanyNoLocationRel exists)
				return KitItemNoCompanyNoLocationRel.KitItem.InventoryLocation
		
		DerivedOldUnallocatedQuantity is a DerivedField
			type is like Quantity
			restricted
			if ((Company.AllocationMethod.Batch and Allocatable and not CustomerOrderLineRel.IsShipImmediate) or old FutureDemand)
				return (old Quantity - old AllocatedQuantity)
			return 0
		
		DerivedNewUnallocatedQuantity is a DerivedField
			type is like Quantity
			restricted
			if ((Company.AllocationMethod.Batch and Allocatable and not CustomerOrderLineRel.IsShipImmediate) or FutureDemand)
				return (Quantity - AllocatedQuantity)
			return 0

        DerivedScheduledReservedQuantity is a DerivedField
            type is like Quantity
            restricted
			return (ScheduledProcedureLineRel.ReservedQuantity)
		
		DerivedUnreservedQuantity is a DerivedField
            type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "UnreservedQuantity"
			return (Quantity - ReservedQuantity)



		MobileItemDisplay is a LabelField
			"<Item>_-_<Item.Description>"
		
		MobileCompanyDisplay is a LabelField
			"<Company>_-_<Company.Name>"
			
		MobileLocationDisplay is a LabelField
			"<InventoryLocation>_-_<InventoryLocation.Name>"
						

#ifdef module integration	
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			for each FSMBODConfigurationParameterRel
				if (each.FSMBODConfigurationParameter = "tenantID")
					return each.Value
					
		DerivedWarehouseDemandCancelBODID is a DerivedField
			type is Alpha 100
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ DerivedDemandDocument +"?WarehouseDemandCancel&verb=Process"
#endif
		DerivedRequestingCompany is a DerivedField
			type is Numeric size 4
			restricted
			return CompanyAndLocation.RequestingCompany
			
		DerivedRequestingLocation is a DerivedField
			type is AlphaUpper size 20
			restricted
			return CompanyAndLocation.RequestingLocation
			
		DerivedLinenumber is a DerivedField
			type is Numeric 6
			restricted
			return 	WarehouseDemandLine.LineNumber
			
		DerivedDemandDocument is a DerivedField
			type is Numeric 10
			restricted
			return	WarehouseDemand.DemandDocument
			
		WarehouseDemandCancelAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return	"WH Demand for Requisition" + " "+DerivedDemandDocument +" "+ "has been cancelled"	

		WarehouseDemandCancelPulseAlertXML is a DerivedField
			type is XMLDocument
			restricted
			WarehouseDemandCancelPulseAlertXML = template.IONWarehouseDemandCancel_WarehouseDemandLine_ST	document for this instance

		DerivedSterileItem	is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Sterile

		DerivedSingleUseItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.SingleUse

		DerivedReusableItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Reusable

		DerivedImplantableItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Implantable

		DerivedContainsHumanTissueItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.ContainsHumanTissue

		DerivedPharmaceuticalItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Pharmaceutical

		DerivedDressingItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Dressing

		DerivedPersonalProtectiveEquipmentItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.PersonalProtectiveEquipment

		DerivedCriticalItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.CriticalItem

		DerivedNarcoticItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Narcotic

		DerivedInstrumentItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Instrument

		DerivedDrugsItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Drugs

		DerivedAnalyticsItem is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Analytics

		DerivedReprocessed is a DerivedField
			type is Boolean
			restricted
			return ItemRel.Reprocessed

		DerivedMajorPPEClass is a DerivedField
			type is like MajorPPEClass
			restricted
			return ItemRel.MajorPPEClass

		DerivedMinorPPEClass is a DerivedField
			type is like MinorPPEClass
			restricted
			return ItemRel.MinorPPEClass

		DerivedSpecialHandlingCode is a DerivedField
			type is like SpecialHandlingCode
			restricted
			return RequisitionLineRel.SpecialHandlingCode

		DerivedMajorPurchasingClass is a DerivedField
			type is like MajorPurchasingClass
			restricted
			return ItemRel.MajorInventoryClass

		DerivedMinorPurchasingClass is a DerivedField
			type is like MinorPurchasingClass
			restricted
			return ItemRel.MinorInventoryClass

		DerivedRequester is a DerivedField
			type is like Requester
			restricted
			return RequisitionRel.Requester
			
	Conditions



		FromPO
			restricted
			classic name is PO
			when (WarehouseDemand.DemandSystemCode.PurchaseOrder
			and   DemandRecordType.Supply)
		
		EnteredPrintedQuantity
			restricted
			when (PrintedQuantity entered)
			
		HasAllocatedQuantity
			restricted
			when (PrintedQuantity entered
			and   DemandRecordType.Demand)
			
		FromRequisition
			restricted
			classic name is REQUISITION
			when (WarehouseDemand.DemandSystemCode.Requisitions)

		FromRequisitionAndHasPO
			when (FromRequisition
			and   RequisitionLineRel.PurchaseOrderLineSourcesRel exists)

		FromPurchaseOrder
			restricted
			when (WarehouseDemand.DemandSystemCode.PurchaseOrder)

		FromWorkOrder
			restricted
			when (WarehouseDemand.DemandSystemCode.WorkOrder)
			
		FromCustomerOrder
			restricted
			classic name is CUSTOMER-ORDER
			when (WarehouseDemand.DemandSystemCode.CustomerOrder)

		FromCustomerOrderAndHasPO
			when (FromCustomerOrder
			and   CustomerOrderLineRel.PurchaseOrderLineSourcesRel exists)

		FromReturn
			restricted
			classic name is RETURN
			when (WarehouseDemand.DemandSystemCode = "RT")

		FromPreferenceCard
			restricted
			when (WarehouseDemand.DemandSystemCode.PreferenceCard)

        IsCatchWeight
        	restricted
            classic name is CTW
            when (Item.IsCatchWeightItem)

        IsDemandType
        	restricted
            classic name is DEMAND
            when (DemandRecordType.Demand)

        IsDetailRequired
        	restricted
            classic name is DETAIL-REQ
            when (DemandRecordType.Demand
            and   LineType.Inventoried
            and   DetailRequired)

        IsFgToAlloc
        	restricted
            when (DemandRecordType.Demand
            and   Allocatable
            and   BackorderedQuantity >  0
            and   KitType.MakeToStockKit
            and   Status.ReleasedForProcessing
            and   WarehouseDemandLineObjectID not entered)

        HasWarehouseDemandLineObjectID
        	restricted
            classic name is GATHEREDMND
            when (WarehouseDemandLineObjectID >  blank
            and   WarehouseDemandLineObjectID <  999999999999)

        IsInventoried
        	restricted
            when (LineType.Inventoried)

        ItemExists
        	restricted
            classic name is ITEMMAST
            when (LineType.Inventoried
            or    LineType.Nonstock)

		IsReadyToAllocate
			restricted
			classic name is READ-TO-ALLOC
			when (DemandRecordType.Demand
			and   Allocatable
			and   WarehouseDemandLine.ComponentSequence not entered
			and   Quantity >  PrintedQuantity)

        IsShipCreate
        	restricted
            when (DemandRecordType.Demand
            and   Status.ReleasedForProcessing
            and   WarehouseDemandLine.ComponentSequence not entered

            and   not FromWorkOrder)

        IsSupplyType
        	restricted
            classic name is SUPPLY
            when (DemandRecordType.Supply)

        IsReservationType
        	restricted
            when (DemandRecordType.Reservation)

		IsBinTracked
			restricted
            when (ItemLocation.BinTracked)
        
        IsBinTrackedAndNotLotOrSerialTracked
        	restricted
            when (ItemLocation.BinTracked
            and  !ItemLocation.IsSerialTracked
            and  !ItemLocation.IsLotTracked)
            
        IsLotTracked
        	when (ItemLocation.IsLotTracked
            and	  LineType.Inventoried)
            
        IsSerialTracked
        	when (ItemLocation.IsSerialTracked
            and   LineType.Inventoried)
        
        UnitOfMeasureTracked
        	restricted
            classic name is UOM-TRACKED
            when (ItemLocation.IsNotLotTracked
            and   ItemLocation.IsNotSerialTracked
            and   !ItemLocation.BinTracked
			and   not HasItemLocationStockUOM)
            
		NotBinLotSerialAndUOMAllocation
			restricted
			when (not UnitOfMeasureTracked
			and   not IsSerialTracked
			and   not IsLotTracked
			and   not IsBinTracked) 
		
		IsDemandInProcess
			restricted
			when (AllocatedQuantity entered
			or    BackorderedQuantity entered
			or    PrintedQuantity entered
			or    InProcessQuantity entered)
		
		QuantitiesExists
			restricted
			when (AllocatedQuantity > 0
			or   BackorderedQuantity > 0
			or   PrintedQuantity > 0
			or   ShippedQuantity > 0)
			
		WarehouseDemandUpdate
			restricted
			when (Quantity not entered
			and TransactionUOMMultiplier not changed
			and FutureDemand not changed
			and RequireCompleteShipment not changed
			and BasedOnPurchaseOrderReceipt not changed
			and AllocationDate not changed
			and !LocalDropship 
			and OnHold not changed
			and TransORIGSLSQuote = TransSLSQuote
			and UnitPrice not changed
			and AllocationPriority not changed
			and UnitCost not changed
			and Carrier not changed
			and BackorderAllowed not changed)
			
		IsAvailableToCancel
			restricted
			when (not FromPO
			and   not WarehouseDemandLine.DemandDocumentType.ScheduledProcedure
			and   CancelableQuantity > 0)

		HasNoOpenDemand
			restricted
			when ((OpenDemandQuantity - AllocatedQuantity)= 0)
		
		IsComponent
			restricted
			when (WarehouseDemandLine.ComponentSequence entered)
			
		IsPresentAtMultipleLocations	
			restricted
			when (OtherItemLocationsRel exists)
		
		IsWorkOrder
			when (WorkOrderRel exists)
			
		IsWorkOrderItem
			when (WorkOrderItemRel exists)
			
		IsReleased
			when (WarehouseDemandLine.Status.ReleasedForProcessing)
			
		IsUnReleased
			when (WarehouseDemandLine.Status.Unreleased
			and   IsReadyToAllocate)

		IsInventoriedOrNonStock
			restricted
            when (LineType.Nonstock
            or    LineType.Inventoried)
           
        IsOnlineAllocation
        	restricted
        	when (Company.AllocationMethod.Online
        	or   (CustomerOrderLineRel exists and CustomerOrderLineRel.IsShipImmediate))
        	
		HasShipments
			when (AllWarehouseShipmentsForDemandLineRel exists)

    	HasNoShipment
    		restricted
    		when (WarehouseShipmentByDemandRel not exists)
            
        IsForAllocation
        	restricted
        	when (IsDemandType and Allocatable)
        				
		IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)    
			
		IsLineFullyBackordered
			restricted
			when (Quantity = BackorderedQuantity)
            						                               
		HasNoOpenShipments
			restricted
			when (WarehouseShipmentsNotClosedByDemandRel not exists)
    		
		IsRQDemandToBeDeleted
			when (WarehouseDemand.DemandSystemCode = "RQ"
			and   IsDemandType
			and   HasNoOpenShipments
			and   RequisitionLineRel.Closed)
			
		DemandExceedsAllocation
			when (Quantity > ItemLocation.AllocatedQuantity)

		HasExpiredLot
			restricted
			when (Company.DoNotAllowExpiredLotOnTransaction
			and   DetailWithExpiredLotRel exists)

		HasExpiringLot
			restricted
			when (not Company.DoNotAllowExpiredLotOnTransaction
			and  DetailWithExpiringLotRel exists)
			
		HasRecipe
			restricted
			when (Item.Recipe)

		HasItemLocationStockUOM
			when (ItemLocation.HasItemLocationStockUOM)

		IsScheduledProcedure
			restricted
			when (ScheduledProcedure entered)

    Relations
        PurchaseOrderRel
            one-to-one relation to PurchaseOrder
            valid when (FromPO)
            Field Mapping uses symbolic key
                related.Company				= Company
                related.PurchaseOrder		= WarehouseDemand.DemandDocument

        PurchaseOrderLineRel
            one-to-one relation to PurchaseOrderLine
            valid when (FromPO)
            Field Mapping uses symbolic key
                related.Company				= Company
                related.PurchaseOrder		= WarehouseDemand.DemandDocument
                related.PurchaseOrderLine	= WarehouseDemandLine.LineNumber

        CustomerOrderLineRel
            one-to-one relation to CustomerOrderLine
            valid when (FromCustomerOrder)
            Field Mapping uses symbolic key
                related.Company           = Company
                related.CustomerOrder     = WarehouseDemand.DemandDocument
                related.CustomerOrderLine = WarehouseDemandLine.LineNumber

        CustomerOrderRel
            one-to-one relation to CustomerOrder
            valid when (FromCustomerOrder)
            Field Mapping uses symbolic key
                related.Company       = Company
                related.CustomerOrder = WarehouseDemand.DemandDocument

        ItemLocationsRel
            one-to-many relation to ItemLocation
            valid when (IsInventoried)
            Field Mapping uses Set2
                related.Company = Company
                related.Item    = Item

		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	= Company.ItemGroup
				related.Item		= Item 

		StockOnHandDetailRel
            one-to-many relation to StockOnHandDetail
            Field Mapping uses symbolic key
                related.Company           			  = Company
                related.InventoryLocation 			  = InventoryLocation
                related.Item              			  = Item
		
		StockOnHandDetailForBinRel
            one-to-one relation to StockOnHandDetail
            Field Mapping uses Set3
                related.Company           			 	= Company
                related.InventoryLocation 			 	= InventoryLocation
                related.Item              			 	= Item
				related.StockOnHandDetail.Bin		 	= LocalBin
				related.StockOnHandDetail.UnitOfMeasure = DerivedUOM
				related.StockOnHandDetail.Lot			= blank
               	related.StockOnHandDetail.Sublot		= blank
		
		ShipmentLineDetailForBinSerialRel
			one-to-one relation to WarehouseShipmentLineDetail
			Field Mapping uses symbolic key
				related.Company									  = Company
				related.InventoryLocation						  = InventoryLocation
				related.WarehouseShipment			    		  = LocalWarehouseShipment
				related.WarehouseShipmentLine					  = LocalWarehouseShipmentLine
				related.WarehouseShipmentLineComponent			  = WarehouseDemandLine.ComponentSequence
                related.WarehouseShipmentLineDetail.Bin           = LocalBin	
                related.WarehouseShipmentLineDetail.Lot           = blank
                related.WarehouseShipmentLineDetail.Sublot        = blank
                related.WarehouseShipmentLineDetail.UnitOfMeasure = DerivedUOM
                related.WarehouseShipmentLineDetail.Serial		  = LocalSerial
		
		ShipmentLineDetailRel
			one-to-one relation to WarehouseShipmentLineDetail
			Field Mapping uses symbolic key
				related.Company									  = Company
				related.InventoryLocation						  = InventoryLocation
				related.WarehouseShipment			    		  = LocalWarehouseShipment
				related.WarehouseShipmentLine					  = LocalWarehouseShipmentLine
				related.WarehouseShipmentLineComponent			  = WarehouseDemandLine.ComponentSequence
                related.WarehouseShipmentLineDetail.Bin           = LocalBin	
                related.WarehouseShipmentLineDetail.Lot           = LocalLot
                related.WarehouseShipmentLineDetail.Sublot        = LocalSublot
                related.WarehouseShipmentLineDetail.UnitOfMeasure = DerivedUOM
                related.WarehouseShipmentLineDetail.Serial		  = blank
		
		InventoryUDIDetailForSerialRel
			one-to-many relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company 			= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection 
				where (related.Item			= Item
				and    related.SerialNumber	= LocalSerial)
		
		InventoryUDIDetailForLotRel
			one-to-many relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company 			= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection
				where (related.Item			= Item
				and    related.Lot			= LocalLot)
		
		InventoryUDIDetailForShipmentRel
			one-to-many relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company 										   = Company
				related.InventoryLocation								   = InventoryLocation
			Instance Selection
				where (related.InventoryUDIDetail.InventoryTransactionType = WarehouseDemandLine.DemandDocumentType
				and    related.InventoryUDIDetail.TransactionSystemCode	   = "RQ"
				and    related.InventoryUDIDetail.DocumentNumberNumeric    = WarehouseDemand.DemandDocument
				and    related.InventoryUDIDetail.WarehouseShipment		   = LocalWarehouseShipment
				and    related.InventoryUDIDetail.LineNumber 			   = LocalWarehouseShipmentLine)

		PurchaseOrderUDIDetailForSerialRel
			one-to-many relation to PurchaseOrderUDIDetail
			Field Mapping uses symbolic key
				related.Company 			= Company
			Instance Selection
				where (related.Location		= InventoryLocation
				and    related.Item			= Item
				and    related.SerialNumber	= LocalSerial)
				
		PurchaseOrderUDIDetailForLotRel
			one-to-many relation to PurchaseOrderUDIDetail
			Field Mapping uses symbolic key
				related.Company 			= Company
			Instance Selection
				where (related.Location		= InventoryLocation
				and   related.Item			= Item
				and   related.Lot			= LocalLot)

		ItemSerialNumbersRel
			one-to-many relation to ItemSerialNumber
			Field Mapping uses Set3
				related.Company							= Company
                related.InventoryLocation				= InventoryLocation
                related.Item							= Item  

		PicklistItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	= LocalItemGroup
				related.Item		= LocalItem
		
		PickListItemLocationsRel
            one-to-one relation to ItemLocation
            Field Mapping uses Set2
                related.Company = LocalCompany
                related.Item    = LocalItem
				related.InventoryLocation = LocalLocation
		
		ReleasedRouteHeaderRel
			one-to-many relation to RouteHeader
			Field Mapping uses Set2
				related.Company				= Company
                related.InventoryLocation	= InventoryLocation
                related.RouteHeader.Route	= RouteHeader.Route
                related.RouteHeader.Date	= EstimatedTransactionDate
			Instance Selection
				where (related.RouteStatus = 1)
				
		WarehouseShipmentsForBatchRel
			one-to-many relation to WarehouseShipment
			Field Mapping uses Set5
				related.Company                               	= LocalCompany
				related.InventoryLocation                     	= LocalLocation
				related.WarehouseBatch 							= LocalWarehouseBatch
		
		WarehouseShipmentsForBatchAndShipmentRel
			one-to-one relation to WarehouseShipment
			Field Mapping uses Set5
				related.Company                               	= LocalCompany
				related.InventoryLocation                     	= LocalLocation
				related.WarehouseBatch 							= LocalWarehouseBatch
				related.WarehouseShipment			        	= LocalShipmentNumber
		
		BillingCompanyRel
			one-to-one relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company					= LocalCompany
		
		WarehouseResultErrorRel
            one-to-many relation to WarehouseResult
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup       = LocalReportFinanceEnterpriseGroup
				related.WarehouseResult 			 = LocalWarehouseResult
            Instance Selection
                where (related.ReportType.WarehousePickListPrintErrorReport)
		
		WarehouseResultRel
            one-to-many relation to WarehouseResult
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup       = LocalReportFinanceEnterpriseGroup
				related.WarehouseResult = LocalWarehouseResult
            Instance Selection
                where (related.ReportType.WarehousePickListPrintReport)
		
		RequestingReportGroupLocationRel
			one-to-one relation to RequestingReportGroupLocation 
				Field Mapping uses symbolic key
					related.Company 			  = LocalCompany
					related.RequestingReportGroup = LocalReqLocationGroup
					related.RequestingLocation    = CompanyAndLocation.RequestingLocation
		
		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer					= WarehouseDemand.Customer
		
		NationalAccountBalanceRel
			one-to-one relation to NationalAccountBalance
			Field Mapping uses symbolic key
				related.Company						 = Company
				related.Customer					 = WarehouseDemand.Customer
		
		ExternalWarehouseParticipantRel
			one-to-one relation to ExternalWarehouseParticipant
			Field Mapping uses Set2
				related.ExternalWarehouseParticipant.Company           = Company
                related.ExternalWarehouseParticipant.InventoryLocation = InventoryLocation

		BusinessGroupRel
			one-to-many relation to BusinessGroup
			Field Mapping uses symbolic key
			Instance Selection
				where (related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup)
		
     	DocumentKitComponentForItemRel
    		one-to-one relation to DocumentKitComponent
    		Field Mapping uses Set4
    			related.Company   								= Company
    			related.DemandSystemCode 						= WarehouseDemand.DemandSystemCode
                related.DocumentKitComponent.DocumentNumber		= WarehouseDemand.DemandDocument
				related.DocumentKitComponent.ComponentSequence 	= WarehouseDemandLine.ComponentSequence
                related.DocumentKitComponent.LineNumber 		= WarehouseDemandLine.LineNumber
				
		WarehouseShipmentLineComponentOutRel
			one-to-many relation to WarehouseShipmentLineComponentOut
			Field Mapping uses symbolic key
    			related.Company   								= Company
				related.InventoryLocation						= InventoryLocation
    			related.WarehouseShipment 						= LocalShipmentNumber
                related.WarehouseShipmentLine					= LocalShipmentLine
				related.WarehouseShipmentLineComponent 			= LocalKitComponent
		
		WarehouseDemandLineForKitRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set9
				related.Company									= Company
                related.WarehouseDemand							= WarehouseDemand
                related.WarehouseDemandLine.LineNumber			= WarehouseDemandLine.LineNumber
                related.InventoryLocation						= InventoryLocation
                related.WarehouseDemandLine.ComponentSequence	= blank		
		
		RequisitionLineCommentRel
			one-to-many relation to RequisitionLineComment
			Field Mapping uses part of key
				related.Company     	= Company
				related.Requisition 	= DocumentNumberNumeric
				related.RequisitionLine = WarehouseDemandLine.LineNumber
			Instance Selection
				where (related.CommentType.PrintOnInternalDocuments
				or     related.CommentType.PrintOnPickList
				or     related.CommentType.PrintOnDeliveryTicket)
		
		RequisitionCommentRel
			one-to-many relation to RequisitionComment
			Field Mapping uses part of key
				related.Company     	= Company
				related.Requisition 	= DocumentNumberNumeric
			Instance Selection
				where (related.CommentType.PrintOnInternalDocuments
				or     related.CommentType.PrintOnPickList
				or     related.CommentType.PrintOnDeliveryTicket)

        KitComponentItemLocationRel
        	one-to-one relation to ItemLocation
        	Field Mapping uses symbolic key
        	 	related.Company 			= Company
        	 	related.InventoryLocation	= InventoryLocation
        	 	related.Item				= LocalComponentItem	
        	 	
        WarehouseDemandLineDetailsRel is a WarehouseDemandLineDetail set


		DetailWithExpiredLotRel is a WarehouseDemandLineDetail set
			Instance Selection
				where (related.IsExpiredLot)
				
		DetailWithExpiringLotRel is a WarehouseDemandLineDetail set
			Instance Selection
				where (related.IsLotWithinExpiration)

        RequisitionRel
            one-to-one relation to Requisition
            valid when (FromRequisition)
            Field Mapping uses symbolic key
                related.Company     = CompanyAndLocation.RequestingCompany
                related.Requisition = DocumentNumberNumeric

        RequisitionLineRel
            one-to-one relation to RequisitionLine
            valid when (FromRequisition)
            Field Mapping uses symbolic key
                related.Company         = CompanyAndLocation.RequestingCompany
                related.Requisition     = DocumentNumberNumeric
                related.RequisitionLine = WarehouseDemandLine.LineNumber

        CustomerOrderReturnRel
            one-to-one relation to CustomerOrderReturn
            valid when (FromReturn)
            Field Mapping uses symbolic key
                related.Company             = Company
                related.CustomerOrderReturn = DocumentNumberNumeric

        CustomerOrderReturnLineRel
            one-to-one relation to CustomerOrderReturnLine
            valid when (FromReturn)
            Field Mapping uses symbolic key
                related.Company                 = Company
                related.CustomerOrderReturn     = DocumentNumberNumeric
                related.CustomerOrderReturnLine = WarehouseDemandLine.LineNumber
		
		ScheduledProcedureRel
    		one-to-one relation to ScheduledProcedure
			Field Mapping uses symbolic key 
    			related.Company								= WarehouseDemand.DemandCompany
				related.ScheduledProcedure					= ScheduledProcedure

		ScheduledProcedureLineRel
    		one-to-one relation to ScheduledProcedureLine

			Field Mapping uses symbolic key 
    			related.Company								= WarehouseDemand.DemandCompany
				related.ScheduledProcedure					= ScheduledProcedure
    			related.ScheduledProcedureLine				= ScheduledProcedureLine

    	WarehouseDemandLineWithBackorderedQuantityRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses symbolic key
				related.Company								= Company
                related.WarehouseDemand.DemandSystemCode 	= WarehouseDemand.DemandSystemCode.Requisitions
                related.WarehouseDemand.DemandDocument		= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 	= WarehouseDemand.DemandCompany
          	Instance Selection 
          		where (related.BackorderedQuantity > 0)

		WarehouseDemandLineReservationRel
			one-to-one relation to WarehouseDemandLine
			Field Mapping uses symbolic key
				related.Company									= Company 
                related.WarehouseDemand.DemandSystemCode 		= WarehouseDemand.DemandSystemCode.PreferenceCard
                related.WarehouseDemand.DemandDocument			= ScheduledProcedure
				related.WarehouseDemand.DemandCompany	 		= WarehouseDemand.DemandCompany 
                related.InventoryLocation						= InventoryLocation
				related.Item									= Item
                related.WarehouseDemandLine.DemandDocumentType	= WarehouseDemandLine.DemandDocumentType.ScheduledProcedure	
                related.WarehouseDemandLine.LineNumber			= ScheduledProcedureLine
				related.WarehouseDemandLine.ComponentSequence 	= blank


    	DocumentKitComponentRel
    		one-to-many relation to DocumentKitComponent
    		Field Mapping uses symbolic key
    			related.Company   									= Company
    			related.DemandSystemCode 							= WarehouseDemand.DemandSystemCode
    		Instance Selection
    			where (related.DocumentKitComponent.DocumentNumber	= WarehouseDemand.DemandDocument
                and    related.DocumentKitComponent.LineNumber 		= WarehouseDemandLine.LineNumber)

     	
     	DocumentKitComponentsForReviewRel
    		one-to-many relation to DocumentKitComponent
    		Field Mapping uses Set2
    			related.Company   								= Company
    			related.DemandSystemCode 						= WarehouseDemand.DemandSystemCode
                related.DocumentKitComponent.DocumentNumber		= WarehouseDemand.DemandDocument
                related.DocumentKitComponent.LineNumber 		= WarehouseDemandLine.LineNumber
                






				
		ComponentItemlocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key 
				related.Company 	 		= Company
				related.InventoryLocation	= InventoryLocation
				related.Item 				= LocalItem
			
		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key 
				related.Company 	 		= Company
				related.InventoryLocation	= InventoryLocation
				related.Item 				= Item
		
     	RequestingItemLocationRel
     		one-to-one relation to ItemLocation
    		Field Mapping uses symbolic key 
    			related.Company 	 		= CompanyAndLocation.RequestingCompany
    			related.InventoryLocation	= CompanyAndLocation.RequestingLocation
    			related.Item 				= Item

    	KitItemRel
    		one-to-one relation to KitItem
    		Field Mapping uses symbolic key 
    			related.ItemGroup					= Company.ItemGroup
    			related.KitItem.Company 	 		= Company
    			related.KitItem.InventoryLocation	= InventoryLocation
    			related.KitItem.Item				= Item

    	KitItemNoCompanyNoLocationRel
    		one-to-one relation to KitItem
    		Field Mapping uses symbolic key 
    			related.ItemGroup					= Company.ItemGroup
    			related.KitItem.Company 	 		= blank
    			related.KitItem.InventoryLocation	= blank
    			related.KitItem.Item				= Item
    			
    	KitComponentRel
    		one-to-many relation to KitComponent
    		Field Mapping uses symbolic key 
    			related.ItemGroup								= Company.ItemGroup
    			related.KitItem.Company							= LocalKitItemCompany
    			related.KitItem.InventoryLocation				= LocalKitItemLocation
    			related.KitItem.Item							= Item


		
		RequiredKitComponentsRel
			one-to-many relation to KitComponent
    		Field Mapping uses symbolic key 
    			related.ItemGroup								= Company.ItemGroup
    			related.KitItem.Company							= DerivedKitItemCompany
    			related.KitItem.InventoryLocation				= DerivedKitItemLocation
    			related.KitItem.Item							= Item
    		Instance Selection
    			where (related.RequiredField
    			and    related.KitComponent.OptionalComponentSequence not entered)
		
		OptionalComponentsRel
			one-to-many relation to KitComponent
			Field Mapping uses symbolic key 
    			related.ItemGroup								= Company.ItemGroup
    			related.KitItem.Company							= DerivedKitItemCompany
    			related.KitItem.InventoryLocation				= DerivedKitItemLocation
    			related.KitItem.Item							= Item
    		Instance Selection
    			where (related.RequiredField
    			and    related.KitComponent.OptionalComponentSequence entered)
		
    	KitCNoCompanyNoLocationRel
    		one-to-many relation to KitComponent
    		Field Mapping uses symbolic key 
    			related.ItemGroup								= Company.ItemGroup
    			related.KitItem.Company							= blank
    			related.KitItem.InventoryLocation				= blank
    			related.KitItem.Item							= Item

		AllWarehouseShipmentsForDemandLineRel
			one-to-many relation to WarehouseShipment
			Field Mapping uses DemandSet
				related.Company                               	= Company
				related.InventoryLocation                     	= InventoryLocation
				related.WarehouseDemand.DemandSystemCode		= WarehouseDemand.DemandSystemCode
				related.WarehouseDemand.DemandDocument			= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany			= WarehouseDemand.DemandCompany
            	
		WarehouseShipmentRel
    		one-to-many relation to WarehouseShipment
    		Field Mapping uses Set10 
                related.Company                               	= Company
                related.InventoryLocation                     	= InventoryLocation
                related.WarehouseShipment			        	= WarehouseDemandLine.LineNumber
            Instance Selection
            	where (related.IsOpen)
            	
		WarehouseShipmentByDemandRel
    		one-to-many relation to WarehouseShipment
    		Field Mapping uses DemandSet 
                related.Company                               	= Company
                related.InventoryLocation                     	= InventoryLocation
                related.WarehouseDemand.DemandSystemCode		= WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument			= WarehouseDemand.DemandDocument
                related.WarehouseDemand.DemandCompany			= WarehouseDemand.DemandCompany
            Instance Selection
            	where (related.IsOpen)
            	
		WarehouseShipmentsNotClosedByDemandRel
    		one-to-many relation to WarehouseShipment
    		Field Mapping uses DemandSet 
                related.Company                               	= Company
                related.InventoryLocation                     	= InventoryLocation
                related.WarehouseDemand.DemandSystemCode		= WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument			= WarehouseDemand.DemandDocument
                related.WarehouseDemand.DemandCompany			= WarehouseDemand.DemandCompany
            Instance Selection
            	where (related.NotClosed)
            	
    	OrderEntryOrderTypeRel
    		one-to-one relation to OrderEntryOrderType
    		Field Mapping uses symbolic key 
    			related.Company						= Company
    			related.OrderEntryOrderType			= TransOrderType
    			
    	WarehouseDemandComponentRel
    		one-to-one relation to WarehouseDemandLine
    		Field Mapping uses symbolic key 
                related.Company									= Company
                related.WarehouseDemand.DemandSystemCode 		= WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument			= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 		= WarehouseDemand.DemandCompany
                related.InventoryLocation						= InventoryLocation
				related.Item									= LocalItem
                related.WarehouseDemandLine.DemandDocumentType	= WarehouseDemandLine.DemandDocumentType	
                related.WarehouseDemandLine.LineNumber			= WarehouseDemandLine.LineNumber
                related.WarehouseDemandLine.ComponentSequence	= LocalKitComponentSequence
                		           
        LocationToSubstituteRel 
    		one-to-many relation to WarehouseDemandLine
    		Field Mapping uses symbolic key 
                related.Company											= Company
                related.WarehouseDemand.DemandSystemCode 				= WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument					= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 			    = WarehouseDemand.DemandCompany 
			Instance Selection
				where (related.InventoryLocation			   		   != InventoryLocation
                and    related.Item										= Item
                and    related.WarehouseDemandLine.DemandDocumentType	= WarehouseDemandLine.DemandDocumentType	
                and    related.WarehouseDemandLine.LineNumber			= WarehouseDemandLine.LineNumber
                and    related.WarehouseDemandLine.ComponentSequence	= WarehouseDemandLine.ComponentSequence)
        
        OtherItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses Set2
				related.Company					= Company     
				related.Item					= Item
			Instance Selection
				where (related.InventoryLocation != InventoryLocation)
    			
        WorkOrderRel
            one-to-one relation to WorkOrder
            Field Mapping uses symbolic key
                related.Company         = Company
                related.InventoryLocation = InventoryLocation
                related.WorkOrder	    = DocumentNumberNumeric

        WorkOrderItemRel
            one-to-one relation to WorkOrderItem
            Field Mapping uses symbolic key
                related.Company         = Company
                related.InventoryLocation = InventoryLocation
                related.WorkOrder		= DocumentNumberNumeric
                related.WorkOrderItem	= WarehouseDemandLine.LineNumber
                
		KitComponentWithOptionRel
    		one-to-many relation to KitComponent
    		Field Mapping uses symbolic key 
    			related.ItemGroup								= Company.ItemGroup
    			related.KitItem.Company							= Company
    			related.KitItem.InventoryLocation				= InventoryLocation
    			related.KitItem.Item							= Item
    		Instance Selection	
				where (related.KitComponent.ComponentSequence 	= LocalComSeq
				and    related.KitComponent.OptionalComponentSequence entered) 
		
		ItemUOMRel
            one-to-one relation to ItemUOM
            Field Mapping uses symbolic key
                related.ItemGroup     = Company.ItemGroup
                related.Item          = Item
                related.UnitOfMeasure = TransactionUOM

    	WarehouseDemandLineForSupplyRel
    		one-to-one relation to WarehouseDemandLine
    		Field Mapping uses symbolic key 
                related.Company									= CompanyAndLocation.RequestingCompany
                related.WarehouseDemand.DemandSystemCode 		= WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument			= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 		= WarehouseDemand.DemandCompany
                related.InventoryLocation						= CompanyAndLocation.RequestingLocation
				related.Item									= Item
                related.WarehouseDemandLine.DemandDocumentType	= WarehouseDemandLine.DemandDocumentType	
                related.WarehouseDemandLine.LineNumber			= WarehouseDemandLine.LineNumber
                related.WarehouseDemandLine.ComponentSequence	= WarehouseDemandLine.ComponentSequence


        PurgeWarehouseDemandLineDetailRel is a WarehouseDemandLineDetail set 
			Instance Selection
				include deleted records
                
#ifdef module integration		
		FSMBODConfigurationParameterRel   is a FSMBODConfigurationParameter set
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1
        
        FSMBODConfigurationDetailRel
        	one-to-many relation to FSMBODConfigurationDetail
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 			= 2	
            	related.FSMBODConfiguration.Noun 			= "PulseAlert"
            	related.FSMBODConfiguration.Direction 		= 1
            Instance Selection
				where (related.Alert						= "FSM_ION_WarehouseDemandCancelAlert"
				and	   related.Enable)
#endif
    Sets
        Set1
            indexed
            Instance Selection
                where (IsDemandType)
            Sort Order
                Company
                WarehouseDemand
                WarehouseDemandLine.LineNumber
                WarehouseDemandLine.ComponentSequence
                InventoryLocation

        Set2
            indexed
            Instance Selection
                where (IsReadyToAllocate)
            Sort Order
                Company
                InventoryLocation
                LineType
                Item
                AllocationPriority
                WarehouseDemand.DemandDocument
                WarehouseDemandLine.LineNumber
                AllocationDate
                WarehouseDemand.DemandSystemCode
				WarehouseDemand.DemandCompany
        Set3
            indexed
            Instance Selection
                where (IsShipCreate)
            Sort Order
                Company
                InventoryLocation
                WarehouseDemand
                WarehouseDemandLine.LineNumber

        Set6
            indexed
            Instance Selection
                where (IsFgToAlloc)
            Sort Order
                Company
                InventoryLocation
                Item
                RouteHeader.Date
                WarehouseDemand
                WarehouseDemandLine.LineNumber
                WarehouseDemandLine.ComponentSequence

        Set7
            indexed
            Instance Selection
                where (IsSupplyType)
            Sort Order
                Company
                InventoryLocation
                WarehouseDemand
                WarehouseDemandLine.LineNumber
                WarehouseDemandLine.ComponentSequence

        Set8
            indexed
            Instance Selection
                where (HasWarehouseDemandLineObjectID)
            Sort Order
                WarehouseDemandLineObjectID
                WarehouseSequence

        Set9
            indexed
            Instance Selection
                where (IsDemandType)
            Sort Order
                Company
                WarehouseDemand
                WarehouseDemandLine.LineNumber
                InventoryLocation
                WarehouseDemandLine.ComponentSequence

        Set5
			not indexed
            Sort Order
                Company
                InventoryLocation
                Item
				EstimatedTransactionDate
                WarehouseDemandLine.DemandDocumentType
                WarehouseDemand
                WarehouseDemandLine.LineNumber
                WarehouseDemandLine.ComponentSequence

	Rule Blocks
		CreateWarehouseShipmentOutFile
			if (PrmCreateFlatFile.Yes)
				if (LocalShipmentOutRecordType.Shipment)
					invoke Create WarehouseShipmentOutputFile
						invoked.Company			  			  = Company
						invoked.InventoryLocation 			  = InventoryLocation
						invoked.FileName 				  	  = LocalFlatFileName
						invoked.RecordType					  = 1			
						invoked.ShipmentNumber				  = SavedWarehouseShipmentView.WarehouseShipment
						invoked.Seq							  = 0
						invoked.DemandSystemCode		 	  = SavedWarehouseShipmentView.WarehouseDemand.WarehouseDemand.DemandSystemCode	
						invoked.DemandDocument 	 		 	  = SavedWarehouseShipmentView.WarehouseDemand.WarehouseDemand.DemandDocument
						invoked.ShipmentBatchNumber			  = SavedWarehouseShipmentView.WarehouseBatch
						invoked.BillToName					  = SavedWarehouseShipmentView.DerivedBillToName
						invoked.BillToAddress				  = SavedWarehouseShipmentView.WarehouseShipment.CustomerOrderRel.CustomerBillTo.PostalAddress
						invoked.ShipmentBOLNumber             = SavedWarehouseShipmentView.BillOfLading
						invoked.ShipmentCarrier				  = SavedWarehouseShipmentView.Carrier
						invoked.NumberOfCartons				  = SavedWarehouseShipmentView.NumberOfCartons
						invoked.ShipmentCubicFeet			  = SavedWarehouseShipmentView.StockVolume
						invoked.Customer					  = SavedWarehouseShipmentView.DerivedCustomer
						invoked.CustomerShipTo                = SavedWarehouseShipmentView.WarehouseShipment.CustomerOrderRel.CustomerShipTo
						invoked.Destination					  = SavedWarehouseShipmentView.Destination
						invoked.DemandDocumentType			  = SavedWarehouseShipmentView.DemandDocumentType
						invoked.EstimatedDeliveryDate  		  = SavedWarehouseShipmentView.EstimatedDeliveryDate
						invoked.ShipTerm					  = SavedWarehouseShipmentView.ShipTerm
						invoked.FreightCode					  = SavedWarehouseShipmentView.FreightCode
						invoked.RequireFreight				  = SavedWarehouseShipmentView.RequireFreight
						invoked.FreightCharges				  = SavedWarehouseShipmentView.FreightCharges
						invoked.GeneralLedgerDate 			  = SavedWarehouseShipmentView.GeneralLedgerDate
						invoked.InvoicePrefix				  = SavedWarehouseShipmentView.InvoicePrefix
						invoked.InvoiceNumber				  = SavedWarehouseShipmentView.InvoiceNumber
						invoked.ShippingMethod				  = SavedWarehouseShipmentView.ShippingMethod
						invoked.NatureOfTransactionCode		  = SavedWarehouseShipmentView.NatureOfTransactionCode
						invoked.OperatorID               	  = actor
						invoked.PackDate				      = SavedWarehouseShipmentView.PackDate
						invoked.RequirePackingFeedback        = SavedWarehouseShipmentView.RequirePackingFeedback
						invoked.PackingList                   = SavedWarehouseShipmentView.PackingList
						invoked.PickDate                      = SavedWarehouseShipmentView.PickDate
						invoked.RequirePickingFeedback		  = SavedWarehouseShipmentView.RequirePickingFeedback
						invoked.PrintPOD					  = SavedWarehouseShipmentView.PrintPOD
						invoked.PODReturnDate                 = SavedWarehouseShipmentView.PODReturnDate
						invoked.BasedOnPOReceipt			  = SavedWarehouseShipmentView.PODReturnDate
						invoked.PortCode					  = SavedWarehouseShipmentView.BasedOnPurchaseOrderReceipt
						invoked.PrintDate					  = SavedWarehouseShipmentView.PrintDate
						invoked.ProcessLevel				  = SavedWarehouseShipmentView.ProcessLevel
						invoked.RequestingLocation			  = SavedWarehouseShipmentView.DerivedRequestingLocation
						invoked.Route						  = SavedWarehouseShipmentView.DerivedRoute
						invoked.ShipDate					  = SavedWarehouseShipmentView.ShipDate
						invoked.ShipToAddress				  = SavedWarehouseShipmentView.WarehouseShipment.CustomerOrderRel.ShipPostalAddress
						invoked.ShipToName					  = SavedWarehouseShipmentView.DerivedCustomerShipName
						invoked.StatisticalProcedure		  = SavedWarehouseShipmentView.StatisticalProcedure
						invoked.Status						  = SavedWarehouseShipmentView.Status
						invoked.RouteStop					  = SavedWarehouseShipmentView.RouteStop
						invoked.TransactionId				  = SavedWarehouseShipmentView.TransactionId
						invoked.VATRegistrationNumber		  = SavedWarehouseShipmentView.VATRegistrationNumber
						invoked.Vendor						  = SavedWarehouseShipmentView.Vendor
						invoked.StockWeight					  = SavedWarehouseShipmentView.StockWeight
				else
				if (LocalShipmentOutRecordType.ShipmentLine)
					invoke Create WarehouseShipmentOutputFile
						assign result to SavedWarehouseShipmentOutputFile
						invoked.Company			  			  = Company
						invoked.InventoryLocation 			  = InventoryLocation
						invoked.FileName 				  	  = LocalFlatFileName
						invoked.DemandSystemCode		 	  = SavedWarehouseShipmentLineView.RequestingDocument.DemandSystemCode	
						invoked.DemandDocument 	 		 	  = SavedWarehouseShipmentLineView.RequestingDocument.DocumentNumber
						invoked.ShipmentNumber 				  = SavedWarehouseShipmentView.WarehouseShipment
						invoked.LineNumber 					  = SavedWarehouseShipmentLineView.WarehouseShipmentLine
						invoked.ComponentSeq 				  = 0	
						invoked.RecordType 					  = 2
						invoked.CommentText 				  = blank	
						invoked.Seq 						  = 0	
						invoked.DetailRequired 				  = SavedWarehouseShipmentLineView.DetailRequired
						invoked.LineItem 					  = SavedWarehouseShipmentLineView.Item	
						invoked.Description 				  = SavedWarehouseShipmentLineView.Description	
						invoked.LineType 					  = SavedWarehouseShipmentLineView.LineType	
						invoked.LineDetailQuantity 			  = SavedWarehouseShipmentLineView.DetailQuantity	
						invoked.LineCatchWeightQuantity 	  = SavedWarehouseShipmentLineView.CatchWeightQuantity	
						invoked.LineDetailCatchWeightQuantity = SavedWarehouseShipmentLineView.DetailCatchWeightQuantity	
						invoked.LineCubicFeet 				  = SavedWarehouseShipmentLineView.StockVolume	
						invoked.LineKitType 				  = SavedWarehouseShipmentLineView.WarehouseShipmentLine.KitItemRel.MakeCode	
						invoked.LineDetailRequired 			  = SavedWarehouseShipmentLineView.DetailRequired	
						invoked.LineDocumentNumber 			  = SavedWarehouseShipmentLineView.RequestingDocument.DocumentNumber
						invoked.LineGlobalLocationNumber 	  = SavedWarehouseShipmentLineView.InventoryLocation.GlobalLocationNumber	
						invoked.LineICNCode 				  = SavedWarehouseShipmentLineView.ICNCode	
						invoked.LineInProcessQuantity 		  = SavedWarehouseShipmentLineView.InProcessQuantity
						invoked.LineMSDSDate 				  = SavedWarehouseShipmentLineView.MSDSDate	
						invoked.LineOperator 				  = SavedWarehouseShipmentLineView.OperatorID		
						invoked.LinePrintedQuantity 		  = SavedWarehouseShipmentLineView.PrintedQuantity
						invoked.LineShippedQuantity 		  = SavedWarehouseShipmentLineView.ShippedQuantity	
						invoked.LineSupplementaryQuantity 	  = SavedWarehouseShipmentLineView.SupplementaryQuantity	
						invoked.LineSupplementaryUOM 		  = SavedWarehouseShipmentLineView.SupplementaryUOM	
						invoked.LineWalkThroughRequired 	  = SavedWarehouseShipmentLineView.WalkThruRequired	
						invoked.LinePreAssembledKitQuantity   = SavedWarehouseShipmentLineView.PreAssembledKitQuantity	
						invoked.LineStockWeight 			  = SavedWarehouseShipmentLineView.StockWeight	
						invoked.ShipmentUnitCost 			  = SavedWarehouseShipmentLineView.UnitCost	
						invoked.ShipmentUOM 				  = SavedWarehouseShipmentLineView.TransactionUOM	
						invoked.ShipmentUOMMult 			  = SavedWarehouseShipmentLineView.TransactionUOMMultiplier
						invoked.UPCCode						  = first SavedWarehouseShipmentLineView.Item.ItemUPCRel.ItemUPC
						invoked.ShipmentParOrderId			  = RequisitionInterfaceInformation.SurgerySystemRequisitionReference
						invoked.SurgerySystemSource 		  = RequisitionInterfaceInformation.SurgerySystemSource
						invoked.ShipmentSystemCode 			  = SavedWarehouseShipmentLineView.RequestingDocument.DemandSystemCode	
				else
				if (LocalShipmentOutRecordType.ShipmentLineComponent)
					invoke Create WarehouseShipmentOutputFile
						assign result to SavedWarehouseShipmentOutputFile
						invoked.Company			  			  = Company
						invoked.InventoryLocation 			  = InventoryLocation
						invoked.FileName 				  	  = LocalFlatFileName
						invoked.DemandSystemCode		 	  = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandSystemCode	
						invoked.DemandDocument 	 		 	  = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandDocument
						invoked.ShipmentNumber 				  = SavedWarehouseShipmentView.WarehouseShipment
						invoked.LineNumber 					  = SavedWarehouseShipmentLineView.WarehouseShipmentLine
						invoked.ComponentSeq 				  = SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
						invoked.ComponentItem				  = SavedWarehouseShipmentLineComponentView.Item
						invoked.RecordType 					  = 3	
						invoked.CommentText 				  = blank	
						invoked.Seq 						  = 0	
						invoked.DetailRequired 				  = SavedWarehouseShipmentLineComponentView.DetailRequired
						invoked.LineItem 					  = WarehouseDemandLineForKitRel.Item
						invoked.Description 				  = ItemDescription	
						invoked.LineType 					  = LineType	
						invoked.LineDetailQuantity 			  = LocalDetailQuantity		
						invoked.LineDetailRequired 			  = SavedWarehouseShipmentLineComponentView.DetailRequired	
						invoked.LineDocumentNumber 			  = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandDocument
						invoked.LineOperator 				  = actor		
						invoked.LinePrintedQuantity 		  = SavedWarehouseShipmentLineComponentView.Quantity
						invoked.ShipmentUnitCost 			  = UnitCost
						invoked.ComponentQuantity			  = SavedWarehouseShipmentLineComponentView.Quantity
						invoked.ComponentDetailQuantity		  = LocalDetailQuantity
						invoked.ComponentUnitCost 			  = UnitCost
				else
				if (LocalShipmentOutRecordType.ShipmentLineDetail)
					invoke Create WarehouseShipmentOutputFile
						assign result to SavedWarehouseShipmentOutputFile
						invoked.Company			  			  = Company
						invoked.InventoryLocation 			  = InventoryLocation
						invoked.FileName 				  	  = LocalFlatFileName
						invoked.DemandSystemCode		 	  = SavedWarehouseShipmentLineDetailView.WarehouseDemand.DemandSystemCode	
						invoked.DemandDocument 	 		 	  = SavedWarehouseShipmentLineDetailView.WarehouseDemand.DemandDocument
						invoked.ShipmentNumber 				  = SavedWarehouseShipmentLineDetailView.WarehouseShipment
						invoked.LineNumber 					  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine
						invoked.RecordType 					  = 4	
						invoked.DetailRequired 				  = true
						invoked.LineItem 					  = SavedWarehouseShipmentLineDetailView.DerivedItem	
						invoked.Description 				  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine.Description	
						invoked.LineType 					  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine.LineType	
						invoked.LineDetailQuantity 			  = SavedWarehouseShipmentLineDetailView.Quantity	
						invoked.LineCatchWeightQuantity 	  = SavedWarehouseShipmentLineDetailView.CatchWeightQuantity	
						invoked.LineDocumentNumber 			  = SavedWarehouseShipmentLineDetailView.WarehouseDemand.DemandDocument
						invoked.LineOperator 				  = actor	
						invoked.LinePrintedQuantity 		  = SavedWarehouseShipmentLineDetailView.Quantity		
						invoked.ShipmentUnitCost 			  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine.UnitCost	
						invoked.ShipmentUOM 				  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.UnitOfMeasure	
						invoked.Lot 		  				  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Lot
						invoked.Sublot 		  				  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Sublot
						invoked.Bin 		 				  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Bin
						invoked.Serial 						  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Serial
						invoked.DetailUpdateDate			  = current timestamp
				else
				if (LocalShipmentOutRecordType.Comment
				and RequisitionLineCommentRel exists)
					for each RequisitionLineCommentRel
						invoke Create WarehouseShipmentOutputFile
							assign result to SavedWarehouseShipmentOutputFile
							invoked.Company			  			  = Company
							invoked.InventoryLocation 			  = InventoryLocation
							invoked.FileName 				  	  = LocalFlatFileName
							invoked.DemandSystemCode		 	  = SavedWarehouseShipmentLineDetailView.WarehouseDemand.DemandSystemCode	
							invoked.DemandDocument 	 		 	  = SavedWarehouseShipmentLineDetailView.WarehouseDemand.DemandDocument
							invoked.ShipmentNumber 				  = SavedWarehouseShipmentLineDetailView.WarehouseShipment
							invoked.LineNumber 					  = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine
							invoked.RecordType 					  = 5
							invoked.CommentText					  = each.CommentText
							invoked.Seq							 += 1 
			
			if (ExternalWarehouseParticipantRel exists)
				if (SavedWarehouseShipmentView.WarehouseShipment entered
				and LocalShipmentOutRecordType.Shipment)
					invoke Create WarehouseShipmentOut
						fill in fields from SavedWarehouseShipmentView.WarehouseShipment
						invoked.WarehouseShipmentOut.CreationDate = current timestamp
				else
				if (SavedWarehouseShipmentLineView.WarehouseShipmentLine entered
				and LocalShipmentOutRecordType.ShipmentLine)
					invoke Create WarehouseShipmentLineOut
						fill in fields from SavedWarehouseShipmentLineView.WarehouseShipmentLine
						invoked.WarehouseShipmentLineOut.CreationDate 	= current timestamp
						invoked.InterfaceStatus				   = 0
						invoked.DemandSystemCode			   = SavedWarehouseShipmentLineView.RequestingDocument.DemandSystemCode
						invoked.DocumentNumber				   = SavedWarehouseShipmentLineView.RequestingDocument.DocumentNumber
						invoked.UpcCode						   = first SavedWarehouseShipmentLineView.Item.ItemUPCRel.ItemUPC
				else
				if (SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent entered
				and LocalShipmentOutRecordType.ShipmentLineComponent)
					LocalShipmentNumber = SavedWarehouseShipmentView.WarehouseShipment
					LocalShipmentLine   = SavedWarehouseShipmentLineView.WarehouseShipmentLine
					LocalKitComponent   = SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
					if (WarehouseShipmentLineComponentOutRel exists)
						invoke Update WarehouseShipmentLineComponentOutRel
							fill in fields from SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
							invoked.InterfaceStatus   	 		  = 0
							invoked.DemandSystemCode  	 		  = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandSystemCode
							invoked.DocumentNumber    	 		  = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandDocument
					else
						invoke Create WarehouseShipmentLineComponentOut
							fill in fields from SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
							invoked.WarehouseShipmentLineComponentOut.CreationDate 	= current timestamp
							invoked.InterfaceStatus				   = 0
							invoked.DemandSystemCode 			   = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandSystemCode
							invoked.DocumentNumber 				   = SavedWarehouseShipmentLineComponentView.WarehouseDemand.DemandDocument
				else
				if (PrmCreateFlatFile.No
				and LocalShipmentOutRecordType.Comment)
					if (RequisitionCommentRel exists)
						initialize LocalCounter
						for each RequisitionCommentRel
							LocalCounter += 1
							invoke QuickCreate WarehouseShipmentCommentOut
								invoked.Company 						 	   		  = Company
								invoked.WarehouseDemand.DemandSystemCode 	   		  = SavedWarehouseShipmentView.WarehouseDemand.DemandSystemCode
								invoked.WarehouseDemand.DemandDocument   	   		  = SavedWarehouseShipmentView.WarehouseDemand.DemandDocument
								invoked.WarehouseDemand.DemandCompany 		   		  = SavedWarehouseShipmentView.WarehouseDemand.DemandCompany
								invoked.WarehouseShipmentCommentOut.WarehouseSequence = LocalCounter	
								invoked.WarehouseShipmentCommentOut.CreationDate 	  = current timestamp	
								invoked.InterfaceStatus 							  = 0	
								invoked.Comment 									  = each.CommentText		
								invoked.ShipmentNumber 								  = SavedWarehouseShipmentView.WarehouseShipment
					if (RequisitionLineCommentRel exists)
						initialize LocalCounter
						for each RequisitionLineCommentRel
							LocalCounter += 1
							invoke QuickCreate WarehouseShipmentCommentOut
								invoked.Company 						 	   		  = Company
								invoked.WarehouseDemand.DemandSystemCode 	   		  = SavedWarehouseShipmentLineView.RequestingDocument.DemandSystemCode
								invoked.WarehouseDemand.DemandDocument   	   		  = SavedWarehouseShipmentLineView.RequestingDocument.DocumentNumber
								invoked.WarehouseDemand.DemandCompany 		   		  = SavedWarehouseShipmentLineView.WarehouseShipment.WarehouseDemand.DemandCompany
								invoked.WarehouseShipmentCommentOut.LineNumber 		  = SavedWarehouseShipmentLineView.WarehouseShipmentLine
								invoked.WarehouseShipmentCommentOut.WarehouseSequence = LocalCounter	
								invoked.WarehouseShipmentCommentOut.CreationDate 	  = current timestamp	
								invoked.InterfaceStatus 							  = 0	
								invoked.Comment 									  = each.CommentText		
								invoked.ShipmentNumber 								  = SavedWarehouseShipmentLineView.WarehouseShipment
								invoked.ShipLineNbr 								  = SavedWarehouseShipmentLineView.WarehouseShipmentLine

		CreateShipmentLineDetail
			if (WarehouseDemandLine.DetailRequired)

				if (WarehouseDemandLineDetailsRel exists)
					for each WarehouseDemandLineDetailsRel
						invoke Create WarehouseShipmentLineDetail
							assign result to SavedWarehouseShipmentLineDetailView
							invoked.Company									  = Company
							invoked.InventoryLocation 						  = InventoryLocation
							invoked.WarehouseShipment				  		  = SavedWarehouseShipmentView.WarehouseShipment
							invoked.WarehouseShipmentLine					  = each.WarehouseDemandLine.LineNumber
							invoked.WarehouseShipmentLineComponent   		  = each.WarehouseDemandLine.ComponentSequence
							invoked.WarehouseDemand.DemandSystemCode 		  = each.WarehouseDemand.DemandSystemCode
							invoked.WarehouseDemand.DemandDocument   		  = each.WarehouseDemand.DemandDocument
							invoked.WarehouseDemand.DemandCompany      		  = each.WarehouseDemand.DemandCompany
							invoked.WarehouseShipmentLineDetail.UnitOfMeasure = each.WarehouseDemandLineDetail.UnitOfMeasure
							invoked.UOMMultiplier							  = each.UOMMultiplier
							invoked.LocalCreateFromPicklist					  = true
							invoked.LocalSkipSOHUpdate						  = true
							invoked.WarehouseShipmentLineDetail.Lot 		  = each.WarehouseDemandLineDetail.Lot
							invoked.WarehouseShipmentLineDetail.Sublot 		  = each.WarehouseDemandLineDetail.Sublot
							invoked.WarehouseShipmentLineDetail.Bin 		  = each.WarehouseDemandLineDetail.Bin
							invoked.WarehouseShipmentLineDetail.Serial 		  = each.WarehouseDemandLineDetail.Serial
							invoked.Quantity 								  = each.Quantity
							if (Item.CatchWeightCode.ReceiptRequiresBoth)
								if (each.CatchWeightQuantity entered)
									invoked.CatchWeightQuantity = each.CatchWeightQuantity
								else
									invoked.CatchWeightQuantity = (each.Quantity * each.UOMMultiplier)
							invoked.UpdateDate 								  = current timestamp
						
						LocalDetailQuantity 								 += each.Quantity
						LocalDetailCatchweightQuantity						 += each.CatchWeightQuantity
					
					invoke QuickDelete WarehouseDemandLineDetailsRel
				

				if (LocalShipmentOutRecordType.ShipmentLine)
					LocalPrintedQuantity = SavedWarehouseShipmentLineView.PrintedQuantity
				else
					LocalPrintedQuantity = SavedWarehouseShipmentLineComponentView.Quantity
				
				if (LocalPrintedQuantity > LocalDetailQuantity
				and SavedWarehouseShipmentLineView.WalkThruRequired
				and PrmAllocateDetail.Yes)
					LocalWarehouseShipment	   = SavedWarehouseShipmentView.WarehouseShipment
					LocalWarehouseShipmentLine = SavedWarehouseShipmentLineView.WarehouseShipmentLine

					if (ItemLocation.SerialTracked.SerialRequiredAtReceipt
					and ItemSerialNumbersRel exists)
						for each ItemSerialNumbersRel
							LocalBin 	= each.Bin
							LocalSerial = each.ItemSerialNumber
							if (StockOnHandDetailForBinRel exists)	
								for each Company.BinTypeArray.BinTypeGroup
									if (StockOnHandDetailForBinRel.BinType = each.BinType)
										if (not each.AllowsIssue)
											LocalNotAllowDetailCreation = true
										end for each
								
								invoke CreateAudit StockOnHandDetailForBinRel
									invoked.PrmSource = "WH130"
							
							if  (LocalNotAllowDetailCreation
							or  (StockOnHandDetailForBinRel exists and StockOnHandDetailForBinRel.AvailableQuantity <= 0)
							or  LocalDetailQuantity = LocalPrintedQuantity)
								end for each	
							
							if (ShipmentLineDetailForBinSerialRel not exists)
								invoke Create WarehouseShipmentLineDetail
									assign result to SavedWarehouseShipmentLineDetailView
									invoked.Company									  	  = Company
									invoked.InventoryLocation 						  	  = InventoryLocation
									invoked.WarehouseShipment				  		  	  = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipmentLine					  	  = SavedWarehouseShipmentLineView.WarehouseShipmentLine
									if (WarehouseDemandLine.ComponentSequence entered)
										invoked.WarehouseShipmentLineComponent   		  = WarehouseDemandLine.ComponentSequence
									invoked.WarehouseDemand.DemandSystemCode 		  	  = WarehouseDemand.DemandSystemCode
									invoked.WarehouseDemand.DemandDocument   		  	  = WarehouseDemand.DemandDocument
									invoked.WarehouseDemand.DemandCompany      		  	  = WarehouseDemand.DemandCompany
									invoked.WarehouseShipmentLineDetail.UnitOfMeasure 	  = Item.AllocationUOM
									if (StockOnHandDetailForBinRel exists)
										invoked.UOMMultiplier							  = StockOnHandDetailForBinRel.TransactionUOMMultiplier
									else
										invoked.UOMMultiplier							  = Item.DefaultInventoryTransactionUOMMultiplier
									invoked.LocalCreateFromPicklist					 	  = true
									invoked.WarehouseShipmentLineDetail.Bin 		  	  = each.Bin
									invoked.WarehouseShipmentLineDetail.Serial 		  	  = each.ItemSerialNumber
									invoked.Quantity 								  	  = 1
									invoked.UpdateDate 								  	  = current timestamp
									if (Item.CatchWeightCode.ReceiptRequiresBoth)
										invoked.CatchWeightQuantity 		 			  = (1 * TransactionUOMMultiplier)

							LocalDetailQuantity 								 	 	 += 1

							if (ItemLocation.IsUDITracked
							and SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Serial entered)
								LocalSerial = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Serial
								if (InventoryUDIDetailForSerialRel exists)
									invoke Create InventoryUDIDetail
										fill in fields from first InventoryUDIDetailForSerialRel
										invoked.InventoryUDIDetail.DocumentNumberNumeric 	 = WarehouseDemand.DemandDocument
										invoked.InventoryUDIDetail.WarehouseShipment 		 = SavedWarehouseShipmentLineDetailView.WarehouseShipment
										invoked.InventoryUDIDetail.LineNumber 				 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine
										invoked.InventoryUDIDetail.TransactionSystemCode 	 = "RQ"
										invoked.InventoryUDIDetail.InventoryTransactionType  = WarehouseDemandLine.DemandDocumentType
										invoked.SerialNumber								 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Serial
										invoked.Quantity 				 					 = SavedWarehouseShipmentLineDetailView.Quantity
										invoked.TransientCreateFromBatch 					 = true
								else
								if (PurchaseOrderUDIDetailForSerialRel exists)
									invoke Create InventoryUDIDetail
										fill in fields from first PurchaseOrderUDIDetailForSerialRel	
										invoked.InventoryUDIDetail.LineNumber 				 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine	
										invoked.InventoryUDIDetail.DocumentNumberNumeric 	 = WarehouseDemand.DemandDocument	
										invoked.InventoryUDIDetail.WarehouseShipment 		 = SavedWarehouseShipmentLineDetailView.WarehouseShipment	
										invoked.InventoryUDIDetail.LineNumber 				 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine
										invoked.InventoryUDIDetail.TransactionSystemCode	 = "RQ"	
										invoked.InventoryUDIDetail.InventoryTransactionType  = WarehouseDemandLine.DemandDocumentType	
										invoked.TransientCreateFromBatch 					 = true	
										invoked.Quantity 				 					 = SavedWarehouseShipmentLineDetailView.Quantity	
					else
					if ((ItemLocation.LotTracked.LotRequiredAtReceipt
					or  (ItemUOMRel.TrackedIn and ItemUOMRel.UnitOfMeasure not = Item.StockUOM)
					or  (ItemLocation.BinTracked and ItemLocation.IsNotSerialTracked and ItemLocation.IsNotLotTracked))
					and StockOnHandDetailRel exists)
						for each StockOnHandDetailRel
							initialize LocalNotAllowDetailCreation
							LocalBin 	= each.StockOnHandDetail.Bin
							LocalLot	= each.StockOnHandDetail.Lot
							LocalSublot	= each.StockOnHandDetail.Sublot

							if ((PrmPreferOption.YesPreferredBin 
							and (ItemLocation.HasPreferredBin and (ItemLocation.PreferredBin not = each.StockOnHandDetail.Bin)))
							or  (ItemLocation.ItemLocationStockUOM entered 
							and (ItemUOMRel.TrackedIn and (each.StockOnHandDetail.UnitOfMeasure not = Item.StockUOM 
							and each.StockOnHandDetail.UnitOfMeasure not = TransactionUOM)))
							or each.AvailableQuantity <= 0
							or each.AvailableQuantity < LocalPrintedQuantity)
								LocalNotAllowDetailCreation = true

							if (not LocalNotAllowDetailCreation
							and LocalDetailQuantity < LocalPrintedQuantity)
								if (ShipmentLineDetailRel not exists)
									invoke Create WarehouseShipmentLineDetail
										assign result to SavedWarehouseShipmentLineDetailView
										invoked.Company									  	  = Company
										invoked.InventoryLocation 						  	  = InventoryLocation
										invoked.WarehouseShipment				  		  	  = SavedWarehouseShipmentView.WarehouseShipment
										invoked.WarehouseShipmentLine					  	  = SavedWarehouseShipmentLineView.WarehouseShipmentLine
										if (WarehouseDemandLine.ComponentSequence entered)
											invoked.WarehouseShipmentLineComponent   		  = WarehouseDemandLine.ComponentSequence
										invoked.WarehouseDemand.DemandSystemCode 		  	  = WarehouseDemand.DemandSystemCode
										invoked.WarehouseDemand.DemandDocument   		  	  = WarehouseDemand.DemandDocument
										invoked.WarehouseDemand.DemandCompany      		  	  = WarehouseDemand.DemandCompany
										invoked.WarehouseShipmentLineDetail.UnitOfMeasure 	  = Item.AllocationUOM
										if (StockOnHandDetailForBinRel exists)
											invoked.UOMMultiplier							  = StockOnHandDetailForBinRel.TransactionUOMMultiplier
										else
											invoked.UOMMultiplier							  = Item.DefaultInventoryTransactionUOMMultiplier
										invoked.LocalCreateFromPicklist					 	  = true
										invoked.WarehouseShipmentLineDetail.Lot 		  	  = each.StockOnHandDetail.Lot
										invoked.WarehouseShipmentLineDetail.Sublot 		  	  = each.StockOnHandDetail.Sublot
										invoked.WarehouseShipmentLineDetail.Bin 		  	  = each.StockOnHandDetail.Bin
										invoked.Quantity 								  	  = LocalPrintedQuantity
										if (Item.CatchWeightCode.ReceiptRequiresBoth)
											invoked.CatchWeightQuantity 		 			  = (LocalPrintedQuantity * TransactionUOMMultiplier)
										invoked.UpdateDate 								  	  = current timestamp
								else
									invoke Update SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail
										initialize invoked.LocalSkipSOHUpdate
										invoked.UpdateDate 									  = current timestamp
										invoked.Quantity   									  = LocalPrintedQuantity
										if (Item.CatchWeightCode.ReceiptRequiresBoth)
											invoked.CatchWeightQuantity 		 		  	  = (LocalPrintedQuantity * TransactionUOMMultiplier)

								LocalDetailQuantity 								  	  	  = SavedWarehouseShipmentLineDetailView.Quantity

								invoke CreateAudit each
									invoked.PrmSource = "WH130"
							
							if (ItemLocation.IsUDITracked
							and SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Lot entered)
								initialize LocalNotAllowDetailCreation
								if (InventoryUDIDetailForShipmentRel exists
								and InventoryUDIDetailForShipmentRel.Lot = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Lot)
									LocalNotAllowDetailCreation = true
								
								if (not LocalNotAllowDetailCreation)
									LocalLot = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Lot
									if (InventoryUDIDetailForLotRel exists)
										invoke Create InventoryUDIDetail
											fill in fields from first InventoryUDIDetailForLotRel
											invoked.InventoryUDIDetail.DocumentNumberNumeric 	 = WarehouseDemand.DemandDocument
											invoked.InventoryUDIDetail.WarehouseShipment 		 = SavedWarehouseShipmentLineDetailView.WarehouseShipment
											invoked.InventoryUDIDetail.LineNumber 				 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine
											invoked.InventoryUDIDetail.TransactionSystemCode 	 = "RQ"
											invoked.InventoryUDIDetail.InventoryTransactionType  = WarehouseDemandLine.DemandDocumentType
											invoked.Lot 		  	  							 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Lot
											invoked.Bin 		  	  							 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLineDetail.Bin
											invoked.Quantity 				 					 = SavedWarehouseShipmentLineDetailView.Quantity
											invoked.TransientCreateFromBatch 					 = true
									else
									if (PurchaseOrderUDIDetailForLotRel exists)
										invoke Create InventoryUDIDetail
											fill in fields from first PurchaseOrderUDIDetailForLotRel
											invoked.InventoryUDIDetail.WarehouseShipment 		 = SavedWarehouseShipmentLineDetailView.WarehouseShipment	
											invoked.InventoryUDIDetail.LineNumber 				 = SavedWarehouseShipmentLineDetailView.WarehouseShipmentLine	
											invoked.InventoryUDIDetail.DocumentNumberNumeric 	 = WarehouseDemand.DemandDocument	
											invoked.InventoryUDIDetail.TransactionSystemCode	 = "RQ"	
											invoked.InventoryUDIDetail.InventoryTransactionType  = WarehouseDemandLine.DemandDocumentType	
											invoked.TransientCreateFromBatch 					 = true	
											invoked.Quantity 				 					 = SavedWarehouseShipmentLineDetailView.Quantity	
				
				LocalShipmentOutRecordType = LocalShipmentOutRecordType.ShipmentLineDetail
				include CreateWarehouseShipmentOutFile

		ValidateAndCreateResultDetail
			initialize LocalHasError
			initialize LocalErrorMessage
			LocalCompany   		  = PrmCompany
			if (PrmReqLocationGroup entered)
				LocalReqLocationGroup = PrmReqLocationGroup
			else
			if (PrmWarehouseWave.RequestingReportGroup entered)
				LocalReqLocationGroup = PrmWarehouseWave.RequestingReportGroup	

			if (PrmExpectedShipDate entered
			and EstimatedTransactionDate > PrmExpectedShipDate)
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = TransactionDateErrorMessage

			else
			if ((PrmReqLocationGroup entered
			or   PrmWarehouseWave.RequestingReportGroup entered)
			and RequestingReportGroupLocationRel not exists)
				LocalErrorCounter += 1
				LocalHasError = true

			else
			if (Status.Unreleased)
				if (KitType.MakeToOrderKit and not KitComplete)
					LocalErrorCounter += 1
					LocalHasError = true
					LocalErrorMessage = KitOptionErrorMessage
				else
					LocalErrorCounter += 1
					LocalHasError = true
			
			else
			if (OnHold or WarehouseDemand.OnHold)
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = DemandOnHoldErrorMessage
			
			else
			if (WarehouseDemand.DemandSystemCode.CustomerOrder
			and (WarehouseDemand.Customer.ReceivableHoldCode entered
			or   CompanyCustomerRel.ReceivableHoldCode entered
			or   NationalAccountBalanceRel.ReceivableHoldCode entered))
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = CustomerOnHoldErrorMessage

			else
			if (AllocatedQuantity <= PrintedQuantity)
				if (LocalHasEnteredDocument 
				and PrintedQuantity > 0
				and OpenDemandQuantity = 0)
					LocalErrorMessage = PickListPrintedErrorMessage
				LocalErrorCounter += 1
				LocalHasError = true
			
			else
			if (WarehouseDemand.DemandSystemCode.Requisitions 
			and BasedOnPurchaseOrderReceipt)
				LocalErrorCounter += 1
				LocalHasError = true
			
			else
			if (PrmProcessType entered and WarehouseDemand.WarehouseProcessType != PrmProcessType)
				LocalErrorCounter += 1
				LocalHasError = true

			else
			if (TransactionUOM != Item.StockUOM
			and StockOnHandQuantityItemLocation < DerivedPrintedQuantityForPickList)
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = InsufficientSOHErrorMessage
			
			else
			if (WarehouseDemand.RequireCompleteShipment)
				if (WarehouseDemand.NotReadyForShipmentCompletion)
					LocalErrorCounter += 1
					LocalHasError = true
					LocalErrorMessage = LinesOnBackOrderErrorMessage
				else
					if (EstimatedTransactionDate > PrmExpectedShipDate or OnHold)
						LocalErrorCounter += 1
						LocalErrorMessage = LinesOnHoldErrorMessage
					else
					if (Quantity != AllocatedQuantity
					and CustomerOrderRel.ShipComplete = "Y" 
					and CustomerOrderRel.OrderEntryCustomerRel.ShipCompleteFlag = "Y")
						LocalErrorCounter += 1
						LocalHasError = true
						LocalErrorMessage = LinesAllocatedErrorMessage

			else
			if (RequireCompleteShipment and BackorderedQuantity > 0)
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = BackOrderExistsErrorMessage
			
			else
			if (RouteHeader.Route entered
			and LocalHasEnteredDocument)
				LocalErrorCounter += 1
				LocalHasError = true
				LocalErrorMessage = ContainsRoutingInfoErrorMessage
			
			else
			if (ItemUOMRel not exists)
				LocalErrorCounter += 1
				LocalHasError = true
			
			else
			if (ItemLocationRel.BinTracked and PrmSkipInsufBinDetails.Yes)
				initialize LocalBinTotalBinQuantity
				for each StockOnHandDetailRel
					if (each.HasBinType)
						initialize LocalTempCounter
						while (LocalTempCounter < 10)
							LocalTempCounter += 1
							if (each.BinType = Company.BinTypeArray.BinTypeGroup[LocalTempCounter].BinType)
								if (IsCatchWeight)
									LocalBinTotalBinQuantity += each.SecondaryAvailableQuantity
								else
									LocalBinTotalBinQuantity += each.AvailableQuantity
					else
						if (IsCatchWeight)
							LocalBinTotalBinQuantity += each.SecondaryAvailableQuantity
						else
							LocalBinTotalBinQuantity += each.AvailableQuantity

				if (LocalBinTotalBinQuantity < DerivedPrintedQuantityForPickList)
					LocalErrorCounter += 1
					LocalHasError = true
					LocalErrorMessage = InsufficientBinDetailsErrorMessage
			
			else
			if (WarehouseDemand.DemandSystemCode.CustomerOrder
			and not WarehouseDemand.OnHold
			and not CustomerOrderRel.HoldCodeApprove)
				if (CustomerOrderRel.CompanyCustomer.ReceivableHoldCode entered
				and CustomerOrderRel.CompanyCustomer.NationalAccountIndicator entered
				and CustomerOrderRel.Customer.ReceivableHoldCode entered)
					LocalErrorCounter += 1
					LocalHasError = true
				
				else
				if  (CustomerOrderRel.OrderEntryCustomer.CheckCreditBeforePickingList
				and (CustomerOrderRel.HoldCode entered 
				or   CustomerOrderRel.CompanyCustomer.ReceivableHoldCode entered
				or   NationalAccountBalanceRel.ReceivableHoldCode entered))
						invoke FastUpdate WarehouseDemand
							invoked.OnHold = true
						LocalErrorCounter += 1
						LocalHasError = true
				
				if (LocalErrorCounter entered
				or  WarehouseDemand.OnHold)
					LocalErrorMessage = OrderOnHoldErrorMessage

			if (LocalErrorMessage entered )
				if (SavedPickListPrintResultErrorView.WarehouseResult not entered)
					invoke Create WarehouseResult
						assign result to SavedPickListPrintResultErrorView
						invoked.FinanceEnterpriseGroup				= PrmCompany.FinanceEnterpriseGroup
						invoked.ReportType							= WarehouseResult.ReportType.WarehousePickListPrintErrorReport
						invoked.PrintTimeStamp						= current timestamp
						invoked.Status								= WarehouseResult.Status.Processing
						invoked.Company							    = PrmCompany
						invoked.Location							= PrmLocation
						invoked.DemandSystemCode					= WarehouseDemand.DemandSystemCode
						invoked.DemandDocument						= WarehouseDemand.DemandDocument
						invoked.DemandCompany						= WarehouseDemand.DemandCompany

				invoke SetError
					invoked.PrmErrorMessage   = LocalErrorMessage
					invoked.PrmPickListResult = SavedPickListPrintResultErrorView.WarehouseResult

		ItemLocationUpdate
			if (WorkOrder.OriginalWorkOrder entered)
				AllocatedQuantity					= Quantity
			invoke UpdateQuantities ItemLocationRel
				if (WarehouseDemandLine.DemandDocumentType.WorkOrder
				and WarehouseDemandLine.DemandRecordType.Supply
				and WorkOrder.OriginalWorkOrder not entered)
					if(Quantity changed)
						invoked.PrmWorkInProgressQuantity					= Quantity - old Quantity
					else
						invoked.PrmWorkInProgressQuantity					= Quantity
				else
				if (WarehouseDemandLine.DemandDocumentType.PurchaseOrder)
					invoked.PrmOnOrderQuantity						   	    = Quantity - old Quantity
				else
				if (WarehouseDemandLine.DemandDocumentType.KitchenOrder)
					invoked.PrmKitchenInProcessQuantity						= Quantity - old Quantity
				else
					invoked.PrmBackorderedQuantity							= BackorderedQuantity - old BackorderedQuantity  		
					invoked.PrmAllocatedQuantity							= AllocatedQuantity   - old AllocatedQuantity
					if (not WarehouseDemandLine.DemandDocumentType.IntransitReceiving
					and old AllocatedQuantity not entered
					and old BackorderedQuantity not entered)
						invoked.PrmUnallocatedQuantity						= DerivedOldUnallocatedQuantity * -1 
		
		MainKitItemAllocation
			AllocatedQuantity = LocalMinimumCompleteKit
			if (OnHold
			or  FillOrKill.KillBackorders
			or 	FutureDemand
			or  not IsOnlineAllocation
			or  not LineType.Inventoried)
				initialize BackorderedQuantity
			else
				BackorderedQuantity = Quantity - LocalMinimumCompleteKit
		
		UpdateShipmentCompletion
			if (RequireCompleteShipment or RequireCompleteShipment changed)
				if (WarehouseDemand.NotReadyForShipmentCompletion)
					if (not (WarehouseDemand.LinesRequiringCompleteShipmentExists and WarehouseDemand.BackorderedLinesExists))
						invoke UpdateShipmentCompletion WarehouseDemand
							initialize invoked.PrmNotReadyForShipmentCompletion
				else
					if (RequireCompleteShipment and BackorderedQuantity entered)
						invoke UpdateShipmentCompletion WarehouseDemand
							invoked.PrmNotReadyForShipmentCompletion		= true
					

		UpdateWarehouseDemand
			Quantity 			= LocalQuantity + old Quantity

			AllocatedQuantity   = LocalAllocatedQuantity + old AllocatedQuantity
			if (not WarehouseDemandLine.DemandDocumentType.PurchaseOrder)
				BackorderedQuantity = LocalBackorderedQuantity + old BackorderedQuantity
			PrintedQuantity     = LocalPrintedQuantity + old PrintedQuantity
			InProcessQuantity   = LocalInProcessQuantity + old InProcessQuantity
			ShippedQuantity 	= LocalShippedQuantity + old ShippedQuantity
			DetailQuantity 		= LocalDetailQuantity + old DetailQuantity
			PreAssembledKitQuantity = LocalPreAssembledKitQuantity + old PreAssembledKitQuantity 
		
		UpdateItemLocation
			LocalLeadtimeControl = ItemLocation.LeadtimeControl												
			if (LocalLastLeadtime entered)
				if (ItemLocation.LeadtimeControl.SystemCalculates)
					if (ItemLocation.PreviousLeadtime entered)
						LocalPercentChange = ((ItemLocation.LastLeadtime - LocalLastLeadtime) / ItemLocation.LastLeadtime)
						if (LocalPercentChange > .5)
							LocalLeadtimeControl = "R"
						else
							LeadtimeDays = ((ItemLocation.LastLeadtime + LocalLastLeadtime) / 2)
					else
						LeadtimeDays = LocalLastLeadtime
																
			if (LocalUnallocatedItemLocation not entered
			and Company.AllocationMethod.Batch
			and !WarehouseDemand.DemandSystemCode.Requisitions
			and !WarehouseDemand.DemandSystemCode.CustomerOrder)
				if (!TransActionType.Delete)			




					LocalUnallocatedItemLocation = LocalAllocatedQuantity * -1
			invoke UpdateQuantities ItemLocation
				invoked.PrmBackorderedQuantity	= LocalBackorderedItemLocation  		
				invoked.PrmAllocatedQuantity	= LocalAllocatedItemLocation
				invoked.PrmUnallocatedQuantity  = LocalUnallocatedItemLocation

				
		DeleteRules
			constraint (DetailQuantity not entered)
				"DemandHasDetailsAssigned;DeleteDetails"
			if (not FromWorkOrder and not FromCustomerOrder and not FromRequisition and not FromPreferenceCard)
				constraint (not QuantitiesExists)
					"CannotDeleteQuantitiesExist"

    Field Rules
    	FutureDemand
	    	constraint (PrintedQuantity not entered)
				"FutureDemand;CannotPrintPickTicket"									
    			
    	Allocatable
    		if  (WarehouseDemandLine.DemandRecordType.Demand
    		and (IsOnlineAllocation or Status.ReleasedForProcessing))
    			Allocatable = true
    		else
    			initialize
    
        AllocationPriority
        	if (CustomerOrderRel exists)						
            	default to CustomerOrderRel.PickingPriority	
            else
            	default to 50																 
		
		FillOrKill
			default to FillOrKill.FillBackorders
		
		BackorderAllowed
			if (FillOrKill.FillBackorders)
				BackorderAllowed = true
			else
				initialize BackorderAllowed
		
		KitType
			if (KitItemRel exists)
				force default to KitItemRel.MakeCode
			else
				if (KitItemNoCompanyNoLocationRel exists)
					force default to KitItemNoCompanyNoLocationRel.MakeCode
					
		KitComplete
			if (KitType.MakeToOrderKit)
				if ((action type.Create and OptionalComponentsRel exists)
				or  (DocumentKitComponentsForReviewRel exists))
					KitComplete = false
				else
					KitComplete = true
			
		Quantity
			required
			constraint (Quantity >= PrintedQuantity)
				"DemandQuantityCannotBeLessThanPrintedQuantity"							
			
		AllocatedQuantity
			if (not LocalUpdateFromAllocation)
				if (KitType.MakeToOrderKit
				or  OnHold or BasedOnPurchaseOrderReceipt or FutureDemand
				or  not IsOnlineAllocation
				or  not Allocatable)
					initialize AllocatedQuantity
				else
					if (PreferenceCardTransaction)
						AllocatedQuantity = DerivedAllocatedWithReservedQuantity
					else
						AllocatedQuantity = DerivedAllocatedQuantity
		
			constraint (not WarehouseDemand.OnHold and not OnHold)
				"DemandIsOnHold;CannotAllocate"										
			
			constraint (AllocatedQuantity <= Quantity)
				"AllocatedQuantityCannotBeGreaterThanDemandQuantity"					

			constraint (AllocatedQuantity >= InProcessQuantity)
				"AllocatedQuantityCannotBeLessThanInProcessQuantity"					

			constraint (AllocatedQuantity >= DetailQuantity)
				"DetailQuantityCannotExceedAllocatedQuantity"							

			constraint (Quantity >= AllocatedQuantity)
				"DemandQuantityCannotBeLessThanAllocatedQuantity"						

			constraint (AllocatedQuantity >= PrintedQuantity)							
				"AllocatedQuantityCannotBeLessThanPrintedQuantity"						
			
			if (LineType.Inventoried
			and AllocatedQuantity > old AllocatedQuantity)
				if (PreferenceCardTransaction)
					constraint ((AllocatedQuantity - old AllocatedQuantity) <= (AllocatableQuantityOfItemLocation - ItemLocationRel.AllocatableBackorderedQuantity + DerivedScheduledReservedQuantity))
						"NotEnoughQuantityAvailableToAllocate"
				else
					constraint ((AllocatedQuantity - old AllocatedQuantity) <= (AllocatableQuantityOfItemLocation - ItemLocationRel.AllocatableBackorderedQuantity))
						"NotEnoughQuantityAvailableToAllocate"
					



		
		BackorderedQuantity
			if (IsDemandType)
				if (LocalUpdateFromAllocation)
					if (AllocatedQuantity changed
					or  not IsOnlineAllocation)
						if (old AllocatedQuantity not entered
						and old BackorderedQuantity not entered)
							BackorderedQuantity = Quantity - AllocatedQuantity
						else
							BackorderedQuantity += old AllocatedQuantity - AllocatedQuantity
				else
					if (BasedOnPurchaseOrderReceipt)
						BackorderedQuantity		= Quantity
					else
					if (KitType.MakeToOrderKit
					or  FillOrKill.KillBackorders
					or 	FutureDemand
					or  not IsOnlineAllocation
					or  not Allocatable
					or  not LineType.Inventoried
					or (IsComponent and OnHold))
						initialize BackorderedQuantity
					else



						if (PreferenceCardTransaction)
							BackorderedQuantity 	= Quantity - DerivedAllocatedWithReservedQuantity
						else
							BackorderedQuantity 	= Quantity - DerivedAllocatedQuantity
							
			constraint (BackorderedQuantity <= Quantity)
				"BackorderQuantityCannotBeGreaterThanDemandQuantity"					
			



	
		Item
			if (IsInventoriedOrNonStock)
				required
					
			if (IsBinTracked 
			or  IsLotTracked 
			or  IsSerialTracked 
			or  UnitOfMeasureTracked)
				if (LineType.Inventoried)
					constraint (ItemLocation exists)
						"ItemLocationDoesNotExists"	  
						
		DetailRequired
			if (LineType.Inventoried)
				if (IsSerialTracked
				or  ItemLocation.DetailTrackedAtItemLocation) 
					DetailRequired = true
				
		InProcessQuantity
			constraint (InProcessQuantity <= AllocatedQuantity)
				"CannotProcessMoreThanAllocatedQuantity"								

		RequireCompleteShipment
			if (CustomerOrderLineRel.ShipComplete.DoesNotAcceptPartials)
				RequireCompleteShipment = true
			else
				initialize
		
		RequirePickingFeedback    
			default to WarehouseDemand.RequirePickingFeedback
				
		RequirePackingFeedback   
			default to WarehouseDemand.RequirePackingFeedback				
			 
		TransactionUOMMultiplier
			if (ItemUOMRel exists)
            	default to ItemUOMRel.UOMConversion
            else
            	default to 1
	
		TransAllocatedQuantity
			if (HasItemLocationStockUOM)
				constraint (TransAllocatedQuantity <= OpenDemandQuantityInLocationStockUOM)
					"AllocatedQuantityShouldBeLessThanOpenDemandQuantity"
			else
				constraint (TransAllocatedQuantity <= OpenDemandQuantity)
					"AllocatedQuantityShouldBeLessThanOpenDemandQuantity"
				
	Actions
		WarehousePickListPrint is a Set Action
			restricted
			Parameters
				PrmCompany              	 is an InventoryCompany
				PrmLocation             	 is an InventoryLocation
				PrmWarehouseWave			 is a WarehouseWave
					default label is "Wave"
				PrmExpectedShipDate          is Date
				PrmDocumentSource      		 is AlphaUpper size 2
					States
						CustomerOrder value is "OE"
						Requisitions   value is "RQ"
				PrmSelectOption            is Numeric size 1
					default label is "SelectOption"
					States
						ByShipmentDocumentLine                 value is 1
							default label is "By Shipment-Document Line"
						ByShipmentBinLotSerial                 value is 2
							default label is "By Shipment-Bin/Lot/Serial"
						ByShipmentBinLotSerialRequisitionBased value is 3
							default label is "By Shipment-Bin/Lot/Serial (Requisition based)"
						ByBinItemUomLotSerial                  value is 4
							default label is "By Bin-Item/UOM/Lot/Serial"
				PrmBinAllocationPurpose     is AlphaUpper size 1
					States
						SpeedPicking        value is "S"
						ConsolidatedPicking value is "C"
				PrmAllocateDetail           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmPreferOption            	is AlphaUpper size 1
					States
						YesPreferredBin   value is "Y"
							default label is "Yes (Preferred Bin)"
						NoNonPreferredBin value is "N"
							default label is "No (Non-preferred Bin)"
				PrmIncludeCost				is AlphaUpper size 1
					States
						DoNotPrintAnyCost        value is "N"
							default label is "Do not print any Cost"
						PrintCostAndExtendedCost value is "Y"
							default label is "Print Cost and Extended Cost"
				PrmIncludeBackorders       	is AlphaUpper size 1
					States
						DoNotPrintBackorders value is "N"
							default label is "Do not print Backorders"
						IncludeBackorders    value is "Y"
				PrmPrintDeliveryData       	is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIncludeKillDetails      	is AlphaUpper size 1
					States
						Yes     value is "Y"
						No      value is "N"
						Partial value is "P"
				PrmAlignForm                is Numeric size 2
				PrmReprintShipmentNumber    is a WarehouseShipment
				PrmReprintBatchNumber       is a WarehouseBatch
				PrmCreateFlatFile           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmFlatFileName				is AlphaUpper size 30
				PrmDocumentNumber           is a WH130DocNbrArray
				PrmRequestingLocation       is a RequestingLocation
				PrmReqLocationGroup			is a RequestingReportGroup 
				PrmCustomer					is a Customer
				PrmCompanyCustomer			is a CompanyCustomer
				PrmItem              		is a Item                        
				PrmProcessType              is a WarehouseProcessType
				PrmFromAllocPriority        is Numeric size 2
				PrmToAllocPriority          is Numeric size 2
				PrmShipTo                   is a CustomerShipTo
				PrmCarrier                  is a Vendor
				PrmRoute                 is a PickShipRoute
				PrmAllRoute                 is AlphaUpper size 1
					States
						None          value is "N"
						AllRoutes     value is "A"
						SpecificRoute value is "S"
				PrmSkipInsufBinDetails      is AlphaUpper size 1   
					States
						Yes value is "Y"
						No  value is "N"
				PrmPrintRequester			is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIDMPrinter  				is a IDMPrinter 
					default label is "IDMPrinter" 
				PrmConsolidateFile	        is Boolean
					default label is "Consolidate Documents in a Single File"
				PrmUseZonePick				is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"		
			
			Sort Order
				Company
				WarehouseDemand
				WarehouseDemandLine

			Parameter Rules
				PrmCompany
					required
						"Field_CompanyIsRequired"

				PrmLocation
					required
						"Field_LocationIsRequired"

				PrmSelectOption
					initial value is 1
					default to 1
					
					if (not PrmSelectOption.ByShipmentBinLotSerialRequisitionBased)
						constraint (PrmPrintDeliveryData.No)
							"MustChoosePrintOption\"\By_Shipment-\Bin/\Lot/\Serial_(\Requisition\Based)\"ToPrintDeliveryData"
					
				PrmAllocateDetail
					initial value is "Y"
					default to "Y"
					
					if (PrmBinAllocationPurpose entered)
						constraint (PrmAllocateDetail.Yes)
							"AllocateDetailsWithAllocationPurposeSelection."
					
					if (PrmSelectOption.ByShipmentBinLotSerial 
					or PrmSelectOption.ByBinItemUomLotSerial)
						constraint (PrmAllocateDetail.Yes)     
							"Allocate_DetailsMustBe_YesWhen_Print_OptionSelectedIs\"\<PrmSelectOption>\""
							
				PrmPreferOption
					if (PrmPreferOption.YesPreferredBin)
						constraint (PrmAllocateDetail.Yes)
							"CannotUseForcedPreferredBinWithoutAllocateDetails=_Yes"
				
				PrmIncludeCost
					initial value is "N"
					default to "N"
					if (not PrmSelectOption.ByShipmentBinLotSerialRequisitionBased)
						constraint (PrmIncludeCost.DoNotPrintAnyCost)
							"Include_CostOptionOnlyAvailableWithPrintOption\"\By_Shipment-\Bin/\Lot/\Serial_(\Requisition\Based)\""
					
				PrmIncludeBackorders
					initial value is "N"
					default to "N"

				PrmPrintDeliveryData
					initial value is "N"
					default to "N"

				PrmIncludeKillDetails
					initial value is "N"
					default to "N"

				PrmCreateFlatFile
					initial value is "N"
					default to "N"
					if (PrmReprintBatchNumber entered 
					or PrmReprintShipmentNumber entered)
						constraint (PrmCreateFlatFile.No)
							"CannotCreateFlatFileWhenUsingReprintOption."

				PrmAllRoute
					initial value is "N"
					default to "N"
					
					if (PrmRoute.DayOfWeek entered)
						LocalCompany = PrmCompany
						constraint (BillingCompanyRel.RouteAndStop)
							"Company<LocalCompany>IsNotSetupForRouteProcessing."	
						constraint (not PrmAllRoute.None)
							"CannotSelect\"\None\"\WhenProcessingForASpecificRoute."
						constraint (not PrmAllRoute.AllRoutes)
							"CannotSpecifyRouteNumberWhen_(\A)\llIsSelected"

				PrmSkipInsufBinDetails
					initial value is "N"
					default to "N"
					if (PrmSkipInsufBinDetails.Yes)
						constraint (PrmAllocateDetail.Yes)
							"Skip_Insufficient_Bin_DetailsOnlyValidWith_Allocate_Details_=_Yes"

				PrmPrintRequester
					initial value is "N"    
					default to "N"
				PrmIDMPrinter
					initial value is PrmCompany.UserDefaultPrinter
				
				PrmReprintBatchNumber
					LocalCompany 				= PrmCompany
					LocalLocation 				= PrmLocation
					LocalWarehouseBatch 		= PrmReprintBatchNumber
					
					if (PrmReprintBatchNumber entered
					and PrmReprintShipmentNumber not entered)
						constraint (WarehouseShipmentsForBatchRel exists)
							"NoShipmentsFoundForBatch."
					else
					if (PrmReprintShipmentNumber entered)
						required
							"EnterBatchAndShipmentNumberForShipmentReprint."
				
				PrmReprintShipmentNumber
					LocalCompany 				= PrmCompany
					LocalLocation 				= PrmLocation
					LocalWarehouseBatch 		= PrmReprintBatchNumber
					LocalShipmentNumber  		= PrmReprintShipmentNumber

					if (PrmReprintBatchNumber entered
					and PrmReprintShipmentNumber entered)
						constraint (WarehouseShipmentsForBatchAndShipmentRel exists)
							"ShipmentNotFoundInBatch."

				PrmFromAllocPriority
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_From_Allocation_PriorityAnd_Wave"

					if (PrmToAllocPriority entered)
						required
							"Priority_FromRequiredWithPriority_ToEntry."	
				
				PrmToAllocPriority
					if (PrmReprintShipmentNumber entered
					or  PrmReprintBatchNumber entered)
						constraint (PrmFromAllocPriority not entered and PrmToAllocPriority not entered)
							"CannotUsePriorityAllocationWithSpecificDocuments."
					
					if (PrmFromAllocPriority entered)
						required
							"Priority_ToRequiredWithPriority_FromEntry."

					constraint (PrmFromAllocPriority < PrmToAllocPriority)
						"Priority_FromCannotBeGreaterThanPriority_To."
					
					if (PrmDocumentNumber.DocNbr[1]   entered
					or  PrmDocumentNumber.DocNbr[2]   entered
					or  PrmDocumentNumber.DocNbr[3]   entered
					or  PrmDocumentNumber.DocNbr[4]   entered
					or  PrmDocumentNumber.DocNbr[5]   entered
					or  PrmDocumentNumber.DocNbr[6]   entered
					or  PrmDocumentNumber.DocNbr[7]   entered
					or  PrmDocumentNumber.DocNbr[8]   entered
					or  PrmDocumentNumber.DocNbr[9]   entered
					or  PrmDocumentNumber.DocNbr[10]  entered
					or  PrmDocumentNumber.DocNbr[11]  entered
					or  PrmDocumentNumber.DocNbr[12]  entered)
						cannot be entered
							"CannotUsePriorityAllocationWithSpecificDocuments."
				
				PrmCustomer
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_CustomerAnd_Wave"

					if (PrmShipTo entered or PrmCustomer entered)
						constraint (PrmDocumentSource.CustomerOrder)
							"CustomerOnlyValidWithSourceDocumentEqualTo_O\E."
				
				PrmProcessType
					if (not PrmAllRoute.None)
						cannot be entered
							"CannotSelectProcessTypeWhenRouteProcessing."
				
				PrmCarrier
					if (PrmDocumentSource.Requisitions)
						cannot be entered
							"CarrierOnlyValidWithSourceDocumentEqualTo_O\E"

					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_CarrierAnd_Wave"
				
				PrmDocumentSource
					if (PrmDocumentNumber.DocNbr[1]   entered
					or  PrmDocumentNumber.DocNbr[2]   entered
					or  PrmDocumentNumber.DocNbr[3]   entered
					or  PrmDocumentNumber.DocNbr[4]   entered
					or  PrmDocumentNumber.DocNbr[5]   entered
					or  PrmDocumentNumber.DocNbr[6]   entered
					or  PrmDocumentNumber.DocNbr[7]   entered
					or  PrmDocumentNumber.DocNbr[8]   entered
					or  PrmDocumentNumber.DocNbr[9]   entered
					or  PrmDocumentNumber.DocNbr[10]  entered
					or  PrmDocumentNumber.DocNbr[11]  entered
					or  PrmDocumentNumber.DocNbr[12]  entered)
						required
							"DocumentSourceRequiredWithSourceDocument(s)"
					
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_Document_SourceAnd_Wave"
				
				PrmDocumentNumber
					if (PrmRoute.DayOfWeek entered or not PrmAllRoute.None)
						cannot be entered
							"CannotUseSpecificSourceDocument(s)WhenRouteProcessing."
				
				PrmFlatFileName
					if (PrmCreateFlatFile.No)
						cannot be entered
							"Flat_File_NameNotNeededWith\"\N\"Option"
				
				PrmItem
					LocalItemGroup = PrmCompany.ItemGroup
					LocalCompany   = PrmCompany
					LocalLocation  = PrmLocation
					LocalItem      = PrmItem
					constraint (PicklistItemRel exists)
						"ItemDoesNotExist."
					constraint (PickListItemLocationsRel exists)
						"ItemDoesNotExistAtLocation."

				PrmRequestingLocation
					if (PrmReqLocationGroup entered and PrmRequestingLocation entered)
						cannot be entered
							"CannotEnterBoth_Requesting_LocationAnd_Requesting_Location_Group."

					if (PrmWarehouseWave entered and PrmRequestingLocation entered)
						cannot be entered
							"CannotEnterBoth_Requesting_LocationAnd_Wave"

					if (PrmDocumentSource.CustomerOrder)
						cannot be entered
							"Requesting_LocationOnlyValidWith_R\QSourceDocument."

				PrmReqLocationGroup
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_Requesting_Location_GroupAnd_Wave"

				PrmUseZonePick
					initial value is "N"
					default to "N"

			Local Fields
				LocalActor					 			is an Actor
				LocalHasError							is Boolean
				LocalErrorCounter						is Numeric 9
				SavedPickListPrintResultErrorView  		is a WarehouseResult view
				SavedPickListPrintReportView 	 		is a WarehouseResult view
				LocalHasEnteredDocument					is Boolean
				SavedWarehouseShipmentOutputFile		is a WarehouseShipmentOutputFile view
				SavedWarehouseShipmentView				is a WarehouseShipment view
				SavedWarehouseShipmentLineView			is a WarehouseShipmentLine view
				SavedWarehouseBatchView					is a WarehouseBatch view
				SavedWarehouseShipmentLineDetailView	is a WarehouseShipmentLineDetail view
				SavedWarehouseShipmentLineComponentView is a WarehouseShipmentLineComponent view
				LocalLastBatchNumber					is Numeric size 12
				LocalFlatFileName						is AlphaUpper size up to 60
				LocalReprint							is Boolean
			Instance Selection
				where  (Company			 	= PrmCompany
				and	    InventoryLocation	= PrmLocation 
				and	  ((PrmDocumentSource not entered
				and   ((WarehouseDemand.DemandSystemCode.CustomerOrder
				and     PrmWarehouseWave not entered)
				or      WarehouseDemand.DemandSystemCode.Requisitions)
				or    ((WarehouseDemand.DemandSystemCode = PrmDocumentSource)
				and  (((PrmDocumentNumber.DocNbr[1]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[1])
				or	   (PrmDocumentNumber.DocNbr[2]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[2])
				or	   (PrmDocumentNumber.DocNbr[3]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[3])
				or	   (PrmDocumentNumber.DocNbr[4]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[4])
				or	   (PrmDocumentNumber.DocNbr[5]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[5])
				or	   (PrmDocumentNumber.DocNbr[6]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[6])
				or	   (PrmDocumentNumber.DocNbr[7]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[7])
				or     (PrmDocumentNumber.DocNbr[8]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[8])
				or     (PrmDocumentNumber.DocNbr[9]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[9])
				or     (PrmDocumentNumber.DocNbr[10] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[10])
				or     (PrmDocumentNumber.DocNbr[11] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[11])
				or     (PrmDocumentNumber.DocNbr[12] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[12]))
				or     (PrmDocumentNumber.DocNbr[1]   not entered
				and  	PrmDocumentNumber.DocNbr[2]   not entered
				and  	PrmDocumentNumber.DocNbr[3]   not entered
				and  	PrmDocumentNumber.DocNbr[4]   not entered
				and  	PrmDocumentNumber.DocNbr[5]   not entered
				and  	PrmDocumentNumber.DocNbr[6]   not entered
				and  	PrmDocumentNumber.DocNbr[7]   not entered
				and  	PrmDocumentNumber.DocNbr[8]   not entered
				and  	PrmDocumentNumber.DocNbr[9]   not entered
				and  	PrmDocumentNumber.DocNbr[10]  not entered
				and  	PrmDocumentNumber.DocNbr[11]  not entered
				and  	PrmDocumentNumber.DocNbr[12]  not entered))))
				and    (PrmCustomer not entered or WarehouseDemand.Customer = PrmCustomer)
				and    (PrmShipTo not entered or (CustomerShipTo = PrmShipTo and PrmCustomer entered))
				and    (PrmCarrier not entered or Carrier = PrmCarrier)
				and    (PrmItem not entered or Item = PrmItem)    
				and    (PrmRequestingLocation not entered or CompanyAndLocation.RequestingLocation = PrmRequestingLocation)
				and  (((PrmWarehouseWave entered and PrmWarehouseWave.FromPriority not entered and PrmWarehouseWave.ToPriority not entered)
				or     (PrmWarehouseWave entered and AllocationPriority >= PrmWarehouseWave.FromPriority and AllocationPriority <= PrmWarehouseWave.ToPriority))
                or    ((PrmWarehouseWave not entered and PrmFromAllocPriority not entered and PrmToAllocPriority not entered)
				or     (PrmWarehouseWave not entered and AllocationPriority >= PrmFromAllocPriority and AllocationPriority <= PrmToAllocPriority)))
				and   ((PrmAllRoute not entered or PrmAllRoute.None) 
				or     ((WarehouseDemandLine.RouteHeader.Route entered and WarehouseDemandLine.RouteStop entered)
				and    (PrmAllRoute.AllRoutes or (PrmAllRoute.SpecificRoute and PrmRoute.DayOfWeek = WarehouseDemandLine.RouteHeader.Route))
				and    (RouteExists or (ReleasedRouteHeaderRel exists and RouteHeader.Date <= PrmExpectedShipDate))))
				and	   (PrmWarehouseWave not entered
				or     (PrmWarehouseWave entered
				and    (PrmWarehouseWave.Sterile not entered or	DerivedSterileItem = PrmWarehouseWave.Sterile)
				and    (PrmWarehouseWave.SingleUse not entered or DerivedSingleUseItem = PrmWarehouseWave.SingleUse)
				and    (PrmWarehouseWave.Reusable not entered or DerivedReusableItem = PrmWarehouseWave.Reusable)
				and    (PrmWarehouseWave.Implantable not entered or	DerivedImplantableItem = PrmWarehouseWave.Implantable)
				and    (PrmWarehouseWave.ContainsHumanTissue not entered or DerivedContainsHumanTissueItem = PrmWarehouseWave.ContainsHumanTissue)
				and    (PrmWarehouseWave.Pharmaceutical not entered or DerivedPharmaceuticalItem = PrmWarehouseWave.Pharmaceutical)
				and    (PrmWarehouseWave.Dressing not entered or DerivedDressingItem = PrmWarehouseWave.Dressing)
				and    (PrmWarehouseWave.PersonalProtectiveEquipment not entered or DerivedPersonalProtectiveEquipmentItem = PrmWarehouseWave.PersonalProtectiveEquipment)
				and    (PrmWarehouseWave.CriticalItem not entered or DerivedCriticalItem = PrmWarehouseWave.CriticalItem)
				and    (PrmWarehouseWave.Narcotic not entered or DerivedNarcoticItem = PrmWarehouseWave.Narcotic)
				and    (PrmWarehouseWave.Instrument not entered or DerivedInstrumentItem = PrmWarehouseWave.Instrument)
				and    (PrmWarehouseWave.Drugs not entered or DerivedDrugsItem = PrmWarehouseWave.Drugs)
				and    (PrmWarehouseWave.Analytics not entered or DerivedAnalyticsItem = PrmWarehouseWave.Analytics)
				and    (PrmWarehouseWave.Reprocessed not entered or	DerivedReprocessed = PrmWarehouseWave.Reprocessed)
				and    (PrmWarehouseWave.MajorPPEClass not entered or DerivedMajorPPEClass = PrmWarehouseWave.MajorPPEClass)
				and    (PrmWarehouseWave.MinorPPEClass not entered or DerivedMinorPPEClass = PrmWarehouseWave.MinorPPEClass)
				and    (PrmWarehouseWave.InventoryClass.MajorInventoryClass not entered or DerivedMajorPurchasingClass = PrmWarehouseWave.InventoryClass.MajorInventoryClass)
				and    (PrmWarehouseWave.InventoryClass.MinorInventoryClass not entered or DerivedMinorPurchasingClass = PrmWarehouseWave.InventoryClass.MinorInventoryClass)
				and    (PrmWarehouseWave.SpecialHandlingCode not entered or DerivedSpecialHandlingCode = PrmWarehouseWave.SpecialHandlingCode)
				and    (PrmWarehouseWave.RequestingCompanyAndLocation.RequestingCompany not entered
				or     (CompanyAndLocation.RequestingCompany    = PrmWarehouseWave.RequestingCompanyAndLocation.RequestingCompany
				and     CompanyAndLocation.RequestingLocation   = PrmWarehouseWave.RequestingCompanyAndLocation.RequestingLocation))
				and    (PrmWarehouseWave.Requester not entered
				or      DerivedRequester                        = PrmWarehouseWave.Requester)))))
			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoWarehouseDemandRecordsFound"
						priority is high
						detail is "NoDataToProcess"
					invoke FastUpdate PrmLocation
						initialize invoked.ProcessStatus 
				Set Rules
					Entrance Rules
						if (PrmFlatFileName entered)
							LocalFlatFileName 				  = PrmFlatFileName
						else
							LocalFlatFileName 				  = PrmCompany + "|" + PrmLocation

						if (PrmReprintBatchNumber entered)
							LocalReprint = true
						else
							invoke FastUpdate PrmLocation
								invoked.ProcessStatus = 2 
						
						if (PrmDocumentNumber.DocNbr[1]  entered
						or  PrmDocumentNumber.DocNbr[2]  entered
						or  PrmDocumentNumber.DocNbr[3]  entered
						or  PrmDocumentNumber.DocNbr[4]  entered
						or  PrmDocumentNumber.DocNbr[5]  entered
						or  PrmDocumentNumber.DocNbr[6]  entered
						or  PrmDocumentNumber.DocNbr[7]  entered
						or  PrmDocumentNumber.DocNbr[8]  entered
						or  PrmDocumentNumber.DocNbr[9]  entered
						or  PrmDocumentNumber.DocNbr[10] entered
						or  PrmDocumentNumber.DocNbr[11] entered
						or  PrmDocumentNumber.DocNbr[12] entered)
							LocalHasEnteredDocument = true
						
					Exit Rules
						if (SavedPickListPrintResultErrorView.WarehouseResult entered)
							LocalReportFinanceEnterpriseGroup	= PrmCompany.FinanceEnterpriseGroup
							LocalWarehouseResult	= SavedPickListPrintResultErrorView.WarehouseResult
							if (WarehouseResultErrorRel exists)
								invoke SendPickListErrorNotification last WarehouseResultErrorRel.WarehouseResult in background
									invoked.PrmRecordsWithError = LocalErrorCounter
						
						if (PrmCompany.UseIDM)
							if (LocalReprint
							and SavedWarehouseBatchView.WarehouseBatch not entered)
								invoke PrintWarehousePickList PrmReprintBatchNumber
									invoked.PrmPrintOption 		  	   = PrmSelectOption
									invoked.PrmIncludeCost 	 	  	   = PrmIncludeCost
									invoked.PrmDeliveryData 	 	   = PrmPrintDeliveryData
									invoked.PrmAllocateDetail     	   = PrmAllocateDetail
									invoked.PrmReprintShipment    	   = PrmReprintShipmentNumber
									invoked.PrmIncludeBackorders  	   = PrmIncludeBackorders
									invoked.PrmIncludeKillDetails 	   = PrmIncludeKillDetails
									invoked.PrmExpectedShipDate   	   = PrmExpectedShipDate
									invoked.PrmDocumentSource	  	   = PrmDocumentSource
									invoked.PrmAllocationPurpose  	   = PrmBinAllocationPurpose
									invoked.PrmForcePreferredBin  	   = PrmPreferOption
									invoked.PrmReprintBatch 	  	   = PrmReprintBatchNumber
									invoked.PrmSourceDocument1    	   = PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2    	   = PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3    	   = PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4     	   = PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5     	   = PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6    	   = PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7    	   = PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8    	   = PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9    	   = PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10   	   = PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11   	   = PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12   	   = PrmDocumentNumber.DocNbr[12]
									invoked.PrmRequestingLocation 	   = PrmRequestingLocation
									invoked.PrmCustomer   		  	   = PrmCustomer
									invoked.PrmItem 			  	   = PrmItem
									invoked.PrmProcessType 		  	   = PrmProcessType
									invoked.PrmFromAllocationPriority  = PrmFromAllocPriority
									invoked.PrmToAllocationPriority    = PrmToAllocPriority
									invoked.PrmShipTo 				   = PrmShipTo
									invoked.PrmCarrier 				   = PrmCarrier
									invoked.PrmRouteDay 			   = PrmRoute.DayOfWeek
									invoked.PrmRoute 				   = PrmRoute
									invoked.PrmRouteStop 			   = RouteStop
									invoked.PrmAllRoute 			   = PrmAllRoute
									invoked.PrmSkipInsufficientDetails = PrmSkipInsufBinDetails
									invoked.PrmIDMPrinter 			   = PrmIDMPrinter
									invoked.PrmPrintRequester 		   = PrmPrintRequester
									invoked.PrmConsolidateFile 		   = PrmConsolidateFile
							else
								invoke PrintWarehousePickList SavedWarehouseBatchView.WarehouseBatch
									invoked.PrmPrintOption 		  	   = PrmSelectOption
									invoked.PrmIncludeCost 	 	  	   = PrmIncludeCost
									invoked.PrmDeliveryData 	 	   = PrmPrintDeliveryData
									invoked.PrmAllocateDetail     	   = PrmAllocateDetail
									invoked.PrmReprintShipment    	   = PrmReprintShipmentNumber
									invoked.PrmIncludeBackorders  	   = PrmIncludeBackorders
									invoked.PrmIncludeKillDetails 	   = PrmIncludeKillDetails
									invoked.PrmExpectedShipDate   	   = PrmExpectedShipDate
									invoked.PrmDocumentSource	  	   = PrmDocumentSource
									invoked.PrmAllocationPurpose  	   = PrmBinAllocationPurpose
									invoked.PrmForcePreferredBin  	   = PrmPreferOption
									invoked.PrmReprintBatch 	  	   = PrmReprintBatchNumber
									invoked.PrmSourceDocument1    	   = PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2    	   = PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3    	   = PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4     	   = PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5     	   = PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6    	   = PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7    	   = PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8    	   = PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9    	   = PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10   	   = PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11   	   = PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12   	   = PrmDocumentNumber.DocNbr[12]
									invoked.PrmRequestingLocation 	   = PrmRequestingLocation
									invoked.PrmCustomer   		  	   = PrmCustomer
									invoked.PrmItem 			  	   = PrmItem
									invoked.PrmProcessType 		  	   = PrmProcessType
									invoked.PrmFromAllocationPriority  = PrmFromAllocPriority
									invoked.PrmToAllocationPriority    = PrmToAllocPriority
									invoked.PrmShipTo 				   = PrmShipTo
									invoked.PrmCarrier 				   = PrmCarrier
									invoked.PrmRouteDay 			   = PrmRoute.DayOfWeek
									invoked.PrmRoute 				   = PrmRoute
									invoked.PrmRouteStop 			   = RouteStop
									invoked.PrmAllRoute 			   = PrmAllRoute
									invoked.PrmSkipInsufficientDetails = PrmSkipInsufBinDetails
									invoked.PrmIDMPrinter 			   = PrmIDMPrinter
									invoked.PrmPrintRequester 		   = PrmPrintRequester
									invoked.PrmConsolidateFile 		   = PrmConsolidateFile
						else
							if (SavedPickListPrintReportView.WarehouseResult entered)
								invoke GeneratePickListPrintResult SavedPickListPrintReportView.WarehouseResult
									invoked.PrmCompany				= PrmCompany
									invoked.PrmLocation				= PrmLocation
									invoked.PrmExpectedShipDate		= PrmExpectedShipDate
									invoked.PrmDocumentSource		= PrmDocumentSource
									invoked.PrmSelectOption			= PrmSelectOption
									invoked.PrmBinAllocationPurpose = PrmBinAllocationPurpose
									invoked.PrmAllocateDetail		= PrmAllocateDetail
									invoked.PrmPreferOption			= PrmPreferOption
									invoked.PrmIncludeCost			= PrmIncludeCost
									invoked.PrmIncludeBackorders	= PrmIncludeBackorders
									invoked.PrmPrintDeliveryData	= PrmPrintDeliveryData
									invoked.PrmIncludeKillDetails	= PrmIncludeKillDetails
									invoked.PrmAlignForm			= PrmAlignForm
									invoked.PrmReprintShipmentNumber= PrmReprintShipmentNumber
									invoked.PrmReprintBatchNumber   = PrmReprintBatchNumber 
									invoked.PrmSourceDocument1		= PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2		= PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3		= PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4		= PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5		= PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6		= PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7		= PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8		= PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9		= PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10		= PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11		= PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12		= PrmDocumentNumber.DocNbr[12]
									invoked.PrmCreateFlatFile 		= PrmCreateFlatFile
									invoked.PrmFlatFileName			= PrmFlatFileName  
									invoked.PrmRequestingLocation   = PrmRequestingLocation
									invoked.PrmReqLocationGroup		= PrmReqLocationGroup	
									invoked.PrmCustomer				= PrmCustomer
									invoked.PrmItem              	= PrmItem                     
									invoked.PrmProcessType          = PrmProcessType
									invoked.PrmFromAllocPriority    = PrmFromAllocPriority
									invoked.PrmToAllocPriority      = PrmToAllocPriority
									invoked.PrmShipTo               = PrmShipTo
									invoked.PrmCarrier              = PrmCarrier
									invoked.PrmRoute                = PrmRoute
									invoked.PrmAllRoute        		= PrmAllRoute
									invoked.PrmSkipInsufBinDetails  = PrmSkipInsufBinDetails
									invoked.PrmPrintRequester		= PrmPrintRequester
									if (PrmLocation.UseAsWarehouseLocation)
										invoked.PrmWarehouseWave		= PrmWarehouseWave
										invoked.PrmUseZonePick			= PrmUseZonePick
							
						invoke FastUpdate PrmLocation
							initialize invoked.ProcessStatus	
						
				WarehouseDemand Set Rules
					Entrance Rules
						if (LocalReprint and SavedPickListPrintReportView.WarehouseResult not entered)
							invoke Create WarehouseResult
								assign result to SavedPickListPrintReportView
								invoked.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
								invoked.ReportType							= WarehouseResult.ReportType.WarehousePickListPrintReport
								invoked.PrintTimeStamp						= current timestamp
								invoked.Status								= WarehouseResult.Status.Processing
								invoked.Company								= Company
								invoked.DemandSystemCode					= WarehouseDemand.DemandSystemCode
								invoked.DemandDocument						= WarehouseDemand.DemandDocument
								invoked.DemandCompany						= WarehouseDemand.DemandCompany
					Exit Rules
						if (SavedWarehouseBatchView.WarehouseBatch entered
						or  SavedWarehouseShipmentView.WarehouseShipment entered)
							invoke FastUpdate PrmLocation
								invoked.LastBatchNumber = SavedWarehouseBatchView.WarehouseBatch
								invoked.LastShipment    = SavedWarehouseShipmentView.WarehouseShipment

						initialize SavedWarehouseShipmentView
				
				WarehouseDemandLine Set Rules
					Entrance Rules
						invoke FastUpdate
							initialize invoked.ErrorMessage
							initialize invoked.PickListPrintRun
						
						if (not LocalReprint)
							include ValidateAndCreateResultDetail
						
				Instance Rules
					if (not LocalReprint and not LocalHasError)
						if (SavedWarehouseBatchView.WarehouseBatch not entered)
							invoke Create WarehouseBatch
								assign result to SavedWarehouseBatchView
								fill in fields from this instance
								invoked.WarehouseBatch = InventoryLocation.LastBatchNumber + 1

						if (SavedWarehouseShipmentView.WarehouseShipment not entered)
							invoke Printed.Create WarehouseShipment
								assign result to SavedWarehouseShipmentView			
								fill in fields from this instance
									except invoked.Status	
									except invoked.WarehouseZone
								invoked.DemandDocumentType             = WarehouseDemandLine.DemandDocumentType	
								invoked.CustomerShipTo                 = CustomerShipTo
								if (WarehouseDemand.DemandSystemCode.CustomerOrder)
									invoked.ProcessLevel           	   = CustomerOrderRel.BillingProcessLevel	
									invoked.RequirePickingFeedback 	   = CustomerOrderRel.OrderEntryOrderType.WarehouseProcessType.RequirePickingFeedback
									invoked.RequirePackingFeedback 	   = CustomerOrderRel.OrderEntryOrderType.WarehouseProcessType.RequirePackingFeedback
									invoked.RouteHeader.Route          = CustomerOrderLineRel.RouteHeader.Route	
									invoked.RouteHeader.Date           = CustomerOrderLineRel.RouteHeader.Date	
									invoked.RouteStop                  = RouteStop	
									invoked.Carrier                    = CustomerOrderLineRel.Carrier	
									if (CustomerOrderRel.WarehouseShipment not entered)
										invoked.FreightCharges         = CustomerOrderRel.FreightCharge
									invoked.FreightCode                = CustomerOrderRel.BillingFreightCode
									invoked.ShippingMethod             = CustomerOrderRel.ShippingMethod	
									invoked.GlobalDocumentType         = CustomerOrderRel.GlobalDocumentType
									invoked.StockVolume                = CustomerOrderRel.StockVolume	
									invoked.StockWeight                = CustomerOrderRel.StockWeight	
									invoked.ShipTerm                   = CustomerOrderLineRel.ShipTerm	
									invoked.PortCode                   = CustomerOrderLineRel.PortCode	
									invoked.NatureOfTransactionCode    = CustomerOrderLineRel.NatureOfTransactionCode	
									invoked.StatisticalProcedure       = CustomerOrderLineRel.StatisticalProcedure 
									invoked.VATRegistrationNumber      = CustomerOrderRel.CustomerShipTo.VATRegistrationNumber	
								else
								if (WarehouseDemand.DemandSystemCode.Requisitions)
									invoked.ProcessLevel           	   = RequisitionRel.RequestingLocation.ProcessLevel
								invoked.WarehouseBatch 				   = SavedWarehouseBatchView.WarehouseBatch
								invoked.OperatorID                     = actor	
								invoked.PrintDate                      = current corporate date	
								invoked.EstimatedDeliveryDate          = PrmExpectedShipDate
								invoked.TransactionId                  = WarehouseDemand.TransactionId	
								invoked.RequireFreight                 = WarehouseDemand.RequireFreight
								invoked.InvoiceNumber                  = 0
								invoked.WarehouseWave				   = PrmWarehouseWave

							LocalShipmentOutRecordType = LocalShipmentOutRecordType.Shipment
							include CreateWarehouseShipmentOutFile

							if (SavedWarehouseBatchView.WarehouseBatch entered)
								invoke Update SavedWarehouseBatchView.WarehouseBatch
									if (SavedWarehouseBatchView.FirstShipment not entered)
										invoked.FirstShipment  = SavedWarehouseShipmentView.WarehouseShipment	
									invoked.LastShipment   = SavedWarehouseShipmentView.WarehouseShipment
									invoked.Route          = SavedWarehouseShipmentView.RouteHeader.Route
									invoked.StockVolume    = SavedWarehouseShipmentView.StockVolume	
									invoked.StockWeight    = SavedWarehouseShipmentView.StockWeight
									invoked.LastShipment   = SavedWarehouseShipmentView.WarehouseShipment

							invoke TriggerWHBatchCreationAlert SavedWarehouseShipmentView.WarehouseShipment
								invoked.PrmBatchNumber     = SavedWarehouseBatchView.WarehouseBatch




						if (SavedWarehouseShipmentView.WarehouseShipment entered)
							if (WarehouseDemandLine.ComponentSequence not entered)
								invoke Create WarehouseShipmentLine
									assign result to SavedWarehouseShipmentLineView			
									fill in fields from this instance
										except invoked.Status
										except invoked.PrintedQuantity
										except invoked.ShippedQuantity
										except invoked.DetailQuantity
										except invoked.DetailCatchWeightQuantity
										except invoked.PreAssembledKitQuantity
										except invoked.InProcessQuantity
									invoked.RequestingDocument.RequestingCompany = WarehouseDemand.DemandCompany
									invoked.RequestingDocument.DemandSystemCode  = WarehouseDemand.DemandSystemCode
									invoked.RequestingDocument.DocumentNumber    = WarehouseDemand.DemandDocument
									invoked.WarehouseShipment                    = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipmentLine 				 = WarehouseDemandLine.LineNumber
									if (Company.GeneralLedgerCompany.RequireHSNSACCode 
									and BusinessGroupRel.UseHSNSACCode)
										invoked.HSNSACCode                       = HSNSACCode
									invoked.WalkThruRequired                     = DetailRequired
									if (WarehouseDemand.DemandSystemCode.CustomerOrder
									and CustomerOrderLineRel exists)
										invoked.SupplementaryUOM                 = CustomerOrderLineRel.SupplementaryUOM
										invoked.SupplementaryQuantity            = CustomerOrderLineRel.SupplementaryQuantity
										invoked.ICNCode                          = CustomerOrderLineRel.ICNCode
										invoked.GlobalLineType                   = CustomerOrderLineRel.GlobalLineType
									else
									if (WarehouseDemand.DemandSystemCode.Requisitions
									and RequisitionLineRel exists)
										invoked.GlobalLineType                   = RequisitionLineRel.GlobalLineType
										invoked.MSDSDate					     = ItemLocation.MSDSDate
									invoked.RequisitionInterfaceInformation.SurgerySystemSource               = RequisitionInterfaceInformation.SurgerySystemSource
									invoked.RequisitionInterfaceInformation.SurgerySystemRequisitionReference = RequisitionInterfaceInformation.SurgerySystemRequisitionReference
									invoked.PrintedQuantity                      = DerivedNotYetPrintedQuantity
									invoked.OperatorID 							 = actor
									invoked.UpdateDate 							 = current timestamp
									invoked.Description 						 = ItemDescription
									if (Item.CatchWeightCode.NotCatchWeight 
									and ItemLocationRel exists and HasItemLocationStockUOM
									and ItemLocation.ItemLocationStockUOM not= TransactionUOM)
										invoked.TransactionUOM 					 = DerivedLocationStockUOM
										invoked.TransactionUOMMultiplier 		 = DerivedLocationStockUOMMultiplier
									if (IsInventoriedOrNonStock)
										invoked.DetailRequired                   = DetailRequired
										if (Item.CatchWeightCode.NotCatchWeight)
											invoked.StockWeight 				 = (DerivedNotYetPrintedQuantity * ItemUOMRel.PackingWeight)
											invoked.StockVolume 				 = (DerivedNotYetPrintedQuantity * ItemUOMRel.PackingVolume)
										else
											if (not DetailRequired and Item.CatchWeightCode.ReceiptRequiresBoth)
												invoked.CatchWeightQuantity 	 = (DerivedNotYetPrintedQuantity * TransactionUOMMultiplier)
											invoked.StockWeight 				 = ((DerivedNotYetPrintedQuantity * ItemUOMRel.PackingWeight) * TransactionUOMMultiplier)
											invoked.StockVolume 				 = ((DerivedNotYetPrintedQuantity * ItemUOMRel.PackingVolume) * TransactionUOMMultiplier)
								
								LocalShipmentOutRecordType = LocalShipmentOutRecordType.ShipmentLine
								include CreateWarehouseShipmentOutFile
								
								include CreateShipmentLineDetail
								PrintedQuantity += SavedWarehouseShipmentLineView.PrintedQuantity

								if (RequisitionLineCommentRel exists)
									LocalShipmentOutRecordType = LocalShipmentOutRecordType.Comment
									include CreateWarehouseShipmentOutFile
							else
								invoke Create WarehouseShipmentLineComponent
									assign result to SavedWarehouseShipmentLineComponentView
									fill in fields from this instance
										except invoked.UnitCost
									invoked.WarehouseShipment 				 = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipmentLine 			 = SavedWarehouseShipmentLineView.WarehouseShipmentLine
									invoked.WarehouseShipmentLineComponent   = DocumentKitComponentForItemRel.DocumentKitComponent.ComponentSequence
									invoked.Item 							 = DocumentKitComponentForItemRel.Item
									invoked.Quantity 						 = (SavedWarehouseShipmentLineView.PrintedQuantity * DocumentKitComponentForItemRel.Quantity)
									if (WarehouseDemandLine.DetailRequired)
										invoked.DetailRequired 				 = true
								
								LocalKitComponentQuantity 					 = SavedWarehouseShipmentLineComponentView.Quantity
								
								LocalShipmentOutRecordType 					 = LocalShipmentOutRecordType.ShipmentLineComponent
								include CreateWarehouseShipmentOutFile	
								
								include CreateShipmentLineDetail

								if (LocalDetailQuantity entered)
									invoke FastUpdate SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
										invoked.DetailQuantity 				 = LocalDetailQuantity
										if (SavedWarehouseShipmentLineComponentView.DetailQuantity = SavedWarehouseShipmentLineComponentView.Quantity)
											invoked.DetailRequired 			 = false
								PrintedQuantity += SavedWarehouseShipmentLineComponentView.Quantity
							
							if (ReleasedRouteHeaderRel exists)
								invoke FastUpdate ReleasedRouteHeaderRel
									invoked.InUse = true

							invoke FastUpdate SavedWarehouseShipmentLineView.WarehouseShipmentLine
								invoked.KitComponentQuantity		 += LocalKitComponentQuantity
								invoked.DetailQuantity				 = LocalDetailQuantity
								invoked.DetailCatchWeightQuantity	 = LocalDetailCatchweightQuantity
								if ((SavedWarehouseShipmentLineView.DetailRequired
								or   SavedWarehouseShipmentLineView.DetailQuantity entered)
								and  SavedWarehouseShipmentLineView.DetailQuantity = SavedWarehouseShipmentLineView.PrintedQuantity
								and (SavedWarehouseShipmentLineView.DetailCatchWeightQuantity not entered 
								or   SavedWarehouseShipmentLineView.DetailCatchWeightQuantity = SavedWarehouseShipmentLineView.CatchWeightQuantity))
									invoked.WalkThruRequired = false	

							
							if (SavedPickListPrintReportView.WarehouseResult not entered)
								invoke Create WarehouseResult
									assign result to SavedPickListPrintReportView
									invoked.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
									invoked.ReportType							= WarehouseResult.ReportType.WarehousePickListPrintReport
									invoked.PrintTimeStamp						= current timestamp
									invoked.Status								= WarehouseResult.Status.Processing
									invoked.Company								= Company
									invoked.DemandSystemCode					= WarehouseDemand.DemandSystemCode
									invoked.DemandDocument						= WarehouseDemand.DemandDocument
									invoked.DemandCompany						= WarehouseDemand.DemandCompany
				
		SetError is an Instance Action
			restricted
			Parameters
 				PrmErrorMessage			is Alpha 150
 				PrmPickListResult		is a WarehouseResult
			Action Rules
				invoke FastUpdate
					invoked.ErrorMessage 	 = PrmErrorMessage
					invoked.PickListPrintRun = PrmPickListResult
		
		Create is a Create Action
			restricted
			Local Fields
				LocalIsFirstComponent					is Boolean
			Action Rules
				constraint (DemandRecordType.Demand)
					"InvalidDemandRecordType"

				if (LocalNotReadyForRelease)
    				Status = Status.Unreleased
    			else
    				Status = Status.ReleasedForProcessing
 
 				if (LocationToSubstituteRel exists)			
					invoke Delete LocationToSubstituteRel   
					   				
			Exit Rules
				if (KitType.MakeToOrderKit)
					LocalIsFirstComponent 	= true
					for each RequiredKitComponentsRel
						LocalItem					= each.ComponentItem			
						LocalKitComponentSequence	= each.KitComponent.ComponentSequence
						LocalComponentQuantity		= each.Quantity
						
						invoke Create DocumentKitComponent
							invoked.Company										= Company	
							invoked.DemandSystemCode							= WarehouseDemand.DemandSystemCode
							invoked.DocumentKitComponent.DocumentNumber			= WarehouseDemand.DemandDocument	
							invoked.DocumentKitComponent.LineNumber				= WarehouseDemandLine.LineNumber
							invoked.DocumentKitComponent.ComponentSequence		= LocalKitComponentSequence				
							invoked.Quantity									= LocalComponentQuantity
							invoked.Item										= LocalItem
							if (each.HasOptionalComponents)
								invoked.OptionCode								= DocumentKitComponent.OptionCode.ReviewRequired 
							else
								invoked.OptionCode								= DocumentKitComponent.OptionCode.OptionDoesNotExist
						
						if  (not FromWorkOrder and not each.HasOptionalComponents)
							invoke Create WarehouseDemandLine
								fill in fields from this instance
									except invoked.KitType
									except invoked.KitComplete
								invoked.WarehouseDemandLine.ComponentSequence	= LocalKitComponentSequence
								invoked.Item									= LocalItem
								invoked.Quantity								= LocalComponentQuantity * Quantity
								invoked.LocalComponentQuantity					= LocalComponentQuantity
								invoked.OnHold									= OnHold
					
						if (LocalIsFirstComponent
						or  LocalMinimumCompleteKit > WarehouseDemandComponentRel.DerivedCompleteComponent)
							LocalMinimumCompleteKit = WarehouseDemandComponentRel.DerivedCompleteComponent
						LocalIsFirstComponent = false
					
					include MainKitItemAllocation							
				else
					if  (PreferenceCardTransaction
					and (IsOnlineAllocation
					or   BasedOnPurchaseOrderReceipt))
						invoke Delete WarehouseDemandLineReservationRel
					
					if (LineType.Inventoried)
						invoke UpdateQuantities ItemLocationRel
							invoked.PrmBackorderedQuantity								= BackorderedQuantity
							if (WorkOrder.OriginalWorkOrder not entered)  
								invoked.PrmAllocatedQuantity							= AllocatedQuantity 
							if 	((FutureDemand or not IsOnlineAllocation)
							and   not WarehouseDemandLine.DemandDocumentType.IntransitReceiving
							and   not BasedOnPurchaseOrderReceipt)
								invoked.PrmUnallocatedQuantity							= Quantity
								
				include UpdateShipmentCompletion
				

		CreateSupply is a Create Action
			restricted
			bypass field rules
			Action Rules
				constraint (DemandRecordType.Supply)
					"InvalidDemandRecordType"
			Exit Rules
				if (WarehouseDemandLine.DemandDocumentType.WorkOrder)
					include ItemLocationUpdate
				else
				if (WarehouseDemandLine.DemandDocumentType.KitchenOrder)
					invoke UpdateQuantities ItemLocationRel
						invoked.PrmKitchenInProcessQuantity = Quantity
				else
                if (not WarehouseDemandLine.DemandDocumentType.IntransitReceiving)
                    invoke UpdateQuantities ItemLocationRel
                        invoked.PrmOnOrderQuantity = Quantity



		CreateReservation is a Create Action
			restricted
			Action Rules

			Exit Rules	
				invoke UpdateQuantities ItemLocationRel
					invoked.PrmReservedQuantity			= ReservedQuantity
					invoked.PrmUnreservedQuantity		= DerivedUnreservedQuantity

		UpdateReservation is an Instance Action
			restricted
			Parameters
				PrmReservedQuantity 			is like Quantity
				PrmCancelQuantity				is like Quantity
            Local Fields
                LocalOldUnreservedQuantity		is like Quantity
				LocalUnreservedDifference       is like Quantity
			Action Rules
				LocalOldUnreservedQuantity = DerivedUnreservedQuantity
				if (PrmCancelQuantity entered)
					Quantity 		-= PrmCancelQuantity
				ReservedQuantity 	+= PrmReservedQuantity
				LocalUnreservedDifference = LocalOldUnreservedQuantity - DerivedUnreservedQuantity

			Exit Rules
				invoke UpdateQuantities ItemLocation
					invoked.PrmReservedQuantity			= PrmReservedQuantity
					invoked.PrmUnreservedQuantity		= LocalUnreservedDifference * -1

		UpdateFromAllocation is an Update Action	
			default label is "Update"
			Action Rules
				constraint (Allocatable)
					"DemandIsNotReleasedForAllocation" 									

				if (HasItemLocationStockUOM
				and TransientOnline entered)
					AllocatedQuantity = ((TransAllocatedQuantity * DerivedLocationStockUOMMultiplier) + PrintedQuantity)
				else
					AllocatedQuantity = TransAllocatedQuantity + PrintedQuantity
							
				if (AllocatedQuantity changed)
					if (FromCustomerOrder)
						constraint (WarehouseDemand.Customer.ReceivableHoldCode not entered)
							"CustomerIsOnHold;CannotAllocate"
					
					if (AllocatedQuantity entered)
						constraint (not FutureDemand)
							"DemandIsFuture.UseBatchAllocationToAllocate"

				LocalUpdateFromAllocation				= true
					
			Exit Rules
				if (KitType.MakeToOrderKit)
					for each RequiredKitComponentsRel
						LocalItem					= each.ComponentItem
						LocalKitComponentSequence	= each.KitComponent.ComponentSequence
						invoke Update WarehouseDemandComponentRel
							invoked.Quantity									= each.Quantity * Quantity
				else			 
					if (LineType.Inventoried)
						include ItemLocationUpdate

		FastUpdate is an Update Action
			restricted
			bypass field rules
			Action Rules

		Update is an Update Action
			restricted
			Local Fields
				LocalIsFirstComponent					is Boolean
			Action Rules
				if (KitType.MakeToOrderKit)
					LocalIsFirstComponent = true
					for each RequiredKitComponentsRel
						LocalItem					= each.ComponentItem			
						LocalKitComponentSequence	= each.KitComponent.ComponentSequence
						LocalComponentQuantity		= each.Quantity
						
						invoke Update WarehouseDemandComponentRel
							invoked.Quantity									= LocalComponentQuantity * Quantity
							invoked.LocalComponentQuantity						= LocalComponentQuantity
							invoked.OnHold										= OnHold
						
						if (LocalIsFirstComponent
						or  LocalMinimumCompleteKit > WarehouseDemandComponentRel.DerivedCompleteComponent)
							LocalMinimumCompleteKit = WarehouseDemandComponentRel.DerivedCompleteComponent
						LocalIsFirstComponent = false
					
					include MainKitItemAllocation

			Exit Rules
				if (not KitType.MakeToOrderKit)
					if (LineType.Inventoried)
						include ItemLocationUpdate
				
				include UpdateShipmentCompletion

        EditDelete is an Instance Action
        	restricted
        	Action Rules
        		include DeleteRules	
								
        Delete is a Delete Action
        	restricted
        	Action Rules
        		include DeleteRules

			Exit Rules
				if (KitType.MakeToOrderKit)
					for each RequiredKitComponentsRel
						LocalItem					= each.ComponentItem
						LocalKitComponentSequence	= each.KitComponent.ComponentSequence
						invoke Delete WarehouseDemandComponentRel
				else
				if (LineType.Inventoried)
					invoke UpdateQuantities ItemLocationRel
						if (DemandRecordType.Demand)
							invoked.PrmBackorderedQuantity							= BackorderedQuantity * -1	
							if (initiating action != "WorkOrder.ReleasePickingFeedbackInProduction")
								invoked.PrmAllocatedQuantity						= AllocatedQuantity * -1
							if 	((FutureDemand or not IsOnlineAllocation)
							and   not WarehouseDemandLine.DemandDocumentType.IntransitReceiving)
								invoked.PrmUnallocatedQuantity  					= ((Quantity - (AllocatedQuantity + BackorderedQuantity)) * -1)
						else
							if (WarehouseDemandLine.DemandDocumentType.WorkOrder
								and WorkOrder.OriginalWorkOrder not entered)
								invoked.PrmWorkInProgressQuantity						= Quantity * -1
							else
							if (WarehouseDemandLine.DemandDocumentType.KitchenOrder)
								invoked.PrmKitchenInProcessQuantity						= Quantity * -1
							else
							if (FromPreferenceCard)
								invoked.PrmReservedQuantity								= ReservedQuantity * -1
								invoked.PrmUnreservedQuantity							= DerivedUnreservedQuantity * -1
							else
							if (not WarehouseDemandLine.DemandDocumentType.IntransitReceiving
								and WorkOrder.OriginalWorkOrder not entered)
								invoked.PrmOnOrderQuantity								= Quantity * -1  

							if (WorkOrder.OriginalWorkOrder entered)
								invoked.PrmAllocatedQuantity						= Quantity * -1

				if  (IsReservationType
				and (invoking action = "Create"
				or   invoking action = "AllocateFromBatch"))
					invoke FastUpdate ScheduledProcedureLineRel
						initialize invoked.ReservedQuantity
						invoked.Allocated = true
        
		UpdateFromInventoryTransaction is an Instance Action
			restricted
			Parameters
				PrmQuantity is an Quantity
		
			Action Rules
				Quantity = PrmQuantity		

		ReleaseCustomerOrder is an Instance Action
			restricted
			Action Rules 
				Allocatable = true							
				Status = Status.ReleasedForProcessing
		
		CancelAllDemand is an Instance Action
			valid when (IsAvailableToCancel)
			Action Rules
				invoke CancelDemand
					invoked.PrmCancelQuantity	= CancelableQuantity

#ifdef module integration
		WarehouseDemandCancelAlert is an Instance Action
			restricted
			Parameters
			Action Rules	
				invoke TriggerPulseAlert FSMBODConfigurationRel
					invoked.PrmActorGroup 	= "ORDERPROCESSINGMANAGER" 
					invoked.PrmMainXML 		= WarehouseDemandCancelPulseAlertXML	
					invoked.PrmDescription	= WarehouseDemandCancelAlertDescription
					invoked.PrmBODID		= DerivedWarehouseDemandCancelBODID
#endif
										
		CancelDemand is an Instance Action
			valid when (IsAvailableToCancel)
			Local Fields
				LocalCancelQuantity     is a Quantity
				LocalQuantity     		is a Quantity
			Parameters
				PrmCancelQuantity 		is a Quantity
				PrmCancelAllRemainingQuantity	is Boolean
				
			Parameter Rules
				PrmCancelQuantity
					if (PrmCancelAllRemainingQuantity)
						PrmCancelQuantity = DerivedOpenQuantity
						
					constraint (PrmCancelQuantity > 0)
						"QuantityToCancelShouldBeGreaterThanZero"

					constraint (PrmCancelQuantity <= CancelableQuantity)
						"QuantityToCancelCannotExceedCancelableQuantity"

			
			Action Rules
				LocalQuantity = PrmCancelQuantity
				LocalCancelQuantity						     = LocalQuantity * -1
				Quantity 									+= LocalCancelQuantity
				
				if (BackorderedQuantity entered)
					BackorderedQuantity						+= LocalCancelQuantity
					
				if (WarehouseDemandLine.DemandDocumentType.DirectTransfer
				or  WarehouseDemandLine.DemandDocumentType.TransferIssue)
					invoke UpdateFromWarehouse WarehouseDemandLineForSupplyRel
						invoked.PrmQuantity	= LocalCancelQuantity

					invoke Update RequestingItemLocationRel
						invoked.OnOrderQuantity				+= LocalCancelQuantity
				
				invoke Processed.UpdateKilledQuantity RequisitionLineRel
					invoked.PrmKilledQuantity				= LocalQuantity
				
				if (LineType.Inventoried)
					invoke UpdateQuantities ItemLocationRel
						if (DemandRecordType.Demand)
							if (old BackorderedQuantity entered)
								invoked.PrmBackorderedQuantity							= LocalCancelQuantity
							else
							if 	((FutureDemand or not IsOnlineAllocation)
							and   not WarehouseDemandLine.DemandDocumentType.IntransitReceiving
							and   old AllocatedQuantity not entered)
								invoked.PrmUnallocatedQuantity  						= LocalCancelQuantity
						else
							if (WarehouseDemandLine.DemandDocumentType.WorkOrder)
								invoked.PrmWorkInProgressQuantity						= LocalCancelQuantity
							else
							if (not WarehouseDemandLine.DemandDocumentType.IntransitReceiving)
								invoked.PrmOnOrderQuantity								= LocalCancelQuantity
								
				if (Company.FinanceEnterpriseGroup.BODTrigger and (  WarehouseDemandLine.DemandDocumentType.Issue or   WarehouseDemandLine.DemandDocumentType.DirectTransfer or  WarehouseDemandLine.DemandDocumentType.TransferIssue)) 
					trigger "WarehouseDemandCancelService" PA service
		            	resume on error
		                title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>"
		                Criteria
		                	Company.FinanceEnterpriseGroup
		                    Company
		                Variables
		                	Company
								variable name is Company	
							WarehouseDemand.DemandDocument
								variable name is DemandDocument
							CompanyAndLocation.RequestingCompany
								variable name is RequestingCompany
							CompanyAndLocation.RequestingLocation
								variable name is RequestingLocation
							InventoryLocation
								variable name is InventoryLocation
							WarehouseDemandLine.LineNumber
								variable name is LineNumber
							Item
								variable name is Item
							CancelledQuantity
								variable name is CancelledQuantity
#ifdef module integration
	       			if (FSMBODConfigurationRel.Enable)
          				if(FSMBODConfigurationDetailRel.Enable) 
			   				invoke WarehouseDemandCancelAlert
#endif
								
				if (Quantity not entered
				or 	Quantity = ShippedQuantity)
					invoke DeleteWithoutLocationUpdate							

		UpdateFromShipmentLine is an Instance Action
			restricted
			Parameters
				PrmInProcessQuantity					is a Quantity
				PrmVoidedQuantity						is a Quantity
				PrmBackorderedQuantity					is a Quantity
				PrmItemLocationAllocatedQuantity		is a Quantity
				PrmPrintedQuantity						is a Quantity
				
			Action Rules
				InProcessQuantity						+= PrmInProcessQuantity
				Quantity								-= PrmVoidedQuantity
				AllocatedQuantity						-= PrmVoidedQuantity + PrmBackorderedQuantity
				PrintedQuantity							+= PrmPrintedQuantity - (PrmVoidedQuantity + PrmBackorderedQuantity)
				BackorderedQuantity 					+= PrmBackorderedQuantity
				
			Exit Rules
				if (DemandRecordType.Demand)
					invoke UpdateQuantities ItemLocation
						invoked.PrmAllocatedQuantity 		= PrmItemLocationAllocatedQuantity
						invoked.PrmInProcessQuantity		= PrmInProcessQuantity
						invoked.PrmBackorderedQuantity		= PrmBackorderedQuantity
				else
					invoke UpdateQuantities ItemLocation
						invoked.PrmOnOrderQuantity 	       -= PrmVoidedQuantity

				if (CustomerOrderLineRel exists
				and PrmVoidedQuantity entered)
					invoke UpdateCancelQuantity CustomerOrderLineRel
						invoked.PrmCancelQuantity		= PrmVoidedQuantity					

		UpdateDemandQuantity is an Instance Action
			restricted
			Parameters
				PrmQuantity									is a Quantity
			Action Rules
				if (DemandRecordType.Demand)
					Quantity								+= PrmQuantity
					BackorderedQuantity						+= PrmQuantity
					include ItemLocationUpdate

			Exit Rules
				if (DemandRecordType.Supply)

					if ((Quantity + PrmQuantity) <= 0)
						invoke Delete
					else
						Quantity							+= PrmQuantity
						include ItemLocationUpdate
									
		UpdateFromWarehouse is an Instance Action
			restricted
			Parameters
				PrmBackorderedQuantity		is a Quantity
				PrmPrintedQuantity			is a Quantity
				PrmAllocatedQuantity		is a Quantity
				PrmQuantity					is a Quantity
				PrmShippedQuantity			is a Quantity
				PrmInProcessQuantity		is a Quantity
				PrmPreAssembledKitQuantity	is a Quantity
				
			Action Rules
				if (PrmPrintedQuantity entered)
					PrintedQuantity 	+= PrmPrintedQuantity
						
				if (PrmBackorderedQuantity entered)
					BackorderedQuantity += PrmBackorderedQuantity
					
				if (PrmShippedQuantity entered)
					ShippedQuantity		+= PrmShippedQuantity
						
				if (PrmQuantity entered)
					Quantity 			+= PrmQuantity
				
				if (PrmAllocatedQuantity entered)
					AllocatedQuantity   += PrmAllocatedQuantity
				
				if (PrmInProcessQuantity entered)
					InProcessQuantity   += PrmInProcessQuantity
				
				if (PrmPreAssembledKitQuantity entered)
					PreAssembledKitQuantity += PrmPreAssembledKitQuantity
				
					
			Exit Rules
				if (CustomerOrderLineRel exists
				and PrmShippedQuantity entered)
					invoke UpdateShippedQuantity CustomerOrderLineRel
						invoked.PrmShippedQuantity 	= PrmShippedQuantity	

				if (Quantity not entered
				or 	Quantity = ShippedQuantity)
					invoke DeleteWithoutLocationUpdate

		DeleteWithoutLocationUpdate is a Delete Action
			restricted		
					 
		UpdateWarehouseDemandLine is an Instance Action
			restricted
			Parameters
				PrmPrintedQuantity	 is a Quantity
				PrmInProcessQuantity is a Quantity
				
			Action Rules
				if (PrmPrintedQuantity entered)
					PrintedQuantity   += PrmPrintedQuantity
				if (PrmInProcessQuantity entered)
					InProcessQuantity += PrmInProcessQuantity
		
		UpdateFromWorkOrderItem is an Instance Action
			restricted
			Parameters
				PrmPrintedQuantity	is a Quantity
				
			Action Rules
				if (PrmPrintedQuantity entered)
					PrintedQuantity = PrmPrintedQuantity
		
		UpdateFromPurchaseOrder is an Instance Action
			restricted
			Parameters
				PrmQuantity 			is a Quantity
				PrmAllocatedQuantity 	is a Quantity
				PrmBackorderedQuantity 	is a Quantity
			
			Action Rules
				if (PrmQuantity entered)
					Quantity 			= PrmQuantity
				if (PrmAllocatedQuantity entered)				
					AllocatedQuantity 	= PrmAllocatedQuantity
				if (PrmBackorderedQuantity entered)
					BackorderedQuantity = PrmBackorderedQuantity
			
		UpdateFromWarehouseDemand is an Instance Action
			restricted
			Parameters
				PrmQuantity 		 	is an Quantity
				PrmAllocatedQuantity 	is an Quantity
				PrmBackorderedQuantity 	is an Quantity
			Action Rules
				Quantity 				= PrmQuantity	
				AllocatedQuantity   	= PrmAllocatedQuantity
				BackorderedQuantity		= PrmBackorderedQuantity		

		Purge is a Purge Action
			restricted
			bypass relational integrity rules
			Entrance Rules
				invoke Purge PurgeWarehouseDemandLineDetailRel
			
		AllocateFromBatch is an Instance Action 
			restricted
			Action Rules
					invoke ReserveBeforeAllocate ScheduledProcedureLineRel
						invoked.PrmDemandQuantity = Quantity
					AllocatedQuantity = DerivedAllocatedWithReservedQuantity
					BackorderedQuantity = Quantity - AllocatedQuantity
					invoke Delete WarehouseDemandLineReservationRel
					include ItemLocationUpdate
					if (FillOrKill.KillBackorders)
						if (BackorderedQuantity entered)
							if (WarehouseDemandLine.DemandDocumentType.DirectTransfer
							or  WarehouseDemandLine.DemandDocumentType.TransferIssue)
								invoke UpdateFromWarehouse WarehouseDemandLineForSupplyRel
									invoked.PrmQuantity		= BackorderedQuantity * -1

								invoke Update RequestingItemLocationRel
									invoked.OnOrderQuantity	+= BackorderedQuantity * -1

							invoke Processed.UpdateKilledQuantity RequisitionLineRel
								invoked.PrmKilledQuantity	= BackorderedQuantity
							if ((Quantity - BackorderedQuantity) = ShippedQuantity)
								invoke Delete
							else
								Quantity -= BackorderedQuantity
								invoke UpdateQuantities ItemLocationRel
									invoked.PrmBackorderedQuantity	= BackorderedQuantity * -1
								initialize BackorderedQuantity
				
		WarehousePickListPrintPivotAction is a Set Action
			restricted
			default label is "WarehousePickListPrint"
			Parameters
				PrmCompany              	 is an InventoryCompany
				PrmLocation             	 is an InventoryLocation
				PrmWarehouseWave			 is a WarehouseWave
					default label is "Wave"
				PrmExpectedShipDate          is Date
				PrmDocumentSource      		 is AlphaUpper size 2
					States
						CustomerOrder value is "OE"
						Requisitions   value is "RQ"
				PrmSelectOption            is Numeric size 1
					default label is "SelectOption"
					States
						ByShipmentDocumentLine                 value is 1
							default label is "By Shipment-Document Line"
						ByShipmentBinLotSerial                 value is 2
							default label is "By Shipment-Bin/Lot/Serial"
						ByShipmentBinLotSerialRequisitionBased value is 3
							default label is "By Shipment-Bin/Lot/Serial (Requisition based)"
						ByBinItemUomLotSerial                  value is 4
							default label is "By Bin-Item/UOM/Lot/Serial"
				PrmBinAllocationPurpose     is AlphaUpper size 1
					States
						SpeedPicking        value is "S"
						ConsolidatedPicking value is "C"
				PrmAllocateDetail           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmPreferOption            	is AlphaUpper size 1
					States
						YesPreferredBin   value is "Y"
							default label is "Yes (Preferred Bin)"
						NoNonPreferredBin value is "N"
							default label is "No (Non-preferred Bin)"
				PrmIncludeCost				is AlphaUpper size 1
					States
						DoNotPrintAnyCost        value is "N"
							default label is "Do not print any Cost"
						PrintCostAndExtendedCost value is "Y"
							default label is "Print Cost and Extended Cost"
				PrmIncludeBackorders       	is AlphaUpper size 1
					States
						DoNotPrintBackorders value is "N"
							default label is "Do not print Backorders"
						IncludeBackorders    value is "Y"
				PrmPrintDeliveryData       	is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIncludeKillDetails      	is AlphaUpper size 1
					States
						Yes     value is "Y"
						No      value is "N"
						Partial value is "P"
				PrmAlignForm                is Numeric size 2
				PrmReprintShipmentNumber    is a WarehouseShipment
				PrmReprintBatchNumber       is a WarehouseBatch
				PrmCreateFlatFile           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmFlatFileName				is AlphaUpper size 30
				PrmDocumentNumber           is a WH130DocNbrArray
				PrmRequestingLocation       is a RequestingLocation
				PrmReqLocationGroup			is a RequestingReportGroup 
				PrmCustomer					is a Customer
				PrmCompanyCustomer			is a CompanyCustomer
				PrmItem              		is a Item                        
				PrmProcessType              is a WarehouseProcessType
				PrmFromAllocPriority        is Numeric size 2
				PrmToAllocPriority          is Numeric size 2
				PrmShipTo                   is a CustomerShipTo
				PrmCarrier                  is a Vendor
				PrmRoute                 is a PickShipRoute
				PrmAllRoute                 is AlphaUpper size 1
					States
						None          value is "N"
						AllRoutes     value is "A"
						SpecificRoute value is "S"
				PrmSkipInsufBinDetails      is AlphaUpper size 1   
					States
						Yes value is "Y"
						No  value is "N"
				PrmPrintRequester			is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIDMPrinter  				is a IDMPrinter 
					default label is "IDMPrinter" 
				PrmConsolidateFile	        is Boolean
					default label is "Consolidate Documents in a Single File"
				PrmUseZonePick				is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"

			Parameter Rules
				PrmCompany
					required
						"Field_CompanyIsRequired"

				PrmLocation
					required
						"Field_LocationIsRequired"

				PrmSelectOption
					initial value is 1
					default to 1
					
					if (not PrmSelectOption.ByShipmentBinLotSerialRequisitionBased)
						constraint (PrmPrintDeliveryData.No)
							"MustChoosePrintOption\"\By_Shipment-\Bin/\Lot/\Serial_(\Requisition\Based)\"ToPrintDeliveryData"
					
				PrmAllocateDetail
					initial value is "Y"
					default to "Y"
					
					if (PrmBinAllocationPurpose entered)
						constraint (PrmAllocateDetail.Yes)
							"AllocateDetailsWithAllocationPurposeSelection."
					
					if (PrmSelectOption.ByShipmentBinLotSerial 
					or PrmSelectOption.ByBinItemUomLotSerial)
						constraint (PrmAllocateDetail.Yes)     
							"Allocate_DetailsMustBe_YesWhen_Print_OptionSelectedIs\"\<PrmSelectOption>\""
							
				PrmPreferOption
					if (PrmPreferOption.YesPreferredBin)
						constraint (PrmAllocateDetail.Yes)
							"CannotUseForcedPreferredBinWithoutAllocateDetails=_Yes"
				
				PrmIncludeCost
					initial value is "N"
					default to "N"
					if (not PrmSelectOption.ByShipmentBinLotSerialRequisitionBased)
						constraint (PrmIncludeCost.DoNotPrintAnyCost)
							"Include_CostOptionOnlyAvailableWithPrintOption\"\By_Shipment-\Bin/\Lot/\Serial_(\Requisition\Based)\""
					
				PrmIncludeBackorders
					initial value is "N"
					default to "N"

				PrmPrintDeliveryData
					initial value is "N"
					default to "N"

				PrmIncludeKillDetails
					initial value is "N"
					default to "N"

				PrmCreateFlatFile
					initial value is "N"
					default to "N"
					if (PrmReprintBatchNumber entered 
					or PrmReprintShipmentNumber entered)
						constraint (PrmCreateFlatFile.No)
							"CannotCreateFlatFileWhenUsingReprintOption."

				PrmAllRoute
					initial value is "N"
					default to "N"
					
					if (PrmRoute.DayOfWeek entered)
						LocalCompany = PrmCompany
						constraint (BillingCompanyRel.RouteAndStop)
							"Company<LocalCompany>IsNotSetupForRouteProcessing."	
						constraint (not PrmAllRoute.None)
							"CannotSelect\"\None\"\WhenProcessingForASpecificRoute."
						constraint (not PrmAllRoute.AllRoutes)
							"CannotSpecifyRouteNumberWhen_(\A)\llIsSelected"

				PrmSkipInsufBinDetails
					initial value is "N"
					default to "N"
					if (PrmSkipInsufBinDetails.Yes)
						constraint (PrmAllocateDetail.Yes)
							"Skip_Insufficient_Bin_DetailsOnlyValidWith_Allocate_Details_=_Yes"

				PrmPrintRequester
					initial value is "N"    
					default to "N"

				PrmIDMPrinter
					initial value is PrmCompany.UserDefaultPrinter
				
				PrmReprintBatchNumber
					LocalCompany 				= PrmCompany
					LocalLocation 				= PrmLocation
					LocalWarehouseBatch 		= PrmReprintBatchNumber
					
					if (PrmReprintBatchNumber entered
					and PrmReprintShipmentNumber not entered)
						constraint (WarehouseShipmentsForBatchRel exists)
							"NoShipmentsFoundForBatch."
					else
					if (PrmReprintShipmentNumber entered)
						required
							"EnterBatchAndShipmentNumberForShipmentReprint."
				
				PrmReprintShipmentNumber
					LocalCompany 				= PrmCompany
					LocalLocation 				= PrmLocation
					LocalWarehouseBatch 		= PrmReprintBatchNumber
					LocalShipmentNumber  		= PrmReprintShipmentNumber

					if (PrmReprintBatchNumber entered
					and PrmReprintShipmentNumber entered)
						constraint (WarehouseShipmentsForBatchAndShipmentRel exists)
							"ShipmentNotFoundInBatch."

				PrmFromAllocPriority
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_From_Allocation_PriorityAnd_Wave"

					if (PrmToAllocPriority entered)
						required
							"Priority_FromRequiredWithPriority_ToEntry."	
				
				PrmToAllocPriority
					if (PrmReprintShipmentNumber entered
					or  PrmReprintBatchNumber entered)
						constraint (PrmFromAllocPriority not entered and PrmToAllocPriority not entered)
							"CannotUsePriorityAllocationWithSpecificDocuments."
					
					if (PrmFromAllocPriority entered)
						required
							"Priority_ToRequiredWithPriority_FromEntry."

					constraint (PrmFromAllocPriority < PrmToAllocPriority)
						"Priority_FromCannotBeGreaterThanPriority_To."
					
					if (PrmDocumentNumber.DocNbr[1]   entered
					or  PrmDocumentNumber.DocNbr[2]   entered
					or  PrmDocumentNumber.DocNbr[3]   entered
					or  PrmDocumentNumber.DocNbr[4]   entered
					or  PrmDocumentNumber.DocNbr[5]   entered
					or  PrmDocumentNumber.DocNbr[6]   entered
					or  PrmDocumentNumber.DocNbr[7]   entered
					or  PrmDocumentNumber.DocNbr[8]   entered
					or  PrmDocumentNumber.DocNbr[9]   entered
					or  PrmDocumentNumber.DocNbr[10]  entered
					or  PrmDocumentNumber.DocNbr[11]  entered
					or  PrmDocumentNumber.DocNbr[12]  entered)
						cannot be entered
							"CannotUsePriorityAllocationWithSpecificDocuments."
				
				PrmCustomer
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_CustomerAnd_Wave"

					if (PrmShipTo entered or PrmCustomer entered)
						constraint (PrmDocumentSource.CustomerOrder)
							"CustomerOnlyValidWithSourceDocumentEqualTo_O\E."
				
				PrmProcessType
					if (not PrmAllRoute.None)
						cannot be entered
							"CannotSelectProcessTypeWhenRouteProcessing."
				
				PrmCarrier
					if (PrmDocumentSource.Requisitions)
						cannot be entered
							"CarrierOnlyValidWithSourceDocumentEqualTo_O\E"

					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_CarrierAnd_Wave"
				
				PrmDocumentSource
					if (PrmDocumentNumber.DocNbr[1]   entered
					or  PrmDocumentNumber.DocNbr[2]   entered
					or  PrmDocumentNumber.DocNbr[3]   entered
					or  PrmDocumentNumber.DocNbr[4]   entered
					or  PrmDocumentNumber.DocNbr[5]   entered
					or  PrmDocumentNumber.DocNbr[6]   entered
					or  PrmDocumentNumber.DocNbr[7]   entered
					or  PrmDocumentNumber.DocNbr[8]   entered
					or  PrmDocumentNumber.DocNbr[9]   entered
					or  PrmDocumentNumber.DocNbr[10]  entered
					or  PrmDocumentNumber.DocNbr[11]  entered
					or  PrmDocumentNumber.DocNbr[12]  entered)
						required
							"DocumentSourceRequiredWithSourceDocument(s)"
					
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_Document_SourceAnd_Wave"
				
				PrmDocumentNumber
					if (PrmRoute.DayOfWeek entered or not PrmAllRoute.None)
						cannot be entered
							"CannotUseSpecificSourceDocument(s)WhenRouteProcessing."
				
				PrmFlatFileName
					if (PrmCreateFlatFile.No)
						cannot be entered
							"Flat_File_NameNotNeededWith\"\N\"Option"
				
				PrmItem
					LocalItemGroup = PrmCompany.ItemGroup
					LocalCompany   = PrmCompany
					LocalLocation  = PrmLocation
					LocalItem      = PrmItem
					constraint (PicklistItemRel exists)
						"ItemDoesNotExist."
					constraint (PickListItemLocationsRel exists)
						"ItemDoesNotExistAtLocation."

				PrmRequestingLocation
					if (PrmReqLocationGroup entered and PrmRequestingLocation entered)
						cannot be entered
							"CannotEnterBoth_Requesting_LocationAnd_Requesting_Location_Group."

					if (PrmWarehouseWave entered and PrmRequestingLocation entered)
						cannot be entered
							"CannotEnterBoth_Requesting_LocationAnd_Wave"

					if (PrmDocumentSource.CustomerOrder)
						cannot be entered
							"Requesting_LocationOnlyValidWith_R\QSourceDocument."

				PrmReqLocationGroup
					if (PrmWarehouseWave entered)
						cannot be entered
							"CannotEnterBoth_Requesting_Location_GroupAnd_Wave"

				PrmUseZonePick
					initial value is "N"
					default to "N"

			Action Rules
				Set Rules
					Entrance Rules
						if (PrmUseZonePick.No)
							invoke WarehousePickListPrint
								invoked.PrmCompany					= PrmCompany
								invoked.PrmLocation             	= PrmLocation
								invoked.PrmWarehouseWave			= PrmWarehouseWave
								invoked.PrmExpectedShipDate         = PrmExpectedShipDate
								invoked.PrmDocumentSource      		= PrmDocumentSource
								invoked.PrmSelectOption            	= PrmSelectOption
								invoked.PrmBinAllocationPurpose     = PrmBinAllocationPurpose
								invoked.PrmAllocateDetail           = PrmAllocateDetail
								invoked.PrmPreferOption            	= PrmPreferOption
								invoked.PrmIncludeCost				= PrmIncludeCost
								invoked.PrmIncludeBackorders       	= PrmIncludeBackorders
								invoked.PrmPrintDeliveryData       	= PrmPrintDeliveryData
								invoked.PrmIncludeKillDetails      	= PrmIncludeKillDetails
								invoked.PrmAlignForm                = PrmAlignForm
								invoked.PrmReprintShipmentNumber    = PrmReprintShipmentNumber
								invoked.PrmReprintBatchNumber       = PrmReprintBatchNumber
								invoked.PrmCreateFlatFile           = PrmCreateFlatFile
								invoked.PrmFlatFileName				= PrmFlatFileName
								invoked.PrmDocumentNumber           = PrmDocumentNumber
								invoked.PrmRequestingLocation       = PrmRequestingLocation
								invoked.PrmReqLocationGroup			= PrmReqLocationGroup
								invoked.PrmCustomer					= PrmCustomer
								invoked.PrmCompanyCustomer			= PrmCompanyCustomer
								invoked.PrmItem              		= PrmItem                        
								invoked.PrmProcessType              = PrmProcessType
								invoked.PrmFromAllocPriority        = PrmFromAllocPriority
								invoked.PrmToAllocPriority          = PrmToAllocPriority
								invoked.PrmShipTo                   = PrmShipTo
								invoked.PrmCarrier                  = PrmCarrier
								invoked.PrmRoute                 	= PrmRoute
								invoked.PrmAllRoute                 = PrmAllRoute
								invoked.PrmSkipInsufBinDetails      = PrmSkipInsufBinDetails   
								invoked.PrmPrintRequester			= PrmPrintRequester
								invoked.PrmIDMPrinter  				= PrmIDMPrinter
								invoked.PrmConsolidateFile	        = PrmConsolidateFile
								invoked.PrmUseZonePick				= PrmUseZonePick
						else
							invoke DistributionManagementWarehousePickListPrint
								invoked.PrmCompany					= PrmCompany
								invoked.PrmLocation             	= PrmLocation
								invoked.PrmWarehouseWave			= PrmWarehouseWave
								invoked.PrmExpectedShipDate         = PrmExpectedShipDate
								invoked.PrmDocumentSource      		= PrmDocumentSource
								invoked.PrmSelectOption            	= PrmSelectOption
								invoked.PrmBinAllocationPurpose     = PrmBinAllocationPurpose
								invoked.PrmAllocateDetail           = PrmAllocateDetail
								invoked.PrmPreferOption            	= PrmPreferOption
								invoked.PrmIncludeCost				= PrmIncludeCost
								invoked.PrmIncludeBackorders       	= PrmIncludeBackorders
								invoked.PrmPrintDeliveryData       	= PrmPrintDeliveryData
								invoked.PrmIncludeKillDetails      	= PrmIncludeKillDetails
								invoked.PrmAlignForm                = PrmAlignForm
								invoked.PrmReprintShipmentNumber    = PrmReprintShipmentNumber
								invoked.PrmReprintBatchNumber       = PrmReprintBatchNumber
								invoked.PrmCreateFlatFile           = PrmCreateFlatFile
								invoked.PrmFlatFileName				= PrmFlatFileName
								invoked.PrmDocumentNumber           = PrmDocumentNumber
								invoked.PrmRequestingLocation       = PrmRequestingLocation
								invoked.PrmReqLocationGroup			= PrmReqLocationGroup
								invoked.PrmCustomer					= PrmCustomer
								invoked.PrmCompanyCustomer			= PrmCompanyCustomer
								invoked.PrmItem              		= PrmItem                        
								invoked.PrmProcessType              = PrmProcessType
								invoked.PrmFromAllocPriority        = PrmFromAllocPriority
								invoked.PrmToAllocPriority          = PrmToAllocPriority
								invoked.PrmShipTo                   = PrmShipTo
								invoked.PrmCarrier                  = PrmCarrier
								invoked.PrmRoute                 	= PrmRoute
								invoked.PrmAllRoute                 = PrmAllRoute
								invoked.PrmSkipInsufBinDetails      = PrmSkipInsufBinDetails   
								invoked.PrmPrintRequester			= PrmPrintRequester
								invoked.PrmIDMPrinter  				= PrmIDMPrinter
								invoked.PrmConsolidateFile	        = PrmConsolidateFile
								invoked.PrmUseZonePick				= PrmUseZonePick

		DistributionManagementWarehousePickListPrint is a Set Action
			restricted
			Parameters
				PrmCompany              	 is an InventoryCompany
				PrmLocation             	 is an InventoryLocation
				PrmWarehouseWave			 is a WarehouseWave
					default label is "Wave"
				PrmExpectedShipDate          is Date
				PrmDocumentSource      		 is AlphaUpper size 2
					States
						CustomerOrder value is "OE"
						Requisitions   value is "RQ"
				PrmSelectOption            is Numeric size 1
					default label is "SelectOption"
					States
						ByShipmentDocumentLine                 value is 1
							default label is "By Shipment-Document Line"
						ByShipmentBinLotSerial                 value is 2
							default label is "By Shipment-Bin/Lot/Serial"
						ByShipmentBinLotSerialRequisitionBased value is 3
							default label is "By Shipment-Bin/Lot/Serial (Requisition based)"
						ByBinItemUomLotSerial                  value is 4
							default label is "By Bin-Item/UOM/Lot/Serial"
				PrmBinAllocationPurpose     is AlphaUpper size 1
					States
						SpeedPicking        value is "S"
						ConsolidatedPicking value is "C"
				PrmAllocateDetail           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmPreferOption            	is AlphaUpper size 1
					States
						YesPreferredBin   value is "Y"
							default label is "Yes (Preferred Bin)"
						NoNonPreferredBin value is "N"
							default label is "No (Non-preferred Bin)"
				PrmIncludeCost				is AlphaUpper size 1
					States
						DoNotPrintAnyCost        value is "N"
							default label is "Do not print any Cost"
						PrintCostAndExtendedCost value is "Y"
							default label is "Print Cost and Extended Cost"
				PrmIncludeBackorders       	is AlphaUpper size 1
					States
						DoNotPrintBackorders value is "N"
							default label is "Do not print Backorders"
						IncludeBackorders    value is "Y"
				PrmPrintDeliveryData       	is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIncludeKillDetails      	is AlphaUpper size 1
					States
						Yes     value is "Y"
						No      value is "N"
						Partial value is "P"
				PrmAlignForm                is Numeric size 2
				PrmReprintShipmentNumber    is a WarehouseShipment
				PrmReprintBatchNumber       is a WarehouseBatch
				PrmCreateFlatFile           is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmFlatFileName				is AlphaUpper size 30
				PrmDocumentNumber           is a WH130DocNbrArray
				PrmRequestingLocation       is a RequestingLocation
				PrmReqLocationGroup			is a RequestingReportGroup 
				PrmCustomer					is a Customer
				PrmCompanyCustomer			is a CompanyCustomer
				PrmItem              		is a Item                        
				PrmProcessType              is a WarehouseProcessType
				PrmFromAllocPriority        is Numeric size 2
				PrmToAllocPriority          is Numeric size 2
				PrmShipTo                   is a CustomerShipTo
				PrmCarrier                  is a Vendor
				PrmRoute                 is a PickShipRoute
				PrmAllRoute                 is AlphaUpper size 1
					States
						None          value is "N"
						AllRoutes     value is "A"
						SpecificRoute value is "S"
				PrmSkipInsufBinDetails      is AlphaUpper size 1   
					States
						Yes value is "Y"
						No  value is "N"
				PrmPrintRequester			is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				PrmIDMPrinter  				is a IDMPrinter 
					default label is "IDMPrinter" 
				PrmConsolidateFile	        is Boolean
					default label is "Consolidate Documents in a Single File"
				PrmUseZonePick				is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"

			Sort Order
				Company
				InventoryLocation
				WarehouseZone
				WarehouseDemand
				WarehouseDemandLine

			Local Fields
				LocalActor					 			is an Actor
				LocalHasError							is Boolean
				LocalErrorCounter						is Numeric 9
				SavedPickListPrintResultErrorView  		is a WarehouseResult view
				SavedPickListPrintReportView 	 		is a WarehouseResult view
				LocalHasEnteredDocument					is Boolean
				SavedWarehouseShipmentOutputFile		is a WarehouseShipmentOutputFile view
				SavedWarehouseShipmentView				is a WarehouseShipment view
				SavedWarehouseShipmentLineView			is a WarehouseShipmentLine view
				SavedWarehouseBatchView					is a WarehouseBatch view
				SavedWarehouseShipmentLineDetailView	is a WarehouseShipmentLineDetail view
				SavedWarehouseShipmentLineComponentView is a WarehouseShipmentLineComponent view
				LocalLastBatchNumber					is Numeric size 12
				LocalFlatFileName						is AlphaUpper size up to 60
				LocalReprint							is Boolean
				LocalSetZone							is a WarehouseZone

			Instance Selection
				where  (Company			 	= PrmCompany
				and	    InventoryLocation	= PrmLocation 
				and	  ((PrmDocumentSource not entered
				and   ((WarehouseDemand.DemandSystemCode.CustomerOrder
				and     PrmWarehouseWave not entered)
				or      WarehouseDemand.DemandSystemCode.Requisitions)
				or    ((WarehouseDemand.DemandSystemCode = PrmDocumentSource)
				and  (((PrmDocumentNumber.DocNbr[1]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[1])
				or	   (PrmDocumentNumber.DocNbr[2]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[2])
				or	   (PrmDocumentNumber.DocNbr[3]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[3])
				or	   (PrmDocumentNumber.DocNbr[4]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[4])
				or	   (PrmDocumentNumber.DocNbr[5]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[5])
				or	   (PrmDocumentNumber.DocNbr[6]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[6])
				or	   (PrmDocumentNumber.DocNbr[7]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[7])
				or     (PrmDocumentNumber.DocNbr[8]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[8])
				or     (PrmDocumentNumber.DocNbr[9]  entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[9])
				or     (PrmDocumentNumber.DocNbr[10] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[10])
				or     (PrmDocumentNumber.DocNbr[11] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[11])
				or     (PrmDocumentNumber.DocNbr[12] entered and DocumentNumberNumeric = PrmDocumentNumber.DocNbr[12]))
				or     (PrmDocumentNumber.DocNbr[1]   not entered
				and  	PrmDocumentNumber.DocNbr[2]   not entered
				and  	PrmDocumentNumber.DocNbr[3]   not entered
				and  	PrmDocumentNumber.DocNbr[4]   not entered
				and  	PrmDocumentNumber.DocNbr[5]   not entered
				and  	PrmDocumentNumber.DocNbr[6]   not entered
				and  	PrmDocumentNumber.DocNbr[7]   not entered
				and  	PrmDocumentNumber.DocNbr[8]   not entered
				and  	PrmDocumentNumber.DocNbr[9]   not entered
				and  	PrmDocumentNumber.DocNbr[10]  not entered
				and  	PrmDocumentNumber.DocNbr[11]  not entered
				and  	PrmDocumentNumber.DocNbr[12]  not entered))))
				and    (PrmCustomer not entered or WarehouseDemand.Customer = PrmCustomer)
				and    (PrmShipTo not entered or (CustomerShipTo = PrmShipTo and PrmCustomer entered))
				and    (PrmCarrier not entered or Carrier = PrmCarrier)
				and    (PrmItem not entered or Item = PrmItem)    
				and    (PrmRequestingLocation not entered or CompanyAndLocation.RequestingLocation = PrmRequestingLocation)
				and  (((PrmWarehouseWave entered and PrmWarehouseWave.FromPriority not entered and PrmWarehouseWave.ToPriority not entered)
				or     (PrmWarehouseWave entered and AllocationPriority >= PrmWarehouseWave.FromPriority and AllocationPriority <= PrmWarehouseWave.ToPriority))
                or    ((PrmWarehouseWave not entered and PrmFromAllocPriority not entered and PrmToAllocPriority not entered)
				or     (PrmWarehouseWave not entered and AllocationPriority >= PrmFromAllocPriority and AllocationPriority <= PrmToAllocPriority)))
				and   ((PrmAllRoute not entered or PrmAllRoute.None) 
				or     ((WarehouseDemandLine.RouteHeader.Route entered and WarehouseDemandLine.RouteStop entered)
				and    (PrmAllRoute.AllRoutes or (PrmAllRoute.SpecificRoute and PrmRoute.DayOfWeek = WarehouseDemandLine.RouteHeader.Route))
				and    (RouteExists or (ReleasedRouteHeaderRel exists and RouteHeader.Date <= PrmExpectedShipDate))))
				and	   (PrmWarehouseWave not entered
				or     (PrmWarehouseWave entered
				and    (PrmWarehouseWave.Sterile not entered or	DerivedSterileItem = PrmWarehouseWave.Sterile)
				and    (PrmWarehouseWave.SingleUse not entered or DerivedSingleUseItem = PrmWarehouseWave.SingleUse)
				and    (PrmWarehouseWave.Reusable not entered or DerivedReusableItem = PrmWarehouseWave.Reusable)
				and    (PrmWarehouseWave.Implantable not entered or	DerivedImplantableItem = PrmWarehouseWave.Implantable)
				and    (PrmWarehouseWave.ContainsHumanTissue not entered or DerivedContainsHumanTissueItem = PrmWarehouseWave.ContainsHumanTissue)
				and    (PrmWarehouseWave.Pharmaceutical not entered or DerivedPharmaceuticalItem = PrmWarehouseWave.Pharmaceutical)
				and    (PrmWarehouseWave.Dressing not entered or DerivedDressingItem = PrmWarehouseWave.Dressing)
				and    (PrmWarehouseWave.PersonalProtectiveEquipment not entered or DerivedPersonalProtectiveEquipmentItem = PrmWarehouseWave.PersonalProtectiveEquipment)
				and    (PrmWarehouseWave.CriticalItem not entered or DerivedCriticalItem = PrmWarehouseWave.CriticalItem)
				and    (PrmWarehouseWave.Narcotic not entered or DerivedNarcoticItem = PrmWarehouseWave.Narcotic)
				and    (PrmWarehouseWave.Instrument not entered or DerivedInstrumentItem = PrmWarehouseWave.Instrument)
				and    (PrmWarehouseWave.Drugs not entered or DerivedDrugsItem = PrmWarehouseWave.Drugs)
				and    (PrmWarehouseWave.Analytics not entered or DerivedAnalyticsItem = PrmWarehouseWave.Analytics)
				and    (PrmWarehouseWave.Reprocessed not entered or	DerivedReprocessed = PrmWarehouseWave.Reprocessed)
				and    (PrmWarehouseWave.MajorPPEClass not entered or DerivedMajorPPEClass = PrmWarehouseWave.MajorPPEClass)
				and    (PrmWarehouseWave.MinorPPEClass not entered or DerivedMinorPPEClass = PrmWarehouseWave.MinorPPEClass)
				and    (PrmWarehouseWave.InventoryClass.MajorInventoryClass not entered or DerivedMajorPurchasingClass = PrmWarehouseWave.InventoryClass.MajorInventoryClass)
				and    (PrmWarehouseWave.InventoryClass.MinorInventoryClass not entered or DerivedMinorPurchasingClass = PrmWarehouseWave.InventoryClass.MinorInventoryClass)
				and    (PrmWarehouseWave.SpecialHandlingCode not entered or DerivedSpecialHandlingCode = PrmWarehouseWave.SpecialHandlingCode)
				and    (PrmWarehouseWave.RequestingCompanyAndLocation.RequestingCompany not entered
				or     (CompanyAndLocation.RequestingCompany    = PrmWarehouseWave.RequestingCompanyAndLocation.RequestingCompany
				and     CompanyAndLocation.RequestingLocation   = PrmWarehouseWave.RequestingCompanyAndLocation.RequestingLocation))
				and    (PrmWarehouseWave.Requester not entered
				or      DerivedRequester                        = PrmWarehouseWave.Requester)))))

			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoWarehouseDemandRecordsFound"
						priority is high
						detail is "NoDataToProcess"
					invoke FastUpdate PrmLocation
						initialize invoked.ProcessStatus 
				Set Rules
					Entrance Rules
						if (PrmFlatFileName entered)
							LocalFlatFileName 				  = PrmFlatFileName
						else
							LocalFlatFileName 				  = PrmCompany + "|" + PrmLocation

						if (PrmReprintBatchNumber entered)
							LocalReprint = true
						else
							invoke FastUpdate PrmLocation
								invoked.ProcessStatus = 2 
						
						if (PrmDocumentNumber.DocNbr[1]  entered
						or  PrmDocumentNumber.DocNbr[2]  entered
						or  PrmDocumentNumber.DocNbr[3]  entered
						or  PrmDocumentNumber.DocNbr[4]  entered
						or  PrmDocumentNumber.DocNbr[5]  entered
						or  PrmDocumentNumber.DocNbr[6]  entered
						or  PrmDocumentNumber.DocNbr[7]  entered
						or  PrmDocumentNumber.DocNbr[8]  entered
						or  PrmDocumentNumber.DocNbr[9]  entered
						or  PrmDocumentNumber.DocNbr[10] entered
						or  PrmDocumentNumber.DocNbr[11] entered
						or  PrmDocumentNumber.DocNbr[12] entered)
							LocalHasEnteredDocument = true

					Exit Rules
						if (SavedPickListPrintResultErrorView.WarehouseResult entered)
							LocalReportFinanceEnterpriseGroup	= PrmCompany.FinanceEnterpriseGroup
							LocalWarehouseResult	= SavedPickListPrintResultErrorView.WarehouseResult
							if (WarehouseResultErrorRel exists)
								invoke SendPickListErrorNotification last WarehouseResultErrorRel.WarehouseResult in background
									invoked.PrmRecordsWithError = LocalErrorCounter
						
						if (PrmCompany.UseIDM)
							if (LocalReprint
							and SavedWarehouseBatchView.WarehouseBatch not entered)
								invoke PrintWarehousePickList PrmReprintBatchNumber
									invoked.PrmPrintOption 		  	   = PrmSelectOption
									invoked.PrmIncludeCost 	 	  	   = PrmIncludeCost
									invoked.PrmDeliveryData 	 	   = PrmPrintDeliveryData
									invoked.PrmAllocateDetail     	   = PrmAllocateDetail
									invoked.PrmReprintShipment    	   = PrmReprintShipmentNumber
									invoked.PrmIncludeBackorders  	   = PrmIncludeBackorders
									invoked.PrmIncludeKillDetails 	   = PrmIncludeKillDetails
									invoked.PrmExpectedShipDate   	   = PrmExpectedShipDate
									invoked.PrmDocumentSource	  	   = PrmDocumentSource
									invoked.PrmAllocationPurpose  	   = PrmBinAllocationPurpose
									invoked.PrmForcePreferredBin  	   = PrmPreferOption
									invoked.PrmReprintBatch 	  	   = PrmReprintBatchNumber
									invoked.PrmSourceDocument1    	   = PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2    	   = PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3    	   = PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4     	   = PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5     	   = PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6    	   = PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7    	   = PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8    	   = PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9    	   = PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10   	   = PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11   	   = PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12   	   = PrmDocumentNumber.DocNbr[12]
									invoked.PrmRequestingLocation 	   = PrmRequestingLocation
									invoked.PrmCustomer   		  	   = PrmCustomer
									invoked.PrmItem 			  	   = PrmItem
									invoked.PrmProcessType 		  	   = PrmProcessType
									invoked.PrmFromAllocationPriority  = PrmFromAllocPriority
									invoked.PrmToAllocationPriority    = PrmToAllocPriority
									invoked.PrmShipTo 				   = PrmShipTo
									invoked.PrmCarrier 				   = PrmCarrier
									invoked.PrmRouteDay 			   = PrmRoute.DayOfWeek
									invoked.PrmRoute 				   = PrmRoute
									invoked.PrmRouteStop 			   = RouteStop
									invoked.PrmAllRoute 			   = PrmAllRoute
									invoked.PrmSkipInsufficientDetails = PrmSkipInsufBinDetails
									invoked.PrmIDMPrinter 			   = PrmIDMPrinter
									invoked.PrmPrintRequester 		   = PrmPrintRequester
									invoked.PrmConsolidateFile 		   = PrmConsolidateFile
							else
								invoke PrintWarehousePickList SavedWarehouseBatchView.WarehouseBatch
									invoked.PrmPrintOption 		  	   = PrmSelectOption
									invoked.PrmIncludeCost 	 	  	   = PrmIncludeCost
									invoked.PrmDeliveryData 	 	   = PrmPrintDeliveryData
									invoked.PrmAllocateDetail     	   = PrmAllocateDetail
									invoked.PrmReprintShipment    	   = PrmReprintShipmentNumber
									invoked.PrmIncludeBackorders  	   = PrmIncludeBackorders
									invoked.PrmIncludeKillDetails 	   = PrmIncludeKillDetails
									invoked.PrmExpectedShipDate   	   = PrmExpectedShipDate
									invoked.PrmDocumentSource	  	   = PrmDocumentSource
									invoked.PrmAllocationPurpose  	   = PrmBinAllocationPurpose
									invoked.PrmForcePreferredBin  	   = PrmPreferOption
									invoked.PrmReprintBatch 	  	   = PrmReprintBatchNumber
									invoked.PrmSourceDocument1    	   = PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2    	   = PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3    	   = PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4     	   = PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5     	   = PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6    	   = PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7    	   = PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8    	   = PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9    	   = PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10   	   = PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11   	   = PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12   	   = PrmDocumentNumber.DocNbr[12]
									invoked.PrmRequestingLocation 	   = PrmRequestingLocation
									invoked.PrmCustomer   		  	   = PrmCustomer
									invoked.PrmItem 			  	   = PrmItem
									invoked.PrmProcessType 		  	   = PrmProcessType
									invoked.PrmFromAllocationPriority  = PrmFromAllocPriority
									invoked.PrmToAllocationPriority    = PrmToAllocPriority
									invoked.PrmShipTo 				   = PrmShipTo
									invoked.PrmCarrier 				   = PrmCarrier
									invoked.PrmRouteDay 			   = PrmRoute.DayOfWeek
									invoked.PrmRoute 				   = PrmRoute
									invoked.PrmRouteStop 			   = RouteStop
									invoked.PrmAllRoute 			   = PrmAllRoute
									invoked.PrmSkipInsufficientDetails = PrmSkipInsufBinDetails
									invoked.PrmIDMPrinter 			   = PrmIDMPrinter
									invoked.PrmPrintRequester 		   = PrmPrintRequester
									invoked.PrmConsolidateFile 		   = PrmConsolidateFile
						else
							if (SavedPickListPrintReportView.WarehouseResult entered)
								invoke GeneratePickListPrintResult SavedPickListPrintReportView.WarehouseResult
									invoked.PrmCompany				= PrmCompany
									invoked.PrmLocation				= PrmLocation
									invoked.PrmExpectedShipDate		= PrmExpectedShipDate
									invoked.PrmDocumentSource		= PrmDocumentSource
									invoked.PrmSelectOption			= PrmSelectOption
									invoked.PrmBinAllocationPurpose = PrmBinAllocationPurpose
									invoked.PrmAllocateDetail		= PrmAllocateDetail
									invoked.PrmPreferOption			= PrmPreferOption
									invoked.PrmIncludeCost			= PrmIncludeCost
									invoked.PrmIncludeBackorders	= PrmIncludeBackorders
									invoked.PrmPrintDeliveryData	= PrmPrintDeliveryData
									invoked.PrmIncludeKillDetails	= PrmIncludeKillDetails
									invoked.PrmAlignForm			= PrmAlignForm
									invoked.PrmReprintShipmentNumber= PrmReprintShipmentNumber
									invoked.PrmReprintBatchNumber   = PrmReprintBatchNumber 
									invoked.PrmSourceDocument1		= PrmDocumentNumber.DocNbr[1]
									invoked.PrmSourceDocument2		= PrmDocumentNumber.DocNbr[2]
									invoked.PrmSourceDocument3		= PrmDocumentNumber.DocNbr[3]
									invoked.PrmSourceDocument4		= PrmDocumentNumber.DocNbr[4]
									invoked.PrmSourceDocument5		= PrmDocumentNumber.DocNbr[5]
									invoked.PrmSourceDocument6		= PrmDocumentNumber.DocNbr[6]
									invoked.PrmSourceDocument7		= PrmDocumentNumber.DocNbr[7]
									invoked.PrmSourceDocument8		= PrmDocumentNumber.DocNbr[8]
									invoked.PrmSourceDocument9		= PrmDocumentNumber.DocNbr[9]
									invoked.PrmSourceDocument10		= PrmDocumentNumber.DocNbr[10]
									invoked.PrmSourceDocument11		= PrmDocumentNumber.DocNbr[11]
									invoked.PrmSourceDocument12		= PrmDocumentNumber.DocNbr[12]
									invoked.PrmCreateFlatFile 		= PrmCreateFlatFile
									invoked.PrmFlatFileName			= PrmFlatFileName  
									invoked.PrmRequestingLocation   = PrmRequestingLocation
									invoked.PrmReqLocationGroup		= PrmReqLocationGroup	
									invoked.PrmCustomer				= PrmCustomer
									invoked.PrmItem              	= PrmItem                     
									invoked.PrmProcessType          = PrmProcessType
									invoked.PrmFromAllocPriority    = PrmFromAllocPriority
									invoked.PrmToAllocPriority      = PrmToAllocPriority
									invoked.PrmShipTo               = PrmShipTo
									invoked.PrmCarrier              = PrmCarrier
									invoked.PrmRoute                = PrmRoute
									invoked.PrmAllRoute        		= PrmAllRoute
									invoked.PrmSkipInsufBinDetails  = PrmSkipInsufBinDetails
									invoked.PrmPrintRequester		= PrmPrintRequester
									invoked.PrmWarehouseWave		= PrmWarehouseWave
									invoked.PrmUseZonePick			= PrmUseZonePick

						invoke FastUpdate PrmLocation
							initialize invoked.ProcessStatus	
						
				WarehouseDemand Set Rules
					Entrance Rules
						if (LocalReprint and SavedPickListPrintReportView.WarehouseResult not entered)
							invoke Create WarehouseResult
								assign result to SavedPickListPrintReportView
								invoked.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
								invoked.ReportType							= WarehouseResult.ReportType.WarehousePickListPrintReport
								invoked.PrintTimeStamp						= current timestamp
								invoked.Status								= WarehouseResult.Status.Processing
								invoked.Company								= Company
								invoked.DemandSystemCode					= WarehouseDemand.DemandSystemCode
								invoked.DemandDocument						= WarehouseDemand.DemandDocument
								invoked.DemandCompany						= WarehouseDemand.DemandCompany
					Exit Rules
						if (SavedWarehouseBatchView.WarehouseBatch entered
						or  SavedWarehouseShipmentView.WarehouseShipment entered)
							invoke FastUpdate PrmLocation
								invoked.LastBatchNumber = SavedWarehouseBatchView.WarehouseBatch
								invoked.LastShipment    = SavedWarehouseShipmentView.WarehouseShipment

						initialize SavedWarehouseShipmentView
				
				WarehouseDemandLine Set Rules
					Entrance Rules
						invoke FastUpdate
							initialize invoked.ErrorMessage
							initialize invoked.PickListPrintRun
						
						if (not LocalReprint)
							include ValidateAndCreateResultDetail
						
				Instance Rules
					if (not LocalReprint and not LocalHasError)
						if (SavedWarehouseBatchView.WarehouseBatch not entered)
							invoke Create WarehouseBatch
								assign result to SavedWarehouseBatchView
								fill in fields from this instance
								invoked.WarehouseBatch = InventoryLocation.LastBatchNumber + 1

						if (SavedWarehouseShipmentView.WarehouseShipment not entered)
							invoke Printed.Create WarehouseShipment
								assign result to SavedWarehouseShipmentView			
								fill in fields from this instance
									except invoked.Status	
								invoked.DemandDocumentType             = WarehouseDemandLine.DemandDocumentType	
								invoked.CustomerShipTo                 = CustomerShipTo
								if (WarehouseDemand.DemandSystemCode.CustomerOrder)
									invoked.ProcessLevel           	   = CustomerOrderRel.BillingProcessLevel	
									invoked.RequirePickingFeedback 	   = CustomerOrderRel.OrderEntryOrderType.WarehouseProcessType.RequirePickingFeedback
									invoked.RequirePackingFeedback 	   = CustomerOrderRel.OrderEntryOrderType.WarehouseProcessType.RequirePackingFeedback
									invoked.RouteHeader.Route          = CustomerOrderLineRel.RouteHeader.Route	
									invoked.RouteHeader.Date           = CustomerOrderLineRel.RouteHeader.Date	
									invoked.RouteStop                  = RouteStop	
									invoked.Carrier                    = CustomerOrderLineRel.Carrier	
									if (CustomerOrderRel.WarehouseShipment not entered)
										invoked.FreightCharges         = CustomerOrderRel.FreightCharge
									invoked.FreightCode                = CustomerOrderRel.BillingFreightCode
									invoked.ShippingMethod             = CustomerOrderRel.ShippingMethod	
									invoked.GlobalDocumentType         = CustomerOrderRel.GlobalDocumentType
									invoked.StockVolume                = CustomerOrderRel.StockVolume	
									invoked.StockWeight                = CustomerOrderRel.StockWeight	
									invoked.ShipTerm                   = CustomerOrderLineRel.ShipTerm	
									invoked.PortCode                   = CustomerOrderLineRel.PortCode	
									invoked.NatureOfTransactionCode    = CustomerOrderLineRel.NatureOfTransactionCode	
									invoked.StatisticalProcedure       = CustomerOrderLineRel.StatisticalProcedure 
									invoked.VATRegistrationNumber      = CustomerOrderRel.CustomerShipTo.VATRegistrationNumber	
								else
								if (WarehouseDemand.DemandSystemCode.Requisitions)
									invoked.ProcessLevel           	   = RequisitionRel.RequestingLocation.ProcessLevel
								invoked.WarehouseBatch 				   = SavedWarehouseBatchView.WarehouseBatch
								invoked.OperatorID                     = actor	
								invoked.PrintDate                      = current corporate date	
								invoked.EstimatedDeliveryDate          = PrmExpectedShipDate
								invoked.TransactionId                  = WarehouseDemand.TransactionId	
								invoked.RequireFreight                 = WarehouseDemand.RequireFreight
								invoked.InvoiceNumber                  = 0
								invoked.WarehouseWave				   = PrmWarehouseWave
								invoked.WarehouseZone				   = WarehouseZone

							LocalShipmentOutRecordType = LocalShipmentOutRecordType.Shipment
							include CreateWarehouseShipmentOutFile

							if (SavedWarehouseBatchView.WarehouseBatch entered)
								invoke Update SavedWarehouseBatchView.WarehouseBatch
									if (SavedWarehouseBatchView.FirstShipment not entered)
										invoked.FirstShipment  = SavedWarehouseShipmentView.WarehouseShipment	
									invoked.LastShipment   = SavedWarehouseShipmentView.WarehouseShipment
									invoked.Route          = SavedWarehouseShipmentView.RouteHeader.Route
									invoked.StockVolume    = SavedWarehouseShipmentView.StockVolume	
									invoked.StockWeight    = SavedWarehouseShipmentView.StockWeight
									invoked.LastShipment   = SavedWarehouseShipmentView.WarehouseShipment

							invoke TriggerWHBatchCreationAlert SavedWarehouseShipmentView.WarehouseShipment
								invoked.PrmBatchNumber     = SavedWarehouseBatchView.WarehouseBatch




						if (SavedWarehouseShipmentView.WarehouseShipment entered)
							if (WarehouseDemandLine.ComponentSequence not entered)
								invoke Create WarehouseShipmentLine
									assign result to SavedWarehouseShipmentLineView			
									fill in fields from this instance
										except invoked.Status
										except invoked.PrintedQuantity
										except invoked.ShippedQuantity
										except invoked.DetailQuantity
										except invoked.DetailCatchWeightQuantity
										except invoked.PreAssembledKitQuantity
										except invoked.InProcessQuantity
									invoked.RequestingDocument.RequestingCompany = WarehouseDemand.DemandCompany
									invoked.RequestingDocument.DemandSystemCode  = WarehouseDemand.DemandSystemCode
									invoked.RequestingDocument.DocumentNumber    = WarehouseDemand.DemandDocument
									invoked.WarehouseShipment                	 = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipmentLine 				 = WarehouseDemandLine.LineNumber
									if (Company.GeneralLedgerCompany.RequireHSNSACCode 
									and BusinessGroupRel.UseHSNSACCode)
										invoked.HSNSACCode                       = HSNSACCode
									invoked.WalkThruRequired                     = DetailRequired
									if (WarehouseDemand.DemandSystemCode.CustomerOrder
									and CustomerOrderLineRel exists)
										invoked.SupplementaryUOM                 = CustomerOrderLineRel.SupplementaryUOM
										invoked.SupplementaryQuantity            = CustomerOrderLineRel.SupplementaryQuantity
										invoked.ICNCode                          = CustomerOrderLineRel.ICNCode
										invoked.GlobalLineType                   = CustomerOrderLineRel.GlobalLineType
									else
									if (WarehouseDemand.DemandSystemCode.Requisitions
									and RequisitionLineRel exists)
										invoked.GlobalLineType                   = RequisitionLineRel.GlobalLineType
										invoked.MSDSDate					     = ItemLocation.MSDSDate
									invoked.RequisitionInterfaceInformation.SurgerySystemSource               = RequisitionInterfaceInformation.SurgerySystemSource
									invoked.RequisitionInterfaceInformation.SurgerySystemRequisitionReference = RequisitionInterfaceInformation.SurgerySystemRequisitionReference
									invoked.PrintedQuantity                      = DerivedNotYetPrintedQuantity
									invoked.OperatorID 							 = actor
									invoked.UpdateDate 							 = current timestamp
									invoked.Description 						 = ItemDescription
									if (Item.CatchWeightCode.NotCatchWeight 
									and ItemLocationRel exists and HasItemLocationStockUOM
									and ItemLocation.ItemLocationStockUOM not= TransactionUOM)
										invoked.TransactionUOM 					 = DerivedLocationStockUOM
										invoked.TransactionUOMMultiplier 		 = DerivedLocationStockUOMMultiplier
									if (IsInventoriedOrNonStock)
										invoked.DetailRequired                   = DetailRequired
										if (Item.CatchWeightCode.NotCatchWeight)
											invoked.StockWeight 				 = (DerivedNotYetPrintedQuantity * ItemUOMRel.PackingWeight)
											invoked.StockVolume 				 = (DerivedNotYetPrintedQuantity * ItemUOMRel.PackingVolume)
										else
											if (not DetailRequired and Item.CatchWeightCode.ReceiptRequiresBoth)
												invoked.CatchWeightQuantity 	 = (DerivedNotYetPrintedQuantity * TransactionUOMMultiplier)
											invoked.StockWeight 				 = ((DerivedNotYetPrintedQuantity * ItemUOMRel.PackingWeight) * TransactionUOMMultiplier)
											invoked.StockVolume 				 = ((DerivedNotYetPrintedQuantity * ItemUOMRel.PackingVolume) * TransactionUOMMultiplier)
								
								LocalShipmentOutRecordType = LocalShipmentOutRecordType.ShipmentLine
								include CreateWarehouseShipmentOutFile
								
								include CreateShipmentLineDetail
								PrintedQuantity += SavedWarehouseShipmentLineView.PrintedQuantity

								if (RequisitionLineCommentRel exists)
									LocalShipmentOutRecordType = LocalShipmentOutRecordType.Comment
									include CreateWarehouseShipmentOutFile

							else
								invoke Create WarehouseShipmentLineComponent
									assign result to SavedWarehouseShipmentLineComponentView
									fill in fields from this instance
										except invoked.UnitCost
									invoked.WarehouseShipment            = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipment 				 = SavedWarehouseShipmentView.WarehouseShipment
									invoked.WarehouseShipmentLine 			 = SavedWarehouseShipmentLineView.WarehouseShipmentLine
									invoked.WarehouseShipmentLineComponent   = DocumentKitComponentForItemRel.DocumentKitComponent.ComponentSequence
									invoked.Item 							 = DocumentKitComponentForItemRel.Item
									invoked.Quantity 						 = (SavedWarehouseShipmentLineView.PrintedQuantity * DocumentKitComponentForItemRel.Quantity)
									if (WarehouseDemandLine.DetailRequired)
										invoked.DetailRequired 				 = true

								LocalKitComponentQuantity 					 = SavedWarehouseShipmentLineComponentView.Quantity
								
								LocalShipmentOutRecordType 					 = LocalShipmentOutRecordType.ShipmentLineComponent
								include CreateWarehouseShipmentOutFile	
								
								include CreateShipmentLineDetail

								if (LocalDetailQuantity entered)
									invoke FastUpdate SavedWarehouseShipmentLineComponentView.WarehouseShipmentLineComponent
										invoked.DetailQuantity 				 = LocalDetailQuantity
										if (SavedWarehouseShipmentLineComponentView.DetailQuantity = SavedWarehouseShipmentLineComponentView.Quantity)
											invoked.DetailRequired 			 = false
								PrintedQuantity += SavedWarehouseShipmentLineComponentView.Quantity
							
							if (ReleasedRouteHeaderRel exists)
								invoke FastUpdate ReleasedRouteHeaderRel
									invoked.InUse = true

							invoke FastUpdate SavedWarehouseShipmentLineView.WarehouseShipmentLine
								invoked.KitComponentQuantity		 += LocalKitComponentQuantity
								invoked.DetailQuantity				 = LocalDetailQuantity
								invoked.DetailCatchWeightQuantity	 = LocalDetailCatchweightQuantity
								if ((SavedWarehouseShipmentLineView.DetailRequired
								or   SavedWarehouseShipmentLineView.DetailQuantity entered)
								and  SavedWarehouseShipmentLineView.DetailQuantity = SavedWarehouseShipmentLineView.PrintedQuantity
								and (SavedWarehouseShipmentLineView.DetailCatchWeightQuantity not entered 
								or   SavedWarehouseShipmentLineView.DetailCatchWeightQuantity = SavedWarehouseShipmentLineView.CatchWeightQuantity))
									invoked.WalkThruRequired = false	

							
							if (SavedPickListPrintReportView.WarehouseResult not entered)
								invoke Create WarehouseResult
									assign result to SavedPickListPrintReportView
									invoked.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
									invoked.ReportType							= WarehouseResult.ReportType.WarehousePickListPrintReport
									invoked.PrintTimeStamp						= current timestamp
									invoked.Status								= WarehouseResult.Status.Processing
									invoked.Company								= Company
									invoked.DemandSystemCode					= WarehouseDemand.DemandSystemCode
									invoked.DemandDocument						= WarehouseDemand.DemandDocument
									invoked.DemandCompany						= WarehouseDemand.DemandCompany
			
