ProjectEmployeeEffortPeriod is a BusinessClass
    owned by Projects
    prefix is PEEPD

	Ontology
		symbolic key is ProjectEmployeeEffortPeriod
        		
	Persistent Fields
		DateRange
		ProjectLaborSchedule
		CertificationEmailDate			is TimeStamp

	Local Fields
		LocalTotalPercent			is Percent size 6.3
		LocalDifference				is Percent size 6.3
		LocalEffortPercent			is Percent size 6.3
		LastProject					is like Project
		LastProjectAssignment		is like ProjectAssignment

 	Derived Fields
		LaborPeriodCount is a DerivedField
			type is Numeric size 4
			return (instance count of ProjectSchedulePeriodRel)
			 	
		TotalAverageActualPercent is a DerivedField
			type is Percent size 7.3
			TotalAverageActualPercent = (sum ProjectAssignmentEffortRel.AverageActualPercent)
			round TotalAverageActualPercent to nearest .001
			return TotalAverageActualPercent

		TotalEffortPercent is a DerivedField
			type is Percent size 7.3
			return (sum ProjectAssignmentEffortRel.EffortPercent)

		TotalAveragePlannedPercent is a DerivedField
			type is Percent size 7.3
			TotalAveragePlannedPercent = (sum ProjectAssignmentEffortRel.AveragePlannedPercent)
			round TotalAveragePlannedPercent to nearest .001
			return TotalAveragePlannedPercent
		
		CertifiedMF is a MessageField
			restricted
			"CERTIFIED"

		NeedsCertificationMF is a MessageField
			restricted
			"NEEDS_CERTIFICATION"

		StatusMessage is a ConditionalField
			type is Alpha size 25
			if (Certified)
				CertifiedMF
			else
				NeedsCertificationMF
		

		MobileCertifiedMF is a MessageField
			restricted
			"Certified"
			
		UnCertifiedMF is a MessageField
			restricted
			"Uncertified"
			
		MobileStatusMessage is a ConditionalField
			type is Alpha size 25
			if (Certified)
				MobileCertifiedMF
			else
				UnCertifiedMF
				
		DerivedDateRangeBegin is a DerivedField
			type is Alpha size 50
			restricted
			DerivedDateRangeBegin = DateRange.Begin
			return DerivedDateRangeBegin[5:6] + "/" + DerivedDateRangeBegin[7:8] + "/" + DerivedDateRangeBegin[1:4]
		
		DerivedDateRangeEnd is a DerivedField
			type is Alpha size 50
			restricted
			DerivedDateRangeEnd = DateRange.End
			return DerivedDateRangeEnd[5:6] + "/" + DerivedDateRangeEnd[7:8] + "/" + DerivedDateRangeEnd[1:4]
			
			

		
	Conditions
		ActualLessThan100
			restricted
			when (TotalAverageActualPercent < 1
			and   TotalAverageActualPercent > 0)
		Certified
			when (CertifiedAssignmentEffortRel exists)
		Uncertified
			when (UncertifiedAssignmentEffortRel exists)
		OpenPeriod
			restricted
			when (ProjectEffortPeriod.Status.Open)
		NotExcludedFromCertification
			restricted
			when (!Employee.ExcludeFromCertification)
		EffortLessThan100
			restricted
			when (TotalEffortPercent < 1
			and   TotalEffortPercent > 0)
		VarianceExists
			restricted
			when (!Employee.ExcludeFromCertification
			and   TotalAverageActualPercent !=  TotalEffortPercent
			and   TotalEffortPercent entered)
		ProcessedProjectSchedulePeriodRelExists  
			restricted
			when (ProcessedProjectSchedulePeriodRel exists)
		ProcessedProjectEmployeeLaborPeriodRelExists
			restricted
			when (ProcessedProjectEmployeeLaborPeriodRel exists)
		CertificationRequired
			when (any ProjectAssignmentEffortRel.Project.CertificationRequired)
		ValidDateRange
			restricted
			when (Uncertified
			and   DateRange.End < current corporate date)

		MobileCertified
			when (UncertifiedAssignmentEffortRel exists and TotalEffortPercent!=1)

		VarianceExistsUX1
			restricted
			when (!Employee.ExcludeFromCertification
			and   Certified
			and   CertificationRequired
			and   TotalAverageActualPercent !=  TotalEffortPercent
			and   TotalEffortPercent entered)
	Relations
		ProjectSchedulePeriodRel
			one-to-many relation to ProjectSchedulePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.ProjectLaborSchedule	= ProjectLaborSchedule
			Instance Selection
				where (related.DateRange.End within DateRange)

		ProcessedProjectSchedulePeriodRel  
			one-to-many relation using ProjectSchedulePeriodRel
			Instance Selection
				where (related.ProcessedProjectAssignmentLaborExists)

		ProcessedProjectEmployeeLaborPeriodRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses ByEmployeeAndStatus
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.Status					= 3
    			related.ProjectLaborSchedule	= ProjectLaborSchedule
			Instance Selection
				where (related.DateRange.End within DateRange)

		ProjectAssignmentEffortRel
			one-to-many relation to ProjectAssignmentEffort
			Field Mapping uses ByEmployeeAndPeriod
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.Employee				= Employee
    			related.ProjectEffortSchedule	= ProjectEffortSchedule
				related.ProjectEffortPeriod		= ProjectEffortPeriod

		CertifiedAssignmentEffortRel
			one-to-many relation using ProjectAssignmentEffortRel
			Instance Selection
				where (related.Certified)

		UncertifiedAssignmentEffortRel
			one-to-many relation using ProjectAssignmentEffortRel
			Instance Selection
				where (!related.Certified)

		LastAssignmentEffortRel
			one-to-one relation to ProjectAssignmentEffort
    		Field Mapping uses ByEmployeeAndPeriod
    			related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
    			related.Employee				= Employee
    			related.ProjectEffortSchedule	= ProjectEffortSchedule    			
    			related.ProjectEffortPeriod		= ProjectEffortPeriod
    			related.Project					= LastProject
    			related.ProjectAssignment		= LastProjectAssignment

		EmployeeRel
			one-to-one relation to Employee
			Field Mapping uses symbolic key
				related.HROrganization	= HROrganization
				related.Employee		= Employee

	Sets
	
	Field Rules
		DateRange
			DateRange = ProjectEffortPeriod.DateRange

	Actions
		Create is an Action
			restricted
		Update is an Action
			restricted
		Delete is an Action
			restricted

		PopulateAllEffortPercent is a Set Action
			restricted
        	Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		EmployeeGroup				is an Employee group
        		PrmProjectEffortSchedule	is a ProjectEffortSchedule
        			default label is "EffortSchedule"
        		PrmProjectEffortPeriod		is a ProjectEffortPeriod
        			default label is "Period"
				PrmOverrideExisting			is Boolean
        			default label is "OverrideExisting"				

        	Parameter Rules
        		PrmFinanceEnterpriseGroup
        			required
				PrmProjectEffortSchedule
					required
				PrmProjectEffortPeriod
					required
					constraint (PrmProjectEffortPeriod.DateRange.End < current corporate date)
						"CertificationPeriodMustEndPriorToToday"
				PrmOverrideExisting
					initial value is true
			Local Fields
				RecordCount				is Numeric size 4
        	Instance Selection
        		where (HROrganization.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
        		and    ProjectEffortSchedule = PrmProjectEffortSchedule
        		and    ProjectEffortPeriod = PrmProjectEffortPeriod
        		and   !Employee.ExcludeFromCertification
        		and   (EmployeeRel.Employee within EmployeeGroup
        		or     EmployeeGroup not entered)
        		and    ValidDateRange
				and   (PrmOverrideExisting
				or     !PrmOverrideExisting
				and    TotalEffortPercent = 0))
			Action Rules
				Instance Rules
					invoke PopulateEffortPercent
						resume on error
					if (RecordCount = 20)
						commit transaction
						initialize RecordCount
					RecordCount += 1						

		PopulateEffortPercent is an Instance Action
			restricted
			Action Rules
				confirmation required
					"AnyPreviouslyEnteredEffortPercentValuesWillBeReplaced.Continue?"
				initialize LocalTotalPercent
				initialize LastProject
				initialize LastProjectAssignment
				for each ProjectAssignmentEffortRel
					if ((each.AverageActualPercent entered
					or   each.EffortPercent entered)
					and  LocalTotalPercent < 1)
						if (LocalTotalPercent + each.AverageActualPercent > 1)
							LocalEffortPercent	= 1 - LocalTotalPercent
						else
							LocalEffortPercent	= each.AverageActualPercent
						LocalTotalPercent		+= LocalEffortPercent
						if (each.AverageActualPercent entered)
							LastProject				= each.Project
							LastProjectAssignment	= each.ProjectAssignment
						invoke Update each
							invoked.EffortPercent = LocalEffortPercent
				if (LocalTotalPercent > .99
				and LocalTotalPercent < 1.01)
					LocalDifference = 1 - LocalTotalPercent
					invoke Update LastAssignmentEffortRel
						invoked.EffortPercent += LocalDifference

		RecertificationEmail is an Instance Action
			valid when (Certified)
			Parameters
				PrmEmailAddress is an EmailAddressMulti 
					holds pii
					default label is "EmailAddress"
				PrmComment					   is Text
					default label is "Comment"		
				PrmAttachment				   is an Attachment	
					default label is "Attachment"
										
			Parameter Rules
				PrmEmailAddress
					required
				PrmComment
					required
			Action Rules
				send email
					to		PrmEmailAddress
					from	actor.agent(Employee).EmployeeWorkEmailAddress
					subject "EffortRecertificationRequired"
					Contents
							"Employee:<Employee>_<Employee.PresentationNameSnapshot>"
							"<actor.context.FinanceEnterpriseGroup.ProjectLabel>EffortPeriod:<DateRange.Begin>_<DateRange.End>"
							"Comment:<PrmComment>"
					Attachments		
						if (PrmAttachment entered)
							attachment PrmAttachment.File
								name is PrmAttachment.Title
								mime type is PrmAttachment.MimeType
		

		MobilePopulateEffortPercent is an Instance Action
			valid when (!MobileCertified)
			restricted
			Action Rules
				initialize LocalTotalPercent
				initialize LastProject
				initialize LastProjectAssignment
				for each ProjectAssignmentEffortRel
					if ((each.AverageActualPercent entered
					or   each.EffortPercent entered)
					and  LocalTotalPercent < 1)
						if (LocalTotalPercent + each.AverageActualPercent > 1)
							LocalEffortPercent	= 1 - LocalTotalPercent
						else
							LocalEffortPercent	= each.AverageActualPercent
						LocalTotalPercent		+= LocalEffortPercent
						if (each.AverageActualPercent entered)
							LastProject				= each.Project
							LastProjectAssignment	= each.ProjectAssignment
						invoke Update each
							invoked.EffortPercent = LocalEffortPercent
				if (LocalTotalPercent > .99
				and LocalTotalPercent < 1.01)
					LocalDifference = 1 - LocalTotalPercent
					invoke Update LastAssignmentEffortRel
						invoked.EffortPercent += LocalDifference
