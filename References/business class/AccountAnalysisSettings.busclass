AccountAnalysisSettings is a BusinessClass
	owned by GeneralLedger
	
	prefix is ActAS
	
	Ontology
		symbolic key is AccountAnalysisSettings
	
	Patterns
		disable Auditing
		disable EffectiveDated
		disable AsOfDateProcessing
	
	Persistent Fields
    	Description				 
		ReportingBasis
			delete ignored
		OriginalBasis				is like ReportingBasis 
		Scenario	
		Year						is an AnalysisYear	
		ReportingPeriod				is a FromSummaryPeriod 
			delete ignored
		ThruReportingPeriod			is a GeneralLedgerCalendarPeriod
			delete ignored
		GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
		System						is a GeneralLedgerSystemCode
		AccountingEntity
		AccountingUnit
		FinanceDimension1
		FinanceDimension2
		FinanceDimension3
		FinanceDimension4
		FinanceDimension5
		FinanceDimension6
		FinanceDimension7
		FinanceDimension8
		FinanceDimension9
		FinanceDimension10
		Project
		ReportingCurrency			is Numeric 2
			States
				Report1				value is 1
				Report2				value is 2
				Report3				value is 3
				Report4				value is 4
				Report5				value is 5

				Functional			value is 7
				Alternate			value is 8
				Alternate2		    value is 9
				Alternate3			value is 10
				Units				value is 11				
		SuppressZeroRows			is Boolean
		UseLTDBeginningBalance		is Boolean
		
		OverrideAccountingUnitStructure		is like AccountingUnitStructure
		OverrideAccountStructure			is like ReportingChart
		OverrideProjectStructure			is like ProjectStructure
		OverrideDimension1Structure			is like FinanceDimension1Structure
		OverrideDimension2Structure			is like FinanceDimension2Structure
		OverrideDimension3Structure			is like FinanceDimension3Structure
		OverrideDimension4Structure			is like FinanceDimension4Structure
		OverrideDimension5Structure			is like FinanceDimension5Structure
		OverrideDimension6Structure			is like FinanceDimension6Structure
		OverrideDimension7Structure			is like FinanceDimension7Structure
		OverrideDimension8Structure			is like FinanceDimension8Structure
		OverrideDimension9Structure			is like FinanceDimension9Structure
		OverrideDimension10Structure		is like FinanceDimension10Structure

		SequenceNumber	is Numeric 9

		PreservedOriginalBasis				is like ReportingBasis
		ShowDimensionFilters				is Boolean
		DetailTrialBalance					is Boolean
		HidePeriodBalances					is Boolean
			default label is "ShowPeriodBalances"

	Transient Fields
		
		ReportingBasisDisplay				is like ReportingBasis
			derive value from DefaultReportingBasisDisplay
		ReportingChart
			derive value from ReportingBasis.ReportingChart


		GeneralLedgerCalendar
			derive value from ReportingBasis.GeneralLedgerCalendar
		AccountingUnitStructure
			derive value from ReportingBasis.AccountingUnitStructure		
		FinanceDimension1Structure
			derive value from ReportingBasis.FinanceDimension1Structure		
		FinanceDimension2Structure
			derive value from ReportingBasis.FinanceDimension2Structure
		FinanceDimension3Structure
			derive value from ReportingBasis.FinanceDimension3Structure
		FinanceDimension4Structure
			derive value from ReportingBasis.FinanceDimension4Structure
		FinanceDimension5Structure
			derive value from ReportingBasis.FinanceDimension5Structure		
		FinanceDimension6Structure
			derive value from ReportingBasis.FinanceDimension6Structure			
		FinanceDimension7Structure
			derive value from ReportingBasis.FinanceDimension7Structure			
		FinanceDimension8Structure
			derive value from ReportingBasis.FinanceDimension8Structure			
		FinanceDimension9Structure
			derive value from ReportingBasis.FinanceDimension9Structure		
		FinanceDimension10Structure
			derive value from ReportingBasis.FinanceDimension10Structure			
		ProjectStructure
			derive value from ReportingBasis.ProjectStructure			


		TransientUpdateFromOriginal			is Boolean
		NotifyAccountingUnitStructure		is like AccountingUnitStructure
		NotifyAccountStructure				is like ReportingChart
		NotifyProjectStructure				is like ProjectStructure
		NotifyDimension1Structure			is like FinanceDimension1Structure
		NotifyDimension2Structure			is like FinanceDimension2Structure
		NotifyDimension3Structure			is like FinanceDimension3Structure
		NotifyDimension4Structure			is like FinanceDimension4Structure
		NotifyDimension5Structure			is like FinanceDimension5Structure
		NotifyDimension6Structure			is like FinanceDimension6Structure
		NotifyDimension7Structure			is like FinanceDimension7Structure
		NotifyDimension8Structure			is like FinanceDimension8Structure
		NotifyDimension9Structure			is like FinanceDimension9Structure
		NotifyDimension10Structure			is like FinanceDimension10Structure
											
    Derived Fields
    	DefaultReportingBasisDisplay is a DerivedField
    		type is like ReportingBasis
    		restricted
    		if (OriginalBasis entered)
    			return OriginalBasis
    		return ReportingBasis
		DisplayReportingCurrency is a DerivedField
			type is like Currency			


			if (ReportingCurrency.Report1)
				return FinanceEnterpriseGroup.ReportCurrencyOne			
			if (ReportingCurrency.Report2)	
				return FinanceEnterpriseGroup.ReportCurrencyTwo			
			if (ReportingCurrency.Report3)
				return FinanceEnterpriseGroup.ReportCurrencyThree			
			if (ReportingCurrency.Report4)
				return FinanceEnterpriseGroup.ReportCurrencyFour			
			if (ReportingCurrency.Report5)
				return FinanceEnterpriseGroup.ReportCurrencyFive
			if (ReportingCurrency.Functional)
				if (AccountingEntity entered)
					return AccountingEntity.FunctionalCurrency
				else
					return ReportingBasis.AccountingEntityTopNode.first ChildrenRel.FunctionalCurrency
			if (ReportingCurrency.Alternate)
				if (AccountingEntity entered)
					return AccountingEntity.AlternateCurrency
				else
					return ReportingBasis.AccountingEntityTopNode.first ChildrenRel.AlternateCurrency				
			if (ReportingCurrency.Alternate2)
				if (AccountingEntity entered)
					return AccountingEntity.AlternateCurrency2
				else
					return ReportingBasis.AccountingEntityTopNode.first ChildrenRel.AlternateCurrency2
			if (ReportingCurrency.Alternate3)
				if (AccountingEntity entered)
					return AccountingEntity.AlternateCurrency3
				else
					return ReportingBasis.AccountingEntityTopNode.first ChildrenRel.AlternateCurrency3
			if (ReportingCurrency.Units)		
				return "Units"
							
		CurrencyMF is a MessageField
			restricted
			"Currency"

		BlankField is a DerivedField
			type is Alpha 1
			return blank
			
		ReportingBasisRepresentativeText is a StringField
			type is Text
			default label is "ReportingBasis"
			OriginalBasis " - " ReportingBasis.Description

		PreservedBasisRepresentativeText is a StringField
			type is Text
			default label is "BasisReference"
			PreservedOriginalBasis	" - " ReportingBasis.Description

		RefreshCubeMessage is a MessageField
			"GLTOT_Cube_Refresh_is_Processing"
		ReloadCubeMessage is a MessageField
			"GLTOT_Cube_Reload_is_Processing"
		FailedCubeMessage is a MessageField
			"GLTOT_Cube_Update_Unsuccessful"
		DeactiveCubeMessage is a MessageField
			"GLTOT_Cube_Deactivated"
		ConnectionFailedMessage is a MessageField
			"GLTOT_Connection_Error_Data_Not_Refreshed"
		ConnectionInterruptedMessage is a MessageField
			"GLTOT_Connection_was_Interrupted"
		CubeStatus is a DerivedField
			type is Alpha 35
			default label is "CubeStatus"
			if (CubeRefresh)
				return RefreshCubeMessage
			if (CubeReload)
				return ReloadCubeMessage
			if (CubeFailed)
				return FailedCubeMessage
			if (CubeConnectionFailed)
				return ConnectionFailedMessage
			if (CubeDeactive)
				return DeactiveCubeMessage
			if (CubeInterrupted)
				return ConnectionInterruptedMessage

	Local Fields
		LocalPeriod							is like GeneralLedgerCalendarPeriod
		ReportingBasisView 					is a ReportingBasis view
		OldBasis							is like ReportingBasis
		TempBasis							is like ReportingBasis
		
	Relations
					
		GeneralLedgerChartAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerChartAccount = GeneralLedgerChartAccount) 

		AnalyticCubeOfflineRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
			Instance Selection
				where (related.BusinessClass = "GeneralLedgerTotal"
				and    related.Mode 		!= 0)

		AnalyticCubeRefreshRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (related.Mode = 4
				or 	   related.Mode = 10)

		AnalyticCubeReloadRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (related.Mode = 2
				or 	   related.Mode = 5
				or 	   related.Mode = 9)
		AnalyticCubeFailedRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (	related.Mode = 1
				or 		related.Mode = 3)
		AnalyticCubeConnectionFailedRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (	related.Mode = 7
				or 		related.Mode = 8)

		AnalyticCubeDeactiveRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (related.Mode = 6)
		
		AnalyticCubeInterruptedRel
			one-to-many relation to AnalyticCube
			Field Mapping uses AnalyticCubeSet
				related.BusinessClass = "GeneralLedgerTotal"
			Instance Selection
				where (related.Mode = 11
				or 	   related.Mode = 12)
	    FinanceEnterpriseGroupAnalyticCubeRel
			one-to-one relation to AnalyticCube
	        Field Mapping uses AnalyticCubeSet
	        	related.BusinessClass = "FinanceEnterpriseGroup"
	        	
	    GeneralLedgerTotalAnalyticCubeRel
			one-to-one relation to AnalyticCube
	        Field Mapping uses AnalyticCubeSet
	        	related.BusinessClass = "GeneralLedgerTotal"
		
		GeneralLedgerPeriodShadowRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses BySummaryPeriod
				related.FinanceEnterpriseGroup 			 = FinanceEnterpriseGroup
				related.GeneralLedgerCalendar			 = ReportingBasis.GeneralLedgerCalendar
				related.SummaryGeneralLedgerCalendarPeriod = LocalPeriod
				
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup   = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity        = AccountingEntity
				
		OldBasisRel
			one-to-one relation to ReportingBasis
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.ReportingBasis					= OldBasis
				
		AllSettingsRel
			one-to-many relation to AccountAnalysisSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup


				
		OriginalBasisRel
			one-to-one relation to ReportingBasis
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.ReportingBasis					= OriginalBasis

	Field Rules
    	Description
			required
		ReportingBasis
			required
		Scenario	
			required
			default to FinanceEnterpriseGroup.ActualsScenario
		Year

		ReportingPeriod
			required
			if (Year entered)
				constraint (ReportingPeriod.Year = Year)
					"InvalidPeriodForYearSpecified"
			LocalPeriod		= ReportingPeriod
			constraint (GeneralLedgerPeriodShadowRel exists)
				"Period<LocalPeriod>DoesNotExistIn_Reporting_BasisCalendar"
		ThruReportingPeriod


			if (Year entered)
				constraint (ThruReportingPeriod.Year = Year)
					"InvalidPeriodForYearSpecified"				
			constraint (ThruReportingPeriod.PeriodType = ReportingPeriod.PeriodType)
				"PeriodRangeMustSpecifySameTypeOfPeriod"
			constraint (ThruReportingPeriod >= ReportingPeriod)
				"InvalidPeriodRange"
			LocalPeriod		= ThruReportingPeriod
			constraint (GeneralLedgerPeriodShadowRel exists)
				"Period<LocalPeriod>DoesNotExistIn_Reporting_BasisCalendar"
		GeneralLedgerChartAccount
			constraint (GeneralLedgerChartAccount.ReportingChartAccountExists)
				"<FinanceEnterpriseGroup.AccountLabel>NotInBasisChart"
		AccountingEntity
			constraint (AccountingEntity.HierarchyRecordRel exists)
				"<FinanceEnterpriseGroup.AccountingEntityLabel>NotInReportingBasis"
		AccountingUnit
			constraint (AccountingUnit.IsAchild)
				"AccountingUnitNotInBasisStructure"
		FinanceDimension1
			constraint (FinanceDimension1.IsAchild)
				"DimensionNotInBasisStructure"		
		FinanceDimension2
			constraint (FinanceDimension2.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension3
			constraint (FinanceDimension3.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension4
			constraint (FinanceDimension4.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension5
			constraint (FinanceDimension5.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension6
			constraint (FinanceDimension6.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension7
			constraint (FinanceDimension7.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension8
			constraint (FinanceDimension8.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension9
			constraint (FinanceDimension9.IsAchild)
				"DimensionNotInBasisStructure"
		FinanceDimension10
			constraint (FinanceDimension10.IsAchild)
				"DimensionNotInBasisStructure"	
		Project
			constraint (Project.StructureProjectExists)
				"DimensionNotInBasisStructure"							
		ReportingCurrency
			required
			initial value is ReportingCurrency.Report1
			default to ReportingCurrency.Report1
			if (ReportingCurrency.Report1)
				constraint (FinanceEnterpriseGroup.ReportCurrencyOne entered)
					"Report1CurrencyIsNotDefinedAsAnEnterpriseCurrencyOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			else
			if (ReportingCurrency.Report2)
				constraint (FinanceEnterpriseGroup.ReportCurrencyTwo entered)
					"Report2CurrencyIsNotDefinedAsAnEnterpriseCurrencyOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			else
			if (ReportingCurrency.Report3)
				constraint (FinanceEnterpriseGroup.ReportCurrencyThree entered)
					"Report3CurrencyIsNotDefinedAsAnEnterpriseCurrencyOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			else
			if (ReportingCurrency.Report4)
				constraint (FinanceEnterpriseGroup.ReportCurrencyFour entered)
					"Report4CurrencyIsNotDefinedAsAnEnterpriseCurrencyOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			else
			if (ReportingCurrency.Report5)
				constraint (FinanceEnterpriseGroup.ReportCurrencyFive entered)
					"Report5CurrencyIsNotDefinedAsAnEnterpriseCurrencyOnFinanceEnterpriseGroup<FinanceEnterpriseGroup>"
			if (SummaryWithMixedCurrencies)
				confirmation required
					"MakeSureAllEntitiesInReportingBasisUseTheSameCurrency."					





















    Conditions
    	CubeOffline
    		when (AnalyticCubeOfflineRel exists)
		CubeOfflineMode 
			restricted
			when (GeneralLedgerTotalAnalyticCubeRel.Mode != "0" )
		CubeOnlineMode
			restricted
			when (GeneralLedgerTotalAnalyticCubeRel.Mode = "0")
		CubeRefresh 
			when (AnalyticCubeRefreshRel exists)
		CubeReload 
			when (AnalyticCubeReloadRel exists)
		CubeFailed 
			when (AnalyticCubeFailedRel exists)
		CubeConnectionFailed
			when (AnalyticCubeConnectionFailedRel exists)
		CubeDeactive 
			when (AnalyticCubeDeactiveRel exists)
		CubeInterrupted	
			when (AnalyticCubeInterruptedRel exists)
		CubeYellowAlert
			when (CubeRefresh
			or    CubeReload
			or    CubeConnectionFailed
			or    CubeInterrupted)
		CubeRedAlert
			when (CubeFailed
			or    CubeDeactive)
    	IsOldBasis
			when (OriginalBasis not entered
			and AccountAnalysisSettingsExists)
    	AccountAnalysisSettingsExists
    		when  (AccountAnalysisSettings exists)
		AccountEntered
			when (GeneralLedgerChartAccount entered)
		PostingAccountsUnderSummary
			when (GeneralLedgerChartAccount entered
			and GeneralLedgerChartAccount.ChartType.Summary)
		PossibleMixedCurrencies
			when (AccountingEntity not entered
			and  (ReportingCurrency.Functional
			or    ReportingCurrency.Alternate
			or    ReportingCurrency.Alternate2
			or    ReportingCurrency.Alternate3))
		IsBudgetScenario
			when  (Scenario.CommitmentType.BudgetOriginal
			or    Scenario.CommitmentType.Budget
			or    Scenario.CommitmentType.BudgetChange)
		CanShowPeriodBalances
			when  (!IsBudgetScenario
			and HidePeriodBalances) 
    	BudgetAccountAnalysisSettingsExists
    		when (AccountAnalysisSettings exists
    		and   IsBudgetScenario)  
		SecurityGroupAllowsAccess
			when ((actor.context.AccountingEntitySecurityGroup = blank)
			or    (AccountingEntity !entered)
			or    (AccountingEntity entered         
			and    AccountingEntitySecurityGroupMemberRel exists))

		OverridesExist
			when (OverrideAccountingUnitStructure entered
			or OverrideAccountStructure entered
			or OverrideProjectStructure	entered
			or OverrideDimension1Structure entered
			or OverrideDimension2Structure entered
			or OverrideDimension3Structure entered
			or OverrideDimension4Structure entered
			or OverrideDimension5Structure entered
			or OverrideDimension6Structure entered
			or OverrideDimension7Structure entered
			or OverrideDimension8Structure entered
			or OverrideDimension9Structure entered
			or OverrideDimension10Structure	entered)							
		AccountingUnitStructureIsOverridden		
			when (OverrideAccountingUnitStructure entered)		
		AccountStructureIsOverridden			
			when (OverrideAccountStructure entered)			
		ProjectStructureIsOverridden			
			when (OverrideProjectStructure entered)			
		Dimension1StructureIsOverridden			
			when (OverrideDimension1Structure entered)			
		Dimension2StructureIsOverridden			
			when (OverrideDimension2Structure entered)			
		Dimension3StructureIsOverridden			
			when (OverrideDimension3Structure entered)			
		Dimension4StructureIsOverridden			
			when (OverrideDimension4Structure entered)			
		Dimension5StructureIsOverridden			
			when (OverrideDimension5Structure entered)			
		Dimension6StructureIsOverridden			
			when (OverrideDimension6Structure entered)			
		Dimension7StructureIsOverridden			
			when (OverrideDimension7Structure entered)			
		Dimension8StructureIsOverridden			
			when (OverrideDimension8Structure entered)			
		Dimension9StructureIsOverridden			
			when (OverrideDimension9Structure entered)			
		Dimension10StructureIsOverridden		
			when (OverrideDimension10Structure entered)	
		IsPrivate
			when (Actor entered)
		IsPublic
			when (Actor not entered)
		SummaryWithMixedCurrencies
			when (AccountingEntity.DimensionType.Summary
			and  (ReportingCurrency.Functional
			or    ReportingCurrency.Alternate
			or    ReportingCurrency.Alternate2
			or    ReportingCurrency.Alternate3))

	Rule Blocks
		PreserveBasis
			PreservedOriginalBasis					= ReportingBasis.ReportingBasis

		ChangeBasis

			ReportingChart							= ReportingBasis.ReportingChart
			AccountingUnitStructure					= ReportingBasis.AccountingUnitStructure
			ProjectStructure						= ReportingBasis.ProjectStructure	
			FinanceDimension1Structure				= ReportingBasis.FinanceDimension1Structure
			FinanceDimension2Structure				= ReportingBasis.FinanceDimension2Structure
			FinanceDimension3Structure				= ReportingBasis.FinanceDimension3Structure
			FinanceDimension4Structure				= ReportingBasis.FinanceDimension4Structure
			FinanceDimension5Structure				= ReportingBasis.FinanceDimension5Structure
			FinanceDimension6Structure				= ReportingBasis.FinanceDimension6Structure
			FinanceDimension7Structure				= ReportingBasis.FinanceDimension7Structure
			FinanceDimension8Structure				= ReportingBasis.FinanceDimension8Structure
			FinanceDimension9Structure				= ReportingBasis.FinanceDimension9Structure
			FinanceDimension10Structure				= ReportingBasis.FinanceDimension10Structure											
			
			if (OriginalBasisRel.ReportingBasis not entered)
				SequenceNumber						= max AllSettingsRel.SequenceNumber + 1
				invoke CreateNoInit ReportingBasis
					assign result to ReportingBasisView
					fill in fields from ReportingBasis
						except invoked.IsABudgetBasis
						except invoked.UseForBudgetEdit
						except invoked.UseForBudgetEdit
						except invoked.ProcessRetainedEarnings
						except invoked.BasisSequence
						except invoked.AccountAnalysisString
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.ReportingBasis				= "__AA"  + SequenceNumber + "__"
					invoked.ReportingChart				= ReportingBasis.ReportingChart
					invoked.AccountingUnitStructure		= ReportingBasis.AccountingUnitStructure
					invoked.ProjectStructure			= ReportingBasis.ProjectStructure	
					invoked.FinanceDimension1Structure	= ReportingBasis.FinanceDimension1Structure
					invoked.FinanceDimension2Structure	= ReportingBasis.FinanceDimension2Structure
					invoked.FinanceDimension3Structure	= ReportingBasis.FinanceDimension3Structure
					invoked.FinanceDimension4Structure	= ReportingBasis.FinanceDimension4Structure
					invoked.FinanceDimension5Structure	= ReportingBasis.FinanceDimension5Structure
					invoked.FinanceDimension6Structure	= ReportingBasis.FinanceDimension6Structure
					invoked.FinanceDimension7Structure	= ReportingBasis.FinanceDimension7Structure
					invoked.FinanceDimension8Structure	= ReportingBasis.FinanceDimension8Structure
					invoked.FinanceDimension9Structure	= ReportingBasis.FinanceDimension9Structure
					invoked.FinanceDimension10Structure	= ReportingBasis.FinanceDimension10Structure											
					invoked.AccountAnalysisString		= AccountAnalysisSettings + "." + Actor	
				OriginalBasis							= ReportingBasis
				ReportingBasis							= ReportingBasisView.ReportingBasis

			else
				OldBasis								= old ReportingBasis

				invoke UpdateNoRules OldBasisRel.ReportingBasis
					fill in fields from ReportingBasis
						except invoked.FinanceEnterpriseGroup
						except invoked.ReportingBasis
						except invoked.BasisSequence
						except invoked.IsABudgetBasis
						except invoked.UseForBudgetEdit
						except invoked.ProcessRetainedEarnings
						except invoked.AccountAnalysisString

					invoked.ReportingChart				= ReportingBasis.ReportingChart
					invoked.AccountingUnitStructure		= ReportingBasis.AccountingUnitStructure
					invoked.ProjectStructure			= ReportingBasis.ProjectStructure	
					invoked.FinanceDimension1Structure	= ReportingBasis.FinanceDimension1Structure
					invoked.FinanceDimension2Structure	= ReportingBasis.FinanceDimension2Structure
					invoked.FinanceDimension3Structure	= ReportingBasis.FinanceDimension3Structure
					invoked.FinanceDimension4Structure	= ReportingBasis.FinanceDimension4Structure
					invoked.FinanceDimension5Structure	= ReportingBasis.FinanceDimension5Structure
					invoked.FinanceDimension6Structure	= ReportingBasis.FinanceDimension6Structure
					invoked.FinanceDimension7Structure	= ReportingBasis.FinanceDimension7Structure
					invoked.FinanceDimension8Structure	= ReportingBasis.FinanceDimension8Structure
					invoked.FinanceDimension9Structure	= ReportingBasis.FinanceDimension9Structure
					invoked.FinanceDimension10Structure	= ReportingBasis.FinanceDimension10Structure
				OriginalBasis							= ReportingBasis
				ReportingBasis							= OldBasis

				
		CheckOverrideStructures




			if (NotifyAccountingUnitStructure entered)
				if (OverrideAccountingUnitStructure entered)
					AccountingUnitStructure		= OverrideAccountingUnitStructure
				else
					AccountingUnitStructure	= NotifyAccountingUnitStructure
			else
			if (AccountingUnitStructure != OriginalBasisRel.AccountingUnitStructure
			and !TransientUpdateFromOriginal)
				if (AccountingUnitStructure entered)
					OverrideAccountingUnitStructure	= AccountingUnitStructure
				else
					initialize OverrideAccountingUnitStructure
					AccountingUnitStructure			= OriginalBasisRel.AccountingUnitStructure	
			if (NotifyAccountStructure entered)
				if (OverrideAccountStructure entered)
					ReportingChart					= OverrideAccountStructure
				else
					ReportingChart					= NotifyAccountStructure
			else
			if (ReportingChart != OriginalBasisRel.ReportingChart
			and !TransientUpdateFromOriginal)
				if (ReportingChart entered)
					OverrideAccountStructure		= ReportingChart
				else
					initialize OverrideAccountStructure		
					ReportingChart					= OriginalBasisRel.ReportingChart
			if (NotifyProjectStructure entered)
				if (OverrideProjectStructure entered)
					ProjectStructure				= OverrideProjectStructure
				else
					ProjectStructure				= NotifyProjectStructure
			else
			if (ProjectStructure != OriginalBasisRel.ProjectStructure
			and !TransientUpdateFromOriginal)
				if (ProjectStructure entered
				and ProjectStructure != OriginalBasisRel.ProjectStructure)
					OverrideProjectStructure		= ProjectStructure
				else
					initialize OverrideProjectStructure
					ProjectStructure				= OriginalBasisRel.ProjectStructure
			if (NotifyDimension1Structure entered)
				if (OverrideDimension1Structure entered)
					FinanceDimension1Structure		= OverrideDimension1Structure
				else
					FinanceDimension1Structure		= NotifyDimension1Structure
			else
			if (FinanceDimension1Structure != OriginalBasisRel.FinanceDimension1Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension1Structure entered)
					OverrideDimension1Structure		= FinanceDimension1Structure
				else
					initialize OverrideDimension1Structure			
					FinanceDimension1Structure		= OriginalBasisRel.FinanceDimension1Structure
			if (NotifyDimension2Structure entered)
				if (OverrideDimension2Structure entered)
					FinanceDimension2Structure		= OverrideDimension2Structure
				else
					FinanceDimension2Structure		= NotifyDimension2Structure
			else
			if (FinanceDimension2Structure != OriginalBasisRel.FinanceDimension2Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension2Structure entered)
					OverrideDimension2Structure		= FinanceDimension2Structure
				else
					initialize OverrideDimension2Structure			
					FinanceDimension2Structure		= OriginalBasisRel.FinanceDimension2Structure
			if (NotifyDimension3Structure entered)
				if (OverrideDimension3Structure entered)
					FinanceDimension3Structure		= OverrideDimension3Structure
				else
					FinanceDimension3Structure		= NotifyDimension3Structure
			else
			if (FinanceDimension3Structure != OriginalBasisRel.FinanceDimension3Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension3Structure entered)
					OverrideDimension3Structure		= FinanceDimension3Structure
				else
					initialize OverrideDimension3Structure			
					FinanceDimension3Structure		= OriginalBasisRel.FinanceDimension3Structure
			if (NotifyDimension4Structure entered)
				if (OverrideDimension4Structure entered)
					FinanceDimension4Structure		= OverrideDimension4Structure
				else
					FinanceDimension4Structure		= NotifyDimension4Structure
			else
			if (FinanceDimension4Structure != OriginalBasisRel.FinanceDimension4Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension4Structure entered)
					OverrideDimension4Structure		= FinanceDimension4Structure
				else
					initialize OverrideDimension4Structure			
					FinanceDimension4Structure		= OriginalBasisRel.FinanceDimension4Structure
			if (NotifyDimension5Structure entered)
				if (OverrideDimension5Structure entered)
					FinanceDimension5Structure		= OverrideDimension5Structure
				else
					FinanceDimension5Structure		= NotifyDimension5Structure
			else
			if (FinanceDimension5Structure != OriginalBasisRel.FinanceDimension5Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension5Structure entered)
					OverrideDimension5Structure		= FinanceDimension5Structure
				else
					initialize OverrideDimension5Structure			
					FinanceDimension5Structure		= OriginalBasisRel.FinanceDimension5Structure
			if (NotifyDimension6Structure entered)
				if (OverrideDimension6Structure entered)
					FinanceDimension6Structure		= OverrideDimension6Structure
				else
					FinanceDimension6Structure		= NotifyDimension6Structure
			else
			if (FinanceDimension6Structure != OriginalBasisRel.FinanceDimension6Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension6Structure entered)
					OverrideDimension6Structure		= FinanceDimension6Structure
				else
					initialize OverrideDimension6Structure			
					FinanceDimension6Structure		= OriginalBasisRel.FinanceDimension6Structure
			if (NotifyDimension7Structure entered)
				if (OverrideDimension7Structure entered)
					FinanceDimension7Structure		= OverrideDimension7Structure
				else
					FinanceDimension7Structure		= NotifyDimension7Structure
			else
			if (FinanceDimension7Structure != OriginalBasisRel.FinanceDimension7Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension7Structure entered)
					OverrideDimension7Structure		= FinanceDimension7Structure
				else
					initialize OverrideDimension7Structure			
					FinanceDimension7Structure		= OriginalBasisRel.FinanceDimension7Structure
			if (NotifyDimension8Structure entered)
				if (OverrideDimension8Structure entered)
					FinanceDimension8Structure		= OverrideDimension8Structure
				else
					FinanceDimension8Structure		= NotifyDimension8Structure
			else
			if (FinanceDimension8Structure != OriginalBasisRel.FinanceDimension8Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension8Structure entered)
					OverrideDimension8Structure		= FinanceDimension8Structure
				else
					initialize OverrideDimension8Structure			
					FinanceDimension8Structure		= OriginalBasisRel.FinanceDimension8Structure
			if (NotifyDimension9Structure entered)
				if (OverrideDimension9Structure entered)
					FinanceDimension9Structure		= OverrideDimension9Structure
				else
					FinanceDimension9Structure		= NotifyDimension9Structure
			else
			if (FinanceDimension9Structure != OriginalBasisRel.FinanceDimension9Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension9Structure entered)
					OverrideDimension9Structure		= FinanceDimension9Structure
				else
					initialize OverrideDimension9Structure			
					FinanceDimension9Structure		= OriginalBasisRel.FinanceDimension9Structure
			if (NotifyDimension10Structure entered)
				if (OverrideDimension10Structure entered)
					FinanceDimension10Structure		= OverrideDimension10Structure
				else
					FinanceDimension10Structure		= NotifyDimension10Structure
			else
			if (FinanceDimension10Structure != OriginalBasisRel.FinanceDimension10Structure
			and !TransientUpdateFromOriginal)
				if (FinanceDimension10Structure entered)
					OverrideDimension10Structure		= FinanceDimension10Structure
				else
					initialize OverrideDimension10Structure			
					FinanceDimension10Structure			= OriginalBasisRel.FinanceDimension10Structure
			
			if (AccountingUnitStructure = OriginalBasisRel.AccountingUnitStructure)
				initialize OverrideAccountingUnitStructure
			if (ReportingChart = OriginalBasisRel.ReportingChart)
				initialize OverrideAccountStructure
			if (ProjectStructure = OriginalBasisRel.ProjectStructure)
				initialize OverrideProjectStructure
			if (FinanceDimension1Structure = OriginalBasisRel.FinanceDimension1Structure)
				initialize OverrideDimension1Structure
			if (FinanceDimension2Structure = OriginalBasisRel.FinanceDimension2Structure)
				initialize OverrideDimension2Structure
			if (FinanceDimension3Structure = OriginalBasisRel.FinanceDimension3Structure)
				initialize OverrideDimension3Structure
			if (FinanceDimension4Structure = OriginalBasisRel.FinanceDimension4Structure)
				initialize OverrideDimension4Structure
			if (FinanceDimension5Structure = OriginalBasisRel.FinanceDimension5Structure)
				initialize OverrideDimension5Structure
			if (FinanceDimension6Structure = OriginalBasisRel.FinanceDimension6Structure)
				initialize OverrideDimension6Structure
			if (FinanceDimension7Structure = OriginalBasisRel.FinanceDimension7Structure)
				initialize OverrideDimension7Structure
			if (FinanceDimension8Structure = OriginalBasisRel.FinanceDimension8Structure)
				initialize OverrideDimension8Structure
			if (FinanceDimension9Structure = OriginalBasisRel.FinanceDimension9Structure)
				initialize OverrideDimension9Structure
			if (FinanceDimension10Structure = OriginalBasisRel.FinanceDimension10Structure)
				initialize OverrideDimension10Structure


			invoke Update ReportingBasis
				invoked.ReportingChart						= ReportingChart
				invoked.AccountingUnitStructure				= AccountingUnitStructure
				invoked.ProjectStructure					= ProjectStructure
				invoked.FinanceDimension10Structure			= FinanceDimension10Structure
				invoked.FinanceDimension1Structure			= FinanceDimension1Structure
				invoked.FinanceDimension2Structure			= FinanceDimension2Structure
				invoked.FinanceDimension3Structure			= FinanceDimension3Structure
				invoked.FinanceDimension4Structure			= FinanceDimension4Structure
				invoked.FinanceDimension5Structure			= FinanceDimension5Structure
				invoked.FinanceDimension6Structure			= FinanceDimension6Structure
				invoked.FinanceDimension7Structure			= FinanceDimension7Structure
				invoked.FinanceDimension8Structure			= FinanceDimension8Structure
				invoked.FinanceDimension8Structure			= FinanceDimension8Structure
				invoked.FinanceDimension9Structure			= FinanceDimension9Structure

	Sets
		ByOriginalBasis
			Sort Order
				FinanceEnterpriseGroup
				OriginalBasis
				AccountAnalysisSettings
	Actions
		T2VCreate is a Create Action
			restricted
			default label is untranslatable

		Create is a Create Action
			Entrance Rules
				if (PreservedOriginalBasis not entered)
					include PreserveBasis
				include ChangeBasis
				include CheckOverrideStructures

			Exit Rules		
				if (ThruReportingPeriod entered)
					confirmation required
						"EnteringAThruPeriodCouldDelayResponse._UseASummaryPeriodWhenPossible."	

		Update is an Update Action
			Entrance Rules
    			if (OriginalBasis entered) 
	    			if (old ReportingBasis != ReportingBasis)
						include ChangeBasis
			Exit Rules		
 				if (ThruReportingPeriod entered
 				and old ThruReportingPeriod != ThruReportingPeriod)
					confirmation required				
						"EnteringAThruPeriodCouldDelayResponse._UseASummaryPeriodWhenPossible."	
    			if (OriginalBasis entered) 
					include CheckOverrideStructures				

		Delete is a Delete Action
			Action Rules
				if (Actor = blank)
					confirmation required
						"CAUTION:\DeletingTheSharedAccountAnalysisWillRemoveItForAllUsers."
				if (OriginalBasis entered
					and ReportingBasis != OriginalBasis)
					invoke Purge ReportingBasis

		ShareAccountAnalysis is an Instance Action
			valid when (IsPrivate)
			Parameters
				PrmAccountAnalysisSettingsShareName is AlphaUpper size 20				
			Parameter Rules
				PrmAccountAnalysisSettingsShareName
                	initial value is this instance.AccountAnalysisSettings
			Action Rules
				TempBasis								= old ReportingBasis
				invoke Create
					fill in fields from ReportingBasis
					invoked.AccountAnalysisSettings		= PrmAccountAnalysisSettingsShareName
					invoked.Description					= Description
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.GeneralLedgerCalendar		= GeneralLedgerCalendar
					invoked.ReportingPeriod				= ReportingPeriod
					invoked.Year						= Year
					invoked.Actor						= blank
					invoked.PreservedOriginalBasis		= PreservedOriginalBasis
					invoked.ReportingCurrency			= ReportingCurrency
					invoked.SuppressZeroRows			= SuppressZeroRows
					invoked.System						= System
					invoked.UseLTDBeginningBalance		= UseLTDBeginningBalance
					invoked.Year						= Year
					invoked.ThruReportingPeriod			= ThruReportingPeriod
					invoked.AccountingUnit				= AccountingUnit
					invoked.GeneralLedgerChartAccount	= GeneralLedgerChartAccount
					invoked.Project						= Project
					invoked.FinanceDimension1			= FinanceDimension1
					invoked.FinanceDimension2			= FinanceDimension2
					invoked.FinanceDimension3			= FinanceDimension3
					invoked.FinanceDimension4			= FinanceDimension4
					invoked.FinanceDimension5			= FinanceDimension5
					invoked.FinanceDimension6			= FinanceDimension6
					invoked.FinanceDimension7			= FinanceDimension7
					invoked.FinanceDimension8			= FinanceDimension8
					invoked.FinanceDimension9			= FinanceDimension9
					invoked.FinanceDimension10			= FinanceDimension10
				OriginalBasis							= ReportingBasis
				ReportingBasis							= TempBasis

		CopyToMyAccountAnalysisSettings is an Instance Action
			valid when (IsPublic)						
			Parameters
				PrmAccountAnalysisSettingsName is AlphaUpper size 20
			Parameter Rules
				PrmAccountAnalysisSettingsName
                	initial value is this instance.AccountAnalysisSettings
			Action Rules
				TempBasis								= old ReportingBasis
				invoke Create
					fill in fields from ReportingBasis
					invoked.AccountAnalysisSettings		= PrmAccountAnalysisSettingsName
					invoked.Description					= Description
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.GeneralLedgerCalendar		= GeneralLedgerCalendar
					invoked.ReportingPeriod				= ReportingPeriod
					invoked.Year						= Year
					invoked.Actor						= actor	
					invoked.PreservedOriginalBasis		= PreservedOriginalBasis
					invoked.ReportingCurrency			= ReportingCurrency
					invoked.SuppressZeroRows			= SuppressZeroRows
					invoked.System						= System
					invoked.UseLTDBeginningBalance		= UseLTDBeginningBalance
					invoked.Year						= Year
					invoked.ThruReportingPeriod			= ThruReportingPeriod
					invoked.AccountingUnit				= AccountingUnit
					invoked.GeneralLedgerChartAccount	= GeneralLedgerChartAccount
					invoked.Project						= Project
					invoked.FinanceDimension1			= FinanceDimension1
					invoked.FinanceDimension2			= FinanceDimension2
					invoked.FinanceDimension3			= FinanceDimension3
					invoked.FinanceDimension4			= FinanceDimension4
					invoked.FinanceDimension5			= FinanceDimension5
					invoked.FinanceDimension6			= FinanceDimension6
					invoked.FinanceDimension7			= FinanceDimension7
					invoked.FinanceDimension8			= FinanceDimension8
					invoked.FinanceDimension9			= FinanceDimension9
					invoked.FinanceDimension10			= FinanceDimension10
				OriginalBasis							= OriginalBasis
				ReportingBasis							= TempBasis
