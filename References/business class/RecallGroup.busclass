RecallGroup is a BusinessClass
	owned by recall
	prefix is RMRG

	Ontology
		symbolic key is RecallGroup

	Persistent Fields
		Description
		RecallApprovalRequired				is Boolean
			default label is "ApprovalRequiredToCloseNotice"
		UserName							is Alpha size up to 255
		Password							is Alpha size up to 255
		OrganizationID						is Alpha size up to 255
		Vendor								is Alpha size up to 255
		ThirdPartyRefreshTimeStamp			is TimeStamp
		MyTasksRefreshTimeStamp				is TimeStamp
		ReportLogo							is an Attachment
		SendRecallNoticeEmail				is Boolean

		RecallNoticeEmailSubject			is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		RecallNoticeEmailContent			is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		SendTaskEmail						is Boolean

		TaskEmailSubject					is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		TaskEmailContent					is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		ItemProposalEmailSubject			is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		ItemProposalEmailContent			is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		SendRecallNoticeCloseEmail			is Boolean

		RecallNoticeCloseEmailSubject		is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		RecallNoticeCloseEmailContent		is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		SendEachAcceptedTaskEmail			is Boolean
		SendEachCompletedTaskEmail			is Boolean
		SendAllAcceptedTaskEmail			is Boolean
		SendAllCompletedTaskEmail			is Boolean
		RequireTaskAcceptance				is Boolean

		TaskReminderEmailSubject			is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		TaskReminderEmailContent			is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		TaskEscalationsEmailSubject			is Alpha size 100
			Text Variables
				RecallNotice				value is RecallNotice
				RecallNoticeName			value is RecallNotice.Name

		TaskEscalationsEmailContent			is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		MergeTaskEmailSubject				is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		MergeTaskEmailContent				is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		RecallNoticeUnsubscribeEmailSubject	is Alpha size 100
			Text Variables
				RecallNotice		value is RecallNotice
				RecallNoticeName	value is RecallNotice.Name

		RecallNoticeUnsubscribeEmailContent	is RichText
			Text Variables
				RecallNotice			value is RecallNotice
				RecallNoticeName		value is RecallNotice.Name
				RecallNoticeDescription	value is RecallNotice.Description
				ManufacturerName		value is RecallNotice.ManufacturerCodeDivision.Description 
				RecallCoordinatorName	value is RecallNotice.RecallCoordinator.FirstLastName
				RecallCoordinatorEmail	value is RecallNotice.RecallCoordinator.EmployeeWorkEmailAddress
				RecallCoordinatorPhone	value is RecallNotice.RecallCoordinator.EmployeeWorkTelephone
				RecallType				value is RecallNotice.RecallType
				RecallDate				value is RecallNotice.RecallDate

		AllowTransferByCoordinator			is Boolean
		AllowTransferByResponder			is Boolean
		AllowIssueByCoordinator				is Boolean
		AllowIssueByResponder				is Boolean
		AllowReturnByCoordinator			is Boolean
		AllowReturnByResponder				is Boolean
		AllowAdjustmentByCoordinator		is Boolean
		AllowAdjustmentByResponder			is Boolean
		SendRequesterNoticeEmail			is Boolean
		SendPOBuyerNoticeEmail				is Boolean
		SendEventBuyerNoticeEmail			is Boolean
		SendContractNoticeEmail				is Boolean
		TransactionQueryParameters
		QuantityRequired					is Boolean
			default label is "ResponderMustIndicateIfQuantityFound"
		LastNRACRetrievalDate				is Date
		DefaultItemProposalReviewer			is a RecallUser
		ItemProposalReviewNumberOfDays		is Numeric 5
		DefaultItemProposalInstructions		is a RecallTaskInstruction
		DefaultItemProposalCoordinator		is a RecallUser
		DefaultItemProposalType				is a RecallType
		ItemProposalQuestions				is a RecallTaskInstruction
		AllowItemProposalSpreadsheetRequester       is Boolean 
			default label is "ForRequester"
		AllowItemProposalSpreadsheetSupplier        is Boolean
			default label is "ForSupplier"
		AllowItemProposalOverride           is Boolean 
			default label is "AllowCoordinatorToOverrideUnfinishedReviews"
		RestrictPurchaseOrderCreation		is Numeric size 2
			States
				No			value is 0
				Warning		value is 1
				HardError	value is 2

		RestrictRequisitionCreation			is Numeric size 2
			States
				No			value is 0
				Warning		value is 1
				HardError	value is 2

		RestrictInventoryIssue				is Numeric size 2
			States
				No			value is 0
				Warning		value is 1
				HardError	value is 2

		RestrictInventoryReceipt			is Numeric size 2
			States
				No			value is 0
				Warning		value is 1
				HardError	value is 2
		AllowOrganizations                  is Boolean
		EnterQuantitiesByLocation           is Boolean
			default label is "EnterCountQuantitiesForASpecificLocation"

	Context Fields
		RecallNotice
		RecallReport

	Local Fields
		RunActivityQuery			is Boolean
		LocalCounter				is Numeric size 2
		NewRecallNotice				is a RecallNotice view
		CurrentRecallNotice			is a RecallNotice
		MyResponse					is a NRACResponse
		WorkDate					is Date
		FromWorkDateString			is Alpha 8
		ToWorkDateString            is Alpha 8
		LocalValue					is Alpha size 1000
		LocalTextValue              is Text
		ErrorMessage				is Alpha 250
		LocalWorkingId				is Alpha size 30
		LocalStartDate				is Alpha 10
		LocalEndDate				is Alpha 10
		LocalName					is Alpha size 1000
		LocalRecallNumber			is Alpha size 50
		LocalCode					is Alpha 100
		NRACCodes
		FirstValue					is Boolean
		NumberOfDays				is Numeric 9
		CodesExist					is Boolean
		ValuesExist					is Boolean
		LocalRecallNumbers			is Alpha 1000
		DescriptionEntered			is Boolean
		LocalManufacturer			is a Description
		LocalReason					is Alpha size 2000
		LocalNote					is Alpha size 2000
		LocalRecalledBy             is Alpha size 350
		LocalQuantity				is Alpha size 350
		LocalDistribution			is Alpha size 350
		LocalRecallProduct			is like RecallProduct
		LocalRecallProductLot		is AlphaUpper size 16
		LocalRecallProductSerial	is AlphaUpper size 16
		NewRecallProduct			is a RecallProduct view
		I1							is Numeric 9
		NextSentence				is Boolean
		LocalRecallGroup			is like RecallGroup
		UpdatedSerialOrLotReference	is Boolean
		SerialLabelEntered			is Boolean
		LotLabelEntered				is Boolean
		LocalOriginalNotice         is Numeric 8
		CommitCount                 is Numeric 3
		NRACNotices					is XMLDocument
		LocalRecallDate				is an XMLElement

	Derived Fields
	
		WebserviceTimestamp is a DerivedField
			type is TimeStamp
			return current timestamp

		NewLine	is a NativeField
			type is Alpha 1
			restricted

		RecallGroupDescription is a MessageField
			"<Description>_(<RecallGroup>)"

		LinkExampleText is a MessageField
			restricted
			"Example:https://www.infor.com/"

		FinalRecallNoticeEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return RecallNoticeEmailSubject text

		FinalRecallNoticeEmailContent is a DerivedField
			type is RichText
			restricted
			return RecallNoticeEmailContent text

		FinalTaskEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return TaskEmailSubject text

		FinalTaskEmailContent is a DerivedField
			type is RichText
			restricted
			return TaskEmailContent text

		FinalItemProposalEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return ItemProposalEmailSubject text

		FinalItemProposalEmailContent is a DerivedField
			type is RichText
			restricted
			return ItemProposalEmailContent text

		FinalRecallNoticeCloseEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return RecallNoticeCloseEmailSubject text

		FinalRecallNoticeCloseEmailContent is a DerivedField
			type is RichText
			restricted
			return RecallNoticeCloseEmailContent text

		FinalTaskReminderEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return TaskReminderEmailSubject text

		FinalTaskReminderEmailContent is a DerivedField
			type is RichText
			restricted
			return TaskReminderEmailContent text

		FinalTaskEscalationsEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return TaskEscalationsEmailSubject text

		FinalTaskEscalationsEmailContent is a DerivedField
			type is RichText
			restricted
			return TaskEscalationsEmailContent text

		FinalMergeTaskEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return MergeTaskEmailSubject text

		FinalMergeTaskEmailContent is a DerivedField
			type is RichText
			restricted
			return MergeTaskEmailContent text
		
		FinalRecallNoticeUnsubscribeEmailSubject is a DerivedField
			type is Alpha size 100
			restricted
			return RecallNoticeUnsubscribeEmailSubject text
		
		FinalRecallNoticeUnsubscribeEmailContent is a DerivedField
			type is RichText
			restricted
			return RecallNoticeUnsubscribeEmailContent text

		AnyPeriodItemCount is a ComputeField
			type is Numeric 5
			restricted
			(instance count of AnyPeriodItemRel)

		AnyPeriodTaskCount is a ComputeField
			type is Numeric 5
			restricted
			(instance count of AnyPeriodTaskRel)

		AnyPeriodOrganizationCount is a ComputeField
			type is Numeric 5
			restricted
			(instance count of AnyPeriodOrganizationRel)

		ForwardSlash is a StringField
			type is Alpha 1
			restricted
			"/"

		CurrentDate is a DerivedField
			type is Date
			restricted
			return current corporate date

		DerivedLocalName is a DerivedField
			type is Alpha size 1000
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalName)

		DerivedLocalManufacturer is a DerivedField
			type is Alpha size 60
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalManufacturer)

		DerivedLocalValue is a DerivedField
			type is Alpha size 1000
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalValue)

		DerivedLocalReason is a DerivedField
			type is Alpha size 2000
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalReason)

		DerivedLocalNote is a DerivedField
			type is Alpha size 2000
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalNote)

		DerivedRecalledBy is a DerivedField
			type is Alpha size 350
			return com.lawson.apps.procurement.base.StringUtils.stripNonUnicode(LocalRecalledBy)

		ActorBusinessGroup is a DerivedField
			type is like BusinessGroup
			return actor.context.BusinessGroup

		DerivedMonth is a DerivedField
			type is Alpha 2
			restricted
			if (LocalRecallDate[2:2] = "/")
				return "0" + LocalRecallDate[1:1]
			else
				return LocalRecallDate[1:2]

		DerivedDay is a DerivedField
			type is Alpha 2
			restricted
			if (LocalRecallDate[2:2] = "/")
				if (LocalRecallDate[4:4] = "/")
					return "0" + LocalRecallDate[3:3]
				else
					return LocalRecallDate[3:4]
			else
				if (LocalRecallDate[5:5] = "/")
					return "0" + LocalRecallDate[4:4]
				else
					return LocalRecallDate[4:5]

		DerivedYear is a DerivedField
			type is Alpha 4
			restricted
			if (LocalRecallDate[2:2] = "/")
				if (LocalRecallDate[4:4] = "/")
					return LocalRecallDate[5:8]
				else
					return LocalRecallDate[6:9]
			else
				if (LocalRecallDate[5:5] = "/")
					return LocalRecallDate[6:9]
				else
					return LocalRecallDate[7:10]

		RecallStringDate is a StringField
			type is Alpha 8
			restricted
			DerivedYear
			DerivedMonth
			DerivedDay

		DerivedRecallDate is a DerivedField
			type is Date
			restricted
			return RecallStringDate


	Field Rules
		Description
			required
				"DescriptionIsRequired"

		ItemProposalQuestions

			constraint (ItemProposalQuestions.HasQuestions)
				"TaskInstructionUsedForNewItemProposalMustHaveQuestions"

		DefaultItemProposalType
			constraint (RecallTypeRel.ForNewItemProposal)
				"TypeMustBeForNewItemProposal"

		SendRecallNoticeEmail
			initial value is true
		SendTaskEmail
			initial value is true
		SendRecallNoticeCloseEmail
			initial value is true
		SendEachAcceptedTaskEmail
			constraint (RequireTaskAcceptance)
				"MustRequireTaskAcceptanceInOrderToSendEmailWhenTaskIsAccepted"
			constraint (!SendAllAcceptedTaskEmail)
				"CannotChooseBothEachAndAllAcceptedTaskNotifications"
		SendAllAcceptedTaskEmail
			constraint (RequireTaskAcceptance)
				"MustRequireTaskAcceptanceInOrderToSendEmailWhenTaskIsAccepted"
			constraint (!SendEachAcceptedTaskEmail)
				"CannotChooseBothEachAndAllAcceptedTaskNotifications"
		SendEachCompletedTaskEmail
			initial value is false
			constraint (!SendAllCompletedTaskEmail)
				"CannotChooseBothEachAndAllAcceptedTaskNotifications"
		SendAllCompletedTaskEmail
			initial value is true
			constraint (!SendEachCompletedTaskEmail)
				"CannotChooseBothEachAndAllAcceptedTaskNotifications"

		RecallNoticeEmailSubject
			initial value is "Recall notice {RecallNotice} has been created; please review"
			default to "Recall notice {RecallNotice} has been created; please review"
		
		RecallNoticeEmailContent
			initial value is "Notice {RecallNotice}: {RecallNoticeName}"
			default to "Notice {RecallNotice}: {RecallNoticeName}"

		TaskEmailSubject
			initial value is "You have been assigned a task for recall notice {RecallNotice}"
			default to "You have been assigned a task for recall notice {RecallNotice}"

		TaskEmailContent
			initial value is "Notice {RecallNotice}: {RecallNoticeName}"
			default to "Notice {RecallNotice}: {RecallNoticeName}.  Task details are:"

		ItemProposalEmailSubject
			initial value is "You have been assigned a new item proposal to review"
			default to "You have been assigned a new item proposal to review"

		ItemProposalEmailContent
			initial value is "Please review the new item proposal or proposals and approve or reject."
			default to "Please review the new item proposal or proposals and approve or reject."

		RecallNoticeCloseEmailSubject
			initial value is "Recall notice {RecallNotice} has been closed"
			default to "Recall notice {RecallNotice} has been closed"

		RecallNoticeCloseEmailContent
			initial value is "Notice {RecallNotice}: {RecallNoticeName}"
			default to "Notice {RecallNotice}: {RecallNoticeName}"

		TaskReminderEmailSubject
			initial value is "Recall Management task reminder"
			default to "Recall Management task reminder"

		TaskReminderEmailContent
			initial value is "The following tasks are due soon or overdue:"
			default to "The following tasks are due soon or overdue:"

		TaskEscalationsEmailSubject
			initial value is "Recall Management task escalations"
			default to "Recall Management task escalations"
		
		TaskEscalationsEmailContent
			initial value is "The following tasks are due soon or overdue:"
			default to "The following tasks are due soon or overdue:"
	
		MergeTaskEmailSubject
			initial value is "A task for recall notice {RecallNotice} has been merged with your existing task"
			default to "A task for recall notice {RecallNotice} has been merged with your existing task"

		MergeTaskEmailContent
			initial value is "Notice:_<RecallNotice>_-_<RecallNotice.Name>"
			default to "Notice {RecallNotice}: {RecallNoticeName}"

		RecallNoticeUnsubscribeEmailSubject
			initial value is "You have been unsubscribed from recall notice {RecallNotice}"
			default to "You have been unsubscribed from recall notice {RecallNotice}" 

		RecallNoticeUnsubscribeEmailContent
			initial value is "Notice {RecallNotice}: {RecallNoticeName}"
			default to "Notice {RecallNotice}: {RecallNoticeName}"

		DefaultItemProposalReviewer
			constraint (DefaultItemProposalReviewer.IsItemReviewer)
				"EnteredDefaultReviewerMustBeAProposedItemReviewer"

			if (DefaultItemProposalReviewer entered)
				constraint (ItemProposalReviewNumberOfDays entered)
					"MustEnterANumberOfDaysToReviewIfReviewerIsEntered"

	 	DefaultItemProposalCoordinator
			constraint (DefaultItemProposalCoordinator.IsRecallCoordinator)
				"EnteredDefaultCoordinatorMustBeACoordinator"

		ItemProposalReviewNumberOfDays
			if (ItemProposalReviewNumberOfDays entered)
				constraint (DefaultItemProposalReviewer entered)
					"CanOnlyEnterANumberOfDaysWhenAReviewerIsEntered"

		DefaultItemProposalInstructions
			if (DefaultItemProposalInstructions entered)
				constraint (DefaultItemProposalReviewer entered)
					"CanOnlyEnterInstructionsWhenAReviewerIsEntered"

		AllowOrganizations
			if (AllowOrganizations = false)
				EnterQuantitiesByLocation = false

	Conditions
		HasReportLogo
			restricted
			when (ReportLogo entered)
			
		BusinessGroupAllowsAccess
			when ((actor.context.BusinessGroup != ""
			and	   actor.context.BusinessGroup = RecallGroup)
			or	  (actor.context.BusinessGroup = ""))
		
		ValidForSupplier
			restricted
			when (RecallGroup = actor.agent(SupplierSourceId).SupplierGroup)
		
		LocalValueContainsComma	
			restricted
			when (LocalValue contains ",")

		AllowResolutionsByResponders
			restricted
			when (AllowIssueByResponder
			or    AllowTransferByResponder
			or    AllowAdjustmentByResponder
			or    AllowReturnByResponder)
			
		NoStrippedVendorItemsExist
			restricted
			when (first StrippedVendorItemRel.VendorItemStripped !entered)
			
	Relations
		NewUnrefreshedTasksRel
			one-to-many relation to RecallNoticeTask
			Field Mapping uses ByNewUnrefreshedTasks
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.RecallNotice.Status.Active)
		
		RecallNoticeStatusRel
			one-to-one relation to RecallNoticeStatus
			Field Mapping uses symbolic key
				related.RecallGroup			= RecallGroup
				related.RecallNoticeStatus	= LocalCounter

		RecallUserRel
			one-to-many relation to RecallUser
			Field Mapping uses symbolic key
				related.HROrganization	= actor.agent(Employee).HROrganization
				related.RecallUser		= actor.agent(Employee).Employee

		InventoryCompaniesByItemGroupRel
			one-to-many relation to InventoryCompany
			Field Mapping uses Set2
				related.ItemGroup = RecallGroup

		ExistingLotRel
			one-to-one relation to RecallProductLot
			Field Mapping uses symbolic key
				related.RecallGroup         = RecallGroup
				related.RecallNotice		= CurrentRecallNotice 
				related.RecallProduct   	= LocalRecallProduct
				related.RecallProductLot 	= DerivedLocalValue
				
		ExistingSerialRel
			one-to-one relation to RecallProductSerial
			Field Mapping uses symbolic key
				related.RecallGroup         = RecallGroup
				related.RecallNotice		= CurrentRecallNotice
				related.RecallProduct   	= LocalRecallProduct
				related.RecallProductSerial	= DerivedLocalValue
							 
		AnyPeriodItemRel
			one-to-many relation to RecallProductItem
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.RecallNotice.ApplicableRecallNotice
					and related.RecallNotice.DerivedReleaseDate >= RecallReport.ReportFromDate
					and related.RecallNotice.DerivedReleaseDate <= RecallReport.ReportThruDate)

		AnyPeriodTaskRel
			one-to-many relation to RecallNoticeTask
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.RecallNotice.ApplicableRecallNotice
					and related.RecallNotice.DerivedReleaseDate >= RecallReport.ReportFromDate
					and related.RecallNotice.DerivedReleaseDate <= RecallReport.ReportThruDate) 

		AnyPeriodOrganizationRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.RecallNotice.ApplicableRecallNotice
					and related.RecallNotice.DerivedReleaseDate >= RecallReport.ReportFromDate
					and related.RecallNotice.DerivedReleaseDate <= RecallReport.ReportThruDate) 

		RecallNoticeWorkingIdRel
			one-to-many relation to RecallNotice
			Field Mapping uses ByWorkingId
				related.RecallGroup	= RecallGroup
				related.WorkingId	= LocalWorkingId

		ItemProposalWithAttachmentRel 
			one-to-many relation to RecallNotice 
			Field Mapping uses symbolic key 
				related. RecallGroup = RecallGroup 
			Instance Selection 
				where (related.ItemAttachmentEntered)

		RecallNoticeForTransactionQueryRel
			one-to-many relation to RecallNotice
			Field Mapping uses symbolic key
				related.RecallGroup = LocalRecallGroup
			Instance Selection
				where (related.EligibleForFirstProductTransactionQuery)

		RecallNoticeForTransactionQueryFromNRACRel
			one-to-many relation to RecallNotice
			Field Mapping uses symbolic key
				related.RecallGroup = LocalRecallGroup
			Instance Selection
				where (related.EligibleForFirstProductTransactionQuery
				and    related.RecallSource = 2)

		FirstActiveCoordinatorRel
			one-to-many relation to RecallUser
			Field Mapping uses symbolic key
				related.HROrganization = actor.agent(Employee).HROrganization
			Instance Selection
				where (related.Coordinator
					and related.Active)

		LocalRecallProductManufacturerNumberRel
			one-to-many relation to RecallProduct
			Field Mapping uses ByManufacturerNumber
				related.ManufacturerInformation.ManufacturerNumber	= LocalValue
				related.RecallGroup									= RecallGroup
				related.RecallNotice								= CurrentRecallNotice

		LocalRecallProductNDCNumberRel
			one-to-many relation to RecallProduct
			Field Mapping uses ByNDC
				related.NDC 			= LocalValue
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= CurrentRecallNotice

		LocalRecallProductRel
			one-to-many relation to RecallProduct
			Field Mapping uses symbolic key
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= CurrentRecallNotice

		LocalRecallProductByNameRel
			one-to-many relation to RecallProduct
			Field Mapping uses symbolic key
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= CurrentRecallNotice
			Instance Selection
				where (related.ProductName = LocalName)

		LocalRecallThisProductRel
			one-to-one relation to RecallProduct
			Field Mapping uses symbolic key
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= CurrentRecallNotice
				related.RecallProduct	= LocalRecallProduct

		RecallCommentRel
			one-to-many relation to RecallComment
			Field Mapping uses part of key
				related.RecallGroup		= RecallGroup
				related.RecallNotice	= CurrentRecallNotice

		StrippedVendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup = RecallGroup

		RecallNoticeQandARel
			one-to-many relation to RecallNoticeQandA
			Field Mapping uses part of key
				related.RecallGroup       = RecallGroup
		
		RecallTypeRel
			one-to-one relation to RecallType
			Field Mapping uses symbolic key
				related.RecallGroup	= RecallGroup
				related.RecallType	= DefaultItemProposalType 
				
		RecallTaskItemWithLocationRel
			one-to-many relation to RecallProductTaskItem
			Field Mapping uses symbolic key
				related.RecallGroup = RecallGroup
			Instance Selection
				where (related.Company entered)

	Rule Blocks
		BuildRecallNoticeStatus
			LocalCounter = 1
			while (LocalCounter <= 7)
				if (!RecallNoticeStatusRel exists)
					invoke Create RecallNoticeStatus
						invoked.RecallGroup			= RecallGroup
						invoked.RecallNoticeStatus	= LocalCounter
				increment LocalCounter
				
		CountAndCommit
			CommitCount += 1
			if (CommitCount > 500)
				commit transaction
				CommitCount = 0
		
	Actions
		Create is a Create Action
			Action Rules
				if (DefaultItemProposalInstructions entered)
					constraint (DefaultItemProposalInstructions.ValidForItemProposals)
						"<DefaultItemProposalInstructions>NotValidForItemProposals"

				if (ItemProposalQuestions entered)
					constraint (ItemProposalQuestions.ValidForItemProposals)
						"<ItemProposalQuestions>NotValidForItemProposals"							

			Exit Rules
				include BuildRecallNoticeStatus

				if (NoStrippedVendorItemsExist)
					invoke StripAllVendorItems VendorItem
						invoked.ProcurementGroup	= RecallGroup
					invoke StripAllItems Item
						invoked.ItemGroup			= RecallGroup

		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 

		Update is an Update Action
			Action Rules
			
				if (AllowItemProposalSpreadsheetRequester changed)        
					if (AllowItemProposalSpreadsheetRequester = false)
						constraint (ItemProposalWithAttachmentRel !exists)
							"CannotSetFlagsToAllowSpreadsheetsForItemProposalToFalse;ItemProposalsAlreadyExistWithSpreadsheets"

				if (AllowItemProposalSpreadsheetSupplier changed)        
					if (AllowItemProposalSpreadsheetSupplier = false)
						constraint (ItemProposalWithAttachmentRel !exists)
							"CannotSetFlagsToAllowSpreadsheetsForItemProposalToFalse;ItemProposalsAlreadyExistWithSpreadsheets"

				if (DefaultItemProposalInstructions changed
				and	DefaultItemProposalInstructions entered)
					constraint (DefaultItemProposalInstructions.ValidForItemProposals)
						"<DefaultItemProposalInstructions>NotValidForItemProposals"

				if (ItemProposalQuestions changed
				and ItemProposalQuestions entered)
					constraint (ItemProposalQuestions.ValidForItemProposals)
						"<ItemProposalQuestions>NotValidForItemProposals"

				if (EnterQuantitiesByLocation changed
				and EnterQuantitiesByLocation = false)
					constraint (RecallTaskItemWithLocationRel !exists)
						"EnterCountQuantitiesForASpecificLocationCannotBeSetToFalse;RecordsExistForLocations"			
			
			Exit Rules
				include BuildRecallNoticeStatus

				if (NoStrippedVendorItemsExist)
					invoke StripAllVendorItems VendorItem
						invoked.ProcurementGroup	= RecallGroup
					invoke StripAllItems Item
						invoked.ItemGroup			= RecallGroup

		Delete is a Delete Action

		Purge is a Purge Action
			restricted

		MonitorTasks is a Set Action
			restricted
			completion message is "MonitorTasksSubmitted"
			Parameters
				PrmRecallGroup						is a RecallGroup
				PrmRecallType						is a RecallType
				PrmSendRemindersToResponders		is Boolean
				PrmRemindInHoursBeforeDueDate		is Numeric 5
				PrmSendEscalationsToCoordinators	is Boolean
				PrmEscalationInHoursBeforeDueDate	is Numeric 5

			Parameter Rules
				PrmRecallGroup
					constraint (PrmRecallGroup exists)
						"RecallGroupDoesNotExist"
					required
						"RecallGroupIsRequired"
				PrmSendRemindersToResponders
					if (PrmRemindInHoursBeforeDueDate entered)
						required
							"IfTaskReminderHoursEntered,SendRemindersMustBeChecked"
					if (!PrmSendEscalationsToCoordinators entered)
						required
							"MustCheckAtLeastOneOption"
				PrmSendEscalationsToCoordinators
					if (PrmEscalationInHoursBeforeDueDate entered)
						required
							"IfTaskEscalationHoursEntered,SendEscalationsMustBeChecked"
					if (!PrmSendRemindersToResponders entered)
						required
							"MustCheckAtLeastOneOption"

			Instance Selection
				where (RecallGroup = PrmRecallGroup)

			Action Rules
				Instance Rules
					if (PrmSendRemindersToResponders)
						invoke MonitorTasksForResponders RecallUser
							invoked.PrmRecallGroup 						= PrmRecallGroup
							invoked.PrmRecallType						= PrmRecallType
							invoked.PrmRemindInHoursBeforeDueDate		= PrmRemindInHoursBeforeDueDate
					if (PrmSendEscalationsToCoordinators)
						invoke MonitorTasksForCoordinatorsAndSupervisors RecallUser
							invoked.PrmRecallGroup 						= PrmRecallGroup
							invoked.PrmRecallType						= PrmRecallType
							invoked.PrmEscalationInHoursBeforeDueDate	= PrmEscalationInHoursBeforeDueDate

		RunProductTransactionQueriesInstance is an Instance Action  
			restricted
			Parameters
				PrmRecallGroup							is a RecallGroup
				FromDate								is Date
				ToDate									is Date
				NumberOfPriorMonthsToSearchTransactions	is Numeric 5
				DefaultTaskPriority						is Numeric size 2
				TasksDueInDaysFromToday					is Numeric 5
				NonLocationActivityUser					is a RecallUser
				NonLocationInstructions                 is a RecallTaskInstruction
				ParmCreateTasks                         is Boolean
				
			Action Rules
				LocalRecallGroup = PrmRecallGroup
				for each RecallNoticeForTransactionQueryFromNRACRel

					if (each.RecallDate >= FromDate
					and each.RecallDate <= ToDate)

						invoke ProductTransactionQuery each
							invoked.TransactionDateRange.Begin	= current corporate date - NumberOfPriorMonthsToSearchTransactions as months
							if (each.FDAClassification = 1)
								invoked.Priority				= 1
							else
								invoked.Priority				= DefaultTaskPriority
							invoked.DueDate						= current corporate date + TasksDueInDaysFromToday as days
							invoked.TransactionQueryParameters	= PrmRecallGroup.TransactionQueryParameters
							invoked.NonLocationActivityUser		= NonLocationActivityUser
							invoked.NonLocationInstructions     = NonLocationInstructions
							invoked.ParmCreateTasks             = ParmCreateTasks				
				
		RunProductTransactionQueries is a Set Action
			Parameters
				PrmRecallGroup							is a RecallGroup
				ReceivedDate					    	is Date
				NumberOfPriorMonthsToSearchTransactions	is Numeric 5
				DefaultTaskPriority						is Numeric size 2
					States
						High	value is 1
						Medium	value is 2
						Low		value is 3
				TasksDueInDaysFromToday					is Numeric 5
				NonLocationActivityUser					is a RecallUser
				NonLocationInstructions                 is a RecallTaskInstruction
				ParmCreateTasks                         is Boolean
					default label is "CreateTasks"

			Parameter Rules

				PrmRecallGroup
					constraint (PrmRecallGroup exists)
						"RecallGroupDoesNotExist"
					required
						"RecallGroupIsRequired"
					constraint (PrmRecallGroup.TransactionQueryParameters entered)
						"DefaultProductTransactionQueryParametersHaveNotBeenEnteredForItemLifecycleManagementGroup"
				ReceivedDate 
					required
					initial value is current corporate date 

				NumberOfPriorMonthsToSearchTransactions
					required
					initial value is 12
				DefaultTaskPriority
					required
					initial value is 2
				TasksDueInDaysFromToday
					initial value is 30
				NonLocationActivityUser
					if (PrmRecallGroup.TransactionQueryParameters.NonLocationActivityEntered)
						required
							"MustEnterAUserToAssignDocumentActivityTo"
				ParmCreateTasks 
					initial value is true 

			Instance Selection
				where (RecallGroup = PrmRecallGroup)

			Action Rules

				Instance Rules

					LocalRecallGroup = PrmRecallGroup
					for each RecallNoticeForTransactionQueryRel

						if (each.RecallReceivedDate = ReceivedDate)

							invoke ProductTransactionQuery each
								invoked.TransactionDateRange.Begin	= current corporate date - NumberOfPriorMonthsToSearchTransactions as months
								if (each.FDAClassification = 1)
									invoked.Priority				= 1
								else
									invoked.Priority				= DefaultTaskPriority
								invoked.DueDate						= current corporate date + TasksDueInDaysFromToday as days
								invoked.TransactionQueryParameters	= PrmRecallGroup.TransactionQueryParameters
								invoked.NonLocationActivityUser		= NonLocationActivityUser
								invoked.NonLocationInstructions     = NonLocationInstructions
								invoked.ParmCreateTasks             = ParmCreateTasks

		RetrieveNRACRecalls is a Set Action
			completion message is "RetrievalOfNationalRecallAlertCenterRecallsFor<FromDate>-<ToDate>IsComplete"
			restricted
			Parameters
				PrmRecallGroup							is a RecallGroup
				FromDate								is Date
				ToDate									is Date
				RetrieveForCurrentDate                  is Boolean 
				SetPriorityToHighForFDAClassINotices	is Boolean
				PrmRecallCoordinator					is a RecallUser
				PrmRecallType                           is a RecallType
					default label is "NoticeType"
								
			Parameter Rules
				PrmRecallGroup
					constraint (PrmRecallGroup exists)
						"RecallGroupDoesNotExist"
					required
						"RecallGroupIsRequired"
				FromDate
					initial value is PrmRecallGroup.LastNRACRetrievalDate
					if (!RetrieveForCurrentDate)
						required

						default to PrmRecallGroup.LastNRACRetrievalDate
						constraint (FromDate <= current corporate date)
							"FromDateCannotExceedCurrentDate"
				ToDate
					initial value is current corporate date
					if (!RetrieveForCurrentDate)
						required

						default to current corporate date
						constraint (ToDate <= current corporate date)
							"ToDateCannotExceedCurrentDate"
						constraint (ToDate > FromDate)
							"ToDateMustBeGreaterThanFromDate"

						NumberOfDays = ToDate - FromDate
				
						constraint (NumberOfDays < 8)
							"DateRangeIsGreaterThanSevenDays;ToEnsureAcceptableProcessingTimesDateRangeMustBeSevenDaysOrLess"

				PrmRecallCoordinator
					constraint (PrmRecallCoordinator.IsRecallCoordinator)
						"CanOnlySelectACoordinator"

			Instance Selection
				where (RecallGroup = PrmRecallGroup)

			Action Rules

				Instance Rules
					if (ToDate entered 
					and	ToDate > LastNRACRetrievalDate)
						LastNRACRetrievalDate = ToDate 
					else 
					if (RetrieveForCurrentDate)
						LastNRACRetrievalDate = current corporate date 

					invoke FindNRACRecalls
						invoked.PrmRecallGroup							= PrmRecallGroup
						if (!RetrieveForCurrentDate)
							invoked.FromDate							= FromDate
							invoked.ToDate								= ToDate
						else 
						if (RetrieveForCurrentDate)
							invoked.FromDate                            = current corporate date 
							invoked.ToDate                              = current corporate date + 1 day 
						invoked.SetPriorityToHighForFDAClassINotices	= SetPriorityToHighForFDAClassINotices
						invoked.PrmRecallCoordinator					= PrmRecallCoordinator
						invoked.PrmRecallType                           = PrmRecallType
						
		FindNRACRecalls is a Set Action
			restricted
			completion message is "RetrievalOfNationalRecallAlertCenterRecallsFor<FromDate>-<ToDate>IsComplete"
			Parameters
				PrmRecallGroup							is a RecallGroup
				FromDate								is Date
				ToDate									is Date
				SetPriorityToHighForFDAClassINotices	is Boolean
				PrmRecallCoordinator					is a RecallUser
				PrmRecallType                           is a RecallType

			Local Fields
				LocalRecallClass				is Alpha size 20
				LocalExpDate					is Alpha size 20

				LocalClassI						is Boolean
				ReturnedRecallSize				is Integer 4
				ReturnedSupportingDocSize		is Integer 4

				ReturnedRecallProductSize		is Integer 4
				ReturnedProductCodeSize			is Integer 4
				ReturnedProductCodeValueSize	is Integer 4
				ReturnedSubCodeSize				is Integer 4
				ReturnedSubCodeCodeValueSize	is Integer 4

				CounterRecall					is Integer 4
				CounterSupportingDoc			is Integer 4

				CounterRecallProduct			is Integer 4
				CounterProductCode				is Integer 4
				CounterProductCodeValue			is Integer 4
				CounterSubCode					is Integer 4
				CounterSubCodeCodeValue			is Integer 4
				RecallInstance is XMLDocument
				RecallProductInstance is XMLDocument
				RecallProductCodeInstance is XMLDocument
				RecallProductCodeSubCodeInstance is XMLDocument

			Instance Selection
				where (RecallGroup = PrmRecallGroup)

			Sort Order
				RecallGroup
			
			Action Rules
			
				Instance Rules
					FromWorkDateString	= FromDate
					LocalStartDate		= FromWorkDateString[5:6] + "-" + FromWorkDateString[7:8] + "-" + FromWorkDateString[1:4] 
					ToWorkDateString	= ToDate
					LocalEndDate		= ToWorkDateString[5:6] + "-" + ToWorkDateString[7:8] + "-" + ToWorkDateString[1:4]

					
					invoke CallNRAC NRACNotices

						invoked.User		= "LawsonAPI"
						invoked.Pass		= "Th1$US3r"
						invoked.StartDate	= LocalStartDate
						invoked.EndDate		= LocalEndDate
						invoked.NewFormat   = "TRUE"   
						NRACNotices			= result.Notices
					CounterRecall		= 1
					ReturnedRecallSize	= NRACNotices select "count(/Recalls/Recall)"

					while(CounterRecall <= ReturnedRecallSize)

						include CountAndCommit
						RecallInstance = NRACNotices select "/Recalls/Recall[<CounterRecall>]"
						LocalManufacturer	= RecallInstance select "/Recall/Manufacturer"
						LocalWorkingId		= RecallInstance select "/Recall/Id"

						LocalRecallDate		= RecallInstance select "/Recall/Date"
						if (!RecallNoticeWorkingIdRel exists)
							invoke ThirdPartyCreate Pending RecallNotice
								assign result to NewRecallNotice
								invoked.RecallGroup					= PrmRecallGroup
								invoked.RecallCoordinator			= PrmRecallCoordinator
								invoked.RecallType                  = PrmRecallType
								invoked.Name						= RecallInstance select "/Recall/TypeOfAction"
								LocalName							= RecallInstance select "/Recall/TypeOfAction"
								if (LocalName !entered)
									invoked.Name					= "NRACRecall"
								invoked.WorkingId					= RecallInstance select "/Recall/Id"
								invoked.RecallDate					= DerivedRecallDate
								invoked.RecallReceivedDate			= current corporate date
								invoked.ManufacturerName			= DerivedLocalManufacturer
								invoked.RecallSource				= 2
								invoked.QuantityRequired			= QuantityRequired
								DescriptionEntered					= false
								LocalRecallClass					= RecallInstance select "/Recall/Class"
								if (LocalRecallClass entered)
									invoked.Description				+= "FDA Classification: " + LocalRecallClass + NewLine
									DescriptionEntered				= true
									if (LocalRecallClass = "ClassI"
										or LocalRecallClass = "Class1"
										or LocalRecallClass = "Class 1"
										or LocalRecallClass = "Class I")
										invoked.FDAClassification	= 1
										if (SetPriorityToHighForFDAClassINotices = true)
											LocalClassI = true
									else
									if (LocalRecallClass = "ClassII"
										or LocalRecallClass = "Class2"
										or LocalRecallClass = "Class 2"
										or LocalRecallClass = "Class 2 / Class 3")
										invoked.FDAClassification	= 2
									else
									if (LocalRecallClass = "ClassIII"
									or  LocalRecallClass = "Class3"
									or  LocalRecallClass = "Class 3")
										invoked.FDAClassification	= 3

								LocalRecalledBy = RecallInstance select "/Recall/RecalledBy"
								if (LocalRecalledBy entered)
									invoked.Description             += "Recalled By: " + DerivedRecalledBy + NewLine
									DescriptionEntered              = true
								
								LocalNote = RecallInstance select "/Recall/Note"
								if (LocalNote entered)
									invoked.Description				+= "Note: " + DerivedLocalNote + NewLine
									DescriptionEntered				= true

								LocalReason = RecallInstance select "/Recall/Reason"
								if (LocalReason entered)
									invoked.Description				+= "Reason: " + DerivedLocalReason + NewLine
									DescriptionEntered				= true

								LocalQuantity = RecallInstance select "/Recall/Quantity"
								if (LocalQuantity entered)
									invoked.Description				+= "Quantity: " + LocalQuantity + NewLine
									DescriptionEntered				= true

								LocalDistribution = RecallInstance select "/Recall/Distribution"
								if (LocalDistribution entered)
									invoked.Description				+= "Distribution: " + LocalDistribution
									invoked.Description				+= RecallGroup.NewLine
									DescriptionEntered				= true

								if (!DescriptionEntered)
									invoked.Description				= RecallInstance select "/Recall/TypeOfAction"
							CurrentRecallNotice			= NewRecallNotice.RecallNotice
							LocalOriginalNotice	= RecallInstance select "/Recall/OriginalNotice"
							if (LocalOriginalNotice entered)
								invoke Create RecallNoticeReference
									invoked.RecallGroup		= RecallGroup
									invoked.RecallNotice	= CurrentRecallNotice
									invoked.ReferenceType	= 4
									invoked.Description		= "Update Of Notice " + LocalOriginalNotice 
									invoked.IdentifierId	= LocalOriginalNotice
							CounterSupportingDoc        = 1
							ReturnedSupportingDocSize	= RecallInstance select "count(/Recall/SupportingDocument)"

							while(CounterSupportingDoc <= ReturnedSupportingDocSize)

								include CountAndCommit
								invoke Create RecallNoticeReference
									invoked.RecallGroup		= RecallGroup
									invoked.RecallNotice	= CurrentRecallNotice
									invoked.ReferenceType	= 3
									invoked.Description		= "NRAC Supporting Document"
									invoked.Link			= RecallInstance select "/Recall/SupportingDocument[<CounterSupportingDoc>]"
								increment CounterSupportingDoc
							
							ReturnedRecallProductSize	= RecallInstance select "count(/Recall/Products/Product)"

							CounterRecallProduct		= 1
							while (CounterRecallProduct <= ReturnedRecallProductSize)

								include CountAndCommit
								RecallProductInstance 	= RecallInstance select "/Recall/Products/Product[<CounterRecallProduct>]"

								LocalValue						= RecallProductInstance select "/Product/RecallNumber"
								LocalName						= RecallProductInstance select "/Product/Name"

								invoke Create RecallProduct
									assign result to NewRecallProduct
									invoked.RecallGroup									= RecallGroup
									invoked.RecallNotice								= CurrentRecallNotice
									invoked.ProductName									= DerivedLocalName
									if (LocalValue entered)
										invoked.ProductDescription						= "FDA Recall Number: " + DerivedLocalValue
								LocalRecallProduct = NewRecallProduct.RecallProduct

								ReturnedProductCodeSize	= RecallProductInstance select "count(/Product/Codes/Code)"

								CounterProductCode		= 1
								while (CounterProductCode <= ReturnedProductCodeSize)

									include CountAndCommit
									RecallProductCodeInstance 	= RecallProductInstance select "/Product/Codes/Code[<CounterProductCode>]"



									LocalCode = RecallProductCodeInstance select "/Code/Name"

									LocalExpDate = RecallProductCodeInstance select "/Code/ExpDate"
									if (LocalCode entered)
										invoke Update LocalRecallThisProductRel
											invoked.ProductDescription += NewLine + LocalCode + ": "

									ReturnedProductCodeValueSize = RecallProductCodeInstance select "count(/Code/Values/Value)"

									CounterProductCodeValue = 1
									while (CounterProductCodeValue <= ReturnedProductCodeValueSize)

										include CountAndCommit
										LocalValue = RecallProductCodeInstance select "/Code/Values/Value[<CounterProductCodeValue>]"
										if (LocalValue like "*,*")
											LocalTextValue = RecallProductCodeInstance select "/Code/Values/Value[<CounterProductCodeValue>]"


										if (LocalValue entered)
											invoke Update LocalRecallThisProductRel
												if (LocalValue like "*,*")
													if (CounterProductCodeValue = 1)
														invoked.ProductDescription += LocalTextValue
													else
														invoked.ProductDescription += ", " + LocalTextValue
												else
													if (CounterProductCodeValue = 1)
														invoked.ProductDescription += DerivedLocalValue
													else
														invoked.ProductDescription += ", " + DerivedLocalValue												
												if (LocalValue like "*,*")
													NextSentence = true
												else	
													if (LocalCode = "Catalog Number"
														or LocalCode = "Item Number"
														or LocalCode = "Model Number"
														or LocalCode = "Specific Unit Number"
														or LocalCode = "Part Number"
														or LocalCode = "SKU"
														or LocalCode = "Product Code"
														or LocalCode = "Product Number"
														or LocalCode = "Reference Number"
														or LocalCode = "Material Number"
														or LocalCode = "Reorder Number"
														or LocalCode = "Kit")
														invoked.ManufacturerInformation.ManufacturerNumber = DerivedLocalValue
													else 
													if (LocalCode = "GTIN")
														invoked.GlobalTradeItemNumber = DerivedLocalValue
													else
													if (LocalCode = "UDI")
														invoked.UDI = DerivedLocalValue
													else
													if (LocalCode = "NDC")
														invoked.NDC = DerivedLocalValue

											if (LocalValue like "*,*")

												if (LocalCode = "Catalog Number"
												or LocalCode = "Item Number"
												or LocalCode = "Model Number"
												or LocalCode = "Specific Unit Number"
												or LocalCode = "Part Number"
												or LocalCode = "SKU"
												or LocalCode = "Product Code"
												or LocalCode = "Product Number"
												or LocalCode = "Reference Number"
												or LocalCode = "Material Number"
												or LocalCode = "Kit"
												or LocalCode = "UDI"
												or LocalCode = "GTIN"
												or LocalCode = "Reorder Number"
												or LocalCode = "NDC")
													invoke ParseProductDescription LocalRecallThisProductRel
														invoked.Delimiter 				= ","
														invoked.ParmProductDescription 	= LocalTextValue
													for each LocalRecallThisProductRel.RecallProductParsedDescriptionRel
														if (LocalCode = "UDI")
															invoke UpdateItemInformation first each 
																invoked.ItemCode = "UDI"
															invoke Purge each
														else 
															invoke UpdateItemInformation each	
																if (LocalCode = "Catalog Number"
																	or LocalCode = "Item Number"
																	or LocalCode = "Model Number"
																	or LocalCode = "Specific Unit Number"
																	or LocalCode = "Part Number"
																	or LocalCode = "SKU"
																	or LocalCode = "Product Code"
																	or LocalCode = "Product Number"
																	or LocalCode = "Reference Number"
																	or LocalCode = "Material Number"
																	or LocalCode = "Reorder Number"
																	or LocalCode = "Kit")
																		invoked.ItemCode = "Manufacturer"
																else
																if (LocalCode = "GTIN")
																	invoked.ItemCode = "GTIN"
																else 
																if (LocalCode = "NDC")
																	invoked.ItemCode = "NDC"

										initialize LocalValue
										initialize LocalTextValue	
										increment CounterProductCodeValue
									if (LocalExpDate entered)
										invoke Update LocalRecallThisProductRel
											invoked.ProductDescription += NewLine + "Expiration Date: " + LocalExpDate
										initialize LocalExpDate

									ReturnedSubCodeSize	= RecallProductCodeInstance select "count(/Code/SubCodes/Code)"

									CounterSubCode		= 1
									while (CounterSubCode <= ReturnedSubCodeSize)

										include CountAndCommit

										RecallProductCodeSubCodeInstance 	= RecallProductCodeInstance select "/Code/SubCodes/Code[<CounterSubCode>]"
										LocalCode = RecallProductCodeSubCodeInstance select "/Code/Name"
										LocalExpDate = RecallProductCodeSubCodeInstance select "/Code/ExpDate"
										if (LocalCode entered)
											invoke Update LocalRecallThisProductRel
												invoked.ProductDescription += NewLine + "    " + LocalCode + ": "

										ReturnedSubCodeCodeValueSize	= RecallProductCodeSubCodeInstance select "count(/Code/Values/Value)"

										CounterSubCodeCodeValue			= 1
										while (CounterSubCodeCodeValue <= ReturnedSubCodeCodeValueSize)

											include CountAndCommit

											LocalValue = RecallProductCodeSubCodeInstance select "/Code/Values/Value[<CounterSubCodeCodeValue>]"
											if (LocalValue like "*,*")
												LocalTextValue = RecallProductCodeSubCodeInstance select "/Code/Values/Value[<CounterSubCodeCodeValue>]"





											if (LocalValue entered)

												invoke Update LocalRecallThisProductRel

													if (LocalValue like "*,*")


														if (CounterSubCodeCodeValue = 1)
															invoked.ProductDescription += LocalTextValue
														else
															invoked.ProductDescription += ", " + LocalTextValue													
													else
														if (CounterSubCodeCodeValue = 1)
															invoked.ProductDescription += DerivedLocalValue
														else
															invoked.ProductDescription += ", " + DerivedLocalValue


													if (LocalValue like "*,*")
														NextSentence = true
													else	
													if (LocalCode = "Catalog Number"
														or LocalCode = "Item Number"
														or LocalCode = "Model Number"
														or LocalCode = "Specific Unit Number"
														or LocalCode = "Part Number"
														or LocalCode = "SKU"
														or LocalCode = "Product Code"
														or LocalCode = "Product Number"
														or LocalCode = "Reference Number"
														or LocalCode = "Material Number"
														or LocalCode = "Reorder Number"
														or LocalCode = "Kit")
														invoked.ManufacturerInformation.ManufacturerNumber = DerivedLocalValue
													else 
													if (LocalCode = "GTIN")
														invoked.GlobalTradeItemNumber = DerivedLocalValue
													else
													if (LocalCode = "UDI")
														invoked.UDI = DerivedLocalValue
													else
													if (LocalCode = "NDC")
														invoked.NDC = DerivedLocalValue
															
												if (LocalValue like "*,*")
													if (LocalCode = "Catalog Number"
													or LocalCode = "Item Number"
													or LocalCode = "Model Number"
													or LocalCode = "Specific Unit Number"
													or LocalCode = "Part Number"
													or LocalCode = "SKU"
													or LocalCode = "Product Code"
													or LocalCode = "Product Number"
													or LocalCode = "Reference Number"
													or LocalCode = "Material Number"
													or LocalCode = "Kit"
													or LocalCode = "UDI"
													or LocalCode = "GTIN"
													or LocalCode = "Reorder Number"
													or LocalCode = "NDC")
														invoke ParseProductDescription LocalRecallThisProductRel
															invoked.Delimiter 				= ","
															invoked.ParmProductDescription 	= LocalTextValue													
														for each LocalRecallThisProductRel.RecallProductParsedDescriptionRel
															if (LocalCode = "UDI")
																invoke UpdateItemInformation first each 
																	invoked.ItemCode = "UDI"
																invoke Purge each
															else
																invoke UpdateItemInformation each 
																	if (LocalCode = "Catalog Number"
																		or LocalCode = "Item Number"
																		or LocalCode = "Model Number"
																		or LocalCode = "Specific Unit Number"
																		or LocalCode = "Part Number"
																		or LocalCode = "SKU"
																		or LocalCode = "Product Code"
																		or LocalCode = "Product Number"
																		or LocalCode = "Reference Number"
																		or LocalCode = "Material Number"
																		or LocalCode = "Reorder Number"
																		or LocalCode = "Kit")
																			invoked.ItemCode = "Manufacturer"
																	else
																	if (LocalCode = "GTIN")
																		invoked.ItemCode = "GTIN"
																	else 
																	if (LocalCode = "NDC")
																		invoked.ItemCode = "NDC"
											if (LocalExpDate entered)
												invoke Update LocalRecallThisProductRel

													invoked.ProductDescription += NewLine + "    Expiration Date: " + LocalExpDate
											initialize LocalValue
											initialize LocalTextValue
											increment CounterSubCodeCodeValue
										initialize LocalName											
										increment CounterSubCode
									increment CounterProductCode
								increment CounterRecallProduct
						increment CounterRecall
						

		RetrieveNRACRecallsSetAction is a Set Action
			restricted
			Parameters
				PrmRecallGroup							is a RecallGroup

			Local Fields
				LocalClassI is Boolean
			
			Instance Selection
				where (RecallGroup = PrmRecallGroup)

			Action Rules
				Instance Rules
						
					invoke GetRecallNotices NRACService
						invoked.User								= "LawsonAPI"
						invoked.Pass								= "Th1$US3r"
						invoked.StartDate							= LocalStartDate
						invoked.EndDate								= LocalEndDate
	
						MyResponse									= result.NRACResponse
						
