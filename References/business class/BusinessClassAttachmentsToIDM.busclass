BusinessClassAttachmentsToIDM is a BusinessClass
	owned by idm
	
	prefix is MBAI
	
	Ontology
		symbolic key is BusinessClassAttachmentsToIDM
		
	
	Patterns
		disable AuditIndex
       	disable EffectiveDated
       			
	Persistent Fields
		IDMMigrationStatus	        is Numeric 1
			protected
			States
				NotStarted    value is 0
				InProgress    value is 1
				Completed	  value is 2
				Incomplete    value is 3
				Failed		  value is 9
				
		IDMMigrationDate		    is TimeStamp 
			protected
		NumberOfFilesToMigrate		is Numeric 12
			protected
			default label is "ToMigrate"
		NumberOfFilesMigratedToIDM	is Numeric 12
			protected			
			default label is "Migrated"
	
	Field Rules




	Local Fields
		LocalConfigurationParameter					is Alpha size up to 200
		LocalActor					 				is an Actor
		LocalErrorMessage	       					is Text
		LocalError			       	 				is Boolean
		LocalBackgroundGroup						is AlphaUpper up to 200
		LocalAsyncId								is a AsyncActionRequest

		AccountAttachment							is Boolean
		Asset										is Boolean
		AssetAttachment								is Boolean
		AssetComment								is Boolean
		AssetCommentImport							is Boolean
		AssetImpairment								is Boolean
		AssetLocation								is Boolean
		BillingInvoiceAttachment	        		is Boolean
		BillingInvoiceCommentAttachment				is Boolean
		BillingInvoiceLineAttachment				is Boolean
		BillingStandardCommentAttachment			is Boolean
		BudgetChangeOrderComment					is Boolean
		BudgetChangeOrderLineComment				is Boolean
		CashAccountComment							is Boolean
		CashAccountCorrespondence					is Boolean
		CashAccountLockboxComment					is Boolean
		CashAccountResourceComment					is Boolean
		CashLedgerCashReceiptHeader					is Boolean
		CashLedgerElectronicFundsTransferTransaction	is Boolean
		CashLedgerPayablesPayment					is Boolean
		CashLedgerPayment 							is Boolean
		CashLedgerTransaction						is Boolean
		CashManagementAccountDocument				is Boolean
		CashPaymentFormat							is Boolean
		CloseTaskDocumentation						is Boolean
		ClosePeriodTaskDocumentation				is Boolean
		CompanyCustomerAttachment					is Boolean
		CompanyCustomerCommentAttachment			is Boolean
		CompanyCustomerContactAttachment			is Boolean	
		ContractAttachment							is Boolean
		ContractChangeOrder							is Boolean
		ContractComment								is Boolean
		ContractDeliverableComment					is Boolean
		ContractDocument							is Boolean
		ContractLine								is Boolean
		ContractLineAttachment						is Boolean
		ContractLineComment							is Boolean
		ContractMilestoneComment					is Boolean
		ContractQuestion							is Boolean
		ContractQuestionAnswer						is Boolean
		ContractRedlineDocument						is Boolean
		ContractSubcontractorComment				is Boolean
		ContractSubcontractorPayment				is Boolean
		ContractTermAndConditionAttachment			is Boolean
		ContractTermVersionTermAttachment			is Boolean
		ContractVersion								is Boolean			
		CreditAnalystAttachment						is Boolean
		CustomerRepresentativeComment				is Boolean
		CustomerRepresentativeMessage				is Boolean
		CustomerBillToAttachment					is Boolean
		CustomerAttachment							is Boolean
		CustodialAttachment							is Boolean
		FinanceCompany								is Boolean
		FinanceResource								is Boolean
		FinanceResourceDialogue						is Boolean
		FinanceResourceSchedule						is Boolean
		FinanceDimension2Comment     				is Boolean
		FinancialInstitutionBranchContact			is Boolean
		FinancialInstitutionBranchDocument			is Boolean
		FinancialInstitutionDocument				is Boolean
		FranchiseContractComment	 				is Boolean
		GeneralLedgerDepartmentJournalDocument		is Boolean
		GeneralLedgerJournalDocument 	    		is Boolean	
		GrantReportingSettings                      is Boolean
		IntercompanyBillingDocumentAttachment    	is Boolean
		IntercompanyBillingDocumentHeader	 		is Boolean
		ItemAttachment								is Boolean
		ItemCommentAttachment						is Boolean
		KitchenOrderInstruction						is Boolean
		LeaseAttachment								is Boolean
		LeaseComment								is Boolean
		LeaseInvoiceComment							is Boolean
		LeasePaymentDetailComment					is Boolean	
		MatchInvoiceMessageComment					is Boolean	
		MobileSupplyChainDeliveryEventAttachment	is Boolean	
		OrderEntryCustomerAttachment				is Boolean
		OtherForecastTransaction					is Boolean
		PayablesInvoice								is Boolean
		PayablesInvoiceDocument 	 				is Boolean
		ProjectAssignmentComment	 				is Boolean
		ProjectAssignmentLaborComment 				is Boolean
		ProjectAssignmentEffortComment 				is Boolean		
		ProjectComment				 				is Boolean
		ProjectContractComment		 				is Boolean
		ProjectContractInvoice                      is Boolean
		ProjectContractInvoiceComment 				is Boolean
		ProjectContractInvoiceLineComment 			is Boolean
		ProjectContractMilestoneComment 			is Boolean
		ProjectContractChangeRequest 				is Boolean
		ProjectContractModification  				is Boolean
		ProjectPerformanceObligationsComment        is Boolean
		ProjectFSDeliverableComment  				is Boolean
		ProjectFundingSourceComment  				is Boolean
		ProjectFundingSourceChangeRequest   		is Boolean
		PurchaseOrderComment		 				is Boolean
		PurchaseOrderLineComment					is Boolean
		PurchaseOrderReceiptComment		 			is Boolean
		PurchaseOrderReceiptLineComment		 		is Boolean
		POReceiptAdjustmentAndInspectionComment		is Boolean
		POReceiptAdjustmentAndInspectionLineComment	is Boolean
		ProcurementCardStatementTransactionComment	is Boolean
		PurchaseOrderInterfaceComment				is Boolean
		PurchaseOrderLineSourceComment				is Boolean
		PurchasingVendorAttachment					is Boolean
		ReceivableInvoiceAttachment					is Boolean
		ReceivableInvoiceBatchAttachment			is Boolean
		ReceivableOperatorAttachment				is Boolean
		ReceivablePaymentAttachment					is Boolean
		ReceivablePaymentHeaderAttachment			is Boolean
		RecipeInstruction							is Boolean
		ReconciliationAccountComment				is Boolean
		ReconciliationDetail						is Boolean
		ReconciliationDetailComment					is Boolean
		ReconciliationPeriodDetail					is Boolean
		RecurringJournalDocument					is Boolean
		RequisitionComment			 				is Boolean	
		RequisitionLineComment						is Boolean
		StandardCommentCode			 				is Boolean	
		SalesRepresentativeAttachment 				is Boolean
		StudentActivityBankAccount					is Boolean
		StudentActivityBankTransaction				is Boolean
		StudentActivityReceipt						is Boolean
		StudentActivityVendorInvoice				is Boolean
		SubleaseAttachment							is Boolean
		SubleaseBillingInvoice						is Boolean
		SubleaseComment								is Boolean
		VendorAttachment							is Boolean
		VendorDiversity								is Boolean
		ReceivableApplicationAdjustmentAttachment	is Boolean

	Conditions
		IsValidForMassUpload
			restricted
			when (FinanceEnterpriseGroup.EnableIDMForAttachments)
		
		IsValidForUpload
			restricted		
			when (FinanceEnterpriseGroup.EnableIDMForAttachments
			and (IDMMigrationStatus.NotStarted
			or IDMMigrationStatus.Failed
			or IDMMigrationStatus.Incomplete))


		IsValidForActorContext
			restricted
			when (FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		FailedAttachmentExists
			when (FailedFSMAttachmentIDMRel exists)

	Relations
		IDMConfigurationRel
			one-to-one relation to IDMConfiguration
			Field Mapping uses symbolic key
				related.IDMConfiguration = FinanceEnterpriseGroup

		FailedFSMAttachmentIDMRel 
			one-to-many relation to FSMAttachmentIDM
			Field Mapping uses ByFailedStatus
				related.BusinessObjectReference.BusinessClassName = BusinessClassAttachmentsToIDM
			Instance Selection
				where (related.Status.Failed)



		FinishedFSMAttachmentIDMRel 
			one-to-many relation to FSMAttachmentIDM
			Field Mapping uses symbolic key
			Instance Selection
				where (related.BusinessObjectReference.BusinessClassName = BusinessClassAttachmentsToIDM
				and    related.FinishedStatus
				and    related.IDMUniqueId entered)

		AssetRel			
			one-to-many relation to Asset
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Picture.IsLocal)

		AssetAttachmentRel	
			one-to-many relation to AssetAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)						

		AssetCommentRel		
			one-to-many relation to AssetComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		AssetCommentImportRel	
			one-to-many relation to AssetCommentImport
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		AssetImpairmentRel	
			one-to-many relation to AssetImpairment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		AssetLocationRel								
			one-to-many relation to AssetLocation
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Picture.IsLocal)	

		BillingInvoiceAttachmentRel
			one-to-many relation to BillingInvoiceAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)

        BillingInvoiceCommentAttachmentRel
			one-to-many relation to BillingInvoiceCommentAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		
		
		BillingInvoiceLineAttachmentRel
			one-to-many relation to BillingInvoiceLineAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		BillingStandardCommentAttachmentRel
			one-to-many relation to BillingStandardCommentAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		FranchiseContractCommentRel
			one-to-many relation to FranchiseContractComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		GeneralLedgerJournalDocumentRel
			one-to-many relation to GeneralLedgerJournalDocument
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		IntercompanyBillingDocumentAttachmentRel
			one-to-many relation to IntercompanyBillingDocumentAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		IntercompanyBillingDocumentHeaderRel
			one-to-many relation to IntercompanyBillingDocumentHeader
			Field Mapping uses symbolic key
			Instance Selection
				where (related.GeneratedInvoice.IsLocal)	

		PayablesInvoiceDocumentRel
			one-to-many relation to PayablesInvoiceDocument
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		PurchaseOrderCommentRel
			one-to-many relation to PurchaseOrderComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal
				and not related.PurchaseOrder.ForHeaderDeletion)						

		RequisitionCommentRel
			one-to-many relation to RequisitionComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)	
				
		StandardCommentCodeRel
			one-to-many relation to StandardCommentCode
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectAssignmentCommentRel
			one-to-many relation to ProjectAssignmentComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectAssignmentLaborCommentRel
			one-to-many relation to ProjectAssignmentLaborComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)	
		ProjectAssignmentEffortCommentRel
			one-to-many relation to ProjectAssignmentEffortComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	
		ProjectCommentRel
			one-to-many relation to ProjectComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectContractCommentRel
			one-to-many relation to ProjectContractComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectContractInvoiceCommentRel
			one-to-many relation to ProjectContractInvoiceComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectContractInvoiceLineCommentRel
			one-to-many relation to ProjectContractInvoiceLineComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectContractMilestoneCommentRel
			one-to-many relation to ProjectContractMilestoneComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectFSDeliverableCommentRel
			one-to-many relation to ProjectFSDeliverableComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ProjectFundingSourceCommentRel
			one-to-many relation to ProjectFundingSourceComment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)			

		ProjectFundingSourceChangeRequestRel
			one-to-many relation to ProjectFundingSourceChangeRequest
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		ProjectContractChangeRequestRel
			one-to-many relation to ProjectContractChangeRequest
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		FinanceDimension2CommentRel
			one-to-many relation to FinanceDimension2Comment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		ProjectContractModificationRel
			one-to-many relation to ProjectContractModification
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		ProjectPerformanceObligationsCommentRel
			one-to-many relation to ProjectPerformanceObligationsComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)	

		SalesRepresentativeAttachmentRel
			one-to-many relation to SalesRepresentativeAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ReceivableInvoiceAttachmentRel
			one-to-many relation to ReceivableInvoiceAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		OrderEntryCustomerAttachmentRel
			one-to-many relation to OrderEntryCustomerAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ReceivableInvoiceBatchAttachmentRel
			one-to-many relation to ReceivableInvoiceBatchAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)						

		ReceivableOperatorAttachmentRel
			one-to-many relation to ReceivableOperatorAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		ReceivablePaymentAttachmentRel
			one-to-many relation to ReceivablePaymentAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		ReceivablePaymentHeaderAttachmentRel
			one-to-many relation to ReceivablePaymentHeaderAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		CustomerRepresentativeCommentRel
			one-to-many relation to CustomerRepresentativeComment
			Field Mapping uses part of key
			Instance Selection
				where (related.Attachment.IsLocal)		

		CustomerRepresentativeMessageRel
			one-to-many relation to CustomerRepresentativeMessage
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		CustomerBillToAttachmentRel
			one-to-many relation to CustomerBillToAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	

		CustomerAttachmentRel
			one-to-many relation to CustomerAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)		

		CreditAnalystAttachmentRel
			one-to-many relation to CreditAnalystAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)			

		CompanyCustomerAttachmentRel
			one-to-many relation to CompanyCustomerAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)			

		CompanyCustomerCommentAttachmentRel
			one-to-many relation to CompanyCustomerCommentAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)						

		CompanyCustomerContactAttachmentRel
			one-to-many relation to CompanyCustomerContactAttachment
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Attachment.IsLocal)	


	Derived Fields
		MassUploadToIDMErrorMessage is a MessageField
			restricted
			"Use_IDM_for_Attachments_option_on_Finance_Enterprise_Group_is_not_enabled."



		DerivedNumberOfFilesMigrated is a DerivedField
			type is Numeric size 12
			restricted


		DerivedNumberOfFilesToMigrate is a DerivedField
			type is Numeric size 12
			restricted
















































































































































	Rule Blocks
		CallMoveAttachmentsToIDM
			initialize LocalError
			initialize LocalErrorMessage
			IDMMigrationStatus = IDMMigrationStatus.InProgress
			log untranslatable:"MassUploadToIDM_InProgress:<BusinessClassAttachmentsToIDM>"
			invoke MoveAttachmentsToIDM {BusinessClass} in background group (LocalBackgroundGroup)
				assign async action request id to LocalAsyncId
				resume on error
					LocalError          = true
					LocalErrorMessage   = error message
					log untranslatable:"BusinessClassAttachmentsToIDM:<BusinessClassAttachmentsToIDM>-<LocalErrorMessage>"
					IDMMigrationStatus  = IDMMigrationStatus.Failed

		RunPerBusinessclass
			if (BusinessClassAttachmentsToIDM.AccountAttachment)
				AccountAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with AccountAttachment
			else
			if (BusinessClassAttachmentsToIDM.BillingInvoiceAttachment)
				BillingInvoiceAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BillingInvoiceAttachment	
			else
			if (BusinessClassAttachmentsToIDM.BillingInvoiceCommentAttachment)
				BillingInvoiceCommentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BillingInvoiceCommentAttachment	
			else	
			if (BusinessClassAttachmentsToIDM.BillingInvoiceLineAttachment)
				BillingInvoiceLineAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BillingInvoiceLineAttachment	
			else	
			if (BusinessClassAttachmentsToIDM.BillingStandardCommentAttachment)
				BillingStandardCommentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BillingStandardCommentAttachment	
			else
			if (BusinessClassAttachmentsToIDM.BudgetChangeOrderComment)
				BudgetChangeOrderComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BudgetChangeOrderComment	
			else
			if (BusinessClassAttachmentsToIDM.BudgetChangeOrderLineComment)
				BudgetChangeOrderLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with BudgetChangeOrderLineComment
			else
			if (BusinessClassAttachmentsToIDM.CashPaymentFormat)
				CashPaymentFormat = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashPaymentFormat	
			else
			if (BusinessClassAttachmentsToIDM.CloseTaskDocumentation)
				CloseTaskDocumentation = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CloseTaskDocumentation
			else
			if (BusinessClassAttachmentsToIDM.ClosePeriodTaskDocumentation)
				ClosePeriodTaskDocumentation = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ClosePeriodTaskDocumentation
			else
			if (BusinessClassAttachmentsToIDM.ContractAttachment)
				ContractAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractAttachment
			else
			if (BusinessClassAttachmentsToIDM.ContractChangeOrder)
				ContractChangeOrder = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractChangeOrder
			else
			if (BusinessClassAttachmentsToIDM.ContractComment)
				ContractComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractComment
			else
			if (BusinessClassAttachmentsToIDM.ContractDeliverableComment)
				ContractDeliverableComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractDeliverableComment
			else
			if (BusinessClassAttachmentsToIDM.ContractDocument)
				ContractDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractDocument
			else
			if (BusinessClassAttachmentsToIDM.ContractLine)
				ContractLine = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractLine		
			else
			if (BusinessClassAttachmentsToIDM.ContractLineAttachment)
				ContractLineAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractLineAttachment
			else
			if (BusinessClassAttachmentsToIDM.ContractLineComment)
				ContractLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractLineComment
			else
			if (BusinessClassAttachmentsToIDM.ContractMilestoneComment)
				ContractMilestoneComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractMilestoneComment	
			else
			if (BusinessClassAttachmentsToIDM.ContractQuestion)
				ContractQuestion = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractQuestion	
			else
			if (BusinessClassAttachmentsToIDM.ContractQuestionAnswer)
				ContractQuestionAnswer = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractQuestionAnswer
			else
			if (BusinessClassAttachmentsToIDM.ContractRedlineDocument)
				ContractRedlineDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractRedlineDocument	
			else
			if (BusinessClassAttachmentsToIDM.ContractSubcontractorComment)
				ContractSubcontractorComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractSubcontractorComment	
			else
			if (BusinessClassAttachmentsToIDM.ContractSubcontractorPayment)
				ContractSubcontractorPayment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractSubcontractorPayment
			else
			if (BusinessClassAttachmentsToIDM.ContractTermAndConditionAttachment)
				ContractTermAndConditionAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractTermAndConditionAttachment
			else
			if (BusinessClassAttachmentsToIDM.ContractTermVersionTermAttachment)
				ContractTermVersionTermAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractTermVersionTermAttachment
			else
			if (BusinessClassAttachmentsToIDM.ContractVersion)
				ContractVersion = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ContractVersion																											
			else
			if (BusinessClassAttachmentsToIDM.CustodialAttachment)
				CustodialAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CustodialAttachment
			else
			if (BusinessClassAttachmentsToIDM.FinanceCompany)
				FinanceCompany = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinanceCompany
			else
			if (BusinessClassAttachmentsToIDM.FinanceResource)
				FinanceResource = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinanceResource
			else
			if (BusinessClassAttachmentsToIDM.FinanceResourceDialogue)
				FinanceResourceDialogue = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinanceResourceDialogue
			else
			if (BusinessClassAttachmentsToIDM.FinanceResourceSchedule)
				FinanceResourceSchedule = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinanceResourceSchedule
			else
			if (BusinessClassAttachmentsToIDM.FranchiseContractComment)
				FranchiseContractComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FranchiseContractComment
			else
			if (BusinessClassAttachmentsToIDM.GeneralLedgerDepartmentJournalDocument)
				GeneralLedgerDepartmentJournalDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with GeneralLedgerDepartmentJournalDocument
			else											
			if (BusinessClassAttachmentsToIDM.GeneralLedgerJournalDocument)
				GeneralLedgerJournalDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with GeneralLedgerJournalDocument
			else
            if (BusinessClassAttachmentsToIDM.GrantReportingSettings)
                GrantReportingSettings = true
                include CallMoveAttachmentsToIDM
                    replace BusinessClass with GrantReportingSettings
			else            
			if (BusinessClassAttachmentsToIDM.IntercompanyBillingDocumentAttachment)
				IntercompanyBillingDocumentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with IntercompanyBillingDocumentAttachment
			else
			if (BusinessClassAttachmentsToIDM.IntercompanyBillingDocumentHeader)
				IntercompanyBillingDocumentHeader = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with IntercompanyBillingDocumentHeader
			else
			if (BusinessClassAttachmentsToIDM.ItemAttachment)
				ItemAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ItemAttachment	
			else
			if (BusinessClassAttachmentsToIDM.ItemCommentAttachment)
				ItemCommentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ItemCommentAttachment					
			else
			if (BusinessClassAttachmentsToIDM.KitchenOrderInstruction)
				KitchenOrderInstruction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with KitchenOrderInstruction
			else            
			if (BusinessClassAttachmentsToIDM.LeaseAttachment)
				LeaseAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with LeaseAttachment
			else            
			if (BusinessClassAttachmentsToIDM.LeaseComment)
				LeaseComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with LeaseComment
			else            
			if (BusinessClassAttachmentsToIDM.LeaseInvoiceComment)
				LeaseInvoiceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with LeaseInvoiceComment
			else            
			if (BusinessClassAttachmentsToIDM.LeasePaymentDetailComment)
				LeasePaymentDetailComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with LeasePaymentDetailComment
			else        
			if (BusinessClassAttachmentsToIDM.MatchInvoiceMessageComment)
				MatchInvoiceMessageComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with MatchInvoiceMessageComment	
			else
			if (BusinessClassAttachmentsToIDM.MobileSupplyChainDeliveryEventAttachment)
				MobileSupplyChainDeliveryEventAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with MobileSupplyChainDeliveryEventAttachment
			else
			if (BusinessClassAttachmentsToIDM.PayablesInvoice)
				PayablesInvoice = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PayablesInvoice
			else    
			if (BusinessClassAttachmentsToIDM.SubleaseAttachment)
				SubleaseAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with SubleaseAttachment
			else            
			if (BusinessClassAttachmentsToIDM.SubleaseBillingInvoice)
				SubleaseBillingInvoice = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with SubleaseBillingInvoice
			else            
			if (BusinessClassAttachmentsToIDM.SubleaseComment)
				SubleaseComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with SubleaseComment
			else            
			if (BusinessClassAttachmentsToIDM.PayablesInvoiceDocument)
				PayablesInvoiceDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PayablesInvoiceDocument
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderComment)
				PurchaseOrderComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderComment
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderLineComment)
				PurchaseOrderLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderLineComment
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderReceiptComment)
				PurchaseOrderReceiptComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderReceiptComment
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderReceiptLineComment)
				PurchaseOrderReceiptLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderReceiptLineComment
			else
			if (BusinessClassAttachmentsToIDM.RequisitionComment)
				RequisitionComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with RequisitionComment
			else
			if (BusinessClassAttachmentsToIDM.RequisitionLineComment)
				RequisitionLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with RequisitionLineComment
			else
			if (BusinessClassAttachmentsToIDM.StandardCommentCode)
				StandardCommentCode = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with StandardCommentCode				
			else
			if (BusinessClassAttachmentsToIDM.ProjectAssignmentComment)
				ProjectAssignmentComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectAssignmentComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectAssignmentLaborComment)
				ProjectAssignmentLaborComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectAssignmentLaborComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectAssignmentEffortComment)
				ProjectAssignmentEffortComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectAssignmentEffortComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectComment)
				ProjectComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractComment)
				ProjectContractComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractComment	
			else
            if (BusinessClassAttachmentsToIDM.ProjectContractInvoice)
                ProjectContractInvoice = true
                include CallMoveAttachmentsToIDM
                    replace BusinessClass with ProjectContractInvoice			
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractInvoiceComment)
				ProjectContractInvoiceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractInvoiceComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractInvoiceLineComment)
				ProjectContractInvoiceLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractInvoiceLineComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractMilestoneComment)
				ProjectContractMilestoneComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractMilestoneComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectFSDeliverableComment)
				ProjectFSDeliverableComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectFSDeliverableComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectFundingSourceComment)
				ProjectFundingSourceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectFundingSourceComment				
			else
			if (BusinessClassAttachmentsToIDM.ProjectFundingSourceChangeRequest)
				ProjectFundingSourceChangeRequest = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectFundingSourceChangeRequest				
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractChangeRequest)
				ProjectContractChangeRequest = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractChangeRequest				
			else
			if (BusinessClassAttachmentsToIDM.FinanceDimension2Comment)
				FinanceDimension2Comment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinanceDimension2Comment		
			else
			if (BusinessClassAttachmentsToIDM.ProjectContractModification)
				ProjectContractModification = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectContractModification	
			else
			if (BusinessClassAttachmentsToIDM.ProjectPerformanceObligationsComment)
				ProjectPerformanceObligationsComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProjectPerformanceObligationsComment
			else
			if (BusinessClassAttachmentsToIDM.SalesRepresentativeAttachment)
				SalesRepresentativeAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with SalesRepresentativeAttachment
			else
			if (BusinessClassAttachmentsToIDM.ReceivableInvoiceAttachment)
				ReceivableInvoiceAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivableInvoiceAttachment
			else
			if (BusinessClassAttachmentsToIDM.OrderEntryCustomerAttachment)
				OrderEntryCustomerAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with OrderEntryCustomerAttachment
			else
			if (BusinessClassAttachmentsToIDM.ReceivableInvoiceBatchAttachment)
				ReceivableInvoiceBatchAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivableInvoiceBatchAttachment
			else
			if (BusinessClassAttachmentsToIDM.ReceivableOperatorAttachment)
				ReceivableOperatorAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivableOperatorAttachment
			else
			if (BusinessClassAttachmentsToIDM.ReceivablePaymentAttachment)
				ReceivablePaymentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivablePaymentAttachment
			else
			if (BusinessClassAttachmentsToIDM.ReceivablePaymentHeaderAttachment)
				ReceivablePaymentHeaderAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivablePaymentHeaderAttachment
			else
			if (BusinessClassAttachmentsToIDM.CustomerRepresentativeComment)
				CustomerRepresentativeComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CustomerRepresentativeComment
			else
			if (BusinessClassAttachmentsToIDM.CustomerRepresentativeMessage)
				CustomerRepresentativeMessage = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CustomerRepresentativeMessage
			else
			if (BusinessClassAttachmentsToIDM.CustomerBillToAttachment)
				CustomerBillToAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CustomerBillToAttachment
			else
			if (BusinessClassAttachmentsToIDM.CustomerAttachment)
				CustomerAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CustomerAttachment
			else
			if (BusinessClassAttachmentsToIDM.CreditAnalystAttachment)
				CreditAnalystAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CreditAnalystAttachment
			else
			if (BusinessClassAttachmentsToIDM.CompanyCustomerAttachment)
				CompanyCustomerAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CompanyCustomerAttachment
			else
			if (BusinessClassAttachmentsToIDM.CompanyCustomerCommentAttachment)
				CompanyCustomerCommentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CompanyCustomerCommentAttachment
			else
			if (BusinessClassAttachmentsToIDM.CompanyCustomerContactAttachment)
				CompanyCustomerContactAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CompanyCustomerContactAttachment	
			else
			if (BusinessClassAttachmentsToIDM.RecipeInstruction)
				RecipeInstruction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with RecipeInstruction
			else
			if (BusinessClassAttachmentsToIDM.ReconciliationAccountComment)
				ReconciliationAccountComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReconciliationAccountComment
			else
			if (BusinessClassAttachmentsToIDM.ReconciliationDetail)
				ReconciliationDetail = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReconciliationDetail
			else
			if (BusinessClassAttachmentsToIDM.ReconciliationDetailComment)
				ReconciliationDetailComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReconciliationDetailComment
			else
			if (BusinessClassAttachmentsToIDM.ReconciliationPeriodDetail)
				ReconciliationPeriodDetail = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReconciliationPeriodDetail
			else
			if (BusinessClassAttachmentsToIDM.RecurringJournalDocument)
				RecurringJournalDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with RecurringJournalDocument	
			else
			if (BusinessClassAttachmentsToIDM.VendorAttachment)
				VendorAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with VendorAttachment
			else
			if (BusinessClassAttachmentsToIDM.VendorDiversity)
				VendorDiversity = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with VendorDiversity
			
			else
			if (BusinessClassAttachmentsToIDM.CashAccountComment)
				CashAccountComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashAccountComment

			else
			if (BusinessClassAttachmentsToIDM.CashAccountCorrespondence)
				CashAccountCorrespondence = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashAccountCorrespondence

			else
			if (BusinessClassAttachmentsToIDM.CashAccountLockboxComment)
				CashAccountLockboxComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashAccountLockboxComment
					
			else
			if (BusinessClassAttachmentsToIDM.CashAccountResourceComment)
				CashAccountResourceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashAccountResourceComment
					
			else
			if (BusinessClassAttachmentsToIDM.CashManagementAccountDocument)
				CashManagementAccountDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashManagementAccountDocument
					
			else
			if (BusinessClassAttachmentsToIDM.FinancialInstitutionBranchContact)
				FinancialInstitutionBranchContact = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinancialInstitutionBranchContact

			else
			if (BusinessClassAttachmentsToIDM.FinancialInstitutionBranchDocument)
				FinancialInstitutionBranchDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinancialInstitutionBranchDocument
					
			else
			if (BusinessClassAttachmentsToIDM.FinancialInstitutionDocument)
				FinancialInstitutionDocument = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with FinancialInstitutionDocument
					
			else
			if (BusinessClassAttachmentsToIDM.OtherForecastTransaction)
				OtherForecastTransaction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with OtherForecastTransaction

			else
			if (BusinessClassAttachmentsToIDM.CashLedgerCashReceiptHeader)
				CashLedgerCashReceiptHeader = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashLedgerCashReceiptHeader
				
			else
			if (BusinessClassAttachmentsToIDM.CashLedgerElectronicFundsTransferTransaction)
				CashLedgerElectronicFundsTransferTransaction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashLedgerElectronicFundsTransferTransaction

			else
			if (BusinessClassAttachmentsToIDM.CashLedgerPayablesPayment)
				CashLedgerPayablesPayment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashLedgerPayablesPayment

			else
			if (BusinessClassAttachmentsToIDM.CashLedgerPayment)
				CashLedgerPayment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashLedgerPayment

			else
			if (BusinessClassAttachmentsToIDM.CashLedgerTransaction)
				CashLedgerTransaction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with CashLedgerTransaction
			else
			if (BusinessClassAttachmentsToIDM.StudentActivityBankAccount)
				StudentActivityBankAccount = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with StudentActivityBankAccount
			else
			if (BusinessClassAttachmentsToIDM.StudentActivityBankTransaction)
				StudentActivityBankTransaction = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with StudentActivityBankTransaction
			else
			if (BusinessClassAttachmentsToIDM.StudentActivityReceipt)
				StudentActivityReceipt = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with StudentActivityReceipt
			else
			if (BusinessClassAttachmentsToIDM.StudentActivityVendorInvoice)
				StudentActivityVendorInvoice = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with StudentActivityVendorInvoice
			else
			if (BusinessClassAttachmentsToIDM.ReceivableApplicationAdjustmentAttachment)
				ReceivableApplicationAdjustmentAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ReceivableApplicationAdjustmentAttachment
			
			else
			if (BusinessClassAttachmentsToIDM.POReceiptAdjustmentAndInspectionComment)
				POReceiptAdjustmentAndInspectionComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with POReceiptAdjustmentAndInspectionComment	

			else
			if (BusinessClassAttachmentsToIDM.POReceiptAdjustmentAndInspectionLineComment)
				POReceiptAdjustmentAndInspectionLineComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with POReceiptAdjustmentAndInspectionLineComment	

			else
			if (BusinessClassAttachmentsToIDM.ProcurementCardStatementTransactionComment)
				ProcurementCardStatementTransactionComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with ProcurementCardStatementTransactionComment	
			
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderInterfaceComment)
				PurchaseOrderInterfaceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderInterfaceComment	
			
			else
			if (BusinessClassAttachmentsToIDM.PurchaseOrderLineSourceComment)
				PurchaseOrderLineSourceComment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchaseOrderLineSourceComment	
			
			else
			if (BusinessClassAttachmentsToIDM.PurchasingVendorAttachment)
				PurchasingVendorAttachment = true
				include CallMoveAttachmentsToIDM
					replace BusinessClass with PurchasingVendorAttachment	

	Actions		
		Create is an Action
			
		Update is an Action
			restricted	

		Delete is a Delete Action
			restricted
	
		Purge is a Purge Action
			restricted

		
		UpdateNumberOfFiles is a Set Action 
			restricted












		MassUploadToIDM is an Instance Action
			restricted
			default label is "UploadToIDM"
			valid when (IsValidForUpload)
			Local Fields
				AsyncId						 		is an AsyncActionRequest
		        FailedIDMConnection			 		is Boolean        					

			Rule Blocks
				InvokeMoveAttachmentsToIDM
					initialize LocalError
					initialize LocalErrorMessage					
					log untranslatable:"UploadToIDM_InProgress:<BusinessClassAttachmentsToIDM>"
				    IDMMigrationStatus = IDMMigrationStatus.InProgress
					invoke MoveAttachmentsToIDM {BusinessClass} in background
						assign async action request id to AsyncId
						resume on error
							LocalError          = true
							LocalErrorMessage   = error message
							log untranslatable:"BusinessClassAttachmentsToIDM:<BusinessClassAttachmentsToIDM>-<LocalErrorMessage>"
							IDMMigrationStatus  = IDMMigrationStatus.Failed						
			Entrance Rules
				log untranslatable:"UploadToIDM_Started"
				constraint (FinanceEnterpriseGroup.FSMIDMUserIdentityActorRel exists)
					"FSM.\IDM-\UserActorOrIdentityDoesNotExist"

				invoke BackgroundTestConnection IDMConfigurationRel
					resume on error
						FailedIDMConnection = true
							
				constraint (not FailedIDMConnection)
					"UploadNotExecutedDueToIDMTestConnectionFailure.PleaseCheckIDMConnectionInIDMConfiguration"	
									
            Action Rules
				if (BusinessClassAttachmentsToIDM.AccountAttachment)
					AccountAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AccountAttachment	
				else
				if (BusinessClassAttachmentsToIDM.BillingInvoiceAttachment)
					BillingInvoiceAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BillingInvoiceAttachment	
				else
				if (BusinessClassAttachmentsToIDM.BillingInvoiceCommentAttachment)
					BillingInvoiceCommentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BillingInvoiceCommentAttachment	
				else	
				if (BusinessClassAttachmentsToIDM.BillingInvoiceLineAttachment)
					BillingInvoiceLineAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BillingInvoiceLineAttachment	
				else	
				if (BusinessClassAttachmentsToIDM.BillingStandardCommentAttachment)
					BillingStandardCommentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BillingStandardCommentAttachment	
				else
				if (BusinessClassAttachmentsToIDM.BudgetChangeOrderComment)
					BudgetChangeOrderComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BudgetChangeOrderComment	
				else
				if (BusinessClassAttachmentsToIDM.BudgetChangeOrderLineComment)
					BudgetChangeOrderLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with BudgetChangeOrderLineComment
				else
				if (BusinessClassAttachmentsToIDM.CashPaymentFormat)
					CashPaymentFormat = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashPaymentFormat	
				else
				if (BusinessClassAttachmentsToIDM.CloseTaskDocumentation)
					CloseTaskDocumentation = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CloseTaskDocumentation
				else
				if (BusinessClassAttachmentsToIDM.ClosePeriodTaskDocumentation)
					ClosePeriodTaskDocumentation = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ClosePeriodTaskDocumentation
				else
				if (BusinessClassAttachmentsToIDM.ContractAttachment)
					ContractAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractAttachment
				else
				if (BusinessClassAttachmentsToIDM.ContractChangeOrder)
					ContractChangeOrder = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractChangeOrder
				else
				if (BusinessClassAttachmentsToIDM.ContractComment)
					ContractComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractComment
				else
				if (BusinessClassAttachmentsToIDM.ContractDeliverableComment)
					ContractDeliverableComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractDeliverableComment	
				else
				if (BusinessClassAttachmentsToIDM.ContractDocument)
					ContractDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractDocument
				else
				if (BusinessClassAttachmentsToIDM.ContractLine)
					ContractLine = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractLine				
				else
				if (BusinessClassAttachmentsToIDM.ContractLineAttachment)
					ContractLineAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractLineAttachment
				else
				if (BusinessClassAttachmentsToIDM.ContractLineComment)
					ContractLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractLineComment
				else
				if (BusinessClassAttachmentsToIDM.ContractMilestoneComment)
					ContractMilestoneComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractMilestoneComment
				else
				if (BusinessClassAttachmentsToIDM.ContractQuestion)
					ContractQuestion = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractQuestion	
				else
				if (BusinessClassAttachmentsToIDM.ContractQuestionAnswer)
					ContractQuestionAnswer = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractQuestionAnswer
				else
				if (BusinessClassAttachmentsToIDM.ContractRedlineDocument)
					ContractRedlineDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractRedlineDocument
				else
				if (BusinessClassAttachmentsToIDM.ContractSubcontractorComment)
					ContractSubcontractorComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractSubcontractorComment	
				else
				if (BusinessClassAttachmentsToIDM.ContractSubcontractorPayment)
					ContractSubcontractorPayment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractSubcontractorPayment
				else
				if (BusinessClassAttachmentsToIDM.ContractTermAndConditionAttachment)
					ContractTermAndConditionAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractTermAndConditionAttachment
				else
				if (BusinessClassAttachmentsToIDM.ContractTermVersionTermAttachment)
					ContractTermVersionTermAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractTermVersionTermAttachment
				else
				if (BusinessClassAttachmentsToIDM.ContractVersion)
					ContractVersion = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ContractVersion																														
				else
				if (BusinessClassAttachmentsToIDM.CustodialAttachment)
					CustodialAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CustodialAttachment
				else
				if (BusinessClassAttachmentsToIDM.FinanceCompany)
            		FinanceCompany = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinanceCompany
				else
				if (BusinessClassAttachmentsToIDM.FinanceResource)
            		FinanceResource = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinanceResource
				else
				if (BusinessClassAttachmentsToIDM.FinanceResourceDialogue)
            		FinanceResourceDialogue = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinanceResourceDialogue
				else
				if (BusinessClassAttachmentsToIDM.FinanceResourceSchedule)
            		FinanceResourceSchedule = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinanceResourceSchedule
				else
				if (BusinessClassAttachmentsToIDM.FranchiseContractComment)
            		FranchiseContractComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FranchiseContractComment
				else
				if (BusinessClassAttachmentsToIDM.GeneralLedgerDepartmentJournalDocument)
					GeneralLedgerDepartmentJournalDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with GeneralLedgerDepartmentJournalDocument
				else											
            	if (BusinessClassAttachmentsToIDM.GeneralLedgerJournalDocument)
            		GeneralLedgerJournalDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with GeneralLedgerJournalDocument
				else
                if (BusinessClassAttachmentsToIDM.GrantReportingSettings)
                    GrantReportingSettings = true
                    include InvokeMoveAttachmentsToIDM
                        replace BusinessClass with GrantReportingSettings
				else            
            	if (BusinessClassAttachmentsToIDM.IntercompanyBillingDocumentAttachment)
            		IntercompanyBillingDocumentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with IntercompanyBillingDocumentAttachment
				else
				if (BusinessClassAttachmentsToIDM.IntercompanyBillingDocumentHeader)
					IntercompanyBillingDocumentHeader = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with IntercompanyBillingDocumentHeader
				else
				if (BusinessClassAttachmentsToIDM.ItemAttachment)
					ItemAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ItemAttachment
				else
				if (BusinessClassAttachmentsToIDM.ItemCommentAttachment)
					ItemCommentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ItemCommentAttachment								
				else            
				if (BusinessClassAttachmentsToIDM.KitchenOrderInstruction)
					KitchenOrderInstruction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with KitchenOrderInstruction
				else
            	if (BusinessClassAttachmentsToIDM.LeaseAttachment)
            		LeaseAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with LeaseAttachment
				else            
            	if (BusinessClassAttachmentsToIDM.LeaseComment)
            		LeaseComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with LeaseComment
				else            
            	if (BusinessClassAttachmentsToIDM.LeaseInvoiceComment)
            		LeaseInvoiceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with LeaseInvoiceComment
				else            
            	if (BusinessClassAttachmentsToIDM.LeasePaymentDetailComment)
            		LeasePaymentDetailComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with LeasePaymentDetailComment
				else   
				if (BusinessClassAttachmentsToIDM.MatchInvoiceMessageComment)
					MatchInvoiceMessageComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with MatchInvoiceMessageComment
				else
				if (BusinessClassAttachmentsToIDM.MobileSupplyChainDeliveryEventAttachment)
					MobileSupplyChainDeliveryEventAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with MobileSupplyChainDeliveryEventAttachment
				else         
            	if (BusinessClassAttachmentsToIDM.PayablesInvoice)
            		PayablesInvoice = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PayablesInvoice
				else         
            	if (BusinessClassAttachmentsToIDM.SubleaseAttachment)
            		SubleaseAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with SubleaseAttachment
				else            
            	if (BusinessClassAttachmentsToIDM.SubleaseBillingInvoice)
            		SubleaseBillingInvoice = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with SubleaseBillingInvoice
				else            
            	if (BusinessClassAttachmentsToIDM.SubleaseComment)
            		SubleaseComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with SubleaseComment
				else            
            	if (BusinessClassAttachmentsToIDM.PayablesInvoiceDocument)
            		PayablesInvoiceDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PayablesInvoiceDocument
				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderComment)
					PurchaseOrderComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderComment
				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderLineComment)
					PurchaseOrderLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderLineComment
				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderReceiptComment)
					PurchaseOrderReceiptComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderReceiptComment
				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderReceiptLineComment)
					PurchaseOrderReceiptLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderReceiptLineComment
				else
				if (BusinessClassAttachmentsToIDM.RequisitionComment)
					RequisitionComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with RequisitionComment
				else
				if (BusinessClassAttachmentsToIDM.RequisitionLineComment)
					RequisitionLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with RequisitionLineComment
				else
				if (BusinessClassAttachmentsToIDM.StandardCommentCode)
					StandardCommentCode = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with StandardCommentCode				
				else
				if (BusinessClassAttachmentsToIDM.ProjectAssignmentComment)
					ProjectAssignmentComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectAssignmentComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectAssignmentLaborComment)
					ProjectAssignmentLaborComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectAssignmentLaborComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectAssignmentEffortComment)
					ProjectAssignmentEffortComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectAssignmentEffortComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectComment)
					ProjectComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractComment)
					ProjectContractComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractComment	
				else
                if (BusinessClassAttachmentsToIDM.ProjectContractInvoice)
                    ProjectContractInvoice = true
                    include InvokeMoveAttachmentsToIDM
                        replace BusinessClass with ProjectContractInvoice			
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractInvoiceComment)
					ProjectContractInvoiceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractInvoiceComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractInvoiceLineComment)
					ProjectContractInvoiceLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractInvoiceLineComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractMilestoneComment)
					ProjectContractMilestoneComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractMilestoneComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectFSDeliverableComment)
					ProjectFSDeliverableComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectFSDeliverableComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectFundingSourceComment)
					ProjectFundingSourceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectFundingSourceComment				
				else
				if (BusinessClassAttachmentsToIDM.ProjectFundingSourceChangeRequest)
					ProjectFundingSourceChangeRequest = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectFundingSourceChangeRequest				
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractChangeRequest)
					ProjectContractChangeRequest = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractChangeRequest				
				else
				if (BusinessClassAttachmentsToIDM.FinanceDimension2Comment)
					FinanceDimension2Comment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinanceDimension2Comment		
				else
				if (BusinessClassAttachmentsToIDM.ProjectContractModification)
					ProjectContractModification = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectContractModification	
				else
				if (BusinessClassAttachmentsToIDM.ProjectPerformanceObligationsComment)
					ProjectPerformanceObligationsComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProjectPerformanceObligationsComment
				else
				if (BusinessClassAttachmentsToIDM.SalesRepresentativeAttachment)
					SalesRepresentativeAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with SalesRepresentativeAttachment
				else
				if (BusinessClassAttachmentsToIDM.ReceivableInvoiceAttachment)
					ReceivableInvoiceAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivableInvoiceAttachment
				else
				if (BusinessClassAttachmentsToIDM.OrderEntryCustomerAttachment)
					OrderEntryCustomerAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with OrderEntryCustomerAttachment
				else
				if (BusinessClassAttachmentsToIDM.ReceivableInvoiceBatchAttachment)
					ReceivableInvoiceBatchAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivableInvoiceBatchAttachment
				else
				if (BusinessClassAttachmentsToIDM.ReceivableOperatorAttachment)
					ReceivableOperatorAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivableOperatorAttachment
				else
				if (BusinessClassAttachmentsToIDM.ReceivablePaymentAttachment)
					ReceivablePaymentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivablePaymentAttachment
				else
				if (BusinessClassAttachmentsToIDM.ReceivablePaymentHeaderAttachment)
					ReceivablePaymentHeaderAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivablePaymentHeaderAttachment
				else
				if (BusinessClassAttachmentsToIDM.CustomerRepresentativeComment)
					CustomerRepresentativeComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CustomerRepresentativeComment
				else
				if (BusinessClassAttachmentsToIDM.CustomerRepresentativeMessage)
					CustomerRepresentativeMessage = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CustomerRepresentativeMessage
				else
				if (BusinessClassAttachmentsToIDM.CustomerBillToAttachment)
					CustomerBillToAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CustomerBillToAttachment
				else
				if (BusinessClassAttachmentsToIDM.CustomerAttachment)
					CustomerAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CustomerAttachment
				else
				if (BusinessClassAttachmentsToIDM.CreditAnalystAttachment)
					CreditAnalystAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CreditAnalystAttachment
				else
				if (BusinessClassAttachmentsToIDM.CompanyCustomerAttachment)
					CompanyCustomerAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CompanyCustomerAttachment
				else
				if (BusinessClassAttachmentsToIDM.CompanyCustomerCommentAttachment)
					CompanyCustomerCommentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CompanyCustomerCommentAttachment
				else
				if (BusinessClassAttachmentsToIDM.CompanyCustomerContactAttachment)
					CompanyCustomerContactAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CompanyCustomerContactAttachment 
				else
				if (BusinessClassAttachmentsToIDM.Asset)
					Asset = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with Asset
				else
				if (BusinessClassAttachmentsToIDM.AssetAttachment)
					AssetAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AssetAttachment
				else
				if (BusinessClassAttachmentsToIDM.AssetComment)
					AssetComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AssetComment
				else
				if (BusinessClassAttachmentsToIDM.AssetCommentImport)
					AssetCommentImport = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AssetCommentImport
				else
				if (BusinessClassAttachmentsToIDM.AssetImpairment)
					AssetImpairment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AssetImpairment
				else
				if (BusinessClassAttachmentsToIDM.AssetLocation)
					AssetLocation = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with AssetLocation
				else
				if (BusinessClassAttachmentsToIDM.RecipeInstruction)
					RecipeInstruction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with RecipeInstruction
				else
				if (BusinessClassAttachmentsToIDM.ReconciliationAccountComment)
					ReconciliationAccountComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReconciliationAccountComment
				else
				if (BusinessClassAttachmentsToIDM.ReconciliationDetail)
					ReconciliationDetail = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReconciliationDetail
				else
				if (BusinessClassAttachmentsToIDM.ReconciliationDetailComment)
					ReconciliationDetailComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReconciliationDetailComment
				else
				if (BusinessClassAttachmentsToIDM.ReconciliationPeriodDetail)
					ReconciliationPeriodDetail = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReconciliationPeriodDetail
				else
				if (BusinessClassAttachmentsToIDM.RecurringJournalDocument)
					RecurringJournalDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with RecurringJournalDocument	
				else
				if (BusinessClassAttachmentsToIDM.VendorAttachment)
					VendorAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with VendorAttachment
				else
				if (BusinessClassAttachmentsToIDM.VendorDiversity)
					VendorDiversity = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with VendorDiversity		
				else
				if (BusinessClassAttachmentsToIDM.CashAccountComment)
					CashAccountComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashAccountComment
				else
				if (BusinessClassAttachmentsToIDM.CashAccountCorrespondence)
					CashAccountCorrespondence = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashAccountCorrespondence

				else
				if (BusinessClassAttachmentsToIDM.CashAccountLockboxComment)
					CashAccountLockboxComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashAccountLockboxComment
				else
				if (BusinessClassAttachmentsToIDM.StudentActivityBankAccount)
					StudentActivityBankAccount = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with StudentActivityBankAccount
				else
				if (BusinessClassAttachmentsToIDM.StudentActivityBankTransaction)
					StudentActivityBankTransaction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with StudentActivityBankTransaction
				else
				if (BusinessClassAttachmentsToIDM.StudentActivityReceipt)
					StudentActivityReceipt = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with StudentActivityReceipt
				else
				if (BusinessClassAttachmentsToIDM.StudentActivityVendorInvoice)
					StudentActivityVendorInvoice = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with StudentActivityVendorInvoice					
				else
				if (BusinessClassAttachmentsToIDM.CashAccountResourceComment)
					CashAccountResourceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashAccountResourceComment
						
				else
				if (BusinessClassAttachmentsToIDM.CashManagementAccountDocument)
					CashManagementAccountDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashManagementAccountDocument
						
				else
				if (BusinessClassAttachmentsToIDM.FinancialInstitutionBranchContact)
					FinancialInstitutionBranchContact = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinancialInstitutionBranchContact

				else
				if (BusinessClassAttachmentsToIDM.FinancialInstitutionBranchDocument)
					FinancialInstitutionBranchDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinancialInstitutionBranchDocument
						
				else
				if (BusinessClassAttachmentsToIDM.FinancialInstitutionDocument)
					FinancialInstitutionDocument = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with FinancialInstitutionDocument
						
				else
				if (BusinessClassAttachmentsToIDM.OtherForecastTransaction)
					OtherForecastTransaction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with OtherForecastTransaction

				else
				if (BusinessClassAttachmentsToIDM.CashLedgerCashReceiptHeader)
					CashLedgerCashReceiptHeader = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashLedgerCashReceiptHeader

				else
				if (BusinessClassAttachmentsToIDM.CashLedgerElectronicFundsTransferTransaction)
					CashLedgerElectronicFundsTransferTransaction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashLedgerElectronicFundsTransferTransaction

				else
				if (BusinessClassAttachmentsToIDM.CashLedgerPayablesPayment)
					CashLedgerPayablesPayment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashLedgerPayablesPayment

				else
				if (BusinessClassAttachmentsToIDM.CashLedgerPayment)
					CashLedgerPayment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashLedgerPayment

				else
				if (BusinessClassAttachmentsToIDM.CashLedgerTransaction)
					CashLedgerTransaction = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with CashLedgerTransaction
				
				else
				if (BusinessClassAttachmentsToIDM.ReceivableApplicationAdjustmentAttachment)
					ReceivableApplicationAdjustmentAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ReceivableApplicationAdjustmentAttachment

				else
				if (BusinessClassAttachmentsToIDM.POReceiptAdjustmentAndInspectionComment)
					POReceiptAdjustmentAndInspectionComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with POReceiptAdjustmentAndInspectionComment				

				else
				if (BusinessClassAttachmentsToIDM.POReceiptAdjustmentAndInspectionLineComment)
					POReceiptAdjustmentAndInspectionLineComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with POReceiptAdjustmentAndInspectionLineComment

				else
				if (BusinessClassAttachmentsToIDM.ProcurementCardStatementTransactionComment)
					ProcurementCardStatementTransactionComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with ProcurementCardStatementTransactionComment

				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderInterfaceComment)
					PurchaseOrderInterfaceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderInterfaceComment

				else
				if (BusinessClassAttachmentsToIDM.PurchaseOrderLineSourceComment)
					PurchaseOrderLineSourceComment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchaseOrderLineSourceComment

				else
				if (BusinessClassAttachmentsToIDM.PurchasingVendorAttachment)
					PurchasingVendorAttachment = true
					include InvokeMoveAttachmentsToIDM
						replace BusinessClass with PurchasingVendorAttachment

				if (not LocalError)
					invoke UpdateIDMMigrationStatus in background 
						run after AsyncId
						

		MassUploadToIDMSet is a Set Action
			valid when (IsValidForMassUpload)
			default label is "MassUploadToIDM"
		
			Instance Selection
				where (FinanceEnterpriseGroup.EnableIDMForAttachments)

			Local Fields
				FailedIDMConnection			 		is Boolean 

			Action Rules
				Set Rules
					Entrance Rules
						log untranslatable:"MassUploadToIDM_Started"

					Exit Rules
						log untranslatable:"MassUploadToIDM_Completed"

				Instance Rules
					LocalBackgroundGroup  = FinanceEnterpriseGroup + "-" + BusinessClassAttachmentsToIDM 

					include RunPerBusinessclass

					if (not LocalError)
						invoke UpdateIDMMigrationStatus in background group (LocalBackgroundGroup)
							run after LocalAsyncId				


		UpdateIDMMigrationStatus is an Instance Action
			restricted
			Action Rules
				IDMMigrationDate   		   = current timestamp 							



				if (FailedAttachmentExists)
					IDMMigrationStatus     = IDMMigrationStatus.Incomplete	
					log untranslatable:"MassUploadToIDM_Incomplete:_Busclass=<BusinessClassAttachmentsToIDM>"
				else
					IDMMigrationStatus 	   = IDMMigrationStatus.Completed
					log untranslatable:"MassUploadToIDM_Completed:_Busclass=<BusinessClassAttachmentsToIDM>"
