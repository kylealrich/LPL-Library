ContractRebateQualifierItem is a BusinessClass
    owned by po
    prefix is CRQI

    Ontology
    	symbolic key is ContractRebateQualifierItem    
    		    	
    Persistent Fields
 		ItemNumber							is an Item
 		UseThisItemForQualificationPurposes	is Boolean
    
	Transient Fields
		TransientTransactionAmount			is a CurrencyAmount
		TransientExchangeDate				is an ExchangeDate
		TransientFromCurrency				is a FromCurrency
		TransientContextToCurrency			is a ToCurrency
		TransientCurrencyTable				is a CurrencyTable
				
    Local Fields
    	LocalRebateContract 					is Numeric size 15
    	LocalManufacturerContract				is Numeric size 15
    	LocalInvoiceDte							is Date
    	LocalCompany							is like Company
        LocalContractRebateType					is AlphaUpper size 25
		LocalContractRebateDue					is a ContractRebateDue
		MultipleUpdatesForAnInvoiceLine			is Boolean
		LocalHasContractOnRebate				is Boolean
		LocalItemUsedForQualification			is Boolean
		LocalContractCurrencyExchange			is a CurrencyExchange
		LocalInvoiceCurrencyCode				is a Currency
		LocalInvoiceCurrencyExchangeRate		is Decimal 14.7
		LocalCurrencyUnitCost					is an InternationalCost
		LocalMatchedQuantity					is like Quantity
		LocalInvoiceDate						is Date
		LocalCurrencyTable						is like CurrencyTable
		LocalPayablesCompany					is like PayablesCompany
		LocalPayablesInvoice					is like PayablesInvoice
		LocalPurchaseOrder						is like PurchaseOrder
		LocalPurchaseOrderLine					is like PurchaseOrderLine
		LocalPayablesInvoiceDetail				is like PayablesInvoiceDetail
		LocalContractRebateDueInvoiceLine		is like ContractRebateDueInvoiceLine
		LocalContractLine                       is like ContractLine
		LocalBasisContractRebateDue				is Date
	
	Derived Fields
		DerivedCurrencyUnitCost is a DerivedField
			type is like InternationalCost
			restricted
			
			TransientTransactionAmount 		= (LocalCurrencyUnitCost * LocalMatchedQuantity)
			TransientFromCurrency			= Contract.CurrencyCode
			TransientExchangeDate			= LocalInvoiceDate
			TransientCurrencyTable			= LocalCurrencyTable
			
			if (TransientFromCurrency		!= LocalInvoiceCurrencyCode)
				LocalContractCurrencyExchange.ToCurrency			= LocalInvoiceCurrencyCode
				LocalContractCurrencyExchange.EnteredCurrencyRate	= LocalInvoiceCurrencyExchangeRate
				LocalContractCurrencyExchange.EnteredCurrencyAmount	= 0
				return (LocalContractCurrencyExchange.OutputCurrencyAmount / LocalMatchedQuantity)
			else
				return LocalCurrencyUnitCost
				
	Conditions
		ItemUsedForQualification
			restricted
			when (UseThisItemForQualificationPurposes = true)
		RebateEligibleContract
			restricted
			when (Contract.ContractStatus != 1 
			and   Contract.ContractStatus != 7 
			and   Contract.ContractStatus !=10) 
		
		ContractNotClosed
			restricted
			when (Contract.ContractStatus !=10) 

		QualifierItemNotOnAnotherQualifierForThisRebate
			restricted
			when (!ContractRebateQualifierItemsAcrossQualifiersRel exists)
						
		NotSupplementalRebateAndCanAmend
			when (!ContractRebateType.RebateType.SupplementalRebate
			and   Contract.CanAmend)
			
    Relations
		ByContracts is a ContractRebateQualifierItem set      
    
		RebateItemContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup 	= ContractGroup
				related.Contract      	= ContractRebateQualifierItem.RebateContract
				related.ContractLine  	= ContractRebateQualifierItem.RebateContractLine
				
		ContractRebateQualifierItemRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses symbolic key
				related.ContractGroup 			= ContractGroup
				related.Contract    			= Contract
				related.ContractRebateType		= ContractRebateType				
				related.ContractRebate			= blank
				related.ContractRebateQualifier = ContractRebateQualifier
            Instance Selection
            	where (related.ContractRebateQualifierItem.RebateContract = LocalRebateContract)
    
		ContractRebateQualifierItemsAcrossQualifiersRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses ByItem
				related.ContractGroup 									= ContractGroup
				related.ContractRebateQualifierItem.RebateContract		= ContractRebateQualifierItem.RebateContract
				related.ContractRebateQualifierItem.RebateContractLine	= ContractRebateQualifierItem.RebateContractLine
				related.ItemNumber										= ItemNumber
				related.Contract    									= Contract
				related.ContractRebateType								= ContractRebateType
				related.ContractRebate									= blank
            Instance Selection
            	where (related.UseThisItemForQualificationPurposes)
    
		RebateQualifierContractsByContractRel
			one-to-many relation to RebateQualifierContract 
			Field Mapping uses symbolic key
				related.ContractGroup			    = ContractGroup
				related.Contract					= Contract
				related.ContractRebateType			= ContractRebateType
				related.ContractRebate				= blank
				related.ContractRebateQualifier		= ContractRebateQualifier
			Instance Selection
				where (related.OriginalContractNumber		= LocalManufacturerContract)

		RebateQualifierContractRel
			one-to-many relation to RebateQualifierContract 
			Field Mapping uses ByOriginalContract
				related.ContractGroup			    = ContractGroup
				related.OriginalContractNumber		= ContractRebateQualifierItem.RebateContract
				related.Contract					= Contract
				related.ContractRebateType			= ContractRebateType
				related.ContractRebate				= blank
				related.ContractRebateQualifier		= ContractRebateQualifier

		ContractRebateDuesRel
			one-to-many relation to ContractRebateDue
			Field Mapping uses symbolic key
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractRebateType		= ContractRebateType
				related.ContractRebate			= blank
			Instance Selection
				where (related.ContractRebateDue	>= LocalInvoiceDte)
				
		ContractRebateDuesReverseRel
			one-to-many relation to ContractRebateDue
			Field Mapping uses symbolic key
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractRebateType		= ContractRebateType
				related.ContractRebate			= blank
			Instance Selection
				where (related.ContractRebateDue	< LocalInvoiceDte)
				
		ContractRebateDueInvoiceLineRel
			one-to-one relation to ContractRebateDueInvoiceLine
			Field Mapping uses symbolic key
				related.ContractGroup										= ContractGroup
				related.Contract											= Contract
				related.ContractRebateType									= ContractRebateType
				related.ContractRebate										= blank
				related.ContractRebateDue 									= LocalContractRebateDue
				related.ContractRebateQualifier								= ContractRebateQualifier
				related.Company												= LocalPayablesCompany
				related.PayablesInvoice										= LocalPayablesInvoice
				related.PurchaseOrder										= LocalPurchaseOrder
				related.PurchaseOrderLine									= LocalPurchaseOrderLine
				related.ContractLine                                        = LocalContractLine
				related.ContractRebateDueInvoiceLine						= LocalContractRebateDueInvoiceLine
	
		SupplementalContractRebateDueInvoiceLineRel
			one-to-one relation to ContractRebateDueInvoiceLine
			Field Mapping uses symbolic key
				related.ContractGroup										= ContractGroup
				related.Contract											= Contract
				related.ContractRebateType									= LocalContractRebateType
				related.ContractRebate										= blank
				related.ContractRebateDue 									= LocalContractRebateDue
				related.ContractRebateQualifier								= ContractRebateQualifier
				related.Company												= LocalPayablesCompany
				related.PayablesInvoice										= LocalPayablesInvoice
				related.PurchaseOrder										= LocalPurchaseOrder
				related.PurchaseOrderLine									= LocalPurchaseOrderLine
				related.ContractLine                                        = LocalContractLine
				related.ContractRebateDueInvoiceLine						= LocalContractRebateDueInvoiceLine
							
		PayablesInvoiceDetailForChargebackRel
			one-to-one relation to PayablesInvoiceDetail
			Field Mapping uses symbolic key
				related.Company								= LocalCompany
				related.PayablesInvoice						= LocalPayablesInvoice
				related.PurchaseOrder						= LocalPurchaseOrder
				related.PurchaseOrderLine					= LocalPurchaseOrderLine
				related.Contract							= ContractRebateQualifierItem.RebateContract
				related.ContractLine						= ContractRebateQualifierItem.RebateContractLine
				related.PayablesInvoiceDetail               = LocalPayablesInvoiceDetail

		ContractRebateDueInvoiceLinesByQualifierRel
			one-to-many relation to ContractRebateDueInvoiceLine
			Field Mapping uses ByInvoiceLine
				related.Company							= LocalPayablesCompany
				related.PayablesInvoice					= LocalPayablesInvoice
				related.PurchaseOrder					= LocalPurchaseOrder
				related.PurchaseOrderLine				= LocalPurchaseOrderLine
				related.ContractRebateDueInvoiceLine	= LocalContractRebateDueInvoiceLine
				related.ContractGroup					= ContractGroup
				related.Contract						= Contract
				related.ContractLine                    = LocalContractLine  
				related.ContractRebateType				= ContractRebateType
				related.ContractRebateDue				= LocalContractRebateDue

		SupplementalRebatesRel
			one-to-many relation to ContractRebate
			Field Mapping uses BySupplementalBasisRebate
				related.ContractGroup										= ContractGroup
				related.Contract											= Contract
				related.SupplementalBasisRebate.ContractRebateType			= ContractRebateType
				related.SupplementalBasisRebate.ContractRebate				= blank
		
		ContractRebateDuesForSupplementalRebateRel
			one-to-many relation to ContractRebateDue
			Field Mapping uses symbolic key
				related.ContractGroup										= ContractGroup
				related.Contract											= Contract
				related.ContractRebateType									= LocalContractRebateType
			Instance Selection
				where (related.ContractRebateDue		>= LocalBasisContractRebateDue)
	
	Sets
		ByItem
			duplicates	
			indexed		
			Sort Order
				ContractGroup
				ContractRebateQualifierItem.RebateContract
				ContractRebateQualifierItem.RebateContractLine
				ItemNumber
				Contract
				ContractRebateType
				ContractRebate
				ContractRebateQualifier

		ByItemNumber
			duplicates
			indexed			
			Sort Order
				ItemNumber
				ContractGroup
				Contract
				ContractRebate
				ContractRebateQualifier
				
		ByRebateItem
			duplicates
			Sort Order
				ContractGroup
				Contract
				ContractRebateType
				ItemNumber
				
		ByQualifierItemFlag
			duplicates
			Sort Order
				ContractGroup
				Contract
				ContractRebateType
				ContractRebate
				ContractRebateQualifier
				UseThisItemForQualificationPurposes
				
	Field Rules
			
	Rule Blocks

		RebateDueDateCheck
			LocalInvoiceDte				= ParameterInvoiceDte
			if (ContractRebateDuesRel exists)
				LocalContractRebateDue		= first ContractRebateDuesRel.ContractRebateDue
			else
				LocalContractRebateDue		= last ContractRebateDuesReverseRel.ContractRebateDue
		
		LoadLocalFields		
			LocalPayablesCompany							= ParameterPayablesCompany
			LocalPayablesInvoice							= ParameterPayablesInvoice
			LocalPurchaseOrder								= ParameterPurchaseOrder
			LocalPurchaseOrderLine							= ParameterPurchaseOrderLine
			if (ParameterPurchaseOrderLine !entered) 
				LocalContractLine                      		= ParameterLineNbr
			LocalPayablesInvoiceDetail						= ParameterPayablesInvoiceDetail
			LocalContractRebateDueInvoiceLine				= ParameterPayablesInvoiceDetail
			if (!ContractRebateDueInvoiceLinesByQualifierRel exists
			or   ContractRebateQualifier			= first ContractRebateDueInvoiceLinesByQualifierRel.ContractRebateQualifier)
				MultipleUpdatesForAnInvoiceLine	= false
			else
				MultipleUpdatesForAnInvoiceLine = true
		
		BuildContractRebateDueInvoiceLines
			LocalMatchedQuantity					= ParameterMatchedQty
			LocalInvoiceCurrencyCode				= ParameterCurrencyCode
			LocalInvoiceCurrencyExchangeRate		= ParameterExchangeRate
			LocalInvoiceDate						= ParameterInvoiceDte
			LocalCurrencyTable						= ParameterCurrencyTable
			
			invoke Update ContractRebateDueInvoiceLineRel
				invoked.HasContractOnRebate			= LocalHasContractOnRebate
				invoked.ItemUsedForQualification	= LocalItemUsedForQualification
				invoked.ManufacturerUnitCst			= DerivedCurrencyUnitCost
				invoked.MatchedQty  				= ParameterMatchedQty
				invoked.InvoiceDte    				= ParameterInvoiceDte
				invoked.CmContract					= ParameterCmContract
				invoked.ProcureGroup				= ParameterProcureGroup
				invoked.MfgContract					= ParameterMfgContract
				invoked.Invoice						= ParameterInvoice
				invoked.Vendor						= ParameterVendor
				invoked.Location					= ParameterLocation
				invoked.ManufCode					= ParameterManufCode
				invoked.ManufDivision				= ParameterManufDivision
				invoked.MultipleQualifierUpdate		= MultipleUpdatesForAnInvoiceLine
				initialize invoked.InvoiceAmount
				invoked.SupplierRebate				= false
				invoked.InvoiceStatus				= ParameterInvoiceStatus
				invoked.IsForQualifierItem			= true
				invoked.QualifierItemCategory		= 5
    			invoked.CommCodes					= ParameterCommCodes
    			invoked.MajorPurchasingClass		= ParameterPurchMajorClass
    			invoked.MinorPurchasingClass		= ParameterPurchMinorClass
    			invoked.UNSPSCSegment				= ParameterUNSPSCSegment
    			invoked.UNSPSCFamily				= ParameterUNSPSCFamily
    			invoked.UNSPSCClass					= ParameterUNSPSCClass
    			invoked.UNSPSCCommodity				= ParameterUNSPSCCommodity
				if (ContractRebateType.RebateType.SupplementalRebate)
					invoked.IsForSupplementalRebate	= true
				else
					invoked.IsForSupplementalRebate = false			

		BuildContractRebateDueInvoiceLinesForSupplementalRebate
			LocalMatchedQuantity					= ParameterMatchedQty
			LocalInvoiceCurrencyCode				= ParameterCurrencyCode
			LocalInvoiceCurrencyExchangeRate		= ParameterExchangeRate
			LocalInvoiceDate						= ParameterInvoiceDte
			LocalCurrencyTable						= ParameterCurrencyTable

			invoke Update SupplementalContractRebateDueInvoiceLineRel
				invoked.HasContractOnRebate			= LocalHasContractOnRebate
				invoked.ItemUsedForQualification	= LocalItemUsedForQualification
				invoked.ManufacturerUnitCst			= DerivedCurrencyUnitCost
				invoked.MatchedQty  				= ParameterMatchedQty
				invoked.InvoiceDte    				= ParameterInvoiceDte
				invoked.CmContract					= ParameterCmContract
				invoked.ProcureGroup				= ParameterProcureGroup
				invoked.MfgContract					= ParameterMfgContract
				invoked.Location					= ParameterLocation
				invoked.ManufCode					= ParameterManufCode
				invoked.ManufDivision				= ParameterManufDivision
				invoked.MultipleQualifierUpdate		= MultipleUpdatesForAnInvoiceLine
				invoked.InvoiceAmount				= 0
				invoked.SupplierRebate				= false
				invoked.InvoiceStatus				= ParameterInvoiceStatus
				invoked.IsForQualifierItem			= true
				invoked.QualifierItemCategory		= 5
    			invoked.CommCodes					= ParameterCommCodes
    			invoked.MajorPurchasingClass		= ParameterPurchMajorClass
    			invoked.MinorPurchasingClass		= ParameterPurchMinorClass
    			invoked.UNSPSCSegment				= ParameterUNSPSCSegment
    			invoked.UNSPSCFamily				= ParameterUNSPSCFamily
    			invoked.UNSPSCClass					= ParameterUNSPSCClass
    			invoked.UNSPSCCommodity				= ParameterUNSPSCCommodity
				if (ContractRebateType.RebateType.SupplementalRebate)
					invoked.IsForSupplementalRebate	= true
				else
					invoked.IsForSupplementalRebate = false			
						
	Actions
		Create is a Create Action
			valid when (Contract.CanAmend)
			restricted
			Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToAddRebateQualifierItems"
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToAddRebateQualifierItems"
    		Exit Rules
				if (ContractRebate.TotalExpectedAmount entered)
	    			invoke SetQualifierChangedFlagToYes ContractRebate		
        			
		Update is an Update Action
			restricted
			Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToModifyRebateQualifierItems"   	
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToModifyRebateQualifierItems"
		
    	UpdateContractRebateDueInvoiceLine	is an Instance Action
    		restricted
    		Parameters
		    	ParameterManufacturerContract		is Numeric size 15
		    	ParameterInvoiceDte					is Date
		    	ParameterCompany					is a PurchasingCompany
		    	ParameterVendor						is like Vendor
		    	ParameterInvoice 					is AlphaUpper size 22
		    	ParameterSuffix						is Numeric size 3
		        ParameterPoNumber  					is a PurchaseOrder
		        ParameterLineNbr   					is Numeric size 6
    			ParameterManufacturerUnitCost	    is an InternationalCost
    			ParameterMatchUnitCost				is an InternationalCost
    			ParameterMatchedQty					is Decimal size 13.4
    			ParameterCmContract					is Numeric size 15
    			ParameterProcureGroup				is a ProcurementGroup
    			ParameterMfgContract				is Numeric size 15
    			ParameterLocation					is AlphaUpper size 5
    			ParameterManufCode					is AlphaUpper size 4
    			ParameterManufDivision				is AlphaUpper size 4
    			ParameterEntUnitCst					is an InternationalCost
    			ParameterServiceTypeContract		is Boolean
    			ParameterPoDate						is Date
    			ParameterVendorReturn				is Boolean
    			ParameterCurrencyCode				is a Currency
    			ParameterExchangeRate				is Decimal 14.7
    			ParameterCurrencyTable				is like CurrencyTable
    			ParameterPurchFrLocation			is like VendorLocation
				ParameterInvoiceStatus				is Numeric size 1
					States 
						Released						value is 0
						Unreleased						value is 1
				ParameterPayablesCompany			is like PayablesCompany
				ParameterPayablesInvoice			is like PayablesInvoice
				ParameterPurchaseOrder				is like PurchaseOrder
				ParameterPurchaseOrderLine			is like PurchaseOrderLine
				ParameterPayablesInvoiceDetail		is like PayablesInvoiceDetail
    			ParameterCommCodes					is Alpha size 35
    			ParameterPurchMajorClass			is AlphaUpper size 4
    			ParameterPurchMinorClass			is AlphaUpper size 4
    			ParameterUNSPSCSegment				is AlphaUpper size 2
    			ParameterUNSPSCFamily				is AlphaUpper size 2
    			ParameterUNSPSCClass				is AlphaUpper size 2
    			ParameterUNSPSCCommodity			is AlphaUpper size 2
										    			
    		Action Rules
    			LocalManufacturerContract			= ParameterManufacturerContract
				if (RebateQualifierContractsByContractRel	exists)
					if (ContractRebateQualifier.PurchaseType.TargetedPurchases)
						if (ParameterInvoiceDte		>= ContractRebateQualifier.TargetedPurchasesFromDate
						and ParameterInvoiceDte		<= ContractRebateQualifier.TargetedPurchasesToDate)
							include RebateDueDateCheck
							LocalHasContractOnRebate			= true
							if (UseThisItemForQualificationPurposes)
								LocalItemUsedForQualification	= true
							else
								LocalItemUsedForQualification	= false
							include LoadLocalFields
							
							if ((ParameterMatchedQty				>= 0
							and  ParameterEntUnitCst				>= 0)
							or  (ParameterMatchedQty				< 0
							and  ParameterSuffix					= 111
							and  PayablesInvoiceDetailForChargebackRel			exists
							and  ParameterEntUnitCst				= PayablesInvoiceDetailForChargebackRel.MatchUnitCost)
							or  (ParameterMatchedQty 				< 0
							and  ParameterSuffix					not entered)
							or  (ParameterMatchedQty				< 0
							and  ParameterServiceTypeContract)
							or  (ParameterEntUnitCst				< 0
							and  ParameterServiceTypeContract)
							or  (ParameterVendorReturn))
								LocalCurrencyUnitCost				= ParameterManufacturerUnitCost
								include BuildContractRebateDueInvoiceLines
								LocalBasisContractRebateDue			= LocalContractRebateDue
								for each SupplementalRebatesRel
									LocalContractRebateType			= each.ContractRebateType
									LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
									include BuildContractRebateDueInvoiceLinesForSupplementalRebate
					else
						include RebateDueDateCheck
						LocalHasContractOnRebate		= true
						if (UseThisItemForQualificationPurposes)
							LocalItemUsedForQualification	= true
						else
							LocalItemUsedForQualification	= false
						include LoadLocalFields
						
						if ((ParameterMatchedQty				>= 0
						and  ParameterEntUnitCst				>= 0)
						or  (ParameterMatchedQty				< 0
						and  ParameterSuffix					= 111
						and  PayablesInvoiceDetailForChargebackRel			exists
						and  ParameterEntUnitCst				= PayablesInvoiceDetailForChargebackRel.MatchUnitCost)
						or  (ParameterMatchedQty 				< 0
						and  ParameterSuffix					= 0)
						or  (ParameterMatchedQty				< 0
						and  ParameterServiceTypeContract)
						or  (ParameterEntUnitCst				< 0
						and  ParameterServiceTypeContract)
						or  (ParameterVendorReturn))
							LocalCurrencyUnitCost				= ParameterManufacturerUnitCost
							include BuildContractRebateDueInvoiceLines
							LocalBasisContractRebateDue			= LocalContractRebateDue
							for each SupplementalRebatesRel
								LocalContractRebateType			= each.ContractRebateType
								LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
								include BuildContractRebateDueInvoiceLinesForSupplementalRebate
				else
				if (ContractRebateQualifier.RebatePurchaseAmtPct.PurchasePercent entered)
					if (ContractRebateQualifier.PurchaseType.TargetedPurchases)
						if (ParameterPoDate		>= ContractRebateQualifier.TargetedPurchasesFromDate
						and ParameterPoDate		<= ContractRebateQualifier.TargetedPurchasesToDate)
							include RebateDueDateCheck
							LocalHasContractOnRebate		= false
							if (UseThisItemForQualificationPurposes)		//This rebate invoice line could be off-contract, but it is still important to flag which item spend will be used for qualification in the "%-of-all" scenario.
								LocalItemUsedForQualification	= true
							else
								LocalItemUsedForQualification	= false		
							include LoadLocalFields
							
							if ((ParameterCmContract				not entered)
							or  (ParameterMatchedQty				>= 0
							and  ParameterEntUnitCst				>= 0)
							or  (ParameterMatchedQty				< 0
							and  ParameterSuffix					= 111
							and  PayablesInvoiceDetailForChargebackRel			exists
							and  ParameterEntUnitCst				= PayablesInvoiceDetailForChargebackRel.MatchUnitCost)
							or  (ParameterMatchedQty 				< 0
							and  ParameterSuffix					= 0)
							or  (ParameterMatchedQty				< 0
							and  ParameterServiceTypeContract)
							or  (ParameterEntUnitCst				< 0
							and  ParameterServiceTypeContract))
								LocalCurrencyUnitCost				= ParameterMatchUnitCost
								include BuildContractRebateDueInvoiceLines
								LocalBasisContractRebateDue			= LocalContractRebateDue
								for each SupplementalRebatesRel
									LocalContractRebateType			= each.ContractRebateType
									LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
									include BuildContractRebateDueInvoiceLinesForSupplementalRebate
					else
						include RebateDueDateCheck
						LocalHasContractOnRebate		= false
						if (UseThisItemForQualificationPurposes)		//This rebate invoice line could be off-contract, but it is still important to flag which item spend will be used for qualification in the "%-of-all" scenario.
							LocalItemUsedForQualification	= true
						else
							LocalItemUsedForQualification	= false		
						include LoadLocalFields
						
						if ((ParameterCmContract				not entered)
						or  (ParameterMatchedQty				>= 0
						and  ParameterEntUnitCst				>= 0)
						or  (ParameterMatchedQty				< 0
						and  ParameterSuffix					= 111
						and  PayablesInvoiceDetailForChargebackRel			exists
						and  ParameterEntUnitCst				= PayablesInvoiceDetailForChargebackRel.MatchUnitCost)
						or  (ParameterMatchedQty 				< 0
						and  ParameterSuffix					= 0)
						or  (ParameterMatchedQty				< 0
						and  ParameterServiceTypeContract)
						or  (ParameterEntUnitCst				< 0
						and  ParameterServiceTypeContract))
							if (ParameterPoDate				>= Contract.EffectiveDate)
								if (Contract.LastInvoiceAllowedDate	entered
								and ParameterPoDate			<= Contract.LastInvoiceAllowedDate)
									LocalCurrencyUnitCost				= ParameterMatchUnitCost
									include BuildContractRebateDueInvoiceLines
									LocalBasisContractRebateDue			= LocalContractRebateDue
									for each SupplementalRebatesRel
										LocalContractRebateType			= each.ContractRebateType
										LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
										include BuildContractRebateDueInvoiceLinesForSupplementalRebate
								else 
								if (Contract.ExpirationDate	entered
    							and ParameterPoDate				<= Contract.ExpirationDate)
									LocalCurrencyUnitCost				= ParameterMatchUnitCost
									include BuildContractRebateDueInvoiceLines
									LocalBasisContractRebateDue			= LocalContractRebateDue
									for each SupplementalRebatesRel
										LocalContractRebateType			= each.ContractRebateType
										LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
										include BuildContractRebateDueInvoiceLinesForSupplementalRebate
								else
								if (Contract.ExpirationDate	not entered)									
									LocalCurrencyUnitCost				= ParameterMatchUnitCost
									include BuildContractRebateDueInvoiceLines
									LocalBasisContractRebateDue			= LocalContractRebateDue
									for each SupplementalRebatesRel
										LocalContractRebateType			= each.ContractRebateType
										LocalContractRebateDue			= first ContractRebateDuesForSupplementalRebateRel.ContractRebateDue
										include BuildContractRebateDueInvoiceLinesForSupplementalRebate

		UpdateBlankItemNumber is an Instance Action
			restricted
			Parameters
				PrmItemNumber			is an Item
			Action Rules
				ItemNumber				= PrmItemNumber
				
		Delete is a Delete Action
			valid when (NotSupplementalRebateAndCanAmend)
			Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToDeleteRebateQualifierItems" 
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToDeleteRebateQualifierItems"
    			constraint (!ContractRebate.RebateMoniesReceived)
    				"CannotDeleteRebateQualifierItemsAfterRebateMoniesHaveBeenReceived"   	
    			LocalRebateContract = ContractRebateQualifierItem.RebateContract
    		Exit Rules   	
				if (ContractRebate.TotalExpectedAmount entered)
	    			invoke SetQualifierChangedFlagToYes ContractRebate		
				if (UseThisItemForQualificationPurposes)
					invoke Update first RebateQualifierContractRel
						invoked.NumberOfItemsSelectedForQualificationPurposes	-= 1
    			
		DeleteWithNoQualifierChangeFlagSet is a Delete Action
			restricted

		Purge is a Purge Action
			restricted
			
