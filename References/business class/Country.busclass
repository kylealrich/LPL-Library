Country is a BusinessClass
    default label is "Country/\Jurisdiction"
    owned by person
    prefix is LMCNT
    representative text is "<Country>-<Name>"
    stored in environment

    Ontology
        symbolic key is Country
        
    Patterns
        implements StaticJava
        disable AsOfDateProcessing
		implements Resequence on CountryDisplayOrder
			new sequence field is NewCountryDisplayOrder
			set is ByCountryDisplayOrder        

	Persistent Fields
		Name	           is Alpha      size 40
			translatable
		EcCountryNumber    is Numeric    size 3
            default label is "EUCountry/\JurisdictionNumber"
        IsoCountryNumber   is Numeric    size 3
            default label is "IsoCountry/\JurisdictionNumber"
		IsoCountryCode     is an IsoCountry
            default label is "IsoCountry/\JurisdictionCode"
		NgaCountryCode     is AlphaUpper size 2
            default label is "NgaCountry/\JurisdictionCode"
		MemberOfEC         is Boolean
			default label is "MemberOfEU"
		FlagPicture        is a FileAttachment
		StandardIndustrialClassificationGroup
		NorthAmericanIndustrialClassificationGroup
		TelephoneCountry		
	    Active		  	   is Boolean



		FormattedAddress1 is an AddressLine
			Text Variables
				City
				StateCode
				StateName
				PostalCode
				CountryCode
				CountryName
				County
				Region
				NationalID 
				StateID
				LocaleID 
				IndividualID
		FormattedAddress2 is an AddressLine
			Text Variables
				City
				StateCode
				StateName
				PostalCode
				CountryCode
				CountryName
				County
				Region				
				NationalID 
				StateID 
				LocaleID 
				IndividualID
				
		AddressRequiresStreetAddress 	is Boolean
		AddressRequiresMunicipality	 	is Boolean
		AddressRequiresStateProvince 	is Boolean
		AddressRequiresPostalCode    	is Boolean
		AddressRequiresCounty        	is Boolean
		AddressRequiresRegion		 	is Boolean
		AddressRequiresNationalIDNumber 		is Boolean 
		AddressRequiresStateProvinceIDNumber 	is Boolean 
		AddressRequiresLocaleIDNumber 			is Boolean 
		AddressRequiresIndividualIDNumber 		is Boolean		
		StreetAddressEntryOrder 	 	is an AddressElementOrder
		CityEntryOrder          	 	is an AddressElementOrder
		StateProvinceEntryOrder 		is an AddressElementOrder
		PostalCodeEntryOrder		 	is an AddressElementOrder
		CountyEntryOrder			 	is an AddressElementOrder
		RegionEntryOrder			 	is an AddressElementOrder
		NationalIDNumberEntryOrder 		is an AddressElementOrder 
		StateProvinceIDNumberEntryOrder is an AddressElementOrder 
		LocaleIDNumberEntryOrder 		is an AddressElementOrder 
		IndividualIDNumberEntryOrder 	is an AddressElementOrder
		NationalIDNumberLabel			is Alpha 30
			translatable
		StateProvinceIDNumberLabel		is Alpha 30
			translatable
		LocaleIDNumberLabel				is Alpha 30
			translatable
		IndividualIDNumberLabel			is Alpha 30
			translatable	
		ValidatePostalCode			 	is Boolean
		CountryDisplayOrder			 	is Numeric size 4		
            default label is "Country/\JurisdictionDisplayOrder"
		CTLATFWatchList				 	is Boolean
			default label is "CTL_/ATFWatchList"
		AMLWatchList				 is Boolean
		TaxIDCheckDigitType			 is Numeric 1
			States
				NoCheckDigit		 value is 0
				MOD10				 value is 1
				MOD11				 value is 2
				MOD112				 value is 3
					default label is "MOD11-\2"
							
	Transient Fields
		NewCountryDisplayOrder		 is Numeric size 4
            default label is "NewCountry/\JurisdictionDisplayOrder"
		AddressEntrySimulator		 is a PostalAddress
		V2AddressEntrySimulator		 is a PostalAddressV2
		
	Local Fields
		StateAbbreviationArray
		StateNameArray
		StateIdx 	  is Numeric 2
		LocalOrderTotal						is Numeric 3			
		LocalOrderCount						is Numeric 2
		LocalOrderCheck						is an AddressElementOrderArray	
		
	Conditions
		CountryExists
			when (Country exists)
				
		UnitedStates
			when (Name = "United States" 
			or    Name = "United States of America"
			or    Name = "United States Of America"		
			or    Name = "USA"
			or    Name = "U.S.A."
			or    Name = "US"
			or    Name = "U.S.")
			
		Canada
			when (Name = "Canada")
			
		Never
			when (1 = 0)
		OnWatchList
			when (CTLATFWatchList
			or    AMLWatchList)

	Field Groups
		CountryFG
			Name
			
	Relations
		OtherCountries
			one-to-many relation to Country
			Field Mapping uses ByCountryDisplayOrder
			Instance Selection
				where (related.Country != Country)

    Field Rules
        Name
            required

        Active
        	default to true
        	
		StreetAddressEntryOrder
			if (AddressRequiresStreetAddress)
				required
		CityEntryOrder
			if (AddressRequiresMunicipality)
				required
		StateProvinceEntryOrder
			if (AddressRequiresStateProvince)
				required
		PostalCodeEntryOrder
			if (AddressRequiresPostalCode)
				required
		CountyEntryOrder
			if (AddressRequiresCounty)
				required
		RegionEntryOrder
			if (AddressRequiresRegion)
				required
		NationalIDNumberEntryOrder
			if (AddressRequiresNationalIDNumber)
				required 
		StateProvinceIDNumberEntryOrder
			if (AddressRequiresStateProvinceIDNumber)
				required  
		LocaleIDNumberEntryOrder
			if (AddressRequiresLocaleIDNumber)
				required  
		IndividualIDNumberEntryOrder
			if (AddressRequiresIndividualIDNumber)
				required 
























													
	Attach Rules
		constraint (Active)
			"Country/\JurisdictionIsInactive"
        	
	Derived Fields
		RequiredIndicator is a DerivedField
			type is Boolean
			return true
		USStateAbbreviationData is a DerivedField
			type is AlphaUpper size 118
			restricted
			return "ALAKASAZARCACOCTDEDCFMFLGAGUHIIDILINIAKSKYLAMEMHMDMAMIMNMSMOMTNENVNHNJNMNYNCNDMPOHOKORPWPAPRRISCSDTNTXUTVTVIVAWAWVWIWY"
		USStateNameData is a DerivedField
			type is Alpha size 1770
			restricted
			return "Alabama                       Alaska                        American Samoa                Arizona                       Arkansas                      California                    Colorado                      Connecticut                   Delaware                      District of Columbia          Federated States of MicronesiaFlorida                       Georgia                       Guam                          Hawaii                        Idaho                         Illinois                      Indiana                       Iowa                          Kansas                        Kentucky                      Louisiana                     Maine                         Marshall Islands              Maryland                      Massachusetts                 Michigan                      Minnesota                     Mississippi                   Missouri                      Montana                       Nebraska                      Nevada                        New Hampshire                 New Jersey                    New Mexico                    New York                      North Carolina                North Dakota                  Northern Mariana Islands      Ohio                          Oklahoma                      Oregon                        Palau                         Pennsylvania                  Puerto Rico                   Rhode Island                  South Carolina                South Dakota                  Tennessee                     Texas                         Utah                          Vermont                       Virgin Islands                Virginia                      Washington                    West Virginia                 Wisconsin                     Wyoming                       "
		CanadaProvinceAbbreviationData is a DerivedField
		    type is AlphaUpper size 26
		    restricted
		    return "ABBCMBNBNLNTNSNUONPEQCSKYT"
		CanadaProvinceNameData is a DerivedField
			type is Alpha size 390
			restricted
			return "Alberta                       British Columbia              Manitoba                      New Brunswick                 Newfoundland and Labrador     Northwest Territories         Nova Scotia                   Nunavut                       Ontario                       Prince Edward Island          Quebec                        Saskatchewan                  Yukon                         "	
		DerivedBlank is a DerivedField
			type is Alpha 1
			return " "
			
	Sets
		ByCountryDisplayOrder
			duplicates
			Sort Order
				CountryDisplayOrder
				Country

	Rule Blocks
		AddressOrderEdit
			initialize LocalOrderTotal
			initialize LocalOrderCount
			if (StreetAddressEntryOrder entered)
				LocalOrderTotal += StreetAddressEntryOrder
				LocalOrderCount += 1
			if (CityEntryOrder entered)
				LocalOrderTotal += CityEntryOrder
				LocalOrderCount += 1
			if (StateProvinceEntryOrder entered)
				LocalOrderTotal += StateProvinceEntryOrder
				LocalOrderCount += 1
			if (PostalCodeEntryOrder entered)
				LocalOrderTotal += PostalCodeEntryOrder
				LocalOrderCount += 1
			if (CountyEntryOrder entered)
				LocalOrderTotal += CountyEntryOrder
				LocalOrderCount += 1
			if (RegionEntryOrder entered)
				LocalOrderTotal += RegionEntryOrder
				LocalOrderCount += 1			
			if (NationalIDNumberEntryOrder entered)
				LocalOrderTotal += NationalIDNumberEntryOrder
				LocalOrderCount += 1				 
			if (StateProvinceIDNumberEntryOrder entered) 
				LocalOrderTotal += StateProvinceIDNumberEntryOrder
				LocalOrderCount += 1
			if (LocaleIDNumberEntryOrder entered) 
				LocalOrderTotal += LocaleIDNumberEntryOrder
				LocalOrderCount += 1
			if (IndividualIDNumberEntryOrder entered)
				LocalOrderTotal += IndividualIDNumberEntryOrder
				LocalOrderCount += 1
				
			if (StreetAddressEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[StreetAddressEntryOrder] = StreetAddressEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[StreetAddressEntryOrder] = StreetAddressEntryOrder
			if (CityEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[CityEntryOrder] = CityEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[CityEntryOrder] = CityEntryOrder
			if (StateProvinceEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[StateProvinceEntryOrder] = StateProvinceEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[StateProvinceEntryOrder] = StateProvinceEntryOrder
			if (PostalCodeEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[PostalCodeEntryOrder] = PostalCodeEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[PostalCodeEntryOrder] = PostalCodeEntryOrder
			if (CountyEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[CountyEntryOrder] = CountyEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[CountyEntryOrder] = CountyEntryOrder
			if (RegionEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[RegionEntryOrder] = RegionEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[RegionEntryOrder] = RegionEntryOrder
			if (NationalIDNumberEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[NationalIDNumberEntryOrder] = NationalIDNumberEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[NationalIDNumberEntryOrder] = NationalIDNumberEntryOrder				 
			if (StateProvinceIDNumberEntryOrder entered) 
				constraint (!LocalOrderCheck.AddressOrderElement[StateProvinceIDNumberEntryOrder] = StateProvinceIDNumberEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[StateProvinceIDNumberEntryOrder] = StateProvinceIDNumberEntryOrder				 
			if (LocaleIDNumberEntryOrder entered) 
				constraint (!LocalOrderCheck.AddressOrderElement[LocaleIDNumberEntryOrder] = LocaleIDNumberEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[LocaleIDNumberEntryOrder] = LocaleIDNumberEntryOrder				 
			if (IndividualIDNumberEntryOrder entered)
				constraint (!LocalOrderCheck.AddressOrderElement[IndividualIDNumberEntryOrder] = IndividualIDNumberEntryOrder)
					"DuplicateOrderNumber"
				LocalOrderCheck.AddressOrderElement[IndividualIDNumberEntryOrder] = IndividualIDNumberEntryOrder				 

			if (LocalOrderCount = 1)
				constraint (LocalOrderTotal = 1)
					"IncorrectOrder,OrderNumberSkipped"
			else
			if (LocalOrderCount = 2)
				constraint (LocalOrderTotal = 3)
					"IncorrectOrder,OrderNumberSkipped"
			else					
			if (LocalOrderCount  = 3)
				constraint (LocalOrderTotal = 6)
					"IncorrectOrder,OrderNumberSkipped"
			else
			if (LocalOrderCount  = 4)
				constraint (LocalOrderTotal = 10)
					"IncorrectOrder,OrderNumberSkipped"
			else
			if (LocalOrderCount  = 5)
				constraint (LocalOrderTotal = 15)
					"IncorrectOrder,OrderNumberSkipped"
			else
			if (LocalOrderCount  = 6)
				constraint (LocalOrderTotal = 21)
					"IncorrectOrder,OrderNumberSkipped"	
			else
			if (LocalOrderCount  = 7)
				constraint (LocalOrderTotal = 28)
					"IncorrectOrder,OrderNumberSkipped"	
			else
			if (LocalOrderCount  = 8)
				constraint (LocalOrderTotal = 36)
					"IncorrectOrder,OrderNumberSkipped"	
			else
			if (LocalOrderCount  = 9)
				constraint (LocalOrderTotal = 45)
					"IncorrectOrder,OrderNumberSkipped"	
			else
			if (LocalOrderCount  = 10)
				constraint (LocalOrderTotal = 55)
					"IncorrectOrder,OrderNumberSkipped"											
																
    Actions
    	Create is a Create Action
    		Field Rules
			    CountryDisplayOrder  
					CountryDisplayOrder = (last OtherCountries.CountryDisplayOrder + 1)
    		Action Rules
    			include AddressOrderEdit 	    	
    		Exit Rules
    			if (UnitedStates)
    				StateAbbreviationArray = USStateAbbreviationData
    				StateNameArray         = USStateNameData
    				StateIdx               = 1
    				while (StateIdx < 60)
    					invoke Create StateProvince
    						invoked.Country	 	  = Country
    						invoked.StateProvince = StateAbbreviationArray.StateProvinceAbbreviation[StateIdx]
    						invoked.Name          = StateNameArray.StateProvinceName[StateIdx]
    					StateIdx += 1
    			else
    			if (Canada)
     				StateAbbreviationArray = CanadaProvinceAbbreviationData
    				StateNameArray         = CanadaProvinceNameData
    				StateIdx               = 1
    				while (StateIdx < 14)
    					invoke Create StateProvince
    						invoked.Country 	  = Country
    						invoked.StateProvince = StateAbbreviationArray.StateProvinceAbbreviation[StateIdx]
    						invoked.Name          = StateNameArray.StateProvinceName[StateIdx]
    					StateIdx += 1   			
 
    	Update is an Update Action
    		Action Rules
    			include AddressOrderEdit
    	
    	Delete is a Delete Action  

    	AssociateSICGroup is an Instance Action
    		Parameters
    			PrmSICGroup is a StandardIndustrialClassificationGroup
    				default label is "StandardIndustrialClassificationGroup"
    			
    		Parameter Rules
    			PrmSICGroup
    				required
    				
    		Action Rules
    			StandardIndustrialClassificationGroup = PrmSICGroup
    	
    	AssociateNAICSGroup is an Instance Action
    		Parameters
    			PrmNAICSGroup is a NorthAmericanIndustrialClassificationGroup
    				default label is "NorthAmericanIndustrialClassificationGroup"
    			
    		Parameter Rules
    			PrmNAICSGroup
    				required
    				
    		Action Rules
    			NorthAmericanIndustrialClassificationGroup = PrmNAICSGroup    	    	


    	SetAllToActive is a Set Action
    	    run in foreground
			
    	    Instance Selection
    	        where (Country entered)
				
    	    Action Rules
			
    	        Instance Rules
    	            Active = true
    	
    	ResequenceAll is a Set Action
			run in foreground
		
			Instance Selection
				where (Country entered)
						
			Local Fields
				LastDisplayOrder is Numeric size 4
											
			Action Rules
				
				Instance Rules 
					LastDisplayOrder    += 1
					CountryDisplayOrder = LastDisplayOrder      	      	
