GLReportFilterDimension is a BusinessClass
	owned by GeneralLedger
	prefix is GLRFD

	Ontology
		symbolic key is GLReportFilterDimension

	Patterns
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

	Persistent Fields
		Dimension			is Alpha 200
			is related value for "GeneralLedgerTotal"
				dimensions only
		DisplayOrder		is like GLReportFilterDimension
		BusinessClass

    Transient Fields
		NewDisplayOrder 	is like GLReportFilterDimension

	Field Rules
		Dimension
			required
			constraint(IsValidDimension)
				"TheSelectedDimensionIsCurrentlyAReportParameterOrIsUnsupportedAtThisTime"
			constraint (BirstPublishedSources)
				"<Dimension>IsNotDefinedIn_\G\L_\ReportDesignerDataModel"
				
		DisplayOrder
			default to GLReportFilterDimension

		BusinessClass
			if (HasAccountingEntityParam)	
				BusinessClass = "AccountingEntity"
			else 
			if (HasAccountingUnitParam)
				BusinessClass = "AccountingUnit"
			else 
			if (HasFinanceDimension1Param)
				BusinessClass = "FinanceDimension1"
			else 
			if (HasFinanceDimension2Param)
				BusinessClass = "FinanceDimension2"
			else 
			if (HasFinanceDimension3Param)
				BusinessClass = "FinanceDimension3"
			else 
			if (HasFinanceDimension4Param)
				BusinessClass = "FinanceDimension4"
			else 
			if (HasFinanceDimension5Param)
				BusinessClass = "FinanceDimension5"
			else
			if (HasFinanceDimension6Param)
				BusinessClass = "FinanceDimension6"
			else  
			if (HasFinanceDimension7Param)
				BusinessClass = "FinanceDimension7"
			else 
			if (HasFinanceDimension8Param)
				BusinessClass = "FinanceDimension8"
			else 
			if (HasFinanceDimension9Param)
				BusinessClass = "FinanceDimension9"
			else 
			if (HasFinanceDimension10Param)
				BusinessClass = "FinanceDimension10"
			else 
			if (HasGeneralLedgerChartAccountParam)
				BusinessClass = "GeneralLedgerChartAccount"
			else 
			if (HasProjectParam)
				BusinessClass = "Project"
			else 
			if (HasGeneralLedgerSystemCodeParam)
				BusinessClass = "GeneralLedgerSystemCode"
			else 
			if (HasScenarioParam)
				BusinessClass = "Scenario"
			else
			if (HasCurrencyParam)
				BusinessClass = "Currency"
			else
			if (HasLedgerParam)
				BusinessClass = "Ledger"

	Local Fields
		LocalReportURL					is Alpha 1000
		LocalRefreshReportURL			is Boolean
		LocalReportingBasis				is a ReportingBasis		
		LocalCalendarPeriodMonth		is Numeric 2
		LocalLocalAccountingUnitType	is Numeric 1
		LocalGLChartAccountChartType	is Numeric 1
		LocalAccountingUnitType			is Numeric 1
		LocalProjectType				is Numeric 1
		LocalFinDim1Type				is Numeric 1
		LocalFinDim2Type				is Numeric 1
		LocalFinDim3Type				is Numeric 1
		LocalFinDim4Type				is Numeric 1
		LocalFinDim5Type				is Numeric 1
		LocalFinDim6Type				is Numeric 1
		LocalFinDim7Type				is Numeric 1
		LocalFinDim8Type				is Numeric 1
		LocalFinDim9Type				is Numeric 1
		LocalFinDim10Type				is Numeric 1
		LocalReportingChart				is like ReportingChart
		LocalFinDim1Structure			is AlphaUpper 15
		LocalAccountingUnitStructure	is like AccountingUnitStructure
		LocalProjectStructure			is like ProjectStructure
		LocalGLChartAccountLevel		is Numeric 3
		LocalFinDim1Level				is Numeric 3
		LocalFinDim2Level				is Numeric 3
		LocalFinDim3Level				is Numeric 3
		LocalFinDim4Level				is Numeric 3
		LocalFinDim5Level				is Numeric 3
		LocalFinDim6Level				is Numeric 3
		LocalFinDim7Level				is Numeric 3
		LocalFinDim8Level				is Numeric 3
		LocalFinDim9Level				is Numeric 3
		LocalFinDim10Level				is Numeric 3
		LocalProjectLevel				is Numeric 3
		LocalAcctUnitLevel				is Numeric 3
		LocalDimensionName				is Alpha 200
		LocalDimensionLabel				is Alpha 200
		LocalFieldName					is Alpha 200
		LocalFilterValue				is Alpha 100
		LocalFilterDisplayValue			is Alpha 100
		LocalIsLeafLevel				is Boolean
		LocalDimensionLevel				is Numeric 2
		LocalStructureFilter			is Alpha 50
		LocalStructureDimension			is Alpha 200
		LocalStructureField				is Alpha 200
		LocalBuildDimFilterValuesDone	is Boolean
		LocalDimFilterValues			is Alpha 1000
		LocalDimFilterDisplayValues		is Alpha 1000
		LocalLastFieldName				is Alpha 200
		LocalOperator					is Alpha 5
		LocalFieldDisplayName			is Alpha 200
		LocalFilterValueSize			is Numeric 9
		LocalTopNodeDescription         is Alpha 100
		LocalDimensionStructures		is Alpha 500
		LocalDimStructureDescriptions 	is Alpha 1000
		LocalDimensionStructure			is Alpha 100
		LocalDimensionDescription		is Alpha 100
		LocalIsFirst					is Boolean

	Sets
		ByDisplayOrder
			Sort Order
				FinanceEnterpriseGroup
				GLReport
				DisplayOrder
				GLReportFilterDimension

		ByDimensionParam
			Sort Order
				FinanceEnterpriseGroup
				GLReport
				Dimension
	
	Rule Blocks
	
		CreateNewGLReportFilterDimField
			if (GLReportFilterDimensionFieldNameRel exists)
				invoke Update GLReportFilterDimensionFieldNameRel
					invoked.FilterDisplayValue		= LocalFilterDisplayValue
					invoked.IsLeafLevel				= LocalIsLeafLevel
					invoked.DimensionLevel			= LocalDimensionLevel
					invoked.StructureFilter			= LocalStructureFilter
					invoked.StructureDimension		= LocalStructureDimension
					invoked.StructureField			= LocalStructureField
					invoked.TopNodeDescription      = LocalTopNodeDescription	
			else
				invoke Create GLReportFilterDimensionField
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.GLReport				= GLReport
					invoked.GLReportFilterDimension	= GLReportFilterDimension
					invoked.GLReportFilterDimensionField.FieldName		= LocalFieldName
					invoked.GLReportFilterDimensionField.FilterValue	= LocalFilterValue
					invoked.FilterDisplayValue		= LocalFilterDisplayValue
					invoked.IsLeafLevel				= LocalIsLeafLevel
					invoked.DimensionLevel			= LocalDimensionLevel
					invoked.StructureFilter			= LocalStructureFilter
					invoked.StructureDimension		= LocalStructureDimension
					invoked.StructureField			= LocalStructureField
					invoked.TopNodeDescription      = LocalTopNodeDescription
				
		BuildDimensionFilterValueList
			if (!LocalBuildDimFilterValuesDone)
				for each GLReportFilterDimensionFieldRel
					LocalOperator = " and"
					if LocalLastFieldName = each.GLReportFilterDimensionField.FieldName
						LocalOperator = " or"
					
					LocalFilterValueSize = LocalDimFilterValues size
					if (LocalFilterValueSize > 0)
						LocalDimFilterValues += LocalOperator
						LocalDimFilterDisplayValues += LocalOperator
					
					LocalFieldDisplayName = ""
					if (Dimension - "GeneralLedgerTotal." != each.GLReportFilterDimensionField.FieldName)
						LocalFieldDisplayName = "." + each.GLReportFilterDimensionField.FieldName
						
					if (each.IsLeafLevel)
						LocalDimFilterValues += " " + Dimension + "." + LocalFieldDisplayName + " = \"" + each.GLReportFilterDimensionField.FilterValue + "\""
						LocalDimFilterDisplayValues += " " + DimensionLabel + LocalFieldDisplayName + " = \"" + each.FilterDisplayValue + "\""
					else
						LocalDimFilterValues += " " + Dimension + " level " + each.DimensionLevel + " = \"" + each.GLReportFilterDimensionField.FilterValue + "\""
						LocalDimFilterDisplayValues += " " + DimensionLabel + " level " + each.DimensionLevel + " = \"" + each.FilterDisplayValue + "\""
						
					LocalLastFieldName = each.GLReportFilterDimensionField.FieldName
				LocalBuildDimFilterValuesDone = true
	
	
	Derived Fields
		FilterDimensionFieldCount is a DerivedField
			type is Numeric 6
			restricted
			return (instance count of GLReportFilterDimensionFieldRel)

		FirstFilterDimensionField is a DerivedField
			type is Alpha 200	
			restricted
			return (first GLReportFilterDimensionFieldRel.GLReportFilterDimensionField.FieldName)

		FirstFilterDimensionValue is a DerivedField
			type is Alpha 100	
			restricted
			return (first GLReportFilterDimensionFieldRel.GLReportFilterDimensionField.FilterValue)

		IsValidDimension is a DerivedField
			type is Boolean
			if(Dimension = "GeneralLedgerTotal.EntityYearPeriod"
			or DimensionIsParameter)
				return false
			else
				return true
				
		BirstPublishedSources is a NativeField
			type is Boolean
			restricted
		
		DerivedNoFiltersApplied is a MessageField
			"NoFiltersAppliedForDimension:<DimensionLabel>"
				
		DimensionFilterValues is a DerivedField
			type is Alpha 1000
			include BuildDimensionFilterValueList
			
			LocalFilterValueSize = LocalDimFilterValues size
			if (LocalFilterValueSize > 0)
				return LocalDimFilterValues
			else
				return DerivedNoFiltersApplied			
	
		DimensionFilterDisplayValues is a DerivedField
			type is Alpha 1000
			include BuildDimensionFilterValueList

			LocalFilterValueSize = LocalDimFilterDisplayValues size
			if (LocalFilterValueSize > 0)
				return LocalDimFilterDisplayValues
			else
				return DerivedNoFiltersApplied

		DimensionLabel is a DerivedField
			type is Alpha size 150

			if (HasFinanceDimension1Param)
				return FinanceEnterpriseGroup.FinanceDimension1Label
			else
			if (HasFinanceDimension2Param)
				return FinanceEnterpriseGroup.FinanceDimension2Label
			else 
			if (HasFinanceDimension3Param)
				return FinanceEnterpriseGroup.FinanceDimension3Label
			else 
			if (HasFinanceDimension4Param)
				return FinanceEnterpriseGroup.FinanceDimension4Label
			else 
			if (HasFinanceDimension5Param)
				return FinanceEnterpriseGroup.FinanceDimension5Label
			else 
			if (HasFinanceDimension6Param)
				return FinanceEnterpriseGroup.FinanceDimension6Label
			else 
			if (HasFinanceDimension7Param)
				return FinanceEnterpriseGroup.FinanceDimension7Label
			else 
			if (HasFinanceDimension8Param)
				return FinanceEnterpriseGroup.FinanceDimension8Label
			else 
			if (HasFinanceDimension9Param)
				return FinanceEnterpriseGroup.FinanceDimension9Label
			else 
			if (HasFinanceDimension10Param)
				return FinanceEnterpriseGroup.FinanceDimension10Label				
			else 
			if (HasAccountingEntityParam)
				return FinanceEnterpriseGroup.AccountingEntityLabel
			else 
			if (HasAccountingUnitParam)
				return FinanceEnterpriseGroup.AccountingUnitLabel
			else 
			if (HasGeneralLedgerChartAccountParam)
				return FinanceEnterpriseGroup.AccountLabel
			else 
			if (HasProjectParam)
				return FinanceEnterpriseGroup.ProjectLabel
			else
			if (HasCurrencyParam)
				return "Currency"
			else
			if (HasLedgerParam)
				return "Ledger"
			else
			if (HasGeneralLedgerSystemCodeParam)
				return "System"
			else
			if (HasScenarioParam)
				return "Scenario"
			else
				return Dimension

		DerivedDimensionStructure is a DerivedField
			type is Alpha size 500
			initialize LocalDimensionStructures
			initialize LocalDimStructureDescriptions
			LocalIsFirst = true

			for each GLReportFilterDimensionFieldRel
				if(each.StructureFilter = blank)
					LocalDimensionStructure = "N/A"
				else
					LocalDimensionStructure = each.StructureFilter

				if(each.TopNodeDescription = blank)
					LocalDimensionDescription = "N/A"
				else
					LocalDimensionDescription = each.TopNodeDescription

				if (LocalIsFirst) 
					LocalDimensionStructures = LocalDimensionStructure
					LocalDimStructureDescriptions = LocalDimensionDescription
				else
				if(!LocalDimensionStructures contains LocalDimensionStructure)
					LocalDimensionStructures += ", " + LocalDimensionStructure 
					LocalDimStructureDescriptions += ", " +LocalDimensionDescription

				LocalIsFirst = false
			return LocalDimensionStructures

		DerivedDimensionDescription is a DerivedField
			type is Alpha size 1000
			return LocalDimStructureDescriptions
			
	Actions
 		Create is an Action
			Entrance Rules
				if (GLReport.Lock)
					constraint(GLReport.create stamp.actor = actor)
						"ReportHasBeenLockedForEditing"
			
    	Update is an Update Action
    		restricted

    	Purge is a Purge Action
    		restricted
    		
    	Delete is a Delete Action
    		Entrance Rules
				if (GLReport.Lock)
					constraint(GLReport.create stamp.actor = actor)
						"ReportHasBeenLockedForEditing"
    			for each GLReportFilterDimensionFieldRel
    				LocalFieldName = each.GLReportFilterDimensionField.FieldName
					LocalFilterValue = each.GLReportFilterDimensionField.FilterValue
    				invoke Delete GLReportFilterDimensionFieldNameRel
			Exit Rules 
				if (GLReport.IntegrationStatus = 1)
					invoke UpdateGLReport GLReport
						invoked.PrmIntegrationStatus = 2
				
				if(SubReportRel exists)
					for each SubReportRel
						if(each.CompositeReportRel.IntegrationStatus = 1)
							invoke Update each.CompositeReportRel
								invoked.IntegrationStatus = 2


		AddChartSectionFilter is an Instance Action
		
			Parameters
				ChartSection

			Parameter Rules
				ChartSection
					required

			Local Fields
				ChartSectionName is Alpha 20

			Entrance Rules
				if (GLReport.Lock)
					constraint(GLReport.create stamp.actor = actor)
						"ReportHasBeenLockedForEditing"

			Action Rules
				if ChartSection.BalanceSheet
					ChartSectionName = "BalanceSheet"
				else
					ChartSectionName = "IncomeStatement"
					
				LocalDimensionName = "GeneralLedgerChartAccount"
				LocalDimensionLabel = FinanceEnterpriseGroup.AccountLabel
				LocalFieldName = "ChartSection"
				LocalFilterValue = ChartSectionName
				LocalFilterDisplayValue = ChartSectionName
				LocalIsLeafLevel = true
				LocalDimensionLevel = 0
				LocalStructureFilter = ""
				
				include CreateNewGLReportFilterDimField		

			Exit Rules 
				if (GLReport.IntegrationStatus = 1)
					invoke UpdateGLReport GLReport
						invoked.PrmIntegrationStatus = 2
				
				if(SubReportRel exists)
					for each SubReportRel
						if(each.CompositeReportRel.IntegrationStatus = 1)
							invoke Update each.CompositeReportRel
								invoked.IntegrationStatus = 2
		AddAccountTypeFilter is an Instance Action
		
			Parameters
				AccountType
				
			Parameter Rules
				AccountType
					required

			Local Fields
				AccountTypeName is Alpha 20

			Entrance Rules
				if (GLReport.Lock)
					constraint(GLReport.create stamp.actor = actor)
						"ReportHasBeenLockedForEditing"

			Action Rules
				if AccountType.Asset
					AccountTypeName = "Asset"
				else
				if AccountType.Liability
					AccountTypeName = "Liability"
				else
				if AccountType.Equity
					AccountTypeName = "Equity"					
				else
				if AccountType.Revenue
					AccountTypeName = "Revenue"					
				else
				if AccountType.Expense
					AccountTypeName = "Expense"					
				else
				if AccountType.StatCumulative
					AccountTypeName = "StatCumulative"
				else
				if AccountType.StatNonCumulative
					AccountTypeName = "StatNonCumulative"
				else
					AccountTypeName = "None"
										
				LocalDimensionName = "GeneralLedgerChartAccount"
				LocalDimensionLabel = FinanceEnterpriseGroup.AccountLabel
				LocalFieldName = "AccountType"
				LocalFilterValue = AccountTypeName
				LocalFilterDisplayValue = AccountTypeName
				LocalIsLeafLevel = true
				LocalDimensionLevel = 0
				LocalStructureFilter = ""
				
				include CreateNewGLReportFilterDimField		

			Exit Rules 
				if (GLReport.IntegrationStatus = 1)
					invoke UpdateGLReport GLReport
						invoked.PrmIntegrationStatus = 2

				if(SubReportRel exists)
					for each SubReportRel
						if(each.CompositeReportRel.IntegrationStatus = 1)
							invoke Update each.CompositeReportRel
								invoked.IntegrationStatus = 2
		AddDimensionFilter is an Instance Action

			Parameters
				ShowTopNodes is Boolean
				FinanceEnterpriseGroup
				ReportingBasis
				GLChartAccountTopNode is a GeneralLedgerChartAccount
					default label is "<FinanceEnterpriseGroup.AccountLabel>Structure"
				GeneralLedgerChartAccount
					default label is "<FinanceEnterpriseGroup.AccountLabel>"
				AccountingEntity
				AccountingUnitStructure
				AccountingUnit
				Currency
				ProjectTopNode is a Project
					default label is "<FinanceEnterpriseGroup.ProjectLabel>Structure"
				Project
					default label is "<FinanceEnterpriseGroup.ProjectLabel>"
				GeneralLedgerSystemCode
					default label is "System"
				Ledger
				Scenario
				FinanceDimension1TopNode is a FinanceDimension1
					default label is "<FinanceEnterpriseGroup.FinanceDimension1Label>Structure"
				FinanceDimension1
					default label is "<FinanceEnterpriseGroup.FinanceDimension1Label>"
				FinanceDimension2TopNode is a FinanceDimension2
					default label is "<FinanceEnterpriseGroup.FinanceDimension2Label>Structure"
				FinanceDimension2
					default label is "<FinanceEnterpriseGroup.FinanceDimension2Label>"
				FinanceDimension3TopNode is a FinanceDimension3
					default label is "<FinanceEnterpriseGroup.FinanceDimension3Label>Structure"			
				FinanceDimension3
					default label is "<FinanceEnterpriseGroup.FinanceDimension3Label>"
				FinanceDimension4TopNode is a FinanceDimension4
					default label is "<FinanceEnterpriseGroup.FinanceDimension4Label>Structure"			
				FinanceDimension4
					default label is "<FinanceEnterpriseGroup.FinanceDimension4Label>"
				FinanceDimension5TopNode is a FinanceDimension5
					default label is "<FinanceEnterpriseGroup.FinanceDimension5Label>Structure"			
				FinanceDimension5
					default label is "<FinanceEnterpriseGroup.FinanceDimension5Label>"
				FinanceDimension6TopNode is a FinanceDimension6
					default label is "<FinanceEnterpriseGroup.FinanceDimension6Label>Structure"			
				FinanceDimension6
					default label is "<FinanceEnterpriseGroup.FinanceDimension6Label>"
				FinanceDimension7TopNode is a FinanceDimension7
					default label is "<FinanceEnterpriseGroup.FinanceDimension7Label>Structure"
				FinanceDimension7
					default label is "<FinanceEnterpriseGroup.FinanceDimension7Label>"
				FinanceDimension8TopNode is a FinanceDimension8
					default label is "<FinanceEnterpriseGroup.FinanceDimension8Label>Structure"
				FinanceDimension8
					default label is "<FinanceEnterpriseGroup.FinanceDimension8Label>"
				FinanceDimension9TopNode is a FinanceDimension9
					default label is "<FinanceEnterpriseGroup.FinanceDimension9Label>Structure"
				FinanceDimension9
					default label is "<FinanceEnterpriseGroup.FinanceDimension9Label>"
				FinanceDimension10TopNode is a FinanceDimension10
					default label is "<FinanceEnterpriseGroup.FinanceDimension10Label>Structure"
				FinanceDimension10
					default label is "<FinanceEnterpriseGroup.FinanceDimension10Label>"

			Entrance Rules
				if (GLReport.Lock)
					constraint(GLReport.create stamp.actor = actor)
						"ReportHasBeenLockedForEditing"
			
			Parameter Rules
				ReportingBasis
					if (DisplayAccountingEntity)
						required
				AccountingEntity
					if (DisplayAccountingEntity)
						required
				AccountingUnitStructure
					if (HasAccountingUnitParam)
						required
				AccountingUnit
					if (HasAccountingUnitParam)
						required
				GLChartAccountTopNode
					if (HasGeneralLedgerChartAccountParam)
						required
				GeneralLedgerChartAccount
					if (HasGeneralLedgerChartAccountParam)
						required
				FinanceDimension1TopNode
					if (HasFinanceDimension1Param)
						required
				FinanceDimension1
					if (HasFinanceDimension1Param)
						required
				FinanceDimension2TopNode
					if (HasFinanceDimension2Param)
						required
				FinanceDimension2
					if (HasFinanceDimension2Param)
						required	
				FinanceDimension3TopNode
					if (HasFinanceDimension3Param)
						required
				FinanceDimension3
					if (HasFinanceDimension3Param)
						required
				FinanceDimension4TopNode
					if (HasFinanceDimension4Param)
						required
				FinanceDimension4
					if (HasFinanceDimension4Param)
						required
				FinanceDimension5TopNode
					if (HasFinanceDimension5Param)
						required
				FinanceDimension5
					if (HasFinanceDimension5Param)
						required
				FinanceDimension6TopNode
					if (HasFinanceDimension6Param)
						required
				FinanceDimension6
					if (HasFinanceDimension6Param)
						required
				FinanceDimension7TopNode
					if (HasFinanceDimension7Param)
						required
				FinanceDimension7
					if (HasFinanceDimension7Param)
						required
				FinanceDimension8TopNode
					if (HasFinanceDimension8Param)
						required
				FinanceDimension8
					if (HasFinanceDimension8Param)
						required
				FinanceDimension9TopNode
					if (HasFinanceDimension9Param)
						required
				FinanceDimension9
					if (HasFinanceDimension9Param)
						required
				FinanceDimension10TopNode
					if (HasFinanceDimension10Param)
						required
				FinanceDimension10
					if (HasFinanceDimension10Param)
						required
				ProjectTopNode
					if (HasProjectParam)
						required
				Project
					if (HasProjectParam)
						required
				GeneralLedgerSystemCode
					if (HasGeneralLedgerSystemCodeParam)
						required
				Ledger
					if (HasLedgerParam)
						required
				Scenario
					if (HasScenarioParam)
						required
				Currency
					if (HasCurrencyParam)
						required
				
			Action Rules
				if (HasAccountingEntityParam)
					LocalDimensionName		= "AccountingEntity"
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= AccountingEntity
					LocalFilterDisplayValue	= AccountingEntity.Name
					LocalStructureFilter	= ReportingBasis.AccountingEntityTopNode.HierarchyDetailRel.TopNode
					LocalTopNodeDescription = ReportingBasis.AccountingEntityTopNode.Name
					LocalStructureDimension	= "AccountingEntityHierarchy" 
					LocalStructureField		= "TopNode"
					if (AccountingEntity.DimensionType.Summary)
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= AccountingEntity.Level
					else
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
				else
				if (HasAccountingUnitParam)
					LocalDimensionName		= "AccountingUnit"
					LocalDimensionLabel		= FinanceEnterpriseGroup.AccountingUnitLabel
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= AccountingEntity + "/" + AccountingUnit
					LocalFilterDisplayValue	= AccountingUnit.Description
					LocalTopNodeDescription = AccountingUnitStructure.Description
					LocalStructureFilter	=  AccountingUnitStructure
					LocalStructureDimension	= "AccountingUnitHierarchy"
					LocalStructureField		= "AccountingUnitStructure"
					if (AccountingUnit.AccountingUnitType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= AccountingUnit.Level
				else
				if (Dimension = "GeneralLedgerTotal.GeneralLedgerChartAccount")
					LocalDimensionName		= "GeneralLedgerChartAccount"
					LocalDimensionLabel 	= FinanceEnterpriseGroup.AccountLabel
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= GeneralLedgerChartAccount
					LocalFilterDisplayValue	= GeneralLedgerChartAccount.AccountDescription
					LocalStructureFilter	= GLChartAccountTopNode.ChartAccountHierarchyDetailRel.ReportingChart
					LocalStructureDimension	= "ReportingChartAccount" 
					LocalStructureField		= "ReportingChart"
					LocalTopNodeDescription = GLChartAccountTopNode.AccountDescription
					if (GeneralLedgerChartAccount.ChartType = 2)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= GeneralLedgerChartAccount.Level
				else
				if (HasCurrencyParam)
					LocalDimensionName		= "Currency"
					LocalDimensionLabel		= "Currency"
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= Currency
					LocalFilterDisplayValue	= Currency.Description
					LocalIsLeafLevel		= true
					LocalDimensionLevel		= 0
					LocalStructureFilter	= blank
					LocalStructureDimension	= blank
					LocalStructureField		= blank
					LocalTopNodeDescription = blank	
				else
				if (HasLedgerParam)
					LocalDimensionName		= "Ledger"
					LocalDimensionLabel		= "Ledger"
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= Ledger
					LocalFilterDisplayValue	= Ledger.Description
					LocalIsLeafLevel		= true
					LocalDimensionLevel		= 0
					LocalStructureFilter	= blank
					LocalStructureDimension	= blank
					LocalStructureField		= blank
					LocalTopNodeDescription = blank
				else			
				if (HasProjectParam)
					LocalDimensionName		= "Project"
					LocalDimensionLabel		= FinanceEnterpriseGroup.ProjectLabel
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= Project
					LocalFilterDisplayValue	= Project.Description
					LocalStructureFilter	= ProjectTopNode.ProjectHierarchyRel.ProjectStructure
					LocalStructureDimension	= "ProjectHierarchy" 
					LocalStructureField		= "ProjectStructure"
					LocalTopNodeDescription = ProjectTopNode.Description
					if (Project.ProjectType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= Project.Level
				else
				if (HasFinanceDimension1Param)
					LocalDimensionName		= "FinanceDimension1"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension1Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension1
					LocalFilterDisplayValue	= FinanceDimension1.Description
					LocalStructureFilter	= FinanceDimension1TopNode.DimensionHierarchyRel.FinanceDimension1Structure
					LocalStructureDimension	= "FinanceDimension1Hierarchy" 
					LocalStructureField		= "FinanceDimension1Structure"
					LocalTopNodeDescription = FinanceDimension1TopNode.Description
					if (FinanceDimension1.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension1.Level
				else					
				if (HasFinanceDimension2Param)
					LocalDimensionName		= "FinanceDimension2"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension2Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension2
					LocalFilterDisplayValue	= FinanceDimension2.Description
					LocalStructureFilter	= FinanceDimension2TopNode.DimensionHierarchyRel.FinanceDimension2Structure
					LocalStructureDimension	= "FinanceDimension2Hierarchy" 
					LocalStructureField		= "FinanceDimension2Structure"
					LocalTopNodeDescription = FinanceDimension2TopNode.Description
					if (FinanceDimension2.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension2.Level
				else
				if (HasFinanceDimension3Param)
					LocalDimensionName		= "FinanceDimension3"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension3Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension3
					LocalFilterDisplayValue	= FinanceDimension3.Description
					LocalStructureFilter	= FinanceDimension3TopNode.DimensionHierarchyRel.FinanceDimension3Structure
					LocalStructureDimension	= "FinanceDimension3Hierarchy" 
					LocalStructureField		= "FinanceDimension3Structure"
					LocalTopNodeDescription = FinanceDimension3TopNode.Description
					if (FinanceDimension3.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension3.Level					
				else
				if (HasFinanceDimension4Param)
					LocalDimensionName		= "FinanceDimension4"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension4Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension4
					LocalFilterDisplayValue	= FinanceDimension4.Description
					LocalStructureFilter	= FinanceDimension4TopNode.DimensionHierarchyRel.FinanceDimension4Structure
					LocalStructureDimension	= "FinanceDimension4Hierarchy" 
					LocalStructureField		= "FinanceDimension4Structure"
					LocalTopNodeDescription = FinanceDimension4TopNode.Description
					if (FinanceDimension4.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension4.Level
				else
				if (HasFinanceDimension5Param)
					LocalDimensionName		= "FinanceDimension5"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension5Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension5
					LocalFilterDisplayValue	= FinanceDimension5.Description
					LocalStructureFilter	= FinanceDimension5TopNode.DimensionHierarchyRel.FinanceDimension5Structure
					LocalStructureDimension	= "FinanceDimension5Hierarchy" 
					LocalStructureField		= "FinanceDimension5Structure"
					LocalTopNodeDescription = FinanceDimension5TopNode.Description
					if (FinanceDimension5.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension5.Level
				else
				if (HasFinanceDimension6Param)
					LocalDimensionName		= "FinanceDimension6"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension6Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension6
					LocalFilterDisplayValue	= FinanceDimension6.Description
					LocalStructureFilter	= FinanceDimension6TopNode.DimensionHierarchyRel.FinanceDimension6Structure
					LocalStructureDimension	= "FinanceDimension6Hierarchy" 
					LocalStructureField		= "FinanceDimension6Structure"
					LocalTopNodeDescription = FinanceDimension6TopNode.Description
					if (FinanceDimension6.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension6.Level
				else
				if (HasFinanceDimension7Param)
					LocalDimensionName		= "FinanceDimension7"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension7Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension7
					LocalFilterDisplayValue	= FinanceDimension7.Description
					LocalStructureFilter	= FinanceDimension7TopNode.DimensionHierarchyRel.FinanceDimension7Structure
					LocalStructureDimension	= "FinanceDimension7Hierarchy" 
					LocalStructureField		= "FinanceDimension7Structure"
					LocalTopNodeDescription = FinanceDimension7TopNode.Description
					if (FinanceDimension7.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension7.Level
				else
				if (HasFinanceDimension8Param)
					LocalDimensionName		= "FinanceDimension8"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension8Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension8
					LocalFilterDisplayValue	= FinanceDimension8.Description
					LocalStructureFilter	= FinanceDimension8TopNode.DimensionHierarchyRel.FinanceDimension8Structure
					LocalStructureDimension	= "FinanceDimension8Hierarchy" 
					LocalStructureField		= "FinanceDimension8Structure"
					LocalTopNodeDescription = FinanceDimension8TopNode.Description
					if (FinanceDimension8.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension8.Level
				else
				if (HasFinanceDimension9Param)
					LocalDimensionName		= "FinanceDimension9"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension9Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension9
					LocalFilterDisplayValue	= FinanceDimension9.Description
					LocalStructureFilter	= FinanceDimension9TopNode.DimensionHierarchyRel.FinanceDimension9Structure
					LocalStructureDimension	= "FinanceDimension9Hierarchy" 
					LocalStructureField		= "FinanceDimension9Structure"
					LocalTopNodeDescription = FinanceDimension9TopNode.Description
					if (FinanceDimension9.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension9.Level
				else
				if (HasFinanceDimension10Param)
					LocalDimensionName		= "FinanceDimension10"
					LocalDimensionLabel		= FinanceEnterpriseGroup.FinanceDimension10Label
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= FinanceDimension10
					LocalFilterDisplayValue	= FinanceDimension10.Description
					LocalStructureFilter	= FinanceDimension10TopNode.DimensionHierarchyRel.FinanceDimension10Structure
					LocalStructureDimension	= "FinanceDimension10Hierarchy" 
					LocalStructureField		= "FinanceDimension10Structure"
					LocalTopNodeDescription = FinanceDimension10TopNode.Description
					if (FinanceDimension10.DimensionType = 1)	
						LocalIsLeafLevel	= true
						LocalDimensionLevel	= 0
					else
						LocalIsLeafLevel	= false
						LocalDimensionLevel	= FinanceDimension10.Level
				else
				if (HasScenarioParam)
					LocalDimensionName		= "Scenario"
					LocalDimensionLabel		= "Scenario"
					LocalFilterValue		= Scenario
					LocalFilterDisplayValue	= Scenario.Description
					LocalDimensionLevel		= 0
					LocalStructureFilter	= blank
					LocalIsLeafLevel		= true
					LocalTopNodeDescription = blank
					if (Scenario.Parent = 0)
						LocalFieldName = "Parent"
					else
						LocalFieldName = LocalDimensionName
				else
				if (HasGeneralLedgerSystemCodeParam)
					LocalDimensionName		= "GeneralLedgerSystemCode"
					LocalDimensionLabel		= "System"
					LocalFieldName			= LocalDimensionName
					LocalFilterValue		= GeneralLedgerSystemCode
					LocalFilterDisplayValue	= GeneralLedgerSystemCode.Description
					LocalIsLeafLevel		= true
					LocalDimensionLevel		= 0
					LocalStructureFilter	= blank
					LocalStructureDimension	= blank
					LocalStructureField		= blank
					LocalTopNodeDescription = blank
				
				include CreateNewGLReportFilterDimField
			
			Exit Rules 
				if (GLReport.IntegrationStatus = 1)
					invoke UpdateGLReport GLReport
						invoked.PrmIntegrationStatus = 2 
				
				if(SubReportRel exists)
					for each SubReportRel
						if(each.CompositeReportRel.IntegrationStatus = 1)
							invoke Update each.CompositeReportRel
								invoked.IntegrationStatus = 2
	Conditions
		DisplayAccountingEntity
			when (Dimension = "AccountingEntity" 
			or    Dimension = "GeneralLedgerTotal.AccountingUnit")
	
		HasAccountingEntityParam
			when (Dimension = "AccountingEntity")

		HasAccountingUnitParam
			when (Dimension = "GeneralLedgerTotal.AccountingUnit")

		HasFinanceDimension1Param
			when (Dimension = "FinanceDimension1")

		HasFinanceDimension2Param
			when (Dimension = "FinanceDimension2")
		
		HasFinanceDimension3Param
			when (Dimension = "FinanceDimension3")
			
		HasFinanceDimension4Param
			when (Dimension = "FinanceDimension4")

		HasFinanceDimension5Param
			when (Dimension = "FinanceDimension5")
			
		HasFinanceDimension6Param
			when (Dimension = "FinanceDimension6")

		HasFinanceDimension7Param
			when (Dimension = "FinanceDimension7")
			
		HasFinanceDimension8Param
			when (Dimension = "FinanceDimension8")
			
		HasFinanceDimension9Param
			when (Dimension = "FinanceDimension9")
			
		HasFinanceDimension10Param
			when (Dimension = "FinanceDimension10")
	
		HasGeneralLedgerChartAccountParam
			when (Dimension = "GeneralLedgerTotal.GeneralLedgerChartAccount")
			
		HasProjectParam
			when (Dimension = "GeneralLedgerTotal.Project")
			
		HasGeneralLedgerSystemCodeParam
			when (Dimension = "GeneralLedgerTotal.System")
			
		HasLedgerParam
			when (Dimension = "GeneralLedgerTotal.Ledger")
			
		HasCurrencyParam
			when (Dimension = "GeneralLedgerTotal.Currency")			
			
		HasScenarioParam
			when (Dimension = "Scenario")
		
		HasDimension
			when (Dimension entered)

		DimensionIsParameter
			when (GLReportFilterParamRel exists)

	Relations
		GLReportFilterDimensionFieldNameRel
			one-to-one relation to GLReportFilterDimensionField
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.GLReport 	   								= GLReport	
				related.GLReportFilterDimension						= GLReportFilterDimension
				related.GLReportFilterDimensionField.FieldName		= LocalFieldName
				related.GLReportFilterDimensionField.FilterValue	= LocalFilterValue

		GLReportFilterDimensionFieldRel
			one-to-many relation to GLReportFilterDimensionField
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.GLReport 	   			= GLReport
				related.GLReportFilterDimension	= GLReportFilterDimension

		GLReportFilterParamRel
			one-to-one relation to GLReportFilterParam
			Field Mapping uses ByDimensionParam
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.GLReport				= GLReport
				related.DimensionParam			= Dimension
		
		SubReportRel
			one-to-many relation to GLReportElement
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.SubReport		= GLReport)
