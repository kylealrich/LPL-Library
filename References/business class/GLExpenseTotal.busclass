GLExpenseTotal is a BusinessClass
	default label is "GLExpenseTotal"
    owned by GeneralLedger
    prefix is GLEXP

    Ontology
    	symbolic key is GLExpenseTotal

    Patterns
 		implements DynamicCreation 





		implements LightweightAuditing

		disable AuditIndex
 		disable EffectiveDated
		disable AsOfDateProcessing 		

	Context Fields
		ReportingBasis
		SearchDateRange			        
		ContextStructure				is a ProjectStructure
		Actor
		AccountAnalysisSettings		

    Persistent Fields
		PeriodEndingDate				is Date
    	ChartSection
		FinanceDimension1
		FinanceDimension2
		FinanceDimension3
		FinanceDimension4
		FinanceDimension5
		FinanceDimension6
		FinanceDimension7
		FinanceDimension8
		FinanceDimension9
		FinanceDimension10		
        NetTransactionAmount			is an TotalAmount
			precision is GLExpenseTotal.Currency.NumberOfDecimals
        NetFunctionalAmount				is an TotalAmount
			precision is AccountingEntity.FunctionalCurrency.NumberOfDecimals
        NetAlternateAmount				is an TotalAmount
			precision is AccountingEntity.AlternateCurrency.NumberOfDecimals
        NetAlternateAmount2				is an TotalAmount
			precision is AccountingEntity.AlternateCurrency2.NumberOfDecimals
        NetAlternateAmount3				is an TotalAmount
			precision is AccountingEntity.AlternateCurrency3.NumberOfDecimals
        NetProjectAmount				is an TotalAmount
			precision is GLExpenseTotal.Project.Currency.NumberOfDecimals
        NetReportAmount1				is an TotalAmount
 			precision is FinanceEnterpriseGroup.ReportCurrencyOne.NumberOfDecimals
        	default label is "<FinanceEnterpriseGroup.ReportCurrencyOne>"
        NetReportAmount2				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyTwo.NumberOfDecimals
	        default label is "<FinanceEnterpriseGroup.ReportCurrencyTwo>"
		NetReportAmount3				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyThree.NumberOfDecimals
	        default label is "<FinanceEnterpriseGroup.ReportCurrencyThree>"
		NetReportAmount4				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFour.NumberOfDecimals
	        default label is "<FinanceEnterpriseGroup.ReportCurrencyFour>"
		NetReportAmount5				is an TotalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFive.NumberOfDecimals
	        default label is "<FinanceEnterpriseGroup.ReportCurrencyFive>"
        NetUnitsAmount					is an UnitsAmount
		Account
		GeneralLedgerSubAccount
			default label is "GlobalLedgerSubAccount"
		IsUREChartAccount				is Boolean	

	Local Fields
		LocalSystemAccount					is a SystemAccount
		LocalInstAccountingUnit				is like AccountingUnit
		LocalInstFinanceDimension1			is like FinanceDimension1
		LocalInstAccountingEntity			is like AccountingEntity
		LocalToBudgetCurrency				is like Currency 
		LocalBudgetRateGroup				is a BudgetRateScenarioGroup
		LocalCalendarYear					is Alpha 4
		LocalReportingChart					is like ReportingChart
		LocalGeneralLedgerCalendarPeriod	is like GeneralLedgerCalendarPeriod
		LocalCurrencyLedger					is like Ledger
		LocalReportingBasis					is a ReportingBasis
		LocalBasisYear						is Year
		LocalInstLedger						is like Ledger

		LocalBasisYearTotal				is a ReportingBasisYearTotal
		LocalGLExpenseTotal			is a GLExpenseTotal
		LocalAUZoneBalance				is a AccountingUnitZoneBalance
		LocalChartSection				is a ChartSection
		ActionCode

		LocalAccountingBookTypeCode		is Alpha 10
		LocalAccountType				is Alpha 15
		LocalWorkUnitTitle				is a PfiWorkTitle
		OldDimensionCode				is like DimensionCode
		LocalYearEndReportBegPeriod			is a GeneralLedgerCalendarYear
		LocalYearEndReportingBasisYear		is a ReportingBasisYear
		LocalYearEndCalendarPeriod			is a GeneralLedgerCalendarPeriod
		LocalYearEndReportingBasisLedger	is a Ledger
		LocalYearEndGLTotalLedger			is a Ledger
		LocalYearEndSystem					is a GeneralLedgerSystemCode
		LocalYearEndCurrency				is a Currency
		LocalYearEndAccountingUnit			is an AccountingUnit
		LocalYearEndProject					is a Project
		LocalYearEndDimensionCode				is a DimensionCode
		LocalYearEndGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
		LocalYearEndReportType					is Numeric 1
			States
				BalanceSheetOpening			value is 1
				ProfitAndLoss    			value is 2
				BalanceSheetClosing			value is 3			
		LocalFinanceEnterpriseGroup			is like FinanceEnterpriseGroup
		LocalInstGeneralLedgerChartAccount	is like GeneralLedgerChartAccount
		LocalInstADBOrganizationDimension	is like AccountingUnit
		LocalDate							is Date
		LocalYearEndJournalYear				is a ReportingBasisYear
				
	Transient Fields
		TransactionType			is Numeric 1
		TransactionAmount		is an InternationalAmount
		FunctionalAmount		is an InternationalAmount
		AlternateAmount			is an InternationalAmount
		AlternateAmount2		is an InternationalAmount
		AlternateAmount3		is an InternationalAmount
		ProjectAmount			is an InternationalAmount
		ReportAmount1			is an InternationalAmount
		ReportAmount2			is an InternationalAmount
		ReportAmount3			is an InternationalAmount
		ReportAmount4			is an InternationalAmount
		ReportAmount5			is an InternationalAmount
		UnitsAmount
		TransientCalendarYear	is Alpha 4
			derive value from DerivedCalendarYear
		UpdateChangesOnly		is Boolean

  	Field Groups
		FEGAndEntity
			FinanceEnterpriseGroup
			AccountingEntity
















































































































































































	Rule Blocks
		InitializeAmounts
		    initialize NetTransactionAmount
		    initialize NetFunctionalAmount
		    initialize NetAlternateAmount
		    initialize NetAlternateAmount2
		    initialize NetAlternateAmount3
		    initialize NetProjectAmount
		    initialize NetReportAmount1
		    initialize NetReportAmount2
		    initialize NetReportAmount3
		    initialize NetReportAmount4
		    initialize NetReportAmount5
		    initialize NetUnitsAmount
		
		UpdateActualTotal
			if (!Account entered)
				Account 				= GLExpenseTotal.GeneralLedgerChartAccount.Account
				GeneralLedgerSubAccount = GLExpenseTotal.GeneralLedgerChartAccount.GeneralLedgerSubAccount
			if  (GLExpenseTotal.EntityYearPeriod.PeriodType.BeginningBalance
			and !UpdateChangesOnly)
				include InitializeAmounts

	    	ChartSection	= GLExpenseTotal.GeneralLedgerChartAccount.ChartSection

			NetTransactionAmount		+= TransactionAmount
			NetFunctionalAmount			+= FunctionalAmount
			NetAlternateAmount			+= AlternateAmount
			NetAlternateAmount2			+= AlternateAmount2
			NetAlternateAmount3			+= AlternateAmount3
			NetProjectAmount			+= ProjectAmount
			NetReportAmount1			+= ReportAmount1
			NetReportAmount2			+= ReportAmount2
			NetReportAmount3			+= ReportAmount3
			NetReportAmount4			+= ReportAmount4
			NetReportAmount5			+= ReportAmount5
			NetUnitsAmount				+= UnitsAmount
			UpdateChangesOnly			= false

			initialize TransactionAmount
			initialize FunctionalAmount
			initialize AlternateAmount
			initialize AlternateAmount2
			initialize AlternateAmount3
			initialize ProjectAmount
			initialize ReportAmount1
			initialize ReportAmount2
			initialize ReportAmount3
			initialize ReportAmount4
			initialize ReportAmount5
			initialize UnitsAmount



		SetLocalCurrencyFlag
			LocalFunctional					= PrmFunctional
			LocalAlternate					= PrmAlternate
			LocalAlternate2					= PrmAlternate2
			LocalAlternate3					= PrmAlternate3
			LocalIsProject					= PrmProject
			LocalReport1					= PrmReport1
			LocalReport2					= PrmReport2
			LocalReport3					= PrmReport3
			LocalReport4					= PrmReport4
			LocalReport5					= PrmReport5
			if (!PrmReport1
			and	PrmFunctional
			and PrmOption.Revalue
			and PrmEnterpriseGroup.ReportCurrencyOne entered
			and PrmAccountingEntity.FunctionalCurrency = PrmEnterpriseGroup.ReportCurrencyOne)
				LocalReport1					= true
			if (!PrmReport2
			and	PrmFunctional
			and PrmOption.Revalue
			and PrmEnterpriseGroup.ReportCurrencyTwo entered
			and PrmAccountingEntity.FunctionalCurrency = PrmEnterpriseGroup.ReportCurrencyTwo)
				LocalReport2					= true
			if (!PrmReport3
			and	PrmFunctional
			and PrmOption.Revalue
			and PrmEnterpriseGroup.ReportCurrencyThree entered
			and PrmAccountingEntity.FunctionalCurrency = PrmEnterpriseGroup.ReportCurrencyThree)
				LocalReport3					= true
			if (!PrmReport4
			and	PrmFunctional
			and PrmOption.Revalue
			and PrmEnterpriseGroup.ReportCurrencyFour entered
			and PrmAccountingEntity.FunctionalCurrency = PrmEnterpriseGroup.ReportCurrencyFour)
				LocalReport4					= true
			if (!PrmReport5
			and	PrmFunctional
			and PrmOption.Revalue
			and PrmEnterpriseGroup.ReportCurrencyFive entered
			and PrmAccountingEntity.FunctionalCurrency = PrmEnterpriseGroup.ReportCurrencyFive)
				LocalReport5					= true
























































































































































































































		JournalControlFields
			invoked.PostingDate				= LocalPostingDate
			invoked.TransactionDate			= LocalPostingDate
			invoked.Ledger					= LocalLedger
			invoked.System					= "GL"
			invoked.ReleaseDate				= current corporate date
			invoked.Description				= NewJournalDescription
			invoked.Currency				= LocalFromCurrency
			invoked.PrimaryLedger			= LocalPrimaryLedger
			invoked.GainLossRunSequence		= PrmRunSequence	
			invoked.AutoReverse				= PrmAutoReverse
			invoked.DefaultAutoReverse		= PrmAutoReverse
			invoked.GainLossReportingBasis	= PrmReportingBasis
			initialize invoked.NewManualJournalControlType





























































































































		UpdateJournalTotals
			invoked.PrmFunctionalDrAmount	= JournalFunctionalAmountDr
			invoked.PrmFunctionalCrAmount	= JournalFunctionalAmountCr
			invoked.PrmAlternateDrAmount	= JournalAlternateAmountDr
			invoked.PrmAlternateCrAmount	= JournalAlternateAmountCr
			invoked.PrmAlternateDrAmount2	= JournalAlternateAmount2Dr
			invoked.PrmAlternateCrAmount2	= JournalAlternateAmount2Cr
			invoked.PrmAlternateDrAmount3	= JournalAlternateAmount3Dr
			invoked.PrmAlternateCrAmount3	= JournalAlternateAmount3Cr								
			invoked.PrmRpt1DrAmount			= JournalReportAmount1Dr
			invoked.PrmRpt1CrAmount			= JournalReportAmount1Cr
			invoked.PrmRpt2DrAmount			= JournalReportAmount2Dr
			invoked.PrmRpt2CrAmount			= JournalReportAmount2Cr
			invoked.PrmRpt3DrAmount			= JournalReportAmount3Dr
			invoked.PrmRpt3CrAmount			= JournalReportAmount3Cr
			invoked.PrmRpt4DrAmount			= JournalReportAmount4Dr
			invoked.PrmRpt4CrAmount			= JournalReportAmount4Cr
			invoked.PrmRpt5DrAmount			= JournalReportAmount5Dr
			invoked.PrmRpt5CrAmount			= JournalReportAmount5Cr
			if (PrmAutoReverse)
				invoked.PrmAutoReverseDrAmount	= JournalFunctionalAmountDr
				invoked.PrmAutoReverseCrAmount	= JournalFunctionalAmountCr




















	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforBudgetCode"
		
		ContextMessageEntityType2 is a StringField
			type is Alpha 50
			restricted
			"InforERPEnterpriseFinancialsBudgetAmountPerPeriod"
			
		ContextMessageText is a StringField
			type is Alpha 30
			restricted
			"GLExpenseTotal<GLExpenseTotal>"
			
		DerivedCalendarYear			is a DerivedField
			type is Alpha 4
			restricted
			initialize LocalCalendarYear
			if (GLExpenseTotal.EntityYearPeriod.PeriodType.EndDate
			or  GLExpenseTotal.EntityYearPeriod.PeriodType.BeginningBalance)
				LocalCalendarYear	= GLExpenseTotal.EntityYearPeriod.Year 
				if (!LocalCalendarYear entered)
					LocalCalendarYear	= GLExpenseTotal.EntityYearPeriod[1:4] 
				return LocalCalendarYear

















		DerivedPeriod			is a DerivedField
			type is Alpha 3
			restricted
			return GLExpenseTotal.EntityYearPeriod[5:7]





































		DerivedPeriodYear		is a DerivedField
			type is Numeric 4
			restricted
			return GLExpenseTotal.EntityYearPeriod[1:4]



















































		




				
		DerivedBalanceSheetOpening is a MessageField
			restricted
			"Balance_\Sheet_\Opening_\Journal"
			
		DerivedIncomeStatement is a MessageField
			restricted
			"Income_\Statement_\Closing_\Journal"
			
		DerivedBalanceSheetClosing is a MessageField
			restricted
			"Balance_\Sheet_\Closing_\Journal"
				
		DerivedYearEndJournalDescription	is a ConditionalField
			type is like Description
			if (LocalYearEndReportType.BalanceSheetOpening)
				DerivedBalanceSheetOpening
			else
			if (LocalYearEndReportType.ProfitAndLoss)
				DerivedIncomeStatement
			else
				DerivedBalanceSheetClosing
				
    Conditions

		NotBeginningBalancePeriod			
			restricted
			when (!GLExpenseTotal.EntityYearPeriod like "*000")

		SecurityGroupAllowsAccess
			when (AccountingEntity.AccountingEntitySecurityGroupAllowsAccess
			and  (GLExpenseTotal.AccountingUnit !entered
			or   (GLExpenseTotal.AccountingUnit entered   
			and   GLExpenseTotal.AccountingUnit.SecurityGroupAllowsAccess))
			and  (GLExpenseTotal.Project !entered
			or   (GLExpenseTotal.Project entered
			and   GLExpenseTotal.Project.SecurityGroupAllowsAccess))
			and   GLExpenseTotal.GeneralLedgerChartAccount.SecurityGroupAllowsAccess
			and  (FinanceDimension1 !entered
			or   (FinanceDimension1 entered
			and   FinanceDimension1.SecurityGroupAllowsAccess))
			and  (FinanceDimension2 !entered
			or   (FinanceDimension2 entered
			and   FinanceDimension2.SecurityGroupAllowsAccess))
			and  (FinanceDimension3 !entered
			or   (FinanceDimension3 entered
			and   FinanceDimension3.SecurityGroupAllowsAccess))
			and  (FinanceDimension4 !entered
			or   (FinanceDimension4 entered
			and   FinanceDimension4.SecurityGroupAllowsAccess))
			and  (FinanceDimension5 !entered
			or   (FinanceDimension5 entered
			and   FinanceDimension5.SecurityGroupAllowsAccess))
			and  (FinanceDimension6 !entered
			or   (FinanceDimension6 entered
			and   FinanceDimension6.SecurityGroupAllowsAccess))
			and  (FinanceDimension7 !entered
			or   (FinanceDimension7 entered
			and   FinanceDimension7.SecurityGroupAllowsAccess))
			and  (FinanceDimension8 !entered
			or   (FinanceDimension8 entered
			and   FinanceDimension8.SecurityGroupAllowsAccess))
			and  (FinanceDimension9 !entered
			or   (FinanceDimension9 entered
			and   FinanceDimension9.SecurityGroupAllowsAccess))
			and  (FinanceDimension10 !entered
			or   (FinanceDimension10 entered
			and   FinanceDimension10.SecurityGroupAllowsAccess)))
		SecurityGroupAllowsAccessBlankValuesExcluded
			when (GLExpenseTotal.AccountingEntity.AccountingEntitySecurityGroupAllowsAccess
			and  ((FinanceEnterpriseGroup.AccountingUnitSelected  
			and    GLExpenseTotal.AccountingUnit.SecurityGroupAllowsAccess)
			or    !FinanceEnterpriseGroup.AccountingUnitSelected)
			and  ((FinanceEnterpriseGroup.ProjectEntry  
			and   GLExpenseTotal.Project.SecurityGroupAllowsAccess)
			or    !FinanceEnterpriseGroup.ProjectEntry)
			and   GLExpenseTotal.GeneralLedgerChartAccount.SecurityGroupAllowsAccess
			and  ((FinanceEnterpriseGroup.FinanceDimension1Entry
			and   FinanceDimension1.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension1Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension2Entry
			and   FinanceDimension2.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension2Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension3Entry
			and   FinanceDimension3.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension3Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension4Entry
			and   FinanceDimension4.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension4Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension5Entry
			and   FinanceDimension5.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension5Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension6Entry
			and   FinanceDimension6.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension6Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension7Entry
			and   FinanceDimension7.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension7Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension8Entry
			and   FinanceDimension8.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension8Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension9Entry
			and   FinanceDimension9.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension9Entry)
			and  ((FinanceEnterpriseGroup.FinanceDimension10Entry
			and   FinanceDimension10.SecurityGroupAllowsAccess)
			or   !FinanceEnterpriseGroup.FinanceDimension10Entry))		
		AlternateCurrencyExists
			restricted
			when (AccountingEntity.AlternateCurrencyEntered)
		AlternateCurrency2Exists
			restricted
			when (AccountingEntity.AlternateCurrency2Entered)
		AlternateCurrency3Exists
			restricted
			when (AccountingEntity.AlternateCurrency3Entered)			
		ReportCurrencyOneExists
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyOneEntered)
		ReportCurrencyTwoExists
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyTwoEntered)
		ReportCurrencyThreeExists
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyThreeEntered)
		ReportCurrencyFourExists
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyFourEntered)
		ReportCurrencyFiveExists
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyFiveEntered)
		UnitsAmountExists
			restricted
			when (NetUnitsAmount entered)
		Dimension1Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension1Label entered)
		Dimension2Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension2Label entered)
		Dimension3Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension3Label entered)
		Dimension4Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension4Label entered)
		Dimension5Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension5Label entered)
		Dimension6Used
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension6Label entered)
        ProjectExists
        	restricted
        	when (FinanceEnterpriseGroup.ProjectLabel entered)
        ProjectUsed
        	restricted
        	when (FinanceEnterpriseGroup.ProjectLabel entered)
		AccountingUnitUsed
			restricted
			when (FinanceEnterpriseGroup.AccountingUnitLabel entered)
		ProjectReportCurrencyOneExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount1")
		ProjectReportCurrencyTwoExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount2")					
		ProjectReportCurrencyThreeExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount3")					
		ProjectReportCurrencyFourExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount4")					
		ProjectReportCurrencyFiveExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount5")
		ProjectReportCurrencyProjectExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetProjectAmount")					
								
		DimensionZoneBalancing
			restricted
			when (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
		WithinSearchDateRange		
			restricted
			when ((SearchDateRange not entered)
			or 	 (PeriodEndingDate entered	
			and   SearchDateRange entered
			and   PeriodEndingDate within SearchDateRange))
						

















			
	Relations
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.SystemAccount					= LocalSystemAccount







		GLProcurementExpenseRel
			one-to-many relation to GLProcurementExpense
			Field Mapping uses ByGLExpenseTotalOrder
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup

				related.FinanceCodeBlock.ToAccountingEntity			= AccountingEntity
				related.EntityYearPeriod							= GLExpenseTotal.EntityYearPeriod				
				related.FinanceCodeBlock.Ledger						= GLExpenseTotal.Ledger
				related.System										= GLExpenseTotal.System
				related.CurrencyCode								= GLExpenseTotal.Currency
				related.FinanceCodeBlock.AccountingUnit				= GLExpenseTotal.AccountingUnit
				related.FinanceCodeBlock.GeneralLedgerChartAccount	= GLExpenseTotal.GeneralLedgerChartAccount
				related.FinanceCodeBlock.Project					= GLExpenseTotal.Project
				related.DimensionCode								= GLExpenseTotal.DimensionCode
				related.PrimaryLedger								= GLExpenseTotal.PrimaryLedger




































		AccountingUnitHierarchyRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AccountingUnitStructure = FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity		= LocalInstAccountingEntity
				related.AccountingUnit		    = LocalInstAccountingUnit
		FinanceDimension1HierarchyRel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure
				related.FinanceDimension1		    = LocalInstFinanceDimension1
		SystemAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses BySystemAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= LocalInstAccountingEntity
		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension1Structure			= FinanceEnterpriseGroup.EnterpriseDim1Structure
		EntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
		ProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Project			       				= GLExpenseTotal.Project












		ReportingBasisYearRel
			one-to-one relation to ReportingBasisYear
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingBasis				= LocalReportingBasis
				related.ReportingBasisYear			= LocalBasisYear








		OpenReportingBasisYearRel								
			one-to-many relation to ReportingBasisYear
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingBasis				= LocalReportingBasis
			Instance Selection
				where (related.ReportingBasisYear			>= LocalBasisYear
				and    related.ReportingBasisYear			<  LocalReportingBasis.BasisYear)














































		ReportingChartAccountByCloseAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses ByCloseToAccount
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.ReportingChart							= LocalReportingBasis.ReportingChart
				related.CloseToAccount							= LocalYearEndGeneralLedgerChartAccount
			Instance Selection	
				where (related.ChartType.Posting)

		ReportingChartAccountBySubordinateAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses AccountByChartType
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.ReportingChart							= LocalReportingBasis.ReportingChart	
				related.ChartType								= ChartType.Posting					
				related.GeneralLedgerChartAccount				= LocalYearEndGeneralLedgerChartAccount		
			Instance Selection	
				where (related.CloseToAccount entered)
				
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup	= actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity		= AccountingEntity

#ifdef module ad
		ADBAccountMasterByAccountRel
			one-to-one relation to ADBAccountMaster
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= LocalInstGeneralLedgerChartAccount
				related.AccountingEntity			= LocalInstAccountingEntity
				related.AccountingUnit				= LocalInstAccountingUnit
				related.FinanceDimension1			= LocalInstFinanceDimension1

		UpdateADBDailyAmountRel
			one-to-one relation to ADBDailyAmount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.ReportingBasis									= LocalReportingBasis
				related.AccountingEntity								= LocalInstAccountingEntity
				related.ADBDailyAmount.ADBOrganizationDimension			= LocalInstADBOrganizationDimension
				related.ADBDailyAmount.GeneralLedgerChartAccount		= LocalInstGeneralLedgerChartAccount
				related.ADBDailyAmount.RunDate 							= LocalDate
#endif









		
    Sets
		ByChartAccount
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				GLExpenseTotal.Ledger
				GLExpenseTotal.EntityYearPeriod
				GLExpenseTotal.GeneralLedgerChartAccount
		ByGeneralLedgerChartAccountPeriod
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				GLExpenseTotal.GeneralLedgerChartAccount
				AccountingEntity
				GLExpenseTotal.EntityYearPeriod
				GLExpenseTotal.Ledger
		ByPeriodEndDate
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				IsUREChartAccount

				PeriodEndingDate
				update stamp
				UniqueID
										
		ByProjectAccount
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				GLExpenseTotal.Project
				GLExpenseTotal.GeneralLedgerChartAccount				
				AccountingEntity
				GLExpenseTotal.Ledger
				GLExpenseTotal.EntityYearPeriod
										
		ByLedger
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				GLExpenseTotal.Ledger
				AccountingEntity
				GLExpenseTotal.EntityYearPeriod
				GLExpenseTotal.GeneralLedgerChartAccount

		ByAccountPeriodUnitDim1
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				GLExpenseTotal.Ledger
				AccountingEntity

				GLExpenseTotal.EntityYearPeriod
				GLExpenseTotal.GeneralLedgerChartAccount
				GLExpenseTotal.AccountingUnit
				FinanceDimension1


	Field Rules
		PeriodEndingDate
			required

	Actions
		Create is a Create Action
			restricted
			bypass field rules
			Action Rules
				include UpdateActualTotal

		PostTransactions is an Update Action
			restricted
			refresh and lock this instance
			bypass field rules
			Action Rules
				include UpdateActualTotal

		PostTransactionsNoRefresh is an Update Action
			restricted
			bypass field rules
			Action Rules
				include UpdateActualTotal
				
    	Delete is a Delete Action
			restricted

		InitializeAmounts is an Update Action	
			restricted
			Action Rules
				include InitializeAmounts


			
		InitializeTotals is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity			is a AccountingEntity
					default label is "AccountingEntity"
				PrmDateRange  				is a DateRange
					default label is "DateRange"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmAccountingEntity
					required
				PrmDateRange
					required

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Local Fields	

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup

				and	   AccountingEntity				= PrmAccountingEntity
				and    PeriodEndingDate 			within PrmDateRange
				and	   !GLExpenseTotal.Ledger.CloseLedger)

			Set Is
				PrmFinanceEnterpriseGroup
				PrmAccountingEntity
				PrmDateRange

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				PeriodEndingDate
				GLExpenseTotal.Ledger
				GLExpenseTotal.GeneralLedgerChartAccount
				GLExpenseTotal.EntityYearPeriod

			Action Rules
				Empty Set Rules

				Set Rules

				AccountingEntity Set Rules
					Entrance Rules

				Instance Rules

					include InitializeAmounts


					
		DeleteData is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is like FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity			is like AccountingEntity
					default label is "AccountingEntity"
				PrmCurrencyLedger			is like Ledger
					default label is "Ledger"
				PrmCloseLedger				is like Ledger
					default label is "Ledger"
				PrmPrimaryLedger			is like Ledger
					default label is "Ledger"

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup

				and	   GLExpenseTotal.AccountingEntity 	= PrmAccountingEntity
				and	  (GLExpenseTotal.Ledger	= PrmCurrencyLedger
				or	   GLExpenseTotal.Ledger	= PrmCloseLedger)
				and   ((PrmPrimaryLedger entered
				and    	GLExpenseTotal.PrimaryLedger		=  PrmPrimaryLedger)
				or	  (!PrmPrimaryLedger entered)))





			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				PeriodEndingDate
				GLExpenseTotal.Ledger

			Action Rules
				Empty Set Rules
				Instance Rules
					invoke Delete 

		InitializeUndistributedRetainedEarnings is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity			is a AccountingEntity
					default label is "AccountingEntity"
				PrmDateRange  				is a DateRange
					default label is "DateRange"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmAccountingEntity
					required
				PrmDateRange
					required

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Local Fields	
				CommitNow						is Boolean

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup

				and	   AccountingEntity				= PrmAccountingEntity
				and    PeriodEndingDate 			within PrmDateRange
				and	   IsUREChartAccount
				and	   !GLExpenseTotal.Ledger.CloseLedger)

			Set Is
				PrmFinanceEnterpriseGroup
				PrmAccountingEntity
				PrmDateRange

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				PeriodEndingDate
				GLExpenseTotal.Ledger
				GLExpenseTotal.GeneralLedgerChartAccount
				GLExpenseTotal.EntityYearPeriod

			Action Rules
				Empty Set Rules

				Set Rules

				AccountingEntity Set Rules
					Entrance Rules

				Instance Rules
					include InitializeAmounts
					





















































































































































































































































































































































































































































































































































































































































































































