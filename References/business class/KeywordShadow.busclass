KeywordShadow is a BusinessClass
	owned by ic
	prefix is Keyw
	
	Ontology
		symbolic key is KeywordShadow
		
	Patterns				
        implements StaticJava
        disable AuditIndex
        disable Auditing
        disable EffectiveDated
		implements CreateStamp
		implements UpdateStamp

    Persistent Fields
    	ItemGroup
    	Item
    	Contract
    	ContractLine
			default label is untranslatable
		Description
		Description2 is a Description
			classic name is DESCRIPTION2
		Description3
			classic name is DESCRIPTION3
		ManufacturerCodeTextSearch is Alpha size up to 350
			default label is "ManufacturerCodeSearchText"
		ManufacturerNumberTextSearch is Alpha size up to 350
			default label is "ManufacturerNumberSearchText"
		TextSearch					is Text
			text searchable
			default label is "SearchText"
		ItemHasContract		  		is Boolean
		HasPreferredContract   		is Boolean
		ItemGTIN
			
	Local Fields
		Execute							is Boolean
		LocalVendor                     is a Vendor
		LocalPurchaseFromLocation		is a PurchaseFromLocation
		TransactionCostDefault
		ProcurementCostDefault
		InventoryCostDefault
		LocalCostUOM					is a UnitOfMeasure
		LocalCostOption					is a CostOption
		LocalVendorItem             	is a VendorItem
		LocalContract					is like Contract
		LocalContractLine				is like ContractLine
		LocalQuantity					is a Quantity
		LocalCostTranUOM				is a UnitOfMeasure
		LocalQuantityUOM				is a UnitOfMeasure		
		LocalCostCalculated				is Boolean
		LocalDefaultUnitCost			is a UnitCost
		LocalManufacturer				is a Manufacturer
		LocalManufacturerNumber			is a ManufacturerNumber
        LocalCreatePurchaseOrder        is Boolean
        
        LocalDefaultedContract			is like Contract
        LocalDefaultedContractLine		is like ContractLine
        
        LocalRequisitionForDefaulting	is a  Requisition
        LocalReqLocForDefaulting		is a  RequestingLocation
        LocalFromCompanyForDefaulting	is like InventoryCompany
        LocalFromLocForDefaulting		is like InventoryLocation
        LocalItemType					is like ItemType
		LocalItem					    is like Item
		LocalComponentItem				is like Item
		LocalWarehouseLocationRuleDetailLocation 	is an InventoryLocation
        LocalLocationRuleFromCompanyLocation	is a FromCompanyLocation
        LocalAvailableQuantity             		is a Quantity
        	precision is NumberOfDecimalsQuantity
        LocalFromCompanyLocationFromRule		is a FromCompanyLocation
		LocalCurrencyCode				is like Currency
		LocalPreferredContract			is like Contract
		LocalContractLinePriority		is Numeric size 1
		LocalRequisitionExists			is Boolean
		LocalVendorFirst				is Boolean
		LocalRequisitionVendorIsHigherThanContract is Boolean
		LocalRequisitionPurchaseFromIsHigherThanContract is Boolean
		LocalRequisitionVendor          is like Vendor
		LocalRequisitionPurchaseFrom	is like PurchaseFromLocation
		UOMCalculation
		LocalCostConversionUOM			is a UnitOfMeasure
		LocalProcurementTemplate		is like ProcurementTemplate
		LocalCompletionMessage			is Text
		LocalCompanyForQuantityAdd		is like InventoryCompany
		LocalRequisitionForQuantityAdd	is like Requisition
		LocalCostUOMForQuantityAdd		is a UnitOfMeasure
		LocalUnitCostForQuantityAdd		is like UnsignedUnitCost
			precision is NumberOfDecimalsCost
				round to precision
		LocalBlankVendorLocation		is Boolean
									
	Transient Fields
		NewRequisition                  is like Requisition
		NewRequisitionLine				is like RequisitionLine						
		LocalCostCode					is a CostCode
			default label is "CostCode"

        TransientCompany				is an InventoryCompany
			derive value from actor.agent(Employee).Employee.Requester.Company
        TransientRequisition			is a  Requisition
        TransientRequestingLocation		is a  RequestingLocation
			derive value from actor.agent(Employee).Employee.Requester.RequestingLocation
        TransientFromCompanyLocation	is a FromCompanyLocation
			derive value from actor.agent(Employee).Employee.Requester.RequestingLocation.FromCompanyLocation
		TransientRequestedDeliveryDate	is Date
	    TransientAllocationPriority		is like AllocationPriority
	    TransientAllocationPriorityLevel is an AllocationPriorityLevelGroup
			derive value from DerivedFAlocationPriorityLevelGroup
		TransientRequisitionDescription	is Alpha size 30
		TransientQuantity				is a UnsignedQuantity
			precision is NumberOfDecimalsQuantity
				round to precision
			derive value from DerivedQuantity
		TransientCostUOM				is a UnitOfMeasure
			derive value from DerivedCostUOM
		TransientUnitCost				is like UnsignedUnitCost
			precision is NumberOfDecimalsCost
				round to precision
			derive value from DefaultUnitCost
		TransientAddToRequisition		is Numeric size 1
			States
				AddToExistingRequisition	value is 0
				StartNewRequisition			value is 1				
		TransientBuyer					is a BuyerGroupField 
			derive value from ItemGroup + "^" + RequestingLocationRel.Buyer			
		TransientDeliverTo				is a DeliverTo
		TransientCommodityCode			is a CommCodes
			derive value from Item.CommodityCode
		TransientPOCode					is a POCode
			derive value from RequestingLocationRel.POCode
		TransientVendor					is a VendorGroupField

			
	Rule Blocks
		GetContractAndContractLine
			if (DefaultItemType.Special)
				initialize ProcurementCostDefault
				initialize LocalDefaultedContract
				initialize LocalDefaultedContractLine
				
				ProcurementCostDefault.InProcurementGroup 			= PurchasingCompanyRel.ProcurementGroup
				ProcurementCostDefault.InItem 						= Item
				ProcurementCostDefault.InItemType 					= ItemType.Special
				ProcurementCostDefault.InManufacturerCode 			= ContractLine.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= ContractLine.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= ContractLine.ManufacturerNumber
				ProcurementCostDefault.InDate 						= current corporate date
			    ProcurementCostDefault.InSystem						= "RQ"
			    ProcurementCostDefault.InDoContractOnly				= true
			    
			    if (PurchasingCompanyRel.CostOrVendorDefaultingOrder.VendorFirstThenCost)
					TransactionCostDefault.LocalCreatePurchaseOrder		= true
					ProcurementCostDefault.InVendor						= TransactionCostDefault.DefaultVendor
					ProcurementCostDefault.InPurchaseFromLocation		= TransactionCostDefault.DefaultPurchaseFromLocation
					ProcurementCostDefault.InVendorItem					= TransactionCostDefault.DefaultVendorItem
			    
				ProcurementCostDefault.InRequestingCompany 		= TransientCompany
				ProcurementCostDefault.InRequestingLocation		= LocalReqLocForDefaulting
				ProcurementCostDefault.InStockless 				= LocalReqLocForDefaulting.Stockless
				
				ProcurementCostDefault.InCompany 				= LocalFromCompanyForDefaulting
				ProcurementCostDefault.InLocation 				= LocalFromLocForDefaulting
				
				Execute	= ProcurementCostDefault.DefaultUnitCost
	
				if (ProcurementCostDefault.InStockless
				and ProcurementCostDefault.OutputContract not entered)
					ProcurementCostDefault.InStockless	= false
					Execute	= ProcurementCostDefault.DefaultUnitCost
	
				if (ProcurementCostDefault.OutputContract entered)
					LocalDefaultedContract 		= ProcurementCostDefault.OutputContract
					LocalDefaultedContractLine 	= ProcurementCostDefault.OutputContractLine
					
					if (SpecialItemHigherPriorityOrCheaper)
						confirmation required
							"Contract<LocalDefaultedContract>AndContractLine<LocalDefaultedContractLine>ExistsForThisSameManufacturer<DefaultContractLineRel.Manufacturer>AndManufacturerNumber<DefaultContractLineRel.ManufacturerNumber>WhichMayHaveALowerUnitCost;ReferencedContractLineMayNotShowOnSearchWithoutSearchingOnManufacturerNumber;DoYouWantToContinue?"

		GetManufacturerInformation
			if (DefaultItemType.Service
			or  DefaultItemType.Special)
				LocalManufacturer									= ContractLine.Manufacturer
				LocalManufacturerNumber								= ContractLine.ManufacturerNumber
			else
			if (LocalCreatePurchaseOrder
			and VendorItemRel.Manufacturer.ManufacturerCode entered)			
				LocalManufacturer									= VendorItemRel.Manufacturer
				LocalManufacturerNumber								= VendorItemRel.ManufacturerNumber
			else
			if (ItemAtRequisitionFromLocationRel.Manufacturer.ManufacturerCode entered)
				LocalManufacturer									= ItemAtRequisitionFromLocationRel.Manufacturer
				LocalManufacturerNumber								= ItemAtRequisitionFromLocationRel.ManufacturerNumber
			else
			if (ItemAtFromLocationRel.Manufacturer.ManufacturerCode entered)
				LocalManufacturer									= ItemAtFromLocationRel.Manufacturer
				LocalManufacturerNumber								= ItemAtFromLocationRel.ManufacturerNumber
			else	
				LocalManufacturer									= ItemRel.Manufacturer
				LocalManufacturerNumber								= ItemRel.ManufacturerNumber

		GetCostOrVendorDefaultingSetup
			if (PurchasingCompanyRel.CostOrVendorDefaultingOrder.VendorFirstThenCost)
				LocalVendorFirst = true
			else 
				LocalVendorFirst = false

			if (PurchasingCompanyRel.VendorDefaultingOrderRQ.Requisition < PurchasingCompanyRel.VendorDefaultingOrderRQ.Contract)
				LocalRequisitionVendorIsHigherThanContract = true
			else
				LocalRequisitionVendorIsHigherThanContract = false

			if (PurchasingCompanyRel.PurchaseFromLocationDefaultingOrderRQ.Requisition < PurchasingCompanyRel.PurchaseFromLocationDefaultingOrderRQ.Contract)
				LocalRequisitionPurchaseFromIsHigherThanContract = true
			else 
				LocalRequisitionPurchaseFromIsHigherThanContract = false

		GetRequisitionVendorAndPurchaseFromLocation
			if (RequisitionRel exists)
				LocalRequisitionExists 			= true
				LocalRequisitionVendor 			= RequisitionRel.Vendor
				LocalRequisitionPurchaseFrom 	= RequisitionRel.PurchaseFromLocation
			else 
				initialize LocalRequisitionExists
				initialize LocalRequisitionVendor
				initialize LocalPurchaseFromLocation

		InitializeLocalDefaultUnitCost
			initialize LocalDefaultUnitCost
			round LocalDefaultUnitCost to nearest DerivedRoundTo
			return LocalDefaultUnitCost

    Derived Fields
		InventoryItemLabel is a LabelField
			restricted
			"Stock" 
			
		NonStockItemLabel is a LabelField
			restricted
			"NonStock" 

		SpecialItemLabel is a LabelField
			restricted
			"Special"

		ServiceItemLabel is a LabelField
			restricted
			"Service"

		CostRequiredLabel is a LabelField
			restricted
			"CostRequired"
    		
		NoChargeLabel is a LabelField
			restricted
			"NoCharge"

		VendorDeterminedLabel is a LabelField
			restricted
			"VendorDetermined"


    	EnteredCostCodeLabel is a LabelField
    		restricted
    		"Entered"
    		
    	LastCostCostCodeLabel is a LabelField
    		restricted
    		"LastCost"
    		
    	ContractCostCodeLabel is a LabelField
    		restricted
    		"Contract"
    		
    	CatalogQuoteCostCodeLabel is a LabelField
    		restricted
    		"CatalogQuote"
    		
    	BlanketCostCodeLabel is a LabelField
    		restricted
    		"Blanket"
    		
    	LastPoCreatedCostCodeLabel is a LabelField
    		restricted
    		"LastPoCreated"
    		
    	InventoryCostCodeLabel is a LabelField
    		restricted
    		"InventoryCost"
    		
    	PunchoutCostCodeLabel is a LabelField
    		restricted
    		"Punchout"
    		
    	TierCompanyParticipantCostCodeLabel is a LabelField
    		restricted
    		"Tier-CompanyParticipant"

    	TierIcLocationParticipant is a LabelField
    		restricted
    		"Tier-InventoryLocationParticipant"

    	TierReqLocParticipant is a LabelField
    		restricted
    		"Tier-RequestingLocationParticipant"
    		
    	WebsiteCostCodeLabel is a LabelField
    		restricted
    		"Website"
    		
    	ProcurementTemplateContractCostCodeLabel is a LabelField
    		restricted
    		"ProcurementTemplateContract"
    		
    	StandingCostCodeLabel is a LabelField
    		restricted
    		"Standing"

    	StrategicSourcingCostCodeLabel is a LabelField
    		restricted
    		"StrategicSourcing"

		KitItemLabel is a LabelField

			"KitItem"

		SubstituteItemLabel is a LabelField

			"HasSubstituteItem(s)"

		ReplacementItemLabel is a LabelField
			"ReplacementForItem<Item>"

		CompanionItemLabel is a LabelField
			"HasComplementaryItem(s)"

		ItemAbbreviation is a DerivedField
			type is AlphaUpper 3
			restricted
			return ItemDescription

		SpecialHandlingCodeLabel is a LabelField
			"HasSpecialHandlingCode"

		NumberOfDecimalsCost is a ConditionalField
			type is Numeric size 1
			if (LocalItemType = ItemType.Inventoried
			or LocalItemType = ItemType.NonStock)
				ItemRel.NumberOfDecimalsCost
			else
				InventoryCompanyRel.NumberOfDecimalsCost

		NumberOfDecimalsQuantity is a ConditionalField
			type is Numeric size 1
			if (HasItem)
				ItemRel.NumberOfDecimalsQuantity
			else
				InventoryCompanyRel.NumberOfDecimalsQuantity

		DerivedCompany is a DerivedField
			type is like InventoryCompany
			restricted
			if (RequisitionRel exists)
				return RequisitionRel.Company
			else
				return RequesterRel.Company
	
		DerivedRequestingLocation		is a DerivedField
			type is like RequestingLocation
			if (RequisitionRel exists)
				return RequisitionRel.RequestingLocation
			else
				return RequesterRel.RequestingLocation
				
		DerivedLocationRule		is a DerivedField
			type is like WarehouseLocationRule
			restricted
			if (RequisitionRel exists)
				return RequisitionRel.LocationRule
			else
				return RequesterRel.RequestingLocation.LocationRule		
	

		ItemDescription is a DerivedField
			type is like Description
			if (HasItem)
				return ItemRel.Description
			else
				return ContractLine.ItemDescription
	
		ItemDescription2 is a DerivedField
			type is like Description
			if (HasItem)
				return ItemRel.Description2
			else
				return ContractLine.ItemDescription2
				
		ItemDescription3 is a DerivedField
			type is like Description3
			if (HasItem)
				return ItemRel.Description3
			else
				return ContractLine.ItemDescription3
				
		ItemAvailableSOH is a DerivedField
			type is like Quantity
				precision is NumberOfDecimalsQuantity
			default label is untranslatable				
			if (ItemAtRequisitionFromLocationRel exists
			and DerivedAvailableQtyInTranUOM
			and not ItemRel.IsCatchWeightItem)
				if (ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure entered)
					LocalCostTranUOM				= ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure
					return ItemAtRequisitionFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
				else
					if (HasItemLocationStockUOM)
						LocalCostTranUOM 			= ItemLocationRel.ItemLocationStockUOM
						return ItemAtRequisitionFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
					return ItemAtRequisitionFromLocationRel.AvailableQuantity
			else
				if (ItemAtRequisitionFromLocationRel exists)
					if (not ItemRel.IsCatchWeightItem
					and HasItemLocationStockUOM)
						LocalCostTranUOM 			= ItemLocationRel.ItemLocationStockUOM
						return ItemAtRequisitionFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
					return ItemAtRequisitionFromLocationRel.AvailableQuantity
					
			if (ItemIsStockAtRequesterFromLocation
			and DerivedAvailableQtyInTranUOM
			and not ItemRel.IsCatchWeightItem)
				if (ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure entered)
					LocalCostTranUOM				= ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure
					if (ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure entered)
						LocalCostTranUOM			= ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure
					return ItemAtFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
				else
					if (HasItemLocationStockUOM)
						LocalCostTranUOM 			= ItemLocationRel.ItemLocationStockUOM
						return ItemAtFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
					return ItemAtFromLocationRel.AvailableQuantity
			else
				if (ItemIsStockAtRequesterFromLocation)
					if (not ItemRel.IsCatchWeightItem
					and HasItemLocationStockUOM)
						LocalCostTranUOM 			= ItemLocationRel.ItemLocationStockUOM
						return ItemAtFromLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
					return ItemAtFromLocationRel.AvailableQuantity



		ItemLocationRuleAvailableSOH is a DerivedField
			type is like Quantity
				precision is NumberOfDecimalsQuantity
			default label is untranslatable
			if (Item exists) 				
				if (DerivedLocationRule entered)
	            	initialize LocalAvailableQuantity
	            	for each WarehouseLocationRuleDetailsRel
	            		LocalLocationRuleFromCompanyLocation.FromCompany = each.LocationCompany
	            		LocalLocationRuleFromCompanyLocation.FromLocation = each.InventoryLocation
	            		if (WarehouseLocationRuleItemLocationRel exists
	                    and WarehouseLocationRuleItemLocationRel.InventoryTracked
	            		and WarehouseLocationRuleItemLocationRel.Active)
	                		if (WarehouseLocationRuleItemLocationRel.AvailableQuantity >= 1)
	                			LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	                			LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation
	                			if (DerivedAvailableQtyInTranUOM)
									if (DefaultTransactionCost entered)
										LocalCostTranUOM				= TransactionCostDefault.DefaultUOM
										return WarehouseLocationRuleItemLocationRel.AvailableQuantity / ItemUOMTranRel.UOMConversion
								else
	                				return WarehouseLocationRuleItemLocationRel.AvailableQuantity
	                			end for each
	                		else
	                			if (WarehouseLocationRuleItemLocationRel.AvailableQuantity > LocalAvailableQuantity
	                			or LocalFromCompanyLocationFromRule not entered)
	        						LocalAvailableQuantity = WarehouseLocationRuleItemLocationRel.AvailableQuantity
	                				LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	        						LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation		
					
					
		DefaultItemType	is a DerivedField
			type is like ItemType
			if (ContractItem)
				if (ContractLine.ItemType.Special)
					return ItemType.Special
				else
					return ItemType.Service
						
			if (DerivedLocationRule entered)
        		if (Item exists)
	    			if (not RequestingLocationRel.Stockless)
	        			for each WarehouseLocationRuleDetailsRel
	        				LocalLocationRuleFromCompanyLocation.FromCompany  = each.LocationCompany
	                		LocalLocationRuleFromCompanyLocation.FromLocation = each.InventoryLocation
	                		if (WarehouseLocationRuleItemLocationRel exists
                            and WarehouseLocationRuleItemLocationRel.InventoryTracked
	                		and WarehouseLocationRuleItemLocationRel.Active)
	                        	return ItemType.Inventoried
	                        	end for each
					return ItemType.NonStock
			else		
				if (RequisitionRel exists)

					if (not RequestingLocationRel.ParOrExchangeLocation
					and (ItemAtRequisitionFromLocationRelExists
					or (ItemAtRequestingLocationRel exists 
					and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered))								
					or (RequestingLocationRel.ParOrExchangeLocation 
					and (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered									
					or (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel not exists
					and ItemAtRequisitionFromLocationRelExists))))
						if (RequestingLocationRel.Stockless
						and ContractItemRel.Stockless)
							return ItemType.NonStock
						else
							return ItemType.Inventoried
					else
						return ItemType.NonStock
				

				if (RequestingLocationRel.ParOrExchangeLocation 
				and (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered
				or (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel not exists
				and ItemAtFromLocationRelExists))
				or (not RequestingLocationRel.ParOrExchangeLocation  
				and ItemAtFromLocationRelExists))
					if (RequestingLocationRel.Stockless
					and ContractItemRel.Stockless)
						return ItemType.NonStock
					else
						return ItemType.Inventoried	
				else
					return ItemType.NonStock

		DefaultServiceCode	is a DerivedField
			type is like ServiceCode
			if  (ContractItem
			and  ItemIsServiceItem)
				if (ContractLineRel.ServiceCode entered)
					return ContractLineRel.ServiceCode
				else
					return ContractLineMatchingRel.ServiceCode
			else				
				return blank

		DefaultServiceDescription	is a DerivedField
			type is like Description
			restricted
			if  (ContractItem
			and  ItemIsServiceItem)
				return ContractLineRel.ItemDescription
			else				
				return blank
					
		DefaultItemTypeLabel is a DerivedField
			type is MessageField
			if (DefaultItemType.Service)
				return ServiceItemLabel
			else
			if (DefaultItemType.Special)
				return SpecialItemLabel
			else
			if (DefaultItemType.Inventoried)
				return InventoryItemLabel
			else
				return NonStockItemLabel
		
		
		DefaultLocationRuleFromCompany is a DerivedField
			type is like InventoryCompany				
			if (DerivedLocationRule entered)
				if (Item exists)
	            	initialize LocalAvailableQuantity
	            	for each WarehouseLocationRuleDetailsRel
	            		LocalLocationRuleFromCompanyLocation.FromCompany = each.LocationCompany
	            		LocalLocationRuleFromCompanyLocation.FromLocation = each.InventoryLocation
	            		if (WarehouseLocationRuleItemLocationRel exists
	                    and WarehouseLocationRuleItemLocationRel.InventoryTracked
	            		and WarehouseLocationRuleItemLocationRel.Active)
	                		if (WarehouseLocationRuleItemLocationRel.AvailableQuantity >= 1)
	                			LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	                			LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation
	                			end for each
	                		else
	                			if (WarehouseLocationRuleItemLocationRel.AvailableQuantity > LocalAvailableQuantity
	                        	or LocalFromCompanyLocationFromRule not entered)
	                				LocalAvailableQuantity = WarehouseLocationRuleItemLocationRel.AvailableQuantity
	                				LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	                				LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation
	                return LocalFromCompanyLocationFromRule.FromCompany
		
		DefaultFromCompany is a DerivedField
			type is like InventoryCompany
			if (DefaultLocationRuleFromCompany entered)
				return DefaultLocationRuleFromCompany

			if  (RequisitionRel exists)
				if (ItemAtRequestingLocationRel exists
				and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered)
					return ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromCompany
				else
					return RequisitionRel.FromCompanyLocation.FromCompany
				
			if (RequestingLocationRel.FromCompanyLocation.FromCompany entered)
				if (ItemAtRequestingLocationRel exists
				and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered)
					return ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromCompany
				else
					return RequestingLocationRel.FromCompanyLocation.FromCompany
			
			return DerivedCompany
		
		DefaultLocationRuleFromLocation	is a DerivedField
			type is like InventoryLocation
			if (DerivedLocationRule entered)
				if (Item exists)
	            	initialize LocalAvailableQuantity
	            	for each WarehouseLocationRuleDetailsRel
	            		LocalLocationRuleFromCompanyLocation.FromCompany = each.LocationCompany
	            		LocalLocationRuleFromCompanyLocation.FromLocation = each.InventoryLocation
	            		if (WarehouseLocationRuleItemLocationRel exists
	                    and WarehouseLocationRuleItemLocationRel.InventoryTracked
	            		and WarehouseLocationRuleItemLocationRel.Active)
	                		if (WarehouseLocationRuleItemLocationRel.AvailableQuantity >= 1)
	                			LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	                			LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation
	                			end for each
	                		else
	                			if (WarehouseLocationRuleItemLocationRel.AvailableQuantity > LocalAvailableQuantity
	                        	or LocalFromCompanyLocationFromRule not entered)
	                        		LocalAvailableQuantity = WarehouseLocationRuleItemLocationRel.AvailableQuantity
	                        		LocalFromCompanyLocationFromRule.FromCompany = LocalLocationRuleFromCompanyLocation.FromCompany
	                        		LocalFromCompanyLocationFromRule.FromLocation = LocalLocationRuleFromCompanyLocation.FromLocation
	                return LocalFromCompanyLocationFromRule.FromLocation
			
		DefaultFromLocation	is a DerivedField
			type is like InventoryLocation
			if (DefaultLocationRuleFromLocation entered)
				return DefaultLocationRuleFromLocation
			
			if  (RequisitionRel exists)
				if (ItemAtRequestingLocationRel exists
				and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered)
					return ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromLocation
				else
					return RequisitionRel.FromCompanyLocation.FromLocation
				
			if (RequestingLocationRel.FromCompanyLocation.FromLocation entered)
				if (ItemAtRequestingLocationRel exists
				and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered)
					return ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromLocation
				else
					return RequestingLocationRel.FromCompanyLocation.FromLocation
			
			return DerivedRequestingLocation			
				
		DefaultTransactionCost	is a DerivedField
			type is like InternationalCost
			restricted
			TransactionCostDefault.InputItem 							 = DerivedItem
			TransactionCostDefault.InputItemType						 = DefaultItemType
			TransactionCostDefault.InputUOM								 = DerivedCostUOM
			TransactionCostDefault.InputFromCompanyLocation.FromCompany  = DefaultFromCompany
			TransactionCostDefault.InputFromCompanyLocation.FromLocation = DefaultFromLocation
			return TransactionCostDefault.GetTransactionCost

		DerivedCreatePurchaseOrder is a DerivedField
			type is Boolean
			default label is "CreatePurchaseOrder"
			if (not DefaultItemType.Inventoried
			or (DefaultFromCompany = DerivedCompany
			and DefaultFromLocation = DerivedRequestingLocation))
				return true

		DefaultUnitCost		is a DerivedField
			type is like UnitCost
				precision is NumberOfDecimalsCost
			
			initialize ProcurementCostDefault
			initialize LocalCreatePurchaseOrder				
			if (LocalItem not entered)
				LocalItem     	= Item

			if (LocalItemType not entered)
				LocalItemType = DefaultItemType

			if (LocalCostCalculated)
				round LocalDefaultUnitCost to nearest DerivedRoundTo
				return LocalDefaultUnitCost

			LocalVendorItem = TransactionCostDefault.DefaultVendorItem

			LocalCreatePurchaseOrder = DerivedCreatePurchaseOrder

			if (ItemIsStockOrNonStock
			and (KitItemRel exists
			and IsMakeToOrderKitItem))
				LocalDefaultUnitCost							= 0
				TransactionCostDefault.InputItem 				= LocalItem
				LocalCostUOM 									= TransactionCostDefault.DefaultUOM
				for each KitItemRel.KitComponentsRel
					LocalComponentItem  = each.ComponentItem
					LocalQuantity		= each.Quantity
					initialize InventoryCostDefault
					InventoryCostDefault.InCompany 				= DefaultFromCompany
					InventoryCostDefault.InInventoryLocation 	= DefaultFromLocation
					InventoryCostDefault.InItem 				= LocalComponentItem
					InventoryCostDefault.InQuantity 			= LocalQuantity
					
					LocalDefaultUnitCost += (InventoryCostDefault.DefaultInventoryCost * LocalQuantity)
				
				if (LocalDefaultUnitCost entered)
					LocalCostCode = CostCode.InventoryCost	
				
				round LocalDefaultUnitCost to nearest DerivedRoundTo
				return LocalDefaultUnitCost	
				
			if (RequestingLocationRel.LocationRule not entered
			and not RequestingLocationRel.Stockless
			and LocalItemType.Inventoried
			and not LocalCreatePurchaseOrder
			and ItemAvailableSOH = 0
			and (Item.HasReplacementItem and ValidReplacementItem))
				if (Item.ReplacementItem.Active
				and (ReplacementItemLocationRel exists and ReplacementItemLocationRel.Active))
					LocalItem			= Item.ReplacementItem
					LocalCostUOM 		= Item.ReplacementItem.StockUOM
					if (not ReplacementItemLocationRel.InventoryTracked)
						LocalItemType 				= ItemType.NonStock		
						LocalCreatePurchaseOrder 	= true

			if ((ItemIsStockAtRequesterFromLocation and ItemAtFromLocationRel.NoCharge 
			and DefaultItemType.Inventoried
			and ItemAtRequestingLocationRel not exists
			and ItemAtFromLocationRel.InventoryLocation = DefaultFromLocation)
			or	(ItemIsStockAtDefaultFromLocation and ItemLocationRel.NoCharge
			and	DefaultItemType.Inventoried))
				LocalCostOption = CostOption.NoCharge
				LocalCostCode = CostCode.InventoryCost
				initialize LocalContract						 
				initialize LocalContractLine
				include GetManufacturerInformation
				LocalCostCalculated	= true
				initialize LocalDefaultUnitCost
				round LocalDefaultUnitCost to nearest DerivedRoundTo
				return LocalDefaultUnitCost			
			
			if (DefaultTransactionCost entered
			and DefaultFromLocation not = DerivedRequestingLocation
			and ItemLocationRel exists and ItemLocationRel.InventoryTracked
			and not LocalCreatePurchaseOrder)
				LocalCostUOM = TransactionCostDefault.DefaultUOM
				LocalCostCode = CostCode.InventoryCost
				LocalVendor = TransactionCostDefault.DefaultVendor
				LocalPurchaseFromLocation = TransactionCostDefault.DefaultPurchaseFromLocation
				initialize LocalContract						 
				initialize LocalContractLine						 
				initialize LocalCostOption						 
				include GetManufacturerInformation					 
				LocalCostCalculated	= true
				LocalDefaultUnitCost = DefaultTransactionCost
				round LocalDefaultUnitCost to nearest DerivedRoundTo
				return LocalDefaultUnitCost
			if (PurchasingCompanyRel.CostOrVendorDefaultingOrder.VendorFirstThenCost)
				TransactionCostDefault.InputFromCompanyLocation.FromCompany 	= DefaultFromCompany
				TransactionCostDefault.InputFromCompanyLocation.FromLocation	= DefaultFromLocation
				TransactionCostDefault.InputRequestingLocation					= DerivedRequestingLocation
				TransactionCostDefault.LocalCreatePurchaseOrder					= LocalCreatePurchaseOrder					
				TransactionCostDefault.InputRequisition							= RequesterRel.CurrentRequisitionForRQC	
				TransactionCostDefault.InputCompany								= DerivedCompany

				if (DefaultItemType.Special
                or  DefaultItemType.Service)    
                    TransactionCostDefault.InputItemType                        = DefaultItemType 

				if (LocalVendor not entered)
					LocalVendor										= TransactionCostDefault.DefaultVendor
					LocalPurchaseFromLocation						= TransactionCostDefault.DefaultPurchaseFromLocation
					if (not RequestingLocationRel.ParOrExchangeLocation
					and LocalVendor entered
					and LocalPurchaseFromLocation entered
					and TransactionCostDefault.DefaultLocalVendorLocationFromContract)
						LocalBlankVendorLocation = true
			
			if (ItemAtRequestingLocationRel exists)
				if (RequestingLocationRel.Stockless
				and ContractItemRel.Stockless
				and (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered
				or ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.Vendor entered))
					LocalVendor						= Contract.Vendor
					if (ContractItemRel.ApPoPurchaseFrom.VendorLocation entered)
						LocalPurchaseFromLocation 	= ContractItemRel.ApPoPurchaseFrom.VendorLocation
					else
					if (ContractItemRel.ApPoPurchaseFrom.PurchaseFromLocation entered)
						LocalPurchaseFromLocation 	= ContractItemRel.ApPoPurchaseFrom.PurchaseFromLocation
				else
				if (RequestingLocationRel.ParOrExchangeLocation 
				and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.Vendor entered)
					LocalVendor 				= ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.Vendor
					LocalPurchaseFromLocation 	= ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.PurchaseFromLocation

			if (PurchasingCompanyRel.CostOrVendorItemDefaultingOrder.VendorItemBeforeCost)
				LocalVendorItem 			= VendorItemDefaultRel.VendorItem
							
			ProcurementCostDefault.InItem 						= LocalItem
			ProcurementCostDefault.InItemType 					= LocalItemType
			ProcurementCostDefault.InVendorItem					= LocalVendorItem			
			
			if (DefaultItemType.Service
			or  DefaultItemType.Special)
				ProcurementCostDefault.InManufacturerCode 			= ContractLine.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= ContractLine.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= ContractLine.ManufacturerNumber
				LocalManufacturer									= ContractLine.Manufacturer
				LocalManufacturerNumber								= ContractLine.ManufacturerNumber
			else
			if (LocalCreatePurchaseOrder
			and VendorItemRel.Manufacturer.ManufacturerCode entered)			
				ProcurementCostDefault.InManufacturerCode 			= VendorItemRel.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= VendorItemRel.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= VendorItemRel.ManufacturerNumber
				LocalManufacturer									= VendorItemRel.Manufacturer
				LocalManufacturerNumber								= VendorItemRel.ManufacturerNumber
			else
			if (ItemAtRequisitionFromLocationRel.Manufacturer.ManufacturerCode entered)
				ProcurementCostDefault.InManufacturerCode 			= ItemAtRequisitionFromLocationRel.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= ItemAtRequisitionFromLocationRel.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= ItemAtRequisitionFromLocationRel.ManufacturerNumber
				LocalManufacturer									= ItemAtRequisitionFromLocationRel.Manufacturer
				LocalManufacturerNumber								= ItemAtRequisitionFromLocationRel.ManufacturerNumber
			else
			if (ItemLocationRel.Manufacturer.ManufacturerCode entered)
				ProcurementCostDefault.InManufacturerCode 			= ItemLocationRel.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= ItemLocationRel.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= ItemLocationRel.ManufacturerNumber
				LocalManufacturer									= ItemLocationRel.Manufacturer
				LocalManufacturerNumber								= ItemLocationRel.ManufacturerNumber
			else
				ProcurementCostDefault.InManufacturerCode 			= ItemRel.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision 		= ItemRel.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 		= ItemRel.ManufacturerNumber
				LocalManufacturer									= ItemRel.Manufacturer
				LocalManufacturerNumber								= ItemRel.ManufacturerNumber
			
			ProcurementCostDefault.InVendor						= LocalVendor						
			
			if ((LocalItemType.Service
			or  LocalItemType.Special)			
			and ContractItemRel exists				
			and not ContractLine.OnHold)			

	     		if (ContractLine.EffectiveDate > current corporate date
	     		or (ContractLine.ExpirationDate entered
	     		and ContractLine.ExpirationDate < current corporate date))
					include InitializeLocalDefaultUnitCost			


				if (LocalItemType.Service
			    and HighPriorityContractItem)
					include InitializeLocalDefaultUnitCost
				else
				if (LocalItemType.Special)

					ProcurementCostDefault.InItem 						= DerivedItem
					ProcurementCostDefault.InItemType 					= DefaultItemType
					ProcurementCostDefault.InDoContractOnly				= true
					ProcurementCostDefault.InPurchaseFromLocation		= LocalPurchaseFromLocation
					ProcurementCostDefault.InDate 						= current corporate date
					ProcurementCostDefault.InSystem						= "RQ"
					ProcurementCostDefault.InCompany 					= DefaultFromCompany
					ProcurementCostDefault.InLocation 					= DefaultFromLocation
					ProcurementCostDefault.InRequestingLocation			= DerivedRequestingLocation
					ProcurementCostDefault.InRequestingCompany 			= DerivedCompany
					ProcurementCostDefault.InIgnoreStockless			= true
					ProcurementCostDefault.InProcurementGroup 			= PurchasingCompanyRel.ProcurementGroup
					ProcurementCostDefault.InServiceCode				= DefaultServiceCode
					Execute	= ProcurementCostDefault.DefaultUnitCost
					if (ProcurementCostDefault.InStockless
					and ProcurementCostDefault.OutputContract not entered)
						ProcurementCostDefault.InStockless	= false
						Execute	= ProcurementCostDefault.DefaultUnitCost

					if (ProcurementCostDefault.OutputContract entered)
						ProcurementCostDefault.InDoContractOnly	= false
						LocalDefaultedContract 					= ProcurementCostDefault.OutputContract
						LocalDefaultedContractLine 				= ProcurementCostDefault.OutputContractLine

					include GetCostOrVendorDefaultingSetup
					include GetRequisitionVendorAndPurchaseFromLocation


					if ((LocalRequisitionExists
					and LocalVendorFirst)

					and ((LocalRequisitionVendor entered
					and LocalRequisitionVendorIsHigherThanContract
					and LocalRequisitionVendor != Contract.Vendor)

					or (LocalRequisitionPurchaseFromIsHigherThanContract
					and (LocalRequisitionPurchaseFrom entered
					and ((Contract.ApPoPurchaseFrom.VendorLocation entered
					and LocalRequisitionPurchaseFrom != Contract.ApPoPurchaseFrom.VendorLocation)
					or (Contract.ApPoPurchaseFrom.PurchaseFromLocation entered
					and LocalRequisitionPurchaseFrom != Contract.ApPoPurchaseFrom.PurchaseFromLocation))))

					or NotPreferredOrNotEqualPriority))
						include InitializeLocalDefaultUnitCost
					else

					if (not LocalRequisitionExists
					and LocalVendorFirst
					and NotPreferredOrNotEqualPriority)
						include InitializeLocalDefaultUnitCost
					else

					if (LocalVendorFirst
					and not LocalRequisitionVendorIsHigherThanContract
					and NotPreferredOrNotEqualPriority)
						include InitializeLocalDefaultUnitCost
					else

					if (not LocalVendorFirst
					and LocalDefaultedContract != Contract
					and NotPreferredOrNotEqualPriority)
						include InitializeLocalDefaultUnitCost
					else



					if (LocalDefaultedContract not entered
					and LocalItemType.Special)
						include InitializeLocalDefaultUnitCost


				initialize ProcurementCostDefault
				ProcurementCostDefault.InItem 					= LocalItem
				ProcurementCostDefault.InItemType 				= LocalItemType
				ProcurementCostDefault.InVendorItem				= LocalVendorItem
				ProcurementCostDefault.InVendor					= Contract.Vendor
				ProcurementCostDefault.InContractGroup			= Contract.ContractGroup
				ProcurementCostDefault.InContract				= Contract
				ProcurementCostDefault.InContractLine			= ContractLine
				ProcurementCostDefault.InContractType			= Contract.ContractType
				ProcurementCostDefault.InManufacturerCode 		= ContractLine.Manufacturer.ManufacturerCode 
				ProcurementCostDefault.InManufacturerDivision	= ContractLine.Manufacturer.ManufacturerDivision 
				ProcurementCostDefault.InManufacturerNumber 	= ContractLine.ManufacturerNumber
				initialize LocalPurchaseFromLocation
				default LocalPurchaseFromLocation to Contract.ApPoPurchaseFrom.PurchaseFromLocation
				default LocalPurchaseFromLocation to Contract.ApPoPurchaseFrom.VendorLocation
				if (ContractLine.HasChargeableComponentItem)
					ProcurementCostDefault.InCapitatedContract      = true 
				ProcurementCostDefault.InCapitatedComponentGroup    = first ContractLine.ContractCapitatedChargeItemRel.ContractCapitatedComponentGroup
				ProcurementCostDefault.InCapitatedProcedureLevel    = 1

			else

			if ((LocalItemType.Service
			or  LocalItemType.Special)
			and ContractLine.OnHold)
				include InitializeLocalDefaultUnitCost

			ProcurementCostDefault.InPurchaseFromLocation		= LocalPurchaseFromLocation
			ProcurementCostDefault.InQuantityUOM				= DerivedCostUOM
			ProcurementCostDefault.InDate 						= current corporate date
		    ProcurementCostDefault.InSystem						= "RQ"
			ProcurementCostDefault.InCompany 					= DefaultFromCompany
			ProcurementCostDefault.InLocation 					= DefaultFromLocation
			ProcurementCostDefault.InRequestingLocation			= DerivedRequestingLocation
			ProcurementCostDefault.InRequestingCompany 			= DerivedCompany					
			ProcurementCostDefault.InStockless 					= RequestingLocationRel.Stockless
			ProcurementCostDefault.InProcurementGroup 			= PurchasingCompanyRel.ProcurementGroup
			ProcurementCostDefault.InDescription				= ItemDescription
			ProcurementCostDefault.InServiceCode				= DefaultServiceCode
			ProcurementCostDefault.InSkipUOMMatching			= true
			if (LocalItemType.Inventoried 
			and not LocalCreatePurchaseOrder)
				ProcurementCostDefault.InBypassUseContractUOM = true
				if (not ItemLocationRel.NoCharge)
					ProcurementCostDefault.InSkipZeroCostContractLine = true
				
			Execute	= ProcurementCostDefault.DefaultUnitCost

			if (ProcurementCostDefault.InStockless)
				if	((ProcurementCostDefault.OutputUnitCost not entered
				and	ProcurementCostDefault.OutputCostOption.CostRequired)
				or 	(ProcurementCostDefault.OutputContract not entered
				and ProcurementCostDefault.OutputCostCode.Entered)
				or 	(ProcurementCostDefault.OutputUnitCost entered
				and ProcurementCostDefault.OutputCostCode not entered))
					ProcurementCostDefault.InStockless	= false
					Execute	= ProcurementCostDefault.DefaultUnitCost

			if (LocalBlankVendorLocation
			and ProcurementCostDefault.LocalPurchaseFromLocation not entered)
				initialize LocalPurchaseFromLocation
			else
				LocalPurchaseFromLocation	= ProcurementCostDefault.OutputPurchaseFromLocation
			LocalVendor 				= ProcurementCostDefault.OutputVendor
			LocalVendorItem				= ProcurementCostDefault.OutputVendorItem
			LocalContract 				= ProcurementCostDefault.OutputContract
			LocalContractLine 			= ProcurementCostDefault.OutputContractLine
			LocalCostUOM				= ProcurementCostDefault.OutputCostUOM
			LocalCostCode				= ProcurementCostDefault.OutputCostCode	
			LocalCostOption				= ProcurementCostDefault.OutputCostOption
			LocalQuantity				= ProcurementCostDefault.OutputQuantity
			LocalQuantityUOM			= ProcurementCostDefault.OutputQuantityUOM
			LocalCostCalculated			= true
			LocalDefaultUnitCost		= ProcurementCostDefault.OutputUnitCost
			LocalCurrencyCode			= ProcurementCostDefault.OutputCurrencyCode
			LocalPreferredContract		= ProcurementCostDefault.RetrievedPreferredContract
			LocalContractLinePriority	= ProcurementCostDefault.OutputContractLine.Priority


			if ((LocalItemType.Service
			or  LocalItemType.Special)
			and (LocalContract != Contract
			or not ContractLine.CanUseForCostDefaulting))
				initialize LocalDefaultUnitCost

			if (LocalCreatePurchaseOrder)
				if (LocalVendor entered
				and (LocalContract entered
				or LocalCostCode.LastPoCreated))
					if ((LocalItemType.Inventoried
					or LocalItemType.NonStock)
					and	DerivedCostUOM entered)
						if (VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure entered
						or VendorItemUsedRel.VendorBuyUOM.UnitOfMeasure entered)
							if (LocalVendorItem not entered)
								LocalVendorItem = VendorItemDefaultRel.VendorItem
							if (LocalVendorItem not entered
							and LocalContract entered)
								LocalVendorItem = VendorItemUsedRel.VendorItem
							initialize UOMCalculation
							UOMCalculation.InputUOM			= LocalCostUOM
							if (VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure entered)
								UOMCalculation.InputToUOM		= VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure
								LocalCostUOM					= VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure
							else
							if (LocalContract entered)
								UOMCalculation.InputToUOM		= VendorItemUsedRel.VendorBuyUOM.UnitOfMeasure
								LocalCostUOM					= VendorItemUsedRel.VendorBuyUOM.UnitOfMeasure
							UOMCalculation.InputUnitCost    = LocalDefaultUnitCost
							UOMCalculation.Method           = UOMCalculation.Method.ConvertToAlternate
							UOMCalculation.DoRounding  		= true
							LocalDefaultUnitCost            = UOMCalculation.OutputUnitCost

				if (LocalVendor not entered
				and RequisitionRel.Vendor entered
				and PurchasingCompanyRel.CostOrVendorDefaultingOrder.CostFirstThenVendor)
					LocalVendor 				= RequisitionRel.Vendor
					LocalPurchaseFromLocation	= RequisitionRel.PurchaseFromLocation
					if ((LocalItemType.Inventoried
					or LocalItemType.NonStock)
					and	DerivedCostUOM entered)
						if (VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure entered)
							LocalVendorItem = VendorItemDefaultRel.VendorItem
							initialize UOMCalculation
							UOMCalculation.InputUOM			= LocalCostUOM
							if (VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure entered)
								UOMCalculation.InputToUOM		= VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure
								LocalCostUOM					= VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure
							UOMCalculation.InputUnitCost    = LocalDefaultUnitCost
							UOMCalculation.Method           = UOMCalculation.Method.ConvertToAlternate
							UOMCalculation.DoRounding  		= true
							LocalDefaultUnitCost            = UOMCalculation.OutputUnitCost
				
				if (LocalVendorItem entered)
					if (LocalVendorItem.Manufacturer.ManufacturerCode entered)	
						LocalManufacturer		= LocalVendorItem.Manufacturer
						LocalManufacturerNumber	= LocalVendorItem.ManufacturerNumber
					else
						initialize LocalManufacturer
						initialize LocalManufacturerNumber
				else
				if (ContractLineRel.Manufacturer.ManufacturerCode entered)
					LocalManufacturer		= ContractLineRel.Manufacturer
					LocalManufacturerNumber	= ContractLineRel.ManufacturerNumber
				else
				if (VendorItemRel.Manufacturer.ManufacturerCode entered)
					LocalManufacturer		= VendorItemRel.Manufacturer
					LocalManufacturerNumber	= VendorItemRel.ManufacturerNumber
			else
				initialize LocalContract
				initialize LocalContractLine
				initialize LocalVendor
				initialize LocalVendorItem
				initialize LocalPurchaseFromLocation
			
			round LocalDefaultUnitCost to nearest DerivedRoundTo
			return LocalDefaultUnitCost 		

		DerivedDefaultContractUOMConversion is a DerivedField
			type is like UOMConversion
				precision is NumberOfDecimalsQuantity
    		restricted
			return ContractLineDefaultRel.UOM.UOMConversion
		
		DefaultContractUOMConversion is a MessageField
			"<DerivedDefaultContractUOMConversion>_<BaseUOM>per<ContractLineDefaultRel.UOM.UnitOfMeasure>"

		DefaultUOMConversion	 is a DerivedField
			type is MessageField
			if (Item exists)
				return DerivedItemUOMConversion
			if (ContractLine.UOMConversion != 0)
				return ContractItemUOMConversion
			else
				return DerivedItemUOMConversion	

		DerivedManufacturerCode is a DerivedField
			type is like ManufacturerCode
			if (LocalManufacturer.ManufacturerCode entered)
				return LocalManufacturer.ManufacturerCode
			else
				return ContractLineRel.Manufacturer.ManufacturerCode

		DerivedManufacturerDivision is a DerivedField
			type is like ManufacturerDivision
			if (LocalManufacturer.ManufacturerDivision entered)
				return LocalManufacturer.ManufacturerDivision
			else
				return ContractLineRel.Manufacturer.ManufacturerDivision

		DerivedManufacturerNumber is a DerivedField
			type is like ManufacturerNumber
			if (LocalManufacturerNumber entered)
				return LocalManufacturerNumber
			else
				return ContractLineDefaultRel.ManufacturerNumber

		DerivedManufacturerInformation is a DerivedField
			type is MessageField
 			default label is "Manufacturer"
			if (DerivedManufacturerCode entered)
				if (DerivedManufacturerDivision entered)
					return "Manufacturer: " + DerivedManufacturerCode + " - " + DerivedManufacturerDivision + " - " + DerivedManufacturerNumber
				else	
					return "Manufacturer: " + DerivedManufacturerCode + " - " + DerivedManufacturerNumber
					
		DerivedManufacturerDescription is a DerivedField
			type is like Description
			if (LocalManufacturerNumber entered)
				return LocalManufacturer.Description
			else
				return ContractLineRel.Manufacturer.Description

		DerivedContractID is a DerivedField
			type is like Contract
			if (LocalContract entered)
				return LocalContract
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)
					return Contract
											 
		DerivedPicture is a DerivedField
			type is BinaryDocument
			if (HasItem)
				return ItemRel.Picture.File
			else
				return ContractLine.Picture.File

		ItemAddedMessage is a MessageField
			restricted
			"<Item>AddedToRequisition"

		ItemUpdatedMessage is a MessageField
			restricted
			"<Item>UpdatedOnRequisition"

		SelectedItemsAddedMessage is a MessageField
			restricted
			"SelectedItemsAddedToRequisition"

		SelectedItemsUpdatedMessage is a MessageField
			restricted
			"SelectedItemsUpdatedOnRequisition" 
		
		DerivedContractLine is a DerivedField
			type is like ContractLine
			if (LocalContractLine entered)
				return LocalContractLine
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)
					return ContractLine
		
		DerivedContractLineActive is a DerivedField
			type is Boolean
			return ContractLineRel.HasBeenActivated

		DerivedContractLinePreferred is a DerivedField
			type is Boolean
			return ContractLineRel.PreferredLine

		ContractLabel is a LabelField
			restricted
			"Contract:<DerivedContractID>Line:<DerivedContractLine>"

		PreferrredContractLabel is a LabelField
			restricted
			"PreferredContract:<DerivedContractID>Line:<DerivedContractLine>"

		OnContractLabel is a DerivedField
			type is MessageField
			if (ContractLineRel.PreferredLine)
				return PreferrredContractLabel
			else
				return ContractLabel

		DerivedQuantity is a DerivedField
			type is like Quantity
				precision is NumberOfDecimalsQuantity
			if (LocalQuantity entered)
				return LocalQuantity
			else
				return 1	
				
		DerivedCostUOM is a DerivedField
			type is like UnitOfMeasure
			
			if (LocalCostUOM entered)
				return LocalCostUOM
			else					
			if (LocalQuantityUOM entered)
				return LocalQuantityUOM
			else
			if (ContractLine.ServiceCode.Amount
			or ContractLine.ServiceCode.Quantity
			or IsServiceItem)
				return ContractLine.UOM
			else
			if (DerivedCreatePurchaseOrder 
			and (ContractRel exists and ContractRel.UseContractUOM))
				return ContractLineDefaultRel.UOM
			else
			if (DefaultItemType.Inventoried
            or DefaultItemType.NonStock)
				if (ItemRel.IsCatchWeightItem)
					return ItemRel.SecondaryUOM
				else
				if (DerivedCreatePurchaseOrder)
					if (ParItem
					and ItemAtRequestingLocationRel.DefaultTransactionUOM entered)
						return ItemAtRequestingLocationRel.DefaultTransactionUOM
					else
					if (VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure entered)
						return  VendorItemDefaultRel.VendorBuyUOM.UnitOfMeasure
					else
					if (ItemLocationRel.DefaultSourceUOM.UnitOfMeasure entered)
						return ItemLocationRel.DefaultSourceUOM.UnitOfMeasure
					else
					if (LocationItemUOMDefaultBuyingRel.UnitOfMeasure entered)
						return LocationItemUOMDefaultBuyingRel.UnitOfMeasure
					else
					if (ItemRel.DefaultBuyUOM entered)
						return ItemRel.DefaultBuyUOM
				else
					if (ParItem
					and ItemAtRequestingLocationRel.DefaultTransactionUOM entered)
						return ItemAtRequestingLocationRel.DefaultTransactionUOM
					else
					if (ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure entered)
						return ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure
					else
					if (LocationItemUOMDefaultTransactionRel.UnitOfMeasure entered)
						return LocationItemUOMDefaultTransactionRel.UnitOfMeasure
					else
					if (ItemRel.DefaultInventoryTransactionUOM entered)
						return ItemRel.DefaultInventoryTransactionUOM
			else
			if (TransactionCostDefault.DefaultUOM entered)
				return TransactionCostDefault.DefaultUOM
			else
			if (ContractLine.UOM entered)
				return ContractLine.UOM
			else
				return ItemRel.DefaultTransactionUOM

		DerivedQuantityWithUOM is a ConditionalField
			type is MessageField
			if (DerivedQuantity entered)
				DerivedQuantity + " " + DerivedCostUOM
			else
				"1 " +  DerivedCostUOM
			
		DefaultCurrencyCode	is a DerivedField
			type is like Currency
			if (HasItem)
				return InventoryCompanyRel.Company.Currency
			else
				return Contract.CurrencyCode
		
		DerivedUnitCostWithCurrency is a LabelField
			"<DefaultUnitCost>_<DefaultCurrencyCode>"
		
		DerivedVendor is a DerivedField
			type is like Vendor
			if (HasItem or LocalCostCode.LastPoCreated)
				return LocalVendor
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)				
					return ContractRel.Vendor

		DerivedPurchaseFromLocation is a DerivedField
			type is like PurchaseFromLocation
			if (HasItem)
				return LocalPurchaseFromLocation
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)
					if (Contract.ApPoPurchaseFrom.VendorLocation entered)
						return Contract.ApPoPurchaseFrom.VendorLocation
					else
						return Contract.ApPoPurchaseFrom.PurchaseFromLocation
					
		VendorAndVendorName is a StringField
            type is Alpha size up to 42
            restricted
            DerivedVendor
            " - "
            VendorRel.VendorName
					
		PurchaseFromLocationAndVendorName is a StringField
            type is Alpha size up to 37
            restricted
            DerivedPurchaseFromLocation
            " - "
            PurchaseFromLocationRel.VendorName

        DerivedVendorAndVendorName is a DerivedField
            type is Alpha size up to 42
            if (DerivedVendor entered)
            	return VendorAndVendorName
            	
        DerivedPurchaseFromLocationAndVendorName is a DerivedField
            type is Alpha size up to 37
            if (DerivedPurchaseFromLocation entered)
            	return PurchaseFromLocationAndVendorName

		DerivedVendorAndPurchaseFrom is a ConditionalField
			type is MessageField
            if (DerivedPurchaseFromLocation not entered)
				"Vendor: " + VendorRel.VendorName
			else
				"Vendor: " + VendorRel.VendorName + " Purchase From: " + PurchaseFromLocationRel.VendorName

		DerivedVendorItem is a DerivedField
			type is like VendorItem
			if (HasItem)
				return LocalVendorItem
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)				
					return ContractItemRel.VendorItem

		DerivedVendorItemDescription is a DerivedField
			type is like Description
			if (HasItem)
				return VendorItemRel.VendorItemDescription
			else
				if (LocalCostCode.Contract
				or  LocalCostCode.CatalogQuote
				or  LocalCostCode.Blanket
				or  LocalCostCode.TierCompanyParticipant
				or  LocalCostCode.TierIcLocationParticipant
				or  LocalCostCode.TierReqLocParticipant)				
					return ContractItemRel.VendorItemDescription

 		BlankField is a DerivedField
			type is Alpha 1
			default label is "_"
			return blank				

		CostCode is a DerivedField
			type is like CostCode
			if (LocalCostCode entered)
				return LocalCostCode 
			else
				return CostCode.Entered	
														 
		CostCodeLabel is a DerivedField
			type is MessageField
			if (CostCode.Entered)
				return EnteredCostCodeLabel
			else
			if (CostCode.LastCost)
				return LastCostCostCodeLabel
			else
			if (CostCode.Contract)
				return ContractCostCodeLabel
			else
			if (CostCode.CatalogQuote)
				return CatalogQuoteCostCodeLabel
			else
			if (CostCode.Blanket)
				return BlanketCostCodeLabel
			else
			if (CostCode.LastPoCreated)
				return LastPoCreatedCostCodeLabel
			else
			if (CostCode.InventoryCost)
				return InventoryCostCodeLabel
			else
			if (CostCode.Punchout)
				return PunchoutCostCodeLabel
			else
			if (CostCode.TierCompanyParticipant)
				return TierCompanyParticipantCostCodeLabel
			else
			if (CostCode.TierIcLocationParticipant)
				return TierIcLocationParticipant
			else
			if (CostCode.TierReqLocParticipant)
				return TierReqLocParticipant
			else
			if (CostCode.Website)
				return WebsiteCostCodeLabel
			else
			if (CostCode.ProcurementTemplateContract)
				return ProcurementTemplateContractCostCodeLabel
			else
			if (CostCode.Standing)
				return StandingCostCodeLabel
			else
			if (CostCode.StrategicSourcing)
				return StrategicSourcingCostCodeLabel
			else
				return ""		

		CostOption is a DerivedField
			type is like CostOption
			if (LocalCostOption entered)
				return LocalCostOption						 
			else
				return CostOption.CostRequired						 
						 
		CostOptionLabel is a DerivedField
			type is MessageField
			if (CostOption.CostRequired)
				return CostRequiredLabel						 
			else
			if (CostOption.NoCharge)	
				return NoChargeLabel
			else
			if (CostOption.VendorDetermined)
				return VendorDeterminedLabel
		
		BaseUOM is a DerivedField
			type is AlphaUpper size 4
    		restricted
			if (HasItem)
				return ItemRel.StockUOM
			else
				return DerivedCostUOM 	    
		
		UOMMultiplier is a DerivedField
			type is like UOMConversion
    		restricted
			if (HasItemLocationStockUOM)
				LocalCostConversionUOM = LocalCostUOM
				return ItemUOMConversionRel.UOMConversion / ItemLocationRel.ItemLocationStockUOM.UOMConversion
			else
			if (HasItem)
				return ItemUOMRel.UOMConversion
			else			
				return 1

		DerivedUOMMultiplier is a DerivedField
			type is like UOMConversion
				precision is NumberOfDecimalsQuantity
    		restricted
			if (HasItemLocationStockUOM)
				LocalCostConversionUOM = LocalCostUOM
				return ItemUOMConversionRel.UOMConversion / ItemLocationRel.ItemLocationStockUOM.UOMConversion
			else
			if (HasItem)
				return ItemUOMRel.UOMConversion
			else			
				return 1

		ItemUOMConversion is a DerivedField
			type is MessageField
			if (HasItemLocationStockUOM)
				return UOMMultiplier + " " + ItemLocationRel.ItemLocationStockUOM + " per " + DerivedCostUOM
			else
				return UOMMultiplier + " " + BaseUOM + " per " + DerivedCostUOM

		DerivedItemUOMConversion is a DerivedField
			type is MessageField
			restricted
			if (HasItemLocationStockUOM)
				return DerivedUOMMultiplier + " " + ItemLocationRel.ItemLocationStockUOM + " per " + DerivedCostUOM
			else
				return DerivedUOMMultiplier + " " + BaseUOM + " per " + DerivedCostUOM
				 
		DerivedContractUOMConversion is a DerivedField
			type is like UOMConversion
				precision is NumberOfDecimalsQuantity
    		restricted
			return ContractLine.UOMUnitConversion
		
		ContractItemUOMConversion is a MessageField
			"<DerivedContractUOMConversion>_per<ContractLine.UOM.UnitOfMeasure>"		

		UnitOfMeasureConversion	 is a DerivedField
			type is MessageField
			if (HasItem)
				return ItemUOMConversion			
			if (ContractLine.UOMConversion != 0)
				return ContractItemUOMConversion

		ItemAvailableSOHUOM is a DerivedField
			type is like UnitOfMeasure

			if (ItemRel.IsCatchWeightItem
			and LocalItemType.Inventoried)
				return ItemRel.SecondaryUOM
			else
			if (DerivedAvailableQtyInTranUOM)
				if (ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure entered)
					return ItemLocationRel.DefaultTransactionUOM.UnitOfMeasure
				else
				if (HasItemLocationStockUOM)
					return ItemLocationRel.ItemLocationStockUOM
				return ItemRel.DefaultTransactionUOM
			else
			if (HasItemLocationStockUOM)
				return ItemLocationRel.ItemLocationStockUOM
			else
				return ItemRel.StockUOM

		DisplayItemAvailableSOH is a MessageField
			"<ItemAvailableSOH>_<ItemAvailableSOHUOM>"
				
		ItemUOMAndDescription 	is a StringField
			type is Alpha size up to 67
			DerivedCostUOM
			" - "
			UnitOfMeasureRel.Description

		DerivedItemAvailableSOH is a DerivedField
			type is Alpha size up to 50
			if (DefaultItemType.Inventoried)
				if (DerivedLocationRule entered)
					return ItemLocationRuleAvailableSOH + " " + ItemAvailableSOHUOM
				else
					return ItemAvailableSOH + " " + ItemAvailableSOHUOM
			else
				return blank			
			
        DerivedItemUOMAndDescription is a DerivedField
            type is Alpha size up to 67
            if (DerivedCostUOM entered)
            	return ItemUOMAndDescription
            	
        DerivedPriority is a DerivedField
        	type is Numeric size 1
        	if (DerivedContractLine entered)
        		return ContractLineRel.Priority
  
        DerivedFAlocationPriorityLevelGroup is a StringField
            type is Alpha size up to 7
			restricted
			actor.context.FinanceEnterpriseGroup
			"^"
			RSSLPLAllocationPriorityLevelRel.AllocationPriorityLevel

        DerivedRoundTo			is a DerivedField
			type is Unsigned Decimal 21.8
			if (NumberOfDecimalsCost = 8)
				return .00000001
			else
			if (NumberOfDecimalsCost = 7)
				return .0000001
			else
			if (NumberOfDecimalsCost = 6)
				return .000001
			else
			if (NumberOfDecimalsCost = 5)
				return .00001
			else
			if (NumberOfDecimalsCost = 4)
				return .0001
			else
			if (NumberOfDecimalsCost = 3)
				return .001
			else
			if (NumberOfDecimalsCost = 2)
				return .01
			else
			if (NumberOfDecimalsCost = 1)
				return .1
			else
			if (NumberOfDecimalsCost = 0)
				return 1
			else
				return blank            

		DerivedMaxRequisitionQtyMessage1	is a MessageField
			"MaxRequisitionQuantityOf_<ItemAtRequisitionFromLocationRel.DerivedMaximumRequisitionQuantity>_<ItemRel.StockUOM>"	
			
		DerivedMaxRequisitionQtyMessage2	is a MessageField
			"MaxRequisitionQuantityOf_<ItemAtFromLocationRel.DerivedMaximumRequisitionQuantity>_<ItemRel.StockUOM>"	

		DerivedMaximumRequisitionQuantity is a DerivedField
			type is MessageField
			if (RequisitionRel exists)
				if (ItemAtRequisitionFromLocationRel.MaximumRequisitionQuantity entered)
					return DerivedMaxRequisitionQtyMessage1
			else
				if (ItemAtFromLocationRel.MaximumRequisitionQuantity entered)
					return DerivedMaxRequisitionQtyMessage2

		DerivedItem is a DerivedField
			type is like Item
			if (LocalItem entered)
				return LocalItem
			else
				return Item

		MajorPurchasingClassAndDescription is a StringField
			type is Alpha size up to 88           
			DerivedMajorPurchasingClass
			" - "
			DerivedMajorPurchasingClassDesc
		
		MinorPurchasingClassAndDescription is a StringField
			type is Alpha size up to 88
			DerivedMinorPurchasingClass
			" - "
			DerivedMinorPurchasingClassDesc
				
		DerivedMajorPurchasingClass is a DerivedField
			type is like MajorPurchasingClass
			if (IsSpecialItem
			or IsServiceItem)
				if (ContractLine.MajorPurchasingClass entered)
					return ContractLine.MajorPurchasingClass
			
		DerivedMinorPurchasingClass is a DerivedField
			type is like MinorPurchasingClass
			if (IsSpecialItem
			or IsServiceItem)
				if (ContractLine.MinorPurchasingClass entered)
					return ContractLine.MinorPurchasingClass
			
		DerivedMajorPurchasingClassDesc is a DerivedField
			type is Alpha size up to 67
			if (IsSpecialItem
			or IsServiceItem)
				if (ContractLine.MajorPurchasingClass entered)
					return ContractLine.MajorPurchasingClass.Description
			
		DerivedMinorPurchasingClassDesc is a DerivedField
			type is Alpha size up to 67
			if (IsSpecialItem
			or IsServiceItem)
				if (ContractLine.MinorPurchasingClass entered)
					return ContractLine.MinorPurchasingClass.Description
					
		DerivedRecallNotices	is a MessageField
			"RecallNotices"

		DerivedCurrencyCode is a DerivedField
			type is like Currency
			if (LocalCurrencyCode entered)
				return LocalCurrencyCode
			else
				return InventoryCompanyRel.Company.Currency

		RecipeItemLabel is a LabelField
			"RecipeItem"

		RecallLabel is a LabelField
			"Recall"

		LatexLabel is a LabelField
			"PackageIndicatesLatex"
		
		DerivedSpecialHandlingCode is a DerivedField
			type is Alpha size 25
			if (HasSpecialHandlingCode)
				if (ContractLine.SpecialHandlingCode entered)
					return ContractLine.SpecialHandlingCode
				else 
					return Item.SpecialHandlingCode
		
		DerivedSpecialHandlingInstructions is a DerivedField
			type is MessageField
			if (HasSpecialHandlingCode)
				if (ContractLine.SpecialHandlingCode entered)
					return ContractLine.SpecialHandlingInstructions
				else 
					return Item.SpecialHandlingInstructions

		DerivedTimeSensitive is a DerivedField
			type is Boolean
			if (HasSpecialHandlingCode)
				if (ContractLine.SpecialHandlingCode entered)
					return ContractLine.SpecialHandlingCode.TimeSensitive
				else 
					return Item.SpecialHandlingCode.TimeSensitive

		DerivedHandlingTimeInMinutes is a DerivedField
			type is Numeric 3
			if (HasSpecialHandlingCode)
				if (ContractLine.SpecialHandlingCode.TimeSensitive 
				and ContractLine.SpecialHandlingCode entered)
					return ContractLine.HandlingTimeInMinutes
				else 
					return Item.HandlingTimeInMinutes

		DerivedRequisitionLine is a DerivedField
			type is like RequisitionLine
			if (RequisitionLineItemRel exists)
				return first RequisitionLineItemRel.RequisitionLine

		DerivedRequisitionLineUpdate is a DerivedField
			type is like RequisitionLine
			if (RequisitionLineItemUpdateRel exists)
				return first RequisitionLineItemUpdateRel.RequisitionLine
		
		RSSLPLDerivedUnitCostCurrencyCode is a DerivedField
			type is MessageField
			if (RSSLPLDisplayCurrencyCode)
				return DerivedUnitCostWithCurrency
			else
				return DefaultUnitCost

	Conditions
	
        IsServiceItem
        	when (DefaultItemType.Service)

		IsServiceItemByAmount
			when (DefaultItemType.Service
			and   DefaultServiceCode.Amount)

		IsSpecialItem
        	when DefaultItemType.Special

		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   ItemGroup.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))	
	
        HasItem
        	restricted
        	when	(Item entered
        	and      Contract = "") 
           
        ContractItem
 	      	when	(Contract entered)	    	

		PreferredContract
			when (ContractLine entered
			and ContractLine.PreferredLine)
			
		SpecialItemHasCostOrNoCharge
			when (ContractItem
			and  (DefaultUnitCost > 0
			or    ContractLine.CostOption.NoCharge
			or    ContractLine.CostOption.VendorDetermined))

		SpecialOrServiceItemHasCostOrNoCharge 														
			when (ContractItem 

			and (DefaultItemType.Service 
			or DefaultItemType.Special)
			and  (DefaultUnitCost > 0 
			or ((DefaultUnitCost = 0 
			and !CostCode.Entered
			and (ContractLine.CostOption.NoCharge 
			or ContractLine.CostOption.VendorDetermined)))))

        IsActive
        	restricted
            when (ItemRel.Active)			
			





		ShowOnlyContractItems
			restricted
			when (RequesterRel.DerivedContractsOnly = "Y"
			and (first ContractItemRel exists))


		ShowAllItemsNoContract
			restricted
			when (RequesterRel.DerivedContractsOnly = "N")
			




		ShowOnlyInventoryTrackedItems
			restricted  
			when (RequesterRel.DerivedInternalOnly = "Y"
			and (ItemLocationRel exists and ItemLocationRel.InventoryTracked 
			and (ItemLocationRel.Active)))			


		ShowOnlyItemLocationItems
			restricted
			when (RequesterRel.DerivedInternalOnly = "I"
			and (ItemLocationRel exists				
			and ItemLocationRel.Active))			
			

		ShowAllItemsNoLocation
			restricted
			when (RequesterRel.DerivedInternalOnly = "N")

		ComponentToCharge 
			restricted 
			when (Contract entered
			and   Contract.CapitatedContract)



		ValidRequesterItems
			restricted
			when (IsValidForActorContext


			and  (ShowOnlyContractItems 
			or    ShowAllItemsNoContract)
			and (!ComponentToCharge
			or    ComponentToCharge
			and   RequesterRel.CanCreateCapitatedRequisition)
			and  (ShowOnlyInventoryTrackedItems 
			or    ShowOnlyItemLocationItems 
			or    ShowAllItemsNoLocation))

			
		ItemIsStockAtRequesterFromLocation
			restricted
			when (ItemAtFromLocationRel exists
			and ItemAtFromLocationRel.InventoryTracked)

		ItemIsNonStockAtRequesterFromLocation
			restricted
			when (ItemAtFromLocationRel exists
			and not ItemAtFromLocationRel.InventoryTracked)

		ItemIsStockOrNonStock
			restricted
			when (DefaultItemType = "I"
			or DefaultItemType = "N")
			
		ItemIsServiceItem
			restricted
			when (DefaultItemType = "S")	
			
		ItemIsOnTemplate
			restricted
			when (first ProcurementTemplateLineRel exists)
			
		HighPriorityContractItem
			when (ContractLine entered
			and first HighPriorityContractItemRel exists)
			
		PreferredContractItem
			when (ContractLine entered
			and first PreferredContractItemRel exists)
			
		ItemIsOnPastReq
			restricted
			when (first RequisitionLineRel exists)
			
		ItemHasMultipleUOMs
			restricted
			when (instance count of ItemUOMMultRel > 1)
			
		RecallProductItemForItem
			restricted
			when (RecallProductItemForItemRel exists)
			
		HasContract

			when (ContractRel exists)
		
		UOMIsDisplayedOnRequester
			restricted
			when (ItemLocationRel.InventoryTracked
			and  HasItem
			and  ItemHasMultipleUOMs
			and  RequesterRel.AvailableQuantityDisplayUOM.Transaction)
			
		UOMIsDisplayedOnInventoryCompany	
			when (ItemLocationRel.InventoryTracked
			and HasItem
			and ItemHasMultipleUOMs
			and RequesterRel.AvailableQuantityDisplayUOM not entered
			and InventoryCompanyRel.AvailableQuantityDisplayUOM.Transaction)

		DerivedAvailableQtyInTranUOM
			when (UOMIsDisplayedOnRequester 
			or   UOMIsDisplayedOnInventoryCompany)
								
		IsOnContract
			restricted
			when (not RequesterRel.OverrideContractCost
			and   LocalContract entered
			and   LocalContractLine entered)

		IsLastCostOrLastPOCreated
			when  (not RequesterRel.OverrideLastPOLastCost
			and (CostCode.LastCost
			or  CostCode.LastPoCreated))		 

		IsNoCharge				
			when (LocalCostOption.NoCharge)
				
		IsInventoried
			when (DefaultItemType.Inventoried
			and CostCode.InventoryCost
			and DefaultUnitCost != 0)
		
		IsCostUpdateProhibited
			when (IsOnContract
			or   IsLastCostOrLastPOCreated
			or   IsNoCharge
			or   IsInventoried)

		IsRequesterFavoriteItem	
			when (RequesterFavoritePOTemplateRel exists)

		PastReqItem
			when (ItemIsOnPastReq)

		TemplateItem
			when  (ItemIsOnTemplate)
		
		ShowSpecialServices
			when (RequesterRel.DerivedShowSpecialServices = "S")

		ContractLineNotOnHold
			when (Contract entered
			and  ContractLine entered
			and !ContractLine.OnHold
			and ShowSpecialServices)
			
		SpecialItemHigherPriorityOrCheaper
			when (ContractItem
			and  (Contract 	   != LocalDefaultedContract
			or 	  ContractLine != LocalDefaultedContractLine))
		
		ItemMasterItem
			when (Item entered
			and  Contract not entered)  		
			
        ItemWithNoFromLocation
            when (IsActive
            and	  ItemAtFromLocationRel not exists
            and   ItemAtRequisitionFromLocationRel not exists)
        
        ItemActiveAtFromLocation            
            when (IsActive
            and   (ItemAtFromLocationRel exists and ItemAtFromLocationRel.Active)
            or    (ItemAtRequisitionFromLocationRel exists and ItemAtRequisitionFromLocationRel.Active))

        ItemNotActiveAtFromLocation            
            when (IsActive
            and   (ItemAtFromLocationRel exists and not ItemAtFromLocationRel.Active)
            or    (ItemAtRequisitionFromLocationRel exists and not ItemAtRequisitionFromLocationRel.Active))
            
        HasSubstituteItem
			when (first AssociatedItemsRel exists)
			
		HasCompanionItem
			when (first CompanionItemsRel exists)

		IsKitItem	
			when (KitItemRel exists)
		
		IsKitItemFromLocation
            when (KitItemRel exists
            and KitItemRel.first KitComponentsRel exists)

		IsMakeToOrderKitItem
			when (IsKitItemFromLocation and KitItemRel.IsMakeToOrder)

		HasDerivedContractID
			when (DefaultUnitCost >= 0 
			and	 DerivedContractID > 0)
			
		IsWithinEffectiveDate																	
	    	restricted
	     	when (ContractLineMatchingRel exists
	     	and (ContractLine.EffectiveDate <= current corporate date
	     	and (ContractLine.ExpirationDate not entered
	     	or ContractLine.ExpirationDate >= current corporate date)))

		ValidReplacementItem
			restricted
			when ((Item.EffectiveDate not entered or current corporate date >= Item.EffectiveDate)
			and   (Item.ExpirationDate not entered or current corporate date <= Item.ExpirationDate))

		IsReplacementItem
			when (LocalItem entered
			and Item != LocalItem)			
			
		RequisitionExists
			restricted
			when(RequesterRel.CurrentRequisitionForRQC entered)

		KeywordShadowExists
			restricted
			when (this instance exists)

		ItemAtRequisitionFromLocationRelExists
			restricted
			when (ItemAtRequisitionFromLocationRel exists 
			and ItemAtRequisitionFromLocationRel.InventoryTracked
			and ItemAtRequisitionFromLocationRel.Active)
			
		ItemAtFromLocationRelExists
			restricted
			when (ItemAtFromLocationRel exists 
			and ItemAtFromLocationRel.InventoryTracked 
			and ItemAtFromLocationRel.Active)

		RecallNoticesExist
        	restricted
        	when (RecallProductItemsRel exists)

		LatexItem
			restricted
			when (Item.Latex = 1)

		ItemIsStockAtDefaultFromLocation
			restricted
			when (DefaultFromLocation entered
			and	  ItemLocationRel.InventoryTracked)

        HasContractLine
        	restricted
            when (ContractLine entered)

		RSSLPLCurrentRequisitionForRQCEntered
			restricted
			when (actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC entered)

		HasDefaultContractLine
			when (ContractLineDefaultRel exists)
			
		HasContractLineAndDisplayContract
			restricted
			when (HasDefaultContractLine
			and   RequesterRel.DisplayContract)

		MissingDefaultUnitCost
			restricted
			when (DefaultUnitCost not entered
			and CostOption.CostRequired)

		NotPreferredOrNotEqualPriority
			restricted
			when ((!DefaultContractLineRel.PreferredLine
			and DefaultContractLineRel.Priority != ContractLine.Priority)
			or (DefaultContractLineRel.PreferredLine
			and not DefaultContractLineRel.OnHold
			and !ContractLine.PreferredLine)
			or (DefaultContractLineRel.PreferredLine
			and DefaultContractLineRel.OnHold
			and DefaultContractLineRel.Priority != ContractLine.Priority))

		IsRecipeItem
			when ((not IsReplacementItem 
			and Item.Recipe)
			or (IsReplacementItem
			and Item.ReplacementItem.Recipe))

		ParItem
			restricted
			when (RequestingLocationRel.ParOrExchangeLocation 
			and (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.ReplenishFrom entered							
			or ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.Vendor entered))
		
		HasSpecialHandlingCode
			when ((not IsReplacementItem 
			and Item.SpecialHandlingCode entered
			or ContractLine.SpecialHandlingCode entered)
			or (IsReplacementItem 
			and Item.ReplacementItem.SpecialHandlingCode entered
			or ContractLine.SpecialHandlingCode entered))

		HasItemLocationStockUOM
			when ((DefaultItemType.Inventoried
            or DefaultItemType.NonStock)
			and	  ItemLocationRel.HasItemLocationStockUOM)
		
		IsUsingLocationItemUOMDefaultBuyUOM
			when (HasItemLocationStockUOM
			and LocationItemUOMDefaultBuyingRel.UnitOfMeasure entered
			and LocationItemUOMDefaultBuyingRel.UnitOfMeasure = LocalCostUOM)

		IsUsingLocationItemUOMDefaultTransactionUOM
			when (HasItemLocationStockUOM
			and LocationItemUOMDefaultTransactionRel.UnitOfMeasure entered
			and LocationItemUOMDefaultTransactionRel.UnitOfMeasure = LocalCostUOM)

		IsFavoritesEnabled
			when (RequesterRel.DerivedEnableFavorites = "Y")

		DisplayYellowFavoritesIcon
			when (IsFavoritesEnabled and IsRequesterFavoriteItem)

		DisplayOutlinedFavoritesIcon
			when (IsFavoritesEnabled and not IsRequesterFavoriteItem)
		
		ShowOnlyVendorsAssociatedWithItem
			restricted
			when (RequesterRel.ShowOnlyVendorsAssociatedWithItem)
		
		DisplayRequisitionDescription
			restricted
			when (RequesterRel.DisplayRequisitionDescription)
		
		DisplayStockOnHand
			restricted
			when (DefaultItemType.Inventoried
			and RequesterRel.DisplayStockOnHand)

		SetToDisplayOnlyTransactionUOM
			restricted
			when (RequesterRel.SetToDisplayOnlyTransactionUOM)
		
		DisplayAssetDisplayOption
			restricted
			when (RequesterRel.DisplayAssetDisplayOption)

		RequireAsset
			restricted
			when (RequesterRel.RequireAsset)

		RequireAssetTemplate
			restricted
			when (RequesterRel.RequireAssetTemplate)

		DisplayGLEncumbranceReference
			restricted
			when (RequesterRel.DisplayGLEncumbranceReference)
		
		DisplayRequestedDeliveryDate
			restricted
			when (RequesterRel.DisplayRequestedDeliveryDate)
		
		DisplayPurchaseClasses
			restricted
			when (RequesterRel.DisplayPurchaseClasses)
		
		DisplayCostOption
			restricted
			when (RequesterRel.DisplayCostOption)

		DisplayPurchaseFrom
			restricted
			when (RequesterRel.DisplayPurchaseFrom)
		
		DisplayVendor
			restricted
			when (RequesterRel.DisplayVendor)
		
		DisplayDistributionAccount
			restricted
			when (RequesterRel.DisplayAccounting)

		RSSLPLAllocationPriorityLevelEnabled
			restricted
            when (RSSLPLConfigurationParameterRel exists)

		RSSLPLShowRequiredFields
			restricted
			when (RequesterRel.RequireBuyer
			or RequesterRel.RequirePOCode
			or RequesterRel.RequireCommodityCodeDisplay
			or RequesterRel.RequireDeliverTo
			or RequesterRel.RequireVendor)
		
		RSSLPLDisplayCurrencyCode
			restricted
			when (RequesterRel.RSSLPLDisplayCurrencyCode)
		
		RSSLPLDisplayAllocationPriorityLevel
			restricted
			when (RSSLPLAllocationPriorityLevelEnabled
			and RequesterRel.RSSLPLDisplayPriority)
		
		RSSLPLDisplayPriority
			restricted
			when (not RSSLPLAllocationPriorityLevelEnabled
			and RequesterRel.RSSLPLDisplayPriority)
		
		RSSLPLDisplayFromCompany
			restricted
			when (RequesterRel.RSSLPLDisplayFromCompany)
		
		RSSLPLDisplayFromLocation
			restricted
			when (RequesterRel.RSSLPLDisplayFromLocation)
		
		RSSLPLDisplayCompany
			restricted
			when (RequesterRel.RSSLPLDisplayCompany)
		
		RSSLPLDisplayRequestingLocation
			restricted
			when (RequesterRel.RSSLPLDisplayRequestingLocation)
		
		RSSLPLEligibleToAllocatePriorToSubstitution
            restricted
            when (ItemGroup.AllocatePriorToSubstitution
            and RSSLPLAssociatedItemsByPriorityRel.RSSLPLUnitCost not entered)


	Sets			
		ByShadowItem
            indexed
            Instance Selection
                where (HasItem)		
			Sort Order
				ItemGroup
				Item
		
		ByContractLine
			indexed
			Instance Selection
				where (ContractItem)
			Sort Order
				ItemGroup
				Contract
				ContractLine
				
    Relations 
        ContractLinesSpecialRel
            one-to-many relation to ContractLine
            Field Mapping uses symbolic key
                related.ContractGroup = ItemGroup                    	
                    	
		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup    = ItemGroup
				related.Contract	   	 = DerivedContractID

		ContractLineDefaultRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup    = ItemGroup
				related.Contract	   	 = DerivedContractID
				related.ContractLine     = DerivedContractLine

        VendorItemDefaultRel
            one-to-many relation to VendorItem
            Field Mapping uses symbolic key
                related.ProcurementGroup 				= ItemGroup
                related.Item             				= Item
        		related.Vendor							= LocalVendor
        	Instance Selection
        		where (related.UseAsDefault)

		MatchingSpecialItemRel
			one-to-many relation to KeywordShadow
			Field Mapping uses ByContractLine
				related.ItemGroup        = ItemGroup
			Instance Selection
				where (related.ContractLine.Manufacturer       = ContractLine.Manufacturer
				and    related.ContractLine.ManufacturerNumber = ContractLine.ManufacturerNumber
				and    ContractLine.ItemType.Special
				and    related.KeywordShadow != KeywordShadow
				and   (related.DefaultUnitCost > 0
				or     related.ContractLine.CostOption.NoCharge
				or     related.ContractLine.CostOption.VendorDetermined)
				and   (related.ContractLine.HasPrefMan
				or    (!ContractLine.HasPrefMan
				and    related.ContractLine.Priority           < ContractLine.Priority)
				or    (related.ContractLine.Priority           = ContractLine.Priority
				and    related.DefaultUnitCost                 < DefaultUnitCost
				and    !ContractLine.HasPrefMan)))
		
		ContractLineMatchingRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup   = ItemGroup
				related.Contract        = Contract
				related.ContractLine    = ContractLine
		
		ContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup    = ItemGroup
				related.Contract	   	 = DerivedContractID
				related.ContractLine   	 = DerivedContractLine
		
		OriginalContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup    = ItemGroup
				related.Contract	   	 = Contract
				related.ContractLine   	 = ContractLine
				
		DefaultContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup    = ItemGroup
				related.Contract	   	 = LocalDefaultedContract
				related.ContractLine   	 = LocalDefaultedContractLine
				
        InventoryCompanyRel
            one-to-one relation to InventoryCompany
            Field Mapping uses symbolic key
                related.Company = DerivedCompany
                
		RequesterRel
            one-to-one relation to Requester
            Field Mapping uses symbolic key
            	related.HROrganization = actor.agent(Employee).HROrganization
                related.Requester = actor.agent(Employee).Employee.Requester.Requester

        PurchasingCompanyRel
            classic name is PO-COMPANY
            one-to-one relation to PurchasingCompany
            Field Mapping uses symbolic key
                related.Company = DefaultFromCompany

		RequestingLocationRel 
			one-to-one relation to RequestingLocation
			Field Mapping uses symbolic key
				related.Company     		= DerivedCompany
				related.RequestingLocation  = DerivedRequestingLocation

		ItemAtRequestingLocationRel
			one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= DerivedCompany
				related.InventoryLocation  	= DerivedRequestingLocation
				related.Item				= DerivedItem

		ItemAtFromLocationRel
			one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= RequestingLocationRel.FromCompanyLocation.FromCompany
				related.InventoryLocation  	= RequestingLocationRel.FromCompanyLocation.FromLocation
				related.Item				= DerivedItem
				
		ItemAtRequisitionFromLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company				= RequisitionRel.FromCompanyLocation.FromCompany
				related.InventoryLocation  	= RequisitionRel.FromCompanyLocation.FromLocation
				related.Item				= DerivedItem
				
		ItemAtLocationRuleFromLocationRel
			one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= DefaultLocationRuleFromCompany
				related.InventoryLocation  	= DefaultLocationRuleFromLocation
				related.Item				= DerivedItem
		

		ItemLocationRel
			one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= DefaultFromCompany
				related.InventoryLocation  	= DefaultFromLocation
				related.Item				= DerivedItem
				
		ContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup    = ItemGroup
				related.ItemNumber   	 = DerivedItem
			Instance Selection
				where (related.ContractLineState.Active
				and !related.OnHold
				and related.CanUseForCostDefaulting
                and related.EffectiveDate <= current corporate date
                and (related.ExpirationDate not entered
                or 	related.ExpirationDate >= current corporate date))
				
		HighPriorityContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup    = ItemGroup
				related.ItemNumber   	 = DerivedItem
			Instance Selection
				where ((related.ContractLineState.Active
				and !related.OnHold)
				and related.Contract != Contract
				and (related.ContractLine.Priority < ContractLine.Priority)
				and related.ContractLine.UseForCostDefaultingSomewhere
				and !PreferredContract
				and (DefaultItemType.Service
				or DefaultItemType.Special)
				and (related.EffectiveDate <= current corporate date
				and (related.ExpirationDate not entered
				or related.ExpirationDate >= current corporate date)))

		PreferredContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= DerivedItem
			Instance Selection
				where ((related.ContractLineState.Active
				and !related.OnHold)
				and related.Contract != Contract
				and related.ContractLine.UseForCostDefaultingSomewhere
				and related.ContractLine.PreferredLine
				and (DefaultItemType.Service
				or DefaultItemType.Special))

		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup	= ItemGroup
				related.Vendor		= DerivedVendor

		PurchaseFromLocationRel
			one-to-one relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup				= ItemGroup
				related.Vendor					= DerivedVendor
				related.VendorLocation			= DerivedPurchaseFromLocation
				
		ProcurementTemplateLineRel
			one-to-many relation to ProcurementTemplateLine
			Field Mapping uses Set3
				related.ProcurementGroup		= ItemGroup
				related.Item					= DerivedItem
			Instance Selection
				where (related.ProcurementTemplate.IsValidForActorContext
				and related.ProcurementTemplate.RSSIParticipate)
				
		RequisitionRel
			one-to-one relation to Requisition
			Field Mapping uses symbolic key
				related.Company				= RequesterRel.CurrentCompanyForRQC
				related.Requisition			= RequesterRel.CurrentRequisitionForRQC
				
		RequisitionLineRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByItem
				related.Item					= DerivedItem
			Instance Selection
				where (related.IsMyRequisitionLine)				

		RequisitionLineItemRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set8
				related.Company 				= LocalCompanyForQuantityAdd
				related.Item					= DerivedItem
				related.Requisition				= LocalRequisitionForQuantityAdd
			Instance Selection
				where (related.EnteredUOM = LocalCostUOMForQuantityAdd
				and    related.ItemType   = DefaultItemType
				and    related.UnitCost   = LocalUnitCostForQuantityAdd)
		RequisitionLineItemUpdateRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set8
				related.Company 				= LocalCompanyForQuantityAdd
				related.Item					= DerivedItem
				related.Requisition				= LocalRequisitionForQuantityAdd
			Instance Selection
				where (related.EnteredUOM = TransientCostUOM
				and    related.ItemType   = DefaultItemType
				and    related.UnitCost   = TransientUnitCost)

		RequisitionLineItemMatchRel
			one-to-one relation to RequisitionLine
			Field Mapping uses symbolic key
				related.Company				= LocalCompanyForQuantityAdd
				related.Requisition			= LocalRequisitionForQuantityAdd
				related.RequisitionLine		= DerivedRequisitionLine
        		
		RequisitionLineItemMatchUpdateRel
			one-to-one relation to RequisitionLine
			Field Mapping uses symbolic key
				related.Company				= LocalCompanyForQuantityAdd
				related.Requisition			= LocalRequisitionForQuantityAdd
				related.RequisitionLine		= DerivedRequisitionLineUpdate
        		
        ItemTransientCostUOMRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.Item			= Item
        		related.UnitOfMeasure	= TransientCostUOM
        		
        ItemUOMRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.Item			= DerivedItem
        		related.UnitOfMeasure	= DerivedCostUOM	

        ItemUOMTranRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.Item			= DerivedItem
        		related.UnitOfMeasure	= LocalCostTranUOM

		ItemUOMMultRel
			one-to-many relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.Item			= DerivedItem			

		RecallProductItemForItemRel
    		one-to-many relation to RecallProductItem
    		Field Mapping uses ByItem
    			related.RecallGroup             = ItemGroup
    			related.Item                    = DerivedItem
    		Instance Selection
    			where (related.RecallNotice.Status.Pending
    			or     related.RecallNotice.Status.Active)
    			
    	UnitOfMeasureRel
    		one-to-one relation to UnitOfMeasure
    		Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.UnitOfMeasure	= DerivedCostUOM
        		
        RequesterFavoritePOTemplateRel
			one-to-many relation to ProcurementTemplateLine
			Field Mapping uses Set3
				related.ProcurementGroup		= ItemGroup
				related.Item					= DerivedItem
			Instance Selection
				where (related.ProcurementTemplate.IsValidForActorContext
				and related.ProcurementTemplate.RSSIParticipate
				and related.ProcurementTemplate.IsRequesterFavoritePOTemplate
				and related.UnitOfMeasure = DerivedCostUOM)

		AssociatedItemsRel
			one-to-many relation to AssociatedItem
			Field Mapping uses symbolic key
				related.ItemGroup = ItemGroup
				related.Item      = DerivedItem
			Instance Selection
				where (related.AssociatedItem.AssociatedItemSubType.Substitute
				and	   related.AssociatedItem.IsWithinEffectiveDate
				and	   (related.AssociatedItem.ItemRel.Active
				or		(related.AssociatedItem.Contract entered
				and		 related.AssociatedItem.IsWithinContractLineEffectiveDate
				and	not	 related.AssociatedItem.ContractLineNotAvailable
				and not  related.AssociatedItem.ContractLineClosed
				and      related.AssociatedItem.IsValidContractParticipantForRSSLPL))
				and 	((related.AssociatedItem.IsSubstituteForCompanyOnly
				and 	  related.AssociatedItem.RelatedCompany = DefaultFromCompany)
				or 		((related.AssociatedItem.RelatedCompany = DefaultFromCompany
				and 	  related.AssociatedItem.RelatedLocation = DefaultFromLocation)
				or		 (related.AssociatedItem.IsNotLocationSpecific)))
				and    (related.AssociatedItem.RelatedItemLocationRel.Active
				or 		related.AssociatedItem.RelatedItemLocationRel not exists))
				
		CompanionItemsRel
			one-to-many relation to AssociatedItem
			Field Mapping uses symbolic key
				related.ItemGroup = ItemGroup
				related.Item      = DerivedItem
			Instance Selection
				where (related.AssociatedItem.AssociatedItemSubType.Companion
				and	   related.AssociatedItem.IsWithinEffectiveDate
				and	   related.AssociatedItem.ItemRel.Active
				and	 ((related.AssociatedItem.RelatedItemLocationRel exists 
				and	   related.AssociatedItem.RelatedItemLocationRel.Active
				and   (related.AssociatedItem.RelatedCompany = DefaultFromCompany
				and    related.AssociatedItem.RelatedLocation = DefaultFromLocation)) 
				or	  (related.AssociatedItem.RelatedItemLocationRel not exists)))

		VendorItemRel
			classic name is POITEMVEN
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup = ItemGroup
				related.Item             = DerivedItem
				related.Vendor           = DerivedVendor
			Instance Selection
				where (related.UseAsDefault)

		KitItemRel
			one-to-one relation to KitItem
			Field Mapping uses symbolic key
				related.ItemGroup							= ItemGroup
				related.KitItem.Company						= DefaultFromCompany
				related.KitItem.InventoryLocation			= DefaultFromLocation
				related.KitItem.Item						= DerivedItem

		ReplacementItemLocationRel
			one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= DefaultFromCompany
				related.InventoryLocation  	= DefaultFromLocation
				related.Item				= Item.ReplacementItem

		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup 			= ItemGroup
				related.Item      			= DerivedItem
				
		ReplacementItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup 			= ItemGroup
				related.Item      			= Item.ReplacementItem
				
		KeywordShadowReplacementItemRel
			one-to-one relation to KeywordShadow
			Field Mapping uses ByShadowItem
				related.ItemGroup 			= ItemGroup
				related.Item      			= Item.ReplacementItem

		WarehouseLocationRuleDetailsRel
            one-to-many relation to WarehouseLocationRuleDetail
            Field Mapping uses symbolic key
                related.Company               = DerivedCompany
                related.WarehouseLocationRule = DerivedLocationRule
                
        WarehouseLocationRuleItemLocationRel
            one-to-one relation to ItemLocation
            Field Mapping uses symbolic key
                related.Company               = LocalLocationRuleFromCompanyLocation.FromCompany
                related.InventoryLocation     = LocalLocationRuleFromCompanyLocation.FromLocation
                related.Item                  = Item

        RecallProductItemsRel
			one-to-many relation to RecallProductItem
			Field Mapping uses ByItem
				related.RecallGroup	= ItemGroup
				related.Item        = Item
			Instance Selection
				where (related.RecallNotice.Status.Pending
				or     related.RecallNotice.Status.Active)
		FromCompanyRel
			one-to-one relation to InventoryCompany
            Field Mapping uses symbolic key
                related.Company           = DefaultFromCompany

		FromLocationRel
			one-to-one relation to InventoryLocation
            Field Mapping uses symbolic key
                related.Company           = DefaultFromCompany 
                related.InventoryLocation = DefaultFromLocation

		LocationItemUOMDefaultTransactionRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= DefaultFromCompany
				related.InventoryLocation 					= DefaultFromLocation
				related.Item								= Item
			Instance Selection
				where (related.DefaultForInventoryTransactions)

		LocationItemUOMDefaultBuyingRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= DefaultFromCompany
				related.InventoryLocation 					= DefaultFromLocation
				related.Item								= Item
			Instance Selection
				where (related.DefaultForBuying)

		ItemUOMConversionRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup		= ItemGroup
        		related.Item			= DerivedItem
        		related.UnitOfMeasure	= LocalCostConversionUOM

        VendorItemUsedRel
            one-to-many relation to VendorItem
            Field Mapping uses symbolic key
                related.ProcurementGroup 				= ItemGroup
                related.Item             				= Item
        		related.Vendor							= LocalVendor

		ProcurementTemplateRel 
			one-to-one relation to ProcurementTemplate
			Field Mapping uses symbolic key
				related.ProcurementGroup 		= ItemGroup
				related.ProcurementTemplate		= LocalProcurementTemplate

		RSSLPLProcurementTemplateRel 
            one-to-one relation to ProcurementTemplate
            Field Mapping uses symbolic key
                related.ProcurementGroup        = PurchasingCompanyRel.ProcurementGroup
                related.ProcurementTemplate     = LocalProcurementTemplate

		RSSProcurementTemplateRequesterParticipantRel
            one-to-many relation to ProcurementTemplateParticipant
            Field Mapping uses symbolic key
                related.ProcurementGroup        = PurchasingCompanyRel.ProcurementGroup
                related.ProcurementTemplate     = LocalProcurementTemplate
                related.Company                 = blank
                related.RequestingLocation      = blank
                related.Requester               = actor.agent(Employee).Employee.Requester.Requester

		RSSLPLConfigurationParameterRel
            one-to-many relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID  = "config"
                related.ConfigurationParameter.Name             = "RSS_LPLAllocationPriorityLevel"
			Instance Selection
				where (related.ConfigurationParameter.Value = "true")
		
		RSSLPLAllocationPriorityLevelRel
			one-to-many relation to AllocationPriorityLevel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.UseAsDefault)
		
		RSSLPLAssociatedItemsByPriorityRel
            one-to-many relation to AssociatedItem
            Field Mapping uses ByPriority
                related.ItemGroup = ItemGroup
                related.Item      = DerivedItem
            Instance Selection
                where (related.AssociatedItem.AssociatedItemSubType.Substitute
                and    related.AssociatedItem.IsWithinEffectiveDate
                and    (related.AssociatedItem.ItemRel.Active
                or      (related.AssociatedItem.Contract entered
                and      related.AssociatedItem.IsWithinContractLineEffectiveDate
                and not  related.AssociatedItem.ContractLineNotAvailable
                and not  related.AssociatedItem.ContractLineClosed
                and      related.AssociatedItem.IsValidContractParticipantForRSSLPL))
                and     ((related.AssociatedItem.IsSubstituteForCompanyOnly
                and       related.AssociatedItem.RelatedCompany = DefaultFromCompany)
                or      ((related.AssociatedItem.RelatedCompany = DefaultFromCompany
                and       related.AssociatedItem.RelatedLocation = DefaultFromLocation)
                or       (related.AssociatedItem.IsNotLocationSpecific)))
                and    (related.AssociatedItem.RelatedItemLocationRel.Active
                or      related.AssociatedItem.RelatedItemLocationRel not exists))
	Field Rules								


	Actions
		Create is a Create Action
			restricted

			Action Rules
			
				if (Contract entered)
					ItemHasContract = true	
			
		Update is an Update Action
			restricted
			
			Action Rules
		
		Delete is a Delete Action
			restricted

		CreateRequisition is an Instance Action
			valid when (!RequisitionExists)
			Local Fields
				LocalRequisitionView is a Requisition view
				LocalRequisitionLineView is a RequisitionLine view
				LocalUnitCost					is an InternationalCost
				LocalCostOption					is a CostOption						
				
			Parameters
				PrmCompany             			is an InventoryCompany
				PrmRequestingLocation			is a RequestingLocation
				PrmFromCompany					is like InventoryCompany
				PrmFromLocation					is like InventoryLocation
				PrmRequestedDeliveryDate		is Date
				PrmDeliverTo					is a DeliverTo
				PrmAllocationPriority			is a AllocationPriority
				PrmRequisitionDescription		is Alpha size 30
				PrmBuyer						is a Buyer
				PrmCommodityCode				is a CommCodes
				PrmPurchaseTaxCode				is a TaxCode
				PrmPurchaseTaxable				is Boolean
				PrmPOCode						is a POCode
	            PrmQuantity            			is a Quantity
					precision is NumberOfDecimalsQuantity
				PrmTransactionCurrencyCode		is a Currency
	            PrmUOM                 			is a UnitOfMeasure
	            PrmTransactionUnitCost			is an InternationalCost
					precision is NumberOfDecimalsCost
	            PrmToAccountingEntity			is a AccountingEntity
				PrmGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
					default label is "GlobalLedgerChartAccount"
				PrmAccountingUnit				is like AccountingUnit
				PrmProject						is a Project
				PrmFinanceDimension1			is a FinanceDimension1
				PrmFinanceDimension2			is a FinanceDimension2
				PrmFinanceDimension3			is a FinanceDimension3
				PrmFinanceDimension4			is a FinanceDimension4
				PrmFinanceDimension5			is a FinanceDimension5
				PrmFinanceDimension6			is a FinanceDimension6
				PrmFinanceDimension7			is a FinanceDimension7
				PrmFinanceDimension8			is a FinanceDimension8
				PrmFinanceDimension9			is a FinanceDimension9
				PrmFinanceDimension10			is a FinanceDimension10
	            PrmCostCode						is a CostCode
	            PrmSourcingEventRequired		is Boolean
	            PrmContract						is a Contract
	            PrmContractLine					is a ContractLine
	            PrmAsset						is an Asset
	            PrmAssetTemplate				is an AssetTemplate
	            PrmRequisitionSource			is a RqSource
	            PrmVendor						is a Vendor
				PrmPurchaseFromLocation			is a VendorLocation
				PrmItemVendor					is like Vendor					
				PrmItemPurchaseFromLocation		is like VendorLocation			
				PrmDescription					is a Description
				PrmCostOption					is a CostOption
				PrmMajorPurchasingClass         is a MajorPurchasingClass
				PrmMinorPurchasingClass			is a MinorPurchasingClass
				PrmManufacturer					is AlphaUpper size 9	
				PrmManufacturerNumber			is a ManufacturerNumber
				PrmByPassUnitCost				is Boolean
				PrmCreatePurchaseOrder			is Boolean						
				PrmFromMobile					is Boolean
				PrmGLEncumbranceReference		is AlphaUpper size 60
				PrmReqAllocationPriority		is like AllocationPriority
				PrmFromCompanyLocation			is a FromCompanyLocation
				PrmGeneralLedgerAccountingUnit  is a GeneralLedgerAccountingUnit
				PrmVendorAndPurchaseFrom		is a VendorAndPurchaseFrom
				PrmDefaultDistribution			is a RQHeaderDefaultCodeBlock
				PrmLineDistribution 			is a RQHeaderDefaultCodeBlock
				PrmRSSLPLEligibleToAllocatePriorToSubstitution is Boolean
			Parameter Rules
				PrmCompany
					initial value is RequesterRel.Company
					default to RequesterRel.Company
					
				PrmRequestingLocation
					initial value is RequesterRel.RequestingLocation
					default to RequesterRel.RequestingLocation

				PrmFromCompanyLocation
					initial value is PrmRequestingLocation.FromCompanyLocation
					default to PrmRequestingLocation.FromCompanyLocation
						default individual fields
				
				PrmTransactionUnitCost
					initial value is DefaultUnitCost
					default to DefaultUnitCost
			Action Rules
				TransientCompany	  		  = PrmCompany
				LocalRequisitionForDefaulting = blank
				LocalFromCompanyForDefaulting = PrmFromCompanyLocation.FromCompany
				LocalFromLocForDefaulting	  = PrmFromCompanyLocation.FromLocation
				LocalReqLocForDefaulting      = PrmRequestingLocation
				include GetContractAndContractLine
			
				invoke Create Requisition
					assign result to LocalRequisitionView
					invoked.Company                          	= PrmCompany
					invoked.RequestingLocation					= PrmRequestingLocation
					invoked.FromCompanyLocation.FromCompany		= PrmFromCompanyLocation.FromCompany
					invoked.FromCompanyLocation.FromLocation	= PrmFromCompanyLocation.FromLocation
					invoked.RequestedDeliveryDate				= PrmRequestedDeliveryDate					
					invoked.Vendor								= PrmVendor					
					invoked.PurchaseFromLocation				= PrmPurchaseFromLocation
					invoked.DeliverTo							= PrmDeliverTo
					invoked.AllocationPriority					= PrmReqAllocationPriority
					invoked.RequisitionSource					= PrmRequisitionSource
					invoked.RequisitionDescription				= PrmRequisitionDescription
					invoked.Buyer								= PrmBuyer
					invoked.CommodityCode						= PrmCommodityCode
					invoked.PurchaseTaxCode						= PrmPurchaseTaxCode
					invoked.PurchaseTaxable						= PrmPurchaseTaxable
					invoked.POCode								= PrmPOCode
					invoked.DefaultDistributionAccount.ToAccountingEntity	= PrmDefaultDistribution.ToAccountingEntity
					invoked.DefaultDistributionAccount.GeneralLedgerChartAccount	= PrmDefaultDistribution.GeneralLedgerChartAccount
					invoked.DefaultDistributionAccount.AccountingUnit		= PrmDefaultDistribution.AccountingUnit
					invoked.DefaultDistributionAccount.Project				= PrmDefaultDistribution.Project
					invoked.DefaultDistributionAccount.FinanceDimension1	= PrmDefaultDistribution.FinanceDimension1
					invoked.DefaultDistributionAccount.FinanceDimension2	= PrmDefaultDistribution.FinanceDimension2
					invoked.DefaultDistributionAccount.FinanceDimension3	= PrmDefaultDistribution.FinanceDimension3
					invoked.DefaultDistributionAccount.FinanceDimension4	= PrmDefaultDistribution.FinanceDimension4
					invoked.DefaultDistributionAccount.FinanceDimension5	= PrmDefaultDistribution.FinanceDimension5
					invoked.DefaultDistributionAccount.FinanceDimension6	= PrmDefaultDistribution.FinanceDimension6
					invoked.DefaultDistributionAccount.FinanceDimension7	= PrmDefaultDistribution.FinanceDimension7
					invoked.DefaultDistributionAccount.FinanceDimension8	= PrmDefaultDistribution.FinanceDimension8
					invoked.DefaultDistributionAccount.FinanceDimension9	= PrmDefaultDistribution.FinanceDimension9
					invoked.DefaultDistributionAccount.FinanceDimension10	= PrmDefaultDistribution.FinanceDimension10
					
				NewRequisition = LocalRequisitionView.Requisition	
				if (PrmFromMobile)	
					invoke UpdateCurrentRequisitionForRQC RequesterRel
						invoked.PrmCompany				= PrmCompany
						invoked.PrmRequisition     		= LocalRequisitionView.Requisition
							
				invoke Create RequisitionLine
					assign result to LocalRequisitionLineView
					invoked.Company								= PrmCompany
					invoked.Requisition							= LocalRequisitionView.Requisition
					invoked.Item								= Item
					invoked.ItemEntryMethod						= ItemEntryMethod.Item 
					invoked.Quantity							= PrmQuantity
					invoked.TransactionCurrencyCode				= PrmTransactionCurrencyCode
					invoked.EnteredUOM							= PrmUOM
					invoked.ServiceCode							= DefaultServiceCode
					invoked.TransientBypassUnitCost				= PrmByPassUnitCost
					invoked.EnteredToAccountingEntity			= PrmLineDistribution.ToAccountingEntity
					invoked.EnteredGeneralLedgerChartAccount	= PrmLineDistribution.GeneralLedgerChartAccount
					invoked.EnteredAccountingUnit				= PrmLineDistribution.AccountingUnit
					invoked.EnteredProject						= PrmLineDistribution.Project
					invoked.EnteredFinanceDimension1			= PrmLineDistribution.FinanceDimension1
					invoked.EnteredFinanceDimension2			= PrmLineDistribution.FinanceDimension2
					invoked.EnteredFinanceDimension3			= PrmLineDistribution.FinanceDimension3
					invoked.EnteredFinanceDimension4			= PrmLineDistribution.FinanceDimension4
					invoked.EnteredFinanceDimension5			= PrmLineDistribution.FinanceDimension5
					invoked.EnteredFinanceDimension6			= PrmLineDistribution.FinanceDimension6
					invoked.EnteredFinanceDimension7			= PrmLineDistribution.FinanceDimension7
					invoked.EnteredFinanceDimension8			= PrmLineDistribution.FinanceDimension8
					invoked.EnteredFinanceDimension9			= PrmLineDistribution.FinanceDimension9
					invoked.EnteredFinanceDimension10			= PrmLineDistribution.FinanceDimension10

					invoked.CreatePurchaseOrder					= PrmCreatePurchaseOrder		
					if (PrmVendorAndPurchaseFrom.Vendor entered)
						invoked.Vendor								= PrmVendorAndPurchaseFrom.Vendor			
						invoked.PurchaseFromLocation				= PrmVendorAndPurchaseFrom.PurchaseFromLocation		
					if (DefaultItemType.Service)
						invoked.ItemType						= DefaultItemType
					LocalUnitCost								= DefaultUnitCost
					round LocalUnitCost to nearest DerivedRoundTo
					LocalCostOption								= CostOption			
					if (PrmCostOption entered 
					and PrmCostOption not = LocalCostOption)
						invoked.CostOption						= PrmCostOption
						LocalCostOption							= PrmCostOption
					if (DefaultItemType.Special)
						invoked.VendorItem						= ContractLine.VendorItem
					if ((PrmTransactionUnitCost entered and PrmTransactionUnitCost not = LocalUnitCost)
					or (PrmItemVendor entered and PrmItemVendor not = DerivedVendor and LocalCostOption.CostRequired)
					or ((DefaultItemType.Special and Contract.UOMSMustMatchForSpecials)
					and (PrmContract entered and (PrmContractLine.UOM not = PrmUOM))))		
						if(not IsOnContract)
							invoked.TransactionUnitCost				= PrmTransactionUnitCost
						if ((DefaultItemType.Service and DefaultServiceCode.Amount)		
						and (PrmItemVendor not entered or PrmItemVendor = DerivedVendor))
							invoked.Contract					= PrmContract
							invoked.ContractLine				= PrmContractLine
					else
						if (DefaultItemType.Special or DefaultItemType.Service)
							invoked.Contract					= Contract
							invoked.ContractLine				= ContractLine
					invoked.SourcingEventRequired				= PrmSourcingEventRequired
					invoked.EnteredAsset						= PrmAsset
					invoked.EnteredAssetTemplate				= PrmAssetTemplate
					invoked.RequisitionSource					= PrmRequisitionSource
					invoked.Description							= PrmDescription
					invoked.MajorPurchasingClass				= PrmMajorPurchasingClass
					invoked.MinorPurchasingClass                = PrmMinorPurchasingClass
					invoked.CommodityCode						= PrmCommodityCode
					invoked.Manufacturer						= PrmManufacturer
					invoked.ManufacturerNumber					= PrmManufacturerNumber
					if (PrmDescription entered)
						invoked.Description						= PrmDescription
					else
						invoked.Description						= Description
					invoked.EnteredGLEncumbranceReference		= PrmGLEncumbranceReference
					invoked.AllocationPriority					= PrmAllocationPriority
									
				NewRequisitionLine = LocalRequisitionLineView.RequisitionLine
	
		AddToRequisition is an Instance Action
			valid when (KeywordShadowExists)
 			Local Fields
				LocalRequisitionLineView is a RequisitionLine view
				LocalUnitCost					is an InternationalCost
				LocalCostOption					is a CostOption						
					
			Parameters
				PrmCompany						is an InventoryCompany
				PrmRequisition					is a Requisition
				PrmQuantity						is a Quantity
					precision is NumberOfDecimalsQuantity
				PrmTransactionCurrencyCode		is a Currency
				PrmUOM							is a UnitOfMeasure
				PrmTransactionUnitCost			is an InternationalCost
					precision is NumberOfDecimalsCost
				PrmToAccountingEntity			is a AccountingEntity
				PrmGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
					default label is "GlobalLedgerChartAccount"
				PrmAccountingUnit				is like AccountingUnit
				PrmProject						is a Project
				PrmFinanceDimension1			is a FinanceDimension1
				PrmFinanceDimension2			is a FinanceDimension2
				PrmFinanceDimension3			is a FinanceDimension3
				PrmFinanceDimension4			is a FinanceDimension4
				PrmFinanceDimension5			is a FinanceDimension5
				PrmFinanceDimension6			is a FinanceDimension6
				PrmFinanceDimension7			is a FinanceDimension7
				PrmFinanceDimension8			is a FinanceDimension8
				PrmFinanceDimension9			is a FinanceDimension9
				PrmFinanceDimension10			is a FinanceDimension10
				PrmCostCode						is a CostCode
				PrmSourcingEventRequired		is Boolean
				PrmContract						is a Contract
				PrmContractLine					is a ContractLine
				PrmAsset						is an Asset
				PrmAssetTemplate				is an AssetTemplate
				PrmRequisitionSource			is a RqSource
				PrmVendor						is a Vendor
				PrmPurchaseFromLocation			is a VendorLocation
				PrmItemVendor					is like Vendor						
				PrmItemPurchaseFromLocation		is like VendorLocation				
				PrmDescription					is a Description
				PrmCostOption					is a CostOption
				PrmMajorPurchasingClass         is a MajorPurchasingClass
				PrmMinorPurchasingClass			is a MinorPurchasingClass
				PrmCommodityCode				is a CommCodes
				PrmManufacturer					is AlphaUpper size 9
				PrmManufacturerNumber			is a ManufacturerNumber
				PrmByPassUnitCost				is Boolean
				PrmCreatePurchaseOrder			is Boolean							
				PrmFromMobile					is Boolean
				PrmUseExistingRequisition		is Boolean
				PrmGLEncumbranceReference		is AlphaUpper size 60
				PrmAllocationPriority			is a AllocationPriority
				PrmRSSLPLEligibleToAllocatePriorToSubstitution is Boolean
			
			Parameter Rules
				PrmCompany
					initial value is RequesterRel.Company
					default to RequesterRel.Company
				PrmTransactionUnitCost
					initial value is DefaultUnitCost
					default to DefaultUnitCost		
				PrmUOM
					initial value is DerivedCostUOM		
					default to DerivedCostUOM
				
			Action Rules
				if (PrmRequisition entered) 
					TransientCompany	  		  = PrmCompany
					LocalRequisitionForDefaulting = PrmRequisition
					LocalFromCompanyForDefaulting = PrmRequisition.FromCompanyLocation.FromCompany
					LocalFromLocForDefaulting	  = PrmRequisition.FromCompanyLocation.FromLocation
					LocalReqLocForDefaulting      = PrmRequisition.RequestingLocation
					include GetContractAndContractLine
	
					invoke Create RequisitionLine
						assign result to LocalRequisitionLineView
						invoked.Company								= PrmCompany
						invoked.Requisition							= PrmRequisition
						invoked.Item								= Item
						invoked.ItemEntryMethod						= ItemEntryMethod.Item
						invoked.Quantity							= PrmQuantity
						invoked.TransactionCurrencyCode				= PrmTransactionCurrencyCode
						invoked.EnteredUOM							= PrmUOM
						invoked.ServiceCode							= DefaultServiceCode
						invoked.TransientBypassUnitCost				= PrmByPassUnitCost
						invoked.EnteredToAccountingEntity			= PrmToAccountingEntity
						invoked.EnteredGeneralLedgerChartAccount	= PrmGeneralLedgerChartAccount
						invoked.EnteredAccountingUnit				= PrmAccountingUnit
						invoked.EnteredProject						= PrmProject
						invoked.EnteredFinanceDimension1			= PrmFinanceDimension1
						invoked.EnteredFinanceDimension2			= PrmFinanceDimension2
						invoked.EnteredFinanceDimension3			= PrmFinanceDimension3
						invoked.EnteredFinanceDimension4			= PrmFinanceDimension4
						invoked.EnteredFinanceDimension5			= PrmFinanceDimension5
						invoked.EnteredFinanceDimension6			= PrmFinanceDimension6
						invoked.EnteredFinanceDimension7			= PrmFinanceDimension7
						invoked.EnteredFinanceDimension8			= PrmFinanceDimension8
						invoked.EnteredFinanceDimension9			= PrmFinanceDimension9
						invoked.EnteredFinanceDimension10			= PrmFinanceDimension10

						invoked.CreatePurchaseOrder					= PrmCreatePurchaseOrder		
						if (ParItem)
							if (ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.Vendor entered
							and PrmContract.ApPoPurchaseFrom.VendorLocation entered
							and ItemAtRequestingLocationRel.ItemReplenishmentSourcesRel.PurchaseFromLocation = PrmItemPurchaseFromLocation)
								invoked.Vendor	 							= PrmItemVendor
								invoked.PurchaseFromLocation				= PrmItemPurchaseFromLocation
						else
						if (PrmItemVendor entered)
							invoked.Vendor								= PrmItemVendor			
							invoked.PurchaseFromLocation				= PrmItemPurchaseFromLocation	
						if (DefaultItemType.Service)
							invoked.ItemType						= DefaultItemType
						LocalUnitCost								= DefaultUnitCost
						round LocalUnitCost to nearest DerivedRoundTo
						LocalCostOption								= CostOption			
						if (PrmCostOption entered 
						and PrmCostOption not = LocalCostOption)
							invoked.CostOption						= PrmCostOption
							LocalCostOption							= PrmCostOption 
						if ((PrmTransactionUnitCost entered and PrmTransactionUnitCost not = LocalUnitCost)
						or (PrmItemVendor entered and PrmItemVendor not = DerivedVendor and LocalCostOption.CostRequired)
						or ((DefaultItemType.Special and Contract.UOMSMustMatchForSpecials)		
						and (PrmContract entered and (PrmContractLine.UOM not = PrmUOM))))		
							if(not IsOnContract)
								invoked.TransactionUnitCost				= PrmTransactionUnitCost
							if ((DefaultItemType.Service and DefaultServiceCode.Amount)		
							and (PrmItemVendor not entered or PrmItemVendor = DerivedVendor))
								invoked.Contract					= PrmContract
								invoked.ContractLine				= PrmContractLine
						else
							if (DefaultItemType.Special or DefaultItemType.Service)
								invoked.Contract					= Contract
								invoked.ContractLine				= ContractLine
						invoked.SourcingEventRequired				= PrmSourcingEventRequired																	
						invoked.EnteredAsset						= PrmAsset
						invoked.EnteredAssetTemplate				= PrmAssetTemplate
						invoked.RequisitionSource					= PrmRequisitionSource
						if (PrmDescription entered)
							invoked.Description						= PrmDescription
						else
							invoked.Description						= Description
						invoked.MajorPurchasingClass				= PrmMajorPurchasingClass
						invoked.MinorPurchasingClass                = PrmMinorPurchasingClass
						invoked.CommodityCode						= PrmCommodityCode
						invoked.Manufacturer						= PrmManufacturer
						invoked.ManufacturerNumber					= PrmManufacturerNumber
						invoked.EnteredGLEncumbranceReference		= PrmGLEncumbranceReference
						invoked.AllocationPriority					= PrmAllocationPriority
						
					NewRequisition = PrmRequisition
					NewRequisitionLine = LocalRequisitionLineView.RequisitionLine
					if (PrmFromMobile)	
						invoke UpdateCurrentRequisitionForRQC RequesterRel
							invoked.PrmCompany				= PrmCompany
							invoked.PrmRequisition     		= PrmRequisition
				else
					invoke CreateRequisition
						invoked.PrmCompany				= PrmCompany
						invoked.PrmQuantity				= PrmQuantity
						invoked.PrmUOM					= PrmUOM
						invoked.PrmTransactionUnitCost	= PrmTransactionUnitCost
						invoked.PrmFromMobile			= PrmFromMobile
				
		RecreateKeywordsForItemGroup is a Set Action
			restricted
			default label is untranslatable
			disable checkpoint 
			Parameters
				ParmItemGroup	is an ItemGroup
					default label is "ItemGroup"
			Parameter Rules
				ParmItemGroup
					required
						"ItemGroupIsRequired"
			Sort Order
				ItemGroup
				Item	 										
			Instance Selection
				where 	(ItemGroup	= ParmItemGroup)
				
			Action Rules
				Empty Set Rules
					invoke 	RecreateItemKeywords Item 
						invoked.ParmItemGroup	= ParmItemGroup
					invoke 	RecreateSpecialServiceKeywords ContractLine 
						invoked.ParmContractGroup	= ParmItemGroup			
				Set Rules
					Exit Rules
						invoke 	RecreateItemKeywords Item 
							invoked.ParmItemGroup	= ParmItemGroup
						invoke 	RecreateSpecialServiceKeywords ContractLine 
							invoked.ParmContractGroup	= ParmItemGroup
							
				Instance Rules
					invoke Delete

		RecreateKeywordsFromItemLocationAllItemGroups is a Set Action
			restricted
			default label is untranslatable
			disable checkpoint 
			Parameters
				ParmItemGroup	is an ItemGroup
					default label is "ItemGroup"
			Parameter Rules
				ParmItemGroup
					required
						"ItemGroupIsRequired"
			Sort Order
				ItemGroup
				Item	 										
			Instance Selection
				where 	(ItemGroup	= ParmItemGroup)
				
			Action Rules
				Empty Set Rules
					invoke 	RecreateItemKeywords Item 
						invoked.ParmItemGroup	= ParmItemGroup
					invoke 	RecreateSpecialServiceKeywords ContractLine 
						invoked.ParmContractGroup	= ParmItemGroup			
				Set Rules
					Exit Rules
						invoke 	RecreateItemKeywords Item 
							invoked.ParmItemGroup	= ParmItemGroup
						invoke 	RecreateSpecialServiceKeywords ContractLine 
							invoked.ParmContractGroup	= ParmItemGroup
							
				Instance Rules
					invoke Delete

		Purge is a Purge Action
			restricted

		FastPurge is a Purge Action 
			restricted 
			bypass relational integrity rules
		
        RSSLPLAddRequisition is an Instance Action
			default label is "_" 
			completion message is "<LocalCompletionMessage>"
            Local Fields

				LocalRequisitionView 			is a Requisition view
				LocalQuantity					is a Quantity
					precision is NumberOfDecimalsQuantity
						round to precision
				LocalUnitCost					is an UnsignedUnitCost
				LocalCostOption					is a CostOption	
                LocalRequisition				is a Requisition

			Parameters
				PrmCompany             			is an InventoryCompany
				PrmRequestingLocation			is a RequestingLocation
				PrmRequisition                  is a Requisition
				PrmFromCompany					is like InventoryCompany
				PrmFromLocation					is like InventoryLocation
				PrmRequestedDeliveryDate		is Date
				PrmDeliverTo					is a DeliverTo
				PrmAllocationPriority			is a AllocationPriority
				PrmRequisitionDescription		is Alpha size 30
				PrmBuyer						is a Buyer
				PrmCommodityCode				is a CommCodes
				PrmPurchaseTaxCode				is a TaxCode
				PrmPurchaseTaxable				is Boolean
				PrmPOCode						is a POCode
	            PrmQuantity            			is an UnsignedQuantity
				PrmServiceCode                  is a ServiceCode
				PrmTransactionCurrencyCode		is a Currency
	            PrmUOM                 			is a UnitOfMeasure
				
				PrmItemType                     is an ItemType
				PrmVendorItem                   is like VendorItem
	            PrmTransactionUnitCost			is an UnsignedUnitCost
					precision is NumberOfDecimalsCost
	            PrmToAccountingEntity			is a AccountingEntity
				PrmGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
					default label is "GlobalLedgerChartAccount"
				PrmAccountingUnit				is like AccountingUnit
				PrmProject						is a Project
				PrmFinanceDimension1			is a FinanceDimension1
				PrmFinanceDimension2			is a FinanceDimension2
				PrmFinanceDimension3			is a FinanceDimension3
				PrmFinanceDimension4			is a FinanceDimension4
				PrmFinanceDimension5			is a FinanceDimension5
				PrmFinanceDimension6			is a FinanceDimension6
				PrmFinanceDimension7			is a FinanceDimension7
				PrmFinanceDimension8			is a FinanceDimension8
				PrmFinanceDimension9			is a FinanceDimension9
				PrmFinanceDimension10			is a FinanceDimension10
	            PrmCostCode						is a CostCode
	            PrmSourcingEventRequired		is Boolean
	            PrmContract						is a Contract
	            PrmContractLine					is a ContractLine
	            PrmAsset						is an Asset
	            PrmAssetTemplate				is an AssetTemplate
	            PrmRequisitionSource			is a RqSource
	            PrmVendor						is a Vendor
				PrmPurchaseFromLocation			is a VendorLocation
				PrmItemVendor					is like Vendor					
				PrmItemPurchaseFromLocation		is like VendorLocation			
				PrmDescription					is a Description
				PrmCostOption					is a CostOption
				PrmMajorPurchasingClass         is a MajorPurchasingClass
				PrmMinorPurchasingClass			is a MinorPurchasingClass
				PrmManufacturer					is AlphaUpper size 9	
				PrmManufacturerNumber			is a ManufacturerNumber
				PrmByPassUnitCost				is Boolean
				PrmCreatePurchaseOrder			is Boolean						
				PrmGLEncumbranceReference		is AlphaUpper size 60
				PrmReqAllocationPriority		is like AllocationPriority
				PrmFromCompanyLocation			is a FromCompanyLocation
				PrmGeneralLedgerAccountingUnit  is a GeneralLedgerAccountingUnit
				PrmVendorAndPurchaseFrom		is a VendorAndPurchaseFrom
				PrmDefaultDistribution			is a FinanceCodeBlock
				PrmLineDistribution 			is a FinanceCodeBlock
				PrmAddToRequisition				is Numeric size 1
					States
						AddToExistingRequisition	value is 0
						StartNewRequisition			value is 1				
				PrmDate							is Date


				PrmRSSSourceInformation			is Numeric size 1
					States
            			NotApplicable         	value is 0
            			SearchCatalog    		value is 1
						RecentlyRequestedItem   value is 2
            			ShoppingList    		value is 3
						Punchout				value is 4
						SpecialAndService		value is 5
						CopyRequisitionLine 	value is 6
				PrmIsCostUpdateProhibited		is Boolean
				PrmAllocationPriorityLevel		is an AllocationPriorityLevel

			Parameter Rules
				PrmCompany
				    default to actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    initial value is actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    default to actor.agent(Employee).Employee.Requester.Company
				    initial value is actor.agent(Employee).Employee.Requester.Company
				PrmRequestingLocation
            		default to PrmRequisition.RequestingLocation
            		initial value is PrmRequisition.RequestingLocation
            		default to actor.agent(Employee).Employee.Requester.RequestingLocation
            		initial value is actor.agent(Employee).Employee.Requester.RequestingLocation					
				PrmRequisition
					if (PrmAddToRequisition.AddToExistingRequisition)
						required
							"FieldIsRequired"
						constraint(PrmRequisition.UpdateAllowed)
							"RequisitionMustBeUnreleased"							
					else
						PrmRequisition = 0
				PrmQuantity
					required
						"QuantityIsRequired"
				PrmFromCompanyLocation
					initial value is PrmRequestingLocation.FromCompanyLocation
					default to PrmRequestingLocation.FromCompanyLocation
						default individual fields
				PrmTransactionUnitCost
					initial value is DefaultUnitCost
					default to DefaultUnitCost
				PrmIsCostUpdateProhibited
					initial value is IsCostUpdateProhibited 
					default to IsCostUpdateProhibited
				PrmUOM
					default to DerivedCostUOM					
					initial value is DerivedCostUOM
				PrmItemType
                    default to DefaultItemType
				PrmServiceCode
                    default to DefaultServiceCode
                PrmDescription
                    default to Description
                PrmVendorItem
                	if (DefaultItemType.Special)
                		if (HasContract)
                			default to ContractLine.VendorItem
                		else	
                    		default to Item

				PrmAllocationPriority							
					if (RSSLPLConfigurationParameterRel exists)
						default to PrmAllocationPriorityLevel
						default to RSSLPLAllocationPriorityLevelRel.AllocationPriorityLevel
				PrmItemVendor
					default to PrmVendorAndPurchaseFrom.Vendor
				PrmCostOption
					default to CostOption
					initial value is CostOption
				PrmBuyer
					initial value is PrmRequestingLocation.Buyer

					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireBuyer)
						required
							"Field_BuyerIsRequired"
				PrmPOCode
					initial value is PrmRequestingLocation.POCode

					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequirePOCode)
						required
							"Field_PO_CodeIsRequired"
				PrmCommodityCode
					initial value is Item.CommodityCode
					
					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireCommodityCodeDisplay)
						required
							"Field_Commodity_CodeIsRequired"
				PrmDeliverTo
					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireDeliverTo)
						required
							"Field_Deliver_ToIsRequired"
				
	            PrmRequisitionDescription
					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireRequisitionDescription)
						required
							"Field_Requisition_DescriptionIsRequired"
				
	            PrmDate
					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireRequestedDeliveryDate)
						required
							"Field_Requested_Delivery_DateIsRequired"
				
	            PrmVendor
					if (PrmAddToRequisition.StartNewRequisition
					and RequesterRel.RequireVendor)
						required
							"Field_VendorIsRequired"
			Action Rules
				TransientCompany	  		  = PrmCompany
				LocalRequisitionForDefaulting = blank
				LocalFromCompanyForDefaulting = PrmFromCompanyLocation.FromCompany
				LocalFromLocForDefaulting	  = PrmFromCompanyLocation.FromLocation
				LocalReqLocForDefaulting      = PrmRequestingLocation
				include GetContractAndContractLine

				if (HasContractLine)
					constraint (not ContractLine.OnHold)
						"CannotCreateRequisitionLine;Contract<Contract>Line<ContractLine>IsOnHold"

				if (PrmRequisition not entered)
					invoke Create Requisition
						assign result to LocalRequisitionView
						invoked.Company					= PrmCompany
						invoked.RequestingLocation		= PrmRequestingLocation
						invoked.AllocationPriority				 	= PrmAllocationPriority
						if (RSSLPLConfigurationParameterRel exists)
							invoked.TransientAllocationPriorityLevel 	= PrmAllocationPriority
						invoked.RequestedDeliveryDate	= PrmDate
						invoked.RequisitionDescription	= PrmRequisitionDescription
						if (PrmFromCompanyLocation entered)
							invoked.FromCompanyLocation	= PrmFromCompanyLocation
						invoked.DeliverTo				= PrmDeliverTo
						invoked.RequisitionSource		= RqSource.RequisitionSelfService
						invoked.Vendor					= PrmVendor
						invoked.PurchaseFromLocation	= PrmPurchaseFromLocation
						invoked.RequisitionDescription	= PrmRequisitionDescription
						invoked.Buyer					= PrmBuyer
						invoked.CommodityCode			= PrmCommodityCode
						invoked.PurchaseTaxCode			= PrmPurchaseTaxCode
						invoked.PurchaseTaxable			= PrmPurchaseTaxable
						invoked.POCode					= PrmPOCode
						invoked.DefaultDistributionAccount.ToAccountingEntity	= PrmDefaultDistribution.ToAccountingEntity
						invoked.DefaultDistributionAccount.GeneralLedgerChartAccount	= PrmDefaultDistribution.GeneralLedgerChartAccount
						invoked.DefaultDistributionAccount.AccountingUnit		= PrmDefaultDistribution.AccountingUnit
						invoked.DefaultDistributionAccount.Project				= PrmDefaultDistribution.Project
						invoked.DefaultDistributionAccount.FinanceDimension1	= PrmDefaultDistribution.FinanceDimension1
						invoked.DefaultDistributionAccount.FinanceDimension2	= PrmDefaultDistribution.FinanceDimension2
						invoked.DefaultDistributionAccount.FinanceDimension3	= PrmDefaultDistribution.FinanceDimension3
						invoked.DefaultDistributionAccount.FinanceDimension4	= PrmDefaultDistribution.FinanceDimension4
						invoked.DefaultDistributionAccount.FinanceDimension5	= PrmDefaultDistribution.FinanceDimension5
						invoked.DefaultDistributionAccount.FinanceDimension6	= PrmDefaultDistribution.FinanceDimension6
						invoked.DefaultDistributionAccount.FinanceDimension7	= PrmDefaultDistribution.FinanceDimension7
						invoked.DefaultDistributionAccount.FinanceDimension8	= PrmDefaultDistribution.FinanceDimension8
						invoked.DefaultDistributionAccount.FinanceDimension9	= PrmDefaultDistribution.FinanceDimension9
						invoked.DefaultDistributionAccount.FinanceDimension10	= PrmDefaultDistribution.FinanceDimension10

					LocalRequisition = LocalRequisitionView.Requisition
				else		
					LocalRequisition = PrmRequisition

				LocalCompanyForQuantityAdd = PrmCompany
				LocalCostUOMForQuantityAdd = PrmUOM
				LocalRequisitionForQuantityAdd = LocalRequisition
				LocalUnitCostForQuantityAdd = PrmTransactionUnitCost
				if (DefaultUnitCost = LocalUnitCostForQuantityAdd
				and !ContractRel.UseContractUOM
				and (DefaultItemType.Inventoried or DefaultItemType.NonStock)
				and  LocalCostUOMForQuantityAdd != DerivedCostUOM)
					TransientCostUOM = PrmUOM
					LocalUnitCostForQuantityAdd = LocalUnitCostForQuantityAdd * (ItemTransientCostUOMRel.UOMConversion / ItemUOMRel.UOMConversion)

				LocalCompletionMessage = ItemAddedMessage





				if (RequisitionLineItemRel exists
				and RequesterRel.ValidateDuplicateItem 
				and !IsServiceItemByAmount)
					LocalCompletionMessage = ItemUpdatedMessage
					invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchRel
						invoked.PrmQuantity							= RequisitionLineItemMatchRel.Quantity + DerivedQuantity
						invoked.PrmUOM								= RequisitionLineItemMatchRel.EnteredUOM
				else
					LocalCostUOMForQuantityAdd = DerivedCostUOM
					if  (RequisitionLineItemRel exists
					and  ContractRel.UseContractUOM
					and (DefaultItemType.Inventoried or DefaultItemType.NonStock)
					and RequesterRel.ValidateDuplicateItem
					and !IsServiceItemByAmount)
						TransientCostUOM = PrmUOM
						LocalQuantity = PrmQuantity * (ItemTransientCostUOMRel.UOMConversion / ItemUOMRel.UOMConversion)
						LocalCompletionMessage = SelectedItemsUpdatedMessage
						invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchRel
							invoked.PrmQuantity							= RequisitionLineItemMatchRel.Quantity + LocalQuantity
							invoked.PrmUOM								= RequisitionLineItemMatchRel.EnteredUOM
					else
						invoke Create RequisitionLine
							invoked.Company 				= PrmCompany
							invoked.Item					= Item
							invoked.Description				= Description
							invoked.Quantity				= PrmQuantity
							invoked.EnteredUOM				= PrmUOM					
							invoked.Requisition				= LocalRequisition
							invoked.RequestingLocation 		= DerivedRequestingLocation					
							invoked.Contract				= Contract
							invoked.ContractLine			= ContractLine
							invoked.ItemEntryMethod			= ItemEntryMethod.Item
							invoked.ServiceCode							= DefaultServiceCode
							invoked.TransientBypassUnitCost				= false
							invoked.EnteredToAccountingEntity			= PrmLineDistribution.ToAccountingEntity
							invoked.EnteredGeneralLedgerChartAccount	= PrmLineDistribution.GeneralLedgerChartAccount
							invoked.EnteredAccountingUnit				= PrmLineDistribution.AccountingUnit
							invoked.EnteredProject						= PrmLineDistribution.Project
							invoked.EnteredFinanceDimension1			= PrmLineDistribution.FinanceDimension1
							invoked.EnteredFinanceDimension2			= PrmLineDistribution.FinanceDimension2
							invoked.EnteredFinanceDimension3			= PrmLineDistribution.FinanceDimension3
							invoked.EnteredFinanceDimension4			= PrmLineDistribution.FinanceDimension4
							invoked.EnteredFinanceDimension5			= PrmLineDistribution.FinanceDimension5
							invoked.EnteredFinanceDimension6			= PrmLineDistribution.FinanceDimension6
							invoked.EnteredFinanceDimension7			= PrmLineDistribution.FinanceDimension7
							invoked.EnteredFinanceDimension8			= PrmLineDistribution.FinanceDimension8
							invoked.EnteredFinanceDimension9			= PrmLineDistribution.FinanceDimension9
							invoked.EnteredFinanceDimension10			= PrmLineDistribution.FinanceDimension10
							invoked.CreatePurchaseOrder					= PrmCreatePurchaseOrder		
							LocalUnitCost								= DefaultUnitCost
							round LocalUnitCost to nearest DerivedRoundTo
							if (PrmVendorAndPurchaseFrom.Vendor entered)	
								invoked.Vendor							= PrmVendorAndPurchaseFrom.Vendor			
								invoked.PurchaseFromLocation			= PrmVendorAndPurchaseFrom.PurchaseFromLocation

							else
							if (LocalVendor entered)
								invoked.Vendor							= LocalVendor
								invoked.PurchaseFromLocation			= LocalPurchaseFromLocation
							if (((PrmTransactionUnitCost entered and PrmTransactionUnitCost not = LocalUnitCost)
							or ((DefaultItemType.Special and Contract.UOMSMustMatchForSpecials)		
							and (Contract entered and ContractLine.UOM not = PrmUOM)))
							and not IsCostUpdateProhibited)
								invoked.TransactionUnitCost				= PrmTransactionUnitCost

							if (DefaultItemType.Service)
								invoked.ItemType                		= DefaultItemType.Service
								invoked.Description             		= DefaultServiceDescription
								invoked.ServiceCode             		= DefaultServiceCode
							else
							if (DefaultItemType.Special)
								invoked.VendorItem						= ContractLine.VendorItem
								invoked.ItemType						= DefaultItemType.Special
							else
								invoked.Description             		= Description
							if (PrmTransactionUnitCost 				not = LocalUnitCost)
								invoked.TransactionUnitCost 			= PrmTransactionUnitCost					
							invoked.SourcingEventRequired				= PrmSourcingEventRequired
							invoked.EnteredAsset						= PrmAsset
							invoked.EnteredAssetTemplate				= PrmAssetTemplate
							invoked.RequisitionSource					= PrmRequisitionSource.RequisitionSelfService
							invoked.Description							= PrmDescription
							invoked.MajorPurchasingClass				= PrmMajorPurchasingClass
							invoked.MinorPurchasingClass                = PrmMinorPurchasingClass
							invoked.CommodityCode						= PrmCommodityCode
							invoked.Manufacturer						= PrmManufacturer
							invoked.ManufacturerNumber					= PrmManufacturerNumber
							if (PrmDescription entered)
								invoked.Description						= PrmDescription
							else
								invoked.Description						= Description
							invoked.EnteredGLEncumbranceReference		= PrmGLEncumbranceReference
							invoked.AllocationPriority					= PrmAllocationPriority
							invoked.RSSSourceInformation				= PrmRSSSourceInformation.SearchCatalog

	        Exit Rules
				invoke UpdateCurrentRequisitionForRQC RequesterRel
					invoked.PrmCompany							= PrmCompany
					invoked.PrmRequisition     					= LocalRequisition

		RSSLPLAutoAddToRequisition is an Update Action 
			completion message is "<LocalCompletionMessage>"
			Action Rules
				if (actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC not entered)
					TransientAddToRequisition = TransientAddToRequisition.StartNewRequisition
				invoke RSSLPLAddSelectedToRequisition

        RSSLPLAddToRequisition is an Instance Action
			default label is "_" 
			completion message is "<LocalCompletionMessage>"

			Local Fields
				LocalUnitCost					is an UnsignedUnitCost
				LocalRequisitionSource		    is a RqSource
				LocalRSSSourceInformation			is Numeric size 1
					States
            			NotApplicable         	value is 0
            			SearchCatalog    		value is 1
						RecentlyRequestedItem   value is 2
            			ShoppingList    		value is 3
						Punchout				value is 4
						SpecialAndService		value is 5
						CopyRequisitionLine 	value is 6

			Action Rules
				TransientCompany	  		  = RequisitionRel.Company
				LocalRequisitionForDefaulting = RequisitionRel.Requisition
				LocalFromCompanyForDefaulting = RequisitionRel.FromCompanyLocation.FromCompany
				LocalFromLocForDefaulting	  = RequisitionRel.FromCompanyLocation.FromLocation
				LocalReqLocForDefaulting      = RequisitionRel.RequestingLocation
				include GetContractAndContractLine

				if (HasContractLine)
					constraint (not ContractLine.OnHold)
						"CannotCreateRequisitionLine;Contract<Contract>Line<ContractLine>IsOnHold"

				LocalCompletionMessage = ItemAddedMessage
				LocalCompanyForQuantityAdd = actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				LocalCostUOMForQuantityAdd = DerivedCostUOM
				LocalRequisitionForQuantityAdd = actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC






				if  (RequisitionLineItemRel exists
				and RequesterRel.ValidateDuplicateItem
				and !IsServiceItemByAmount)				
					LocalCompletionMessage = ItemUpdatedMessage
					invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchRel
						invoked.PrmQuantity							= RequisitionLineItemMatchRel.Quantity + DerivedQuantity							
						invoked.PrmUOM								= RequisitionLineItemMatchRel.EnteredUOM
				else								
					invoke Create RequisitionLine
						invoked.Company 				= actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
						invoked.Requisition           	= actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC
						invoked.RequestingLocation 		= DerivedRequestingLocation
						invoked.Item					= Item
						invoked.Description				= Description
						invoked.Quantity				= DerivedQuantity
						invoked.TransientBypassUnitCost = true 
						invoked.ItemEntryMethod             		= ItemEntryMethod.Item			
						LocalUnitCost								= DefaultUnitCost
						round LocalUnitCost to nearest DerivedRoundTo
						invoked.EnteredUOM							= DerivedCostUOM
						if (LocalVendor entered)
							invoked.Vendor								= LocalVendor
							invoked.PurchaseFromLocation				= LocalPurchaseFromLocation
						if (DefaultItemType.Service)
							invoked.ItemType                		= DefaultItemType.Service
							invoked.Description             		= DefaultServiceDescription
							invoked.ServiceCode             		= DefaultServiceCode
						else
						if (DefaultItemType.Special)
							invoked.VendorItem						= ContractLine.VendorItem
							invoked.ItemType						= DefaultItemType.Special
						else
							invoked.Description             		= Description
						invoked.Contract							= Contract
						invoked.ContractLine						= ContractLine
						invoked.RSSSourceInformation				= LocalRSSSourceInformation.SearchCatalog
						invoked.RequisitionSource					= LocalRequisitionSource.RequisitionSelfService

		RSSLPLAddSelectedToNewRequisition is an Instance Action 
			completion message is "SelectedItemsAdded_toRequisition"
            Local Fields
            	LocalRequisitionView 			is a Requisition view
 				LocalUnitCost					is an InternationalCost  
                LocalRequisition				is a Requisition
            	LocalRequisitionLineView 		is a RequisitionLine view
			Parameters
				PrmCompany             			is an InventoryCompany                        
            	PrmRequestingLocation			is a RequestingLocation
				PrmDate							is Date
				PrmDeliverTo					is a DeliverTo
				PrmVendor						is a Vendor
				PrmPurchaseFromLocation			is a VendorLocation
				PrmItemVendor					is like Vendor					
				PrmItemPurchaseFromLocation		is like VendorLocation
				PrmRequisition                  is a Requisition			
				PrmRequisitionDescription		is Alpha size 30
				PrmBuyer						is a Buyer
				PrmCommodityCode				is a CommCodes
				PrmPurchaseTaxCode				is a TaxCode
				PrmPurchaseTaxable				is Boolean
				PrmPOCode						is a POCode
	            PrmRequisitionSource			is a RqSource
	            PrmAllocationPriority		    is a AllocationPriority
				PrmAddToRequisition				is Numeric size 1
					States
						AddToExistingRequisition	value is 0
						StartNewRequisition			value is 1
				PrmFromCompanyLocation 			is a FromCompanyLocation
				PrmQuantityMultiplier			is an UnsignedQuantity	 
				PrmRSSSourceInformation			is Numeric size 1
					States
            			NotApplicable         	value is 0
            			SearchCatalog    		value is 1
						RecentlyRequestedItem   value is 2
            			ShoppingList    		value is 3
						Punchout				value is 4
						SpecialAndService		value is 5
						CopyRequisitionLine 	value is 6		
				PrmAllocationPriorityLevel		is an AllocationPriorityLevel
			Parameter Rules
				PrmCompany
				    default to actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    initial value is actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    default to actor.agent(Employee).Employee.Requester.Company
				    initial value is actor.agent(Employee).Employee.Requester.Company
				PrmRequestingLocation
            		default to PrmRequisition.RequestingLocation
            		initial value is PrmRequisition.RequestingLocation
            		default to actor.agent(Employee).Employee.Requester.RequestingLocation
            		initial value is actor.agent(Employee).Employee.Requester.RequestingLocation					
				PrmRequisition
					if (PrmAddToRequisition.AddToExistingRequisition)
						required
							"FieldIsRequired"
						constraint(PrmRequisition.UpdateAllowed)
							"RequisitionMustBeUnreleased"							
					else
						PrmRequisition = 0
				PrmFromCompanyLocation
					initial value is PrmRequestingLocation.FromCompanyLocation
					default to PrmRequestingLocation.FromCompanyLocation
						default individual fields
				PrmAllocationPriority							
					if (RSSLPLConfigurationParameterRel exists)
						default to PrmAllocationPriorityLevel
						default to RSSLPLAllocationPriorityLevelRel.AllocationPriorityLevel
			Action Rules
				TransientCompany	  		  = PrmCompany
				LocalRequisitionForDefaulting = blank
				LocalFromCompanyForDefaulting = PrmFromCompanyLocation.FromCompany
				LocalFromLocForDefaulting	  = PrmFromCompanyLocation.FromLocation
				LocalReqLocForDefaulting      = PrmRequestingLocation
				include GetContractAndContractLine
				
				if (HasContractLine)
					constraint (not ContractLine.OnHold)
						"CannotCreateRequisitionLine;Contract<Contract>Line<ContractLine>IsOnHold"

				if (PrmAddToRequisition.StartNewRequisition)
					if (PrmRequisition					 	= actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC)
		            	invoke Create Requisition
	    	            	assign result to LocalRequisitionView
		    	            invoked.Company					= PrmCompany
		        	        invoked.RequestingLocation		= PrmRequestingLocation
							invoked.AllocationPriority				 	= PrmAllocationPriority
							if (RSSLPLConfigurationParameterRel exists)
								invoked.TransientAllocationPriorityLevel 	= PrmAllocationPriority
							invoked.RequestedDeliveryDate	= PrmDate
							invoked.RequisitionDescription	= PrmRequisitionDescription
							if (PrmFromCompanyLocation entered)
								invoked.FromCompanyLocation				= PrmFromCompanyLocation
							invoked.DeliverTo				= PrmDeliverTo
							invoked.RequisitionSource		= RqSource.RequisitionSelfService
							invoked.Vendor					= PrmVendor
							invoked.PurchaseFromLocation	= PrmPurchaseFromLocation
							invoked.RequisitionDescription	= PrmRequisitionDescription
							invoked.Buyer					= PrmBuyer
							invoked.CommodityCode			= PrmCommodityCode
							invoked.PurchaseTaxCode			= PrmPurchaseTaxCode
							invoked.PurchaseTaxable			= PrmPurchaseTaxable
							invoked.POCode					= PrmPOCode
		               	LocalRequisition = LocalRequisitionView.Requisition
		               	PrmRequisition   = LocalRequisitionView.Requisition
		               	NewRequisition	 = LocalRequisitionView.Requisition
					else
						LocalRequisition = actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC
	           	else
	          		LocalRequisition = PrmRequisition
				LocalCompanyForQuantityAdd = PrmCompany
				LocalCostUOMForQuantityAdd = DerivedCostUOM
				LocalRequisitionForQuantityAdd = LocalRequisition
				LocalCompletionMessage = SelectedItemsAddedMessage





				if (RequisitionLineItemRel exists
				and RequesterRel.ValidateDuplicateItem
				and !IsServiceItemByAmount)
					LocalCompletionMessage = SelectedItemsUpdatedMessage
					invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchRel
						invoked.PrmQuantity							= RequisitionLineItemMatchRel.Quantity + DerivedQuantity
						invoked.PrmUOM								= RequisitionLineItemMatchRel.EnteredUOM
				else
					invoke Create RequisitionLine
						invoked.Company								= PrmCompany
						invoked.Requisition							= LocalRequisition
						invoked.RequestingLocation					= PrmRequestingLocation
						invoked.Description							= Description
						invoked.Quantity							= DerivedQuantity
						invoked.Item								= Item
						invoked.Contract					        = Contract
						invoked.ContractLine				        = ContractLine

						invoked.TransientBypassUnitCost 			= true 
						invoked.ItemEntryMethod             		= ItemEntryMethod.Item			
						LocalUnitCost								= DefaultUnitCost
						round LocalUnitCost to nearest DerivedRoundTo
						if (((LocalDefaultUnitCost entered and LocalDefaultUnitCost not = LocalUnitCost)
						or ((DefaultItemType.Special and Contract.UOMSMustMatchForSpecials)		
						and (Contract entered and ContractLine.UOM not = DerivedCostUOM)))
						and not IsCostUpdateProhibited)
							invoked.TransactionUnitCost				= LocalUnitCost
							
						invoked.EnteredUOM							= DerivedCostUOM
						if (DefaultItemType.Service)
							invoked.ItemType                		= DefaultItemType.Service
							invoked.Description             		= DefaultServiceDescription
							invoked.ServiceCode             		= DefaultServiceCode
						else
						if (DefaultItemType.Special)
							invoked.VendorItem						= ContractLine.VendorItem
							invoked.ItemType						= DefaultItemType.Special
						else
							invoked.Description             		= Description
						invoked.RSSSourceInformation				= PrmRSSSourceInformation.SearchCatalog
						invoked.RequisitionSource		            = PrmRequisitionSource.RequisitionSelfService
	
	        Exit Rules
				invoke UpdateCurrentRequisitionForRQC RequesterRel
					invoked.PrmCompany				= PrmCompany
					invoked.PrmRequisition     		= LocalRequisition

		RSSLPLAddSelectedToRequisition is an Update Action 
			completion message is "<LocalCompletionMessage>"
			Local Fields
				LocalUnitCost					is an UnsignedUnitCost
				LocalQuantity					is a Quantity
					precision is NumberOfDecimalsQuantity
						round to precision
            	LocalRequisitionView 			is a Requisition view
				LocalRequisitionSource		    is a RqSource
				LocalRSSSourceInformation		is Numeric size 1
					States
            			NotApplicable         	value is 0
            			SearchCatalog    		value is 1
						RecentlyRequestedItem   value is 2
            			ShoppingList    		value is 3
						Punchout				value is 4
						SpecialAndService		value is 5
						CopyRequisitionLine 	value is 6
						
			Entrance Rules
				if (TransientAddToRequisition.StartNewRequisition)
					TransientBuyer.InputRequireBuyer = RequesterRel.RequireBuyer
					
				if (TransientAddToRequisition.StartNewRequisition)
					TransientVendor.InputRequireVendor = RequesterRel.RequireVendor

			Field Rules
				TransientPOCode
					if (TransientAddToRequisition.StartNewRequisition
					and RequesterRel.RequirePOCode)
						required
							"Field_PO_CodeIsRequired"
				
				TransientCommodityCode
					if (TransientAddToRequisition.StartNewRequisition
					and RequesterRel.RequireCommodityCodeDisplay)
						required
							"Field_Commodity_CodeIsRequired"
				
				TransientDeliverTo
					if (TransientAddToRequisition.StartNewRequisition
					and RequesterRel.RequireDeliverTo)
						required
							"Field_Deliver_ToIsRequired"
				
	            TransientRequisitionDescription
					if (TransientAddToRequisition.StartNewRequisition
					and RequesterRel.RequireRequisitionDescription)
						required
							"Field_Requisition_DescriptionIsRequired"
				
	            TransientRequestedDeliveryDate
					if (TransientAddToRequisition.StartNewRequisition
					and RequesterRel.RequireRequestedDeliveryDate)
						required
							"Field_Requested_Delivery_DateIsRequired"
			
			Action Rules
				if (RequisitionRel exists)
					TransientCompany	  		  = RequisitionRel.Company
					TransientRequisition 		  = RequisitionRel.Requisition
					TransientRequestingLocation   = RequisitionRel.RequestingLocation
					TransientFromCompanyLocation  = RequisitionRel.FromCompanyLocation
					LocalRequisitionForDefaulting = RequisitionRel.Requisition
					LocalFromCompanyForDefaulting = RequisitionRel.FromCompanyLocation.FromCompany
					LocalFromLocForDefaulting	  = RequisitionRel.FromCompanyLocation.FromLocation
					LocalReqLocForDefaulting      = RequisitionRel.RequestingLocation
				include GetContractAndContractLine

				if TransientAddToRequisition.AddToExistingRequisition
					constraint(TransientRequisition entered)
						"RequisitionRequired"

				if (HasContractLine)
					constraint (not ContractLine.OnHold)
						"CannotCreateRequisitionLine;Contract<Contract>Line<ContractLine>IsOnHold"

				constraint(TransientQuantity entered)
					"QuantityIsRequired"

				constraint(TransientCostUOM entered)
					"UnitOfMeasureIsRequired"					

				if (ItemIsStockOrNonStock)
					constraint(ItemTransientCostUOMRel exists)
						"<TransientCostUOM>IsNotAValidUnitOfMeasureForItem"
				else
					constraint(TransientCostUOM exists)
						"<TransientCostUOM>IsNotAValidUnitOfMeasureForItem"
				
				if (TransientAddToRequisition.StartNewRequisition)
					if (actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC not entered)
		            	invoke Create Requisition
	    	            	assign result to LocalRequisitionView
		    	            invoked.Company					= TransientCompany
		        	        invoked.RequestingLocation		= TransientRequestingLocation
							if (TransientFromCompanyLocation entered)
								invoked.FromCompanyLocation	= TransientFromCompanyLocation
							invoked.RequestedDeliveryDate	= TransientRequestedDeliveryDate
							if (RSSLPLAllocationPriorityLevelEnabled)
			        	        invoked.AllocationPriority	= TransientAllocationPriorityLevel.AllocationPriorityLevel
							else
			        	        invoked.AllocationPriority	= TransientAllocationPriority
							invoked.RequisitionDescription	= TransientRequisitionDescription
							invoked.RequisitionSource		= LocalRequisitionSource.RequisitionSelfService
							invoked.DeliverTo				= TransientDeliverTo
							invoked.CommodityCode			= TransientCommodityCode
							invoked.POCode					= TransientPOCode
							invoked.Buyer					= TransientBuyer.Buyer
							invoked.Vendor					= TransientVendor.Vendor
		               	TransientRequisition 				= LocalRequisitionView.Requisition
						invoke UpdateCurrentRequisitionForRQC RequesterRel
							invoked.PrmCompany				= TransientCompany
							invoked.PrmRequisition     		= LocalRequisitionView.Requisition			
	           	else
				if (TransientRequisition entered
				and TransientRequisition != actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC)
					invoke UpdateCurrentRequisitionForRQC RequesterRel
						invoked.PrmCompany				= TransientCompany
						invoked.PrmRequisition     		= TransientRequisition			

				if (DefaultUnitCost = TransientUnitCost
				and !ContractRel.UseContractUOM
				and (DefaultItemType.Inventoried or DefaultItemType.NonStock)
				and TransientCostUOM != DerivedCostUOM)
					TransientUnitCost = TransientUnitCost * (ItemTransientCostUOMRel.UOMConversion / ItemUOMRel.UOMConversion)
					
				LocalCompanyForQuantityAdd = actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				LocalRequisitionForQuantityAdd = actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC
				LocalCostUOMForQuantityAdd = DerivedCostUOM
				LocalUnitCostForQuantityAdd = TransientUnitCost
				if  (RequisitionLineItemUpdateRel exists
				and RequesterRel.ValidateDuplicateItem
				and !IsServiceItemByAmount)



					LocalCompletionMessage = SelectedItemsUpdatedMessage
					invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchUpdateRel
						invoked.PrmQuantity							= RequisitionLineItemMatchUpdateRel.Quantity + TransientQuantity
						invoked.PrmUOM								= RequisitionLineItemMatchUpdateRel.EnteredUOM
				else
				if  (RequisitionLineItemRel exists
				and  ContractRel.UseContractUOM
				and (DefaultItemType.Inventoried or DefaultItemType.NonStock)
				and RequesterRel.ValidateDuplicateItem
				and !IsServiceItemByAmount)
					LocalQuantity = TransientQuantity * (ItemTransientCostUOMRel.UOMConversion / ItemUOMRel.UOMConversion)
					LocalCompletionMessage = SelectedItemsUpdatedMessage
					invoke RSSLPLUpdateRequisitionLineQTY RequisitionLineItemMatchRel
						invoked.PrmQuantity							= RequisitionLineItemMatchRel.Quantity + LocalQuantity
						invoked.PrmUOM								= RequisitionLineItemMatchRel.EnteredUOM
				else
					LocalCompletionMessage = SelectedItemsAddedMessage
					invoke Create RequisitionLine
						invoked.Company 				= actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
						invoked.Item					= Item
						invoked.Description				= Description
						invoked.Quantity				= TransientQuantity
						invoked.EnteredUOM				= TransientCostUOM					
						invoked.Requisition           	= actor.agent(Employee).Employee.Requester.CurrentRequisitionForRQC
						invoked.RequestingLocation 		= DerivedRequestingLocation					
						invoked.Contract				= Contract
						invoked.ContractLine			= ContractLine
						invoked.ItemEntryMethod         = ItemEntryMethod.Item			
						LocalUnitCost					= DefaultUnitCost
						round LocalUnitCost to nearest DerivedRoundTo
						if (RSSLPLEligibleToAllocatePriorToSubstitution
                        and not LocalCostCode = LocalCostCode.Entered
                        and ItemAvailableSOH < TransientQuantity)
                            invoked.TransientBypassUnitCost = false
                        else
                            invoked.TransientBypassUnitCost = true
						if (((TransientUnitCost entered and TransientUnitCost not = LocalUnitCost)
						or ((DefaultItemType.Special and Contract.UOMSMustMatchForSpecials)		
						and (Contract entered and ContractLine.UOM not = TransientCostUOM)))
						and not IsCostUpdateProhibited)
							invoked.TransactionUnitCost				= TransientUnitCost
						if (LocalVendor entered)
							invoked.Vendor								= LocalVendor
							invoked.PurchaseFromLocation				= LocalPurchaseFromLocation
						if (DefaultItemType.Service)
							invoked.ItemType                		= DefaultItemType.Service
							invoked.Description             		= DefaultServiceDescription
							invoked.ServiceCode             		= DefaultServiceCode
						else
						if (DefaultItemType.Special)
							invoked.VendorItem						= ContractLine.VendorItem
							invoked.ItemType						= DefaultItemType.Special
						else
							invoked.Description             		= Description
						invoked.RSSSourceInformation				= LocalRSSSourceInformation.SearchCatalog
						invoked.RequisitionSource					= LocalRequisitionSource.RequisitionSelfService
						if (TransientUnitCost not = LocalUnitCost)
							invoked.TransactionUnitCost 		= TransientUnitCost

        RSSLPLMarkAsFavorite is an Instance Action
            completion message is "ItemHasBeenAdded_to_aFavoriteList"
			restricted
            Parameters
                PrmProcurementTemplate          is a ProcurementTemplate
                PrmNewProcurementTemplate       is like ProcurementTemplate
                PrmDescription                  is a Description
                PrmProcurementGroup             is a ProcurementGroup
                    default label is "ProcurementGroup"
                PrmAddToFavoriteList            is Numeric size 1
                    States
                        AddToExistingFavoriteList   value is 0
							default label is "Add_to_anExistingFavoriteList"
                        AddToANewFavoriteList       value is 1
							default label is "Add_to_aNewFavoriteList"
            Parameter Rules
                PrmNewProcurementTemplate
                    if(PrmAddToFavoriteList.AddToANewFavoriteList)
                        required
							"Please_enter_a_name."
				PrmDescription
                    if(PrmAddToFavoriteList.AddToANewFavoriteList)
						required
							"Please_enter_a_description."
                PrmProcurementGroup
                    initial value is PurchasingCompanyRel.ProcurementGroup
					default to PurchasingCompanyRel.ProcurementGroup

			Local Fields
				LocalUnitCost					is an InternationalCost

            Action Rules
				LocalProcurementTemplate = PrmNewProcurementTemplate
				LocalUnitCost			 = DefaultUnitCost
				include GetManufacturerInformation

				if (ProcurementTemplateRel exists)
					constraint(ProcurementTemplateRel not exists)
						"ProcurementTemplate_already_exists"

                if(PrmAddToFavoriteList.AddToANewFavoriteList)
					invoke Create ProcurementTemplate
						invoked.ProcurementTemplate     = PrmNewProcurementTemplate
						invoked.Description             = PrmDescription
						invoked.ProcurementGroup        = PurchasingCompanyRel.ProcurementGroup
						invoked.Active                  = true
					invoke Create ProcurementTemplateParticipant
						invoked.ProcurementGroup        = PurchasingCompanyRel.ProcurementGroup
						invoked.ProcurementTemplate     = PrmNewProcurementTemplate
						invoked.Requester               = actor.agent(Employee).Employee.Requester.Requester

					invoke Create RequesterFavoritePOTemplate
						invoked.Company                 = RequesterRel.Company
						invoked.Requester               = actor.agent(Employee).Employee.Requester.Requester
						invoked.ProcurementTemplate     = PrmNewProcurementTemplate

				LocalProcurementTemplate = PrmProcurementTemplate

				if(ProcurementTemplateRel exists)
					constraint(ProcurementTemplateRel.IsRequesterFavoritePOTemplate)
						"InvalidFavoriteList."

                invoke Create ProcurementTemplateLine
                    fill in fields from this instance

                    if(PrmAddToFavoriteList.AddToANewFavoriteList)
                        invoked.ProcurementTemplate     = PrmNewProcurementTemplate
                    else
                        invoked.ProcurementTemplate     = PrmProcurementTemplate

					invoked.Item						= DerivedItem
                    invoked.ProcurementGroup            = PurchasingCompanyRel.ProcurementGroup
                    invoked.UnitOfMeasure               = DerivedCostUOM

                    if (DefaultItemType.Special)
						invoked.Manufacturer			= LocalManufacturer
						invoked.ManufacturerNumber		= LocalManufacturerNumber
                        invoked.SpecialItemDescription  = Description
                        invoked.SpecialItem             = true
                    	invoked.Contract                = Contract
                    	invoked.ContractLine            = ContractLine
                    else
                        invoked.SpecialItem             = false
                        invoked.SpecialItemDescription  = ""

                    if (DefaultItemType.Service)								
                        invoked.ServiceDescription      = Description
						invoked.ServiceCode				= DefaultServiceCode
                    	invoked.Contract                = Contract
                    	invoked.ContractLine            = ContractLine
                    else
                        invoked.ServiceDescription      = ""


		RSSLPLAddSelectedToShoppingList is an Instance Action 
			completion message is "SelectedItemsAdded_toShoppingList"
			
			Parameters
				PrmProcurementGroup 				is a ProcurementGroup
				PrmProcurementTemplate				is a ProcurementTemplate
				PrmShoppingListName					is like ProcurementTemplate
				PrmDescription 						is a Description
				PrmAddToShoppingList				is Numeric size 1
					States
						AddToNewShoppingList				value is 0
						AddToExistingShoppingList			value is 1

			Parameter Rules
				PrmProcurementGroup
					initial value is PurchasingCompanyRel.ProcurementGroup
				PrmProcurementTemplate
					if (PrmAddToShoppingList.AddToExistingShoppingList)
						required
							"ShoppingListIsRequired"
				PrmDescription
					if (!PrmAddToShoppingList.AddToExistingShoppingList)
						required
							"ShoppingListDescriptionIsRequired"
				PrmShoppingListName	
					if (!PrmAddToShoppingList.AddToExistingShoppingList)
						required
							"ShoppingListNameIsRequired"

			Action Rules

				if (PrmAddToShoppingList.AddToExistingShoppingList)
					invoke Create ProcurementTemplateLine
						invoked.Item								= DerivedItem
						invoked.ProcurementGroup 					= PurchasingCompanyRel.ProcurementGroup
						invoked.ProcurementTemplate    				= PrmProcurementTemplate
						invoked.UnitOfMeasure               		= DerivedCostUOM

						if (DefaultItemType.Special)
							include GetManufacturerInformation
							invoked.SpecialItemDescription  		= Description
							invoked.SpecialItem             		= true
							invoked.Manufacturer					= LocalManufacturer
							invoked.ManufacturerNumber				= LocalManufacturerNumber
						else
						if (DefaultItemType.Service)
							invoked.ServiceDescription      		= Description
							invoked.ServiceCode						= DefaultServiceCode
				else
                    LocalProcurementTemplate = PrmShoppingListName
                    
                    if (RSSLPLProcurementTemplateRel not exists)
                        invoke Create ProcurementTemplate
                            invoked.Description                         = PrmDescription
                            invoked.ProcurementGroup                    = PrmProcurementGroup
                            invoked.ProcurementTemplate                 = PrmShoppingListName
                            invoked.Active                              = true
                        invoke Create ProcurementTemplateParticipant
                            invoked.ProcurementGroup                    = PrmProcurementGroup
                            invoked.ProcurementTemplate                 = PrmShoppingListName
                            invoked.Requester                           = actor.agent(Employee).Employee.Requester.Requester
                        invoke Create ProcurementTemplateLine
                            invoked.Item                                    = DerivedItem
                            invoked.ProcurementGroup                        = PurchasingCompanyRel.ProcurementGroup
                            invoked.ProcurementTemplate                     = PrmShoppingListName
                            invoked.UnitOfMeasure                           = DerivedCostUOM
                            if (DefaultItemType.Special)
                                include GetManufacturerInformation
                                invoked.SpecialItemDescription              = Description
                                invoked.SpecialItem                         = true
                                invoked.Manufacturer                        = LocalManufacturer
                                invoked.ManufacturerNumber                  = LocalManufacturerNumber
                            else
                            if (DefaultItemType.Service)
                                invoked.ServiceDescription                  = Description
                                invoked.ServiceCode                         = DefaultServiceCode
                    else
                        if (RSSLPLProcurementTemplateRel.create date = current corporate date)
                            if (RSSProcurementTemplateRequesterParticipantRel not exists)
                                invoke Create ProcurementTemplateParticipant
                                    invoked.ProcurementGroup                    = PrmProcurementGroup
                                    invoked.ProcurementTemplate                 = PrmShoppingListName
                                    invoked.Requester                           = actor.agent(Employee).Employee.Requester.Requester
                            invoke Create ProcurementTemplateLine
                                invoked.Item                                    = DerivedItem
                                invoked.ProcurementGroup                        = PurchasingCompanyRel.ProcurementGroup
                                invoked.ProcurementTemplate                     = PrmShoppingListName
                                invoked.UnitOfMeasure                           = DerivedCostUOM
                                if (DefaultItemType.Special)
                                    include GetManufacturerInformation
                                    invoked.SpecialItemDescription              = Description
                                    invoked.SpecialItem                         = true
                                    invoked.Manufacturer                        = LocalManufacturer
                                    invoked.ManufacturerNumber                  = LocalManufacturerNumber
                                else
                                if (DefaultItemType.Service)
                                    invoked.ServiceDescription                  = Description
                                    invoked.ServiceCode                         = DefaultServiceCode
                        else 
                            constraint(RSSLPLProcurementTemplateRel not exists)
                                "ProcurementTemplate_already_exists"


					



