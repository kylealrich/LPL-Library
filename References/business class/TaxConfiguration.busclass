TaxConfiguration is a BusinessClass	
    owned by tx
    prefix is Txcfg

	Ontology
		symbolic key is TaxConfiguration   

	Patterns
        disable EffectiveDated
		disable Auditing
		implements CreateStamp
		implements UpdateStamp

	Persistent Fields
        Name
		CommentText
        WriteToLogFile			is Boolean
 		DisplayOn				is Boolean
 		DebugMode				is Boolean	
		ThirdParty

      	CallingSystem					
		FilterGroupName					
		FilterGroupOwner				
		HostSystem						
		ExternalCompanyId				
		ExternalCompanyIdName			
		IsAudited						is Boolean	    
		ProductMappingGroupName			
		ProductMappingGroupOwner		
		CompanyRole						//is Alpha 1	//COMPANYROLE				= "B", 	//"S", B=Buyer, S=Sales



 		UseAsLegalEntity		





		PassToProduceCode		is a PassToProductCode 




		TestingMode				is Boolean
		BypassWebserviceCall	is Boolean	
		SabrixVersion			is a TaxConfigVersion
			default label is "TaxConfigurationVersion"
		ExcludeNonUSFromTaxEstimate is Boolean		 
		ExcludeFromInvoiceAmount		is an InternationalAmount
		ExcludeToInvoiceAmount			is an InternationalAmount
		UseAsUniqueInvoiceId is Alpha 1	
            States
                UniqueId  		 value is blank	
                Invoice   		 value is "I"
                VoucherNumber	 value is "V"
                PurchaseOrderNbr value is "P"
		UseAsInvoiceNumber is Alpha 1	
            States
                Invoice  				value is blank
                DistributionSequence  	value is "D"
                VoucherNumber			value is "V"
		UseAsLineId is Alpha 1			
            States
                DistributionSequence	value is blank
                VoucherNumber			value is "V"
                Default1			    value is "D"
		UseAsTaxDetermination is Alpha 1			 
            States
                TaxCodeDescription	value is blank	
                TaxCode				value is "T"
                ShipToAddress    	value is "S"           
                     
		VertexTaxPostingsForPayables is Alpha 1	 				
        	States
                UseAccrualRequest       	  value is ""		
                UseInvoiceVerification  	  value is "V"  	
		ValidateVAT					is Boolean		
		VATTaxEntity				is a TaxEntity	
		DisplayWebserviceErrorXml	is Boolean		
			default label is "DisplayWebserviceError"	
		AllowConsumersUse			is Boolean		
		AttributeMissingProcess is Alpha 1
			States
				SkipAttribute		value is blank	
				MissingMessage      value is "M"	 
				Halt				value is "H"	
				Allow               value is "A"	
		AttributeMissingMessage		is Alpha 30 
		OneSourceVersionType		is Alpha 1		
			States
				Original			value is blank	
				Generic				value is "G"	
					
	Conditions
		OneSourceGenericValidation					
			when (ThirdParty.Sabrix
			and   OneSourceVersionType.Generic		
			and   CommentText entered)
		OneSourceGeneric	 
			when (ThirdParty.Sabrix
			and   OneSourceVersionType.Generic)	
		NonOneSourceGeneric	 
			when (ThirdParty.Sabrix
			and   !OneSourceVersionType.Generic)  

		OneSourceOriginalWithErrors	 			
			when (ThirdParty.Sabrix
			and   OneSourceVersionType.Original
			and   OriginalErrorsExist)				  
		OriginalErrorsExist
			when (!ConfigParamExist
			or    !OAuthRelExist)		




		IsOneSourceAndTestingModeOn
			default label is untranslatable
			when (ThirdParty.Sabrix
			and   TestingMode)
		OAuthRelExist
			when (OAuthRel exist)
			
		ConfigParamValueEntered
			when (OneSourceConfigParamRel exist
			and   OneSourceConfigParamRel.Value entered)

		ConfigParamExist
			when (OneSourceConfigParamRel exist)

		ShowForVertex
			when (ThirdParty.VertexOSeries
			and   VertexConfigExists)

		VertexConfigExists
			when (VertexConfigRel exists)

		VertexVersion9	 
			when (UsingVertex
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "9")	
						
		VertexVersion8	 

			when (ThirdParty.VertexOSeries
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "8")		 

		VertexVersion7

			when (ThirdParty.VertexOSeries
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "7")	

		VertexVersion7UT
			when (!UsingThis)




		VertexVersion9UT
			when (ThirdParty.VertexOSeries
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "9")

		VertexVersion9Basic										
			when (ThirdParty.VertexOSeries
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "9"
			and   VertexConfigVersion9Rel.VertexAccessType.Basic)

		VertexVersion9OAuthAndV9										
			when (ThirdParty.VertexOSeries
			and   VertexConfigRel.DefaultVersion.Version[1:1]	= "9"
			and   VertexConfigVersion9Rel.VertexAccessType.OAuth)


		VertexAccrualConfigParamExist
			when (Vertex7AccrualParamRel exist)
			
		VertexQuotationConfigParamExist
			when (Vertex7QuotationParamRel exist)

		VertexInvoiceConfigParamExist
			when (Vertex7InvoiceParamRel exist)
			
		VertexPurchOrderConfigParamExist
			when (Vertex7PurchOrderParamRel exist)
			
		VertexInvVerConfigParamExist
			when (Vertex7InvVerParamRel exist)
			
		VertexLookupTaxAreaConfigParamExist
			when (Vertex7LookupTaxAreaParamRel exist)
			

		VertexAccrual80ConfigParamExist
			when (Vertex8AccrualParamRel exist)
			
		VertexQuotation80ConfigParamExist
			when (VertexVersion8
			and   Vertex8QuotationParamRel exist)

		VertexInvoice80ConfigParamExist
			when (VertexVersion8
			and  Vertex8InvoiceParamRel exist)
			
		VertexPurchOrder80ConfigParamExist
			when (VertexVersion8
			and   Vertex8PurchOrderParamRel exist)
			
		VertexInvVer80ConfigParamExist
			when (VertexVersion8
			and   Vertex8InvVerParamRel exist)
			
		VertexLookupTaxArea80ConfigParamExist
			when (VertexVersion8
			and   Vertex8LookupTaxAreaParamRel exist)	

		VertexV8LookupTaxAreaFileValuesIncomplete 				
			when (VertexVersion8								
			and ((Vertex8LookupTaxAreaParamRel.Value[1:1] not entered		
			or    Vertex8LookupTaxAreaParamRel.Value[1:1] = "<")))
						
		LogFileRecordsExist
			restricted
			when (TaxLogHeaderRel exist)


		UserTemplateEnabled

			when (VertexVersion9)  



		VertexCalculateTax70ConfigExist
			when (VertexCalculateTax70RelUTConfig exist)

		VertexLookupTaxAreas70ConfigExist
			when (VertexLookupTaxAreas70RelUTConfig exist)

		Vertex70UserTemplateConfigParamIncomplete	
			when (ThirdParty.VertexOSeries
			and   Vertex70FileValuesIncompleteOrDontExist)

		Vertex70FileValuesIncompleteOrDontExist				
			when (UserTemplateEnabled
			and   !VertexCalculateTax70ConfigExist
			or    !VertexLookupTaxAreas70ConfigExist)

		VertexLookupTaxAreaFileValuesIncomplete 				
			when (UserTemplateEnabled



			and   VertexLookupTaxAreas70RelUTConfig.Value[1:1] not entered		
			or    VertexLookupTaxAreas70RelUTConfig.Value[1:1] = "<")


									
		VertexFileValuesIncompleteForCalculateTax 				
			when (UserTemplateEnabled





			and   VertexCalculateTax70RelUTConfig.Value not entered					
			or    VertexCalculateTax70RelUTConfig.Value[1:1] = "<")


		VertexUserTemplatesIncomplete 

			when (VertexVersion9 

			and  (CalculateTaxUserTemplate90RelUT not exist

			or    LookupTaxAreaUserTemplate90RelUT not exist))						






		VertexErrorsExist

			when (Vertex7ErrorsExist 	 
			or    Vertex8ErrorsExist
			or    Vertex9UTErrorsExist) 



		Vertex7UTErrorsExist
			when (UserTemplateEnabled 	 

			and  (Vertex70UserTemplateConfigParamIncomplete 
			and   VertexLookupTaxAreaFileValuesIncomplete 	 
			and   VertexFileValuesIncompleteForCalculateTax))


		Vertex7ErrorsExist

		    when (VertexVersion7
			and  ((!VertexQuotationConfigParamExist
			or    !VertexInvoiceConfigParamExist
			or    !VertexPurchOrderConfigParamExist	
			or    !VertexAccrualConfigParamExist
			or    !VertexInvVerConfigParamExist			
			or    !VertexLookupTaxAreaConfigParamExist)))
			

		Vertex8ErrorsExist
			when (VertexVersion8
			and ((!VertexQuotation80ConfigParamExist
			or    !VertexInvoice80ConfigParamExist
			or    !VertexPurchOrder80ConfigParamExist	
			or    !VertexAccrual80ConfigParamExist
			or    !VertexInvVer80ConfigParamExist			
			or    !VertexLookupTaxArea80ConfigParamExist)))
						
		VertexVersion7andNotUserTemplate
			when  (VertexVersion7
			and   !UserTemplateEnabled)



		VertexCalculateTax90ConfigExist
			when (VertexCalculateTax90RelUTConfig exist)

		VertexLookupTaxAreas90ConfigExist
			when (VertexLookupTaxAreas90RelUTConfig exist)

		Vertex90UserTemplateConfigParamIncomplete	
			when (ThirdParty.VertexOSeries
			and   VertexVersion9
			and   Vertex90FileValuesIncompleteOrDontExist)

		Vertex90FileValuesIncompleteOrDontExist				

			when (VertexVersion9
			and   !VertexCalculateTax90ConfigExist
			or    !VertexLookupTaxAreas90ConfigExist)


		VertexLookupTaxAreaFileValuesIncomplete90 				

			when (VertexVersion9
			and   VertexLookupTaxAreas90RelUTConfig.Value[1:1] not entered		
			or    VertexLookupTaxAreas90RelUTConfig.Value[1:1] = "<")
									
		VertexFileValuesIncompleteForCalculateTax90 				

			when (VertexVersion9
			and   VertexCalculateTax90RelUTConfig.Value not entered					
			or    VertexCalculateTax90RelUTConfig.Value[1:1] = "<")

		Vertex9UTErrorsExist

			when (VertexVersion9	 
			and ((VertexUserTemplatesIncomplete						

			or    VertexLookupTaxAreaFileValuesIncomplete90 	    //ConfigurationParameter not exist or still contains "<" for LookupTaxAreas
			or    VertexFileValuesIncompleteForCalculateTax90)))		//ConfigurationParameter not exist or still contains "<" for CaculateTax


		VertexCalcTaxOAuthRelExist						
			when (VertexCalcTax90OAuthRel exist)

		VertexLooiupTaxAreasOAuthRelExist				
			when (VertexLookup90OAuthRel exist)

		Vertex90CalcTaxConfigParamForOAuthExist
			when (VertexCalcTax90ConfigParmOAuthRel exist)

		Vertex90LookupConfigParamForOAuthExist
			when (VertexLookupTaxAreas90RelConfigOAuthRel exist)

		VertexVersion9OAuth					
			when (ThirdParty.VertexOSeries
			and   VertexConfigVersion9Rel.VertexAccessType.OAuth)	





		OneSourceErrorsExist	
			when (ThirdParty.Sabrix
			and  (!ConfigParamExist			
			or    !OAuthRelExist))

		VertexJurisdictionResultsExist
			when (ThirdParty.VertexOSeries
			and JurisdictionResultsRel exist)

		VertexVertexTaxAreaIdResultsExist
			when (ThirdParty.VertexOSeries
			and VertexTaxAreaIdResultsRel exist)

		VertexLookupResultsExist
			when (ThirdParty.VertexOSeries
			and VertexLookupResultsRel exist)

		VatPurchaseSaleTransactionExist
			when (!ThirdParty.VertexOSeries
			and VatPurchaseSaleTransactionRel exist)

		JournalDetailPurgeReportExist

			when (JournalDetailPurgeReportRel exist)
			 			 
		VertexTaxLogMessagesExist
			when (ThirdParty.VertexOSeries
			and TaxLogHeaderRel exist)
		1SourceUserTokenUserTemplateExist
			when (1SourceUserTokenUserTemplateRel exist)
		OneSourceUserTemplateExist
			when (1SourceIndataUserTemplateRel exist)
		1SourceIndataUserTemplateExist
			when (1SourceIndataUserTemplateRel exist)
		1SourceGenericConfigExist
			when (OneSourceGenericConfigParmRel exist)	
		1SourceCalcUserTemplateExist							
			when (1SourceUserTokenUserTemplateCalcRel exist)	
		1SourceHistUserTemplateExist							
			when (1SourceUserTokenUserTemplateHistRel exist)	





		OneSourceUserNameOrPasswordMissing	
			when (ThirdParty.Sabrix
			and   OneSourceVersionType.Generic	
			and   SabrixVersion.UserName not entered)



		OneSourcePasswordNotEntered							
			when (ThirdParty.Sabrix
			and   OneSourceVersionType.Generic		
			and   (SabrixVersion.OneSourcePassword  not entered
			and    SabrixVersion.Password not entered))	
			
		WebserviceErrorsExist	
			when (WebserviceErrorCount > 0)	





		WebserviceDebugOn	
			when (WebservDebugConfigParmRel exist)

		UsingAWebserviceTaxEngine
			when (ThirdParty.VertexOSeries
			or    ThirdParty.Sabrix)
																						 			 			 																											
    Relations			 

		TaxLogHeaderRel	 
			one-to-many relation to TaxLogHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= TaxConfiguration
 
 		OnesourceTaxLogHeaderRel
			one-to-many relation to TaxLogHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= TaxConfiguration
			Instance Selection
				where (related.LogThirdParty		= "S")		
								 		  
        SabrixVersionsRel
        	one-to-many relation to TaxConfigVersion
        	delete cascades
        	Field Mapping uses symbolic key
				related.TaxConfiguration	= TaxConfiguration
			Instance Selection
				where (related.TaxConfigVersion.ThirdParty 	= "S")				

     	SabrixVersionValidationRel
        	one-to-many relation to TaxConfigVersion
        	delete cascades
        	Field Mapping uses symbolic key
				related.TaxConfiguration					= TaxConfiguration
			Instance Selection
				where (related.TaxConfigVersion.ThirdParty 	= "S"
				and    related.TaxConfigVersion.Version 	= TaxConfiguration.SabrixVersion.Version
				and    related.TaxConfigVersion.Release 	= TaxConfiguration.SabrixVersion.Release)	
				
		VertexConfigRel	 
			one-to-one relation to VertexConfig
			Field Mapping uses symbolic key
				related.VertexConfig		= TaxConfiguration
				
		SabrixClientRel
			one-to-many relation to SabrixClient
			Field Mapping uses ByFinanceEnterpriseGroup
				related.FinanceEnterpriseGrp	= TaxConfiguration

      	ExistingTaxConfigRel
            one-to-many relation to TaxConfiguration
            Field Mapping uses symbolic key
            	related.TaxConfiguration		= TaxConfiguration 

        OneSourceConfigParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "ONESOURCE.WSI.WSDL"   
				
        OAuthRel	 	 
            one-to-one relation to OAuth
            Field Mapping uses symbolic key
                related.OAuth			= "OneSource"
                 



        Vertex7AccrualParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "ACCRUAL.WSI.WSDL" 

        Vertex7QuotationParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "QUOTATION.WSI.WSDL" 
                
        Vertex7InvoiceParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICE.WSI.WSDL" 

        Vertex7InvVerParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICEVERIFICATION.WSI.WSDL" 

       	Vertex7PurchOrderParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE.WSI.WSDL"

      	Vertex7LookupTaxAreaParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.WSDL"
                                                               					
 



        Vertex8AccrualParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "ACCRUAL80.WSI.WSDL" 
 
        Vertex8QuotationParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "QUOTATION80.WSI.WSDL" 
                
        Vertex8InvoiceParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICE80.WSI.WSDL" 

        Vertex8InvVerParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "INVOICEVERIFICATION80.WSI.WSDL" 

       	Vertex8PurchOrderParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE80.WSI.WSDL"

      	Vertex8LookupTaxAreaParamRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS80.WSI.WSDL"
 



       	VertexCalculateTax70RelUTConfig	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXCALCULATETAX70.WSI.ENDPOINT"
 
      	VertexLookupTaxAreas70RelUTConfig	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS70.WSI.ENDPOINT"

		Both70UserTemplatesRel   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexCalculateTax70"
				or     related.UserTemplate						= "VertexLookupTaxAreas70")

		Both90UserTemplatesRel   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexCalculateTax90"
				or     related.UserTemplate						= "VertexCalculateTaxHistory90"		
				or     related.UserTemplate						= "VertexLookupTaxAreas90")
								                
		CalculateTaxUserTemplateV7RelUT   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexCalculateTax70")

				
		LookupTaxAreaUserTemplateRelUT   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexLookupTaxAreas70")			

        UserTemplateConfigParameterRel	  
            one-to-many relation to ConfigurationParameter
            Field Mapping uses symbolic key
 			Instance Selection	
				where (related.ConfigurationParameter.ConfigurationID	= "config"
 				or     related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS70.WSI.ENDPOINT"
				or     related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.ENDPOINT")     




       	VertexCalculateTax90RelUTConfig	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90.WSI.ENDPOINT"
 
      	VertexLookupTaxAreas90RelUTConfig	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90.WSI.ENDPOINT"


		CalculateTaxUserTemplate90RelUT   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexCalculateTax90")
		

		LookupTaxAreaUserTemplate90RelUT   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "VertexLookupTaxAreas90")			

        UserTemplateConfigParameter90Rel	  
            one-to-many relation to ConfigurationParameter
            Field Mapping uses symbolic key
 			Instance Selection	
				where (related.ConfigurationParameter.ConfigurationID	= "config"
 				or     related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90.WSI.ENDPOINT"
				or     related.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.ENDPOINT")     



		VertexCalcTaxOAuthRel	 	 
				one-to-one relation to OAuth
				Field Mapping uses symbolic key
					related.OAuth			= "VertexCalculateTax90OAuth"

		VertexLookupTaxAreasOAuthRel	 	 
				one-to-one relation to OAuth
				Field Mapping uses symbolic key
					related.OAuth			= "VertexLookupTaxAreas90OAuth"



		VertexCalcTax90ConfigParmOAuthRel	  
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90OAUTH.WSI.ENDPOINT"

		VertexLookupTaxAreas90RelConfigOAuthRel	  
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90OAUTH.WSI.ENDPOINT"

		VertexCalcTax90OAuthRel	 	 
			one-to-one relation to OAuth
			Field Mapping uses symbolic key
				related.OAuth			= "VertexCalculateTax90OAuth"

		VertexLookup90OAuthRel	 	 
			one-to-one relation to OAuth
			Field Mapping uses symbolic key
				related.OAuth			= "VertexLookupTaxAreas90OAuth"



  		JurisdictionResultsRel
			one-to-many relation to JurisdictionResults
			valid when (ThirdParty.VertexOSeries)
			Field Mapping uses symbolic key
				related.VertexConfig								= TaxConfiguration	 



        VertexConfigVersion7Rel									
        	one-to-many relation to VertexConfigVersion
        	delete cascades
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= TaxConfiguration
			Instance Selection
				where (related.VertexConfigVersion.Version[1:1]	= "7")				

		VertexConfigVersion9Rel										
        	one-to-many relation to VertexConfigVersion
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= TaxConfiguration	 
			Instance Selection
				where (related.VertexConfigVersion.Version 			= VertexConfigRel.DefaultVersion.Version		 
				and	   related.VertexConfigVersion.ServiceRelease 	= VertexConfigRel.DefaultVersion.ServiceRelease
				and	   related.VertexConfigVersion.ServerName 		= VertexConfigRel.DefaultVersion.ServerName)
  		VertexTaxAreaIdResultsRel
			one-to-many relation to VertexTaxAreaIdResults
			valid when (ThirdParty.VertexOSeries)
			Field Mapping uses symbolic key
				related.VertexConfig								= TaxConfiguration	

  		VertexLookupResultsRel
			one-to-many relation to VertexLookupResults
			valid when (ThirdParty.VertexOSeries)
			Field Mapping uses symbolic key
				related.VertexConfig								= TaxConfiguration	

  		TaxEntityTransactionsRel
			one-to-many relation to TaxEntity
			valid when (!ThirdParty.VertexOSeries)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= TaxConfiguration	

  		VatPurchaseSaleTransactionRel
			one-to-many relation to VatPurchaseSaleTransaction
			valid when (!ThirdParty.VertexOSeries)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= TaxConfiguration	

  		JournalDetailPurgeReportRel									
			one-to-many relation to JournalDetailPurgeReport

			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= TaxConfiguration
				
        1SourceDummyTaxCodeRel							
            one-to-one relation to TaxCode
          	Field Mapping uses symbolic key
		    	related.FinanceEnterpriseGroup			= TaxConfiguration
				related.TaxCode 						= "1S"




       	OneSourceGenericConfigParmRel	  
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "config"
                related.ConfigurationParameter.Name				= "ONESOURCEGENERIC.WSI.ENDPOINT"

		OneSourceUserTemplatesIndataRel   	
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
			Instance Selection 	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and     related.UserTemplate					= "OneSourceIndata")
				                
		OneSourceUserTemplatesRel   	
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "OneSourceUserToken"
				or     related.UserTemplate						= "OneSourceIndata")

		1SourceIndataUserTemplateRel   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "OneSourceIndata")		
				
		1SourceUserTokenUserTemplateRel   
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
 			Instance Selection	
 				where (related.BusinessClass 					= "CalculateTaxInterface"				 
				and    related.UserTemplate						= "OneSourceUserToken")	

		1SourceUserTokenUserTemplateCalcRel   					
			one-to-one relation to UserTemplate
			Field Mapping uses ByBusinessClass
 				related.BusinessClass 							= "CalculateTaxInterface"				 
				related.UserTemplate							= "OneSourceEstimateTaxLogin"	

		1SourceUserTokenUserTemplateHistRel   					
			one-to-one relation to UserTemplate
			Field Mapping uses ByBusinessClass
 				related.BusinessClass 							= "CalculateTaxInterface"				 
				related.UserTemplate							= "OneSourceCreateHistoryLogin"	




		TaxLogWebserviceErrorsRel	 
			one-to-many relation to TaxLogHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= TaxConfiguration
			Instance Selection	
 				where (related.WebServiceError)















        WebservDebugConfigParmRel	  							
            one-to-one relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID	= "webservs"
                related.ConfigurationParameter.Name				= "ws.log.level" 
				  
       	TaxCalendarsRel
            one-to-many relation to TaxCalendar 
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup 			= TaxConfiguration


                				 				 				 				
	Transient Fields	
		HiddenResourcePassword is Boolean
			derive value from true
		ResourcePwdText		is Alpha 120
			derive value from "**************************************"	
		IsSuccess					is Boolean
		ReturnedTaxRate				is Percent size 7.5
																					
	Local Fields	 
		CompletionMessage			is Alpha 100
		CalculateTax
		LocalXmlString				is XMLDocument			
		LocalOneSourceUserName		is Alpha 60			 	
		LocalOneSourcePassword		is Alpha 16				

		MyXMLDocument				is XMLDocument			
		LocalConvertDate			is Alpha 10				


		WebServiceErrorMessage 		is Text					


											                
	Field Rules
		SabrixVersion
			if (ThirdParty.Sabrix)
				if (SabrixVersion.Version not entered
				and SabrixVersion.Release not entered)
					SabrixVersion.ThirdParty = blank
				if (SabrixVersion.Version entered)
					SabrixVersion.ThirdParty = "S"
				if (SabrixVersion.Release entered)	
					constraint (SabrixVersion.Version entered)
						"VersionIsRequiredIfEnteringRelease"
		ExcludeToInvoiceAmount
			if (ExcludeFromInvoiceAmount entered)
				required
			constraint (ExcludeFromInvoiceAmount < ExcludeToInvoiceAmount)
				"FromInvoiceAmountMustBeLessThanToInvoiceAmount"		




		OneSourceVersionType					
			if (OneSourceVersionType changed
			and OneSourceVersionType.Original)
				initialize CommentText			
			if (OneSourceVersionType.Generic)	
				constraint (ThirdParty.Sabrix)
					"ThirdPartyOptionMustBe_\One\SourceForTheGenericVerson;\Solution:SwitchBackTo_\One\Source,Change\One\SourceVersionTypeToOriginal;TryAgain"		
					
		ThirdParty 						
			if (ThirdParty changed
			and !ThirdParty.Sabrix)
				OneSourceVersionType = blank
				initialize CommentText		

		AttributeMissingProcess					
			if (AttributeMissingProcess.Allow) 
				constraint (ThirdParty.VertexOSeries)
					"AllowOptionCanOnlyBeUsedFor_\Vertex"
	Derived Fields
		VertexVersionText is a DerivedField
			type is MessageField
			if (VertexVersion9)	
				return VertexVersion9Label			
			if (VertexVersion8)	
				return VertexVersion8Label
			return VertexVersion7Label	

		VertexVersion7Label is a MessageField
			"Version7.0"		

		VertexVersion8Label is a MessageField
			"Version8.0" 		 

		VertexVersion9Label is a MessageField
			"Version9.0" 
			


		DerivedTimestamp is a DerivedField
			type is TimeStamp 
			return current timestamp	


		VertexVersion70  is a DerivedField
			type is Boolean
			if (ThirdParty.VertexOSeries	
			or  VertexVersion7)				
				return true
			return false 	







						
		UsingVertex is a DerivedField
			type is Boolean	
			if (ThirdParty.VertexOSeries)

				return true 
			else
				return false	

		UsingVertexUT is a DerivedField
			type is Boolean	
			if (ThirdParty.VertexOSeries

			and UserTemplateEnabled)
				return true 
			else
				return false	
							
		VertexLinkMsg is a DerivedField	  
			type is MessageField
			if (UsingVertex)					 
				return "<" + PutVertexLinkHereMsg + ">"
			 
			return blank		

		PutVertexLinkHereMsg is a MessageField
			"PutVertexLinkHere"

		1SourceGenericLinkMsg is a DerivedField	  
			type is MessageField
			restricted
			if (OneSourceGeneric)					 
				return "<" + Put1SourceGenericLinkHereMsg + ">"
			return blank		

		Put1SourceGenericLinkHereMsg is a MessageField
			"Put_\One\SourceLinkHere"  

		1SourceGenericValidationMsg is a MessageField
			"One\SourceGenericConnectionSuccessfull...IsSuccess<IsSuccess>;TaxRate:<ReturnedTaxRate>,<DerivedTimestamp>"					
					
		JurisdictionResultsCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of JurisdictionResultsRel)

		VertexTaxAreaIdResultsCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of VertexTaxAreaIdResultsRel)
			
		VertexLookupResultsCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of VertexLookupResultsRel)

		VertexTaxLogMessagesCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of TaxLogHeaderRel)

		OnesourceTaxLogMessagesCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of OnesourceTaxLogHeaderRel)
			
		VatPurchaseSaleTransactionCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of VatPurchaseSaleTransactionRel)

		TaxTransactionsCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of TaxEntityTransactionsRel)
			
		OAuthResourcePasswordHiddenIfEntered is a DerivedField
			type is Alpha 120
			if (OAuthRel.ResourcePassword entered)
				return "***************************************************"
			else
				return blank
					
		DateAlpha10 is a StringField	  
			type is Alpha 10
			restricted
			ConvertDateAlpha8[1:4]
			"-"
			ConvertDateAlpha8[5:6]
			"-"
			ConvertDateAlpha8[7:8]	
			
		ConvertDateAlpha8 is a DerivedField
			type is Alpha 8
			return LocalConvertDate		

		UsingThis is a DerivedField					
			type is Boolean
			default label is untranslatable	
			restricted		 
			return true
										


























































            









		WebserviceErrorCount is a DerivedField			 
			type is Numeric 10  
			return (instance count of TaxLogWebserviceErrorsRel)









		WebserviceDebugToggleMsg is a DerivedField	  
			type is MessageField
			restricted
			if (WebserviceDebugOn)					 
				return WebserviceDebugOnMsg			
			return WebserviceDebugOffMsg		

		WebserviceDebugOnMsg is a MessageField		

			"WebserviceDebug"   					
		WebserviceDebugOffMsg is a MessageField		

			"WebserviceDebug"   					
																											

	Form Invokes

		OAuthRecord
			if (OAuthRel exists)
				invoke Update OAuthRel
			else
				invoke Create OAuth	 
					invoked.OAuth				= "OneSource"
					invoked.Type 				= 5 
					
		ConfigurationParameterRecord
			if (OneSourceConfigParamRel exists)
				invoke Update OneSourceConfigParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "ONESOURCE.WSI.WSDL"    
				



		VertexAccrualParameterRecord
			if (Vertex7AccrualParamRel exists)
				invoke Update Vertex7AccrualParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "ACCRUAL.WSI.WSDL"  
					invoked.Length									= 300             	


		VertexQuotationParameterRecord
			if (Vertex7QuotationParamRel exists)
				invoke Update Vertex7QuotationParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "QUOTATION.WSI.WSDL"  
					invoked.Length									= 300             	

        								
		VertexInvoiceParameterRecord
			if (Vertex7InvoiceParamRel exists)
				invoke Update Vertex7InvoiceParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "INVOICE.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexPurchOrderParameterRecord
			if (Vertex7PurchOrderParamRel exists)
				invoke Update Vertex7PurchOrderParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexInvVerParameterRecord
			if (Vertex7InvVerParamRel exists)
				invoke Update Vertex7InvVerParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "INVOICEVERIFICATION.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexLookupTaxAreaParameterRecord
			if (Vertex7LookupTaxAreaParamRel exists)
				invoke Update Vertex7LookupTaxAreaParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "LOOKUPTAXAREAS.WSI.WSDL"  
					invoked.Length									= 300             	

        			



		VertexAccrual80ParameterRecord
			if (Vertex8AccrualParamRel exists)
				invoke Update Vertex8AccrualParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "ACCRUAL80.WSI.WSDL"  
					invoked.Length									= 300             	


		VertexQuotation80ParameterRecord
			if (Vertex8QuotationParamRel exists)
				invoke Update Vertex8QuotationParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "QUOTATION80.WSI.WSDL"  
					invoked.Length									= 300             	

        								
		VertexInvoice80ParameterRecord
			if (Vertex8InvoiceParamRel exists)
				invoke Update Vertex8InvoiceParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "INVOICE80.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexPurchOrder80ParameterRecord
			if (Vertex8PurchOrderParamRel exists)
				invoke Update Vertex8PurchOrderParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "PURCHASEORDERSERVICE80.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexInvVer80ParameterRecord
			if (Vertex8InvVerParamRel exists)
				invoke Update Vertex8InvVerParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "INVOICEVERIFICATION80.WSI.WSDL"  
					invoked.Length									= 300             	

        			
		VertexLookupTaxArea80ParameterRecord
			if (Vertex8LookupTaxAreaParamRel exists)
				invoke Update Vertex8LookupTaxAreaParamRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "LOOKUPTAXAREAS80.WSI.WSDL" 
					invoked.Length									= 300             	

 



		Vertex70CalcTaxUserTemplateConfigParamRecord 
			if (VertexCalculateTax70RelUTConfig exists)
				invoke Update VertexCalculateTax70RelUTConfig
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXCALCULATETAX70.WSI.ENDPOINT"    
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	//"http://demo0011.vertexinc.com:80/vertex-ws/services/LookupTaxAreas70" 
        							

		Vertex70LookupTaxAreaUserTemplateConfigParamRecord 		
			if (VertexLookupTaxAreas70RelUTConfig exists)
				invoke Update VertexLookupTaxAreas70RelUTConfig
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS70.WSI.ENDPOINT"  
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	//"http://demo0011.vertexinc.com:80/vertex-ws/services/LookupTaxAreas70"  




		VertexCalculateTax90OAuthRecord
			if (VertexCalcTax90OAuthRel exists)
				invoke Update VertexCalcTax90OAuthRel
			else
				invoke Create OAuth	 
					invoked.OAuth				= "VertexCalculateTax90OAuth"
					invoked.Type 				= 5  

		VertexLookupTaxAreas90OAuthRecord
			if (VertexLookup90OAuthRel exists)
				invoke Update VertexLookup90OAuthRel
			else
				invoke Create OAuth	 
					invoked.OAuth				= "VertexLookupTaxAreas90OAuth"
					invoked.Type 				= 5  




		Vertex90CalcTaxConfigParamForOAuth  
			if (Vertex90CalcTaxConfigParamForOAuthExist)
				invoke Update VertexCalcTax90ConfigParmOAuthRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90OAUTH.WSI.ENDPOINT"    
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	 
        							

		Vertex90LookupConfigParamForOAuth 		
			if (Vertex90LookupConfigParamForOAuthExist)
				invoke Update VertexLookupTaxAreas90RelConfigOAuthRel
			else
				invoke Create ConfigurationParameter	
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90OAUTH.WSI.ENDPOINT"  
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	 




		VertexCalculateTax70UserTemplate
			if (CalculateTaxUserTemplateV7RelUT exists)
				invoke Update CalculateTaxUserTemplateV7RelUT
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "VertexCalculateTax70"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template VertexCalculateTax70 Loaded " + DerivedTimestamp 
					invoked.Template    							= "VertexCalculateTax70"
					invoked.TemplateFileName						= "VertexCalculateTax70.xml"
					invoked.MimeType								= "application/xml"

		VertexLookupTaxAreas70UserTemplate
			if (LookupTaxAreaUserTemplateRelUT exists)
				invoke Update LookupTaxAreaUserTemplateRelUT
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "VertexLookupTaxAreas70"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template VertexLookupTaxAreas70 Loaded " + DerivedTimestamp 
					invoked.Template    							= "VertexLookupTaxAreas70"
					invoked.TemplateFileName						= "VertexLookupTaxAreas70.xml"
					invoked.MimeType								= "application/xml"
									





		Vertex90CalcTaxUserTemplateConfigParamRecord 
			if (VertexCalculateTax90RelUTConfig exists)
				invoke Update VertexCalculateTax90RelUTConfig
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXCALCULATETAX90.WSI.ENDPOINT"    
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	//"http://demo0011.vertexinc.com:80/vertex-ws/services/LookupTaxAreas90" 
        							

		Vertex90LookupTaxAreaUserTemplateConfigParamRecord 		
			if (VertexLookupTaxAreas90RelUTConfig exists)
				invoke Update VertexLookupTaxAreas90RelUTConfig
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "VERTEXLOOKUPTAXAREAS90.WSI.ENDPOINT"  
					invoked.Length									= blank		             	
        			invoked.Value 									= VertexLinkMsg	//"http://demo0011.vertexinc.com:80/vertex-ws/services/LookupTaxAreas90"  




		VertexCalculateTax90UserTemplate
			if (CalculateTaxUserTemplate90RelUT exists)
				invoke Update CalculateTaxUserTemplate90RelUT
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "VertexCalculateTax90"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template VertexCalculateTax90 Loaded " + DerivedTimestamp 
					invoked.Template    							= "VertexCalculateTax90"
					invoked.TemplateFileName						= "VertexCalculateTax90.xml"
					invoked.MimeType								= "application/xml"

		VertexLookupTaxAreas90UserTemplate
			if (LookupTaxAreaUserTemplate90RelUT exists)
				invoke Update LookupTaxAreaUserTemplate90RelUT
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "VertexLookupTaxAreas90"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template VertexLookupTaxAreas90 Loaded " + DerivedTimestamp 
					invoked.Template    							= "VertexLookupTaxAreas90"
					invoked.TemplateFileName						= "VertexLookupTaxAreas90.xml"
					invoked.MimeType								= "application/xml"

		OneSourceGenericUserTemplateIndata		
			if (1SourceIndataUserTemplateRel exists)
				invoke Update 1SourceIndataUserTemplateRel
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "OneSourceIndata"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template OneSourceGeneric Loaded " + DerivedTimestamp 
					invoked.Template    							= "OneSourceIndata"
					invoked.TemplateFileName						= "OneSourceIndata.xml"
					invoked.MimeType								= "application/xml"

		OneSourceGenericUserTemplateUserToken		
			if (1SourceUserTokenUserTemplateRel exists)
				invoke Update 1SourceUserTokenUserTemplateRel
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "OneSourceUserToken"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template OneSourceGeneric Loaded " + DerivedTimestamp 
					invoked.Template    							= "OneSourceUserToken"
					invoked.TemplateFileName						= "OneSourceUserToken.xml"
					invoked.MimeType								= "application/xml"

		OneSourceGenericUserTemplateUserTokenCalc					
			if (1SourceUserTokenUserTemplateCalcRel exists)
				invoke Update 1SourceUserTokenUserTemplateCalcRel
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "OneSourceEstimateTaxLogin"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template OneSourceGeneric Loaded " + DerivedTimestamp 
					invoked.Template    							= "OneSourceEstimateTaxLogin"
					invoked.TemplateFileName						= "OneSourceEstimateTaxLogin.xml"
					invoked.MimeType								= "application/xml"
					
		OneSourceGenericUserTemplateUserTokenHist					
			if (1SourceUserTokenUserTemplateHistRel exists)
				invoke Update 1SourceUserTokenUserTemplateHistRel
			else
				invoke Create UserTemplate	 
					invoked.UserTemplate							= "OneSourceCreateHistoryLogin"
					invoked.BusinessClass 							= "CalculateTaxInterface"							 
					invoked.Description 							= "Template OneSourceGeneric Loaded " + DerivedTimestamp 
					invoked.Template    							= "OneSourceCreateHistoryLogin"
					invoked.TemplateFileName						= "OneSourceCreateHistoryLogin.xml"
					invoked.MimeType								= "application/xml"					
					
		OneSourceGenericConfigParmRelRecord 		
			if (OneSourceGenericConfigParmRel exists)
				invoke Update OneSourceGenericConfigParmRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "config"
					invoked.ConfigurationParameter.Name				= "ONESOURCEGENERIC.WSI.ENDPOINT"  
					invoked.Length									= blank		             	
        			invoked.Value 									= 1SourceGenericLinkMsg	 

		ConfigurationParameterDebugRecord	
			if (WebservDebugConfigParmRel exists)
				invoke Update WebservDebugConfigParmRel
			else
				invoke Create ConfigurationParameter	 
        			invoked.ConfigurationParameter.ConfigurationID	= "webservs"
        			invoked.ConfigurationParameter.Name				= "ws.log.level"
					invoked.Value 									= "7"	 
				        							       													
	Actions
		Create is a Create Action
			Action Rules				
																	
		Update is an Update Action
			Action Rules
				if (ThirdParty.Sabrix)
					if (SabrixVersion.Version not entered
					and SabrixVersion.Release not entered)
						SabrixVersion.ThirdParty = blank				
					if (SabrixVersion.Version entered)
						SabrixVersion.ThirdParty = "S"
					if (SabrixVersion.Release entered)	
						constraint (SabrixVersion.Version entered)
							"VersionIsRequiredIfEnteringRelease"	
			Exit Rules
				if (TestingMode changed							
				and TestingMode = false
				and VertexConfigVersion7Rel exist)
					display "ToDo"



				if (!TestingMode)		
					DisplayOn = false	
					DebugMode = false 	
					
																				
		Delete is a Delete Action		

		CopyFromExisting is an Instance Action	  
			Parameters
				PrmFEG is like FinanceEnterpriseGroup
					default label is "CopyToFinanceEnterpriseGroup"

			Parameter Rules
				PrmFEG
					initial value is actor.context.FinanceEnterpriseGroup	
					default to actor.context.FinanceEnterpriseGroup	
					required


			Action Rules
				if (ExistingTaxConfigRel exist)
					invoke Create TaxConfiguration
						fill in fields from this instance
						invoked.TaxConfiguration	= PrmFEG


		ToggleWriteToLogFlag is an Instance Action		
			restricted									
			valid when (DebugMode)				
			completion message is "Write\To\LogIsNow:<WriteToLogFile>"	
			Action Rules
				if (WriteToLogFile)
					WriteToLogFile = false
				else
					WriteToLogFile = true	

			
		TurnWriteToLogFlagOff is an Instance Action		
			restricted
			valid when (WriteToLogFile)	
			completion message is "Write\To\LogIsNow:<WriteToLogFile>,Vertex\ConfigHasBeenSetTo:<VertexConfigRel.WriteToLogFile>"				
			Action Rules
				if (WriteToLogFile)
					WriteToLogFile 		= false	
					
				if (VertexConfigExists)
					invoke Update VertexConfigRel 
						invoked.WriteToLogFile = false		
						

		LoadV7TemplatePatternFiles is an Instance Action
			restricted
			valid when (VertexVersion7UT)
			completion message is "<CompletionMessage>"	
			Parameters
				LoadCalculateTaxRecord 	is Boolean
				LoadLookupTaxAreaRecord is Boolean
			Action Rules
				if (LoadCalculateTaxRecord)
					if (CalculateTaxUserTemplateV7RelUT not exist)
						invoke Create UserTemplate	 
							invoked.UserTemplate		= "VertexCalculateTax70"
							invoked.BusinessClass 		= "CalculateTaxInterface"						 
							invoked.Description 		= "Template VertexCalculateTax70 Loaded " + DerivedTimestamp 
							invoked.Template    		= "VertexCalculateTax70"
							invoked.TemplateFileName	= "VertexCalculateTax70.xml"
							invoked.MimeType			= "application/xml"
						CompletionMessage = "TemplateHeaderRecordSuccessfullyCreated"									
				if (LoadLookupTaxAreaRecord)
					if (LookupTaxAreaUserTemplateRelUT not exist)
						invoke Create UserTemplate	 
							invoked.UserTemplate		= "VertexLookupTaxAreas70"	 
							invoked.BusinessClass 		= "CalculateTaxInterface"
							invoked.Description 		= "Template VertexLookupTaxAreas70 Loaded " + DerivedTimestamp 
							invoked.Template    		= "VertexLookupTaxAreas70"
							invoked.TemplateFileName	= "VertexLookupTaxAreas70.xml"
							invoked.MimeType			= "application/xml"
						CompletionMessage = "TemplateHeaderRecordSuccessfullyCreated"	
						CompletionMessage = "***TemplateHeaderRecordAlreadyExists"					


		LoadV9TemplatePatternFiles is an Instance Action
			restricted	
			valid when (VertexUserTemplatesIncomplete)	
			completion message is "<CompletionMessage>"	
			Parameters
				LoadCalculateTaxRecord 	is Boolean
				LoadLookupTaxAreaRecord is Boolean
			Action Rules
				if (LoadCalculateTaxRecord)
					if (CalculateTaxUserTemplate90RelUT not exist)
						invoke Create UserTemplate	 
							invoked.UserTemplate		= "VertexCalculateTax90"
							invoked.BusinessClass 		= "CalculateTaxInterface"						 
							invoked.Description 		= "Template VertexCalculateTax90 Loaded " + DerivedTimestamp 
							invoked.Template    		= "VertexCalculateTax90"
							invoked.TemplateFileName	= "VertexCalculateTax90.xml"
							invoked.MimeType			= "application/xml"
						CompletionMessage = "TemplateHeaderRecordSuccessfullyCreated"									
				if (LoadLookupTaxAreaRecord)
					if (LookupTaxAreaUserTemplate90RelUT not exist)
						invoke Create UserTemplate	 
							invoked.UserTemplate		= "VertexLookupTaxAreas90"	 
							invoked.BusinessClass 		= "CalculateTaxInterface"
							invoked.Description 		= "Template VertexLookupTaxAreas90 Loaded " + DerivedTimestamp 
							invoked.Template    		= "VertexLookupTaxAreas90"
							invoked.TemplateFileName	= "VertexLookupTaxAreas90.xml"
							invoked.MimeType			= "application/xml"
						CompletionMessage = "TemplateHeaderRecordSuccessfullyCreated"	
						CompletionMessage = "***TemplateHeaderRecordAlreadyExists"		
						
		ValidateOneSourceConnection  is an Instance Action
			default label is untranslatable	 
			restricted	

			valid when (NonOneSourceGeneric)							 
			completion message is "One\SourceConnectionSuccessfull...ReturnedTaxRate<ReturnedTaxRate>"					
			Parameters
			Local Fields
				LocalTrigger 	is Alpha 1
				ReturnedTaxRate	is Percent size 7.5
			Parameter Rules
			Action Rules
				initialize CommentText	
				if (1SourceDummyTaxCodeRel not exist)
					invoke Create TaxCode	 
						invoked.FinanceEnterpriseGroup 		= TaxConfiguration
						invoked.TaxCode						= "1S"
						invoked.TaxType						= "S"
						invoked.Description					= "Saint Paul" + "/" + "Ramsey" + "/" + "MN"  
											

				CalculateTax.InputReference					= "Action:ValidateOneSourceConnection"  	
				CalculateTax.InvoiceCompany					= "2078"
				CalculateTax.UniqueIdOfRelatedObject		= UniqueID	//"187881859"
				CalculateTax.BaseCurrency					= "USD"
				CalculateTax.Vendor							= "TestVendor1"
				CalculateTax.VendorCustomerName				= "TestVendorName"
				CalculateTax.Invoice						= "TestInvoice"
				CalculateTax.InvoiceDate					= current corporate date
				CalculateTax.InvoiceAmount					= 100.00
				CalculateTax.TaxCode						= "1S"		 
				CalculateTax.FromPostalAddress				= "US^Street1^^^^Saint Paul^MN^55102^^^2^0.00000000^0.00000000^0.00000000"		 
				CalculateTax.PostalAddress					= "US^Street1^^^^Saint Paul^MN^55102^^^2^0.00000000^0.00000000^0.00000000"	//"CA^Street1^^^^TORONTO^ON^M3J 1P1^^^2^0.00000000^0.00000000^0.00000000"
				CalculateTax.Function            			= "C"	
				CalculateTax.BypassEditing 					= true
				LocalTrigger								= CalculateTax.SabrixThirdParty 
				constraint (CalculateTax.OutputErrorNumber not entered)   
		      		"<CalculateTax.OutputErrorMessage>" 
				ReturnedTaxRate								= CalculateTax.ReturnedTotalRate
				invoke Update SabrixVersion								  
					invoked.ReleaseNotes = 1SourceGenericValidationMsg	
					
		ValidateOneSourceGenericConnection  is an Instance Action			
			valid when (OneSourceGeneric)								 
			completion message is "One\SourceGenericConnectionSuccessfull...IsSuccess<IsSuccess>;TaxRate:<ReturnedTaxRate>"					
			Local Fields											 

				LocalTrigger    is Alpha 1
			Parameter Rules											 
			Action Rules
				constraint (SabrixVersionValidationRel exist)	
					"One_\Source_\GenericCannotBeValidated;TaxConfigurationVersionAndReleaseDoNotMatchVersionRecord"
				IsSuccess = false	
				initialize ReturnedTaxRate
				CalculateTax.CallingModule				= "TaxConfiguration"
				CalculateTax.InputReference				= "Action:ValidateOneSourceGenericConnection"  
				CalculateTax.UniqueIdOfRelatedObject	= UniqueID
				CalculateTax.RelatedObjectReference		= reference to this instance
				CalculateTax.InFinanceEnterpriseGroup   = TaxConfiguration 
				CalculateTax.HostSystem					= HostSystem			
				CalculateTax.CallingSystem				= CallingSystem		
				CalculateTax.ExternalCompany			= ExternalCompanyId		
				CalculateTax.ExternalCompanyName		= ExternalCompanyIdName
				CalculateTax.FilterGroupName			= FilterGroupName	 
				CalculateTax.FilterGroupOwner			= FilterGroupOwner	 
				CalculateTax.ProductMappingGroupName	= ProductMappingGroupName	 
				CalculateTax.ProductMappingGroupOwner	= ProductMappingGroupOwner	 
 				
				LocalTrigger							= CalculateTax.ValidateOneSourceGeneric

				IsSuccess								= CalculateTax.IsSuccess	
	
				constraint (CalculateTax.LocalErrorNumber not entered)   
		      		"Error:<CalculateTax.OutputErrorMessage>" 
				constraint (IsSuccess)   
					"ValidateConnectionFailed;IsSuccess<IsSuccess>;WebSeriviceError:<CalculateTax.WebServiceErrorMessage>" 		      															
				ReturnedTaxRate							= CalculateTax.OutputTaxRate
				invoke Update SabrixVersion								  
					invoked.ReleaseNotes = 1SourceGenericValidationMsg													


		SaveOneSourceParametersToVersion  is an Instance Action	 

			valid when (ThirdParty.Sabrix)		
			Parameters
			Local Fields
				LocalNameSpace 					is Alpha 100
			Parameter Rules	
			Action Rules
				invoke Update SabrixVersionValidationRel
					invoked.CallingSystem				= CallingSystem			
					invoked.FilterGroupName				= FilterGroupName			
					invoked.FilterGroupOwner			= FilterGroupOwner		
					invoked.HostSystem					= HostSystem				
					invoked.ExternalCompanyId			= ExternalCompanyId		
					invoked.ExternalCompanyIdName		= ExternalCompanyIdName	
					invoked.ProductMappingGroupName		= ProductMappingGroupName	
					invoked.ProductMappingGroupOwner	= ProductMappingGroupOwner
					invoked.CompanyRole					= CompanyRole				
					invoked.UseAsLegalEntity			= UseAsLegalEntity		


		UpdateOneSourceParametersFromVersion  is an Instance Action	

			valid when (ThirdParty.Sabrix)				
			Parameters
			Local Fields
			Parameter Rules	
			Action Rules
				CallingSystem				= SabrixVersionValidationRel.CallingSystem			
				FilterGroupName				= SabrixVersionValidationRel.FilterGroupName			
				FilterGroupOwner			= SabrixVersionValidationRel.FilterGroupOwner		
				HostSystem					= SabrixVersionValidationRel.HostSystem				
				ExternalCompanyId			= SabrixVersionValidationRel.ExternalCompanyId		
				ExternalCompanyIdName		= SabrixVersionValidationRel.ExternalCompanyIdName	
				ProductMappingGroupName		= SabrixVersionValidationRel.ProductMappingGroupName	
				ProductMappingGroupOwner	= SabrixVersionValidationRel.ProductMappingGroupOwner
				CompanyRole					= SabrixVersionValidationRel.CompanyRole				
				UseAsLegalEntity			= SabrixVersionValidationRel.UseAsLegalEntity		


