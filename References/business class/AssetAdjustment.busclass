AssetAdjustment is a BusinessClass
    owned by am
    prefix is ASA
    classic name is AMASSETADJ

    Ontology
        symbolic key is AssetAdjustment
            classic set name is ASASET1
            classic name is PROCESS-SEQ

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        AdjustmentStatus              is AlphaUpper size 1
            classic name is ADJUST-STATUS
            States
                NotReleased value is "N"
                Released    value is "R"
        AdjustmentDate                is Date
            classic name is ADJUST-DATE
        PostingDate					  is Date
        Description
        TagNumber
            classic name is TAG-NBR
        AssetGroup
        	delete ignored
        AssetObjectID
            classic name is OBJ-ID
        AssetCategory
        Simulated                     is Boolean
        WorkInProcess                 is Boolean
            classic name is WORK-IN-PROC
        TaxExempt                     is Boolean
        Used                          is Boolean
        TotalItemQuantity
            classic name is ITEM-TOT-QTY
        ItemTotalBaseCost             is an InternationalAmount
            classic name is IT-TOT-CSTBASE
        ItemTotalBaseTax              is an InternationalAmount
            classic name is IT-TOT-TAXBASE
        ItemTotalTransactionCost      is an InternationalAmount
            classic name is IT-TOT-CSTTRAN
        ItemTotalTransactionTax       is an InternationalAmount
            classic name is IT-TOT-TAXTRAN
        BaseNumberOfDecimals
            classic name is BASE-ND
        TransactionNumberOfDecimals   is a CurrencyNumberOfDecimals
            classic name is TRAN-ND
        ToTransactionNumberOfDecimals is a CurrencyNumberOfDecimals
            classic name is TO-TRAN-ND
        Currency
            classic name is CURRENCY-CODE
        LastAssetItemPurchaseDate     is Date
            classic name is ITEM-LAST-DATE
        AssetAdjustmentTo
            classic name for AssetAdjustmentTo.TagNumber is TO-TAG-NBR
            classic name for AssetAdjustmentTo.AssetCategory is TO-AST-CATEG
            classic name for AssetAdjustmentTo.AssetType.Type is TO-ASSET-TYPE
            classic name for AssetAdjustmentTo.AssetType.SubType is TO-SUB-TYPE
            classic name for AssetAdjustmentTo.AssetAccountGroup is TO-ACCT-GRP
            classic name for AssetAdjustmentTo.AssetAccountingUnit.AccountingUnit is TO-ACCT-UNIT
           	classic name for AssetAdjustmentTo.AssetProject.Project is ACTIVITY
            classic name for AssetAdjustmentTo.AssetAccountingUnitGroup is TO-AU-GROUP
            classic name for AssetAdjustmentTo.WorkInProcess is TO-WORK-IN-PRC
            classic name for AssetAdjustmentTo.TotalItemQuantity is TO-IT-TOT-QTY
            classic name for AssetAdjustmentTo.ItemTotalBaseCost is TO-IT-TOTCSTBS
            classic name for AssetAdjustmentTo.ItemTotalBaseTax is TO-IT-TOTTAXBS
            classic name for AssetAdjustmentTo.ItemTotalTransactionCost is TO-IT-TOTCSTTR
            classic name for AssetAdjustmentTo.ItemTotalTransactionTax is TO-IT-TOTTAXTR
            classic name for AssetAdjustmentTo.Currency is TO-CURR-CODE
            classic name for AssetAdjustmentTo.LastAssetItemPurchaseDate is TO-IT-LAST-DT
        AssetLocation
        	delete ignored
            classic name is LOCATION-NAME
        AssetDivision
        	delete ignored
            classic name is DIVISION
        AssetAccountGroup							is like AssetAccountGroup
            classic name is ACCT-GRP
        AssetType
        	delete ignored
            classic name for AssetType.Type 		is ASSET-TYPE
            classic name for AssetType.SubType		is SUB-TYPE
		AssetSummaryGroup
			delete ignored
        Company                            			is an AssetCompany
        	disable surrogates
    	AssetAccountingUnit							is a FinanceCodeBlockNoAccount 
    		default label is "DefaultTransactionDimensions"
        AssetProject								is a FinanceCodeBlockProjectOnly
        	default label is "AssetProject"
        DepreciationExpenseProject					is a FinanceCodeBlockProjectOnly
			default label is "DepreciationExpenseProject"
        AssetAccountingUnitGroup
        	delete ignored
            classic name is AU-GROUP
        	default label is "AssetDimensionGroup" 
        ToDepreciationExpenseProject  				is a FinanceCodeBlock
            classic name for ToDepreciationExpenseProject.Project is TO-DEP-EXP-ATY
        OriginatingCompany            				is Numeric size 4
            classic name is ORIG-CO
        CreationDate                  				is TimeStamp
        CreatedBy                     				is an Operator 
        	holds pii
            classic name is CREATOR-ID
        AssetLease
        Classification
        ToClassification              				is a Classification
            classic name is CLASS-TO
        IncludeInPhysicalInventory    				is Boolean
            classic name is INV-FLAG
        ToIncludeInPhysicalInventory  				is Boolean
            classic name is TO-INV-FLAG
        AssetOwner									is a Employee
        ToAssetOwner                  				is a Employee
		FundOverride								is Boolean
		AssetGuidelineClass							is like AssetGuidelineClass
		ToAssetGuidelineClass						is an AssetGuidelineClass
			delete ignored
		Reference1									is a Reference
		ToReference1								is a Reference
		Reference2									is a Reference
		ToReference2								is a Reference
		GeographicalLatitude              		    is a GISCoordinate
       	ToGeographicalLatitude                      is a GISCoordinate
       	GeographicalLongitude                       is a GISCoordinate
       	ToGeographicalLongitude                     is a GISCoordinate
       	GeographicalAltitude                        is a GISCoordinate
       	ToGeographicalAltitude                      is a GISCoordinate
		FundsAllocationUpdated						is Boolean

	Local Fields
		
		LocalToAccountingUnit							is a FinanceCodeBlock
		LocalToAssetAccount								is a FinanceCodeBlock
		LocalToAccumulatedDepreciationAccountingUnit	is a FinanceCodeBlock
		LocalToAccumulatedDepreciationAccount			is a FinanceCodeBlock
		LocalFromAccountingUnit							is a FinanceCodeBlock
		LocalFromAssetAccount							is a FinanceCodeBlock
		LocalFromAccumulatedDepreciationAccountingUnit	is a FinanceCodeBlock
		LocalFromAccumulatedDepreciationAccount			is a FinanceCodeBlock
		FromBookBasis                        			is an InternationalAmount
        FromLifeToDateDepreciation						is an InternationalAmount
        ToBasis                              			is an InternationalAmount
        ToLifeToDateDepreciation						is an InternationalAmount
        LocalFromPostBook								is a Book
		LocalToPostBook									is a Book
		LocalTransactionDate							is Date
		LocalFromImpairmentAssetAccount					is a FinanceCodeBlock
		LocalFromImpairmentAccumulatedDepreciationAccount is a FinanceCodeBlock
		LocalToImpairmentAssetAccount					is a FinanceCodeBlock
		LocalToImpairmentAccumulatedDepreciationAccount is a FinanceCodeBlock
		BypassActiveCodeBlockEdit
		
    Conditions

		IsDescriptionAdjusted
			when ((!(Description not entered and AssetAdjustmentTo.Description not entered))
			and (Description != AssetAdjustmentTo.Description))
		IsTagAdjusted
			when ((!(TagNumber not entered and AssetAdjustmentTo.TagNumber not entered))
			and (TagNumber != AssetAdjustmentTo.TagNumber))
		IsCurrencyAdjusted
			when ((!(Currency not entered and AssetAdjustmentTo.Currency not entered))
			and (Currency != AssetAdjustmentTo.Currency))
		IsAssetCategoryAdjusted
			when ((!(AssetCategory not entered and AssetAdjustmentTo.AssetCategory not entered))
			and (AssetCategory != AssetAdjustmentTo.AssetCategory))
		IsPhysicalInventoryAdjusted
			when ((!(IncludeInPhysicalInventory not entered and ToIncludeInPhysicalInventory not entered))
			and (IncludeInPhysicalInventory != ToIncludeInPhysicalInventory))
		IsSimulatedAdjusted
			when ((!(Simulated not entered and AssetAdjustmentTo.Simulated not entered))
			and (Simulated != AssetAdjustmentTo.Simulated))
		IsWorkInProcessAdjusted
			when ((!(WorkInProcess not entered and AssetAdjustmentTo.WorkInProcess not entered))
			and (WorkInProcess != AssetAdjustmentTo.WorkInProcess))
		IsTaxExemptAdjusted
			when ((!(TaxExempt not entered and AssetAdjustmentTo.TaxExempt not entered))
			and (TaxExempt != AssetAdjustmentTo.TaxExempt))
		IsUsedAdjusted
			when ((!(Used not entered and AssetAdjustmentTo.Used not entered))
			and (Used != AssetAdjustmentTo.Used))
		IsAssetGroupAdjusted
			when ((!(AssetGroup not entered and AssetAdjustmentTo.AssetGroup not entered))
			and (AssetGroup != AssetAdjustmentTo.AssetGroup))
		IsAssetLocationAdjusted
			when ((!(AssetLocation not entered and AssetAdjustmentTo.Location not entered))
			and (AssetLocation != AssetAdjustmentTo.Location))
		IsAssetDivisionAdjusted
			when ((!(AssetDivision not entered and AssetAdjustmentTo.Division not entered))
			and (AssetDivision != AssetAdjustmentTo.Division))
		IsAssetTypeAdjusted
			when ((!(AssetType not entered and AssetAdjustmentTo.AssetType not entered))
			and (AssetType != AssetAdjustmentTo.AssetType))
		IsAssetAccountGroupAdjusted
			when ((!(AssetAccountGroup not entered and AssetAdjustmentTo.AssetAccountGroup not entered))
			and (AssetAccountGroup != AssetAdjustmentTo.AssetAccountGroup))
		IsAssetAccountingUnitGroupAdjusted
			when ((!(AssetAccountingUnitGroup not entered and AssetAdjustmentTo.AssetAccountingUnitGroup not entered))
			and (AssetAccountingUnitGroup != AssetAdjustmentTo.AssetAccountingUnitGroup))
		IsAssetAccountingUnitAdjusted
			when ((!(AssetAccountingUnit not entered and AssetAdjustmentTo.AssetAccountingUnit not entered))
			and (AssetAccountingUnit != AssetAdjustmentTo.AssetAccountingUnit))
		IsDepreciationExpenseProjectAdjusted
			when ((!(DepreciationExpenseProject not entered and ToDepreciationExpenseProject.Project not entered))
			and (DepreciationExpenseProject != ToDepreciationExpenseProject.Project))
		IsAssetOwnerAdjusted
			when ((!(AssetOwner not entered and ToAssetOwner not entered))
			and (AssetOwner != ToAssetOwner))
		IsFirstAndLastNameAdjusted
			when ((!(AssetOwner.Name.FirstAndLastName not entered and ToAssetOwner.Name.FirstAndLastName not entered))
			and (AssetOwner.Name.FirstAndLastName != ToAssetOwner.Name.FirstAndLastName))
		IsFundOverrideAdjusted
			when ((!(FundOverride not entered and AssetAdjustmentTo.FundOverride not entered))
			and (FundOverride != AssetAdjustmentTo.FundOverride))
		IsAssetSummaryGroupAdjusted
			when ((!(AssetSummaryGroup not entered and AssetAdjustmentTo.AssetSummaryGroup not entered))
			and (AssetSummaryGroup != AssetAdjustmentTo.AssetSummaryGroup))
		IsAssetGuidelineClassAdjusted
			when (AssetGuidelineClassExists
			and (!(AssetGuidelineClass not entered and ToAssetGuidelineClass not entered))
			and (AssetGuidelineClass != ToAssetGuidelineClass))
		IsReference1Adjusted
			when ((!(Reference1 not entered and ToReference1 not entered))
			and  (Reference1 != ToReference1))
		IsReference2Adjusted
			when ((!(Reference2 not entered and ToReference2 not entered))
			and  (Reference2 != ToReference2))
		IsGeographicalLatitudeAdjusted
			when ((!(GeographicalLatitude not entered and ToGeographicalLatitude not entered))
			and  (GeographicalLatitude != ToGeographicalLatitude))
		IsGeographicalLongitudeAdjusted
			when ((!(GeographicalLongitude not entered and ToGeographicalLongitude not entered))
			and  (GeographicalLongitude != ToGeographicalLongitude))
		IsGeographicalAltitudeAdjusted
			when ((!(GeographicalAltitude not entered and ToGeographicalAltitude not entered))
			and  (GeographicalAltitude != ToGeographicalAltitude))

		IsMainAdjusted
			when (IsTagAdjusted
			or IsCurrencyAdjusted
			or IsAssetCategoryAdjusted
			or IsPhysicalInventoryAdjusted
			or IsSimulatedAdjusted
			or IsWorkInProcessAdjusted
			or IsTaxExemptAdjusted
			or IsUsedAdjusted
			or IsAssetGroupAdjusted
			or IsAssetLocationAdjusted
			or IsAssetDivisionAdjusted
			or IsAssetTypeAdjusted
			or IsAssetAccountGroupAdjusted
			or IsAssetAccountingUnitGroupAdjusted
			or IsAssetAccountingUnitAdjusted
			or IsDepreciationExpenseProjectAdjusted
			or IsAssetOwnerAdjusted
			or IsFirstAndLastNameAdjusted
			or IsFundOverrideAdjusted
			or IsAssetSummaryGroupAdjusted
			or IsAssetGuidelineClassAdjusted
			or IsReference1Adjusted
			or IsReference2Adjusted
			or IsGeographicalLatitudeAdjusted
			or IsGeographicalLongitudeAdjusted
			or IsGeographicalAltitudeAdjusted)

		IsNotBookTransactionAdjustment
            restricted
            when (IsTagAdjusted
			or IsCurrencyAdjusted
			or IsAssetCategoryAdjusted
			or IsPhysicalInventoryAdjusted
			or IsSimulatedAdjusted
			or IsWorkInProcessAdjusted
			or IsTaxExemptAdjusted
			or IsUsedAdjusted
			or IsAssetGroupAdjusted
			or IsAssetLocationAdjusted
			or IsAssetDivisionAdjusted
			or IsDepreciationExpenseProjectAdjusted
			or IsAssetOwnerAdjusted
			or IsFirstAndLastNameAdjusted
			or IsFundOverrideAdjusted			
			or IsAssetSummaryGroupAdjusted
			or IsAssetGuidelineClassAdjusted)		
			
        IsAdjusted
        	restricted
            classic name is ADJUST
            when (Asset entered
            and   AdjustmentStatus.Released)

        AdjustmentStatusNotReleased
        	restricted
            classic name is ASASET7
            when (AdjustmentStatus.NotReleased)

        AdjustmentStatusNotReleased2
        	restricted
            classic name is ASASET8
            when (AdjustmentStatus.NotReleased)

        DivisionEntered
        	restricted
            classic name is DIVISION-EXIST
            when (AssetDivision exists)

        LocationNameEntered
        	restricted
            classic name is LOCATION-EXIST
            when (AssetLocation exists)

        IsReleased
        	restricted
            when (AdjustmentStatus.Released)

        AssetTypeExists
        	restricted
            classic name is TYPE-EXIST
            when (AssetType exists)
            
		AssetItemAdjustmentExists
			restricted
			when (AssetItemAdjustment set exists)
			
		AssetItemsAdjustmentExists
			restricted
			when (AssetItemsAdjustmentRel exists)
			
		AssetBookAdjustmentExists
			restricted
			when (AssetBookAdjustment set exists)
            
		NewAssetItemsAdded
			restricted
			when (AssetItemAdjustmentRel exists)

		DisplayAdjustmentTransactions
			restricted
			when (AdjustmentTransactionsRel exists)
			
		DisplayAdjustmentBookTransactions
            restricted
            when (AdjustmentBookTransactionRel exists
            and !IsNotBookTransactionAdjustment)
			
		RecordIsSelected 
            restricted
            when (AdjustmentDateRange not entered
            or    AdjustmentDate within AdjustmentDateRange)
            
		IsTagEntered
			when (TagNumber entered)
			
		AssetGuidelineClassExists
			when (AssetGuidelineClassesRel exists)	

		AssetFundsExists
			restricted
			when (Asset.FundOverride
			and   FundsAllocationUpdated)
					
    Sets

        Set2
            indexed
            Instance Selection
                where (IsReleased)
            Sort Order
                Company
                Asset
                AssetAdjustment

        Set3
            indexed
            Instance Selection
                where (IsReleased)
            Sort Order
                AssetLocation
                Asset
                AssetAdjustment










        Set5
            indexed
            Instance Selection
                where (IsReleased)
            Sort Order
                Company
                AssetType
                Asset
                AssetAdjustment

        Set7
            indexed
            Instance Selection
                where (AdjustmentStatusNotReleased)
            Sort Order
                Asset

        Set8
            indexed
            Instance Selection
                where (AdjustmentStatusNotReleased2)
            Sort Order
                Company
                Asset
                AssetAdjustment

	Relations
		AssetBookRel
            classic name is AMASTBOOK
            one-to-one relation to AssetBook
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= Asset.FinanceEnterpriseGroup
                related.Asset					= Asset
                related.Book  					= LocalFromPostBook
 
		LocalToAssetBookRel
            classic name is AMASTBOOK
            one-to-one relation to AssetBook
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= Asset.FinanceEnterpriseGroup
                related.Asset					= Asset
                related.Book  					= LocalToPostBook
                       
       	AllAssetBooksRel
            one-to-many relation to AssetBook
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= Asset.FinanceEnterpriseGroup
                related.Asset					= Asset
                      
		CurrentBookCalendarsRel4
			one-to-many relation to BookCalendar
			Field Mapping uses Set4
				related.Company	= Company
				
		CurrentBookCalendarsRel4To
			one-to-many relation to BookCalendar
			Field Mapping uses Set4
				related.Company	= AssetAdjustmentTo.Company
		
		AssetControlTransactionRel
			one-to-one relation to AssetControlTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Asset.FinanceEnterpriseGroup			
				related.Asset					= Asset
		
		AssetItemAdjustmentRel is an AssetItemAdjustment set
			Instance Selection
				where (related.TransactionItemCost not entered)

		AllAssetItemAdjustmentsRel is an AssetItemAdjustment set
		
		ItemCostAdjustments is an AssetItemAdjustment set
			Instance Selection
				where (related.IsCostAdjusted)
		
		
		
		FromCompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode 
				related.GeneralLedgerSystemCode			= "AM"
				related.Company							= Company

		ToCompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode 
				related.GeneralLedgerSystemCode			= "AM"
				related.Company							= AssetAdjustmentTo.Company
				
		PurgeAssetItemAdjustmentRel is an AssetItemAdjustment set
			Instance Selection
				include deleted records
				
		PurgeAssetBookAdjustmentRel is an AssetBookAdjustment set
			Instance Selection
				include deleted records
			
		AssetItemsAdjustmentRel
			one-to-many relation to AssetItemAdjustment
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= Asset
			Instance Selection
				where (related.AssetAdjustment = AssetAdjustment)
				
		AssetBookAdjustmentRel
			one-to-many relation to AssetBookAdjustment
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= Asset
			Instance Selection
				where (related.AssetAdjustment = AssetAdjustment)

		AdjustmentTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses Set1
				related.Asset							= Asset
			Instance Selection
				where (related.ProcessSequence	= AssetAdjustment
				and related.AssetProcess.Adjustment)
		
		UnreleasedAssetTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
			Instance Selection
				where (related.TransactionStatus.Unreleased)

		UnreleasedAssetTransactionRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
			Instance Selection
				where (related.TransactionStatus.Unreleased)
		
		UnreleasedAssetBookTransactionRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
			Instance Selection
				where (related.TransactionStatus.Unreleased)
				
		AdjustmentBookTransactionRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= Asset
			Instance Selection
				where (related.AssetProcess.Adjustment
				and related.ProcessSequence	= AssetAdjustment)
				
		AdjustmentBookTransactionsRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.Asset							= Asset
			Instance Selection
				where (related.ProcessSequence	= AssetAdjustment
				and related.AssetProcess.Adjustment)
	
		UniqueAssetsTagRel
			one-to-many relation to Asset
			Field Mapping uses ByCompanyTagAsset
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Company 				= Company
				related.TagNumber				= AssetAdjustmentTo.TagNumber
			Instance Selection
				where (related.Asset			!= Asset)

		AssetGuidelineClassesRel
			one-to-many relation to AssetGuidelineClass
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup		
		
		AssetFundsRel
			one-to-many relation to AssetFund
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset
		
	Context Fields
		AdjustmentDateRange						is a DateRange
								
	Derived Fields
		NumberOfItemsAdded	is a DerivedField
			type is Numeric size 3
			return instance count of AssetItemAdjustmentRel
			
		DerivedCreateDate 					is a DerivedField
            type is Date
            restricted
            return AdjustmentDate	
            
		ContextCompanyAsset                    is a MessageField
            "Company<Asset.Company>_Asset<Asset>"
            
      	AdjustmentMessage                    is a MessageField
            "Adjustment"
		
		ContextUser                            is a MessageField
            "AdjustedBy<CreatedBy>"  
            

		         
	Field Rules
		AdjustmentStatus
			default to "N"

		CreationDate
			default to current timestamp

		CreatedBy
			default to actor
	
	Rule Blocks
		AccountDefaulting
			initialize LocalToAccountingUnit
			initialize LocalToAssetAccount
			initialize LocalToAccumulatedDepreciationAccountingUnit
			initialize LocalToAccumulatedDepreciationAccount
			initialize LocalFromAccountingUnit
			initialize LocalFromAssetAccount
			initialize LocalFromAccumulatedDepreciationAccountingUnit
			initialize LocalFromAccumulatedDepreciationAccount
	

			if (AssetAdjustmentTo.AssetAccountingUnitGroup entered)
				if (AssetAdjustmentTo.AssetAccountingUnitGroup.AssetAccountingUnit entered)
					LocalToAccountingUnit = AssetAdjustmentTo.AssetAccountingUnitGroup.AssetAccountingUnit
				else
				if (AssetAdjustmentTo.AssetAccountingUnit entered)
					LocalToAccountingUnit = AssetAdjustmentTo.AssetAccountingUnit
				if (AssetAdjustmentTo.AssetAccountingUnitGroup.AccumulatedDepreciationAccountingUnit entered)
					LocalToAccumulatedDepreciationAccountingUnit = AssetAdjustmentTo.AssetAccountingUnitGroup.AccumulatedDepreciationAccountingUnit
				else
				if (AssetAdjustmentTo.AssetAccountingUnit entered)
					LocalToAccumulatedDepreciationAccountingUnit = AssetAdjustmentTo.AssetAccountingUnit
			else
			if (AssetAdjustmentTo.AssetAccountingUnit entered)
				LocalToAccountingUnit = AssetAdjustmentTo.AssetAccountingUnit
				LocalToAccumulatedDepreciationAccountingUnit = AssetAdjustmentTo.AssetAccountingUnit
			

			if (Asset.Company.UseEventAccounts)		
				if (Asset.AssetProcess.Adjustment)
					if (LocalToAssetAccount not entered)
						LocalToAssetAccount	= AssetAdjustmentTo.AssetType.AssetAccountASTAdjustmentRel.DistributionAccount
						
					if (LocalToAssetAccount not entered)
						LocalToAssetAccount.GeneralLedgerChartAccount	= AssetAdjustmentTo.AssetType.ResolveASTDistributionAccount
					
					if (LocalToAccumulatedDepreciationAccount not entered)
						LocalToAccumulatedDepreciationAccount = AssetAdjustmentTo.AssetType.AssetAccountACMAdjustmentRel.DistributionAccount
		
					if (LocalToAccumulatedDepreciationAccount not entered)
						LocalToAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetAdjustmentTo.AssetType.ResolveACMDistributionAccount
			else
				if (LocalToAssetAccount not entered)
					LocalToAssetAccount.GeneralLedgerChartAccount	= AssetAdjustmentTo.AssetType.ResolveASTDistributionAccount
				
				if (LocalToAccumulatedDepreciationAccount not entered)
					LocalToAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetAdjustmentTo.AssetType.ResolveACMDistributionAccount	
			

			if (AssetAccountingUnitGroup entered)
				if (AssetAccountingUnitGroup.AssetAccountingUnit entered)
					LocalFromAccountingUnit	= AssetAccountingUnitGroup.AssetAccountingUnit
				else
				if (AssetAccountingUnit entered)
					LocalFromAccountingUnit	= AssetAccountingUnit
				if (AssetAccountingUnitGroup.AccumulatedDepreciationAccountingUnit entered)
					LocalFromAccumulatedDepreciationAccountingUnit = AssetAccountingUnitGroup.AccumulatedDepreciationAccountingUnit
				else
				if (AssetAccountingUnit entered)
					LocalFromAccumulatedDepreciationAccountingUnit = AssetAccountingUnit
			else
			if (AssetAccountingUnit entered)
				LocalFromAccountingUnit	= AssetAccountingUnit
				LocalFromAccumulatedDepreciationAccountingUnit = AssetAccountingUnit
				

			if (Asset.Company.UseEventAccounts)
				if (Asset.AssetProcess.Adjustment)		
					if (LocalFromAssetAccount not entered)
						LocalFromAssetAccount = AssetType.AssetAccountASTAdjustmentRel.DistributionAccount

					if (LocalFromAssetAccount not entered)
						LocalFromAssetAccount.GeneralLedgerChartAccount	= AssetType.ResolveASTDistributionAccount
					
					if (LocalFromAccumulatedDepreciationAccount not entered)
						LocalFromAccumulatedDepreciationAccount	= AssetType.AssetAccountACMAdjustmentRel.DistributionAccount
		
					if (LocalFromAccumulatedDepreciationAccount not entered)
						LocalFromAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetType.ResolveACMDistributionAccount
			else
				if (LocalFromAssetAccount not entered)
					LocalFromAssetAccount.GeneralLedgerChartAccount	= AssetType.ResolveASTDistributionAccount
									
				if (LocalFromAccumulatedDepreciationAccount not entered)
					LocalFromAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetType.ResolveACMDistributionAccount
			
			if (Asset.AssetType.Impairment)
				if (AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.ImpairmentLoss entered)	
					LocalFromImpairmentAssetAccount	= AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.ImpairmentLoss
				else
					if (AssetAccountingUnit entered)
						LocalFromImpairmentAssetAccount = AssetAccountingUnit
				if (AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.AccumulatedImpairmentLoss entered)	
					LocalFromImpairmentAccumulatedDepreciationAccount = AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.AccumulatedImpairmentLoss
				else
					if (AssetAccountingUnit entered)
						LocalFromImpairmentAccumulatedDepreciationAccount = AssetAccountingUnit
				
				if(AssetType.AssetAccountAADImpairmentRel.DistributionAccount entered)
					LocalFromImpairmentAssetAccount.GeneralLedgerChartAccount	= AssetType.AssetAccountAADImpairmentRel.DistributionAccount
				if(AssetType.AssetAccountATCImpairmentRel.DistributionAccount entered)
					LocalFromImpairmentAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetType.AssetAccountAACImpairmentRel.DistributionAccount
				
				if (AssetAdjustmentTo.AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.ImpairmentLoss entered)	
					LocalToImpairmentAssetAccount	= AssetAdjustmentTo.AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.ImpairmentLoss
				else
					if (AssetAdjustmentTo.AssetAccountingUnit entered)
						LocalToImpairmentAssetAccount = AssetAdjustmentTo.AssetAccountingUnit
				if (AssetAdjustmentTo.AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.AccumulatedImpairmentLoss entered)	
					LocalToImpairmentAccumulatedDepreciationAccount = AssetAdjustmentTo.AssetAccountingUnitGroup.AssetImpairmentAccountingUnitGroup.AccumulatedImpairmentLoss
				else
					if (AssetAdjustmentTo.AssetAccountingUnit entered)
						LocalToImpairmentAccumulatedDepreciationAccount = AssetAdjustmentTo.AssetAccountingUnit
				
				if(AssetAdjustmentTo.AssetType.AssetAccountATDImpairmentRel.DistributionAccount entered)
					LocalToImpairmentAssetAccount.GeneralLedgerChartAccount	= AssetAdjustmentTo.AssetType.AssetAccountAADImpairmentRel.DistributionAccount
				if(AssetAdjustmentTo.AssetType.AssetAccountATCImpairmentRel.DistributionAccount entered)
					LocalToImpairmentAccumulatedDepreciationAccount.GeneralLedgerChartAccount = AssetAdjustmentTo.AssetType.AssetAccountAACImpairmentRel.DistributionAccount
			
		CreateTransactions
			for each AllAssetBooksRel
				if (!each.Disposed)
					LocalFromPostBook 			= each.Book
					FromBookBasis 				= each.Basis			
					FromLifeToDateDepreciation 	= each.LifeToDateDepreciation

					if (each.IsPostingBook)







									

						if ((LocalToAssetAccount != LocalFromAssetAccount
						or	 LocalToAccountingUnit != LocalFromAccountingUnit)
						and  FromBookBasis != 0)
							if (FromCompanySystemClosingControlRel exists
							and FromCompanySystemClosingControlRel.Control)
								constraint (PostingDate within FromCompanySystemClosingControlRel.ValidEntryDate)
									"PostingDateIsOutsideSystemControlValidEntryDateRange"			
							if (Company not = AssetAdjustmentTo.Company) 
								if (ToCompanySystemClosingControlRel exists
								and ToCompanySystemClosingControlRel.Control)
									constraint (PostingDate within ToCompanySystemClosingControlRel.ValidEntryDate)
										"PostingDateIsOutsideToCompanySystemControlValidEntryDateRange"			
							invoke Create AssetTransaction
								invoked.OnlineSystemCreate								= true
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= Asset.Company
								invoked.Asset											= Asset
								invoked.ProcessAsset									= Asset
								invoked.Book											= LocalFromPostBook
								if (LocalFromPostBook.PostCurrency.Asset
								and Asset.Currency != LocalFromPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalFromPostBook.Impairment)
									invoked.AssetImpairment								= AssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.Description										= "Asset " + Asset + " " + Asset.AssetProcess
								invoked.TransactionStatus								= "U"
								invoked.AssetAccountGroup								= AssetAccountGroup
								invoked.AssetType										= AssetType
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalFromPostBook.Impairment)
									invoked.AssetAccountType								= "IML"
									invoked.DistributionAccount								= LocalFromImpairmentAssetAccount
								else
									invoked.AssetAccountType								= "AST"
									invoked.DistributionAccount								= LocalFromAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalFromAssetAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= FromBookBasis * -1
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalFromPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalFromPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalFromPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= FromBookBasis * -1
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

						if ((LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
						or	 LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
						and  FromLifeToDateDepreciation != 0)
							invoke Create AssetTransaction
								invoked.OnlineSystemCreate								= true
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= Asset.Company
								invoked.Asset											= Asset
								invoked.ProcessAsset									= Asset
								invoked.Book											= LocalFromPostBook
								if (LocalFromPostBook.PostCurrency.Asset
								and Asset.Currency != LocalFromPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalFromPostBook.Impairment)
									invoked.AssetImpairment								= AssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.Description										= "Asset " + Asset + " " + Asset.AssetProcess
								invoked.TransactionStatus								= "U"
								invoked.AssetAccountGroup								= AssetAccountGroup
								invoked.AssetType										= AssetType
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalFromPostBook.Impairment)
									invoked.AssetAccountType								= "IMT"
									invoked.DistributionAccount								= LocalFromImpairmentAccumulatedDepreciationAccount
								else
									invoked.AssetAccountType								= "ACM"
									invoked.DistributionAccount								= LocalFromAccumulatedDepreciationAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalFromAccumulatedDepreciationAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= FromLifeToDateDepreciation
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalFromPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalFromPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalFromPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= FromLifeToDateDepreciation
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency


					else
						if ((LocalToAssetAccount != LocalFromAssetAccount
						or	 LocalToAccountingUnit != LocalFromAccountingUnit)
						and  FromBookBasis != 0)				
							invoke Create AssetBookTransaction

								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= Asset.Company
								invoked.Asset											= Asset
								invoked.Book											= LocalFromPostBook
								if (LocalFromPostBook.PostCurrency.Asset
								and Asset.Currency != LocalFromPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalFromPostBook.Impairment)
									invoked.AssetImpairment								= AssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.TransactionStatus								= "U"
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalFromPostBook.Impairment)
									invoked.AssetAccountType								= "IML"
									invoked.DistributionAccount								= LocalFromImpairmentAssetAccount
								else
									invoked.AssetAccountType								= "AST"
									invoked.DistributionAccount								= LocalFromAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalFromAssetAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= FromBookBasis * -1
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalFromPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalFromPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalFromPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= FromBookBasis * -1
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

												
						if ((LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
						or	 LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
						and  FromLifeToDateDepreciation != 0)	
							invoke Create AssetBookTransaction

								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= Asset.Company
								invoked.Asset											= Asset
								invoked.Book											= LocalFromPostBook
								if (LocalFromPostBook.PostCurrency.Asset
								and Asset.Currency != LocalFromPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalFromPostBook.Impairment)
									invoked.AssetImpairment								= AssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.TransactionStatus								= "U"
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalFromPostBook.Impairment)
									invoked.AssetAccountType								= "IMT"
									invoked.DistributionAccount								= LocalFromImpairmentAccumulatedDepreciationAccount
								else
									invoked.AssetAccountType								= "ACM"
									invoked.DistributionAccount								= LocalFromAccumulatedDepreciationAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalFromAccumulatedDepreciationAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= FromLifeToDateDepreciation
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalFromPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalFromPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalFromPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= FromLifeToDateDepreciation
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency
							
			for each CurrentBookCalendarsRel4To
				LocalToPostBook				= each.Book
				if (LocalToAssetBookRel exists
				and !LocalToAssetBookRel.Disposed)
					ToBasis 					= LocalToAssetBookRel.Basis
					ToLifeToDateDepreciation 	= LocalToAssetBookRel.LifeToDateDepreciation
					if (each.IsPostingBook)			







	
						if ((LocalToAssetAccount != LocalFromAssetAccount
						or	 LocalToAccountingUnit != LocalFromAccountingUnit)
						and  ToBasis != 0)	
							invoke Create AssetTransaction
								invoked.OnlineSystemCreate								= true
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= AssetAdjustmentTo.Company
								invoked.Asset											= Asset
								invoked.ProcessAsset									= Asset
								invoked.Book											= LocalToPostBook
								if (LocalToPostBook.PostCurrency.Asset
								and Asset.Currency != LocalToPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalToPostBook.Impairment)
									invoked.AssetImpairment								= LocalToAssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.Description										= "Asset " + Asset + " " + Asset.AssetProcess
								invoked.TransactionStatus								= "U"
								invoked.AssetAccountGroup								= AssetAdjustmentTo.AssetAccountGroup
								invoked.AssetType										= AssetAdjustmentTo.AssetType
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalToPostBook.Impairment)
									invoked.AssetAccountType								= "IML"
									invoked.DistributionAccount								= LocalToImpairmentAssetAccount
								else
									invoked.AssetAccountType								= "AST"
									invoked.DistributionAccount								= LocalToAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalToAssetAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount      							= ToBasis	
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalToPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalToPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalToPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= ToBasis
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

						if ((LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
						or	 LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
						and  ToLifeToDateDepreciation != 0)	
							invoke Create AssetTransaction
								invoked.OnlineSystemCreate								= true
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= AssetAdjustmentTo.Company
								invoked.Asset											= Asset
								invoked.ProcessAsset									= Asset
								invoked.Book											= LocalToPostBook
								if (LocalToPostBook.PostCurrency.Asset
								and Asset.Currency != LocalToPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalToPostBook.Impairment)
									invoked.AssetImpairment								= LocalToAssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.Description										= "Asset " + Asset + " " + Asset.AssetProcess
								invoked.TransactionStatus								= "U"
								invoked.AssetAccountGroup								= AssetAdjustmentTo.AssetAccountGroup
								invoked.AssetType										= AssetAdjustmentTo.AssetType
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalToPostBook.Impairment)
									invoked.AssetAccountType								= "IMT"
									invoked.DistributionAccount								= LocalToImpairmentAccumulatedDepreciationAccount
								else
									invoked.AssetAccountType								= "ACM"
									invoked.DistributionAccount								= LocalToAccumulatedDepreciationAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalToAccumulatedDepreciationAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= ToLifeToDateDepreciation * -1
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalToPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalToPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalToPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= ToLifeToDateDepreciation * -1
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

					else
						if ((LocalToAssetAccount != LocalFromAssetAccount
						or	 LocalToAccountingUnit != LocalFromAccountingUnit)
						and  ToBasis != 0)	
							invoke Create AssetBookTransaction
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= AssetAdjustmentTo.Company
								invoked.Asset											= Asset
								invoked.Book											= LocalToPostBook
								if (LocalToPostBook.PostCurrency.Asset
								and Asset.Currency != LocalToPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalToPostBook.Impairment)
									invoked.AssetImpairment								= LocalToAssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.TransactionStatus								= "U"
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalToPostBook.Impairment)
									invoked.AssetAccountType								= "IML"
									invoked.DistributionAccount								= LocalToImpairmentAssetAccount
								else
									invoked.AssetAccountType								= "AST"
									invoked.DistributionAccount								= LocalToAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalToAssetAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount      							= ToBasis	
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalToPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalToPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalToPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= ToBasis
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate 
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

						if ((LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
						or	 LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
						and  ToLifeToDateDepreciation != 0)																
							invoke Create AssetBookTransaction
								invoked.FinanceEnterpriseGroup							= Asset.FinanceEnterpriseGroup
								invoked.Company											= AssetAdjustmentTo.Company
								invoked.Asset											= Asset
								invoked.Book											= LocalToPostBook
								if (LocalToPostBook.PostCurrency.Asset
								and Asset.Currency != LocalToPostBook.Currency)
									LocalTransactionDate 								= Asset.LastAssetItemPurchaseDate
								else
									LocalTransactionDate								= AdjustmentDate
								if (LocalToPostBook.Impairment)
									invoked.AssetImpairment								= LocalToAssetBookRel.DerivedAssetImpairment
								invoked.TransactionDate									= LocalTransactionDate
								if (PostingDate entered)
									invoked.PostingDate									= PostingDate
								else
									invoked.PostingDate									= AdjustmentDate
								invoked.Reference										= "ADJUSTMENT"
								invoked.TransactionStatus								= "U"
								invoked.AssetProcess									= "ADJ"
								invoked.TransactionNumberOfDecimals						= TransactionNumberOfDecimals
								if (LocalToPostBook.Impairment)
									invoked.AssetAccountType								= "IMT"
									invoked.DistributionAccount								= LocalToImpairmentAccumulatedDepreciationAccount
								else
									invoked.AssetAccountType								= "ACM"
									invoked.DistributionAccount								= LocalToAccumulatedDepreciationAccountingUnit
									invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalToAccumulatedDepreciationAccount.GeneralLedgerChartAccount
								invoked.TransactionAmount       						= ToLifeToDateDepreciation * -1
								invoked.ProcessSequence									= AssetAdjustment
								if (LocalToPostBook.PostCurrency.Book)
									invoked.TransientBookCurrency						= LocalToPostBook.Currency
									invoked.TransactionNumberOfDecimals 				= LocalToPostBook.Currency.NumberOfDecimals
								else
									invoked.TransientBookCurrency						= Asset.Currency 
									invoked.TransactionNumberOfDecimals					= Asset.Currency.NumberOfDecimals
								invoked.AssetTransactionAmount.TransactionAmount 		= ToLifeToDateDepreciation * -1
								invoked.AssetTransactionAmount.ExchangeDate 			= LocalTransactionDate
								invoked.AssetTransactionAmount.BaseAmount.ToCurrency 	= each.Book.Currency

			

																
	Actions
		Create is a Create Action
			restricted
			Entrance Rules
				BypassActiveCodeBlockEdit = true
				if (Company.RequireUniqueTags = true
				and AssetAdjustmentTo.TagNumber entered)				
					constraint (UniqueAssetsTagRel not exists)
						"TagNumber<AssetAdjustmentTo.TagNumber>IsInUse"
			Exit Rules
				if (Company						!= AssetAdjustmentTo.Company
				or  AssetType					!= AssetAdjustmentTo.AssetType
				or  AssetAccountingUnit			!= AssetAdjustmentTo.AssetAccountingUnit
				or  AssetAccountingUnitGroup	!= AssetAdjustmentTo.AssetAccountingUnitGroup)
					include AccountDefaulting
					if ((LocalToAssetAccount != LocalFromAssetAccount
					or   LocalToAccountingUnit != LocalFromAccountingUnit
					or   LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
					or   LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
					and  !Simulated)
						include CreateTransactions
						
		Update is an Update Action
			restricted
			Entrance Rules
				BypassActiveCodeBlockEdit = true
				if  (Company.RequireUniqueTags = true
				and (AssetAdjustmentTo.TagNumber changed
				and  AssetAdjustmentTo.TagNumber entered))
					constraint (UniqueAssetsTagRel not exists)
						"TagNumber<AssetAdjustmentTo.TagNumber>IsInUse"
				if (PostingDate entered
				and PostingDate changed)
					if(AssetBookAdjustmentRel exists)
						for each AssetBookAdjustmentRel
							invoke UpdatePostingDate each
								invoked.NewPostingDate = PostingDate 
					else			
						for each UnreleasedAssetTransactionRel
							invoke UpdateTransactionDate each
								invoked.PostingDate = PostingDate
						for each UnreleasedAssetBookTransactionRel
							invoke UpdateTransactionDate each
								invoked.PostingDate = PostingDate
									
		UpdateAssetSetupMain is an Update Action   	
			restricted								
			Exit Rules
				if (Company						!= AssetAdjustmentTo.Company
				or  AssetType					!= AssetAdjustmentTo.AssetType
				or  AssetAccountingUnit			!= AssetAdjustmentTo.AssetAccountingUnit
				or  AssetAccountingUnitGroup	!= AssetAdjustmentTo.AssetAccountingUnitGroup)
					include AccountDefaulting
					if ((LocalToAssetAccount != LocalFromAssetAccount
					or   LocalToAccountingUnit != LocalFromAccountingUnit
					or   LocalToAccumulatedDepreciationAccount != LocalFromAccumulatedDepreciationAccount
					or   LocalToAccumulatedDepreciationAccountingUnit != LocalFromAccumulatedDepreciationAccountingUnit)
					and  !Simulated)
						if(!Asset.AssetProcess.Adjustment)
							if (UnreleasedAssetTransactionsRel exists)
								invoke Delete UnreleasedAssetTransactionsRel
							if (UnreleasedAssetBookTransactionRel exists)
								invoke Delete UnreleasedAssetBookTransactionRel
						
						include CreateTransactions

		Delete is a Delete Action
			restricted
			Action Rules
				invoke Delete AssetItemAdjustment set
				invoke Delete AssetBookAdjustment set
				
		DeleteBookAdjustment is an Instance Action
			restricted
			Action Rules
				invoke Delete AssetBookAdjustment set						

		PurgeAssetAdjustments is a Set Action
			restricted
			
			Parameters
				PrmCompany				is an AssetCompany
				PrmFromDate				is Date
				PrmToDate				is Date
				PrmAssetGroup			is like AssetGroup
				PrmAssetType			is like AssetType
				PrmAssetSubType			is like AssetType
				PrmPurgeSimulated		is Boolean
			
			Instance Selection

				where (((Asset.Simulated and PrmPurgeSimulated) or (not Asset.Simulated and not PrmPurgeSimulated))
				and    Asset.Company = PrmCompany
				and    (PrmFromDate not entered or AdjustmentDate >= PrmFromDate) 
				and    (PrmToDate not entered or AdjustmentDate <= PrmToDate) 
				and    (PrmAssetGroup not entered or AssetGroup = PrmAssetGroup)
				and    (PrmAssetType not entered or AssetType.Type = PrmAssetType)
				and    (PrmAssetSubType not entered or AssetType.SubType = PrmAssetSubType)
				and    IsReleased)
				
			Action Rules
				Instance Rules
					invoke Purge
					
		PurgeDeletedAssetAdjustments is a Set Action
			restricted
			
			Parameters
				PrmCompany				is an AssetCompany
				PrmFromDate				is Date
				PrmToDate				is Date
				PrmAssetGroup			is like AssetGroup
				PrmAssetType			is like AssetType
				PrmAssetSubType			is like AssetType
				PrmPurgeSimulated		is Boolean
			
			Instance Selection
				include only deleted records
				where (((Asset.Simulated and PrmPurgeSimulated) or (not Asset.Simulated and not PrmPurgeSimulated))
				and    Asset.Company = PrmCompany
				and    (PrmFromDate not entered or AdjustmentDate >= PrmFromDate) 
				and    (PrmToDate not entered or AdjustmentDate <= PrmToDate) 
				and    (PrmAssetGroup not entered or AssetGroup = PrmAssetGroup)
				and    (PrmAssetType not entered or AssetType.Type = PrmAssetType)
				and    (PrmAssetSubType not entered or AssetType.SubType = PrmAssetSubType))
				
			Action Rules
				Instance Rules
					invoke Purge			
					
		PurgeDisposedAssetAdjustments is a Set Action
			restricted
			Parameters
				PrmCompany					is an AssetCompany
				PrmAsset					is an Asset
				PrmFinanceEnterpriseGroup	is like FinanceEnterpriseGroup
				PrmLeaseCompany				is like GeneralLedgerCompany
				PrmLocationName				is like AssetLocation
				PrmDivision					is like AssetDivision
				PrmAssetGroup				is like AssetGroup
				PrmFromDate					is Date
				PrmToDate					is Date
				
			Instance Selection
				include deleted records
				where (Asset.Company = PrmCompany
				and   (PrmAsset not entered or (Asset = PrmAsset and Asset.Company.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup))
				and   (PrmLeaseCompany not entered or Asset.AssetLease.LeaseCompany = PrmLeaseCompany)
				and   (PrmLocationName not entered or Asset.AssetLocation = PrmLocationName)
				and   (PrmDivision not entered or Asset.AssetDivision = PrmDivision)
				and   (PrmAssetGroup not entered or Asset.AssetGroup = PrmAssetGroup)
				and   (PrmFromDate not entered or Asset.AssetDisposalDate >= PrmFromDate)
				and   (PrmToDate not entered or Asset.AssetDisposalDate <= PrmToDate)
				and   Asset.Status.Disposed)
				
			Action Rules
				Instance Rules
					invoke Purge

		RemovePurgedLeaseID is an Update Action  
			restricted
			bypass field rules










				
			Action Rules
        		initialize AssetLease
	        	AssetCategory			= "N"


		Purge is a Purge Action
			restricted
			bypass relational integrity rules
			Entrance Rules
				invoke Purge PurgeAssetItemAdjustmentRel
				invoke Purge PurgeAssetBookAdjustmentRel
				
		NewPostingDateUpdate is an Update Action
			restricted

