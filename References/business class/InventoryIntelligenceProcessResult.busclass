InventoryIntelligenceProcessResult is a BusinessClass
	owned by InventoryIntelligence
	sql name is IIHProcessResult
	
	prefix is IREC
	
	Ontology
		symbolic key is InventoryIntelligenceProcessResult
		
	
	Patterns
		disable Auditing
		implements CreateStamp
		implements UpdateStamp
	
	Persistent Fields
		GroupId					is an AsyncActionRequest
			delete ignored
		Process					is Numeric size 1
			States
				DailyData		value is 1
				Recommendations	value is 2
        Status					is Numeric size 1
        	States
        		Processing 	value is 1
        		Completed  	value is 2
        		Failed		value is 3
        		Terminated	value is 4
        Step					is a IIHProcessStep
        FailedStep				is a IIHProcessStep
        FailedTimeStamp			is TimeStamp
        StartTimeStamp			is TimeStamp
		FinishedTimeStamp		is TimeStamp							
		UserId					is Actor
		EngineRequestDataArray
		ErrorMessage 			is Text
		LocationTypes			is an EngineLocationType
			default label is "RunForLocationTypes"
		APIVersion				is Alpha 50
		AnalysisDate			is a DateRange
		RunTimeStamp			is TimeStamp
		RunLocationGroup		is a IIHLocationGroup
			delete ignored
			default label is "LocationGroup"
		RunLocationCompany      is a InventoryCompany
			delete ignored
			default label is "Company"
		RunLocation				is a InventoryLocation
			delete ignored
			default label is "Location"
	Field Rules
	
	Conditions
		ExecutionFailure
			when (Status.Failed)
			
		ErrorItemsPresent
			restricted
			when (IIHProcessResultErrorItemsRel exists)

		ConsignmentItems						
			restricted
			when (InventoryIntelligenceProcessResult.IIHGlobalConfigurationRel.ConsignmentInValuation)

		RunsLimit			
			restricted
			when ((LatestProcessResult - InventoryIntelligenceProcessResult)<8)

		CumulativeChartRunsLimit
			restricted
			when ((LatestProcessResult - InventoryIntelligenceProcessResult)<13)

		AdjustmentHistoryProcessorExists		
			restricted
			when (AdjustmentHistoryProcessorRel exists)

		CumulativeHistoryProcessorExists			
			restricted
			when (CumulativeGraphRel exists)

		CumulativeHistoryExists						
			restricted
			when (IIHCumulativeSummaryRel exists)

		AdjustmentHistoryExists					
			restricted
			when (AdjustmentHistoryRel exists)

		IIProcessorExists						
			when (InventoryIntelligenceProcessorRel exists)

		HasOnlyGlobalAccess						
			when(GlobalAccess
			and !IIProcessorExists)
			
	Derived Fields
		ExecutionFailureMessage is a MessageField
			"FailedAtStep<FailedStep>"
		
		ConcurrentProcessInProgressMessage is a MessageField
			restricted
			"AnotherEngineProcessInProgress"
			
		DerivedAnalysisBeginDate is a DerivedField
        	type is Numeric size 2
        	return AnalysisDate.Begin day
        	
        DerivedAnalysisBeginMonth is a DerivedField
        	type is Alpha size 4
        	return AnalysisDate.Begin month short name
        	
        DerivedAnalysisBeginYear is a DerivedField
        	type is Numeric size 4
        	return AnalysisDate.Begin year
        	
		DerivedAnalysisEndDate is a DerivedField
        	type is Numeric size 2
        	return AnalysisDate.End day
        	
        DerivedAnalysisEndMonth is a DerivedField
        	type is Alpha size 4
        	return AnalysisDate.End month short name
        	
        DerivedAnalysisEndYear is a DerivedField
        	type is Numeric size 4
        	return AnalysisDate.End year
        	
        AnalysisDateString is a StringField
        	type is Alpha size 25
        	DerivedAnalysisBeginDate
        	"-"
        	DerivedAnalysisBeginMonth
        	"-"
        	DerivedAnalysisBeginYear
        	"::"
        	DerivedAnalysisEndDate
        	"-"
        	DerivedAnalysisEndMonth
        	"-"
        	DerivedAnalysisEndYear
        
        MissingSchemaMessage is a MessageField
        	restricted
			"IISchemaIsMissing"

		ProcessorPerpetualCost is a DerivedField			
			type is like InternationalAmount
			default label is "PerpetualCost"
			if (ConsignmentItems)
				return (sum AdjustmentHistoryProcessorRel.PerpetualCostForAllItems)
			else
				return (sum AdjustmentHistoryProcessorRel.PerpetualCostForNonConsignment)

		ProcessorPerpetualSaving is a DerivedField			
			type is like InternationalAmount
			default label is "PerpetualSaving"
			if (ConsignmentItems)
				return (-1*(sum AdjustmentHistoryProcessorRel.PerpetualSavingForAllItems))
			else
				return (-1*(sum AdjustmentHistoryProcessorRel.PerpetualSavingForNonConsignment))

		ProcessorParCost is a DerivedField					
			type is like InternationalAmount
			default label is "ParCost"
			if (ConsignmentItems)
				return (sum AdjustmentHistoryProcessorRel.ParCostForAllItems)
			else
				return (sum AdjustmentHistoryProcessorRel.ParCostForNonConsignment)

		ProcessorParSaving is a DerivedField				
			type is like InternationalAmount
			default label is "ParSaving"
			if (ConsignmentItems)
				return (-1*(sum AdjustmentHistoryProcessorRel.ParSavingForAllItems))
			else
				return (-1*(sum AdjustmentHistoryProcessorRel.ParSavingForNonConsignment))

		PerpetualCost is a DerivedField						
			type is like InternationalAmount
			if (ConsignmentItems)
				return (sum AdjustmentHistoryRel.PerpetualCostForAllItems)
			else
				return (sum AdjustmentHistoryRel.PerpetualCostForNonConsignment)

		PerpetualSaving is a DerivedField					
			type is like InternationalAmount
			if (ConsignmentItems)
				return (-1*(sum AdjustmentHistoryRel.PerpetualSavingForAllItems))
			else
				return (-1*(sum AdjustmentHistoryRel.PerpetualSavingForNonConsignment))

		ParCost is a DerivedField						
			type is like InternationalAmount
			if (ConsignmentItems)
				return (sum AdjustmentHistoryRel.ParCostForAllItems)
			else
				return (sum AdjustmentHistoryRel.ParCostForNonConsignment)

		ParSaving is a DerivedField					
			type is like InternationalAmount
			if (ConsignmentItems)
				return (-1*(sum AdjustmentHistoryRel.ParSavingForAllItems))
			else
				return (-1*(sum AdjustmentHistoryRel.ParSavingForNonConsignment))

		ProcessorCumulativePerpetualCost is a DerivedField				
			type is like InternationalAmount
			default label is "CumulativePerpetualCost"
			if (ConsignmentItems)
				return (CumulativeGraphRel.PerpetualCostForAllItems)
			else
				return (CumulativeGraphRel.PerpetualCostForNonConsignment)

		ProcessorCumulativePerpetualSaving is a DerivedField			
			type is like InternationalAmount
			default label is "CumulativePerpetualSaving"
			if (ConsignmentItems)
				return (CumulativeGraphRel.PerpetualSavingForAllItems)
			else
				return (CumulativeGraphRel.PerpetualSavingForNonConsignment)

		ProcessorCumulativeParCost is a DerivedField				
			type is like InternationalAmount
			default label is "CumulativeParCost"
			if (ConsignmentItems)
				return (CumulativeGraphRel.ParCostForAllItems)
			else
				return (CumulativeGraphRel.ParCostForNonConsignment)

		ProcessorCumulativeParSaving is a DerivedField				
			type is like InternationalAmount
			default label is "CumulativeParSaving"
			if (ConsignmentItems)
				return (CumulativeGraphRel.ParSavingForAllItems)
			else
				return (CumulativeGraphRel.ParSavingForNonConsignment)

		CumulativePerpetualCost is a DerivedField					
			type is like InternationalAmount
			if (ConsignmentItems)
				return IIHCumulativeSummaryRel.PerpetualCostForAllItems
			else
				return IIHCumulativeSummaryRel.PerpetualCostForNonConsignment

		CumulativePerpetualSaving is a DerivedField					
			type is like InternationalAmount
			if (ConsignmentItems)
				return IIHCumulativeSummaryRel.PerpetualSavingForAllItems
			else
				return IIHCumulativeSummaryRel.PerpetualSavingForNonConsignment

		CumulativeParCost is a DerivedField							
			type is like InternationalAmount
			if (ConsignmentItems)
				return IIHCumulativeSummaryRel.ParCostForAllItems
			else
				return IIHCumulativeSummaryRel.ParCostForNonConsignment

		CumulativeParSaving is a DerivedField						
			type is like InternationalAmount
			if (ConsignmentItems)
				return IIHCumulativeSummaryRel.ParSavingForAllItems
			else
				return IIHCumulativeSummaryRel.ParSavingForNonConsignment
		
		LatestProcessResult is a DerivedField			
            type is Numeric size 9
			restricted
            return first IIProcessResultRel.InventoryIntelligenceProcessResult

		DerivedRunDate is a DerivedField				
            type is Numeric size 2
            return StartTimeStamp day

		DerivedRunMonth is a DerivedField				
            type is Alpha size 4
            return StartTimeStamp month short name

		DerivedRunDateString is a StringField		
			type is Alpha size 7
            DerivedRunDate
        	"-"
        	DerivedRunMonth

		GlobalAccess is a DerivedField					
            type is Boolean
            if (IIHGlobalConfigurationRel exists
            and   (IIHGlobalConfigurationRel.DefaultGlobalAccess.View
                or    IIHGlobalConfigurationRel.DefaultGlobalAccess.Edit))
                return true
            else
                return false

	Relations
		IIHGlobalConfigurationRel
    		one-to-one relation to IIHGlobalConfiguration
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
    			
    	IIHProcessResultErrorItemsRel
    		one-to-many relation to IIHProcessResultErrorItems
    		delete cascades
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
    			related.InventoryIntelligenceProcessResult 	= InventoryIntelligenceProcessResult

		AdjustmentHistoryProcessorRel								
			one-to-many relation to IIHLocationAdjustmentHistory
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.InventoryIntelligenceProcessResult  = InventoryIntelligenceProcessResult
			Instance Selection
				where (related.ProcessorWithViewOrEditAccess)

		CumulativeGraphRel									
			one-to-one relation to IIHCumulativeGraph
			Field Mapping uses symbolic key
    			related.HROrganization 						= actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor		= actor.agent(Employee).Employee
				related.InventoryIntelligenceProcessResult  = InventoryIntelligenceProcessResult

		AdjustmentHistoryRel							
			one-to-many relation to IIHLocationAdjustmentHistory
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.InventoryIntelligenceProcessResult  = InventoryIntelligenceProcessResult

		IIProcessResultRel				
			one-to-many relation to InventoryIntelligenceProcessResult
			Field Mapping uses ByProcessStatusStartTime
		        related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Process                = 2
		        related.Status                 = 2
    			
		InventoryIntelligenceProcessorRel						
			one-to-one relation to InventoryIntelligenceProcessor
			Field Mapping uses symbolic key
				related.HROrganization 					= actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor 	= actor.agent(Employee).Employee

		IIHCumulativeSummaryRel									
			one-to-one relation to IIHCumulativeSummary
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.InventoryIntelligenceProcessResult  = InventoryIntelligenceProcessResult

	
	Sets
		ByProcessStatusStartTime
			Sort Order
				FinanceEnterpriseGroup
				Process
				Status
				StartTimeStamp descending
				InventoryIntelligenceProcessResult
				
		ByStatusAcrossFEG
			duplicates
			Instance Selection
                where (Status.Processing)
			Sort Order
				Status
	
	Actions
	
		CreateDailyDataResult is a Create Action
			restricted
			Entrance Rules
				StartTimeStamp	= current timestamp	
				UserId			= actor
				Status			= Status.Processing
				Process			= Process.DailyData
				LocationTypes	= EngineLocationType.AllLocations
	
		CreateRecommendationResult is a Create Action
			restricted
			Entrance Rules
				StartTimeStamp	= current timestamp	
				UserId			= actor
				Status			= Status.Processing
				Process			= Process.Recommendations
		
		UpdateRunInfo is an Update Action
			restricted
			bypass field rules
			Action Rules
				APIVersion = IIHGlobalConfigurationRel.APIVersion
		
		InvokeDailyDataProcess is an Instance Action
			run in background
			restricted
			Parameters
				PrmBackgroundGroup	is AlphaUpper up to 200
				TimeOutInMinutes	is Numeric size 4
			Local Fields
				LastBackgroundGroup	is AlphaUpper up to 200
				NextBackgroundGroup	is AlphaUpper up to 200
				LocalSequence		is Numeric size 2
			Action Rules
				GroupId = current async action request id
				LocalSequence = 1
				LastBackgroundGroup = PrmBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "DailyDataEngine"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "Process"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				
				invoke Process DailyDataEngine in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.DailyDataEngineRun
						FailedTimeStamp = current timestamp
						send notification
							to UserId
							description is "DailyDataProcessFailed"
							priority is high
							detail is "DailyDataProcessFailedAtEngineRun;ViewProcessResult<InventoryIntelligenceProcessResult>"
					invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
					invoked.TimeOutInMinutes	   	= TimeOutInMinutes
				
				LocalSequence = LocalSequence + 1
				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "InventoryIntelligenceProcessResult"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "MarkComplete"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				
				invoke MarkComplete InventoryIntelligenceProcessResult in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.DailyDataEnd
						FailedTimeStamp = current timestamp
					invoked.PrmStep = IIHProcessStep.DailyDataEnd
					
		InvokeRecommendationProcess is an Instance Action
			run in background
			restricted
			Parameters
				PrmBackgroundGroup	is AlphaUpper up to 200
				RunForLocationTypes	is an EngineLocationType
				TimeOutInMinutes	is Numeric size 4
				KeepIntermediateTables is Boolean
			Local Fields
				LastBackgroundGroup	is AlphaUpper up to 200
				NextBackgroundGroup	is AlphaUpper up to 200
				LocalSequence		is Numeric size 2
			Action Rules
				display "Display1InActionRulesProcess<Process>;Status<Status>"
				GroupId = current async action request id
				LocalSequence = 1
				LastBackgroundGroup = PrmBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + "UpdateAccessRights"
				
				invoke UpdateExclusionRules IIHRule in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsPreprocessing
						FailedTimeStamp = current timestamp

				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "IIHItemLocation"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "InitializeExtendedData"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				display "InActionRulesProcess<Process>;Status<Status>"
				
				invoke UpdateReferenceValuesSet IIHItemLocation in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsPreprocessing
						FailedTimeStamp = current timestamp
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmProcessResult = InventoryIntelligenceProcessResult
					invoked.PrmCompany 		 = RunLocationCompany
					invoked.PrmLocation 	 = RunLocation
					invoked.PrmLocationGroup = RunLocationGroup
				display "InActionRulesProcess1<Process>;Status1<Status>"
				LocalSequence = LocalSequence + 1
				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "RecommendationEngine"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "Process"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				display "InActionRulesProcess2<Process>;Status2<Status>"
				
				invoke Process RecommendationEngine in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsEngineRun
						FailedTimeStamp = current timestamp
						send notification
							to UserId
							description is "RecommendationProcessFailed"
							priority is high
							detail is "RecommendationEngineProcessFailedAtEngineRun;ViewProcessResult<InventoryIntelligenceProcessResult>"
					invoked.RunForLocationTypes = RunForLocationTypes
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.TimeOutInMinutes	   = TimeOutInMinutes
					invoked.IIProcessResult        = InventoryIntelligenceProcessResult
					invoked.KeepIntermediateTables = KeepIntermediateTables

				
				LocalSequence = LocalSequence + 1
				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "IIHItemLocation"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "ClearRecommendations"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				display "InActionRulesProcess4<Process>;Status4<Status>"
				invoke ClearRecommendations IIHItemLocation in background group(NextBackgroundGroup)

					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsPostprocessing
						FailedTimeStamp = current timestamp
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmProcessResult = InventoryIntelligenceProcessResult
					invoked.RunForLocationTypes = RunForLocationTypes
					invoked.PrmCompany 			= RunLocationCompany
					invoked.PrmLocation 		= RunLocation
					invoked.PrmLocationGroup 	= RunLocationGroup

				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + "InterfaceRecs"
				
				invoke InterfaceExtendedData IIHItemLocationExtended in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsPostprocessing
						FailedTimeStamp = current timestamp
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmProcessResult = InventoryIntelligenceProcessResult
					invoked.PrmCompany 		 = RunLocationCompany
					invoked.PrmLocation 	 = RunLocation
					invoked.PrmLocationGroup = RunLocationGroup
				


				



















				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + "CalculateLocationValues"



				invoke CalculateLocationSummaryValues IIHItemLocation in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)

					resume on error
						
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsPostprocessing
						FailedTimeStamp = current timestamp
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmCompany 				  = RunLocationCompany
					invoked.PrmLocation 			  = RunLocation
					invoked.PrmLocationGroup 		  = RunLocationGroup

				
				LocalSequence = LocalSequence + 1
				LastBackgroundGroup = NextBackgroundGroup
				NextBackgroundGroup = PrmBackgroundGroup + "-" + LocalSequence
				EngineRequestDataArray.EngineRequestData[LocalSequence].ClassName = "InventoryIntelligenceProcessResult"
				EngineRequestDataArray.EngineRequestData[LocalSequence].ActionName = "MarkComplete"
				EngineRequestDataArray.EngineRequestData[LocalSequence].BackgroundGroupName = NextBackgroundGroup
				
				invoke MarkComplete InventoryIntelligenceProcessResult in background group(NextBackgroundGroup)
					run after background group(LastBackgroundGroup)
					assign async action request id to EngineRequestDataArray.EngineRequestData[LocalSequence].GroupId
					resume on error
						ErrorMessage = error message
						Status = Status.Failed
						FailedStep = IIHProcessStep.RecommendationsEnd
						FailedTimeStamp = current timestamp
					invoked.PrmStep = IIHProcessStep.RecommendationsEnd

		Delete is a Delete Action
		Purge is a Purge Action
		
		FailImmediate is an Instance Action
			restricted
			Parameters
					PrmFailedStep			is a IIHProcessStep
			Parameter Rules
					PrmFailedStep
						initial value is IIHProcessStep.ConcurrentProcessValidation
			Action Rules
				Status = Status.Failed

				FailedStep = PrmFailedStep
				FailedTimeStamp = current timestamp
				if (FailedStep = IIHProcessStep.ConcurrentProcessValidation)
					ErrorMessage = ConcurrentProcessInProgressMessage
				else
					ErrorMessage = MissingSchemaMessage
				if (Process.DailyData)
					send notification
						to UserId
						description is "DailyDataEngineCannotBeSubmitted"
						priority is high
				else
					send notification
						to UserId
						description is "RecommendationsEngineCannotBeSubmitted"
						priority is high
		
		MarkComplete is an Instance Action
			restricted
			run in background
			Parameters
				PrmStep is a IIHProcessStep
			Action Rules
				invoke UpdateRunInfo
				if (!Status.Failed)
					Status = Status.Completed
					Step = PrmStep
					FinishedTimeStamp = current timestamp
					if (Step.RecommendationsEnd)
						send notification
							to UserId
							description is "RecommendationsEngineRunCompleted"
							priority is high
					else
					if (Step.DailyDataEnd)
						send notification
							to UserId
							description is "DailyDataEngineRunCompleted"
							priority is high
				
		Terminate is an Instance Action
			valid when (Status.Processing)
			Action Rules
				Status = Status.Terminated
		
		PurgeProcessResults is a Set Action
			run in background
			Parameters
				PrmStatus	is Numeric size 1
					default label is "Status"
		        	States
		        		All			value is 0
		        		Completed  	value is 2
		        		Failed		value is 3
		        		Terminated	value is 4
		        PrmProcess	is Numeric size 1
		        	default label is "Process"
					States
						All				value is 0
						DailyData		value is 1
						Recommendations	value is 2
			Instance Selection
				where ((PrmStatus.All
				or    (PrmStatus.Completed
				and    Status.Completed)
				or    (PrmStatus.Failed
				and    Status.Failed)
				or    (PrmStatus.Terminated
				and    Status.Terminated))
				and   (PrmProcess.All 
				or    (PrmProcess.DailyData
				and    Process.DailyData)
				or    (PrmProcess.Recommendations
				and    Process.Recommendations)))
			Action Rules
				Instance Rules
					if (!Status.Processing)
						invoke Purge
