TransferPricing is a BusinessClass
	owned by transpricing
	default label is "RechargeName"
	prefix is TrPrc

	Ontology
		symbolic key is TransferPricing

	Patterns

	Persistent Fields
		Description
		TransferPricingType
		Company								is a ReceivableCompany
		Ledger
		Calendar							is a GeneralLedgerCalendar
		PeriodType							is Numeric size 1
			States
				Year	value is 1
				Quarter	value is 2
				Month	value is 3
				Week	value is 4
		YearToDate							is Boolean
		Currency
			default label is "RechargeCurrency"
		CurrencyTable			
			default label is "RechargeCurrencyTable"
		Status								is Numeric size 1
			States
				Active		value is 1
				Inactive	value is 2
		AllEntities							is Boolean
			default label is "BillAllEntities"
		StartDate							is Date
		EndDate								is Date
			
		RechargeItem						is an IntercompanyBillingRechargeItem
		ReceivablesRevenueAccountOverride	is a TransferPricingCodeBlock
		PayablesExpenseAccountOverride		is a TransferPricingCodeBlockWithoutAU
		BillingDocumentCurrency				is a Currency
		BillingDocumentCurrencyTable		is a CurrencyTable
		StartAllocationPeriod				is a GeneralLedgerCalendarPeriod

		AccountStructure					is a ReportingChart
		AccountingUnitStructure
		ProjectStructure
		FinanceDimension1Structure
		FinanceDimension2Structure
		FinanceDimension3Structure
		FinanceDimension4Structure
		FinanceDimension5Structure
		FinanceDimension6Structure
		FinanceDimension7Structure
		FinanceDimension8Structure
		FinanceDimension9Structure
		FinanceDimension10Structure

		AllocationSourceSystem
		AllocationControl
		AllocationControlCount				is Numeric size 3
		AllocationControlChanged			is Boolean

		Direction							is Numeric size 1
			States
				BillFrom	value is 1
				BillTo		value is 2
		ToOverride							is a FinanceAddress	 
			holds pii
		AllocateAmountType
			default label is "SourceAmountType"

	Local Fields
		LocalFinanceEnterpriseGroup			is like FinanceEnterpriseGroup
		LocalTransferPricingRunView			is a TransferPricingRun view
		LocalTransferPricingRun				is a TransferPricingRun
		LocalBatchRunRechargeType			is a TransferPricingType
		LocalBatchRunRecharge				is like TransferPricing
		LocalBatchRunCustomGroup			is a TransferPricing group
		LocalBatchRunRechargeOption			is like RechargeOption
		LocalBatchRunEnteredDate			is Date

		LocalAllocationControlView			is an AllocationControl view
		LocalOldAllocationControl			is like AllocationControl
		LocalAllocationView					is an Allocation view
		LocalAllocation						is an Allocation
		LocalAllocationLine					is an AllocationLine

		LocalTransferPricingSource			is a TransferPricingSource
		LocalAccountingEntity				is an AccountingEntity
		LocalAdditionalAccountingEntity		is an AccountingEntity
		LocalGeneralLedgerCalendarYear		is a GeneralLedgerCalendarYear
		LocalGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod

		LocalValidationPeriod				is like GeneralLedgerCalendarPeriod
		LocalTransferPricingSourceCheck		is like TransferPricingSource
		LocalAlphaYear						is Alpha 4
		LocalAlphaDay						is Alpha 3
		LocalRunDate						is Date					

		LocalOverrideAccountingEntity		is an AccountingEntity
		LocalOverridePeriod					is like GeneralLedgerCalendarPeriod
		LocalOverrideAmount					is an InternationalAmount
		CurrentParentPeriod					is a GeneralLedgerCalendarPeriod
		LocalTransferPricingSourceWeight    is a TransferPricingSourceWeight
		
		LocalSourceAddress					is a FinanceAddress	 
			holds pii

	Derived Fields








	
		DerivedHeaderOrSourceWeight is a DerivedField 
			type is Alpha 13
			restricted
			if (RechargeSplitUsingHeaderExists)
				return "header weight"
			else
				return "source weight"
		
		DerivedJulianDate is a DerivedField
			type is Alpha 7
			restricted
			LocalAlphaYear = LocalRunDate year
			LocalAlphaDay  = LocalRunDate year day
			DerivedJulianDate = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				DerivedJulianDate += "00"
			else
			if (LocalAlphaDay size = 2)
				DerivedJulianDate += "0"
			DerivedJulianDate += LocalAlphaDay
		
		OverrideEndDate					is a DerivedField
			type is Date
			restricted
			CurrentParentPeriod = LocalOverridePeriod
			while (CurrentParentPeriod.ChildrenRel exists)
				for each CurrentParentPeriod.ChildrenRel
					CurrentParentPeriod = each.GeneralLedgerCalendarPeriod
			return CurrentParentPeriod.Date
		
		DerivedEmptyStateMessage is a MessageField
			"Doesn'tLookLikeYou'veSetAnythingUpYet"

		DerivedEmptyStateDescription is a MessageField
			"ToGetStarted,ClickBelowToCreateARecharge."
		
		ReceivablesCompanyDescription is a MessageField
			"<Company>_-_<Company.Name>"

		TransferPricingRechargeText		is a MessageField
			restricted
			"Transfer_Pricing_Recharge"

		TransferPricingDescriptionTitle is a MessageField
			restricted
			"Transfer_Pricing_Recharge<TransferPricing>_-_<TransferPricing.Description>"
	
		TransferPricingTitle		is a DerivedField
			type is MessageField
			if (TransferPricing exists)
				return TransferPricingDescriptionTitle
			else
				return TransferPricingRechargeText
	Rule Blocks
		ValidateFromCompanyForICB
			constraint (Company.IsAValidIntercompanyBillingCompany)
				"ReceivablesCompanyIsNotSetupForIntercompanyBilling"
		
		CreateAllocationLineOverride
			if (each.Weight entered)	
				if (each.AccountingEntity entered)
					invoke Create AllocationLineOverride
						invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem  		= AllocationSourceSystem
						invoked.AllocationControl				= AllocationControl 
						invoked.Allocation						= LocalAllocation
						invoked.AllocationLine					= LocalAllocationLine
						invoked.GeneralLedgerCalendarPeriod		= each.GeneralLedgerCalendarPeriod
						invoked.Direction						= AllocationLineOverride.Direction.To
						invoked.WeightDecimal					= each.Weight
						invoked.AccountingEntity				= each.AccountingEntity
				else
					invoke Create AllocationLineWeight
						invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem  		= AllocationSourceSystem
						invoked.AllocationControl				= AllocationControl 
						invoked.Allocation						= LocalAllocation
						invoked.AllocationLine					= LocalAllocationLine
						invoked.GeneralLedgerCalendarPeriod		= each.GeneralLedgerCalendarPeriod
						invoked.ToWeight						= each.Weight

		CreateWeights
			for each GeneralLedgerCalendarPeriodRel
				LocalGeneralLedgerCalendarPeriod = each.GeneralLedgerCalendarPeriod
				invoke Create TransferPricingEntityWeight
					resume on error
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.TransferPricing					= TransferPricing
					invoked.TransferPricingSource			= LocalTransferPricingSource
					if (LocalAdditionalAccountingEntity entered)
						invoked.AccountingEntity			= LocalAdditionalAccountingEntity
					else
						invoked.AccountingEntity			= LocalAccountingEntity
					invoked.GeneralLedgerCalendarPeriod		= LocalGeneralLedgerCalendarPeriod
					invoked.Weight							= LocalWeight
		
		CreateOverrideForSourceWeight
			LocalTransferPricingSourceWeight = LocalTransferPricingSource.TransferPricingSourceWeight
			invoke Calculate LocalTransferPricingSourceWeight
				invoked.PrmAccountingEntity = LocalOverrideAccountingEntity
				invoked.PrmCurrencyDate		= OverrideEndDate 
				invoked.PrmCurrentPeriod	= LocalOverridePeriod

			LocalOverrideAmount = LocalTransferPricingSourceWeight.ComputedValue
		
			invoke Create AllocationLineOverride
				invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				invoked.AllocationSourceSystem  		= AllocationSourceSystem
				invoked.AllocationControl				= AllocationControl 
				invoked.Allocation						= LocalAllocation
				invoked.AllocationLine					= LocalAllocationLine
				invoked.GeneralLedgerCalendarPeriod		= LocalGeneralLedgerCalendarPeriod
				invoked.Direction						= AllocationLineOverride.Direction.To
				invoked.WeightDecimal					= LocalOverrideAmount
				invoked.AccountingEntity				= LocalOverrideAccountingEntity		

		CreateOverridePerPeriodForSourceWeight
			if (YearToDate)
				for each YearToDateAllocationPeriodsRel
					LocalOverridePeriod = each.GeneralLedgerCalendarPeriod
					include CreateOverrideForSourceWeight
			else
				LocalOverridePeriod = first GeneralLedgerCalendarPeriodByJulianDateRel.GeneralLedgerCalendarPeriod
				include CreateOverrideForSourceWeight

					
		CreateAllocationLine
			initialize LocalOverride
			initialize LocalSourceAddress
			if (TransferPricingSourceOverrideRel exists)
				default LocalSourceAddress to TransferPricingSourceOverrideRel.SourceAddress
			
			default LocalSourceAddress to each.SourceAddress
				default individual fields
			
			LocalOverride = RechargeItem.ToPayablePLAccount
			
			LocalAllocationLine = each.TransferPricingSource							
			invoke Create AllocationLine
				invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				invoked.AllocationSourceSystem  		= AllocationSourceSystem
				invoked.AllocationControl				= AllocationControl 
				invoked.Allocation						= LocalAllocation
				invoked.AllocationLine					= LocalAllocationLine 
				invoked.AllocationStep					= 1
				invoked.Description						= each.TransferPricingSource
				invoked.Active							= true
				invoked.TreatBlankProjectAsEmpty		= each.TreatBlankProjectAsEmpty
				invoked.TreatBlankDimension1AsEmpty		= each.TreatBlankDimension1AsEmpty
				invoked.AllocateAmountType				= AllocateAmountType
				
				if (LocalTransferPricingSource.SourceEntity.BillToEntity)
					invoked.FromPostOption 					= AllocationPostOption.Retain
					invoked.ToPostOption					= AllocationPostOption.Consolidate
				else 
					invoked.FromPostOption 						= AllocationPostOption.Consolidate
					invoked.ToPostOption						= AllocationPostOption.Split
					invoked.ToDimensionWithMultipleOverrides	= StructureRowRel.StructureRow
				
				if (each.SourceCompute entered)
					invoked.FromPostOption					= AllocationPostOption.Compute
					
				if (LocalTransferPricingSource.SourceEntity.BillToEntity)
					invoked.SourcePercentage				= -1 * each.SourcePercentage
				else
					invoked.SourcePercentage				= each.SourcePercentage
				invoked.Compute							= each.SourceCompute
				invoked.AllocateYearToDate				= YearToDate
				invoked.SourceAddress					= LocalSourceAddress
				if (each.SourceEntity.BillFromEntity)
					invoked.SourceAddress.AccountingEntity 	= Company.AccountingEntity 
				else
				if (AllEntities)
					initialize invoked.SourceAddress.AccountingEntity
				else
				if (each.SourceEntity.BillToEntity)
					invoked.SourceAddress.AccountingEntity 	= LocalAccountingEntity
				invoked.ToOverride							= LocalOverride
				if (AllEntities)
					initialize invoked.ToOverride.AccountingEntity
				else
					invoked.ToOverride.AccountingEntity			= LocalAccountingEntity
				invoked.FromOverride						= LocalOverride
				invoked.FromOverride.AccountingEntity		= LocalAccountingEntity

				invoked.ProcessAccountingUnitPostingBalance = each.ProcessAccountingUnitPostingBalance
				invoked.ProcessAccountPostingBalance		= each.ProcessAccountPostingBalance
				invoked.ProcessProjectPostingBalance		= each.ProcessProjectPostingBalance
				invoked.ProcessDimension1PostingBalance		= each.ProcessDimension1PostingBalance
				invoked.ProcessDimension2PostingBalance		= each.ProcessDimension2PostingBalance
				invoked.ProcessDimension3PostingBalance		= each.ProcessDimension3PostingBalance
				invoked.ProcessDimension4PostingBalance		= each.ProcessDimension4PostingBalance
				invoked.ProcessDimension5PostingBalance		= each.ProcessDimension5PostingBalance
				invoked.ProcessDimension6PostingBalance		= each.ProcessDimension6PostingBalance
				invoked.ProcessDimension7PostingBalance		= each.ProcessDimension7PostingBalance
				invoked.ProcessDimension8PostingBalance		= each.ProcessDimension8PostingBalance
				invoked.ProcessDimension9PostingBalance		= each.ProcessDimension9PostingBalance
				invoked.ProcessDimension10PostingBalance	= each.ProcessDimension10PostingBalance
				invoked.ComputePeriodically					= YearToDate
				invoked.GeneratePostToOnly					= true
				invoked.IncludeLineWeight					= LocalTransferPricingSource.IncludeAllWeight
				if (LocalTransferPricingSource.RechargeCalculationOption.SplitUsingCompute)
					invoked.ToAccountingEntityWeightCompute 	= LocalTransferPricingSource.AccountingEntityCompute
					invoked.UseOverrideForCompute				= true
			
			
			
			if (not LocalTransferPricingSource.SourceEntity.BillToEntity)								
				if (LocalTransferPricingSource.RechargeCalculationOption.SplitUsingHeaderWeights)
					for each TransferPricingWeightRel
						include CreateAllocationLineOverride
				else
				if (LocalTransferPricingSource.RechargeCalculationOption.SplitUsingSourceWeights)
					for each LocalTransferPricingSource.TransferPricingWeightRel
						include CreateAllocationLineOverride
				else
				if (LocalTransferPricingSource.RechargeCalculationOption.SplitUsingCompute)
					if (AllEntities)
						for each TransferPricingGlobalEntitiesRel
							invoke Create AllocationLineOverride
								invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
								invoked.AllocationSourceSystem  		= AllocationSourceSystem
								invoked.AllocationControl				= AllocationControl 
								invoked.Allocation						= LocalAllocation
								invoked.AllocationLine					= LocalAllocationLine
								invoked.Direction						= AllocationLineOverride.Direction.To
								invoked.AccountingEntity				= each.AccountingEntity
					else
						for each TransferPricingEntity set
							invoke Create AllocationLineOverride
								invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
								invoked.AllocationSourceSystem  		= AllocationSourceSystem
								invoked.AllocationControl				= AllocationControl 
								invoked.Allocation						= LocalAllocation
								invoked.AllocationLine					= LocalAllocationLine
								invoked.Direction						= AllocationLineOverride.Direction.To
								invoked.AccountingEntity				= each.AccountingEntity
				else
				if (LocalTransferPricingSource.RechargeCalculationOption.SplitUsingTotals)
					if (AllEntities)
						for each TransferPricingGlobalEntitiesRel
							LocalOverrideAccountingEntity = each.AccountingEntity
							
							include CreateOverridePerPeriodForSourceWeight							 
							
							if (each.HasAdditionalEntities)
								for each each.TransferPricingGlobalAdditionalEntity set
									LocalOverrideAccountingEntity = each.AdditionalEntity    					
									include CreateOverridePerPeriodForSourceWeight
					else
						for each TransferPricingEntity set
							LocalOverrideAccountingEntity = each.AccountingEntity

							include CreateOverridePerPeriodForSourceWeight							 
							
							if (each.AdditionalEntityExist)
								for each each.TransferPricingAdditionalEntitiesRel
									LocalOverrideAccountingEntity = each.AdditionalEntity    					
									include CreateOverridePerPeriodForSourceWeight							 
			
		EntityLoop
			if (not LocalAllocationCreated or LocalRetainCount > 0)
			
				invoke Create Allocation
					assign result to LocalAllocationView
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem  = AllocationSourceSystem
					invoked.AllocationControl		= AllocationControl
					invoked.Allocation				= LocalAccountingEntity
					invoked.Ledger					= TransferPricing.Ledger
				
				LocalAllocation = LocalAllocationView.Allocation
				
				for each TransferPricingSource set
					LocalTransferPricingSource = each.TransferPricingSource
					if (not LocalAllocationCreated or LocalTransferPricingSource.RechargeCalculationOption.Retain) 
					
						if (LocalTransferPricingSource.RechargeCalculationOption.Retain)
							LocalRetainCount += 1
						
						include CreateAllocationLine			
				
				LocalAllocationCreated = true
				
		ValidateWeightsConstraints
			constraint (TransferPricingWeightValidationRel exists)
				"Period<LocalValidationPeriod>:<DerivedHeaderOrSourceWeight>IsNotSetupForBillToEntity<LocalAccountingEntity>"
			
			if (AllEntities)
				for each TransferPricingGlobalAdditionalEntityForWeightsRel
					LocalAdditionalAccountingEntity = each.AdditionalEntity
					
					constraint (TransferPricingAdditionalEntityWeightValidationRel exists)
						"Period<LocalValidationPeriod>:<DerivedHeaderOrSourceWeight>IsNotSetupForBillToEntity<LocalAdditionalAccountingEntity>Under<LocalAccountingEntity>"
			else
				for each TransferPricingAdditionalEntityForWeightsRel
					LocalAdditionalAccountingEntity = each.AdditionalEntity
					
					constraint (TransferPricingAdditionalEntityWeightValidationRel exists)
						"Period<LocalValidationPeriod>:<DerivedHeaderOrSourceWeight>IsNotSetupForBillToEntity<LocalAdditionalAccountingEntity>Under<LocalAccountingEntity>"
		
		ValidateWeights
			if (YearToDate)
				for each YearToDateAllocationPeriodsRel
					LocalValidationPeriod = each.GeneralLedgerCalendarPeriod
					include ValidateWeightsConstraints
			else
				LocalValidationPeriod = LocalGeneralLedgerCalendarPeriod
				include ValidateWeightsConstraints
				
	Field Rules
		Description
			required
			
		Company
			required
			include ValidateFromCompanyForICB
			
		Ledger
			default to FinanceEnterpriseGroup.CoreLedger
			
		Calendar
			default to FinanceEnterpriseGroup.Calendar
			required
			
		PeriodType
			initial value is PeriodType.Month
			default to PeriodType.Month
			required
			constraint (CalendarPeriodsMatchingPeriodTypeRel exists)
				"CalendarMustHavePeriodType<PeriodType>"
			
		YearToDate
			initial value is true
			default to true
			
		AllEntities
			if (TransferPricingEntity set exists)
				cannot be changed
					"CannotChangeBillAllEntitiesFlagWhenBillToEntityExists"
					
			for each TransferPricingGlobalEntitiesRel
				constraint (not each.ExistsAsCombinedEntity)
					"<each.AccountingEntity>ExistsAsACombinedEntity"
			
		StartDate
			if (EndDate entered)
				constraint (StartDate <= EndDate)
					"StartDateCannotBeGreaterThanEndDate"
		
		Currency
			default to Company.Currency	
			
		CurrencyTable
			default to FinanceEnterpriseGroup.CurrencyTable	
			
		Status
			initial value is Status.Active
			default to Status.Active
			
		RechargeItem
			required
		
		ReceivablesRevenueAccountOverride
			if (ReceivablesRevenueAccountOverride.ToAccountingEntity not entered)
				ReceivablesRevenueAccountOverride.ToAccountingEntity = Company.AccountingEntity
				
		BillingDocumentCurrency
			default to Company.Currency
			
			if  (Company.UseBillFromFunctionalCurrency.Yes
			or  (Company.UseBillFromFunctionalCurrency.UseIntercompanyBillingGroupValue
			and  IntercompanyBillingGroupRel.UseBillFromFunctionalCurrency))
				constraint (BillingDocumentCurrency = Company.Currency)
					"BillingDocumentCurrency<BillingDocumentCurrency>MustBeReceivableCompanyFunctionalCurrency<Company.Currency>"
			
		BillingDocumentCurrencyTable
			default to CurrencyTable
			
		AccountingUnitStructure
			initial value is FinanceEnterpriseGroup.EnterpriseAUStructure
			default to FinanceEnterpriseGroup.EnterpriseAUStructure
		
		FinanceDimension1Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim1Structure
			default to FinanceEnterpriseGroup.EnterpriseDim1Structure
		
		FinanceDimension2Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim2Structure
			default to FinanceEnterpriseGroup.EnterpriseDim2Structure
		
		FinanceDimension3Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim3Structure
			default to FinanceEnterpriseGroup.EnterpriseDim3Structure
		
		FinanceDimension4Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim4Structure
			default to FinanceEnterpriseGroup.EnterpriseDim4Structure
		
		FinanceDimension5Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim5Structure
			default to FinanceEnterpriseGroup.EnterpriseDim5Structure
		
		FinanceDimension6Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim6Structure
			default to FinanceEnterpriseGroup.EnterpriseDim6Structure
		
		FinanceDimension7Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim7Structure
			default to FinanceEnterpriseGroup.EnterpriseDim7Structure
		
		FinanceDimension8Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim8Structure
			default to FinanceEnterpriseGroup.EnterpriseDim8Structure
		
		FinanceDimension9Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim9Structure
			default to FinanceEnterpriseGroup.EnterpriseDim9Structure
		
		FinanceDimension10Structure
			initial value is FinanceEnterpriseGroup.EnterpriseDim10Structure
			default to FinanceEnterpriseGroup.EnterpriseDim10Structure
		
		ProjectStructure
			initial value is FinanceEnterpriseGroup.EnterpriseProjectStructure
			default to FinanceEnterpriseGroup.EnterpriseProjectStructure
		
		AccountStructure	
			initial value is FinanceEnterpriseGroup.EnterpriseChart		
			default to FinanceEnterpriseGroup.EnterpriseChart
			
		AllocationSourceSystem
			force default to AllocationSourceSystem.TransferPricing
		
		AllocateAmountType
			initial value is AllocateAmountType.FunctionalAmount
			
	Conditions
		CompanyExists
			restricted
			when (Company exists) 
		
		RechargeSplitUsingHeaderExists
			restricted
			when (TransferPricingSourceSplitUsingHeaderRel exists)
			
		IsActive
			restricted
			when (Status.Active)
	
		IsInactive
			restricted
			when (Status.Inactive)
			
		NeedResequence
			restricted
			when (TransferPricingSource set exists 
				and instance count of TransferPricingSource set != last TransferPricingSource set.LineNumber)










	
		EntityExists
			restricted
			when (TransferPricingEntityExistsRel exists
			or    TransferPricingAdditionalEntityExistsRel exists)
		
		GlobalEntityExists
			restricted
			when (TransferPricingGlobalEntityExistsRel exists
			or    TransferPricingGlobalAdditionalEntityExistsRel exists)
		
		TransferPricingExists
			restricted
			when (TransferPricing exists)
	
	Relations
		IntercompanyBillingGroupRel
			one-to-one relation to IntercompanyBillingGroup
			Field Mapping uses symbolic key
				related.IntercompanyBillingGroup 	= FinanceEnterpriseGroup
				
		AccountingEntitiesRel
			one-to-many relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
			Instance Selection
    			where (related.PostingEntity)
    				
		TransferPricingGlobalEntitiesRel 
			one-to-many relation to TransferPricingGlobalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				
		TransferPricingGlobalEntityExistsRel 
			one-to-many relation to TransferPricingGlobalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
			Instance Selection
				where (related.Company.AccountingEntity	= LocalAccountingEntity)
				
		TransferPricingGlobalAdditionalEntityExistsRel 
			one-to-many relation to TransferPricingGlobalAdditionalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
			Instance Selection
				where (related.AdditionalEntity				= LocalAccountingEntity)
				
		TransferPricingGlobalAdditionalEntityForWeightsRel 
			one-to-many relation to TransferPricingGlobalAdditionalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
			Instance Selection
				where (related.AccountingEntity				= LocalAccountingEntity)
				
		TransferPricingActiveRel
			one-to-many relation to TransferPricing
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.Status.Active)
				
		TransferPricingRechargeTypeRel
			one-to-many relation to TransferPricing
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.Status.Active
				and    related.TransferPricingType 			= LocalBatchRunRechargeType)
				
		TransferPricingRechargeRel
			one-to-many relation to TransferPricing
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
				related.TransferPricing						= LocalBatchRunRecharge
			Instance Selection
				where (related.Status.Active)
				
		TransferPricingCustomGroupInactiveRel
			one-to-many relation to TransferPricing
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related within LocalBatchRunCustomGroup
				and    related.Status.Inactive)
	
		TransferPricingWithinBatchRunDateRel
			one-to-many relation to TransferPricing
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.Status.Active
				and   (related.StartDate not entered or LocalBatchRunEnteredDate >= related.StartDate)
				and   (related.EndDate not entered or LocalBatchRunEnteredDate <= related.EndDate)
				and   (LocalBatchRunRechargeOption not entered
				or     (LocalBatchRunRechargeOption.RechargeType and related.TransferPricingType = LocalBatchRunRechargeType)
				or	   (LocalBatchRunRechargeOption.Single and related.TransferPricing = LocalBatchRunRecharge)
				or     (LocalBatchRunRechargeOption.Group and related.TransferPricing within LocalBatchRunCustomGroup)))
		
		TransferPricingRunRel
			one-to-many relation to TransferPricingRun
			Field Mapping uses ByRechargeCalculationDescending
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing 
	
		GeneralLedgerCalendarPeriodRel	
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TopNode 							= Calendar.TopNode
				related.Year								= LocalGeneralLedgerCalendarYear
				related.PeriodType							= PeriodType
				
		GeneralLedgerCalendarPeriodByJulianDateRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Calendar.TopNode
				related.PeriodType				 	= PeriodType
				related.EndDateJulian				>= DerivedJulianDate
			Instance Selection
				where (related.StartDateJulian		<= DerivedJulianDate)
		
		YearToDateAllocationPeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TopNode 							= Calendar.TopNode
				related.Year								= LocalGeneralLedgerCalendarYear
				related.PeriodType							= PeriodType
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod	<= LocalGeneralLedgerCalendarPeriod)

		TransferPricingWeightRel
			one-to-many relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= blank
				
		TransferPricingWeightValidationRel
			one-to-one relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSourceCheck
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerCalendarPeriod			= LocalValidationPeriod
				
		TransferPricingAdditionalEntityWeightValidationRel
			one-to-one relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSourceCheck
				related.AccountingEntity					= LocalAdditionalAccountingEntity
				related.GeneralLedgerCalendarPeriod			= LocalValidationPeriod
				
		TransferPricingWeightCountPerPeriodRel
			one-to-many relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSource
			Instance Selection
				where ((LocalAccountingEntity not entered 
				or 	   (related.AccountingEntity 					= LocalAccountingEntity))
				and     related.GeneralLedgerCalendarPeriod.Year	= LocalGeneralLedgerCalendarYear)
				
		TransferPricingWeightPerPeriodRel
			one-to-one relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSource
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerCalendarPeriod			= LocalGeneralLedgerCalendarPeriod
				
		TransferPricingWeightPerPeriodForAdditionalEntitiesRel
			one-to-one relation to TransferPricingEntityWeight
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSource
				related.AccountingEntity					= LocalAdditionalAccountingEntity
				related.GeneralLedgerCalendarPeriod			= LocalGeneralLedgerCalendarPeriod

		TransferPricingSourceSplitUsingHeaderRel
			one-to-many relation to TransferPricingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
			Instance Selection
				where (related.RechargeCalculationOption.SplitUsingHeaderWeights)
				
		TransferPricingSourceSplitUsingSourceRel
			one-to-many relation to TransferPricingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
			Instance Selection
				where (related.RechargeCalculationOption.SplitUsingSourceWeights)
			
		TransferPricingSourceSplitUsingComputeRel
			one-to-many relation to TransferPricingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
			Instance Selection
				where (related.RechargeCalculationOption.SplitUsingCompute
				and	   related.AccountingEntityCompute		= blank)
	
		StructureRowRel
			one-to-one relation to StructureRow
			Field Mapping uses ByType
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Type								= CodeBlockDimensionType.AccountingEntity
					
		CalendarPeriodsMatchingPeriodTypeRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.TopNode		 						= Calendar.TopNode
			Instance Selection
				where (related.PeriodType		 			= PeriodType)
				
		AllocationControlRel 
    		one-to-one relation to AllocationControl
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
    			related.AllocationSourceSystem 				= AllocationSourceSystem.TransferPricing
    			related.AllocationControl					= LocalOldAllocationControl
				
    	TransferPricingEntityExistsRel
			one-to-many relation to TransferPricingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				= FinanceEnterpriseGroup
				related.TransferPricing		 				= TransferPricing
			Instance Selection
				where (related.Company.AccountingEntity	= LocalAccountingEntity)
				
		TransferPricingAdditionalEntityExistsRel
			one-to-many relation to TransferPricingAdditionalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
			Instance Selection
				where (related.AdditionalEntity				= LocalAccountingEntity)
		
		TransferPricingAdditionalEntityForWeightsRel
			one-to-many relation to TransferPricingAdditionalEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.AccountingEntity					= LocalAccountingEntity
				
		TransferPricingSourceOverrideRel
			one-to-one relation to TransferPricingSourceOverride
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.TransferPricing						= TransferPricing
				related.TransferPricingSource				= LocalTransferPricingSource
				related.AccountingEntity					= LocalAccountingEntity
    			
	Actions
		Create is a Create Action
		
		Update is an Update Action
			Action Rules
				AllocationControlChanged = true
		
		Delete is a Delete Action
			Action Rules
				constraint (TransferPricingRunRel not exists)
					"CannotDelete:RechargeCalculationExists."			
			Exit Rules
				invoke Delete AllocationControl
					resume on error
				
		UpdateChanged is an Instance Action
			restricted
			Action Rules
				AllocationControlChanged = true
				
		GenerateWeights is an Instance Action
			valid when (RechargeSplitUsingHeaderExists)
			Parameters
				PrmGeneralLedgerCalendarYear 	is a GeneralLedgerCalendarYear
					default label is "Year"
				PrmEntityOption					is Numeric 1
					default label is "EntityOption"
					States
						Blank					value is 0
						Single					value is 1
						All						value is 2
				PrmAccountingEntity			 	is an AccountingEntity
					default label is "AccountingEntity"
				PrmDefaultWeight			 	is an InternationalAmount
					default label is "DefaultWeight"
			Local Fields
				LocalTransferPricingSource		is a TransferPricingSource
			Parameter Rules
				PrmGeneralLedgerCalendarYear
					required
				PrmAccountingEntity
					if (not PrmEntityOption.Single)
						initialize PrmAccountingEntity
			Action Rules
				invoke GenerateWeightsBySource
					invoked.PrmGeneralLedgerCalendarYear = PrmGeneralLedgerCalendarYear
					invoked.PrmEntityOption				 = PrmEntityOption
					invoked.PrmAccountingEntity	 		 = PrmAccountingEntity
					invoked.PrmDefaultWeight			 = PrmDefaultWeight
					initialize invoked.PrmTransferPricingSource
				
		GenerateWeightsBySource is an Instance Action
			restricted
			Parameters
				PrmGeneralLedgerCalendarYear	is a GeneralLedgerCalendarYear
				PrmTransferPricingSource		is a TransferPricingSource
				PrmEntityOption					is Numeric 1
					States
						Blank					value is 0
						Single					value is 1
						All						value is 2
				PrmAccountingEntity				is an AccountingEntity
				PrmDefaultWeight				is an InternationalAmount
			Local Fields
				LocalWeight						is an InternationalAmount
				LocalIsPartiallyCreated			is Boolean
			Action Rules
				LocalGeneralLedgerCalendarYear 	= PrmGeneralLedgerCalendarYear
				LocalTransferPricingSource 		= PrmTransferPricingSource
				LocalAccountingEntity			= PrmAccountingEntity
				LocalWeight						= PrmDefaultWeight
				
				if (PrmAccountingEntity entered)
					if (not TransferPricing.AllEntities)
						constraint (EntityExists)
							"AccountingEntitySelectedIsNotABillToEntity."
					else
						constraint (GlobalEntityExists)
							"AccountingEntitySelectedIsNotABillToEntity."
					
				if (TransferPricingWeightCountPerPeriodRel exists)
					for each GeneralLedgerCalendarPeriodRel
						LocalGeneralLedgerCalendarPeriod	= each.GeneralLedgerCalendarPeriod
							if (TransferPricingWeightPerPeriodRel not exists)
								LocalIsPartiallyCreated		= true
								end for each
								
					if (PrmAccountingEntity not entered 
					and not LocalIsPartiallyCreated)
						for each TransferPricingEntity set
							LocalAccountingEntity 					= each.AccountingEntity
							for each GeneralLedgerCalendarPeriodRel
								LocalGeneralLedgerCalendarPeriod 	= each.GeneralLedgerCalendarPeriod
									if (TransferPricingWeightPerPeriodRel not exists)
										LocalIsPartiallyCreated		= true
										end for each
								
							for each TransferPricingAdditionalEntityForWeightsRel
								LocalAdditionalAccountingEntity		= each.AdditionalEntity
								for each GeneralLedgerCalendarPeriodRel
									LocalGeneralLedgerCalendarPeriod 	= each.GeneralLedgerCalendarPeriod
										if (TransferPricingWeightPerPeriodForAdditionalEntitiesRel not exists)
											LocalIsPartiallyCreated		= true
											end for each
								
					constraint (LocalIsPartiallyCreated)
						"CannotCreate:WeightsAlreadyExist."
							
					confirmation required
						"WeightsAlreadyExistForSomePeriods,OnlyPeriodsWithMissingWeightsWillBeGenerated."
				
				if (PrmEntityOption.All)
					if (TransferPricing.AllEntities)
						for each TransferPricingGlobalEntitiesRel
							initialize LocalAdditionalAccountingEntity
							LocalAccountingEntity = each.AccountingEntity
							include CreateWeights
							
							for each TransferPricingGlobalAdditionalEntityForWeightsRel
			    				LocalAdditionalAccountingEntity = each.AdditionalEntity
			    				include CreateWeights
					else
						for each TransferPricingEntity set
							initialize LocalAdditionalAccountingEntity
							LocalAccountingEntity = each.AccountingEntity
							include CreateWeights
							
							for each TransferPricingAdditionalEntityForWeightsRel
								LocalAdditionalAccountingEntity = each.AdditionalEntity
								include CreateWeights
						
					initialize LocalAccountingEntity
					initialize LocalAdditionalAccountingEntity
					
				include CreateWeights
	
		CreateAllocations is an Instance Action
			restricted
			Local Fields
				LocalAllocationCreated		is Boolean
				LocalRetainCount 			is Numeric size 3
				LocalOverride				is a FinanceAddress	 
					holds pii
			Action Rules
				LocalOldAllocationControl = AllocationControl
				AllocationControlCount += 1
				
				invoke Create AllocationControl
					assign result to LocalAllocationControlView
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem  = AllocationSourceSystem
					invoked.Description				= TransferPricing.Description
					invoked.Calendar				= TransferPricing.Calendar
					invoked.PeriodType				= PeriodType
					invoked.Currency				= Currency
					invoked.CurrencyTable			= CurrencyTable
					invoked.AccountingUnitStructure		= AccountingUnitStructure
					invoked.FinanceDimension1Structure	= FinanceDimension1Structure
					invoked.FinanceDimension2Structure	= FinanceDimension2Structure
					invoked.FinanceDimension3Structure	= FinanceDimension3Structure
					invoked.FinanceDimension4Structure	= FinanceDimension4Structure
					invoked.FinanceDimension5Structure	= FinanceDimension5Structure
					invoked.FinanceDimension6Structure	= FinanceDimension6Structure
					invoked.FinanceDimension7Structure	= FinanceDimension7Structure
					invoked.FinanceDimension8Structure	= FinanceDimension8Structure
					invoked.FinanceDimension9Structure	= FinanceDimension9Structure
					invoked.FinanceDimension10Structure	= FinanceDimension10Structure
					invoked.ProjectStructure			= ProjectStructure
					invoked.AccountStructure			= AccountStructure
								
				AllocationControl = LocalAllocationControlView.AllocationControl
				
				if (AllEntities)
					invoke Create Allocation
						assign result to LocalAllocationView
						invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.AllocationSourceSystem  = AllocationSourceSystem
						invoked.AllocationControl		= AllocationControl
						invoked.Allocation				= "TP"
						invoked.Ledger					= TransferPricing.Ledger
					
					LocalAllocation = LocalAllocationView.Allocation
					
					for each TransferPricingSource set
						LocalTransferPricingSource = each.TransferPricingSource
						include CreateAllocationLine					
				else
					for each TransferPricingEntity set
						LocalAccountingEntity = each.AccountingEntity
						include EntityLoop
						for each each.TransferPricingAdditionalEntitiesRel
							LocalAccountingEntity = each.AdditionalEntity
							include EntityLoop
																			
				AllocationControlChanged = false		
			Exit Rules
				invoke Delete AllocationControlRel	
					resume on error
		
		CalculateRecharges is an Instance Action
			valid when (Status.Active)
			Parameters
				PrmDate						is Date
					default label is "Date"
				PrmTransferPricingBatchRun	is like TransferPricingBatchRun
				PrmFromBatch				is Boolean
			Parameter Rules
				PrmDate
					required
					LocalRunDate = PrmDate
			Local Fields
				LocalErrorMessage			is Alpha size up to 400
			Action Rules
				invoke ValidateRecharges
					resume on error
						LocalErrorMessage = error message
					invoked.PrmDate = PrmDate
						
				if (PrmTransferPricingBatchRun not entered)
					constraint (LocalErrorMessage not entered)
						"<LocalErrorMessage>"
			
				if (AllocationControl not entered or AllocationControlChanged or TransferPricingSourceWeight set exists)
					invoke CreateAllocations TransferPricing
				
				invoke Create TransferPricingRun
					assign result to LocalTransferPricingRunView
					fill in fields from this instance
					invoked.BatchRun		= PrmTransferPricingBatchRun
					invoked.ErrorMessage	= LocalErrorMessage
					invoked.PostingDate 	= PrmDate
					invoked.TransactionDate = PrmDate
					
					
				LocalTransferPricingRun = LocalTransferPricingRunView.TransferPricingRun 
				
				invoke Run LocalTransferPricingRun
					invoked.PrmDate				= PrmDate
					invoked.PrmSkipRefresh		= PrmFromBatch
				
					
		BatchRun is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
				PrmRechargeOption					is a RechargeOption
					default label is "RechargeOption"
				PrmDescription						is a Description
					default label is "Description"
				PrmRechargeType						is a TransferPricingType
					default label is "RechargeType"
				PrmRecharge							is a TransferPricing
					default label is "Recharge"
				PrmCustomGroup						is a TransferPricing group
					default label is "CustomGroup"
				PrmDate								is Date
					default label is "Date"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					constraint (TransferPricingActiveRel exists)
						"NoActiveRecharge"
				PrmRechargeOption
					LocalBatchRunRechargeOption = PrmRechargeOption
				PrmDescription
					required
				PrmRechargeType
					if (PrmRechargeOption.RechargeType)
						required
						LocalBatchRunRechargeType = PrmRechargeType
						constraint (TransferPricingRechargeTypeRel exists)
							"NoActiveRechargesWithRechargeType<LocalBatchRunRechargeType>"
					else
						initialize PrmRechargeType
				PrmRecharge
					if (PrmRechargeOption.Single)
						required
						LocalBatchRunRecharge = PrmRecharge
						constraint (TransferPricingRechargeRel exists)
							"<LocalBatchRunRecharge>IsNotAnActiveRecharge"
					else
						initialize PrmRecharge
				PrmCustomGroup
					if (PrmRechargeOption.Group)
						required
						LocalBatchRunCustomGroup = PrmCustomGroup
						constraint (TransferPricingCustomGroupInactiveRel not exists)
							"Group<LocalBatchRunCustomGroup>HasInactiveRecharges"
					else
						initialize PrmCustomGroup
				PrmDate
					required
					LocalBatchRunEnteredDate = PrmDate
					constraint (TransferPricingWithinBatchRunDateRel exists)
            			"NoRechargesProcessed.Date<PrmDate>IsNotWithinTheStartAndEndDatesOfTheRechargesMatchingTheEnteredParameters."						
			Local Fields
				LocalTransferPricingBatchRunView	is a TransferPricingBatchRun view
				LocalTransferPricingBatchRun		is a TransferPricingBatchRun 
				LocalFromBatch						is Boolean
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and Status.Active
				and (StartDate not entered or PrmDate >= StartDate)
				and (EndDate not entered or PrmDate <= EndDate)
				and (PrmRechargeOption not entered
				or   ((PrmRechargeOption.RechargeType and TransferPricingType = PrmRechargeType)
				or	  (PrmRechargeOption.Single and TransferPricing = PrmRecharge)
				or    (PrmRechargeOption.Group and TransferPricing within PrmCustomGroup))))
            Action Rules
            	Set Rules
            		Entrance Rules
	                	invoke Create TransferPricingBatchRun
	                		assign result to LocalTransferPricingBatchRunView
	                		invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
	                		invoked.Description					= PrmDescription
	                		invoked.TransactionDate				= PrmDate
	                		invoked.RechargeOption				= PrmRechargeOption
	                		invoked.TransferPricingType			= PrmRechargeType
	                		invoked.TransferPricing				= PrmRecharge
	                		invoked.TransferPricingCustomGroup	= PrmCustomGroup
	                		
	                	LocalTransferPricingBatchRun = LocalTransferPricingBatchRunView.TransferPricingBatchRun
	                		
						invoke SendNotification LocalTransferPricingBatchRun
						
						LocalFromBatch = false
						
                Instance Rules
                	invoke CalculateRecharges 
						invoked.PrmDate							= PrmDate
						invoked.PrmTransferPricingBatchRun 		= LocalTransferPricingBatchRun
						invoked.PrmFromBatch					= LocalFromBatch
					
					LocalFromBatch = true
		
		CopyRecharge is an Instance Action
			Parameters
				PrmNewTransferPricing			is like TransferPricing
					default label is "RechargeName"
				PrmNewDescription				is a Description
					default label is "Description"
				PrmNewTransferPricingType		is a TransferPricingType
					default label is "RechargeType"
				PrmNewReceivablesCompany 		is a ReceivableCompany
					default label is "ReceivablesCompany"
 				PrmNewLedger					is a Ledger
                	default label is "Ledger"
                PrmNewCalendar					is a GeneralLedgerCalendar
                	default label is "Calendar"
                PrmNewPeriodType				is Numeric size 1
					States
						Year		value is 1
						Quarter		value is 2
						Month		value is 3
						Week		value is 4
					default label is "PeriodType"
				PrmYearToDate					is Boolean
					default label is "YearToDate"
                PrmNewCurrency					is a Currency
					default label is "RechargeCurrency"
				PrmNewCurrencyTable				is a CurrencyTable
					default label is "RechargeCurrencyTable"
				PrmAllocateAmountType			is like AllocateAmountType
					default label is "SourceAmountType"
			Local Fields
            	LocalCreatedRechargeView		is an TransferPricing view
            	LocalCreatedEntityView			is a TransferPricingEntity view
            Parameter Rules
            	PrmNewTransferPricing
            		required
				PrmNewDescription
					required
				PrmNewTransferPricingType
					initial value is TransferPricingType
				PrmNewReceivablesCompany
					initial value is Company
 				PrmNewLedger
 					initial value is Ledger
                PrmNewCalendar
                	initial value is Calendar
                PrmNewPeriodType
					initial value is PeriodType
				PrmYearToDate
					initial value is YearToDate
                PrmNewCurrency
                	initial value is Currency
				PrmNewCurrencyTable
					initial value is CurrencyTable
				PrmAllocateAmountType
					initial value is AllocateAmountType
            Action Rules
                invoke Create TransferPricing
                	assign result to LocalCreatedRechargeView
                	fill in fields from this instance
                		except invoked.AllocationControl
						except invoked.AllocationControlCount
						except invoked.AllocationControlChanged
                    invoked.TransferPricing     = PrmNewTransferPricing
                    invoked.Description			= PrmNewDescription
                    invoked.TransferPricingType = PrmNewTransferPricingType
                    invoked.Company				= PrmNewReceivablesCompany
                    invoked.Ledger				= PrmNewLedger
					invoked.Calendar			= PrmNewCalendar					
					invoked.PeriodType			= PrmNewPeriodType
					invoked.YearToDate			= PrmYearToDate
					invoked.Currency			= PrmNewCurrency
					invoked.CurrencyTable		= PrmNewCurrencyTable	
					invoked.AllocateAmountType	= PrmAllocateAmountType

                for each TransferPricingEntity set
					invoke Create each
						assign result to LocalCreatedEntityView
						fill in fields from each
                    	invoked.TransferPricing     				= LocalCreatedRechargeView.TransferPricing
                    	invoked.LocalSkipCreateAdditionalEntity 	= true
                    
                    for each each.TransferPricingAdditionalEntitiesRel
                    	invoke Create each
                    		invoked.TransferPricing			= LocalCreatedEntityView.TransferPricing
                    		invoked.TransferPricingEntity	= LocalCreatedEntityView.TransferPricingEntity
                    		invoked.AccountingEntity		= each.AccountingEntity
                    		invoked.AdditionalEntity		= each.AdditionalEntity
                    
                for each TransferPricingSourceWeight set
					invoke Create TransferPricingSourceWeight
						fill in fields from each
							except invoked.FinanceEnterpriseGroup
							except invoked.TransferPricing
						invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
						invoked.TransferPricing			= LocalCreatedRechargeView.TransferPricing
                
                for each TransferPricingSource set
                	invoke Create each
						fill in fields from each
                    	invoked.TransferPricing     = LocalCreatedRechargeView.TransferPricing
                    
                for each TransferPricingEntityWeight set
                	invoke Create each
						fill in fields from each
                    	invoked.TransferPricing     = LocalCreatedRechargeView.TransferPricing

		Resequence is an Instance Action
			valid when (NeedResequence)
    		Local Fields
    			LocalLineCounter		is Numeric size 3
    		Action Rules
    			initialize LocalLineCounter
    			
    			for each TransferPricingSource set
    				LocalLineCounter += 1    				
    				if (LocalLineCounter != each.LineNumber)   				
    					invoke FastUpdate each
    						invoked.LineNumber = LocalLineCounter
    						
    	ValidateRecharges is an Instance Action
    		restricted
    		Parameters
    			PrmDate				is Date
    		Parameter Rules
    			PrmDate
    				LocalRunDate = PrmDate
    		Action Rules
				constraint (Company.IsAValidIntercompanyBillingCompany)
					"ReceivablesCompanyIsNotSetupForIntercompanyBilling"






				
				if (not AllEntities)	
					for each TransferPricingEntity set
						constraint (each.Company.IsAValidIntercompanyBillingCompany)
							"PayablesCompany<each.Company>IsNotSetupForIntercompanyBilling"
							
						if (each.Company.CompanySystemClosingControlRel.Control)
							constraint (PrmDate within each.Company.CompanySystemClosingControlRel.ValidEntryDate)
								"DateIsNotWithinValidEntryDatesForCompany<each.Company>;ValidDateRangeIs<each.Company.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<each.Company.CompanySystemClosingControlRel.ValidEntryDate.End>"
				else
					for each TransferPricingGlobalEntitiesRel
						if (each.Company.CompanySystemClosingControlRel.Control)
							constraint (PrmDate within each.Company.CompanySystemClosingControlRel.ValidEntryDate)
								"DateIsNotWithinValidEntryDatesForCompany<each.Company>;ValidDateRangeIs<each.Company.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<each.Company.CompanySystemClosingControlRel.ValidEntryDate.End>"
				
				constraint (TransferPricingSourceSplitUsingComputeRel not exist)
					"MissingSplitComputeForSource<first TransferPricingSourceSplitUsingComputeRel.LineNumber>"
				
				if (StartDate entered and EndDate entered)
					constraint (StartDate <= PrmDate and PrmDate <= EndDate)
						"DateNotWithin<StartDate>And<EndDate>."
						
				if (StartDate entered)
					constraint (PrmDate >= StartDate)
						"DateNotWithin<StartDate>." 
						
				if (EndDate entered)
					constraint (PrmDate <= EndDate)
						"DateNotWithin<EndDate>." 
						
				if (Company.CompanySystemClosingControlRel.Control)
					constraint (PrmDate within Company.CompanySystemClosingControlRel.ValidEntryDate)
						"DateIsNotWithinValidEntryDatesForCompany<Company>;ValidDateRangeIs<Company.CompanySystemClosingControlRel.ValidEntryDate.Begin>-<Company.CompanySystemClosingControlRel.ValidEntryDate.End>"
						
				LocalGeneralLedgerCalendarYear = PrmDate year
				
				if (RechargeSplitUsingHeaderExists)
					initialize LocalTransferPricingSourceCheck
	    			
	    			LocalGeneralLedgerCalendarPeriod = first GeneralLedgerCalendarPeriodByJulianDateRel.GeneralLedgerCalendarPeriod
	    			
	    			if (AllEntities)
	    				for each TransferPricingGlobalEntitiesRel
	    					LocalAccountingEntity = each.AccountingEntity
	    					include ValidateWeights
	    			else
		    			for each TransferPricingEntity set
							LocalAccountingEntity = each.AccountingEntity
							include ValidateWeights
				else
				if (TransferPricingSourceSplitUsingSourceRel exists)
					LocalGeneralLedgerCalendarPeriod = first GeneralLedgerCalendarPeriodByJulianDateRel.GeneralLedgerCalendarPeriod
					
					for each TransferPricingSourceSplitUsingSourceRel
						LocalTransferPricingSourceCheck = each.TransferPricingSource
						
						if (AllEntities)
							for each TransferPricingGlobalEntitiesRel
	    						LocalAccountingEntity = each.AccountingEntity
	    						include ValidateWeights
						else
							for each TransferPricingEntity set
								LocalAccountingEntity = each.AccountingEntity
								include ValidateWeights
