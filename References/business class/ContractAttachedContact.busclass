ContractAttachedContact is a BusinessClass
	owned by po
	prefix is CACT

	Ontology
		symbolic key is ContractAttachedContact

	Persistent Fields
		ContactType			is a PurchasingContactType
		Contact				is an Employee
			default label is "Employee"
		Name				is a PersonName 
			holds pii
		Address				is a PostalAddressV2	
			holds pii
		Phone				is a TelephoneNumber 
			holds pii
		Email				is an EmailAddress 
			holds pii
			default label is "EmailAddress"
		PrimaryContact		is Boolean
			default label is "PrimaryInternalContact"
		SecondaryContact		is Boolean
		SSContact				is Boolean
		DeliverableContact		is Boolean
		MilestoneContact		is Boolean
		PerformanceEvaluator 	is Boolean
		AdditionalSecurityAccess is Boolean
			protected
		SupplierCanView

	Local Fields
		LocalCheckContractDeliverable
		LocalCheckContractMilestone
		PrimaryContactChanged is Boolean

	Context Fields
		ContractDeliverable
		ContractMilestone

	Derived Fields

		DerivedName is a DerivedField
			type is Alpha 101
			default label is "Name"
			if (ContactFromRepository)
				return Contact.FirstLastName
			else
				return Name.PreferredFirstAndLastName

		DerivedPrimaryName is a DerivedField
			type is Alpha 101
			default label is "Name"
			if (ContactFromRepository)
				return Contact.FirstLastName

		DerivedPhone is a DerivedField
			type is Alpha up to 100
			default label is "PhoneNumber"
			if (ContactFromRepository)
				return Contact.EmployeeWorkTelephone
			else
				return DerivedPhoneDisplay

		DerivedPhoneDisplay is a StringField
			type is Alpha up to 60
			restricted
			Phone.InternationalPrefix
			" "
			Phone.SubscriberNumber
			" "
			Phone.Extension

		DerivedAdHocPhone is a DerivedField	
			type is Alpha up to 100
			restricted
			return DerivedPhoneDisplay

		DerivedEmail is a DerivedField
			type is Alpha 100
			default label is "EmailAddress"
			if (ContactFromRepository)
				return Contact.EmployeeWorkEmailAddress
			else
				return Email

		DerivedAddress is a DerivedField
			type is Text
			restricted
			default label is "StreetAddress"
			return Address	

		DerivedContactNameID is a DerivedField
			type is Alpha 101
			default label is "Name"
			return DerivedName + " (" + Contact + ")"

		IsPrimaryMesssage is a MessageField
			"Primary"

		PrimaryContactDisplay is a DerivedField
			type is MessageField
			default label is "Contact"
			if (IsPrimary)
				return "Primary"

		DerivedContactInitials is a DerivedField
			type is AlphaUpper 2
			if (ContactFromRepository)
				return Contact.EmployeeInitials
			else
				return Name.GivenNameInitial + Name.FamilyNameInitial
		
		DerivedOneYearReplicationData is a DerivedField
        	type is Boolean
            if ((current date - create date) <  360)
                return true
            else
                return false
		
	Conditions
		EligibleForSourcing
			restricted
			when (Contract.SourcingEligible)
		IsPrimary
			restricted
			when (PrimaryContact)
		ContactFromRepository
			restricted
			when (Contact entered)
		EmailAddressExists
			restricted
			when (DerivedEmail entered)
		ContactExists
			restricted
			when (ContractAttachedContact exists)
		AnonymizeLogAnonymizeRelExists
			restricted
			when (first AnonymizeLogAnonymizeRel exists)

		AnonymizeLogPurgeRelExists
			restricted
			when (first AnonymizeLogPurgeRel exists)


		PhoneNumberExists
			restricted
			when (DerivedPhone entered)
		
		IsContractActive
			restricted
			when (Contract.ContractStatus.Active)

		CanUseAdditionalSecurityAccessField
			restricted
			when (ContactFromRepository)

		CanSetAdditionalSecurityAccess
			restricted
			when (!AdditionalSecurityAccess
			and CanUseAdditionalSecurityAccessField)
		
		CanRemoveAdditionalSecurityAccess
			restricted
			when (AdditionalSecurityAccess
			and CanUseAdditionalSecurityAccessField)

		EmployeeHasNoSecurity
			restricted
			when (Contact.ContractClassificationGroup = blank
			and   !Contact.HasContractAdditionalSecurity)
		
	Sets

		ByPrimary
			Sort Order
				ContractGroup
				Contract
			Instance Selection
				where (IsPrimary)

		ByContact
			duplicates
			Sort Order
				ContractGroup
				Contract
				Contact


		ByContactInGroup
			Sort Order
				ContractGroup
				Contact
				Contract
				ContractAttachedContact

		ByContactFirst
			Sort Order
				Contact
				ContractGroup
				Contract
				ContractAttachedContact

	Field Groups
		ContractContact
			ContractGroup
			Contract
			Contact

		ContractName
			Contract
			Name

	Relations
		ContractPrimaryRel
			one-to-many relation to ContractAttachedContact
			Field Mapping uses ByPrimary
				related.ContractGroup 						= ContractGroup
				related.Contract 							= Contract
		HasAnotherPrimaryContactRel
			one-to-many relation to ContractAttachedContact
			Field Mapping uses symbolic key
				related.ContractGroup 						= ContractGroup
				related.Contract 							= Contract
			Instance Selection
				where ((related.ContractAttachedContact		!= ContractAttachedContact)
				and    (related.PrimaryContact))

		AnonymizeLogAnonymizeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByContractContact
				related.FinanceEnterpriseGroup	= ContractGroup.FinanceEnterpriseGroup
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractAttachedContact = ContractAttachedContact
			Instance Selection
				where (related.Status.Anonymized)

		AnonymizeLogPurgeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByContractContact
				related.FinanceEnterpriseGroup	= ContractGroup.FinanceEnterpriseGroup
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractAttachedContact = ContractAttachedContact
			Instance Selection
				where (related.Status.AuditLogPurged)

		ContractContactRel
			one-to-many relation to ContractAttachedContact
			Field Mapping uses ByContactInGroup
				related.ContractGroup		= ContractGroup
				related.Contact	 			= Contact
			Instance Selection
				where (related.ContractGroup 	= ContractGroup
				and    related.Contact	     	= Contact
				and    Contact                  entered)

		ContractContactOnContractRel
			one-to-many relation to ContractAttachedContact
			Field Mapping uses ByContactInGroup
				related.ContractGroup		= ContractGroup
				related.Contact	 			= Contact
				related.Contract			= Contract
			Instance Selection
				where (related.ContactType  = ContactType)

		ContractDeliverableContactRel is a ContractDeliverableContact set
			Instance Selection
				where (related.ContractGroup 				= ContractGroup
				and    related.Contract	     				= LocalCheckContractDeliverable.CheckContract
				and    related.ContractDeliverable			= LocalCheckContractDeliverable.CheckContractDeliverable
				and    related.ContractAttachedContact		= ContractAttachedContact)

		ContractMilestoneContactRel is a ContractMilestoneContact set
			Instance Selection
				where (related.ContractGroup 				= ContractGroup
				and    related.Contract	     				= LocalCheckContractMilestone.CheckContract
				and    related.ContractMilestone			= LocalCheckContractMilestone.CheckContractMilestone
				and    related.ContractMilestoneContact 	= ContractAttachedContact)

	 	ContractGroupEmailTemplate2Rel
			one-to-one relation to ContractGroupEmailTemplate2
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup

	Field Rules
		PerformanceEvaluator
			constraint (ContactFromRepository)
				"MustBeAnEmployeeToBeAnEvaluator"

		PrimaryContact
			constraint (ContactFromRepository)
				"PrimaryContactCannotBeAnAdhocContact"

	Create Exit Rules

		if (PrimaryContact)
			invoke FastUpdateWithoutEdits Contract
				invoked.UpdateContractSearchDocument = true

	Actions

		CreateContactFromEmployee is a Create Action
			valid when (Contract.NotClosed)
			Field Rules

				SSContact
					if (!Contract.CreateByCopy)
						default to true

				PrimaryContact
					if (PrimaryContact
					and !ContractGroup.AllowActiveUpdate)
						constraint (Contract.DraftOrAddendumOrAmendment)
							"NewContactCannotBeSetToPrimaryUnlessContractIsInDraftOrAddendumOrAmendmentState"
				SupplierCanView
					if (ContactType entered)
						default to ContactType.DefaultSupplierCanView
					else
						default to true

			Action Rules
				if (PrimaryContact)
					if (HasAnotherPrimaryContactRel exists)
						invoke UpdateContractAttachedContact HasAnotherPrimaryContactRel
							invoked.PrimaryContact = false
					if (SecondaryContact)
						SecondaryContact           = false

		CreateContactFromEmployeeWithAccess is a Create Action
			valid when (Contract.NotClosed)
			Field Rules

				SSContact
					if (!Contract.CreateByCopy)
						default to true

				PrimaryContact
					if (PrimaryContact
					and !ContractGroup.AllowActiveUpdate)
						constraint (Contract.DraftOrAddendumOrAmendment)
							"NewContactCannotBeSetToPrimaryUnlessContractIsInDraftOrAddendumOrAmendmentState"
				SupplierCanView
					if (ContactType entered)
						default to ContactType.DefaultSupplierCanView
					else
						default to true
				AdditionalSecurityAccess
					default to true

			Action Rules
				if (EmployeeHasNoSecurity)
					confirmation required
						"Warning:ThisActionIsDesignedToRestrictEmployeeAccessToOnlyASpecificSetOfContracts.TakingThisActionForThisEmployeeWillLimitTheirAccessToOnlyThisContract.ToAvoidTheRestrictionOfAccess,TakeThe\"\Create_Contact_From_Employee\\\"action;DoYouWantToContinue?"
				if (PrimaryContact)
					if (HasAnotherPrimaryContactRel exists)
						invoke UpdateContractAttachedContact HasAnotherPrimaryContactRel
							invoked.PrimaryContact = false
					if (SecondaryContact)
						SecondaryContact           = false

		CreateAdHocContact is a Create Action
			valid when (Contract.NotClosed)
			Field Rules
				SSContact
					if (!Contract.CreateByCopy)
						default to true

				SupplierCanView
					if (ContactType entered)
						default to ContactType.DefaultSupplierCanView
					else
						default to true

			Action Rules
				if (PrimaryContact)
					if (HasAnotherPrimaryContactRel exists)
						invoke UpdateContractAttachedContact HasAnotherPrimaryContactRel
							invoked.PrimaryContact = false
					if (SecondaryContact)
						SecondaryContact           = false

		Update is an Update Action
			valid when (Contract.NotClosed)
			Field Rules
				PrimaryContact
					if  (PrimaryContact changed
					and !ContractGroup.AllowActiveUpdate)
						constraint (Contract.DraftOrAddendumOrAmendment)
							"ContractMustBeInAmendment,AddendumOrDraftStatusToChangePrimaryContact"

						PrimaryContactChanged =true

			Action Rules

				if (PrimaryContact)
					if (HasAnotherPrimaryContactRel exists)
						invoke UpdateContractAttachedContact HasAnotherPrimaryContactRel
							invoked.PrimaryContact = false
					if (SecondaryContact)
						SecondaryContact           = false

			Exit Rules
				if (PrimaryContactChanged)
					invoke FastUpdateWithoutEdits Contract
						invoked.UpdateContractSearchDocument = true

		UpdateContractAttachedContact is an Update Action
			restricted

		AddAccess is an Instance Action
			valid when (CanSetAdditionalSecurityAccess)
			
			Action Rules
				if (EmployeeHasNoSecurity)
					confirmation required
						"Warning:ThisActionIsDesignedToRestrictEmployeeAccessOnlyASpecificSetOfContracts.TakingThisActionForThisEmployeeWillLimitThierAccessToOnlyThisContract;DoYouWantToContinue?"
				AdditionalSecurityAccess = true
		
		RemoveAccess is an Instance Action
			valid when (CanRemoveAdditionalSecurityAccess)
			
			Action Rules
				AdditionalSecurityAccess = false

		Delete is a Delete Action
			valid when (Contract.NotClosed)
			Action Rules
				if (PrimaryContact)
					constraint (Contract.DraftOrAddendumOrAmendment)
   						"ContractMustBeInAmendment,AddendumOrDraftStatusToDeletePrimaryContact"

   					invoke FastUpdateWithoutEdits Contract
						invoked.UpdateContractSearchDocument = true
   		MassUpdateContacts is a Set Action
   			Parameters
				ContractGroup
				FromContact				is an Employee
				ToContact               is an Employee

			Instance Selection
				where (ContractGroup   = ContractGroup
				and    FromContact     = Contact)

			Action Rules

				Instance Rules

					Contact = ToContact

		Anonymize is an Instance Action	
			restricted

			Action Rules
				constraint (!ContactFromRepository)
					"CannotPurgeContactCreatedFromEmployee"
				if (AnonymizeLogAnonymizeRelExists)
					confirmation required
						"Warning,TheAnonymizeActionIsNonReversableAndAnonymizeRecordAlreadyExists;AreYouSureYouWantToContinue?"
					confirmation required
						"ProceedToAnonymizeAgain?"
				else
					confirmation required
						"Warning,TheAnonymizeActionIsNonReversable;AreYouSureYouWantToContinue?"
					confirmation required
						"ProceedToAnonymize?"

  				initialize Name
				initialize Address
				initialize Phone
				initialize Email

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= ContractGroup.FinanceEnterpriseGroup
					invoked.Status						= 1
					invoked.AffectedBusinessClass		= "PO3"
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractAttachedContact     = ContractAttachedContact

		PurgeAuditLog is an Instance Action	
			restricted

			Action Rules
				constraint (AnonymizeLogAnonymizeRelExists)
					"CannotPurge;VendorMustBeAnonymizedFirst"
				if (AnonymizeLogPurgeRelExists)
					confirmation required
						"Warning,ThePurgeAuditLogActionIsNonReversableAndAnonymizeRecordAlreadyExists;AreYouSureYouWantToContinue?"
					confirmation required
						"ProceedToPurgeAuditLogAgain?"
				else
					confirmation required
						"Warning,ThePurgeAuditLogActionIsNonReversable;AreYouSureYouWantToContinue?"
					confirmation required
						"ProceedToPurgeAuditLog?"

				invoke purge audit log entries

		  	Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= ContractGroup.FinanceEnterpriseGroup
					invoked.Status						= 2
					invoked.AffectedBusinessClass		= "PO3"
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractAttachedContact     = ContractAttachedContact

		Purge is a Purge Action
			restricted

