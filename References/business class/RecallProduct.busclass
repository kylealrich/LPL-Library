RecallProduct is a BusinessClass
    owned by recall
    prefix is RMRP

    Ontology
    	symbolic key is RecallProduct

    Patterns
    	implements ContextualParent
    	implements CompoundDocument
        	Document Components
				RecallProductLot set
				RecallProductSerial set
				RecallEquipmentSerial set
				RecallProductQuestion set
				RecallProductTransaction set
				RecallProductParsedDescription set

	Persistent Fields
		ProductName						is Alpha size 1000
			default label is "Product"
		ProductDescription				is Text
			default label is "Description"
			text searchable
		RecallTaskInstruction
		TaskInstructionDescription
		UOM 							is a UnitOfMeasure
		ManufacturerInformation			is a RecallManufacturerInformation
		VendorItem						is like VendorItem
		GlobalTradeItemNumber			is like ItemGTIN
		UDI                             is Alpha size 150
		UPC								is like ItemUPC
		UPN1							is like HIBCCItemUPN
			default label is "HIBCC-DI"
		UPN2							is like UCCEANItemUPN
		SKU								is like ItemSKU
		NDC								is like NationalDrugCode
		ModelNumber						is AlphaUpper size 30
		ProposedManufacturerNumber		is like ManufacturerNumber
		ProposedGlobalTradeItemNumber	is like ItemGTIN
		ProposedValue					is a Description3
			default label is "ProductJustification_orROI"
	    LatexFree						is Boolean
	    ProductServiceLine				is Alpha size 30
	    ProposedVendorItem				is like VendorItem
	    UnitCost
	    	precision is DerivedNumberOfDecimalsCost
	    ExpectedMonthlyUsage			is Numeric 10
	    CurrentContract					is a Contract
	    ItemUOMContract
	    ItemCreated						is an Item
	    TotalQuantityIdentified			is Decimal size 13.4
	    	precision is DerivedNumberOfDecimals
	    	default label is "QuantityIdentified"
		SelectedForTrialRequisition		is Boolean
		TrialQuantity					is an UnsignedQuantity
		TrialUnitOfMeasure				is a UnitOfMeasure

	Transient Fields
		CopiedFromAnotherNotice is Boolean

   	Local Fields
   		LocalCompany					is like Company 
   		LocalItem						is like Item
   		LocalVendorItem					is like VendorItem
   		LocalManufacturerInformation	is like ManufacturerInformation
   		LocalRecallProductQuestion		is a RecallProductQuestion view
   		LocalNDC						is like NationalDrugCode
   		LocalUPN1                       is like HIBCCItemUPN
		LocalPriority					is Numeric size 2
		LocalDueDate					is TimeStamp
   		LocalAlphaGTIN 					is like ItemGTIN
		LocalTask						is a RecallNoticeTask
		LocalRecallGroup                is like RecallGroup
		LocalRecallNotice               is like RecallNotice
		LocalRecallProduct              is like RecallProduct

   	Derived Fields
   		ViewSerialMessage is a MessageField
   			restricted
   			"ViewSerialNumbers"
   			
   		EnterSerialMessage is a MessageField
   			restricted
   			"EnterSerialNumbers"
   		
   		SerialNumberEntryText is a ConditionalField
   			type is Text 
   			restricted
   			if (HasEnteredSerialNumbers)
   				ViewSerialMessage
   			else
   				EnterSerialMessage
   				
   		ViewLotMessage is a MessageField
   			restricted
   			"ViewLotNumbers"
   			
   		EnterLotMessage is a MessageField
   			restricted
   			"EnterLotNumbers"
   		
   		ManufacturerNumberLabelRequired is a MessageField
   			"*ManufacturerNumber"
   		
   		ManufacturerNumberLabel is a MessageField
   			"ManufacturerNumber"
   		
   		DerivedManufacturerNumberLabel is a ConditionalField
   			type is Alpha 50
			if (ItemGroupRel.RequireManufacturerOnNewInterfaceItems)
				ManufacturerNumberLabelRequired
			else
				ManufacturerNumberLabel   			
   		
   		LotNumberEntryText is a ConditionalField
   			type is Text 
   			restricted
   			if (HasEnteredLotNumbers)
   				ViewLotMessage
   			else
   				EnterLotMessage
   				
   		NewProposedItemBuyUOM is a DerivedField
   			type is AlphaUpper size 4
   			restricted
   			if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UseForBuying = true)
   				return ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure
   			else
   			if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UseForBuying = true)
   				return ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UnitOfMeasure
   			else
   			if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UseForBuying = true)
   				return ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UnitOfMeasure
   			else
   			if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UseForBuying = true)
   				return ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UnitOfMeasure   			
   		
   		ViewQuestionsMessage is a MessageField
   			restricted
   			"ViewQuestions"
   			
   		EnterQuestionsMessage is a MessageField
   			restricted
   			"EnterQuestions"
   		
   		QuestionEntryText is a ConditionalField
   			type is Text
			restricted
   			if (RecallProductQuestion set exists)
   				ViewQuestionsMessage
   			else
   				EnterQuestionsMessage
   		
   		ProductQuestionCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (RecallProductQuestion set exists)
				return "(" + instance count of NonItemProposalQuestionRel + ")"
			else
				return ""
		
		ItemCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (RecallProductItem set exists)
				return "(" + instance count of RecallProductItem set + ")"
			else
				return ""
		
		SerialNumberCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (RecallProductSerial set exists)
				return "(" + instance count of RecallProductSerial set + ")"
			else
				return ""
		
		LotNumberCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (RecallProductLot set exists)
				return "(" + instance count of RecallProductLot set + ")"
			else
				return ""
   		
   		EquipmentSerialNumberCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (RecallEquipmentSerial set exists)
				return "(" + instance count of RecallEquipmentSerial set + ")"
			else
				return ""
		
		DerivedNumberOfDecimals is a DerivedField
			type is Numeric size 1
			restricted
			if (first RecallProductItem set.Item exists)
				return first RecallProductItem set.Item.NumberOfDecimalsQuantity
			else
				return RecallGroup.first InventoryCompaniesByItemGroupRel.NumberOfDecimalsQuantity
				
		DerivedNumberOfDecimalsCost is a DerivedField
			type is Numeric size 1
			restricted
			if (first RecallProductItem set.Item exists)
				return first RecallProductItem set.Item.NumberOfDecimalsQuantity
			else
				return RecallGroup.first InventoryCompaniesByItemGroupRel.NumberOfDecimalsCost

		SerialNumbersMessage is a MessageField
			restricted
			"SerialNumbers"
			
		LotNumbersMessage is a MessageField
			restricted
			"LotNumbers"
		
		DerivedDetailHeading is a DerivedField
			type is Alpha 15
			restricted
			if (HasEnteredSerialNumbers)
				return SerialNumbersMessage
			else
			if (HasEnteredLotNumbers)
				return LotNumbersMessage
		
		DerivedStrippedManufacturerNumber is a DerivedField
			type is like ManufacturerNumber
			return com.lawson.apps.procurement.base.StringUtils.stripNonAlphaNumeric(ManufacturerInformation.ManufacturerNumber)
			
		DerivedStrippedVendorItem is a DerivedField
			type is AlphaUpper size 32
			return com.lawson.apps.procurement.base.StringUtils.stripNonAlphaNumeric(VendorItem)

		DerivedGTINLocalValue is a DerivedField 
			type is Alpha size 150
			return UDI[05:18]

		DerivedHIBCCDILocalValue is a DerivedField 
			type is Alpha size 150
			return UDI[02:24]			

   	Field Groups
   		TextIndexFields
   			ProductName
   			ProductDescription
   			ManufacturerInformation
   			
   		ProductIdentifiers
   			ManufacturerInformation
		    VendorItem
		    GlobalTradeItemNumber
		    UPC
		    UPN1
		    UPN2
		    SKU
		    NDC
			UDI
   			
   	Field Rules
   		ProductName
   			required
   				"NameIsRequired"
   				
		ProductDescription
			default to ProductName

   		RecallTaskInstruction
			initial value is RecallNotice.RecallTaskInstruction	
			default to RecallNotice.RecallTaskInstruction
			if (RecallTaskInstruction entered)
				constraint (RecallTaskInstruction.ValidForNotices)
					"TaskInstructionMustBeValidForNotices"			
			if (RecallTaskInstruction changed)
				force default TaskInstructionDescription to RecallTaskInstruction.Description
				if (HasProductQuestions)
					if (RecallTaskInstruction.HasQuestions)
						confirmation required
							"ExistingQuestionsWillBeReplacedWithTheQuestionsAssociatedWithTaskInstruction<RecallTaskInstruction>;WouldYouLikeToContinue?"
					else
						confirmation required
							"ExistingQuestionsWillBeDeleted;WouldYouLikeToContinue?"
				
				for each NonItemProposalQuestionRel
					invoke Delete each

				if (RecallTaskInstruction exists)
					for each RecallTaskInstruction.RecallTaskInstructionQuestion set
						invoke Create RecallProductQuestion
							assign result to LocalRecallProductQuestion 
							invoked.RecallGroup		= RecallGroup
							invoked.RecallNotice	= RecallNotice
							invoked.RecallProduct	= RecallProduct
							fill in fields from each
							
						for each each.RecallTaskInstructionQuestionValue set
							invoke Create RecallProductQuestionValue
								invoked.RecallGroup			  = RecallGroup
								invoked.RecallNotice		  = RecallNotice
								invoked.RecallProduct	 	  = RecallProduct
								invoked.RecallProductQuestion = LocalRecallProductQuestion.RecallProductQuestion
								fill in fields from each
			
    	TaskInstructionDescription
    		initial value is RecallNotice.TaskInstructionDescription
    		
   		ManufacturerInformation
   			ManufacturerInformation.Manufacturer = RecallNotice.ManufacturerCodeDivision
   		
   		UnitCost
   			if (ProposedItemNotSubmitted)
   				required
   				   		
   		ProposedValue
   			if (ProposedItemNotSubmitted)
   				required
   		
   		ProposedVendorItem
   			if (ProposedItemNotSubmitted)
   				if (RecallNotice.ReportedBySupplierEntered)
					required
   						"MyItemNumberIsRequired"
				if (RecallNotice.ReportedByRecallUserEntered)
					required 
						"ProposedVendorItemIsRequired"
   				
   			if (ProposedVendorItemByVendorAndVendorItemRel exists)
				ItemCreated =  ProposedVendorItemByVendorAndVendorItemRel.Item  				
   
   		TrialUnitOfMeasure
 		
 			if (ItemCreated !entered)
				constraint (TrialUnitOfMeasure = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure
				or TrialUnitOfMeasure = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UnitOfMeasure
				or TrialUnitOfMeasure = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UnitOfMeasure
				or TrialUnitOfMeasure = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UnitOfMeasure)
					"MustEnterAValidUnitOfMeasureForEachSelectedProduct"	
			else 
			if (ItemCreated entered)
				constraint (ItemUOMRel exists)
					"<TrialUnitOfMeasure>IsAnInvalidUnitOfMeasureForThisItem"
        		constraint (ItemUOMRel.OKForBuying)	
        			"<TrialUnitOfMeasure>IsNotValidForThisItem"
   						
   	Conditions

		ItemProposalFromSupplier 
			restricted 
			when (RecallNotice.ReportedBySupplierEntered)
		
		OnlyOneUOMAndSpecialItem
			restricted
			when (ItemCreated !entered
			and   ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UnitOfMeasure !entered
			and   ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UnitOfMeasure !entered
			and   ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UnitOfMeasure !entered)
		
		SubmittedItemProposal
			restricted
			when (RecallNotice.ProposedItem = 1)
		   
		SubmittedOrTrialItemProposal   
			restricted 
			when (SubmittedItemProposal
			or   (ItemGroupRel.RequireManufacturerOnNewInterfaceItems
			and   RecallNotice.ProposedItem = 5))
		
		ProductIdentifiersEntered 
			restricted 
			when (ManufacturerInformation entered
		    or    VendorItem entered
		    or    GlobalTradeItemNumber entered)
		
		HasProductItems
   			restricted
   			when (RecallProductItem set exists)
   	
   		HasActivity
   			restricted
   			when (RecallNotice.LastProductActivityQuery entered
   			and	  TransactionActivityRel exists)
   			
   		HasNoActivity
   			restricted
   			when (RecallNotice.LastProductActivityQuery entered
   			and	  !TransactionActivityRel exists)
   			
   		ReviewersExist
   			restricted
   			when (ProposedItemReviewerRel exists)
   		
   		HasRequisitions
   			restricted
   			when (RequsitionLineActivityRel exists)
   			
		HasRequisitionsWithTask
			restricted 
			when (HasRequisitions
			and   RecallNotice.NonManualTasksExist)

		HasRequisitionsNoTask
			restricted 
			when (HasRequisitions
			and  !RecallNotice.NonManualTasksExist)

   		HasProcurementTemplates
   			restricted
   			when (ProcurementTemplateLineActivityRel exists)
   			
   		HasPatientProcedures
   			restricted
   			when (PatientProcedureActivityRel exists)
   		
   		HasContracts
   			restricted
   			when (ContractLineActivityRel exists)
   			
   		HasPurchaseOrders
   			restricted
   			when (PurchaseOrderLineActivityRel exists)
   			
   		HasPurchaseOrdersWithTask
			restricted
			when (HasPurchaseOrders
			and   RecallNotice.NonManualTasksExist)

		HasPurchaseOrdersNoTask
			restricted 
			when (HasPurchaseOrders
			and  !RecallNotice.NonManualTasksExist)
		
		HasPolinesrc
   			restricted
   			when (PolinesrcActivityRel exists)
   			
		HasPolinesrcWithTask
   			restricted
   			when (PolinesrcActivityRel exists
			and   RecallNotice.NonManualTasksExist)

		HasPolinesrcNoTask
   			restricted
   			when (PolinesrcActivityRel exists
			and  !RecallNotice.NonManualTasksExist)			

   		HasInventory
   			restricted
   			when (InventoryActivityRel exists)
   			
   		HasParLocations
   			restricted
   			when (ParLocationActivityRel exists)
   			
   		HasIntransitTransfers
   			restricted
   			when (IntransitTransferActivityRel exists)
   			
   		HasIssues
   			restricted
   			when (RecentIssueActivityRel exists)
   			
   		HasSourcingEvents
   			restricted
   			when (SourcingEventLineActivityRel exists)
   			
   		HasEquipment
   			restricted
   			when (EquipmentActivityRel exists)
   			
   		HasSerialNumbers
   			restricted
   			when (SerialNumberActivityRel exists)
   			
   		HasLotNumbers
   			restricted
   			when (LotNumberActivityRel exists)
   		
		HasIssueDetail
			restricted
			when (IssueDetailActivityRel exists)
		
		HasIntransitTransfersDetail
			restricted
			when (IntransitTransferDetailActivityRel exists)
		
   		HasSerialOrLotNumbers	
   			restricted
   			when (HasEnteredSerialNumbers
   			or	  HasEnteredLotNumbers)
   				
   		HasEnteredSerialNumbers
   			restricted
   			when (RecallProductSerial set exists)
   			
   		HasEnteredLotNumbers
   			restricted
   			when (RecallProductLot set exists)
   			
		HasOrganizationsOnly
			restricted
			when (ManualOrganizationRel exists)

   		ItemCreatedFromProposedVendorItem
   			restricted
   			when (ProposedVendorItemByVendorAndVendorItemRel exists)
   		
   		ShowSerialNumberPanel
   			restricted
   			when (!RecallNotice.Equipment
   			and  ((!RecallProductSerial set exists
   			and	   !RecallProductLot set exists)
   			or     HasEnteredSerialNumbers))
   		
   		ShowLotNumberPanel
   			restricted
   			when (!RecallNotice.Equipment
   			and  ((!RecallProductSerial set exists
   			and	   !RecallProductLot set exists)
   			or     HasEnteredLotNumbers))
   		
   		HasProductQuestions
   			restricted
   			when (NonItemProposalQuestionRel exists)
   			
   		AllowDescriptionToBeParsed
   			restricted
   			when (ProductDescription entered
   			and   !RecallProductParsedDescription set exists
   			and   RecallNotice.RecallNoticeUpdatable)
   		
   		DescriptionHasBeenParsed
   			restricted
   			when (RecallProductParsedDescription set exists
   			and   RecallNotice.RecallNoticeUpdatable)
   		
   		ValidGlobalTradeItemNumber
   			restricted
			when (LocalAlphaGTIN[12] entered
			or	  LocalAlphaGTIN[13] entered
			or	  LocalAlphaGTIN[14] entered)
		
		ProductHasAssignedTask	
			restricted
    		when (RecallNoticeTaskProductRel exists)
		
		MfgCodeDivNotEntered
			restricted
			when (ManufacturerInformation.ManufacturerNumber entered
			and	  !ManufacturerInformation.Manufacturer entered)	
			
		HasItemMaster  
			restricted
			when (ItemMasterRecallProductItemRel exists)
			
		HasTaskItems
			restricted
			when (RecallProductTaskItemRel exists)

		VendorEntered
			restricted
			when (RecallNotice.Vendor entered)
			
		ItemAndManufItemNotOnRecall	
			restricted
			when (ItemExistsOnProductRel !exists
			and   ManufInformationExistsOnProductRel !exists)
			
		ItemAndManufItemAndVendorItemNotOnRecall
			restricted
			when (ItemExistsOnProductRel !exists
			and   ManufInformationExistsOnProductRel !exists
			and   VendorItemExistsOnProductRel !exists)
			
		VendorItemNotOnRecall
			restricted
			when (VendorItemExistsOnProductRel !exists)
		
		GTINNotOnRecall 
			restricted 
			when (GTINExistsOnProductRel !exists)
		
		GTINUDINotOnRecall
			restricted 
			when (GTINUDIExistsOnProductRel !exists)
		
		HIBCCDIUDINotOnRecall
			restricted 
			when (HIBCCDIUDIExistsOnProductRel !exists)

		ItemNotOnRecall
			restricted
			when (RecallProductItemByItemRel !exists)
			
		NDCNotOnRecall
			restricted
			when (NDCExistsOnProductRel !exists) 
		
		UPN1NotOnRecall 
			restricted 
			when (UPN1ExistsOnProductRel !exists )

		TrialRequisitionLinesExist
			restricted
			when (TrialRequisitionLinesRel exists)

		NotProposedItem
			restricted
			when (RecallNotice.ProposedItem.NotApplicable)
		
		ProposedItemNotSubmitted
			restricted
			when (RecallNotice.ProposedItem.ProposedNotSubmitted)
		
		ProposedItemSubmitted
			restricted
			when (RecallNotice.ProposedItem.ProposedSubmitted
			or    RecallNotice.ProposedItem.Approved
			or    RecallNotice.ProposedItem.Rejected
			or    RecallNotice.ProposedItem.ApprovedPendingTrial)
		
		OpenProposedItem
			restricted
			when ((RecallNotice.ProposedItem.ProposedSubmitted
			or    RecallNotice.ProposedItem.ApprovedPendingTrial)
			and   RecallNotice.Status.Pending)
		
		CanSelectForTrialRequisition
			restricted
			when (RecallNotice.CanCreateTrialRequisitions
			and  !SelectedForTrialRequisition)
			
		CanDelete
			restricted
			when (RecallNotice.RecallNoticeUpdatable
			and  (NotProposedItem
			or    ProposedItemNotSubmitted))
		
		ManufItemNotOnRecall
			restricted
			when (ManufInformationExistsOnProductRel !exists)
		
		FirstUOMEntered
			restricted
			when (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure entered)
		
		SecondUOMEntered
			restricted
			when (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UnitOfMeasure entered)
			
		ThirdUOMEntered
			restricted
			when (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UnitOfMeasure entered)
			
		FourthUOMEntered
			restricted
			when (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UnitOfMeasure entered)

		CurrentContractEntered
			restricted
			when (CurrentContract entered)
		
		ItemsBeingReplacedEntered
			restricted
			when (ManufacturerInformation.ManufacturerNumber entered
			or    GlobalTradeItemNumber entered
			or    VendorItem entered)

		ItemAndVendorItemNotOnRecall
			restricted
			when (ItemExistsOnProductRel !exists
			and   VendorItemExistsOnProductRel !exists)
						
		ItemEntered
			restricted
			when (ItemCreated entered)
			
		ItemsToReplaceEntered
			restricted
			when (VendorItem entered
			or    GlobalTradeItemNumber entered
			or    ManufacturerInformation.ManufacturerNumber entered)
		
		HasItemProposalQuestionAnswers
			restricted
			when (ItemProposalQuestionAnswerRel exists)
		
		ItemProposalQuestionsExist
			restricted
			when (ItemProposalQuestionRel exists)
		
		AllItemsEntered
			restricted
			when (ItemsNotEnteredRel !exists) 
		
		ManufacturerInformationContainsComma
			when (ManufacturerInformation.ManufacturerNumber contains ",")

		ManufacturerInformationLikeComma
			when (ManufacturerInformation.ManufacturerNumber like "*,*")

		HasNDCItems 
			when (HasNDCItemRel exists)

		HasItemMasterItems 
			when (HasItemMasterRel exists)
		
		LocationQuantitiesAllowed
			when (RecallGroup.EnterQuantitiesByLocation = true)
		
		CanCreateItemProposalFromSpreadsheet
			restricted 
			when (RecallNotice.ProposalItemEntryMethod.Attachment
			and  (RecallNotice.ProposedItem.ProposedNotSubmitted
			or    RecallNotice.ProposedItem.ProposedSubmitted))

		UseForBuyingUOMExists
			restricted
			when (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UseForBuying = true
			or    ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UseForBuying = true			
			or    ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UseForBuying = true
			or    ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UseForBuying = true)
					
   	Relations
   				
		ManualOrganizationRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses symbolic key
				related.RecallGroup      = RecallGroup
				related.RecallNotice     = RecallNotice
			Instance Selection
				where (related.FromManualTask)

   		ItemProposalQuestionAnswerRel
   			one-to-many relation to ResponseToSupplierItemRequestQuestion
   			Field Mapping uses part of key
    			related.RecallGroup      = RecallGroup
    			related.RecallNotice     = RecallNotice
    			related.RecallProduct    = RecallProduct
   		
		RequiredItemProposalQuestionsRel is a RecallProductQuestion set
  			Instance Selection
  				where (related.ResponseRequired
  				and    related.NewItemProposalQuestion)

        ItemUOMRel
            one-to-one relation to ItemUOM
            Field Mapping uses symbolic key
                related.ItemGroup     = RecallGroup
                related.Item          = ItemCreated
                related.UnitOfMeasure = TrialUnitOfMeasure

        ItemGroupRel
            one-to-one relation to ItemGroup
            Field Mapping uses symbolic key
                related.ItemGroup     = RecallGroup

   		TrialRequisitionLinesRel
   			one-to-many relation to RequisitionLine
   			Field Mapping uses symbolic key
   			Instance Selection
   				where (related.Requisition.TrialNotice = RecallNotice
   				and    related.VendorItem              = ProposedVendorItem)
   		
   		PoCompanyByProcurementGroupRel
   			one-to-many relation to PurchasingCompany
   			Field Mapping uses Set2
   				related.ProcurementGroup = RecallGroup
   				
		RecallProductParsedDescriptionRel
			one-to-many relation to RecallProductParsedDescription
			delete cascades
			Field Mapping uses symbolic key
    			related.RecallGroup      = RecallGroup
    			related.RecallNotice     = RecallNotice
    			related.RecallProduct    = RecallProduct

		RecallProductParsedDescriptionLocalRel
			one-to-many relation to RecallProductParsedDescription
			delete cascades
			Field Mapping uses symbolic key
    			related.RecallGroup      = LocalRecallGroup
    			related.RecallNotice     = LocalRecallNotice
    			related.RecallProduct    = LocalRecallProduct

    	ItemsNotEnteredRel
    		one-to-many relation to RecallProduct
    		Field Mapping uses symbolic key
    			related.RecallGroup      = RecallGroup
    			related.RecallNotice     = RecallNotice
    		Instance Selection
    			where (related.ItemEntered    = false
    			and    related.RecallProduct != RecallProduct)
    	
    	ItemByMfgNbrRel
    		one-to-many relation to Item
    		Field Mapping uses Set11
    			related.ItemGroup								   = RecallGroup
				related.ManufacturerNumberStripped				   = DerivedStrippedManufacturerNumber
			Instance Selection
				where (related.Manufacturer entered
				and  ((ManufacturerInformation.Manufacturer.ManufacturerDivision entered
				and    related.Manufacturer.ManufacturerDivision = ManufacturerInformation.Manufacturer.ManufacturerDivision
				and    related.Manufacturer.ManufacturerCode     = ManufacturerInformation.Manufacturer.ManufacturerCode)
				or    (related.Manufacturer.ManufacturerCode     = ManufacturerInformation.Manufacturer.ManufacturerCode)))
				
		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup     	= RecallGroup
				related.Item      		= ItemCreated
		
		VendorItemByMfgNbrRel
        	one-to-many relation to VendorItem
        	Field Mapping uses ByStrippedManufacturerNumber 
        		related.ProcurementGroup  						    = RecallGroup
				related.ManufacturerNumberStripped					= DerivedStrippedManufacturerNumber
			Instance Selection
				where  (related.Manufacturer.ManufacturerCode entered
				and	    related.Manufacturer.ManufacturerCode 		= ManufacturerInformation.Manufacturer.ManufacturerCode
				and	    related.Manufacturer.ManufacturerDivision 	= ManufacturerInformation.Manufacturer.ManufacturerDivision)
				
		VendorItemByVenMfgItemRel
        	one-to-many relation to VendorItem
        	Field Mapping uses ByStrippedManufacturerNumber
        		related.ProcurementGroup  						    = RecallGroup
        		related.ManufacturerNumberStripped					= DerivedStrippedManufacturerNumber
        		related.Vendor										= RecallNotice.Vendor 
			Instance Selection
				where  (related.Manufacturer.ManufacturerCode entered
				and	    related.Manufacturer.ManufacturerCode 		= ManufacturerInformation.Manufacturer.ManufacturerCode
				and	    related.Manufacturer.ManufacturerDivision 	= ManufacturerInformation.Manufacturer.ManufacturerDivision)

        VendorItemByVendorItemRel
        	one-to-many relation to VendorItem
        	Field Mapping uses ByStrippedVendorItemFirst
        		related.ProcurementGroup 	= RecallGroup
        		related.VendorItemStripped	= DerivedStrippedVendorItem
        		
        VendorItemByVendorAndVendorItemRel
        	one-to-many relation to VendorItem
        	Field Mapping uses ByStrippedVendorItem
        		related.ProcurementGroup 	= RecallGroup
        		related.Vendor			 	= RecallNotice.Vendor
        		related.VendorItemStripped 	= DerivedStrippedVendorItem
        		
        ProposedVendorItemByVendorAndVendorItemRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set3
        		related.ProcurementGroup 	= RecallGroup
        		related.Vendor			 	= RecallNotice.Vendor
        		related.VendorItem      	= ProposedVendorItem

        PurchaseOrderLineByVendorItemRel
        	one-to-many relation to PurchaseOrderLine
        	Field Mapping uses ByVendorItem 
        		related.VendorItem	= VendorItem
				
        PurchaseOrderLineByVendorItemAndVendorRel
        	one-to-many relation to PurchaseOrderLine
        	Field Mapping uses ByVendorItem 
        		related.VendorItem	= VendorItem
        	Instance Selection
        		where (related.Vendor = RecallNotice.Vendor)
				
        TransactionActivityRel
        	one-to-many relation to RecallProductTransaction
        	delete cascades
        	Field Mapping uses symbolic key
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   		
   		AssetItemModelRel 
   			one-to-many relation to AssetItem
   			Field Mapping uses ByModelNumber 
	           	related.FinanceEnterpriseGroup	= RecallGroup.FinanceEnterpriseGroup   			
   				related.ModelNumber = ModelNumber
   						
   		RequsitionLineActivityRel
        	one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 1 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   				
		ProcurementTemplateLineActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 2 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   				
		PatientProcedureActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 17 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		PurchaseOrderLineActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 4 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		InventoryActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 5 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		ParLocationActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 6 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		IntransitTransferActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 7 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		RecentIssueActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 8 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		EquipmentActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 9 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		SerialNumberActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 10 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   		
   		LotNumberActivityRel
   			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 11 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   		
   		SourcingEventLineActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 12 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   		
   		ContractLineActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 13 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
   						
		PolinesrcActivityRel
			one-to-many relation to RecallProductTransaction
        	Field Mapping uses ByActivityType
   				related.ActivityType	= 14 
   				related.RecallGroup		= RecallGroup
   				related.RecallNotice	= RecallNotice
   				related.RecallProduct	= RecallProduct
		
		IssueDetailActivityRel
			one-to-many relation to RecallProductTransaction
			Field Mapping uses ByActivityType
				related.ActivityType	 = 15 
				related.RecallGroup		 = RecallGroup
				related.RecallNotice	 = RecallNotice
				related.RecallProduct	 = RecallProduct
		
		IntransitTransferDetailActivityRel
			one-to-many relation to RecallProductTransaction
			Field Mapping uses ByActivityType
				related.ActivityType	 = 16 
				related.RecallGroup		 = RecallGroup
				related.RecallNotice	 = RecallNotice
				related.RecallProduct	 = RecallProduct
		
   		RecallProductItemRel
   			one-to-one relation to RecallProductItem
   			Field Mapping uses symbolic key
   				related.RecallGroup				= RecallGroup
   				related.RecallNotice			= RecallNotice
   				related.RecallProduct			= RecallProduct
   				related.RecallProductItem   	= LocalItem
   		
   		RecallProductItemByItemRel
   			one-to-many relation to RecallProductItem
   			Field Mapping uses ByItem
   				related.RecallGroup             = RecallGroup
   				related.Item					= LocalItem
   				related.RecallNotice			= RecallNotice
   				related.RecallProduct			= RecallProduct
   		
   		ItemExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.Item entered
   				and    related.Item = LocalItem)
   				
   		VendorItemExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.VendorItem = LocalVendorItem
   				and    related.VendorItem entered)
   		
   		GTINExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.GTIN entered
				and    related.GTIN = GlobalTradeItemNumber)

  		HIBCCDIUDIExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.HibccUpn entered
				and    related.HibccUpn = UDI)

  		GTINUDIExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.GTIN entered
				and    related.GTIN = UDI)

   		ManufInformationExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.ManufacturerInformation.ManufacturerNumber 			= LocalManufacturerInformation.ManufacturerNumber
   				and    related.ManufacturerInformation.ManufacturerNumber entered)
   		
   		HasNDCItemRel 
			one-to-many relation to RecallProductItem 
			Field Mapping uses ByNoticeNDC 
				related.RecallGroup 	= RecallGroup 
				related.RecallNotice	= RecallNotice
		
		HasItemMasterRel 
			one-to-many relation to RecallProductItem 
			Field Mapping uses symbolic key 
				related.RecallGroup 	= RecallGroup 
				related.RecallNotice    = RecallNotice 
			Instance Selection 
				where (related.IsItemMaster)			
		
		NDCExistsOnProductRel is a RecallProductItem set
   			Instance Selection
   				where (related.NDC = LocalNDC
   				and    related.NDC entered)

		UPN1ExistsOnProductRel is a RecallProductItem set 
			Instance Selection 
				where (related.HibccUpn = LocalUPN1
				and    related.HibccUpn entered)
   		
		PolineHelperListRel
   			one-to-many relation to PurchaseOrderLine
   			Field Mapping uses ByProcurementGroup
   				related.ProcurementGroup	= RecallGroup
   	
   		VendorPolineHelperListRel
   			one-to-many relation to PurchaseOrderLine
   			Field Mapping uses ByProcurementGroup
   				related.ProcurementGroup	= RecallGroup
   			Instance Selection
   				where (related.Vendor		= RecallNotice.Vendor)
   	
   		ItemGtinRel
   			one-to-many relation to ItemGTIN
   			Field Mapping uses Set2
   				related.ItemGroup	= RecallGroup
   				related.ItemGTIN	= GlobalTradeItemNumber
   				
   		ItemGTINForUDIRel
   			one-to-many relation to ItemGTIN
   			Field Mapping uses Set2
   				related.ItemGroup	= RecallGroup
   				related.ItemGTIN	= UDI		
   		HIBCCDIForUDIRel
   			one-to-many relation to HIBCCItemUPN
   			Field Mapping uses Set2
  				related.HIBCCItemUPN	= UDI
				related.ItemGroup		= RecallGroup

		ItemUPCRel
   			one-to-many relation to ItemUPC
   			Field Mapping uses Set2
   				related.ItemUPC	  = UPC
   				related.ItemGroup = RecallGroup
   		
   		HIBCCItemUPNRel
   			one-to-many relation to HIBCCItemUPN
   			Field Mapping uses Set2
   				related.HIBCCItemUPN  = UPN1
   				related.ItemGroup 	  = RecallGroup
   				
   		UCCEANItemUPNRel
			one-to-many relation to UCCEANItemUPN
   			Field Mapping uses Set2
   				related.UCCEANItemUPN  = UPN2
   				related.ItemGroup 	   = RecallGroup
   				
   		ItemSKURel
   			one-to-many relation to ItemSKU
   			Field Mapping uses Set2
   				related.ItemSKU   = SKU
   				related.ItemGroup = RecallGroup
   				
   		NationalDrugCodeRel
   			one-to-many relation to NationalDrugCode
   			Field Mapping uses Set2
   				related.NationalDrugCode   = NDC
   				related.ItemGroup 		   = RecallGroup
   		
   		ItemMasterRecallProductItemRel is a RecallProductItem set
   			Instance Selection
   				where (related.IsItemMaster)
   		
   		ProposedItemReviewerRel
   			one-to-many relation to RecallNoticeTask
   			Field Mapping uses symbolic key
    			related.RecallGroup	  = RecallGroup
    			related.RecallNotice  = RecallNotice   				
   		
   		RecallNoticeTaskProductRel
    		one-to-many relation to RecallNoticeTaskProduct
    		delete cascades
    		Field Mapping uses ByRecallProduct
    			related.RecallGroup	  = RecallGroup
    			related.RecallNotice  = RecallNotice
    			related.RecallProduct = RecallProduct
   		
   		LocalRecallProductTaskItemRel
    		one-to-many relation to RecallProductTaskItem
    		Field Mapping uses ByProductItemTask
    			related.RecallGroup	  			= RecallGroup
    			related.RecallNotice  			= RecallNotice
    			related.RecallProduct 			= RecallProduct
    			related.RecallProductItem		= LocalItem
	   			related.RecallNoticeTask		= LocalTask
			Instance Selection
				where (related.Company !entered)
   		
   		RecallProductTaskItemRel
    		one-to-many relation to RecallProductTaskItem
    		Field Mapping uses ByProductItemTask	
    			related.RecallGroup	  			= RecallGroup
    			related.RecallNotice  			= RecallNotice
    			related.RecallProduct 			= RecallProduct
   		
   		RecalProductTaskItemCountRel
    		one-to-many relation to RecallProductTaskItem
    		Field Mapping uses ByProductItemTask	
    			related.RecallGroup	  			= RecallGroup
    			related.RecallNotice  			= RecallNotice
    			related.RecallProduct 			= RecallProduct
    		Instance Selection
    			where (related.HasQuantities)   		
   		
   		RecallProductSerialRel
   			one-to-many relation to RecallProductSerial
   			delete cascades
   			Field Mapping uses symbolic key
   				related.RecallGroup	  			= RecallGroup
    			related.RecallNotice  			= RecallNotice
    			related.RecallProduct 			= RecallProduct
    			
    	ContractRel
    		one-to-one relation to Contract
    		Field Mapping uses symbolic key
    			related.ContractGroup       = RecallGroup
    			related.Contract            = CurrentContract
    	
    	SupplierContractsRel
    		one-to-many relation to Contract
    		Field Mapping uses BySupplier
    			related.ContractGroup       = RecallGroup
    			related.Supplier            = RecallNotice.Supplier
    	
    	RecallProductLotRel
   			one-to-many relation to RecallProductLot
   			delete cascades
   			Field Mapping uses symbolic key
   				related.RecallGroup	  			= RecallGroup
    			related.RecallNotice  			= RecallNotice
    			related.RecallProduct 			= RecallProduct   				
   	
		RecallProductQuestionRel
			one-to-many relation to RecallProductQuestion
			delete cascades
			Field Mapping uses symbolic key
				related.RecallGroup	  = RecallGroup
				related.RecallNotice  = RecallNotice
		   		related.RecallProduct = RecallProduct
		   		
		ItemProposalQuestionRel
			one-to-many relation to RecallProductQuestion
			delete cascades
			Field Mapping uses symbolic key
				related.RecallGroup	  = RecallGroup
				related.RecallNotice  = RecallNotice
		   		related.RecallProduct = RecallProduct
		   	Instance Selection
		   		where (related.NewItemProposalQuestion)
		   		
		NonItemProposalQuestionRel
			one-to-many relation to RecallProductQuestion
			delete cascades
			Field Mapping uses symbolic key
				related.RecallGroup	  = RecallGroup
				related.RecallNotice  = RecallNotice
		   		related.RecallProduct = RecallProduct
		   	Instance Selection
		   		where (!related.NewItemProposalQuestion)

	Sets
		ByManufacturerNumber
			indexed
			Sort Order
				ManufacturerInformation.ManufacturerNumber
				RecallGroup
				RecallNotice
				RecallProduct
				
		ByNDC
			Sort Order
				NDC
				RecallGroup
				RecallNotice
				RecallProduct

		ByItemCreated
			Sort Order
				RecallGroup
				ItemCreated
				RecallNotice
				RecallProduct
	
   	Rule Blocks
		CreateRecallProductQuestions
			if (RecallTaskInstruction exists)
				for each RecallTaskInstruction.RecallTaskInstructionQuestion set
					invoke Create RecallProductQuestion
						assign result to LocalRecallProductQuestion 
						invoked.RecallGroup		= RecallGroup
						invoked.RecallNotice	= RecallNotice
						invoked.RecallProduct	= RecallProduct
						fill in fields from each
						
					for each each.RecallTaskInstructionQuestionValue set
						invoke Create RecallProductQuestionValue
							invoked.RecallGroup			  = RecallGroup
							invoked.RecallNotice		  = RecallNotice
							invoked.RecallProduct	 	  = RecallProduct
							invoked.RecallProductQuestion = LocalRecallProductQuestion.RecallProductQuestion
							fill in fields from each
		
		CreateRecallProductItems 
			if (ManufacturerInformation.ManufacturerNumber entered)
				display "Steve;Manufacturer<ManufacturerInformation.Manufacturer>"
				if (ManufacturerInformation.Manufacturer entered)
					if (ItemByMfgNbrRel exists)
						for each ItemByMfgNbrRel
							LocalItem 										= each.Item
							LocalManufacturerInformation.Manufacturer 		= each.Manufacturer
							LocalManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
							if (ItemNotOnRecall)
								invoke Create RecallProductItem
									invoked.RecallGroup									= RecallGroup
									invoked.RecallNotice								= RecallNotice
									invoked.RecallProduct								= RecallProduct
									invoked.Item										= each.Item
									invoked.ManufacturerInformation.Manufacturer 		= ManufacturerInformation.Manufacturer 
									invoked.ManufacturerInformation.ManufacturerNumber 	= ManufacturerInformation.ManufacturerNumber

					else 
					if (RecallNotice.Vendor not entered)
						if (VendorItemByMfgNbrRel exists)
							for each VendorItemByMfgNbrRel
								LocalItem = each.Item
								LocalManufacturerInformation.Manufacturer = each.Manufacturer
								LocalManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
								if (ItemAndManufItemAndVendorItemNotOnRecall)
									invoke Create RecallProductItem
										invoked.RecallGroup				= RecallGroup
										invoked.RecallNotice			= RecallNotice
										invoked.RecallProduct			= RecallProduct
										invoked.Item					= each.Item
										invoked.VendorItem              = each.VendorItem
										invoked.ManufacturerInformation.Manufacturer = each.Manufacturer
										invoked.ManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
										invoked.Description             = each.VendorItemDescription
					
					else							
						if (VendorItemByVenMfgItemRel exists)
							for each VendorItemByVenMfgItemRel
								LocalItem = each.Item
								LocalManufacturerInformation.Manufacturer = each.Manufacturer
								LocalManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
								if (ItemAndManufItemNotOnRecall)
									invoke Create RecallProductItem
										invoked.RecallGroup				= RecallGroup
										invoked.RecallNotice			= RecallNotice
										invoked.RecallProduct			= RecallProduct
										invoked.Item					= each.Item
										invoked.VendorItem              = each.VendorItem
										invoked.ManufacturerInformation.Manufacturer = each.Manufacturer
										invoked.ManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
										invoked.Description             = each.VendorItemDescription

				
				LocalManufacturerInformation.ManufacturerNumber = ManufacturerInformation.ManufacturerNumber

				if (ManufItemNotOnRecall)
					invoke Create RecallProductItem
						invoked.RecallGroup								= RecallGroup
						invoked.RecallNotice							= RecallNotice
						invoked.RecallProduct							= RecallProduct
						if (ManufacturerInformation.Manufacturer entered)
							invoked.ManufacturerInformation.Manufacturer 	= ManufacturerInformation.Manufacturer
						else 
							invoked.ManufacturerInformation.Manufacturer    = RecallNotice.ManufacturerCodeDivision 
						invoked.ManufacturerInformation.ManufacturerNumber = ManufacturerInformation.ManufacturerNumber
				
	    	if (VendorItem entered)
				if (RecallNotice.Vendor not entered)
		   			if (VendorItemByVendorItemRel exists)
		   				for each VendorItemByVendorItemRel
							LocalItem = each.Item
							LocalVendorItem = each.VendorItem
							if (ItemAndVendorItemNotOnRecall)
								invoke Create RecallProductItem
									invoked.RecallGroup				= RecallGroup
									invoked.RecallNotice			= RecallNotice
									invoked.RecallProduct	        = RecallProduct
									invoked.Item					= each.Item
									invoked.VendorItem              = each.VendorItem
									invoked.ManufacturerInformation.Manufacturer = each.Manufacturer
									invoked.ManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
									invoked.Description             = each.VendorItemDescription
								

				else								
		   			if (VendorItemByVendorAndVendorItemRel exists)
		   				for each VendorItemByVendorAndVendorItemRel
							LocalItem = each.Item
							LocalVendorItem = each.VendorItem
							if (ItemAndVendorItemNotOnRecall)
								invoke Create RecallProductItem
									invoked.RecallGroup				= RecallGroup
									invoked.RecallNotice			= RecallNotice
									invoked.RecallProduct			= RecallProduct
									invoked.Item					= each.Item
									invoked.VendorItem              = each.VendorItem
									invoked.ManufacturerInformation.Manufacturer = each.Manufacturer
									invoked.ManufacturerInformation.ManufacturerNumber = each.ManufacturerNumber
									invoked.Description				= each.VendorItemDescription
									
				LocalVendorItem = DerivedStrippedVendorItem
				if (VendorItemNotOnRecall)
					invoke Create RecallProductItem
						invoked.RecallGroup			= RecallGroup
						invoked.RecallNotice		= RecallNotice
						invoked.RecallProduct		= RecallProduct
						invoked.VendorItem			= VendorItem
								
	    	if (GlobalTradeItemNumber entered)
				if (ItemGtinRel exists)
	   				LocalItem = first ItemGtinRel.Item
					if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup									= RecallGroup
							invoked.RecallNotice								= RecallNotice
							invoked.RecallProduct								= RecallProduct
							invoked.Item                    					= LocalItem
							invoked.ManufacturerInformation.Manufacturer		= first ItemGtinRel.Manufacturer 
							invoked.ManufacturerInformation.ManufacturerNumber	= first ItemGtinRel.ManufacturerNumber
							invoked.GTIN                                        = GlobalTradeItemNumber
				else 
				if (GTINNotOnRecall)
					invoke Create RecallProductItem 
		   				invoked.RecallGroup				= RecallGroup
						invoked.RecallNotice			= RecallNotice
						invoked.RecallProduct			= RecallProduct
						invoked.GTIN                    = GlobalTradeItemNumber								
   					
   			if (UPC entered)
	   			if (ItemUPCRel exists)
	   				LocalItem = first ItemUPCRel.Item
	   				if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
   		
	    	if (UPN1 entered)
	   			if (HIBCCItemUPNRel exists)
	   				LocalItem = first HIBCCItemUPNRel.Item
	   				if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.HibccUpn                 = UPN1
							invoked.Item                    = LocalItem
				else
				if (HIBCCItemUPNRel !exists)
					LocalUPN1 = UPN1
					if (UPN1NotOnRecall)
						invoke Create RecallProductItem
							invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
							invoked.HibccUpn                 = UPN1


	    	if (UPN2 entered)
	   			if (UCCEANItemUPNRel exists)
	   				LocalItem = first UCCEANItemUPNRel.Item
	   				if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
   					
	    	if (SKU entered)
	   			if (ItemSKURel exists)
	   				LocalItem = first ItemSKURel.Item
	   				if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
   					
	    	if (NDC entered)
	   			if (NationalDrugCodeRel exists)
	   				LocalItem = first NationalDrugCodeRel.Item
	   				if (ItemNotOnRecall)
		   				invoke Create RecallProductItem
		   					invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
							invoked.NDC                     = NDC
				else
				if (NationalDrugCodeRel !exists)
					LocalNDC = NDC
					if (NDCNotOnRecall)
						invoke Create RecallProductItem
							invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.Item                    = LocalItem
							invoked.NDC                     = NDC

			if (UDI entered)
				if (UDI !like "*(01)*"
				and UDI !like "*+*")
					if (ItemGTINForUDIRel exists)
						LocalItem = first ItemGTINForUDIRel.Item
						if (ItemNotOnRecall)
							invoke Create RecallProductItem
								invoked.RecallGroup									= RecallGroup
								invoked.RecallNotice								= RecallNotice
								invoked.RecallProduct								= RecallProduct
								invoked.Item                    					= LocalItem
								invoked.ManufacturerInformation.Manufacturer		= first ItemGTINForUDIRel.Manufacturer 
								invoked.ManufacturerInformation.ManufacturerNumber	= first ItemGTINForUDIRel.ManufacturerNumber
								invoked.GTIN                    					= UDI
					else 
					if (GTINUDINotOnRecall)
						invoke Create RecallProductItem 
							invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.GTIN                    = UDI	
				else 
				if (UDI like "*(01)*")
					UDI = DerivedGTINLocalValue
					if (ItemGTINForUDIRel exists)
						LocalItem = first ItemGTINForUDIRel.Item
						if (ItemNotOnRecall)
							invoke Create RecallProductItem
								invoked.RecallGroup									= RecallGroup
								invoked.RecallNotice								= RecallNotice
								invoked.RecallProduct								= RecallProduct
								invoked.Item                    					= LocalItem
								invoked.ManufacturerInformation.Manufacturer		= first ItemGTINForUDIRel.Manufacturer 
								invoked.ManufacturerInformation.ManufacturerNumber	= first ItemGTINForUDIRel.ManufacturerNumber
								invoked.GTIN                    					= UDI
					else 
					if (GTINUDINotOnRecall)
						invoke Create RecallProductItem 
							invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.GTIN                    = UDI		
				if (UDI like "*+*")
					UDI = DerivedHIBCCDILocalValue
					if (HIBCCDIForUDIRel exists)
						LocalItem = first HIBCCDIForUDIRel.Item
						if (ItemNotOnRecall)
							invoke Create RecallProductItem
								invoked.RecallGroup				= RecallGroup
								invoked.RecallNotice			= RecallNotice
								invoked.RecallProduct			= RecallProduct
								invoked.Item                    = LocalItem
								invoked.HibccUpn                = UDI
					else 
					if (HIBCCDIUDINotOnRecall)
						invoke Create RecallProductItem 
							invoked.RecallGroup				= RecallGroup
							invoked.RecallNotice			= RecallNotice
							invoked.RecallProduct			= RecallProduct
							invoked.HibccUpn                = UDI	

			if (!RecallNotice.ItemProposal
			and !RecallNotice.RecallSource.Supplier
			and !RecallNotice.RecallSource.Internal)
				initialize ManufacturerInformation
		    	initialize VendorItem
		    	initialize GlobalTradeItemNumber
		    initialize UPC
		    initialize UPN1
		    initialize UPN2
		    initialize SKU
		    initialize NDC
			initialize UDI
							
    Actions
    	Create is a Create Action
			valid when (RecallNotice.RecallNoticeUpdatable)
			Action Rules
				invoke FastUpdate RecallNotice
					invoked.PrmLastUpdateToProducts = current timestamp
			Exit Rules
				if (!CopiedFromAnotherNotice)
					if (RecallTaskInstruction entered)
						include CreateRecallProductQuestions
	    			
	    			if (ProductIdentifiers entered)
	    				include CreateRecallProductItems
    	
    	CreateFromWizard is a Create Action
			valid when (RecallNotice.RecallNoticeUpdatable)
			allow anonymous access
			Action Rules
				invoke FastUpdate RecallNotice
					invoked.PrmLastUpdateToProducts = current timestamp

			Exit Rules
				if (ProductIdentifiers entered)
					include CreateRecallProductItems

		CreateItemProposalFromSpreadsheet is a Create Action
			valid when (CanCreateItemProposalFromSpreadsheet)
			Action Rules 

				if (ItemGroupRel.RequireManufacturerOnNewInterfaceItems)
					constraint (ProposedManufacturerNumber entered)
						"MustEnterAManufacturerNumber"

				if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UOMConversion !entered)
					ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UOMConversion = 1
				ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UseForBuying  = true

				constraint (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure entered)
					"MustEnterAtLeastOneUOM"

				invoke FastUpdate RecallNotice
					invoked.PrmLastUpdateToProducts = current timestamp	

			Exit Rules 

				if (ProductIdentifiers entered)
					include CreateRecallProductItems				

		CreateItemProposalFromWizard is a Create Action
			default label is "Create"
			valid when (ProposedItemNotSubmitted)
			Action Rules
				constraint (UseForBuyingUOMExists)
					"MustEnterAtLeastOneUOMThatIsUseForBuying"

				if (ItemGroupRel.RequireManufacturerOnNewInterfaceItems)
					constraint (ProposedManufacturerNumber entered)
						"MustEnterAManufacturerNumber"

				invoke FastUpdate RecallNotice
					invoked.PrmLastUpdateToProducts = current timestamp	

			Exit Rules
				if (RecallGroup.ItemProposalQuestions entered)
					for each RecallGroup.ItemProposalQuestions.RecallTaskInstructionQuestion set
						invoke Create RecallProductQuestion
							assign result to LocalRecallProductQuestion 
							invoked.RecallGroup		= RecallGroup
							invoked.RecallNotice	= RecallNotice
							invoked.RecallProduct	= RecallProduct
							invoked.NewItemProposalQuestion = true
							fill in fields from each
						
						for each each.RecallTaskInstructionQuestionValue set
							invoke Create RecallProductQuestionValue
								invoked.RecallGroup				= RecallGroup
								invoked.RecallNotice			= RecallNotice
								invoked.RecallProduct			= RecallProduct
								invoked.RecallProductQuestion	= LocalRecallProductQuestion.RecallProductQuestion
								fill in fields from each

				if (ProductIdentifiers entered)
					include CreateRecallProductItems	

		Update is an Update Action
			valid when (RecallNotice.RecallNoticeUpdatable)
			allow anonymous access
			Action Rules
			Exit Rules
				if (ProductIdentifiers changed)
					invoke FastUpdate RecallNotice
						invoked.PrmLastUpdateToProducts = current timestamp
					include CreateRecallProductItems
    	
    	FastUpdate is an Instance Action
			restricted
			Parameters
				PrmManufacturerCode is a Manufacturer
				PrmItemCreated      is an Item
				
			Action Rules
				if (PrmManufacturerCode entered)
					ManufacturerInformation.Manufacturer = PrmManufacturerCode
				if (PrmItemCreated entered)
					ItemCreated                          = PrmItemCreated
					if (AllItemsEntered
					and RecallNotice.Status.CompletedItemCreationPending)
						invoke CompletedItemCreationPending.Close RecallNotice
    			
		Delete is a Delete Action
			valid when (CanDelete)
			Action Rules
				invoke FastUpdate RecallNotice
					invoked.PrmLastUpdateToProducts = current timestamp
			
		Purge is a Purge Action
			restricted
		
		CreateItemWorksheet is an Instance Action
			restricted
			Action Rules
			
				invoke CreateItemWorksheet ItemInformationWorksheet				
					invoked.ItemGroup           	= RecallGroup
					invoked.OriginatingNotice       = RecallNotice
					invoked.OriginatingNoticeProduct = RecallProduct
					invoked.RunGroup                = "FromNewItemProposal" + RecallNotice
					invoked.Description				= ProductName
					invoked.Description3        	= ProductDescription
					invoked.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor  	= RecallNotice.Vendor
					invoked.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem 	= ProposedVendorItem
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UOMConversion = 1)
						invoked.StockUOM = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure
					else
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UOMConversion
						if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UseForIssues = true)
							invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions = 1	
						if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UseForBuying = true)
							invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 1
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UnitOfMeasure
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UOMConversion
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UseForIssues = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions = 2	
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[2].UseForBuying = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 2	
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UnitOfMeasure
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UOMConversion
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UseForIssues = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions = 2	
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[3].UseForBuying = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 2	
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UnitOfMeasure
					invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion        = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UOMConversion
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UseForIssues = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions = 2	
					if (ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[4].UseForBuying = true)
						invoked.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 2	
					invoked.Manufacturer 			= RecallNotice.ManufacturerCodeDivision
					invoked.ManufacturerNumber 		= ProposedManufacturerNumber
					invoked.ItemGTINDetails.ItemGTIN = ProposedGlobalTradeItemNumber
					if (LatexFree = true)
						invoked.Latex               = 2 
					else
						invoked.Latex               = 0 
		
		ParseAndCreateItem is an Instance Action 
			restricted 
			Parameters 
				Delimiter 				is Alpha size 1
				ParmProductDescription 	is Text 
					default label is "ProductDescription"
				ParmCode                is Alpha 50
				ParmExpirationDate      is Alpha 20 	

			Action Rules 
				invoke ParseProductDescription 
					invoked.Delimiter				= Delimiter
					invoked.ParmProductDescription	= ParmProductDescription	

			Exit Rules 

				invoke UpdateItemInformation first RecallProductParsedDescriptionRel
					if (ParmCode = "Lot Number")
						invoked.ItemCode 		= "LotNumber"
						invoked.ExpirationDate 	= ParmExpirationDate
					if (ParmCode = "Serial Number")
						invoked.ItemCode = "SerialNumber"				

		ParseProductDescription is an Instance Action
			Parameters
				Delimiter 				is Alpha size 1
				ParmProductDescription 	is Text 
					default label is "ProductDescription"
			
			Parameter Rules
				Delimiter
					initial value is ","
					default to ","
					required

		CreateLotOrSerialItemsForAllParsedRecords is an Instance Action
			valid when (DescriptionHasBeenParsed)  
			Parameters
				CreateSerialItems        is Boolean
				CreateLotItems           is Boolean
				
			Parameter Rules
				CreateSerialItems
					if (CreateSerialItems)
						constraint (!CreateLotItems)
							"CannotEnterBothCreateSerialItemsAndCreateLotItems"	
					
				CreateLotItems
					if (CreateLotItems)
						constraint (!CreateSerialItems)
							"CannotEnterBothCreateSerialItemsAndCreateLotItems"	
					
			Action Rules
				
				constraint (CreateSerialItems or CreateLotItems)
					"MustEnterEitherCreateSerialItemsOrCreateLotItems"
				
				invoke CreateLotOrSerialItemsForAllParsedRecordsSet 
					invoked.ParmRecallGroup		= RecallGroup
					invoked.ParmRecallNotice    = RecallNotice
					invoked.ParmRecallProduct   = RecallProduct
					invoked.CreateSerialItems   = CreateSerialItems
					invoked.CreateLotItems      = CreateLotItems

		CreateLotOrSerialItemsForAllParsedRecordsSet is a Set Action
			restricted  
			Parameters
				ParmRecallGroup          is a RecallGroup
				ParmRecallNotice         is a RecallNotice
				ParmRecallProduct        is a RecallProduct
				CreateSerialItems        is Boolean
				CreateLotItems           is Boolean
				
			Action Rules
				
				Instance Rules

					LocalRecallGroup	= ParmRecallGroup
					LocalRecallNotice	= ParmRecallNotice
					LocalRecallProduct	= ParmRecallProduct
					for each RecallProductParsedDescriptionLocalRel
						if (CreateSerialItems
						and each.Description[17] !entered
						and each.Description entered)
							invoke CreateSerialNumber each
								invoked.Product = each.RecallProduct
						else
						if (CreateLotItems
						and each.Description[11] !entered
						and each.Description entered)
							invoke CreateLotNumber each
								invoked.Product = each.RecallProduct				
		
		Release is an Instance Action
			restricted
			Action Rules
				if (ProductHasAssignedTask)
					constraint (RecallTaskInstruction entered)
						"TaskInstructionsAreRequiredForProduct<ProductName>"		
    				constraint (TaskInstructionDescription entered)
    					"TaskInstructionDescriptionIsRequiredForProduct<ProductName>"
    					
  				if (RecallNotice.ItemProposal)
					initialize ManufacturerInformation
		    		initialize VendorItem
		    		initialize GlobalTradeItemNumber    			
				
				for each RecallNoticeTaskProduct set
    				if (each.RecallNoticeTask.HasRecallProductsWithLocationActivity
    				or  each.RecallNoticeTask.HasManualOrganization)
	    				LocalTask	= each.RecallNoticeTask
	    				for each each.RecallProductItemRel
	    					LocalItem = each.RecallProductItem
							if (RecallGroup.EnterQuantitiesByLocation = false)
	    						invoke Update first LocalRecallProductTaskItemRel
	    					else 
	    					if (RecallGroup.EnterQuantitiesByLocation = true)
	    						invoke CreateTaskItemForLocation each.RecallProductItem
	    							invoked.ParmTask    		= LocalTask

		SelectItem is an Instance Action
			valid when (CanSelectForTrialRequisition) 
			Action Rules
				SelectedForTrialRequisition = true
				if (OnlyOneUOMAndSpecialItem)
					TrialUnitOfMeasure = ItemUOMContract.ItemUOMContractOccurs.ItemUOMContractDetails[1].UnitOfMeasure				
				
		UnselectItem is an Instance Action
			valid when (SelectedForTrialRequisition)
			Action Rules
				SelectedForTrialRequisition = false

		ProductActivityQuery is a Set Action  
			restricted
			Parameters
				PrmRecallGroup					is a RecallGroup
				PrmRecallNotice					is a RecallNotice
				PrmPriority						is Numeric size 2
					States
		   				High						value is 1
		   				Medium						value is 2
		   				Low							value is 3
				PrmDueDate						is TimeStamp
				PrmCreateTasks                  is Boolean
					
			Sort Order
				RecallGroup
				RecallNotice
				RecallProduct
				
			Instance Selection
				where (RecallGroup	= PrmRecallGroup
				and    RecallNotice	= PrmRecallNotice
				and    HasSerialOrLotNumbers)
				
			Action Rules
				RecallNotice Set Rules
					Exit Rules
						invoke FastUpdate RecallNotice
							invoked.PrmLastProductActivityQuery      = current timestamp
							
				Instance Rules
					if (HasEnteredSerialNumbers
					or  HasEnteredLotNumbers)
						invoke QueryPatientProcedureSerialOrLotNumber PatientProcedure
							invoked.PrmRecallGroup	 				= RecallGroup
							invoked.PrmRecallNotice	 				= RecallNotice
							invoked.PrmRecallProduct                = RecallProduct
							invoked.PrmQueryPriority				= PrmPriority
							invoked.PrmQueryDueDate					= PrmDueDate
							invoked.PrmCreateTasks                  = PrmCreateTasks
							
		ProductEquipmentActivityQuery is a Set Action
			restricted
			Parameters
				PrmRecallGroup		is a RecallGroup
				PrmRecallNotice		is a RecallNotice
				PrmPriority			is Numeric size 2
				PrmDueDate			is TimeStamp
				PrmRecallUser		is a RecallUser
				PrmCreateTasks      is Boolean
					
			Sort Order
				RecallGroup
				RecallNotice
				RecallProduct
				
			Instance Selection
				where (RecallGroup	= PrmRecallGroup
				and    RecallNotice	= PrmRecallNotice)
				
			Action Rules
				RecallNotice Set Rules
					Exit Rules
						invoke FastUpdate RecallNotice
							invoked.PrmLastProductActivityQuery = current timestamp
				
				RecallProduct Set Rules
					Entrance Rules 
						LocalPriority = PrmPriority
						LocalDueDate = PrmDueDate
						 
				Instance Rules

			   		for each RecallEquipmentSerial set
				   		if (each.AssetItemRel exists)
				   			for each each.AssetItemRel
				   				if (!ModelNumber entered
				   				or (ModelNumber entered
				   				and	each.ModelNumber = ModelNumber))
					   				invoke Create RecallProductTransaction
										invoked.RecallGroup					= RecallGroup
										invoked.RecallNotice				= RecallNotice
										invoked.RecallProduct				= RecallProduct
										invoked.ActivityType				= 9 
										invoked.AssetItemGroup.Asset		= each.Asset
										invoked.AssetItemGroup.AssetItem	= each.AssetItem
										invoked.LocalPriority				= PrmPriority
										invoked.LocalDueDate				= PrmDueDate
										invoked.LocalRecallUser				= PrmRecallUser																		
										invoked.TransactionDate				= each.PurchaseDate
										invoked.LocalCreateTasks            = PrmCreateTasks
										
					if (ModelNumber entered
					and !RecallEquipmentSerial set exists)
						for each AssetItemModelRel
			   				invoke Create RecallProductTransaction
								invoked.RecallGroup					= RecallGroup
								invoked.RecallNotice				= RecallNotice
								invoked.RecallProduct				= RecallProduct
								invoked.ActivityType				= 9 
								invoked.AssetItemGroup.Asset		= each.Asset
								invoked.AssetItemGroup.AssetItem	= each.AssetItem
								invoked.LocalPriority				= PrmPriority
								invoked.LocalDueDate				= PrmDueDate
								invoked.LocalRecallUser				= PrmRecallUser
								invoked.TransactionDate				= each.PurchaseDate
								invoked.LocalCreateTasks            = PrmCreateTasks

																								
