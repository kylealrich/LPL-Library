IIHRule is a BusinessClass
	owned by InventoryIntelligence
	default label is "InventoryIntelligenceRule"
	
	prefix is IRUL
	
	Ontology
		symbolic key is IIHRule
		
	
	Patterns
		implements Resequence on RuleOrder
			new sequence field is NewRuleOrder
			set is ByRuleOrder
	
	Persistent Fields
		PrimaryReplenishmentSourceType
		ItemRule						is Boolean
		MajorInventoryClassRule			is Boolean
        InventoryCompany
        	delete ignored
        InventoryLocation
        	context of InventoryCompany
        	delete ignored
        ItemGroup
        	delete ignored
        Item
        	delete ignored
        Vendor
        	delete ignored
        MajorInventoryClass
        	delete ignored
        SourceCompany			is an InventoryCompany
        	default label is "SourceCompany"
        	delete ignored
        SourceLocation 			is an InventoryLocation
        	context of SourceCompany
        	delete ignored
		RuleOrder			 	is a DisplayOrder
		RuleName			 	is a Description
		Schedule				is a WeekDaysFlag
		Frequency				is Numeric size 3
		Active					is Boolean


		MaxModel						is Numeric size 1 
			States
				CurrentGap		value is 1
					default label is "CurrentOrderFrequency"
				OrderFrequency	value is 2
		MaxParameter					is Numeric size 4 

		RecommendationCutoffRange
		RecommendationCutoffValueType	is AlphaUpper size 5
			States
				Units	value is "UNITS"
				Days	value is "DAYS"

		ServiceLevel					is Unsigned Percent size 4.2

		VendorSourceDefaultLeadTime		is Numeric size 3
		LocationSourceDefaultLeadTime	is Numeric size 3
			restricted

		Exclude							is Boolean
		LocationScope					is a RuleLocationScope
			restricted
		TargetDaysRange
		TargetDaysBetweenOrders			is Unsigned Decimal size 5.2
			default label is "LowThreshold"
		HighThreshold					is Unsigned Decimal size 5.2

	Transient Fields
		NewRuleOrder		is a DisplayOrder
		ReceivingSchedule	is Numeric size 1
			States
				MondayThruFriday value is 1
				Everyday		 value is 2
			derive value from DerivedReceivingSchedule
		TransientPrimaryReplenishment	is Numeric size 1
			States
				AllSources			value is 5
				Vendor				value is 1
					default label is "Non-InventorySource"
				InventoryLocation	value is 2
					default label is "InventorySource"
			derive value from DerivedPrimaryReplenishmentSourceType
	
	Local Fields
		LocalToValue 			is Numeric size 8
		RuleTypeValue			is Alpha size up to 50
		RuleAttribute1Value		is Alpha size up to 30
		RuleAttribute1Suffix	is Alpha size up to 30
		RuleAttribute2Value		is Alpha size up to 30
		RuleAttribute2Suffix	is Alpha size up to 30
		RuleAttribute3Value		is Alpha size up to 30
		RuleAttribute3Suffix	is Alpha size up to 30
		UseCommaAndSpace12		is Boolean
		UseCommaAndSpace23		is Boolean
		UseSpace12				is Boolean
		LocalText				is Text
		LocalCounter			is Numeric 2
		LocalCompany 			is like InventoryCompany
		LocalLocation 			is like InventoryLocation
		LocalItem				is like Item
		LocalItemGroup			is like ItemGroup
		LocalActive				is Boolean
	Conditions
		RuleLocationAccess
			when (ViewAccess)
			
		VendorSourceType
			when (PrimaryReplenishmentSourceType.Vendor)
		
		LocationSourceType
			when (PrimaryReplenishmentSourceType.InventoryLocation)
		
		ItemSourceType
			when (PrimaryReplenishmentSourceType.Item)
			
		MajorInventoryClassType
			when (PrimaryReplenishmentSourceType.MajorInventoryClass)
			
		ExclusionRule
			when (IIHRuleType.Exclusion)

		RemovalExclusionRule
			when (IIHRuleType.RemovalExclusion)
			
		ActiveExclusionRule
			when (Active
			and   ExclusionRule)
		
		CanEnterItem
			when (ExclusionTypeRule
			or    ItemRule)
			
		ShowOnlyPerpetualLocations
			when (IIHRuleType.OptimizationMethod)

		
		ShowOnlyParLocations
			when (IIHRuleType.ParTargetDays)
			
		ShowAllLocations
			when (IIHRuleType.OrderDays
			or    IIHRuleType.ReceivingDays
			or    IIHRuleType.Cutoff
			or    IIHRuleType.ServiceLevel
			or    IIHRuleType.LeadTime
			or    IIHRuleType.Exclusion
			or    IIHRuleType.RemovalExclusion)

		ExclusionTypeRule
			restricted
			when (IIHRuleType.Exclusion
			or    IIHRuleType.RemovalExclusion)
		
		SecurityGroupAllowsAccess
			when((InventoryCompany not entered)
			or  (InventoryCompany entered and InventoryCompany.SecurityGroupAllowsAccess))
			
		AllSourcesType
			when (PrimaryReplenishmentSourceType.AllSources)

		ProcessorWithViewOrEditAccess
			restricted
			when (ProcessorWithViewOrEditAccessRel exists)

		EditAccess
			restricted
			when (ProcessorWithViewOrEditAccessRel.Access.Edit
			or (InventoryIntelligenceProcessorRel not exists
			and IIHGlobalConfigurationRel.DefaultGlobalAccess.Edit))

		ViewAccess
			restricted
			when (ProcessorWithViewOrEditAccess 
			or (InventoryIntelligenceProcessorRel not exists
			and (IIHGlobalConfigurationRel.DefaultGlobalAccess.Edit
			or IIHGlobalConfigurationRel.DefaultGlobalAccess.View)))

	Derived Fields
		ItemGroupDerived is a DerivedField
			type is AlphaUpper size 5
			restricted
			if (ItemGroup entered)
				return ItemGroup
			else
				if (InventoryCompany entered)
					return InventoryCompany.ItemGroup
				else
					return blank
							
					
		NonDefaultParTargetDayRule is a DerivedField
			type is Boolean
			restricted
			if (TargetDaysRange.LowerBound 	= 1
    			or TargetDaysRange.UpperBound = 7
    			or TargetDaysRange.SemiWeeklySchedule = 4)
    			NonDefaultParTargetDayRule = true
    		return NonDefaultParTargetDayRule
    		
		CommaMsg is a MessageField
			restricted
			untranslatable:","
			
		CommaAndSpaceMsg is a MessageField
			restricted
			untranslatable:",_"
		
		BlankSpace is a MessageField
			restricted
			"_"
		
		AttributeSeparator12 is a DerivedField
			type is Text
			restricted
			initialize LocalText
			if (UseCommaAndSpace12)
				LocalText   = CommaAndSpaceMsg
			else
				LocalText	= BlankSpace
			return LocalText
		
		AttributeSeparator23 is a DerivedField
			type is Text
			restricted
			initialize LocalText
			if (UseCommaAndSpace23)
				LocalText = CommaAndSpaceMsg
			else
				LocalText = BlankSpace
			return LocalText
		
		InactiveRuleDisplay	is a DerivedField
			type is Alpha size 1
			restricted
			if (Active)
				return blank
			else
				return "*"

		ServiceLevelDecimal is a DerivedField
            type is Unsigned Decimal size 4.2
            return (ServiceLevel * 100)
            
        ServiceLevelPercent is a DerivedField
        	type is Alpha size 30
        	restricted
        	return ServiceLevelDecimal


		ServiceLevelRuleTypeValue is a MessageField
			restricted
			"ServiceLevel"
		LeadTimeRuleTypeValue is a MessageField
			restricted
			"DefaultLeadTime"
		ReceivingDaysRuleTypeValue is a MessageField
			restricted
			"ReceivingDays"
		OrderDaysRuleTypeValue is a MessageField
			restricted
			"OrderDays"
		OptimizationMethodRuleTypeValue is a MessageField
			restricted
			"PerpetualMaxOrderPolicy"
		ParTargetDaysRuleTypeValue is a MessageField
			restricted
			"ParTargetDays"
		CutoffRuleTypeValue is a MessageField
			restricted
			"LowerAndUpperBounds"


		DaysMsg is a MessageField
			restricted
			untranslatable:"_days"
		EveryMsg is a MessageField
			restricted
			untranslatable:"_every"
		FrequencyWeekMsg is a MessageField
			restricted
			untranslatable:"_week"
		FrequencyWeeksMsg is a MessageField
			restricted
			untranslatable:"_weeks"
		CurrentGapMsg is a MessageField
			restricted
			"CurrentOrderFrequency"
		OrderFrequencyMsg is a MessageField
			restricted
			untranslatable:"_orderFrequency"
		BetweenOrdersMsg is a MessageField
			restricted
			untranslatable:"_betweenOrders"
		LowThresholdMsg is a MessageField
			restricted
			"_LowThreshold"
		HighThresholdMsg is a MessageField
			restricted
			"_HighThreshold"
		LowerBoundMsg is a MessageField
			restricted
			untranslatable:"_lowerBound"
		UpperBoundMsg is a MessageField
			restricted
			untranslatable:"_upperBound"
		MinCutOffMsg is a MessageField
			restricted
			untranslatable:"_lowerBound"
		MaxCutOffMsg is a MessageField
			restricted
			untranslatable:"_upperBound"
		UnitsMsg is a MessageField
			restricted
			untranslatable:"_units"
		

		AcrossAllCompanyAllNonInventorySourceMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAllNonInventorySource"
		AcrossAllCompanySpecificVendorGroupMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAllNonInventorySourceOfVendorGroup<ItemGroupDerived>"
		AcrossAllCompanyAllMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAcrossAllMajorInventoryClasses"
		AcrossAllCompanySpecificItemGroupMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAcrossAllMajorInventoryClassesOfItemGroup<ItemGroupDerived>"
		AcrossAllCompanyAllItemMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAcrossAllItems"
		AcrossAllCompanySpecificItemGroupItemMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAcrossAllItemsOfItemGroup<ItemGroupDerived>"
		AcrossAllCompanySpecificMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForItemGroup<ItemGroupDerived>,MajorInventoryClass<MajorInventoryClass>AcrossAllCompanies"
		AcrossAllCompanySpecificItemMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForItemGroup<ItemGroupDerived>,Item<Item>AcrossAllCompanies"
		AcrossAllCompanySpecificVendorMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForVendorGroup<ItemGroupDerived>,Vendor<Vendor>AcrossAllCompanies"
		AcrossAllCompanyAllInventorySourceMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompanyAllInventorySource"
		AcrossAllCompanyMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>AcrossAllCompany"
		SpecificCompanyMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>"
		SpecificCompanyLocationMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>"
		SpecificCompanyVendorMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,VendorGroup<ItemGroupDerived>,Vendor<Vendor>"
		SpecificCompanyLocationVendorMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,VendorGroup<ItemGroupDerived>,Vendor<Vendor>"
		SpecificCompanyAllVendorMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,AllVendor"
		SpecificCompanyMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,ItemGroup<ItemGroupDerived>,MajorInventoryClass<MajorInventoryClass>"
		SpecificCompanyLocationMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,ItemGroup<ItemGroupDerived>,MajorInventoryClass<MajorInventoryClass>"
		SpecificCompanyAllMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,AllMajorInventoryClass"
		SpecificCompanyLocationAllMajorInventoryClassMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,AllMajorInventoryClass"
		SpecificCompanyLocationAllVendorMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,AllVendor"
		SpecificCompanySourceLocationMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,SourceLocation<SourceLocation>"
		SpecificCompanyLocationSourceLocationMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,SourceLocation<SourceLocation>"
		SpecificCompanyAllSourceLocationMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,AllSourceLocation"
		SpecificCompanyLocationAllSourceLocationMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,AllSourceLocation"
		SpecificCompanyItemMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,ItemGroup<ItemGroupDerived>,Item<Item>"
		SpecificCompanyLocationItemMsg is a MessageField
			restricted
			untranslatable:"<InactiveRuleDisplay><RuleTypeValue>:<BlankSpace><RuleAttribute1Value><RuleAttribute1Suffix><AttributeSeparator12><RuleAttribute2Value><RuleAttribute2Suffix><AttributeSeparator23><RuleAttribute3Value><RuleAttribute3Suffix>ForCompany<InventoryCompany>,Location<InventoryLocation>,ItemGroup<ItemGroupDerived>,Item<Item>"
		

		ExcludeAllMsg is a MessageField
			restricted
			"ExcludeAll"
		ExcludeCompanyMsg is a MessageField
			restricted
			"ExcludeCompany<InventoryCompany>"
		ExcludeCompanyLocationItemMsg is a MessageField
			restricted
			"ExcludeCompany<InventoryCompany>,Location<InventoryLocation>,Item<Item>"
		ExcludeCompanyLocationMsg is a MessageField
			restricted
			"ExcludeCompany<InventoryCompany>,Location<InventoryLocation>"
		ExcludeCompanyItemMsg is a MessageField
			restricted
			"ExcludeCompany<InventoryCompany>,Item<Item>"
			

		
		RuleText is a DerivedField
			type is MessageField
			restricted
			if (IIHRuleType.Exclusion)
				return ExclusionRuleText
			else
				return NonExclusionRuleText
	
		ExclusionRuleText is a DerivedField
			type is MessageField
			restricted
			if (InventoryCompany not entered)
				return ExcludeAllMsg
			else
				if (InventoryLocation not entered
				and Item not entered)
					return ExcludeCompanyMsg
				else
				if (InventoryLocation entered
				and Item entered)
					return ExcludeCompanyLocationItemMsg
				else
				if (InventoryLocation entered)
					return ExcludeCompanyLocationMsg
				else
				if (Item entered)
					return ExcludeCompanyItemMsg
			
		NonExclusionRuleText is a DerivedField
			type is MessageField
			restricted
			if (IIHRuleType.ServiceLevel)
				RuleTypeValue = ServiceLevelRuleTypeValue
				RuleAttribute1Value = ServiceLevelPercent
				RuleAttribute1Suffix = "%"
			
			if (IIHRuleType.LeadTime)
				RuleTypeValue = LeadTimeRuleTypeValue
				RuleAttribute1Value = VendorSourceDefaultLeadTime
				RuleAttribute1Suffix = DaysMsg
								
			if (IIHRuleType.ReceivingDays)
				RuleTypeValue = ReceivingDaysRuleTypeValue
				RuleAttribute1Value = Schedule.TextValue
				RuleAttribute1Suffix = blank
			
			if (IIHRuleType.OrderDays)
				RuleTypeValue = OrderDaysRuleTypeValue
				RuleAttribute1Value = Schedule.TextValue
				RuleAttribute1Suffix = EveryMsg
				RuleAttribute2Value = Frequency
				if (Frequency = 1)
					RuleAttribute2Suffix = FrequencyWeekMsg
				else
					RuleAttribute2Suffix = FrequencyWeeksMsg
				UseSpace12 = true
				
			if (IIHRuleType.OptimizationMethod)
				RuleTypeValue = OptimizationMethodRuleTypeValue
				if (MaxModel.CurrentGap)
					RuleAttribute1Value = blank
					RuleAttribute1Suffix = CurrentGapMsg
				else
					RuleAttribute1Value = MaxParameter
					RuleAttribute1Suffix = DaysMsg
					RuleAttribute2Value = blank
					RuleAttribute2Suffix = OrderFrequencyMsg
			
			if (IIHRuleType.ParTargetDays)
				RuleTypeValue = ParTargetDaysRuleTypeValue
				RuleAttribute1Value = TargetDaysBetweenOrders
				RuleAttribute1Suffix = LowThresholdMsg
				RuleAttribute2Value = HighThreshold
				RuleAttribute2Suffix = HighThresholdMsg
				UseCommaAndSpace12 = true
				
								
			if (IIHRuleType.Cutoff)
				RuleTypeValue = CutoffRuleTypeValue
				if (RecommendationCutoffRange.MinimumCutoff entered)
					RuleAttribute1Value = RecommendationCutoffRange.MinimumCutoff
					RuleAttribute1Suffix = MinCutOffMsg
				if (RecommendationCutoffRange.MaximumCutoff entered)
					RuleAttribute2Value = RecommendationCutoffRange.MaximumCutoff
					RuleAttribute2Suffix = MaxCutOffMsg
					RuleAttribute3Value = blank
					if (RecommendationCutoffValueType.Days)
						RuleAttribute3Suffix = DaysMsg
					else
						RuleAttribute3Suffix = UnitsMsg
					UseCommaAndSpace12 = true
					UseCommaAndSpace23 = true
				else
					RuleAttribute2Value = RecommendationCutoffValueType
					if (RecommendationCutoffValueType.Days)
						RuleAttribute2Suffix = DaysMsg
					else
						RuleAttribute2Suffix = UnitsMsg
					UseCommaAndSpace12 = true
			
			if (InventoryCompany not entered)
				if (PrimaryReplenishmentSourceType.Vendor)
					if (Vendor entered)
						return AcrossAllCompanySpecificVendorMsg
					else
						if (ItemGroup entered)
							return AcrossAllCompanySpecificVendorGroupMsg
						else
							return AcrossAllCompanyAllNonInventorySourceMsg
				else
				if (MajorInventoryClassRule)
					if (MajorInventoryClass entered)
						return AcrossAllCompanySpecificMajorInventoryClassMsg
					else
						if (ItemGroup entered)
							return AcrossAllCompanySpecificItemGroupMsg
						else
							return AcrossAllCompanyAllMajorInventoryClassMsg
				else
				if (ItemRule)
					if (Item entered)
						return AcrossAllCompanySpecificItemMsg
					else
						if (ItemGroup entered)
							return AcrossAllCompanySpecificItemGroupItemMsg
						else
							return AcrossAllCompanyAllItemMsg
				else
				if (PrimaryReplenishmentSourceType.InventoryLocation)
					return AcrossAllCompanyAllInventorySourceMsg
				else
					return AcrossAllCompanyMsg
			else
				if (PrimaryReplenishmentSourceType not entered)
					if (InventoryLocation not entered)
						return SpecificCompanyMsg
					else
						return SpecificCompanyLocationMsg
				else
					if (PrimaryReplenishmentSourceType.Vendor)
						if (Vendor entered)
							if (InventoryLocation not entered)
								return SpecificCompanyVendorMsg
							else
								return SpecificCompanyLocationVendorMsg
						else
							if (InventoryLocation not entered)
								return SpecificCompanyAllVendorMsg
							else
								return SpecificCompanyLocationAllVendorMsg
					
					if (PrimaryReplenishmentSourceType.InventoryLocation)
						if (SourceLocation entered)
							if (InventoryLocation not entered)
								return SpecificCompanySourceLocationMsg
							else
								return SpecificCompanyLocationSourceLocationMsg
						else
							if (InventoryLocation not entered)
								return SpecificCompanyAllSourceLocationMsg
							else
								return SpecificCompanyLocationAllSourceLocationMsg
					
					if (ItemRule)
						if (InventoryLocation not entered)
							return SpecificCompanyItemMsg
						else
							return SpecificCompanyLocationItemMsg
							
					if (MajorInventoryClassRule)
						if (MajorInventoryClass entered)
							if (InventoryLocation not entered)
								return SpecificCompanyMajorInventoryClassMsg
							else
								return SpecificCompanyLocationMajorInventoryClassMsg
						else
							if (InventoryLocation not entered)
								return SpecificCompanyAllMajorInventoryClassMsg
							else
								return SpecificCompanyLocationAllMajorInventoryClassMsg
					
		
		InactiveRuleMessage is a MessageField
			restricted
			"RuleIsNotActive"
			
		DerivedReceivingSchedule is a DerivedField
			type is Numeric size 1
			if (IIHRuleType.ReceivingDays)
				if (Schedule.Monday
				and Schedule.Tuesday
				and Schedule.Wednesday
				and Schedule.Thursday
				and Schedule.Friday
				and Schedule.Saturday
				and Schedule.Sunday)
					return ReceivingSchedule.Everyday
				else
					return ReceivingSchedule.MondayThruFriday
			else
				return 0
		
		DerivedPrimaryReplenishmentSourceType is a DerivedField
			type is Numeric size 1
			if (PrimaryReplenishmentSourceType.Vendor)
				return 1
			if (PrimaryReplenishmentSourceType.InventoryLocation)
				return 2
			else
				return 5				
				
	Rule Blocks
		ParTargetDaysRules
    		if (IIHRuleType.ParTargetDays)
    			TargetDaysRange.LowerBound 			= 1
    			TargetDaysRange.UpperBound 			= 7
    			TargetDaysRange.SemiWeeklySchedule 	= 4
    		else
    			TargetDaysRange.LowerBound 			= blank
    			TargetDaysRange.UpperBound 			= blank
    			TargetDaysRange.SemiWeeklySchedule 	= blank
    	
    	DuplicateRulesValidation
    		
    		if (ExclusionTypeRule)
				if (InventoryCompany changed 
				or InventoryLocation changed 
				or Item changed)
					if (ExclusionRule)
						constraint (ExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					else
						constraint (RemovalExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
			else
				if (VendorSourceType)
					if (InventoryCompany changed 
					or InventoryLocation changed 
					or ItemGroup changed
					or Vendor changed 
					or Item changed 
					or MajorInventoryClass changed
					or MajorInventoryClassRule changed)
						constraint (VendorTypeRulesRel not exists)	
							"SameRuleAlreadyExists"
				if (LocationSourceType)
					if (InventoryCompany changed
					or InventoryLocation changed
					or SourceCompany changed
					or SourceLocation changed 
					or ItemGroup changed 
					or Item changed
					or MajorInventoryClass changed
					or MajorInventoryClassRule changed)
						constraint (SourceLocationTypeRulesRel not exists)
							"SameRuleAlreadyExists"
				if (AllSourcesType)
					if (InventoryCompany changed 
					or InventoryLocation changed
					or ItemGroup changed 
					or Item changed 
					or MajorInventoryClass changed
					or MajorInventoryClassRule changed)
						constraint (AllSourcesTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					
	Field Rules
		PrimaryReplenishmentSourceType
			if (ExclusionTypeRule)
				initialize PrimaryReplenishmentSourceType
			if (PrimaryReplenishmentSourceType changed)
				if (old PrimaryReplenishmentSourceType.Vendor)
					initialize Vendor
				if (old PrimaryReplenishmentSourceType.InventoryLocation)
					initialize SourceCompany
					initialize SourceLocation





		
		InventoryCompany
			if (InventoryLocation entered)



				required
					"CompanyMustBeEntered"
					
		SourceCompany
			if (!PrimaryReplenishmentSourceType.InventoryLocation)
				initialize SourceCompany

		SourceLocation
			if (!PrimaryReplenishmentSourceType.InventoryLocation)
				initialize SourceLocation
					
		ItemGroup
			if (InventoryCompany entered)
				constraint (InventoryCompany.ItemGroup = ItemGroup)
					"ShouldBeEqualToCompanyItemGroup"
			if (!ItemRule 
			and !MajorInventoryClassRule 
			and !PrimaryReplenishmentSourceType.Vendor)
				initialize ItemGroup
				
		Item
			if (!CanEnterItem)
				initialize Item
		
		Vendor
			if (!PrimaryReplenishmentSourceType.Vendor)
				initialize Vendor
				
		MajorInventoryClass
			if (!MajorInventoryClassRule)
				initialize MajorInventoryClass
			else
				required
					"Enter_MajorInventoryClassOrUncheck_MajorInventoryClassSelector"
				
		Schedule
			if (IIHRuleType.OrderDays)
				required
					"ScheduleIsNotSelected"
				
		Frequency
			initial value is 1
			if (IIHRuleType.OrderDays)
				required
				constraint (Frequency > 0)
					"MustBeAPositiveValue"
				constraint (Frequency <= 104)
					"MaximumValueIsEvery104Weeks"
			else
				force default to blank

		Active
			initial value is true
		
		ReceivingSchedule
			if (IIHRuleType.ReceivingDays)
				default to ReceivingSchedule.MondayThruFriday
				Schedule.Monday 	= true
				Schedule.Tuesday 	= true
				Schedule.Wednesday 	= true
				Schedule.Thursday 	= true
				Schedule.Friday 	= true
				if (ReceivingSchedule = ReceivingSchedule.Everyday)
					Schedule.Saturday 	= true
					Schedule.Sunday		= true
				else
					Schedule.Saturday 	= false
					Schedule.Sunday		= false
	
		RuleOrder
			autosequence using ByRuleOrder
		
		MaxModel
			if (IIHRuleType.OptimizationMethod)
				required
			else
				force default to blank
		
		MaxParameter
			if (IIHRuleType.OptimizationMethod
			and MaxModel.OrderFrequency)
				required
				LocalToValue = 1000
				constraint (MaxParameter > 0)
					"MustBeAPositiveValue"
				constraint (MaxParameter <= LocalToValue)
					"MaximumValueAllowedIs<LocalToValue>"
			else
				force default to blank
				
		RecommendationCutoffRange
			if (IIHRuleType.Cutoff)
				required
					"MustEnterEitherLowerBoundOrUpperBound"
			else
				force default to blank
				
		RecommendationCutoffValueType
			initial value is RecommendationCutoffValueType.Units
			if (!IIHRuleType.Cutoff)

				force default to blank


				
		ServiceLevel
			initial value is 0.98
			if (IIHRuleType.ServiceLevel)
				constraint (ServiceLevel >= 0.85)
					"AllowedRangeIs85%To99.99%"
			else
				force default to blank
				
		VendorSourceDefaultLeadTime
			if (IIHRuleType.LeadTime)
				constraint (VendorSourceDefaultLeadTime >= 0)
					"MustBeAPositiveValue"
			else
				force default to blank
		
		Exclude
			if (IIHRuleType.Exclusion)
				force default to true
		
		TargetDaysRange
			if (!IIHRuleType.ParTargetDays)
				initialize TargetDaysRange

		TargetDaysBetweenOrders
			initial value is 2.5
			if (IIHRuleType.ParTargetDays)
				constraint (TargetDaysBetweenOrders > TargetDaysRange.LowerBound)
					"ValueMustBeGreaterThanDailySchedule"
				constraint (TargetDaysBetweenOrders <= HighThreshold)
					"ValueMustBeLessThanHighThreshold"
			else
				force default to blank
				
		HighThreshold
			initial value is 5.5
			if (IIHRuleType.ParTargetDays)
				constraint (HighThreshold >= TargetDaysBetweenOrders )
					"ValueMustBeGreaterThanLowThreshold"
				constraint (HighThreshold <= TargetDaysRange.UpperBound )
					"ValueMustBeLessThanWeeklySchedule"
			else
				force default to blank
		
		TransientPrimaryReplenishment
			if (TransientPrimaryReplenishment.Vendor)
				PrimaryReplenishmentSourceType = 1
			if (TransientPrimaryReplenishment.InventoryLocation)
				PrimaryReplenishmentSourceType = 2
			if (TransientPrimaryReplenishment.AllSources)
				PrimaryReplenishmentSourceType = 5	
		
		
				
	Relations
		IIHGlobalConfigurationRel
			one-to-one relation to IIHGlobalConfiguration
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
							 
		SameTypeRulesRel
			one-to-many relation to IIHRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.IIHRuleType = IIHRuleType
				
		InventoryIntelligenceProcessorLocationsRel
		    one-to-many relation to InventoryIntelligenceProcessorLocation
		    Field Mapping uses ByCompanyLocation
		        related.HROrganization                 = actor.agent(Employee).HROrganization
		        related.InventoryIntelligenceProcessor = actor.agent(Employee).Employee
		        
		VendorTypeRulesRel
			one-to-many relation to IIHRule
			Field Mapping uses ByVendor
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.IIHRuleType 			= IIHRuleType
				related.InventoryCompany 		= InventoryCompany
				related.InventoryLocation 		= InventoryLocation
				related.ItemGroup 				= ItemGroup
				related.Vendor 					= Vendor
				related.Item 					= Item
				related.MajorInventoryClass 	= MajorInventoryClass
			Instance Selection
				where (related.MajorInventoryClassRule= MajorInventoryClassRule)
		
		SourceLocationTypeRulesRel
			one-to-many relation to IIHRule
			Field Mapping uses BySourceLocation
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.IIHRuleType 			= IIHRuleType
				related.InventoryCompany 		= InventoryCompany
				related.InventoryLocation 		= InventoryLocation
				related.SourceCompany 			= SourceCompany
				related.SourceLocation 			= SourceLocation
				related.ItemGroup 				= ItemGroup
				related.Item 					= Item
				related.MajorInventoryClass 	= MajorInventoryClass
			Instance Selection
				where (related.MajorInventoryClassRule= MajorInventoryClassRule)
		
		AllSourcesTypeRulesRel
			one-to-many relation to IIHRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.IIHRuleType = IIHRuleType
			Instance Selection
				where (related.PrimaryReplenishmentSourceType.AllSources
				and    related.InventoryCompany       = InventoryCompany
				and    related.InventoryLocation	  = InventoryLocation
				and    related.ItemGroup			  = ItemGroup
				and    related.Item					  = Item
				and    related.MajorInventoryClass 	  = MajorInventoryClass
				and    related.MajorInventoryClassRule= MajorInventoryClassRule)
	
		ExclusionTypeRulesRel 
			one-to-many relation to IIHRule
			Field Mapping uses ByExclusion
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.InventoryCompany 		= InventoryCompany
				related.InventoryLocation 		= InventoryLocation
				related.Item 					= Item

		RemovalExclusionTypeRulesRel 
			one-to-many relation to IIHRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.IIHRuleType 			= "RE"	
			Instance Selection
				where (related.InventoryCompany 	= InventoryCompany
				and    related.InventoryLocation 	= InventoryLocation
				and    related.Item 				= Item)

		InventoryIntelligenceProcessorRel
			one-to-one relation to InventoryIntelligenceProcessor
			Field Mapping uses symbolic key
				related.HROrganization 					= actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor	= actor.agent(Employee).Employee
		
		ProcessorWithViewOrEditAccessRel
			one-to-one relation to InventoryIntelligenceProcessorAccessRights
			Field Mapping uses symbolic key
				related.HROrganization                									= actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor									= actor.agent(Employee).Employee
				related.InventoryIntelligenceProcessorAccessRights.InventoryCompany		= InventoryCompany
				related.InventoryIntelligenceProcessorAccessRights.IIHInventoryLocation = InventoryLocation

		IIHItemLocationRel
			one-to-one relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = InventoryCompany
				related.InventoryLocation = InventoryLocation
				related.Item 			  = Item

		OldIIHItemLocationRel
			one-to-one relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = LocalCompany
				related.InventoryLocation = LocalLocation
				related.Item 			  = LocalItem

		CompanyExclusionRulesRel 
			one-to-many relation to IIHRule
			Field Mapping uses ByExclusion
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.InventoryCompany 		= InventoryCompany
			Instance Selection
				where (related.InventoryLocation not entered
				and	related.Item not entered)

		LocationExclusionRulesRel 
			one-to-many relation to IIHRule
			Field Mapping uses ByExclusion
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.InventoryCompany 		= InventoryCompany
				related.InventoryLocation 		= InventoryLocation
			Instance Selection
				where (related.Item not entered)

	Sets
		
		ByRuleOrder
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				IIHRuleType
				RuleOrder
				
		ByVendor
			Instance Selection
				where (VendorSourceType)
			Sort Order
				FinanceEnterpriseGroup
				IIHRuleType
				InventoryCompany
				InventoryLocation
				ItemGroup
				Vendor
				Item
				MajorInventoryClass
				IIHRule

		
		BySourceLocation
			Instance Selection
				where (LocationSourceType)
			Sort Order
				FinanceEnterpriseGroup
				IIHRuleType
				InventoryCompany
				InventoryLocation
				SourceCompany
				SourceLocation	
				ItemGroup
				Item
				MajorInventoryClass	
				IIHRule
				
		ByItem
			Instance Selection
				where (ItemSourceType)
			Sort Order
				FinanceEnterpriseGroup
				IIHRuleType
				InventoryCompany
				InventoryLocation
				ItemGroup
				Item
				IIHRule
				
		ByMajorInventoryClass
			Instance Selection
				where (MajorInventoryClassType)
			Sort Order
				FinanceEnterpriseGroup
				IIHRuleType
				InventoryCompany
				InventoryLocation
				ItemGroup
				MajorInventoryClass
				IIHRule
				
		ByExclusion
			Instance Selection
				where (ExclusionRule)
			Sort Order
				FinanceEnterpriseGroup
				InventoryCompany
				InventoryLocation
				Item
		
		ByExclusionRuleOrder
			Instance Selection
				where (ActiveExclusionRule)
			Sort Order
				FinanceEnterpriseGroup
				RuleOrder
	
	Actions
		Create is a Create Action
			Entrance Rules
				if (!CanEnterItem)
					initialize Item
				if (!MajorInventoryClassRule)
					initialize MajorInventoryClass
				if (InventoryCompany entered 
				and InventoryLocation entered
				and Item entered)
					constraint (IIHItemLocationRel exists)
						"ItemLocationDoesNotExist"
				
				if(MajorInventoryClassRule)
					if(ItemRule)
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_ItemSelectorAnd_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_ItemAnd_MajorInventoryClassSelector"
					else
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_MajorInventoryClassSelector"
				else
				if(ItemRule)
					constraint(ItemGroup entered)
						"Enter_ItemGroupOrUncheck_ItemSelector"
						
					
			Action Rules
				PrimaryReplenishmentSourceType = TransientPrimaryReplenishment
				if (ExclusionTypeRule)
					if (ExclusionRule)
						constraint (ExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					else
						constraint (RemovalExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
						
				else
					if (VendorSourceType)
						constraint (VendorTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					if (LocationSourceType)
						constraint (SourceLocationTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					if (AllSourcesType)
						constraint (AllSourcesTypeRulesRel not exists)
							"SameRuleAlreadyExists"
				
			Exit Rules
				invoke ResequenceRules first SameTypeRulesRel
				if (IIHRuleType.Exclusion and Active)
					if (InventoryCompany entered 
					and InventoryLocation entered
					and Item entered)
						invoke FastUpdate IIHItemLocationRel
							invoked.OutOfScope = true
					else
						invoke AddExclusions IIHItemLocation
							invoked.PrmCompany  	= InventoryCompany
							invoked.PrmLocation 	= InventoryLocation
							invoked.PrmItemGroup 	= ItemGroup
							invoked.PrmItem			= Item

		SpecialistCreate is a Create Action
			default label is "Create"
			Entrance Rules
				if (!CanEnterItem)
					initialize Item
				if (!MajorInventoryClassRule)
					initialize MajorInventoryClass
				if (InventoryCompany entered 
				and InventoryLocation entered
				and Item entered)
					constraint (IIHItemLocationRel exists)
						"ItemLocationDoesNotExist"

				if(MajorInventoryClassRule)
					if(ItemRule)
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_ItemSelectorAnd_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_ItemAnd_MajorInventoryClassSelector"
					else
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_MajorInventoryClassSelector"
				else
				if(ItemRule)
					constraint(ItemGroup entered)
						"Enter_ItemGroupOrUncheck_ItemSelector"
					
			Field Rules
				InventoryCompany
					if (InventoryIntelligenceProcessorLocationsRel exist)
						required
							"CompanyMustBeEntered"
							
				InventoryLocation
					if (InventoryIntelligenceProcessorLocationsRel exist)
						required
							"LocationMustBeEntered"
					constraint (EditAccess)
						"DoNotHavePermissionForThisLocation"
						
			Action Rules
				PrimaryReplenishmentSourceType = TransientPrimaryReplenishment
				if (ExclusionTypeRule)
					if (ExclusionRule)
						constraint (ExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					else
						constraint (RemovalExclusionTypeRulesRel not exists)
							"SameRuleAlreadyExists"
				else
					if (VendorSourceType)
						constraint (VendorTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					if (LocationSourceType)
						constraint (SourceLocationTypeRulesRel not exists)
							"SameRuleAlreadyExists"
					if (AllSourcesType)
						constraint (AllSourcesTypeRulesRel not exists)
							"SameRuleAlreadyExists"
			Exit Rules
				invoke ResequenceRules first SameTypeRulesRel
				if (IIHRuleType.Exclusion and Active)
					if (InventoryCompany entered 
					and InventoryLocation entered
					and Item entered)
						invoke FastUpdate IIHItemLocationRel
							invoked.OutOfScope = true
					else
						invoke AddExclusions IIHItemLocation
							invoked.PrmCompany  	= InventoryCompany
							invoked.PrmLocation 	= InventoryLocation
							invoked.PrmItemGroup 	= ItemGroup
							invoked.PrmItem			= Item
						
		SpecialistUpdate is an Update Action
			default label is "Update"
			valid when (RuleLocationAccess)
			Local Fields
				LocalAsyncId	is an AsyncActionRequest
			Entrance Rules
				initialize LocalCompany
				initialize LocalLocation
				initialize LocalItemGroup
				LocalCompany 	= old InventoryCompany
				LocalLocation 	= old InventoryLocation
				LocalItemGroup 	= old ItemGroup
				LocalItem		= old Item
				LocalActive		= old Active
				if (!CanEnterItem)
					initialize Item
				if (!MajorInventoryClassRule)
					initialize MajorInventoryClass
				if (InventoryCompany entered 
				and InventoryLocation entered
				and Item entered)
					constraint (IIHItemLocationRel exists)
						"ItemLocationDoesNotExist"
				
				if(MajorInventoryClassRule)
					if(ItemRule)
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_ItemSelectorAnd_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_ItemAnd_MajorInventoryClassSelector"
					else
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_MajorInventoryClassSelector"
				else
				if(ItemRule)
					constraint(ItemGroup entered)
						"Enter_ItemGroupOrUncheck_ItemSelector"
							
			Field Rules
				InventoryCompany
					if (InventoryIntelligenceProcessorLocationsRel exist)
						required
							"CompanyMustBeEntered"
							
				InventoryLocation
					if (InventoryIntelligenceProcessorLocationsRel exist)
						required
							"LocationMustBeEntered"
					constraint (EditAccess)
						"DoNotHavePermissionForThisLocation"

			Action Rules
				PrimaryReplenishmentSourceType = TransientPrimaryReplenishment
				include DuplicateRulesValidation
				
			Exit Rules
				invoke ResequenceRules first SameTypeRulesRel
				if (IIHRuleType.Exclusion)
					if (LocalActive)
						if (LocalCompany entered 
						and LocalLocation entered
						and LocalItem entered)
							invoke FastUpdate OldIIHItemLocationRel
								invoked.OutOfScope = false
						else
							invoke RemoveExclusions IIHItemLocation in background
								assign async action request id to LocalAsyncId
								invoked.PrmCompany  	= LocalCompany
								invoked.PrmLocation 	= LocalLocation
								invoked.PrmItemGroup 	= LocalItemGroup
								invoked.PrmItem			= LocalItem

					if (Active)
						if (InventoryCompany entered 
						and InventoryLocation entered
						and Item entered)
							invoke FastUpdate IIHItemLocationRel in background
								run after LocalAsyncId
								invoked.OutOfScope = true
						else
							invoke AddExclusions IIHItemLocation
								run after LocalAsyncId
								invoked.PrmCompany  	= InventoryCompany
								invoked.PrmLocation 	= InventoryLocation
								invoked.PrmItemGroup 	= ItemGroup
								invoked.PrmItem			= Item	
				
		Update is an Update Action
			Local Fields
				LocalAsyncId	is an AsyncActionRequest
			Entrance Rules
				initialize LocalCompany
				initialize LocalLocation
				initialize LocalItemGroup
				LocalCompany 	= old InventoryCompany
				LocalLocation 	= old InventoryLocation
				LocalItemGroup 	= old ItemGroup
				LocalItem		= old Item
				LocalActive 	= old Active
				include ParTargetDaysRules
				if (!CanEnterItem)
					initialize Item
				if (!MajorInventoryClassRule)
					initialize MajorInventoryClass
				if (InventoryCompany entered 
				and InventoryLocation entered
				and Item entered)
					constraint (IIHItemLocationRel exists)
						"ItemLocationDoesNotExist"
				
				if(MajorInventoryClassRule)
					if(ItemRule)
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_ItemSelectorAnd_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_ItemAnd_MajorInventoryClassSelector"
					else
						if (ItemGroup not entered)
							constraint (MajorInventoryClass entered)
								"Enter_ItemGroupAnd_MajorInventoryClassOrUncheck_MajorInventoryClassSelector"
							constraint(MajorInventoryClass not entered)
								"Enter_ItemGroupOrUncheck_MajorInventoryClassSelector"
				else
				if(ItemRule)
					constraint(ItemGroup entered)
						"Enter_ItemGroupOrUncheck_ItemSelector"
						
			Action Rules
				PrimaryReplenishmentSourceType = TransientPrimaryReplenishment
				include DuplicateRulesValidation
				
			Exit Rules
				invoke ResequenceRules first SameTypeRulesRel
				if (IIHRuleType.Exclusion)
					if (LocalActive)
						if (LocalCompany entered 
						and LocalLocation entered
						and LocalItem entered)
							invoke FastUpdate OldIIHItemLocationRel
								invoked.OutOfScope = false
						else
							invoke RemoveExclusions IIHItemLocation in background
								assign async action request id to LocalAsyncId
								invoked.PrmCompany  	= LocalCompany
								invoked.PrmLocation 	= LocalLocation
								invoked.PrmItemGroup 	= LocalItemGroup
								invoked.PrmItem			= LocalItem

					if (Active)
						if (InventoryCompany entered 
						and InventoryLocation entered
						and Item entered)
							invoke FastUpdate IIHItemLocationRel in background
								run after LocalAsyncId
								invoked.OutOfScope = true
						else
							invoke AddExclusions IIHItemLocation
								run after LocalAsyncId
								invoked.PrmCompany  	= InventoryCompany
								invoked.PrmLocation 	= InventoryLocation
								invoked.PrmItemGroup 	= ItemGroup
								invoked.PrmItem			= Item				
					
		Delete is a Delete Action
			Entrance Rules
				invoke ResequenceRules first SameTypeRulesRel
			Exit Rules
				if (IIHRuleType.Exclusion and Active)
					if (InventoryCompany entered 
					and InventoryLocation entered
					and Item entered)
						if (LocationExclusionRulesRel not exists
						and CompanyExclusionRulesRel not exists)
							invoke FastUpdate IIHItemLocationRel
								invoked.OutOfScope = false
					else
						if ((InventoryLocation not entered) 
						or (InventoryLocation entered and CompanyExclusionRulesRel not exists))
							invoke RemoveExclusions IIHItemLocation
								invoked.PrmCompany  	= InventoryCompany
								invoked.PrmLocation 	= InventoryLocation
								invoked.PrmItemGroup 	= ItemGroup
								invoked.PrmItem			= Item

		
		ResequenceRules is an Update Action
			Entrance Rules
        		ReceivingSchedule = DerivedReceivingSchedule
        	Action Rules
				PrimaryReplenishmentSourceType = TransientPrimaryReplenishment
			Exit Rules
				if (IIHRuleType.Cutoff)
					invoke Process ComputeBounds in background
						invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
						invoked.TimeOutInMinutes		= 20

        		        		
        CreateRulesForMultipleLocations is an Instance Action
        	Parameters

        		PrmRuleName 					is a Description
        		PrmInventoryCompany				is an InventoryCompany
        		PrmItemGroup					is an ItemGroup
        		PrmItem							is an Item
        			context of PrmItemGroup
        		PrmVendor 						is a Vendor
        			context of PrmItemGroup
        		PrmMajorInventoryClass 			is a MajorInventoryClass
        			context of PrmItemGroup
        		PrmSourceCompany				is an InventoryCompany
        		PrmSourceLocation				is an InventoryLocation
        			context of PrmSourceCompany
        		PrmActive						is Boolean
        		PrmServiceLevel					is Unsigned Percent size 4.2
        		PrmVendorSourceDefaultLeadTime  is Numeric size 3
        		PrmSchedule						is a WeekDaysFlag
        		PrmFrequency 					is Numeric 3			
        		PrmRuleLocationArray 	 		is a RuleLocationArray
        		PrmMaxModel						is Numeric size 1
					States
						CurrentGap		value is 1
							default label is "CurrentOrderFrequency"
						OrderFrequency	value is 2
				PrmMaxParameter					is Numeric size 4
				PrmTargetDaysBetweenOrders 		is Unsigned Decimal size 5.2
				PrmHighThreshold				is Unsigned Decimal size 5.2
        		PrmTargetDaysRange				is a TargetDaysRange
        		PrmReceivingSchedule	is Numeric size 1
					States
						MondayThruFriday value is 1
						Everyday		 value is 2
				PrmRecommendationCutoffRange is a RecommendationCutoffRange
				PrmRecommendationCutoffValueType	is AlphaUpper size 5
					States
						Units	value is "UNITS"
						Days	value is "DAYS"
				PrmPrimaryReplenishment	is Numeric size 1
					States
						AllSources			value is 5
						Vendor				value is 1
						InventoryLocation	value is 2
				PrmItemRule						is  Boolean
				PrmMajorInventoryClassRule		is  Boolean
				 
			Parameter Rules
				PrmFrequency
					initial value is 1
					
				PrmActive
					initial value is true
				
				PrmReceivingSchedule
					if (IIHRuleType.ReceivingDays)
						default to PrmReceivingSchedule.MondayThruFriday
						PrmSchedule.Monday 		= true
						PrmSchedule.Tuesday 	= true
						PrmSchedule.Wednesday 	= true
						PrmSchedule.Thursday 	= true
						PrmSchedule.Friday 		= true
						if (PrmReceivingSchedule = PrmReceivingSchedule.Everyday)
							PrmSchedule.Saturday 	= true
							PrmSchedule.Sunday		= true
						else
							PrmSchedule.Saturday 	= false
							PrmSchedule.Sunday		= false
							
				PrmTargetDaysBetweenOrders
					initial value is 2.5
					
				PrmHighThreshold
					initial value is 5.5
					
				PrmServiceLevel
					initial value is 0.98
					
				PrmPrimaryReplenishment
					if (PrimaryReplenishmentSourceType.Vendor)
						PrimaryReplenishmentSourceType = 1
					if (PrimaryReplenishmentSourceType.InventoryLocation)
						PrimaryReplenishmentSourceType = 2
					else
						PrimaryReplenishmentSourceType = 5
										
        	Action Rules
        		LocalCounter = 1
        		constraint(PrmRuleLocationArray.InventoryLocation[1] entered)
        			"AtLeastOneLocationShouldBeEntered"
        		while (LocalCounter <= 10)
        			if (PrmRuleLocationArray.InventoryLocation[LocalCounter] entered)
	        			invoke Create IIHRule
	        				invoked.FinanceEnterpriseGroup   		= FinanceEnterpriseGroup
		                    invoked.IIHRuleType              		= IIHRuleType
		                    invoked.RuleName				 		= PrmRuleName
	        				invoked.InventoryLocation	 	 		= PrmRuleLocationArray.InventoryLocation[LocalCounter]
		        			invoked.InventoryCompany         		= PrmInventoryCompany
		        			invoked.ItemGroup						= PrmItemGroup
		                    invoked.Item                     		= PrmItem
		                    invoked.Vendor                   		= PrmVendor
		                    invoked.MajorInventoryClass 			= PrmMajorInventoryClass
		                    invoked.SourceCompany           		= PrmSourceCompany
		                    invoked.SourceLocation           		= PrmSourceLocation
		                    invoked.Schedule                 		= PrmSchedule
		                    invoked.Frequency                		= PrmFrequency
		                    invoked.Active                   		= PrmActive
		                    invoked.ServiceLevel             		= PrmServiceLevel
		            		invoked.MaxModel    					= PrmMaxModel    
		                    invoked.MaxParameter					= PrmMaxParameter
							invoked.TargetDaysBetweenOrders			= PrmTargetDaysBetweenOrders
							invoked.HighThreshold					= PrmHighThreshold
		                    invoked.TargetDaysRange					= PrmTargetDaysRange
		                    invoked.ReceivingSchedule				= PrmReceivingSchedule
		                    invoked.RecommendationCutoffRange		= PrmRecommendationCutoffRange
		                    invoked.RecommendationCutoffValueType 	= PrmRecommendationCutoffValueType
		                    invoked.VendorSourceDefaultLeadTime 	= PrmVendorSourceDefaultLeadTime
                			invoked.PrimaryReplenishmentSourceType  = PrmPrimaryReplenishment
                			invoked.ItemRule						= PrmItemRule
                			invoked.MajorInventoryClassRule			= PrmMajorInventoryClassRule
    				LocalCounter += 1

		UpdateRules  is a Set Action
			default label is "UpdateRules"
			Action Rules
				Instance Rules
					if (PrimaryReplenishmentSourceType.Item)							
						ItemRule										= true
						PrimaryReplenishmentSourceType					= 5
					if (PrimaryReplenishmentSourceType.MajorInventoryClass)
						MajorInventoryClassRule							= true
						PrimaryReplenishmentSourceType					= 5
					if (PrimaryReplenishmentSourceType not entered)
						PrimaryReplenishmentSourceType					= 5	


		UpdateExclusionRules is a Set Action
			restricted
			Instance Selection
				where (ActiveExclusionRule)
			Action Rules
				Instance Rules
					if (InventoryCompany entered 
					and InventoryLocation entered
					and Item entered)
						invoke FastUpdate IIHItemLocationRel
							invoked.OutOfScope = true
					else
						invoke AddExclusions IIHItemLocation
							invoked.PrmCompany  	= InventoryCompany
							invoked.PrmLocation 	= InventoryLocation
							invoked.PrmItemGroup 	= ItemGroup
							invoked.PrmItem			= Item
