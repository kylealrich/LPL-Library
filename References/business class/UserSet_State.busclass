UserSet_State is a BusinessClass
	owned by la
	prefix is ussst
	is framework spec

	Patterns
		disable EffectiveDated
		disable AsOfDateProcessing
				
	Ontology
		symbolic key is UserSet_State
	
	Persistent Fields
		SetName						is LPLName
			default label is "Set"
		BusinessClass
		State 						is Numeric 1
			States
				Pending			value is 0
				Optimized		value is 1
				Disabled		value is 8
				NotOptimizable	value is 9  
		Description					is Alpha size 500
		ConfigStamp					is Numeric 15
		PopulateIndexRequest		is like AsyncActionRequest
		ValidateIndexRequest		is like AsyncActionRequest
		PurgeIndexRequest			is like AsyncActionRequest
		LPL			 				is LPL
			default label is untranslatable
		UserKeyStorageSetName		is Alpha size 20  
		UserSortFieldCount			is Numeric size 2
		LongestUserSortField		is Numeric size 4

		
	Transient Fields
				
	Field Rules
		SetName
			required
			cannot be changed

		BusinessClass
			required
			cannot be changed
			initial value is BusinessClassRel.BusinessView
			
			constraint (BusinessClassRel exists)
				"<BusinessClass>DoesNotExist"

		ConfigStamp
			required
			
		LPL
			required
			
	Derived Fields
		BusinessClassConfigStampDer is a NativeField
			type is Numeric 15
			default label is untranslatable

	Local Fields
						
	Conditions
		Stale
			when (ConfigStamp != BusinessClassConfigStampDer)
			
		CanDisable
			default label is "DisableAllowed"
			when (State.Optimized or State.Pending)

		CanClearPopulateIndexRequest
			default label is "ClearPopulateIndexRequestAllowed"
			when (not Stale
			and   PopulateIndexRequest != blank
			and   not HasUnfinishedPopulateRequest)
	
		CanClearValidateIndexRequest
			default label is "ClearValidateIndexRequestAllowed"
			when (not Stale
			and   ValidateIndexRequest != blank
			and   not HasUnfinishedValidateRequest)
	
		CanClearPurgeIndexRequest
			default label is "ClearPurgeIndexRequestAllowed"
			when (not Stale
			and   PurgeIndexRequest != blank
			and   not HasUnfinishedPurgeRequest)
	
		CanTerminatePopulateIndexRequest
			default label is "TerminatePopulateIndexRequestAllowed"
			when (not Stale
			and   PopulateIndexRequest != blank
			and   HasUnfinishedPopulateRequest)
	
		CanTerminateValidateIndexRequest
			default label is "TerminateValidateIndexRequestAllowed"
			when (not Stale
			and   ValidateIndexRequest != blank
			and   HasUnfinishedValidateRequest)
	
		CanTerminatePurgeIndexRequest
			default label is "TerminatePurgeIndexRequestAllowed"
			when (not Stale
			and   PurgeIndexRequest != blank
			and   HasUnfinishedPurgeRequest)
	
		CanPopulateIndex
			default label is "PopulateIndexAllowed"
			when (not Stale
			and   State.Pending
			and   not HasUnfinishedPopulateRequest)
	
		CanValidateIndex
			default label is "ValidateIndexAllowed"
			when (not Stale
			and   State.Optimized
			and   not HasUnfinishedRequest)
			
		CanPurgeIndex
			default label is "PurgeIndexAllowed"
			when (any UserKeyStorageRel exist
			and   not HasUnfinishedRequest)
			
		PopulateIndexRequestRelExists
			default label is "PopulateIndexRequestExists"
			when (PopulateIndexRequest != blank
			and   PopulateIndexRequestRel exists)
	
		ValidateIndexRequestRelExists
			default label is "ValidateIndexRequestExists"
			when (ValidateIndexRequest != blank
			and   ValidateIndexRequestRel exists)
	
		PurgeIndexRequestRelExists
			default label is "PurgeIndexRequestExists"
			when (PurgeIndexRequest != blank
			and   PurgeIndexRequestRel exists)
	
		FailedPopulateRequestRelExists
			default label is "FailedPopulateRequestExists"
			when (PopulateIndexRequest != blank
			and   any PopulateIndexRequestRel.FailedTriggersExist)
		
		FailedValidateRequestRelExists
			default label is "FailedValidateRequestExists"
			when (ValidateIndexRequest != blank
			and   any ValidateIndexRequestRel.FailedTriggersExist)
		
		FailedPurgeRequestRelExists
			default label is "FailedPurgeRequestExists"
			when (PurgeIndexRequest != blank
			and   any PurgeIndexRequestRel.FailedTriggersExist)
			
		HasUnfinishedPopulateRequest
			default label is "UnfinishedPopulateRequestExists"
			when (PopulateIndexRequestRelExists
			and   (not PopulateIndexRequestRel.HasTriggers or PopulateIndexRequestRel.NonFinishedNotInErrorTriggersExist))
			
		HasUnfinishedValidateRequest
			default label is "UnfinishedValidateRequestExists"
			when (ValidateIndexRequestRelExists
			and   (not ValidateIndexRequestRel.HasTriggers or ValidateIndexRequestRel.NonFinishedNotInErrorTriggersExist))
			
		HasUnfinishedPurgeRequest
			default label is "UnfinishedPurgeRequestExists"
			when (PurgeIndexRequestRelExists
			and   (not PurgeIndexRequestRel.HasTriggers or PurgeIndexRequestRel.NonFinishedNotInErrorTriggersExist))
			
		HasUnfinishedRequest
			default label is "UnfinishedRequestExists"
			when (HasUnfinishedPopulateRequest or HasUnfinishedValidateRequest or HasUnfinishedPurgeRequest)
			
	Rule Blocks
		TerminateAndClearRequests
			if (CanTerminatePopulateIndexRequest)
				invoke TerminatePopulateIndexRequest
			invoke ClearPopulateIndexRequest
			if (CanTerminateValidateIndexRequest)
				invoke TerminateValidateIndexRequest
			invoke ClearValidateIndexRequest
			if (CanTerminatePurgeIndexRequest)
				invoke TerminatePurgeIndexRequest
			invoke ClearPurgeIndexRequest
	
	Sets
		ByBusClassSetName
			indexed
			Sort Order
				BusinessClass
				SetName
			
	Relations
		BusinessClassRel
			one-to-one relation to BusinessView
			Field Mapping uses symbolic key
				related.BusinessView = BusinessClass	
				
		PopulateIndexRequestRel
			one-to-one relation to AsyncActionRequest
			Field Mapping uses symbolic key
				related.AsyncActionRequest = PopulateIndexRequest
				
		ValidateIndexRequestRel
			one-to-one relation to AsyncActionRequest
			Field Mapping uses symbolic key
				related.AsyncActionRequest = ValidateIndexRequest
							
		PurgeIndexRequestRel
			one-to-one relation to AsyncActionRequest
			Field Mapping uses symbolic key
				related.AsyncActionRequest = PurgeIndexRequest
										
		UserKeyStorageRel
			one-to-many relation to UserKey_Storage
			Field Mapping uses ByAlpha100s
				related.UserKey_Storage.UserSet_State = UserSet_State

   	Actions
   		Create is a Create Action
   			restricted
	   		
   			Exit Rules
   				invoke FireEvent
  			
   		CreateFromSpec is a Create Action
   			default label is untranslatable
   			restricted

   			Parameters
				BusinessClassNameParam	is LPLName
					default label is untranslatable
				SetNameParam			is LPLName
					default label is untranslatable
		
			Parameter Rules
				BusinessClassNameParam
					required
					
				SetNameParam
					required
		   		
			Exit Rules
				invoke FireEvent

		Delete is a Delete Action
			completion message is "UserSetStateDeleted"
			
			Entrance Rules
				if (State.Optimized and any UserKeyStorageRel exist)
					confirmation required
						"SetIsOptimized._AreYouSureYouWantTo_Delete?"
				invoke DisableInternal 
				
		DeleteNoRules is a Delete Action
			restricted
			
			Entrance Rules
				invoke DisableInternal 
				
		Disable is an Instance Action
			valid when (CanDisable)
			completion message is "UserSetStateDisabled"
		
			Entrance Rules
				confirmation required
					"AreYouSureYouWantTo_Disable?"
				
			Action Rules
				invoke DisableInternal
				
		DisableInternal is an Instance Action
			default label is untranslatable
			restricted
			
			Action Rules
    			include TerminateAndClearRequests
				if (CanPurgeIndex)
					invoke PurgeIndex
				State = State.Disabled
				
			Exit Rules
				invoke FireEvent

		SetToPending is an Instance Action
			valid when (State.Optimized)
			completion message is "UserSetStateSetTo_Pending"
			
			Entrance Rules
				confirmation required
					"SetIsOptimized._AreYouSureYouWantTo_Set_To_Pending?"
			
			Action Rules
				invoke SetToPendingInternal

		SetToPendingInternal is an Instance Action
			default label is untranslatable
			restricted
			
			Action Rules
				State = State.Pending
				
			Exit Rules
				invoke FireEvent

		ClearOptimizedSetCache is an Instance Action
			completion message is "OptimizedSetCacheCleared"
		
			Action Rules
				invoke FireEvent
		
    	FireEvent is an Instance Action 
			restricted
				
		PopulateIndex is an Instance Action
			valid when (CanPopulateIndex)
			
            Action Rules
				include TerminateAndClearRequests
				invoke SetToPendingInternal
				invoke Populate UserKeyStorageMaint in background 
					assign async action request id to PopulateIndexRequest
					invoked.BusinessClass	= BusinessClass
					invoked.SetName			= SetName
					invoked.UserSetStateUid	= UserSet_State

		TerminatePopulateIndexRequest is an Instance Action
			valid when (CanTerminatePopulateIndexRequest)
			completion message is "PopulateIndexRequestTerminated"

			Action Rules
				if (HasUnfinishedPopulateRequest)
					for each PopulateIndexRequestRel.NonFinishedTriggers
						invoke RequestTerminationInternal each

		ClearPopulateIndexRequest is an Instance Action
			valid when (CanClearPopulateIndexRequest)
			completion message is "PopulateIndexRequestCleared"

			Action Rules
				if (any PopulateIndexRequestRel.FailedTriggersExist)
					invoke DeleteInternal PopulateIndexRequestRel
				PopulateIndexRequest = blank

		ValidateIndex is an Instance Action
			valid when (CanValidateIndex)
			
			Action Rules
				include TerminateAndClearRequests
				invoke Validate UserKeyStorageMaint in background 
					assign async action request id to ValidateIndexRequest
					invoked.BusinessClass	= BusinessClass
					invoked.SetName			= SetName

		TerminateValidateIndexRequest is an Instance Action
			valid when (CanTerminateValidateIndexRequest)
			completion message is "ValidateIndexRequestTerminated"

			Action Rules
				if (HasUnfinishedValidateRequest)
					for each ValidateIndexRequestRel.NonFinishedTriggers
						invoke RequestTerminationInternal each

		ClearValidateIndexRequest is an Instance Action
			valid when (CanClearValidateIndexRequest)
			completion message is "ValidateIndexRequestCleared"

			Action Rules
				if (any ValidateIndexRequestRel.FailedTriggersExist)
					invoke DeleteInternal ValidateIndexRequestRel
				ValidateIndexRequest = blank

		PurgeIndex is an Instance Action
			valid when (CanPurgeIndex)
				
			Local Fields
				LocalFilterString		is LPLText
				
			Action Rules
				include TerminateAndClearRequests
				if (State.Optimized or State.Disabled) 
					invoke SetToPendingInternal
				LocalFilterString  = "BusinessClass=\"" + BusinessClass + "\" and SetName=\"" + SetName + "\""




				invoke RunCommand PurgeData in background 
					assign async action request id to PurgeIndexRequest
					invoked.BusinessClass	= "UserKey_Storage"
					invoked.SetName 		= "ByBusClassSetName"
					invoked.FilterString	= LocalFilterString

		TerminatePurgeIndexRequest is an Instance Action
			valid when (CanTerminatePurgeIndexRequest)
			completion message is "PurgeIndexRequestTerminated"

			Action Rules
				if (HasUnfinishedPurgeRequest)
					for each PurgeIndexRequestRel.NonFinishedTriggers
						invoke RequestTerminationInternal each

		ClearPurgeIndexRequest is an Instance Action
			valid when (CanClearPurgeIndexRequest)
			completion message is "PurgeIndexRequestCleared"

			Action Rules
				if (any PurgeIndexRequestRel.FailedTriggersExist)
					invoke DeleteInternal PurgeIndexRequestRel
				PurgeIndexRequest = blank
