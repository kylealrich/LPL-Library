ReportingBasisYear is a BusinessClass
    owned by GeneralLedger
    prefix is GLRBY

    Ontology
    	symbolic key is ReportingBasisYear
        
	Patterns
		disable Auditing 
 		disable EffectiveDated
		disable AsOfDateProcessing

    Persistent Fields
    	YearClosed					is Boolean
    	SequenceNumber
    	GainLossRunSequence			is a SequenceNumber
		AsyncId						is a AsyncActionRequest
			delete ignored
		CloseTimeStamp				is TimeStamp
		RetainedEarningsTimeStamp	is TimeStamp		

	Transient Fields

	Local Fields
		LocalBasisYear				is a GeneralLedgerCalendarYear
    	LocalBasisEndDatee			is Date
		BypassProjectDateEdit											
		LocalAccountingEntity				is a AccountingEntity
		LocalAccountingEntityGroup			is a AccountingEntityGroup
		LocalYearEndJournalView				is a ReportingBasisYearEndJournal view
		LocalYearEndJournal					is a ReportingBasisYearEndJournal
		LocalCalendarPeriod	  	  			is a GeneralLedgerCalendarPeriod	
		LocalAccountingUnit					is an AccountingUnit	
		LocalYearEndLedger					is a Ledger		
		LocalReportingBasisLedger			is a Ledger
		LocalSystem							is a GeneralLedgerSystemCode
		LocalCurrency						is a Currency		
		LocalProject						is a Project		
		LocalDimensionCode					is a DimensionCode
		LocalGeneralLedgerChartAccount 		is a GeneralLedgerChartAccount
		LocalISGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
		LocalYearEndReportType				is Numeric size 1
			States
				BalanceSheetOpening			value is 1
				ProfitAndLoss    			value is 2
				BalanceSheetClosing			value is 3	
		LocalLedger							is a Ledger	

							
	Derived Fields
		DerivedBasisYearKey			is a StringField
			type is AlphaUpper 20
			restricted
			ReportingBasis.GeneralLedgerCalendar.CalendarSequence
			"_"
			LocalBasisYear
		BasisStartDate		is a DerivedField
			type is Date
			restricted
			LocalBasisYear	= ReportingBasisYear - 1
			if (last PeriodShadowForYearRel exists)
				return last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod.Date + 1
			else
				LocalBasisYear	= ReportingBasisYear
				return first PeriodShadowForYearRel.GeneralLedgerCalendarPeriod.Date
		BasisEndDate		is a DerivedField
			type is Date
			LocalBasisYear	= ReportingBasisYear
			return last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod.Date
		BasisEndPeriod		is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			LocalBasisYear	= ReportingBasisYear
			return last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod
		BasisEndDateForMove		is a DerivedField
			type is Date
			LocalBasisYear	= ReportingBasisYear -1
			return last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod.Date
		BasisEndPeriodForMove	is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			LocalBasisYear	= (ReportingBasisYear - 1)
			return last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod
		DerivedNewYear		is a DerivedField
			type is Year
			restricted
			return ReportingBasisYear + 1
		DerivedCalendarPeriodString is a StringField
			type is AlphaUpper 20
			restricted
			DerivedNewYear
			"000"
		DerivedCloseStatus is a DerivedField
			type is Alpha 6
			restricted
			if (YearClosed)
				return ClosedMessage
			else
				return OpenMessage
		DerivedNewYearMove		is a DerivedField
			type is Year
			restricted
			return ReportingBasisYear - 1
		DerivedCalendarPeriodStringMove is a StringField
			type is AlphaUpper 20
			restricted
			DerivedNewYearMove
			"000"
		ClosedMessage				is a MessageField
			restricted
			"Closed"
		OpenMessage					is a MessageField
			restricted
			"Open"




		DerivedBeginingBalancePeriodString is a StringField		
			type is AlphaUpper 20
			restricted
			LocalBasisYear
			"000"												

    Conditions
		EntitiesDefinedForBasis
			restricted
			when (ReportingBasis.AccountingEntityHierarchyDetailRel exists)
		CurrentBasisYear
			restricted
			when (ReportingBasisYear	= ReportingBasis.BasisYear)
		UptoCurrentBasisYear
			restricted
			when (ReportingBasisYear	<= ReportingBasis.BasisYear)
		ValidCurrentYearBudgetBasis
			restricted
			when (!YearClosed
			and   ReportingBasis.UseForBudgetEdit)



		AllowedToBuildYearEndJournal				
			restricted
			when (ReportingBasis.YearEndJournalReports
			and EntitiesDefinedForBasis)

		YearEndJournalsExist						
			restricted
			when (YearEndJournalPerReportingBasisYearRel exists)	
	Relations
		PeriodShadowForYearRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses BySummaryPeriod
				related.FinanceEnterpriseGroup			   = FinanceEnterpriseGroup
				related.GeneralLedgerCalendar			   = ReportingBasis.GeneralLedgerCalendar
				related.SummaryGeneralLedgerCalendarPeriod = DerivedBasisYearKey
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= ReportingBasis.GeneralLedgerCalendar.TopNode
				related.Year							= LocalBasisYear
				related.PeriodType						= 1
		BasisYearPreviousRecordRel
			one-to-many relation to ReportingBasisYear
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.ReportingBasis					= ReportingBasis
			Instance Selection
				where (related.ReportingBasisYear		< ReportingBasisYear)
		EntityLedgerPreviousRecordRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.AccountingEntity		= any AccountingEntityHierarchyDetailRel.SubordinateAccountingEntity
				and	   related.Ledger				= any LedgerHierarchyDetailRel.SubordinateLedger
				and    related.OpenPeriod
				and    related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	<= last PeriodShadowForYearRel.GeneralLedgerCalendarPeriod) 
		AccountingEntityHierarchyDetailRel  
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode  
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.TopNode						= ReportingBasis.AccountingEntityTopNode
		LedgerHierarchyDetailRel  
			one-to-many relation to LedgerHierarchy
			Field Mapping uses ByParent  
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Ledger						= ReportingBasis.LedgerTopNode
		OpenEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByAccountingEntity
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.AccountingEntity		= LocalAccountingEntity		
			Instance Selection
				where (related.TransactionDate	<= LocalBasisEndDatee
				and    related.NonPOOpenEncumbrances)








		LedgerChildrenRel
			one-to-many relation to Ledger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup	
				related.Ledger							= LedgerHierarchyDetailRel.SubordinateLedger	
			Instance Selection
				where (related.CloseLedger)

		LedgerRel		
			one-to-many relation to Ledger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup	
				related.Ledger							= LedgerHierarchyDetailRel.SubordinateLedger	


		AccountingEntityHierarchyRecordRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= ReportingBasis.AccountingEntityTopNode
				related.SubordinateAccountingEntity		= LocalAccountingEntity

		YearEndJournalPerEntityRel																		
			one-to-one relation to ReportingBasisYearEndJournal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup			
				related.ReportingBasis									= ReportingBasis		
				related.ReportingBasisYear								= LocalCalendarPeriod.Year						
				related.AccountingEntity								= LocalAccountingEntity
				related.ReportingBasisYearEndJournal					= LocalYearEndReportType

		YearEndJournalAllRecordRel																		
			one-to-many relation to ReportingBasisYearEndJournal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup			
				related.ReportingBasis									= ReportingBasis		
				related.ReportingBasisYear								= LocalCalendarPeriod.Year					
				related.AccountingEntity								= AccountingEntityHierarchyDetailRel.SubordinateAccountingEntity
				related.ReportingBasisYearEndJournal					= LocalYearEndReportType				
																		
		IncomeStatementGeneralLedgerTotalRel														   
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByChartAccount
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.Scenario									= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity							= LocalAccountingEntity	
				related.GeneralLedgerTotal.Ledger					= LocalYearEndLedger											
			Instance Selection
				where ((related.GeneralLedgerTotal.EntityYearPeriod >= DerivedBeginingBalancePeriodString
				and     related.GeneralLedgerTotal.EntityYearPeriod <= GeneralLedgerCalendarPeriodRel.EndDateJulian)
				and (related.GeneralLedgerTotal.AccountingUnit		= LocalAccountingUnit)
				and (related.GeneralLedgerTotal.Project				= LocalProject)
				and (related.GeneralLedgerTotal.DimensionCode		= LocalDimensionCode)
				and (related.GeneralLedgerTotal.Currency			= LocalCurrency)
				and related.ChartSection.IncomeStatement)

		IncomeStatementWithCloseToAccountGeneralLedgerTotalRel											
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByChartAccount
				related.FinanceEnterpriseGroup						 	= FinanceEnterpriseGroup
				related.Scenario									 	= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity							 	= LocalAccountingEntity	
				related.GeneralLedgerTotal.Ledger					 	= LocalYearEndLedger							
			Instance Selection
				where ((related.GeneralLedgerTotal.EntityYearPeriod 	 >= DerivedBeginingBalancePeriodString
				and     related.GeneralLedgerTotal.EntityYearPeriod 	 <= GeneralLedgerCalendarPeriodRel.EndDateJulian)
				and (related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalISGeneralLedgerChartAccount)
				and (related.GeneralLedgerTotal.AccountingUnit			  = LocalAccountingUnit)
				and (related.GeneralLedgerTotal.Project				 	  = LocalProject)
				and (related.GeneralLedgerTotal.DimensionCode		 	  = LocalDimensionCode)
				and (related.GeneralLedgerTotal.Currency			 	  = LocalCurrency)
				and related.ChartSection.IncomeStatement)
					
		BalanceSheetGeneralLedgerTotalRel																
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByChartAccount
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.Scenario									= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity							= LocalAccountingEntity					
				related.GeneralLedgerTotal.Ledger					= LocalReportingBasisLedger											
			Instance Selection
				where ((related.GeneralLedgerTotal.EntityYearPeriod = DerivedCalendarPeriodString)  
				and		related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartSection.BalanceSheet)

		GeneralLedgerTotalYearEndJournalTransactionRel													
			one-to-one relation to ReportingBasisYearEndJournalTransaction
			Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup			          								= FinanceEnterpriseGroup
                related.ReportingBasis															= ReportingBasis
                related.ReportingBasisYear														= ReportingBasisYear
                related.AccountingEntity														= LocalAccountingEntity
				related.ReportingBasisYearEndJournal											= LocalYearEndReportType                
				related.ReportingBasisYearEndJournalTransaction.EntityYearPeriod				= LocalCalendarPeriod
				related.ReportingBasisYearEndJournalTransaction.PrimaryLedger		 		  	= LocalYearEndLedger						
				related.ReportingBasisYearEndJournalTransaction.System							= LocalSystem
				related.ReportingBasisYearEndJournalTransaction.Currency			 		  	= LocalCurrency						
				related.ReportingBasisYearEndJournalTransaction.AccountingUnit 		  			= LocalAccountingUnit
				related.ReportingBasisYearEndJournalTransaction.Project                  		= LocalProject
                related.ReportingBasisYearEndJournalTransaction.DimensionCode					= LocalDimensionCode
				related.ReportingBasisYearEndJournalTransaction.GeneralLedgerChartAccount		= LocalGeneralLedgerChartAccount                	
				related.ReportingBasisYearEndJournalTransaction.Ledger							= LocalReportingBasisLedger
				
		AccountingEntityGroupMemberRel
			one-to-many relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingEntityGroup 		= LocalAccountingEntityGroup
				related.AccountingEntity	  		= AccountingEntityHierarchyDetailRel.SubordinateAccountingEntity
						
		AccountingEntityGroupMember2Rel			
			one-to-many relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingEntityGroup 		= LocalAccountingEntityGroup

		ReportingChartAccountByCloseAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses ByCloseToAccount
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.ReportingChart							= ReportingBasis.ReportingChart
				related.CloseToAccount							= LocalGeneralLedgerChartAccount
			Instance Selection	
				where (related.ChartType.Posting)

		ReportingChartAccountBySubordinateAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses AccountByChartType
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.ReportingChart							= ReportingBasis.ReportingChart	
				related.ChartType								= ChartType.Posting					
				related.GeneralLedgerChartAccount				= LocalGeneralLedgerChartAccount		
			Instance Selection	
				where (related.CloseToAccount entered)
			
		YearEndJournalPerReportingBasisYearRel
			one-to-many relation to ReportingBasisYearEndJournal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
			Instance Selection
				where ((related.ReportingBasisYear.ReportingBasis 	= ReportingBasisYear.ReportingBasis)
				and   (related.ReportingBasisYear					= ReportingBasisYear))

		YearEndJournalTransactionPerReportingBasisYearRel
			one-to-many relation to ReportingBasisYearEndJournalTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
			Instance Selection
				where ((related.ReportingBasisYear.ReportingBasis 	= ReportingBasisYear.ReportingBasis)
				and   (related.ReportingBasisYear					= ReportingBasisYear))

		GeneralLederClosePeriodRel									
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= LocalAccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod >= LocalCalendarPeriod)		
		
		GeneralLedgerJournalControlRefRel
			one-to-many relation to GeneralLedgerJournalControlRef
			Field Mapping uses ByYearEndJournal
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ReportingBasis					 = ReportingBasis
				related.AccountingEntity				 = LocalAccountingEntity
				related.GeneralLedgerJournalControl      = 0
				related.ReportingBasisYear			     = LocalCalendarPeriod.Year
				related.ReportingBasisYearEndJournal     = LocalYearEndReportType

		GeneralLedgerJournalControlRefAllRecordRel
			one-to-many relation to GeneralLedgerJournalControlRef
			Field Mapping uses ByYearEndJournal
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup			
				related.ReportingBasis					 = ReportingBasis		
				related.AccountingEntity				 = AccountingEntityHierarchyDetailRel.SubordinateAccountingEntity
				related.GeneralLedgerJournalControl      = 0				
				related.ReportingBasisYear				 = LocalCalendarPeriod.Year					
				related.ReportingBasisYearEndJournal	 = LocalYearEndReportType	

		GeneratedYearEndTransactionRel
			one-to-many relation to ReportingBasisYearEndJournalTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingBasis				= ReportingBasis
				related.ReportingBasisYear			= LocalCalendarPeriod.Year
				related.AccountingEntity			= LocalAccountingEntity
				related.ReportingBasisYearEndJournal = LocalYearEndReportType

		EntityLedgerPeriodRel		
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= LocalAccountingEntity
				related.Ledger						= ReportingBasis.DerivedRetainedEarningsLedger
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = BasisEndPeriod

	Rule Blocks	
					
	Actions
		Create is a Create Action
			restricted

		Update is an Update Action
			restricted

		Delete is a Delete Action
			restricted

		OpenBasisYear is an Instance Action
			restricted
			refresh and lock this instance
			Action Rules
				YearClosed		= false

		UpdateGainLossRunSequence is an Instance Action
			restricted
			Action Rules
				GainLossRunSequence		+= 1

		ProcessRetainedEarnings is an Instance Action		
			valid when (ReportingBasis.ProcessRetainedEarnings)
			completion message is "RetainedEarningsAreNowProcessed"
			Parameters
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmLedgerGroup				is a Ledger group
					default label is "LedgerGroup"			
				PrmLedger					is a Ledger
					default label is "Ledger"
				PrmOutputOption					is AlphaUpper 1
					default label is "OutputOption"
					States
						Summary		value is "S"
						Detail		value is "D"


			Parameter Rules
				PrmOutputOption
					initial value is "S"
				PrmAccountingEntity
					constraint (!PrmAccountingEntityGroup entered)
						"CannotEnterBothAccountingEntityAndAccountingEntityGroup"
				PrmLedger							
					constraint (!PrmLedgerGroup entered)
						"CannotEnterBothLedgerAndLedgerGroup"
			Local Fields
				LocalLedger					is a Ledger

				LocalBusinessClass			is a BusinessClass
				LocalLedgerGroup			is a BusinessClassGroup
			Entrance Rules

				if (last BasisYearPreviousRecordRel exists)
					constraint (last BasisYearPreviousRecordRel.YearClosed)
						"CannotProcessRetainedEarnings;PriorYearIsOpen"

				if (ReportingBasis.BasisYear		= ReportingBasisYear)
					LocalBasisYear	= ReportingBasisYear + 1
					constraint (GeneralLedgerCalendarPeriodRel exists)
						"CalendarNotSetupFor<ReportingBasis.GeneralLedgerCalendar>_<LocalBasisYear>"

				constraint (FinanceEnterpriseGroup.DerivedRetainedEarnings entered)
					"RetainedEarningsSystemAccountNotSetup"
				constraint (FinanceEnterpriseGroup.DerivedSummaryRevenue entered)
					"SummaryRevenueSystemAccountNotSetup"
				constraint (FinanceEnterpriseGroup.DerivedSummaryExpense entered)
					"SummaryExpenseSystemAccountNotSetup"
				if (PrmAccountingEntity entered)
					LocalAccountingEntity 	= PrmAccountingEntity
					constraint (EntityLedgerPeriodRel.PeriodStatus.Open  
					or          EntityLedgerPeriodRel.PeriodStatus.Backpost)
							"Period<EntityLedgerPeriodRel.DerivedFiscalYearPeriod>IsClosedFor_\Accounting_\Entity<LocalAccountingEntity>_\Retained_\Earnings_\Ledger"
				else
					if (PrmAccountingEntityGroup entered)
						LocalAccountingEntityGroup = PrmAccountingEntityGroup
						for each AccountingEntityGroupMember2Rel
							LocalAccountingEntity = each.AccountingEntity
							display "JP:2:LocalAccountingEntity=<LocalAccountingEntity>"
							constraint (EntityLedgerPeriodRel.PeriodStatus.Open  
							or EntityLedgerPeriodRel.PeriodStatus.Backpost)
								"Period<EntityLedgerPeriodRel.DerivedFiscalYearPeriod>IsClosedFor_\Accounting_\Entity<LocalAccountingEntity>_\Retained_\Earnings_\Ledger"
						display "JP:3:EndforEachLedgerGroup"
					else
						for each AccountingEntityHierarchyDetailRel
							LocalAccountingEntity = each.SubordinateAccountingEntity
							display "JP:4:LocalAccountingEntity=<LocalAccountingEntity>"
							constraint (EntityLedgerPeriodRel.PeriodStatus.Open  
							or EntityLedgerPeriodRel.PeriodStatus.Backpost)
								"Period<EntityLedgerPeriodRel.DerivedFiscalYearPeriod>IsClosedFor_\Accounting_\Entity<LocalAccountingEntity>_\Retained_\Earnings_\Ledger"
						display "JP:5:EndforEachLedgerGroup"

			Action Rules
				LocalBusinessClass            = "GeneralLedgerTotal"
				LocalLedgerGroup              = ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "/" + "RE" + "_")
				if (!LocalLedgerGroup exists)
					invoke BuildRetainedEarningsBusClassGroup ReportingBasis
				SequenceNumber += 1
				LocalLedger			= ReportingBasis.DerivedRetainedEarningsLedger
				if (!LocalLedger.UsedByATransaction)
	 				invoke Update LocalLedger
	 					invoked.UsedByATransaction		= true


				RetainedEarningsTimeStamp	= current timestamp
			Exit Rules
				invoke ProcessRetainedEarnings AccountingEntityHierarchy in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmReportingBasis			= ReportingBasis
					invoked.PrmReportingBasisYear		= ReportingBasisYear
					invoked.PrmAccountingEntity			= PrmAccountingEntity
					invoked.PrmAccountingEntityGroup	= PrmAccountingEntityGroup
					invoked.PrmRetainedEarningsLedger	= ReportingBasis.DerivedRetainedEarningsLedger
					invoked.PrmDateRange.Begin			= BasisStartDate
					invoked.PrmDateRange.End			= BasisEndDate
					invoked.PrmSequenceNumber			= SequenceNumber
					invoked.PrmBasisEndPeriod			= BasisEndPeriod


					invoked.PrmOutputOption				= PrmOutputOption
					invoked.PrmLedgerGroup				= ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "/" + "RE" + "_")
					invoked.PrmLedgerGroup2				= PrmLedgerGroup		
					invoked.PrmLedger					= PrmLedger

		YearEndClose is an Instance Action
			valid when (EntitiesDefinedForBasis)		
			completion message is "CloseComplete"
			Parameters
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmChangedTotalsOnly		is Boolean
					default label is "ChangedTotalsOnly"

			Parameter Rules
				PrmAccountingEntity
					constraint (!PrmAccountingEntityGroup entered)
						"<FinanceEnterpriseGroup.AccountingEntityLabel>,_<FinanceEnterpriseGroup.AccountingEntityLabel>Group:_EnterAValueInOnlyOneOfTheseFields"

			Local Fields
				LocalReportingBasisYear		is a ReportingBasisYear
				LocalLedger					is a Ledger
				LocalTimeStampRange			is a TimeStampRange
				LocalBusinessClass			is a BusinessClass
				LocalLedgerGroup			is a BusinessClassGroup
				LocalISAccountGroup			is a BusinessClassGroup
				
			Entrance Rules			

				if (last BasisYearPreviousRecordRel exists)
					constraint (last BasisYearPreviousRecordRel.YearClosed)
						"CannotClose;PriorYearIsOpen"

				LocalBasisYear		= ReportingBasisYear
				if (EntityLedgerPreviousRecordRel exists)
					constraint (!last EntityLedgerPreviousRecordRel.OpenPeriod)
						"CloseAllPeriodsFor<FinanceEnterpriseGroup.LedgerMessage>_<first EntityLedgerPreviousRecordRel.Ledger>_<FinanceEnterpriseGroup.AccountingEntityLabel>_<first EntityLedgerPreviousRecordRel.AccountingEntity>"

				if (ReportingBasis.BasisYear		= ReportingBasisYear)
					LocalBasisYear	= ReportingBasisYear + 1
					constraint (GeneralLedgerCalendarPeriodRel exists)
						"CalendarNotSetupFor<ReportingBasis.GeneralLedgerCalendar>_<LocalBasisYear>"

			Action Rules		
				LocalBusinessClass            = "GeneralLedgerTotal"
				LocalLedgerGroup              = ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_")
				if (!LocalLedgerGroup exists)
					display "LocalLedgerGroupExists"
					invoke BuildLedgerBusClassGroup ReportingBasis
					
				LocalISAccountGroup           = ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_IS_")
				invoke BuildAccountBusClassGroup ReportingBasis
				
				if (!ReportingBasis.IncomeStatmementAccountsWithCloseToAccountRel exists)
					initialize LocalISAccountGroup
										
				SequenceNumber += 1
 				LocalLedger			= ReportingBasis.DerivedCloseLedger
				if (!LocalLedger.UsedByATransaction)
	 				invoke Update LocalLedger
	 					invoked.UsedByATransaction		= true
				YearClosed		= true
				if (ReportingBasisYear		= ReportingBasis.BasisYear)
					LocalReportingBasisYear				= ReportingBasisYear + 1
					if (!LocalReportingBasisYear exists)
						invoke Create ReportingBasisYear
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.ReportingBasis				= ReportingBasis
							invoked.ReportingBasisYear			= ReportingBasisYear + 1
					invoke YearEndClose ReportingBasis
				LocalTimeStampRange.Begin		= CloseTimeStamp
				LocalTimeStampRange.End			= current timestamp
				CloseTimeStamp 					= current timestamp

			Exit Rules
				invoke Create ReportingBasisCloseResult
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.ReportingBasis				= ReportingBasis
					invoked.ReportingBasisYear			= ReportingBasisYear
					invoked.AccountingEntity			= PrmAccountingEntity
					invoked.AccountingEntityGroup		= PrmAccountingEntityGroup
					invoked.ReportingBasisCloseResult	= SequenceNumber
					invoked.RunTime				  		= current timestamp
					invoked.CloseLedger					= ReportingBasis.DerivedCloseLedger
					invoked.DateRange.Begin				= BasisStartDate
					invoked.DateRange.End				= BasisEndDate
					invoked.NewYear						= DerivedCalendarPeriodString
					invoked.NewYearDate					= BasisEndDate + 1
					invoked.CloseOption					= 1
					invoked.ChangedTotalsOnly			= PrmChangedTotalsOnly
					invoked.TransientSkipAttachRule		= true

				invoke YearEndClose AccountingEntityHierarchy in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmReportingBasis			= ReportingBasis
					invoked.PrmReportingBasisYear		= ReportingBasisYear
					invoked.PrmAccountingEntity			= PrmAccountingEntity
					invoked.PrmAccountingEntityGroup	= PrmAccountingEntityGroup
					invoked.PrmCloseLedger				= ReportingBasis.DerivedCloseLedger
					invoked.PrmDateRange.Begin			= BasisStartDate
					invoked.PrmDateRange.End			= BasisEndDate
					invoked.PrmSequenceNumber			= SequenceNumber
					invoked.PrmNewYear					= DerivedCalendarPeriodString
					invoked.PrmNewYearDate				= BasisEndDate + 1
					invoked.PrmLedgerGroup     			= ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_")
					invoked.PrmISWithCloseAccountGroup  = LocalISAccountGroup
					invoked.PrmTimeStampRange  			= LocalTimeStampRange
					invoked.PrmChangedTotalsOnly		= PrmChangedTotalsOnly

		UpdateNextYearBalance is an Instance Action
			valid when (EntitiesDefinedForBasis)		
			completion message is "BalanceUpdateComplete"
			Parameters
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmChangedTotalsOnly		is Boolean
					default label is "ChangedTotalsOnly"
				PrmSkipAttachRule			is a SkipAttachRule
					default label is untranslatable:"SkipAttachRule"

			Parameter Rules
				PrmAccountingEntity
					constraint (!PrmAccountingEntityGroup entered)
						"<FinanceEnterpriseGroup.AccountingEntityLabel>,_<FinanceEnterpriseGroup.AccountingEntityLabel>Group:_EnterAValueInOnlyOneOfTheseFields"
				PrmSkipAttachRule
					default to true

			Local Fields
				LocalReportingBasisYear		is a ReportingBasisYear
				LocalLedger					is a Ledger
				LocalTimeStampRange			is a TimeStampRange
				LocalBusinessClass			is a BusinessClass
				LocalLedgerGroup			is a BusinessClassGroup
				LocalISAccountGroup			is a BusinessClassGroup

			Entrance Rules

				if (ReportingBasis.BasisYear		= ReportingBasisYear)
					LocalBasisYear	= ReportingBasisYear + 1
					constraint (GeneralLedgerCalendarPeriodRel exists)
						"CalendarNotSetupFor<ReportingBasis.GeneralLedgerCalendar>_<LocalBasisYear>"

			Action Rules
				LocalBusinessClass            = "GeneralLedgerTotal"
				LocalLedgerGroup              = ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_")
				if (!LocalLedgerGroup exists)
					invoke BuildLedgerBusClassGroup ReportingBasis
					
				LocalISAccountGroup           = ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_IS_")
				invoke BuildAccountBusClassGroup ReportingBasis
				
				if (!ReportingBasis.IncomeStatmementAccountsWithCloseToAccountRel exists)
					initialize LocalISAccountGroup
										
				SequenceNumber += 1
 				LocalLedger			= ReportingBasis.DerivedCloseLedger
				if (!LocalLedger.UsedByATransaction)
	 				invoke Update LocalLedger
	 					invoked.UsedByATransaction		= true
				if (ReportingBasisYear		= ReportingBasis.BasisYear)
					LocalReportingBasisYear				= ReportingBasisYear + 1
					if (!LocalReportingBasisYear exists)
						invoke Create ReportingBasisYear
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.ReportingBasis				= ReportingBasis
							invoked.ReportingBasisYear			= ReportingBasisYear + 1
				LocalTimeStampRange.Begin		= CloseTimeStamp
				LocalTimeStampRange.End			= current timestamp
				CloseTimeStamp 					= current timestamp

			Exit Rules
				invoke Create ReportingBasisCloseResult
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.ReportingBasis				= ReportingBasis
					invoked.ReportingBasisYear			= ReportingBasisYear
					invoked.AccountingEntity			= PrmAccountingEntity
					invoked.AccountingEntityGroup		= PrmAccountingEntityGroup
					invoked.ReportingBasisCloseResult	= SequenceNumber
					invoked.RunTime				  		= current timestamp
					invoked.CloseLedger					= ReportingBasis.DerivedCloseLedger
					invoked.DateRange.Begin				= BasisStartDate
					invoked.DateRange.End				= BasisEndDate
					invoked.NewYear						= DerivedCalendarPeriodString
					invoked.NewYearDate					= BasisEndDate + 1
					invoked.CloseOption					= 2
					invoked.ChangedTotalsOnly			= PrmChangedTotalsOnly

				invoke YearEndClose AccountingEntityHierarchy in background 
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmReportingBasis			= ReportingBasis
					invoked.PrmReportingBasisYear		= ReportingBasisYear
					invoked.PrmAccountingEntity			= PrmAccountingEntity
					invoked.PrmAccountingEntityGroup	= PrmAccountingEntityGroup
					invoked.PrmCloseLedger				= ReportingBasis.DerivedCloseLedger
					invoked.PrmDateRange.Begin			= BasisStartDate
					invoked.PrmDateRange.End			= BasisEndDate
					invoked.PrmSequenceNumber			= SequenceNumber
					invoked.PrmNewYear					= DerivedCalendarPeriodString
					invoked.PrmNewYearDate				= BasisEndDate + 1
					invoked.PrmLedgerGroup     			= ("_" + FinanceEnterpriseGroup + "/" + ReportingBasis + "_")
					invoked.PrmISWithCloseAccountGroup  = LocalISAccountGroup
					invoked.PrmTimeStampRange  			= LocalTimeStampRange
					invoked.PrmChangedTotalsOnly		= PrmChangedTotalsOnly



































		ProcessYearEndEncumbrance is an Instance Action
			valid when (ValidCurrentYearBudgetBasis)
			completion message is "ProcessYearEndEncumbranceComplete"
			Parameters

			Local Fields



			Entrance Rules
				LocalBasisEndDatee		= BasisEndDate
				for each AccountingEntityHierarchyDetailRel
					LocalAccountingEntity = each.SubordinateAccountingEntity
					constraint (!OpenEncumbranceRel exists)
						"OpenDocumentsExistForSystem<first OpenEncumbranceRel.System>,<FinanceEnterpriseGroup.AccountingEntityLabel>_<LocalAccountingEntity>"
			Action Rules








			Exit Rules
				invoke ProcessYearEndEncumbrance AccountingEntityHierarchy in background 
					invoked.PrmEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.PrmReportingBasis		= ReportingBasis
					invoked.PrmBasisEndDate			= BasisEndDate
					invoked.PrmBasisEndPeriod		= BasisEndPeriod	
					invoked.PrmNewYear				= DerivedCalendarPeriodString
					invoked.PrmNewYearDate			= BasisEndDate + 1



		MovePriorYearPOEncumbranceToCurrentYear is an Instance Action
			valid when (ValidCurrentYearBudgetBasis)
			completion message is "ProcessYearEndEncumbranceComplete"
			Parameters

			Local Fields



			Entrance Rules
				LocalBasisEndDatee		= BasisEndDateForMove
				if (last BasisYearPreviousRecordRel exists)
					constraint (last BasisYearPreviousRecordRel.YearClosed)
						"CannotProcess;PriorYearIsOpen"



			Action Rules









			Exit Rules
				invoke MovePriorYearPOEncumbranceToCurrentYear AccountingEntityHierarchy in background 
					invoked.PrmEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.PrmReportingBasis		= ReportingBasis
					invoked.PrmBasisEndDate			= BasisEndDateForMove
					invoked.PrmBasisEndPeriod		= BasisEndPeriodForMove
					invoked.PrmNewYear				= DerivedCalendarPeriodStringMove
					invoked.PrmNewYearDate			= BasisEndDateForMove + 1

		GenerateYearEndJournals is an Instance Action
			completion message is "GenerateYearEndJournals_Submitted"		// Landmark default message is "Completed" but completion message needs to be "Submitted"
			valid when (AllowedToBuildYearEndJournal)
			Parameters				
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmProfitAndLossReport			is Boolean
					default label is "Profit_andLossYearEndJournals"
				PrmBalanceSheetClosing			is Boolean
					default label is "BalanceSheetYearEndJournals"
				PrmBalanceSheetOpening			is Boolean
					default label is "BalanceSheetOpeningJournals"
								 							
			Parameter Rules
				PrmAccountingEntity		
					LocalAccountingEntity	=	PrmAccountingEntity		
					constraint (AccountingEntityHierarchyRecordRel exists)
						"NotValidForBasis:_<FinanceEnterpriseGroup.AccountingEntityLabel>_<PrmAccountingEntity>"	
									
					constraint (!PrmAccountingEntityGroup entered)
						"<FinanceEnterpriseGroup.AccountingEntityLabel>Group,_<FinanceEnterpriseGroup.AccountingEntityLabel>:_EnterAValueInOnlyOneOfTheseFields"
				PrmProfitAndLossReport
					initial value is true
						when (not ReportingBasis.ProcessRetainedEarnings)	
				PrmBalanceSheetClosing
					initial value is true
				PrmBalanceSheetOpening
					initial value is true																		
			Local Fields
				LocalAsyncId						is an AsyncActionRequest
			Rule Blocks
				CreateYearEndReportRule
					if (PrmProfitAndLossReport
					and BalanceSheetGeneralLedgerTotalRel exists)
						for each LedgerRel
						    if (not each.CloseLedger)			
								invoke CreateYearEndForIncomeStatement GeneralLedgerTotal in background
									run after LocalAsyncId
									assign async action request id to LocalAsyncId
									invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.PrmAccountingEntity				= LocalAccountingEntity	
									invoked.PrmLedger						= each.Ledger
									invoked.PrmDateRange.Begin				= GeneralLedgerCalendarPeriodRel.DerivedStartDate		
									invoked.PrmDateRange.End				= GeneralLedgerCalendarPeriodRel.DerivedEndDate  
									invoked.PrmReportingBasis				= ReportingBasis
									invoked.PrmReportingBasisYear			= ReportingBasisYear
									invoked.PrmReportingBasisLedger			= LocalReportingBasisLedger
									invoked.PrmEndingBalancePeriod			= GeneralLedgerCalendarPeriodRel.EndDateJulian	

					invoke CreateYearEndReport	GeneralLedgerTotal in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.PrmReportingBasis				= ReportingBasis
						invoked.PrmReportingBasisYear			= ReportingBasisYear
						invoked.PrmAccountingEntity				= LocalAccountingEntity	
						invoked.PrmReportingBasisLedger			= LocalReportingBasisLedger	
						invoked.PrmEntityYearPeriod				= DerivedCalendarPeriodString
						invoked.PrmProfitAndLossReport			= PrmProfitAndLossReport
						invoked.PrmBalanceSheetClosing			= PrmBalanceSheetClosing
						invoked.PrmBalanceSheetOpening			= PrmBalanceSheetOpening
						invoked.PrmEndingBalancePeriod			= GeneralLedgerCalendarPeriodRel.EndDateJulian	
			Entrance Rules    
				constraint (PrmProfitAndLossReport entered or  PrmBalanceSheetClosing entered or PrmBalanceSheetOpening entered)
					"SelectAtLeastOneYearEndJournalOption"
					
				LocalBasisYear				= ReportingBasisYear	
				LocalAccountingEntity		= PrmAccountingEntity
				LocalAccountingEntityGroup	= PrmAccountingEntityGroup

				confirmation required
					"Warning:_\IfPreviousYearEndJournalRecordsExistFor_<ReportingBasis>_<LocalBasisYear>,recordsWillBeRegenerated._\Continue?"
				
				invoke PurgeYearEndJournalPerEntity ReportingBasisYearEndJournalTransaction in background  
					assign async action request id to LocalAsyncId		
					invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.PrmReportingBasis				= ReportingBasis
					invoked.PrmReportingBasisYear			= ReportingBasisYear
					invoked.PrmAccountingEntity    			= PrmAccountingEntity
					invoked.PrmAccountingEntityGroup		= PrmAccountingEntityGroup
					invoked.PrmBalanceSheetOpeningBasisYear = DerivedNewYear

			Exit Rules  
				for each LedgerChildrenRel																																																				
					LocalReportingBasisLedger			= each.Ledger	
								
					initialize LocalGeneralLedgerChartAccount
					
					if (PrmAccountingEntity entered)
						LocalAccountingEntity = PrmAccountingEntity
						include CreateYearEndReportRule
					else
					if (LocalAccountingEntityGroup entered)
						for each AccountingEntityGroupMemberRel
							LocalAccountingEntity = each.AccountingEntity
							include CreateYearEndReportRule
					else
					if (!LocalAccountingEntity entered 
					and !LocalAccountingEntityGroup entered)
						for each AccountingEntityHierarchyDetailRel
							LocalAccountingEntity = each.SubordinateAccountingEntity
							include CreateYearEndReportRule

				invoke SendGenerateYearEndJournalNotification in background
					run after LocalAsyncId

		SendGenerateYearEndJournalNotification is an Instance Action
			restricted
			Local Fields
				LocalActor 							is an Actor	
			Action Rules
				LocalActor = actor		
				send notification												
					to LocalActor
					description is "GenerationOfYearEndJournalsCompleted"
					priority is medium
					detail is "ResultsCanBeSeenIn_Year_End_Journal_Results"
