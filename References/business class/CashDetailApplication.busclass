CashDetailApplication is a BusinessClass
	owned by ar
	prefix is RPCDA

	Ontology
		symbolic key is CashDetailApplication
	
	Patterns
		implements StaticJava
		implements Archivable

	Persistent Fields
		CashDetailApplicationGroup
		DistributionAmount					is a FinanceCurrencyAmountGroup
		ApplicationPostDate					is Date
		ApplicationSource					is AlphaUpper size 1
			States
				ReceivableApplication		value is "A"
				Reversed					value is "D"
				Reversal					value is "L"
				Transferred					value is "T"
				RTMPayment					value is "C"
	
	Transient Fields
		TransientCurrencyTable				is a CurrencyTable
			derive value from DerivedCurrencyTable
		OriginalCurrency					is a FromCurrency
			default label is "TransactionCurrency"
			derive value from ReceivablePayment.OriginalCurrency
		TransientAccountingEntity			is an AccountingEntity
			derive value from DerivedAccountingEntity
		TransientAppliedAmount				is an InternationalAmount
			default label is "AppliedAmount"
			derive value from DerivedAppliedAmount

	Derived Fields
		DerivedCurrencyTable is a DerivedField
			type is like CurrencyTable
			restricted
			if (ApplicationSource.ReceivableApplication)
				return CashDetailApplicationGroup.Company.DerivedCurrencyTable
			else
				return ReceivablePaymentHeader.CurrencyTable

		DerivedAccountingEntity is a DerivedField
			type is like AccountingEntity
			restricted
			if (ApplicationSource.ReceivableApplication)
				return CashDetailApplicationGroup.Company.AccountingEntity
			else
				return Company.AccountingEntity
		
		DerivedAppliedAmount is a DerivedField
			type is like InternationalAmount
			default label is "AppliedAmount"
			if (ApplicationSource.ReceivableApplication)
				if (CashDetailApplicationGroup.ReceivableApplication.TransType.CreditMemo)
					return (DistributionAmount.CurrencyAmount * -1)
				else
					return DistributionAmount.CurrencyAmount
			else
				return DistributionAmount.CurrencyAmount

	Relations


	Sets

		ByCashDetailApplicationGroup
			indexed
			Sort Order
				CashDetailApplicationGroup
				Company
				ReceivablePaymentHeader
				ReceivablePayment
				ReceivablePaymentCashDetail
				CashDetailApplication


	Actions				
		Create is a Create Action
			restricted
			Exit Rules
				invoke AddToAppliedAmount ReceivablePaymentCashDetail
					if (ApplicationSource.ReceivableApplication
					and CashDetailApplicationGroup.ReceivableApplication.TransType.CreditMemo)
						invoked.PrmAmount.CurrencyAmount 							= DistributionAmount.CurrencyAmount * -1
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount * -1
					else
						invoked.PrmAmount.CurrencyAmount 							= DistributionAmount.CurrencyAmount
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount
					

		Update is an Update Action
			restricted
			Exit Rules
				invoke AddToAppliedAmount ReceivablePaymentCashDetail
					if (ApplicationSource.ReceivableApplication
					and CashDetailApplicationGroup.ReceivableApplication.TransType.CreditMemo)
						invoked.PrmAmount.CurrencyAmount 							= ((DistributionAmount.CurrencyAmount 							- old DistributionAmount.CurrencyAmount) * -1)
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= ((DistributionAmount.FunctionalAmount.EnteredCurrencyAmount 	- old DistributionAmount.FunctionalAmount.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= ((DistributionAmount.AlternateAmount.EnteredCurrencyAmount 	- old DistributionAmount.AlternateAmount.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= ((DistributionAmount.AlternateAmount2.EnteredCurrencyAmount 	- old DistributionAmount.AlternateAmount2.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= ((DistributionAmount.AlternateAmount3.EnteredCurrencyAmount 	- old DistributionAmount.AlternateAmount3.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= ((DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount - old DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= ((DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount 	- old DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= ((DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount - old DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= ((DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount - old DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= ((DistributionAmount.ProjectAmount.EnteredCurrencyAmount 		- old DistributionAmount.ProjectAmount.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= ((DistributionAmount.ReportAmount1.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount1.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= ((DistributionAmount.ReportAmount2.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount2.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= ((DistributionAmount.ReportAmount3.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount3.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= ((DistributionAmount.ReportAmount4.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount4.EnteredCurrencyAmount) * -1)
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= ((DistributionAmount.ReportAmount5.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount5.EnteredCurrencyAmount) * -1)
					else
						invoked.PrmAmount.CurrencyAmount 							= DistributionAmount.CurrencyAmount 							- old DistributionAmount.CurrencyAmount
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount 	- old DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount.EnteredCurrencyAmount 		- old DistributionAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount 	- old DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount 	- old DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount 	- old DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount 	- old DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount 	- old DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount 	- old DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount 		- old DistributionAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount 		- old DistributionAmount.ReportAmount5.EnteredCurrencyAmount

		Delete is a Delete Action
			restricted
			Entrance Rules
				invoke AddToAppliedAmount ReceivablePaymentCashDetail
					if (ApplicationSource.ReceivableApplication
					and CashDetailApplicationGroup.ReceivableApplication.TransType.CreditMemo)
						invoked.PrmAmount.CurrencyAmount 							= DistributionAmount.CurrencyAmount
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount
					else
						invoked.PrmAmount.CurrencyAmount 							= DistributionAmount.CurrencyAmount * -1
						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToFunctionalAmount.EnteredCurrencyAmount 	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount2.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ToAlternateAmount3.EnteredCurrencyAmount 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ProjectAmount.EnteredCurrencyAmount 		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount * -1

		RoundingUpdate is an Instance Action
			restricted
			Parameters
				PrmRoundAmount is like FinanceCurrencyAmountGroup
			Action Rules

				DistributionAmount.FunctionalAmount.EnteredCurrencyAmount 	+= PrmRoundAmount.FunctionalAmount.EnteredCurrencyAmount
				DistributionAmount.AlternateAmount.EnteredCurrencyAmount 	+= PrmRoundAmount.AlternateAmount.EnteredCurrencyAmount
				DistributionAmount.AlternateAmount2.EnteredCurrencyAmount 	+= PrmRoundAmount.AlternateAmount2.EnteredCurrencyAmount
				DistributionAmount.AlternateAmount3.EnteredCurrencyAmount 	+= PrmRoundAmount.AlternateAmount3.EnteredCurrencyAmount





				DistributionAmount.ReportAmount1.EnteredCurrencyAmount 		+= PrmRoundAmount.ReportAmount1.EnteredCurrencyAmount
				DistributionAmount.ReportAmount2.EnteredCurrencyAmount 		+= PrmRoundAmount.ReportAmount2.EnteredCurrencyAmount
				DistributionAmount.ReportAmount3.EnteredCurrencyAmount 		+= PrmRoundAmount.ReportAmount3.EnteredCurrencyAmount
				DistributionAmount.ReportAmount4.EnteredCurrencyAmount 		+= PrmRoundAmount.ReportAmount4.EnteredCurrencyAmount
				DistributionAmount.ReportAmount5.EnteredCurrencyAmount 		+= PrmRoundAmount.ReportAmount5.EnteredCurrencyAmount

				invoke AddToAppliedAmount ReceivablePaymentCashDetail
					if (ApplicationSource.ReceivableApplication
					and CashDetailApplicationGroup.ReceivableApplication.TransType.CreditMemo)

						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= PrmRoundAmount.FunctionalAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount3.EnteredCurrencyAmount * -1





						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount1.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount2.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount3.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount4.EnteredCurrencyAmount * -1
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount5.EnteredCurrencyAmount * -1
					else

						invoked.PrmAmount.FunctionalAmount.EnteredCurrencyAmount 	= PrmRoundAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount2.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.AlternateAmount3.EnteredCurrencyAmount 	= PrmRoundAmount.AlternateAmount3.EnteredCurrencyAmount





						invoked.PrmAmount.ReportAmount1.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount2.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount3.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount4.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmAmount.ReportAmount5.EnteredCurrencyAmount 		= PrmRoundAmount.ReportAmount5.EnteredCurrencyAmount


		FastUpdate is an Update Action
			restricted
			bypass field rules

		Purge is a Purge Action
			restricted
