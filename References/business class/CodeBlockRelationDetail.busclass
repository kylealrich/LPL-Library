CodeBlockRelationDetail is a BusinessClass
    owned by GeneralLedger
    prefix is GLCBD

    Ontology
    	symbolic key is CodeBlockRelationDetail

	Patterns
		implements DynamicCreation
			
    Persistent Fields
		FromValue						is BusinessObjectReference
		ToValue							is BusinessObjectReference

		Ledger							is AlphaUpper 20

		AccountingEntity				is AlphaUpper 12

		AccountingUnit					is AlphaUpper 25

		GeneralLedgerChartAccount		is AlphaUpper 26
			default label is "GlobalLedgerChartAccount"

		Project							is AlphaUpper 25

		Dimension1						is AlphaUpper 15

		Dimension2						is AlphaUpper 15

		Dimension3						is AlphaUpper 15

		Dimension4						is AlphaUpper 15

		Dimension5						is AlphaUpper 15

		Dimension6						is AlphaUpper 15

		Dimension7						is AlphaUpper 15

		Dimension8						is AlphaUpper 15

		Dimension9						is AlphaUpper 15

		Dimension10						is AlphaUpper 15

		SortFromValue					is Alpha 25
		SortToValue						is Alpha 25
		KeyFromValue					is Alpha 200
		KeyToValue						is Alpha 200
		AllowUnits						is Numeric 1			
			States
				Default				value is 0
				No             		value is 1
				Required    		value is 2
				NotRequired			value is 3
		AnyTo							is Boolean
		AllowBlankWithAnyTo				is Boolean
		DefaultToValue					is Alpha 200		
		
	Transient Fields
		TransientLedger				is a Ledger
			derive value from Ledger
		TransientAccountingUnit		is an AccountingUnit

			derive value from AccountingUnit
		TransientContextAccount 	is a GeneralLedgerChartAccount
    		derive value from GeneralLedgerChartAccount
    	TransientEntity				is an AccountingEntity
    		derive value from AccountingEntity
    	TransientProject			is a Project
    		derive value from Project
    	TransientDimension1			is a FinanceDimension1
    		derive value from Dimension1
    	TransientDimension2			is a FinanceDimension2
    		derive value from Dimension2
    	TransientDimension3			is a FinanceDimension3
    		derive value from Dimension3
    	TransientDimension4			is a FinanceDimension4
    		derive value from Dimension4
    	TransientDimension5			is a FinanceDimension5
    		derive value from Dimension5
    	TransientDimension6			is a FinanceDimension6
    		derive value from Dimension6
    	TransientDimension7			is a FinanceDimension7
    		derive value from Dimension7
    	TransientDimension8			is a FinanceDimension8
    		derive value from Dimension8
    	TransientDimension9			is a FinanceDimension9
    		derive value from Dimension9
    	TransientDimension10		is a FinanceDimension10
    		derive value from Dimension10
		
	Local Fields
		LocalGeneralLedgerClosePeriod	is a GeneralLedgerClosePeriod
		LocalYear						is like GeneralLedgerCloseYear
		LocalCloseConfiguration			is like GeneralLedgerCloseConfiguration
		ValidAccountingEntity				is an AccountingEntityField

		ValidAccount						is a GeneralLedgerChartAccount
		ValidProject						is a Project
		ValidDimension1						is a FinanceDimension1
		ValidDimension2						is a FinanceDimension2
		ValidDimension3						is a FinanceDimension3
		ValidDimension4						is a FinanceDimension4
		ValidDimension5						is a FinanceDimension5
		ValidDimension6						is a FinanceDimension6
		ValidDimension7						is a FinanceDimension7
		ValidDimension8						is a FinanceDimension8
		ValidDimension9						is a FinanceDimension9
		ValidDimension10					is a FinanceDimension10

	Derived Fields
		DerivedFromValue is a DerivedField
			type is Alpha 50
			restricted
			if (CodeBlockRelation.FromField.Ledger)
				return Ledger
			if (CodeBlockRelation.FromField.AccountingEntity)
				return AccountingEntity
			if (CodeBlockRelation.FromField.AccountingUnit)
				return AccountingUnit
			if (CodeBlockRelation.FromField.Account)
				return GeneralLedgerChartAccount
			if (CodeBlockRelation.FromField.Project)
				return Project
			if (CodeBlockRelation.FromField.Dimension1)
				return Dimension1
			if (CodeBlockRelation.FromField.Dimension2)
				return Dimension2
			if (CodeBlockRelation.FromField.Dimension3)
				return Dimension3
			if (CodeBlockRelation.FromField.Dimension4)
				return Dimension4
			if (CodeBlockRelation.FromField.Dimension5)
				return Dimension5
			if (CodeBlockRelation.FromField.Dimension6)
				return Dimension6
			if (CodeBlockRelation.FromField.Dimension7)
				return Dimension7
			if (CodeBlockRelation.FromField.Dimension8)
				return Dimension8
			if (CodeBlockRelation.FromField.Dimension9)
				return Dimension9
			if (CodeBlockRelation.FromField.Dimension10)
				return Dimension10				
		DerivedFromLabel is a DerivedField
			type is Alpha 30
			restricted
			if (CodeBlockRelation.FromField.Ledger)
				return "Ledger"
			if (CodeBlockRelation.FromField.AccountingEntity)
				return FinanceEnterpriseGroup.AccountingEntityLabel
			if (CodeBlockRelation.FromField.AccountingUnit)
				return FinanceEnterpriseGroup.AccountingUnitLabel
			if (CodeBlockRelation.FromField.Account)
				return FinanceEnterpriseGroup.AccountLabel
			if (CodeBlockRelation.FromField.Project)
				return FinanceEnterpriseGroup.ProjectLabel
			if (CodeBlockRelation.FromField.Dimension1)
				return FinanceEnterpriseGroup.FinanceDimension1Label
			if (CodeBlockRelation.FromField.Dimension2)
				return FinanceEnterpriseGroup.FinanceDimension2Label
			if (CodeBlockRelation.FromField.Dimension3)
				return FinanceEnterpriseGroup.FinanceDimension3Label
			if (CodeBlockRelation.FromField.Dimension4)
				return FinanceEnterpriseGroup.FinanceDimension4Label
			if (CodeBlockRelation.FromField.Dimension5)
				return FinanceEnterpriseGroup.FinanceDimension5Label
			if (CodeBlockRelation.FromField.Dimension6)
				return FinanceEnterpriseGroup.FinanceDimension6Label
			if (CodeBlockRelation.FromField.Dimension7)
				return FinanceEnterpriseGroup.FinanceDimension7Label
			if (CodeBlockRelation.FromField.Dimension8)
				return FinanceEnterpriseGroup.FinanceDimension8Label
			if (CodeBlockRelation.FromField.Dimension9)
				return FinanceEnterpriseGroup.FinanceDimension9Label
			if (CodeBlockRelation.FromField.Dimension10)
				return FinanceEnterpriseGroup.FinanceDimension10Label				
		DerivedToValue is a DerivedField
			type is Alpha 50
			restricted
			if (CodeBlockRelation.ToField.AccountingEntity)
				return AccountingEntity
			if (CodeBlockRelation.ToField.AccountingUnit)
				return AccountingUnit
			if (CodeBlockRelation.ToField.Account)
				return GeneralLedgerChartAccount
			if (CodeBlockRelation.ToField.Project)
				return Project
			if (CodeBlockRelation.ToField.Dimension1)
				return Dimension1
			if (CodeBlockRelation.ToField.Dimension2)
				return Dimension2
			if (CodeBlockRelation.ToField.Dimension3)
				return Dimension3
			if (CodeBlockRelation.ToField.Dimension4)
				return Dimension4
			if (CodeBlockRelation.ToField.Dimension5)
				return Dimension5
			if (CodeBlockRelation.ToField.Dimension6)
				return Dimension6
			if (CodeBlockRelation.ToField.Dimension7)
				return Dimension7
			if (CodeBlockRelation.ToField.Dimension8)
				return Dimension8
			if (CodeBlockRelation.ToField.Dimension9)
				return Dimension9
			if (CodeBlockRelation.ToField.Dimension10)
				return Dimension10				
		DerivedToLabel is a DerivedField
			type is Alpha 30
			restricted
			if (CodeBlockRelation.ToField.AccountingEntity)
				return FinanceEnterpriseGroup.AccountingEntityLabel
			if (CodeBlockRelation.ToField.AccountingUnit)
				return FinanceEnterpriseGroup.AccountingUnitLabel
			if (CodeBlockRelation.ToField.Account)
				return FinanceEnterpriseGroup.AccountLabel
			if (CodeBlockRelation.ToField.Project)
				return FinanceEnterpriseGroup.ProjectLabel
			if (CodeBlockRelation.ToField.Dimension1)
				return FinanceEnterpriseGroup.FinanceDimension1Label
			if (CodeBlockRelation.ToField.Dimension2)
				return FinanceEnterpriseGroup.FinanceDimension2Label
			if (CodeBlockRelation.ToField.Dimension3)
				return FinanceEnterpriseGroup.FinanceDimension3Label
			if (CodeBlockRelation.ToField.Dimension4)
				return FinanceEnterpriseGroup.FinanceDimension4Label
			if (CodeBlockRelation.ToField.Dimension5)
				return FinanceEnterpriseGroup.FinanceDimension5Label
			if (CodeBlockRelation.ToField.Dimension6)
				return FinanceEnterpriseGroup.FinanceDimension6Label
			if (CodeBlockRelation.ToField.Dimension7)
				return FinanceEnterpriseGroup.FinanceDimension7Label
			if (CodeBlockRelation.ToField.Dimension8)
				return FinanceEnterpriseGroup.FinanceDimension8Label
			if (CodeBlockRelation.ToField.Dimension9)
				return FinanceEnterpriseGroup.FinanceDimension9Label
			if (CodeBlockRelation.ToField.Dimension10)
				return FinanceEnterpriseGroup.FinanceDimension10Label
		DerivedEntityAccountingUnit	is a StringField
			type is Alpha 40
			restricted
			AccountingEntity
			"-"
			AccountingUnit
		DerivedAllAreValid is a DerivedField
			type is Alpha 15
			DerivedAllAreValid			 = "_"
			DerivedAllAreValid			+= "ALL"
			DerivedAllAreValid			+= "_"
			DerivedAllAreValid			+= "ARE"
			DerivedAllAreValid			+= "_"
			DerivedAllAreValid			+= "VALID"
			DerivedAllAreValid			+= "_"
		DerivedOrMessage is a DerivedField
			type is Alpha 3
			DerivedOrMessage = "-"
			DerivedOrMessage += "or"
			DerivedOrMessage += "-"			
	Field Rules
		FromValue






























		KeyFromValue
			if (CodeBlockRelation.FromField.Ledger)
				KeyFromValue = Ledger
			if (CodeBlockRelation.FromField.AccountingEntity)
				KeyFromValue = AccountingEntity
			if (CodeBlockRelation.FromField.AccountingUnit)
				KeyFromValue = DerivedEntityAccountingUnit
			if (CodeBlockRelation.FromField.Account)
				KeyFromValue = GeneralLedgerChartAccount
			if (CodeBlockRelation.FromField.Project)
				KeyFromValue = Project
			if (CodeBlockRelation.FromField.Dimension1)
				KeyFromValue = Dimension1
			if (CodeBlockRelation.FromField.Dimension2)
				KeyFromValue = Dimension2
			if (CodeBlockRelation.FromField.Dimension3)
				KeyFromValue = Dimension3
			if (CodeBlockRelation.FromField.Dimension4)
				KeyFromValue = Dimension4
			if (CodeBlockRelation.FromField.Dimension5)
				KeyFromValue = Dimension5
			if (CodeBlockRelation.FromField.Dimension6)
				KeyFromValue = Dimension6
			if (CodeBlockRelation.FromField.Dimension7)
				KeyFromValue = Dimension7
			if (CodeBlockRelation.FromField.Dimension8)
				KeyFromValue = Dimension8
			if (CodeBlockRelation.FromField.Dimension9)
				KeyFromValue = Dimension9
			if (CodeBlockRelation.FromField.Dimension10)
				KeyFromValue = Dimension10						
		ToValue




























		KeyToValue
			if (CodeBlockRelation.ToField.AccountingEntity)
				default to AccountingEntity
			if (CodeBlockRelation.ToField.AccountingUnit)
				if (CodeBlockRelation.FromField.AccountingEntity)
					default to AccountingUnit
				else
					default to DerivedEntityAccountingUnit
			if (CodeBlockRelation.ToField.Account)
				default to GeneralLedgerChartAccount
			if (CodeBlockRelation.ToField.Project)
				default to Project
			if (CodeBlockRelation.ToField.Dimension1)
				default to Dimension1
			if (CodeBlockRelation.ToField.Dimension2)
				default to Dimension2
			if (CodeBlockRelation.ToField.Dimension3)
				default to Dimension3
			if (CodeBlockRelation.ToField.Dimension4)
				default to Dimension4
			if (CodeBlockRelation.ToField.Dimension5)
				default to Dimension5
			if (CodeBlockRelation.ToField.Dimension6)
				default to Dimension6
			if (CodeBlockRelation.ToField.Dimension7)
				default to Dimension7
			if (CodeBlockRelation.ToField.Dimension8)
				default to Dimension8
			if (CodeBlockRelation.ToField.Dimension9)
				default to Dimension9
			if (CodeBlockRelation.ToField.Dimension10)
				default to Dimension10				
		SortFromValue
			if (CodeBlockRelation.FromField.Ledger)
				SortFromValue = "Ledger"
			if (CodeBlockRelation.FromField.AccountingEntity)
				SortFromValue = "AccountingEntity"
			if (CodeBlockRelation.FromField.AccountingUnit)
				SortFromValue = "AccountingUnit"
			if (CodeBlockRelation.FromField.Account)
				SortFromValue = "Account"
			if (CodeBlockRelation.FromField.Project)
				SortFromValue = "Project"
			if (CodeBlockRelation.FromField.Dimension1)
				SortFromValue = "Dimension1"
			if (CodeBlockRelation.FromField.Dimension2)
				SortFromValue = "Dimension2"
			if (CodeBlockRelation.FromField.Dimension3)
				SortFromValue = "Dimension3"		
			if (CodeBlockRelation.FromField.Dimension4)
				SortFromValue = "Dimension4"
			if (CodeBlockRelation.FromField.Dimension5)
				SortFromValue = "Dimension5"
			if (CodeBlockRelation.FromField.Dimension6)
				SortFromValue = "Dimension6"
			if (CodeBlockRelation.FromField.Dimension7)
				SortFromValue = "Dimension7"
			if (CodeBlockRelation.FromField.Dimension8)
				SortFromValue = "Dimension8"		
			if (CodeBlockRelation.FromField.Dimension9)
				SortFromValue = "Dimension9"
			if (CodeBlockRelation.FromField.Dimension10)
				SortFromValue = "Dimension10"				
		SortToValue
			if (CodeBlockRelation.ToField.AccountingEntity)
				SortToValue = "AccountingEntity"
			if (CodeBlockRelation.ToField.AccountingUnit)
				SortToValue = "AccountingUnit"
			if (CodeBlockRelation.ToField.Account)
				SortToValue = "Account"
			if (CodeBlockRelation.ToField.Project)
				SortToValue = "Project"
			if (CodeBlockRelation.ToField.Dimension1)
				SortToValue = "Dimension1"
			if (CodeBlockRelation.ToField.Dimension2)
				SortToValue = "Dimension2"
			if (CodeBlockRelation.ToField.Dimension3)
				SortToValue = "Dimension3"		
			if (CodeBlockRelation.ToField.Dimension4)
				SortToValue = "Dimension4"
			if (CodeBlockRelation.ToField.Dimension5)
				SortToValue = "Dimension5"
			if (CodeBlockRelation.ToField.Dimension6)
				SortToValue = "Dimension6"
			if (CodeBlockRelation.ToField.Dimension7)
				SortToValue = "Dimension7"
			if (CodeBlockRelation.ToField.Dimension8)
				SortToValue = "Dimension8"		
			if (CodeBlockRelation.ToField.Dimension9)
				SortToValue = "Dimension9"
			if (CodeBlockRelation.ToField.Dimension10)
				SortToValue = "Dimension10"
		Ledger
			if (CodeBlockRelation.FromField.Ledger)
				required
		AccountingEntity
			if (CodeBlockRelation.FromField.AccountingEntity)

				required
			if  (CodeBlockRelation.ToField.AccountingEntity
			and  AnyTo)
				constraint (AccountingEntity not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		AccountingUnit
			if  (FinanceEnterpriseGroup.AccountingUnitRequired
			and  CodeBlockRelation.FromField.AccountingUnit)

				required
			if  (CodeBlockRelation.ToField.AccountingUnit
			and  AnyTo)
				constraint (AccountingUnit not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		GeneralLedgerChartAccount
			if (CodeBlockRelation.FromField.Account)

				required
			if  (CodeBlockRelation.ToField.Account
			and  AnyTo)
				constraint (GeneralLedgerChartAccount not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Project
			if  (FinanceEnterpriseGroup.ProjectRequired
			and  CodeBlockRelation.FromField.Project)

				required
			if  (CodeBlockRelation.ToField.Project
			and  AnyTo)
				constraint (Project not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension1
			if  (FinanceEnterpriseGroup.FinanceDimension1Required
			and  CodeBlockRelation.FromField.Dimension1)

				required
			if  (CodeBlockRelation.ToField.Dimension1
			and  AnyTo)
				constraint (Dimension1 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension2
			if  (FinanceEnterpriseGroup.FinanceDimension2Required
			and  CodeBlockRelation.FromField.Dimension2)

				required
			if  (CodeBlockRelation.ToField.Dimension2
			and  AnyTo)
				constraint (Dimension2 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension3
			if  (FinanceEnterpriseGroup.FinanceDimension3Required
			and  CodeBlockRelation.FromField.Dimension3)

				required
			if  (CodeBlockRelation.ToField.Dimension3
			and  AnyTo)
				constraint (Dimension3 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension4
			if  (FinanceEnterpriseGroup.FinanceDimension4Required
			and  CodeBlockRelation.FromField.Dimension4)

				required
			if  (CodeBlockRelation.ToField.Dimension4
			and  AnyTo)
				constraint (Dimension4 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension5
			if  (FinanceEnterpriseGroup.FinanceDimension5Required
			and  CodeBlockRelation.FromField.Dimension5)

				required
			if  (CodeBlockRelation.ToField.Dimension5
			and  AnyTo)
				constraint (Dimension5 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension6
			if  (FinanceEnterpriseGroup.FinanceDimension6Required
			and  CodeBlockRelation.FromField.Dimension6)

				required
			if  (CodeBlockRelation.ToField.Dimension6
			and  AnyTo)
				constraint (Dimension6 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension7
			if  (FinanceEnterpriseGroup.FinanceDimension7Required
			and  CodeBlockRelation.FromField.Dimension7)

				required
			if  (CodeBlockRelation.ToField.Dimension7
			and  AnyTo)
				constraint (Dimension7 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension8
			if  (FinanceEnterpriseGroup.FinanceDimension8Required
			and  CodeBlockRelation.FromField.Dimension8)

				required
			if  (CodeBlockRelation.ToField.Dimension8
			and  AnyTo)
				constraint (Dimension8 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension9
			if  (FinanceEnterpriseGroup.FinanceDimension9Required
			and  CodeBlockRelation.FromField.Dimension9)

				required
			if  (CodeBlockRelation.ToField.Dimension9
			and  AnyTo)
				constraint (Dimension9 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		Dimension10
			if  (FinanceEnterpriseGroup.FinanceDimension10Required
			and  CodeBlockRelation.FromField.Dimension10)

				required
			if  (CodeBlockRelation.ToField.Dimension10
			and  AnyTo)
				constraint (Dimension10 not entered)
					"CannotSelectAValueAndAnyToValueAllowed"
		AllowUnits
			default to AllowUnits.Default
		DefaultToValue
			if (CodeBlockRelation.ToField.AccountingEntity)	
				ValidAccountingEntity.AccountingEntity = DefaultToValue
				constraint (ValidAccountingEntityRel exists)
					"DefaultToValueDoesNotExist"
			else





			if (CodeBlockRelation.ToField.Account)
				ValidAccount = DefaultToValue
				constraint (ValidAccount exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Project)
				ValidProject = DefaultToValue
				constraint (ValidProject exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension1)
				ValidDimension1 = DefaultToValue
				constraint (ValidDimension1 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension2)
				ValidDimension2 = DefaultToValue
				constraint (ValidDimension2 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension3)
				ValidDimension3 = DefaultToValue
				constraint (ValidDimension3 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension4)
				ValidDimension4 = DefaultToValue
				constraint (ValidDimension4 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension5)
				ValidDimension5 = DefaultToValue
				constraint (ValidDimension5 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension6)
				ValidDimension6 = DefaultToValue
				constraint (ValidDimension6 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension7)
				ValidDimension7 = DefaultToValue
				constraint (ValidDimension7 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension8)
				ValidDimension8 = DefaultToValue
				constraint (ValidDimension8 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension9)
				ValidDimension9 = DefaultToValue
				constraint (ValidDimension9 exists)
					"DefaultToValueDoesNotExist"
			else
			if (CodeBlockRelation.ToField.Dimension10)
				ValidDimension10 = DefaultToValue
				constraint (ValidDimension10 exists)
					"DefaultToValueDoesNotExist"
			
	Conditions
		IsFromLedger
			restricted
			when (CodeBlockRelation.FromField.Ledger)
		IsFromAccountingEntity
			restricted
			when (CodeBlockRelation.FromField.AccountingEntity)
		IsFromAccountingUnit
			restricted
			when (CodeBlockRelation.FromField.AccountingUnit)
		IsFromEntityOrAccountingUnit
			restricted
			when (CodeBlockRelation.FromField.AccountingEntity
			or    CodeBlockRelation.FromField.AccountingUnit)
		IsFromAccount
			restricted
			when (CodeBlockRelation.FromField.Account)
		IsFromProject
			restricted
			when (CodeBlockRelation.FromField.Project)
		IsFromDimension1
			restricted
			when (CodeBlockRelation.FromField.Dimension1)
		IsFromDimension2
			restricted
			when (CodeBlockRelation.FromField.Dimension2)
		IsFromDimension3
			restricted
			when (CodeBlockRelation.FromField.Dimension3)
		IsFromDimension4
			restricted
			when (CodeBlockRelation.FromField.Dimension4)
		IsFromDimension5	
			restricted
			when (CodeBlockRelation.FromField.Dimension5)
		IsFromDimension6
			restricted
			when (CodeBlockRelation.FromField.Dimension6)
		IsFromDimension7
			restricted
			when (CodeBlockRelation.FromField.Dimension7)
		IsFromDimension8
			restricted
			when (CodeBlockRelation.FromField.Dimension8)
		IsFromDimension9	
			restricted
			when (CodeBlockRelation.FromField.Dimension9)
		IsFromDimension10
			restricted
			when (CodeBlockRelation.FromField.Dimension10)			


		IsToAccountingEntity
			restricted
			when (CodeBlockRelation.ToField.AccountingEntity)
		IsToAccountingUnit
			restricted
			when (CodeBlockRelation.ToField.AccountingUnit)
		IsToEntityOrAccountingUnit
			restricted
			when ((CodeBlockRelation.ToField.AccountingEntity
			or    CodeBlockRelation.ToField.AccountingUnit)
			and   !CodeBlockRelation.FromField.AccountingEntity)
		IsToAccount
			restricted
			when (CodeBlockRelation.ToField.Account)
		IsToProject
			restricted
			when (CodeBlockRelation.ToField.Project)
		IsToDimension1
			restricted
			when (CodeBlockRelation.ToField.Dimension1)
		IsToDimension2
			restricted
			when (CodeBlockRelation.ToField.Dimension2)
		IsToDimension3
			restricted
			when (CodeBlockRelation.ToField.Dimension3)
		IsToDimension4
			restricted
			when (CodeBlockRelation.ToField.Dimension4)
		IsToDimension5
			restricted
			when (CodeBlockRelation.ToField.Dimension5)
		IsToDimension6
			restricted
			when (CodeBlockRelation.ToField.Dimension6)
		IsToDimension7
			restricted
			when (CodeBlockRelation.ToField.Dimension7)
		IsToDimension8
			restricted
			when (CodeBlockRelation.ToField.Dimension8)
		IsToDimension9
			restricted
			when (CodeBlockRelation.ToField.Dimension9)
		IsToDimension10
			restricted
			when (CodeBlockRelation.ToField.Dimension10)






		ContainsAU
			restricted
			when (IsFromAccountingUnit
			or    IsToAccountingUnit)
		IsSystemRelation
			restricted
			when ((IsFromLedger
			and    IsToAccountingEntity)
			or    (IsFromAccountingEntity
			and    IsToAccountingUnit))
		Dimension1UnitControl
			restricted
			when (((IsFromDimension1
			and   IsToAccount)
			or    (IsFromAccount
			and    IsToDimension1))
			and   FinanceEnterpriseGroup.UnitControl.Dimension1)
		AUUnitControl
			restricted
			when (((IsFromAccountingUnit
			and   IsToAccount)
			or    (IsFromAccount
			and   IsToAccountingUnit))
			and   FinanceEnterpriseGroup.UnitControl.AccountingUnit)
		ShowUnitOption
			restricted
			when  (CodeBlockRelation.ShowUnitOption
			and   (Dimension1UnitControl
			or	   AUUnitControl))

	Relations
















			
		GeneralLedgerClosePeriodForYearRel 
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDateForYear
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= LocalCloseConfiguration
				related.GeneralLedgerCloseYear				= LocalYear			

		AccountingEntityPeriodValidity
			one-to-one relation to AccountingEntityPeriod
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerClosePeriod			= LocalGeneralLedgerClosePeriod

		NewYearEntityLedgerPeriodRel
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= AccountingEntity
				related.GeneralLedgerClosePeriod	= LocalGeneralLedgerClosePeriod
				related.Ledger						= Ledger
				
		ValidAccountingEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= ValidAccountingEntity.AccountingEntity
		
		ReportingChartAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses symbolic key
			Instance Selection
				where (related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				and	   related.GeneralLedgerChartAccount= GeneralLedgerChartAccount)

	Sets
		ByKeyValues
			Sort Order
				FinanceEnterpriseGroup
				CodeBlockRelation
				KeyFromValue
				KeyToValue

		ByKeyFromValueKeyToValue
			Sort Order
				FinanceEnterpriseGroup
				KeyFromValue
				KeyToValue
				CodeBlockRelation

		ByEntityLedger
			Sort Order
				FinanceEnterpriseGroup
				CodeBlockRelation
				AccountingEntity
				Ledger
				UniqueID
						
	Actions
		Create is a Create Action
			completion message is "FinanceStructureRelationDetailCreated"
			valid when (!IsSystemRelation)
		
			Field Rules
				Ledger
					default to TransientLedger
				AccountingEntity
					default to TransientEntity
				AccountingUnit
					default to TransientAccountingUnit
				GeneralLedgerChartAccount
					default to TransientContextAccount
				Project
					default to TransientProject
				Dimension1
					default to TransientDimension1
				Dimension2
					default to TransientDimension2
				Dimension3
					default to TransientDimension3
				Dimension4
					default to TransientDimension4
				Dimension5
					default to TransientDimension5
				Dimension6
					default to TransientDimension6
				Dimension7
					default to TransientDimension7
				Dimension8
					default to TransientDimension8
				Dimension9
					default to TransientDimension9
				Dimension10
					default to TransientDimension10
			
			Action Rules
				if (AnyTo)
					KeyToValue					= DerivedAllAreValid
			
			Exit Rules
				if (DefaultToValue entered)
					invoke Update CodeBlockRelation
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.CodeBlockRelation			= CodeBlockRelation
						invoked.DefaultWasSet				= true





				if(CodeBlockRelation.FromField.AccountingUnit and CodeBlockRelation.ToField.Account and FinanceEnterpriseGroup.BODTrigger)
					invoke TriggerChartOfAccountBOD ReportingChartAccountRel

		SystemCreate is a Create Action
			completion message is "FinanceStructureRelationDetailCreated"
			restricted
		
		Update is an Update Action
			completion message is "FinanceStructureRelationDetailUpdated"
			valid when (!IsSystemRelation)

			Action Rules
				if (!AnyTo)
					initialize KeyToValue
				else
					KeyToValue					= DerivedAllAreValid
				Ledger 							= TransientLedger	
				AccountingEntity 				= TransientEntity
				AccountingUnit 					= TransientAccountingUnit
				GeneralLedgerChartAccount 		= TransientContextAccount
				Project 						= TransientProject	
				Dimension1 						= TransientDimension1
				Dimension2 						= TransientDimension2
				Dimension3 						= TransientDimension3
				Dimension4 						= TransientDimension4
				Dimension5 						= TransientDimension5
				Dimension6 						= TransientDimension6
				Dimension7 						= TransientDimension7
				Dimension8 						= TransientDimension8
				Dimension9 						= TransientDimension9
				Dimension10 					= TransientDimension10
					
			Exit Rules
				if (DefaultToValue entered)
					invoke Update CodeBlockRelation
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.CodeBlockRelation			= CodeBlockRelation
						invoked.DefaultWasSet				= true
		
		Delete is a Delete Action
			completion message is "FinanceStructureRelationDetailDeleted"
			valid when (!IsSystemRelation)
			Action Rules
				constraint (!IsSystemRelation)
					"CannotDeleteSystemGeneratedDetails"
					
		SystemDelete is a Delete Action
			completion message is "FinanceStructureRelationDetailDeleted"
			restricted
					
		Purge is a Purge Action
			restricted

		MassDelete is a Delete Action
			restricted						

		DeleteAllForRelation is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCodeBlockRelation		is a CodeBlockRelation
					default label is "FinanceStructureRelation"
					
			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmCodeBlockRelation
					required
					
			Set Is
				PrmEnterpriseGroup
				PrmCodeBlockRelation
				
			Local Fields
				LocalRecordCount			is Numeric 4
				
			Instance Selection
				include deleted records
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and	   CodeBlockRelation			= PrmCodeBlockRelation)
				
			Sort Order
				FinanceEnterpriseGroup
				CodeBlockRelation
				CodeBlockRelationDetail
				
			Action Rules

				Set Rules
					Entrance Rules

				Instance Rules
					invoke Purge
					LocalRecordCount += 1
					if (LocalRecordCount > 500)
						initialize LocalRecordCount
						commit transaction

		RebuildRelationDetailOnRestructure is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCodeBlockRelation		is a CodeBlockRelation
					default label is "CodeBlockRelation"

			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmCodeBlockRelation
					required

			Set Is
				PrmEnterpriseGroup
				PrmCodeBlockRelation

			Local Fields	
				LocalValue						is BusinessObjectReference
				LocalSortValue					is Alpha 25
				LocalKeyValue					is Alpha 200

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and	   CodeBlockRelation			= PrmCodeBlockRelation)

			Sort Order
				FinanceEnterpriseGroup
				CodeBlockRelation
				CodeBlockRelationDetail

			Action Rules

				Set Rules
					Entrance Rules

				Instance Rules
					LocalValue				= FromValue
					LocalSortValue			= SortFromValue
					LocalKeyValue			= KeyFromValue

					FromValue				= ToValue
					SortFromValue			= SortToValue
					KeyFromValue			= KeyToValue

					ToValue					= LocalValue
					SortToValue				= LocalSortValue
					KeyToValue				= LocalKeyValue

		FixEntityPeriod is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCodeBlockRelation	    is a CodeBlockRelation
					default label is "CodeBlockRelation"
				PrmCloseConfiguration	    is a GeneralLedgerCloseConfiguration
					default label is "CloseConfiguration"
				PrmYear						is like GeneralLedgerCloseYear
					default label is "GlobalLedgerCloseYear"

			Parameter Rules
				PrmCloseConfiguration
					LocalCloseConfiguration		= PrmCloseConfiguration
					LocalYear					= PrmYear
					LocalPeriodCount			= instance count of GeneralLedgerClosePeriodForYearRel

			Set Is
				PrmEnterpriseGroup
				PrmCodeBlockRelation
				PrmCloseConfiguration
				PrmYear

			Local Fields
				LocalCreateLimited			is Boolean
				LocalEntity				 	is like AccountingEntity
				LocalRecordCount			is Numeric 4
				LocalPeriodCount			is Numeric 4
				
			Instance Selection
				where (FinanceEnterpriseGroup				= PrmEnterpriseGroup
				and    CodeBlockRelation					= PrmCodeBlockRelation
				and    TransientEntity.CloseConfiguration	= PrmCloseConfiguration)

			Sort Order
				FinanceEnterpriseGroup
				CodeBlockRelation
				AccountingEntity
				Ledger
				UniqueID

			Action Rules
				Instance Rules
					LocalCloseConfiguration		= PrmCloseConfiguration
					LocalYear					= PrmYear
					for each GeneralLedgerClosePeriodForYearRel
						LocalRecordCount	+= LocalPeriodCount
						LocalGeneralLedgerClosePeriod	= each.GeneralLedgerClosePeriod
						if (!AccountingEntityPeriodValidity exists)
							invoke Create AccountingEntityPeriod in foreground
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.AccountingEntity			= AccountingEntity
								invoked.GeneralLedgerClosePeriod	= LocalGeneralLedgerClosePeriod
						if (!NewYearEntityLedgerPeriodRel exists)
							if (LocalGeneralLedgerClosePeriod	< TransientEntity.CurrentPeriod)
								invoke Create Limited NewYearEntityLedgerPeriodRel
							else
								invoke Create Open NewYearEntityLedgerPeriodRel
						else
							if (LocalGeneralLedgerClosePeriod	< TransientEntity.CurrentPeriod)
								if (NewYearEntityLedgerPeriodRel.PeriodStatus.Open)
									invoke UpdatePeriodStatus NewYearEntityLedgerPeriodRel
										invoked.PrmPeriodStatus		= 2
							else
								if (!NewYearEntityLedgerPeriodRel.PeriodStatus.Open)
									invoke UpdatePeriodStatus NewYearEntityLedgerPeriodRel
										invoked.PrmPeriodStatus		= 0
					if (LocalRecordCount		> 500)
						initialize LocalRecordCount
						commit transaction
