InventoryLocation is a BusinessClass
	owned by ic
	prefix is ICL
	classic name is ICLOCATION

	Ontology
		symbolic key is InventoryLocation
			classic set name is ICLSET1
			classic name is LOCATION

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId
		implements Proxy for InventoryLocationExtension

	Persistent Fields
		LocationType                              is AlphaUpper size 1
			States
				ExchangeCart      value is "E"
				ParLocation       value is "P"
				InventoryLocation value is blank
		Name
			scannable
		FromCompany								  is an InventoryCompany
			disable surrogates
		ReplenishFromLocation                     is an InventoryLocation
			classic name is REPL-FROM-LOC
			context of FromCompany
		PostalAddress							  is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY-ADDR5
			classic name for PostalAddress.StateProvince is STATE-PROV
			classic name for PostalAddress.Country is COUNTRY-CODE
			classic name for PostalAddress.Region is REGION
		AddressContact 
			holds pii
			classic name is ADDR-CONTACT
		NameForPurchaseOrder                      is a Name	 
			holds pii
			classic name is PO-NAME
		PostalAddressForPurchaseOrder             is a PostalAddressV2	
			holds pii
			classic name for PostalAddressForPurchaseOrder.DeliveryAddress.AddressLine1 is PO-ADDR1
			classic name for PostalAddressForPurchaseOrder.DeliveryAddress.AddressLine2 is PO-ADDR2
			classic name for PostalAddressForPurchaseOrder.DeliveryAddress.AddressLine3 is PO-ADDR3
			classic name for PostalAddressForPurchaseOrder.DeliveryAddress.AddressLine4 is PO-ADDR4
			classic name for PostalAddressForPurchaseOrder.Municipality is PO-CITY-ADDR5
			classic name for PostalAddressForPurchaseOrder.StateProvince is PO-STATE-PROV
			classic name for PostalAddressForPurchaseOrder.PostalCode is PO-POSTAL-CD
			classic name for PostalAddressForPurchaseOrder.County is PO-COUNTY
			classic name for PostalAddressForPurchaseOrder.Country is PO-COUNTRY-CD
			classic name for PostalAddressForPurchaseOrder.Region is PO-REGION
		HealthIndustryNumber                      is AlphaUpper size 9
			classic name is HIN-NBR
		ProcessStatus                             is Numeric size 1
			classic name is OE-RUN-STS
			disable Auditing
			States
				NoProcessingInProgress    value is 0
				AllocationFeedbackRunning value is 1
				PickListPrintRunning      value is 2
				PickingFeedbackRunning    value is 3
				PackingFeedbackRunning    value is 4
				ShippingFeedbackRunning   value is 5
				ICReorderRunning          value is 6
		WarehouseProcessType
			classic name is PROCESS-TYPE
			context of Company
		AllocationPurpose                         is AlphaUpper size 1
			classic name is ALLOC-PURP
			States
				ConsolidatedBins value is "C"
				SpeedPicking     value is "S"
		LastBatchNumber							is Numeric size 12
			classic name is LAST-BATCH-NBR
			disable Auditing
		TaxCode
		PurchaseOrderTaxCode                      is a TaxCode
			classic name is PO-TAX-CODE
		POCode
		LastBatchDate                             is Date
			classic name is LAST-BT-DATE
		LastBatchLine                             is a LineNumber
			classic name is LAST-BT-LINE
			disable Auditing
		LastShipment                              is Numeric size 10
			classic name is LAST-SHIP-NBR
			disable Auditing
		ERSCapable                                is Boolean
		ParValue                                  is an InternationalAmount
		WorkOrderLocationType                     is AlphaUpper size 1
			classic name is WO-LOC-TYPE
			States
				NotAWorkOrderLocation value is "N"
				OffsiteLocation       value is "O"
				ProductionLocation    value is "P"
		Calendar								  is a SystemCalendar
		DemandSource                              is Numeric size 1
			States
				DocumentDemand            value is 1
				ForecastDemand            value is 2
				DocumentAndForecastDemand value is 3
		Capacity
		ScheduleIncrement
			classic name is SCHED-INCR
		ScheduleFrequency                         is AlphaUpper size 1
			classic name is SCHED-FREQ
			States
				Days   value is "D"
				Weeks  value is "W"
				Months value is "M"
		ScheduleStatus                            is Numeric size 1
			classic name is WO-STATUS
			States
				Unreleased   value is 1
				Released     value is 2
				Exploded     value is 3
				InProduction value is 4
		UseIncomeStatementAccounts                is Boolean
			classic name is WO-ACCOUNT-FL
		AllowUnallocatedInProduction              is AlphaUpper size 1
			classic name is WO-IN-PROD-FL
			States
				InProdUnrestrictedByAlloc value is "Y"
				InProdRestrictedByAlloc   value is "N"
				NoButOverrideAllowed      value is "O"
		ProcessLevel                              is a PayablesProcessLevel
			context of Company
		PrintLabels                               is AlphaUpper size 1
			States
				PrintAtReceivingTime value is "R"
				NotUsingThisOption   value is "N"
		Vendor
		PurchaseFromLocation
			classic name is PURCH-FR-LOC
		Customer
		CustomerShipTo
			classic name is SHIP-TO
			context of Company
		ReceivingDays
			classic name is PROC-DAYS
		ReceivingAllocation                       is Numeric size 1
			classic name is REC-ALLOCATE
			States
				NoReceivingAllocation			value is 0
				POLineSourceAllocation			value is 1
				POLineSourceStandardAllocation	value is 2
		UseGLCategoryIssueAccountingUnitAsDefault is AlphaUpper size 1
			sql name is UGLCIAccountingUnitAsDefault
			classic name is ISS-AU-FL
			States
				Yes           value is "Y"
				No            value is "N"
				AllowOverride value is "A"
		PurchaseOrderBillToName                   is a Name	 
			holds pii
			classic name is POB-NAME
		PurchaseOrderBillToAddress                is a PostalAddressV2	
			holds pii
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine1 is POB-ADDR1
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine2 is POB-ADDR2
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine3 is POB-ADDR3
			classic name for PurchaseOrderBillToAddress.DeliveryAddress.AddressLine4 is POB-ADDR4
			classic name for PurchaseOrderBillToAddress.Municipality is POB-CITY-ADDR5
			classic name for PurchaseOrderBillToAddress.StateProvince is POB-STATE-PROV
			classic name for PurchaseOrderBillToAddress.PostalCode is POB-POSTAL-CD
			classic name for PurchaseOrderBillToAddress.County is POB-COUNTY
			classic name for PurchaseOrderBillToAddress.Country is POB-COUNTRY-CD
		PurchaseOrderBillToContact                is an AddressContact
			classic name is POB-CONTACT
		GlobalLocationNumber
			classic name is GLN-NBR
		ReplenishmentRequester                    is a Requester
			classic name is REPL-REQUESTER
		RetailLocationType                        is AlphaUpper size 1
			classic name is RETAIL-LOC-FL
			States
				None      value is blank
				Store     value is "S"
				Warehouse value is "W"
		OneSourceDocumentToOnePO                  is Numeric size 1
			classic name is ONE-SRC-ONE-PO
			States
				No								value is 0
				OneRequisitionToOnePO			value is 1
				OneSalesOrderToOnePO			value is 2
				RequisitionAndSalesOrderToOnePO	value is 3
		DefaultDropshipPurchaseOrder              is Boolean
			classic name is DROPSHIP-FL
		PurchaseOrderBillToPhoneNumber            is a TelephoneNumber 
			holds pii
			classic name for PurchaseOrderBillToPhoneNumber.InternationalPrefix is POB-PHONE-PREF
			classic name for PurchaseOrderBillToPhoneNumber.SubscriberNumber is POB-PHONE
			classic name for PurchaseOrderBillToPhoneNumber.Extension is POB-PHONE-EXT
		PurchaseOrderBillToEmailAddress           is an EmailAddressMulti 
			holds pii
			sql name is POrderBillToEmailAddress
			classic name is POB-EMAIL-ADDR
		Status                                    is Numeric size 1
			States
				Active      value is 0
				Inactive    value is 1
				AddInactive value is 2
		EAMLocation                               is AlphaUpper size 1
			classic name is EAM-LOC-FL
			States
				NormalLocation   value is blank
				EAMLocation      value is "1"
				SCELocation      value is "2"
		GeographicalType                          is a GISType
			classic name is GEO-TYPE
		GeographicalLatitude                      is a GISCoordinate
			classic name is GEO-LATITUDE
		GeographicalLongitude                     is a GISCoordinate
			classic name is GEO-LONGITUDE
		GeographicalAltitude                      is a GISCoordinate
			classic name is GEO-ALTITUDE
		GeographicalDate                          is TimeStamp
			classic name is GEO-DATE
		PurchaseOrderApprovalType
			classic name is APPROVAL-TYPE
		MSCMDelivery                              is Boolean					
		InspectionHoldAccount                     is a FinanceCodeBlockFull
			classic name for InspectionHoldAccount.AccountingUnit is HOLD-ACCT-UNIT
			classic name for InspectionHoldAccount.GeneralLedgerChartAccount is HOLD-ACCOUNT
		WasteAccount                              is a FinanceCodeBlock
			classic name for WasteAccount.AccountingUnit is WST-ACCT-UNIT
			classic name for WasteAccount.GeneralLedgerChartAccount is WST-ACCOUNT
		VendorReturnSuspenseAccount               is a FinanceCodeBlockFull
			classic name for VendorReturnSuspenseAccount.AccountingUnit is SUSP-ACCT-UNIT
			classic name for VendorReturnSuspenseAccount.GeneralLedgerChartAccount is SUSP-ACCOUNT
		FreightAccount                            is a FinanceCodeBlockFull
			classic name for FreightAccount.AccountingUnit is FRT-ACCT-UNIT
			classic name for FreightAccount.GeneralLedgerChartAccount is FRT-ACCOUNT
		HandlingAccount                           is a FinanceCodeBlockFull
			classic name for HandlingAccount.AccountingUnit is HDLG-ACCT-UNIT
			classic name for HandlingAccount.GeneralLedgerChartAccount is HDLG-ACCOUNT
		ScrapAccount                              is a FinanceCodeBlockFull
			classic name for ScrapAccount.AccountingUnit is SCRP-ACCT-UNIT
			classic name for ScrapAccount.GeneralLedgerChartAccount is SCRP-ACCOUNT
		WorkInProcessAccount                      is a FinanceCodeBlock
			classic name for WorkInProcessAccount.AccountingUnit is WIP-ACCT-UNIT
			classic name for WorkInProcessAccount.GeneralLedgerChartAccount is WIP-ACCOUNT
		FinishedGoodsVarianceAccount              is a FinanceCodeBlock
			classic name for FinishedGoodsVarianceAccount.AccountingUnit is FGV-ACCT-UNIT
			classic name for FinishedGoodsVarianceAccount.GeneralLedgerChartAccount is FGV-ACCOUNT
		CompanyCustomer
			context of Company
		Picture						is an ImageAttachment
		PricingGroup
		DisableOvershipmentMessages                is Boolean
		ItemSyncOption	is Numeric 1				
			States
				CheckICCompanyValue	value is 0
				OnlyMatchingValues	value is 1
				BlankValues			value is 2
				UpdateIfDifferent	value is 3
				AllValues			value is 4
				DoNotUpdate			value is 5
		PreferredBin				is a Bin								
			context of Company
			context of InventoryLocation
		PreferredHoldBin			is a Bin
			context of Company
			context of InventoryLocation									
		DirectPayCertificate		is Alpha size 50
		ReferenceInventoryValue		is like InternationalAmount
		CurrentInventoryValue		is like InternationalAmount
		TargetInventoryValue		is like InternationalAmount
		UnderReviewValue 			is like InternationalAmount
		AchievedSoFarValue			is like InternationalAmount

		RecipeEnabled				is Boolean
			default label is "KitchenManagementEnabled"
		InventoryLocationLotTracking	is Numeric 1
			States
				CheckICCompanyValue				value is 0
				LotTrackingAtFromLocationOnly	value is 1
				LotTrackingAtToAndFromLocation	value is 2
		TrackStockUOMAtItemLocation		is Numeric 1
			States
				CheckInventoryCompanyValue			value is 0
				TrackStockUOMAtItemLocation 		value is 1
				DoNotTrackStockUOMAtItemLocation	value is 2
		OrderUOMRounding 		  		is Numeric 1
			States
				CheckInventoryCompanyValue			value is 0
				AllowUOMRounding			 		value is 1
				DoNotAllowUOMRounding				value is 2
		TwoStepPurchaseOrderReceiving	is Boolean
        UseAsWarehouseLocation          is Boolean
		IncludeUnreservedForReorder		is Boolean
			restricted
			protected
		VendorReorderAdviceRunning      	is Boolean
			restricted
			disable Auditing
		ReplenishmentByRequisitionRunning	is Boolean
			restricted
			disable Auditing
		LocationReplenishmentRunning		is Boolean
			restricted
			disable Auditing
		EOQAndReorderCalculationRunning		is Boolean
			restricted
			disable Auditing
		BinReplenishmentRunning				is Boolean
			restricted
			disable Auditing
		
	Context Fields
		AuditDateRange				is a DateRange
		PurchaseOrder
		ContextInventoryLocation	is an InventoryLocation
		WithRecommendation			is a FlagYN
		FSMInboundBODTracker
		IIHLocationGroup

	Transient Fields


	  	CopyLocation        		is like InventoryLocation


		ComingFromMobileRequisitions is Boolean

		TransientFEG 				is like FinanceEnterpriseGroup
			derive value from Company.CustomerBusinessGroup.FinanceEnterpriseGroup
		ObjectReference 			is BusinessObjectReference
			derive value from reference to this instance

		TransientShipDateCutoff 	is Date
		TransientInvoiceDate		is Date
		TransientIDMPrinter			is like IDMPrinter

	Local Fields
		LocalTaxCode					is like TaxCode
		LocalItem						is like Item
		LocalCompany					is like Company 
		LocalLocation                   is like InventoryLocation
		LocalInventoryReportGroup       is like InventoryReportGroup
		LocalThisLocation               is like InventoryLocation 
		LocalContract                   is like Contract
		MultipleTaxCodes				is Boolean
		WebServiceError					is Boolean
		WebServiceErrorMessage			is Text
		LocalLookupKey					is Alpha 100
		LocalResponseBusclassKey		is like LastSequence
		LocalSequence					is like Sequence
		SkipNext						is Boolean
		CalculateTax
		OldSellerTaxCode				is like TaxCode
		OldPurchaseTaxCode				is like TaxCode
		LocalTitle						is Alpha size 255
		ActionCode						is Alpha size 1
			States
				Create value is "C"
				Update value is "U"
				Delete value is "D"
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		NewSellerTaxCode				is like TaxCode
		NewPurchaseTaxCode				is like TaxCode
		CalculateTaxOutputMessage		is Alpha 200
		LocalProjectedProductionDate	is Date
		LocalProcessLevel				is like BillingProcessLevel
		LocalShipmentType				is Numeric 1
		LocalReleaseOption				is AlphaUpper 1
		LocalBatchNumber				is Numeric 10
		LocalAccessType					is like AccessType
		IDMGenerateDocument
		NewBODTracker  					is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker		is Numeric 15
		Error            				is Boolean
	    ErrorMessage     				is Alpha 300
	    LocalBODTrigger					is Boolean

		LocalNativeLPLBODTrigger		is Boolean

		LocalMainUserTemplate			is Alpha 250
		LocalConfigurationParameter		is Alpha size up to 200
		LocalAEAlreadyExecuted			is Boolean
		LocalAccountingEntity  			is Alpha 100
		LocalContractGroup              is like ContractGroup 
		LocalParticipantGroup           is like ParticipantGroup 

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "InventoryLocation"
			InventoryLocation " - " Name

		DerivedInventoryLocationIDName	is a MessageField
			default label is "InventoryLocation"
			"<InventoryLocation>_-_<Name>"
		PerpetualAnalysisDate			is a LabelField
			"<ActorContextIIHGlobalConfigRel.PerpetualAnalysisDate>"
		ParAnalysisDate					is a LabelField
			"<ActorContextIIHGlobalConfigRel.ParAnalysisDate>"
		CompanyAndLocationViewDisplay	is a LabelField
			"Company:<Company>_Location:<InventoryLocation>"
		HasRecommendationsMessage	is a MessageField
			"HasRecommendations"
		CompanyDisplay	is a LabelField
			"Company:<Company>"
		LocationDisplay	is a LabelField
			"Location:<InventoryLocation>"
		LocationCountDisplay			is a LabelField
			"Items:<IILocationCount>"
		LocationRecsCountDisplay		is a LabelField
			"Recommended:<IILocationRecCount>"
		LocationValueDisplay			is a LabelField
			"ReferenceLocationValue:<IILocationValue>"
		CurrentLocationValueDisplay		is a LabelField
			"CurrentLocationValue:<IICurrentLocationValue>"
		ReferenceValueDisplay			is a LabelField
			"ReferenceValue:<IIReferenceValue>"
		TargetValueDisplay				is a LabelField
			"TargetValue:<IITargetValue>"
		AchievedSoFarValueDisplay		is a LabelField
			"AchievedSoFar:<IIAchievedSoFarValue>"
		UnderReviewValueDisplay			is a LabelField
			"UnderReview:<IIUnderReviewValue>"

		PerpetualAnalysisBeginDate is a DerivedField
			type is Date
			return ActorContextIIHGlobalConfigRel.PerpetualAnalysisBeginDate
			
		PerpetualAnalysisDateDerived is a DerivedField
			type is Alpha 50
			return ActorContextIIHGlobalConfigRel.PerpetualAnalysisDateDerived
			
		ParAnalysisDateDerived is a DerivedField
			type is Alpha 50
			return ActorContextIIHGlobalConfigRel.ParAnalysisDateDerived

		PerpetualAnalysisEndDate is a DerivedField
			type is Date
			return ActorContextIIHGlobalConfigRel.PerpetualAnalysisEndDate

		IILocationCount is a DerivedField
			type is Numeric size 10
			return (instance count of IIHItemLocationsCountRel)

		IILocationRecCount is a DerivedField
			type is Numeric size 10
			return (instance count of IIHItemLocationsRecsCountRel)

		IILocationValue is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsValueRel.ReferenceInventoryValue)

		IICurrentLocationValue is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsValueRel.CurrentInventoryValue)

		IIReferenceValue is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsRecsValueRel.ReferenceInventoryValue)

		IICurrentValueForRecommended is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsRecsValueRel.CurrentInventoryValue)

		IITargetValueForRecommended is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsRecsValueRel.TargetInventoryValue)

		IITargetValue is a DerivedField
			type is like InternationalAmount
			return (sum IIHItemLocationsValueRel.TargetInventoryValue)

		IIAchievedSoFarValue is a DerivedField
			type is like InternationalAmount
			return (IICurrentLocationValue - IILocationValue)

		IIUnderReviewValue is a DerivedField
			type is like InternationalAmount
			return (IITargetValueForRecommended - IICurrentValueForRecommended)

		DerivedItemsUnderReview is a DerivedField
			type is Numeric size 10
			return (instance count of IIHItemLocationsRecsUnderReviewRel)

		DerivedOutOfBoundsItemsUnderReview is a DerivedField
			type is Numeric size 10
			return (instance count of OutOfBoundsRecsUnderReviewRel)

		DerivedOutOfBoundsItems is a DerivedField
			type is Numeric size 10
			return (instance count of OutOfBoundsItemsRel)

		DerivedItemsUnderApproved is a DerivedField
			type is Numeric size 10
			return (instance count of IIHItemLocationsRecsUnderApprovedRel)

		IISpecialistLocationAccess is a DerivedField
			type is like AccessType
			LocalAccessType = AccessType.None
			if (InventoryIntelligenceProcessorRel exists)
				LocalAccessType = InventoryIntelligenceProcessorRel.DefaultAccess
				if (InventoryIntelligenceProcessorCompanyRel exists)
					LocalAccessType = InventoryIntelligenceProcessorCompanyRel.Access
				if (InventoryIntelligenceProcessorLocationRel exists)
					LocalAccessType = InventoryIntelligenceProcessorLocationRel.Access
			else
				if (IIHGlobalConfigurationRel exists
				and IIHGlobalConfigurationRel.DefaultGlobalAccess entered)
					LocalAccessType = IIHGlobalConfigurationRel.DefaultGlobalAccess
			return LocalAccessType

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforLocation"

		ContextMessageText is a MessageField
			restricted
			"InventoryLocation<InventoryLocation>"

		DerivedNameID is a DerivedField
			type is Alpha size up to 103
			default label is "Location"
			return Name + " (" + InventoryLocation + ")"

		DisplayLocation is a MessageField
			"<InventoryLocation>_-_<Name>"


		LocationTypeDescription is a DerivedField
			type is Alpha 30
			restricted
			if (LocationType.ExchangeCart)
				return Company + "/ExchangeCart"
			else
				if (LocationType.ParLocation)
					return Company + "/ParLocation"
				else
					return Company + "/InventoryLocation"


		PuchaseOrderAddressText				is a MessageField
			restricted
			"PurchaseOrderAddress;OldTaxCode:<OldPurchaseTaxCode>"
		SellerAddressText				is a MessageField
			restricted
			"SellerAddress;OldTaxCode:<OldSellerTaxCode>"

		VertexNoChangeMessage				is a LabelField
			restricted
			"NoChangeNecessary,Correct\Tax\Area\IdExists"

		DerivedSellerLookupMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewSellerTaxCode = OldSellerTaxCode)
				return VertexNoChangeMessage
			else
				return CalculateTaxOutputMessage

		SellerTaxCodeMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewSellerTaxCode = OldSellerTaxCode)
				return SellerTaxCodeOkText	
			else
				return SellerAddressText

      	RepresentativeTextForPO is a StringField
            type is Text
            default label is "InventoryLocation"
            InventoryLocation " - " NameForPurchaseOrder

		DerivedPurchaseLookupMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewPurchaseTaxCode = OldPurchaseTaxCode)
				return VertexNoChangeMessage
			else
				return CalculateTaxOutputMessage

		PurchaseTaxCodeMessage				is a DerivedField
			type is MessageField
			restricted
			if (NewPurchaseTaxCode = OldPurchaseTaxCode)
				return PuchaseOrderTaxCodeOkText	
			else
				return PuchaseOrderAddressText

		PuchaseOrderTaxCodeOkText		is a MessageField
			restricted
			"PurchaseOrderTaxCodeNotChanged:<OldPurchaseTaxCode>"
		SellerTaxCodeOkText				is a MessageField
			restricted
			"SellerTaxCodeNotChanged:<OldSellerTaxCode>"

		DerivedOEDailyShipmentJournalFileName is a StringField
			type is Alpha 100
			restricted
			"Daily Shipment Journal Company "
			Company
			" Location "
			InventoryLocation
			" As of "
			DerivedCurrentDate

		DerivedCurrentDate is a DerivedField
			type is TimeStamp
			return current timestamp

		DerivedReleaseOption is a DerivedField
			type is MessageField
			if (LocalReleaseOption = "R")
				return "Release Batch To Invoice Print"
			else
			if (LocalReleaseOption = "B")
				return "Release And Bypass Invoice Print"
			else
				return "Do Not Release"

		DerivedShipmentType is a DerivedField
			type is MessageField
			if (LocalShipmentType = 1)
				return "All Shipments"
			else
				return "Cash On Delivery Shipments"

		DerivedLocationTotal is a DerivedField
			type is like InternationalAmount
			for each BillingProcessLevelRel
				DerivedLocationTotal += each.DerivedOEDailyShipmentJournalProcessLevelTotal
			return DerivedLocationTotal

		DerivedDailyShipmentJournalBatchNumber is a DerivedField
			type is Numeric 10
			return LocalBatchNumber

		DerivedDailyShipmentJournalRunDate is a DerivedField
			type is Date
			return current corporate date


		MobileLocationHeader is a LabelField
			"<InventoryLocation>_-_<Name>"
		MobileCompanyDisplay is a LabelField
			"<Company>_-_<Company.Name>"
		MobileAddressDisplay is a DerivedField
			type is Alpha 100
			default label is "Address"
			if (PostalAddress.Municipality entered)
				return PostalAddress.Municipality + ", " + PostalAddress.DeliveryAddress.AddressLine1
			else
				return blank


		DerivedDailyShipmentJournalProcessLevel is a DerivedField
			type is like ProcessLevel
			return LocalProcessLevel


		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedBODActionCode is a DerivedField
			type is Alpha size 10
			restricted
			if (ActionCode.Create or action type.Create)
				return "Add"
			else
			if (ActionCode.Update or action type.Update)
				return "Replace"
			else
			if (ActionCode.Delete or action type.Delete)
				return "Delete"
			else
				return ""

		DerivedClassificationCode is a DerivedField
			type is Alpha size 12
			restricted
			if(LocationType = "" )
				return "Warehouse"
			else
			if(LocationType = "E" )
				return "Case Cart"
			else
			if(LocationType = "P" )
				return "Par"
			else
				return ""
		DerivedLocationStatus is a DerivedField
			type is Alpha size 12
			restricted
			if(Status = "0" )
				return "Open"
			else
			if(Status = "1" )
				return "Delete"
			else
			if(Status = "2" )
				return "Delete"
			else
				return ""

		DerivedBODRevision is a DerivedField
			type is Alpha size 25
			restricted
			return ""

		DerivedBODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return  bod id.VariationID

		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return current timestamp

		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedFEG is a DerivedField
			type is Alpha size 4
			restricted
			return Company.FinanceEnterpriseGroup
			
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedCrossGLC is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedMultipleFEG = "Y")
				return DerivedFEG + DerivedDelimiter + DerivedCompany
			else
				return DerivedCompany
				
		DerivedAECrossAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if (FSMBODAECrossReferenceDetailRel.DestinationValue entered)
					LocalAccountingEntity = FSMBODAECrossReferenceDetailRel.DestinationValue
				else
					LocalAccountingEntity = DerivedCrossGLC	
				return LocalAccountingEntity
			else
				return LocalAccountingEntity

		DerivedAccountingEntity is a DerivedField
			type is Alpha size 20
			restricted
			if (DerivedCleanDocumentID = "Y")
				return DerivedAECrossAccountingEntity
			else
				return DerivedFEG+DerivedDelimiter+Company.AccountingEntity

		DerivedAE is a DerivedField
			type is Alpha size 12
			restricted
			return Company.AccountingEntity

		DerivedSystemOfRecords is a DerivedField
			type is Alpha size 2
			restricted
			return "0"

		DerivedCompany is a DerivedField
			type is Alpha size 4
			restricted
			return Company using "%d"

		DerivedDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			if (DerivedCleanDocumentID = "Y")
				return InventoryLocation
			else
				return DerivedCompany+DerivedDelimiter+InventoryLocation

		DerivedBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedappProdline +":" + DerivedAccountingEntity +":"+DerivedDocumentID + ":"+"?Location&verb=Sync&variationID=" + DerivedBODVariationID

		DerivedAddrCountryCode is a DerivedField
			type is Alpha size 25
			restricted
			return Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country

		DerivedIntegrationApplication is a DerivedField
			type is Alpha size 15
			restricted
			LocalConfigurationParameter = "IntegrationApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedIntegrationApplicationLocally is a DerivedField
			type is Boolean
			restricted
			if (DerivedIntegrationApplication = "Local.ly")
				return true
			else
				return false

		DerivedVATRegNum is a DerivedField
			type is Alpha size 25
			restricted
			if(DerivedIntegrationApplicationLocally and DerivedAddrCountryCode = "IN")
				return TaxEntityRel.VATRegistrationNumber
			else
				return ""


		LocationBODXML is a DerivedField
			type is XMLDocument
			restricted
			LocationBODXML = template.IONSyncLocation_InventoryLocation_ST document for this instance
			return LocationBODXML



		DerivedBillToPartyMasterBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccountingEntity + ":" + ":" + DerivedDocumentID + ":" + "?BillToPartyMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 4
			restricted
			return Company.GeneralLedgerCompany.FinanceEnterpriseGroup

		DerivedActionCode is a DerivedField
			type is Alpha size 30
			restricted
			if (ActionCode.Create or action type.Create)
				return "Add"
			if (ActionCode.Update or action type.Update)
				return "Replace"
			if (ActionCode.Delete or action type.Delete)
				return "Deleted"

		DerivedBillToPartyAddressLine1 is a DerivedField
			type is Alpha size 40
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.DeliveryAddress.AddressLine1
			else
				return PostalAddress.DeliveryAddress.AddressLine1

		DerivedBillToPartyAddressLine2 is a DerivedField
			type is Alpha size 40
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.DeliveryAddress.AddressLine2
			else
				return PostalAddress.DeliveryAddress.AddressLine2

		DerivedBillToPartyAddressLine3 is a DerivedField
			type is Alpha size 40
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.DeliveryAddress.AddressLine3
			else
				return PostalAddress.DeliveryAddress.AddressLine3

		DerivedBillToPartyAddressLine4 is a DerivedField
			type is Alpha size 40
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.DeliveryAddress.AddressLine4
			else
				return PostalAddress.DeliveryAddress.AddressLine4

		DerivedBillToPartyCity is a DerivedField
			type is Alpha size 58
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.Municipality
			else
				return PostalAddress.Municipality

		DerivedBillToPartyStateProvince is a DerivedField
			type is Alpha size 3
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.StateProvince
			else
				return PostalAddress.StateProvince

		DerivedBillToPartyCountry is a DerivedField
			type is Alpha size 3
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.Country
			else
				return PostalAddress.Country

		DerivedBillToPartyPostalCode is a DerivedField
			type is Alpha size 12
			restricted
			if (PurchaseOrderBillToName entered)
				return PurchaseOrderBillToAddress.PostalCode
			else
				return PostalAddress.PostalCode

		DerivedStatusCode is a DerivedField
			type is Alpha size 20
			restricted
			if (ActionCode = "D" or ActionCode.Delete)
				return "Deleted"
			if (Status.Inactive)
				return "Closed"
			if (Status.Active)
				return "Open"

		SyncBillToPartyMasterXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (DerivedCleanDocumentID = "Y")
				SyncBillToPartyMasterXMLBOD = template.IONSyncBillToPartyMaster_InventoryLocation_CleanDoc_ST document for this instance
			else
				SyncBillToPartyMasterXMLBOD = template.IONSyncBillToPartyMaster_InventoryLocation_ST document for this instance
			return SyncBillToPartyMasterXMLBOD


		DerivedItemLocationAuditCount is a DerivedField
			type is Numeric 20
			restricted
			return sum ItemLocationForAuditPurgeRel.DerivedAuditCount

		DerivedStockOnHandDetailAuditCount is a DerivedField
			type is Numeric 20
			restricted
			return sum StockOnHandDetailForAuditPurgeRel.DerivedAuditCount

		DerivedCompanyName is a DerivedField
			type is Alpha 50
			restricted
			return Company.Name

		WarehouseLocationMessage is a MessageField
			"The_Inventory_LocationIsA_Warehouse"

	Attach Rules
		constraint (Status.Active
		or          BypassRuleForTheseFiles
		or         (Status.AddInactive and not AddInactiveBypassRule))
			"InventoryLocation<InventoryLocation>MustBeActive"

		if (parentcontext.name = "WarehouseStorageLocation"
		or  parentcontext.name = "WarehouseZone"
		or  parentcontext.name = "ItemStorageLocation"
		or  parentcontext.name = "WarehouseWave"
		or  parentcontext.name = "ShipmentLoadConsolidation"
		or  parentcontext.name = "VehicleTrip"
		or  parentcontext.name = "LogisticDelivery"
		or  parentcontext.name = "WarehouseDock"
		or  parentcontext.name = "DistributionClerk"
		or  parentcontext.name = "WarehouseComponentType")
			constraint (InventoryLocation.UseAsWarehouseLocation)
            	"Location<InventoryLocation>IsNotA_Warehouse_Location"
			
			if (parentcontext.name = "VehicleTrip")
				constraint (not MSCMDelivery)
					"CannotCreate_Vehicle_Trips.Inventory_Location<InventoryLocation>IsSetToMSCMDelivery."

	Conditions
		HasRecommendations
			when (IIHInventoryLocationRel.HasRecommendations)

		ActorIsIISpecialistWithViewAccess
			when (IISpecialistLocationAccess != AccessType.None)

		ActorIsIISpecialistWithEditAccess
			when (IISpecialistLocationAccess = AccessType.Edit)

		ProcessorWithViewOrEditAccess
			restricted
			when (ProcessorWithViewOrEditAccessRel exists)

		EditAccess
			restricted
			when (ProcessorWithViewOrEditAccessRel.Access.Edit
			or (InventoryIntelligenceProcessorRel not exists
			and IIHGlobalConfigurationRel.DefaultGlobalAccess.Edit)) 

		ViewAccess
			restricted
			when (ProcessorWithViewOrEditAccess 
			or (InventoryIntelligenceProcessorRel not exists
			and (IIHGlobalConfigurationRel.DefaultGlobalAccess.Edit
			or IIHGlobalConfigurationRel.DefaultGlobalAccess.View)))

		WithRecommendationIsYes
			restricted
			when (WithRecommendation entered
			and   WithRecommendation.Yes)

 		WithRecommendationIsNo
			restricted
			when (WithRecommendation entered
			and   WithRecommendation.No)

		WithRecommendationNotEntered
			restricted
			when (WithRecommendation not entered)

		MatchingWithRecommendationCriteria
			restricted
			when (SameAsContextInventoryLocation
			and   IIHItemLocationsRel exist)

		SameAsContextInventoryLocation
			restricted
			when (ContextInventoryLocation not entered
			or   (ContextInventoryLocation entered
			and   ContextInventoryLocation = InventoryLocation))

		BypassRuleForTheseFiles
			restricted
	   		when (parentcontext.name = "ContractLineMember"
	   		or    parentcontext.name = "ContractImportTierMember"
	   		or    parentcontext.name = "ContractTierMemberQualifier"
	   		or    parentcontext.name = "ContractTierMember"
	   		or    parentcontext.name = "ContractAndLineLocation"
			or    parentcontext.name = "ContractImportTierDistributor"
			or    parentcontext.name = "ParticipantGroupLine"
			or    parentcontext.name = "ConsolidatedItemLocation"
			or    parentcontext.name = "MfgContractMemberPivot"
			or    parentcontext.name = "ContractImportGPOMembership"
			or    parentcontext.name = "ContractDistributorPricingMember"
			or    parentcontext.name = "PayablesInvoice"
			or    parentcontext.name = "PayablesInvoiceDetail"
			or    parentcontext.name = "PayablesInvoiceDetailImport"
			or    parentcontext.name = "PayablesInvoiceDetailHistory"
			or    parentcontext.name = "MatchWorkInvoiceDetail"
			or    parentcontext.name = "PayablesInvoiceAddOnCharge"
			or    parentcontext.name = "PayablesInvoiceAddOnChargeImport"
			or    parentcontext.name = "PayablesInvoiceAddOnChargeImportHistory"
			or    parentcontext.name = "RecallProductTransaction"
			or    parentcontext.name = "RecallProductTaskItem"
			or    parentcontext.name = "ItemReplenishmentSource"
			or    parentcontext.name = "PurchaseOrderEDIOutput"
			or    parentcontext.name = "InventoryLocationExtension"
			or    parentcontext.name = "PoInvLineFact")
		
		AddInactiveBypassRule
			restricted
			when (parentcontext.name = "PurchaseOrder"
			or    parentcontext.name = "PurchaseOrderLine"
			or    parentcontext.name = "Requisition"
			or    parentcontext.name = "RequisitionLine"
			or	  parentcontext.name = "ItemLocation")

		IsActive
			restricted
			when (Status.Active)

		IsAddInactive
			classic name is ADDINACTIVE
			restricted
			when (Status.AddInactive)

		IsPerpetualLocation
			restricted
			when (LocationType.InventoryLocation)

		IsCartLocation
			restricted
			when (LocationType.ExchangeCart)

		HasCustomer
			classic name is CUSTOMER-ROLE
			restricted
			when (Customer entered)

		HasFreightAccount
			classic name is FREIGHT-ACCT
			restricted
			when (FreightAccount.AccountingUnit entered
			or    FreightAccount.GeneralLedgerChartAccount entered)


		HasHandlingAccount
			classic name is HANDLING-ACCT
			restricted
			when (HandlingAccount.AccountingUnit entered
			or    HandlingAccount.GeneralLedgerChartAccount entered)


		HasGlobalLocationNumber
			classic name is HAS-GLN-NBR
			restricted
			when (GlobalLocationNumber entered)

		IsInactive
			restricted
			when (Status.Inactive)

		ParOrExchangeCart
			classic name is LOC-TYPE-ENTRD
			restricted
			when (LocationType.ExchangeCart
			or    LocationType.ParLocation)

		IsParLocation
			restricted
			when (LocationType.ParLocation)

		IsRegularLocation
			classic name is REG-LOCATION
			restricted
			when (not LocationType.ExchangeCart
			and   not LocationType.ParLocation)

		HasReplenishFromLocation
			classic name is REPL-LOCATION
			restricted
			when (ReplenishFromLocation entered)

		HasScrapAccount
			classic name is SCRAP-ACCT
			restricted
			when (ScrapAccount.AccountingUnit entered
			or    ScrapAccount.GeneralLedgerChartAccount entered)


		HasSuspenseAccount
			classic name is SUSPENSE-ACCT
			restricted
			when (VendorReturnSuspenseAccount.AccountingUnit entered
			or    VendorReturnSuspenseAccount.GeneralLedgerChartAccount entered)


		HasVendor
			classic name is VENDOR-ROLE
			restricted
			when (Vendor entered)

		IsWorkOrderLocation
			classic name is WO-LOC-SETUP
			restricted
			when (not WorkOrderLocationType.NotAWorkOrderLocation)

		IsOffsiteOrProductionLocation
			classic name is WO-LOCATION
			restricted
			when (WorkOrderLocationType.OffsiteLocation
			or    WorkOrderLocationType.ProductionLocation)

		IsOffsiteLocation
			classic name is WO-OFFSITE-LOC
			restricted
			when (WorkOrderLocationType.OffsiteLocation)

		IsProductionLocation
			classic name is WO-PROD-FACLTY
			restricted
			when (WorkOrderLocationType.ProductionLocation)

		IsWorkOrderInUse
			restricted
			when (Company.WorkOrderInUse
			and   !ParOrExchangeCart)

		IsWorkOrderLocationTypeProductionLocation
			restricted
			when (WorkOrderLocationType.ProductionLocation
			and   !ParOrExchangeCart)

		RecordExists
			restricted
			when (InventoryLocation exists)

		VertexResultsExist
			restricted
			when (VertexTaxAreaIdResultsRel exist
			and  !VertexTaxAreaIdResultsRel.WebServiceError)

		VertexErrorExist
			restricted
			when (VertexWebserviceErrorRel exist)

		PricingGroupEntered
			restricted
			when (PricingGroup entered)

		InventoryTransactionRelExists
			restricted
			when (InventoryTransactionRel exists)

		ItemLocationRelExists
			restricted
			when (ItemLocationRel exists)

		UseBackgroundDelete
			restricted
			when (instance count of ItemLocationRel > 100)

		WorkOrderVisible
			when (Company.WorkOrderInUse and not ParOrExchangeCart)

		SubstituteLocationsVisible
			when (WorkOrderLocationType.ProductionLocation and not ParOrExchangeCart)

		MultipleTaxAreasVisible
			when (VertexResultsExist and not ParOrExchangeCart)

		VertexErrorVisible
			when (VertexErrorExist and not ParOrExchangeCart)

		KitchenOrderVisible
			restricted
			when (RecipeEnabled and not ParOrExchangeCart)

		CompanyUsesKitchenOrder
			restricted
			when (Company.KitchenOrderInUse)

		DisplayInvalidParUOM
			restricted
			when (ParOrExchangeCart
			and   ItemLocationInvalidUOMRel exists)


		PreferenceCardEnabled
			restricted
			when (Company.PreferenceCardEnabled)

		ReportGroupsExist 
			restricted 
			when (InventoryReportGroupLocationRel exists)

		HasCompanyParticipants 
			restricted 
			when (CompanyParticipantRel exists)

		HasPricingGroupParticipants 
			restricted 
			when (PricingGroupParticipantRel exists)	

		HasCompanyTierMembers 
			restricted 
			when (CompanyTierMemberRel exists)

		HasPricingGroupTierMembers 
			restricted 
			when (PricingGroupTierMemberRel exists)		

		HasCompanyPricingMembers 
			restricted 
			when (CompanyPricingMemberRel exists)

		HasPricingGroupPricingMembers 
			restricted 
			when (PricingGroupPricingMemberRel exists)					


		HasMobileSupplyChainConfiguration
			restricted
			when (MobileSupplyChainConfigurationRel exists)

		
		IsValidForActorContext	
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)


	Form Invokes
		ParLocationRequest
			invoke CreateFromParLocation Requisition
				invoked.Company  					= Company
				invoked.RequestingLocation			= InventoryLocation
				if (ComingFromMobileRequisitions)
					invoked.RequisitionSource		= 99
				else
					invoked.RequisitionSource		= 3
					
		MobileParLocationRequest
			invoke MobileCreateFromParLocation Requisition
				invoked.Company  					= Company
				invoked.RequestingLocation			= InventoryLocation
				if (ComingFromMobileRequisitions)
					invoked.RequisitionSource		= 99
				else
					invoked.RequisitionSource		= 3

	Relations
		OpenKitchenOrdersRel is a KitchenOrder set
			Instance Selection
				where (related.IsNotCompletedOrCancelled)
				
		InventoryLocationExtension
			one-to-one relation to InventoryLocationExtension
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= InventoryLocation
	
		ActorContextIIHGlobalConfigRel
			one-to-one relation to IIHGlobalConfiguration
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup

		IIHGlobalConfigurationRel
			one-to-one relation to IIHGlobalConfiguration
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = Company.FinanceEnterpriseGroup
				
		IIHInventoryLocationRel
			one-to-one relation to IIHInventoryLocation
			Field Mapping uses symbolic key
				related.Company           		= Company
				related.IIHInventoryLocation 	= InventoryLocation

		IIHItemLocationsCountRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation)

		IIHItemLocationsRecsCountRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.HasRecommendations)

		IIHItemLocationsValueRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and related.ConsignmentInValuationCheck)

		IIHItemLocationsRecsValueRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and    related.HasRecommendations
				and related.ConsignmentInValuationCheck)

		IIHItemLocationsRecsUnderReviewRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and    related.HasRecommendations
				and    related.Status.Review)

		OutOfBoundsRecsUnderReviewRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and    related.HasRecommendations
				and    related.Status.Review
				and	   related.OutOfBounds)

		OutOfBoundsItemsRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and	(related.Status.Review
				or	related.Status.None)
				and	related.OutOfBounds)

		IIHItemLocationsRecsUnderApprovedRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and    related.HasRecommendations
				and    related.Status.Approved)

		IIHItemLocationsRecsApprovedOrSentRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.ValidForInventoryValuation
				and    related.HasRecommendations
				and   (related.Status.Approved
				or     related.Status.Sent))

		InventoryIntelligenceProcessorRel
			one-to-one relation to InventoryIntelligenceProcessor
			Field Mapping uses symbolic key
				related.HROrganization 					= actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor 	= actor.agent(Employee).Employee

		InventoryIntelligenceProcessorCompanyRel
			one-to-one relation to InventoryIntelligenceProcessorLocation
			Field Mapping uses ByCompanyLocation
				related.HROrganization                 = actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor = actor.agent(Employee).Employee
				related.Company                        = Company
				related.Location					   = blank

		InventoryIntelligenceProcessorLocationRel
			one-to-one relation to InventoryIntelligenceProcessorLocation
			Field Mapping uses ByCompanyLocation
				related.HROrganization                 = actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor = actor.agent(Employee).Employee
				related.Company                        = Company
				related.Location                       = InventoryLocation

		IIHItemLocationsOnlyRecsRel
			one-to-many relation to IIHItemLocation
			valid when (WithRecommendationIsYes)
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (!related.Status.None)

		IIHItemLocationsNoRecsRel
			one-to-many relation to IIHItemLocation
			valid when (WithRecommendationIsNo)
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (related.Status.None)

		IIHItemLocationsAllRel
			one-to-many relation to IIHItemLocation
			valid when (WithRecommendationNotEntered)
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation

		IIHItemLocationsRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
			Instance Selection
				where (WithRecommendation not entered
				or    (WithRecommendation.Yes
				and   !related.Status.None)
				or    (WithRecommendation.No
				and    related.Status.None))

		ProcessorWithViewOrEditAccessRel
			one-to-one relation to InventoryIntelligenceProcessorAccessRights
			Field Mapping uses symbolic key
				related.HROrganization                 = actor.agent(Employee).HROrganization
				related.InventoryIntelligenceProcessor = actor.agent(Employee).Employee
				related.InventoryIntelligenceProcessorAccessRights.InventoryCompany = Company
				related.InventoryIntelligenceProcessorAccessRights.IIHInventoryLocation = InventoryLocation

		ItemLocationsRel
			classic name is ITEMLOC
			one-to-many relation to ItemLocation

			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation

		FinishedGoodsWithOpenDemandRel
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company			  	= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection
				where 	(related.HasRecipe
				and		 related.HasOpenDemand)

		GlobalLocationNumberDetailRel
			classic name is GLNLOCDTL
			one-to-one relation to GlobalLocationNumberDetail
			valid when (HasGlobalLocationNumber)
			Field Mapping uses Set2
				related.ItemGroup                                           = Company.ItemGroup
				related.GlobalLocationNumberDetail.GlobalLocationNumberType = 3
				related.CompanyLocationBin.Company                          = Company
				related.CompanyLocationBin.InventoryLocation                = InventoryLocation
				related.CompanyLocationBin.Bin                              = blank
				related.GlobalLocationNumber                                = GlobalLocationNumber

		BillingCompanyRel
			one-to-one relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company = Company

		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		SubstituteLocationsRel
			one-to-many relation to SubstituteLocation
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation





	  	TaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.AccountingEntity.FinanceEnterpriseGroup
				related.TaxEntity 				= Company.AccountingEntity

		EntityTaxCodeRel
			one-to-one relation to EntityTaxCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.AccountingEntity.FinanceEnterpriseGroup
				related.TaxEntity				= Company.AccountingEntity
				related.TaxCode					= LocalTaxCode

		LocationByVendorRel
			one-to-many relation to InventoryLocation
			Field Mapping uses Set4
				related.Vendor					= Vendor
				related.PurchaseFromLocation	= PurchaseFromLocation
			Instance Selection
				where (related.Company 				!= Company
				or     related.InventoryLocation	!= InventoryLocation)

		LocationByCustomerRel
			one-to-many relation to InventoryLocation
			Field Mapping uses Set5
				related.Customer		= Customer
				related.CustomerShipTo	= CustomerShipTo
			Instance Selection
				where (related.Company 				!= Company
				or     related.InventoryLocation	!= InventoryLocation)

		NegativeSOHRel
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection
				where (related.StockOnHandQuantity < 0)

		InventoryLocationForFromCompanyAndLocationRel
			one-to-many relation to InventoryLocation
			Field Mapping uses symbolic key
				related.Company           = FromCompany
				related.InventoryLocation = ReplenishFromLocation

		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company		= FromCompany

	 	ItemLocationRel
			classic name is ITEMLOC
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation

	 	ItemLocationForAuditPurgeRel
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation
			Instance Selection
				include deleted records

	 	StockOnHandDetailForAuditPurgeRel
			one-to-many relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation
			Instance Selection
				include deleted records

	 	ItemLocationsForCopyFromRel
	 		one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation

	 	ItemLocationsForDeleteActionRel
	 		one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation

		ItemReplenishmentSourcesRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
				related.Item              = LocalItem

	  	BinGroupDetailRel
	  		one-to-many relation to BinGroupDetail
	  		Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
				related.BinGroup          = InventoryLocation

	  	BinGroupDetailInvalidUOMRel
	  		one-to-many relation to BinGroupDetail
	  		Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
				related.BinGroup          = InventoryLocation
			Instance Selection
				where (related.InvalidOnLocationItemUOM)			

	 	ItemLocationInvalidUOMRel
			classic name is ITEMLOC
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation
			Instance Selection
				where (related.InvalidOnLocationItemUOM)	

		BinGroupForDeleteActionRel
	  		one-to-many relation to BinGroup
	  		Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation
				related.BinGroup          = InventoryLocation

	 	RequestingLocationRel
	 		one-to-many relation to RequestingLocation
	  		Field Mapping uses symbolic key
				related.Company           	= Company
				related.RequestingLocation 	= InventoryLocation

		RequestingLocationForCopyToRel
	 		one-to-many relation to RequestingLocation
	  		Field Mapping uses symbolic key
				related.Company           	= Company
				related.RequestingLocation 	= CopyLocation

	 	GeneralLedgerCategoryForCopyFromRel
	 		one-to-many relation to GeneralLedgerCategory
	 		delete cascades
	 		Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation

		GeneralLedgerCategoryForDeleteActionRel
	 		one-to-many relation to GeneralLedgerCategory
	  		Field Mapping uses symbolic key
				related.Company           	= Company
				related.InventoryLocation 	= InventoryLocation

		DefaultGeneralLedgerCategoryRel
			one-to-many relation to GeneralLedgerCategory
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection
				where (related.Default)

   		BinsForCopyFromRel
			one-to-many relation to Bin
			delete cascades
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation

  		StorageCodeForCopyFromRel
  			one-to-many relation to StorageCode
			Field Mapping uses symbolic key
				related.Company           = Company
				related.InventoryLocation = InventoryLocation

	 	KitItemRel
	 		one-to-many relation to KitItem
			Field Mapping uses symbolic key
				related.ItemGroup                 = Company.ItemGroup
			Instance Selection
				where (related.KitItem.Company           = Company
			   	and    related.KitItem.InventoryLocation = InventoryLocation)

		RecallOrgByIcRqLocation
			one-to-many relation to RecallOrganization
			Field Mapping uses ByInventoryLocation
				related.InventoryCompany   = Company
				related.InventoryLocation  = InventoryLocation

 		VertexConfigRel
			one-to-one relation to VertexConfig
			Field Mapping uses symbolic key
				related.VertexConfig 							= Company.FinanceEnterpriseGroup

  		VertexWebserviceErrorRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance
				and    related.WebServiceError							= true)

		VertexTaxAreaIdResultsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)

   		SelectedPostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses ByTaxAreaId
				related.VertexConfig										= Company.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey  			= LocalLookupKey
				related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey 	= LocalResponseBusclassKey
			Instance Selection
				where (related.Selected 									= true)

  		UpdatePostalAddressRecordsRel
			one-to-many relation to VertexTaxAreaIdPostalAddress
			Field Mapping uses ByTaxAreaId
				related.VertexConfig										= Company.FinanceEnterpriseGroup
				related.VertexTaxAreaIdPostalAddress.LookupKey  			= LocalLookupKey
			Instance Selection
				where  (related.VertexTaxAreaIdPostalAddress.ResponseBusclassKey 	= LocalResponseBusclassKey)


   		SelectedTaxAreaIdRecordsRel
			one-to-many relation to VertexTaxAreaIdResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
				related.RelatedObjectReference							= reference to this instance
			Instance Selection
				where  (related.Selected 								= true)

		VertexLookupResultsRel
			one-to-many relation to VertexLookupResults
			Field Mapping uses ByRelatedObjectReference
				related.VertexConfig									= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.RelatedObjectReference					= reference to this instance)

		InventoryTransactionRel
			one-to-many relation to InventoryTransaction
			Field Mapping uses symbolic key
				related.Company 										= Company
				related.InventoryLocation								= InventoryLocation

		CalendarWorkingDaysRel
			one-to-many relation to SystemCalendarDate
			Field Mapping uses symbolic key
				related.EnterpriseGroup	= Company.ItemGroup
				related.SystemCalendar 	= Calendar
			Instance Selection
				where (related.IsWorkingDay
				and	   related.SystemCalendarDate = LocalProjectedProductionDate)

		BillingProcessLevelRel
			one-to-many relation to BillingProcessLevel
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where ((LocalProcessLevel not entered
				or      related.BillingProcessLevel = LocalProcessLevel)
				and     related.HasBillingInvoiceForIDMOrderEntryDailyShipmentJournal)

		POReceiptPendingTwoStepReceivingRel
			one-to-many relation to PurchaseOrderReceipt
			Field Mapping uses symbolic key
				related.Company		= Company
			Instance Selection
				where (related.ShipToLocation = InventoryLocation
				and    related.Status.ReleasedPendingTwoStepReceiving)

		PurchaseOrderLineForReceivingDocumentIDMRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByPOLine
				related.Company 			= PurchaseOrder.Company
				related.PurchaseOrder		= PurchaseOrder
				related.ShipToLocation	 	= InventoryLocation
			Instance Selection
				where (not related.PrintedOnReceivingDocument
				and    not related.ItemType.Service
				and    related.PurchaseOrderLineLifeCycleState.Released
				and    not related.IsDropship
				and	   related.DerivedOpenQty > 0
				and   (PurchaseOrder.Company.LocalFrEarlyDlDate not entered or related.EarlyDeliveryDate >= PurchaseOrder.Company.LocalFrEarlyDlDate)
				and   (PurchaseOrder.Company.LocalToEarlyDlDate not entered or related.EarlyDeliveryDate <= PurchaseOrder.Company.LocalToEarlyDlDate))

		POCommentsForReceivingDocumentIDMRel
			one-to-many relation to PurchaseOrderComment
			Field Mapping uses ByCommentType
				related.Company			= PurchaseOrder.Company
				related.PurchaseOrder	= PurchaseOrder
			Instance Selection
				where (related.CommentType.PrintOnReceivingDocument
				or	   related.CommentType.PrintOnInternalDocuments)

	    LocationItemStockUOMRel
        	one-to-many relation to ItemLocation
            Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation 	= InventoryLocation
            Instance Selection
            	where (related.HasItemLocationStockUOM)

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		ContractGroupRel 
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key 
				related.ContractGroup = Company.ItemGroup 

		ContractLocationRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByLocationOnly
				related.ContractGroup								= LocalContractGroup
				related.Contract        							= LocalContract
				related.ContractAndLineLocation.Company 			= Company 
				related.ContractAndLineLocation.Location			= InventoryLocation 

		LocalParticipantGroupLineRel
			one-to-many relation to ParticipantGroupLine 
			Field Mapping uses symbolic key 
				related.ProcurementGroup 									= Company.ItemGroup 
				related.ParticipantGroup                            		= LocalParticipantGroup 	
			Instance Selection 
				where (related.ParticipantGroupLine.ParticipantLocation.Company	= LocalCompany)							
		
		ParticipantGroupByCompanyRel 
			one-to-many relation to ParticipantGroupLine 
			Field Mapping uses ByCompanyFirst
				related.ProcurementGroup 											= Company.ItemGroup 
				related.ParticipantGroupLine.ParticipantLocation.Company			= Company	
            	related.ParticipantGroupLine.ParticipantLocation.Location           = blank
            	related.ParticipantGroupLine.ParticipantLocation.RequestingLocation = blank 
			Instance Selection 
				where (related.HasContracts
				and    !related.MemberOnly
				and    related.ParticipantGroup.AddNewInventoryLocations)

		CompanyTierMemberRel 
			one-to-many relation to ContractTierMember 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup						   = ContractGroupRel.ContractGroup 
				related.ContractTierMember.Company             = Company 
				related.ContractTierMember.Location            = blank 
				related.ContractTierMember.RequestingLocation  = blank 
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		CompanyPricingMemberRel 
			one-to-many relation to ContractDistributorPricingMember 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup										 = ContractGroupRel.ContractGroup 
				related.ContractDistributorPricingMember.Company             = Company 
				related.ContractDistributorPricingMember.Location            = blank 
				related.ContractDistributorPricingMember.RequestingLocation  = blank 
			Instance Selection 
				where (!related.FromMfgContract
				and    related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		CompanyParticipantRel 
			one-to-many relation to ContractParticipant 
			Field Mapping uses ByCompanyFirst 
				related.ContractGroup												= ContractGroupRel.ContractGroup 
				related.ContractParticipant.ParticipantLocation.Company             = Company 
				related.ContractParticipant.ParticipantLocation.Location            = blank 
				related.ContractParticipant.ParticipantLocation.RequestingLocation  = blank 
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupParticipantRel 
			one-to-many relation to ContractParticipant 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup												= ContractGroupRel.ContractGroup 
				related.ContractParticipant.ParticipantLocation.PricingGroup       	= Company.PricingGroup  
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupTierMemberRel 
			one-to-many relation to ContractTierMember 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup							= ContractGroupRel.ContractGroup 
				related.ContractTierMember.PricingGroup       	= Company.PricingGroup  
			Instance Selection 
				where (related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)

		PricingGroupPricingMemberRel 
			one-to-many relation to ContractDistributorPricingMember 
			Field Mapping uses ByPricingGroup  
				related.ContractGroup							        = ContractGroupRel.ContractGroup 
				related.ContractDistributorPricingMember.PricingGroup  	= Company.PricingGroup  
			Instance Selection 
				where (!related.FromMfgContract
				and    related.Contract.NotClosed
				and    related.Contract.EnableClinicalSystemUseLocations)
		InventoryReportGroupRel 
			one-to-many relation to InventoryReportGroup 
			Field Mapping uses symbolic key 
				related.Company            = Company 

		InventoryReportGroupLocationRel 
			one-to-many relation to InventoryReportGroupLocation 
			Field Mapping uses symbolic key
				related.Company				= Company 
			Instance Selection 
				where (related.InventoryLocation	= InventoryLocation)

		ThisLocationOnReportGroupRel 
			one-to-one relation to InventoryReportGroupLocation 
			Field Mapping uses symbolic key 
				related.Company					= Company 
				related.InventoryReportGroup	= LocalInventoryReportGroup
				related.InventoryLocation		= LocalThisLocation	
		
		MatchingReportGroupLocationRel 
			one-to-many relation to InventoryReportGroupLocation 
			Field Mapping uses symbolic key 
				related.Company					= Company 
			Instance Selection
				where (related.InventoryLocation		= LocalLocation)		

		LocalContractAndLineLocationRel
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByLocationOnly  
				related.ContractGroup           					= ContractGroupRel.ContractGroup 
				related.Contract                					= LocalContract 
				related.ContractAndLineLocation.Company				= Company
				related.ContractAndLineLocation.Location 			= InventoryLocation						


		ReplenishmentWorksheetsRel
			one-to-many relation to PurchaseOrderInterface
			Field Mapping uses ByCompanyLocationItem
				related.Company			= Company
				related.ShipToLocation	= InventoryLocation
			Instance Selection
				where (related.IsReplenishmentWorksheet)


		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
		
		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "Location"
				related.FSMBODConfiguration.Direction 	= 1


		FSMBODBillToPartyConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "BillToPartyMaster"
				related.FSMBODConfiguration.Direction 	= 1
				
		FSMBODAECrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFGLC"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= DerivedCrossGLC )
		
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker

		

        MobileSupplyChainConfigurationRel
            one-to-one relation to MobileSupplyChainConfiguration
            Field Mapping uses symbolic key
                related.MobileSupplyChainConfiguration = Company.FinanceEnterpriseGroup

		MobileSupplyChainLocationRel
            one-to-one relation to MobileSupplyChainLocation
            Field Mapping uses symbolic key
				related.Company                 			= Company	
                related.MobileSupplyChainLocation			= InventoryLocation

		DockLogRel
			one-to-many relation to DockLog
			Field Mapping uses symbolic key
				related.Company								= Company
				related.MobileSupplyChainLocation			= InventoryLocation
		
		MiscellaneousReceiptRel
			one-to-many relation to MiscellaneousReceipt
			Field Mapping uses symbolic key
				related.Company								= Company
				related.MobileSupplyChainLocation			= InventoryLocation



		WarehouseStorageLocationRel
			one-to-many relation to WarehouseStorageLocation
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				
		UndeliveredLogisticDeliveryRel
			one-to-many relation to LogisticDelivery
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
			Instance Selection
				where (not related.DeliveryStatus.Delivered)
	Sets

		Set2
			indexed
			Instance Selection
				where (ParOrExchangeCart)
			Sort Order
				Company
				InventoryLocation

		Set3
			indexed
			Instance Selection
				where (IsWorkOrderLocation)
			Sort Order
				Company
				InventoryLocation

		Set4
			indexed
			Instance Selection
				where (HasVendor)
			Sort Order
				Vendor
				PurchaseFromLocation
				Company
				InventoryLocation

		Set5
			indexed
			Instance Selection
				where (HasCustomer)
			Sort Order
				Customer
				CustomerShipTo
				Company
				InventoryLocation

		ByPricingGroup
			Instance Selection
				where (PricingGroupEntered)
			Sort Order
				PricingGroup
				Company
				InventoryLocation

	Field Rules

		Name
			required

		NameForPurchaseOrder
			default to Name

		PostalAddressForPurchaseOrder
			default to PostalAddress

			if (DefaultDropshipPurchaseOrder)
				required
					"MustEnterAddressOnLine_1"                                
			if (TaxEntityRel.ThirdParty.Sabrix)										
				constraint (PostalAddressForPurchaseOrder.Municipality 	entered
				and 		PostalAddressForPurchaseOrder.StateProvince entered
				and 		PostalAddressForPurchaseOrder.PostalCode 	entered
				and 		PostalAddressForPurchaseOrder.County 		entered)
					"City,_\County,_\StateAnd_\Postal_\CodeRequiredWhenUsing_\One\SourceTax"
				required
					"Purchase_\Order_\Ship_\ToAddressRequiredWhenUsing_\One\SourceTax"

		AllocationPurpose
			if (LocationType.InventoryLocation)
				default to "C"

		UseGLCategoryIssueAccountingUnitAsDefault
			if (LocationType.InventoryLocation)
				default to "Y"

		WorkOrderLocationType
			default to WorkOrderLocationType.NotAWorkOrderLocation
			if (!Company.WorkOrderInUse)
				constraint (WorkOrderLocationType.NotAWorkOrderLocation)
					"CompanyNotSetUpToUseWorkOrders"

			if (!WorkOrderLocationType.ProductionLocation)
				constraint (SubstituteLocationsRel not exists)
					"CannotHaveSubstituteLocationsWhenWorkOrderIsNotSetup"

			if (WorkOrderLocationType changed)
				if (WorkOrderLocationType.OffsiteLocation
				and !old WorkOrderLocationType.OffsiteLocation)
					constraint (ItemLocationsRel not exists)
						"CannotChangeToOffsite;ItemLocationsDefined"             

			if (!WorkOrderLocationType.NotAWorkOrderLocation)
				constraint (LocationType.InventoryLocation)
					"OnlyInventoryLocationCanBeSelectedForWorkOrder"

			if (LocationType.InventoryLocation)
				default to "N"

		VendorReturnSuspenseAccount
			if (LocationType.InventoryLocation)
				required

		FreightAccount
			if (LocationType.InventoryLocation)
				required

		HandlingAccount
			if (LocationType.InventoryLocation)
				required

		ScrapAccount
			if (LocationType.InventoryLocation)
				required

		InspectionHoldAccount
			if (LocationType.InventoryLocation)
				required

		MSCMDelivery
			if (MSCMDelivery changed)
				confirmation required
					"AllUnreleasedShipmentsMustBeReleasedBeforeChangingMSCMDelivery;Continue?"

		TaxCode














		PurchaseOrderTaxCode
			LocalTaxCode = PurchaseOrderTaxCode


			if  (TaxEntityRel.ThirdParty.Sabrix				
			and  LocationType.InventoryLocation)			
				required
					"PurchasingTaxCodeRequiredWhenUsing_\One\SourceTax"

		HealthIndustryNumber
			constraint (HealthIndustryNumber matches "^([a-zA-Z0-9]{9,9})$")
				"Health_\Industry_\NumberMustUseAllNineCharacters"         

		ERSCapable
			constraint (LocationType.InventoryLocation)
				"CannotSelectERSCapable;LocationTypeMustBeInventoryLocation"
			constraint (MatchCompanyRel exists)
				"CannotBe_\E\R\SCapable,_\A\PCompanyDoesNotExist"          
			constraint (MatchCompanyRel.ERSLocationControl)
				"CannotBe_\E\R\SCapable,CompanyNotSetupForLocationControl"           

		AllowUnallocatedInProduction
			if (LocationType.InventoryLocation)
				default to "N"






		WasteAccount
			if (WorkOrderLocationType.ProductionLocation)
				required
					"MustEnterDataInAllFieldsForWorkOrder"                    
			else
			if (not RecipeEnabled)
				if (WorkOrderLocationType.NotAWorkOrderLocation)
					cannot be entered
						"WasteAccountCannotBeEnteredWhenWorkOrderIsNotSetUp"
				else
				if (WorkOrderLocationType.OffsiteLocation)
					cannot be entered
						"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		FinishedGoodsVarianceAccount
			if (WorkOrderLocationType.ProductionLocation)
				required
					"MustEnterDataInAllFieldsForWorkOrder"                    
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"VarianceAccountCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		WorkInProcessAccount
			if (WorkOrderLocationType.ProductionLocation)
				required
					"MustEnterDataInAllFieldsForWorkOrder"                    
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"WorkInProcessAccountCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		Calendar
			if (WorkOrderLocationType.ProductionLocation)
				required
					"MustEnterDataInAllFieldsForWorkOrder"                    
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"CalendarCannotBeEnteredWhenWorkOrderIsNotSetUp"

		DemandSource
			if (WorkOrderLocationType.ProductionLocation)
				required
					"MustEnterDataInAllFieldsForWorkOrder"                    
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"DemandSourceCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		ScheduleStatus
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"ScheduleStatusCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		Capacity
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"CapacityCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		ScheduleFrequency
			if (WorkOrderLocationType.ProductionLocation)
				default to "D"
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"ScheduleFrequencyCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

		ScheduleIncrement
			if (WorkOrderLocationType.ProductionLocation)
				default to 1
			else
			if (WorkOrderLocationType.NotAWorkOrderLocation)
				cannot be entered
					"ScheduleIncrementCannotBeEnteredWhenWorkOrderIsNotSetup"
			else
			if (WorkOrderLocationType.OffsiteLocation)
				cannot be entered
					"OffsiteLocationsRequireAccounts,ScheduleAndDemandFieldsBeBlank"        

			if (ScheduleFrequency.Months)
				constraint (ScheduleIncrement <= 12)
					"ScheduleIncrementCannotBeGreaterThan12ForMonthlyScheduling"


			if (ScheduleFrequency.Weeks)
				constraint (ScheduleIncrement <= 52)
					"ScheduleIncrementCannotBeGreaterThan52ForWeeklyScheduling"


		Vendor
			constraint (LocationByVendorRel not exists)
				"Vendor/\Purch_\FromAlreadyAssigned"                       

		PurchaseFromLocation
			constraint (Vendor entered)
				"VendorIsRequiredIfPurchaseFromLocationIsEntered"			

		Customer
			constraint (!BillingCompanyRel.RouteAndStop)
				"CannotEnterCustomerWhenRouteProcessing_\YForBillingCo"    
			constraint (CompanyCustomer exists)
				"Customer<Customer>DoesNotExistForCompany<Company>"
			constraint (LocationByCustomerRel not exists)
				"Customer/\Ship_\ToAlreadyAssigned"                        

		CustomerShipTo
			constraint (Customer entered)
				"CustomerIsRequiredIfShipToIsEntered"						

		ReceivingAllocation
			if (Company.AllocationMethod.Batch)
				constraint (ReceivingAllocation.NoReceivingAllocation)
					"NotAllowedForBatchAllocationCompany"             

		RetailLocationType
			constraint (LocationType.InventoryLocation)
				"Retail_\Location_\TypeMustBe_\BlankFor_\ParAnd_\Cart_\Location"   

		Status
			if (Status.Inactive)
				constraint (NegativeSOHRel not exists)
					"LocationCannotBeInactive;ItemHasNegative_\S\O\H"         

		FromCompany
			if (LocationType.ExchangeCart
		  	or  LocationType.ParLocation)
				default to Company
				constraint (FromCompany 			!= Company
				or			ReplenishFromLocation 	!= InventoryLocation)
					"ReplenishFromCompanyAndLocationCannotEqualToReplenishToCompanyAndLocation"
				constraint (Company.ItemGroup = InventoryCompanyRel.ItemGroup)
					"FromAndToItemGroupAreNotEqual"  							//"IC81.226"

		ReplenishFromLocation
			if (LocationType.ExchangeCart
		  	or  LocationType.ParLocation)
				required
					"ReplenishFromLocationRequiredWithReplenishFromCompany"  //"IC81.220"

				constraint (InventoryLocationForFromCompanyAndLocationRel exists)
					"ReplenishLocationDoesNotExists"  							//"IC81.217"
				constraint (InventoryLocationForFromCompanyAndLocationRel.Status.Active)
					"FromLocationIsInactive"  									//"IC81.139"
			else
				cannot be entered
						"ReplenishFromLocationCannotBeEnteredForInventoryLocation"

		PricingGroup
			constraint (PricingGroup.LocationPricingGroup)
				"PricingGroupIsForCompanies;CannotAttachToALocation"

		PreferredBin
			if (PreferredBin entered)
				for each Company.BinTypeArray.BinTypeGroup
					if (each.BinType = PreferredBin.BinType)
						constraint (each.AllowsReceipt)
							"PreferredBinMustHaveReceiptsAllowedBinType"

		PreferredHoldBin
			if (PreferredHoldBin entered)
				constraint (PreferredHoldBin.BinType entered)
					"PreferredHoldBinMustHaveBinTypeOfRecipientsOnly"

				for each Company.BinTypeArray.BinTypeGroup
					if (each.BinType = PreferredHoldBin.BinType)
						constraint (each.AllowsReceipt)
							"PreferredHoldBinMustHaveReceiptsAllowedBinType"
						constraint (not each.AllowsIssue)
							"PreferredHoldBinCannotBeIssuesAllowedBinType"

		ItemSyncOption
			if (Company.ItemGroup.ItemSyncOption.DoNotAllowItemSync)
				constraint (ItemSyncOption.DoNotUpdate
				or          ItemSyncOption.CheckICCompanyValue)
					"CannotDefineAnItemSyncUpdateOptionUnlessAnUpdateOptionIsDefinedAtItemGroupLevel"

		RecipeEnabled
			if (action type.Create)
				if (RecipeEnabled)
					constraint (Company.KitchenOrderInUse)
						"Kitchen_\ManagementNotEnabledFor_\Company<Company>"
			else
				if (RecipeEnabled changed)
					if (not RecipeEnabled)
						constraint (OpenKitchenOrdersRel not exists)
							"Open_\Kitchen_\OrdersExistsFor_\Location<InventoryLocation>"
					else
						constraint (Company.KitchenOrderInUse)
							"Kitchen_\ManagementNotEnabledForCompany<Company>"

		TrackStockUOMAtItemLocation
			if (TrackStockUOMAtItemLocation changed)
				if ((TrackStockUOMAtItemLocation.DoNotTrackStockUOMAtItemLocation)
				or  (TrackStockUOMAtItemLocation.CheckInventoryCompanyValue
				and not Company.TrackStockUOMAtItemLocation))
					constraint (LocationItemStockUOMRel not exists)
						"CannotChangeTrackingFlag;_StockUOMIsTrackedFromAn_Item_Location"

		TwoStepPurchaseOrderReceiving
			if (TwoStepPurchaseOrderReceiving changed 
			and not TwoStepPurchaseOrderReceiving)	
				constraint (POReceiptPendingTwoStepReceivingRel not exists)
					"PendingTwoStepReceivingExists"

		UseAsWarehouseLocation
			if  ((UseAsWarehouseLocation changed or action type.Create)
			and UseAsWarehouseLocation)
				constraint (Company.AdvancedWarehouseInUse)
					"Distribution_ManagementIsNotEnabledForCompany<Company>"

				constraint (LocationType.InventoryLocation)
					"Use_As_Warehouse_LocationIsOnlyValidFor_Inventory_Location_Type"

			if (UseAsWarehouseLocation changed
			and not UseAsWarehouseLocation)
				constraint (WarehouseStorageLocationRel not exists)
					"Warehouse_Storage_LocationExists"
				constraint (UndeliveredLogisticDeliveryRel not exists)
					"Logistic_DeliveryExists"

		PurchaseOrderApprovalType
			if (PurchaseOrderApprovalType.MatrixLineDistribution)
				constraint (Company.FinanceEnterpriseGroup.EnableResponsibilityMatrix)
					"CannotSetTo_Matrix_Line_DistributionWhenThe_Finance_Enterprise_GroupDoesNotHaveThe_Responsibility_MatrixTurnedOn"

	Create Rules
		if (HasMobileSupplyChainConfiguration)
			if (MobileSupplyChainLocationRel exists)
				invoke Update MobileSupplyChainLocationRel


					if (this instance.MobileSupplyChainLocationRel.LocationType.RequestingLocation 
					or this instance.MobileSupplyChainLocationRel.LocationType.ReceivingAndDeliveryLocation)
						if (LocationType.InventoryLocation)
							invoked.LocationType	= MobileSupplyChainLocation.LocationType.InventoryLocation
						else
							invoked.LocationType	= MobileSupplyChainLocation.LocationType.ParAndCartLocation
		
			else
				invoke Create MobileSupplyChainLocation
					invoked.MobileSupplyChainLocation    	= InventoryLocation
					invoked.Company             			= Company
					if (LocationType.InventoryLocation)
						invoked.LocationType = MobileSupplyChainLocation.LocationType.InventoryLocation
					else
						invoked.LocationType = MobileSupplyChainLocation.LocationType.ParAndCartLocation

	Rule Blocks
   		RequestingLocationCreateOrUpdate
   			if (RequestingLocationRel exists)
   				invoke Update RequestingLocationRel
   					invoked.FromCompanyLocation.FromCompany		= FromCompany
   					invoked.FromCompanyLocation.FromLocation	= ReplenishFromLocation
   					invoked.InventoryTransactionType            = InventoryTransactionType.Issue
					invoked.LocalFromInventoryLocation			= true
   			else
   				invoke Create RequestingLocation
   					invoked.Company								= Company
   					invoked.RequestingLocation					= InventoryLocation
   					invoked.FromCompanyLocation.FromCompany		= FromCompany
   					invoked.FromCompanyLocation.FromLocation	= ReplenishFromLocation
   					invoked.InventoryTransactionType            = InventoryTransactionType.Issue
   					invoked.FillOrKill 							= FillOrKill.KillBackorders
   					invoked.Active								= true
					invoked.LocalFromInventoryLocation			= true

   		
   		TriggerShipToInventoryLocationService
			trigger "BRShipToInventoryLocationService" PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					Company.FinanceEnterpriseGroup
					Company
					InventoryLocation
				Variables
					ActionCode
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
                    	variable name is CurrentTimeStamp
					include persistent fields from InventoryLocation
					include persistent fields from Company
					include persistent fields from Company.BusinessGroup
					include persistent fields from Company.FinanceEnterpriseGroup
					include persistent fields from Company.GeneralLedgerCompany
   		
   		TriggerShipFromInventoryLocationService
   			trigger "BRShipFromInventoryLocationService" PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					Company.FinanceEnterpriseGroup
					Company
					InventoryLocation
				Variables
					include persistent fields from InventoryLocation
					include persistent fields from Company
					include persistent fields from Company.BusinessGroup
					include persistent fields from Company.FinanceEnterpriseGroup
					include persistent fields from Company.GeneralLedgerCompany
					ActionCode
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					TaxEntityRel.VATRegistrationNumber
						variable name is VATRegistrationNumber
					Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country
						variable name is AddressCodeCountry
   		
   		TriggerInventoryLocationRules
   			trigger PayablesService.InventoryLocationService PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					Company.FinanceEnterpriseGroup
					Company
					InventoryLocation
				Variables
					include persistent fields from InventoryLocation
					include persistent fields from Company
					include persistent fields from Company.BusinessGroup
					include persistent fields from Company.FinanceEnterpriseGroup
					include persistent fields from Company.GeneralLedgerCompany
					ActionCode
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					TaxEntityRel.VATRegistrationNumber
						variable name is VATRegistrationNumber
					Company.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress.Country
						variable name is AddressCodeCountry

		TriggerBillToInventoryServiceRules
			trigger PayablesService.BillToInventoryService PA service
				resume on error
				title is "<LocalTitle>"
				Criteria
					Company.FinanceEnterpriseGroup
					Company
					InventoryLocation
				Variables
					ActionCode
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					include persistent fields from InventoryLocation
					include persistent fields from Company
					include persistent fields from Company.BusinessGroup
					include persistent fields from Company.FinanceEnterpriseGroup
					include persistent fields from Company.GeneralLedgerCompany

   		CreateBinGroupForNewLocation
   			invoke CreateBinGroup BinGroup
				invoked.Company				= Company
				invoked.InventoryLocation	= InventoryLocation
				invoked.BinGroup			= InventoryLocation

   		CreateNewLocationCopyingFromExistingLocation
   			invoke CreateBinGroup BinGroup
				invoked.Company				= Company
				invoked.InventoryLocation	= CopyToLocation
				invoked.BinGroup			= CopyToLocation

			for each StorageCodeForCopyFromRel
				invoke Create StorageCode
					fill in fields from each
					invoked.Company			 		= Company
					invoked.InventoryLocation		= CopyToLocation

			for each BinsForCopyFromRel
				invoke Create Bin
					fill in fields from each
					invoked.Company					= Company
					invoked.InventoryLocation		= CopyToLocation

			for each BinGroupDetailRel
				invoke QuickCreate BinGroupDetail
					invoked.Company					= Company
					invoked.InventoryLocation		= CopyToLocation
					invoked.BinGroup				= CopyToLocation
					invoked.BinGroupDetail			= each.BinGroupDetail
					invoked.Bin						= each.Bin

			for each GeneralLedgerCategoryForCopyFromRel
				invoke Create GeneralLedgerCategory
					fill in fields from each
					invoked.Company					= Company
					invoked.InventoryLocation		= CopyToLocation

			for each ItemLocationsForCopyFromRel
				invoke CreateForParLocation ItemLocation
					fill in fields from each
					invoked.Company					= Company
					invoked.InventoryLocation		= CopyToLocation
				LocalItem = each.Item
				for each ItemReplenishmentSourcesRel
					invoke Create ItemReplenishmentSource
						fill in fields from each
						invoked.InventoryLocation	= CopyToLocation

		DeleteVertexResultsFiles
			invoke Delete VertexTaxAreaIdResultsRel
			invoke Delete UpdatePostalAddressRecordsRel
			invoke Delete VertexLookupResultsRel

	Create Exit Rules 		

		if (InventoryReportGroupRel exists)
			for each InventoryReportGroupRel 
				if (each.AddNewInventoryLocations)
					LocalInventoryReportGroup = each.InventoryReportGroup
					invoke Create InventoryReportGroupLocation 
						invoked.Company		           = Company 
						invoked.InventoryReportGroup   = LocalInventoryReportGroup
						invoked.InventoryLocation      = InventoryLocation   

		if (ContractGroupRel.AutoAddFromNewLocations)
			
			if (PricingGroupEntered)
				invoke UpdateContractLocations PricingGroup 
			
			if (ParticipantGroupByCompanyRel exists)
				for each ParticipantGroupByCompanyRel
					invoke CreateNewMembersAndParticipants each 
						invoked.NewInventoryLocation = InventoryLocation 

			if (HasCompanyParticipants)
				for each CompanyParticipantRel 
					LocalContract = each.Contract 
					if (LocalContractAndLineLocationRel !exists)
						invoke Create ContractAndLineLocation 
							invoked.ContractGroup						= each.ContractGroup 
							invoked.Contract        					= each.Contract 
							invoked.ContractAndLineLocation.Company		= Company 
							invoked.ContractAndLineLocation.Location	= InventoryLocation

			if (HasCompanyTierMembers)
				for each CompanyTierMemberRel 
					LocalContract = each.Contract 
					if (LocalContractAndLineLocationRel !exists)
						invoke Create ContractAndLineLocation 
							invoked.ContractGroup						= each.ContractGroup 
							invoked.Contract        					= each.Contract 
							invoked.ContractAndLineLocation.Company		= Company 
							invoked.ContractAndLineLocation.Location	= InventoryLocation				
			
			if (HasCompanyPricingMembers)
				for each CompanyPricingMemberRel 
					LocalContract = each.Contract 
					if (LocalContractAndLineLocationRel !exists)
						invoke Create ContractAndLineLocation 
							invoked.ContractGroup						= each.ContractGroup 
							invoked.Contract        					= each.Contract 
							invoked.ContractAndLineLocation.Company		= Company 
							invoked.ContractAndLineLocation.Location	= InventoryLocation	

			if (Company.PricingGroup entered)
				if (HasPricingGroupParticipants)
					for each PricingGroupParticipantRel 
						LocalContract = each.Contract 
						if (LocalContractAndLineLocationRel !exists)
							invoke Create ContractAndLineLocation 
								invoked.ContractGroup						= each.ContractGroup 
								invoked.Contract        					= each.Contract 
								invoked.ContractAndLineLocation.Company		= Company 
								invoked.ContractAndLineLocation.Location	= InventoryLocation

				if (HasPricingGroupTierMembers)
					for each PricingGroupTierMemberRel 
						LocalContract = each.Contract 
						if (LocalContractAndLineLocationRel !exists)
							invoke Create ContractAndLineLocation 
								invoked.ContractGroup						= each.ContractGroup 
								invoked.Contract        					= each.Contract 
								invoked.ContractAndLineLocation.Company		= Company 
								invoked.ContractAndLineLocation.Location	= InventoryLocation

				if (HasPricingGroupPricingMembers)
					for each PricingGroupPricingMemberRel 
						LocalContract = each.Contract 
						if (LocalContractAndLineLocationRel !exists)
							invoke Create ContractAndLineLocation 
								invoked.ContractGroup						= each.ContractGroup 
								invoked.Contract        					= each.Contract 
								invoked.ContractAndLineLocation.Company		= Company 
								invoked.ContractAndLineLocation.Location	= InventoryLocation														
		   
	Actions
		Create is a Create Action
			restricted


		ApproveAll is an Instance Action
			valid when EditAccess
			completion message is "ApproveAllActionSubmitted"
			Parameters
				PrmInventoryLocation is like InventoryLocation
				PrmMakeInBound		 is Boolean
			Action Rules
				invoke ApproveAllAtLocation IIHItemLocation
					invoked.PrmInventoryLocation = InventoryLocation
					invoked.PrmMakeInBound		 = PrmMakeInBound

		MakeAllItemsInBound  is an Instance Action
			valid when EditAccess
			completion message is "MakeAllItemsInBoundActionSubmitted"
			Action Rules
				invoke MakeAllItemsInBound IIHItemLocation
					invoked.PrmInventoryLocation = InventoryLocation

		SendAll is an Instance Action
			valid when EditAccess
			completion message is "SendAllActionSubmitted"
			Parameters
				PrmInventoryLocation is like InventoryLocation
			Action Rules
				invoke SendAllAtLocation IIHItemLocation
					invoked.PrmInventoryLocation = InventoryLocation

		CreateInventoryLocation is a Create Action
			Field Rules
				LocationType
					force default to LocationType.InventoryLocation

		CreateParLocation is a Create Action
			Entrance Rules
				LocationType = LocationType.ParLocation

			Field Rules
				LocationType
					force default to LocationType.ParLocation

			Action Rules
				constraint (FromCompany entered)
					"FromCompanyIsRequired"

			Exit Rules
				include RequestingLocationCreateOrUpdate
				include CreateBinGroupForNewLocation

		CreateExchangeCartLocation is a Create Action
			Entrance Rules
				LocationType = LocationType.ExchangeCart

			Field Rules
				LocationType
					force default to LocationType.ExchangeCart

			Action Rules
				constraint (FromCompany entered)
					"FromCompanyIsRequired"
			Exit Rules
				include RequestingLocationCreateOrUpdate
				include CreateBinGroupForNewLocation

		AddLocationToReportGroups is an Instance Action 
			valid when (Status.Active)
			Parameters 
				CompanyToMatch		is an InventoryCompany
				LocationToMatch     is an InventoryLocation 

			Parameter Rules 
				CompanyToMatch 
					initial value is Company 
					force default to Company 

				LocationToMatch 
					constraint (LocationToMatch != InventoryLocation)
						"CannotMatchToTheSameLocation"
					required 

			Action Rules 

				LocalLocation   = LocationToMatch 

				for each MatchingReportGroupLocationRel
					LocalInventoryReportGroup = each.InventoryReportGroup
					LocalThisLocation         = InventoryLocation 
					if (ThisLocationOnReportGroupRel !exists)
						invoke Create InventoryReportGroupLocation 
							invoked.Company		         = Company 
							invoked.InventoryReportGroup = LocalInventoryReportGroup
							invoked.InventoryLocation    = InventoryLocation  

		
		UpdateInventoryLocationName is an Instance Action
			restricted
			Parameters
				PrmName is like Name	 
					holds pii
			Parameter Rules
				PrmName
					required
			Action Rules
				Name = PrmName

		CreateByCopy is an Instance Action
			valid when (!LocationType.InventoryLocation)

			Parameters
				CopyToLocation			is like InventoryLocation
				ToLocationType			is AlphaUpper size 1
				 	States
						ExchangeCart	value is "E"
						ParLocation		value is "P"
				FromCompany				is an InventoryCompany
				ReplenishFromLocation	is an InventoryLocation
				PrmName					is like Name	 
					holds pii

			Parameter Rules
				CopyToLocation
					required
				PrmName
					required
				ToLocationType
					required
				FromCompany
					required
				ReplenishFromLocation
					required

			Action Rules
				CopyLocation = CopyToLocation

				invoke Create InventoryLocation
					fill in fields from this instance
					invoked.Company				  = Company
					invoked.InventoryLocation     = CopyToLocation
					invoked.LocationType	  	  = ToLocationType
					invoked.Name				  = PrmName
					invoked.FromCompany			  = FromCompany
					invoked.ReplenishFromLocation = ReplenishFromLocation

				if (RequestingLocationForCopyToRel exists)
	   				invoke Update RequestingLocationForCopyToRel
	   					invoked.FromCompanyLocation.FromCompany		= FromCompany
	   					invoked.FromCompanyLocation.FromLocation	= ReplenishFromLocation
	   					invoked.InventoryTransactionType            = InventoryTransactionType.Issue
						invoked.LocalFromInventoryLocation			= true
	   			else
	   				invoke Create RequestingLocation
	   					invoked.Company								= Company
	   					invoked.RequestingLocation					= CopyToLocation
	   					invoked.FromCompanyLocation.FromCompany		= FromCompany
	   					invoked.FromCompanyLocation.FromLocation	= ReplenishFromLocation
	   					invoked.InventoryTransactionType            = InventoryTransactionType.Issue
	   					invoked.FillOrKill 							= FillOrKill.FillBackorders
	   					invoked.Active								= true
	   					invoked.Name								= PrmName
						invoked.LocalFromInventoryLocation			= true

				include CreateNewLocationCopyingFromExistingLocation
				
		FastUpdate is an Update Action
			restricted
			bypass field rules

		Update is an Update Action
			Exit Rules
				if (LocationType.ParLocation)
					if (Name changed
					or (Status changed
					and (Status.Active or Status.Inactive)))
						invoke UpdateRequestingLocationFromParLocation RequestingLocationRel
							invoked.PrmName = Name
							if (Status.Active)
								invoked.PrmActive = true
							else
								invoked.PrmActive = false

				if (Status changed
				and RecallOrgByIcRqLocation exists)	
					for each RecallOrgByIcRqLocation
						invoke Update each
							if (Status = 0)
								invoked.Active = true
							else
							if (Status > 0)	
								invoked.Active = false 		

				if (PricingGroup changed
				and PricingGroupEntered)
					invoke UpdateContractLocations PricingGroup 

		AddLocations is an Instance Action
			restricted
			default label is "Add"
			Parameters
				IIHLocationGroup
			Action Rules
				invoke Create IIHLocationGroupMember
					fill in fields from this instance
					invoked.IIHLocationGroup = IIHLocationGroup
					
		Delete is a Delete Action
			Entrance Rules
				constraint (!InventoryTransactionRelExists)
					"CannotDelete;_Inventory_TransactionsExist"

				if (ParOrExchangeCart)
					confirmation required
						"ThisWillDeleteThis_Inventory_LocationAlongWithAllIts_Item_Locations.Continue?"
					if (UseBackgroundDelete)
						invoke DeleteSetAction ItemLocation in background
							invoked.PrmInventoryCompany		= Company
							invoked.PrmInventoryLocation 	= InventoryLocation
					else
						invoke Delete ItemLocationRel
				else
					constraint (!ItemLocationRelExists)
						"CannotDelete;_Item_LocationsExist"
				
				if(Company.FinanceEnterpriseGroup.BODTrigger)
					ActionCode = ActionCode.Delete
					increment bod id.VariationID
					LocalTitle = "EG:"+Company.FinanceEnterpriseGroup+"AE:"+Company.GeneralLedgerCompany.AccountingEntity+"CO:"+Company+"LOC:"+InventoryLocation
					include TriggerInventoryLocationRules
					include TriggerBillToInventoryServiceRules
					include TriggerShipFromInventoryLocationService
					include TriggerShipToInventoryLocationService



				if (HasMobileSupplyChainConfiguration and MobileSupplyChainLocationRel exists)
					if (RequestingLocationRel exists)
						invoke Update MobileSupplyChainLocationRel
							invoked.LocationType					= MobileSupplyChainLocationRel.LocationType.RequestingLocation
							invoked.ReceivingAndDeliveryTransfer	= false
							invoked.ReceivingShipTo					= false
					else
					if (DockLogRel exists or MiscellaneousReceiptRel exists) 
						invoke Update MobileSupplyChainLocationRel
							invoked.LocationType	= MobileSupplyChainLocationRel.LocationType.ReceivingAndDeliveryLocation
							invoked.Active			= true
					else	
						invoke Delete MobileSupplyChainLocationRel

		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord

		UpdateGlobalLocationNumber is an Instance Action
			restricted
			Parameters
				PrmGlobalLocationNumber	is a GlobalLocationNumber
			Action Rules
				GlobalLocationNumber	=	PrmGlobalLocationNumber
		BuildOrgStructureFromIcloc is a Set Action
			restricted
			Parameters
				ParamRecallGroup		is a RecallGroup
				ParamInventoryCompany	is like Company
				ParamRecallOrganization	is a RecallOrganization

			Parameter Rules
				ParamRecallGroup
					required
				ParamInventoryCompany
					required

			Instance Selection
				where (Company = ParamInventoryCompany
				and    Status = 0)

			Sort Order
				Company
				InventoryLocation

		 	Action Rules
				Company Set Rules
					Entrance Rules

				Instance Rules
					LocalCompany = Company

					if (RecallOrgByIcRqLocation exists)
						invoke Update RecallOrgByIcRqLocation
							invoked.Active = true
					else 
					if (!RecallOrgByIcRqLocation exists)
						invoke Create RecallOrganization
							invoked.RecallGroup 	   = ParamRecallGroup
							invoked.ParentOrganization = ParamRecallOrganization
							invoked.InventoryCompany   = Company
							invoked.InventoryLocation  = InventoryLocation
							invoked.Description        = Name
							invoked.Active             = true

		UpdateByStockOnHandDetail is an Instance Action
			restricted
			Parameters
				PrmLastBatchLine        is like LineNumber
			Action Rules
				if (LastBatchDate   != current corporate date)
					LastBatchDate    = current corporate date

				LastBatchLine        = PrmLastBatchLine
				


		UpdateTaxCodeUsingVertex is an Instance Action

			default label is "UpdateVertexTaxCode"
			valid when (TaxEntityRel.ThirdParty.VertexOSeries)





			Parameters
		  		UpdateTaxCodeFor                    is Numeric size 1
					States
						SellerAddress    		value is 0
						PurchaseOrderAddress 	value is 1
			Parameter Rules

			Local Fields
				LocalTaxCode			  is like TaxCode
			Action Rules



	  			MultipleTaxCodes = false
				WebServiceError  = false

				initialize WebServiceErrorMessage
				initialize LocalLookupKey
				initialize LocalResponseBusclassKey
				initialize LocalSequence
				initialize LocalTaxCode
				initialize CalculateTax
				CalculateTax.RelatedObjectReference         	= reference to this instance
				CalculateTax.System								= "IC"
				CalculateTax.CallingModule						= "InventoryControl"
				CalculateTax.VertexQuantumOption				= "G"
				CalculateTax.TaxEntity							= blank
				CalculateTax.InFinanceEnterpriseGroup       	= Company.AccountingEntity.FinanceEnterpriseGroup
				CalculateTax.VendorGrp							= blank
				if (UpdateTaxCodeFor.SellerAddress)
					CalculateTax.PostalAddress					= PostalAddress
				else
					CalculateTax.PostalAddress					= PostalAddressForPurchaseOrder
				LocalTaxCode									= CalculateTax.ReturnedGeoCode
				MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
				WebServiceError									= CalculateTax.WebServiceError
				WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage

				if (LocalTaxCode entered)
					if (UpdateTaxCodeFor.SellerAddress)
						TaxCode				 	= LocalTaxCode
					else
						PurchaseOrderTaxCode	= LocalTaxCode

				if (LocalTaxCode entered
				and !MultipleTaxCodes
				and !WebServiceError
				and CalculateTax.OutputErrorNumber not entered)
					if (UpdateTaxCodeFor.SellerAddress)
						if (PostalAddress.PostalCode not entered)
							PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County
					else
						if (PostalAddressForPurchaseOrder.PostalCode not entered)
							PostalAddressForPurchaseOrder.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
							PostalAddressForPurchaseOrder.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County

					if (VertexLookupResultsRel exist)
						for each VertexLookupResultsRel
							invoke Update each
								invoked.Status = 1


		UpdateTaxCodeWithSelectedRecords is an Instance Action

			restricted
			valid when (!WebServiceError)
			Parameters
				ItemLocationType			is AlphaUpper 1
					States
						SellTaxCodeOnly 		value is "S"
						PurchasingTaxCodeOnly	value is "P"
				DeleteFilesAfterUpdate	  is Boolean
					default label is "DeleteResultsFilesAfterUpdate"
			Local Fields
				LocalTaxCode			  is like TaxCode
			Action Rules
				if (SelectedTaxAreaIdRecordsRel exist)
					if (ItemLocationType.SellTaxCodeOnly)
						TaxCode 				= first SelectedTaxAreaIdRecordsRel.TaxAreaId
					else
						PurchaseOrderTaxCode	= first SelectedTaxAreaIdRecordsRel.TaxAreaId
					LocalTaxCode 				= first SelectedTaxAreaIdRecordsRel.TaxAreaId
					for each VertexTaxAreaIdResultsRel
						invoke UpdateAndBypassRules each
							invoked.Selected = false

				if (VertexTaxAreaIdResultsRel exist)
					LocalLookupKey 				= first VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.LookupKey
					LocalResponseBusclassKey 	= first VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.ResponseBusclassKey
					LocalSequence 				= first VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.Sequence
					LocalTaxCode 				= first VertexTaxAreaIdResultsRel.VertexTaxAreaIdResults.TaxAreaId






				if (SelectedPostalAddressRecordsRel exist)

					if (ItemLocationType.SellTaxCodeOnly)
						PostalAddress.County 						= first SelectedPostalAddressRecordsRel.SubDivision
						PostalAddress.PostalCode					= first SelectedPostalAddressRecordsRel.PostalCode
					else

						PostalAddressForPurchaseOrder.County 		= first SelectedPostalAddressRecordsRel.SubDivision
						PostalAddressForPurchaseOrder.PostalCode	= first SelectedPostalAddressRecordsRel.PostalCode

					for each UpdatePostalAddressRecordsRel
						invoke UpdateAndBypassRules each
							each.Selected = false
				else
					if (ItemLocationType.SellTaxCodeOnly)
						PostalAddress.County 						= first UpdatePostalAddressRecordsRel.SubDivision
						PostalAddress.PostalCode					= first UpdatePostalAddressRecordsRel.PostalCode
					else
						PostalAddressForPurchaseOrder.County 		= first UpdatePostalAddressRecordsRel.SubDivision
						PostalAddressForPurchaseOrder.PostalCode	= first UpdatePostalAddressRecordsRel.PostalCode

				if (DeleteFilesAfterUpdate)
					include DeleteVertexResultsFiles

				if (VertexLookupResultsRel exist)			
					for each VertexLookupResultsRel
						invoke Update each
							invoked.Status = 1


		BatchUpdateTaxCodeUsingVertex is a Set Action

			valid when (TaxEntityRel.ThirdParty.VertexOSeries)			
			completion message is "<CompletionMessage>"

			Parameters
				PrmProcessGroup				is Alpha 50
					default label is "ProcessGroup"
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FromInventoryCompany"
				PrmInventoryCompany 		is a InventoryCompany
					default label is "InventoryCompany"




				PrmBeginICLocation			is like InventoryLocation
					default label is "BeginICLocation"
				PrmEndICLocation			is like InventoryLocation
					default label is "EndICLocation"
				ItemLocationType			is AlphaUpper 1
					States
						Both   					value is blank
						SellTaxCodeOnly 		value is "S"
						PurchasingTaxCodeOnly	value is "P"
				PrmReadOnly					is Boolean
					default label is "ReadOnly"
				EntityTaxCodeDefault 		is like TaxCode		
				PrmTaxEntity 		 		is like TaxEntity	
			Parameter Rules
				PrmEnterpriseGroup
					if (PrmEnterpriseGroup not entered)
						PrmEnterpriseGroup = PrmInventoryCompany.FinanceEnterpriseGroup


				PrmBeginICLocation
					if (PrmEndICLocation not entered)
						required
				PrmEndICLocation
					if (PrmBeginICLocation not entered)
						required
			Local Fields
				LocalTaxCode			is like TaxCode
				CompletionMessage		is Alpha 150
				RecordCount				is Numeric 10

			Instance Selection

				where (PrmEnterpriseGroup   = Company.FinanceEnterpriseGroup  			

				and    Company   			= PrmInventoryCompany
				and    InventoryLocation	>= PrmBeginICLocation
				and    InventoryLocation	<= PrmEndICLocation
				and	   Status.Active)													

			Sort Order
				InventoryLocation

			Accumulators

			Action Rules
				Empty Set Rules
					CompletionMessage = "<CompletionMessage>"

				Set Rules
					Entrance Rules
						initialize RecordCount

					Exit Rules

				InventoryLocation Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules
					SkipNext = false
					increment RecordCount

					if (ItemLocationType.SellTaxCodeOnly
					or 	ItemLocationType.Both
					and PostalAddress.Country entered)	



						initialize CalculateTax
						CalculateTax.RelatedObjectReference         	= reference to this instance
						CalculateTax.System								= "IC"
						CalculateTax.CallingModule						= "InventoryLocation"
						CalculateTax.VertexQuantumOption				= "G"
						CalculateTax.InFinanceEnterpriseGroup       	= PrmEnterpriseGroup	
						CalculateTax.VendorGrp							= blank
						CalculateTax.TaxEntity							= PrmTaxEntity			
						CalculateTax.EntityTaxCodeDefault				= EntityTaxCodeDefault	
						CalculateTax.PostalAddress						= PostalAddress
						LocalTaxCode									= CalculateTax.ReturnedGeoCode
						MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
						WebServiceError									= CalculateTax.WebServiceError
						WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage
						CalculateTaxOutputMessage						= CalculateTax.OutputErrorMessage
						NewSellerTaxCode 			= LocalTaxCode
						OldSellerTaxCode			= TaxCode
						if (LocalTaxCode entered
						and !WebServiceError
						and !PrmReadOnly)
							TaxCode = LocalTaxCode

						if (!MultipleTaxCodes
						and !WebServiceError
						and CalculateTax.OutputErrorNumber not entered
						and LocalTaxCode entered)
							if (!PrmReadOnly)
								if (PostalAddress.PostalCode not entered)
									PostalAddress.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
								if (PostalAddress.County not entered)
									PostalAddress.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County




						LocalLookupKey 	= CalculateTax.ResultsLookupKey
						LocalSequence	= CalculateTax.ResultsLookupKeySequence
						if (VertexLookupResultsRel exist)
							invoke Delete VertexLookupResultsRel

						invoke Create VertexLookupResults
							invoked.VertexConfig			   			= PrmEnterpriseGroup	
								invoked.VertexLookupResults.LookupKey 	= LocalLookupKey
								invoked.VertexLookupResults.Sequence	= LocalSequence
								invoked.RelatedObjectReference			= reference to this instance
								invoked.LookupInventoryCompany			= Company
								invoked.LookupInventoryLocation			= InventoryLocation
								invoked.LookupProcessGroup				= PrmProcessGroup
								invoked.ReturnedHighesTaxAreaId			= LocalTaxCode
								invoked.NumberOfTaxAreaIdsReturned		= CalculateTax.NumberOfTaxCodes
								invoked.LookupPostalAddress 			= PostalAddress	
								invoked.LookupDescription				= SellerTaxCodeMessage	
								invoked.LookupTaxEntity					= PrmTaxEntity			
								invoked.ErrorNumber						= CalculateTax.OutputErrorNumber
								invoked.ErrorMessage					= DerivedSellerLookupMessage	
								invoked.WebServiceError 				= CalculateTax.WebServiceError
								invoked.WebServiceErrorMessage 			= CalculateTax.WebServiceErrorMessage
								if (MultipleTaxCodes
								or  WebServiceError
								or  CalculateTax.OutputErrorNumber entered)
									invoked.Status = 0
								else
								if (LocalTaxCode not = OldSellerTaxCode)
									invoked.Status = 1
								else
									invoked.Status = 2









					if (ItemLocationType.PurchasingTaxCodeOnly
					or 	ItemLocationType.Both
					and PostalAddressForPurchaseOrder.Country entered)	
						initialize CalculateTax
						initialize LocalTaxCode	
						CalculateTax.RelatedObjectReference         	= reference to this instance
						CalculateTax.System								= "IC"
						CalculateTax.CallingModule						= "InventoryLocation"
						CalculateTax.VertexQuantumOption				= "G"
						CalculateTax.TaxEntity							= PrmTaxEntity			
						CalculateTax.EntityTaxCodeDefault				= EntityTaxCodeDefault	
						CalculateTax.InFinanceEnterpriseGroup       	= PrmEnterpriseGroup	
						CalculateTax.VendorGrp							= blank
						CalculateTax.PostalAddress						= PostalAddressForPurchaseOrder
						LocalTaxCode									= CalculateTax.ReturnedGeoCode
						MultipleTaxCodes								= CalculateTax.MultipleTaxAreaIds
						WebServiceError									= CalculateTax.WebServiceError
						WebServiceErrorMessage							= CalculateTax.WebServiceErrorMessage

						OldPurchaseTaxCode			= PurchaseOrderTaxCode
						NewPurchaseTaxCode			= LocalTaxCode		
						if (LocalTaxCode entered
						and !WebServiceError
						and !PrmReadOnly)
							PurchaseOrderTaxCode = LocalTaxCode

						if (!MultipleTaxCodes
						and !WebServiceError
						and CalculateTax.OutputErrorNumber not entered
						and LocalTaxCode entered)
							if (!PrmReadOnly)
								if (PostalAddressForPurchaseOrder.PostalCode not entered)
									PostalAddressForPurchaseOrder.PostalCode 	= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
								if (PostalAddressForPurchaseOrder.County not entered)
									PostalAddressForPurchaseOrder.County 		= CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County

							LocalLookupKey 	= CalculateTax.ResultsLookupKey
							if (ItemLocationType.Both)
								LocalSequence	= CalculateTax.ResultsLookupKeySequence + 1	
							else															
								LocalSequence	= CalculateTax.ResultsLookupKeySequence		

							if (ItemLocationType.PurchasingTaxCodeOnly	
							and VertexLookupResultsRel exist)			
								invoke Delete VertexLookupResultsRel	

							invoke Create VertexLookupResults
								invoked.VertexConfig			   			= Company.FinanceEnterpriseGroup
									invoked.VertexLookupResults.LookupKey	= LocalLookupKey
									invoked.VertexLookupResults.Sequence	= LocalSequence
									invoked.RelatedObjectReference			= reference to this instance
									invoked.LookupInventoryCompany			= Company
									invoked.LookupInventoryLocation			= InventoryLocation
									invoked.LookupProcessGroup				= PrmProcessGroup
									invoked.ReturnedHighesTaxAreaId			= LocalTaxCode
									invoked.NumberOfTaxAreaIdsReturned		= CalculateTax.NumberOfTaxCodes
									invoked.LookupPostalAddress 			= PostalAddressForPurchaseOrder
									invoked.LookupDescription				= PurchaseTaxCodeMessage	
									invoked.LookupTaxEntity					= PrmTaxEntity			
									invoked.ErrorNumber						= CalculateTax.OutputErrorNumber
									invoked.ErrorMessage					= DerivedPurchaseLookupMessage	
									invoked.WebServiceError 				= CalculateTax.WebServiceError
									invoked.WebServiceErrorMessage 			= CalculateTax.WebServiceErrorMessage
									if (MultipleTaxCodes
									or  WebServiceError
									or  CalculateTax.OutputErrorNumber entered)
										invoked.Status = 0
									else
									if (LocalTaxCode not = OldPurchaseTaxCode)
										invoked.Status = 1
									else
										invoked.Status = 2

		AttachToPricingGroup is an Instance Action
			Parameters
				ParmContractGroup is a ContractGroup
				ParmPricingGroup  is a PricingGroup

			Parameter Rules
				ParmContractGroup
					required
				ParmPricingGroup
					required

			Action Rules
				PricingGroup  = ParmPricingGroup

				
				constraint (PricingGroup.LocationPricingGroup)
					"PricingGroupIsForCompanies;CannotAttachALocation"

			Exit Rules 
				invoke UpdateContractLocations PricingGroup 

		ValidateProjectedProductionDate is an Instance Action
	  	 	restricted
	  	 	Parameters
	  	 		PrmProjectedProductionDate		is Date

			Action Rules
				LocalProjectedProductionDate	= PrmProjectedProductionDate
				constraint (CalendarWorkingDaysRel exists)
					"ProjectedProductionDateIsNotAValidWorkDay"

		AuditPurge is a Set Action
			restricted
			Parameters
				PrmCompany					is an InventoryCompany
				PrmAllLocations				is Boolean
				PrmInventoryLocation		is an InventoryLocation
			Instance Selection
				include deleted records
				where (Company 	 			= PrmCompany
				and   (PrmAllLocations
				or    (InventoryLocation	= PrmInventoryLocation)))
			Action Rules
				Instance Rules
					if (ItemLocationForAuditPurgeRel exists)
						invoke ItemLocationAuditPurge ItemLocation in foreground
							invoked.PrmCompany 							= Company
							invoked.PrmInventoryLocation				= InventoryLocation

					if (StockOnHandDetailForAuditPurgeRel exists)
						invoke StockOnHandDetailAuditPurge StockOnHandDetail in foreground
							invoked.PrmCompany 							= Company
							invoked.PrmInventoryLocation				= InventoryLocation



		UpdateTaxCodeAndAddress is an Instance Action

			restricted
			Parameters
				PrmTaxCode			is like TaxCode
				PrmCountry			is a Country
				PrmState			is a StateProvince
				PrmZip				is a PostalCode
				PrmCounty			is a County
				PrmItemLocationType	is AlphaUpper 1
					States
						SellTaxCodeOnly 		value is "S"
						PurchasingTaxCodeOnly	value is "P"
			Parameter Rules
			Action Rules

				if (PrmItemLocationType.SellTaxCodeOnly)

					TaxCode 									= PrmTaxCode
					PostalAddress.County 						= PrmCounty
					PostalAddress.PostalCode					= PrmZip
				else
					display "Here2,POAddress"
					PurchaseOrderTaxCode						= PrmTaxCode
					PostalAddressForPurchaseOrder.County 		= PrmCounty
					PostalAddressForPurchaseOrder.PostalCode	= PrmZip


		DeleteVertexResultsFiles is an Instance Action	

			Parameters
			Local Fields
			Action Rules
				include DeleteVertexResultsFiles


















































		BODDataInitialLoadInventoryLocationCriteria is a Set Action
			restricted
			Parameters
				PrmFromCompany				is a InventoryCompany
				PrmToCompany				is a InventoryCompany
				PrmFromInventoryLocation 	is a InventoryLocation
					context of PrmFromCompany
				PrmToInventoryLocation		is a InventoryLocation
					context of PrmFromCompany
			Parameter Rules

			Instance Selection
				where  (((PrmFromCompany entered
				and		  PrmFromCompany <= Company)
				or		  PrmFromCompany not entered)
				and    ((PrmToCompany entered
				and		 PrmToCompany >= Company)
				or		 PrmToCompany not entered)
				and    ((PrmFromInventoryLocation entered
				and		 PrmFromInventoryLocation <= InventoryLocation)
				or		 PrmFromInventoryLocation not entered)
				and    ((PrmToInventoryLocation entered
				and		 PrmToInventoryLocation >= InventoryLocation)
				or		 PrmToInventoryLocation not entered)
				and		(Status.Active))
			Action Rules
				Instance Rules
					if (Company.FinanceEnterpriseGroup.BODTrigger)
						LocalTitle = "EG:"+Company.FinanceEnterpriseGroup+"AE:"+Company.GeneralLedgerCompany.AccountingEntity+"CO:"+Company+"LOC:"+InventoryLocation
						ActionCode	= ActionCode.Create
						increment bod id.VariationID
						include TriggerInventoryLocationRules
						include TriggerShipFromInventoryLocationService
						include TriggerShipToInventoryLocationService
						include TriggerBillToInventoryServiceRules




		FreezeInventoryLocation is an Instance Action
			restricted
			Parameters
				PrmCompany				is an InventoryCompany
				PrmSelectId				is a PhysicalInventorySelect

			Parameter Rules
				PrmCompany
					required

				PrmSelectId
					required

			Action Rules
				invoke FreezeItemsForLocation ItemLocation in background
					invoked.PrmCompany				= PrmCompany
					invoked.PrmLocation				= InventoryLocation
					invoked.PrmSelectId				= PrmSelectId

		CreateContractLocationsSet     is a Set Action 
			restricted 
			Parameters
				ParmContractGroup   		is a ProcurementGroup
				ParmContract            	is a Contract
				LineLevel               	is Boolean 
				ParmCompany                 is like InventoryCompany 
				ParmParticipantGroup        is like ParticipantGroup 

			Instance Selection 
				where (((ParmCompany entered 
				and      ParmCompany = Company)
				or       ParmCompany !entered) 
				and      Status != 1
				and     (ContractGroupRel.DoNotUseParLocations = false
				or      (ContractGroupRel.DoNotUseParLocations
				and      IsPerpetualLocation)))
			
			Sort Order 
				Company 
				InventoryLocation

			Set Is 
				Company 
				InventoryLocation 
				ParmContractGroup 
				ParmContract 
			
			Action Rules 

				Instance Rules 
					if (ParmParticipantGroup entered)
						LocalParticipantGroup   = ParmParticipantGroup
						LocalCompany            = Company 
						if (LocalParticipantGroupLineRel exists)

							LocalContractGroup 		= ParmContractGroup 
							LocalContract      		= ParmContract 
							if (ContractLocationRel !exists)
								invoke Create ContractAndLineLocation 
									invoked.ContractGroup 						= ParmContractGroup 
									invoked.Contract                			= ParmContract 
									invoked.ContractAndLineLocation.Company 	= Company
									invoked.ContractAndLineLocation.Location	= InventoryLocation 
									invoked.ClinicalSystemUse                   = true	
									invoked.LineLevel                           = LineLevel 
							else 
							if (ContractLocationRel exists
							and ContractLocationRel.ClinicalSystemUse = false)
								invoke Update ContractLocationRel
									invoked.ClinicalSystemUse = true
									invoked.LineLevel         = LineLevel 				

					else 
						LocalContractGroup 		= ParmContractGroup 
						LocalContract      		= ParmContract 
						if (ContractLocationRel !exists)
							invoke Create ContractAndLineLocation 
								invoked.ContractGroup 						= ParmContractGroup 
								invoked.Contract                			= ParmContract 
								invoked.ContractAndLineLocation.Company 	= Company
								invoked.ContractAndLineLocation.Location	= InventoryLocation 
								invoked.ClinicalSystemUse                   = true	
								invoked.LineLevel                           = LineLevel 
						else 
						if (ContractLocationRel exists
						and ContractLocationRel.ClinicalSystemUse = false)
							invoke Update ContractLocationRel
								invoked.ClinicalSystemUse = true
								invoked.LineLevel         = LineLevel 						


		FreezeAllLocationsForCompany is a Set Action
			restricted
			Parameters
				PrmCompany				is an InventoryCompany
				PrmSelectId				is a PhysicalInventorySelect

			Parameter Rules
				PrmCompany
					required

				PrmSelectId
					required

			Instance Selection
				where (Company				= PrmCompany)

			Sort Order
				Company
				InventoryLocation

			Action Rules
				Instance Rules
					invoke FreezeItemsForLocation ItemLocation
						invoked.PrmCompany				= PrmCompany
						invoked.PrmLocation				= InventoryLocation
						invoked.PrmSelectId				= PrmSelectId

		GenerateOrderEntryDailyShipmentJournalInIDM is an Instance Action
			restricted
			Parameters
				PrmProcessLevel				is a BillingProcessLevel
				PrmShipmentType				is Numeric 1
					States
						AllShipments	value is 1
						CODShipments	value is 2
				PrmShipDateCutoff			is Date
				PrmReleaseOption			is AlphaUpper 1
					States
						ReleaseBatchToInvoicePrint		value is "R"
						ReleaseAndBypassInvoicePrint	value is "B"
						DoNotRelease					value is "N"
				PrmBatchNumber				is Numeric 6
				PrmIDMPrinter				is an IDMPrinter
				PrmInvoiceDate				is Date

			Parameter Rules
				PrmShipmentType
					initial value is PrmShipmentType.AllShipments
					default to PrmShipmentType.AllShipments

				PrmReleaseOption
					initial value is PrmReleaseOption.ReleaseBatchToInvoicePrint
					default to PrmReleaseOption.ReleaseBatchToInvoicePrint

				PrmShipDateCutoff
					default to current corporate date

			Local Fields
	 			IDMAttributes

			Action Rules
				LocalProcessLevel		= PrmProcessLevel
				LocalShipmentType		= PrmShipmentType
				TransientShipDateCutoff	= PrmShipDateCutoff
				LocalReleaseOption		= PrmReleaseOption
				LocalBatchNumber		= PrmBatchNumber
				TransientInvoiceDate	= PrmInvoiceDate
				TransientIDMPrinter		= PrmIDMPrinter

				if (BillingProcessLevelRel exists)
					IDMGenerateDocument.IDMXMLDefinition.Busclass											= reference to this instance
					IDMGenerateDocument.IDMXMLDefinition.ListName											= "OrderEntryDailyShipmentJournalIDMList"
					IDMGenerateDocument.IDMXMLDefinition.DocumentName										= "DailyShipmentJournal"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].RelationName			= "BillingProcessLevelRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ListName 			= "BillingProcessLevelForIDMDailyShipmentJournal"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ListTag				= "BillingProcessLevels"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[1].ItemTag				= "BillingProcessLevel"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].RelationName			= "BillingInvoiceForDailyShipmentJournalIDMRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ListName 			= "BillingInvoiceForOrderEntryDailyShipmentJournal"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].LevelSection2		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ListTag				= "BillingInvoices"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[2].ItemTag				= "BillingInvoice"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].RelationName			= "BillingInvoiceLineRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].ListName 			= "BillingInvoiceLineForDailyShipmentJournal"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].LevelSection2		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].LevelSection3		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].ListTag				= "BillingInvoiceLines"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[3].ItemTag				= "BillingInvoiceLine"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].RelationName			= "BillingInvoiceAddOnChargeRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].ListName 			= "BillingInvoiceAOCForDailyShipmentJournalIDMList"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].LevelSection2		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].LevelSection3		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].LevelSection4		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].ListTag				= "BillingInvoiceLineAddOnCharges"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[4].ItemTag				= "BillingInvoiceLineAddOnCharge"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].RelationName			= "BillingInvoiceCommentsRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].ListName 			= "BillingInvoiceCommentForDailyShipmentJournalIDM"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].LevelSection2		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].LevelSection3		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].LevelSection4		= 2
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].ListTag				= "BillingInvoiceLineComments"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[5].ItemTag				= "BillingInvoiceLineComment"

					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].RelationName			= "BillingInvoiceAddOnChargesRel"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].ListName 			= "BillingInvoiceAOCForDailyShipmentJournalIDMList"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].LevelSection1		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].LevelSection2		= 1
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].LevelSection3		= 2
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].ListTag				= "BillingInvoiceAddOnCharges"
					IDMGenerateDocument.IDMXMLDefinition.IDMXMLChildren.IDMXMLChild[6].ItemTag				= "BillingInvoiceAddOnCharge"

					initialize IDMAttributes
	 				IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeName  	= "Company"
					IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeValue  	= Company
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeName  	= "InventoryLocation"
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeValue  	= InventoryLocation
					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeName  	= "CompanyName"
					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeValue  	= Company.Name

					IDMGenerateDocument.IDMAttributes		= IDMAttributes
					IDMGenerateDocument.TemplateUniqueId	= BillingCompanyRel.DailyShipmentJournalIDMTemplate.IDMUniqueId
					IDMGenerateDocument.DocumentType		= "FSM_DailyShipmentJournal"
					IDMGenerateDocument.FileName			= DerivedOEDailyShipmentJournalFileName + BillingCompanyRel.DailyShipmentJournalIDMTemplate.DerivedOutputFormat
					IDMGenerateDocument.IDMUserSettingsDocumentType = 8
					include IDM.CheckIDMGenerationUserSettings


					if (PrmIDMPrinter entered)
						IDMGenerateDocument.IDMPrinter	 	= PrmIDMPrinter 

					IDMGenerateDocument.IDMAccessControlList = "CSFDefined"

					invoke CreateFromGenerateDocument IDMJob
						invoked.Actor				= actor
						invoked.Description			= "Order Entry Daily Shipment Journal"
						invoked.IDMGenerateDocument = IDMGenerateDocument



		ProcessWarehousePackingListInIDM is an Instance Action
			restricted
			run in background
			Parameters
				PrmShipmentStatus 				is Alpha 1 
				PrmCarrier						is like Vendor
				PrmCODOnly						is AlphaUpper 1
				PrmIncludeBackorders			is AlphaUpper 1
				PrmShipmentFilter1				is like WarehouseShipment
				PrmShipmentFilter2				is like WarehouseShipment
				PrmShipmentFilter3				is like WarehouseShipment
				PrmShipmentFilter4				is like WarehouseShipment
				PrmShipmentFilter5				is like WarehouseShipment
				PrmShipmentFilter6				is like WarehouseShipment
				PrmShipmentFilter7				is like WarehouseShipment
				PrmShipmentFilter8				is like WarehouseShipment
				PrmShipmentFilter9				is like WarehouseShipment
				PrmShipmentFilter10				is like WarehouseShipment
				PrmShipmentFilter11				is like WarehouseShipment
				PrmShipmentFilter12				is like WarehouseShipment
				PrmIDMPrinter					is an IDMPrinter
				PrmGenerateUprintedShipments 	is Boolean

			Action Rules
				invoke GenerateWarehousePackingListForShipmentsInIDM WarehouseShipment in background
					invoked.PrmCompany						= Company
					invoked.PrmInventoryLocation			= InventoryLocation
					invoked.PrmShipmentStatus 				= PrmShipmentStatus
					invoked.PrmCarrier						= PrmCarrier
					invoked.PrmCODOnly						= PrmCODOnly
					invoked.PrmIncludeBackorders			= PrmIncludeBackorders
					invoked.PrmShipmentFilter1				= PrmShipmentFilter1
					invoked.PrmShipmentFilter2				= PrmShipmentFilter2
					invoked.PrmShipmentFilter3				= PrmShipmentFilter3
					invoked.PrmShipmentFilter4				= PrmShipmentFilter4
					invoked.PrmShipmentFilter5				= PrmShipmentFilter5
					invoked.PrmShipmentFilter6				= PrmShipmentFilter6
					invoked.PrmShipmentFilter7				= PrmShipmentFilter7
					invoked.PrmShipmentFilter8				= PrmShipmentFilter8
					invoked.PrmShipmentFilter9				= PrmShipmentFilter9
					invoked.PrmShipmentFilter10				= PrmShipmentFilter10
					invoked.PrmShipmentFilter11				= PrmShipmentFilter11
					invoked.PrmShipmentFilter12				= PrmShipmentFilter12
					invoked.PrmIDMPrinter					= PrmIDMPrinter
					invoked.PrmGenerateUprintedShipments 	= PrmGenerateUprintedShipments
		
		TriggerInventoryLocationNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "Location"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryLocation"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany					= Company
					invoked.PrmMainUserTemplate			= "IONSyncLocation_InventoryLocation_ST"
				LocalBODTrigger = true
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if (Company.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "Location"					
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.FinanceEnterpriseGroup	= DerivedFEG
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.BODLocation				= InventoryLocation
							invoked.Direction				= 1
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Reference1				= Company
							invoked.Reference2				= "InventoryLocation"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.FinanceEnterpriseGroup	= DerivedFEG
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.BODLocation				= InventoryLocation
							invoked.Direction				= 1
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Reference1				= Company
							invoked.Reference2				= "InventoryLocation"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					invoke SendInventoryLocationNativeLPLBOD
						resume on error
		                   	Error            					= true
		                    ErrorMessage     					= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= LocationBODXML
							invoked.BODID								= DerivedBODID
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= LocationBODXML
							invoked.BODID									= DerivedBODID
		
		SendInventoryLocationNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Action Rules
				send ion bod
					bod is LocationBODXML
					bod type is "Sync.Location"
					accounting entity is DerivedAccountingEntity
					document id is DerivedDocumentID
					variation id is DerivedBODVariationID
		
		TriggerSyncBillToPartyMasterNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if (DerivedCleanDocumentID = "Y")
					LocalMainUserTemplate = "IONSyncBillToPartyMaster_InventoryLocation_CleanDoc_ST"
				else
					LocalMainUserTemplate = "IONSyncBillToPartyMaster_InventoryLocation_ST"
				invoke NativeLPLBODTriggerChecks FSMBODBillToPartyConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "BillToPartyMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "InventoryLocation"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany					= Company
					invoked.PrmMainUserTemplate			= LocalMainUserTemplate
				LocalNativeLPLBODTrigger = FSMBODBillToPartyConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger    		 = true
				if(Company.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)	
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "BillToPartyMaster"
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup	
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= "InventoryLocation"
							invoked.BODLocation				= InventoryLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= "InventoryLocation"
							invoked.BODLocation				= InventoryLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendSyncBillToPartyMasterNativeLPLBOD
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBillToPartyMasterBODID
							invoked.BODXML								= SyncBillToPartyMasterXMLBOD
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status								= 3
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBillToPartyMasterBODID
							invoked.BODXML								= SyncBillToPartyMasterXMLBOD
					
		SendSyncBillToPartyMasterNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is SyncBillToPartyMasterXMLBOD
					bod type is "Sync.BillToPartyMaster"
					document id is  DerivedDocumentID
					variation id is DerivedBODVariationID
					accounting entity is DerivedAccountingEntity





	Action Exit Rules
		if (Company.FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields" and action != "TriggerInventoryCount")
					LocalTitle = "EG:"+Company.FinanceEnterpriseGroup+"AE:"+Company.GeneralLedgerCompany.AccountingEntity+"CO:"+Company+"LOC:"+InventoryLocation
					increment bod id.VariationID
					ActionCode = ActionCode.Update
					if (action type.Create)
						ActionCode = ActionCode.Create
					include TriggerInventoryLocationRules
					include TriggerShipFromInventoryLocationService
					include TriggerShipToInventoryLocationService
					include TriggerBillToInventoryServiceRules











FileCreationLogic.InventoryLocation is a BusinessClass

	Persistent Fields
	
	Local Fields
					
	Relations
		
	Derived Fields
		InventoryLocationHash is a NativeField
			type is Numeric 8
			restricted	
	Actions
	
		GeneratePreviewRecordsForRunGroup is a Set Action
			restricted
			synchronized on untranslatable:"InventoryLocation_GeneratePreviewRecordsForRunGroup_<FinanceEnterpriseGroupPrm>_<PrmRunGroup>"

			Parameters
				FinanceEnterpriseGroupPrm		is a FinanceEnterpriseGroup
				FileCreationSetupPrm	is a FileCreationSetup
				BeginTimeStamp			is TimeStamp
				EndTimeStamp			is TimeStamp
				AllRecords				is Boolean
				PrmNumberOfRunGroups	is Numeric 3
				PrmRunGroup				is Numeric 3
				
			Local Fields
				LocalInventoryLocationGroupSelection		is a InventoryLocation group in subject FileCreationInventoryLocation

			Instance Selection
				where (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    (PrmNumberOfRunGroups <= 1
				or      (InventoryLocationHash % PrmNumberOfRunGroups) = PrmRunGroup)
				and	   (AllRecords
				or	    (update stamp > BeginTimeStamp
				and	     update stamp <= EndTimeStamp)))
			
			Action Rules
				Instance Rules
					LocalInventoryLocationGroupSelection = FileCreationSetupPrm.EligibilityGroup
					if (LocalInventoryLocationGroupSelection not entered
					or	InventoryLocation within LocalInventoryLocationGroupSelection)
						invoke Create FileCreationRecord
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							invoked.FileCreationSetup	= FileCreationSetupPrm
							invoked.Key1				= Company
							invoked.Key2				= InventoryLocation
							invoked.SystemTimeStamp		= EndTimeStamp
							invoked.EffectiveDate		= system current corporate date
							invoked.Status				= 1
