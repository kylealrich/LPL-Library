WireTransferBatchDetail is a BusinessClass
	owned by cb
	prefix is WTBD
	
	Ontology
		symbolic key is WireTransferBatchDetail
	
	Persistent Fields
		FromCompany
		FromCashCode						is a CashCode
		FromBankTransactionCode				is a BankTransactionCode
		
		Reference							is a Description
		TransactionDate						is an ExchangeDate
		TransactionAmount					is a CurrencyAmount
		FeeAmount							is a CurrencyAmount
		Currency
		ReportCurrencyAmount				is a FinanceCurrencyAmount
		FeeBankTransactionCode				is a BankTransactionCode
		ConfirmationAmount					is an InternationalAmount
		
		ToCompany
		ToCashCode							is a CashCode
		ToBankTransactionCode				is a BankTransactionCode
		
		BeneficiaryName						is like Name	 
			holds pii
		BeneficiaryBankIdentifier			is a CrossBorderIdentifier
			default label is "BankIdentifier"
		BeneficiaryRoutingNumber			is Alpha 35
			default label is "RoutingNumber"
		BeneficiarySwiftID					is a SwiftID
			default label is "SWIFT/BIC"
		BeneficiaryBankName					is a BankName
			default label is "BankName"
        BeneficiaryBankAccount				is like CashManagementAccount
			default label is "BankAccount"
		BeneficiaryIBAN						is an InternationalBankAccountNumber 
			holds pii
			default label is "IBAN"
		BeneficiaryBankPostalAddress		is a PostalAddressV2	
			holds pii
        BeneficiaryContact					is a FullContactInfo
        
        SpecifyIntermediaryBank				is Boolean
        IntermediaryBankIdentifier			is a CrossBorderIdentifier
			default label is "BankIdentifier"
		IntermediaryRoutingNumber			is Alpha 35
			default label is "RoutingNumber"
		IntermediarySwiftID					is a SwiftID
        	default label is "SWIFT/BIC"
        IntermediaryBankName				is a BankName
        	default label is "BankName"
        IntermediaryBankAccount				is like CashManagementAccount
        	default label is "BankAccount"
        IntermediaryIBAN					is an InternationalBankAccountNumber 
        	holds pii
			default label is "IBAN"
        IntermediaryBankPostalAddress		is a PostalAddressV2	
        	holds pii
		
		TransactionIdentifierSequenceNumber 
		CashLedgerTransactionIdentifier
		WireTransferOutput
			delete ignored
		WireTransferOutputDetail
			delete ignored
		Processed							is Boolean
		ProcessedTimestamp					is TimeStamp
		Rejected							is Boolean
		RejectedTimestamp					is TimeStamp
		BudgetEditProcessing 				is Numeric size 1	
			States
                NotInProcessing value is 0
                InProcess  		value is 1
                Failure    		value is 2
                Success    		value is 3
		FromAccountingUnit					is a GeneralLedgerAccountingUnit
		FromFund							is a FinanceDimension1
		ToAccountingUnit					is a GeneralLedgerAccountingUnit
		ToFund								is a FinanceDimension1
		PostingDate							is Date 	
		
	Context Fields
		FinancialInstitution
		FinancialInstitutionBranch
	
	Local Fields
		NewCashLedgerTransaction			is a CashLedgerTransaction view
		LocalCashCode 						is a CashCode
		LocalCompany 						is like GeneralLedgerCompany
		LocalBankTransactionCode 			is a BankTransactionCode
		LocalGLFinanceCodeBlock				is a TransactionCodeBlock
		LocalTransactionAmount 				is an InternationalAmount
		LocalReference 						is a Description
		ConfirmationDifference				is an InternationalAmount
		LocalTransferType					is Numeric 1
			States
				From		value is 1
				To			value is 2
				Fee			value is 3
		LocalAccountingEntity				is like AccountingEntity		
		LocalActionCode						is an ActionCode	
		LocalFund							is like FinanceDimension1
		LocalFinanceDimension1				is a FinanceDimension1
		LocalToAccountingEntity				is like AccountingEntity
		LocalAccountingUnit					is like AccountingUnit
		LocalCashManagementGroup			is like CashManagementGroup
		LocalCashLedgerJobResult			is a CashLedgerJobResult
		
	Field Rules
		FromCompany
			required
				"FromCompanyIsRequired"
			
		FromCashCode
			required
				"FromCashCodeIsRequired"
			constraint (FromCashCode.FinancialInstitution = WireTransferBatch.FinancialInstitution
			and			FromCashCode.FinancialInstitutionBranch = WireTransferBatch.FinancialInstitutionBranch)
				"FromCashCodeMustExistUnderTheFinancialInstitution<WireTransferBatch.FinancialInstitution>-<WireTransferBatch.FinancialInstitutionBranch>"
				
			constraint (FromCompanyCashCodeRel exists)
				"FromCompanyCashCodeDoesNotExist"
			if (action type.Create
			or FromCashCode changed)
				constraint (FromCompanyCashCodeRel.Active)
					"CompanyCashCodeIsNotActive"
			
			constraint (FromCashCode.BankAccountNumber.Active)	
				"AccountInactiveForFromCashCode"
				
		FromBankTransactionCode
			initial value is FromCashCode.BankFundTransferRel.FromBankTransactionCode
			default to FromCashCode.BankFundTransferRel.FromBankTransactionCode
			required
				"FromBankTransactionCodeIsRequired"
			LocalCashCode = FromCashCode
			LocalBankTransactionCode = FromBankTransactionCode
			if (CashCodeTransactionCodeRel exists)
				constraint (CashCodeTransactionCodeByCodeRel exists
				and 		CashCodeTransactionCodeByCodeRel.Active)
					"FromBankTransactionCode<LocalBankTransactionCode>NotAuthorizedForFromCashCode<LocalCashCode>"
				
			constraint (FromBankTransactionCode.TransactionType.DebitTransaction)
				"FromBankTransactionCode<FromBankTransactionCode>MustBeBankDebitTransactionType"
			
			constraint (FromBankTransactionCode.TransactionNumberValue.AlphaAllowed)
				"FromBankTransactionCode<FromBankTransactionCode>MustAllowAlphaTransactionNumbering"
									
		Reference
			initial value is WireTransferBatch.Description
			default to WireTransferBatch.Description
				
		TransactionDate
			initial value is WireTransferBatch.TransactionDate
			default to WireTransferBatch.TransactionDate
				
		TransactionAmount
			required
			constraint (TransactionAmount > 0)
				"TransactionAmountMustBeGreaterThanZero"
				
		Currency
			initial value is FromCashCode.Currency
			default to FromCashCode.Currency
		
		FeeAmount
			if (FeeAmount changed)
				if (FeeWireTransferBatchDetailDistributionRel exists)
					confirmation required
						"FeeDistributionsWillBeDeleted;WouldYouLikeToContinue?"
					invoke Delete FeeWireTransferBatchDetailDistributionRel
							
		FeeBankTransactionCode
			initial value is FromCashCode.BankFundTransferRel.ExpenseBankTransactionCode
			default to FromCashCode.BankFundTransferRel.ExpenseBankTransactionCode
			if (FeeAmount entered)
				required
					"FeeBankTransactionCodeIsRequired"
				LocalCashCode = FromCashCode
				LocalBankTransactionCode = FeeBankTransactionCode
				if (CashCodeTransactionCodeRel exists)
					constraint (CashCodeTransactionCodeByCodeRel exists
					and 		CashCodeTransactionCodeByCodeRel.Active)
						"FeeBankTransactionCode<LocalBankTransactionCode>NotAuthorizedForFromCashCode<LocalCashCode>"
				
				constraint (FeeBankTransactionCode.TransactionType.DebitTransaction)
					"FeeBankTransactionCode<FeeBankTransactionCode>MustBeBankDebitTransactionType"
					
				constraint (FeeBankTransactionCode.TransactionNumberValue.AlphaAllowed)
					"FeeBankTransactionCode<FeeBankTransactionCode>MustAllowAlphaTransactionNumbering"
			else
				initialize
				
		ToCompany
			if (InternalTransfer)
				required
					"ToCompanyIsRequired"
				LocalCompany = ToCompany.GeneralLedgerCompany		
				LocalCashCode = ToCashCode							
				constraint (LocalCompanyCashCodeRel.TransferClearingAccount entered)		
					"MustDefineATransferClearingAccountInToCompanyCashCode"
			else
				initialize
		
		ToCashCode
			if (InternalTransfer)
				required
					"ToCashCodeIsRequired"
				constraint (ToCashCode != FromCashCode)
					"ToCashCodeMustBeDifferentThan_\FromCashCode"
					
				constraint (ToCompanyCashCodeRel exists)
					"ToCompanyCashCodeDoesNotExist"
				if (action type.Create
				or ToCashCode changed)
					constraint (ToCompanyCashCodeRel.Active)
						"CompanyCashCodeIsNotActive"
					
				constraint (ToCashCode.BankAccountNumber.Active)	
					"AccountInactiveForToCashCode"	
			else
				initialize
						
		ToBankTransactionCode
			initial value is ToCashCode.BankFundTransferRel.ToBankTransactionCode
			if (InternalTransfer)
				default to ToCashCode.BankFundTransferRel.ToBankTransactionCode
				required
					"ToBankTransactionCodeIsRequired"
				LocalCashCode = ToCashCode
				LocalBankTransactionCode = ToBankTransactionCode
				if (CashCodeTransactionCodeRel exists)
					constraint (CashCodeTransactionCodeByCodeRel exists
					and 		CashCodeTransactionCodeByCodeRel.Active)
						"ToBankTransactionCode<LocalBankTransactionCode>NotAuthorizedForToCashCode<LocalCashCode>"
			
				constraint (ToBankTransactionCode.TransactionType.CreditTransaction)
					"ToBankTransactionCode<ToBankTransactionCode>MustBeBankCreditTransactionType"
					
				constraint (ToBankTransactionCode.TransactionNumberValue.AlphaAllowed)
					"ToBankTransactionCode<ToBankTransactionCode>MustAllowAlphaTransactionNumbering"
			else
				initialize
			
		BeneficiaryName
			if (ExternalTransfer)
				required
					"BeneficiaryNameIsRequired"
			else
				initialize
		
		BeneficiaryBankIdentifier
			initial value is "R" 
			if (ExternalTransfer)
				required
					"BeneficiaryBankIdentifierIsRequired"
			else
				initialize
					
		BeneficiaryRoutingNumber
			if (ExternalTransfer)
				if (BeneficiaryBankIdentifier.RoutingNumber)
					required
						"BeneficiaryRoutingNumberIsRequired"
				else
					initialize
			else
				initialize
		
		BeneficiarySwiftID
			if (ExternalTransfer)
				if (BeneficiaryBankIdentifier.Swift)
					required
						"BeneficiarySWIFT/BICIsRequired"
				else
					initialize
			else
				initialize
				
		BeneficiaryBankName
			if (ExternalTransfer)
				required
					"BeneficiaryBankNameIsRequired"
			else
				initialize
		
		BeneficiaryBankAccount
			if (ExternalTransfer)
				if (!BeneficiaryIBAN entered)
					required
						"BeneficiaryBankAccountOrIBANIsRequired"
			else
				initialize
		
		BeneficiaryIBAN
			if (ExternalTransfer)
				if (!BeneficiaryBankAccount entered)
					required
						"BeneficiaryIBANOrBankAccountIsRequired"
			else
				initialize
						
		BeneficiaryBankPostalAddress
			if (BeneficiaryBankName entered)
				required
					"BeneficiaryBankAddressIsRequired"
			else
				initialize
		
		IntermediaryBankIdentifier
			initial value is "R" 
			if (SpecifyIntermediaryBank)
				required
					"IntermediaryBankIdentifierIsRequired"
			else
				initialize
				
		IntermediaryRoutingNumber
			if (SpecifyIntermediaryBank)
				if (IntermediaryBankIdentifier.RoutingNumber)
					required
						"IntermediaryRoutingNumberIsRequired"
				else
					initialize
			else
				initialize
		
		IntermediarySwiftID
			if (SpecifyIntermediaryBank)
				if (IntermediaryBankIdentifier.Swift)
					required
						"IntermediarySWIFT/BICIsRequired"
				else
					initialize
			else
				initialize
				
		IntermediaryBankName
			if (SpecifyIntermediaryBank)
				required
					"IntermediaryBankNameIsRequired"
			else
				initialize
		
		IntermediaryBankAccount
			if (SpecifyIntermediaryBank)
				if (!IntermediaryIBAN entered)
					required
						"IntermediaryBankAccountOrIBANIsRequired"
			else
				initialize
		
		IntermediaryIBAN
			if (SpecifyIntermediaryBank)
				if (!IntermediaryBankAccount entered)
					required
						"IntermediaryIBANOrBankAccountIsRequired"
			else
				initialize
										
		IntermediaryBankPostalAddress
			if (SpecifyIntermediaryBank)
				required
					"IntermediaryBankAddressIsRequired"
			else
				initialize
	
		TransactionIdentifierSequenceNumber
			autosequence using ByTransactionIdentifierSequenceNumber
    			minimize contention
    			
		CashLedgerTransactionIdentifier
			CashLedgerTransactionIdentifier	= ("W" + TransactionIdentifierSequenceNumber)

		FromAccountingUnit
			if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
				if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					required
					constraint (FromAccountingUnit.AccountingEntity = FromCompany.GeneralLedgerCompany.AccountingEntity)
						"From_Accounting_EntityMustMatch_From_Company_Accounting_Entity_(<FromCompany.GeneralLedgerCompany.AccountingEntity>)"
		FromFund
			if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
				if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.Dimension1)
					required

		ToAccountingUnit
			if (ToAccountingUnitRequired)
				required
				constraint (ToAccountingUnit.AccountingEntity = ToCompany.GeneralLedgerCompany.AccountingEntity)
					"To_Accounting_EntityMustMatch_To_Company_Accounting_Entity_(<FromCompany.GeneralLedgerCompany.AccountingEntity>)"
		ToFund
			if (ToFundRequired)
				required

		PostingDate		
			initial value is WireTransferBatch.PostingDate
			default to WireTransferBatch.PostingDate
			if (CBCompanySystemClosingControlRel.Control)	
				constraint (PostingDate within CBCompanySystemClosingControlRel.ValidEntryDate)	
					"PostingDateOutsideValidDateRangeOf:<CBCompanySystemClosingControlRel.ValidEntryDate.Begin>-<CBCompanySystemClosingControlRel.ValidEntryDate.End>ForCBCompany<FromCompany>"	
								
												
	Derived Fields
		BlankField is a DerivedField
			type is Alpha 1
			return blank
			
		RequiredDistributionAmount is a DerivedField
			type is like InternationalAmount
			default label is "RequiredDistributionAmount"
			if (InternalTransfer)
				return FeeAmount
			else
				return (TransactionAmount + FeeAmount)
			
		TotalDistributions is a DerivedField
			type is like InternationalAmount
			default label is "DistributionAmount"
			return (sum NonFeeWireTransferBatchDetailDistributionRel.DistributionAmount)
			
		TotalFeeDistributions is a DerivedField
			type is like InternationalAmount
			default label is "FeeDistributionAmount"
			return (sum FeeWireTransferBatchDetailDistributionRel.DistributionAmount)
				
		DistributionDifference is a DerivedField
			type is like InternationalAmount
			default label is "Difference"
			return (RequiredDistributionAmount - TotalDistributions - TotalFeeDistributions)

		DerivedHeaderBudgetErrorCount is a DerivedField	
			type is Alpha size up to 20
			restricted
			if (HeaderBudgetEditErrorExists)
				return "(" + instance count of HeaderBudgetEditErrorRel + ")"
			else
				return ""

		DerivedWarningBudgetErrorCount is a DerivedField	
			type is Alpha size up to 20
			restricted
			if (DistributionBudgetEditErrorExists)
				return "(" + instance count of DistributionBudgetEditErrorRel + ")"
			else
				return ""

		DerivedFirstErrorMessage is a DerivedField	
			type is Alpha size up to 200
        	restricted
        	if (HeaderBudgetEditErrorRel exists)
        		return MouseOverBudgetErrorMessage
			if (DistributionBudgetEditErrorRel exists)
				return MouseOverBudgetErrorMessage

		MouseOverBudgetErrorMessage is a MessageField	
			restricted
			"BudgetErrorsExist;SeeBudgetErrorTabForDetails"

		DerivedPeriodEndDate	is a DerivedField 
			type is Date
			restricted
			return CurrentGeneralLedgerCalendarPeriodRel.Date
		
	Conditions
		InternalTransfer
			when (WireTransferBatch.TransferType.Internal)
			
		ExternalTransfer
			when (WireTransferBatch.TransferType.External)
	
		DistributionsRequired
			when (FeeAmount entered
			or    ExternalTransfer)
		
		DistributionsBalance
			when (TransactionAmount = TotalDistributions)
			
		FeeDistributionsBalance
			when (FeeAmount = TotalFeeDistributions)
				
		TotalDistributionsBalance
			when (DistributionDifference = 0)
		
		DisplayDistributionTotals
			when ((InternalTransfer
			and	   FeeAmount entered)
			or	   ExternalTransfer)
		
		HasTransactionIdentifierSequenceNumber
			restricted
			when (TransactionIdentifierSequenceNumber entered)

		HasCashLedgerTransactionIdentifier	
			restricted
			when (CashLedgerTransactionIdentifier entered)
					
		ConfirmationDifferenceAlert
			when (ConfirmationAmount entered
			and   TransactionAmount != ConfirmationAmount)

		IsValidForActorContext	
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		BudgetEditingInformationExists	
			restricted
			when (BudgetTemplateGroupTotalRel exists)

		BudgetEditErrorExists	
			when (HeaderBudgetEditErrorRel exists
			or    DistributionBudgetEditErrorRel exists)
			
		HeaderBudgetEditErrorExists	
			restricted
			when (HeaderBudgetEditErrorRel exists)
			
		DistributionBudgetEditErrorExists	
			restricted
			when (DistributionBudgetEditErrorRel exists)
						
		GLCommitRelExists	
			restricted
			when (GLCommitRel exists)

		OpenGLCommitRelExists	
			restricted
			when (OpenGLCommitDrillRel exists)

		ToAccountingUnitRequired
			restricted
			when (ShowAccountingUnit
			and   InternalTransfer)

		ToFundRequired
			restricted
			when (ShowFinanceDimension1
			and   InternalTransfer)

		ShowAccountingUnit
            when (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting
			and   CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)

		ShowFinanceDimension1
            when (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting
			and   CashManagementGroup.FinanceEnterpriseGroup.FundDimension.Dimension1)

        IsUnConfirmedForPeriodClose					
        	restricted
            when (Processed 	= false
			and   Rejected		= false
            and   PostingDate  <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
            
		OutstandingWireTransferBatchDetailsExist	
			restricted
			when (IsUnConfirmedForPeriodClose)
			
		ValidPostingDate	
			restricted
			when ((CBCompanySystemClosingControlRel.Control	
			and   PostingDate within CBCompanySystemClosingControlRel.ValidEntryDate)
			or    CBCompanySystemClosingControlRel not exists	
			or    (CBCompanySystemClosingControlRel exists		
			and    !CBCompanySystemClosingControlRel.Control))	
            			
	Sets
		ByProcessed
			Sort Order
				CashManagementGroup
				WireTransferBatch
				Processed
				WireTransferBatchDetail
	
		ByTransactionIdentifierSequenceNumber
			indexed
			Instance Selection
				where (HasTransactionIdentifierSequenceNumber)
			Sort Order
				CashManagementGroup
				TransactionIdentifierSequenceNumber

		ByCashLedgerTransactionIdentifier	
			indexed
			Instance Selection
				where (HasCashLedgerTransactionIdentifier)
			Sort Order
				CashManagementGroup
				CashLedgerTransactionIdentifier

		ByCompany	
			indexed
            Sort Order
            	CashManagementGroup
                FromCompany
                WireTransferBatch
                WireTransferBatchDetail
                								
	Relations
    	FromCompanyCashCodeRel
			one-to-one relation to CompanyCashCode
            Field Mapping uses symbolic key
                related.Company 		= FromCompany.GeneralLedgerCompany
                related.CashCode		= FromCashCode
                
    	ToCompanyCashCodeRel
			one-to-one relation to CompanyCashCode
            Field Mapping uses symbolic key
                related.Company 		= ToCompany.GeneralLedgerCompany
                related.CashCode		= ToCashCode
        
        LocalCompanyCashCodeRel
			one-to-one relation to CompanyCashCode
            Field Mapping uses symbolic key
                related.Company 		= LocalCompany
                related.CashCode		= LocalCashCode
        
        NonFeeWireTransferBatchDetailDistributionRel
        	one-to-many relation to WireTransferBatchDetailDistribution
            Field Mapping uses ByFeeDistribution
                related.CashManagementGroup		= CashManagementGroup
				related.WireTransferBatch		= WireTransferBatch
				related.WireTransferBatchDetail	= WireTransferBatchDetail
				related.FeeDistribution			= false
				
        FeeWireTransferBatchDetailDistributionRel
        	one-to-many relation to WireTransferBatchDetailDistribution
            Field Mapping uses ByFeeDistribution
                related.CashManagementGroup		= CashManagementGroup
				related.WireTransferBatch		= WireTransferBatch
				related.WireTransferBatchDetail	= WireTransferBatchDetail
				related.FeeDistribution			= true
        
        CashCodeTransactionCodeRel
			one-to-many relation to CashCodeTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= LocalCashCode
			Instance Selection
				where (related.CashCodeTransactionCode.Active	 	= true)
		
		CashCodeTransactionCodeByCodeRel
			one-to-one relation to CashCodeTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= LocalCashCode
				related.BankTransactionCode = LocalBankTransactionCode

		HeaderBudgetEditErrorRel	
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.BudgetEditError.BudgetEditGroup	= UniqueID

		DistributionBudgetEditErrorRel	
			one-to-many relation to BudgetEditError
			Field Mapping uses ByHeaderUniqueID
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.HeaderUniqueID                  = UniqueID
				
		GeneralLedgerSystemCodeRel	
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.GeneralLedgerSystemCode	= "CB"	

		GLCommitRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID	
				related.FinanceEnterpriseGroup		= CashManagementGroup
				related.HeaderUniqueID				= UniqueID

		OpenGLCommitDrillRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup    = CashManagementGroup
				related.HeaderUniqueID 			  = UniqueID
			Instance Selection
				where (related.Status = 0
				or     related.Status = 2
				or     related.Status = 3)

		GLCommitDocumentsRel	
			one-to-one relation to GLCommitDocument
			Field Mapping uses ByHeaderObjectReference
				related.HeaderObjectReference = reference to this instance		

		BudgetTemplateGroupTotalRel	
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup                    = CashManagementGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup  = UniqueID

		CashLedgerTransactionRel	
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashLedgerTransactionIdentifier
            	related.CashManagementGroup				= CashManagementGroup
                related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier
 
		CashCodeFundEditRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance

		CashCodeFundEditByFundRel
			one-to-one relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.CashCode				= LocalCashCode
		 		related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
		 		related.FinanceDimension1		= LocalFinanceDimension1

 		ExceedesCashCodeFundBalanceRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByExceedesFundBalance
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.ExceedesFundBalance		= true

 		CashCodeFundRel
			one-to-one relation to CashCodeFund
			Field Mapping uses ByAccountingEntityFund
				related.CashManagementGroup		= CashManagementGroup
				related.CashCode				= LocalCashCode
				related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
				related.FinanceDimension1		= LocalFinanceDimension1
 
 		CBCompanySystemClosingControlRel		
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= FromCompany

		CurrentGeneralLedgerCalendarPeriodRel	
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= CashManagementGroup
				related.GeneralLedgerCalendarPeriod			= FromCompany.GeneralLedgerCompany.AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod	
		
		UnConfirmedWireTransferBatchDetailsErrorRel
			one-to-many relation to CashLedgerJobResultError
            Field Mapping uses ByCompanyErrorType
            	related.CashManagementGroup 				= LocalCashManagementGroup
            	related.CashLedgerJobResult					= LocalCashLedgerJobResult
            	related.Company								= LocalCompany
            	related.ErrorType							= 13 
            			
	Rule Blocks
		AllocateConfirmationDifference
			ConfirmationDifference = ConfirmationAmount - TransactionAmount 
			LastWireTransferBatchDetailDistribution = last NonFeeWireTransferBatchDetailDistributionRel.WireTransferBatchDetailDistribution
			
			for each NonFeeWireTransferBatchDetailDistributionRel
				DifferenceAllocation = (each.DistributionAmount / TransactionAmount * ConfirmationDifference)
				invoke FastUpdate each
					if (each.WireTransferBatchDetailDistribution = LastWireTransferBatchDetailDistribution)
						invoked.DistributionConfirmedAmount += (ConfirmationDifference - TotalDifferenceAllocated)
					else
						invoked.DistributionConfirmedAmount += DifferenceAllocation
				TotalDifferenceAllocated += DifferenceAllocation
						
		PerformFundAmountEdit
			if (InternalTransfer)
				if (LocalAccountingUnit entered)
					if (LocalCashCode.EditAvailableFunds
					and LocalTransferType.From)
						constraint (LocalTransactionAmount <= CashCodeFundRel.EditAvailableAmount)
							"TotalTransferAmountOf<LocalTransactionAmount>ExceedCashFundAmountForCashCode<LocalCashCode>And<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>_<LocalToAccountingEntity>And<CashManagementGroup.FinanceEnterpriseGroup.AccountingUnitLabel>_<LocalAccountingUnit>"
					else
						constraint (CashCodeFundRel exists)
							"CashCode<LocalCashCode>IsRestricted:<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>_<LocalToAccountingEntity>And<CashManagementGroup.FinanceEnterpriseGroup.AccountingUnitLabel>_<LocalAccountingUnit>IsNotOnRestrictedList"
				if (LocalFinanceDimension1 entered)
					if (LocalCashCode.EditAvailableFunds
					and LocalTransferType.From)
						constraint (LocalTransactionAmount <= CashCodeFundRel.EditAvailableAmount)
							"TotalTransferAmountOf<LocalTransactionAmount>ExceedCashFundAmountForCashCode<LocalCashCode>and<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>_<LocalToAccountingEntity>And<CashManagementGroup.FinanceEnterpriseGroup.FinanceDimension1Label>_<LocalFinanceDimension1>"
					else
						constraint (CashCodeFundRel exists)
							"CashCode<LocalCashCode>IsRestricted:<CashManagementGroup.FinanceEnterpriseGroup.AccountingEntityLabel>_<LocalToAccountingEntity>And<CashManagementGroup.FinanceEnterpriseGroup.FinanceDimension1Label>_<LocalFinanceDimension1>IsNotOnRestrictedList"
			if (ExternalTransfer)
				invoke Delete CashCodeFundEditRel
				LocalCashCode 						= FromCashCode
				for each NonFeeWireTransferBatchDetailDistributionRel
					LocalToAccountingEntity			= each.DistributionAccount.ToAccountingEntity
					if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						LocalAccountingUnit			= each.DistributionAccount.AccountingUnit
					else
						LocalFinanceDimension1		= each.DistributionAccount.FinanceDimension1
					if (LocalCashCode.EditAvailableFunds)
						invoke Update CashCodeFundEditByFundRel
							invoked.EditAmount 		+= each.DistributionAmount
					else
						if (CashCodeFundRel !exists)
							invoke Update CashCodeFundEditByFundRel

		CreateCashLedgerTransaction
			invoke Unreleased.CreateFromCashLedgerWithoutEdits CashLedgerTransaction
                assign result to NewCashLedgerTransaction
				invoked.CashManagementGroup 				= CashManagementGroup
                invoked.BankTransactionCode             	= LocalBankTransactionCode
                invoked.CashCode          					= LocalCashCode
                invoked.TransactionNumber               	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
                invoked.TransactionNumberSuffix         	= 0
                invoked.SourceCode                      	= "CB"
                invoked.Company  							= LocalCompany
                invoked.IssueDate                       	= TransactionDate
                invoked.IssuedBankAmount 					= LocalTransactionAmount
                invoked.Description                     	= Reference
                invoked.Reference                     	  	= LocalReference
                invoked.GeneralLedgerPostDate           	= PostingDate		
                invoked.Type                            	= "W"
                invoked.CashLedgerTransactionIdentifier		= CashLedgerTransactionIdentifier
				invoked.BypassBudgetEditing					= true
				
            if (LocalTransferType.To)
            	DistributionMultiplier = -1
            	OffsetMultiplier = 1
            else
                DistributionMultiplier = 1
            	OffsetMultiplier = -1
                	
            if (InternalTransfer
            and !LocalTransferType.Fee)
	            invoke Create CashLedgerGLDistribution
	                invoked.CashManagementGroup 							= CashManagementGroup
	                invoked.CashCode                      					= LocalCashCode
	                invoked.CashLedgerSourceRecord							= "CBT"
	                invoked.CashLedgerGLDistribution.BankTransactionCode 	= LocalBankTransactionCode
	                invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
	                invoked.CashLedgerGLDistribution.DistributionType   	= "E"

	                invoked.TransactionNumber                           	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
	                invoked.TransactionNumberSuffix                     	= 0
	                invoked.GeneralLedgerSourceCode                     	= "CL"
	                invoked.Company                                     	= LocalCompany
	                invoked.RecordType										= "W"
	                invoked.Status                                      	= 1 
	                invoked.PostDate                                    	= PostingDate		
	                invoked.CompanyAccountingEntity							= LocalAccountingEntity		
	                invoked.GLFinanceCodeBlock                          	= LocalCompanyCashCodeRel.TransferClearingAccount
                    if (LocalAccountingUnit entered)
                        invoked.GLFinanceCodeBlock.AccountingUnit           = LocalAccountingUnit
					if (LocalFund entered)
						invoked.GLFinanceCodeBlock.FinanceDimension1		= LocalFund
	                invoked.GLTransactionAmount   							= LocalTransactionAmount * DistributionMultiplier
	                invoked.DistributionToBankAmount 						= LocalTransactionAmount * DistributionMultiplier
	                invoked.Reference                                   	= "WireTransfer"
	                invoked.Description                                 	= Reference
	                invoked.TransactionCurrencyNumberOfDecimals         	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
	                invoked.ToTransactionCurrencyNumberOfDecimals       	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals


					invoked.TransferHeaderCashCode        					= LocalCashCode
					invoked.BypassBudgetAndCommitmentProcessing 			= true
					invoked.LocalExchangeDate								= PostingDate		
					invoked.LocalPostingDate								= PostingDate		
					invoked.LocalGeneralLedgerEvent							= "CL"
					invoked.LocalDescription								= Reference
					invoked.LocalReleaseGlTransactionDetail					= true
					invoked.BypassStatusEdit							 	= true
					
			if (ExternalTransfer
			and !LocalTransferType.Fee)
                for each NonFeeWireTransferBatchDetailDistributionRel 
		            invoke Create CashLedgerGLDistribution
		                assign result to LocalCashLedgerGLDistribution
		                invoked.CashManagementGroup 							= CashManagementGroup
		                invoked.CashCode                      					= LocalCashCode
		                invoked.CashLedgerSourceRecord							= "CBT"
		                invoked.CashLedgerGLDistribution.BankTransactionCode 	= LocalBankTransactionCode
		                invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
		                invoked.CashLedgerGLDistribution.DistributionType   	= "E"

		                invoked.TransactionNumber                           	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
		                invoked.TransactionNumberSuffix                     	= 0
		                invoked.GeneralLedgerSourceCode                     	= "CL"
		                invoked.Company                                     	= LocalCompany
		                invoked.RecordType										= "W"
		                invoked.Status                                      	= 1 
		                invoked.PostDate                                    	= PostingDate		
		                invoked.CompanyAccountingEntity							= LocalAccountingEntity		
		                invoked.GLFinanceCodeBlock                          	= each.DistributionAccount
		                invoked.GLTransactionAmount   							= each.DistributionConfirmedAmount * DistributionMultiplier
		                invoked.DistributionToBankAmount 						= each.DistributionConfirmedAmount * DistributionMultiplier
		                invoked.Reference                                   	= "WireTransfer"
		                invoked.Description                                 	= Reference
		                invoked.TransactionCurrencyNumberOfDecimals         	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
		                invoked.ToTransactionCurrencyNumberOfDecimals       	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals


						invoked.TransferHeaderCashCode        					= LocalCashCode
						invoked.BypassBudgetAndCommitmentProcessing 			= true
						invoked.LocalExchangeDate								= PostingDate		
						invoked.LocalPostingDate								= PostingDate		
						invoked.LocalGeneralLedgerEvent							= "CL"
						invoked.LocalDescription								= Reference
						invoked.LocalReleaseGlTransactionDetail					= true
						invoked.BypassStatusEdit							 	= true
						
					invoke FastUpdate each
						invoked.RelatedObjectReference.BusinessClassName = "CashLedgerGLDistribution"
						invoked.RelatedObjectReference.BusinessObjectKey = LocalCashLedgerGLDistribution.UniqueID
							
			if (LocalTransferType.Fee)
                for each FeeWireTransferBatchDetailDistributionRel 
		            invoke Create CashLedgerGLDistribution
		                assign result to LocalCashLedgerGLDistribution 
		                invoked.CashManagementGroup 							= CashManagementGroup
		                invoked.CashCode                      					= LocalCashCode
		                invoked.CashLedgerSourceRecord							= "CBT"
		                invoked.CashLedgerGLDistribution.BankTransactionCode 	= LocalBankTransactionCode
		                invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
		                invoked.CashLedgerGLDistribution.DistributionType   	= "E"

		                invoked.TransactionNumber                           	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
		                invoked.TransactionNumberSuffix                     	= 0
		                invoked.GeneralLedgerSourceCode                     	= "CL"
		                invoked.Company                                     	= LocalCompany
		                invoked.RecordType										= "W"
		                invoked.Status                                      	= 1 
		                invoked.PostDate                                    	= PostingDate		
		                invoked.CompanyAccountingEntity							= LocalAccountingEntity		
		                invoked.GLFinanceCodeBlock                          	= each.DistributionAccount
		                invoked.GLTransactionAmount   							= each.DistributionConfirmedAmount * DistributionMultiplier
		                invoked.DistributionToBankAmount 						= each.DistributionConfirmedAmount * DistributionMultiplier
		                invoked.Reference                                   	= "WireTransferFee"
		                invoked.Description                                 	= Reference
		                invoked.TransactionCurrencyNumberOfDecimals         	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
		                invoked.ToTransactionCurrencyNumberOfDecimals       	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals


						invoked.TransferHeaderCashCode        					= LocalCashCode
						invoked.BypassBudgetAndCommitmentProcessing 			= true
						invoked.LocalExchangeDate								= PostingDate		
						invoked.LocalPostingDate								= PostingDate		
						invoked.LocalGeneralLedgerEvent							= "CL"
						invoked.LocalDescription								= Reference
						invoked.LocalReleaseGlTransactionDetail					= true
						invoked.BypassStatusEdit							 	= true
						
					invoke FastUpdate each
						invoked.RelatedObjectReference.BusinessClassName = "CashLedgerGLDistribution"
						invoked.RelatedObjectReference.BusinessObjectKey = LocalCashLedgerGLDistribution.UniqueID
									
			if  (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting
			and (ExternalTransfer
			or   LocalTransferType.Fee))
				if (LocalTransferType.Fee)
					for each FeeWireTransferBatchDetailDistributionRel
						include CreateFundCashLedgerOffset
				else
					for each NonFeeWireTransferBatchDetailDistributionRel
						include CreateFundCashLedgerOffset
			else
	            invoke Create CashLedgerGLDistribution	
	                invoked.CashManagementGroup 							= CashManagementGroup
	                invoked.CashCode                      					= LocalCashCode
	                invoked.CashLedgerSourceRecord							= "CBT"
	                invoked.CashLedgerGLDistribution.BankTransactionCode 	= LocalBankTransactionCode
	                invoked.CashLedgerGLDistribution.TransactionIDNumber 	= NewCashLedgerTransaction.CashLedgerTransaction
	                invoked.CashLedgerGLDistribution.DistributionType   	= "E"

	                invoked.TransactionNumber                           	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
	                invoked.TransactionNumberSuffix                     	= 0
	                invoked.GeneralLedgerSourceCode                     	= "CL"
	                invoked.Company                                     	= LocalCompany
		            invoked.RecordType                                  	= "W"
	                invoked.Status                                      	= 1  
	                invoked.PostDate                                    	= PostingDate		
	                if (LocalBankTransactionCode.AutomaticReconciliation
	                and LocalCompanyCashCodeRel.ReconcileGeneralLedgerEntry)
	                    invoked.GLFinanceCodeBlock                      	= LocalCompanyCashCodeRel.ReconciliationAccount
	                else
	                    invoked.GLFinanceCodeBlock                      	= LocalCompanyCashCodeRel.CashAccount
                    if (LocalAccountingUnit entered)
                        invoked.GLFinanceCodeBlock.AccountingUnit           = LocalAccountingUnit
					if (LocalFund entered)
						invoked.GLFinanceCodeBlock.FinanceDimension1		= LocalFund
	                invoked.CompanyAccountingEntity							= LocalAccountingEntity		
	                invoked.GLTransactionAmount   							= LocalTransactionAmount * OffsetMultiplier
	                invoked.DistributionToBankAmount 						= LocalTransactionAmount * OffsetMultiplier
	                invoked.Reference                                   	= "WireTransfer"
	                invoked.Description                                 	= Reference
	                invoked.TransactionCurrencyNumberOfDecimals         	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
	                invoked.ToTransactionCurrencyNumberOfDecimals       	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals


					invoked.TransferHeaderCashCode         					= LocalCashCode
					invoked.BypassBudgetAndCommitmentProcessing 			= true	
					invoked.LocalExchangeDate								= PostingDate		
					invoked.LocalPostingDate								= PostingDate		
					invoked.LocalGeneralLedgerEvent							= "CL"
					invoked.LocalDescription								= Reference
					invoked.LocalReleaseGlTransactionDetail					= true
					invoked.BypassStatusEdit							 	= true

				if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
					LocalToAccountingEntity	= LocalCompanyCashCodeRel.CashAccount.ToAccountingEntity
					if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						LocalAccountingUnit		= LocalAccountingUnit
						LocalFinanceDimension1	= blank
					else
						LocalAccountingUnit		= blank
						LocalFinanceDimension1	= LocalFund
					if (CashCodeFundRel !exist)
						invoke Create CashCodeFundRel
							invoked.PostedAmount = LocalTransactionAmount * OffsetMultiplier
					else
						invoke UpdatePostedAmount CashCodeFundRel

							invoked.PrmPostedAmount = LocalTransactionAmount * OffsetMultiplier

		CreateFundCashLedgerOffset
			LocalTransactionAmount		= each.DistributionConfirmedAmount		
            invoke Create CashLedgerGLDistribution	
                invoked.CashManagementGroup 							= CashManagementGroup
                invoked.CashCode                      					= LocalCashCode
                invoked.CashLedgerSourceRecord							= "CBT"
                invoked.CashLedgerGLDistribution.BankTransactionCode 	= LocalBankTransactionCode
                invoked.CashLedgerGLDistribution.TransactionIDNumber 	= NewCashLedgerTransaction.CashLedgerTransaction
                invoked.CashLedgerGLDistribution.DistributionType   	= "E"
                invoked.TransactionNumber                           	= "WIRE " + WireTransferBatch + "-" + WireTransferBatchDetail
                invoked.TransactionNumberSuffix                     	= 0
                invoked.GeneralLedgerSourceCode                     	= "CL"
                invoked.Company                                     	= LocalCompany
	            invoked.RecordType                                  	= "W"
                invoked.Status                                      	= 1  
                invoked.PostDate                                    	= PostingDate		
            	invoked.GLFinanceCodeBlock                      		= each.DistributionAccount
                if (LocalBankTransactionCode.AutomaticReconciliation
                and LocalCompanyCashCodeRel.ReconcileGeneralLedgerEntry)
                    invoked.GLFinanceCodeBlock.GeneralLedgerChartAccount	= LocalCompanyCashCodeRel.ReconciliationAccount.GeneralLedgerChartAccount
                else
                    invoked.GLFinanceCodeBlock.GeneralLedgerChartAccount	= LocalCompanyCashCodeRel.CashAccount.GeneralLedgerChartAccount
                invoked.CompanyAccountingEntity							= LocalAccountingEntity		
                invoked.GLTransactionAmount   							= LocalTransactionAmount * OffsetMultiplier
                invoked.DistributionToBankAmount 						= LocalTransactionAmount * OffsetMultiplier
                invoked.Reference                                   	= "WireTransfer"
                invoked.Description                                 	= Reference
                invoked.TransactionCurrencyNumberOfDecimals         	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
                invoked.ToTransactionCurrencyNumberOfDecimals       	= LocalCashCode.BankAccountNumber.Currency.NumberOfDecimals
				invoked.TransferHeaderCashCode         					= LocalCashCode
				invoked.BypassBudgetAndCommitmentProcessing 			= true	
				invoked.LocalExchangeDate								= PostingDate		
				invoked.LocalPostingDate								= PostingDate		
				invoked.LocalGeneralLedgerEvent							= "CL"
				invoked.LocalDescription								= Reference
				invoked.LocalReleaseGlTransactionDetail					= true
				invoked.BypassStatusEdit							 	= true

			LocalToAccountingEntity	= each.DistributionAccount.ToAccountingEntity
			if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
				LocalAccountingUnit		= each.DistributionAccount.AccountingUnit
				LocalFinanceDimension1	= blank
			else
				LocalAccountingUnit		= blank
				LocalFinanceDimension1	= each.DistributionAccount.FinanceDimension1
			if (CashCodeFundRel !exist)
				invoke Create CashCodeFundRel
					invoked.PostedAmount = LocalTransactionAmount * OffsetMultiplier
			else
				invoke UpdatePostedAmount CashCodeFundRel

					invoked.PrmPostedAmount = LocalTransactionAmount * OffsetMultiplier
		
		
		ReleaseExitRules	

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
				invoke UpdateToReleased GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= FromCompany.GeneralLedgerCompany.AccountingEntity


		PerformBudgetEditsForApprovalOrRelease	






			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess 
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel 
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    													= CashManagementGroup
					invoked.PrmBudgetEditGroup           													= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatch 		= WireTransferBatch
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatchDetail	= WireTransferBatchDetail
					invoked.PrmActionCode																	= LocalActionCode
					if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)   
						invoked.PrmMode																		= BudgetEditMode.Hard
					else	
						invoked.PrmMode																		= BudgetEditMode.UpdateOnly
					if (LocalActionCode 																	= "R")	
						invoked.PrmEditContext                      										= "Release"					
					else																												
						invoked.PrmEditContext                      										= "SubmitForApproval"	
					invoked.PrmBusinessClassName  					              							= "WireTransferBatchDetail"	
			else	
				invoke UpdateBudgetResults
					invoked.ParmSuccess		= true    	
					invoked.ParmActionCode	= LocalActionCode	
					

		PerformBudgetEditsForVoids	

			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess 
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel 
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    													= CashManagementGroup
					invoked.PrmBudgetEditGroup           													= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatch 		= WireTransferBatch
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatchDetail	= WireTransferBatchDetail
					invoked.PrmActionCode																	= "V"	
					invoked.PrmMode																			= BudgetEditMode.UpdateOnly
					invoked.PrmBusinessClassName  					              							= "WireTransferBatchDetail"	
					invoked.PrmEditContext                      											= "Void"					
				invoke UpdateToReleased GLCommit																						
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= FromCompany.GeneralLedgerCompany.AccountingEntity
			else	
				invoke UpdateBudgetResults
					invoked.ParmSuccess		= true    	
					invoked.ParmActionCode	= "V"	
					
		RejectBudgetCommitments		
			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
			and  GLCommitRelExists)
				invoke RejectInvoice GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= FromCompany.GeneralLedgerCompany.AccountingEntity
					invoked.PrmEditContext				= "RejectWireTransferBatch"
					
		ResetBudgetCommitments		
			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
			and  GLCommitRelExists)
				invoke RejectInvoice GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= FromCompany.GeneralLedgerCompany.AccountingEntity
					invoked.PrmEditContext				= "ResetWireTransferBatch"

		CheckForRelatedChanges	
			if (TransactionDate changed
			or  PostingDate changed)	
				invoke UpdateAllDistributions WireTransferBatchDetailDistribution set
					if (TransactionDate changed)
						invoked.PrmTransactionDateChanged	= true
						invoked.PrmTransactionDate			= TransactionDate
					if (PostingDate changed)	
						invoked.PrmPostingDateChanged		= true
						invoked.PrmPostingDate				= PostingDate							
																																	
	Actions
		Create is a Create Action
			valid when (WireTransferBatch.Status.New)
							
		Update is an Update Action
			valid when (WireTransferBatch.Status.New)
			Exit Rules
				include CheckForRelatedChanges	

		Delete is a Delete Action
			valid when (WireTransferBatch.Status.New)
			Action Rules	
				if (WireTransferBatchDetailDistribution set exists)
					invoke Delete WireTransferBatchDetailDistribution set
					
		EditFundAmounts is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if (InternalTransfer)
					if (FromCashCode.EditAvailableFunds
					or  FromCashCode.RestrictedFunds)
						LocalToAccountingEntity			= FromCompanyCashCodeRel.CashAccount.ToAccountingEntity
						LocalCashCode 					= FromCashCode
						LocalTransferType				= 1 
						LocalTransactionAmount			= (TransactionAmount + FeeAmount)
						LocalFinanceDimension1			= FromFund
						LocalAccountingUnit 			= FromAccountingUnit.AccountingUnit
						include PerformFundAmountEdit
					if (ToCashCode.EditAvailableFunds
					or  ToCashCode.RestrictedFunds)
						LocalToAccountingEntity			= ToCompanyCashCodeRel.CashAccount.ToAccountingEntity
						LocalCashCode 					= ToCashCode
						LocalTransferType 				= 2 
						LocalTransactionAmount			= TransactionAmount
						LocalFinanceDimension1			= ToFund
						LocalAccountingUnit 			= ToAccountingUnit.AccountingUnit
						include PerformFundAmountEdit
				if (ExternalTransfer)
					include PerformFundAmountEdit
					constraint (ExceedesCashCodeFundBalanceRel !exists)
						"<first ExceedesCashCodeFundBalanceRel.ErrorMessage>"
					invoke Delete CashCodeFundEditRel


		MarkAsProcessed is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmConfirmationAmount					is an InternationalAmount
				PrmPostingDate							is Date	
				
			Local Fields
				DistributionMultiplier					is Numeric 1
				OffsetMultiplier						is Numeric 1
				LastWireTransferBatchDetailDistribution	is like WireTransferBatchDetailDistribution
				DifferenceAllocation					is like InternationalAmount
				TotalDifferenceAllocated				is like InternationalAmount
				LocalCashLedgerGLDistribution			is a CashLedgerGLDistribution view
				
			Action Rules
				ConfirmationAmount 	= PrmConfirmationAmount
				PostingDate 		= PrmPostingDate	
				if (ExternalTransfer)
					if (ConfirmationAmount != TransactionAmount)
						include AllocateConfirmationDifference
					
				LocalCashCode = FromCashCode
				LocalCompany = FromCompany.GeneralLedgerCompany
				LocalBankTransactionCode = FromBankTransactionCode
				LocalTransactionAmount = ConfirmationAmount
				LocalReference = "WireTransfer"
				LocalTransferType = 1 
				LocalAccountingEntity = FromCompany.GeneralLedgerCompany.AccountingEntity		
				LocalAccountingUnit = FromAccountingUnit.AccountingUnit
				LocalFund = FromFund
				include CreateCashLedgerTransaction
				
				if (InternalTransfer)
					LocalCashCode = ToCashCode
					LocalCompany = ToCompany.GeneralLedgerCompany
					LocalBankTransactionCode = ToBankTransactionCode
					LocalTransactionAmount = ConfirmationAmount
					LocalReference = "WireTransfer"
					LocalTransferType = 2 
					LocalAccountingEntity = ToCompany.GeneralLedgerCompany.AccountingEntity		
					LocalAccountingUnit = ToAccountingUnit.AccountingUnit
					LocalFund = ToFund
					include CreateCashLedgerTransaction
					
				if (FeeAmount entered)
					LocalCashCode = FromCashCode
					LocalCompany = FromCompany.GeneralLedgerCompany
					LocalBankTransactionCode = FeeBankTransactionCode
					LocalTransactionAmount = FeeAmount
					LocalReference = "WireTransferFee"
					LocalAccountingEntity = FromCompany.GeneralLedgerCompany.AccountingEntity		
					LocalTransferType = 3 
					include CreateCashLedgerTransaction
				
				ProcessedTimestamp = current timestamp 
				Processed = true
		
		MarkAsRejected is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				RejectedTimestamp = current timestamp 
				Rejected = true
				
		CreateWireTransferOutput is a Set Action
			default label is untranslatable
			restricted
			run in background
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmWireTransferBatch			is a WireTransferBatch

			Parameter Rules
				PrmCashManagementGroup			required
				PrmWireTransferBatch			required
			
			Local Fields
				LocalWireTransferOutput			is a WireTransferOutput view
				LocalWireTransferOutputDetail 	is a WireTransferOutputDetail view
						
			Sort Order
				CashManagementGroup
				WireTransferBatch
				WireTransferBatchDetail
				
			Instance Selection 
				where (CashManagementGroup = PrmCashManagementGroup
				and    WireTransferBatch = PrmWireTransferBatch)
				
			Action Rules
				Set Rules
					Entrance Rules
						invoke Create WireTransferOutput
							assign result to LocalWireTransferOutput
							invoked.CashManagementGroup			= PrmCashManagementGroup
							invoked.FinancialInstitution		= PrmWireTransferBatch.FinancialInstitution
							invoked.FinancialInstitutionBranch	= PrmWireTransferBatch.FinancialInstitutionBranch
							invoked.DataFileName				= PrmWireTransferBatch.FinalFileName
							invoked.FTPConfiguration			= PrmWireTransferBatch.FTPConfiguration
							invoked.WireTransferBatch			= PrmWireTransferBatch
							
						WireTransferOutput = LocalWireTransferOutput.WireTransferOutput
						
					Exit Rules
						invoke CreateWireTransferFile LocalWireTransferOutput.WireTransferOutput
						
				Instance Rules
					invoke Create WireTransferOutputDetail
						assign result to LocalWireTransferOutputDetail
						invoked.CashManagementGroup					= CashManagementGroup
						invoked.WireTransferOutput					= LocalWireTransferOutput.WireTransferOutput
						invoked.EDINumber							= WireTransferBatch.FinancialInstitutionBranch.BranchIdentifier
						invoked.BankClientIdentifier				= FromCashCode.BankAccountNumber.BankClientIdentifier
						invoked.BranchIdentifier					= WireTransferBatch.FinancialInstitutionBranch.BranchIdentifier
				    	invoked.OriginatorName						= FromCompany.GeneralLedgerCompany.Name
				    	invoked.OriginatorPostalAddress				= FromCompany.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress
				    	invoked.OriginatorBankName					= WireTransferBatch.FinancialInstitution.Description	
						invoked.OriginatorBankPostalAddress 		= WireTransferBatch.FinancialInstitutionBranch.Address
						invoked.OriginatorRoutingNumber				= WireTransferBatch.FinancialInstitutionBranch.WireRoutingNumber		
						invoked.OriginatorSwiftID					= WireTransferBatch.FinancialInstitutionBranch.BranchSwift		
						invoked.OriginatorBankAccount				= FromCashCode.BankAccountNumber
						invoked.OriginatorIBAN						= FromCashCode.BankAccountNumber.InternationalBankAccountNumber			
						invoked.OriginatorBankAccountCurrency		= FromCashCode.Currency 
						invoked.OriginatorBankCurrencyISOCode		= FromCashCode.Currency.ISOCode
						if (InternalTransfer)
							invoked.BeneficiaryName					= ToCompany.GeneralLedgerCompany.Name		
							invoked.BeneficiaryPostalAddress		= ToCompany.GeneralLedgerCompany.AccountingEntity.AddressCode.PostalAddress 
							invoked.BeneficiaryBankName				= ToCashCode.FinancialInstitution.Description	
							invoked.BeneficiaryBankPostalAddress	= ToCashCode.FinancialInstitutionBranch.Address
							invoked.BeneficiaryRoutingNumber		= ToCashCode.FinancialInstitutionBranch.WireRoutingNumber
							invoked.BeneficiarySwiftID				= ToCashCode.FinancialInstitutionBranch.BranchSwift
							invoked.BeneficiaryBankAccount			= ToCashCode.BankAccountNumber	
							invoked.BeneficiaryIBAN					= ToCashCode.BankAccountNumber.InternationalBankAccountNumber
						else
							invoked.BeneficiaryName					= BeneficiaryName		

							invoked.BeneficiaryBankName				= BeneficiaryBankName	
							invoked.BeneficiaryBankPostalAddress	= BeneficiaryBankPostalAddress
							invoked.BeneficiaryRoutingNumber		= BeneficiaryRoutingNumber
							invoked.BeneficiarySwiftID				= BeneficiarySwiftID
							invoked.BeneficiaryBankAccount			= BeneficiaryBankAccount	
							invoked.BeneficiaryIBAN					= BeneficiaryIBAN		
						invoked.IntermediaryBankName				= IntermediaryBankName
						invoked.IntermediaryBankPostalAddress		= IntermediaryBankPostalAddress
						invoked.IntermediaryRoutingNumber			= IntermediaryRoutingNumber
						invoked.IntermediarySwiftID					= IntermediarySwiftID	
						invoked.IntermediaryBankAccount				= IntermediaryBankAccount	
						invoked.IntermediaryIBAN					= IntermediaryIBAN
				        invoked.Reference							= Reference	
						invoked.EffectiveDate						= TransactionDate	
						invoked.TransactionDate						= TransactionDate	
				        invoked.TransactionAmount					= TransactionAmount     
				        invoked.TransactionCurrency					= Currency	
				        invoked.TransactionCurrencyISOCode			= Currency.ISOCode	




						invoked.WireTransferBatch					= WireTransferBatch
						invoked.WireTransferBatchDetail				= WireTransferBatchDetail
						invoked.CashLedgerTransactionIdentifier		= CashLedgerTransactionIdentifier
						
					WireTransferOutputDetail = LocalWireTransferOutputDetail.WireTransferOutputDetail

		ProcessBudgetEdits is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmActionCode	is an ActionCode
			Action Rules
				LocalActionCode	= PrmActionCode
				include PerformBudgetEditsForApprovalOrRelease
					
		UpdateBudgetResults is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				ParmSuccess    	is Boolean
				ParmActionCode	is an ActionCode
			Action Rules
				if (ParmSuccess)
					BudgetEditProcessing = BudgetEditProcessing.Success
				else
					BudgetEditProcessing = BudgetEditProcessing.Failure
			Exit Rules
				if (ParmActionCode.Void) 
					invoke FinalVoid
				else	
					invoke UpdateStatus WireTransferBatch
						invoked.PrmActionCode	= ParmActionCode

		RebuildCommitmentTotals is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				IsBatch        is Boolean
				BudgetEditMode
				BudgetEditTotalsProcessing
				ActionCode
			Action Rules
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel
				invoke Delete BudgetTemplateGroupTotalRel
				for each WireTransferBatchDetailDistribution set
					invoke RecalculateCommitmentAmounts each
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    													= CashManagementGroup
					invoked.PrmBudgetEditGroup           													= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatch 		= WireTransferBatch
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBWireTransfer.WireTransferBatchDetail	= WireTransferBatchDetail
					invoked.PrmActionCode																	= ActionCode
					invoked.PrmMode																			= BudgetEditMode.Hard
					if (ActionCode.Release)
						invoked.PrmEditContext                      										= "Release"
					else
					if (ActionCode.Approve)
						invoked.PrmEditContext                      										= "SubmitForApproval"
					invoked.PrmBusinessClassName  					              							= "WireTransferBatchDetail"	

		FinalVoid is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing
			Exit Rules
				include ReleaseExitRules				
									
		ReleaseDistributions is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				invoke DistributionRelease Entered WireTransferBatchDetailDistribution set
			Exit Rules	
				include ReleaseExitRules					

		BudgetUpdates is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				include PerformBudgetEditsForVoids

		BudgetRejectUpdates is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing
				include RejectBudgetCommitments

		Reset is an Instance Action		
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing
				invoke ResetDistribution Released WireTransferBatchDetailDistribution set
				include ResetBudgetCommitments
						
		CompanyPeriodClosePostDateUpdate	is a Set Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is like CashManagementGroup
				PrmNewPostDate				is Date
				PrmPeriodEndDate			is Date
				PrmCashLedgerJobResult		is a CashLedgerJobResult
				PrmCompany					is a GeneralLedgerCompany
				PrmCloseDetail				is a CashLedgerJobResultDetail
			
			Parameter Rules
				PrmCashManagementGroup		required
				PrmNewPostDate				required
				PrmPeriodEndDate			required
				PrmCompany					required
				PrmCloseDetail				required
						
			Sort Order is ByCompany
				
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    FromCompany				= PrmCompany

				and    !Processed
				and    !Rejected
            	and    PostingDate <= PrmPeriodEndDate) 
            
			Action Rules
				Empty Set Rules
					if (PrmCloseDetail.CanClose)
						invoke CloseCompany PrmCloseDetail	
					
				Set Rules
					Exit Rules
						LocalCashManagementGroup = PrmCashManagementGroup
						LocalCashLedgerJobResult = PrmCashLedgerJobResult
						LocalCompany = PrmCompany
						invoke Delete UnConfirmedWireTransferBatchDetailsErrorRel
						
						if (PrmCloseDetail.CanClose)
							invoke CloseCompany PrmCloseDetail
			        	
				Instance Rules
					invoke UpdatePostingDate
						invoked.PrmPostingDate	= PrmNewPostDate
																			
		UpdatePostingDate is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				PrmPostingDate	is Date

			Action Rules
				if (WireTransferBatchDetailDistribution set exists)
					invoke FastUpdate WireTransferBatchDetailDistribution set
						invoked.PostingDate	= PrmPostingDate
														
				PostingDate	= PrmPostingDate


