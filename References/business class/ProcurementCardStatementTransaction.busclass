ProcurementCardStatementTransaction is a BusinessClass
    owned by po
    prefix is PXD
    sql name is PCardStatementTransaction
    classic name is PDCHRGDTL

    Ontology
        symbolic key is ProcurementCardStatementTransaction
            classic set name is PXDSET1
            classic name for ProcurementCardStatementTransaction.TransactionNumber is TXN-NBR
            classic name for ProcurementCardProgram is PCARD-PROGRAM
            classic name for ProcurementCardStatement is STATEMENT

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        ProcurementCardStatementDistribution   is a SeqNbr
            sql name is PCardStatementDistribution
            classic name is LST-DST-SEQ
        ProcurementCardNumber
        	default label is "CardNumber"
            classic name is PCARD-NBR
            restricted
        Vendor
        MerchantCategoryCode
            classic name is MCC-CODE
        Merchant
        TransactionDate                        is Date
            classic name is TRAN-DATE
        PostDate                               is Date
        CardUserName
        ProcurementCardUser
            classic name is CARD-USER-ID
        PurchaseOrder
        	context of ProcurementCardStatementTransaction.Company
        PurchaseOrderLine
            context of ProcurementCardStatementTransaction.Company
            classic name is PO-LINE-NBR
        Item
        VendorItem
            classic name is VEN-ITEM
        ItemDescription                        is a Description
            classic name is ITEM-DESC
        VendorItemDescription                  is a Description
            classic name is VEN-ITEM-DESC
        Quantity
        VendorBuyUOM                           is a UnitOfMeasure
            classic name is VBUY-UOM
        VendorPriceUOM                         is a UnitOfMeasure
            classic name is VPRI-UOM
        ItemCharge                             is an InternationalAmount
        TaxAmount                              is an InternationalAmount
            classic name is TAX-AMT
        TotalAddOnChargeCost                   is an InternationalAmount
            classic name is TOT-AOC-COST
        TaxIndicator                         
        TaxCode
        	protected
        	restricted
        Status                                 is Numeric size 1
            States                                                      
                Unreleased  value is 0
                Released    value is 1
                Approved    value is 2
                Disputed 	value is 3
                Cancelled   value is 7
                Rejected    value is 8
                Closed      value is 9
                
        ApprovedDate                           is Date
        ProcurementCardReasonCode
            classic name is REASON-CODE
        CommodityCode						   is a CommCodes
            classic name is COM-CODE
        DisputedQuantity                       is a Quantity
            classic name is DISPUTED-QTY
        DisputedAmount                         is an InternationalAmount
            classic name is DISPUTED-AMT
        IncomeCode                             is a PayablesIncomeCode
        ProcessFlowApprovalLevel               is an ApprovalLevel
            classic name is PFLO-APPR-LVL
        UNSPSCCode
            classic name for UNSPSCCode.UNSPSCSegment is IC-SEGMENT
            classic name for UNSPSCCode.UNSPSCFamily is IC-FAMILY
            classic name for UNSPSCCode.UNSPSCClass is IC-CLASS
            classic name for UNSPSCCode.UNSPSCCommodity is IC-COMMODITY
        DistributionCompanyAndCode
            classic name for DistributionCompanyAndCode.DistributionCodeCompany is DIST-COMPANY
            classic name for DistributionCompanyAndCode.DistributionCode is DIST-CODE
        Manufacturer
            classic name for Manufacturer.ManufacturerCode is MANUF-CODE
            classic name for Manufacturer.ManufacturerDivision is MANUF-DIV
        ManufacturerNumber
            classic name is MANUF-NBR
        AtnObjId                               is an ObjId 
        DiversityCode                          is a PayablesDiversityCode
            classic name is DIVERSE-CODE
        
        SecondaryWithholdingCode1              is a PayablesSecondaryWithholdingCode
            classic name is SEC-WTH-CODE1
        SecondaryWithholdingPercent1           is a SecondaryWithholdingPercent
            classic name is SEC-WTH-PCT1
        SecondaryWithholdingBaseAmount1        is an InternationalAmount
            sql name is SWithholdingBaseAmount1
            classic name is BASE-SEC-WTH1
        SecondaryWithholdingTransactionAmount1 is an InternationalAmount
            sql name is SWithholdingTransactionAmount1
            classic name is TRAN-SEC-WTH1
        SecondaryWithholdingCode2              is a PayablesSecondaryWithholdingCode
            classic name is SEC-WTH-CODE2
        SecondaryWithholdingPercent2           is a SecondaryWithholdingPercent
            classic name is SEC-WTH-PCT2
        SecondaryWithholdingBaseAmount2        is an InternationalAmount
            sql name is SWithholdingBaseAmount2
            classic name is BASE-SEC-WTH2
        SecondaryWithholdingTransactionAmount2 is an InternationalAmount
            sql name is SWithholdingTransactionAmount2
            classic name is TRAN-SEC-WTH2
        SecondaryWithholdingCode3              is a PayablesSecondaryWithholdingCode
            classic name is SEC-WTH-CODE3
        SecondaryWithholdingPercent3           is a SecondaryWithholdingPercent
            classic name is SEC-WTH-PCT3
        SecondaryWithholdingBaseAmount3        is an InternationalAmount
            sql name is SWithholdingBaseAmount3
            classic name is BASE-SEC-WTH3
        SecondaryWithholdingTransactionAmount3 is an InternationalAmount
            sql name is SWithholdingTransactionAmount3
            classic name is TRAN-SEC-WTH3
        UnitCost                               is an InternationalCost
        ItemTotal                              is an InternationalAmount
        ForeignEconomicRegulatoryCode
            classic name is FOR-ECON-CODE
        DistributionOutOfBalance               is Boolean

	Context Fields
		SearchDateRange		is a DateRange
		SearchProcurementCardNumber is a ProcurementCardNumber

	Local Fields
		LocalTotalDistributions               	 		is an InternationalAmount
		LocalTotalTax                        			is an InternationalAmount
		LocalInvoiceCompany                             is like PayablesCompany
		LocalInvoice                          			is like Invoice
		LocalInvoiceDate								is Date		
		LocalDistributionAmount               			is an InternationalAmount
		LocalTaxAmount                                  is an InternationalAmount
		LocalTotalDistributionAmountForCode          	is an InternationalAmount
    	LocalDistributionAmountForCode              	is an InternationalAmount
    	LocalTaxIndicator                     			is like TaxIndicator
		LocalDistributionAccountFromDistributionCode	is a FinanceCodeBlock
		LocalDistributionCode				  			is like PayablesDistributionCode
		LocalOldDistributionCode						is like PayablesDistributionCode
		TempDistributionAmount				  			is an InternationalAmount
		LocalDistributionCodeCompany					is like Company
		LocalCountOfAllDistributions					is Numeric 6
		LocalTriggerService                             is Alpha size 30
		LocalProcurementGroup                           is like ProcurementGroup
		LocalProgram                                    is like ProcurementCardProgram
		LocalStatement                                  is like ProcurementCardStatement
		FromExternal                                    is Boolean
		LocalTestInvoice       							is like Invoice
		LocalVendor                                     is like Vendor
		LocalCompany                                    is like Company
		LocalDefaultDistributions                       is Boolean

		LocalAlert	    								is Alpha 100
		LocalConfigurationParameter						is Alpha size up to 200

	Transient Fields
		TransientDistributionsExist is Boolean
	
	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 50
			restricted
			"InforProcurementCardStatementTransaction"
			
		ContextMessageText is a MessageField
			restricted
			"ProcurementCardStatementTransaction<ProcurementCardStatementTransaction>ForProgram<ProcurementCardProgram>"

		DisplayCardNumberAndName is a MessageField
			"<ProcurementCardNumber.DisplayProcurementCardNumber>_-_<CardUserName>"

		DerivedMerchantName is a MessageField
			default label is "Merchant"
			"<Merchant>_-_<Merchant.Name>"
			
		InstanceCountOfAllDistributions								is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ProcurementCardStatementTransactionDistributionsRel) 
		
		InstanceCountOfGoodsDistributions                           is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ProcurementCardStatementGoodsTransactionDistributionsRel)
			
		InstanceCountOfTaxDistributions                             is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ProcurementCardStatementTaxTransactionDistributionRel)
		
		AccountMessage												is a StringField
			type is Alpha size 8
			"Multiple"

		DerivedCardUserName is a DerivedField
			type is like CardUserName	 
			holds pii
			restricted
			if (ProcurementCardUser entered)
				return ProcurementCardUser.Name
			else
				return first ProcurementCardRequestsRel.CardUserName
				
		MerchantCrossReferenceCount     is a ComputeField
			type is Numeric 6
			restricted
			(instance count of MerchantCrossReferencesRel)

		DistributionCount											is a DerivedField
			type is Alpha size up to 20
			restricted
			if (ProcurementCardStatementTransactionDistributionsRel exists)
				return "(" + instance count of ProcurementCardStatementTransactionDistributionsRel + ")"
			else
				return ""
        CommentCount                       							is a DerivedField
            type is Alpha size up to 20
            restricted
            if (ProcurementCardStatementTransactionCommentRel exists)
                return "(" + instance count of ProcurementCardStatementTransactionCommentRel + ")"
            else
                return ""
                
        ItemChargeLessTax											is a DerivedField
        	type is like InternationalAmount
        	restricted
        	return (ItemCharge - TaxAmount)
        
        DerivedTermsCode											is a DerivedField
        	type is like TermsCode
        	restricted
        	return VendorRel.TermsCode
        
        DerivedDueDate												is a DerivedField
        	type is Date
        	restricted
        	if (DerivedTermsCode not entered)
				if (ProcurementCardStatementRel.PostingDate entered)
					return ProcurementCardStatementRel.PostingDate
				else
					return current corporate date
        		
        MaskProcurementCardNumberDisplay	is a DerivedField
			type is Boolean
			restricted

			if (ProcurementCardProgram.MaskProcurementCardNumberDisplay)
				return ProcurementCardProgram.MaskProcurementCardNumberDisplay  

			return ProcurementGroup.MaskProcurementCardNumberDisplay 
        
        
        DisplayProcurementCardNumber		is a DerivedField
			type is like ProcurementCardNumber
        	default label is "CardNumber"

			if (MaskProcurementCardNumberDisplay)
				return "************" + ProcurementCardNumber[13:16]

			return ProcurementCardNumber

        DerivedCompany												is a DerivedField
        	type is Alpha 10
        	restricted
        	return ProcurementCardStatementTransaction.Company  using "%d"
        
		DerivedTransactionNumber									is a DerivedField
        	type is Alpha 22
        	restricted
        	return	ProcurementCardStatementTransaction.TransactionNumber	
        	
        DerivedTenantID is a DerivedField 
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		PcardChargeDisputeDesc is a DerivedField
			type is Alpha 100
			restricted
			return "P-Card "+ ProcurementCardNumber + " charges for period " + ProcurementCardStatement +" is in dispute"
				
		DerivedPCardDisputeBODID is a DerivedField
			type is Alpha 200
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup +":"+ ProcurementCardStatementTransaction +":"+ "?PcardChargeDisputeAlert&verb=Process"
			
		PcardChargeDisputeXML is a DerivedField
			type is XMLDocument
			restricted
			PcardChargeDisputeXML = template.IONPcardChargeDispute_ProcurementCardStatementTransaction_ST document for this instance


		PcardChargeRejectDesc is a DerivedField
			type is Alpha 100
			restricted
			return "P-Card "+ ProcurementCardNumber + " charges for period " + ProcurementCardStatement +" has been rejected"
					
		DerivedPCardRejectBODID is a DerivedField
			type is Alpha 200
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup +":"+ ProcurementCardStatementTransaction +":"+ "?PcardChargeRejectedAlert&verb=Process"
			
		PcardChargeRejectXML is a DerivedField
			type is XMLDocument
			restricted
			PcardChargeRejectXML = template.IONPcardChargeRejected_ProcurementCardStatementTransaction_ST document for this instance


		PcardChargeReleaseDesc is a DerivedField
			type is Alpha 100
			restricted
			return "P-Card "+ ProcurementCardNumber + " charges for period " + ProcurementCardStatement +" has been released"
				
		DerivedPCardReleaseBODID is a DerivedField
			type is Alpha 200
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup +":"+ ProcurementCardStatementTransaction +":"+ "?PcardChargeReleasedAlert&verb=Process"
			
		PcardChargeReleasedXML is a DerivedField
			type is XMLDocument
			restricted
			PcardChargeReleasedXML = template.IONPcardChargeReleased_ProcurementCardStatementTransaction_ST document for this instance

	
		
    Conditions
		InstanceCountOne
			restricted
			when (InstanceCountOfAllDistributions <= 1)

        IsNotPurchaseOrderCharges
        	restricted
            when (PurchaseOrder not entered)

        CanApprove
        	restricted
        	when (Status.Released
        	or    Status.Rejected
        	or    Status.Disputed)
        
 		MyCharges
 			restricted
 			when (ProcurementCardUser = actor.agent(Employee).Employee
			or 	 first ProcurementCardRequestsRel.ProcurementCardProxyUser = actor.agent(Employee).Employee)
  		
  		PCardVatNumberEntered
 			restricted
 			when (ProcurementCardStatement.VatReferenceNumber entered)
 
        LimitExceeded
        	restricted
        	when (ProcurementCardRequestsRel exists
        	and   ProcurementCardRequestsRel.SingleTransactionLimit > 0
        	and   ItemCharge > ProcurementCardRequestsRel.SingleTransactionLimit)
        
        IsPurchaseOrderCharges
        	restricted
            when (PurchaseOrder entered)
			
		InvoiceAlreadyExists
			restricted
			when (InvoiceExistsRel exists)
			
		AutomaticallyClosePOCharges
			restricted
			when ((ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.POChargesOnly
			or     ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.Both)
			and    IsPurchaseOrderCharges)
			
		AutomaticallyCloseAdhocCharges
			restricted 
			when ((ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.AdhocChargesOnly 
			or     ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.Both)              
			and    IsNotPurchaseOrderCharges)
			
		AutomaticallyApprovePOCharges
			restricted
			when ((ProcurementCardProgram.AutomaticallyApproveProcurementCardCharge.POChargesOnly
			or     ProcurementCardProgram.AutomaticallyApproveProcurementCardCharge.Both)
			and    IsPurchaseOrderCharges)
			
		AutomaticallyApproveAdhocCharges
			restricted 
			when ((ProcurementCardProgram.AutomaticallyApproveProcurementCardCharge.AdhocChargesOnly 
			or     ProcurementCardProgram.AutomaticallyApproveProcurementCardCharge.Both)              
			and    IsNotPurchaseOrderCharges)
		
		IsNotValidToDisapprove
			restricted
			when (ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.POChargesOnly
			or 	 (ProcurementCardProgram.AutomaticallyCloseProcurementCardCharge.Both 
			and   IsPurchaseOrderCharges)) 

		WithinSearchDateRange
			restricted	
			when (SearchDateRange not entered
			or   (SearchDateRange entered
			and   TransactionDate within SearchDateRange))

		ProgramCompanyValid
			restricted
			when (ProcurementCardProgramCompanyRel exists)
		
		IsUpdate
			restricted
			when (Status.Released
			or    Status.Approved
			or	  Status.Disputed
			or	  Status.Rejected)
			
		VendorTermsCodeEntered
			restricted
			when (VendorRel.TermsCode entered)
		
		VendorActive
			restricted
			when (VendorRel.VendorStatus = "A")
		
		NoInvoiceExistsForCompany
			restricted
			when (PayablesInvoiceNewRel !exists)
			
		DistributionExists
			restricted
			when (ProcurementCardStatementTransactionDistributionsRel exists)
			
		HasAdhocTransactions
			restricted
			when (AdhocTransactionsRel exists)
		
		ProcurementCardCompanyExists
			restricted
			when (ProcurementCardCompanyRel exists)
			
		ProcurementCardNumberFilter
			when (SearchProcurementCardNumber not entered 
			or 	 (SearchProcurementCardNumber entered and ProcurementCardNumber = SearchProcurementCardNumber))

		AllowFrontEndSplit
			restricted
			when(ProcurementCardStatement.FrontEndSplitsEnabled
			and	!ProcurementCardStatement.InterfaceInProcess
			and	!ProcurementCardStatement.Canceled
			and	IsUpdate
			and DistributionExists)

		AllowFrontEndSplitAction
			restricted
			when(ProcurementCardStatement.FrontEndSplitsEnabled
			and	!ProcurementCardStatement.InterfaceInProcess
			and	!ProcurementCardStatement.Canceled
			and	IsUpdate
			and DistributionExists
			and !ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup.UseFundedAmounts)

		HasFrontEndSplitDistributions
			restricted
			when (!ProcurementCardStatement.InterfaceInProcess
			and	!ProcurementCardStatement.Canceled
			and	IsUpdate
			and	DistributionsCreatedByFESRel exists)
		
    Relations
		ProcurementCardProgramsRel is a ProcurementCardProgram set

		ProcurementCardStatementsRel is a ProcurementCardStatement set

		ProcurementCardStatementTransactionDistributionsRel is a ProcurementCardStatementTransactionDistribution set
		
		ProcurementCardStatementTransactionDistributionsAcctRel is a ProcurementCardStatementTransactionDistribution set
			Instance Selection
   				where (related.DistributionAccount  =  LocalDistributionAccountFromDistributionCode)	
   				
   		ProcurementCardStatementTransactionCommentRel is a ProcurementCardStatementTransactionComment set
			
		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup       = LocalProcurementGroup
				related.Vendor            = LocalVendor
		
		InvoiceExistsRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses ByVendorInvoice
				related.Vendor                      = LocalVendor 
				related.Invoice                     = LocalTestInvoice
				related.Company                     = LocalCompany 
		
		AdhocTransactionsRel
			one-to-many relation to ProcurementCardStatementTransaction
			delete cascades
			Field Mapping uses ByStatusNotPO
				related.ProcurementGroup                        = LocalProcurementGroup
				related.ProcurementCardProgram                  = LocalProgram
				related.ProcurementCardStatement                = LocalStatement
		
		ProcurementCardRequestsRel
            one-to-many relation to ProcurementCardRequest
            Field Mapping uses Set2
                related.ProcurementCardNumber   = ProcurementCardNumber
                related.ProcurementCardProgram	= ProcurementCardProgram
            Instance Selection
				where (ProcurementCardNumber entered
				and    related.ProcurementGroup = ProcurementGroup)
		
		MerchantCrossReferencesRel
			one-to-many relation to MerchantCrossReference
			Field Mapping uses Set2
				related.ProcurementGroup				= ProcurementGroup
				related.ProcurementCardProgram			= ProcurementCardProgram
				related.Merchant 						= Merchant
            	
		ActivatedProcurementCardRequestsForProgramRel
			one-to-many relation to ProcurementCardRequest
			Field Mapping uses Set2
				related.ProcurementCardNumber   = ProcurementCardNumber
                related.ProcurementCardProgram	= ProcurementCardProgram
			Instance Selection
				where (related.IsActivated)
		
		PayablesInvoiceRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses ByCompanyVendorInvoice
				related.Company        = ProcurementCardStatementTransaction.Company
				related.Vendor         = ProcurementCardProgram.Vendor
				related.Invoice        = LocalInvoice
   				related.Suffix         = blank
   				related.CancelSequence = blank
				related.InvoiceDate	   = LocalInvoiceDate				
   				
		PayablesInvoiceNewRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses symbolic key
				related.Company        	= LocalInvoiceCompany
				related.PayablesInvoice = LocalInvoice
		
		ProcurementCardCompanyRel
			one-to-many relation to ProcurementCardCompany
			Field Mapping uses symbolic key
				related.ProcurementGroup			   =  ProcurementGroup
   				related.ProcurementCardProgram         =  ProcurementCardProgram
			Instance Selection
   				where (related.Company                 =  ProcurementCardStatementTransaction.Company
   				and    related.ProcurementCardNumber   =  ProcurementCardNumber)
   				
		ProcurementCardProgramCompanyRel
			one-to-one relation to ProcurementCardProgramCompany
   			Field Mapping uses symbolic key
   				related.ProcurementGroup			   =  ProcurementGroup
   				related.ProcurementCardProgram         =  ProcurementCardProgram
   				related.Company                        =  ProcurementCardStatementTransaction.Company

		ProcurementCardProgramCompaniesRel
			one-to-many relation to ProcurementCardProgramCompany
   			Field Mapping uses symbolic key
   				related.ProcurementGroup			   =  LocalProcurementGroup
   				related.ProcurementCardProgram         =  LocalProgram
		
		ProcurementCardStatementTaxTransactionDistributionRel is a ProcurementCardStatementTransactionDistribution set
			Instance Selection
				where (related.ProcurementChargeDistributionType.Tax)


		ProcurementCardStatementGoodsTransactionDistributionsRel is a ProcurementCardStatementTransactionDistribution set
			Instance Selection
				where (related.ProcurementChargeDistributionType.Goods)

		DistributionCodeCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company			   = LocalDistributionCodeCompany  
				
		PayablesDistributionCodeDetailsRel
    		one-to-many relation to PayablesDistributionCodeDetail
    		Field Mapping uses symbolic key
				related.VendorGroup                         = ProcurementGroup
    			related.PayablesDistributionCode			= LocalDistributionCode

		ProcurementCardNumbersRel
    		one-to-many relation to ProcurementCardNumber 
    		Field Mapping uses symbolic key
   				related.FinanceEnterpriseGroup			   	= actor.context.FinanceEnterpriseGroup
   				
   		ProcurementCardProgramRel
   			one-to-one relation to ProcurementCardProgram
   			Field Mapping uses symbolic key
   				related.ProcurementGroup         					= LocalProcurementGroup
   				related.ProcurementCardProgram     					= LocalProgram
   				
   		ProcurementCardStatementRel
   			one-to-one relation to ProcurementCardStatement
   			Field Mapping uses symbolic key
   				related.ProcurementGroup         					= LocalProcurementGroup
   				related.ProcurementCardProgram     					= LocalProgram
   				related.ProcurementCardStatement   					= LocalStatement
   		
   		ProcurementCardStatementTransactionTotalRel
   			one-to-many relation to ProcurementCardStatementTransaction
   			Field Mapping uses symbolic key
   				related.ProcurementGroup         					= LocalProcurementGroup
   				related.ProcurementCardProgram     					= LocalProgram
   				related.ProcurementCardStatement   					= LocalStatement
			Instance Selection 
				where (related.IsNotPurchaseOrderCharges
				and    related.ProcurementCardStatementTransaction.Company = LocalInvoiceCompany)
		
		NonPOTransactionsRel
   			one-to-many relation to ProcurementCardStatementTransaction
   			Field Mapping uses ByStatusNotPO
   				related.ProcurementGroup                        = LocalProcurementGroup
				related.ProcurementCardProgram                  = LocalProgram
				related.ProcurementCardStatement                = LocalStatement
   			

		DistributionsCreatedByFESRel
			one-to-many relation to ProcurementCardStatementTransactionDistribution
			Field Mapping uses symbolic key
				related.ProcurementGroup						= ProcurementGroup
				related.ProcurementCardProgram					= ProcurementCardProgram
				related.ProcurementCardStatement				= ProcurementCardStatement
				related.ProcurementCardStatementTransaction		= ProcurementCardStatementTransaction
			Instance Selection
				where (related.CreatedByFES)


		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
				
		FSMBODConfigurationPARel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1
        
        FSMBODConfigurationDetailPARel
        	one-to-many relation to FSMBODConfigurationDetail
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 			= 2	
            	related.FSMBODConfiguration.Noun 			= "PulseAlert"
            	related.FSMBODConfiguration.Direction 		= 1
            Instance Selection
				where (related.Alert						= LocalAlert
				and	   related.Enable)

		
	Sets
        Set2
            indexed
            Instance Selection
                where (IsNotPurchaseOrderCharges)
            Sort Order
            	ProcurementGroup
                ProcurementCardStatementTransaction.Company
                ProcurementCardStatement
                Merchant
                ProcurementCardStatementTransaction.TransactionNumber
                ProcurementCardProgram

        Set3
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardStatementTransaction.Company
                ProcurementCardStatement
                Vendor
                Merchant
                ProcurementCardStatementTransaction.TransactionNumber

        Set6
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardNumber
                ProcurementCardStatement
                TransactionDate 
                ProcurementCardStatementTransaction

        Set7
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardNumber
                ProcurementCardStatement
                Merchant
                ProcurementCardStatementTransaction
		
        ByTransaction
        	Sort Order
        		ProcurementGroup
        		ProcurementCardStatement
        		ProcurementCardStatementTransaction.Company
        		ProcurementCardStatementTransaction.TransactionNumber
        		ProcurementCardProgram
        
        ByStatusNotPO
        	Instance Selection
                where (IsNotPurchaseOrderCharges)
        	Sort Order
        		ProcurementGroup
        		ProcurementCardProgram
        		ProcurementCardStatement
        		Status
        		ProcurementCardStatementTransaction
        
        ByStatusPO
        	Instance Selection
                where (IsPurchaseOrderCharges)
        	Sort Order
        		ProcurementGroup
        		ProcurementCardProgram
        		ProcurementCardStatement
        		Status
        		ProcurementCardStatementTransaction
        
        ByDistributionOutOfBalance
        	Instance Selection
        		where (DistributionOutOfBalance)
        	Sort Order
        		ProcurementGroup
        		ProcurementCardProgram
        		ProcurementCardStatement
        		ProcurementCardStatementTransaction
        
        Set10
            indexed
            Sort Order
            	ProcurementGroup
                ProcurementCardProgram
                ProcurementCardNumber
                ProcurementCardStatement
                ItemCharge
                ProcurementCardStatementTransaction
                
	Field Rules	
		
		ProcurementCardNumber
			required
			cannot be changed
				
		Vendor
			default to PurchaseOrder.Vendor
			if (Vendor not entered
			and PurchaseOrder not entered
			and Merchant exists)
				if (MerchantCrossReferenceCount = 1)
					Vendor = first MerchantCrossReferencesRel.Vendor
		
		TransactionDate
            initial value is current corporate date
            default to current corporate date
            required
            
		ProcurementCardUser
			initial value is first ProcurementCardRequestsRel.ProcurementCardUser
			default to first ProcurementCardRequestsRel.ProcurementCardUser
			
		CardUserName
			initial value is DerivedCardUserName
			default to first DerivedCardUserName
		
		PurchaseOrder
			cannot be changed
			
			if (PurchaseOrderLine entered)
				required
			
		PurchaseOrderLine
			if (PurchaseOrder entered)
				required
		
		ItemCharge
			required
			
		Merchant
			if (PurchaseOrder !entered)
				required
		
		IncomeCode
			default to Merchant.IncomeCode
			if (Merchant.TaxID entered)	
				required
					"IncomeCodeIsRequiredWhenTaxIDIsEntered"                          //"@e.PD21.103"
		
		DistributionCompanyAndCode
			if (DistributionCompanyAndCode entered
			and LocalOldDistributionCode not entered
			and LocalCountOfAllDistributions > 0)
				constraint (ProcurementCardStatementGoodsTransactionDistributionsRel not exist)
					"CannotEnterBothAccountsAndDistributionCode"                                     // "@e.PD22.110"



				
			constraint (DistributionCompanyAndCode.DistributionCode.TotalPercent = 1) 
				"DistributionCodeMustEqualTo100%"

			if (DistributionCompanyAndCode.DistributionCode entered
			and DistributionCompanyAndCode.DistributionCodeCompany not entered)
				DistributionCompanyAndCode.DistributionCodeCompany = ProcurementCardStatementTransaction.Company 
				
		SearchDateRange
			constraint (SearchDateRange.Begin <= SearchDateRange.End)
				"From_\DateCannotBeGreaterThan_\To_\Date"		      							// "@e.PD20.111"
			
	Rule Blocks	
		ChecksToApprove		
			for each ProcurementCardStatementTransactionDistributionsRel
				
				LocalTotalDistributions += each.DistributionAmount
			
				if (each.ProcurementChargeDistributionType.Tax)
		
					LocalTotalTax       += each.DistributionAmount
					
			if (!FromExternal)
			
				constraint (!DistributionOutOfBalance)
					"DistributionsAreOutOfBalance"                                                                  //"@e.PD20.117"
			
			if (ProcurementCardStatement.Invoice entered)
				LocalInvoice = ProcurementCardStatement.Invoice
			else
				LocalInvoice = ProcurementCardStatement					
			if (ProcurementCardStatement.PostingDate entered)
				LocalInvoiceDate	= ProcurementCardStatement.PostingDate 
			else
				LocalInvoiceDate	= ProcurementCardStatement.StatementDate 			
				
		CreatePayablesInvoiceDistribution   
			constraint (PayablesInvoiceRel.Status.Released
			or          PayablesInvoiceRel.Status.Historical)
            	"InvoiceIsNotReleasedForCompany<PayablesInvoiceRel.Company>Vendor<PayablesInvoiceRel.Vendor>Invoice<PayablesInvoiceRel.Invoice>"

			invoke SetInvoiceToAmendedStatus  PayablesInvoiceRel           							   
			if (PostDate	entered																	
			and PostDate	!= PayablesInvoiceRel.DistributionDate)
				invoke UpdateDistributionAndTaxPointDates PayablesInvoiceRel
					invoked.NewDistributionDate	= PostDate

			LocalDistributionAmount          = ((ItemCharge - TaxAmount) * -1) 
			LocalTaxAmount                   = TaxAmount * -1
			invoke Create PayablesInvoiceDistribution
				invoked.Company                                       				   =  PayablesInvoiceRel.Company
				invoked.Vendor                                         				   =  PayablesInvoiceRel.Vendor
				invoked.PayablesInvoice		                          				   =  PayablesInvoiceRel.PayablesInvoice
				invoked.DistributionType                              				   =  "D"
				invoked.DistributionDate											   =  PostDate
				invoked.GLTPostingDate												   =  PostDate

				invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount	   =  LocalDistributionAmount 
				invoked.DistributionAmount.CurrencyAmount              				   =  LocalDistributionAmount
				invoked.DistributionAmount.ExchangeDate								   =  TransactionDate
				invoked.ProcurementCardStatement                      				   =  ProcurementCardStatement
				invoked.TransactionNumber                             				   =  ProcurementCardStatementTransaction.TransactionNumber	
				invoked.DistributionAccount                           				   =  ProcurementCardProgramCompanyRel.ClearingAccount
			
			if (TaxAmount entered)
				invoke Create PayablesInvoiceDistribution
					invoked.Company                                       				   =  PayablesInvoiceRel.Company
					invoked.Vendor                                         				   =  PayablesInvoiceRel.Vendor
					invoked.PayablesInvoice		                          				   =  PayablesInvoiceRel.PayablesInvoice
					invoked.DistributionType                              				   =  "D"
					invoked.DistributionDate											   =  PostDate
					invoked.GLTPostingDate												   =  PostDate

					invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount	   =  LocalTaxAmount
					invoked.DistributionAmount.CurrencyAmount              				   =  LocalTaxAmount
					invoked.DistributionAmount.ExchangeDate								   =  TransactionDate
					invoked.ProcurementCardStatement                      				   =  ProcurementCardStatement
					invoked.TransactionNumber                             				   =  ProcurementCardStatementTransaction.TransactionNumber	
					invoked.DistributionAccount                           				   =  ProcurementCardProgramCompanyRel.TaxAccount
					
			for each ProcurementCardStatementTransactionDistributionsRel

				if (each.ProcurementChargeDistributionType.Tax)
					initialize LocalTaxIndicator 
				else
					LocalTaxIndicator  = TaxIndicator

				invoke CreateInvoiceDistribution each
					invoked.PrmCompany				= PayablesInvoiceRel.Company
					invoked.PrmVendor				= PayablesInvoiceRel.Vendor
					invoked.PrmPayablesInvoice		= PayablesInvoiceRel.PayablesInvoice
					invoked.PrmDistributionType		= "D"
				
			invoke Amended.ReleaseAmendedInvoice PayablesInvoiceRel

		RulesForApproving
			include ChecksToApprove
						
			if (AutomaticallyCloseAdhocCharges
			and !FromExternal
			and  IsNotPurchaseOrderCharges)
				include CreatePayablesInvoiceDistribution
								
		UpdateProcurementCardStatementTransactionDistribution	

















				 				
























								
			if (DistributionCompanyAndCode changed)
				LocalDistributionCodeCompany = old DistributionCompanyAndCode.DistributionCodeCompany
				LocalDistributionCode = old DistributionCompanyAndCode.DistributionCode
				LocalOldDistributionCode = old DistributionCompanyAndCode.DistributionCode				
				
				for each PayablesDistributionCodeDetailsRel
					LocalDistributionAccountFromDistributionCode        = each.DistributionAccount
					if (ProcurementCardStatementTransactionDistributionsAcctRel exists)
						invoke Delete ProcurementCardStatementTransactionDistributionsAcctRel

				LocalCountOfAllDistributions = InstanceCountOfAllDistributions
				if (DistributionCompanyAndCode.DistributionCode entered
				and DistributionCompanyAndCode.DistributionCodeCompany not entered)
					DistributionCompanyAndCode.DistributionCodeCompany = ProcurementCardStatementTransaction.Company 
					
				if (DistributionCompanyAndCode entered)
					LocalDistributionCodeCompany    	  =  DistributionCompanyAndCode.DistributionCodeCompany
					LocalDistributionCode		    	  =  DistributionCompanyAndCode.DistributionCode
					LocalDistributionAmountForCode	      =  (ItemCharge - TaxAmount)
					LocalTotalDistributionAmountForCode   =  LocalDistributionAmountForCode

					for each PayablesDistributionCodeDetailsRel
						TempDistributionAmount	= LocalDistributionAmountForCode * (each.DistributionPercent)
						invoke Create ProcurementCardStatementTransactionDistribution
							fill in fields from this instance
							invoked.ProcurementChargeDistributionType			= "G"
							invoked.DistributionAccount							= each.DistributionAccount  
							invoked.DistributionAmount							= TempDistributionAmount

	StateCycles
		ProcurementCardStatementTransactionState is a StateCycle
			state field is Status
			
			Unreleased is a State
				Create is a Create Action
					restricted
					Action Rules
					
						constraint (ActivatedProcurementCardRequestsForProgramRel exists)
							"ProcurementCardNumberIsEitherNotActivatedOrNotValidForProgram"
						
						constraint (ProgramCompanyValid)
							"CompanyIsNotAParticipantInProcurementCardProgram"
							
						if (!TransientDistributionsExist
						and  IsNotPurchaseOrderCharges)

							constraint (ProcurementCardCompanyExists)
								"Company<ProcurementCardStatementTransaction.Company>IsNotAProcurementCardCompany"
						
							LocalDefaultDistributions = true
							
					Exit Rules
												
						if (LocalDefaultDistributions)	
							if (ProcurementCardCompanyRel.DistributionCode entered)
								DistributionCompanyAndCode.DistributionCode 		= ProcurementCardCompanyRel.DistributionCode
								DistributionCompanyAndCode.DistributionCodeCompany 	= ProcurementCardCompanyRel.Company
								
							if (DistributionCompanyAndCode entered)
								LocalDistributionCodeCompany    	  =  DistributionCompanyAndCode.DistributionCodeCompany
								LocalDistributionCode		    	  =  DistributionCompanyAndCode.DistributionCode
								LocalDistributionAmountForCode	      =  (ItemCharge - TaxAmount)
								LocalTotalDistributionAmountForCode   =  LocalDistributionAmountForCode
			
								for each PayablesDistributionCodeDetailsRel
									TempDistributionAmount	= LocalDistributionAmountForCode * (each.DistributionPercent)
									invoke Create ProcurementCardStatementTransactionDistribution
										fill in fields from this instance
										invoked.ProcurementChargeDistributionType			= "G"
										invoked.DistributionAccount							= each.DistributionAccount
										invoked.DistributionAmount							= TempDistributionAmount
										
							else
							if (ProcurementCardCompanyRel.DistributionAccount entered)
								invoke Create ProcurementCardStatementTransactionDistribution
									invoked.ProcurementGroup                                      = ProcurementGroup
									invoked.ProcurementCardProgram                                = ProcurementCardProgram
									invoked.ProcurementCardStatement                              = ProcurementCardStatement
									invoked.ProcurementCardStatementTransaction           		  = ProcurementCardStatementTransaction
									invoked.ProcurementChargeDistributionType                     = "G"
									invoked.DistributionAmount                                    = (ItemCharge - TaxAmount)
									invoked.DistributionAccount                                   = ProcurementCardCompanyRel.DistributionAccount

							if (TaxAmount entered)
								invoke Create ProcurementCardStatementTransactionDistribution
									invoked.ProcurementGroup                                      = ProcurementGroup
									invoked.ProcurementCardProgram                                = ProcurementCardProgram
									invoked.ProcurementCardStatement                              = ProcurementCardStatement
									invoked.ProcurementCardStatementTransaction           		  = ProcurementCardStatementTransaction
									invoked.ProcurementChargeDistributionType                     = "T"
									invoked.DistributionAmount                                    = TaxAmount
									invoked.DistributionAccount                                   = ProcurementCardProgramCompanyRel.TaxAccount
			
				Release is an Instance Action     
					restricted
					Parameters
						SendEmail	is Boolean
					Action Rules
						if (SendEmail)
							send email
								to ProcurementCardProgram.ProcurementCardProgramAdministrator.Employee.EmployeeWorkEmailAddress
								from ProcurementCardUser.EmployeeWorkEmailAddress
								subject "AChargeWasReleased"
								Contents
									"DearPurchaseCardAdmin,"
									"ThisIsAMessageToLetYouKnowThatAChargeHasBeenReleased."
									"Details:"
									"-_Program:<ProcurementCardProgram>"
									"-_ProcurementCardNumber:<ProcurementCardNumber.DisplayProcurementCardNumber>"
									"-_TransactionID:<ProcurementCardStatementTransaction.TransactionNumber>"
									"-_UserName:<ProcurementCardUser.Name>"
									"-_Date:<TransactionDate>"
									"-_Merchant:<Merchant>"
									"-_Amount:<ItemCharge>"
									"-_ReasonCode:<ProcurementCardReasonCode>"

									"-_PurchaseOrder:<PurchaseOrder>"
						
						make transition to Released
					
					Exit Rules
						if (ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
							LocalTriggerService = "ChargeReleasedService"
							invoke TriggerAlert
							invoke PcardChargeReleasedAlert
								invoked.PrmAlertName = "FSM_ION_PcardChargeReleasedAlert"
						
			Released is a State
				Approve is an Instance Action
					Action Rules
						include RulesForApproving
						
						if (AutomaticallyClosePOCharges
						or  AutomaticallyCloseAdhocCharges)
							make transition to Closed
						else

							send email
								to ProcurementCardProgram.ProcurementCardProgramAdministrator.Employee.EmployeeWorkEmailAddress
								from ProcurementCardUser.EmployeeWorkEmailAddress
								subject "AChargeWasApproved"
								Contents
									"DearPurchaseCardAdmin,"
									"ThisIsAMessageToLetYouKnowThatAChargeHasBeenApproved."
									"Details:"
									"-_Program:<ProcurementCardProgram>"
									"-_ProcurementCardNumber:<ProcurementCardNumber.DisplayProcurementCardNumber>"
									"-_TransactionID:<ProcurementCardStatementTransaction.TransactionNumber>"
									"-_UserName:<ProcurementCardUser.Name>"
									"-_Date:<TransactionDate>"
									"-_Merchant:<Merchant>"
									"-_Amount:<ItemCharge>"
									"-_ReasonCode:<ProcurementCardReasonCode>"

									"-_PurchaseOrder:<PurchaseOrder>"
							
							make transition to Approved
							
						if (!FromExternal)
							invoke Update ProcurementCardStatement
								invoked.ManualStatusChanges = true
							
						ApprovedDate = current corporate date
			
				Dispute is an Instance Action
					Action Rules
						if (ProcurementCardProgram.RequireReasonOnDispute)
							constraint (ProcurementCardReasonCode entered)
								"ReasonCodeIsRequiredToDisputeThisCharge"                                                   //"@e.PD20.104"

						if (IsNotValidToDisapprove)
							constraint (ProcurementCardProgram.RequireReasonOnDispute)
								"TransactionForAPOChargeCannotBeModified"                                               //"@e.PD20.128"

						
						send email
							to ProcurementCardProgram.ProcurementCardProgramAdministrator.Employee.EmployeeWorkEmailAddress
							from ProcurementCardUser.Employee.EmployeeWorkEmailAddress
							subject "AChargeWasDisputed"
							Contents
								"DearPurchaseCardAdmin,"
								"ThisIsAMessageToLetYouKnowThatAChargeHasBeenDisputed."
								"Details:"
								"-_Program:<ProcurementCardProgram>"
								"-_ProcurementCardNumber:<ProcurementCardNumber.DisplayProcurementCardNumber>"
								"-_TransactionID:<ProcurementCardStatementTransaction.TransactionNumber>"
								"-_UserName:<ProcurementCardUser.Name>"
								"-_Date:<TransactionDate>"
								"-_Merchant:<Merchant>"
								"-_Amount:<ItemCharge>"
								"-_ReasonCode:<ProcurementCardReasonCode>"

								"-_PurchaseOrder:<PurchaseOrder>"
						
						make transition to Disputed	
						if (ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
							LocalTriggerService = "ChargeDisputeService"	
							invoke TriggerAlert
							invoke PcardChargeDisputeAlert
								invoked.PrmAlertName = "FSM_ION_PcardChargeDisputeAlert"
						
						invoke Update ProcurementCardStatement
							invoked.ManualStatusChanges = true	
				
				Update is an Update Action
					Action Rules
						if (DistributionCompanyAndCode changed)
							include UpdateProcurementCardStatementTransactionDistribution	

			Approved is a State
				Reject is an Instance Action 
					Action Rules

						
						send email
							to ProcurementCardUser.EmployeeWorkEmailAddress
							from ProcurementCardProgram.ProcurementCardProgramAdministrator.Employee.EmployeeWorkEmailAddress
							subject "AChargeWasRejectedByTheAdministrator"
							Contents
								"DearCardholder,"
								"ThisIsAMessageToLetYouKnowThatAChargeHasBeenRejectedByTheAdministrator."
								"Details:"
								"-_Program:<ProcurementCardProgram>"
								"-_ProcurementCardNumber:<ProcurementCardNumber.DisplayProcurementCardNumber>"
								"-_TransactionID:<ProcurementCardStatementTransaction.TransactionNumber>"
								"-_UserName:<ProcurementCardUser.Name>"
								"-_Date:<TransactionDate>"
								"-_Merchant:<Merchant>"
								"-_Amount:<ItemCharge>"
								"-_ReasonCode:<ProcurementCardReasonCode>"

								"-_PurchaseOrder:<PurchaseOrder>"
							
						make transition to Rejected
						
						if (ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
							LocalTriggerService = "ChargeRejectedService"
							invoke TriggerAlert
							invoke PcardChargeRejectedAlert
								invoked.PrmAlertName = "FSM_ION_PcardChargeRejectedAlert"
						
						if (!FromExternal)
							invoke Update ProcurementCardStatement
								invoked.ManualStatusChanges = true
							
						initialize ApprovedDate
						
				Close is an Instance Action
					Action Rules

						constraint (not DistributionOutOfBalance)
							"DistributionsAreOutOfBalance"                                                                  //"@e.PD20.117"
						
						if (ProcurementCardStatement.Invoice entered)
							LocalInvoice = ProcurementCardStatement.Invoice
						else
							LocalInvoice = ProcurementCardStatement					
						if (ProcurementCardStatement.PostingDate entered)
								LocalInvoiceDate	= ProcurementCardStatement.PostingDate 
						else
								LocalInvoiceDate	= ProcurementCardStatement.StatementDate 			
				
						if (IsNotPurchaseOrderCharges)
							include CreatePayablesInvoiceDistribution											
						make transition to Closed
						
						if (!FromExternal)
							invoke Update ProcurementCardStatement
								invoked.ManualStatusChanges = true
				
				Update is an Update Action
			


						
			Disputed is a State
				Approve is an Instance Action
					Action Rules
						include RulesForApproving
						
						if (AutomaticallyClosePOCharges
						or  AutomaticallyCloseAdhocCharges)
							make transition to Closed
						else

							make transition to Approved
							
						if (!FromExternal)
							invoke Update ProcurementCardStatement
								invoked.ManualStatusChanges = true
							
						ApprovedDate = current corporate date
				
				Update is an Update Action
			


	
			Rejected is a State
				Approve is an Instance Action
					Action Rules
						include RulesForApproving
						
						if (AutomaticallyClosePOCharges
						or  AutomaticallyCloseAdhocCharges)
							make transition to Closed
						else

							make transition to Approved
							
						if (!FromExternal)
							invoke Update ProcurementCardStatement
								invoked.ManualStatusChanges = true

						ApprovedDate = current corporate date
						
				Update is an Update Action 



			Closed is a State

			Cancelled is a State
			
	Actions
		FastUpdate is an Update Action
			restricted
			bypass field rules
		
		Delete is a Delete Action
			restricted
		
		ApproveAllTransactions is a Set Action
			restricted
			
			Parameters
				ProcurementGroup 			
				ProcurementCardProgram 		
				ProcurementCardStatement 	
				
			Instance Selection
			
				where ((Status.Released
				or     Status.Rejected
				or     Status.Disputed)
				and   !DistributionOutOfBalance)
				
			Action Rules
			
				Set Rules
				
					Exit Rules
						invoke CalculateChargeValues ProcurementCardStatement
							invoked.PrmProcurementGroup      		= ProcurementGroup
							invoked.PrmProcurementCardProgram 		= ProcurementCardProgram
							invoked.PrmProcurementCardStatement 	= ProcurementCardStatement
				
				Instance Rules
					FromExternal = true
					if (Status.Released)
						invoke Released.Approve
							
					if (Status.Rejected)
						invoke Rejected.Approve
							
					if (Status.Disputed)
						invoke Disputed.Approve
							
			
		RejectAllTransactions is a Set Action
			restricted
			
			Parameters
				ProcurementGroup 			
				ProcurementCardProgram 		
				ProcurementCardStatement 	
				
			Instance Selection
			
				where (Status.Approved)
				
			Action Rules
			
				Set Rules
				
					Exit Rules
						invoke CalculateChargeValues ProcurementCardStatement
							invoked.PrmProcurementGroup      		= ProcurementGroup
							invoked.PrmProcurementCardProgram 		= ProcurementCardProgram
							invoked.PrmProcurementCardStatement 	= ProcurementCardStatement
				
				Instance Rules
				
					FromExternal = true
					invoke Approved.Reject
						
		CloseAllTransactions is a Set Action
			restricted
			
			Parameters
				PrmProcurementGroup 		is a ProcurementGroup			
				PrmProcurementCardProgram 	is a ProcurementCardProgram	
				PrmProcurementCardStatement is a ProcurementCardStatement	
				
			Instance Selection
			
				where (Status.Approved
				and    PrmProcurementGroup 			= ProcurementGroup
				and	   PrmProcurementCardProgram 	= ProcurementCardProgram
				and	   PrmProcurementCardStatement 	= ProcurementCardStatement)
				
			Action Rules
			
				Set Rules
				
					Exit Rules
						invoke CalculateChargeValues ProcurementCardStatement
							invoked.PrmProcurementGroup      		= PrmProcurementGroup
							invoked.PrmProcurementCardProgram 		= PrmProcurementCardProgram
							invoked.PrmProcurementCardStatement 	= PrmProcurementCardStatement
										
				Instance Rules
				
					FromExternal = true
					invoke Approved.Close
		
		ReleaseAndInvoiceProcurementCardTransactions is a Set Action
			restricted
			Parameters
				PrmProcurementGroup			 is a ProcurementGroup
					default label is "ProcurementGroup"             
				PrmProgram                   is a ProcurementCardProgram
					default label is "Program"
				PrmStatement                 is a ProcurementCardStatement
					default label is "Statement"
				PrmInvoice                   is like Invoice
					default label is "Invoice"
				SendEmail                    is Boolean
					default label is "SendEmailToProcurementCardUser"
			
			Parameter Rules
        	
        		PrmProcurementGroup
        			required
        		
        		PrmProgram
        			required
        			
        			LocalProcurementGroup = PrmProcurementGroup
        			LocalProgram          = PrmProgram
        			LocalStatement        = PrmStatement
        			LocalVendor           = PrmProgram.Vendor
        			for each ProcurementCardProgramCompaniesRel
						constraint (each.HasDefaultProcessLevel)
							"ADefaultProcessLevelCouldNotBeFoundForAllCompanies"
							


					
					constraint (VendorActive)
						"ProgramPayVendor<PrmProgram.Vendor>IsNotActive"
						
					if (!HasAdhocTransactions)
        				confirmation required
        					"StatementHasNoAdhocTransactions;PurchaseOrderTransactionsWillBeReleased;SelectYesToContinue"
        		
        		PrmStatement
        			required
        		
        		PrmInvoice
        			LocalVendor 		= PrmProgram.Vendor
        			LocalCompany 		= PrmStatement.Company 
        			LocalTestInvoice  	= PrmInvoice
        			initial value is PrmStatement
        			default to PrmStatement
        			if (PrmInvoice entered)
        				constraint (!InvoiceAlreadyExists)
        					"Invoice<PrmInvoice>AlreadyExistsForVendor;MustEnterADifferentInvoiceNumber"
			
			Action Rules
			
				Set Rules 
				
					Entrance Rules
						invoke InvoiceAndReleaseProcurementCardTransactions
							invoked.ProcurementGroup    = PrmProcurementGroup
							invoked.PrmProgram          = PrmProgram
							invoked.PrmStatement        = PrmStatement
							invoked.PrmInvoice          = PrmInvoice
		        			invoked.SendEmail           = SendEmail
		
		InvoiceAndReleaseProcurementCardTransactions is a Set Action
  			restricted   
  			Parameters
				ProcurementGroup             
				PrmProgram                   is like ProcurementCardProgram
				PrmVendor					 is like Vendor
				PrmStatement                 is like ProcurementCardStatement
				PrmInvoice                   is like Invoice
				SendEmail                    is Boolean
				
			Instance Selection
				where (ProcurementGroup 		= ProcurementGroup
				and    ProcurementCardProgram   = PrmProgram
				and    ProcurementCardStatement = PrmStatement)
			
			Local Fields
			
				LocalPayablesInvoiceView		is a PayablesInvoice view
			
			Sort Order 
				ProcurementCardProgram
				ProcurementCardStatement
				ProcurementCardStatementTransaction.Company
				ProcurementCardUser
				ProcurementCardStatementTransaction.TransactionNumber
				
			Action Rules
			
				
				ProcurementCardStatement Set Rules
				
					Entrance Rules
						
						invoke Update ProcurementCardStatement
							invoked.Invoice                     = PrmInvoice	
				
				ProcurementCardStatementTransaction.Company Set Rules
					Entrance Rules
						
						LocalProcurementGroup 	= ProcurementGroup
						LocalProgram          	= PrmProgram
						LocalVendor				= PrmVendor
						LocalStatement        	= PrmStatement
						LocalInvoiceCompany 	= ProcurementCardStatementTransaction.Company
						if (NonPOTransactionsRel exists
						and NoInvoiceExistsForCompany)
							invoke CreateInvoice Unreleased PayablesInvoice
								assign result to LocalPayablesInvoiceView
								fill in user fields from ProcurementCardStatementRel
								invoked.Company       										= ProcurementCardStatementTransaction.Company
								invoked.Invoice       										= PrmInvoice
								invoked.Vendor        										= ProcurementCardProgramRel.Vendor
								if (ProcurementCardStatementRel.PostingDate entered)
									invoked.InvoiceDate   									= ProcurementCardStatementRel.PostingDate 
								else
									invoked.InvoiceDate   									= ProcurementCardStatementRel.StatementDate 
								invoked.ProcurementCardProgram 								= PrmProgram
								invoked.ProcurementCardStatement 							= PrmStatement
								invoked.TermsCode											= DerivedTermsCode
								invoked.DueDate												= DerivedDueDate
								invoked.DiscountAmount              						= ProcurementCardStatementRel.DiscountAmount
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount = ProcurementCardStatementRel.AdHocTotal
								invoked.InvoiceAmount.CurrencyAmount	 					= ProcurementCardStatementRel.AdHocTotal
								if (ProcurementCardStatementRel.AdHocTotal < 0)
									invoked.InvoiceType = "C"
							
					Exit Rules
					
						LocalInvoiceCompany = ProcurementCardStatementTransaction.Company
						LocalInvoice        = LocalPayablesInvoiceView.PayablesInvoice
						
						invoke CalculateChargeValues ProcurementCardStatement
							invoked.PrmProcurementGroup      		= ProcurementGroup
							invoked.PrmProcurementCardProgram 		= PrmProgram
							invoked.PrmProcurementCardStatement 	= PrmStatement
						
						invoke Release PayablesInvoiceNewRel
							resume on error		

				ProcurementCardUser Set Rules
					Exit Rules
					
						if (!AutomaticallyApproveAdhocCharges
						and !AutomaticallyApprovePOCharges
						and  SendEmail)
							LocalProcurementGroup 	= ProcurementGroup
							LocalProgram          	= PrmProgram
							LocalStatement        	= PrmStatement
							send email
								to ProcurementCardUser.Employee.EmployeeWorkEmailAddress
								cc first ProcurementCardRequestsRel.ProcurementCardProxyUser.EmployeeWorkEmailAddress
								from config.DefaultFromEmailAddress
								subject "YouHaveCreditCardChargesReadyToApprove"
								Contents
									"YouHaveCreditCardChargesReadyToApprove"
									"ProcurementCardNumber:<ProcurementCardNumber.DisplayProcurementCardNumber>"
									"ProgramName:<PrmProgram>"
									"CardUser:<DerivedCardUserName>"
									"StatementName:<PrmStatement>"
									"StatementDate:<ProcurementCardStatementRel.StatementDate>"
				
				Instance Rules
				
					if (IsNotPurchaseOrderCharges)
						if (AutomaticallyApproveAdhocCharges
						and AutomaticallyCloseAdhocCharges)
							for each ProcurementCardStatementTransactionDistributionsRel

								invoke CreateInvoiceDistribution each
									invoked.PrmCompany				= ProcurementCardStatementTransaction.Company
									invoked.PrmVendor				= ProcurementCardProgram.Vendor
									invoked.PrmPayablesInvoice		= LocalPayablesInvoiceView.PayablesInvoice
									
						else
							invoke Create PayablesInvoiceDistribution 
								invoked.Company      													= ProcurementCardStatementTransaction.Company
								invoked.PayablesInvoice 												= LocalPayablesInvoiceView.PayablesInvoice
								invoked.DistributionAccount 											= ProcurementCardProgramCompanyRel.ClearingAccount
								invoked.ProcurementCardStatement 										= ProcurementCardStatement
								invoked.TransactionNumber       										= ProcurementCardStatementTransaction.TransactionNumber
								invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount  	   	= ItemCharge - TaxAmount
								invoked.DistributionAmount.CurrencyAmount              				   	= ItemCharge - TaxAmount
					
							if (TaxAmount entered)
								invoke Create PayablesInvoiceDistribution 
									invoked.Company      													= ProcurementCardStatementTransaction.Company
									invoked.PayablesInvoice 												= LocalPayablesInvoiceView.PayablesInvoice
									invoked.DistributionAccount 											= ProcurementCardProgramCompanyRel.TaxAccount
									invoked.ProcurementCardStatement 										= ProcurementCardStatement
									invoked.TransactionNumber       										= ProcurementCardStatementTransaction.TransactionNumber
									invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount  	   	= TaxAmount
									invoked.DistributionAmount.CurrencyAmount              				   	= TaxAmount
								
					if (!Status.Released)
						invoke Release
							invoked.SendEmail = SendEmail
					
					if (AutomaticallyApprovePOCharges
					or  AutomaticallyApproveAdhocCharges)
						FromExternal = true
						invoke Released.Approve 	
				

		FrontEndSplitDistributions	is an Instance Action
			valid when(AllowFrontEndSplitAction)
			Action Rules
				invoke SplitFESDistributions ProcurementCardStatementTransactionDistribution in foreground
					invoked.PrmProcurementGroup			= ProcurementGroup
					invoked.PrmProcurementCardProgram	= ProcurementCardProgram
					invoked.PrmProcurementCardStatement	= ProcurementCardStatement
					invoked.PrmCompany					= ProcurementCardStatementTransaction.Company
					invoked.PrmTransactionNumber		= ProcurementCardStatementTransaction.TransactionNumber
		
		DeleteFrontEndSplitDistributions	is an Instance Action
			valid when(HasFrontEndSplitDistributions)
			Action Rules
				invoke DeleteFrontEndSplitDistributions ProcurementCardStatementTransactionDistribution
					invoked.PrmProcurementGroup			= ProcurementGroup
					invoked.PrmProcurementCardProgram	= ProcurementCardProgram
					invoked.PrmProcurementCardStatement	= ProcurementCardStatement
					invoked.PrmCompany					= ProcurementCardStatementTransaction.Company
					invoked.PrmTransactionNumber		= ProcurementCardStatementTransaction.TransactionNumber

		SplitAllChargesDistributions	is a Set Action
			restricted
			Parameters
				PrmProcurementGroup				is a ProcurementGroup
					default label is "ProcurementGroup"
				PrmProcurementCardProgram		is a ProcurementCardProgram
					default label is "ProcurementCardProgram"
				PrmProcurementCardStatement		is a ProcurementCardStatement
					default label is "ProcurementCardStatement"
			Parameter Rules
				PrmProcurementGroup
					required
				PrmProcurementCardProgram
					required
				PrmProcurementCardStatement
					required
			Instance Selection
				where (ProcurementGroup = PrmProcurementGroup
				and ProcurementCardProgram = PrmProcurementCardProgram
				and ProcurementCardStatement = PrmProcurementCardStatement
				and AllowFrontEndSplitAction)
			Action Rules
				Instance Rules
					invoke FrontEndSplitDistributions
		
		DeleteFrontEndSplitAllChargesDistributions	is a Set Action
			restricted
			Parameters
				PrmProcurementGroup				is a ProcurementGroup
					default label is "ProcurementGroup"
				PrmProcurementCardProgram		is a ProcurementCardProgram
					default label is "ProcurementCardProgram"
				PrmProcurementCardStatement		is a ProcurementCardStatement
					default label is "ProcurementCardStatement"
			Parameter Rules
				PrmProcurementGroup
					required
				PrmProcurementCardProgram
					required
				PrmProcurementCardStatement
					required
			Instance Selection
				where (ProcurementGroup = PrmProcurementGroup
				and ProcurementCardProgram = PrmProcurementCardProgram
				and ProcurementCardStatement = PrmProcurementCardStatement
				and HasFrontEndSplitDistributions)
			Action Rules
				Instance Rules
					invoke DeleteFrontEndSplitDistributions




	
		TriggerAlert is an Instance Action
			restricted
			Action Rules
				trigger LocalTriggerService PA service		
					resume on error
					title is "EG:<ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup>PCardStatement:<ProcurementCardStatement>"
					Criteria
						ProcurementGroup.BusinessGroup.FinanceEnterpriseGroup
						ProcurementCardStatementTransaction.Company
					Variables
						ProcurementCardStatementTransaction.Company
							variable name is Company
						ProcurementCardProgram
						ProcurementCardNumber
						Merchant
						ProcurementCardUser
						CardUserName
						ProcurementCardStatementTransaction.TransactionNumber
							variable name is TransacitonNumber
						ProcurementCardStatement
						TransactionDate
						ItemCharge	

		PcardChargeDisputeAlert is an Instance Action
			restricted
			Parameters
				PrmAlertName	is Alpha size 100
			Action Rules
				LocalAlert = PrmAlertName
				if (FSMBODConfigurationPARel.Enable)
      				if(FSMBODConfigurationDetailPARel.Enable)		
						invoke TriggerPulseAlert FSMBODConfigurationPARel
							invoked.PrmActorGroup 	= "PCARDADMIN" 
							invoked.PrmMainXML 		= PcardChargeDisputeXML	
							invoked.PrmDescription	= PcardChargeDisputeDesc
							invoked.PrmBODID		= DerivedPCardDisputeBODID	


		PcardChargeRejectedAlert is an Instance Action
			restricted
			Parameters
				PrmAlertName	is Alpha size 100
			Action Rules
				LocalAlert = PrmAlertName
				if (FSMBODConfigurationPARel.Enable)
      				if(FSMBODConfigurationDetailPARel.Enable)		
						invoke TriggerPulseAlert FSMBODConfigurationPARel
							invoked.PrmActorGroup 	= "PCARDADMIN" 
							invoked.PrmMainXML 		= PcardChargeRejectXML	
							invoked.PrmDescription	= PcardChargeRejectDesc
							invoked.PrmBODID		= DerivedPCardRejectBODID	


		PcardChargeReleasedAlert is an Instance Action
			restricted
			Parameters
				PrmAlertName	is Alpha size 100
			Action Rules
				LocalAlert = PrmAlertName
				if (FSMBODConfigurationPARel.Enable)
      				if(FSMBODConfigurationDetailPARel.Enable)		
						invoke TriggerPulseAlert FSMBODConfigurationPARel
							invoked.PrmActorGroup 	= "PCARDADMIN" 
							invoked.PrmMainXML 		= PcardChargeReleasedXML	
							invoked.PrmDescription	= PcardChargeReleaseDesc
							invoked.PrmBODID		= DerivedPCardReleaseBODID	

										
										
