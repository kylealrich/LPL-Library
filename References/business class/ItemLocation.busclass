ItemLocation is a BusinessClass
	owned by ic
	prefix is ITL
	classic name is ITEMLOC

	Ontology
		symbolic key is ItemLocation
			classic set name is ITLSET1
			classic name for InventoryLocation is LOCATION

	Patterns
		implements StaticJava
		implements ForceUIRefreshOnStale
		disable AuditIndex
		implements BODId
		implements AnalyticCube
			disable continuous update
			dynamically calculate totals
			write to base level only

	Persistent Fields

		GeneralLedgerCategory
			default label is "InventoryLocationAccountGroup"
			classic name is GL-CATEGORY
		Buyer
			classic name is BUYER-CODE
		DefaultTransactionUOM                     is a UnitOfMeasureEdit
			classic name is UNIT-OF-MEASURE-EDIT
			classic name for DefaultTransactionUOM.UnitOfMeasure is UOM
		PurchaseTaxable
			classic name is PURCH-TAX-FL
		PurchaseTaxCode                           is a TaxCode
			classic name is PURCH-TAX-CD
		TaxableWhenSold                           is Boolean
			classic name is SELL-TAX-FL
		SellTaxCode                               is a TaxCode
			classic name is SELL-TAX-CD
		StandardCost                              is an InternationalCost
			classic name is STD-COST
		FutureStandardCost                        is an InternationalCost
			classic name is FUT-STD-COST

		StockOnHandQuantity                       is a Quantity
			classic name is SOH-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		SecondaryQuantity                         is a Quantity
			classic name is SECONDARY-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		AllocatedQuantity                         is a Quantity
			classic name is ALLOC-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		UnallocatedQuantity                       is a Quantity
			classic name is UNALLOC-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		BackorderedQuantity                       is a Quantity
			classic name is BACKORD-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		InProcessQuantity                         is a Quantity
			classic name is IN-PROC-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		OnOrderQuantity                           is a Quantity
			classic name is ONORDER-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		IntransitQuantity                         is a Quantity
			classic name is INTRANS-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		WorkInProgressQuantity                    is a Quantity
			classic name is WIP-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		InspectionHoldQuantity                    is a Quantity
			classic name is HOLD-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing

		ReservedQuantity		  			  	  is a Quantity
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing

		UnreservedQuantity		  			  	  is a Quantity
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing

		InspectionHoldCatchWeightQuantity         is a Quantity
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		KitchenInProcessQuantity				  is a Quantity
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		MovementClass                             is AlphaUpper size 1
			classic name is MOVE-CLASS
			States
				MovementClass1 value is "1"
				MovementClass2 value is "2"
				MovementClass3 value is "3"
		MovementRank                              is Numeric size 5
			classic name is MOVE-RANK
		StorageCode
		PreferredBin                              is a Bin
			classic name is PREFER-BIN
			delete ignored
		MinimumOrderQuantity                      is an UnsignedQuantity
			classic name is MIN-ORDER
			precision is Item.NumberOfDecimalsQuantity
		MaximumOrderQuantity                      is an UnsignedQuantity
			classic name is MAX-ORDER
			precision is Item.NumberOfDecimalsQuantity
		ReorderPolicy
			classic name is ORDER-POLICY
		ReorderDocument                           is AlphaUpper size 1
			classic name is REORD-DOC-CD
			States
				NoDocumentCreated         value is "N"
				PurchaseOrder             value is "P"
				Requisition               value is "R"
				IntransitDocument         value is "X"
				TransferDocument          value is "T"
				IssueDocument             value is "I"
				WorkOrder                 value is "W"
		ReorderQuantityCode
			classic name is REORD-QTY-CD

		ReorderPointCode
			classic name is REORD-PT-CD
		ReorderQuantity                           is an UnsignedQuantity
			classic name is REORDER-QTY
			precision is Item.NumberOfDecimalsQuantity
		ReorderPoint                              is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
		SuggestedReorderPoint                     is an UnsignedQuantity
			classic name is SUGG-REORD-PT
			precision is Item.NumberOfDecimalsQuantity
		AverageUtilization						  is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
		LeadtimeControl                           is AlphaUpper size 1
			classic name is LEAD-CTRL-CD
			States
				ManuallyEntered  value is "M"
				NeedsReview      value is "R"
				SystemCalculates value is "S"
		LeadtimeDays
		LastLeadtime                              is a LeadtimeDays
			protected
			disable Auditing
		PreviousLeadtime                          is a LeadtimeDays
			classic name is PREV-LEADTIME
			protected
			disable Auditing
		AutomaticPurchaseOrder                    is Boolean
			classic name is AUTO-PO
		OrderMultiple
			classic name is ORDER-MULT

		EconomicOrderQuantity                     is an UnsignedQuantity
			classic name is EOQ
			precision is Item.NumberOfDecimalsQuantity
		SafetyStock                               is an UnsignedQuantity
			precision is Item.NumberOfDecimalsQuantity
		Manufacturer
			delete ignored
			classic name for Manufacturer.ManufacturerCode is MANUF-CODE
			classic name for Manufacturer.ManufacturerDivision is MANUF-DIVISION
		ManufacturerNumber
			classic name is MANUF-NBR
		SelectForSpecialCycleCount                is Boolean
			classic name is SP-CYCLE-CNT
		LastCountDate                             is Date
			classic name is LAST-COUNT-DT
		ForecastNumber							  is a InventoryForecast
			classic name is FORECAST-NBR
		PatientChargeable                         is Boolean
			classic name is CHARGEABLE-FL
		InventoryTracked                          is Boolean
			classic name is TRACKING-FL
		BinTracked                                is Boolean
			classic name is BIN-TRACK-FL

		AllowReceipt                              is Boolean
			classic name is ALLOW-REC-FL
		AllowIssue                                is Boolean
			classic name is ALLOW-ISS-FL
		InspectionRequired                        is Boolean
			classic name is INSP-REQ-FL
		HasTransactionActivity                    is Boolean
			classic name is ACTIVITY-FL
		FrozenForPhysicalInventory                is Boolean
			classic name is FREEZE-FL
			protected
		FreezeDate                                is Date
			classic name is FREEZE-DT
			protected
		LastIssueDate                             is Date
			classic name is LAST-ISSUE-DT
			disable Auditing
			protected
		LastUpdateDate                            is TimeStamp
			classic name is LAST-UPD-DT
			disable Auditing
		TransactionCounter
			classic name is TRAN-COUNTER
			protected
			disable Auditing
		LastReceiptDate                           is Date
			classic name is LAST-REC-DT
			disable Auditing
			protected

		LastTurnoverCalculationDate               is Date
			classic name is LAST-TURN-DT
			disable Auditing
		MSDSDate                                  is Date
			classic name is MSDS-DT
		MSDSOrder                                 is Boolean
			classic name is MSDS-ORDER-FL
		MSDSDocument
		MSDSVersion
		AverageStockOnHandQuantity                is like Quantity
			classic name is AVG-SOH-QTY
			precision is Item.NumberOfDecimalsQuantity
			protected
			disable Auditing
		TurnoverRate                              is Decimal size 6.1
			classic name is TURN-RATE
		LastReceiptCost                           is an InternationalCost
			classic name is LAST-REC-COST
			disable Auditing
		LastIssueCost                             is an InternationalCost
			classic name is LAST-ISS-COST
			protected
			disable Auditing
		AverageAddOnCost                          is an InternationalCost
			classic name is AVG-ADD-ON-CST
			protected
			disable Auditing

		AverageCost                               is an InternationalCost
			protected
			disable Auditing
		OverheadUnitCost                          is an InternationalCost
			classic name is OVERHEAD-UCOST
		MarketPrice                               is an InternationalCost
		TransactionCount
			classic name is TRANS-COUNT
			disable Auditing
		CountAccuracy                             is an AccuracyClass1
			classic name is CNT-ACCURACY
		AddedDate                                 is Date
		Active                                    is Boolean
			classic name is ACTIVE-STATUS
		UserField1                                is AlphaUpper size 30
			classic name is USER-FIELD1
		UserField2
			classic name is USER-FIELD2
		UserField3                                is a UserField2
			classic name is USER-FIELD3

		UserFieldN1                               is an InternationalCost
			classic name is USER-FIELD-N1
		UserFieldN2                               is an InternationalCost
			classic name is USER-FIELD-N2
		UserFieldN3                               is an InternationalCost
			classic name is USER-FIELD-N3
		ReceivingDays
			classic name is PROC-DAYS
		Consignment                               is Boolean
			classic name is CONSIGNMENT-FL
		NoCharge                                  is Boolean
			classic name is NO-CHARGE-FL
		LotTracked
			classic name is LOT-TRACK-FL
		SerialTracked
			classic name is SER-TRACK-FL
		UDITracked
			classic name is UDI-TRACK-FL
		DropshipPurchaseOrderForCustomerOrderLine is Boolean
			sql name is DPOrderForCustomerOrderLine
			classic name is OE-DROPSHIP-FL

		CreatePurchaseOrderForCustomerOrderLine   is Boolean
			sql name is CPOrderForCustomerOrderLine
			classic name is OE-CREATEPO-FL
		MaximumSaleQuantity                       is an UnsignedQuantity
			classic name is OE-MAX-SALEQTY
			precision is Item.NumberOfDecimalsQuantity
		MinimumSaleQuantity                       is an UnsignedQuantity
			classic name is OE-MIN-SALEQTY
			precision is Item.NumberOfDecimalsQuantity
		AllowCustomerOrderReturns				is AlphaUpper 1
			classic name is OE-ALLOW-RTN
			States
				Yes				value is "Y"
				No				value is "N"
				Limit			value is "L"
		CustomerOrderReturnDate                   is Date
			classic name is OE-RTN-DATE
		DefaultSourceUOM                          is a UnitOfMeasureEdit
			classic name for DefaultSourceUOM.UnitOfMeasure is SOURCE-UOM
		SupplementalUOM							  is a UnitOfMeasureEdit
			default label is "SupplementalUOM"
		ItemLocationStockUOM					  is a UnitOfMeasureEdit
		GeographicalType                          is a GISType
			classic name is GEO-TYPE
		GeographicalLatitude                      is a GISCoordinate
			classic name is GEO-LATITUDE
		GeographicalLongitude                     is a GISCoordinate
			classic name is GEO-LONGITUDE

		GeographicalAltitude                      is a GISCoordinate
			classic name is GEO-ALTITUDE
		GeographicalDate                          is TimeStamp
			classic name is GEO-DATE
		GlobalLineType
			classic name is GLBL-LINE-TYPE
		ChargeNumber
		PreferredHoldBin							is a Bin				
			classic name is PREF-HOLD-BIN
		MaximumRequisitionQuantity					is an UnsignedQuantity
		FromWorksheetResult         				is an ItemInformationWorksheetResult
		NumberOfBins								is Numeric 6
		ManufacturerNumberStripped					is a ManufacturerNumber
		Discontinued								is Boolean
		IncludeUnreservedForReorder					is Boolean
			restricted
			protected

		UseKanban								is Boolean
		KanbanWithExpiry						is Boolean
			default label is "WithExpiry"
		KanbanNumberOfBins						is Unsigned Decimal 3.0
			default label is "NumberOfBins"
		KanbanItemNotes							is Alpha size up to 300

		LastCycleCountDate							is Date

	Local Fields
		LocalUom		      			is like UnitOfMeasure
		LocalLot		      			is like ItemLot
		LocalSubLot		      			is like Sublot
		LocalBin		      			is like Bin
		LocalDocumentNumber   			is like InventoryTransaction
		LocalLineNumber       			is like LineNumber
		LocalFromCopy         			is Boolean
		LocalEnteredUOM					is a UnitOfMeasure

		LocalMinimumBatchesNeeded		is Numeric size 5
		LocalCountQuantity	  			is like Quantity
		LocalActionCode					is an ActionCode
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		LocalFinanceEnterpriseGroup     is like FinanceEnterpriseGroup
		LocalBaseCost                   is an InternationalAmount
		LocalAccountingEntity       is like AccountingEntity
		LocalCompany				is like Company
		LocalInventoryReportGroup   is an InventoryReportGroup
		LocalSOHAllocatedQuantityTotal	is like Quantity
		LocalAllocatedQuantityFromDemand	is like Quantity
		LocalBackorderedQuantityFromDemand	is like Quantity
		LocalComputeFromDemandLine			is Boolean
		LocalTotalOpenQuantity		is like Quantity
		LocalTotalExtendedCost		is like Quantity
		LocalReorderDifferenceQuantity	is like Quantity
		LocalCalculatedReorderQuantity	is like Quantity
		LocalExpectedDeliveryDate		is Date
		LocalShelfLocation				is like Bin

		ProcurementCostDefault
		Execute							is Boolean
		CostDefaultingDone				is Boolean
		UOMCalculation
		LocationItemUOMConversion
		LocalPurchaseOrder				is like PurchaseOrder
		LocalDemandDocumentNumber		is like DemandDocument
		LocalDemandLine					is like LineNumber
		LocalBODTrigger					is Boolean
		LocalNativeBODTrigger			is Boolean			
		LocalNativeLPLBODTrigger	is Boolean				
		LocalBODCrossReferenceAE	is Alpha size up to 200	
		ActionThread
		LocalSource					is Alpha size 50
		AuditError					is Boolean
		AuditErrMsg					is Alpha 150
		LocalTriggerFrom			is Alpha 20
		LocalQuantity				is like Quantity
		LocalSupplementalComputed						is Boolean
		LocalAvailableQuantityInSupplementalUOM			is like Quantity
		LocalStockOnHandQuantityInSupplementalUOM 		is like Quantity
		LocalUnallocatedQuantityInSupplementalUOM 		is like Quantity
		LocalAllocatedQuantityInSupplementalUOM 		is like Quantity
		LocalInProcessQuantityInSupplementalUOM 		is like Quantity
		LocalBackorderedQuantityInSupplementalUOM 		is like Quantity
		LocalInspectionHoldQuantityInSupplementalUOM	is like Quantity
		LocalOnOrderQuantityInSupplementalUOM 			is like Quantity
		LocalWorkInProgressQuantityInSupplementalUOM  	is like Quantity
		LocalIntransitQuantityInSupplementalUOM  		is like Quantity
		LocalKitchenInProcessQuantityInSupplementalUOM  is like Quantity
		LocalUnreservedQuantityInSupplementalUOM 		is like Quantity
		LocalReservedQuantityInSupplementalUOM			is like Quantity
		LocalStockUOM		      						is like UnitOfMeasure	


		LocalInventoryLocation				is like InventoryLocation
		NewInventoryTransaction				is an InventoryTransaction view
		LocalInventoryTransaction			is an InventoryTransaction
		LocalInventoryTransactionSystemCode	is an TransactionSystemCode
		NewInventoryTransactionLine 		is an InventoryTransactionLine view
		LocalInventoryTransactionLine 		is an InventoryTransactionLine

		LocalCrossAccountingEntity 			is Alpha 40
		LocalCleanDocIDCrossReferenceAE 	is Alpha 40
		
		LocalCurrentInventoryValue		is like InternationalAmount
		LocalFromBinGroupDetail				is Boolean
		LocalInventoryControlResult		is like InventoryControlResult

		LocalFromCompany					is like Company
		LocalFromLocation					is like InventoryLocation
		LocalItem							is like Item
		LocalCreateFromCopy					is Boolean
		NewBODTracker  				is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
		CreatedFromBinGroupDetail 	is Boolean
	    LocalConfigurationParameter	is Alpha size up to 200
	    LocalAEAlreadyExecuted		is Boolean
	    LocalBODAEAlreadyExecuted	is Boolean
	    LocalCrossAEValue			is Alpha 40
		LocalUnitOfMeasure			is like UnitOfMeasure
		OldManufacturer             is like Manufacturer
		OldManufacturerNumber       is a ManufacturerNumber 
		FromDeleteForConsolidated   is Boolean 
		FromCreateForConsolidated   is Boolean 

		LocalLabelType				        is a MobileSupplyChainLabelType
		LocalLastKanbanItemBinCode			is Numeric 4

		LocalCycleCount						is Boolean
		LocalTimeStampInGMT					is a TimeStampInGMT
	    LocalDateForValidation				is Date
		LocalGeneralLedgerDateValidation	is Boolean
		LocalTransactionDateValidation		is Boolean
		LocalTransactionDate				is Date
		LocalLoopCounter					is Numeric 2
		LocalValidTransactionDate			is Boolean
		LocalFutureYearPerOne				is Date

	Context Fields
		Requisition
		CustomerOrder
		CustomerOrderLine
		WarehouseDemandLine
		WarehouseDemand
		RevenueCenter					
		AuditDateRange					is a DateRange
		LastIssueCutoffDate				is a AsOfDate
		CutoffPercentage				is a PercentOfSales
		InventoryTransaction
		InventoryTransactionLine
		TransactionSystemCode
		PayablesInvoice
		PayablesInvoiceDetail
		FSMInboundBODTracker

		AlternateToCompanyLocation


	Transient Fields
		CopyConsignment			is Boolean
		BinSequence				is Numeric size 6
			derive value from BinGroupDetailRel.BinGroupDetail
			scannable
		ReplenishFrom
			derive value from DerivedReplenishFrom
		VendorAndPurchaseFrom
		TransFromCompany		is a Company
			derive value from first RequestingLocationForinventoryLocRel.FromCompanyLocation.FromCompany
		Vendor
			derive value from DerivedVendor
		PurchaseFromLocation
			derive value from DerivedPurchaseFromLocation

		ParLocationCount		is like Quantity
			derive value from DerivedParLocationCount
			precision is Item.NumberOfDecimalsQuantity

		LocalRejectComment		is Alpha size up to 500
		TransientShelfLocation	is a Bin
			derive value from PreferredBin
		TransientQuantity		is a Quantity
		TransientUOM			is a UnitOfMeasure
		TransientShipDate		is Date
		TransientSelect			is Boolean
		TransientSupplementalUOMMultiplier					is like UOMMultiplier
			derive value from DerivedSupplementalUOMMultiplier
		TransientLocationStockUOMMultiplier					is like UOMMultiplier
			derive value from DerivedLocationStockUOMMultiplier

		TransientOnline			is Alpha size 1
			derive value from DeriveReturnYes
		TransientOnlineReorder	is Alpha size 1
			derive value from DeriveReturnYes
		TransientReorderPointInLocationStockUOM				is like UnsignedQuantity
			derive value from DerivedReorderPointInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientReorderQuantityInLocationStockUOM			is like UnsignedQuantity
			derive value from DerivedReorderQuantityInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientMaximumOrderInLocationStockUOM				is like UnsignedQuantity
			derive value from DerivedMaximumOrderQuantityInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientMinimumOrderInLocationStockUOM				is like UnsignedQuantity
			derive value from DerivedMinimumOrderQuantityInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientSafetyStockInLocationStockUOM				is like UnsignedQuantity
			derive value from DerivedSafetyStockInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientEconomicOrderInLocationStockUOM			is like UnsignedQuantity
			derive value from DerivedEconomicOrderQuantityInLocationStockUOM
			precision is Item.NumberOfDecimalsQuantity
		TransientOnlineCost	is Alpha size 1
			derive value from DeriveReturnYes
		TransientStandardCostInLocationStockUOM				is like InternationalCost
			derive value from DerivedStandardCostInLocationStockUOM
		TransientFutureStandardCostInLocationStockUOM		is like InternationalCost
			derive value from DerivedFutureStandardCostInLocationStockUOM
		TransientMarketPriceInLocationStockUOM				is like InternationalCost
			derive value from DerivedMarketPriceInLocationStockUOM
		TransientOverheadUnitCostInLocationStockUOM			is like InternationalCost
			derive value from DerivedOverheadUnitCostInLocationStockUOM

		TransientKanbanNumberOfBins is Unsigned Decimal 3.0
			default label is "NumberOfBins"
			derive value from DerivedKanbanNumberOfBins


	Rule Blocks
		TriggerInventoryCountBOD
			trigger "InventoryCountService" PA service
				resume on error
				title is "EG:<Company.FinanceEnterpriseGroup>CO:<Company>ITL:<InventoryLocation>ITE:<Item>"
				Criteria
					Company.FinanceEnterpriseGroup
					Company
				Variables
					include persistent fields from ItemLocation
					include persistent fields from Item
					include persistent fields from Company.GeneralLedgerCompany
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					Company.FinanceEnterpriseGroup
						variable name is FinanceEnterpriseGroup
					Company.GeneralLedgerCompany.AccountingEntity
						variable name is AccountingEntity
					bod id.VariationID
						variable name is BODVariationId
		ComputeFromDemandLine
			if (not LocalComputeFromDemandLine)
				initialize LocalAllocatedQuantityFromDemand
				initialize LocalBackorderedQuantityFromDemand
				for each WarehouseDemandLinesRel
					LocalAllocatedQuantityFromDemand += each.AllocatedQuantity - each.InProcessQuantity
					LocalBackorderedQuantityFromDemand += each.BackorderedQuantity
				LocalComputeFromDemandLine = true

		ReplenishInfoNeeded
			if (ItemExistsForReplenish)
				if (ItemReplenishmentSourcesRel.ReplenishFrom entered)
					constraint (ItemReplenishmentSourcesRel.ItemExistsForReplenishFrom)
						"ReplenishFromLocationNotValidForItem" 						

		TriggerItemLocationServiceRules
			trigger "ItemService" PA service
				resume on error
				title is "EG:<LocalFinanceEnterpriseGroup>ITG:<Item.ItemGroup>ITE:<Item>ITL:<InventoryLocation>"
				Criteria
					LocalFinanceEnterpriseGroup
					LocalCompany
				Variables
					LocalActionCode
						variable name is ActionCode
					include persistent fields from Item
					include persistent fields from Item.AllItemLocationsRel
					Item.bod id.VariationID
						variable name is BODVariationId
					LocalBaseCost
						variable name is BaseCost
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					LocalAccountingEntity
						variable name is AccountingEntity
					LocalCompany
						variable name is Company
					LocalTriggerFrom
						variable name is TriggerFrom
					include persistent fields from Item.Manufacturer

		AddCreateRequestItemLocation


			invoked.InventoryLocation					= InventoryLocation
			invoked.GeneralLedgerCategory				= GeneralLedgerCategory
			invoked.Item								= Item
			invoked.Buyer								= Buyer
			invoked.ItemLocation						= ItemLocation
			invoked.DefaultTransactionUOM				= DefaultTransactionUOM
			invoked.PurchaseTaxable						= PurchaseTaxable
			invoked.PurchaseTaxCode						= PurchaseTaxCode
			invoked.TaxableWhenSold						= TaxableWhenSold
			invoked.SellTaxCode							= SellTaxCode
			invoked.StandardCost						= StandardCost
			invoked.FutureStandardCost					= FutureStandardCost
			invoked.MovementClass						= MovementClass
			invoked.StorageCode							= StorageCode
			invoked.PreferredBin						= PreferredBin
			invoked.MinimumOrderQuantity				= MinimumOrderQuantity
			invoked.MaximumOrderQuantity				= MaximumOrderQuantity
			invoked.ReorderPolicy						= ReorderPolicy
			invoked.ReorderDocument						= ReorderDocument
			invoked.ReorderQuantityCode					= ReorderQuantityCode
			invoked.ReorderPointCode					= ReorderPointCode
			invoked.ReorderQuantity						= ReorderQuantity
			invoked.ReorderPoint						= ReorderPoint
			invoked.LeadtimeControl						= LeadtimeControl
			invoked.LeadtimeDays						= LeadtimeDays
			invoked.LastLeadtime						= LastLeadtime
			invoked.PreviousLeadtime					= PreviousLeadtime
			invoked.AutomaticPurchaseOrder				= AutomaticPurchaseOrder
			invoked.OrderMultiple						= OrderMultiple
			invoked.EconomicOrderQuantity				= EconomicOrderQuantity
			invoked.SafetyStock							= SafetyStock
			invoked.Manufacturer						= Manufacturer
			invoked.ManufacturerNumber					= ManufacturerNumber
			invoked.SelectForSpecialCycleCount			= SelectForSpecialCycleCount
			invoked.ForecastNumber						= ForecastNumber
			invoked.PatientChargeable					= PatientChargeable
			invoked.InventoryTracked					= InventoryTracked
			invoked.BinTracked							= BinTracked
			invoked.AllowReceipt						= AllowReceipt
			invoked.AllowIssue							= AllowIssue
			invoked.InspectionRequired					= InspectionRequired
			invoked.FrozenForPhysicalInventory			= FrozenForPhysicalInventory
			invoked.LastIssueDate						= LastIssueDate
			invoked.LastReceiptDate						= LastReceiptDate
			invoked.MSDSDate							= MSDSDate
			invoked.MSDSDocument						= MSDSDocument
			invoked.MSDSVersion							= MSDSVersion
			invoked.LastReceiptCost						= LastReceiptCost
			invoked.LastIssueCost						= LastIssueCost
			invoked.AverageAddOnCost					= AverageAddOnCost
			invoked.AverageCost							= AverageCost
			invoked.OverheadUnitCost					= OverheadUnitCost
			invoked.MarketPrice							= MarketPrice
			invoked.CountAccuracy						= CountAccuracy
			invoked.AddedDate							= AddedDate
			invoked.Active								= true
			invoked.UserField1							= UserField1
			invoked.UserField2							= UserField2
			invoked.UserField3							= UserField3
			invoked.UserFieldN1							= UserFieldN1
			invoked.UserFieldN2							= UserFieldN2
			invoked.UserFieldN3							= UserFieldN3
			invoked.ReceivingDays						= ReceivingDays
			invoked.Consignment							= Consignment
			invoked.NoCharge							= NoCharge
			invoked.LotTracked							= LotTracked
			invoked.SerialTracked						= SerialTracked
			invoked.DropshipPurchaseOrderForCustomerOrderLine				= DropshipPurchaseOrderForCustomerOrderLine
			invoked.CreatePurchaseOrderForCustomerOrderLine					= CreatePurchaseOrderForCustomerOrderLine
			invoked.MaximumSaleQuantity					= MaximumSaleQuantity
			invoked.MinimumSaleQuantity					= MinimumSaleQuantity
			invoked.AllowCustomerOrderReturns			= AllowCustomerOrderReturns
			invoked.CustomerOrderReturnDate				= CustomerOrderReturnDate
			invoked.DefaultSourceUOM					= DefaultSourceUOM
			invoked.Company								= Company

		CostDefaulting
			if (InventoryLocation.LocationType.InventoryLocation)
				ProcurementCostDefault.InCompany				= Company
				ProcurementCostDefault.InLocation				= InventoryLocation
			else
				ProcurementCostDefault.InCompany				= InventoryLocation.FromCompany
				ProcurementCostDefault.InLocation				= InventoryLocation.ReplenishFromLocation

			ProcurementCostDefault.InItem 						= Item
			ProcurementCostDefault.InItemType 					= DefaultItemType


			ProcurementCostDefault.InManufacturerCode 			= Manufacturer.ManufacturerCode
			ProcurementCostDefault.InManufacturerDivision 		= Manufacturer.ManufacturerDivision
			ProcurementCostDefault.InManufacturerNumber 		= ManufacturerNumber

			if (DefaultTransactionUOM entered)
				ProcurementCostDefault.InQuantityUOM			= DefaultTransactionUOM
			else
				ProcurementCostDefault.InQuantityUOM			= Item.DefaultBuyUOM

			ProcurementCostDefault.InDate 						= current corporate date
			ProcurementCostDefault.InSystem						= "RQ"

			if (InventoryLocation.LocationType.InventoryLocation)
				initialize ProcurementCostDefault.InRequestingLocation
			else
				ProcurementCostDefault.InRequestingLocation		= InventoryLocation

			ProcurementCostDefault.InProcurementGroup 			= Company.ItemGroup
			ProcurementCostDefault.InDescription				= Item.Description
			ProcurementCostDefault.InVendor						= first ItemReplenishmentVendorRel.Vendor
			ProcurementCostDefault.InPurchaseFromLocation		= first ItemReplenishmentVendorRel.PurchaseFromLocation
			Execute	= ProcurementCostDefault.DefaultUnitCost












 		DeleteRules
			if (not CartParLocation)
				constraint (!QuantitiesExist)
					"CannotDelete;TransactionQuantitiesExist"

				constraint (!FrozenForPhysicalInventory)
					"CannotDelete;ItemLocationIsFrozen"

				constraint (InventoryCostHistoryRel not exists)
					"CannotDelete;InventoryReceiptsExist"

				constraint (ReleasedInventoryTransactionLinesRel not exists)
					"CannotDelete;InventoryTransactionsExist"

				constraint (InventoryUsageHistoriesRel not exists)
					"CannotDelete;UsageHistoryExists"

				constraint (StockOnHandDetailsRel not exists)
					"CannotDelete;StockOnHandDetailExists"

				constraint (InventoryOrNonStockPOLinesRel not exists)
					"CannotDelete;PurchaseOrderLinesExist"

				constraint (InventoryOrNonStockPOReceiptLinesRel not exists)
					"CannotDelete;PurchaseOrderReceiptLinesExist"

				constraint (KitItemforItemRel not exists)
					"CannotDelete;ItemIsAKit"                                 			

				constraint (ComponentRel not exists)
					"CannotDelete;ItemIsAComponentOfAKitIn_\Company"               		

				constraint (FinishedGoodsByproductsRel not exists)
					"CannotDelete;ItemIsByproductOfKitInCompany"                 		

			LocalFinanceEnterpriseGroup = Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup
	 		LocalAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity
	 		LocalCompany = Company
			if (Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
				LocalActionCode = LocalActionCode.Delete
				increment Item.bod id.VariationID
				LocalTriggerFrom = "ItemLocation"
				include TriggerItemLocationServiceRules


			FromDeleteForConsolidated = true 

		ValidateShelfLocation
			if (PreferredBin changed)
				LocalShelfLocation		= PreferredBin
				TransientShelfLocation	= PreferredBin
			else
				LocalShelfLocation		= TransientShelfLocation
			if (ShelfLocationRel exists)
				constraint (OtherItemLocationForSameShelfLocationRel not exists)
					"ShelfLocationAlreadyExists"
			else
				invoke Create Bin
					invoked.Company					= Company
					invoked.InventoryLocation		= InventoryLocation
					invoked.Bin						= TransientShelfLocation
					invoked.Active					= true

		SecondaryToStockQuantityCalculation
			initialize UOMCalculation
			UOMCalculation.InputUOM					= Item.SecondaryUOM
			UOMCalculation.InputQuantity			= LocalQuantity
			UOMCalculation.Method					= UOMCalculation.Method.ConvertToStock
		
		ValidateDate
			if (ICSystemClosingControlRel.Control)
				if (ICSystemClosingControlRel.ValidEntryDate entered
				and LocalGeneralLedgerDateValidation)
					constraint (LocalDateForValidation within ICSystemClosingControlRel.ValidEntryDate)
						"PostDateOf<LocalDateForValidation>NotWithinValidEntryDatesForCompany<LocalCompany>;ValidDateRangeIs<ICSystemClosingControlRel.ValidEntryDate.Begin>-<ICSystemClosingControlRel.ValidEntryDate.End>"

			initialize LocalValidTransactionDate
			LocalLoopCounter = 1
			while (LocalLoopCounter <= InventoryCompanyRel.NumberOfPeriods
			and   LocalValidTransactionDate = false)
				if (LocalLoopCounter = 1)
					if (LocalDateForValidation > InventoryCompanyRel.LastYearEndDate
					and LocalDateForValidation <= InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[LocalLoopCounter].YearPeriod)
						LocalValidTransactionDate = true
				else
					if (LocalDateForValidation > InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[LocalLoopCounter - 1].YearPeriod
					and LocalDateForValidation <= InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[LocalLoopCounter].YearPeriod)
						LocalValidTransactionDate = true
				if (LocalLoopCounter = InventoryCompanyRel.NumberOfPeriods)
					LocalFutureYearPerOne = InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[1].YearPeriod + 1 year
					if (LocalDateForValidation > InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[LocalLoopCounter].YearPeriod)
						constraint (LocalFutureYearPerOne >= LocalTransactionDate)
							"TransactionDateGreaterThanNextYearFirstPeriodEndDate<LocalFutureYearPerOne>"
						LocalValidTransactionDate = true
				if (not LocalValidTransactionDate)
					LocalLoopCounter += 1

			constraint (LocalValidTransactionDate)
				"<DerivedMessageForCurrentYearPeriodsValidation>"
			constraint (InventoryCompanyRel.YearPeriodStatusArray.YearPeriodStatus[LocalLoopCounter].Status.Open)
				"<DerivedMessageForDateValidation>"

		SupplementalQuantityCalculation
			initialize UOMCalculation
			LocalAvailableQuantityInSupplementalUOM			= AvailableQuantity		 / TransientSupplementalUOMMultiplier
			LocalStockOnHandQuantityInSupplementalUOM		= StockOnHandQuantity 	 / TransientSupplementalUOMMultiplier
			LocalUnallocatedQuantityInSupplementalUOM		= UnallocatedQuantity	 / TransientSupplementalUOMMultiplier
			LocalAllocatedQuantityInSupplementalUOM 		= AllocatedQuantity		 / TransientSupplementalUOMMultiplier
			LocalInProcessQuantityInSupplementalUOM			= InProcessQuantity		 / TransientSupplementalUOMMultiplier
			LocalBackorderedQuantityInSupplementalUOM 		= BackorderedQuantity	 / TransientSupplementalUOMMultiplier
			LocalInspectionHoldQuantityInSupplementalUOM	= InspectionHoldQuantity / TransientSupplementalUOMMultiplier
			LocalOnOrderQuantityInSupplementalUOM 			= OnOrderQuantity		 / TransientSupplementalUOMMultiplier
			LocalWorkInProgressQuantityInSupplementalUOM 	= WorkInProgressQuantity / TransientSupplementalUOMMultiplier
			LocalIntransitQuantityInSupplementalUOM			= IntransitQuantity		 / TransientSupplementalUOMMultiplier
			if (HasRecipeManagement)
				LocalKitchenInProcessQuantityInSupplementalUOM	= KitchenInProcessQuantity / TransientSupplementalUOMMultiplier
			LocalUnreservedQuantityInSupplementalUOM 		= UnreservedQuantity 	/ TransientSupplementalUOMMultiplier
			LocalReservedQuantityInSupplementalUOM			= ReservedQuantity 		/ TransientSupplementalUOMMultiplier
			LocalSupplementalComputed 						= true


		GetTransientForLocationStockUOM 
			if (ReorderPoint entered)
				TransientReorderPointInLocationStockUOM 	= ReorderPointInLocationStockUOM
			if (ReorderQuantity entered)
				TransientReorderQuantityInLocationStockUOM	= ReorderQuantityInLocationStockUOM
			if (MaximumOrderQuantity entered)
				TransientMaximumOrderInLocationStockUOM		= MaximumOrderQuantityInLocationStockUOM
			if (MinimumOrderQuantity entered)
				TransientMinimumOrderInLocationStockUOM		= MinimumOrderQuantityInLocationStockUOM
			if (SafetyStock entered)
				TransientSafetyStockInLocationStockUOM		= SafetyStockInLocationStockUOM
			if (EconomicOrderQuantity entered)
				TransientEconomicOrderInLocationStockUOM	= EconomicOrderQuantityInLocationStockUOM

			if (StandardCost entered)
				TransientStandardCostInLocationStockUOM 		= StandardCostInLocationStockUOM
			if (FutureStandardCost entered)
				TransientFutureStandardCostInLocationStockUOM	= FutureStandardCostInLocationStockUOM
			if (MarketPrice entered)
				TransientMarketPriceInLocationStockUOM 			= MarketPriceInLocationStockUOM
			if (OverheadUnitCost entered)
				TransientOverheadUnitCostInLocationStockUOM		= OverheadUnitCostInLocationStockUOM

		UpdateOverrideTransientInLocationStockUOM 
			if (TransientOnlineReorder entered
			and ItemLocationStockUOM   entered)
				if (TransientReorderPointInLocationStockUOM 	not = ReorderPointInLocationStockUOM)
					if (TransientReorderPointInLocationStockUOM entered)
						ReorderPoint = (TransientReorderPointInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						ReorderPoint = 0
				if (TransientReorderQuantityInLocationStockUOM 	not = ReorderQuantityInLocationStockUOM)
					if (TransientReorderQuantityInLocationStockUOM entered)
						ReorderQuantity = (TransientReorderQuantityInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						ReorderQuantity = 0
				if (TransientMaximumOrderInLocationStockUOM		not	= MaximumOrderQuantityInLocationStockUOM)
					if (TransientMaximumOrderInLocationStockUOM entered)
						MaximumOrderQuantity = (TransientMaximumOrderInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						MaximumOrderQuantity = 0
				if (TransientMinimumOrderInLocationStockUOM		not	= MinimumOrderQuantityInLocationStockUOM)
					if (TransientMinimumOrderInLocationStockUOM entered)
						MinimumOrderQuantity = (TransientMinimumOrderInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						MinimumOrderQuantity = 0
				if (TransientSafetyStockInLocationStockUOM		not	= SafetyStockInLocationStockUOM)
					if (TransientSafetyStockInLocationStockUOM entered)
						SafetyStock = (TransientSafetyStockInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						SafetyStock = 0
				if (TransientEconomicOrderInLocationStockUOM	not = EconomicOrderQuantityInLocationStockUOM)
					if (TransientEconomicOrderInLocationStockUOM entered)
						EconomicOrderQuantity = (TransientEconomicOrderInLocationStockUOM * TransientLocationStockUOMMultiplier)
					else
						EconomicOrderQuantity = 0

			if (TransientOnlineCost    entered
			and ItemLocationStockUOM   entered)
				if (TransientStandardCostInLocationStockUOM not = StandardCostInLocationStockUOM)
					if (TransientStandardCostInLocationStockUOM entered)
						StandardCost = (TransientStandardCostInLocationStockUOM / TransientLocationStockUOMMultiplier)
					else
						StandardCost = 0

				if (TransientFutureStandardCostInLocationStockUOM not = FutureStandardCostInLocationStockUOM)
					if (TransientFutureStandardCostInLocationStockUOM entered)
						FutureStandardCost = (TransientFutureStandardCostInLocationStockUOM / TransientLocationStockUOMMultiplier)
					else
						FutureStandardCost = 0

				if (TransientMarketPriceInLocationStockUOM not = MarketPriceInLocationStockUOM)
					if (TransientMarketPriceInLocationStockUOM entered)
						MarketPrice = (TransientMarketPriceInLocationStockUOM / TransientLocationStockUOMMultiplier)
					else
						MarketPrice = 0

				if (TransientOverheadUnitCostInLocationStockUOM	not = OverheadUnitCostInLocationStockUOM)
					if (TransientOverheadUnitCostInLocationStockUOM entered)
						OverheadUnitCost = (TransientOverheadUnitCostInLocationStockUOM / TransientLocationStockUOMMultiplier)
					else
						OverheadUnitCost = 0

	Derived Fields
		DerivedVendor is a DerivedField
			type is like Vendor
			restricted
			if (action type.Update)
				return blank
			else
				return first ItemReplenishmentSourcesRel.Vendor
		
		DerivedPurchaseFromLocation	is a DerivedField
			type is like PurchaseFromLocation
			restricted
			if (action type.Update)
				return blank
			else
				return first ItemReplenishmentSourcesRel.PurchaseFromLocation

		GeneralLedgerDateValidationMessage is a MessageField
			restricted
			"InventoryPeriodIsClosedForGlobalLedgerDate<LocalDateForValidation>"

		TransactionDateValidationMessage is a MessageField
			restricted
			"InventoryPeriodIsClosedForTransactionDate<LocalDateForValidation>"

		DerivedMessageForDateValidation	is a DerivedField
			type is Alpha size up to 200
			restricted	

			if (LocalGeneralLedgerDateValidation)
				return GeneralLedgerDateValidationMessage
			else
			if (LocalTransactionDateValidation)
				return TransactionDateValidationMessage

		GeneralLedgerDateCurrentYearPeriodsValidationMessage is a MessageField
			restricted
			"GlobalLedgerDateNotWithinCurrentYearPeriods"

		TransactionDateCurrentYearPeriodsValidationMessage is a MessageField
			restricted
			"TransactionDateNotWithinCurrentYearPeriods"		

		DerivedMessageForCurrentYearPeriodsValidation is a DerivedField
			type is Alpha size up to 200
			restricted	
		
			if (LocalGeneralLedgerDateValidation)
				return GeneralLedgerDateCurrentYearPeriodsValidationMessage
			else
			if (LocalTransactionDateValidation)
				return TransactionDateCurrentYearPeriodsValidationMessage
		
		DerivedReplenishFrom is a DerivedField
			type is AlphaUpper size 40
			if (action type.Update)
				return blank
			else
				return first ItemReplenishmentSourcesRel.ReplenishFrom
		
		DeriveReturnYes is a DerivedField
			type is Alpha size 1
			return "Y"
	
		DerivedTotalOpenKitchenRequests is a DerivedField
			type is Numeric size 5
			return instance count of DemandTypeWarehouseDemandLinesRel
			
		DerivedMinimumBatchesNeeded is a DerivedField
			type is Numeric size 5

			LocalMinimumBatchesNeeded = BackorderedQuantity / RecipeRel.BatchYieldQuantity
			return LocalMinimumBatchesNeeded
		
		DerivedTotalKitchenOrders is a DerivedField
			type is Numeric size 5
			return instance count of OpenKitchenOrdersRel
			
		DerivedIncomingBatchTotal is a DerivedField
			type is like Quantity
			return sum OpenKitchenOrdersRel.BatchQuantity
			 
		DerivedEstimatedIncomingYield is a DerivedField
			type is like Quantity
			return sum OpenKitchenOrdersRel.PlanTotalYieldQuantity

		DerivedEstimatedIncomingStock is a DerivedField
			type is like Quantity
			initialize UOMCalculation
			UOMCalculation.InputQuantity		= DerivedEstimatedIncomingYield
			UOMCalculation.InputUOM				= RecipeRel.BatchYieldUOM
			UOMCalculation.Method				= UOMCalculation.Method.ConvertToStock
			return UOMCalculation.OutputQuantity
		
		DerivedTotalOpenKitchenDemandQuantity is a DerivedField
			type is like Quantity
			return sum DemandTypeWithBackordersRel.OpenDemandQuantity
			

		MobileCardViewQuantity is a LabelField
			"<DemandQuantity>OnDemand|<OnOrderQuantity>OnOrder|<IntransitQuantity>Intransit"

		MobileStockUOMAndLocationName is a LabelField
			"Stocked_\at<InventoryLocation.Name>by<Item.StockUOM>\s"

		MobileItemGroupWithCompany is a LabelField
			"<Item.ItemGroup.Description>,_<Company.Name>"

		MobileAvailableStockOnHand is a LabelField
			"<DerivedCardViewQuantity>_<Item.StockUOM>"

		MobileDemandQuantityWithUOM is a LabelField
			"<DemandQuantity>_<Item.StockUOM>"

		MobileStockOnHandQuantity is a LabelField
			"<DerivedCardViewQuantity>_<Item.StockUOM>"

		MobileCompanyLabel is a LabelField
			"<Company>_-_<Company.Name>"

		MobileLocationLabel is a LabelField
			"<InventoryLocation>_-_<InventoryLocation.Name>"
			
		MobileBinDetails is a LabelField
			"Bin:<BinSequence>_|_Shelf:<PreferredBin>"
			
		MobileParDetails is a LabelField
			"ParLevel:<ReorderPoint>_|_ParCount:<ParLocationCount>_<DefaultTransactionUOM.UnitOfMeasure>"
			
		MobileOrderedQuantity is a LabelField
			"OrderedQuantity:<DerivedOrderedQuantity>"

		SupplementalUOMQuantityLabel is a LabelField
			"Supplemental_Quantity"

		SecondaryQuantityLabel is a LabelField
			"Secondary_Quantity"
			
		RecallNoticeExists is a LabelField
			"RecallNoticesExist"
			
		RecallNoticesDisplay is a DerivedField
			type is MessageField
			if (RecallNoticesExist)
				return RecallNoticesMessage

		RecallNoticesMessage is a LabelField
			restricted
			"RecallNotices"

		ItemOnContract is a LabelField
			"ItemOnContract"

		MobileAllocatableQuantityRepresentativeText is a LabelField
			"<AllocatableQuantity>_<Item.StockUOM>"

		DerivedCardViewLabel is a DerivedField
			type is Alpha size 9
			if (CartParLocation)
				return "Par Level"
			return "Available"

		DerivedCardViewQuantity is a DerivedField
			type is like Quantity
			if (CartParLocation)
				return ParLocationCount
			return StockOnHandQuantity

		DerivedLocationTypeLabel is a DerivedField
			type is Alpha size 20
			if (CartParLocation)
				return "Par Location"
			return "Inventory Location"

		SecondColumnQuantityText 	is a DerivedField
			type is Alpha size 25
			if (IsCatchWeightItem)
				return SecondaryQuantityLabel
			else
			if (HasSupplementalUOM)
				return SupplementalUOMQuantityLabel
			else
				return blank

		SecondaryQuantityText 	is a DerivedField
			type is Alpha size 25
			if (IsCatchWeightItem)
				return SecondaryQuantityLabel
			else
				return blank

		SupplementalQuantityText 	is a DerivedField
			type is Alpha size 25
			if (DisplaySupplementalValues)
				return SupplementalUOMQuantityLabel
			else
				return blank

		MobileItemLabel is a LabelField
			"<Item>_-_<Item.Description>"


		DerivedAverageCost is a DerivedField
			type is like UnitCost
			default label is "AverageCost"
			return DerivedItemAverageCost

		DerivedItemAverageCost is a DerivedField
			type is like UnitCost
			default label is "AverageCost"
			if (Company.UseGlobalAverageCost
			and GlobalAverageCostAndSOHRel exists)
				return GlobalAverageCostAndSOHRel.GlobalAverageCost
			else
				return AverageCost

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforAddress"

		ContextMessageEntityType2 is a StringField
			type is Alpha 30
			restricted
			"InforItemLocation"

		ContextMessageText is a MessageField
			restricted
			"ItemLocation<ItemLocation>"

		NoItemsWithZeroSOHMessage is a MessageField
			restricted
			"All_Items_Stocked"

		NoItemsToReviewMessage is a MessageField
			restricted
			"No_ItemsTo_Review"

		AllItemsAboveReorderPointMessage is a MessageField
			restricted
			"All_Items_Above_Reorder_Point"

    	RoundingAlertMessage 				is a MessageField
			restricted
			"WillRoundToStockUOM<ReplenishmentSourceStockUOM>"

    	InvalidUOMMessage 					is a MessageField
			restricted
			"<DefaultTransactionUOM.UnitOfMeasure>UOMDoesNotExistAt_Item_Location"

		RequisitionRoundedMessage 			is a MessageField
			"QuantityOnRequisitionLineHasBeenRoundedTo_Location_Stock_UOM<DerivedRequisitionLineQuantity>_<DerivedRequisitionLineUOM>"

		DerivedInvalidUOMText				is a DerivedField
			type is Alpha 100
			restricted
			if (ReplenishmentUOMRounding)
				return RoundingAlertMessage
			else
				return InvalidUOMMessage

		ReplenishmentSourceStockUOM			is a DerivedField
			type is like UnitOfMeasure
			restricted
			if (CartParLocation)
				if (LocationReplenished)
					if (ItemLocationReplenishFromRel.HasItemLocationStockUOM)
						return ItemLocationReplenishFromRel.ItemLocationStockUOM
				else
					if (ItemLocationForReplenishSourceRel.HasItemLocationStockUOM)
						return ItemLocationForReplenishSourceRel.ItemLocationStockUOM

		ReplenishmentUOMRounding			is a DerivedField
			type is Boolean
			restricted
			if (CartParLocation)
				if (LocationReplenished)
					if (ItemLocationReplenishFromRel.HasOrderUOMRounding)
						return true
				else
					if (ItemLocationForReplenishSourceRel.HasOrderUOMRounding)
						return true

		DerivedRequisitionLineUOM 			is a DerivedField
			type is like UnitOfMeasure
			restricted
			if (RequisitionLinesRel exists)
				return first RequisitionLinesRel.EnteredUOM

		DerivedRequisitionLineQuantity 		is a DerivedField
			type is like Quantity
			restricted
			if (RequisitionLinesRel exists)
				return first RequisitionLinesRel.Quantity


		DerivedParLocationCount											is a DerivedField
			type is like Quantity

			restricted

			if (action type.Update)
				return 0
			else
				if (RequisitionLinesRel exists)
					return first RequisitionLinesRel.ActualCount
				else
				if (RequisitionLinesForSubstituteItemRel exists)
					return first RequisitionLinesForSubstituteItemRel.ActualCount
				else
					return ReorderPoint
					
		DerivedOrderedQuantity											is a DerivedField
			type is like Quantity
			return (ReorderPoint - ParLocationCount)

		InventoryAccountingUnit           								is a DerivedField
			type is like AccountingUnit
			classic name is ACCT-UNIT-INV
			restricted
			return GeneralLedgerCategory.InventoryAccount.AccountingUnit

		InventoryAccount                  								is a DerivedField
			type is like GeneralLedgerChartAccount
			classic name is ACCOUNT-INV
			restricted
			return GeneralLedgerCategory.InventoryAccount.GeneralLedgerChartAccount






		ItemActive								is a DerivedField
			type is Boolean
			return Item.Active

		ItemManufacturerNumber					is a DerivedField
			type is like ManufacturerNumber
			return Item.ManufacturerNumber

		ItemManufacturerCode					is a DerivedField
			type is like ManufacturerCode
			return Item.Manufacturer.ManufacturerCode

		ItemManufacturerDivision				is a DerivedField
			type is like ManufacturerDivision
			return Item.Manufacturer.ManufacturerDivision

		ItemManufacturerDescription				is a DerivedField
			type is like Description
			return Item.Manufacturer.Description

		ManufacturerDescription				is a DerivedField
			type is like Description
			return Manufacturer.Description

		DefaultSourceUnitOfMeasure				is a DerivedField
			type is like UnitOfMeasure
			return DefaultSourceUOM.UnitOfMeasure

		DefaultTransactionUnitOfMeasure			is a DerivedField
			type is like UnitOfMeasure
			return DefaultTransactionUOM.UnitOfMeasure

		DerivedManufacturerNumber         								is a DerivedField
			type is like ManufacturerNumber
			classic name is MANUF-NBR-DER
			restricted
			if (HasManufacturerCode)
				return ManufacturerNumber
			else
			if (HasReplacementManufacturerCode)
				return ReplItemlocRel.ManufacturerNumber
			else
			if (IsRrplMfgEntrd)
				return RrplItemlocRel.ManufacturerNumber
			else
				return Item.ManufacturerNumber

		DerivedManufacturerCode           								is a DerivedField
			type is like ManufacturerCode
			classic name is MANUF-CODE-DER
			restricted
			if (HasManufacturerCode)
				return Manufacturer.ManufacturerCode
			else
			if (HasReplacementManufacturerCode)
				return ReplItemlocRel.Manufacturer.ManufacturerCode
			else
			if (IsRrplMfgEntrd)
				return RrplItemlocRel.Manufacturer.ManufacturerCode
			else
				return Item.Manufacturer.ManufacturerCode

		DerivedManufacturerDivision       								is a DerivedField
			type is like ManufacturerDivision
			classic name is MANUF-DIV-DER
			restricted
			if (HasManufacturerCode)
				return Manufacturer.ManufacturerDivision
			else
			if (HasReplacementManufacturerCode)
				return ReplItemlocRel.Manufacturer.ManufacturerDivision
			else
			if (IsRrplMfgEntrd)
				return RrplItemlocRel.Manufacturer.ManufacturerDivision
			else
				return Item.Manufacturer.ManufacturerDivision

		NegativeAllocatedQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-ALLOC
			restricted
			return (AllocatedQuantity * -1)

		NegativeBackorderedQuantity       								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-BACKORD
			restricted
			return (BackorderedQuantity * -1)

		NegativeInProcessQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-INPROC
			restricted
			return (InProcessQuantity * -1)

		NegativeOnOrderQuantity           								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-ONORD
			restricted
			return (OnOrderQuantity * -1)

		NegativeIntransitQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-INTRANS
			restricted
			return (IntransitQuantity * -1)

		NegWorkInProgressQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-WIP
			restricted
			return (WorkInProgressQuantity * -1)

		NegativeInspectionHoldCatchWeightQuantity    					is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-HOLD
			restricted
			return (InspectionHoldCatchWeightQuantity * -1)

		NegativeInspectionHoldQuantity    								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is NEG-HOLD
			restricted
			return (InspectionHoldQuantity * -1)

		SellableAllocatedQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-ALLOC

			if (AvailableToSellAllocatedAdd)
				return AllocatedQuantity
			else
			if (AvailableToSellAllocatedSubtract)
				return NegativeAllocatedQuantity
			else
				return 0

		SellableInProcessQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-INPROC
			restricted
			if (AvailableToSellInProcessAdd)
				return InProcessQuantity
			else
			if (AvailableToSellInProcessSubtract)
				return NegativeInProcessQuantity
			else
				return 0

		SellableBackorderedQuantity       								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-BACKORD
			restricted
			if (AvailableToSellBackorderAdd)
				return BackorderedQuantity
			else
			if (AvailableToSellBackorderSubtract)
				return NegativeBackorderedQuantity
			else
				return 0

		SellableOnOrderQuantity           								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-ONORD
			restricted
			if (AvailableToSellOnOrderAdd)
				return OnOrderQuantity
			else
			if (AvailableToSellOnOrderSubtract)
				return NegativeOnOrderQuantity
			else
				return 0

		SellableIntransitQuantity         								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-INTRAN
			restricted
			if (AvailableToSellIntransitAdd)
				return IntransitQuantity
			else
			if (AvailableToSellIntransitSubtract)
				return NegativeIntransitQuantity
			else
				return 0

		SellableWorkInProgressQuantity    								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-WIP
			restricted
			if (AvailableToSellWIPAdd)
				return WorkInProgressQuantity
			else
			if (AvailableToSellWIPSubtract)
				return NegWorkInProgressQuantity
			else
				return 0

		SellableInspectionHoldQuantity    								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELL-HOLD
			restricted
			if (AvailableToSellInspectionHoldAdd)
				return InspectionHoldQuantity
			else
			if (AvailableToSellInspectionHoldSubtract)
				return NegativeInspectionHoldQuantity
			else
				return 0

		AllocatableAllocatedQuantity      								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-ALLOC
			restricted
			if (AvailableToAllocateAllocatedAdd)
				return AllocatedQuantity
			else
			if (AvailableToAllocateAllocatedSubtract)
				return NegativeAllocatedQuantity
			else
				return 0

		AllocatableInProcessQuantity      								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-INPROC
			restricted
			if (AvailableToAllocateInProcessAdd)
				return InProcessQuantity
			else
			if (AvailableToAllocateInProcessSubtract)
				return NegativeInProcessQuantity
			else
				return 0

		AllocatableBackorderedQuantity    								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-BACKORD
			restricted
			if (AvailableToAllocateBackorderAdd)
				return BackorderedQuantity
			else
			if (AvailableToAllocateBackorderSubtract)
				return NegativeBackorderedQuantity
			else
				return 0

		AllocatableOnOrderQuantity        								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-ONORD
			restricted
			if (AvailableToAllocateOnOrderAdd)
				return OnOrderQuantity
			else
			if (AvailableToAllocateOnOrderSubtract)
				return NegativeOnOrderQuantity
			else
				return 0

		AllocatableIntransitQuantity      								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-INTRAN
			restricted
			if (AvailableToAllocateIntransitAdd)
				return IntransitQuantity
			else
			if (AvailableToAllocateIntransitSubtract)
				return NegativeIntransitQuantity
			else
				return 0

		AllocatableWorkInProgressQuantity 								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-WIP
			restricted
			if (AvailableToAllocateWIPAdd)
				return WorkInProgressQuantity
			else
			if (AvailableToAllocateWIPSubtract)
				return NegWorkInProgressQuantity
			else
				return 0

		AllocatableInspectionHoldCatchWeightQuantity 					is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-HOLD
			restricted
			if (AvailableToAllocateInspectionHoldAdd)
				return InspectionHoldCatchWeightQuantity
			else
			if (AvailableToAllocateInspectionHoldSubtract)
				return NegativeInspectionHoldCatchWeightQuantity
			else
				return 0

		AllocatableInspectionHoldQuantity 								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALC-HOLD
			restricted
			if (AvailableToAllocateInspectionHoldAdd)
				return InspectionHoldQuantity
			else
			if (AvailableToAllocateInspectionHoldSubtract)
				return NegativeInspectionHoldQuantity
			else
				return 0

		DemandQuantity													is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (UnallocatedQuantity + AllocatedQuantity + InProcessQuantity + BackorderedQuantity)

		DemandQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (UnallocatedQuantityInStockUOM + AllocatedQuantityInStockUOM + InProcessQuantityInStockUOM + BackorderedQuantityInStockUOM)

		DemandQuantityInSupplementalUOM									is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (UnallocatedQuantityInSupplementalUOM + AllocatedQuantityInSupplementalUOM + InProcessQuantityInSupplementalUOM + BackorderedQuantityInSupplementalUOM)

		UnallocatedQuantityInStockUOM									is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (UnallocatedQuantity entered)
					LocalQuantity = UnallocatedQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return UnallocatedQuantity

		AllocatedQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (AllocatedQuantity entered)
					LocalQuantity = AllocatedQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return AllocatedQuantity

		InProcessQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
				if (InProcessQuantity entered)
					LocalQuantity = InProcessQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return InProcessQuantity

		BackorderedQuantityInStockUOM									is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
				if (BackorderedQuantity entered)
					LocalQuantity = BackorderedQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return BackorderedQuantity

		OnOrderQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (OnOrderQuantity entered)
					initialize UOMCalculation
					UOMCalculation.InputQuantity		= OnOrderQuantity
					UOMCalculation.InputUOM				= Item.SecondaryUOM
					UOMCalculation.Method				= UOMCalculation.Method.ConvertToStock
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return OnOrderQuantity

		IntransitQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (IntransitQuantity entered)
					LocalQuantity = IntransitQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return IntransitQuantity

		InspectionHoldQuantityInStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
				if (InspectionHoldCatchWeightQuantity entered)
	          		return InspectionHoldCatchWeightQuantity
	          	else
	          	if (InspectionHoldCatchWeightQuantity not entered
	          	and InspectionHoldQuantity entered)
					LocalQuantity = InspectionHoldQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return InspectionHoldQuantity

		WorkInProgressQuantityInStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (WorkInProgressQuantity entered)
					LocalQuantity = WorkInProgressQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return WorkInProgressQuantity

		KitchenInProcessQuantityInStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (KitchenInProcessQuantity entered)
					LocalQuantity = KitchenInProcessQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return KitchenInProcessQuantity

		ReservedQuantityInStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem)
			  	if (ReservedQuantity entered)
					LocalQuantity = ReservedQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity
				else
					return 0
			else
				return ReservedQuantity

		SellableQuantity                  								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is SELLABLE
			return (StockOnHandQuantity + SellableAllocatedQuantity + SellableInProcessQuantity + SellableBackorderedQuantity + SellableOnOrderQuantity + SellableIntransitQuantity + SellableWorkInProgressQuantity + SellableInspectionHoldQuantity)

		QuantityToAddToComputeForAllocatableQuantity             		is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return (AllocatableAllocatedQuantity + AllocatableInProcessQuantity + AllocatableBackorderedQuantity + AllocatableOnOrderQuantity + AllocatableIntransitQuantity + AllocatableWorkInProgressQuantity + AllocatableInspectionHoldQuantity)

		QuantityToAddToComputeForAllocatableQuantityInStockUOM          is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			classic name is ALLOCATABLE
			if (IsCatchWeightItem)
				if (QuantityToAddToComputeForAllocatableQuantity entered)
					LocalQuantity = QuantityToAddToComputeForAllocatableQuantity - AllocatableInspectionHoldQuantity
					include SecondaryToStockQuantityCalculation
					return UOMCalculation.OutputQuantity + AllocatableInspectionHoldCatchWeightQuantity 
				else
					return 0
			else
				return QuantityToAddToComputeForAllocatableQuantity

		AllocatableQuantity               								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALLOCATABLE
			return (StockOnHandQuantity + QuantityToAddToComputeForAllocatableQuantity - ReservedQuantity)

		CatchWeightAllocatableQuantity    								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is CWT-ALLOCATABL
			restricted
			return (SecondaryQuantity + QuantityToAddToComputeForAllocatableQuantity - ReservedQuantity)

		AvailableQuantityInStockUOM										is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (IsCatchWeightItem) 
				return (StockOnHandQuantity + QuantityToAddToComputeForAllocatableQuantityInStockUOM - ReservedQuantityInStockUOM)
			else
				return AvailableQuantity

		DerivedMaximumRequisitionQuantity is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return MaximumRequisitionQuantity


		DerivedSupplementalUOMMultiplier 								is a DerivedField
			type is like UOMMultiplier
			return SupplementalUOM.ItemUOM.UOMConversion

		AvailableQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return AvailableQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalAvailableQuantityInSupplementalUOM

		StockOnHandQuantityInSupplementalUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return SecondaryQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalStockOnHandQuantityInSupplementalUOM

		UnallocatedQuantityInSupplementalUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return UnallocatedQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalUnallocatedQuantityInSupplementalUOM

		AllocatedQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return AllocatedQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalAllocatedQuantityInSupplementalUOM

		InProcessQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return InProcessQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalInProcessQuantityInSupplementalUOM

		BackorderedQuantityInSupplementalUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return BackorderedQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalBackorderedQuantityInSupplementalUOM

		InspectionHoldQuantityInSupplementalUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return InspectionHoldQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalInspectionHoldQuantityInSupplementalUOM

		OnOrderQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return OnOrderQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalOnOrderQuantityInSupplementalUOM

		WorkInProgressQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return WorkInProgressQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalWorkInProgressQuantityInSupplementalUOM

		IntransitQuantityInSupplementalUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return IntransitQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalIntransitQuantityInSupplementalUOM

		KitchenInProcessQuantityInSupplementalUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM
			and HasRecipeManagement)
				if (IsCatchWeightItem)
					return KitchenInProcessQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalKitchenInProcessQuantityInSupplementalUOM

		UnreservedQuantityInSupplementalUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return UnreservedQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalUnreservedQuantityInSupplementalUOM

		ReservedQuantityInSupplementalUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasSupplementalUOM)
				if (IsCatchWeightItem)
					return ReservedQuantity
				else
					if (not LocalSupplementalComputed)
						include SupplementalQuantityCalculation
					return LocalReservedQuantityInSupplementalUOM

		DerivedStandardCostInSupplementalUOM							is a DerivedField
			type is like InternationalCost
			return StandardCost * TransientSupplementalUOMMultiplier

		DerivedFutureStandardCostInSupplementalUOM						is a DerivedField
			type is like InternationalCost
			return FutureStandardCost * TransientSupplementalUOMMultiplier

		DerivedAverageCostInSupplementalUOM								is a DerivedField
			type is like InternationalCost
			return DerivedAverageCost * TransientSupplementalUOMMultiplier

		AverageAddOnCostInSupplementalUOM								is a DerivedField
			type is like InternationalCost
			return AverageAddOnCost * TransientSupplementalUOMMultiplier

		DerivedMarketPriceInSupplementalUOM								is a DerivedField
			type is like InternationalCost
			return MarketPrice * TransientSupplementalUOMMultiplier

		DerivedOverheadUnitCostInSupplementalUOM						is a DerivedField
			type is like InternationalCost
			return OverheadUnitCost * TransientSupplementalUOMMultiplier

		LastIssueCostInSupplementalUOM									is a DerivedField
			type is like InternationalCost
			return LastIssueCost * TransientSupplementalUOMMultiplier

		LastReceiptCostInSupplementalUOM								is a DerivedField
			type is like InternationalCost
			return LastReceiptCost * TransientSupplementalUOMMultiplier



		DerivedLocationStockUOMMultiplier 								is a DerivedField
			type is like UOMMultiplier
			return ItemLocationStockUOM.ItemUOM.UOMConversion


		AllocatedQuantityInLocationStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.AllocatedQuantity

		AvailableQuantityInLocationStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.AvailableQuantity

		BackorderedQuantityInLocationStockUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.BackorderedQuantity

		DemandQuantityInLocationStockUOM									is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.DemandQuantity

		InProcessQuantityInLocationStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.InProcessQuantity
					
		InspectionHoldQuantityInLocationStockUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.InspectionHoldQuantity

		IntransitQuantityInLocationStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.IntransitQuantity
					
		KitchenInProcessQuantityInLocationStockUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.KitchenInProcessQuantity

		OnOrderQuantityInLocationStockUOM								is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.OnOrderQuantity

		StockOnHandQuantityInLocationStockUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.StockOnHandQuantity

		UnallocatedQuantityInLocationStockUOM							is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.UnallocatedQuantity

		WorkInProgressQuantityInLocationStockUOM						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.WorkInProgressQuantity

		ReservedQuantityInLocationStockUOM								is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.ReservedQuantity

		UnreservedQuantityInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.UnreservedQuantity


		ReorderPointInLocationStockUOM									is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.ReorderPoint

		ReorderQuantityInLocationStockUOM								is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.ReorderQuantity

		MaximumOrderQuantityInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.MaximumOrderQuantity

		MinimumOrderQuantityInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.MinimumOrderQuantity

		SafetyStockInLocationStockUOM									is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.SafetyStock

		EconomicOrderQuantityInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			return LocationItemUOMConversion.EconomicOrderQuantity

		DerivedReorderPointInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return ReorderPointInLocationStockUOM

		DerivedReorderQuantityInLocationStockUOM						is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return ReorderQuantityInLocationStockUOM

		DerivedMaximumOrderQuantityInLocationStockUOM					is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return MaximumOrderQuantityInLocationStockUOM

		DerivedMinimumOrderQuantityInLocationStockUOM					is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return MinimumOrderQuantityInLocationStockUOM

		DerivedSafetyStockInLocationStockUOM							is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return SafetyStockInLocationStockUOM

		DerivedEconomicOrderQuantityInLocationStockUOM					is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (action type.Update)
				return 0
			else
				return EconomicOrderQuantityInLocationStockUOM

		AverageAddOnCostInLocationStockUOM								is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.AverageAddOnCost

		AverageCostInLocationStockUOM									is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.AverageCost

		FutureStandardCostInLocationStockUOM							is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.FutureStandardCost

		LastIssueCostInLocationStockUOM									is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.LastIssueCost

		LastReceiptCostInLocationStockUOM								is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.LastReceiptCost

		MarketPriceInLocationStockUOM									is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.MarketPrice

		OverheadUnitCostInLocationStockUOM								is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.OverheadUnitCost

		StandardCostInLocationStockUOM									is a DerivedField
			type is like InternationalCost
			return LocationItemUOMConversion.StandardCost

		DerivedStandardCostInLocationStockUOM							is a DerivedField
			type is like InternationalCost
			if (action type.Update)
				return 0
			else
				return StandardCostInLocationStockUOM

		DerivedFutureStandardCostInLocationStockUOM						is a DerivedField
			type is like InternationalCost
			if (action type.Update)
				return 0
			else
				return FutureStandardCostInLocationStockUOM

		DerivedMarketPriceInLocationStockUOM							is a DerivedField
			type is like InternationalCost
			if (action type.Update)
				return 0
			else
				return MarketPriceInLocationStockUOM

		DerivedOverheadUnitCostInLocationStockUOM						is a DerivedField
			type is like InternationalCost
			if (action type.Update)
				return 0
			else
				return OverheadUnitCostInLocationStockUOM


		DerivedUOM														is a DerivedField
			type is like UnitOfMeasure
			if (HasItemLocationStockUOM)
				return ItemLocationStockUOM.UnitOfMeasure
			else
				return Item.StockUOM

		DerivedAllocatableQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.AllocatableQuantity
			else
				return AllocatableQuantity

		DerivedAllocatedQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.AllocatedQuantity
			else
				return AllocatedQuantity

		DerivedAvailableQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.AvailableQuantity
			else
				return AvailableQuantity

		DerivedBackorderedQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.BackorderedQuantity
			else
				return BackorderedQuantity

		DerivedDemandQuantity											is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.DemandQuantity
			else
				return DemandQuantity

		DerivedInProcessQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.InProcessQuantity
			else
				return InProcessQuantity

		DerivedInspectionHoldQuantity									is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.InspectionHoldQuantity
			else
				return InspectionHoldQuantity

		DerivedIntransitQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.IntransitQuantity
			else
				return IntransitQuantity

		DerivedKitchenInProcessQuantity									is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.KitchenInProcessQuantity
			else
				return KitchenInProcessQuantity

		DerivedOnOrderQuantity											is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.OnOrderQuantity
			else
				return OnOrderQuantity

		DerivedStockOnHandQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.StockOnHandQuantity
			else
				return StockOnHandQuantity

		DerivedUnallocatedQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.UnallocatedQuantity
			else
				return UnallocatedQuantity

		DerivedWorkInProgressQuantity									is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.WorkInProgressQuantity
			else
				return WorkInProgressQuantity

		DerivedReservedQuantity											is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.ReservedQuantity
			else
				return ReservedQuantity

		DerivedUnreservedQuantity										is a DerivedField
			type is like UnsignedQuantity
				precision is Item.NumberOfDecimalsQuantity
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.UnreservedQuantity	
			else
				return UnreservedQuantity	

		ChangeInStandardCost	is a DerivedField
			type is like UnitCost
			if (FutureStandardCost entered)
				return (FutureStandardCost - StandardCost)
			else
				return 0

		ChangeInStandardCostValuation	is a DerivedField
			type is like InternationalAmount
			return (StockOnHandQuantity * ChangeInStandardCost)

		ItemCodeUsed													is a ConditionalField
			type is Numeric size 1
			restricted
			if (HasItem)
				1
			else
				blank


		DerivedMultipleUOM												is a ComputeField
			type is Numeric 6
			restricted
			(instance count of MultipleTrackedInUnitOfMeasureRel)

		AvailableQuantity												is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			classic name is ALLOCATABLE
			if (Item.IsCatchWeightItem)
				return CatchWeightAllocatableQuantity
			else
				return AllocatableQuantity

		AvailableQuantityForOrderEntry									is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return (StockOnHandQuantity - AllocatedQuantity - InProcessQuantity - InspectionHoldQuantity - BackorderedQuantity + OnOrderQuantity + IntransitQuantity + WorkInProgressQuantity)

		AvailableQuantityForInventoryReplenishment						is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (InventoryLocation.DemandSource.DocumentAndForecastDemand)
				return (StockOnHandQuantity - AllocatedQuantity - InProcessQuantity + OnOrderQuantity + IntransitQuantity + WorkInProgressQuantity)
			else
				return (StockOnHandQuantity - AllocatedQuantity - InProcessQuantity - BackorderedQuantity + OnOrderQuantity + IntransitQuantity + WorkInProgressQuantity)

		DerivedSupplyDemand												is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return (StockOnHandQuantity - AllocatedQuantity - InProcessQuantity - BackorderedQuantity + OnOrderQuantity + IntransitQuantity + WorkInProgressQuantity)

		DerivedReorderQuantity											is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			if (ReorderQuantityCode.OrderUpToMaximumLevel)
				LocalReorderDifferenceQuantity		= (MaximumOrderQuantity - AvailableQuantityForInventoryReplenishment)
			else
				LocalReorderDifferenceQuantity		= (ReorderPoint - AvailableQuantityForInventoryReplenishment)

			initialize LocalCalculatedReorderQuantity

			if (!ReorderQuantity entered)
				ReorderQuantity		= 1

			if (ReorderQuantityCode.DifferenceQuantity)
				if (AvailableQuantityForInventoryReplenishment	< ReorderPoint)
					LocalCalculatedReorderQuantity				= LocalReorderDifferenceQuantity
				else
					LocalCalculatedReorderQuantity				= ReorderQuantity
			else
			if (ReorderQuantityCode.OrderUpToMaximumLevel)
				if (AvailableQuantityForInventoryReplenishment	< MaximumOrderQuantity)
					LocalCalculatedReorderQuantity				= LocalReorderDifferenceQuantity
			else
			if (ReorderQuantity									< LocalReorderDifferenceQuantity)
				LocalCalculatedReorderQuantity					= ReorderQuantity
				while (LocalCalculatedReorderQuantity			< LocalReorderDifferenceQuantity)
					LocalCalculatedReorderQuantity				+= OrderMultiple
			else
				LocalCalculatedReorderQuantity					= ReorderQuantity

			if (MinimumOrderQuantity entered)
				if (LocalCalculatedReorderQuantity				< MinimumOrderQuantity)
					LocalCalculatedReorderQuantity				= MinimumOrderQuantity

			return LocalCalculatedReorderQuantity

		CurrentInventoryValue 											is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.CostingMethod = "STD")
				return ItemLocation.StockOnHandQuantity * ItemLocation.StandardCost
			if (Company.CostingMethod = "LIFO")
				return ItemLocation.StockOnHandQuantity * ItemLocation.LastReceiptCost
			if (Company.CostingMethod = "FIFO")
				return ItemLocation.StockOnHandQuantity * ItemLocation.LastIssueCost
			else
				return ItemLocation.StockOnHandQuantity * AverageCost

		ItemConsignment							is a DerivedField
			type is Boolean
			return Item.Consignment

		ItemPatientChargeable					is a DerivedField
			type is Boolean
			return Item.PatientChargeable

		ItemChargeNumber						is a DerivedField
			type is like ChargeNumber
			return Item.ChargeNumber

		PatientChargeNumber						is a DerivedField
			type is like ChargeNumber
			if (RevenueCenter entered)
				return first PatientChargeItemRel.PatientChargeItem.ChargeNumber
			else
				return first PatientChargeItemsRel.PatientChargeItem.ChargeNumber

		PatientPriceClass						is a DerivedField
			type is like PatientPriceClass
			if (RevenueCenter entered)
				return first PatientChargeItemRel.PriceClass
			else
				return first PatientChargeItemsRel.PriceClass

		PatientPrice							is a DerivedField
			type is like InternationalAmount
			if (RevenueCenter entered)
				return first PatientChargeItemRel.Price
			else
				return first PatientChargeItemsRel.Price

		LastReceivedDate						is a DerivedField
			type is Date
			return first InventoryCostHistoryRel.ReceivedDate

		LastReceivedCost						is a DerivedField
			type is like InternationalCost
			return first InventoryCostHistoryRel.UnitCost

		LotNumber								is a DerivedField
			type is like ItemLot
			return first ItemLotsRel.ItemLot

		LotExpirationDate						is a DerivedField
			type is Date
			return first ItemLotsRel.LotExpirationDate

		VendorItem								is a DerivedField
			type is like VendorItem
			if (HasVendor)
				return first VendorItemsForItemVendorRel.VendorItem
			else
				return first VendorItemsForItemRel.VendorItem

		VendorItemManufacturerCode				is a DerivedField
			type is like ManufacturerCode
			if (HasVendor)
				return first VendorItemsForItemVendorRel.Manufacturer.ManufacturerCode
			else
				return first VendorItemsForItemRel.Manufacturer.ManufacturerCode

		VendorItemManufacturerDivision			is a DerivedField
			type is like ManufacturerCode
			if (HasVendor)
				return first VendorItemsForItemVendorRel.Manufacturer.ManufacturerDivision
			else
				return first VendorItemsForItemRel.Manufacturer.ManufacturerDivision

		VendorItemManufacturerDescription				is a DerivedField
			type is like Description
			if (HasVendor)
				return first VendorItemsForItemVendorRel.Manufacturer.Description
			else
				return first VendorItemsForItemRel.Manufacturer.Description

		VendorItemManufacturerNumber			is a DerivedField
			type is like ManufacturerNumber
			if (HasVendor)
				return first VendorItemsForItemVendorRel.ManufacturerNumber
			else
				return first VendorItemsForItemRel.ManufacturerNumber

		DerivedInventoryCost					is a DerivedField
			type is like InternationalCost
			restricted
			if (Company.CostingMethod.AverageCosting)
				if (LastReceiptCost entered)
					return LastReceiptCost
				else
					return AverageCost
			else
			if (Company.CostingMethod.StandardCosting
			and StandardCost entered)
				return StandardCost

		DerivedSOHAllocatedQuantity				is a DerivedField
			type is like Quantity
			initialize LocalSOHAllocatedQuantityTotal
			if (StockOnHandDetailsRel exists)
				for each StockOnHandDetailsRel
					LocalSOHAllocatedQuantityTotal += each.AllocatedQuantity
				for each WarehouseDemandLinesWithNoShipmentRel
					LocalSOHAllocatedQuantityTotal += each.AllocatedQuantity - each.InProcessQuantity
			return LocalSOHAllocatedQuantityTotal

		DerivedAllocatedQuantityFromDemand		is a DerivedField
			type is like Quantity
			include ComputeFromDemandLine
			return LocalAllocatedQuantityFromDemand

		DerivedBackorderedQuantityFromDemand		is a DerivedField
			type is like Quantity
			include ComputeFromDemandLine
			return LocalBackorderedQuantityFromDemand

		DerivedNumberOfDaysInCurrentPeriod	is a DerivedField
			type is Numeric size 5
			restricted
			if (LocalCycleCount)
				return (current corporate date - LastCycleCountDate)
			else
				return (current corporate date - LastCountDate)

		DerivedLifoFifoCost is a DerivedField
			type is like InternationalCost
			restricted
			initialize LocalTotalOpenQuantity
			initialize LocalTotalExtendedCost
			for each InventoryCostHistoryRel
				LocalTotalOpenQuantity		+= (each.ReceivedQuantity - each.InspectionHoldQuantity - each.UsedQuantity)
				LocalTotalExtendedCost		+= (each.UnitCost * (each.ReceivedQuantity - each.InspectionHoldQuantity - each.UsedQuantity))

			if (LocalTotalOpenQuantity = 0)
				return 0
			else
				return (LocalTotalExtendedCost / LocalTotalOpenQuantity)

		DefaultItemType	is a DerivedField
			type is like ItemType
			if (InventoryTracked)
				return ItemType.Inventoried
			else
				return ItemType.NonStock

		DefaultUnitCost		is a DerivedField
			type is like UnitCost
				precision is Item.NumberOfDecimalsCost

			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputUnitCost

		DefaultUnitCostUOM		is a DerivedField
			type is like UnitOfMeasure
			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputCostUOM

		DefaultUnitCostInStockUOM		is a DerivedField
			type is like UnitCost
				precision is Item.NumberOfDecimalsCost

			if (DefaultUnitCostUOM = Item.StockUOM)
				return DefaultUnitCost
			else
				initialize UOMCalculation
				if (DefaultUnitCostUOM entered)
					UOMCalculation.InputUOM						= DefaultUnitCostUOM
				else
					UOMCalculation.InputUOM						= Item.DefaultBuyUOM
				UOMCalculation.InputToUOM						= Item.StockUOM
				UOMCalculation.InputUnitCost					= DefaultUnitCost
				UOMCalculation.Method							= UOMCalculation.Method.ConvertToStock

				return UOMCalculation.OutputUnitCost

		DefaultUnitCostForLowestDivisibleCost is a DerivedField 
			type is like UnitCost
				precision is Item.NumberOfDecimalsCost
			if (Item.UOMConversion = 1
			or  Item.UOMConversion = 0)
				return DefaultUnitCostInStockUOM
			else
				return (DefaultUnitCostInStockUOM/Item.UOMConversion)

		DefaultUnitCostVendor		is a DerivedField
			type is like Vendor

			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputVendor

		DefaultUnitCostVendorName		is a DerivedField
			type is like VendorName

			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputVendorName

		DefaultUnitCostPurchaseFromLocation		is a DerivedField
			type is like PurchaseFromLocation

			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputPurchaseFromLocation

		DefaultUnitCostPurchaseFromLocationName		is a DerivedField
			type is like VendorName

			if (!CostDefaultingDone)
				include CostDefaulting
				CostDefaultingDone = true
			return ProcurementCostDefault.OutputPurchaseFromLocationName
			
		DerivedAuditCount is a DerivedField
			type is Numeric 10
			return instance count of ItemLocationAuditPurgeRel


		DerivedRemainingPOQuantityStock is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (sum OpenPurchaseOrderLinesRel.DerivedFixitQuantityInStockForSupplyDemand)

		DerivedRemainingPOQuantityStockNoPrecision is a DerivedField
			type is like Quantity
			return (sum OpenPurchaseOrderLinesRel.DerivedFixitQuantityInStockForSupplyDemand)

		DerivedOnOrderQuantityNoPrecision is a DerivedField
			type is like Quantity
			return (OnOrderQuantity)

		DerivedPOSupplyDemandQuantity is a DerivedField
			type is like Quantity
			return (sum WarehouseDemandLinesPOSupplyRel.Quantity)

		DerivedToShipRQQuantityStock is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (sum OpenRequisitionDTorITLinesRel.DerivedFixitQuantityInStockForSupplyDemand)

		DerivedToShipRQQuantityStockNoPrecision is a DerivedField
			type is like Quantity
			return (sum OpenRequisitionDTorITLinesRel.DerivedFixitQuantityInStockForSupplyDemand)

		DerivedRQSupplyDemandQuantity is a DerivedField
			type is like Quantity
			return (sum WarehouseDemandLinesRQSupplyRel.Quantity)

		DerivedToMakeWOQuantityStock is a DerivedField  
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return (sum WarehouseDemandLinesWOSupplyRel.Quantity)

		DerivedToMakeWOQuantityStockNoPrecision is a DerivedField  
			type is like Quantity
			return (sum WarehouseDemandLinesWOSupplyRel.Quantity)

		DerivedWOSupplyDemandQuantity is a DerivedField
			type is like Quantity
			return (sum WarehouseDemandLinesWOSupplyRel.Quantity)

		DerivedAllSupplyDemandQuantity is a DerivedField
			type is like Quantity
			return (DerivedPOSupplyDemandQuantity + DerivedRQSupplyDemandQuantity + DerivedWOSupplyDemandQuantity)



		DerivedReorderQtyPlusSafetyStock is a ComputeField
			type is like UnsignedQuantity
			restricted
			(ReorderQuantity + SafetyStock)

		DerivedOverStockPercent	is a ComputeField
			type is Percent size 5.2
			default label is "PercentOver"
			((StockOnHandQuantity - DerivedReorderQtyPlusSafetyStock) / DerivedReorderQtyPlusSafetyStock)

		DerivedExtendedCost is a DerivedField
			type is like UnitCost
				precision is Item.NumberOfDecimalsCost
			default label is "ExtendedCost"
			initialize LocalTotalExtendedCost
			for each InventoryCostHistoryRel
				LocalTotalExtendedCost	+= (each.UnitCost * (each.ReceivedQuantity - each.InspectionHoldQuantity - each.UsedQuantity))
			return LocalTotalExtendedCost


		OnOrderValue 													is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.CostingMethod.StandardCosting)
				return (StandardCost * OnOrderQuantity)
			else
				return (AverageCost * OnOrderQuantity)

		BackorderedValue 												is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.CostingMethod.StandardCosting)
				return (StandardCost * BackorderedQuantity)
			else
				return (AverageCost * BackorderedQuantity)

		DerivedStrippedManufacturerNumber is a DerivedField
			type is like ManufacturerNumber
			return com.lawson.apps.procurement.base.StringUtils.stripNonAlphaNumeric(ManufacturerNumber)



		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedUniqueAccountingEntity is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "Unique_AccountingEntity"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
			
		DerivedItemFlag is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsCSF_NonSOR_For_Item"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedConfigFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedConfigDocID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		BODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return Item.bod id.VariationID

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha 4
			restricted
			return Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup

		DerivedItemGroup is a DerivedField
			type is Alpha 5
			restricted
			return Item.ItemGroup

		DerivedBODDocumentID is a DerivedField
			type is Alpha size 45
			restricted
			if(DerivedConfigDocID = "Y")
				return Item
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedItemGroup + DerivedDelimiter + Item

		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp

		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedBODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Delete or LocalActionCode.Delete)
				return "Delete"
			else
			if (action type.Create or LocalActionCode.Create)
				return "Add"
			else
			if (action type.Update or LocalActionCode.Update)
				return "Replace"
			else
				return ""

		DerivedDefaultBODLocation is a DerivedField
			type is AlphaUpper size 20
			restricted
			return ""

		DerivedCrossAccountingEntity is a DerivedField
			type is AlphaUpper size 12
			restricted
			if(DerivedConfigDocID = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return DerivedCrossAE
						
		DerivedCrossAE is a DerivedField
			type is AlphaUpper size 12
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(FSMBODCrossReferenceDetailRel exists)
					LocalCrossAEValue = FSMBODCrossReferenceDetailRel.DestinationValue
				else
					LocalConfigurationParameter = "SyncItemMaster_Outbound_AccountingEntity"
					if (FSMBODConfigurationParameterRel exists)
						LocalCrossAEValue = FSMBODConfigurationParameterRel.Value
					if(LocalBODCrossReferenceAE not entered)
						LocalCrossAEValue = DerivedItemGroup
				return LocalCrossAEValue
			else
				return LocalCrossAEValue

		DerivedBODFormattedId is a DerivedField
			type is Alpha 100
			restricted
			return  "infor-nid:" + DerivedTenantID + ":" +DerivedCrossAccountingEntity + ":" + DerivedDefaultBODLocation+":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker

		DerivedBODItemStatus is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Delete or LocalActionCode.Delete)
				return "Deleted"
			else
			if (action type.Create or action type.Update or LocalActionCode.Create or LocalActionCode.Update)
				return "Open"
			else
				return ""

		DerivedLotTrackFlag is a DerivedField
			type is Alpha 10
			restricted
			return Item.DerivedLotTrackFlag

		DerivedSerialTrackFlag is a DerivedField
			type is Alpha 10
			restricted
			return Item.DerivedSerialTrackFlag

		DerivedCatchWeightFlag is a DerivedField
			type is Alpha 10
			restricted
			return Item.DerivedCatchWeightFlag

		DerivedType is a DerivedField
			type is Alpha 20
			restricted
			return ""

		DerivedTrackingFlag is a DerivedField
			type is Alpha 20
			restricted
			return ""

		ItemUOMXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			return Item.ItemUOMXMLBOD

		HIBCCItemUPNXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			return Item.HIBCCItemUPNXMLBOD

		DerivedItemManufacturerNumber is a DerivedField
			type is Alpha 50
			restricted
			return Item.ManufacturerNumber

		DerivedItemDescription2 is a DerivedField
			type is Alpha 60
			restricted
			return Item.Description2

		DerivedItemHazardCode is a DerivedField
			type is like HazardCode
			restricted
			return Item.HazardCode

		DerivedItemDescription is a DerivedField
			type is Alpha 60
			restricted
			return Item.Description

		DerivedItemUserField1 is a DerivedField	
			type is Alpha 30
			restricted
			return Item.UserField1

		DerivedItemUserField2 is a DerivedField	
			type is Alpha 30
			restricted
			return Item.UserField2

		DerivedItemUserField3 is a DerivedField	
			type is Alpha 30
			restricted
			return Item.UserField3

		DerivedItemUserField4 is a DerivedField	
			type is Alpha 30
			restricted
			return Item.UserField4

		DerivedItemUserField5 is a DerivedField	
			type is Alpha 30
			restricted
			return Item.UserField5

		DerivedItemMajorSalesClass is a DerivedField
			type is like MajorSalesClass
			restricted
			return Item.MajorSalesClass

		DerivedItemMinorSalesClass is a DerivedField
			type is like MinorSalesClass
			restricted
			return Item.MinorSalesClass
		
		DerivedItemMajorPPEClass is a DerivedField
			type is like MajorPPEClass
			restricted
			return Item.MajorPPEClass
		
		DerivedItemMinorPPEClass is a DerivedField
			type is like MinorPPEClass
			restricted
			return Item.MinorPPEClass
		
		DerivedItemPersonalProtectiveEquipment is a DerivedField
			type is Alpha 10
			restricted
			return Item.PersonalProtectiveEquipment
		
		DerivedItemClinicalSystemUse is a DerivedField
			type is Alpha 10
			restricted
			return Item.ClinicalSystemUse
		
		DerivedItemCriticalItem is a DerivedField
			type is Alpha 10
			restricted
			return Item.CriticalItem

		DerivedItemMajorInventoryClass is a DerivedField
			type is like MajorInventoryClass
			restricted
			return Item.MajorInventoryClass

		DerivedItemMinorInventoryClass is a DerivedField
			type is like MinorInventoryClass
			restricted
			return Item.MinorInventoryClass

		DerivedItemMajorPurchasingClass is a DerivedField
			type is like MajorPurchasingClass
			restricted
			return Item.MajorPurchasingClass

		DerivedItemMinorPurchasingClass is a DerivedField
			type is like MinorPurchasingClass
			restricted
			return Item.MinorPurchasingClass
		DerivedItemFormattedCreateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return Item.DerivedItemFormattedCreateTimeStamp

		DerivedItemFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return Item.DerivedItemFormattedUpdateTimeStamp

		DerivedItemUPC is a DerivedField
			type is AlphaUpper size 15
			restricted
			return Item.DerivedItemUPC

		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return Item.DerivedLastupdateBy

		DerivedMCodeandMDivision is a DerivedField
			type is Alpha 15
			restricted
			return Item.DerivedMCodeandMDivision

		DerivedUNSPSCCode is a DerivedField
			type is Alpha 15
			restricted
			return Item.DerivedUNSPSCCode

		DerivedPatientChargeable is a DerivedField
			type is Boolean
			restricted
			return Item.PatientChargeable

		DerivedLatex is a DerivedField
			type is Numeric 1
			restricted
			return Item.Latex

		DerivedChargeNumber is a DerivedField
			type is AlphaUpper size 80
			restricted
			return Item.ChargeNumber

		DerivedIssueGLChartAccount is a DerivedField
			type is Alpha 26
			restricted
			return Item.DerivedIssueGLChartAccount

		DerivedSecondaryUOMConversion is a DerivedField
			type is AlphaUpper size 4
			restricted
			return Item.SecondaryUOMConversion

		ItemLocationMROXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			ItemLocationMROXMLBOD = template.IONSyncItemMaster_ItemLocation_ItemLocationMRO_ST document for this instance

		DerivedItemEAMLocation is a DerivedField
			type is XMLDocument
			restricted
			if(InventoryLocation.EAMLocation.EAMLocation)
				return ItemLocationMROXMLBOD
			else
				return ""

		DerivedItemLocationCurrency is a DerivedField
			type is Alpha 5
			restricted
			return Company.GeneralLedgerCompany.Currency

		DerivedItemLocationItemCost is a DerivedField
			type is Alpha 21
			restricted
			if(StandardCost > 0)
				return StandardCost
			else
				return AverageCost

		DerivedStockUOM is a DerivedField
			type is Alpha 4
			restricted
			return Item.StockUOM

		DerivedManufacturerDescription is a DerivedField
			type is Alpha 70
			restricted
			if(ManufacturerDescription != "")
				return ManufacturerDescription
			else
				return 	ItemManufacturerDescription

		DerivedUOMPerqunatity is a DerivedField
			type is Alpha 13
			restricted
			return BODStockUOMRel.UOMConversion

		DerivedItemLocationCostingMethod is a DerivedField	
			type is Alpha 20
			restricted
			if(StandardCost > 0)
				return "Standard"
			else
				return "MovingAverage"

		DerivedItemLocationPrefBin is a DerivedField
			type is Alpha 10
			restricted
			if(PreferredBin = blank)
				return "*"
			else
				return PreferredBin

		DerivedAccountingEntity is a DerivedField
			type is Alpha size 25
			restricted
			return Company.GeneralLedgerCompany.AccountingEntity

		DerivedItemLocationAccountingEntity	is a DerivedField
			type is Alpha 60
			if(DerivedConfigDocID != "Y")
				if(DerivedUniqueAccountingEntity != "Y")
					return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedAccountingEntity
				else
					return DerivedCrossAccountingEntity
			else
				return DerivedCrossAccountingEntity

		DerivedItemLocation is a DerivedField
			type is Alpha  25
			restricted
			if(DerivedConfigDocID != "Y")
				return Company using "%d" + DerivedDelimiter + InventoryLocation
			else
				return ""

		DerivedItemLocationStatus is a DerivedField	
			type is Alpha 10
			restricted
			if(Active)
				return "Open"
			else
				return "Deleted"
		
		DerivedReorderPolicy is a DerivedField
			type is Alpha 50
			restricted
			if(ReorderPolicy = "FOP")
				return "FixedOrderPoint"
			else
			if(ReorderPolicy = "TPO")
				return "TimePhasedOrderPoint"
			else
				return ""
				
		DerivedItemCommodityCode is a DerivedField
			type is like CommCodes
			restricted
			return Item.CommodityCode
		
		DerivedLocalCode is a DerivedField
			type is Alpha 35
			restricted
			return Item.LocalCode
			
		DerivedCommodityCode is a DerivedField
            type is like CommCodes
            restricted
            return Item.DerivedCommodityCode
            
        DerivedEffectiveDate is a DerivedField
            type is Alpha 15
            restricted
            return Item.DerivedEffectiveDate
            
        DerivedExpirationDate is a DerivedField
            type is Alpha 15
            restricted
            return Item.DerivedExpirationDate
        
        DerivedNumberOfDecimalsQuantity is a DerivedField
            type is Numeric 2
            restricted
            return Item.NumberOfDecimalsQuantity
            
        DerivedNumberOfDecimalsPrice is a DerivedField
            type is Numeric 2
            restricted
            return Item.NumberOfDecimalsPrice
            
        DerivedNumberOfDecimalsCost is a DerivedField
            type is Numeric 2
            restricted
            return Item.NumberOfDecimalsCost
		
		ItemLocationXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedConfigDocID != "Y")
				return Item.ItemLocationXMLBOD
			else
				return ""

		VendorItemXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			return Item.VendorItemXMLBOD
		
		ItemLocationCleanDocIDXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedConfigDocID = "Y")
				if (OtherLocationsForItemRel exist)
					for each OtherLocationsForItemRel
						ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_ItemLocation_Line_CleanDocID_ST document for each
			else
				return ""
				
		ItemMasterCleanDocIDXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedConfigDocID = "Y")
				ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_ItemLocation_CleanDocID_ST document for this instance
			else
				return ""
			
		ItemMasterXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedConfigDocID != "Y")
				ItemMasterXMLBOD = template.IONSyncItemMaster_ItemLocation_Header_ST document for this instance
			else
				return ""
				
		ItemMasterBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedConfigDocID = "Y")
				return ItemMasterCleanDocIDXMLBOD
			else
				return ItemMasterXMLBOD



		DerivedBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedBODAccountingEntity + ":" + DerivedLocation + ":" + DerivedDocumentID +":"+"?InventoryCount&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
				
		DerivedCrossGLC is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedConfigFEG = "Y")
				return Company.FinanceEnterpriseGroup + DerivedDelimiter + Company using "%d"
			else
				return Company using "%d"
				
		DerivedGLCCrossAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if(LocalBODAEAlreadyExecuted != true)
				LocalBODAEAlreadyExecuted = true
				if (FSMBODGLCCrossReferenceDetailRel.DestinationValue entered)
					LocalCrossAccountingEntity = FSMBODGLCCrossReferenceDetailRel.DestinationValue
				else
					LocalCrossAccountingEntity = DerivedCrossGLC
				return LocalCrossAccountingEntity
			else
				return LocalCrossAccountingEntity
		
		DerivedBODAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedConfigDocID = "" or DerivedConfigDocID = "N")
				return Company.FinanceEnterpriseGroup + DerivedDelimiter + Company.GeneralLedgerCompany.AccountingEntity
			else
			if (DerivedConfigDocID = "Y")
				return DerivedGLCCrossAccountingEntity
		
		DerivedInvCountAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedConfigDocID = "" or DerivedConfigDocID = "N")
				return Company.GeneralLedgerCompany.AccountingEntity
			else
			if (DerivedConfigDocID = "Y")
				return DerivedGLCCrossAccountingEntity
				
		DerivedBODVariationID is a DerivedField
			type is Numeric size 25
			restricted
			DerivedBODVariationID = bod id.VariationID + 1
			return DerivedBODVariationID

		DerivedDocumentID is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedConfigDocID = "" or DerivedConfigDocID = "N")
				return Company using "%d" + DerivedDelimiter + InventoryLocation + DerivedDelimiter + Item.Item
			else
			if (DerivedConfigDocID = "Y")
				return Item.Item

		DerivedActionCode is a DerivedField	
			type is Alpha size 10
			restricted
			return "Add"

		DerivedFEG is a DerivedField
			type is Alpha size 10
			restricted
			return Company.FinanceEnterpriseGroup

		DerivedClassCode is a DerivedField
			type is Alpha size 30
			restricted
			return ""

		DerivedClassCodeListID is a DerivedField
			type is Alpha size 30
			restricted
			return ""

		DerivedItemType is a DerivedField
			type is Alpha size 30
			restricted
			return ""

		DerivedStatus is a DerivedField
			type is Alpha size 10
			restricted
			if (Active)
				return "Open"
			else
				return "Closed"

		DerivedBODAverageCost is a DerivedField
			type is Alpha size 100
			DerivedBODAverageCost = AverageCost
			if (DerivedBODAverageCost = "0E-8")
				return "0.0000"
			else
				return AverageCost

		DerivedLineAE is a DerivedField
			type is Alpha size 50
			restricted
			if (DerivedConfigDocID = "Y")
				return DerivedGLCCrossAccountingEntity
			else
				return ""
		
		DerivedLocation is a DerivedField
			type is Alpha size 100
			restricted
			if (DerivedConfigDocID = "" or DerivedConfigDocID = "N")
				return Company using "%d" + DerivedDelimiter + InventoryLocation
			else
			if (DerivedConfigDocID = "Y")
				return InventoryLocation
		
		DerivedItem is a DerivedField
			type is Alpha size 20
			restricted
			if (DerivedItemFlag = "Y" or DerivedConfigDocID = "Y")
				return Item
			else
				return DerivedFEG + DerivedDelimiter + Item.ItemGroup + DerivedDelimiter + Item
		
		DerivedLineXML is a DerivedField
			type is XMLDocument
			restricted
			if (DerivedConfigDocID = "" or DerivedConfigDocID = "N")
				DerivedLineXML = template.IONSyncInventoryCount_LineXML_Item_ST document for this instance
				return DerivedLineXML
			else
			if (DerivedConfigDocID = "Y")
				DerivedLineXML = template.IONSyncInventoryCount_LineXML_CleanDocID_Item_ST document for this instance
			
		SyncInventoryCountBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncInventoryCountBODXML = template.IONSyncInventoryCount_ItemLocation_ST document for this instance
			return SyncInventoryCountBODXML


        StockOnHandContextField is a DerivedField
            type is Alpha size up to 50
            default label is "StockOnHand"
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.StockOnHandQuantity + " " + ItemLocationStockUOM.UnitOfMeasure
			else
			if (not HasSupplementalUOM)
				return StockOnHandQuantity + " " + Item.StockUOM
			else
				if (IsCatchWeightItem)
					return StockOnHandQuantity + " " + Item.StockUOM + "\u000a" + SecondaryQuantity + " " + Item.SecondaryUOM
				else
					return StockOnHandQuantity + " " + Item.StockUOM + "\u000a" + StockOnHandQuantityInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

        AvailableQtyUOMContextField is a DerivedField
            type is Alpha size up to 50
            default label is "AvailableToAllocate"
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.AvailableQuantity + " " + ItemLocationStockUOM.UnitOfMeasure

			else
			if (not HasSupplementalUOM)
				if (IsCatchWeightItem)
					return AvailableQuantity + " " + Item.SecondaryUOM
				else
					return AvailableQuantity + " " + Item.StockUOM
			else
				if (IsCatchWeightItem)
					return AvailableQuantityInStockUOM + " " + Item.StockUOM + "\u000a" + AvailableQuantity + " " + Item.SecondaryUOM
				else
					return AvailableQuantity + " " + Item.StockUOM + "\u000a" + AvailableQuantityInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		DerivedStandardCostDisplay is a DerivedField
            type is Alpha size up to 50
            default label is "StandardCost"
			if (HasItemLocationStockUOM)
				return StandardCostInLocationStockUOM
			else
			if (not HasSupplementalUOM)
				return StandardCost
			else
				return StandardCost + " " + Item.StockUOM + "\u000a" + DerivedStandardCostInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		DerivedAverageCostDisplay is a DerivedField
            type is Alpha size up to 50
            default label is "AverageCost"
			if (HasItemLocationStockUOM)
				return LocationItemUOMConversion.AverageCost
			else
            if (not HasSupplementalUOM)
            	return DerivedItemAverageCost
            else
            	return DerivedAverageCost + " " + Item.StockUOM + "\u000a" + DerivedAverageCostInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		DerivedAverageAddOnCostDisplay is a DerivedField
            type is Alpha size up to 50
            default label is "AverageAddOnCost"
 			if (HasItemLocationStockUOM)
				return AverageAddOnCostInLocationStockUOM
			else
            if (not HasSupplementalUOM)
            	return AverageAddOnCost
            else
            	return AverageAddOnCost + " " + Item.StockUOM + "\u000a" + AverageAddOnCostInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		DerivedLastReceiptCostDisplay is a DerivedField
            type is Alpha size up to 50
            default label is "LastReceiptCost"
			if (HasItemLocationStockUOM)
				return LastReceiptCostInLocationStockUOM
			else
            if (not HasSupplementalUOM)
            	return LastReceiptCost
            else
            	return LastReceiptCost + " " + Item.StockUOM + "\u000a" + LastReceiptCostInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		DerivedLastIssueCostDisplay is a DerivedField
            type is Alpha size up to 50
            default label is "LastIssueCost"
			if (HasItemLocationStockUOM)
				return LastIssueCostInLocationStockUOM
			else
            if (not HasSupplementalUOM)
            	return LastIssueCost
            else
            	return LastIssueCost + " " + Item.StockUOM + "\u000a" + LastIssueCostInSupplementalUOM + " " + SupplementalUOM.UnitOfMeasure

		StatusMsgTagField is a DerivedField
			type is MessageField
			default label is "Status"
			if (Active)
				if (Discontinued)
					return DiscontinuedMessage
				else
					return ActiveMessage
			else
				return InactiveMessage

		RedAlert7DaysUsageMessage is a MessageField
			"DaysOnHand7DayUsageIsLessThanOrEqual7"
		YellowAlert7DaysUsageMessage is a MessageField
			"DaysOnHand7DayUsageIsBetween7And10"
		RedAlert30DaysUsageMessage is a MessageField
			"DaysOnHand30DayUsageIsLessThanOrEqual30"
		YellowAlert30DaysUsageMessage is a MessageField
			"DaysOnHand30DayUsageIsBetween30And45"
		DaysOnHandAlert is a DerivedField
			type is MessageField
			if (RedAlert7DaysUsage)
				return RedAlert7DaysUsageMessage
			else
			if (YellowAlert7DaysUsage)
				return YellowAlert7DaysUsageMessage
			else
			if (RedAlert30DaysUsage)
				return RedAlert30DaysUsageMessage
			else
			if (YellowAlert30DaysUsage)
				return YellowAlert30DaysUsageMessage

		ActiveMessage is a MessageField
			restricted
			"Active"

		DiscontinuedMessage is a MessageField
			restricted
			"Discontinued"

		InactiveMessage is a MessageField
			restricted
			"Inactive"

		DemandQuantityWithUOM is a LabelField
			"<DemandQuantity>_<Item.StockUOM>"

		OnOrderQuantityWithUOM is a LabelField
			"<OnOrderQuantity>_<Item.StockUOM>"

		IntransitQuantityWithUOM is a LabelField
			"<IntransitQuantity>_<Item.StockUOM>"

		StockOnHandAndReorderPointDisplay is a LabelField
			"OnHand:<StockOnHandQuantity>|Reorder:<ReorderPoint>"

		AllocatedAndOnOrderDisplay is a LabelField
			"Allocated:<AllocatedQuantity>|OnOrder:<OnOrderQuantity>"

		OnHandAndDemandDisplay is a LabelField
			"OnHand:<StockOnHandQuantity>|Demand:<DemandQuantity>"

		OnOrderAndInTransitDisplay is a LabelField
			"OnOrder:<OnOrderQuantity>|InTransit:<IntransitQuantity>"

		SOHBelowReorderPointText is a MessageField
			"SOHBelowReorderPoint"

		SOHAtReorderPointText is a MessageField
			"SOHAtReorderPoint"
						 
		SOHWithin10OfReorderPointText is a MessageField	
			"SOHWithin10%_ofReorderPoint"	

		SOHBelowReorderPointAndHasOnOrderText is a MessageField
			"SOHBelowReorderPointAndHasOnOrderQuantities"

		DerivedReorderPointMessage is a DerivedField
			type is MessageField
			if (SOHAtReorderPoint)
				return SOHAtReorderPointText
			else
			if (SOHBelowReorderPoint)
				return SOHBelowReorderPointText
			else
			if (SOHWithin10OfReorderPoint)
				return SOHWithin10OfReorderPointText
	
		DerivedBelowReorderPointMessage is a DerivedField
			type is MessageField
			if (SOHBelowReorderAndHasOnOrderQuantity)
				return SOHBelowReorderPointAndHasOnOrderText
			else
			if (StockOnHandBelowReorderPoint)
				return SOHBelowReorderPointText

		CreateLabel is a LabelField
			restricted
			"Item_Location"

		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			if (ItemLocationRecordExists)
				return InventoryLocation.RepresentativeText
			else
				return CreateLabel

		ParLocationUtilizationNoDataToProcessMessage is a MessageField
			"NoDataToProcessFor_\Par_\Location_\Utilization"

		DerivedLastCostUsed is a DerivedField
			type is like InternationalCost
			restricted
			if (AverageCost entered)
				return AverageCost
			else
				return LastReceiptCost

		GTINForDefaultTransactionUOM is a DerivedField
			type is like ItemGTIN
			default label is "GTINForDefaultTransactionUOM"
			return first GTINForDefaultTransactionUOMRel.ItemGTIN

		DaysOnHandNoMovementMessage is a DerivedField
			type is MessageField
			if (Company.DaysOnHandNoMovementMessage entered)
				return Company.DaysOnHandNoMovementMessage
			else
				return "No Movement"

		UsageIn7Days is a MeasureField
			type is like Quantity
			default label is "7DayUsage"
			sum TransactionLinesInLast7DaysRel.DaysOnHandStockIssueQuantity

		AverageDailyUsage7Days is a MeasureField
			type is like Quantity
			default label is "AverageDailyUsage7Days"
			UsageIn7Days / 7

		DaysOnHand7Days is a MeasureField
			type is Numeric 4
			default label is "DaysOnHand7DayUsage"
			return high value when divide by zero 
			sum DerivedStockOnHandQuantity / AverageDailyUsage7Days

		UsageIn30Days is a MeasureField
			type is like Quantity
			default label is "30DayUsage"
			sum TransactionLinesInLast30DaysRel.DaysOnHandStockIssueQuantity

		AverageDailyUsage30Days is a MeasureField
			type is like Quantity
			default label is "AverageDailyUsage30Days"
			UsageIn30Days / 30

		DaysOnHand30Days is a MeasureField
			type is Numeric 4
			default label is "DaysOnHand30DayUsage"
			return high value when divide by zero 
			sum DerivedStockOnHandQuantity / AverageDailyUsage30Days

		UsageIn90Days is a MeasureField
			type is like Quantity
			default label is "90DayUsage"
			sum TransactionLinesInLast90DaysRel.DaysOnHandStockIssueQuantity

		AverageDailyUsage90Days is a MeasureField
			type is like Quantity
			default label is "AverageDailyUsage90Days"
			UsageIn90Days / 90

		DaysOnHand90Days is a MeasureField
			type is Numeric 4
			default label is "DaysOnHand90DayUsage"
			return high value when divide by zero 
			sum DerivedStockOnHandQuantity / AverageDailyUsage90Days

		UsageIn365Days is a MeasureField
			type is like Quantity
			default label is "365DayUsage"
			sum TransactionLinesInLast365DaysRel.DaysOnHandStockIssueQuantity

		AverageDailyUsage365Days is a MeasureField
			type is like Quantity
			default label is "AverageDailyUsage365Days"
			UsageIn365Days / 365

		DaysOnHand365Days is a MeasureField
			type is Numeric 4
			default label is "DaysOnHand365DayUsage"
			return high value when divide by zero 
			sum DerivedStockOnHandQuantity / AverageDailyUsage365Days


		DerivedDefaultBuyUOM is a DerivedField
			type is like UnitOfMeasure
			restricted
			if (DefaultSourceUOM entered)
				return DefaultSourceUOM.UnitOfMeasure
			if (HasItemLocationStockUOM)
				return first LocationItemUOMForDefaultBuyingRel.UnitOfMeasure
			if(IsReplenishmentFromVendor 
			and VendorItemsForItemVendorRel.VendorBuyUOM.UnitOfMeasure entered)
				return VendorItemsForItemVendorRel.VendorBuyUOM.UnitOfMeasure
			return first ItemUOMForDefaultBuyingRel.UnitOfMeasure
			
		DerivedDefaultTransactionUOM is a DerivedField
			type is like UnitOfMeasure
			restricted
			if (DefaultTransactionUOM entered)
				return DefaultTransactionUOM.UnitOfMeasure
			if (HasItemLocationStockUOM)
				return first LocationItemUOMDefaultForInventoryTransactionsRel.UnitOfMeasure
			return first ItemUOMForDefaultInventoryTransactionsRel.UnitOfMeasure


		MSCMConfigureKanbanLocationsMessage is a MessageField
			"Configure_Kanban_Locations_Message:_"
		
		DerivedParLevelUOM is a DerivedField
			type is Alpha 20
			restricted
			return ReorderPoint + " / " + DerivedStockUOM

		DerivedKanbanNumberOfBins is a DerivedField
			type is Numeric 3
			restricted
			if (KanbanNumberOfBins entered)
				return KanbanNumberOfBins input value
			else
				return 2

		DerivedDefaultLabelTemplate is a DerivedField
			type is like LabelTemplate
			restricted
			if (IsInventoryLocation)
				LocalLabelType = LabelTemplate.LabelType.StockItem
				return first DefaultLabelTemplateRel.LabelTemplate
			else
				LocalLabelType = LabelTemplate.LabelType.ParItem
				return first DefaultLabelTemplateRel.LabelTemplate
		
		DerivedDefaultBinLabelTemplate is a DerivedField
			type is like LabelTemplate
			restricted
			LocalLabelType = LabelTemplate.LabelType.ParBin
			return first DefaultLabelTemplateRel.LabelTemplate

		WarehouseMessageText is a MessageField
			"<InventoryLocation>IsA_Warehouse;_Bin_TrackingIsASuggestedSetupToUtilize_Warehouse_Storage_Location"

	Dimensions

		Company.CostingMethod
			dimension name is CostingMethod
		ShelfLocationRel.Bin
			dimension name is ShelfLocation
		ReorderDocument
		Item
			caption is "<ItemLongName>"
			Attributes
				ItemLongName
				ItemGroup
				Item
				Description
				Description2
				StockUOM
				GenericName
				MajorPurchasingClass
				MajorPurchasingClassDesc
				MinorPurchasingClass
				MinorPurchasingClassDesc
				MajorInventoryClass
				MajorInventoryClassDesc
				MinorInventoryClass
				MinorInventoryClassDesc
				UNSPSCCode.UNSPSCSegment
				UNSPSCCode.UNSPSCFamily
				UNSPSCCode.UNSPSCClass
				UNSPSCCode.UNSPSCCommodity
				Active
				AddedDate
				CommodityCode
				Consignment
				HazardCode
				Manufacturer.ManufacturerCode
				Manufacturer.ManufacturerDivision
				ManufacturerNumber
			Hierarchies
				PurchasingClass
					base level included
					Attributes
						ItemGroup
						MajorPurchasingClass
						MinorPurchasingClass
				InventoryClass
					base level included
					Attributes
						ItemGroup
						MajorInventoryClass
						MinorInventoryClass
				UNSPSC
					base level included
					Attributes
						ItemGroup
						UNSPSCCode.UNSPSCSegment
						UNSPSCCode.UNSPSCFamily
						UNSPSCCode.UNSPSCClass
						UNSPSCCode.UNSPSCCommodity
				Manufacturer
					base level included
					Attributes
						ItemGroup
						Manufacturer.ManufacturerCode
						Manufacturer.ManufacturerDivision
						ManufacturerNumber
				HazardCode
					base level included
					Attributes
						ItemGroup

		Manufacturer
			Attributes
				Manufacturer.ManufacturerCode
				Manufacturer.ManufacturerDivision

	  	ItemLocation
	  		dimension name is Location
	  		Attributes
				DefaultTransactionUOM
				PreferredBin
				BinTracked
				HasTransactionActivity
				ReorderQuantityCode
				ReorderPointCode
				ReorderQuantity


	Measures
		AllocatedQuantity
		AverageAddOnCost
		AverageCost
		AverageStockOnHandQuantity
		BackorderedQuantity
		BackorderedValue
		CurrentInventoryValue
		InProcessQuantity
		InspectionHoldQuantity
		IntransitQuantity
		LastIssueCost
		LastLeadtime
		LastReceiptCost
		LeadtimeDays
		OnOrderQuantity
		OnOrderValue
		OverheadUnitCost
		PreviousLeadtime
		ReorderQuantity
		StockOnHandQuantity
		UnallocatedQuantity

	Field Groups
		TextSearchable
			Manufacturer
			ManufacturerNumber

		ConsolidatedItemMasterFields 
			Active 
			Discontinued
			PatientChargeable 
			Manufacturer
			ManufacturerNumber
			ChargeNumber 
			DefaultTransactionUOM 
			PurchaseTaxable

	Conditions


		ZeroAvailableQuantity
			restricted
			when (AvailableQuantity <= 0)

		
		NoCostHistoryOrHasNoChargeReceipts
			restricted
			when (InventoryCostHistoryRel not exists
			or    CostHistoriesWithNochargeReceiptsRel exists)

		IsInventoryLocation
			restricted
			when (InventoryLocation.LocationType.InventoryLocation)

		IsActive
			restricted
			when (Active)

		IsActiveAndNotDiscontinued
			restricted
			when (Active
			and  !Discontinued)

		ShowDaysOnHand
			restricted
			when (IsActiveAndNotDiscontinued
			and   actor.context.FinanceEnterpriseGroup.DaysOnHandInUse)

		ManufacturerMismatch
			restricted
			when (Manufacturer 			!= Item.Manufacturer
			or    ManufacturerNumber 	!= Item.ManufacturerNumber)

		DifferentFutureStandardCost
			restricted
			when (StandardCost entered
			and   FutureStandardCost entered
			and   StandardCost != FutureStandardCost)

		RecallNoticesExist
			restricted
			when (RecallProductItemsRel exists)

		SomeChargeInformationEntered
			restricted
			when (ChargeNumber entered
			or    PatientChargeable = true)

		NoChargeInformationEntered
			restricted
			when (ChargeNumber !entered
			and   PatientChargeable = false)

		HasStockOnHand
			restricted
			when (StockOnHandQuantity > 0)

		ZeroStockOnHand
			restricted
			when (StockOnHandQuantity = 0
			and   Active
			and   InventoryTracked
			and   IsInventoryLocation)

		AvailableToAllocateAllocatedAdd
			classic name is ALC-ALLOC-ADD
			restricted
			when (Company.AvailableToAllocateAllocated = "+")

		AvailableToAllocateAllocatedSubtract
			classic name is ALC-ALLOC-SUB
			restricted
			when (Company.AvailableToAllocateAllocated.SubtractFromStockOnHand)

		AvailableToAllocateBackorderAdd
			classic name is ALC-BKORD-ADD
			restricted
			when (Company.AvailableToAllocateBackorder = "+")

		AvailableToAllocateBackorderSubtract
			classic name is ALC-BKORD-SUB
			restricted
			when (Company.AvailableToAllocateBackorder.SubtractFromStockOnHand)

		AvailableToAllocateInspectionHoldAdd
			classic name is ALC-HOLD-ADD
			restricted
			when (Company.AvailableToAllocateInspectionHold = "+")

		AvailableToAllocateInspectionHoldSubtract
			classic name is ALC-HOLD-SUB
			restricted
			when (Company.AvailableToAllocateInspectionHold.SubtractFromStockOnHand)

		AvailableToAllocateInProcessAdd
			classic name is ALC-INPRC-ADD
			restricted
			when (Company.AvailableToAllocateInProcess = "+")

		AvailableToAllocateInProcessSubtract
			classic name is ALC-INPRC-SUB
			restricted
			when (Company.AvailableToAllocateInProcess.SubtractFromStockOnHand)

		AvailableToAllocateIntransitAdd
			classic name is ALC-INTRN-ADD
			restricted
			when (Company.AvailableToAllocateIntransit.AddToStockOnHand)

		AvailableToAllocateIntransitSubtract
			classic name is ALC-INTRN-SUB
			restricted
			when (Company.AvailableToAllocateIntransit = "-")

		AvailableToAllocateOnOrderAdd
			classic name is ALC-ONORD-ADD
			restricted
			when (Company.AvailableToAllocateOnOrder.AddToStockOnHand)

		AvailableToAllocateOnOrderSubtract
			classic name is ALC-ONORD-SUB
			restricted
			when (Company.AvailableToAllocateOnOrder = "-")

		AvailableToAllocateWIPAdd
			classic name is ALC-WIP-ADD
			restricted
			when (Company.AvailableToAllocateWIP.AddToStockOnHand)

		AvailableToAllocateWIPSubtract
			classic name is ALC-WIP-SUB
			restricted
			when (Company.AvailableToAllocateWIP = "-")

		IsCatchWeightItem
			restricted
			when (not Item.CatchWeightCode.NotCatchWeight)

		IsNotCatchWeightItem
			restricted
			when (Item.CatchWeightCode.NotCatchWeight)

		IsLotTracked
			restricted
			when (not LotTracked.NotLotTracked)

		IsNotLotTracked
			restricted
			when (LotTracked.NotLotTracked)

		IsLotTrackedOnIssueOrReceipts
			restricted
			when (LotTracked.LotRequiredAtReceipt
			or   LotTracked.LotRequiredAtIssue)
			
		IsNotLotTrackedOnIssue
			restricted
			when (not LotTracked.LotRequiredAtIssue)

		IsSerialTracked
			restricted
			when (not SerialTracked.NotSerialTracked)

		IsSerialTrackedOnIssueOrReceipts
			restricted
			when (SerialTracked.SerialRequiredAtReceipt
			or   SerialTracked.SerialRequiredAtIssue)

		IsNotSerialTracked
			restricted
			when (SerialTracked.NotSerialTracked)
			
		IsNotSerialTrackedOnIssue
			restricted
			when (not SerialTracked.SerialRequiredAtIssue)

		IsUDITracked
			restricted
			when (UDITracked.UDIRequiredAtReceipt
			or    UDITracked.UDIRequiredAtIssue)





		WarehouseDemandExists
			classic name is HAS-DEMAND
			restricted
			when (first WarehouseDemandLinesRel exists)

		StockOnHandDetailExists
			classic name is HAS-DETAIL
			restricted
			when (first StockOnHandDetailsRel exists)

		HasPurchaseTaxCode
			classic name is HAS-PURCH-TAX
			restricted
			when (PurchaseTaxCode entered)

		HasSellTaxCode
			classic name is HAS-SELL-TAX
			restricted
			when (SellTaxCode entered)

		ItemSerialExists
			classic name is HAS-SERIAL
			restricted
			when (first ItemSerialNumbersRel exists)

		IsInactive
			restricted
			when (not Active)

		HasItem
			classic name is ITEM-ENTERED
			restricted
			when (Item entered)

		HasManufacturerCode
			classic name is MANUF-CD-ENTRD
			restricted
			when (Manufacturer.ManufacturerCode entered)

		NonCatchWeightItem
			classic name is NON-CWT-ITEM
			restricted
			when (Item.CatchWeightCode.NotCatchWeight)

		HasPreferredBin
			classic name is PREFERRED-BIN
			restricted
			when (PreferredBin entered
			and   BinTracked)

		HasReplacementManufacturerCode
			classic name is REPL-MFG-ENTRD
			restricted
			when (ReplItemlocRel.Manufacturer.ManufacturerCode entered)

		IsRrplMfgEntrd
			restricted
			when (RrplItemlocRel.Manufacturer.ManufacturerCode entered)

		AvailableToSellAllocatedAdd
			classic name is SELL-ALLOC-ADD
			restricted
			when (Company.AvailableToSellAllocated = "+")

		AvailableToSellAllocatedSubtract
			classic name is SELL-ALLOC-SUB
			restricted
			when (Company.AvailableToSellAllocated.SubtractFromStockOnHand)

		AvailableToSellBackorderAdd
			classic name is SELL-BKORD-ADD
			restricted
			when (Company.AvailableToSellBackorder = "+")

		AvailableToSellBackorderSubtract
			classic name is SELL-BKORD-SUB
			restricted
			when (Company.AvailableToSellBackorder.SubtractFromStockOnHand)

		AvailableToSellInspectionHoldAdd
			classic name is SELL-HOLD-ADD
			restricted
			when (Company.AvailableToSellInspectionHold = "+")

		AvailableToSellInspectionHoldSubtract
			classic name is SELL-HOLD-SUB
			restricted
			when (Company.AvailableToSellInspectionHold.SubtractFromStockOnHand)

		AvailableToSellInProcessAdd
			classic name is SELL-INPRC-ADD
			restricted
			when (Company.AvailableToSellInProcess = "+")

		AvailableToSellInProcessSubtract
			classic name is SELL-INPRC-SUB
			restricted
			when (Company.AvailableToSellInProcess.SubtractFromStockOnHand)

		AvailableToSellIntransitAdd
			classic name is SELL-INTRN-ADD
			restricted
			when (Company.AvailableToSellIntransit.AddToStockOnHand)

		AvailableToSellIntransitSubtract
			classic name is SELL-INTRN-SUB
			restricted
			when (Company.AvailableToSellIntransit = "-")

		AvailableToSellOnOrderAdd
			classic name is SELL-ONORD-ADD
			restricted
			when (Company.AvailableToSellOnOrder.AddToStockOnHand)

		AvailableToSellOnOrderSubtract
			classic name is SELL-ONORD-SUB
			restricted
			when (Company.AvailableToSellOnOrder = "-")

		AvailableToSellWIPAdd
			classic name is SELL-WIP-ADD
			restricted
			when (Company.AvailableToSellWIP.AddToStockOnHand)

		AvailableToSellWIPSubtract
			classic name is SELL-WIP-SUB
			restricted
			when (Company.AvailableToSellWIP = "-")

		HasStorageCode
			classic name is STORAGE-CODE
			restricted
			when (StorageCode entered)

		QuantitiesExist
			restricted
			when (StockOnHandQuantity entered
			or    AllocatedQuantity entered
			or    UnallocatedQuantity entered
			or    BackorderedQuantity entered
			or    InProcessQuantity entered
			or    OnOrderQuantity entered
			or    IntransitQuantity entered
			or    InspectionHoldQuantity entered)

		QuantityTruncateCheck
			restricted
			when ((StockOnHandQuantity entered
			and StockOnHandQuantity decimals > 0)
			or (UnallocatedQuantity entered
			and UnallocatedQuantity decimals > 0)
			or (BackorderedQuantity entered
			and BackorderedQuantity decimals > 0)
			or (InProcessQuantity entered
			and InProcessQuantity decimals > 0)
			or (OnOrderQuantity entered
			and OnOrderQuantity decimals > 0)
			or (IntransitQuantity entered
			and IntransitQuantity decimals > 0)
			or (InspectionHoldQuantity entered
			and InspectionHoldQuantity decimals > 0))

		CartParLocation
			restricted
			when (InventoryLocation.LocationType.ExchangeCart
			or    InventoryLocation.LocationType.ParLocation)

		RecordExists
			restricted
			when (ItemReplenishmentSourcesRel exists)
			
		HasReplenishmentFromCompanyLocation
			restricted
			when (ItemReplenishmentSourcesRel.ReplenishFrom entered)

		StockOnHandBelowReorderPoint
			when (StockOnHandQuantity < ReorderPoint)

		SOHBelowReorderAndHasOnOrderQuantity
			when (StockOnHandBelowReorderPoint
			and   OnOrderQuantity entered)

		SOHWithin10OfReorderPoint
			restricted
			when ((StockOnHandQuantity + OnOrderQuantity) <= (ReorderPoint * 1.10))

		SOHAtReorderPoint
			restricted
			when ((StockOnHandQuantity + OnOrderQuantity) = ReorderPoint) 
					
		SOHBelowReorderPoint
			restricted
			when ((StockOnHandQuantity + OnOrderQuantity) < ReorderPoint)
					
		ItemExistsForReplenish
			restricted
			when (ItemLocationForReplenishRel.InventoryTracked)

		TrackingMethodLotTracked									
			restricted
			when (LotTracked.LotRequiredAtReceipt
			and   Item.CatchWeightCode.NotCatchWeight)

		TrackingMethodLotTrackedWithCatchWeight
			restricted
			when (LotTracked.LotRequiredAtReceipt
			and   !Item.CatchWeightCode.NotCatchWeight)

		TrackingMethodSerialTracked
			restricted
			when (SerialTracked.SerialRequiredAtReceipt)

		TrackingMethodBinTracked
			restricted
			when (BinTracked
			and   Item.CatchWeightCode.NotCatchWeight)

		TrackingMethodBinTrackedWithCatchWeights
			restricted
			when (BinTracked
			and   !Item.CatchWeightCode.NotCatchWeight)				

		DetailTrackedOnIssue
			restricted
			when (IsSerialTracked
			or    IsLotTracked
			or	  BinTracked

			or   (DerivedMultipleUOM > 1 and not HasItemLocationStockUOM))

		DetailByItemSerail
			restricted
			when (IsSerialTracked)

		IsPlainItem
			restricted
			when (IsNotSerialTracked
			and   IsNotLotTracked
			and   !BinTracked)

		CanChangeLastReceiptCost
			restricted
			when (Company.AllowOverrideOfLastCost
			and   InventoryCostHistoryRel not exists)

		HasVendor
			restricted
			when (ItemReplenishmentSourcesRel.Vendor entered
			or VendorAndPurchaseFrom entered)

		HasSecondaryQuantity
			when (SecondaryQuantity > 0)

		DetailTrackedAtItemLocation
			restricted
			when (IsInventoryLocation
			and  (IsLotTracked
			or	  BinTracked
			or   (DerivedMultipleUOM > 1 and not HasItemLocationStockUOM)))

		IsInventoryBinTracked					
			restricted
			when (InventoryTracked
			and   BinTracked)

		FromWorksheet
			restricted
			when (FromWorksheetResult entered)

		HasInvReportGroupLocation
			restricted
			when (InventoryReportGroupLocationRel exists)

		HasOpenTransaction
			restricted
			when (InspectionHoldQuantity entered  
			or AllocatedQuantity entered          
			or InProcessQuantity entered          
			or WarehouseDemandExists )			  

		HasKitItemForMakeToOrder
			restricted
			when (KitItemforItemRel exists
			and KitItemforItemRel.MakeCode.MakeToOrder)

		HasStockOnHandDetails
			restricted
			when (StockOnHandDetailsRel exists)

		HasOpenPurchaseOrderLines
			restricted
			when (OpenPurchaseOrderLinesRel exists)

		AllocatedQuantityUnbalanced
			when ((AllocatedQuantity != DerivedAllocatedQuantityFromDemand)
			or    (BackorderedQuantity != DerivedBackorderedQuantityFromDemand)
			or    (HasStockOnHandDetails and AllocatedQuantity not = DerivedSOHAllocatedQuantity))

		HasOnOrderQuantityMismatch
			when ((OnOrderQuantity != (DerivedRemainingPOQuantityStock + DerivedToShipRQQuantityStock + DerivedToMakeWOQuantityStock))
			or    (OnOrderQuantity != DerivedAllSupplyDemandQuantity))

		TrackedInAlternateUnitsOfMeasure
			restricted
			when (DerivedMultipleUOM > 1 and not HasItemLocationStockUOM)

		ItemLocationRecordExists
			restricted
			when (ItemLocation exists)

		HasContract
			restricted
			when (ItemContractLinesRel exists)

		ZeroQuantityItems
			when (StockOnHandQuantity = 0)

		ActiveItems
			when (Item.Active)

		IsPotentialObsolete
			restricted
			when (LastIssueCutoffDate entered
			and  (LastIssueDate entered and LastIssueDate <= LastIssueCutoffDate)
			or   (LastIssueDate not entered and LastReceiptDate entered and LastReceiptDate <= LastIssueCutoffDate))

		IsPotentialOverStock
			restricted
			when (DerivedOverStockPercent >= CutoffPercentage
			and   DerivedOverStockPercent > 0)

		IsOverAllocated
			restricted
			when (AllocatedQuantity > (StockOnHandQuantity + WorkInProgressQuantity + OnOrderQuantity + IntransitQuantity))

		HasOpenRQTransferLines
			restricted
			when (OpenRequisitionDTorITLinesRel exists)

		IsReplenishmentFromVendor
			restricted
			when (first ItemReplenishmentSourcesRel.Vendor entered)

		IsValidParUOM
			restricted
			when (CartParLocation and (IsReplenishmentFromVendor or VendorAndPurchaseFrom entered))


		HasSubstituteItems
			restricted
			when (SubstituteItemsRel exists)

		DisplayUnitCost
			restricted
			when (InventoryTransactionLinesDisplayUnitCostRel exists)
			
		HasReorderQuantity
			when (ReorderPoint != ParLocationCount)

		HasOpenDemand
			restricted
			when (DemandTypeWarehouseDemandLinesRel exists)

		HasRecipe
			restricted
			when (Item.Recipe)

		HasRecipeManagement
			restricted
			when (Item.ItemGroup.RecipeManagementInUse)

		HasOrderUOMRounding
			restricted
			when (InventoryLocation.OrderUOMRounding.AllowUOMRounding
			or   (InventoryLocation.OrderUOMRounding.CheckInventoryCompanyValue
			and   Company.OrderUOMRounding))

		AtInventoryCompanyStockUOMTracking
			restricted
			when (InventoryLocation.TrackStockUOMAtItemLocation.CheckInventoryCompanyValue)

		HasLocationStockUOMTracking
			restricted
			when (InventoryLocation.TrackStockUOMAtItemLocation.TrackStockUOMAtItemLocation
			or   (InventoryLocation.TrackStockUOMAtItemLocation.CheckInventoryCompanyValue
			and   Company.TrackStockUOMAtItemLocation))

		HasItemLocationStockUOM
			when (ItemLocationStockUOM.UnitOfMeasure entered)

		HasSameStockUOM
			restricted
			when (ItemLocationStockUOM.UnitOfMeasure = Item.StockUOM)			

		HasOtherStockUOMOnLocation
			restricted
			when (ItemLocationStockUOM.UnitOfMeasure entered
			and   ItemLocationStockUOM.UnitOfMeasure not = Item.StockUOM)

		DisplayLocationStockUOMList
			restricted
			when (IsNotCatchWeightItem
			and   HasLocationStockUOMTracking
			and   not CartParLocation
			and   AllLocationItemUOMRel exists)

		DisplayLocationStockUOM
			restricted
			when (IsNotCatchWeightItem
			and   HasLocationStockUOMTracking
			and   not CartParLocation)

		DisplayLocationStockValues
			restricted
			when (IsNotCatchWeightItem
			and   ItemLocationStockUOM.UnitOfMeasure entered)

		DisplaySalesTab
			restricted
			when (not CartParLocation
			and   not HasItemLocationStockUOM)

		LocationReplenished
			restricted
			when (ReplenishFrom entered)

		InvalidOnLocationItemUOM
			restricted
			when (CartParLocation
			and   DefaultTransactionUOM entered 
			and   ((LocationReplenished
			and   ItemLocationReplenishFromRel.HasItemLocationStockUOM
			and   not LocationItemUOMForReplenishTransactionUOMRel.OKForTransaction)
			or    (not LocationReplenished
			and   ItemLocationForReplenishSourceRel.HasItemLocationStockUOM
			and   not LocationItemUOMForInventoryLocationUOMRel.OKForTransaction)))

		LocationUOMRounded
			restricted
			when (InvalidOnLocationItemUOM
			and   RequisitionLinesRel exists
			and   DerivedRequisitionLineUOM not = DefaultTransactionUOM.UnitOfMeasure)


		HasSupplementalUOM
			when (SupplementalUOM.UnitOfMeasure entered)

		DisplayStockOnly
			when (SupplementalUOM.UnitOfMeasure not entered)

		DisplayStockBalances
			when (ItemLocationStockUOM.UnitOfMeasure not entered)

		DisplaySupplementalValues
			when (HasSupplementalUOM
			and   IsNotCatchWeightItem)


		BinGroupDetailExists
			restricted
			when (BinGroupDetailRel exists)
		
		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		UsageIn7DaysNoMovementList
			restricted
			when (UsageIn7Days = 0)

		UsageIn7DaysNoMovementForm
			restricted
			when (TransactionLinesColumnarRel.UsageIn7Days = 0)

		UsageIn30DaysNoMovementList
			restricted
			when (UsageIn30Days = 0)

		UsageIn30DaysNoMovementForm
			restricted
			when (TransactionLinesColumnarRel.UsageIn30Days = 0)

		UsageIn90DaysNoMovementList
			restricted
			when (UsageIn90Days = 0)

		UsageIn90DaysNoMovementForm
			restricted
			when (TransactionLinesColumnarRel.UsageIn90Days = 0)

		UsageIn365DaysNoMovementList
			restricted
			when (UsageIn365Days = 0)

		UsageIn365DaysNoMovementForm
			restricted
			when (TransactionLinesColumnarRel.UsageIn365Days = 0)

		DaysOnHand7DaysLessThan7
			restricted
			when (DaysOnHand7Days <= 7)

		RedAlert7DaysUsage
			restricted
			when (TransactionLines7DaysColumnarRel.DaysOnHand7Days <= 7)

		RedAlert30DaysUsage
			restricted
			when (TransactionLines30DaysColumnarRel.DaysOnHand30Days <= 30)

		YellowAlert7DaysUsage
			restricted
			when (TransactionLines7DaysColumnarRel.DaysOnHand7Days > 7
			and   TransactionLines7DaysColumnarRel.DaysOnHand7Days <= 10)

		YellowAlert30DaysUsage
			restricted
			when (TransactionLines30DaysColumnarRel.DaysOnHand30Days > 30
			and   TransactionLines30DaysColumnarRel.DaysOnHand30Days <= 45)

		DaysOnHandYellowAlert
			restricted
			when (YellowAlert7DaysUsage
			or    YellowAlert30DaysUsage)

		DaysOnHandRedAlert
			restricted
			when (RedAlert7DaysUsage
			or    RedAlert30DaysUsage)

		CanUseForConsolidated 
			restricted 
			when (Active
			and   Item.CanUseForConsolidated)

		PreferenceCardEnabled
			restricted
			when (Company.PreferenceCardEnabled)

		IncludeUnreservedForReorderEnabled
			when (InventoryLocation.IncludeUnreservedForReorder)

		DisplayReservedAndUnreservedQuantity
			restricted
			when ((Company.PreferenceCardOption.PreferenceCardsInUse
			or    (Company.PreferenceCardOption.DefaultToItemGroup and Item.ItemGroup.PreferenceCardsInUse))
			and    Item.PreferenceCardItem)
		

		PrintLabelEnabled
			restricted
			when (MobileSupplyChainConfigurationRel.MobileSupplyChainEnabled
			and   Active)
		
		PrintBinLabelEnabled
			restricted
			when (MobileSupplyChainConfigurationRel.MobileSupplyChainEnabled			
			and   Active
			and	  CartParLocation)

		IsParLevelDivisibleByNumberOfBins
			restricted
			when (ReorderPoint % KanbanNumberOfBins = 0)

		HasKanbanItemNotes
			restricted
			when (KanbanItemNotes entered)

		HasAlternateItemLocation
			restricted
			when (AlternateItemLocationRel exists)

		IsAWarehouseLocation
			restricted
			when (InventoryLocation.UseAsWarehouseLocation)

		IsAWarehouseLocationItem
			restricted
			when (IsAWarehouseLocation
			and   InventoryTracked
			and   BinTracked)

		WarehouseItemRequiresBinSetup
			restricted
			when (IsAWarehouseLocation
			and InventoryTracked
			and not BinTracked)

		ValidForCycleDaysChecking
			restricted
			when ((LocalCycleCount 
			and  LastCycleCountDate entered)
			or   (not LocalCycleCount 
			and  LastCountDate entered))

		IsBinTrackedAndLotTrackedWarehouseItem
			restricted
			when (IsAWarehouseLocation
			and   InventoryTracked
			and   BinTracked
			and   IsLotTracked)

		ConsolidatedItemLocationExists 
			restricted 
			when (ConsolidatedItemLocationDirectRel exists)

	Relations		
		RecipeRel
			one-to-one relation to Recipe
			Field Mapping uses symbolic key
				related.ItemGroup			= Item.ItemGroup
				related.Item				= Item
				
		OpenKitchenOrdersRel
			one-to-many relation to KitchenOrder
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
			Instance Selection
				where (related.Item			= Item
				and	   related.IsNotCompletedOrCancelled)
				
		ConsolidatedItemMasterRel 
			one-to-many relation to ConsolidatedItemMaster 
			Field Mapping uses ByInternalItem
				related.ContractGroup			= Item.ItemGroup
				related.InternalItem            = Item 

		ConsolidatedItemMasterByManufacturerRel 
			one-to-many relation to ConsolidatedItemMaster 
			Field Mapping uses ByManufacturerInformation 
				related.ContractGroup			= Item.ItemGroup
				related.Manufacturer            = Item.Manufacturer 
				related.ManufacturerNumber      = Item.ManufacturerNumber 

		ConsolidatedItemLocationRel 
			one-to-many relation to ConsolidatedItemLocation 
			Field Mapping uses ByLocation
				related.ContractGroup			= Item.ItemGroup
				related.InventoryCompany        = Company 
				related.InventoryLocation	    = InventoryLocation 
				related.RequestingLocation      = blank
				related.ConsolidatedItemMaster  = first ConsolidatedItemMasterRel.ConsolidatedItemMaster 

		ConsolidatedItemLocationByReqLocRel 
			one-to-many relation to ConsolidatedItemLocation 
			Field Mapping uses ByLocation
				related.ContractGroup			= Item.ItemGroup
				related.InventoryCompany        = Company 
				related.InventoryLocation	    = blank 
				related.RequestingLocation      = InventoryLocation
				related.ConsolidatedItemMaster  = first ConsolidatedItemMasterRel.ConsolidatedItemMaster 

		ConsolidatedItemLocationDirectRel 
			one-to-many relation to ConsolidatedItemLocation 
			Field Mapping uses ByConsolidatedInventoryLocationOnly 
				related.ContractGroup							= Item.ItemGroup
				related.InventoryCompany        				= Company 
				related.InventoryLocation	    				= InventoryLocation  
				related.ConsolidatedItemMaster              	= first ConsolidatedItemMasterRel.ConsolidatedItemMaster
		RequisitionLineRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByInventoryItem
				related.Company				= Company
				related.Requisition			= Requisition
				related.Item				= Item

		OpenInventoryTypeRequisitionLinesForItemRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByItem
				related.Item			= Item
			Instance Selection
				where  (related.FromCompanyLocationBin.FromCompany	= Company
				and		related.FromCompanyLocationBin.FromLocation	= InventoryLocation
				and		related.IsInventory
				and		related.DemandExists
				and		not related.CreatePurchaseOrder)
				
		SubstituteItemsRel
			one-to-many relation to AssociatedItem
			Field Mapping uses ByPriority
				related.ItemGroup			= Company.ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.AssociatedItem.RelatedCompany	= Company
				and	   related.AssociatedItem.RelatedLocation	= InventoryLocation)

		RequisitionLinesForSubstituteItemRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set7
				related.Company				= Company
				related.Requisition			= Requisition
			Instance Selection
				where (related.OriginalItem = Item)

		RequisitionLinesRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set8
				related.Company         = Company
				related.Item			= Item
				related.Requisition		= Requisition

		RequisitionRel
			one-to-many relation to Requisition
			Field Mapping uses symbolic key
				related.Company         = Company
				related.Requisition		= Requisition


		PayablesCompanyRel
			classic name is APCOMPANY
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company 							= Company

		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	= Company.ItemGroup
				related.Item		= Item

		ShelfLocationRel
			one-to-one relation to Bin
			Field Mapping uses symbolic key
				related.Company 							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Bin									= TransientShelfLocation

		OldShelfLocationRel
			one-to-one relation to Bin
			Field Mapping uses symbolic key
				related.Company 							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Bin									= old PreferredBin

		OtherItemLocationForSameShelfLocationRel
			one-to-many relation to ItemLocation
			Field Mapping uses Set8
				related.Company 							= Company
				related.InventoryLocation 					= InventoryLocation
				related.PreferredBin						= LocalShelfLocation

		BinGroupDetailRel
			classic name is BINGRPDTL
			one-to-one relation to BinGroupDetail
			valid when (HasPreferredBin)
			Field Mapping uses Set2
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.BinGroup          					= InventoryLocation
				related.Bin               					= PreferredBin

		InventoryForecastsRel
			classic name is FORECAST
			one-to-many relation to InventoryForecast
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		InventoryUsageHistoriesRel
			classic name is ICHISTORY
			one-to-many relation to InventoryUsageHistory
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		PlannedOrdersRel
			classic name is ICPLANORD
			one-to-many relation to PlannedOrder
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		StandardCostValuationUpdateTransactionRel
			one-to-one relation to InventoryTransaction
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= LocalInventoryLocation
				related.InventoryTransaction				= LocalInventoryTransaction
		ICSystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses symbolic key
				related.Company						= LocalCompany
				related.GeneralLedgerSystemCode		= "IC"
		
		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company						= LocalCompany

		InventoryTransactionLinesRel
			classic name is ICT-BY-DATE
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (!related.InventoryTransaction.IsInventoryIntransitReceiving)

		InventoryTransactionLinesDisplayUnitCostRel
			classic name is ICT-BY-DATE
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.InventoryTransactionLine.IsReceiptAdjustmentsIssuesAndIntransitReceiving)

		ItemReplenishmentSourcesRel
			classic name is ITEMSRC
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item             					= Item

		ItemReplenishmentVendorRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses ByItem
				related.Item								= Item
				related.Company								= Company
			Instance Selection
				where (related.InventoryLocation			= InventoryLocation
				and    related.HasVendor)

		OtherLocationsForItemRel
			classic name is ITLSET2
			one-to-many relation to ItemLocation
			Field Mapping uses Set2
				related.Company 							= Company
				related.Item    							= Item

		ItemSerialNumberRel
			one-to-many relation to ItemSerialNumber
			Field Mapping uses Set2
				related.Company 							= Company
				related.InventoryLocation					= InventoryLocation
				related.Item    							= Item

		ItemSerialNumbersRel
			one-to-many relation to ItemSerialNumber
			delete cascades
			Field Mapping uses symbolic key
				related.Company 							= Company
				related.Item   			 					= Item
			Instance Selection
				where (related.InventoryLocation			= InventoryLocation)

		PurchaseOrderLinesRel
			classic name is POLINE
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set6
				related.Company        						= Company
				related.Item           						= Item
				related.ShipToLocation 						= InventoryLocation

		OpenPurchaseOrderLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set6
				related.Company        						= Company
				related.Item           						= Item
				related.ShipToLocation 						= InventoryLocation
			Instance Selection
				where (related.ItemType.Inventoried
				and    related.IsOpenForReceivingIncludingUnreleased)

		PurchaseOrderReceiptLinesRel
			classic name is PORECLINE
			one-to-many relation to PurchaseOrderReceiptLine
			Field Mapping uses Set7
				related.Company        						= Company
				related.ShipToLocation 						= InventoryLocation
				related.Item           						= Item

		ReplItemlocRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		RrplItemlocRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		StockOnHandDetailsByBinRel
			classic name is SOH-DET-PATH-3
			one-to-many relation to StockOnHandDetail
			Field Mapping uses Set3
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item

		StockOnHandDetailsForPreferredBinRel
			classic name is SOH-DET-PATH-2
			one-to-many relation to StockOnHandDetail
			Field Mapping uses Set2
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.StockOnHandDetail.Bin				= PreferredBin
				related.Item              					= Item

		StockOnHandDetailsRel
			classic name is SOHDETAIL
			one-to-many relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item

		StockOnHandDetailsWithBinRel
			classic name is SOHDETAIL
			one-to-many relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Instance Selection
				where (related.StockOnHandDetail.Bin entered)

		StockOnHandDetailsForNoBinRel
			one-to-one relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.Item							= Item
				related.StockOnHandDetail.UnitOfMeasure	= LocalUom
				related.StockOnHandDetail.Lot			= LocalLot
				related.StockOnHandDetail.Sublot		= LocalSubLot
				related.StockOnHandDetail.Bin			= blank

		StockOnHandDetailsForNotStockUOMRel
			classic name is SOHDETAIL
			one-to-many relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.Item							= Item
			Instance Selection
				where (related.StockOnHandDetail.UnitOfMeasure not = Item.StockUOM)

		StockOnHandDetailsForStockUOMRel
			classic name is SOHDETAIL
			one-to-many relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.Item							= Item
				related.StockOnHandDetail.UnitOfMeasure	= Item.StockUOM
				related.StockOnHandDetail.Lot			= LocalLot
				related.StockOnHandDetail.Sublot		= LocalSubLot
				related.StockOnHandDetail.Bin			= LocalBin

		WarehouseDemandLinesRel
			classic name is WHDEMAND
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item

		DemandTypeWarehouseDemandLinesRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Instance Selection
				where (related.IsDemandType)				

		DemandTypeWithBackordersRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Instance Selection
				where 	(related.IsDemandType
				and	     related.BackorderedQuantity > 0)
				
		DemandTypeNoBackordersRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Instance Selection
				where 	(related.IsDemandType
				and		 related.BackorderedQuantity = 0)

		WarehouseDemandLinesWithNoShipmentRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item
			Instance Selection
				where (related.HasNoShipment)

		VendorGroupRel
			classic name is VENDORGROUP
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup 						= PayablesCompanyRel.VendorGroup

		ItemCommentsRel
			classic name is ITCOMMENT
			one-to-many relation to ItemComment
			Field Mapping uses symbolic key
				related.ItemGroup 							= Item.ItemGroup
				related.Item      							= Item

		RecallProductItemsRel
			one-to-many relation to RecallProductItem
			Field Mapping uses ByItem
				related.RecallGroup	= Item.ItemGroup
				related.Item        = Item
			Instance Selection
				where (related.RecallNotice.Status.Pending
				or     related.RecallNotice.Status.Active)

		InventoryCostHistoryRel
			one-to-many relation to InventoryCostHistory
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item

		UnusedInventoryCostHistoriesRel
			one-to-many relation to InventoryCostHistory
			Field Mapping uses Set5
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
		
		CostHistoriesWithNochargeReceiptsRel
			one-to-many relation to InventoryCostHistory
			Field Mapping uses Set5
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.ValidPurchaseOrderTransaction
				and    related.UnitCost not entered)

		ReleasedInventoryTransactionLinesRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item

		InventoryOrNonStockPOLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses Set6
				related.Company        						= Company
				related.Item        						= Item
				related.ShipToLocation 						= InventoryLocation
			Instance Selection
				where (related.ItemType.Inventoried
				or     related.ItemType.NonStock)

		InventoryOrNonStockPOReceiptLinesRel
			one-to-many relation to PurchaseOrderReceiptLine
			Field Mapping uses Set9
				related.Company        						= Company
				related.Item           						= Item
				related.ShipToLocation 						= InventoryLocation
			Instance Selection
				where (related.ItemType.Inventoried
				or     related.ItemType.NonStock)

		KitItemforItemRel
			one-to-one relation to KitItem
			Field Mapping uses symbolic key
				related.ItemGroup							= Company.ItemGroup
				related.KitItem.Company						= Company
				related.KitItem.InventoryLocation			= InventoryLocation
				related.KitItem.Item						= Item

		ComponentRel
			one-to-many relation to KitComponent
			Field Mapping uses Set2
				related.ItemGroup							= Company.ItemGroup
				related.ComponentItem						= Item
			Instance Selection
				where (related.KitItem.Company				= Company
				and	   related.KitItem.InventoryLocation	= InventoryLocation)

		KitComponentRel
			one-to-many relation to KitComponent
			Field Mapping uses Set2
				related.ItemGroup							= Company.ItemGroup
				related.ComponentItem						= Item
			Instance Selection
				where (related.KitItem.Company				= Company
				and	   related.KitItem.InventoryLocation 	= InventoryLocation
				and   (related.StopDate not entered
				or 	   related.StopDate						>= current corporate date))

		ComponentsWithActiveKitItemRel
			one-to-many relation to KitComponent
			Field Mapping uses Set2
				related.ItemGroup							= Company.ItemGroup
				related.ComponentItem						= Item
			Instance Selection
				where (related.KitItem.Company				= Company
				and	   related.KitItem.InventoryLocation 	= InventoryLocation
				and   (related.StopDate not entered
				or 	   related.StopDate						>= current corporate date)
				and    related.HasActiveKitItem)

		ComponentsForAMakeToOrderKitItemRel
			one-to-many relation to KitComponent
			Field Mapping uses Set2
				related.ItemGroup							= Company.ItemGroup
				related.ComponentItem						= Item
			Instance Selection
				where (related.KitItem.Company				= Company
				and	   related.KitItem.InventoryLocation 	= InventoryLocation
				and   (related.StopDate not entered
				or 	   related.StopDate						>= current corporate date)
				and    related.HasMakeToOrderKitItem)

		FinishedGoodsByproductsRel
			one-to-many relation to FinishedGoodsByproduct
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item 								= Item

		ActiveFinishedGoodsByproductsRel
			one-to-many relation to FinishedGoodsByproduct
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item 								= Item
			Instance Selection
				where (related.IsKitItemforFinishedByProdRel)

		ItemReplenishmentSourcesForItemRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses Set2
				related.ReplenishFrom.ReplenishFromCompany	= Company
				related.ReplenishFrom.ReplenishFromLocation = InventoryLocation
			Instance Selection
				where (related.Item							= Item)

	   	ItemUOMNotStockUOMRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup							= Item.ItemGroup
				related.Item								= Item
			Instance Selection
				where (related.UnitOfMeasure				!= Item.StockUOM)

		MultipleTrackedInUnitOfMeasureRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup							= Company.ItemGroup
				related.Item								= Item
			Instance Selection
				where (related.TrackedIn)

		BinForOldPreferredBinRel
			one-to-one relation to Bin
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Bin									= old PreferredBin

		BinGroupRel
			one-to-one relation to BinGroup
			Field Mapping uses symbolic key
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.BinGroup							= InventoryLocation

		BinGroupDetailForOldPreferredBinRel
	 		one-to-one relation to BinGroupDetail
			Field Mapping uses Set2
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.BinGroup							= InventoryLocation
				related.Bin									= old PreferredBin

		SameBinGroupDetailRel
	 		one-to-one relation to BinGroupDetail
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.BinGroup							= InventoryLocation
				related.BinGroupDetail						= BinSequence

	 	ItemLocationReplenishFromRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           					= ReplenishFrom.ReplenishFromCompany
				related.InventoryLocation 					= ReplenishFrom.ReplenishFromLocation
				related.Item              					= Item

	 	ItemLocationForReplenishRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           					= TransFromCompany
				related.InventoryLocation 					= InventoryLocation.ReplenishFromLocation
				related.Item			  					= Item

   		RequestingLocationForinventoryLocRel
	 		one-to-many relation to RequestingLocation
	  		Field Mapping uses symbolic key
				related.Company           					= Company
				related.RequestingLocation 					= InventoryLocation

		ItemUOMRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup  							= Company.ItemGroup
				related.Item								= Item
		ItemUOMForDefaultBuyingRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup  							= Company.ItemGroup
				related.Item								= Item
			Instance Selection
				where (related.DefaultForBuying)

		ItemUOMForDefaultInventoryTransactionsRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup  							= Company.ItemGroup
				related.Item								= Item
			Instance Selection
				where (related.DefaultForInventoryTransactions)
				
        ItemSupplementalUOMRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup         = Company.ItemGroup
        		related.Item              = Item
        		related.UnitOfMeasure     = SupplementalUOM.UnitOfMeasure

        LocationStockUOMItemUOMRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup         = Company.ItemGroup
        		related.Item              = Item
        		related.UnitOfMeasure     = ItemLocationStockUOM.UnitOfMeasure

		CopyAllLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= LocalFromCompany
				related.InventoryLocation 					= LocalFromLocation
				related.Item								= LocalItem

		AllLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item

		LocationItemUOMRel
			one-to-one relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
				related.UnitOfMeasure						= ItemLocationStockUOM.UnitOfMeasure










		LocationItemUOMForDefaultSourceUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
				related.UnitOfMeasure						= DefaultSourceUOM

		LocationItemUOMForLocalStockUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
				related.UnitOfMeasure						= LocalStockUOM

		LocationItemUOMForDefaultBuyingRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.DefaultForBuying)
				
		LocationItemUOMDefaultForInventoryTransactionsRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.DefaultForInventoryTransactions)				

		LocationItemUOMForDefaultTransactionUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
				related.UnitOfMeasure						= DefaultTransactionUOM

		LocationItemUOMForInventoryLocationUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= InventoryLocation.FromCompany
				related.InventoryLocation 					= InventoryLocation.ReplenishFromLocation
				related.Item								= Item
				related.UnitOfMeasure						= DefaultTransactionUOM

		LocationItemUOMForReplenishTransactionUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= ReplenishFrom.ReplenishFromCompany
				related.InventoryLocation 					= ReplenishFrom.ReplenishFromLocation
				related.Item								= Item
				related.UnitOfMeasure						= DefaultTransactionUOM

		OtherLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.UnitOfMeasure			not = ItemLocationStockUOM.UnitOfMeasure)

		OtherStockLocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  							= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.UnitOfMeasure			not = ItemLocationStockUOM.UnitOfMeasure
				and    related.LocationStockUOM)

		BinGroupDetailForPreferredBinRel
	 		one-to-many relation to BinGroupDetail
			Field Mapping uses symbolic key
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.BinGroup							= InventoryLocation

		InventoryCostHistoryForCostAdjustmentRel
			one-to-one relation to InventoryCostHistory
			Field Mapping uses symbolic key
				related.Company 											= Company
				related.InventoryLocation									= InventoryLocation
				related.Item												= Item
				related.InventoryTransaction								= LocalDocumentNumber
				related.InventoryCostHistory.TransactionSystemCode  		= "PO"
				related.InventoryCostHistory.LineNumber						= LocalLineNumber
				related.InventoryCostHistory.ComponentSequence				= 0

		ItemLocationForReplenishSourceRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company 											= InventoryLocation.FromCompany
				related.InventoryLocation									= InventoryLocation.ReplenishFromLocation
				related.Item												= Item

		ManufacturerRel
			one-to-one relation to Manufacturer
			Field Mapping uses symbolic key
				related.ItemGroup  							= Company.ItemGroup
				related.Manufacturer						= Manufacturer

		OtherItemLocationsForOrderRel
			classic name is ITLSET2
			one-to-many relation to ItemLocation
			Field Mapping uses Set2
				related.Company 							= Company
				related.Item    							= Item
			Instance Selection
				where (related.InventoryLocation      	 	   	   != InventoryLocation
				and    related.AvailableQuantity				    > 0)

		WarehouseDemandLineRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses symbolic key
				related.Company 								= Company
				related.WarehouseDemand.DemandSystemCode 		= "OE"
				related.WarehouseDemand.DemandDocument 			= WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany			= WarehouseDemand.DemandCompany
			Instance Selection
				where (related.Item 									= Item
				and    related.WarehouseDemandLine.DemandDocumentType 	= "SH"
				and 	related.WarehouseDemandLine.LineNumber 			= WarehouseDemandLine.LineNumber
				and 	related.WarehouseDemandLine.ComponentSequence 	= blank)

		CustomerOrderLineRel
			one-to-one relation to CustomerOrderLine
			Field Mapping uses symbolic key
				related.Company           = Company
				related.CustomerOrder     = WarehouseDemand.DemandDocument
				related.CustomerOrderLine = WarehouseDemandLine.LineNumber

		RequestingLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           = Requisition.FromCompanyLocation.FromCompany
				related.InventoryLocation = Requisition.FromCompanyLocation.FromLocation
				related.Item              = Item

		PatientChargeItemRel
			one-to-many relation to PatientChargeItem
			Field Mapping uses Set2
				related.Company							= Company
				related.PatientChargeItem.Item			= Item
				related.PatientChargeItem.RevenueCenter	= RevenueCenter

		PatientChargeItemsRel
			one-to-many relation to PatientChargeItem
			Field Mapping uses Set2
				related.Company							= Company
				related.PatientChargeItem.Item			= Item

		ItemLotsRel
			one-to-many relation to ItemLot
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item

		VendorItemsForItemVendorRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= Company.ItemGroup
				related.Item				= Item
				related.Vendor				= Vendor
			Instance Selection
				where (related.UseAsDefault)

		VendorItemsForItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= Company.ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.UseAsDefault)

		DefaultGeneralLedgerCategoryRel
			one-to-many relation to GeneralLedgerCategory
			Field Mapping uses symbolic key
				related.Company             = Company
				related.InventoryLocation   = InventoryLocation
			Instance Selection
				where (related.Default)

		KeywordShadowRel
			one-to-one relation to KeywordShadow
			Field Mapping uses ByShadowItem
  				related.ItemGroup	=	Company.ItemGroup
				related.Item		=   Item

		InventoryReportGroupLocationRel
			one-to-many relation to InventoryReportGroupLocation
			Field Mapping uses symbolic key
				related.Company	                         = LocalCompany
				related.InventoryReportGroup             = LocalInventoryReportGroup
			Instance Selection
				where (related.InventoryLocation = InventoryLocation)

		InventoryReportGroupLocationsRel
			one-to-many relation to InventoryReportGroupLocation
			Field Mapping uses symbolic key
				related.Company	                         = LocalCompany
				related.InventoryReportGroup             = LocalInventoryReportGroup

		OriginatingPurchaseOrderOfCostAdjustmentRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company							= Company
				related.PurchaseOrder					= LocalPurchaseOrder

		WorkOrderForecastDemandRel
			one-to-one relation to WorkOrderForecastDemand
			Field Mapping uses symbolic key
  				related.Company											= Company
  				related.InventoryLocation								= InventoryLocation
  				related.WorkOrderForecastDemand.ExpectedDeliveryDate	= LocalExpectedDeliveryDate
				related.WorkOrderForecastDemand.Item					= Item

		WarehouseDemandLinesPOSupplyRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item
			Instance Selection
				where (related.WarehouseDemandLine.DemandDocumentType = "PO"
				and    related.IsSupplyType)

		PurchaseOrderLineForSupplyDemandRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company				= Company
				related.PurchaseOrder		= LocalDemandDocumentNumber
				related.PurchaseOrderLine	= LocalDemandLine

		WarehouseDemandLinesRQSupplyRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company           					= Company
				related.InventoryLocation 					= InventoryLocation
				related.Item              					= Item
			Instance Selection
				where ((related.WarehouseDemandLine.DemandDocumentType = "DT"
				or      related.WarehouseDemandLine.DemandDocumentType = "IT")
				and     related.IsSupplyType)

		RequisitionLineForSupplyDemandRel
			one-to-one relation to RequisitionLine
			Field Mapping uses symbolic key
				related.Company				= Company
				related.Requisition			= LocalDemandDocumentNumber
				related.RequisitionLine		= LocalDemandLine

		OpenRequisitionDTorITLinesRel
			one-to-many relation to RequisitionLine
			Field Mapping uses Set5
				related.Company        						= Company
				related.RequestingLocation					= InventoryLocation
				related.Item           						= Item
			Instance Selection
				where (related.ItemType.Inventoried
				and    related.IsOpen
				and    related.IsProcessedStatus
				and   (related.InventoryTransactionType.DirectTransfer
				or     related.InventoryTransactionType.IntransitTransfer))

		WarehouseDemandLinesWOSupplyRel
			one-to-many relation to WarehouseDemandLine
			Field Mapping uses Set5
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Instance Selection
				where (related.WarehouseDemandLine.DemandDocumentType = "WO"
				and    related.IsSupplyType)

		ContractGroupRel 
			one-to-one relation to ContractGroup 
			Field Mapping uses symbolic key 
				related.ContractGroup      = Company.ItemGroup 
		
		ItemContractLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup	= Company.ItemGroup
				related.ItemNumber		= Item

		IIHItemLocationRel
			one-to-one relation to IIHItemLocation
			Field Mapping uses symbolic key
				related.Company 			= Company
				related.InventoryLocation 	= InventoryLocation
				related.Item 				= Item
				
		IIHInventoryLocationRel
			one-to-one relation to IIHInventoryLocation
			Field Mapping uses symbolic key
				related.Company 				= Company
				related.IIHInventoryLocation 	= InventoryLocation

		IIHItemRel
			one-to-one relation to IIHItem
			Field Mapping uses symbolic key
				related.ItemGroup	= Company.ItemGroup
				related.IIHItem		= Item

		

		ItemLocationAuditRel
			one-to-many relation to ItemLocationAudit
			Field Mapping uses symbolic key
				related.Company              = Company
				related.InventoryLocation    = InventoryLocation
				related.Item                 = Item

		ItemLocationAuditPurgeRel
			one-to-many relation to ItemLocationAudit
			Field Mapping uses symbolic key
				related.Company              = Company
				related.InventoryLocation    = InventoryLocation
				related.Item                 = Item
			Instance Selection
				include deleted records

		CopyFromItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company				= LocalFromCompany
				related.InventoryLocation	= LocalFromLocation
				related.Item				= LocalItem
		
		ItemLocationsForAnItemRel
			one-to-many relation to ItemLocation
			Field Mapping uses Set2
				related.Company				= LocalCompany
				related.Item				= LocalItem
			Instance Selection
				where (InventoryTracked
				and    not CartParLocation)
		
		GlobalAverageCostAndSOHComputationRel
			one-to-one relation to GlobalAverageCostAndSOH
			Field Mapping uses symbolic key
				related.Company				= LocalCompany
				related.Item				= LocalItem
		
		GlobalAverageCostAndSOHRel
			one-to-one relation to GlobalAverageCostAndSOH
			Field Mapping uses ByFinishedCalculation
				related.Company				= Company
				related.Item				= Item
		
		GlobalAverageCostForCompanyRel
			one-to-many relation to GlobalAverageCostAndSOH
			Field Mapping uses symbolic key
				related.Company		= LocalCompany

		CopyFromItemReplenishmentSourcesRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses symbolic key
				related.Company           	= LocalFromCompany
				related.InventoryLocation 	= LocalFromLocation
				related.Item             	= LocalItem

		GTINForDefaultTransactionUOMRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set3
				related.ItemGroup		= Company.ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= DefaultTransactionUOM.UnitOfMeasure
			Instance Selection
				where (related.Active)

		ItemLocationDemandForecastRel is an ItemLocationDemandForecast set



		BODStockUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup  							= Company.ItemGroup
				related.Item								= Item
				related.UnitOfMeasure						= Item.StockUOM

		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField		= "SourceBusinessGroup"
				related.FSMBODCrossReference.DestinationField	= "DestinationAccountingEntity"
			Instance Selection
				where (related.SourceValue = Item.ItemGroup)

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb		= 1
				related.FSMBODConfiguration.Noun		= "ItemMaster"
				related.FSMBODConfiguration.Direction	= 1

		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter


		FSMBODConfigurationInvCountRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "InventoryCount"
				related.FSMBODConfiguration.Direction 	= 1
			
		FSMBODGLCCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFGLC"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= DerivedCrossGLC )
		

		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
		
		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		TransactionLinesInLast7DaysRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.TransactionsForDailyUsage
				and    related.NumberOfDaysSinceTransaction <= 7)

		TransactionLinesInLast30DaysRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.TransactionsForDailyUsage
				and    related.NumberOfDaysSinceTransaction <= 30)

		TransactionLinesInLast90DaysRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.TransactionsForDailyUsage
				and    related.NumberOfDaysSinceTransaction <= 90)

		TransactionLinesInLast365DaysRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses Set2
				related.Company								= Company
				related.InventoryLocation					= InventoryLocation
				related.Item								= Item
			Instance Selection
				where (related.TransactionsForDailyUsage
				and    related.NumberOfDaysSinceTransaction <= 365)
	

        MobileSupplyChainConfigurationRel
            one-to-one relation to MobileSupplyChainConfiguration
            Field Mapping uses symbolic key
                related.MobileSupplyChainConfiguration = Company.FinanceEnterpriseGroup

		DefaultLabelTemplateRel
			one-to-many relation to LabelTemplate
			Field Mapping uses symbolic key
				related.MobileSupplyChainConfiguration = Company.FinanceEnterpriseGroup
			Instance Selection	
				where (related.Default
				and    related.LabelType = LocalLabelType)

		KanbanItemBinRel
			one-to-many relation to KanbanItemBin
			Field Mapping uses symbolic key
				related.Company			  				= Company
				related.InventoryLocation 				= InventoryLocation
				related.Item			  				= Item		

		MobileSupplyChainLocationRel
			one-to-one relation to MobileSupplyChainLocation
			Field Mapping uses symbolic key
				related.Company							= Company
				related.MobileSupplyChainLocation		= InventoryLocation		

		AlternateItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses ByItem
				related.Item 				= Item
				related.Company 			= AlternateToCompanyLocation.ToCompany
				related.InventoryLocation 	= AlternateToCompanyLocation.ToLocation

		ItemStorageLocationsRel
			one-to-many relation to ItemStorageLocation
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.Item							= Item

	Columnar Relations
		TransactionLinesColumnarRel
			cell relation to ItemLocation
        	Dimensions
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Preload Measures
				UsageIn7Days
				AverageDailyUsage7Days
				DaysOnHand7Days
				UsageIn30Days
				AverageDailyUsage30Days
				DaysOnHand30Days
				UsageIn90Days
				AverageDailyUsage90Days
				DaysOnHand90Days
				UsageIn365Days
				AverageDailyUsage365Days
				DaysOnHand365Days

		TransactionLines7DaysColumnarRel
			cell relation to ItemLocation
        	Dimensions
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Preload Measures
				UsageIn7Days
				AverageDailyUsage7Days
				DaysOnHand7Days

		TransactionLines30DaysColumnarRel
			cell relation to ItemLocation
        	Dimensions
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Preload Measures
				UsageIn30Days
				AverageDailyUsage30Days
				DaysOnHand30Days

		TransactionLines90DaysColumnarRel
			cell relation to ItemLocation
        	Dimensions
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Preload Measures
				UsageIn90Days
				AverageDailyUsage90Days
				DaysOnHand90Days

		TransactionLines365DaysColumnarRel
			cell relation to ItemLocation
        	Dimensions
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Item				= Item
			Preload Measures
				UsageIn365Days
				AverageDailyUsage365Days
				DaysOnHand365Days

	Sets

		Set2
			indexed
			Sort Order
				Company
				Item
				InventoryLocation

		Set5
			indexed
			Sort Order
				Company
				InventoryLocation
				Buyer
				Item

		Set7
			indexed
			Sort Order
				Company
				InventoryLocation
				LastCountDate
				Item

		Set8
			indexed
			Sort Order
				Company
				InventoryLocation
				PreferredBin
				Item

		Set9
			indexed
			Sort Order
				Company
				InventoryLocation
				Consignment
				Item

		ByItem
			Sort Order
				Item
				Company
				InventoryLocation

		FromWorksheet
			Instance Selection
				where (FromWorksheet)
			Sort Order
				FromWorksheetResult
				Company
				InventoryLocation
				Item
		
		ByLastCycleCountDate
			indexed
			Sort Order
				Company
				InventoryLocation
				LastCycleCountDate
				Item

	Field Rules

		InventoryLocation
			constraint (!InventoryLocation.WorkOrderLocationType.OffsiteLocation)
				"LocationCannotBeOffsiteWorkOrderLocation"		   					

		Item
			constraint (Item exists)
				"Item<Item>DoesNotExist"

			if (Active)
				constraint (Item.Active)
					"ItemIsInactive,ItemLocationCannotBeActive"


		GeneralLedgerCategory
			if (!CartParLocation
			and GeneralLedgerCategory !entered)
				if (DefaultGeneralLedgerCategoryRel exists)
					GeneralLedgerCategory = first DefaultGeneralLedgerCategoryRel.GeneralLedgerCategory
				required

		AllowReceipt
			initial value is true

			if (CartParLocation)
				AllowReceipt = true

		LeadtimeControl
			default to "S"

		MovementClass
			default to "1"

		AllowCustomerOrderReturns
			initial value is "Y"

		OrderMultiple
			default to 1

		ReorderPolicy
			default to "FOP"

		ReorderPointCode
			default to "F"

		ReorderQuantityCode
			default to "F"

		AddedDate
			initial value is current corporate date
			default to current corporate date

		Manufacturer
			initial value is Item.Manufacturer

		ManufacturerNumber
			initial value is Item.ManufacturerNumber

		PurchaseTaxable
			initial value is Item.PurchaseTaxable
			default to Item.PurchaseTaxable

		PurchaseTaxCode
			initial value is Item.PurchaseTaxCode
			default to Item.PurchaseTaxCode

		LastReceiptCost
			if (LastReceiptCost changed)
				constraint (Company.AllowOverrideOfLastCost)
					"CannotChangeLastReceiptCost"
				constraint (InventoryCostHistoryRel not exists)
					"CannotChangeLastReceiptCost;InventoryReceiptsExist"

		Consignment
			initial value is Item.Consignment
			if (Consignment = true)
				constraint (GeneralLedgerCategory.InventoryAccount = GeneralLedgerCategory.ReceiptAccount)
					"InventoryLocationAccountGroupInventoryAccountMustBeEqualToReceiptAccountForConsignmentItem"   

		LotTracked
			initial value is Item.LotTracked
			default to Item.LotTracked

			if (LotTracked.LotRequiredAtIssue
			or  LotTracked.LotRequiredAtReceipt)
				if (!CartParLocation)
					constraint (InventoryTracked)
						"CannotSelectALotTrackingMethod;ItemIsNotInventoryTracked"

				constraint (not KitItemforItemRel.MakeCode.MakeToOrder)
					"CannotChangeToLot-tracked;ItemIsKitItem"


				constraint (ComponentsForAMakeToOrderKitItemRel not exists)
					"CannotChangeToLot-tracked;ItemIsKitComponent"            

			if (LotTracked changed)
				constraint (!QuantitiesExist)
					"CannotChangeLot-trackedFlag;Quantities/activityExist"    





		SerialTracked
			initial value is Item.SerialTracked
			default to Item.SerialTracked

			if (SerialTracked.SerialRequiredAtIssue
			or  SerialTracked.SerialRequiredAtReceipt)
				if (!CartParLocation)
					constraint (InventoryTracked)
						"CannotSelectSerialTrackingMethod;ItemIsNotInventoryTracked"

				constraint (ItemUOMNotStockUOMRel not exists)
					"CannotChangeToSerial-tracked;Multiple_\U\O\MExist"       

				constraint (not KitItemforItemRel.MakeCode.MakeToOrder)
					"CannotChangeToSerial-tracked;ItemIsKitItem"              

				constraint (ComponentsForAMakeToOrderKitItemRel not exists)
					"CannotChangeToSerial-tracked;ItemIsKitComponent"     	  





			if (LotTracked.LotRequiredAtIssue
			or  LotTracked.LotRequiredAtReceipt)
				constraint (SerialTracked.NotSerialTracked)
					"ItemCannotBeSerialAndLotTracked"

			if (!Item.CatchWeightCode.NotCatchWeight)
				constraint (SerialTracked.NotSerialTracked)
					"CatchWeightItemCannotBeSerialTracked"

			if (SerialTracked changed)
				constraint (!QuantitiesExist)
					"CannotChangeSerial-trackedFlag;Quantities/activityExist" 		

		UDITracked
			initial value is Item.UDITracked
			default to Item.UDITracked

			if (UDITracked.UDIRequiredAtIssue
			or  UDITracked.UDIRequiredAtReceipt)
				if (!CartParLocation)
					constraint (InventoryTracked)
						"CannotSelectUDITrackingMethod;ItemIsNotInventoryTracked"

				constraint (not KitItemforItemRel.MakeCode.MakeToOrder)
					"CannotChangeToUDI-tracked;ItemIsKitItem"

				constraint (ComponentsForAMakeToOrderKitItemRel not exists)
					"CannotChangeToUDI-tracked;ItemIsKitComponent"

			if (UDITracked changed
			and (old UDITracked != blank
			or   UDITracked.UDIRequiredAtReceipt or UDITracked.UDIRequiredAtIssue))
				constraint (!QuantitiesExist)
					"CannotChangeUDI-trackedFlag;Quantities/activityExist"

		StorageCode
			constraint (BinTracked)
				"StorageCodeMustBeBlank;BinTrackedFlag_=_\N"               			

		BinTracked
			if (CartParLocation)
				BinTracked = true
			else
				constraint (InventoryTracked)
					"CannotSetBinTracking_=_\Y;ItemNotInventory-tracked"       		

			if (!CartParLocation)
				constraint (InventoryTracked)
					"CannotSetBinTracking_=_\Y;ItemNotInventory-tracked"       		

			if (BinTracked changed)
				constraint (InspectionHoldQuantity not entered)
					"CannotChangeTrackingFlag;HoldQuantitiesExist"            		

				constraint (AllocatedQuantity not entered)
					"CannotChangeTrackingFlag;AllocatedQtysExist"             		

				constraint (InProcessQuantity not entered)
					"CannotChangeTrackingFlag;PickedQtysExist"                		

				constraint (!FrozenForPhysicalInventory)
					"CannotChangeTrackingFlag;ItemLocIsFrozen"                		




				if (!FrozenForPhysicalInventory)
					constraint (WarehouseDemandLinesRel not exists)
						"CannotChangeBinTrackFlag_-OpenDocumentsExist"           	

				if (BinTracked) 
					constraint (!KitItemforItemRel.MakeCode.MakeToOrder)
						"CannotBinTrack;Item_=MakeToOrderKitItem"                	

					if (StockOnHandDetailsRel exists)


						for each StockOnHandDetailsRel
							invoke Create StockOnHandDetail
								fill in fields from each
								invoked.StockOnHandDetail.Bin	= PreferredBin
								invoked.BinType					= PreferredBin.BinType

							invoke Delete each
					else
					if (StockOnHandQuantity entered)

						invoke Create StockOnHandDetail
							invoked.Company							= Company
							invoked.InventoryLocation				= InventoryLocation
							invoked.Item							= Item
							invoked.StockOnHandDetail.UnitOfMeasure	= Item.StockUOM
							initialize invoked.StockOnHandDetail.Lot
							initialize invoked.StockOnHandDetail.Sublot
							invoked.StockOnHandDetail.Bin			= PreferredBin
							invoked.BinType							= PreferredBin.BinType
							invoked.StockOnHandQuantity				= StockOnHandQuantity
							invoked.SecondaryQuantity				= SecondaryQuantity
							invoked.AllocatedQuantity				= AllocatedQuantity
							invoked.InspectionHoldQuantity			= InspectionHoldQuantity


					if (ItemSerialNumberRel exists)
						for each ItemSerialNumberRel
							invoke Update each	
								invoked.Bin = PreferredBin

				else 
					if (StockOnHandDetailsWithBinRel exists) 	
						if ((DerivedMultipleUOM > 1 			
						and  not HasItemLocationStockUOM)
						or  IsLotTracked)						

							for each StockOnHandDetailsWithBinRel
								LocalUom 	= each.StockOnHandDetail.UnitOfMeasure
								LocalLot 	= each.StockOnHandDetail.Lot
								LocalSubLot = each.StockOnHandDetail.Sublot
								LocalBin    = each.StockOnHandDetail.Bin

								if (StockOnHandDetailsForNoBinRel exists)

									invoke Update StockOnHandDetailsForNoBinRel
										invoked.StockOnHandQuantity		+= each.StockOnHandQuantity
										invoked.SecondaryQuantity		+= each.SecondaryQuantity
										invoked.AllocatedQuantity		+= each.AllocatedQuantity
										invoked.InspectionHoldQuantity	+= each.InspectionHoldQuantity
								else

									invoke Create StockOnHandDetail
										invoked.Company           				= Company
										invoked.InventoryLocation 				= InventoryLocation
										invoked.Item              				= Item
										invoked.StockOnHandDetail.UnitOfMeasure	= LocalUom
										invoked.StockOnHandDetail.Lot			= LocalLot
										invoked.StockOnHandDetail.Sublot		= LocalSubLot
										initialize invoked.StockOnHandDetail.Bin
										invoked.StockOnHandQuantity				= each.StockOnHandQuantity
										invoked.SecondaryQuantity				= each.SecondaryQuantity
										invoked.AllocatedQuantity				= each.AllocatedQuantity
										invoked.InspectionHoldQuantity			= each.InspectionHoldQuantity
										initialize invoked.BinType


								invoke Delete each
						else

							invoke Delete StockOnHandDetailsWithBinRel


					if (ItemSerialNumberRel exists)
						for each ItemSerialNumberRel
							invoke Update ItemSerialNumberRel
								initialize invoked.Bin

		PreferredBin
			if (!CartParLocation)
				if (IsInventoryBinTracked
				and PreferredBin not entered)
					default to InventoryLocation.PreferredBin

				if ((BinTracked changed
				and  BinTracked)
				and  StockOnHandQuantity entered)
					required
						"PreferredBinRequired;StockOnHandExists"    

				if (BinTracked
				and StorageCode entered)
					constraint (StorageCode = PreferredBin.StorageCode)
						"PreferredBin/storageCodeMismatch"                        	

				if (PreferredBin entered)
					if (PreferredBin.BinType entered)
						for each Company.BinTypeArray.BinTypeGroup
							if (each.BinType = PreferredBin.BinType)
								constraint (each.AllowsReceipt)
									"PreferredBinMustHaveReceiptsAllowedBinType"      	



		NoCharge
			constraint (!Company.CostingMethod.StandardCosting)
				"StandardCostCompany;CannotCheckNoChargeFlag"                			

			if (NoCharge changed)
				constraint (StockOnHandQuantity not entered)
					"CannotChangeNoChargeFlag;StockOnHandExists"		         	

			if (CartParLocation)
				default to ItemLocationReplenishFromRel.NoCharge

		StandardCost
			if (Company.CostingMethod.StandardCosting)
				required
					"StandardCostRequired;MethodIsStandardCostingForCompany"      	
			else
				cannot be entered
					"StandardCostCannotBeEnteredWhenCompanyCostingMethodIsStandardCosting"

			if (StandardCost changed
			and Company.CostingMethod.StandardCosting)
				constraint (StockOnHandQuantity not entered)
					"CannotChangeStandardCost;StockOnHandExists"                  	

		FutureStandardCost
			constraint (Company.CostingMethod.StandardCosting)
				"FutureStandardCostCanBeEnteredWhenCompanyCostingMethodIsStandardCosting"

		Active
			initial value is true															

			if (Active changed
			and !Active)
				if (StockOnHandQuantity > 0)
					cannot be changed
						"CannotChange;ItemHasStockOnHandAtThisLocation"

				constraint (KitItemforItemRel.IsInactive)
					"CannotInactivateItem;KitItemForItemIsActive"                     

				constraint (ItemReplenishmentSourcesForItemRel not exists)
					"CannotChange,ItemLocExistsAsAReplenishmentSource"        		

				constraint (ComponentsWithActiveKitItemRel not exists)
					"CannotInactivateItem;ComponentOfActiveKitItem"

				constraint (ActiveFinishedGoodsByproductsRel not exists)
					"CannotInactivateItem;FinishedGoodsByproductsForItemIsActive"







			if (Active)
				constraint (Item.Active)
					"CannotSetItemLocationToActive;ItemIsInactive"
						
		ReorderDocument
			default to "N"

			if (ReorderDocument.WorkOrder)
				constraint (Company.WorkOrderInUse)
					"ReorderDocumentCannot_=_\WorkOrder;LocationNot_\W\OProductionFacility"   	

				constraint (!InventoryLocation.DemandSource.DocumentDemand)
					"ReorderDocumentCannot_=_\WorkOrder;LocationDemandSourceIsDocument"      	
			else
			if (ReorderDocument.IntransitDocument
			or  ReorderDocument.TransferDocument
			or	ReorderDocument.IssueDocument)
				constraint (ItemReplenishmentSourcesRel exists)
					"ReplenishmentLocationIsRequiredFor<ReorderDocument>"

		AutomaticPurchaseOrder
			if (Consignment)
				AutomaticPurchaseOrder 			= true

			if (ReorderDocument.PurchaseOrder
			and AutomaticPurchaseOrder
			and LocalFromCopy = false)
				constraint (HasVendor)
					"AutoPurchase_\flag_=_\Y;_\vendor_\required_\in_\ItemReplenishmentSource"      

			constraint (AllowReceipt)
				"CannotUse_\Auto_\P\O_=_\YWhen_\Allow_\Receipts_=_\N"      			

			constraint (!ReorderDocument.WorkOrder)
				"Auto_\P\OFlagMust_=_\N;ReorderDocCode_=_\WorkOrder"               			

			if (ReorderDocument.PurchaseOrder)
			 	constraint (ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromCompany not entered)
			 		"CannotEnterCompanyWhenReplenishThroughPurchaseOrder"			

			if (ReorderDocument.PurchaseOrder)
			 	constraint (ReplenishFrom.ReplenishFromCompany not entered)
			 		"CannotEnterCompanyWhenReplenishThroughPurchaseOrder"			

		MinimumOrderQuantity 
			if(CartParLocation)
				constraint (MinimumOrderQuantity >= 0)
					"MinimumOrderQuantityCanNotBeNegative"
				constraint (MinimumOrderQuantity < ReorderPoint)
					"MinimumReorderQuantityMustBeLessThanParLevel"

		MaximumOrderQuantity
			constraint (MaximumOrderQuantity >= MinimumOrderQuantity)
				"MaximumOrderQuantityMustBeGreaterThanOrEqualToMinimumOrderQuantity"  

			if (ReorderQuantityCode.OrderUpToMaximumLevel)
				required
					"MaximumOrderQuantityIsRequiredWhenReorderQuantityCodeIsOrderUpToMaximumLevel"              		

				constraint (MaximumOrderQuantity >= ReorderPoint)
					"MaximumOrderQuantityMustBeGreaterThanOrEqualToReorderPoint"    

		DefaultTransactionUOM
			if (CartParLocation)
				default to ItemLocationReplenishFromRel.ItemLocationStockUOM
				default to Item.StockUOM                   							

			if (Item.IsCatchWeightItem)
				constraint (DefaultTransactionUOM.UnitOfMeasure = Item.SecondaryUOM)
					"MustUseSecondaryUOM;CatchWeightItem"             		

			if (DefaultTransactionUOM entered)
				if (not IsValidParUOM) 
					if (CartParLocation)
						if ((action type.Create
						or  (action type.Update and DefaultTransactionUOM changed))
						and (ReplenishFrom entered
						and  ItemLocationReplenishFromRel.HasItemLocationStockUOM))
							constraint (DefaultTransactionUOM = ItemLocationReplenishFromRel.ItemLocationStockUOM
								or LocationItemUOMForReplenishTransactionUOMRel.OKForTransaction)
								"<DefaultTransactionUOM>IsNotAValidTransactionUnitOfMeasureOnTheLocationForThisItem"
					else
						if (HasItemLocationStockUOM)
							if  (action type.Create
							or  (action type.Update 
							and (DefaultTransactionUOM changed or ItemLocationStockUOM changed)))
								constraint (DefaultTransactionUOM = ItemLocationStockUOM
									or LocationItemUOMForDefaultTransactionUOMRel.OKForTransaction)
									"<DefaultTransactionUOM>IsNotAValidTransactionUnitOfMeasureOnTheLocationForThisItem"
						else
							constraint (DefaultTransactionUOM.ValidForTransaction)
								"<DefaultTransactionUOM>IsNotAValidUnitOfMeasureForThisItem"				

		DefaultSourceUOM
			if (!Item.CatchWeightCode.NotCatchWeight)
				constraint (DefaultSourceUOM.UnitOfMeasure = Item.SecondaryUOM)
					"U\O\MMust_=Secondary_\U\O\M;CatchWeightItem"             		

			if (DefaultSourceUOM entered)
				if (HasItemLocationStockUOM)
					if  (action type.Create 
					or  (action type.Update 
					and (DefaultSourceUOM changed or ItemLocationStockUOM changed)))
						LocalStockUOM = DefaultSourceUOM
						constraint (DefaultSourceUOM = ItemLocationStockUOM
							or LocationItemUOMForLocalStockUOMRel.OKForBuying)
							"<DefaultSourceUOM>IsAnInvalidLocationBuyingUnitOfMeasureForThisItem"
				else
					constraint (DefaultSourceUOM.ValidForBuying)
						"<DefaultSourceUOM>IsAnInvalidUnitOfMeasureForThisItem"

		SupplementalUOM
			constraint (SupplementalUOM.UnitOfMeasure not = Item.StockUOM)
				"CannotUse_\StockUOMAs_SupplementalUOM"  

			if (SupplementalUOM entered)
				if (HasItemLocationStockUOM)
					if  (action type.Create 
					or  (action type.Update 
					and (SupplementalUOM changed or ItemLocationStockUOM changed)))
						LocalStockUOM = SupplementalUOM
						constraint (SupplementalUOM = ItemLocationStockUOM
							or LocationItemUOMForLocalStockUOMRel.OKForTransaction)
							"<SupplementalUOM>IsAnInvalidLocationTransactionUnitOfMeasureForThisItem"
				else
					constraint (SupplementalUOM.ValidForTransaction)
						"<SupplementalUOM>MustBeAValidTransactionUnitOfMeasureForThisItem"

			if (SupplementalUOM changed)
				initialize LocalSupplementalComputed

		ItemLocationStockUOM
			constraint (not IsCatchWeightItem)
				"CannotEnter_Location_StockUOMFor_CatchWeightItems"

			constraint (HasLocationStockUOMTracking)
				"CannotEnter;NoStockUOMTrackingAtItemLocation"	

			constraint (LocationStockUOMItemUOMRel.TrackedIn)
				"UOMMustBeA_TrackedInItemUOM"


			if (ItemLocationStockUOM changed)
				constraint (not BinReorderPolicy set exists)
					"Bin_Reorder_PolicyExists,MustDeletePolicyBeforeAddingOrChangingThe_Item_Location_StockUOM"
				if (old ItemLocationStockUOM not entered) 
					if (StockOnHandDetailsRel exists) 
						if (IsPlainItem)

							invoke Delete StockOnHandDetailsRel
						else

							for each StockOnHandDetailsForNotStockUOMRel
								LocalLot 	= each.StockOnHandDetail.Lot
								LocalSubLot = each.StockOnHandDetail.Sublot
								LocalBin    = each.StockOnHandDetail.Bin							
								if (StockOnHandDetailsForStockUOMRel exists)

									invoke Update StockOnHandDetailsForStockUOMRel
										invoked.StockOnHandQuantity		+= each.StockOnHandQuantityInStockUOM
										invoked.AllocatedQuantity		+= each.AllocatedQuantityInStockUOM
										invoked.InspectionHoldQuantity	+= each.InspectionHoldQuantityInStockUOM
								else

									invoke Create StockOnHandDetail
										fill in fields from each
										invoked.StockOnHandDetail.UnitOfMeasure	= Item.StockUOM
										invoked.StockOnHandQuantity				= each.StockOnHandQuantityInStockUOM
										invoked.AllocatedQuantity				= each.AllocatedQuantityInStockUOM
										invoked.InspectionHoldQuantity			= each.InspectionHoldQuantityInStockUOM
								
								invoke Delete each
				else 
				if (ItemLocationStockUOM not entered) 
					if  (StockOnHandQuantity entered
					and (DerivedMultipleUOM > 1 and IsPlainItem)
					and  StockOnHandDetailsRel not exists)

						invoke Create StockOnHandDetail
							invoked.Company							= Company
							invoked.InventoryLocation				= InventoryLocation
							invoked.Item							= Item
							invoked.StockOnHandDetail.UnitOfMeasure	= Item.StockUOM
							invoked.StockOnHandQuantity				= StockOnHandQuantity
							invoked.SecondaryQuantity				= SecondaryQuantity
							invoked.AllocatedQuantity				= AllocatedQuantity
							invoked.InspectionHoldQuantity			= InspectionHoldQuantity					


		MaximumSaleQuantity
			constraint (MaximumSaleQuantity >= MinimumSaleQuantity)
					"MaximumSaleQuantityMustBeGreaterThanOrEqualToMinimumSaleQuantity" 

		DropshipPurchaseOrderForCustomerOrderLine
			if (CreatePurchaseOrderForCustomerOrderLine changed
			and old CreatePurchaseOrderForCustomerOrderLine)
				DropshipPurchaseOrderForCustomerOrderLine = false

			constraint (CreatePurchaseOrderForCustomerOrderLine)
				"DropShipAllowedOnlyFor_\Create_\P\OItems"                			

		InventoryTracked
			initial value is true
			if (!IsInventoryLocation)
				InventoryTracked = false

			if (InventoryTracked changed)
				if (not InventoryTracked)
					constraint (ItemReplenishmentSourcesForItemRel not exists)
						"CannotChange,ItemLocExistsAsAReplenishmentSource"        	

				constraint (!QuantitiesExist)
					"CannotChangeTrackingFlag,QuantitiesExist"                	
		AllowIssue
			initial value is true

			if (CartParLocation)
				AllowIssue = true

			if (AllowIssue changed
			and not AllowIssue)
				constraint (ItemReplenishmentSourcesForItemRel not exists)
					"CannotChange,ItemLocExistsAsAReplenishmentSource"        	

		ForecastNumber
			constraint (InventoryForecastsRel exists)
				"ForecastDoesNotExist"                                    		

		ReorderPoint
			if (CartParLocation)
				constraint (ReorderPoint >= 0)
					"ParLevelCanNotBeNegative"
				if (TransientQuantity not entered)
					required
						"ParLevelCannotBeBlankForParLocation" 					     

					constraint (ReorderPoint > MinimumOrderQuantity)
						"MinimumReorderQuantityMustBeLessThanParLevel"               //@e.IC81.163"




		LastUpdateDate
			default to current timestamp

		HasTransactionActivity
			HasTransactionActivity = true

		PreferredHoldBin
			if (!CartParLocation)
				if (IsInventoryBinTracked
				and PreferredHoldBin not entered)
					default to InventoryLocation.PreferredHoldBin

				if (PreferredHoldBin entered)
					constraint (PreferredBin entered)
						"PreferredBinMustBeEnteredWhenUsingPreferredHoldBin"

					for each Company.BinTypeArray.BinTypeGroup
						if (each.BinType = PreferredHoldBin.BinType)
							constraint (each.AllowsReceipt)
								"PreferredHoldBinMustHaveReceiptsAllowedBinType"
							constraint (not each.AllowsIssue)
								"PreferredHoldBinCannotBeIssuesAllowedBinType"

		MSDSDate
			if (Item.MSDSRequired)
				default to current corporate date

		ManufacturerNumberStripped
			default to DerivedStrippedManufacturerNumber

		Discontinued
			if (action type.Create 
			and not LocalCreateFromCopy)
				default to Item.Discontinued

			if (Discontinued)
				constraint (Item.Active)
					"CannotSetItemLocationToDiscontinued;ItemIsInactive"
			else
			if (Discontinued changed)
				constraint (not Item.Discontinued)
					"CannotSetItemLocationToNotDiscontinued;ItemIsDiscontinued"
		
		IncludeUnreservedForReorder
			if (action type.Create)
				default to InventoryLocation.IncludeUnreservedForReorder

	Form Invokes
		CreateKitchenOrderWizard
			invoke CreateAndLinkToRequisition KitchenOrder
				invoked.Company				= Company
				invoked.InventoryLocation	= InventoryLocation
				invoked.Item				= Item
				invoked.Recipe				= RecipeRel.Recipe

	Create Exit Rules

		FromCreateForConsolidated = true

	Actions
		ComputeGlobalAverageCost is a Set Action
			restricted
			Parameters
				PrmCompany is an InventoryCompany
			Local Fields
				LocalTotalGLValue	  			is like InternationalCost
				LocalTotalAverageCost 			is like InternationalCost
				LocalTotalStockOnHand 			is like Quantity
			Sort Order is Set2
			Instance Selection
				where (Company = PrmCompany
				and    Company.UseGlobalAverageCost)
			Action Rules		
				Instance Rules
					LocalCompany = PrmCompany
					LocalItem = Item
					
					initialize LocalTotalGLValue
					initialize LocalTotalStockOnHand
					
					if (GlobalAverageCostAndSOHComputationRel not exists)
						invoke Create GlobalAverageCostAndSOH
							fill in fields from this instance
							invoked.AverageComputation = 1 
					else
						invoke Update GlobalAverageCostAndSOHComputationRel
							invoked.AverageComputation = 1 
						
					for each ItemLocationsForAnItemRel
						LocalTotalGLValue     += each.CurrentInventoryValue
						LocalTotalStockOnHand += each.StockOnHandQuantity			
					LocalTotalAverageCost = LocalTotalGLValue / LocalTotalStockOnHand
	
					invoke Update GlobalAverageCostAndSOHComputationRel
						invoked.GlobalAverageCost = LocalTotalAverageCost
						invoked.GlobalStockOnHand = LocalTotalStockOnHand
						invoked.AverageComputation = 2 

		UpdateIIHRecommendations is an Instance Action
			restricted
			Parameters
				PrmReorderPoint				is an UnsignedQuantity
				PrmMaximumOrderQuantity		is an UnsignedQuantity
				PrmReorderQuantity			is like UnsignedQuantity

			Action Rules
				if (PrmReorderPoint entered)
					ReorderPoint = PrmReorderPoint
				if (PrmMaximumOrderQuantity entered)
					MaximumOrderQuantity = PrmMaximumOrderQuantity
				if (PrmReorderQuantity entered)
					ReorderQuantity = PrmReorderQuantity
			Entrance Rules
				initialize LocalCurrentInventoryValue
				LocalCurrentInventoryValue = IIHItemLocationRel.CurrentInventoryValue
			Exit Rules
				if (IIHItemLocationRel.ValidForInventoryValuation and IIHItemLocationRel.ConsignmentInValuationCheck)
					invoke FastUpdate IIHInventoryLocationRel
						invoked.CurrentInventoryValue	= (IIHInventoryLocationRel.CurrentInventoryValue - LocalCurrentInventoryValue + IIHItemLocationRel.CurrentInventoryValue)
				if (IIHItemRel exists
				and IIHInventoryLocationRel exists)
					invoke CreateIIHItemLocationAuditData IIHItemLocationRel
						invoked.PrmBeforeReorderPoint 			= IIHItemLocationRel.ReferenceReorderPoint
						invoked.PrmAfterReorderPoint 			= ReorderPoint
						invoked.PrmBeforeMaximumOrderQuantity 	= IIHItemLocationRel.ReferenceMaxOrder
						invoked.PrmAfterMaximumOrderQuantity 	= MaximumOrderQuantity
						invoked.PrmBeforeReorderQuantity 		= IIHItemLocationRel.ReferenceReorderQuantity
						invoked.PrmAfterReorderQuantity 		= ReorderQuantity
						invoked.PrmReorderQuantityCode 			= ReorderQuantityCode
						invoked.PrmModificationBy				= 1


		CreateForParLocation is a Create Action
			restricted

		Create is a Create Action
			Entrance Rules
				if (ItemLocationStockUOM entered)
					include UpdateOverrideTransientInLocationStockUOM
			Action Rules
				if (CartParLocation)
					include ValidateShelfLocation

					if (PreferredBin not entered)				
						PreferredBin = TransientShelfLocation
						if (!FromWorksheet)
							if (BinSequence not entered)
								invoke Create BinGroupDetail
									invoked.Company                        = Company
									invoked.InventoryLocation     	       = InventoryLocation
									invoked.BinGroup                	   = InventoryLocation
									invoked.TransientBinSequence  		   = BinSequence
									invoked.TransientBin                   = TransientShelfLocation
									invoked.FromItemLocationCreate         = true
							else
								invoke QuickCreate BinGroupDetail
									invoked.Company                        = Company
									invoked.InventoryLocation     	       = InventoryLocation
									invoked.BinGroup                	   = InventoryLocation
									invoked.BinGroupDetail                 = BinSequence
									invoked.Bin                            = TransientShelfLocation
						else
						if (FromWorksheet)
							invoke Create BinGroupDetail
								invoked.Company                        = Company
								invoked.InventoryLocation     	       = InventoryLocation
								invoked.BinGroup                	   = InventoryLocation
								invoked.TransientBin                   = TransientShelfLocation
								invoked.FromItemLocationCreate         = true

					if (VendorAndPurchaseFrom not entered)
						if (ReplenishFrom not entered
						and ItemLocationForReplenishSourceRel.InventoryTracked)
							ReplenishFrom.ReplenishFromCompany  = InventoryLocation.FromCompany
							ReplenishFrom.ReplenishFromLocation = InventoryLocation.ReplenishFromLocation

						constraint (ReplenishFrom entered)
							"EnterEitherVendorOrReplenishmentFromCompany/Location"
							
				if (TransientShelfLocation not entered
				and not CreatedFromBinGroupDetail)
					constraint (not InventoryLocation.LocationType.ParLocation)
						"CannotMaintainItemAtAParLocation.PleaseUse_Manage_Par_ItemForm"

				default Manufacturer to Item.Manufacturer
				default ManufacturerNumber to Item.ManufacturerNumber

			Exit Rules
				invoke BuildTextIndex Item
				if (CartParLocation)
					invoke Create ItemReplenishmentSource
						invoked.Company										= Company
						invoked.InventoryLocation							= InventoryLocation
						invoked.Item										= Item
						invoked.ItemReplenishmentSource						= 1
						invoked.Vendor										= VendorAndPurchaseFrom.Vendor
						invoked.PurchaseFromLocation						= VendorAndPurchaseFrom.PurchaseFromLocation
						invoked.ReplenishFrom								= ReplenishFrom
				if (ItemLocationStockUOM entered
				and not LocalCreateFromCopy
				and invoking action not = "Item.CopyItem")
					invoke Create LocationItemUOM
						invoked.Company							= Company
						invoked.InventoryLocation				= InventoryLocation
						invoked.Item							= Item
						invoked.ItemLocation					= ItemLocation
						invoked.UnitOfMeasure 					= ItemLocationStockUOM.UnitOfMeasure


		RequestNewItemLocation is a Create RequestAction
			action comment required
			request action process is RequestNewItemLocation
			request action linkback webapp is ItemMasterSpecialist
			allow user fields as parameters
			Parameters
				RequesterActor			is an Actor
			 	RequestedBy				is Alpha 100
	 			RequesterPhone			is a Telephone 
	 				holds pii
			 	RequesterEmail			is an EmailAddress 
			 		holds pii
				RequestPriority			is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy				is Date
				Notes					is Text

				Company
				InventoryCompany
				InventoryLocation
				Item
				GeneralLedgerCategory
				Buyer
				ItemLocation
				DefaultTransactionUOM							is a UnitOfMeasureEdit
				PurchaseTaxable
				PurchaseTaxCode 								is a TaxCode
				TaxableWhenSold									is Boolean
				SellTaxCode										is a TaxCode
				StandardCost									is like InternationalCost
				FutureStandardCost								is like InternationalCost
				MovementClass									is AlphaUpper size 1
					States
						MovementClass1 value is "1"
						MovementClass2 value is "2"
						MovementClass3 value is "3"
				StorageCode
				PreferredBin									is a Bin
				MinimumOrderQuantity							is like Quantity
				MaximumOrderQuantity							is like Quantity
				ReorderPolicy
				ReorderDocument									is AlphaUpper size 1
					States
						NoDocumentCrPaeatedOnlyPlan value is "N"
							default label is "No document created, only plan"
						PurchaseOrder            value is "P"
						Requisition               value is "R"
						IntransitDocument         value is "X"
						TransferDocument          value is "T"
						IssueDocument             value is "I"
						WorkOrder                 value is "W"
				ReorderQuantityCode
				ReorderPointCode
				ReorderQuantity									is like Quantity
				ReorderPoint									is like Quantity
				LeadtimeControl									is AlphaUpper size 1
					States
						ManuallyEntered  value is "M"
						NeedsReview      value is "R"
						SystemCalculates value is "S"
				LeadtimeDays
				LastLeadtime									is a LeadtimeDays
				PreviousLeadtime								is a LeadtimeDays
				AutomaticPurchaseOrder							is Boolean
				OrderMultiple
				EconomicOrderQuantity							is like Quantity
				SafetyStock										is like Quantity
				Manufacturer
				ManufacturerNumber
				SelectForSpecialCycleCount						is Boolean
				ForecastNumber									is a InventoryForecast
				PatientChargeable								is Boolean
				InventoryTracked								is Boolean
				BinTracked										is Boolean
				AllowReceipt									is Boolean
				AllowIssue										is Boolean
				InspectionRequired								is Boolean
				FrozenForPhysicalInventory						is Boolean
				LastIssueDate									is Date
				LastReceiptDate									is Date
				MSDSDate										is Date
				MSDSDocument
				MSDSVersion
				LastReceiptCost									is like InternationalCost
				LastIssueCost									is like InternationalCost
				AverageAddOnCost								is like InternationalCost
				AverageCost 									is like InternationalCost
				OverheadUnitCost 								is like InternationalCost
				MarketPrice										is like InternationalCost
				CountAccuracy									is an AccuracyClass1
				AddedDate										is Date
				Active
				UserField1										is AlphaUpper size 30
				UserField2
				UserField3										is a UserField2
				UserFieldN1										is like InternationalCost
				UserFieldN2										is like InternationalCost
				UserFieldN3										is like InternationalCost
				ReceivingDays
				Consignment										is Boolean
				NoCharge										is Boolean
				LotTracked
				SerialTracked
				DropshipPurchaseOrderForCustomerOrderLine 		is Boolean
				CreatePurchaseOrderForCustomerOrderLine			is Boolean
				MaximumSaleQuantity  							is like Quantity
				MinimumSaleQuantity  							is like Quantity
				AllowCustomerOrderReturns						is AlphaUpper 1
					States
						Yes				value is "Y"
						No				value is "N"
						Limit			value is "L"
				CustomerOrderReturnDate 						is Date
				DefaultSourceUOM								is a UnitOfMeasureEdit

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.PresentationName
					default to RequesterActor.PersonName.PresentationName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				InventoryCompany
					required

				Company
					force default to InventoryCompany

				InventoryLocation
					required

				Item
					required


			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include AddCreateRequestItemLocation

		CopyItemLocation is a Create Action
			Parameters
				PrmFromCompany 						is an InventoryCompany
					default label is "Company"
				PrmFromLocation 					is an InventoryLocation
					context of PrmFromCompany
					default label is "InventoryLocation"
				PrmItem is an Item
					context of PrmFromCompany
					default label is "Item"
				PrmItemLocation						is an ItemLocation
					context of PrmFromCompany
					context of PrmFromLocation
				PrmCopyReplenishmentInformation		is Boolean
					default label is "CopyReplenishmentInformation"
				PrmCopyComments						is Boolean
					default label is "CopyComments"
				PrmToCompany						is an InventoryCompany
				PrmToLocation						is an InventoryLocation
					context of PrmToCompany
					default label is "InventoryLocation"
				PrmPreferredBin						is a Bin
					context of PrmToCompany
					context of PrmToLocation
					default label is "PreferredBin"
				PrmInventoryLocationAccountGroup	is a GeneralLedgerCategory	
					context of PrmToCompany
					context of PrmToLocation
					default label is "InventoryLocationAccountGroup"
				PrmStandardCost						is an InternationalCost		
					default label is "StandardCost"
			Parameter Rules
				PrmFromCompany
					required

				PrmFromLocation
					required
				
				PrmItem
					required

				PrmToCompany
					required

				PrmToLocation
					required
					constraint (PrmToLocation.LocationType.InventoryLocation)
						"Location<PrmToLocation>IsNotAnInventoryLocation"
				
				PrmStandardCost
					if (PrmToCompany.CostingMethod.StandardCosting)
						required

				PrmCopyReplenishmentInformation
					if (PrmItemLocation.AutomaticPurchaseOrder
					and PrmItemLocation.ReorderDocument.PurchaseOrder
					and not PrmCopyReplenishmentInformation)
						required
							"Automatic_\Purchase_\Order_\flag_=_\Yes;_\Must_\copy_\item_\replenishment_\source"
			
			Action Rules
				LocalFromCompany	= PrmFromCompany
				LocalFromLocation	= PrmFromLocation
				LocalItem			= PrmItem

				constraint (CopyFromItemLocationRel exists)
					"CopyFromItemLocationDoesNotExist"

				invoke Create this instance
					fill in fields from PrmItemLocation

						except invoked.AddedDate
						except invoked.LastUpdateDate
						except invoked.LastReceiptDate
						except invoked.LastIssueDate
						except invoked.LastCountDate
						except invoked.LastCycleCountDate
						except invoked.LastTurnoverCalculationDate

						except invoked.HasTransactionActivity
						except invoked.TransactionCount
						except invoked.TransactionCounter
						except invoked.CountAccuracy
						except invoked.FromWorksheetResult
						except invoked.TurnoverRate

						except invoked.LastLeadtime
						except invoked.PreviousLeadtime
						except invoked.LeadtimeControl                          
						except invoked.LeadtimeDays

						except invoked.FreezeDate
						except invoked.FrozenForPhysicalInventory

						except invoked.AverageCost
						except invoked.LastReceiptCost
						except invoked.AverageAddOnCost
						except invoked.LastIssueCost

						except invoked.StockOnHandQuantity
						except invoked.SecondaryQuantity
						except invoked.AllocatedQuantity
						except invoked.UnallocatedQuantity
						except invoked.BackorderedQuantity
						except invoked.InProcessQuantity
						except invoked.OnOrderQuantity
						except invoked.IntransitQuantity
						except invoked.WorkInProgressQuantity
						except invoked.InspectionHoldQuantity
						except invoked.InspectionHoldCatchWeightQuantity
						except invoked.KitchenInProcessQuantity
						except invoked.AverageStockOnHandQuantity

						except invoked.StandardCost
						except invoked.MarketPrice
						except invoked.FutureStandardCost
						except invoked.OverheadUnitCost

						except invoked.PreferredBin
						except invoked.TransientShelfLocation 
					invoked.Company							= PrmToCompany
					invoked.InventoryLocation				= PrmToLocation
					invoked.Item							= PrmItemLocation.Item
					invoked.GeneralLedgerCategory			= PrmInventoryLocationAccountGroup
					invoked.LocalFromCopy					= true

					invoked.Active							= PrmItemLocation.Active
					invoked.Discontinued					= PrmItemLocation.Discontinued
					invoked.LocalCreateFromCopy				= true 

					if (PrmToCompany.CostingMethod.StandardCosting)
						invoked.StandardCost				= PrmStandardCost

					if (PrmItemLocation.BinTracked)
						invoked.PreferredBin				= PrmPreferredBin

				if (PrmCopyReplenishmentInformation)
					for each CopyFromItemReplenishmentSourcesRel
						invoke Create ItemReplenishmentSource
							fill in fields from each
							invoked.Company				= PrmToCompany
							invoked.InventoryLocation	= PrmToLocation
							invoked.Item				= PrmItemLocation.Item

				if (PrmCopyComments)
					for each CopyFromItemLocationRel.ItemLocationComment set
						invoke Create ItemLocationComment
							fill in fields from each
								except invoked.ItemLocationComment
							invoked.Company				= PrmToCompany
							invoked.InventoryLocation	= PrmToLocation
							invoked.Item				= PrmItemLocation.Item

				if (PrmItemLocation.HasItemLocationStockUOM)
					for each CopyAllLocationItemUOMRel
						invoke Create LocationItemUOM
							fill in fields from each
							invoked.Company				= PrmToCompany
							invoked.InventoryLocation	= PrmToLocation
							invoked.Item				= PrmItemLocation.Item

		Update is an Update Action
			Local Fields
				LocalCounter         	is Numeric 3
				LocalBinDifference   	is Numeric 3
				LocalQuantity	     	is Numeric 3
				LocalCurrentBinCount 	is Numeric 3
			Entrance Rules
				if (ItemLocationStockUOM changed)
					if (ItemLocationStockUOM not entered
					and OtherLocationItemUOMRel exists)
						confirmation required
							"AllRecordsFrom_Location_Item_UOMWillBeDeleted.DoYouWishToContinue?"
					include GetTransientForLocationStockUOM
				
				include UpdateOverrideTransientInLocationStockUOM
				
				if (ItemLocationStockUOM changed)
					constraint (ReorderPoint    	not changed
						and ReorderQuantity 		not changed
						and MaximumOrderQuantity 	not changed
						and MinimumOrderQuantity 	not changed
						and SafetyStock 			not changed
						and EconomicOrderQuantity 	not changed)
						"CannotUpdateLocationStockUOMAndQuantitiesAtTheSameTime"
					constraint (StandardCost 		not changed
						and FutureStandardCost 		not changed
						and MarketPrice 			not changed
						and OverheadUnitCost 		not changed)
						"CannotUpdateLocationStockUOMAndCostsAtTheSameTime"
			Action Rules
				if (MobileSupplyChainConfigurationRel.MobileSupplyChainEnabled)
					if (CartParLocation and UseKanban)
						KanbanNumberOfBins = TransientKanbanNumberOfBins

						if (KanbanNumberOfBins not entered)
							KanbanNumberOfBins = 2 

						if (ReorderPoint changed 
						or  KanbanNumberOfBins changed)

							constraint (KanbanNumberOfBins > 1)
								"NumberOfBinsShouldBeMinimumOf2."
							
							constraint (IsParLevelDivisibleByNumberOfBins)
								"ParLevelShouldBeEquallyDivisibleInWholeNumbersByTheNumberOfBinsForAKanbanItem."

							LocalQuantity 		 = ReorderPoint / KanbanNumberOfBins
							LocalCurrentBinCount = instance count of KanbanItemBinRel

							constraint (LocalQuantity >= MinimumOrderQuantity)
								"KanbanBinQuantityShouldBeEqualOrGreaterThanTheMinimumOrder."

							for each KanbanItemBinRel
								invoke Update each
									invoked.Quantity = LocalQuantity
							
							if (KanbanNumberOfBins > LocalCurrentBinCount)
								LocalBinDifference = KanbanNumberOfBins - LocalCurrentBinCount
								LocalCounter = 1
								while (LocalCounter <= LocalBinDifference)
									invoke Create KanbanItemBin
										invoked.Company             = Company
										invoked.InventoryLocation	= InventoryLocation
										invoked.Item				= Item
										invoked.Quantity			= LocalQuantity
									LocalCounter += 1
							else
							if (KanbanNumberOfBins < LocalCurrentBinCount)
								LocalBinDifference = LocalCurrentBinCount - KanbanNumberOfBins

								LocalCounter = 1
								while (LocalCounter <= LocalBinDifference)
									invoke Delete last KanbanItemBinRel

									LocalCounter += 1


					if (UseKanban changed and not UseKanban)
						if (KanbanItemBinRel exists)
							confirmation required
								"ThisWillDeleteExistingKanbanBins.Continue?"
							invoke DeleteNoRules KanbanItemBinRel
							initialize KanbanNumberOfBins
							initialize TransientKanbanNumberOfBins
							initialize KanbanWithExpiry

					if ((UseKanban changed
					or KanbanNumberOfBins changed)
					and KanbanItemNotes entered)
						initialize KanbanItemNotes
				
				if (TransientQuantity not entered)
					if (CartParLocation)
						if (PreferredBin != TransientShelfLocation		
						or  PreferredBin changed)                       
							include ValidateShelfLocation

							if (PreferredBin changed)
								invoke FastUpdate BinGroupDetailForOldPreferredBinRel
									invoked.Bin				= LocalShelfLocation
								PreferredBin 				= LocalShelfLocation
							else
								invoke FastUpdate BinGroupDetailRel
									invoked.Bin				= TransientShelfLocation
								PreferredBin 				= TransientShelfLocation

						if (BinSequence != BinGroupDetailRel.BinGroupDetail)
							constraint (SameBinGroupDetailRel not exists)
								"BinSequenceAlreadyExists"

							invoke FastUpdate BinGroupDetailRel
								invoked.BinGroupDetail		= BinSequence

						if (not LocalFromBinGroupDetail)
							invoke Update ItemReplenishmentSourcesRel
								if (TransientOnline entered
								or Vendor entered)	
									invoked.Vendor					= Vendor
								if (TransientOnline entered
								or PurchaseFromLocation entered)
									invoked.PurchaseFromLocation	= PurchaseFromLocation
								if (TransientOnline entered
								or ReplenishFrom entered)
									invoked.ReplenishFrom			= ReplenishFrom

						if (ItemReplenishmentSourcesRel not exists
						and VendorAndPurchaseFrom not entered
						and ReplenishFrom not entered)
							ReplenishFrom.ReplenishFromCompany  = InventoryLocation.FromCompany
							ReplenishFrom.ReplenishFromLocation = InventoryLocation.ReplenishFromLocation

						include ReplenishInfoNeeded

						default Manufacturer to Item.Manufacturer
						default ManufacturerNumber to Item.ManufacturerNumber

				if (TransientSelect)
					invoke Create WarehouseDemandLine
						fill in fields from first WarehouseDemandLineRel
						invoked.Company							    			 = Company
						invoked.InventoryLocation                                = InventoryLocation

					invoke SubstituteLineLocation CustomerOrderLineRel
						invoked.PrmInventoryLocation = InventoryLocation

			Exit Rules
				if (TransientQuantity entered)
					invoke Unreleased.Create CustomerOrderLine
						invoked.Company					= Company
						invoked.CustomerOrder			= CustomerOrder
						invoked.Item					= Item
						invoked.OrderQuantity			= TransientQuantity
						invoked.EnteredPrice			= CustomerOrderLine.EnteredPrice
						invoked.InventoryLocation		= InventoryLocation
						invoked.SellUOM					= TransientUOM
						invoked.ExpectedShipDate		= TransientShipDate

				if (TextSearchable changed)
					invoke BuildTextIndex Item

				if (ItemLocationStockUOM changed)
					if (ItemLocationStockUOM entered)
						if (old ItemLocationStockUOM entered)
							LocalStockUOM = old ItemLocationStockUOM.UnitOfMeasure
							invoke FastUpdate LocationItemUOMForLocalStockUOMRel
								initialize invoked.LocationStockUOM	
							
						if (LocationItemUOMRel exist)
							invoke Update LocationItemUOMRel
								invoked.LocationStockUOM	= true
						else
							invoke Create LocationItemUOM
								invoked.Company							= Company
								invoked.InventoryLocation				= InventoryLocation
								invoked.Item							= Item
								invoked.UnitOfMeasure 					= ItemLocationStockUOM.UnitOfMeasure
								invoked.LocationStockUOM				= true
					else
						invoke Delete AllLocationItemUOMRel		


#ifdef module InventoryIntelligence
				if (actor.context.FinanceEnterpriseGroup.IIProvisionCheck)
					if  (Active changed
					and !Active)
						invoke ClearRecommendation IIHItemLocationRel
						invoke ClearKPIValues IIHItemLocationRel
						
					if  (Discontinued changed
					and  Discontinued)
						invoke ClearRecommendation IIHItemLocationRel
	
					if (DefaultTransactionUOM changed)


						invoke ClearRecommendation ItemReplenishmentSourcesForItemRel
	
					if (DefaultSourceUOM changed)


						invoke ClearRecommendation IIHItemLocationRel
					if (ReorderPoint changed 
					or MaximumOrderQuantity changed
					or ReorderQuantity changed)
						invoke EvaluateChangeAction IIHItemLocationRel
						if (IIHItemRel exists
						and IIHInventoryLocationRel exists)
							invoke CreateIIHItemLocationAuditData IIHItemLocationRel
								invoked.PrmBeforeReorderPoint 			= old ReorderPoint
								invoked.PrmAfterReorderPoint 			= ReorderPoint
								invoked.PrmBeforeMaximumOrderQuantity 	= old MaximumOrderQuantity
								invoked.PrmAfterMaximumOrderQuantity 	= MaximumOrderQuantity
								invoked.PrmBeforeReorderQuantity 		= old ReorderQuantity
								invoked.PrmAfterReorderQuantity 		= ReorderQuantity
								invoked.PrmReorderQuantityCode 			= ReorderQuantityCode
								invoked.PrmModificationBy				= 0
#endif

				
				if (CartParLocation)
					if (PreferredBin changed)
						invoke Delete OldShelfLocationRel
					if (TransientQuantity not entered)
						if (ItemReplenishmentSourcesRel not exists)
							invoke Create ItemReplenishmentSource
								invoked.Company										= Company
								invoked.InventoryLocation							= InventoryLocation
								invoked.Item										= Item
								invoked.ItemReplenishmentSource						= 1
								invoked.ReplenishFrom								= ReplenishFrom
								invoked.Vendor										= VendorAndPurchaseFrom.Vendor
								invoked.PurchaseFromLocation						= VendorAndPurchaseFrom.PurchaseFromLocation

		ParLocationUpdate is an Update Action    
			valid when (InventoryLocation.ParOrExchangeCart)

			Field Rules
				ParLocationCount
					if (ParLocationCount not = ReorderPoint) 
						constraint (ParLocationCount < ReorderPoint)
							"CannotCreateRequisition;CountIsNotLessThanParLevel"                   	
 
						constraint	(ParLocationCount >= 0)
							"ParLocationCountCannotBeNegative"
						
						round LocalCountQuantity up to nearest OrderMultiple
						if (LocalCountQuantity > 0 )
							constraint (LocalCountQuantity >= MinimumOrderQuantity)
								"CannotCreateRequisition;CountIsLessThanMinimumOrderQuantity"       

				BinSequence
					cannot be changed
						"BinSequenceIsOutOfSync"

				PreferredBin
					cannot be changed
						"PreferredBinIsOutOfSync"

				DefaultTransactionUOM
					cannot be changed
						"UOMIsOutOfSync"

				ReorderPoint
					cannot be changed
						"ParLevelIsOutOfSync"

			Action Rules
				if (ParLocationCount not = ReorderPoint) 
					LocalCountQuantity = ReorderPoint - ParLocationCount










					if (RequisitionLinesRel exists
					and not Requisition.Status.Unreleased)
						constraint (LocalCountQuantity = first RequisitionLinesRel.Quantity)
							"CannotChange;RequisitionHasBeenReleased"

			Exit Rules
				if (ReorderPoint changed)
					invoke EvaluateChangeAction IIHItemLocationRel
					if (IIHItemRel exists
					and IIHInventoryLocationRel exists)
						invoke CreateIIHItemLocationAuditData IIHItemLocationRel
							invoked.PrmBeforeReorderPoint 			= old ReorderPoint
							invoked.PrmAfterReorderPoint 			= ReorderPoint
							invoked.PrmBeforeMaximumOrderQuantity 	= old MaximumOrderQuantity
							invoked.PrmAfterMaximumOrderQuantity 	= MaximumOrderQuantity
							invoked.PrmBeforeReorderQuantity 		= old ReorderQuantity
							invoked.PrmAfterReorderQuantity 		= ReorderQuantity
							invoked.PrmReorderQuantityCode 			= ReorderQuantityCode
							invoked.PrmModificationBy				= 0
				if (ParLocationCount not = ReorderPoint) 

					if (IsReplenishmentFromVendor)
						if (VendorItemsForItemVendorRel.VendorBuyUOM.UnitOfMeasure entered)
							LocalEnteredUOM	= VendorItemsForItemVendorRel.VendorBuyUOM.UnitOfMeasure
						else
						if (not DefaultTransactionUOM.ValidForBuying
						and DefaultTransactionUOM != Item.DefaultBuyUOM)
							LocalEnteredUOM = Item.DefaultBuyUOM	

						if (LocalEnteredUOM entered)
							initialize UOMCalculation
							UOMCalculation.InputUOM		 = DefaultTransactionUOM
							UOMCalculation.InputToUOM	 = LocalEnteredUOM
							UOMCalculation.InputQuantity = LocalCountQuantity
							UOMCalculation.Method		 = UOMCalculation.Method.ConvertToAlternate

							if (Item.NumberOfDecimalsQuantity.0Decimals)
								UOMCalculation.ValidateDecimal = true

							LocalCountQuantity			 = UOMCalculation.OutputQuantity

					if (LocalEnteredUOM not entered)
						LocalEnteredUOM	= DefaultTransactionUOM

					if (RequisitionLinesRel exists)
						invoke Update first RequisitionLinesRel
							invoked.LocalCreatedFromParCounting		= true
							invoked.EnteredUOM						= LocalEnteredUOM
							invoked.Quantity						= LocalCountQuantity
							invoked.ActualCount						= ParLocationCount
					else
					if (RequisitionLinesForSubstituteItemRel exists)
						invoke Update first RequisitionLinesForSubstituteItemRel
							invoked.LocalCreatedFromParCounting		= true
							invoked.EnteredUOM						= LocalEnteredUOM
							invoked.Quantity						= LocalCountQuantity
							invoked.ActualCount						= ParLocationCount

					else
						invoke Create RequisitionLine
							invoked.Company							= Company
							invoked.Requisition						= Requisition
							invoked.RequestingLocation				= Requisition.RequestingLocation
							invoked.LocalCreatedFromParCounting		= true
							invoked.ItemEntryMethod         		= ItemEntryMethod.Item
							invoked.Item							= Item
							invoked.EnteredUOM						= LocalEnteredUOM
							invoked.Quantity						= LocalCountQuantity
							invoked.ActualCount						= ParLocationCount

							if (IsReplenishmentFromVendor)
								invoked.CreatePurchaseOrder			= true
								invoked.ItemType					= ItemType.NonStock
								invoked.Vendor						= first ItemReplenishmentSourcesRel.Vendor
								invoked.PurchaseFromLocation		= first ItemReplenishmentSourcesRel.PurchaseFromLocation
							invoked.RequisitionSource				= RqSource.ParLocationCounts

							invoked.FillOrKill  					= Requisition.FillOrKill



						invoke SendRequesterRQCreateNotification RequisitionRel
												

		MobileParLocationUpdate is an Update Action 
			valid when (InventoryLocation.ParOrExchangeCart)
			default label is "ParLocationUpdate"
			Action Rules
				invoke ParLocationUpdate
					invoked.ParLocationCount = ParLocationCount

		Delete is a Delete Action
			Entrance Rules
				include DeleteRules

				invoke BuildTextIndex Item
			Exit Rules
				
				if (CartParLocation)
					invoke DeleteParItem ItemReplenishmentSourcesRel
					invoke Purge BinGroupDetailRel
					invoke Delete ShelfLocationRel
				else
					constraint (ItemReplenishmentSourcesRel not exists)
						"CannotDelete;ReplenishmentRecordsExist"                  		

				constraint (ItemReplenishmentSourcesForItemRel not exists)
					"CannotDelete;Company/LocationAreUsedOnReplenishmentRecords"	

		DeleteParItemLocation is a Delete Action
			restricted
			Entrance Rules
				include DeleteRules

			Exit Rules
				invoke DeleteParItem ItemReplenishmentSourcesRel
				invoke Delete ShelfLocationRel

		UpdateManufacturerInfo is an Instance Action			
			restricted
			Parameters
				PrmManufacturer 		is a Manufacturer
				PrmManufacturerNumber	is a ManufacturerNumber
			Action Rules
				Manufacturer 		= PrmManufacturer
				ManufacturerNumber	= PrmManufacturerNumber	

			Exit Rules
				invoke BuildTextIndex Item

		UpdateFromItem is an Instance Action
			restricted
			Action Rules
				initialize LastReceiptCost
				initialize LastReceiptDate

		UpdateFromTransaction is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmStockOnHandQuantity 					is a Quantity
				PrmSecondaryQuantity   					is a Quantity
				PrmIntransitQuantity   					is a Quantity
				PrmInspectionHoldQuantity 				is a Quantity
				PrmInspectionHoldCatchWeightQuantity	is a Quantity
				PrmIntransit		   					is Boolean
				PrmIntransitToLocation 					is Boolean
				PrmLastReceiptCost     					is an InternationalCost
				PrmLastIssueCost	   					is an InternationalCost
				PrmAverageCost		   					is an InternationalCost
				PrmAverageAddOnCost	   					is an InternationalCost
				PrmTransactionCounter  					is Numeric size 6
				PrmTransactionCount						is a TransactionCount
				PrmClearLastReceiptCost					is Boolean
				PrmClearAverageCost						is Boolean
				PrmIsReceiptCost						is Boolean
				PrmIsIssueCost							is Boolean

			Local Fields
				LocalActor 				is an Actor

			Action Rules
				StockOnHandQuantity += PrmStockOnHandQuantity

				if (PrmIsReceiptCost)
					LastReceiptCost      = PrmLastReceiptCost
					LastReceiptDate      = current corporate date
				else
				if (PrmClearLastReceiptCost)
					initialize LastReceiptCost

				if (PrmIntransit)
					IntransitQuantity	-= PrmIntransitQuantity

				if (PrmIntransitToLocation)
					IntransitQuantity	+= PrmIntransitQuantity

				if (PrmIsIssueCost)
					LastIssueCost		 = PrmLastIssueCost
					LastIssueDate		 = current corporate date

 				if (PrmSecondaryQuantity entered)
 					SecondaryQuantity    += PrmSecondaryQuantity

 				if (PrmAverageCost entered)
 					if (PrmAverageCost < 0)
 						initialize PrmAverageCost
 						LocalActor = OriginatingPurchaseOrderOfCostAdjustmentRel.Buyer.Employee.agent(Actor).Actor
 						if (LocalActor entered)
	 						send notification
	 							to LocalActor
	 							description is "Item<Item>At_\Company<Company>And_\Location<InventoryLocation>NeedsToBeReviewed."
								priority is high
								detail is "DueToASignificantlyLargeCostAdjustmentBecauseOfADifferenceInInvoiceCost,TheAverageCostFor_\Item<Item>At_\Company<Company>And_\Inventory_\Location<InventoryLocation>IsNowZero._\PleaseReviewThisItemLocationForAccuracy."
 					AverageCost			= PrmAverageCost
 				else
 				if (PrmClearAverageCost)
 					initialize AverageCost

				if (PrmAverageAddOnCost entered)
 					AverageAddOnCost	= PrmAverageAddOnCost


				InspectionHoldQuantity 				+= PrmInspectionHoldQuantity
				InspectionHoldCatchWeightQuantity	+= PrmInspectionHoldCatchWeightQuantity

				TransactionCounter += PrmTransactionCounter
				TransactionCount   += PrmTransactionCount



		TriggerInventoryCount is an Instance Action
	  	 	restricted
			Action Rules
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					include TriggerInventoryCountBOD
					LocalBODTrigger = true


		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
				PrmVariationID		 is Numeric size 22
					default label is "VariationID"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				if (bod id.VariationID	!= PrmVariationID)
					bod id.VariationID			= PrmVariationID
		RecallInventoryQuery is a Set Action
			restricted
			Parameters
				PrmRecallGroup		is a RecallGroup
				PrmRecallNotice		is a RecallNotice
				PrmRecallProduct	is a RecallProduct
				PrmItem				is an Item
				PrmQueryPriority	is Numeric size 2
					States
		   				High			value is 1
		   				Medium			value is 2
		   				Low				value is 3
				PrmQueryDueDate		is TimeStamp
				PrmCreateTasks      is Boolean

			Sort Order
				ItemLocation
				Company
				InventoryLocation

			Instance Selection
				where (ItemLocation.Item = PrmItem
				and    Company.ItemGroup = PrmRecallGroup
				and    HasStockOnHand
				and	   InventoryLocation.LocationType.InventoryLocation)

			Action Rules
				Instance Rules
					invoke Create RecallProductTransaction
						invoked.RecallGroup									= PrmRecallGroup
						invoked.RecallNotice								= PrmRecallNotice
						invoked.RecallProduct								= PrmRecallProduct
						invoked.ActivityType								= 5 
						invoked.InventoryLocationGroup.InventoryCompany		= Company
						invoked.InventoryLocationGroup.InventoryLocation	= InventoryLocation
						invoked.InventoryParGroup.InventoryCompany			= Company
						invoked.InventoryParGroup.Item						= PrmItem
						invoked.InventoryParGroup.Location					= InventoryLocation
						invoked.InventoryParGroup.ItemLocation				= ItemLocation
						invoked.LocalPriority								= PrmQueryPriority
						invoked.LocalDueDate								= PrmQueryDueDate
						invoked.LocalCreateTasks                            = PrmCreateTasks

		RecallParLocationQuery is a Set Action
			restricted
			Parameters
				PrmRecallGroup		is a RecallGroup
				PrmRecallNotice		is a RecallNotice
				PrmRecallProduct	is a RecallProduct
				PrmItem				is an Item
				PrmQueryPriority	is Numeric size 2
					States
		   				High			value is 1
		   				Medium			value is 2
		   				Low				value is 3
				PrmQueryDueDate		is TimeStamp
				PrmCreateTasks      is Boolean

			Sort Order
				ItemLocation
				Company
				InventoryLocation

			Instance Selection
				where (ItemLocation.Item = PrmItem
				and    Company.ItemGroup = PrmRecallGroup
				and	   InventoryLocation.LocationType.ParLocation)

			Action Rules
				Instance Rules
					invoke Create RecallProductTransaction
						invoked.RecallGroup									= PrmRecallGroup
						invoked.RecallNotice								= PrmRecallNotice
						invoked.RecallProduct								= PrmRecallProduct
						invoked.ActivityType								= 6 
						invoked.InventoryLocationGroup.InventoryCompany		= Company
						invoked.InventoryLocationGroup.InventoryLocation	= InventoryLocation
						invoked.InventoryParGroup.InventoryCompany			= Company
						invoked.InventoryParGroup.Location					= InventoryLocation
						invoked.InventoryParGroup.ItemLocation				= ItemLocation
						invoked.InventoryParGroup.Item                      = Item
						invoked.LocalPriority								= PrmQueryPriority
						invoked.LocalDueDate								= PrmQueryDueDate
						invoked.LocalCreateTasks                            = PrmCreateTasks

		UpdatePreferredBinForItems is a Set Action		
			restricted
			Parameters
				PrmCompany                is an InventoryCompany
				PrmLocation               is an InventoryLocation
				PrmReportGroup            is an InventoryReportGroup
				PrmInventoryClassMajor    is a MajorInventoryClass
				PrmInventoryClassMinor	  is a MinorInventoryClass
				PrmUpdate                 is Boolean


			Parameter Rules
				PrmCompany
					required
				PrmLocation
					if (PrmReportGroup not entered)
						required
							"MustEnterEitherReportGroupOrLocation"
					else
						cannot be entered
							"CannotEnterBothReportGroupAndLocation"

					if (PrmLocation entered)
						constraint (PrmLocation.PreferredBin entered
						and PrmLocation.PreferredHoldBin entered)
							"DefaultPreferredBinsAreNeededAtLocation<PrmLocation>"

				PrmReportGroup
					if (PrmLocation not entered)
						required
							"MustEnterEitherReportGroupOrLocation"
					else
						cannot be entered
							"CannotEnterBothReportGroupAndLocation"
					LocalCompany = PrmCompany
					LocalInventoryReportGroup = PrmReportGroup

					if (PrmReportGroup entered)
						for each InventoryReportGroupLocationsRel
							constraint (each.InventoryLocation.PreferredBin entered
							and each.InventoryLocation.PreferredHoldBin entered)
								"DefaultPreferredBinsAreNeededAtLocation<each.InventoryLocation>"


			Sort Order
				Company
				InventoryLocation


			Instance Selection
				where (Company = PrmCompany
				and ((PrmLocation entered
				and	InventoryLocation = PrmLocation)
				or (PrmReportGroup entered
				and	HasInvReportGroupLocation))
				and (PrmInventoryClassMajor not entered
				or Item.MajorInventoryClass = PrmInventoryClassMajor)
				and (PrmInventoryClassMinor not entered
				or Item.MinorInventoryClass = PrmInventoryClassMinor)
				and !HasOpenTransaction
				and !BinTracked
				and InventoryTracked
				and !FrozenForPhysicalInventory    
				and !HasKitItemForMakeToOrder)     


			Action Rules
				Instance Rules
					if (PrmUpdate)
						invoke UpdateFromPreferredBinItems


		UpdateFromPreferredBinItems is an Update Action
			restricted
			Action Rules
				BinTracked       = true
				PreferredBin     = InventoryLocation.PreferredBin
				PreferredHoldBin = InventoryLocation.PreferredHoldBin

		UpdateQuantities is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmBackorderedQuantity 		is a Quantity
				PrmAllocatedQuantity   		is a Quantity
				PrmUnallocatedQuantity 		is a Quantity
				PrmOnOrderQuantity			is a Quantity
				PrmInProcessQuantity		is a Quantity
				PrmIntransitQuantity		is a Quantity
				PrmWorkInProgressQuantity 	is a Quantity
				PrmInspectionHoldQuantity 	is a Quantity
				PrmKitchenInProcessQuantity	is a Quantity
				PrmReservedQuantity			is a Quantity
				PrmUnreservedQuantity		is a Quantity






			Action Rules
				BackorderedQuantity 		+= PrmBackorderedQuantity
				AllocatedQuantity   		+= PrmAllocatedQuantity
				OnOrderQuantity  			+= PrmOnOrderQuantity
				UnallocatedQuantity 		+= PrmUnallocatedQuantity
				InProcessQuantity   		+= PrmInProcessQuantity
				IntransitQuantity			+= PrmIntransitQuantity
				WorkInProgressQuantity 		+= PrmWorkInProgressQuantity
				InspectionHoldQuantity	 	+= PrmInspectionHoldQuantity
				KitchenInProcessQuantity	+= PrmKitchenInProcessQuantity
				ReservedQuantity			+= PrmReservedQuantity
				UnreservedQuantity			+= PrmUnreservedQuantity

				if (UnreservedQuantity entered)
					if (ItemLocationDemandForecastRel not exists)
						invoke Create ItemLocationDemandForecast
							fill in fields from this instance
				else
					if (initiating action not = "ItemLocationDemandForecast.ReserveForScheduledProcedures")
						if (ItemLocationDemandForecastRel exists)
							invoke Delete ItemLocationDemandForecastRel

		CreateAudit is an Instance Action
			restricted
			Parameters
				PrmSource	is Alpha size 50
			Action Rules
				LocalSource = PrmSource


















































































		UpdateFrozenForPhysicalInventory is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmFrozenForPhysicalInventory  is Boolean
				PrmFreezeDate				   is Date

			Action Rules

				FrozenForPhysicalInventory = PrmFrozenForPhysicalInventory
				if (PrmFreezeDate entered)
					FreezeDate = PrmFreezeDate

		UpdateCountAccuracyForPhysicalInventory is an Instance Action
			restricted
			Parameters
				PrmCountAccuracy				is an AccuracyClass1

			Action Rules
				CountAccuracy					= PrmCountAccuracy

		UpdateLeadTimeFromPOReceiptLine is an Instance Action		
			restricted
			refresh and lock this instance
			Local Fields
				LocalPercentChange	is Decimal 3.2					

			Parameters
				PrmLastLeadtime		is a LeadtimeDays

			Action Rules
				if (LeadtimeControl.SystemCalculates)
					if (PreviousLeadtime entered
					or	LastLeadtime entered)		
						LocalPercentChange = ((LastLeadtime - PrmLastLeadtime) / LastLeadtime)
						if (LocalPercentChange > .5
						or  LocalPercentChange < -.5)						
							LeadtimeControl = LeadtimeControl.NeedsReview
						else
							LeadtimeDays = ((LastLeadtime + PrmLastLeadtime) / 2)
					else
						LeadtimeDays = PrmLastLeadtime

				PreviousLeadtime = LastLeadtime
				LastLeadtime = PrmLastLeadtime

		BODDataInitialLoadInventoryCountCriteria1 is a Set Action
			restricted
			Parameters
				PrmCompany						is a InventoryCompany
				PrmFromLocation					is an InventoryLocation
				PrmToLocation					is an InventoryLocation
				PrmItem	             			is an Item
			Parameter Rules
			Instance Selection
				where  (((PrmCompany entered
				and		  PrmCompany = Company)
				or		  PrmCompany not entered)
				and		((PrmFromLocation entered
				and		  PrmFromLocation <= InventoryLocation)
				or        PrmFromLocation not entered)
				and		((PrmToLocation entered
				and		  PrmToLocation >= InventoryLocation)
				or        PrmToLocation not entered)
				and		((PrmItem entered
				and		  PrmItem = Item)
				or        PrmItem not entered))

			Local Fields
				LocalFinanceEnterpriseGroup     is like FinanceEnterpriseGroup

			Action Rules
				Instance Rules
					if (PrmCompany.FinanceEnterpriseGroup.BODTrigger)
						LocalFinanceEnterpriseGroup = PrmCompany.FinanceEnterpriseGroup
						increment bod id.VariationID
						include TriggerInventoryCountBOD


		BODDataInitialLoadInventoryCountCriteria2 is a Set Action
			restricted
			Parameters
				PrmCompany						is a InventoryCompany
				PrmFromLocation					is an InventoryLocation
				PrmToLocation					is an InventoryLocation
				PrmItem	             			is an Item
			Parameter Rules
			Instance Selection
				where  (((PrmCompany entered
				and		  PrmCompany = Company)
				or		  PrmCompany not entered)
				and		((PrmFromLocation entered
				and		  PrmFromLocation <= InventoryLocation)
				or        PrmFromLocation not entered)
				and		((PrmToLocation entered
				and		  PrmToLocation >= InventoryLocation)
				or        PrmToLocation not entered)
				and		((PrmItem entered
				and		  PrmItem = Item)
				or        PrmItem not entered)
				and		(Item.Active = true)
				and		(Active = true)
				and 	(Discontinued = false))

			Local Fields
				LocalFinanceEnterpriseGroup     is like FinanceEnterpriseGroup

			Action Rules
				Instance Rules
					if (PrmCompany.FinanceEnterpriseGroup.BODTrigger)
						LocalFinanceEnterpriseGroup = PrmCompany.FinanceEnterpriseGroup
						increment bod id.VariationID
						include TriggerInventoryCountBOD
						
		UpdateForCostAdjustment is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				PrmCostDifference					is like UnitCost				
				PrmUpdatedCost						is like UnitCost			
				PrmQuantity							is like Quantity				
				PrmSecondaryQuantity				is like Quantity
				PrmDocumentNumber					is like InventoryTransaction			
				PrmLineNumber						is Numeric size 6			
				PrmAddOnChargeDifference			is Boolean					
				PrmUpdateLastReceiptCost			is Boolean					
				PrmOffsetAccount					is like FinanceCodeBlock		
				PrmEnteredItem						is like EnteredItem
				PrmOriginatingPurchaseOrder			is like PurchaseOrder

			Local Fields
				LocalCostDifferenceExt				is like UnitCost				
				LocalApplUnitCost					is like UnitCost
				LocalNewUnitCost					is like UnitCost				
				LocalExternalCost					is like UnitCost 				
				LocalAverageCost					is like InternationalCost

			Action Rules

				LocalDocumentNumber  				= PrmDocumentNumber
				LocalLineNumber						= PrmLineNumber
				LocalPurchaseOrder					= PrmOriginatingPurchaseOrder

				LocalCostDifferenceExt 				= PrmQuantity * PrmCostDifference

				if (InventoryCostHistoryForCostAdjustmentRel.ReceivedQuantity entered)
					LocalApplUnitCost 				= (LocalCostDifferenceExt / InventoryCostHistoryForCostAdjustmentRel.ReceivedQuantity)

				LocalNewUnitCost 					= InventoryCostHistoryForCostAdjustmentRel.UnitCost + PrmCostDifference

				LocalAverageCost					= AverageCost

				invoke CostAdjustment InventoryCostHistoryForCostAdjustmentRel
					if (LocalNewUnitCost entered)
						invoked.AdjustToZeroFlag		= false    
						invoked.NewUnitCost				= LocalNewUnitCost
					else
						invoked.AdjustToZeroFlag		= true
						invoked.NewUnitCost				= LocalNewUnitCost 

					invoked.LocalCostAdjustmentQuantity = PrmQuantity
					invoked.LocalSecondaryQuantity		= PrmSecondaryQuantity
					invoked.LocalCostAdjustmentAmount   = PrmCostDifference
					invoked.TransientMatchOffsetAccount	= PrmOffsetAccount
					invoked.SkipInactiveEdit        	= true
					invoked.BypassActiveCodeBlockEdit 	= true
					invoked.LocalEnteredItem			= PrmEnteredItem

				LocalExternalCost					= (LocalApplUnitCost * (InventoryCostHistoryForCostAdjustmentRel.ReceivedQuantity - InventoryCostHistoryForCostAdjustmentRel.InspectionHoldQuantity - InventoryCostHistoryForCostAdjustmentRel.UsedQuantity))




				if (PrmAddOnChargeDifference)
					if (StockOnHandQuantity != InspectionHoldQuantity)
						AverageAddOnCost			= (((AverageAddOnCost * (StockOnHandQuantity - InspectionHoldQuantity)) + LocalExternalCost) / (StockOnHandQuantity - InspectionHoldQuantity))

				if (PrmUpdateLastReceiptCost)
					if (PrmUpdatedCost entered)
						LastReceiptCost					    = PrmUpdatedCost

		FixAllocatedQuantity is an Instance Action
			restricted
			Action Rules
				AllocatedQuantity = DerivedAllocatedQuantityFromDemand
				BackorderedQuantity = DerivedBackorderedQuantityFromDemand
				for each StockOnHandDetailsRel
					invoke FixAllocatedQuantityForLocation each

				constraint (not AllocatedQuantityUnbalanced)
					"AllocatedQuantityCouldNotBeBalanced"

		DeleteSetAction is a Set Action
			restricted
			Parameters
				PrmInventoryCompany		is like InventoryCompany
				PrmInventoryLocation 	is like InventoryLocation

			Instance Selection
				where (Company				= PrmInventoryCompany
				and    InventoryLocation 	= PrmInventoryLocation)

			Action Rules
				Instance Rules
					invoke Delete



		FreezeZeroStockOnHandBins is a Set Action
			restricted
			completion message is "CreationOfItemLocationEmptyBinFreezeRecordsIsComplete.FreezeRecordsCreated:<LocalCreateEmptyBinFreezeCount>"
			Parameters
				PrmCompany				is an InventoryCompany
				PrmSelectId				is a PhysicalInventorySelect
				PrmLocation				is an InventoryLocation
				PrmBinGroup				is a BinGroup
				PrmBin					is a Bin
				PrmFreezePageNumber		is Numeric size 4

			Local Fields
				LocalSkipItemLocation 			is Boolean
				LocalCreateEmptyBinFreezeCount	is Numeric size 9
				LocalCreateFreezeErrorMessage	is Alpha size 100

			Instance Selection
				where (PrmCompany			= Company
				and    PrmLocation			= InventoryLocation
				and    PrmBin				= PreferredBin)

			Sort Order
				Company
				InventoryLocation
				PreferredBin
				Item

			Action Rules
				Instance Rules
					initialize LocalSkipItemLocation

					if (!ItemLocation.InventoryTracked)
						LocalSkipItemLocation		= true
					else
					if (!Active
					and StockOnHandQuantity	<= 0)
						LocalSkipItemLocation		= true

					if (PrmSelectId.ConsignmentItemOption.NoConsignmentItems
					and ItemLocation.Consignment)
						LocalSkipItemLocation		= true

					if (PrmSelectId.ConsignmentItemOption.OnlyConsignmentItems
					and !ItemLocation.Consignment)
						LocalSkipItemLocation		= true

					if (StockOnHandDetailsForPreferredBinRel exists)
						LocalSkipItemLocation		= true

					if (!LocalSkipItemLocation)
						if (PrmSelectId.FreezeZeroStockOnHand)
							initialize LocalCreateFreezeErrorMessage
							invoke Create PhysicalInventoryFreezeLineWork
								resume on error
									LocalCreateFreezeErrorMessage	= error message
								invoked.InventoryCompany					= PrmCompany
								invoked.PhysicalInventorySelect				= PrmSelectId
								invoked.InventoryLocation					= InventoryLocation
								invoked.BinGroup							= PrmBinGroup
								invoked.Bin									= PrmBin
								invoked.Item								= Item
								if (HasItemLocationStockUOM)
									invoked.UnitOfMeasure					= ItemLocationStockUOM
								else
									invoked.UnitOfMeasure					= Item.StockUOM
								initialize invoked.FreezeQuantity
								initialize invoked.CountQuantity
								initialize invoked.UnitCost
								initialize invoked.SecondaryQuantity
								initialize invoked.SecondaryCountQuantity
								initialize invoked.SecondaryUOM
								initialize invoked.SecondaryUOMMultiplier
								initialize invoked.InventoryReasonCode
								initialize invoked.MovementClassX
								initialize invoked.CountEntered
								invoked.OperatorID							= actor
								initialize invoked.ItemLot
								initialize invoked.Sublot
								initialize invoked.ItemSerialNumber
								invoked.ItemLocation						= ItemLocation



   		FreezeItemsInArray is a Set Action
   			restricted

			completion message is "CreationOfItemLocationFreezeRecordsForItemArrayIsComplete.FreezeRecordsCreated:<LocalCreateItemLocationFreezeCount>"
   			Parameters
   				PrmCompany								is an InventoryCompany
   				PrmSelectId								is a PhysicalInventorySelect
   				PrmItemArrayCondition					is LPLText
   					is condition for "ItemLocation"
				PrmInventoryLocation					is an InventoryLocation

   			Local Fields
   				LocalSkipForItemLocationFreeze			is Boolean
   				LocalCreateItemLocationFreezeCount		is Numeric size 9
				LocalCreateFreezeErrorMessage			is Alpha size 100

   			Instance Selection
   				where (Company					= PrmCompany
   				and    PrmItemArrayCondition
   				and   ((PrmInventoryLocation not entered)
   				or     (InventoryLocation		= PrmInventoryLocation)))

   			Sort Order
   				Company
   				Item
   				InventoryLocation

			Action Rules
				Instance Rules
					initialize LocalSkipForItemLocationFreeze


					if (!InventoryTracked)
						LocalSkipForItemLocationFreeze	= true

					if (FrozenForPhysicalInventory)
						LocalSkipForItemLocationFreeze	= true

					if (!PrmSelectId.FreezeZeroStockOnHand
					and !StockOnHandQuantity	entered)
						LocalSkipForItemLocationFreeze	= true

					if (!LocalSkipForItemLocationFreeze)
						if (SerialTracked = "R")
							invoke FreezeSerialNumbers ItemSerialNumber in foreground
								invoked.PrmCompany			= Company
								invoked.PrmLocation			= InventoryLocation
								invoked.PrmItem				= Item
								invoked.PrmSelectId			= PrmSelectId
								initialize invoked.PrmStockOnHandDetail
						else
						if (LotTracked = "R"
						or  BinTracked
						or  TrackedInAlternateUnitsOfMeasure)

							invoke FreezeStockOnHandDetail StockOnHandDetail in foreground
								invoked.PrmCompany				= Company
								invoked.PrmSelectId				= PrmSelectId
								invoked.PrmLocation				= InventoryLocation
								invoked.PrmItem					= Item
								initialize invoked.PrmBinGroup
								initialize invoked.PrmBin
								invoked.PrmSkipConstraints		= true
						else

							initialize LocalCreateFreezeErrorMessage
							invoke Create PhysicalInventoryFreezeLineWork
								resume on error
									LocalCreateFreezeErrorMessage	= error message
								invoked.InventoryCompany					= PrmCompany
								invoked.PhysicalInventorySelect				= PrmSelectId
								invoked.InventoryLocation					= InventoryLocation
								initialize invoked.BinGroup
								initialize invoked.Bin
								invoked.Item								= Item
								if (HasItemLocationStockUOM)
									invoked.UnitOfMeasure					= ItemLocationStockUOM
									invoked.FreezeQuantity					= StockOnHandQuantityInLocationStockUOM
								else
									invoked.UnitOfMeasure					= Item.StockUOM
									invoked.FreezeQuantity					= StockOnHandQuantity
								initialize invoked.EnteredUOM
								initialize invoked.CountQuantity
								initialize invoked.UnitCost
								invoked.SecondaryQuantity					= SecondaryQuantity
								initialize invoked.SecondaryCountQuantity
								invoked.SecondaryUOM						= Item.SecondaryUOM
								invoked.SecondaryUOMMultiplier				= Item.SecondaryUOMConversion
								initialize invoked.InventoryReasonCode
								invoked.MovementClassX						= MovementClass
								initialize invoked.CountEntered
								invoked.OperatorID							= actor
								initialize invoked.ItemLot
								initialize invoked.Sublot
								initialize invoked.ItemSerialNumber
								invoked.ItemLocation						= ItemLocation




		FreezeItemsForLocation is a Set Action
			restricted
			completion message is "CreationOfItemLocationFreezeRecordsForLocation<PrmLocation>IsComplete.FreezeRecordsCreated:<LocalCreateItemLocationFreezeCount>"
			Parameters
				PrmCompany				is an InventoryCompany
				PrmLocation				is an InventoryLocation
				PrmSelectId				is a PhysicalInventorySelect

			Parameter Rules
				PrmCompany
					required

				PrmLocation
					required

				PrmSelectId
					required

   			Local Fields
   				LocalSkipForItemLocationFreeze			is Boolean
   				LocalSelectItemForFreeze				is Boolean
				LocalReceiptUnitCostEntered				is Boolean
				LocalItemMatchesArrayItem				is Boolean
				LocalInventoryClassMatchesArrayClass	is Boolean
				LocalSkipForMovementClass				is Boolean
				LocalFreezeRecordCount					is Numeric size 9
				LocalFreezeClassXRecordCount			is Numeric size 9
				LocalFreezeClass1RecordCount			is Numeric size 9
				LocalFreezeClass2RecordCount			is Numeric size 9
				LocalFreezeClass3RecordCount			is Numeric size 9
   				LocalCreateItemLocationFreezeCount		is Numeric size 9
   				LocalCreateFreezeErrorMessage			is Alpha size 100

			Instance Selection
				where (Company				= PrmCompany
				and    InventoryLocation	= PrmLocation)

			Sort Order
				Company
				InventoryLocation

			Action Rules
				Company Set Rules
					Entrance Rules

						initialize LocalCreateItemLocationFreezeCount
						initialize LocalFreezeRecordCount
						initialize LocalFreezeClassXRecordCount
						initialize LocalFreezeClass1RecordCount
						initialize LocalFreezeClass2RecordCount
						initialize LocalFreezeClass3RecordCount

				Instance Rules
					LocalCycleCount = PrmSelectId.CycleCount



					if ((PrmSelectId.NumberOfItems entered
					and  LocalFreezeRecordCount		< PrmSelectId.NumberOfItems)
					or  !PrmSelectId.NumberOfItems entered)


						if (((PrmSelectId.NumberOfItemsClassX entered
						and   LocalFreezeClassXRecordCount		< PrmSelectId.NumberOfItemsClassX)
						or   !PrmSelectId.NumberOfItemsClassX entered)
						or  ((PrmSelectId.NumberOfItemsClass1 entered
						and   LocalFreezeClass1RecordCount		< PrmSelectId.NumberOfItemsClass1)
						or   !PrmSelectId.NumberOfItemsClass1 entered)
						or  ((PrmSelectId.NumberOfItemsClass2 entered
						and   LocalFreezeClass2RecordCount		< PrmSelectId.NumberOfItemsClass2)
						or   !PrmSelectId.NumberOfItemsClass2 entered)
						or  ((PrmSelectId.NumberOfItemsClass3 entered
						and   LocalFreezeClass3RecordCount		< PrmSelectId.NumberOfItemsClass3)
						or   !PrmSelectId.NumberOfItemsClass3 entered))


							initialize LocalSkipForItemLocationFreeze
							initialize LocalSkipForMovementClass

							if (PrmSelectId.ConsignmentItemOption.NoConsignmentItems
							and Consignment)

								LocalSkipForItemLocationFreeze	= true
							else
							if (PrmSelectId.ConsignmentItemOption.OnlyConsignmentItems
							and !Consignment)

								LocalSkipForItemLocationFreeze	= true
							else
							if (FrozenForPhysicalInventory)

								LocalSkipForItemLocationFreeze	= true
							else
							if (!InventoryTracked)

								LocalSkipForItemLocationFreeze	= true
							else
							if (!Active
							and StockOnHandQuantity					<= 0)

								LocalSkipForItemLocationFreeze	= true
							else
							if (!PrmSelectId.FreezeZeroUnitCost
							and  Company.CostingMethod.AverageCosting
							and !AverageCost entered)

								LocalSkipForItemLocationFreeze = true
							else
							if (!PrmSelectId.FreezeZeroUnitCost
							and  Company.CostingMethod.StandardCosting
							and !StandardCost entered)

								LocalSkipForItemLocationFreeze = true
							else
								initialize LocalReceiptUnitCostEntered
								for each UnusedInventoryCostHistoriesRel
									if (each.UnitCost	entered)
										LocalReceiptUnitCostEntered = true
										end for each
								if (!PrmSelectId.FreezeZeroUnitCost
								and (Company.CostingMethod.FirstInFirstOut
								or   Company.CostingMethod.LastInFirstOut)
								and !LastReceivedCost entered
								and !LocalReceiptUnitCostEntered)

									LocalSkipForItemLocationFreeze = true
								else
								if (Item.CatchWeightCode.NotCatchWeight
								and !PrmSelectId.FreezeZeroStockOnHand
								and !StockOnHandQuantity	entered)

									LocalSkipForItemLocationFreeze	= true
								else
								if ((Item.CatchWeightCode.AllTransactionsRequireBoth
								or   Item.CatchWeightCode.IssueRequiresBoth
								or   Item.CatchWeightCode.ReceiptRequiresBoth)
								and !PrmSelectId.FreezeZeroStockOnHand
								and !StockOnHandQuantity	entered
								and !SecondaryQuantity entered)

									LocalSkipForItemLocationFreeze	= true
								else

									initialize LocalItemMatchesArrayItem
									for each PrmSelectId.PhysicalInventoryItemArray.AdditionalInventoryItem
										if (!each.Item	entered)
											end for each
										if (Item		= each.Item)
											LocalItemMatchesArrayItem = true
											end for each

									if (PrmSelectId.PhysicalInventoryItemArray.AdditionalInventoryItem[1].Item entered
									and LocalItemMatchesArrayItem)

										LocalSkipForItemLocationFreeze = true
									else
									if (PrmSelectId.PhysicalInventoryMajorMinorClassArray.InventoryMajorMinorClass.MajorInventoryClass[1] entered
									or  PrmSelectId.IsLogicInformationEntered)
										initialize LocalInventoryClassMatchesArrayClass
										for each PrmSelectId.PhysicalInventoryMajorMinorClassArray.InventoryMajorMinorClass
											if (!Item.MajorInventoryClass entered)
												end for each
											if (!each.MajorInventoryClass entered)
												end for each
											if (Item.MajorInventoryClass		= each.MajorInventoryClass)
												if (!each.MinorInventoryClass entered)
													LocalInventoryClassMatchesArrayClass = true
													end for each
												else
												if (Item.MinorInventoryClass	= each.MinorInventoryClass)
													LocalInventoryClassMatchesArrayClass = true
													end for each
										if (PrmSelectId.PhysicalInventoryMajorMinorClassArray.InventoryMajorMinorClass.MajorInventoryClass[1] entered
										and !LocalInventoryClassMatchesArrayClass)

											LocalSkipForItemLocationFreeze = true
										else
										if (PrmSelectId.TransactionCount entered
										and TransactionCount					< PrmSelectId.TransactionCount)

											LocalSkipForItemLocationFreeze	= true
										else
										if (PrmSelectId.CountAccuracy entered
										and CountAccuracy						>= PrmSelectId.CountAccuracy)

											LocalSkipForItemLocationFreeze	= true
										else
										if (PrmSelectId.CycleDays entered
										and ValidForCycleDaysChecking
										and DerivedNumberOfDaysInCurrentPeriod  < PrmSelectId.CycleDays)

											LocalSkipForItemLocationFreeze	= true
										if (PrmSelectId.IncludeAvailbilityLessThanZero		// the "Include" part is a misnomer in that this field really means select only items with availability less than zero. It is a field that is meant to reduce the number of items selected for freezing.
										and AvailableQuantity					>= 0)

											LocalSkipForItemLocationFreeze	= true
										else
										if (PrmSelectId.IncludeNegativeStockOnHand			// the "Include" part is a misnomer in that this field really means select only items with negative stock-on-hand. It is a field that is meant to reduce the number of items selected for freezing.
										and StockOnHandQuantity					>= 0)

											LocalSkipForItemLocationFreeze	= true





										if (!LocalSkipForItemLocationFreeze)
											if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass
											or  PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass
											or  PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass
											or  PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass)
												initialize LocalSelectItemForFreeze
												if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass)
													if (!MovementClass.MovementClass1)
														LocalSelectItemForFreeze	= false
													else
														LocalSelectItemForFreeze	= true
												if (!LocalSelectItemForFreeze)
													if (PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass)
														if (!MovementClass.MovementClass2)
															LocalSelectItemForFreeze	= false
														else
															LocalSelectItemForFreeze	= true
												if (!LocalSelectItemForFreeze)
													if (PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass)
														if (!MovementClass.MovementClass3)
															LocalSelectItemForFreeze	= false
														else
															LocalSelectItemForFreeze	= true
												if (!LocalSelectItemForFreeze)
													if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass)
														if (!SelectForSpecialCycleCount)
															LocalSelectItemForFreeze	= false
														else
															LocalSelectItemForFreeze	= true
											else
												LocalSelectItemForFreeze	= true

											if (!LocalSelectItemForFreeze)
												LocalSkipForItemLocationFreeze = true

										if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass
										and SelectForSpecialCycleCount)
											LocalSkipForMovementClass = true




										if (!LocalSkipForItemLocationFreeze)
											if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass
											and SelectForSpecialCycleCount
											and PrmSelectId.AccuracyClassX entered
											and CountAccuracy						>= PrmSelectId.AccuracyClassX)

												LocalSkipForItemLocationFreeze = true
											else

											if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass
											and SelectForSpecialCycleCount
											and PrmSelectId.CycleDaysClassX entered
											and ValidForCycleDaysChecking
											and DerivedNumberOfDaysInCurrentPeriod  < PrmSelectId.CycleDaysClassX)

												LocalSkipForItemLocationFreeze	= true
											else
											if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass
											and SelectForSpecialCycleCount
											and PrmSelectId.NumberOfItemsClassX entered
											and LocalFreezeClassXRecordCount		>= PrmSelectId.NumberOfItemsClassX)

												LocalSkipForItemLocationFreeze	= true
											else



											if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass
											and MovementClass.MovementClass1
											and PrmSelectId.AccuracyClass1 entered
											and CountAccuracy						>= PrmSelectId.AccuracyClass1)

												LocalSkipForItemLocationFreeze = true
											else
											if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass
											and MovementClass.MovementClass1
											and PrmSelectId.CycleDaysClass1 entered
											and ValidForCycleDaysChecking
											and DerivedNumberOfDaysInCurrentPeriod  < PrmSelectId.CycleDaysClass1)

												LocalSkipForItemLocationFreeze	= true
											else
											if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass
											and MovementClass.MovementClass1
											and not LocalSkipForMovementClass
											and PrmSelectId.NumberOfItemsClass1 entered
											and LocalFreezeClass1RecordCount		>= PrmSelectId.NumberOfItemsClass1)

												LocalSkipForItemLocationFreeze = true
											else




											if (PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass
											and MovementClass.MovementClass2
											and PrmSelectId.AccuracyClass2 entered
											and CountAccuracy						>= PrmSelectId.AccuracyClass2)

												LocalSkipForItemLocationFreeze = true
											else
											if (PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass
											and MovementClass.MovementClass2
											and PrmSelectId.CycleDaysClass2 entered
											and ValidForCycleDaysChecking
											and DerivedNumberOfDaysInCurrentPeriod  < PrmSelectId.CycleDaysClass2)

												LocalSkipForItemLocationFreeze	= true
											else

											if (PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass
											and MovementClass.MovementClass2
											and not LocalSkipForMovementClass
											and PrmSelectId.NumberOfItemsClass2 entered
											and LocalFreezeClass2RecordCount		>= PrmSelectId.NumberOfItemsClass2)

												LocalSkipForItemLocationFreeze = true
											else



											if (PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass
											and MovementClass.MovementClass3
											and PrmSelectId.AccuracyClass3 entered
											and CountAccuracy						>= PrmSelectId.AccuracyClass3)

												LocalSkipForItemLocationFreeze = true
											else
											if (PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass
											and MovementClass.MovementClass3
											and PrmSelectId.CycleDaysClass3 entered
											and ValidForCycleDaysChecking
											and DerivedNumberOfDaysInCurrentPeriod  < PrmSelectId.CycleDaysClass3)

												LocalSkipForItemLocationFreeze	= true
											else
											if (PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass
											and MovementClass.MovementClass3
											and not LocalSkipForMovementClass
											and PrmSelectId.NumberOfItemsClass3 entered
											and LocalFreezeClass3RecordCount		>= PrmSelectId.NumberOfItemsClass3)

												LocalSkipForItemLocationFreeze = true




							if (!LocalSkipForItemLocationFreeze)

								LocalFreezeRecordCount									+= 1
								if (PrmSelectId.SelectItemsFromClassX.CountItemsInThisClass
								and SelectForSpecialCycleCount)
									LocalFreezeClassXRecordCount						+= 1

								else
								if (PrmSelectId.SelectItemsFromClass1.CountItemsInThisClass
								and MovementClass.MovementClass1)
									LocalFreezeClass1RecordCount						+= 1

								else
								if (PrmSelectId.SelectItemsFromClass2.CountItemsInThisClass
								and MovementClass.MovementClass2)
									LocalFreezeClass2RecordCount						+= 1

								else
								if (PrmSelectId.SelectItemsFromClass3.CountItemsInThisClass
								and MovementClass.MovementClass3)
									LocalFreezeClass3RecordCount						+= 1


								if (SerialTracked = "R")

									invoke FreezeSerialNumbers ItemSerialNumber in foreground
										invoked.PrmCompany			= Company
										invoked.PrmSelectId			= PrmSelectId
										invoked.PrmLocation			= InventoryLocation
										invoked.PrmItem				= Item
										initialize invoked.PrmStockOnHandDetail
										invoked.PrmItemLocation		= ItemLocation
								else
								if (LotTracked = "R"
								or  BinTracked
								or  TrackedInAlternateUnitsOfMeasure)

									invoke FreezeStockOnHandDetail StockOnHandDetail in foreground
										invoked.PrmCompany				= Company
										invoked.PrmSelectId				= PrmSelectId
										invoked.PrmLocation				= InventoryLocation
										invoked.PrmItem					= Item
										initialize invoked.PrmBinGroup
										initialize invoked.PrmBin
										invoked.PrmItemLocation			= ItemLocation
										invoked.PrmSkipConstraints		= true
								else
									initialize LocalCreateFreezeErrorMessage

									invoke Create PhysicalInventoryFreezeLineWork
										resume on error
											LocalCreateFreezeErrorMessage	= error message
											display "ItemLocation_OnError:<LocalCreateFreezeErrorMessage>"
										invoked.InventoryCompany					= PrmCompany
										invoked.PhysicalInventorySelect				= PrmSelectId
										invoked.InventoryLocation					= InventoryLocation
										initialize invoked.BinGroup
										initialize invoked.Bin
										invoked.Item								= Item
										if (HasItemLocationStockUOM)
											invoked.UnitOfMeasure					= ItemLocationStockUOM
											invoked.FreezeQuantity					= StockOnHandQuantityInLocationStockUOM
										else
											invoked.UnitOfMeasure					= Item.StockUOM
											invoked.FreezeQuantity					= StockOnHandQuantity
										initialize invoked.EnteredUOM
										initialize invoked.CountQuantity
										initialize invoked.UnitCost
										invoked.SecondaryQuantity					= SecondaryQuantity
										initialize invoked.SecondaryCountQuantity
										invoked.SecondaryUOM						= Item.SecondaryUOM
										invoked.SecondaryUOMMultiplier				= Item.SecondaryUOMConversion
										initialize invoked.InventoryReasonCode
										invoked.MovementClassX						= MovementClass
										initialize invoked.CountEntered
										invoked.OperatorID							= actor
										initialize invoked.ItemLot
										initialize invoked.Sublot
										initialize invoked.ItemSerialNumber
										invoked.ItemLocation						= ItemLocation

		UpdateStandardCostValuation is a Set Action
			Parameters
				PrmCompany				is an InventoryCompany
					default label is "Company"
				PrmLocation				is an InventoryLocation
					default label is "InventoryLocation"
				PrmReportGroup			is an InventoryReportGroup
					default label is "ReportGroup"
				PrmMajorInventoryClass	is a MajorInventoryClass
					default label is "MajorInventoryClass"
				PrmMinorInventoryClass	is a MinorInventoryClass
					default label is "MinorInventoryClass"
				PrmTransactionDate 		is TimeStamp
					default label is "TransactionDate"
				PrmPostingDate			is Date
					default label is "PostingDate"

			Parameter Rules
				PrmCompany
					required
						"CompanyIsRequired"
					constraint (PrmCompany.CostingMethod.StandardCosting)
						"Company<PrmCompany>NotSetupForStandardCosting"
				PrmReportGroup
					if (PrmLocation entered)
						cannot be entered
							"CannotEnterBothReportGroupAndLocation"
					LocalCompany = PrmCompany
					LocalInventoryReportGroup = PrmReportGroup

				PrmTransactionDate
					initial value is current timestamp
					required

					LocalTransactionDate				= PrmTransactionDate
					LocalTimeStampInGMT.Value 			= PrmTransactionDate
					LocalDateForValidation 				= LocalTimeStampInGMT.CorporateDate
					LocalTransactionDateValidation		= true
					include ValidateDate

				PrmPostingDate
					initial value is current date
					required

					LocalDateForValidation				= PrmPostingDate
					initialize LocalTransactionDateValidation
					LocalGeneralLedgerDateValidation	= true
					include ValidateDate
				
			Local Fields
				LocalActor 							is an Actor

			Sort Order
				Company
				InventoryLocation
				Item

			Instance Selection
				where (Company = PrmCompany
				and   ((PrmLocation entered
				and	    InventoryLocation = PrmLocation)
				or      PrmLocation not entered)
				and  ((PrmReportGroup not entered)
				or 	  (PrmReportGroup entered
				and	   HasInvReportGroupLocation))
				and    (PrmMajorInventoryClass not entered
				or      Item.MajorInventoryClass = PrmMajorInventoryClass)
				and    (PrmMinorInventoryClass not entered
				or      Item.MinorInventoryClass = PrmMinorInventoryClass)
				and    IsInventoryLocation
				and    InventoryTracked
				and    DifferentFutureStandardCost)

			Action Rules
				Set Rules
					Entrance Rules
						LocalActor = actor

					Exit Rules
						send notification
							to LocalActor
							description is "UpdateStandardCostValuationCompletedForCompany<PrmCompany>"
							detail is "UpdateStandardCostValuationCompletedForCompany<PrmCompany>"

				Instance Rules
					if (StockOnHandQuantity entered)
						invoke Unreleased.Create InventoryTransaction
							assign result to NewInventoryTransaction
							invoked.Company											= Company
							invoked.InventoryLocation								= InventoryLocation
							invoked.InventoryTransaction.InventoryDocumentType		= InventoryDocumentType.StandardCostValuationUpdate
							invoked.TransactionDate									= PrmTransactionDate
							invoked.GeneralLedgerDate								= PrmPostingDate

						LocalInventoryTransaction           						= NewInventoryTransaction.InventoryTransaction
						LocalInventoryTransactionSystemCode							= "IC"

						invoke Unreleased.Create InventoryTransactionLine
							assign result to NewInventoryTransactionLine
							invoked.Company											= Company
							invoked.InventoryLocation								= InventoryLocation
							invoked.TransactionSystemCode							= "IC"
							invoked.InventoryTransaction							= LocalInventoryTransaction
							invoked.TransactionCounter								= TransactionCounter + 1
							invoked.Item											= Item
							invoked.Quantity                             			= StockOnHandQuantity
							invoked.TransactionUOM									= Item.StockUOM
							invoked.StockUOM										= Item.StockUOM
							invoked.UnitCost										= FutureStandardCost - StandardCost
							invoked.FromCurrency									= Company.Currency
							invoked.ToCurrency										= Company.Currency
							invoked.InventoryAccount								= GeneralLedgerCategory.InventoryAccount
							invoked.OffsetAccount									= GeneralLedgerCategory.CostVarianceAccount
							invoked.SkipInactiveEdit                            	= true

						LocalInventoryTransactionLine								= NewInventoryTransactionLine.InventoryTransactionLine

						invoke Create InventoryTransactionLineDistribution
							invoked.Company											= Company
							invoked.InventoryLocation								= InventoryLocation
							invoked.InventoryTransaction							= LocalInventoryTransaction
							invoked.TransactionSystemCode							= "IC"
							invoked.InventoryTransactionLine						= LocalInventoryTransactionLine
							invoked.System											= "IC"
							invoked.CurrencyCode           							= Company.Currency            			
							invoked.PostingType										= "I1"
							invoked.GLFinanceCodeBlock								= GeneralLedgerCategory.InventoryAccount
							invoked.CurrencyCode									= Company.AccountingEntity.FunctionalCurrency
							invoked.GLTransactionAmount								= StockOnHandQuantity * ChangeInStandardCost
							if (not GeneralLedgerCategory.InventoryAccount.GeneralLedgerChartAccount.AllowUnits.No)
								invoked.UnitsAmount									= StockOnHandQuantity
							invoked.TransactionDate									= NewInventoryTransactionLine.TransactionDate
							invoked.PostingDate				    					= NewInventoryTransactionLine.GeneralLedgerDate
							invoked.GeneralLedgerEvent								= "CA"     
							invoked.DocumentNumber									= LocalInventoryTransaction
							initialize invoked.AddOnCharge
							initialize invoked.Status

						invoke Create InventoryTransactionLineDistribution
							invoked.Company											= Company
							invoked.InventoryLocation								= InventoryLocation
							invoked.InventoryTransaction							= LocalInventoryTransaction
							invoked.TransactionSystemCode							= "IC"
							invoked.InventoryTransactionLine						= LocalInventoryTransactionLine
							invoked.System											= "IC"
							invoked.CurrencyCode           							= Company.Currency            			
							invoked.PostingType										= "O1"
							invoked.GLFinanceCodeBlock								= GeneralLedgerCategory.CostVarianceAccount
							invoked.CurrencyCode									= Company.AccountingEntity.FunctionalCurrency
							invoked.GLTransactionAmount								= StockOnHandQuantity * ChangeInStandardCost * -1
							if (not GeneralLedgerCategory.CostVarianceAccount.GeneralLedgerChartAccount.AllowUnits.No)
								invoked.UnitsAmount									= StockOnHandQuantity * -1
							invoked.TransactionDate									= NewInventoryTransactionLine.TransactionDate
							invoked.PostingDate				    					= NewInventoryTransactionLine.GeneralLedgerDate
							invoked.GeneralLedgerEvent								= "CA"     
							invoked.DocumentNumber									= LocalInventoryTransaction
							initialize invoked.AddOnCharge
							initialize invoked.Status

						LocalInventoryLocation = InventoryLocation
						invoke FinalRelease StandardCostValuationUpdateTransactionRel
							invoked.PrmSkipDistributionFromPO	= true

					StandardCost = FutureStandardCost
					initialize FutureStandardCost

		FixOnOrderQuantityBasedOnOpenPurchaseOrders is a Set Action
			restricted
			default label is "FixOnOrderQuantityBasedOnOpenSupplyOrders"
			Parameters
				PrmCompany		is an InventoryCompany
				PrmLocation		is an InventoryLocation
			Parameter Rules
				PrmCompany
					required
						"CompanyIsRequired"
				PrmLocation
					required
						"LocationIsRequired"
			Sort Order
				Company
				InventoryLocation
				Item

			Instance Selection
				where (Company = PrmCompany
				and    InventoryLocation = PrmLocation
				and    HasOnOrderQuantityMismatch)

			Action Rules

				Instance Rules
					for each WarehouseDemandLinesPOSupplyRel
						LocalDemandDocumentNumber	= each.WarehouseDemand.DemandDocument
						LocalDemandLine				= each.WarehouseDemandLine.LineNumber
						if (PurchaseOrderLineForSupplyDemandRel.Closed.Yes
						and PurchaseOrderLineForSupplyDemandRel.CancelledStatus)
							invoke Delete each.WarehouseDemandLine

					for each OpenPurchaseOrderLinesRel
						invoke ValidateSupplyTypeDemand each.PurchaseOrderLine

					for each WarehouseDemandLinesRQSupplyRel
						LocalDemandDocumentNumber	= each.WarehouseDemand.DemandDocument
						LocalDemandLine				= each.WarehouseDemandLine.LineNumber
						if (!RequisitionLineForSupplyDemandRel exists)
							invoke Delete each.WarehouseDemandLine
						else
							if (RequisitionLineForSupplyDemandRel.Closed)
								invoke Delete each.WarehouseDemandLine  

					for each OpenRequisitionDTorITLinesRel
						invoke ValidateSupplyTypeDemand each.RequisitionLine


					OnOrderQuantity = (DerivedRemainingPOQuantityStock + DerivedToShipRQQuantityStock + DerivedToMakeWOQuantityStock)

		FastUpdate is an Update Action
			restricted
			bypass field rules

		LocationItemUOMUpdate is an Update Action
			restricted
			bypass field rules
			Action Rules
				include GetTransientForLocationStockUOM

		ItemLocationAuditPurge is a Set Action
			restricted
			Parameters
				PrmCompany								is an InventoryCompany
				PrmInventoryLocation					is an InventoryLocation
			Instance Selection
				include deleted records
				where (Company 	 			= PrmCompany
				and    InventoryLocation	= PrmInventoryLocation)
			Action Rules
				Instance Rules
					invoke Purge ItemLocationAuditPurgeRel

		TriggerInvCountNativeLPLBOD is an Instance Action
			restricted
			default label is untranslatable
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationInvCountRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "InventoryCount"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "ItemLocation"
					invoked.PrmFinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
					invoked.PrmCompany					= Company
					invoked.PrmMainUserTemplate 		= "IONSyncInventoryCount_ItemLocation_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationInvCountRel.NativeLPLBODTrigger
				if(Company.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "InventoryCount"						
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.Direction				= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= Item
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup  = DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Reference1				= Company
							invoked.Reference2				= InventoryLocation
							invoked.Reference3				= Item
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendInvCountLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID					            = DerivedBODID
							invoked.BODXML								= SyncInventoryCountBODXML
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status								= 3
							invoked.CloseDate							= system current timestamp
							invoked.BODID					            = DerivedBODID
							invoked.BODXML								= SyncInventoryCountBODXML
					
		SendInvCountLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is SyncInventoryCountBODXML
					bod type is "Sync.InventoryCount"
					document id is  DerivedDocumentID
					variation id is DerivedBODVariationID
					accounting entity is DerivedBODAccountingEntity
					location is InventoryLocation

		IncludeInRequisition is an Instance Action
			restricted
			Action Rules
				if (RequisitionLineRel exists)
					invoke Unreleased.Update first RequisitionLineRel
						invoked.Quantity		+= 1
				else
					invoke Create RequisitionLine
						invoked.Company			= Requisition.Company
						invoked.Requisition		= Requisition
						invoked.Item			= Item
						invoked.Quantity		= 1
						invoked.EnteredUOM		= Item.StockUOM

		CreateConsolidatedItemMasterSet is a Set Action 
			restricted 
			Parameters 
				PrmContractGroup	is a ContractGroup 

			Instance Selection 
				where (PrmContractGroup = Item.ItemGroup
				and    Item.Manufacturer entered
				and    Item.ManufacturerNumber entered 
				and    Item.Active
				and    Active)

			Sort Order 
				Item.ItemGroup
				Item 
				ItemLocation 

			Action Rules
				Item.ItemGroup Set Rules

					Exit Rules		

						invoke CreateConsolidatedItemMasterSet ContractLine 
							invoked.PrmContractGroup	= PrmContractGroup	 

				Instance Rules 
					invoke CreateAndUpdateConsolidatedItemMaster

		CreateAndUpdateConsolidatedItemMaster is an Instance Action 
			restricted 
			Action Rules 
		
		ParLocationUtilization is a Set Action
			restricted
			Parameters
				PrmInventoryControlResult			is an InventoryControlResult
				PrmCompany							is an InventoryCompany
					default label is "Company"
				PrmReportGroup						is an InventoryReportGroup
					default label is "ReportGroup"
				PrmParLocation						is an InventoryLocation
					default label is "ParLocation"
				PrmReplenishDays					is Decimal size 3.1
					default label is "ReplenishDays"
				PrmDateRange						is a DateRange
					default label is "DateRange"
				PrmMinimumSamples					is Numeric size 2
					default label is "MinimumSamples"
				PrmSortOption						is Numeric size 1
					default label is "SortOption"
					States
						ItemNumber             		 	value is 1
		                AveragegDailyUsageAscending  	value is 2
		                AveragegDailyUsageDescending 	value is 3
		                ItemDescription         		value is 4
		                ShelfLocation           		value is 5
				PrmPrintOption							is Boolean
					default label is "PrintOption"
				PrmUpdateOption						is Boolean
					default label is "UpdateOption"
				PrmParLocationUtilizationReportGroup	is a ReportDistributionGroup
					default label is "ParLocationUtilizationReportGroup"
				
			Sort Order
				Company
				InventoryLocation
				Item
			
			Instance Selection
				where  (Company = PrmCompany
				and	  ((PrmParLocation not entered and PrmReportGroup not entered and CartParLocation)
				or     (PrmParLocation entered and InventoryLocation = PrmParLocation)
				or	   (PrmReportGroup entered and HasInvReportGroupLocation)))

			
			Local Fields

				NewParLocationUtilizationHeader		is an ParLocationUtilizationHeader view
				LocalActor							is an Actor
				LocalAllParLocations				is Boolean
				
			Parameter Rules
				PrmReportGroup
					if (PrmParLocation entered)
						cannot be entered
							"CannotEnterBothReportGroupAndLocation"
							
					LocalCompany 				= PrmCompany
					LocalInventoryReportGroup 	= PrmReportGroup

			Action Rules
				Empty Set Rules
					LocalInventoryControlResult		= PrmInventoryControlResult				
					LocalActor						= actor
						
					send notification
						to LocalActor
						description is "<ParLocationUtilizationNoDataToProcessMessage>"
						priority is medium
						detail is "<ParLocationUtilizationNoDataToProcessMessage>"
				
				Company Set Rules
							
				InventoryLocation Set Rules
					Entrance Rules
						LocalInventoryLocation			= InventoryLocation
						
						invoke Create ParLocationUtilizationHeader
							assign result to NewParLocationUtilizationHeader
							invoked.FinanceEnterpriseGroup									= actor.context.FinanceEnterpriseGroup
							invoked.InventoryControlResult									= PrmInventoryControlResult	
							invoked.InventoryLocation										= InventoryLocation
				
				Set Rules
					Exit Rules
						if (PrmReportGroup not entered and PrmParLocation not entered)
							LocalAllParLocations = true

						invoke ParLocationUtilization RequisitionTransaction
							invoked.PrmCompany								= PrmCompany
							invoked.PrmReportGroup							= PrmReportGroup
							invoked.PrmParLocation							= PrmParLocation
							invoked.PrmReplenishDays						= PrmReplenishDays
							invoked.PrmDateRange							= PrmDateRange
							invoked.PrmInventoryControlResult				= PrmInventoryControlResult	
							invoked.PrmParLocationUtilizationHeader			= NewParLocationUtilizationHeader.ParLocationUtilizationHeader
							invoked.PrmUpdateOption							= PrmUpdateOption
							invoked.PrmPrintOption							= PrmPrintOption
							invoked.PrmParLocationUtilizationReportGroup	= PrmParLocationUtilizationReportGroup
							invoked.PrmAllParLocations						= LocalAllParLocations
						
				Instance Rules
					invoke Create ParLocationUtilizationLine
						invoked.FinanceEnterpriseGroup									= actor.context.FinanceEnterpriseGroup
						invoked.InventoryControlResult									= PrmInventoryControlResult	
						invoked.ParLocationUtilizationHeader							= NewParLocationUtilizationHeader.ParLocationUtilizationHeader
						invoked.Item													= Item
						invoked.Description												= Item.Description
						invoked.ShelfLocation											= PreferredBin
						invoked.UOM														= Item.StockUOM
						invoked.ParLevel												= ReorderPoint
						invoked.MinimumOrderQuantity									= MinimumOrderQuantity

		SendItemMasterBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod 
					bod is ItemMasterBOD
					bod type is "Sync.ItemMaster"
					accounting entity is DerivedCrossAccountingEntity
					document id is DerivedBODDocumentID
					variation id is	BODVariationID
						
		TriggerItemMasterNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "ItemMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "Item"
					invoked.PrmFinanceEnterpriseGroup	= Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup
					invoked.PrmBusinessGroup			= Item.ItemGroup
					invoked.PrmMainUserTemplate			= "IONSyncItemMaster_ItemLocation_Header_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalNativeBODTrigger  = true
				if(Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ItemMaster"					
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
							invoked.Reference1				= Item.ItemGroup
							invoked.Reference2				= Item
							invoked.Reference3				= InventoryLocation
							invoked.Reference4				= "ItemLocation"
							invoked.Reference5				= Company
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
							invoked.Reference1				= Item.ItemGroup
							invoked.Reference2				= Item
							invoked.Reference3				= InventoryLocation
							invoked.Reference4				= "ItemLocation"
							invoked.Reference5				= Company
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendItemMasterBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= ItemMasterBOD
							invoked.BODID								= DerivedBODFormattedId	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= ItemMasterBOD
							invoked.BODID									= DerivedBODFormattedId
		

		MobileSupplyChainConfigureKanbanLocationItems is a Set Action
			restricted
			run in background
			Parameters
				PrmInventoryCompany			is an InventoryCompany
				PrmInventoryLocation		is an InventoryLocation
				PrmUseKanban				is Boolean
				PrmKanbanNumberOfBins		is Unsigned Decimal 3.0
			Instance Selection
				where (Company				= PrmInventoryCompany
				and	InventoryLocation		= PrmInventoryLocation)
            Local Fields
				LocalErrorMessage			is Alpha size up to 300
			Action Rules

				Instance Rules
					initialize LocalErrorMessage
					invoke Update ItemLocation
						resume on error
							LocalErrorMessage = error message
						invoked.UseKanban			= PrmUseKanban
						invoked.KanbanNumberOfBins	= PrmKanbanNumberOfBins

					if (LocalErrorMessage entered
					or HasKanbanItemNotes)
						invoke FastUpdate ItemLocation
							if (LocalErrorMessage entered)
								invoked.KanbanItemNotes = MSCMConfigureKanbanLocationsMessage + LocalErrorMessage
							else
								initialize invoked.KanbanItemNotes
		PrintLabel is an Instance Action
			valid when (PrintLabelEnabled)			
			Parameters
				PrmMobileSupplyChainPrinter							is a MobileSupplyChainPrinter
					default label is "MobileSupplyChainPrinter"
				PrmNumberOfCopies									is Unsigned Decimal 2.0
					default label is "NumberOfCopies"
				PrmMobileSupplyChainConfiguration					is a MobileSupplyChainConfiguration
					default label is "MobileSupplyChainConfiguration"
				PrmLabelTemplate  									is a LabelTemplate
					default label is "LabelTemplate"
				PrmTransactionType									is a MobileSupplyChainPrintingTransactionType
					default label is "LabelTransactionType"
			Parameter Rules
				PrmMobileSupplyChainPrinter	
					initial value is MobileSupplyChainLocationRel.DerivedDefaultMobileSupplyChainLabelPrinter
					default to MobileSupplyChainLocationRel.DerivedDefaultMobileSupplyChainLabelPrinter		
					required
					constraint (PrmMobileSupplyChainPrinter.PrinterType.Label)
						"PrinterShouldOnlyBeLabelPrinter"
				PrmNumberOfCopies
					initial value is 1
					default to 1
					required
				PrmLabelTemplate
					initial value is DerivedDefaultLabelTemplate
					default to DerivedDefaultLabelTemplate
					required
					if (IsInventoryLocation)
						constraint (PrmLabelTemplate.LabelType.StockItem)
							"LabelTypeShouldBeStockItem"
					else
						constraint (PrmLabelTemplate.LabelType.ParItem)
							"LabelTypeShouldBeParItem"
				PrmTransactionType
					initial value is PrmTransactionType.LabelManagement
					default to PrmTransactionType.LabelManagement					
			Action Rules					
				invoke Create MobileSupplyChainPrinterJob
		        	invoked.FinanceEnterpriseGroup          = PrmMobileSupplyChainConfiguration
		            invoked.Company 						= ItemLocation.Company
		            invoked.MobileSupplyChainPrinter 		= PrmMobileSupplyChainPrinter
                    invoked.NumberOfCopies 					= PrmNumberOfCopies
					invoked.TransactionType					= PrmTransactionType
					invoked.PrintDataFile 					= PrmLabelTemplate.TransientItemLocationBinaryDocument document for this instance					

		PrintBinLabel is an Instance Action
			valid when (PrintBinLabelEnabled)			
			Parameters
				PrmMobileSupplyChainPrinter							is a MobileSupplyChainPrinter
					default label is "MobileSupplyChainPrinter"
				PrmNumberOfCopies						is Unsigned Decimal 2.0
					default label is "NumberOfCopies"
				PrmMobileSupplyChainConfiguration		is a MobileSupplyChainConfiguration
					default label is "MobileSupplyChainConfiguration"
				PrmLabelTemplate  					is a LabelTemplate
					default label is "LabelTemplate"
				PrmTransactionType						is a MobileSupplyChainPrintingTransactionType
					default label is "LabelTransactionType"
			Parameter Rules
				PrmMobileSupplyChainPrinter	
					initial value is MobileSupplyChainLocationRel.DerivedDefaultMobileSupplyChainLabelPrinter
					default to MobileSupplyChainLocationRel.DerivedDefaultMobileSupplyChainLabelPrinter			
					required
					constraint (PrmMobileSupplyChainPrinter.PrinterType.Label)
						"PrinterShouldOnlyBeLabelPrinter"
				PrmNumberOfCopies
					initial value is 1
					default to 1
					required
				PrmLabelTemplate
					initial value is DerivedDefaultBinLabelTemplate
					default to DerivedDefaultBinLabelTemplate
					required
					constraint (PrmLabelTemplate.LabelType.ParBin)
						"LabelTypeShouldBeParBin"
				PrmTransactionType
					initial value is PrmTransactionType.LabelManagement
					default to PrmTransactionType.LabelManagement
			Action Rules					
				invoke Create MobileSupplyChainPrinterJob
		        	invoked.FinanceEnterpriseGroup          = Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup
		            invoked.Company 						= ItemLocation.Company
		            invoked.MobileSupplyChainPrinter 		= PrmMobileSupplyChainPrinter
                    invoked.NumberOfCopies 					= PrmNumberOfCopies
					invoked.TransactionType					= PrmTransactionType
					invoked.PrintDataFile 					= PrmLabelTemplate.TransientItemLocationBinaryDocument document for this instance

	Action Exit Rules

		if (ContractGroupRel.StoreConsolidatedItemAndLocation)	
			if  (ConsolidatedItemLocationRel exists
			and (ConsolidatedItemMasterFields changed
			or   FromDeleteForConsolidated = true
			or   FromCreateForConsolidated = true 
			or   first ConsolidatedItemLocationRel.ContractOrItemLocation = 2))
				invoke Update ConsolidatedItemLocationRel 
			else
			if  (ConsolidatedItemMasterRel exists
			and  ConsolidatedItemLocationRel !exists
			and  ConsolidatedItemLocationByReqLocRel !exists
			and  FromDeleteForConsolidated = false 
			and  CanUseForConsolidated)
				invoke Create ConsolidatedItemLocation 
					invoked.ContractGroup     		= Item.ItemGroup 
					invoked.ConsolidatedItemMaster	= first ConsolidatedItemMasterRel.ConsolidatedItemMaster 
					invoked.InventoryCompany		= Company 
					invoked.InventoryLocation 		= InventoryLocation	
					invoked.ContractOrItemLocation  = 1			
			else
			if  (Item.CanUseForConsolidated 
			and  CanUseForConsolidated
			and  FromDeleteForConsolidated = false
			and  ConsolidatedItemMasterRel !exists
			and  ConsolidatedItemMasterByManufacturerRel !exists)
				invoke Create ConsolidatedItemMaster 
					invoked.ContractGroup     = Item.ItemGroup
					invoked.InternalItem      = Item 
					invoked.TransientCompany  = Company 
					invoked.TransientLocation = InventoryLocation


		initialize AuditError
		initialize AuditErrMsg
		Execute = ActionThread.GetDetails
  		if (WarehouseDemandLine entered)
			Execute = WarehouseDemandLine.DerivedSetOriginatingTransaction
		if (not action type.Delete)
	 		invoke Create ItemLocationAudit
				resume on error
					AuditError  = true
					AuditErrMsg = error message
	 			invoked.Company							= Company
	 			invoked.InventoryLocation				= InventoryLocation
	 			invoked.Item							= Item
				invoked.ItemLocation					= ItemLocation
	 			invoked.AfterStockOnHandQuantity		= StockOnHandQuantity
	 			invoked.BeforeStockOnHandQuantity  		= old StockOnHandQuantity
	 			invoked.AfterAllocatedQuantity			= AllocatedQuantity
				invoked.BeforeAllocatedQuantity			= old AllocatedQuantity
				invoked.AfterSecondaryQuantity			= SecondaryQuantity
				invoked.BeforeSecondaryQuantity			= old SecondaryQuantity
				invoked.AfterUnallocatedQuantity		= UnallocatedQuantity
				invoked.BeforeUnallocatedQuantity		= old UnallocatedQuantity
				invoked.AfterInProcessQuantity			= InProcessQuantity
				invoked.BeforeInProcessQuantity			= old InProcessQuantity
				invoked.AfterBackorderedQuantity		= BackorderedQuantity
				invoked.BeforeBackorderedQuantity		= old BackorderedQuantity
				invoked.AfterInspectionHoldQuantity		= InspectionHoldQuantity
				invoked.BeforeInspectionHoldQuantity 	= old InspectionHoldQuantity
				invoked.AfterOnOrderQuantity			= OnOrderQuantity
				invoked.BeforeOnOrderQuantity			= old OnOrderQuantity
				invoked.AfterWorkInProgressQuantity		= WorkInProgressQuantity
				invoked.BeforeWorkInProgressQuantity	= old WorkInProgressQuantity
				invoked.AfterIntransitQuantity			= IntransitQuantity
				invoked.BeforeIntransitQuantity			= old IntransitQuantity
				invoked.AfterAverageStockOnHandQuantity = AverageStockOnHandQuantity
				invoked.BeforeAverageStockOnHandQuantity = old AverageStockOnHandQuantity
				invoked.AfterAverageCost				= AverageCost
				invoked.BeforeAverageCost				= old AverageCost
				invoked.AfterAverageAddOnCost			= AverageAddOnCost
				invoked.BeforeAverageAddOnCost			= old AverageAddOnCost
				invoked.AfterLastReceiptCost			= LastReceiptCost
				invoked.BeforeLastReceiptCost			= old LastReceiptCost
				invoked.AfterLastIssueCost				= LastIssueCost
				invoked.BeforeLastIssueCost				= old LastIssueCost
				if (LocalSource entered)
					invoked.RootBusinessClass 			= LocalSource
				else
					invoked.RootBusinessClass			= ActionThread.RootBusinessClass
					invoked.RootAction					= ActionThread.RootAction
					invoked.RootBusinessObjectReference	= ActionThread.RootBusObjectRef
				invoked.InvokingAction					= ActionThread.InvokingAction
				invoked.ActionContext					= ActionThread.ActionContext
				invoked.Actor							= actor
				invoked.UpdateDate						= current timestamp
				if (InventoryTransactionLine entered)
					if (InventoryTransactionLine.OriginatingTransaction entered)
						invoked.OriginatingTransaction	= InventoryTransactionLine.OriginatingTransaction
					else
						invoked.OriginatingTransaction	= reference to InventoryTransactionLine
				else
				if (WarehouseDemandLine entered)
					invoked.OriginatingTransaction      = WarehouseDemandLine.TransientOriginatingTransaction
				else
				if (PayablesInvoiceDetail entered)
					invoked.OriginatingTransaction		= reference to PayablesInvoiceDetail



			if (AuditError)
				invoke CreateError ItemLocationAudit
					resume on error
		 			invoked.Company							= Company
		 			invoked.InventoryLocation				= InventoryLocation
		 			invoked.Item							= Item
					invoked.ItemLocation					= ItemLocation
					invoked.ActionContext 					= AuditErrMsg
					invoked.Actor							= actor
					invoked.UpdateDate						= current timestamp



 		LocalFinanceEnterpriseGroup = Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup
 		LocalAccountingEntity = Company.GeneralLedgerCompany.AccountingEntity
 		LocalCompany = Company
		if (Item.ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger and (!LocalBODTrigger) and !LocalNativeBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields" and action != "UpdateIIHRecommendations" and action != "UpdateManufacturerInfo"
					and action != "UpdateFromItem" and action != "UpdateFromTransaction" and action != "UpdateQuantities" and action != "UpdateFrozenForPhysicalInventory"
					and action != "UpdateCountAccuracyForPhysicalInventory" and action != "UpdateLeadTimeFromPOReceiptLine" and action != "UpdateForCostAdjustment"
					and action != "FixAllocatedQuantity" and action != "CreateAudit" and action != "TriggerInvCountNativeLPLBOD") 
					if (action != "RecallInventoryQuery" and action != "RecallParLocationQuery" and action != "UpdatePreferredBinForItems"
						and action != "FreezeZeroStockOnHandBins" and action != "FreezeItemsInArray" and action != "FreezeItemsForLocation"
						and action != "FixOnOrderQuantityBasedOnOpenPurchaseOrders" and action != "DeleteSetAction" and action != "BODDataInitialLoadInventoryCountCriteria1")
						LocalActionCode = LocalActionCode.Update
						if (action type.Create)
							LocalActionCode = LocalActionCode.Create
						else
							if (action type.Delete)
								LocalActionCode = LocalActionCode.Delete
						increment Item.bod id.VariationID
						LocalBaseCost = Item.ItemContractLinesRel.BaseCost
						LocalTriggerFrom = "ItemLocation"
						include TriggerItemLocationServiceRules

