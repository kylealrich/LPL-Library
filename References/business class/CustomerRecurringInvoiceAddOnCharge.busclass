CustomerRecurringInvoiceAddOnCharge is a BusinessClass
    owned by bl
    prefix is BUM
    sql name is CRecurringInvoiceAddOnCharge
    classic name is BLRICMISC

    Ontology
        symbolic key is CustomerRecurringInvoiceAddOnCharge
            classic set name is BUMSET1




    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        CustomerShipTo
            classic name is SHIP-TO
		Miscellaneous	 	is a OrderEntryAddOnCharge
            classic name is MISC
        ZeroAfterUse		is Boolean
        Amount          	is an InternationalAmount
        BilledAmount    	is an InternationalAmount
        Price           	is an InternationalAmount
		Skip				is Boolean
        Frequency		    is AlphaUpper size 1
	        States
	            Weekly       value is "W"   
	            SemiMonthly  value is "S"   
	            Monthly      value is "M"
	            Quarterly    value is "Q"
	            Yearly       value is "Y"
	            UserDefined  value is "U"        										
        CycleCode       	is AlphaUpper size 3 
        StartDate
        StopDate        	is Date
		MasterLineNumber    is a RecurringInvoiceLine
		MasterSequence      is a RecurringInvoiceAddOnCharge
        TaxExemptCode
            classic name is TAX-EXEMPT-CD
        CompanyCustomer

	Local Fields
		LocalAmount				is an InternationalAmount
		RoundedValue

	Transient Fields
		TotalAmount				is an InternationalAmount
		ActionCode				is Alpha size 1
			States
				SpreadAmount	value is "S"
				
    Derived Fields
		DerivedAmountRoundTo is a ConditionalField
			type is Decimal size 18.6
			restricted
			if (CustomerRecurringInvoiceLine.Item.NumberOfDecimalsQuantity = 4)
				.0001
			else
			if (CustomerRecurringInvoiceLine.Item.NumberOfDecimalsQuantity = 3)
				.001
			else
			if (CustomerRecurringInvoiceLine.Item.NumberOfDecimalsQuantity = 2)
				.01
			else
			if (CustomerRecurringInvoiceLine.Item.NumberOfDecimalsQuantity = 1)
				.1
			else
			if (CustomerRecurringInvoiceLine.Item.NumberOfDecimalsQuantity = 0)
				1
			else
				0 

		DerivedCustomerRecurringInvoiceAddOnCharge is a DerivedField
			type is like CustomerRecurringInvoiceAddOnCharge
			return CustomerRecurringInvoiceAddOnCharge

    Conditions

        IsMasterExists
        	restricted
            when (MasterLineNumber entered)

        IsNotReady
        	restricted
            when (Amount not entered
            and   !Skip)

        IsZeroAfterUse
        	restricted
            when (ZeroAfterUse)

		IsLineExist
			restricted
			when (CustomerRecurringInvoiceLine exist)

		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)

	Relations

		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company

		RecurringBillingItemOperatorRel 
    		one-to-many relation to RecurringBillingItemOperator
    		Field Mapping uses Set3
	    		related.Company = Company
	            related.RecurringBillingItemOperator.Operator = actor
	            related.RecurringBillingItemOperator.Misc = Miscellaneous.Misc

			

    Sets

        Set2
            indexed
            Instance Selection
                where (IsMasterExists)
            Sort Order
                Company
                RecurringInvoiceParameter
                MasterLineNumber
                MasterSequence
                Customer

        Set3
            indexed
            Instance Selection
                where (IsNotReady)
            Sort Order
                Company
                Frequency
                CycleCode
                Miscellaneous
                RecurringInvoiceParameter
                Customer
                CustomerRecurringInvoiceLine
                CustomerRecurringInvoiceAddOnCharge

        Set5
            indexed
            Instance Selection
                where (IsNotReady)
            Sort Order
                Company
                RecurringInvoiceParameter
                Customer
                CustomerRecurringInvoiceLine
                CustomerRecurringInvoiceAddOnCharge

    Field Rules

        Frequency
        	default to CustomerRecurringInvoice.Frequency
            required

        Miscellaneous
            required
            
			if (RecurringInvoiceParameter.HasBillingInvoices)										
            	cannot be changed
            		"CannotChangeAddOnCharge;InvoiceProcessingHasBegun"								
            
			if (Miscellaneous.ChargeType.UnitPrice)
				constraint (CustomerRecurringInvoiceLine exist)
					"PerUnitAddOnChargeNotAllowedAtInvoiceLevel;ChargeTypeIsUnitPrice"				

        ZeroAfterUse
			if (RecurringInvoiceParameter.HasBillingInvoices)										
            	cannot be changed
            		"ZeroAfterUseCannotBeChanged;InvoiceProcessingHasBegun"							

            if (!Miscellaneous.ChargeType.FlatAmount)
            	constraint (!ZeroAfterUse)
            		"CannotBeZeroAfterUseForPercentageOrUnitPriceAddOnCharge"						
            		
        CycleCode
        	default to CustomerRecurringInvoice.CycleCode
        	
        StartDate
			if (CustomerRecurringInvoiceLine entered)
        		default to CustomerRecurringInvoiceLine.StartDate
			else
				default to CustomerRecurringInvoice.StartDate

			if (CustomerRecurringInvoiceLine not entered)        	
	    		constraint (StartDate >= CustomerRecurringInvoice.StartDate)
	    			"StartDateCannotBeLessThanCustomerRecurringInvoiceStartDate"					
			else
				constraint (StartDate >= CustomerRecurringInvoiceLine.StartDate)
					"StartDateCannotBeLessThanCustomerRecurringInvoiceLineStartDate"

		StopDate
			if (CustomerRecurringInvoiceLine entered)
				default to CustomerRecurringInvoiceLine.StopDate
			else
				default to CustomerRecurringInvoice.StopDate

			constraint (StopDate >= StartDate)
				"StopDateCannotBeLessThanStartDate"													

			if (CustomerRecurringInvoiceLine not entered)        	
				constraint (StopDate <= CustomerRecurringInvoice.StopDate)
					"StopDateCannotBeGreaterThanCustomerRecurringInvoiceStopDate"					
			else
				constraint (StopDate <= CustomerRecurringInvoiceLine.StopDate)
					"StopDateCannotBeGreaterThanCustomerRecurringInvoiceLineStopDate"				
				
		Amount						
			if (!ZeroAfterUse)
				if (Miscellaneous.ChargeType.FlatAmount)
					default to Miscellaneous.Price
				else
				if (Miscellaneous.ChargeType.UnitPrice)
					default to Miscellaneous.UnitPrice
				
			if (!Miscellaneous.ChargeType.Percentage)
				if (!ZeroAfterUse)
					required																		
					
			constraint (!ZeroAfterUse)
				"CannotEnterAmountWhenZeroAfterUseIsSet"											

			if (TotalAmount entered)
				constraint (RecurringInvoiceParameter.NumberOfInvoices entered)
					"RecurringInvoiceAddOnChargeDoesNotAllowSpreadCalculation;NumberOfInvoicesZero"		

				constraint (!ZeroAfterUse)
					"RecurringInvoiceAddOnChargeDoesNotAllowSpreadCalculation;ZeroAfterUseSetToNo"		
					
				LocalAmount = TotalAmount/(RecurringInvoiceParameter.NumberOfInvoices - CustomerRecurringInvoice.InvoiceCount)

				initialize RoundedValue
				RoundedValue.RoundInput			= LocalAmount
				RoundedValue.RoundingType		= RoundedValue.RoundingType.Normal
				RoundedValue.RoundTo			= DerivedAmountRoundTo
				RoundedValue.RoundingMethodFW	= RoundedValue.RoundingMethodFW.MultipleOf
				Amount							= RoundedValue.RoundResult
				
	Actions
		Create is a Create Action

		Update is an Update Action


        UpdateForZeroAfterUse is an Instance Action
        	valid when (IsZeroAfterUse) 
        	
        	Parameters
				PrmAmount	  is an InternationalAmount	
				PrmSkip		  is Boolean  

			Parameter Rules
				PrmAmount	  
					constraint (PrmAmount decimals <= Company.BaseNumberOfDecimals)
						"TooManyDecimalDigitsEnteredForAmount:MaxIs<Company.BaseNumberOfDecimals>"	
			
			Action Rules
				constraint (IsZeroAfterUse)
					"CannotUpdateIfNotZeroAfterUse"
				constraint (RecurringBillingItemOperatorRel exists)
					"NotAuthorizedAsOperatorFor_\A\O\C"
				Amount = PrmAmount
				Skip   = PrmSkip				
				
		Delete is a Delete Action
			Action Rules
				constraint (BilledAmount not entered)
					"CannotDelete;ProcessingHasBegun,BilledAmountGreaterThanZero"			
		
