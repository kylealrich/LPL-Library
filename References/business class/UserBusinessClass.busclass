UserBusinessClass is a BusinessClass
    owned by repository
    prefix is usbc
    framework type is LPLConfiguration

	Patterns
		disable EffectiveDated
		disable AsOfDateProcessing
		implements DynamicCreation
		implements ConfigurationMetadata
		implements AuditLogEntryActions
				
    Ontology
        symbolic key is UserBusinessClass
    
    Persistent Fields
    	BusinessClass		is LPLName
    	UserKeyField
    	KeyFieldName		is a snapshot of UserKeyField.KeyFieldName
    		default label is "KeyField"	
    	Status 				is a UserObjectStatus
		LPL             	is LPL
    	Description			is a ConfigDescription
    	UserEditorType
    	ErrorText			is Text
    
    Transient Fields
    	ProcessSecurity	is Boolean
    	SecurityClassExisted is Boolean
    	TKeyFieldLPL 	is LPL
    		default label is "TransientKeyFieldLPL"
    		derive value from UserKeyField.LPL
    		
    	TKeyFieldName 	is LPLName
    		default label is "TransientKeyFieldName"
				
	Field Rules
		BusinessClass
			required
			
			constraint (not BusinessClassRel exists
			or          BusinessClassRel.IsUserClass) 
				"<BusinessClass>AlreadyExistsAndIsNotConfigurable"
    		
    	UserKeyField
    		required 
    		
		LPL
			required  
			
			if (Status.Active)
				LocParseText = ParseText
			
				if (not LocParseText = blank)
					confirmation required
						"<LocParseText>:_User_Business_ClassIsInvalid.__DoYouWantToSaveAnyway?"
				
					Status = Status.Invalid		
					ErrorText = LocParseText
					
		UserEditorType
			default to UserEditorType.LPL	
			
		Status
			if (Status.Active)
				initialize ErrorText				
			
    Derived Fields
    	SecClassName is a DerivedField
    		type is Alpha size 100
            default label is "SecurityClassName"
    		return "UBC_" + BusinessClass
    		
    	SecClassLPL is a NativeField
    		type is Text
            default label is "SecurityClassLPL"
    		
		ConfigActor is a DerivedField
			type is Actor
			default label is "Actor"
			return blank
			
    	ParseText is a NativeField
			type is Text		

		UserKeyFieldName is a DerivedField
			type is LPLName		
			return UserKeyField.KeyFieldName
					
		UserKeyFieldLPL is a DerivedField
			type is LPL		
			return UserKeyField.LPL
		
		HasData is a NativeField
			type is Boolean
			default label is "DataExists"

	Local Fields
		Role
		LocParseText    is Text
		LocParsed       is Boolean  
		LocSetName      is LPLName
        LocName         is LPLName

    Conditions
		ConfigGlobal
			default label is "GlobalConfiguration"
			when (true)
   
		SecClassExists
			default label is "SecurityClassExists"
        	when (SecClassRel exists)	
        	
		HasErrorText
			default label is "ErrorTextEntered"
			when (ErrorText entered)  

		HasUserForm
			default label is "UserFormExists"
			when (UserFormRel exists)
			
		HasUserList
			default label is "UserListExists"
			when (UserListRel exists)
		
		HasUserCardView
			default label is "UserCardViewExists"
			when (UserCardViewRel exists)
			
		HasUserCube
			default label is "UserCubeExists"
			when (UserCubeRel exists)
			
		HasDeployedCube
			default label is "DeployedUserCubeExists"
			when (DeployedUserCubeRel exists)
			
		HasOptimizedSet
			default label is "OptimizedSetExists"
			when (OptimizedSetStateRel exists)
			
		HasStaleOptimizedSet
			default label is "StaleOptimizedSetExists"
			when (StaleOptimizedSetStateRel exists)
			
		HasPendingOptimizedSet
			default label is "PendingOptimizedSetExists"
			when (PendingOptimizedSetStateRel exists)
			
		ProcessRelatedConfigurations
			when (SecClassExists or HasUserCube or HasUserForm or HasUserList or HasUserCardView)
			
	Rule Blocks
	
		DeactivateConfirmations	
			if (UserFormRel exists
			or  UserListRel exists
			or  UserCardViewRel exists
			or	ReportDefinitionRel exists
			or  UserCubeRel exists and UserCubeRel.Status.Active 
			or  SecClassRel exists and not SecClassRel.InActive)
				confirmation required
					"AnyRelatedActive_U\IComponents,UserCubes,Reports,AndSecurityClassesWillAlsoBeDeactivated.Continue?"
					
		DeactivateRelatedItems
			if (UserKeyField exists and UserKeyField.Status.Active and not UserKeyField.HasMultipleBusinessClasses) 
				invoke DeactivateNoEvent UserKeyField
					resume on error
			
			for each UserFormRel
				if (each.Status.Active)
    				invoke Deactivate each
    					resume on error
			
			for each UserListRel
				if (each.Status.Active)
    				invoke Deactivate each
    					resume on error

    		for each ReportDefinitionRel
				if (!each.Inactive)
					invoke Deactivate each
						resume on error
						
			for each UserCardViewRel
				if (each.Status.Active)
    				invoke Deactivate each
    					resume on error
			
			if (UserCubeRel exists and UserCubeRel.Status.Active)
				invoke Deactivate UserCubeRel
					resume on error
			
			if (SecClassRel exists and not SecClassRel.InActive)	
				invoke Deactivate SecClassRel
					resume on error
				

			
		ActivateRelatedItems


			for each UserFormRel
				if (each.Status.Inactive)
	    			invoke Activate each
	    				resume on error
			
			for each UserListRel
				if (each.Status.Inactive)
    				invoke Activate each
    					resume on error

			for each ReportDefinitionRel
				if (each.Inactive)
					invoke Activate each
						resume on error
						
			for each UserCardViewRel
    			if (each.Status.Inactive)	
    				invoke Activate each
    					resume on error
			
			if (UserCubeRel exists and UserCubeRel.Status.Inactive)
				invoke Activate UserCubeRel
					resume on error
			
			if (SecClassRel exists and SecClassRel.InActive)	
				invoke Activate SecClassRel
					resume on error
        	
    Relations
    	RoleSecClassesRel 
    		one-to-many relation to RoleSecurityClass
			Field Mapping uses BySecurityClassDataArea
				related.SecurityClass = SecClassName
				related.DataArea = parentcontext.dataarea
				
		RoleSecClassRel 
    		one-to-one relation to RoleSecurityClass
			Field Mapping uses BySecurityClassDataArea
				related.SecurityClass = SecClassName
				related.DataArea = parentcontext.dataarea
				related.Role = Role			
				
		SecClassRel 
    		one-to-one relation to SecurityClass
			Field Mapping uses symbolic key
				related.SecurityClass = SecClassName
								
    	BusinessClassRel
			one-to-one relation to BusinessView
			Field Mapping uses symbolic key
				related.BusinessView = BusinessClass	
				
		OptimizedSetStateRel
			one-to-many relation to UserSet_State
			Field Mapping uses ByBusClassSetName
				related.BusinessClass = BusinessClass		
										
		StaleOptimizedSetStateRel
			one-to-many relation to UserSet_State
			Field Mapping uses ByBusClassSetName
				related.BusinessClass = BusinessClass
			Instance Selection
				where (related.Stale)
													
		PendingOptimizedSetStateRel
			one-to-many relation to UserSet_State
			Field Mapping uses ByBusClassSetName
				related.BusinessClass = BusinessClass
			Instance Selection
				where (related.State.Pending)
														
		OptimizedSetStateByLocSetNameRel
			one-to-one relation to UserSet_State
			Field Mapping uses ByBusClassSetName
				related.BusinessClass = BusinessClass		
				related.SetName = LocSetName		
										
		UserFormRel
			one-to-many relation to UserForm
			Field Mapping uses ByViewFormActor
				related.BusinessView = BusinessClass			

		UserListRel
			one-to-many relation to UserList
			Field Mapping uses ByViewListActor
				related.BusinessView = BusinessClass

		ReportDefinitionRel
			one-to-many relation to ReportDefinition
			Field Mapping uses ByBusinessView
				related.ReportDefinition.BusinessView = BusinessClass

		UserCardViewRel
			one-to-many relation to UserCardView
			Field Mapping uses ByViewCardViewActor
				related.BusinessView = BusinessClass				
				
		UserCubeRel
			one-to-one relation to UserCube
			delete cascades
			Field Mapping uses ByClass
				related.BusinessClass = BusinessClass
				
		DeployedUserCubeRel
			one-to-one relation to UserCubeDeployed
			delete cascades
			Field Mapping uses ByClass
				related.BusinessClass = BusinessClass

        ConfigEntityRel
            one-to-one relation to ConfigEntity
            Field Mapping uses symbolic key
                related.ConfigEntity = UserBusinessClass

        LocalDuplicateRel
            one-to-many relation to UserBusinessClass
            Field Mapping uses ByBusinessClass
                related.BusinessClass = LocName

        LocalKeyFieldDuplicateRel
            one-to-many relation to UserKeyField
            Field Mapping uses ByUserKeyField
                related.KeyFieldName = LocName

            				
   	Actions
    	Create is a Create Action
    		Entrance Rules
    			if (TKeyFieldLPL entered
    			and TKeyFieldName entered)
    				invoke CreateNoEvent UserKeyField
    					assign result to UserKeyField
    					invoked.KeyFieldName 	= TKeyFieldName
    					invoked.LPL			 	= TKeyFieldLPL
    					invoked.UserEditorType  = UserEditorType
    					
    		Exit Rules
    			invoke FireEvent
    			
    	CreateFromSnapshot is a Create Action
    		restricted
    		bypass field rules

    		
    		Action Rules
    			KeyFieldName  = UserKeyField.KeyFieldName 
    			
    	Update is an Update Action
    		Local Fields
				OldStatus is a UserObjectStatus
				
    		Entrance Rules
    			OldStatus = old Status
    			
    			if (Status.Inactive and OldStatus.Active)
    				include DeactivateConfirmations
    			
    			if (TKeyFieldLPL entered
    			and TKeyFieldLPL != UserKeyField.LPL)
    				if (UserKeyField exists)
	    				invoke UpdateNoEvent UserKeyField
	    					invoked.LPL			 	= TKeyFieldLPL
	    					invoked.UserEditorType  = UserEditorType
	    			else
	    				invoke CreateNoEvent UserKeyField
	    					assign result to UserKeyField
	    					invoked.KeyFieldName 	= BusinessClass 
	    					invoked.LPL				= TKeyFieldLPL
	    					invoked.UserEditorType  = UserEditorType
	    					
	    	Action Rules
	    		if (Status.Active and OldStatus.Inactive
	    		and UserKeyField exists
    			and not UserKeyField.Status.Active)
					invoke ActivateNoEvent UserKeyField
					
	    		if (Status.Inactive and OldStatus.Active)
	    			include DeactivateRelatedItems
	    	
    		Exit Rules
    			invoke FireEvent
    			
    			if (Status.Active and OldStatus.Inactive)
					include ActivateRelatedItems
    			
    	UpdateFromSnapshot is an Update Action
    		restricted
    		bypass field rules


			Action Rules
    			KeyFieldName  = UserKeyField.KeyFieldName 

		UpdateWithRoles is an Update Action
    		restricted
    		Local Fields
				OldStatus is a UserObjectStatus
				
    		Entrance Rules
    			if (Status.Inactive and OldStatus.Active)
    				include DeactivateConfirmations
    				
    			if (ProcessSecurity)
    				invoke Delete RoleSecClassesRel
    			
    			if (TKeyFieldLPL entered
    			and TKeyFieldName entered)
    				if (UserKeyField exists)
	    				invoke UpdateNoEvent UserKeyField
	    					invoked.KeyFieldName 	= TKeyFieldName
	    					invoked.LPL			 	= TKeyFieldLPL
	    					invoked.UserEditorType  = UserEditorType
	    			else
	    				invoke CreateNoEvent UserKeyField
	    					assign result to UserKeyField
	    					invoked.KeyFieldName 	= TKeyFieldName
	    					invoked.LPL			 	= TKeyFieldLPL
	    					invoked.UserEditorType  = UserEditorType
    			

    		Action Rules
    			if (Status.Active and OldStatus.Inactive
	    		and UserKeyField exists
    			and not UserKeyField.Status.Active)
					invoke ActivateNoEvent UserKeyField
					
	    		if (Status.Inactive and OldStatus.Active)
	    			include DeactivateRelatedItems
	    			
    		Exit Rules
    			invoke FireEvent
    			
    			if (Status.Active and OldStatus.Inactive)
					include ActivateRelatedItems
    			
    	Delete is a Delete Action
    		Entrance Rules
    			constraint (not HasDeployedCube)
					"DeployedUserCubeExistsForBusinessClassAndMustBeCleanedUpBeforeDeleting."
					
    			constraint (not HasOptimizedSet)
					"OptimizedSetExistsForBusinessClassAndMustBeCleanedUpBeforeDeleting."
					
    			if (HasData)
                	confirmation required
						"DataExistsForBusinessClass._AllDataWillBePurged._AreYouSureYouWantToDeleteBusinessClass?"
					
    		Action Rules
    			invoke Delete RoleSecClassesRel
    			invoke Delete SecClassRel
    			invoke DeleteNoEvent UserKeyField



    			invoke Delete UserFormRel
    			invoke Delete UserListRel
    			invoke Delete ReportDefinitionRel
    			invoke Delete UserCardViewRel
    			
    			if (UserCubeRel exists)  
    				invoke Delete UserCubeRel 
    			
    		Exit Rules
    			invoke FireEvent
    			
    	DeleteFromSnapshot is a Delete Action 
    		restricted
    		bypass relational integrity rules

    			
    		Action Rules
    			invoke Delete RoleSecClassesRel
    			invoke DeleteFromSnapshot SecClassRel
    			invoke DeleteFromSnapshot UserKeyField



    			invoke DeleteFromSnapshot UserFormRel
    			invoke DeleteFromSnapshot UserListRel
    			invoke DeleteFromSnapshot UserCardViewRel
    			
    			if (UserCubeRel exists)  
    				invoke DeleteFromSnapshot UserCubeRel 
    			
    	AssignRole is an Instance Action
    		Parameters
    			ParamRole is a Role
    				default label is "Role"
    			
    		Action Rules
    			Role = ParamRole
    			
    			if (not RoleSecClassRel exists) 
    				invoke Create RoleSecurityClass
    					invoked.Role = ParamRole
    					invoked.SecurityClass = SecClassName
    					invoked.DataArea = parentcontext.dataarea

		RemoveRole is an Instance Action
    		Parameters
    			ParamRole is a Role
    				default label is "Role"
    		
    		Action Rules
    			Role = ParamRole
    			invoke Delete RoleSecClassRel
    			
    	Activate is an Instance Action
    		valid when (not Status.Active)
    		completion message is "UserBusinessClassAndAnyRelatedInactive_U\IComponents,UserCubeAndSecurityClassesActivated"
    		Action Rules
    			if (UserKeyField exists
    			and not UserKeyField.Status.Active)
					invoke ActivateNoEvent UserKeyField
					
    			LocParseText = ParseText
				
				if (not LocParseText = blank)
					constraint(LocParseText = blank)							
						"<LocParseText>:_User_Business_ClassIsInvalid._Cannot_Activate."				
				
				Status = Status.Active
				initialize ErrorText
				
    		Exit Rules
    			invoke FireEvent
    			
    			include ActivateRelatedItems
    			
    	Deactivate is an Instance Action
    		valid when (not Status.Inactive)
    		completion message is "UserBusinessClassAndAnyRelatedActive_U\IComponents,UserCubeAndSecurityClassesDeactivated"
    		
    		Entrance Rules
    			include DeactivateConfirmations
    		
    		Action Rules
    			Status =  Status.Inactive
    			include DeactivateRelatedItems
    			
    		Exit Rules
    			invoke FireEvent
    			
    	DeactivateNoEvent is an Instance Action
    		valid when (not Status.Inactive)
    		restricted
    		
    		Entrance Rules
    			include DeactivateConfirmations
    		
    		Action Rules
    			Status =  Status.Inactive
    			include DeactivateRelatedItems
    			
    	Invalidate is an Instance Action
    		valid when (not Status.Invalid)
    		restricted
    		Action Rules
    			Status = Status.Invalid
    		Exit Rules
    			invoke FireEvent
    	
    	CreateSecurityClass is an Instance Action
			restricted   
			Action Rules
				if (not SecClassExists) 
    				invoke Create SecurityClass
    					invoked.SecurityClass = SecClassName
    					invoked.Description = "AutomaticallyGenerated"
    					invoked.LPL = SecClassLPL 
    			else
    				SecurityClassExisted = true
    			
    	FireEvent is an Instance Action
			restricted    	
			
		TagItem is an Instance Action
			Parameters
				ParamConfigurationTag is a ConfigurationTag
					default label is "Tag"
				ParamTagRelated is Boolean
					default label is "TagKnownRelatedConfiguredItems"
				ParamFromUserKeyfield is Boolean
					default label is "InvokedFromUserKeyField"
					
			Parameter Rules
				ParamTagRelated
					initial value is ProcessRelatedConfigurations
			
			Entrance Rules
				if (Status.Inactive)
					confirmation required
						"UserBusinessClassIsInactive,TagAnyway?"
							
				if (Status.Invalid)
					confirmation required
						"UserBusinessClassIsInvalid,TagAnyway?"
						
				if (not ParamFromUserKeyfield)
					if (UserKeyField exists)
						if (UserKeyField.Status.Inactive)
							confirmation required
								"UserKeyFieldIsInactive,TagAnyway?"
								
						if (UserKeyField.Status.Invalid)
							confirmation required
								"UserKeyFieldIsInvalid,TagAnyway?"
			
			Action Rules
				invoke Create ConfigurationTagItem
					invoked.ConfigurationTag = ParamConfigurationTag
					invoked.ConfigurationTagItem.Reference = reference to this instance
				
				if (not ParamFromUserKeyfield and UserKeyField exists)
					invoke Create ConfigurationTagItem
						resume on error
						invoked.ConfigurationTag = ParamConfigurationTag
						invoked.ConfigurationTagItem.Reference = reference to UserKeyField	
				
				if (ParamTagRelated)
					if (UserFormRel exists)
						invoke TagItem UserFormRel
							resume on error 
							invoked.ParamConfigurationTag = ParamConfigurationTag
						
					if (UserListRel exists)
						invoke TagItem UserListRel
							resume on error 
							invoked.ParamConfigurationTag = ParamConfigurationTag

					if (ReportDefinitionRel exists)
						invoke TagItem ReportDefinitionRel
							resume on error 
							invoked.ParamConfigurationTag = ParamConfigurationTag
	
					if (UserCardViewRel exists)
						invoke TagItem UserCardViewRel
							resume on error 
							invoked.ParamConfigurationTag = ParamConfigurationTag
		
					if (SecClassRel exists)
						invoke TagItem SecClassRel
							resume on error 
							invoked.ParamConfigurationTag = ParamConfigurationTag
						


        CreateBusinessClass is a Create Action
            Parameters
                KeyFieldNameParam is LPLName
                    default label is "KeyField"

                BusinessClassNameParam is LPLName
                    default label is "BusinessClass"

                ContextParam is a KeyField
                    default label is "Context"

				ExtendedTypeParam is a BusinessExtendedType
					default label is "ExtendedType"

				FieldSizeParam is Numeric size 4
					default label is "FieldSize"

				DecimalSizeParam is Numeric size 4
					default label is "DecimalSize"

                ParentHierarchyParam is Boolean
                    default label is "ParentHierarchy"

                UserDefinedStatesParam is Boolean
                    default label is "UserDefinedStates"

			Parameter Rules
				KeyFieldNameParam
					required

			    BusinessClassNameParam
			        required

				ExtendedTypeParam
					required

				FieldSizeParam
					if (ExtendedTypeParam.HasSize)
						required

			Local Fields
				LocalLPLParam is LPL
				LocalKeyFieldLPLParam is LPL
				LocalUserKeyField is a UserKeyField


            Action Rules
                LocName = BusinessClassNameParam
                constraint (!LocalDuplicateRel exists)
                    "BusinessClassNameInUse_'<LocName>'"

                LocName = KeyFieldNameParam
                constraint (!LocalKeyFieldDuplicateRel exists)
                    "KeyFieldNameInUse_'<LocName>'"


   				invoke CreateNoEvent UserKeyField
    				assign result to LocalUserKeyField
    				invoked.KeyFieldName 		= KeyFieldNameParam
    				invoked.LPL			 		= LocalKeyFieldLPLParam

                invoke Create this instance
                    invoked.BusinessClass       = BusinessClassNameParam
                    invoked.UserKeyField        = LocalUserKeyField
                    invoked.LPL 				= LocalLPLParam

            Exit Rules
       			invoke CreateSecurityClass

  	    OptimizeSet is an Instance Action
            Parameters
            	BusinessClassNameParam	is a BusinessClass 
            		default label is "BusinessClass"
                SetNameParam			is a BusinessSet
                    default label is "Set"
            
            Parameter Rules
   				BusinessClassNameParam
   					required
   					initial value is BusinessClass
   					cannot be changed
   					
				SetNameParam
					required

            Action Rules
   				invoke CreateFromSpec UserSet_State
   					invoked.BusinessClassNameParam	= BusinessClassNameParam
    				invoked.SetNameParam			= SetNameParam
    				
    		Exit Rules
    			LocSetName = SetNameParam
            	if (LocSetName = "symbolic key") 
            		LocSetName = "SymbolicKey"
	        	if (LocSetName = "part of key") 
	        		LocSetName = "PartOfKey"
	        	if (LocSetName = "update stamp key") 
	        		LocSetName = "By_UpdateStamp"
	        	if (LocSetName = "unique id key") 
	        		LocSetName = "ByUniqueID"
    			if (OptimizedSetStateByLocSetNameRel.CanPopulateIndex)
    				invoke PopulateIndex OptimizedSetStateByLocSetNameRel

   	    OptimizeSetNoPopulate is an Instance Action 
   	    	default label is untranslatable
   	    	restricted
   	    	
            Parameters
            	BusinessClassNameParam	is LPLName
            	    default label is untranslatable
                SetNameParam			is LPLName
                    default label is untranslatable
            
            Parameter Rules
   				BusinessClassNameParam
   					required
   					
				SetNameParam
					required

            Action Rules
   				invoke CreateFromSpec UserSet_State
   					invoked.BusinessClassNameParam	= BusinessClassNameParam
    				invoked.SetNameParam			= SetNameParam

       	OptimizeAllSets is an Instance Action

       	DeleteAllOptimizedSets is an Instance Action
       		valid when (HasOptimizedSet)

       		Entrance Rules
       			confirmation required
       				"AreYouSureYouWantTo_Delete_All_Optimized_Sets?"
       		
       		Action Rules
	   			for each OptimizedSetStateRel
   					invoke DeleteNoRules each

   		OptimizeAllStaleSets is an Instance Action
   			valid when (HasStaleOptimizedSet)

	   		Action Rules
	   			for each StaleOptimizedSetStateRel
					invoke DeleteNoRules each
					invoke OptimizeSet
						invoked.BusinessClassNameParam	= each.BusinessClass
						invoked.SetNameParam			= each.SetName

       	DisableAllOptimizedSets is an Instance Action
       		restricted
       		valid when (HasOptimizedSet)

       		Action Rules
	   			for each OptimizedSetStateRel
	   				if (each.CanDisable)
	   					invoke DisableInternal each

   	Sets
    	ByBusinessClass
    		indexed
    		Sort Order
    			BusinessClass
    			
		ByKeyFieldName
    		indexed
    		Sort Order
    			KeyFieldName
    			UserBusinessClass
