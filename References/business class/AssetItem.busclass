AssetItem is a BusinessClass
    owned by am
    prefix is ASI
    classic name is AMASTITEM

    Ontology
        symbolic key is AssetItem
            classic set name is ASISET1
            classic name is SEQ-NUMBER

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        ItemNumber                         is an AssetItemNumber
            classic name is ITEM-NBR
        Description
        ItemProcess                        is AlphaUpper size 3
            States
                Adjustment value is "ADJ"
                Disposal   value is "DSP"
                Transfer   value is "TRF"
        PurchaseDate                        is Date
        BaseNumberOfDecimals
            classic name is BASE-ND
        TransactionNumberOfDecimals        	is a CurrencyNumberOfDecimals
            classic name is TRAN-ND
        ItemQuantity
        DisposalQuantity					is a TotalItemQuantity
        BaseItemCost                        is an InternationalAmount
            classic name is ITEM-COST-BASE
                precision is Asset.BaseNumberOfDecimals
        BaseItemTax                         is an InternationalAmount
            classic name is ITEM-TAX-BASE
                precision is Asset.BaseNumberOfDecimals
        TransactionItemCost                 is an InternationalAmount
            classic name is ITEM-COST-TRAN
        TransactionItemTax                  is an InternationalAmount
            classic name is ITEM-TAX-TRAN
        VendorName
        ModelNumber
        SerialNumber
        AssetProject						is a FinanceCodeBlockProjectOnly
        CreationDate						is TimeStamp
        CreatedBy                           is an Operator 
        	holds pii
            classic name is CREATOR-ID
        BarCode                             is an AssetBarCode
        LocationDetail                      is an AssetLocationDetail
            classic name is ITEM-LOC-DTL
        InventoryDate                       is TimeStamp
            classic name is INV-DATE
        ItemCondition
            classic name is INV-ITEM-COND
        AssetObjectID                       is Numeric size 12
            classic name is OBJ-ID
        InvoiceAndPurchaseOrderInformation
            classic name for InvoiceAndPurchaseOrderInformation.InvoiceCompany is INV-COMPANY
            classic name for InvoiceAndPurchaseOrderInformation.DistributionSequence is DIST-SEQ-NBR
            classic name for InvoiceAndPurchaseOrderInformation.PurchaseOrder is PO-NBR
        POAssetObjectID                     is an ObjId
            classic name is PO-AST-OBJ-ID
        GeographicalType                    is a GISType
            classic name is GEO-TYPE
        GeographicalLatitude                is a GISCoordinate
            classic name is GEO-LATITUDE
        GeographicalLongitude               is a GISCoordinate
            classic name is GEO-LONGITUDE
        GeographicalAltitude                is a GISCoordinate
            classic name is GEO-ALTITUDE
        GeographicalDate                    is TimeStamp
            classic name is GEO-DATE
		AssetItemReferenceFields
		AssetManagementInterfaceResult
			delete ignored
		AssetSummaryGroup


	Context Fields
		AssetDisposal

	Local Fields
		LocalAsset					is an Asset
		LocalAction					is AlphaUpper 1
		LocalNewBaseCost			is like InternationalAmount
	 	LocalNewTaxBase				is like InternationalAmount
	 	LocalNewCostTran			is an InternationalAmount
	 	LocalNewTaxTran				is an InternationalAmount
	 	LocalNewQty					is an ItemQuantity
	 	LocalBarCode				is a BarCode
		LocalTransactionItemCost	is an InternationalAmount
		LocalBaseCostFromInterface  is an InternationalAmount
		LocalExchangeDate			is an ExchangeDate
		LocalCurrencyAmount			is a CurrencyAmount
		LocalBaseAmount				is a CurrencyExchange
		UpdateFromInterface			is Numeric 1
		UpdateAllocation			is Boolean
		LocalUpdateType 			is Numeric 1
		CreateFromBatch				is Boolean
		LocalComputeFromBatch		is Boolean
		LocalFund 					is an AssetFundField
		LocalAccountingUnit			is like AccountingUnit
		LocalAccountingEntity		is like AccountingEntity
		LocalNumberOfDecimals		is a CurrencyNumberOfDecimals
		LocalProject				is like Project
  		LocalFinanceDimension1		is like FinanceDimension1
  		LocalFinanceDimension2		is like FinanceDimension2
  		LocalFinanceDimension3		is like FinanceDimension3
  		LocalFinanceDimension4		is like FinanceDimension4
  		LocalFinanceDimension5		is like FinanceDimension5
  		LocalFinanceDimension6		is like FinanceDimension6
   		LocalFinanceDimension7		is like FinanceDimension7
  		LocalFinanceDimension8		is like FinanceDimension8
  		LocalFinanceDimension9		is like FinanceDimension9
  		LocalFinanceDimension10		is like FinanceDimension10
		FundCount 					is Numeric 4
		FundsAdded 					is Numeric 4
		AllocatedAmount				is an InternationalAmount
		AllocatedPercent			is Percent size 9.6
		TotalAssigned				is an InternationalAmount
		LocalFundAmount				is an InternationalAmount
  		LocalAssetTotalItemCost		is an InternationalAmount
  		LocalCreateFromTransfer 	is Boolean
		LocalTotalItemsCost			is an InternationalAmount
		LocalLeaseAsset				is an Asset
		LocalHasUnreleasedOrAdjustment is Boolean
		LocalAssetTransactionsToUpdate is Boolean
		LocalSkipAdjustmentEdit		is Boolean
		LocalComputeOption          is like Compute
		LocalProgram                is Alpha size 20
		LocalInvokingAction         is Alpha size 20
		BypassActiveCodeBlockEdit

	Transient Fields
		AdjustmentDate				is Date
		TransferQuantity			is an ItemQuantity
		DisposalItemQuantity		is an ItemQuantity
		ToItemQuantity				is an ItemQuantity
		TransientUpdateType 		is Numeric 1
		TransientAssetType  		is like AssetType
			derive value from AssetRel.AssetType
		TransientAssetGroup			is like AssetGroup
			derive value from AssetRel.AssetGroup
		TransientDivision			is like AssetDivision
			derive value from AssetRel.AssetDivision
		TransientAssetLocation		is like AssetLocation
			derive value from AssetRel.AssetLocation
		LocalCurrency				is a FromCurrency
			derive value from Asset.Currency
		PreserveImportedBaseAmount	is Boolean
		PreserveImportedBaseTax 	is Boolean
		CreatePOComments			is Boolean

    Derived Fields
    	ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforAssetItem"

		ContextMessageText is a MessageField
			restricted
			"Asset<Asset>AssetItem<AssetItem>"

        AssetTagNumber is a DerivedField
            type is like TagNumber
            classic name is TAG
            return Asset.TagNumber

        AssetGroup is a DerivedField
        	type is like AssetGroup
            classic name is ASSET-GRP
            return Asset.AssetGroup

        CompanyCurrency is a DerivedField
            type is like Currency
            restricted
            classic name is GL-CURR-CODE
            return GeneralLedgerCompanyRel.Currency

        Transferred is a DerivedField
        	type is Boolean
        	if (ItemTransferExists)
        		TransferQuantity = AssetItemTransferRel.ToItemQuantity
        		return true
        	else
        		return false

		HighPurchaseDate is a DerivedField
			type is Date
			restricted
			return first ItemsByDateDescendingRel.PurchaseDate

		AssetItemRepresentativeText is a LabelField
			"<AssetItem>_-_<Description>"

		TransactionItemCostCurrency is a MessageField
			"<TransactionItemCost>_<Asset.Currency>"

		TransactionItemTaxCurrency is a MessageField
			"<TransactionItemTax>_<Asset.Currency>"

		DefaultItemCost is a DerivedField
			type is like InternationalAmount
			restricted
			if (Asset.LeasedAsset)
				LocalTotalItemsCost = (sum AssetItemRel.TransactionItemCost)
				for each LeaseAssetRel
					LocalLeaseAsset = each.Asset
					LocalTotalItemsCost += (sum LeaseAssetItemsRel.TransactionItemCost)
				return (Asset.AssetLease.Lease.LeaseROUAssetAmount.TransactionAmount - LocalTotalItemsCost)

    Conditions
        ProjectEntered
        	restricted
            classic name is ACTIVITY-EXIST
            when (AssetProject entered)

        BarCodeEntered
        	restricted
            classic name is BAR-CODE
            when (BarCode entered)

        POAssetObjectIDEntered
        	restricted
            classic name is PO-AST-OBJ-ID
            when (POAssetObjectID entered)

        SerialNumberEntered
        	restricted
            classic name is SERIAL-NBR-XST
            when (SerialNumber entered
            and   SerialNumber != "0")


		AdjustmentAllowed
			restricted
			when (Asset.AssetProcess not entered
			or    Asset.AssetProcess.Addition
			or    Asset.AssetProcess.Adjustment


			or	  Asset.AssetProcess.Impairment)

		UpdateAllowed
			restricted
			when (AdjustmentAllowed
			and (!Asset.Status.Disposed)
			and !ImpairmentInProgress
			and !Asset.AssetProcess.Transfer)

		ImpairmentInProgress
			when (first LastAssetImpairmentRel.Status.PostRelease
			and first LastAssetImpairmentRel.UnReleasedTransactionsExist)

		DeleteAllowed
			restricted
			when (AnotherAssetItemRel exists)

		AdjustmentDelete
			restricted
			when (AdjustmentRequired
			or  UpdateAllowed)

		AdjustmentRequired
			restricted
			when (Asset.Status.Released)

		AssetAdjustmentRequired
			restricted
			when (Asset.AssetProcess.Adjustment
			and	  UnreleasedAssetAdjustmentRel.AdjustmentDate entered)

		ItemTransferExists
			restricted
		 	when (AssetItemTransferRel exists)

		ItemDisposalExists
			restricted
		 	when (AssetItemDisposalRel exists)

		AvailableToDispose
			restricted
			when (!ItemDisposalExists
			and !HasZeroItemQuantity)

		IsAssetInterface
			restricted
			when (BarCode entered
			and UpdateFromInterface = 1)

		IsUnreleased
			restricted
			when (Asset.Status.Unreleased)

		ValueChanged
			restricted
			when (ItemQuantity changed
			or BaseItemCost changed
			or BaseItemTax changed
			or TransactionItemCost changed
			or TransactionItemTax changed)

		CostChanged
			restricted
			when (BaseItemCost changed
			or BaseItemTax changed
			or TransactionItemCost changed
			or TransactionItemTax changed)

		QuantityChanged
			restricted
			when (ItemQuantity changed)

		HasZeroItemQuantity
			restricted
			when (ItemQuantity = 0)

		HasInvoice
			restricted
			when (InvoiceAndPurchaseOrderInformation.PayablesInvoice entered)

		PayablesInvoiceExists
			restricted
			when (PayablesInvoices2Rel exists)

		HasPurchaseOrder
			restricted
			when (InvoiceAndPurchaseOrderInformation.PurchaseOrder entered)

		HasUnreleasedOrAdjustment
			when (Asset.Status.Unreleased
			or UnreleasedAssetAdjustmentRel exists)

		FromAssetTransferOrDisposal
			restricted
			when (Asset.OriginalAssetRel.AssetProcess.Disposal
			or Asset.ToAssetTransferRel.Asset.AssetProcess.Transfer)

		IsImpairmentDisposalInProgress
			when (Asset.Status.PostRelease
			and	 Asset.AssetProcess.Disposal)

		FundAccounting
			when (Asset.FundAccounting
			and not Asset.AssetType.AllocateDepreciationExpense)

		DisplayItemFunds
			when (Asset.FundAccounting
			and !Asset.FundOverride
			and not Asset.AssetType.AllocateDepreciationExpense)

		DisplayItemFundLink
			when (Asset.FundAccounting
			and !Asset.FundOverride
			and not Asset.AssetType.AllocateDepreciationExpense
			and AssetItemFundsRel exists)

		FundOverride
			when (Asset.FundOverride)

		FundAllocationComplete
			when (CostAllocationComplete
			or PercentAllocationComplete)

		CostAllocationComplete
			when (sum AssetItemFundsRel.TransactionAmount = TransactionItemCost)

		PercentAllocationComplete
			when (sum AssetItemFundsRel.PercentContribution = 1)

		FundAllocationsComplete
			when (CostAllocationsComplete
			or PercentAllocationsComplete)

		CostAllocationsComplete
			when (sum AssetItemFundRel.TransactionAmount = TransactionItemCost)

		PercentAllocationsComplete
			when (sum AssetItemFundRel.PercentContribution = 1)

		NewItemViaAdjustment
			when (AssetItemAdjustmentRel.TransactionItemCost entered)

		AssetTransactionsToUpdate
			restricted
			when (UnreleasedAssetBookTransactionsRel exists
			or UnreleasedAssetTransactionRel exists)



		IsUnreleasedAndNoTransferInProgress
			restricted
			when (IsUnreleased
			and	!Asset.AssetProcess.Transfer)

		IsDisposedAsset
			when (Asset.Status.Disposed)

		IsNotScannedItem
			restricted
			when ((BarCode not entered
			or (BarCode entered
			and AssetItemInventoryRel not exists))
			and !(Asset.Status.Unreleased
			or Asset.InterfaceInProgress))

		ApprovalUpdateAllowed
			restricted
			when (UpdateAllowed
			and !Asset.ApprovalStatus.Submitted)

		ApprovalDeleteAllowed
			restricted
			when (IsUnreleasedAndNoTransferInProgress
			and !Asset.ApprovalStatus.Submitted)

    Field Rules

    	TransferQuantity
    		if (AssetItemTransferRel exists)
    			default to AssetItemTransferRel.ToItemQuantity

    	ItemQuantity
            required
            constraint (ItemQuantity>0)
				"ItemQuantityMustBeGreaterThanZero"

    	DisposalItemQuantity
    		if (Asset.AssetProcess.Disposal)
    			default to ItemQuantity
    		if (DisposalItemQuantity entered)
				constraint(DisposalItemQuantity > 0)
					"DisposalQuantityMustBeGreaterThanZero"

			if (DisposalItemQuantity entered)
				constraint(DisposalItemQuantity <= ItemQuantity)
					"DisposalItemQuantityMustBeLessThanOrEqualToItemQuantity"

        PurchaseDate
			if (Asset.Status.Released)
				constraint(AdjustmentDate entered)
					"AdjustmentDateIsRequired"
				invoke Released.Adjust Asset
					invoked.AdjustmentDate = AdjustmentDate
			if (!FromAssetTransferOrDisposal)
				if (CompanySystemClosingControlRel exists
				and CompanySystemClosingControlRel.Control)
					if(Asset.AssetCompanyRel.DefaultPostingDate.PurchaseDate)
						if (PurchaseDate not within CompanySystemClosingControlRel.ValidEntryDate)
							confirmation required
								"Warning:PurchaseDateIsOutsideClosingControlValidDateRange,Continue?"
			required

        ItemCondition
            default to "G"

		AssetItem
			constraint (!Asset.Status.Disposed)
				"CannotAddOrChangeItem;AssetHasBeenDisposed"

		ItemNumber
			if (ItemNumber not entered)
				if (Asset.Company.ItemNumbering.System)
					increment Asset.LastAssetItem
					ItemNumber = Asset.LastAssetItem
				else
				if (Asset.Company.ItemNumbering.Tag)
					ItemNumber = Asset.TagNumber

		Description
			default to Asset.Description

		TransactionItemTax
			if (!PreserveImportedBaseTax)
				if (Asset.Currency != Asset.Company.Currency)
					LocalExchangeDate			= PurchaseDate
					LocalCurrencyAmount			= TransactionItemTax
					BaseItemTax					= LocalBaseAmount.OutputCurrencyAmount
				else
					BaseItemTax 				= TransactionItemTax


		TransactionItemCost

			initial value is DefaultItemCost
			LocalNumberOfDecimals	= TransactionNumberOfDecimals
			if (!PreserveImportedBaseAmount)
				if (Asset.Currency != Asset.Company.Currency)
					LocalBaseAmount.ToCurrency      			= Asset.Company.Currency
					LocalExchangeDate							= PurchaseDate
					LocalCurrencyAmount							= TransactionItemCost
					BaseItemCost								= LocalBaseAmount.OutputCurrencyAmount
				else
					BaseItemCost								= TransactionItemCost



















		BarCode
			if (!ItemProcess.Disposal)
				constraint (DuplicateAssetBarCodeRel not exists)
					"BarCodeHasAlreadyBeenAssignedToAnAssetItem"
			if (Asset.AssetCompanyRel.CreateBarCodes
			and AssetBarCodeRel not exists)
				invoke Create AssetBarCodeRel

		InventoryDate
			if (!Asset.IncludeInPhysicalInventory)
				cannot be changed
					"AssetIsNotIncludedInPhysicalInventory"

		BaseNumberOfDecimals
			default to Asset.BaseNumberOfDecimals

		TransactionNumberOfDecimals
			default to Asset.TransactionNumberOfDecimals

		GeographicalDate
			if (GeographicalLatitude changed
			or GeographicalLongitude changed
			or GeographicalAltitude changed)
				force default to current timestamp

		AssetSummaryGroup
			default to Asset.AssetSummaryGroup

		CreationDate
			default to current timestamp

		CreatedBy
			default to actor

    Relations

        AssetItemAdjustmentsRel
            classic name is AMASTITADJ
            one-to-many relation to AssetItemAdjustment
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Asset 					= Asset

        AssetItemTransfersRel
            classic name is AMASTITTRF
            one-to-many relation to AssetItemTransfer
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Asset 					= Asset

        AssetRel
			classic name is AMASSET
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		NewAssetRel
			classic name is AMASSET
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= LocalAsset

		AssetItemRel
			one-to-many relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		LeaseAssetItemsRel
			one-to-many relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= LocalLeaseAsset

		AssetItemTransferRel
			one-to-one relation to AssetItemTransfer
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.AssetItem				= AssetItem
				related.AssetTransfer			= Asset.LastAssetSequence

		AssetBarCodeRel
			one-to-one relation to AssetBarCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AssetBarCode 			= BarCode


		OldAssetBarCodeRel
			one-to-one relation to AssetBarCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AssetBarCode 			= LocalBarCode

		AssetTransactionRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		UnreleasedAssetTransactionRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset
			Instance Selection
				where (related.AssetTransaction.TransactionStatus.Unreleased)

		AssetControlTransactionRel
			one-to-one relation to AssetControlTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		AssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		AssetBookTransactionsRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset

		UnreleasedAssetBookTransactionsRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset
			Instance Selection
				where (related.AssetBookTransaction.TransactionStatus.Unreleased)

		NewAssetItemRel
			one-to-many relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= LocalAsset

        AssetDisposalRel
            classic name is AMASTDSP
            one-to-one relation to AssetDisposal
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Asset    				= Asset
                related.AssetDisposal 			= Asset

		AssetItemDisposalRel
			one-to-one relation to AssetItemDisposal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
	        	related.Asset          			= Asset
	        	related.AssetDisposal   		= Asset
	        	related.AssetItem				= AssetItem
	        	related.AssetItemDisposal.ProcessSequence = AssetRel.LastAssetSequence

        PayablesInvoices2Rel
            classic name is APINVOICE2
            one-to-one relation to PayablesInvoice
            required
            Field Mapping uses ByCompanyVendorInvoice
                related.Company         		= InvoiceAndPurchaseOrderInformation.InvoiceCompany
                related.Vendor          		= InvoiceAndPurchaseOrderInformation.Vendor
                related.Invoice        			= InvoiceAndPurchaseOrderInformation.PayablesInvoice.Invoice
                related.Suffix        			= InvoiceAndPurchaseOrderInformation.PayablesInvoice.Suffix
                related.CancelSequence 			= blank
				related.InvoiceDate				= InvoiceAndPurchaseOrderInformation.PayablesInvoice.InvoiceDate	

        PayablesInvoicesRel
            classic name is APINVOICE
            one-to-one relation to PayablesInvoice
            Field Mapping uses ByCompanyVendorInvoice
                related.Company        			= Asset.Company
                related.Vendor         			= InvoiceAndPurchaseOrderInformation.Vendor
                related.Invoice        			= InvoiceAndPurchaseOrderInformation.PayablesInvoice.Invoice
                related.Suffix         			= InvoiceAndPurchaseOrderInformation.PayablesInvoice.Suffix
                related.CancelSequence 			= blank
				related.InvoiceDate				= InvoiceAndPurchaseOrderInformation.PayablesInvoice.InvoiceDate	

        PurchaseOrderRel
            one-to-one relation to PurchaseOrder
            Field Mapping uses symbolic key
                related.Company         		= InvoiceAndPurchaseOrderInformation.InvoiceCompany
                related.PurchaseOrder     		= InvoiceAndPurchaseOrderInformation.PurchaseOrder

        GeneralLedgerCompanyRel
            classic name is GLSYSTEM
            one-to-one relation to GeneralLedgerCompany
            required
            Field Mapping uses symbolic key
                related.Company = Asset.Company

		AnotherAssetItemRel
			one-to-many relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
			Instance Selection
				where (related.AssetItem != AssetItem)

		AssetDisposalRel2
			one-to-one relation to AssetDisposal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.AssetDisposal			= Asset

		DuplicateAssetBarCodeRel
			one-to-many relation to AssetItem
			Field Mapping uses Set4
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.BarCode	= BarCode
			Instance Selection
				where (related.BarCode entered
				and   (related.Asset		!= Asset
				or     related.AssetItem	!= AssetItem))

		DuplicateBarCodeRel
			one-to-many relation to AssetItem
			Field Mapping uses Set4
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.BarCode	= BarCode
			Instance Selection
				where (related.BarCode entered
				and   (related.Asset		!= Asset
				or     related.AssetItem	!= AssetItem)
				and    related.InvoiceAndPurchaseOrderInformation.PurchaseOrder != InvoiceAndPurchaseOrderInformation.PurchaseOrder
				and    related.ItemNumber		!= ItemNumber)

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode			= "AM"
				related.Company							= Asset.Company

		AssetInterfaceBarCodeRel
			one-to-many relation to AssetInterface
			Field Mapping uses symbolic key
				related.Company					= Asset.Company
			Instance Selection
				where (related.BarCode entered
				and    related.BarCode			= BarCode)

		AssetItemProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= AssetProject.Project


		UnreleasedAssetAdjustmentRel
			one-to-one relation to AssetAdjustment
			Field Mapping uses Set7
				related.Asset	= Asset

		AssetItemAdjustmentRel
			one-to-one relation to AssetItemAdjustment
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.AssetAdjustment			= UnreleasedAssetAdjustmentRel.AssetAdjustment
				related.AssetItem				= AssetItem

		ItemsByDateDescendingRel
			one-to-many relation to AssetItem
			Field Mapping uses ItemsByDateDescending
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset

		AssetItemTransferQuantityRel
            one-to-many relation to AssetItemTransfer
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.AssetTransfer			= Asset.last UnreleasedAssetTransfersRel.AssetTransfer

		LastAssetImpairmentRel
			one-to-many relation to AssetImpairment
			Field Mapping uses ByAssetImpairmentDescending
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset    				= Asset

		LocalItemFundRel
			one-to-one relation to AssetItemFund
			Field Mapping uses ByAssetFundItem
				related.Asset					= Asset
				related.RecordType				= 0
				related.AccountingEntity		= LocalAccountingEntity
				related.AccountingUnit			= LocalAccountingUnit
				related.Project					= LocalProject
				related.FinanceDimension1		= LocalFinanceDimension1
				related.FinanceDimension2		= LocalFinanceDimension2
				related.FinanceDimension3		= LocalFinanceDimension3
				related.FinanceDimension4		= LocalFinanceDimension4
				related.FinanceDimension5		= LocalFinanceDimension5
				related.FinanceDimension6		= LocalFinanceDimension6
				related.FinanceDimension7		= LocalFinanceDimension7
				related.FinanceDimension8		= LocalFinanceDimension8
				related.FinanceDimension9		= LocalFinanceDimension9
				related.FinanceDimension10		= LocalFinanceDimension10
				related.AssetItem				= AssetItem
		LeaseAssetRel
            one-to-many relation to Asset
            Field Mapping uses Set13
                related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
                related.AssetLease.LeaseCompany = Asset.Company
                related.AssetLease.Lease        = Asset.AssetLease.Lease
            Instance Selection
                where (related.Asset != Asset)

		AssetItemFundsRel
			one-to-many relation to AssetItemFund
			Field Mapping uses ByAssetItemFund
				related.Asset					= Asset
				related.AssetItem				= AssetItem
				related.RecordType		= 0

		AssetItemFundRel
			one-to-many relation to AssetItemFund
			Field Mapping uses ByAssetItemFund
				related.Asset					= Asset
				related.AssetItem				= AssetItem
			Instance Selection
				where (related.RecordType		= 0
				or     related.RecordType		= 2)










		AssetFundsRel
			one-to-many relation to AssetFund
			Field Mapping uses ByAssetFund
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset	 					= Asset
				related.RecordType					= 0

		PurchaseOrderCommentsRel
			one-to-many relation to PurchaseOrderComment
			Field Mapping uses 		ByCommentType
				related.Company			= InvoiceAndPurchaseOrderInformation.InvoiceCompany
				related.PurchaseOrder	= InvoiceAndPurchaseOrderInformation.PurchaseOrder
				related.CommentType		= "4"

		PurchaseOrderLineCommentsRel
			one-to-many relation to PurchaseOrderLineComment
			Field Mapping uses 		ByCommentType
				related.Company			= InvoiceAndPurchaseOrderInformation.InvoiceCompany
				related.PurchaseOrder	= InvoiceAndPurchaseOrderInformation.PurchaseOrder
				related.PurchaseOrderLine = InvoiceAndPurchaseOrderInformation.PurchaseOrderLine
				related.CommentType		= "4"

		AssetItemInventoryRel
        	one-to-many relation to AssetItemInventory
        	Field Mapping uses symbolic key
			Instance Selection
                where (related.AssetItemInventory.BarCode		 					= BarCode)

    Sets

        Set2
            indexed
            Sort Order
            	FinanceEnterpriseGroup
                Asset
                ItemNumber
                AssetItem

        Set3
            indexed
            Sort Order
            	FinanceEnterpriseGroup
                SerialNumber
                Asset
                AssetItem

        Set4
            indexed
            Sort Order
            	FinanceEnterpriseGroup
                BarCode
                Asset
                AssetItem









        Set6
            indexed
            Instance Selection
                where (POAssetObjectIDEntered)
            Sort Order
            	FinanceEnterpriseGroup
                POAssetObjectID

		ByModelNumber
			Sort Order
            	FinanceEnterpriseGroup
				ModelNumber
				Asset
				AssetItem

		ItemsByDateDescending
			Sort Order
            	FinanceEnterpriseGroup
				Asset
				PurchaseDate	descending
				AssetItem
				ItemNumber

        ByAssetManagementInterfaceResult
            indexed
            Sort Order
                FinanceEnterpriseGroup
				AssetManagementInterfaceResult
                Asset
                AssetItem

        ByAssetSummaryGroup
            indexed
            Sort Order
                FinanceEnterpriseGroup
       			AssetSummaryGroup
                Asset
                AssetItem

	Rule Blocks
		CreateAdjustment
	        if (PurchaseDate entered)
				if (Asset.Status.Released)
					constraint (AdjustmentDate entered)
						"AdjustmentDateIsRequired"
					invoke Released.Adjust Asset
						invoked.AdjustmentDate = AdjustmentDate
			if (Asset.AssetProcess.Adjustment)

				if (AssetItemAdjustmentRel not exists)


					invoke Create AssetItemAdjustment
						invoked.Asset						= Asset
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AssetAdjustment				= UnreleasedAssetAdjustmentRel.AssetAdjustment
						invoked.AssetItem					= AssetItem
						invoked.ItemNumber					= old ItemNumber
						invoked.ToItemNumber				= ItemNumber
						invoked.Description					= old Description
						invoked.ToDescription				= Description
						invoked.PurchaseDate				= old PurchaseDate
						invoked.ToPurchaseDate				= PurchaseDate
						invoked.ItemQuantity				= old ItemQuantity
						invoked.ToItemQuantity				= ItemQuantity
						invoked.BaseItemCost				= old BaseItemCost
						invoked.ToBaseItemCost				= BaseItemCost
						invoked.BaseItemTax					= old BaseItemTax
						invoked.ToBaseItemTax				= BaseItemTax
						invoked.TransactionItemCost			= old TransactionItemCost
						invoked.ToTransactionItemCost		= TransactionItemCost
						invoked.TransactionItemTax			= old TransactionItemTax
						invoked.ToTransactionItemTax		= TransactionItemTax
						invoked.BaseNumberOfDecimals		= old BaseNumberOfDecimals
						invoked.TransactionNumberOfDecimals	= old TransactionNumberOfDecimals
						invoked.PONumber					= old InvoiceAndPurchaseOrderInformation.PurchaseOrder
						invoked.ToPONumber					= InvoiceAndPurchaseOrderInformation.PurchaseOrder
						invoked.Vendor						= old InvoiceAndPurchaseOrderInformation.Vendor
						invoked.ToVendor					= InvoiceAndPurchaseOrderInformation.Vendor
						invoked.VendorName					= old VendorName
						invoked.ToVendorName				= VendorName
						invoked.PayablesInvoice				= old InvoiceAndPurchaseOrderInformation.PayablesInvoice
						invoked.ToPayablesInvoice			= InvoiceAndPurchaseOrderInformation.PayablesInvoice
						invoked.DistributionSequence		= old InvoiceAndPurchaseOrderInformation.DistributionSequence
						invoked.ModelNumber					= old ModelNumber
						invoked.ToModelNumber				= ModelNumber
						invoked.SerialNumber				= old SerialNumber
						invoked.ToSerialNumber				= SerialNumber
						invoked.AssetProject				= old AssetProject
						invoked.ToAssetProject				= AssetProject
						invoked.LocationDetail				= old LocationDetail
						invoked.ToLocationDetail			= LocationDetail
						invoked.BarCode						= old BarCode
						invoked.ToBarCode					= BarCode
						invoked.InventoryDate				= old InventoryDate
						invoked.ToInventoryDate				= InventoryDate
						invoked.ItemCondition				= old ItemCondition
						invoked.ToItemCondition				= ItemCondition
						invoked.GeographicalLatitude		= old GeographicalLatitude
						invoked.ToGeographicalLatitude		= GeographicalLatitude
						invoked.GeographicalLongitude		= old GeographicalLongitude
						invoked.ToGeographicalLongitude		= GeographicalLongitude
						invoked.GeographicalAltitude		= old GeographicalAltitude
						invoked.ToGeographicalAltitude		= GeographicalAltitude
						invoked.InvoiceCompany  			= old InvoiceAndPurchaseOrderInformation.InvoiceCompany
						invoked.ToInvoiceCompany			= InvoiceAndPurchaseOrderInformation.InvoiceCompany
						invoked.PurchaseOrderLine    		= old InvoiceAndPurchaseOrderInformation.PurchaseOrderLine
						invoked.ToPurchaseOrderLine   		= InvoiceAndPurchaseOrderInformation.PurchaseOrderLine
						invoked.AssetItemReferenceFields.ReferenceCompany			= old AssetItemReferenceFields.ReferenceCompany
						invoked.ToAssetItemReferenceFields.ReferenceCompany			= AssetItemReferenceFields.ReferenceCompany
						invoked.AssetItemReferenceFields.ReferenceVendor			= old AssetItemReferenceFields.ReferenceVendor
						invoked.ToAssetItemReferenceFields.ReferenceVendor			= AssetItemReferenceFields.ReferenceVendor
						invoked.AssetItemReferenceFields.ReferenceInvoice			= old AssetItemReferenceFields.ReferenceInvoice
						invoked.ToAssetItemReferenceFields.ReferenceInvoice			= AssetItemReferenceFields.ReferenceInvoice
						invoked.AssetItemReferenceFields.ReferencePurchaseOrder		= old AssetItemReferenceFields.ReferencePurchaseOrder
						invoked.ToAssetItemReferenceFields.ReferencePurchaseOrder	= AssetItemReferenceFields.ReferencePurchaseOrder
						invoked.AssetItemReferenceFields.ReferenceSequenceNumber	= old AssetItemReferenceFields.ReferenceSequenceNumber
						invoked.ToAssetItemReferenceFields.ReferenceSequenceNumber 	= AssetItemReferenceFields.ReferenceSequenceNumber
						invoked.AssetItemReferenceFields.ReferenceProject			= old AssetItemReferenceFields.ReferenceProject
						invoked.ToAssetItemReferenceFields.ReferenceProject			= AssetItemReferenceFields.ReferenceProject
						if (LocalAction = "A")
							initialize invoked.ItemNumber
							initialize invoked.Description
							initialize invoked.PurchaseDate
							initialize invoked.ItemQuantity
							initialize invoked.BaseItemCost
							initialize invoked.BaseItemTax
							initialize invoked.TransactionItemCost
							initialize invoked.TransactionItemTax
							initialize invoked.BaseNumberOfDecimals
							initialize invoked.TransactionNumberOfDecimals
							initialize invoked.PONumber
							initialize invoked.PORelease
							initialize invoked.POCode
							initialize invoked.Vendor
							initialize invoked.VendorName
							initialize invoked.PayablesInvoice
							initialize invoked.DistributionSequence
							initialize invoked.ModelNumber
							initialize invoked.SerialNumber
							initialize invoked.AssetProject
							initialize invoked.LocationDetail
							initialize invoked.BarCode
							initialize invoked.InventoryDate
							initialize invoked.ItemCondition
							initialize invoked.GeographicalLatitude
							initialize invoked.GeographicalLongitude
							initialize invoked.GeographicalAltitude
							initialize invoked.InvoiceCompany
							initialize invoked.PurchaseOrderLine
							initialize invoked.AssetItemReferenceFields
						else
						if (LocalAction = "D")
							initialize invoked.ToItemNumber
							initialize invoked.ToDescription
							initialize invoked.ToPurchaseDate
							initialize invoked.ToItemQuantity
							initialize invoked.ToBaseItemCost
							initialize invoked.ToBaseItemTax
							initialize invoked.ToTransactionItemCost
							initialize invoked.ToTransactionItemTax
							initialize invoked.ToPONumber
							initialize invoked.ToPORelease
							initialize invoked.ToPOCode
							initialize invoked.ToVendor
							initialize invoked.ToVendorName
							initialize invoked.ToPayablesInvoice
							initialize invoked.ToModelNumber
							initialize invoked.ToSerialNumber
							initialize invoked.ToAssetProject
							initialize invoked.ToLocationDetail
							initialize invoked.ToBarCode
							initialize invoked.ToInventoryDate
							initialize invoked.ToItemCondition
							initialize invoked.ToGeographicalLatitude
							initialize invoked.ToGeographicalLongitude
							initialize invoked.ToGeographicalAltitude
							initialize invoked.ToInvoiceCompany
							initialize invoked.ToPurchaseOrderLine
							initialize invoked.ToAssetItemReferenceFields
				else
					invoke Update AssetItemAdjustmentRel
						if (LocalAction = "D")
							initialize invoked.ToItemNumber
							initialize invoked.ToDescription
							initialize invoked.ToPurchaseDate
							initialize invoked.ToItemQuantity
							initialize invoked.ToBaseItemCost
							initialize invoked.ToBaseItemTax
							initialize invoked.ToTransactionItemCost
							initialize invoked.ToTransactionItemTax
							initialize invoked.ToPONumber
							initialize invoked.ToPORelease
							initialize invoked.ToPOCode
							initialize invoked.ToVendor
							initialize invoked.ToVendorName
							initialize invoked.ToPayablesInvoice
							initialize invoked.ToModelNumber
							initialize invoked.ToSerialNumber
							initialize invoked.ToAssetProject
							initialize invoked.ToLocationDetail
							initialize invoked.ToBarCode
							initialize invoked.ToInventoryDate
							initialize invoked.ToItemCondition
							initialize invoked.ToGeographicalLatitude
							initialize invoked.ToGeographicalLongitude
							initialize invoked.ToGeographicalAltitude
							initialize invoked.ToInvoiceCompany
							initialize invoked.ToPurchaseOrderLine
							initialize invoked.ToAssetItemReferenceFields
						else
							invoked.ToItemNumber				= ItemNumber
							invoked.ToDescription				= Description
							invoked.ToPurchaseDate				= PurchaseDate
							invoked.ToItemQuantity				= ItemQuantity
							invoked.ToBaseItemCost				= BaseItemCost
							invoked.ToBaseItemTax				= BaseItemTax
							invoked.ToTransactionItemCost		= TransactionItemCost
							invoked.ToTransactionItemTax		= TransactionItemTax
							invoked.ToPONumber					= InvoiceAndPurchaseOrderInformation.PurchaseOrder
							invoked.ToVendor					= InvoiceAndPurchaseOrderInformation.Vendor
							invoked.ToVendorName				= VendorName
							invoked.ToPayablesInvoice			= InvoiceAndPurchaseOrderInformation.PayablesInvoice
							invoked.ToModelNumber				= ModelNumber
							invoked.ToSerialNumber				= SerialNumber
							invoked.ToAssetProject				= AssetProject
							invoked.ToLocationDetail			= LocationDetail
							invoked.ToBarCode					= BarCode
							invoked.ToInventoryDate				= InventoryDate
							invoked.ToItemCondition				= ItemCondition
							invoked.ToGeographicalLatitude		= GeographicalLatitude
							invoked.ToGeographicalLongitude		= GeographicalLongitude
							invoked.ToGeographicalAltitude		= GeographicalAltitude
							invoked.ToInvoiceCompany  		    = InvoiceAndPurchaseOrderInformation.InvoiceCompany
							invoked.ToPurchaseOrderLine 		= InvoiceAndPurchaseOrderInformation.PurchaseOrderLine
							invoked.ToAssetItemReferenceFields.ReferenceCompany			= AssetItemReferenceFields.ReferenceCompany
							invoked.ToAssetItemReferenceFields.ReferenceVendor			= AssetItemReferenceFields.ReferenceVendor
							invoked.ToAssetItemReferenceFields.ReferenceInvoice			= AssetItemReferenceFields.ReferenceInvoice
							invoked.ToAssetItemReferenceFields.ReferencePurchaseOrder	= AssetItemReferenceFields.ReferencePurchaseOrder
							invoked.ToAssetItemReferenceFields.ReferenceSequenceNumber	= AssetItemReferenceFields.ReferenceSequenceNumber
							invoked.ToAssetItemReferenceFields.ReferenceProject			= AssetItemReferenceFields.ReferenceProject

				invoke Update UnreleasedAssetAdjustmentRel
					invoked.AssetAdjustmentTo.TotalItemQuantity			= Asset.TotalItemQuantity
					invoked.AssetAdjustmentTo.ItemTotalBaseCost			= Asset.ItemTotalBaseCost
					invoked.AssetAdjustmentTo.ItemTotalBaseTax			= Asset.ItemTotalBaseTax
					invoked.AssetAdjustmentTo.ItemTotalTransactionCost	= Asset.ItemTotalTransactionCost
					invoked.AssetAdjustmentTo.ItemTotalTransactionTax	= Asset.ItemTotalTransactionTax
					invoked.AssetAdjustmentTo.LastAssetItemPurchaseDate	= Asset.LastAssetItemPurchaseDate


		CalculateTotals
			initialize LocalNewQty
			initialize LocalNewBaseCost
			initialize LocalNewTaxBase
			initialize LocalNewCostTran
			initialize LocalNewTaxTran
			initialize UpdateFromInterface

			for each AssetItemRel
				LocalNewQty 						+= each.ItemQuantity
				LocalNewBaseCost					+= each.BaseItemCost
				LocalNewTaxBase						+= each.BaseItemTax
				LocalNewCostTran					+= each.TransactionItemCost
				LocalNewTaxTran						+= each.TransactionItemTax

			invoke UpdateFromAssetItem AssetRel
				invoked.CreateFromTransfer			= true
				invoked.PrmTotalItemQty				= LocalNewQty
				invoked.PrmTotalCostTran			= LocalNewCostTran
				invoked.PrmTotalItemCost			= LocalNewBaseCost
				invoked.PrmTotalItemTax				= LocalNewTaxBase
				invoked.PrmTotalTaxTran				= LocalNewTaxTran

		UpdateTransactionCosts
			initialize LocalTransactionItemCost
			LocalTransactionItemCost = (sum AssetItemRel.TransactionItemCost)
			LocalHasUnreleasedOrAdjustment = HasUnreleasedOrAdjustment
			LocalAssetTransactionsToUpdate = AssetTransactionsToUpdate
			for each AssetBookRel
				if (!each.Disposed)
					if (LocalBaseCostFromInterface entered)
						invoke UpdateFromAssetItem each
							if (!HasUnreleasedOrAdjustment)
								invoked.PrmAction			= LocalAction
							if (LocalProgram = "AddToBasis")
								invoked.PrmBasis                = each.Basis
							else
								invoked.PrmBasis			    = LocalTransactionItemCost
							if (LocalInvokingAction = "AssetAppend")
								invoked.PrmLocalProgram 		= "AssetAppend"
							if (Asset.HighPurchaseDate > PurchaseDate)
								invoked.PrmPurchaseDate		= Asset.HighPurchaseDate
							else
								invoked.PrmPurchaseDate		= PurchaseDate
							invoked.PrmCreateFromBatch 	= true
							invoked.PrmComputeFromBatch	= LocalComputeFromBatch
							if (LocalUpdateType 		= 1)
								invoked.PrmUpdateType 		= LocalUpdateType
								invoked.PrmPurchaseDate		= PurchaseDate
					else
						if (Asset.AssetLease entered
						and (Asset.AssetProcess.Adjustment
						or  Asset.AssetLease.Lease.IsARenewal))
								LocalAction = "A"
						if (!IsImpairmentDisposalInProgress)
							if (!each.Book.Impairment)
								invoke UpdateFromAssetItem each
									if (LocalProgram = "AddToBasis")
										invoked.PrmBasis                = each.Basis
									else
										invoked.PrmBasis			    = LocalTransactionItemCost
									if (LocalInvokingAction = "AssetAppend")
										invoked.PrmLocalProgram 		= "AssetAppend"

									if (!LocalHasUnreleasedOrAdjustment
									or (LocalAction = "A"
									and LocalAssetTransactionsToUpdate))
										invoked.PrmAction	= LocalAction
									if (LocalUpdateType = 1)
										invoked.PrmUpdateType = LocalUpdateType
									invoked.PrmUpdateFromInterface = UpdateFromInterface

					if (LocalComputeOption = "Y")
						invoke Update each
							invoked.ComputeOption = "Y"
							invoked.TransientProgram = "AssetCompute"
		UpdateHighPurchaseDate
			invoke NoEditUpdate Asset
				invoked.LastAssetItemPurchaseDate = HighPurchaseDate

		AdjustReleasedHighPurchaseDate
			invoke Released.Adjust Asset
				invoked.LastAssetItemPurchaseDate = HighPurchaseDate

		PostReleaseUpdateHighPurchaseDate
			invoke PostRelease.NoEditUpdate Asset
				invoked.LastAssetItemPurchaseDate = HighPurchaseDate

		UpdateLastItemPurchaseDates










			if (AssetControlTransactionRel exists)
				if (Asset.LastAssetItemPurchaseDate entered)
					invoke Update AssetControlTransactionRel
						invoked.TransactionDate = HighPurchaseDate
				else
				if (AssetItemRel not exists)
					invoke Delete AssetControlTransactionRel

			for each AssetTransactionRel
				if (each.TransactionStatus not = "R"
				and each.TransactionStatus not = "H")
					invoke Update each
						invoked.TransactionDate = Asset.LastAssetItemPurchaseDate
						if (Asset.Status.Unreleased)
							if (Asset.AssetCompanyRel.DefaultPostingDate.PurchaseDate)
								invoked.PostingDate = Asset.LastAssetItemPurchaseDate
			for each AssetBookTransactionsRel
				if (each.TransactionStatus not = "R"
				and each.TransactionStatus not = "H")
					if (Asset.Status.Released)
						include AdjustReleasedHighPurchaseDate
					if (Asset.Status.Unreleased)
						include UpdateHighPurchaseDate
						invoke Update each
							invoked.TransactionDate = Asset.LastAssetItemPurchaseDate
							if (Asset.AssetCompanyRel.DefaultPostingDate.PurchaseDate)
								invoked.PostingDate = Asset.LastAssetItemPurchaseDate
					if (Asset.Status.PostRelease)
						invoke Update each
							invoked.TransactionDate = Asset.LastAssetItemPurchaseDate

		RefreshItemFunds
			if (Asset.FundOverride)
				invoke Delete AssetItemFundsRel
				FundCount					= instance count of AssetFundsRel
				AllocatedPercent			= sum AssetFundsRel.PercentContribution
				initialize FundsAdded
				for each AssetFundsRel
					FundsAdded += 1
					invoke Create AssetItemFund

						invoked.AssetItem					= AssetItem
						if (FundsAdded < FundCount)
							invoked.TransactionAmount		=  TransactionItemCost * each.PercentContribution
							AllocatedAmount					+= TransactionItemCost * each.PercentContribution
						else
							if (AllocatedPercent = 1)
								invoked.TransactionAmount	= TransactionItemCost - AllocatedAmount
							else
								invoked.TransactionAmount	= TransactionItemCost * each.PercentContribution
						fill in fields from each
			else
				invoke RefreshAssetItemFunds AssetItemFundsRel







		ManualFundAllocation   
			if (Asset.FundOverride)
				FundCount 		= instance count of AssetFundsRel
				FundsAdded 		= 0
				TotalAssigned	= 0
				for each AssetFundsRel
					FundsAdded += 1
					LocalAccountingEntity 	= each.AccountingEntity
					LocalAccountingUnit		= each.AccountingUnit
					LocalProject			= each.Project
					LocalFund				= each.Fund
					LocalFinanceDimension1 	= each.FinanceDimension1
					LocalFinanceDimension2	= each.FinanceDimension2
					LocalFinanceDimension3	= each.FinanceDimension3
					LocalFinanceDimension4	= each.FinanceDimension4
					LocalFinanceDimension5	= each.FinanceDimension5
					LocalFinanceDimension6	= each.FinanceDimension6
					LocalFinanceDimension7	= each.FinanceDimension7
					LocalFinanceDimension8	= each.FinanceDimension8
					LocalFinanceDimension9	= each.FinanceDimension9
					LocalFinanceDimension10	= each.FinanceDimension10
					LocalAssetTotalItemCost	= Asset.ItemTotalTransactionCost
					if (FundsAdded = FundCount)
						LocalFundAmount		= (LocalAssetTotalItemCost - TotalAssigned)
					else
						LocalFundAmount		= each.PercentContribution * LocalAssetTotalItemCost
						TotalAssigned		+= LocalFundAmount
					invoke RefreshFundAmount each
						invoked.PrmPercentContribution		= each.PercentContribution
						invoked.PrmTransactionAmount 		= LocalFundAmount

					if (LocalItemFundRel exists)
						invoke Update LocalItemFundRel
							invoked.PercentContribution 	= each.PercentContribution  
							invoked.TransactionAmount		= LocalFundAmount
					else
						invoke CreateFromItem LocalItemFundRel
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.Asset					= Asset
							invoked.AssetItem				= AssetItem
							invoked.AccountingEntity		= LocalAccountingEntity
							invoked.AccountingUnit			= LocalAccountingUnit
							invoked.Project					= LocalProject
							invoked.Fund					= LocalFund
							invoked.FinanceDimension1 		= LocalFinanceDimension1
							invoked.FinanceDimension2		= LocalFinanceDimension2
							invoked.FinanceDimension3		= LocalFinanceDimension3
							invoked.FinanceDimension4		= LocalFinanceDimension4
							invoked.FinanceDimension5		= LocalFinanceDimension5
							invoked.FinanceDimension6		= LocalFinanceDimension6
							invoked.FinanceDimension7		= LocalFinanceDimension7
							invoked.FinanceDimension8		= LocalFinanceDimension8
							invoked.FinanceDimension9		= LocalFinanceDimension9
							invoked.FinanceDimension10		= LocalFinanceDimension10
							invoked.PercentContribution 	= each.PercentContribution
							invoked.TransactionAmount		= LocalFundAmount

		CreateAssetComments
			if (PurchaseOrderCommentsRel exists)
				include CreatePOSourceComments
			if (PurchaseOrderLineCommentsRel exists)
				include CreatePOLineSourceComments
		CreatePOSourceComments
			for each PurchaseOrderCommentsRel
				invoke Create AssetComment
        			invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
        			invoked.Asset					= Asset
        			invoked.Name					= each.CommentTitle
        			invoked.Type					= "S"
    				invoked.Comment 				= each.CommentText
    				invoked.Attachment 				= each.Attachment
		CreatePOLineSourceComments
			for each PurchaseOrderLineCommentsRel
				invoke Create AssetComment
        			invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
        			invoked.Asset					= Asset
        			invoked.Name					= each.CommentTitle
        			invoked.Type					= "S"
    				invoked.Comment 				= each.CommentText
    				invoked.Attachment 				= each.Attachment


	Actions
		Create is a Create Action
			valid when (ApprovalUpdateAllowed)


			Field Rules
				PurchaseDate
					required

			Entrance Rules
				if (Asset.Status.Released)
					constraint(AdjustmentDate entered)
						"AdjustmentDateIsRequired"
					invoke Released.Adjust Asset
						invoked.AdjustmentDate = AdjustmentDate
				if(Asset.AssetProcess.Adjustment
				and TransactionItemCost entered
				and !LocalComputeOption = "Y"
				and LocalProgram != "AddToBasis")
					confirmation required
						"AssetBookBasisHasBeenUpdated,PerformComputeOnAssetBookToUpdateDepreciation."
	        	if (LocationDetail entered)
	        		constraint (Asset.AssetLocation entered)
	        			"IfThereIsALocationDetailOnTheAssetItemThereMustBeALocationOnTheAsset"

			Action Rules
				BypassActiveCodeBlockEdit = true
				if (!LocalSkipAdjustmentEdit)
					constraint (AdjustmentAllowed)
						"CannotCreate;AssetCannotBeAdjusted"
				constraint (!Asset.Status.Disposed)
					"CannotAddItemToADisposedAsset"
				constraint (!Asset.AssetProcess.Transfer)
					"CannotAddItemToAssetsInTransferProcess"
				if (IsAssetInterface)
					invoke Update AssetBarCodeRel
						invoked.Asset = Asset
			Exit Rules
				if (Asset.FundAccounting)
					include RefreshItemFunds
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				if (Asset.Status.Released)
					include AdjustReleasedHighPurchaseDate
				if (Asset.Status.PostRelease)
					include PostReleaseUpdateHighPurchaseDate
				include UpdateLastItemPurchaseDates
				LocalAction = "A"
				include CreateAdjustment
				include UpdateTransactionCosts
				UpdateAllocation = true
				include CalculateTotals
				if(CreatePOComments)
					include CreateAssetComments

		CreateFromBarCodeInterface is a Create Action
			restricted
			Action Rules
				LocalSkipAdjustmentEdit = true
				invoke Create this instance

		CreateFromImport is a Create Action
			restricted

			Entrance Rules
	        	if (LocationDetail entered)
	        		constraint (Asset.AssetLocation entered)
	        			"IfThereIsALocationDetailOnTheAssetItemThereMustBeALocationOnTheAsset"

			Action Rules
				BypassActiveCodeBlockEdit = true
				constraint (AdjustmentAllowed)
					"CannotCreate;AssetCannotBeAdjusted"
				if (IsAssetInterface)
					invoke Update AssetBarCodeRel
						invoked.Asset = Asset
					UpdateFromInterface = 0
			Exit Rules
				if (Asset.FundAccounting)
					include RefreshItemFunds
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				include UpdateLastItemPurchaseDates
				include CalculateTotals


		CreateFromBatch is a Create Action
			restricted
			Parameters
				PrmLocalBaseCostFromInterface is an InternationalAmount
				PrmComputeFromBatch 		  is Boolean
			Action Rules
				BypassActiveCodeBlockEdit = true
				CreateFromBatch = true
				LocalComputeFromBatch = PrmComputeFromBatch
				LocalBaseCostFromInterface = PrmLocalBaseCostFromInterface
				invoke Create this instance
				if (Asset.FundAccounting)
					include RefreshItemFunds

		CreateFromDisposal is a Create Action
			restricted
			Action Rules
				BypassActiveCodeBlockEdit = true
			Exit Rules
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				if (Asset.Status.Released)
					include AdjustReleasedHighPurchaseDate

				include UpdateLastItemPurchaseDates
				include CalculateTotals

		CreateFromTransfer is a Create Action
			restricted
			Action Rules
				BypassActiveCodeBlockEdit = true
			Exit Rules
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				if (Asset.Status.Released)
					include AdjustReleasedHighPurchaseDate
				LocalCreateFromTransfer	= true
				include CalculateTotals

		CreateNonExistingAssetBarCode is a Set Action
			restricted
			default label is "CreateBarcodesForItems"
			run in background
			Parameters

			Parameter Rules

			Instance Selection
				where (BarCode entered
				and	Asset.AssetCompanyRel.CreateBarCodes)

			Sort Order

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules

					Exit Rules

				Instance Rules
					if (AssetBarCodeRel not exists)
						invoke Create AssetBarCodeRel

		Update is an Update Action
			valid when (ApprovalUpdateAllowed)
			Field Rules
		        PurchaseDate
		        	required
					if (Asset.Status.Released)
						constraint(AdjustmentDate entered)
							"AdjustmentDateIsRequired"
						invoke Released.Adjust Asset
							invoked.AdjustmentDate = AdjustmentDate

			Entrance Rules
	        	if (LocationDetail entered)
	        		constraint (Asset.AssetLocation entered)
	        			"IfThereIsALocationDetailOnTheAssetItemThereMustBeALocationOnTheAsset"

				if (TransferQuantity entered)
					if (AssetItemTransferRel not exists)
						invoke Create AssetItemTransfer
							fill in fields from this instance
							invoked.Asset			= Asset
							invoked.AssetTransfer	= last Asset.UnreleasedAssetTransfersRel.AssetTransfer
							invoked.ToItemQuantity	= TransferQuantity
					else
						invoke Update AssetItemTransferRel
							fill in fields from this instance
							invoked.ToItemQuantity	= TransferQuantity
				if (TransactionItemCost changed
				and !LocalComputeOption = "Y"
				and !LocalProgram = "AddToBasis")
					confirmation required
						"AssetBookBasisHasBeenUpdated,PerformComputeOnAssetBookToUpdateDepreciation."

			Action Rules
				BypassActiveCodeBlockEdit = true
				initialize LocalAction
				include CreateAdjustment

			Exit Rules
				if (BaseItemCost changed)
					if (FundAccounting)
						if (!Asset.FundOverride)
							if (AssetItemFundsRel exist)
								confirmation required
									"ItemCostUpdateMayRequireAnUpdateToTheItemsFundAllocations"







				if (CostChanged)


					include UpdateTransactionCosts
					UpdateAllocation = true
						include CalculateTotals
					if (LocalNewCostTran entered
					and AssetRel.ItemTotalTransactionCost entered)
						constraint(LocalNewCostTran <= AssetRel.ItemTotalTransactionCost)
							"TransactionItemCostExceedsTheControlTotals"
					include CalculateTotals
					if (Asset.FundAccounting)
						include RefreshItemFunds

				if (QuantityChanged)
					if (LocalNewQty entered
					and AssetRel.TotalItemQuantity entered)
						constraint(LocalNewQty <= AssetRel.TotalItemQuantity)
							"ItemQuantityExceedsTheControlTotals"

				if (PurchaseDate changed)
					if (Asset.Status.Unreleased)
						include UpdateHighPurchaseDate
					if (Asset.Status.Released)
						include AdjustReleasedHighPurchaseDate
					if (Asset.Status.PostRelease)
						include PostReleaseUpdateHighPurchaseDate
					include UpdateLastItemPurchaseDates

		AdjustmentUpdate is an Update Action
			restricted

			Local Fields
				LocalUpdateType is Numeric 1

			Field Rules
		        PurchaseDate
		        	required
					if (Asset.Status.Released)
						constraint(AdjustmentDate entered)
							"AdjustmentDateIsRequired"
						invoke Released.Adjust Asset
							invoked.AdjustmentDate = AdjustmentDate

			Entrance Rules
				LocalUpdateType	= TransientUpdateType

	        	if (LocationDetail entered)
	        		constraint (Asset.AssetLocation entered)
	        			"IfThereIsALocationDetailOnTheAssetItemThereMustBeALocationOnTheAsset"

				if (TransferQuantity entered)
					invoke Create AssetItemTransfer
						fill in fields from this instance
						invoked.Asset			= Asset
						invoked.AssetTransfer	= last Asset.UnreleasedAssetTransfersRel.AssetTransfer
						invoked.ToItemQuantity	= TransferQuantity

			Action Rules
				BypassActiveCodeBlockEdit = true
				initialize LocalAction
				include CreateAdjustment
				if (TransactionItemCost changed)
					if (Asset.FundAccounting)
						include RefreshItemFunds
			Exit Rules
				if (BarCode changed
				and old BarCode entered)
					LocalBarCode	= old BarCode
					invoke Delete OldAssetBarCodeRel
				include UpdateTransactionCosts
				UpdateAllocation = true
					include CalculateTotals
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				if (Asset.Status.Released)
					include AdjustReleasedHighPurchaseDate
				include UpdateLastItemPurchaseDates

				if (LocalNewQty entered
				and AssetRel.TotalItemQuantity entered)
					constraint(LocalNewQty <= AssetRel.TotalItemQuantity)
						"ItemQuantityExceedsTheControlTotals"
				if (LocalNewCostTran entered
				and AssetRel.ItemTotalTransactionCost entered)
					constraint(LocalNewCostTran <= AssetRel.ItemTotalTransactionCost)
						"TransactionItemCostExceedsTheControlTotals"

		NoEditUpdate is an Update Action
			restricted

			Action Rules
				BypassActiveCodeBlockEdit = true
				if (AssetItemFundsRel exists)
					invoke UpdateFromItemImportFund AssetItemFundsRel
						invoked.AssetManagementInterfaceResult	= AssetManagementInterfaceResult

		UpdateSummaryGroup is an Instance Action
			restricted
			Parameters
				AssetSummaryGroupParameter is like AssetSummaryGroup
					default label is "AssetSummaryGroup"

			Action Rules
				AssetSummaryGroup = AssetSummaryGroupParameter

		RefreshAssetItemFunds is an Instance Action
			restricted
			Action Rules
				include RefreshItemFunds


		TransferItem is an Instance Action
			valid when (!ItemTransferExists)
			Parameters
				PrmTransferQuantity		is an ItemQuantity

			Parameter Rules
				PrmTransferQuantity
					if ((Asset.last UnreleasedAssetTransfersRel.AssetTransfer.TransferQuantity - sum AssetItemTransferQuantityRel.ToItemQuantity) > ItemQuantity)
						default to ItemQuantity
					else
						default to (Asset.last UnreleasedAssetTransfersRel.AssetTransfer.TransferQuantity - sum AssetItemTransferQuantityRel.ToItemQuantity)

					required

			Action Rules
				BypassActiveCodeBlockEdit = true
				invoke Create AssetItemTransfer
					fill in fields from this instance
					invoked.Asset			= Asset
					invoked.AssetTransfer	= Asset.last UnreleasedAssetTransfersRel.AssetTransfer
					invoked.ToItemQuantity	= PrmTransferQuantity

		DisposeItem is an Instance Action

			Parameters
				PrmDisposalQuantity		is an ItemQuantity
					default label is "DisposalQuantity"

			Parameter Rules
				PrmDisposalQuantity
					if (AssetItemDisposalRel exists)
						constraint (!AssetItemDisposalRel exists)
							"ItemAlreadySelectedUpdateDisposalQuantityBySelectingItemFromDisplayedList"
					if (Asset.NumberOfAssetItems = 1)
						constraint (PrmDisposalQuantity = AssetDisposal.DisposalQuantity)
							"ItemDisposeQuantityMustEqualDisposalQuantity"

			Action Rules
				if (!AssetItemDisposalRel exists)
					invoke Create AssetItemDisposal
						fill in fields from this instance
						invoked.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
			        	invoked.Asset          						= Asset
			        	invoked.AssetDisposal   					= AssetDisposal
			        	invoked.AssetItem							= AssetItem
			        	invoked.AssetItemDisposal.ProcessSequence 	= AssetRel.LastAssetSequence
						invoked.DisposalQuantity					= PrmDisposalQuantity
						invoked.OriginalTransactionItemCost			= TransactionItemCost


		UpdateFromDisposal is an Instance Action
			restricted
			Parameters
				PrmItemQuantity				is an ItemQuantity
				PrmBaseItemCost				is an InternationalAmount
				PrmBaseItemTax				is an InternationalAmount
				PrmTransactionItemCost		is an InternationalAmount
				PrmTransactionItemTax		is an InternationalAmount
				PrmDisposalQuantity			is a TotalItemQuantity

			Action Rules
				BypassActiveCodeBlockEdit = true
				ItemQuantity		+= PrmItemQuantity
				BaseItemCost		+= PrmBaseItemCost
				BaseItemTax			+= PrmBaseItemTax
				TransactionItemCost	+= PrmTransactionItemCost
				TransactionItemTax	+= PrmTransactionItemTax
				DisposalQuantity	+= PrmDisposalQuantity
				include ManualFundAllocation
				if (Asset.FundAccounting)
					include RefreshItemFunds

		UpdateFromTransfer is an Instance Action
			restricted
			Parameters
				PrmItemQuantity				is an ItemQuantity
				PrmBaseItemCost				is an InternationalAmount
				PrmBaseItemTax				is an InternationalAmount
				PrmTransactionItemCost		is an InternationalAmount
				PrmTransactionItemTax		is an InternationalAmount
				PrmUpdateLocationDetail		is Boolean
				PrmLocation					is an AssetLocation
				PrmLocationDetail			is an AssetLocationDetail
				PrmCurrencyExchange			is Boolean

			Action Rules
				BypassActiveCodeBlockEdit = true
				ItemQuantity		+= PrmItemQuantity
				if (PrmCurrencyExchange)
					BaseItemCost		= PrmBaseItemCost
				else
					BaseItemCost		+= PrmBaseItemCost
				BaseItemTax			+= PrmBaseItemTax
				TransactionItemCost	+= PrmTransactionItemCost
				TransactionItemTax	+= PrmTransactionItemTax
				if (PrmUpdateLocationDetail)
					LocationDetail		= PrmLocationDetail
				include CalculateTotals
				if (Asset.FundAccounting)
					include RefreshItemFunds

		NonAdjustmentDelete is a Delete Action
			default label is "Delete"
			valid when (AssetAdjustmentRequired)
			Entrance Rules
				if (!Asset.Status.Unreleased)
					if (UnreleasedAssetAdjustmentRel exists)
						AdjustmentDate = UnreleasedAssetAdjustmentRel.AdjustmentDate
					else
						confirmation required
							"AdjustmentDateIsRequired;UseCurrentDateAsAdjustmentDate?"
						AdjustmentDate = current corporate date

					constraint (AnotherAssetItemRel exists)
						"AssetMustContainAtLeastOneItem"
					constraint (AdjustmentAllowed)
						"CannotDelete;AssetCannotBeAdjusted"
					LocalAction 	= "D"
					include CreateAdjustment

				if (Asset.Status.PostRelease
				and Asset.FundAccounting
				and !Asset.FundOverride)
					invoke UpdateAssetItemFund AssetItemFundsRel
						invoked.RecordType = 1
				invoke Delete AssetItemFundRel
			Exit Rules
				if (old BarCode entered)
					LocalBarCode = old BarCode
					invoke Delete OldAssetBarCodeRel
				include UpdateTransactionCosts
				UpdateAllocation = true
					include CalculateTotals
				if (Asset.Status.Unreleased)
					include UpdateHighPurchaseDate
				if (Asset.Status.Released)
					include AdjustReleasedHighPurchaseDate
				if (Asset.Status.PostRelease)
					include PostReleaseUpdateHighPurchaseDate
				include UpdateLastItemPurchaseDates

		UnreleasedDelete is a Delete Action
			default label is "Delete"
			valid when (ApprovalDeleteAllowed)
			Entrance Rules
				invoke DeleteFromAsset AssetItemFundsRel

			Exit Rules
				if (old BarCode entered)
					LocalBarCode = old BarCode
					invoke Delete OldAssetBarCodeRel
				include UpdateTransactionCosts
				include UpdateHighPurchaseDate
				include UpdateLastItemPurchaseDates
				include CalculateTotals

		Delete is a Delete Action

			restricted
			Parameters
				PrmAdjustmentDate	is Date
					default label is "AdjustmentDate"
				PrmUpdateType		is Numeric 1
				PrmDisposalReset	is Boolean
			Parameter Rules
				PrmAdjustmentDate
					if (UnreleasedAssetAdjustmentRel exists)
						PrmAdjustmentDate = UnreleasedAssetAdjustmentRel.AdjustmentDate
					else
						PrmAdjustmentDate = current corporate date
					required

			Entrance Rules

				if (!PrmDisposalReset)
					constraint (AnotherAssetItemRel exists)
						"AssetMustContainAtLeastOneItem"
					constraint (AdjustmentAllowed)
						"CannotDelete;AssetCannotBeAdjusted"
					LocalAction 	= "D"
					LocalUpdateType = PrmUpdateType
					AdjustmentDate 	= PrmAdjustmentDate
					include CreateAdjustment

			Exit Rules
				if (!PrmDisposalReset)
					if (old BarCode entered)
						LocalBarCode = old BarCode
						invoke Delete OldAssetBarCodeRel
					include UpdateTransactionCosts
					if (Asset.Status.Unreleased)
						include UpdateHighPurchaseDate
					if (Asset.Status.Released)
						include AdjustReleasedHighPurchaseDate
					if (Asset.Status.PostRelease)
						include PostReleaseUpdateHighPurchaseDate
					include UpdateLastItemPurchaseDates
					include CalculateTotals
				if (Asset.Status.Unreleased
				or Asset.Status.PostRelease)
					invoke Delete AssetItemFundRel



		RenewalAdditionEntry is an Instance Action
			restricted
			Parameters
				PrmLeaseRenewal				is AlphaUpper size 25
				PrmBaseItemCost				is an InternationalAmount
				PrmTransactionItemCost		is an InternationalAmount
				PrmAdjustmentDate			is Date

			Action Rules
				BaseItemCost		+= PrmBaseItemCost
				TransactionItemCost	+= PrmTransactionItemCost
				invoke Released.Adjust Asset
					invoked.AdjustmentDate = PrmAdjustmentDate

		ForceDelete is a Delete Action
			restricted

		Purge is a Purge Action
			bypass relational integrity rules
			restricted
