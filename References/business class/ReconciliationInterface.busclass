ReconciliationInterface is a BusinessClass
	owned by reconciliation
	prefix is RINT

	Ontology
		symbolic key is ReconciliationInterface
		
	Persistent Fields
		DetailLineNumber				is Numeric 6
		TransactionNumber				is Numeric 15
		TransactionDate					is an ExchangeDate
		PostingDate
		CurrencyTable
		Currency						is a FromCurrency
		TransactionAmount				is a FinanceCurrencyAmountGroup
		AmountType						is Numeric 1
			default label is "Sign"
			States
				Debit	value is 1
				Credit	value is 2
		ReconcilingAmount				is a FinanceCurrencyAmountGroup
		SignedAmount					is a FinanceCurrencyAmountGroup
			default label is "Amount"
		UnitsAmount
		SystemCode						is a GeneralLedgerSystemCode
			default label is "SystemCode"
		SourceCode						is a GeneralLedgerEvent
			default label is "Event"
		Reference						is Alpha 10
		Description						is Alpha 100
		Operator						is AlphaUpper 10
		SelectedForMatch				is Boolean
		Reconciled						is Boolean
		LoadedIntoReconciliation		is Boolean
		NonAccountFunctionalCurrency	is a Currency
			default label is "FunctionalCurrency"
		
	Transient Fields
		ReconciliationFromEntity		is an AccountingEntity
    		derive value from ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity
		NonAccountFunctionalAmount		is a FromCurrencyExchangeGroup
		
	Derived Fields

		ReconciliationCodeBlock is a DerivedField
			type is Alpha 100
			return ReconciliationAccount.ReconciliationCodeBlock
			
		AccountingEntity is a DerivedField
			type is like AccountingEntity
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity 
		
		AccountingUnit is a DerivedField
			type is like AccountingUnit
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingUnit
		
		GeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
			return ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount
		
		Project is a DerivedField
			type is like Project
			return ReconciliationAccount.ReconciliationCodeBlock.Project
			
		FinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension1
		
		FinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension2
			
		FinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension3
			
		FinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension4
			
		FinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension5
			
		FinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension6
		
		FinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension7
			
		FinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension8
			
		FinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension9
			
		FinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension10

			
	Relations
		TransactionReconDetailRel is a TransactionReconDetail set

	Sets
		ByLoadedIntoReconciliation
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				LoadedIntoReconciliation
				ReconciliationInterface

		ByReconciliationCodeBlock
			duplicates
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity
				ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount
				ReconciliationAccount.ReconciliationCodeBlock.AccountingUnit
	            ReconciliationAccount.ReconciliationCodeBlock.Project
	            ReconciliationAccount.DimensionCodeValue
				ReconciliationAccount.ReconciliationGroup

		ByNonAccountReconciliation
			duplicates
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount.NonAccountReconciliation

    Conditions
		ReconciliationInterfaceExists
			when (ReconciliationInterface exists)
		
		DisplayReconciliationAccountSelect
			when (!ReconciliationInterfaceExists 
			and   ReconciliationAccountStructure.ReconciliationType.Account)
			
		DisplayReconciliationNonAccountSelect
			when (!ReconciliationInterfaceExists
			and   ReconciliationAccountStructure.ReconciliationType.NonAccount)
					
	Field Rules
		TransactionDate
			required
				"TransactionDateIsRequired"
		
			if (TransactionDate changed)
				TransactionAmount.ExchangeDate = TransactionDate
				SignedAmount.ExchangeDate = TransactionDate
		
		PostingDate
			default to TransactionDate
					
		CurrencyTable
			initial value is ReconciliationManagementGroup.FinanceEnterpriseGroup.CurrencyTable
			default to ReconciliationManagementGroup.FinanceEnterpriseGroup.CurrencyTable
		
		Currency
			initial value is ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency
			default to ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency
		
			required
				"CurrencyIsRequired"
			
		TransactionAmount
			TransactionAmount.ExchangeDate = TransactionDate
			if (SignedAmount.CurrencyAmount < 0)
				TransactionAmount.CurrencyAmount = (SignedAmount.CurrencyAmount * -1)
			else
				TransactionAmount.CurrencyAmount = SignedAmount.CurrencyAmount
					
		SignedAmount
			constraint (SignedAmount.CurrencyAmount entered)
				"SignedAmountIsRequired"
			
			SignedAmount.ExchangeDate = TransactionDate
			if (SignedAmount.CurrencyAmount < 0)
				AmountType = AmountType.Credit
			else
			if (SignedAmount.CurrencyAmount > 0)
				AmountType = AmountType.Debit
			else
				initialize AmountType

		NonAccountFunctionalCurrency
			default to ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity.FunctionalCurrency
			default to Currency
			if (ReconciliationAccountStructure.ReconciliationType.NonAccount)
				NonAccountFunctionalAmount.FromCurrency						 = Currency
				NonAccountFunctionalAmount.TransactionAmount				 = SignedAmount.CurrencyAmount
				NonAccountFunctionalAmount.BaseAmount.ToCurrency			 = NonAccountFunctionalCurrency
				SignedAmount.FunctionalAmount.EnteredCurrencyRate 			 = NonAccountFunctionalAmount.BaseAmount.OutputCurrencyRate
				SignedAmount.FunctionalAmount.EnteredCurrencyAmount			 = NonAccountFunctionalAmount.BaseAmount.OutputCurrencyAmount
				TransactionAmount.FunctionalAmount.EnteredCurrencyRate 		 = NonAccountFunctionalAmount.BaseAmount.OutputCurrencyRate
				if (SignedAmount.CurrencyAmount < 0)
					TransactionAmount.FunctionalAmount.EnteredCurrencyAmount = (NonAccountFunctionalAmount.BaseAmount.OutputCurrencyAmount * -1)
				else
					TransactionAmount.FunctionalAmount.EnteredCurrencyAmount = NonAccountFunctionalAmount.BaseAmount.OutputCurrencyAmount
				
  	Actions
  		Create is a Create Action
  			Action Rules
  				constraint (!ReconciliationAccount.LevelType.Group)
  					"TransactionInterfaceRecordsMustBeCreatedForTheReconciliationAccountWithinTheReconciliationGroup"
  							
  		Update is an Update Action
			valid when (!LoadedIntoReconciliation)
			Action Rules
				if (SignedAmount.CurrencyAmount changed)
					SignedAmount.KeepRateOnly = true

					if (SignedAmount.CurrencyAmount < 0)
						TransactionAmount.CurrencyAmount = (SignedAmount.CurrencyAmount * -1)
						TransactionAmount.KeepRateOnly = true
					else
						TransactionAmount.CurrencyAmount = SignedAmount.CurrencyAmount
						TransactionAmount.KeepRateOnly = true
					
				if (Currency changed
				or  TransactionDate	changed)
					SignedAmount.ExchangeDate = TransactionDate
					initialize SignedAmount.FunctionalAmount
					initialize SignedAmount.AlternateAmount
					initialize SignedAmount.AlternateAmount2
					initialize SignedAmount.AlternateAmount3
					initialize SignedAmount.ToFunctionalAmount
					initialize SignedAmount.ToAlternateAmount
					initialize SignedAmount.ToAlternateAmount2
					initialize SignedAmount.ToAlternateAmount3
					initialize SignedAmount.ProjectAmount
					initialize SignedAmount.ReportAmount1
					initialize SignedAmount.ReportAmount2
					initialize SignedAmount.ReportAmount3
					initialize SignedAmount.ReportAmount4
					initialize SignedAmount.ReportAmount5
					
					initialize TransactionAmount
					TransactionAmount.ExchangeDate = TransactionDate
					if (SignedAmount.CurrencyAmount < 0)
						TransactionAmount.CurrencyAmount = (SignedAmount.CurrencyAmount * -1)
					else
						TransactionAmount.CurrencyAmount = SignedAmount.CurrencyAmount
					
		FastUpdate is an Update Action
			restricted
			bypass field rules
			 
  		Delete is a Delete Action
			valid when (!LoadedIntoReconciliation)
			
		Purge is a Purge Action
			restricted
		
		ChangeLoadedIntoReconciliationFlag is a Set Action
			restricted
  			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
						
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	   ReconciliationAccount = PrmReconciliationAccount
				and    LoadedIntoReconciliation)
			
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				ReconciliationInterface
				
			Action Rules
				Instance Rules
					LoadedIntoReconciliation = false
			
		ReconcileInterfacedTransaction is an Instance Action
  			restricted
  			Parameters
  				PrmReconciled			is Boolean
  				PrmReconcilingAmount	is a FinanceCurrencyAmountGroup

			Action Rules
				Reconciled = PrmReconciled
  				ReconcilingAmount = PrmReconcilingAmount
  		
		LoadIntoReconciliation is a Set Action
			restricted
			completion message is "LoadIntoReconciliationComplete"
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				PrmThruDate							is Date
				
			Parameter Rules
				PrmReconciliationManagementGroup
					required
				PrmReconciliationAccountStructure
					required

			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and	  (!PrmReconciliationAccount entered
				or	   ReconciliationAccount = PrmReconciliationAccount)
				and    !LoadedIntoReconciliation
				and	   PostingDate <= PrmThruDate)
			
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				LoadedIntoReconciliation
				ReconciliationInterface

			Action Rules
				Instance Rules
					invoke Create TransactionReconDetail
						fill in fields from this instance 
						invoked.ReconTransactionType 				= 2 
						invoked.TransactionAmount.KeepRateAndAmount	= true
						invoked.ReconcilingAmount.KeepRateAndAmount	= true
						invoked.SignedAmount.KeepRateAndAmount		= true
						
					LoadedIntoReconciliation = true
