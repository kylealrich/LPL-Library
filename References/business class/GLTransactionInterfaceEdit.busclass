GLTransactionInterfaceEdit is a BusinessClass
	owned by GeneralLedger
	prefix is GLTIE
	default label is "GlobalLedgerTransactionInterfaceEdit"

	Ontology
		symbolic key is GLTransactionInterfaceEdit
		
	Patterns
		enable explicit context override
		disable Auditing
		disable EffectiveDated
		disable AsOfDateProcessing			

	Persistent Fields
		FinanceEnterpriseGroup
		JournalizeGroup
		AccountingEntity
        Status							is Numeric 1
            States
                Unreleased				value is 0
                Released	   			value is 1
                History					value is 9
		PostingDate
		ControlDocumentNumber			is Alpha up to 30
		FinanceCodeBlock				is a TransactionCodeBlock
		DimensionCode
		OrganizationKeyFields			is Alpha 75
    	System							is a GeneralLedgerSystemCode
    	JournalCode						is AlphaUpper 6
		GeneralLedgerEvent
			default label is "GlobalLedgerEvent"		
        TransactionDate					is an ExchangeDate
        CurrencyCode					is a FromCurrency
        TransactionAmount				is a CurrencyAmount 

		ReportCurrencyAmount			is a FinanceCurrencyAmount
		AutoReverse						is Boolean
		Resource						is an Employee
			sql name is "FinanceResource"
		VendorGroupAndVendor 			is a GlonlyVendorGroupAndVendor
        Reference
		Description						is Alpha up to 60
		DocumentNumber					is Alpha up to 30
        UnitsAmount						
		APPaid							is AlphaUpper 1
			States
				EligibleForBilling      value is blank
				HoldForBilling          value is "H" 


        BaseZoneAccountingUnit			is a AccountingUnit
        BaseZoneDimension1				is a FinanceDimension1
		ZoneSystemKeyFields				is Alpha 45
        ZoneAccountingUnit				is a AccountingUnit
        	context of FinanceCodeBlock.ToAccountingEntity
        ZoneDimension1					is a FinanceDimension1
		ZoneFields						is Alpha 40
		PostingDateJournalCodeKey		is AlphaUpper 14
		PrimaryLedger					is a Ledger
		Billed							is Numeric 1
            States
                Unprocessed				value is 0
                Invoiced				value is 1

                Processed				value is 3
                Distributed				value is 4
                Hold					value is 5
 		RevenueRecognized				is Numeric 1
            States
                Unprocessed				value is 0
                Processed				value is 1
                Draft					value is 2
                Hold					value is 3
 		Capitalize						is Numeric 1
			States
				Unprocessed 			value is 0
				Processed				value is 1
				Hold					value is 2
		LaborDistribution				is Numeric 1
			States
				Unprocessed				value is 0
				Processed				value is 1
				Distributed				value is 2
#ifdef module ap				
		ExpenseManagementInterfaceExpenseType
#endif			
#ifndef module ap				
		ExpenseManagementInterfaceExpenseType	is Alpha size 20
#endif			





	Context Fields
		BypassStructureRelationEdit
		BypassUnitAndAmountEdit
		SearchDateRange					is a DateRange
		PostingDateRange
		CurrencyTable
		SearchAccountingEntity
		SearchAccountingUnit
		SearchSystemCode
		SearchAccount
#ifdef module ap		
		SearchVendor
		ExcludeAccountingUnit		
		ExcludeAccount
		ExcludeExpenseInvoices
#endif		
		
	Derived Fields
		DerivedPostingDateJournalCodeKey is a StringField
			type is AlphaUpper 14
			restricted
			PostingDate
			JournalCode
		InterEntityPayablesAccount			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.InterEntityPayables 
			if (SystemAccountRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount = SystemAccount.InterEntityPayablesAndReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount
		InterEntityReceivablesAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount = SystemAccount.InterEntityReceivables 
			if (SystemAccountRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount = SystemAccount.InterEntityPayablesAndReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount











		SystemCodeFromJournalizeGroup		is a DerivedField
			type is Alpha 2
			restricted
			return JournalizeGroup[1:2] 
		DerivedJournalDescription			is a MessageField
			restricted
			"JournalCreatedByRunGroup<JournalizeGroup>"
		ZoneSystemKeyString					is a StringField
			type is Alpha 45
			restricted
			System
			":"
			BaseZoneAccountingUnit
			":"
			BaseZoneDimension1
		ZoneFieldsString					is a StringField
			type is Alpha 40
			restricted
			ZoneAccountingUnit
			":"
			ZoneDimension1
		DerivedBaseZoneAccountingUnit		is a DerivedField
			type is like AccountingUnit 
			restricted
			if (AccountingEntity.AccountingUnitZoneBalancing)
				if (AUZoneAccountingUnitRel.ZoneAccountingUnit entered)
					return AUZoneAccountingUnitRel.ZoneAccountingUnit
				else
					return DefaultZoneAccountingUnitRel.ZoneAccountingUnit
		DerivedBaseZoneFinanceDimension		is a DerivedField
			type is like FinanceDimension1
			restricted
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				if (FinDim1ZoneDimension1Rel.ZoneDimension entered)
					return FinDim1ZoneDimension1Rel.ZoneDimension
				else
					return DefaultZoneFinanceDimension1Rel.ZoneDimension
		DerivedZoneAccountingUnit			is a DerivedField
			type is like AccountingUnit 
			restricted
			if (AUZoneAccountingUnitRel.ZoneAccountingUnit entered)
				return AUZoneAccountingUnitRel.ZoneAccountingUnit
			else
		        return EntityZoneAccountingUnitRel.AccountingUnit
		DerivedZoneFinanceDimension			is a DerivedField
			type is like FinanceDimension1
			restricted
			if (FinDim1ZoneDimension1Rel.ZoneDimension entered)
        		return FinDim1ZoneDimension1Rel.ZoneDimension
		    else
        		return EnterpriseZoneFinanceDimension1Rel.FinanceDimension1

	Transient Fields
		ZoneFinanceCodeBlock				is a FinanceCodeBlock
		JournalByJournalCode
		BypassNegativeRateEdit
		CostCenter							is like AccountingUnit
		
	Local Fields
		LocalSystemAccount				is a SystemAccount
		LocalAccountingEntity			is like AccountingEntity
		LocalCurrencyTable				is a CurrencyTable
		LocalCurrencyCalculationGroup	is a CurrencyCalculationGroup		
		LocalClosePeriod				is a GeneralLedgerClosePeriod
		LocalJournalControl				is like GeneralLedgerJournalControl
		LocalCurrencyCode				is like Currency
		LocalSystemCode					is like GeneralLedgerSystemCode
		LocalTransactionDate			is Date
		LocalAutoReverse				is Boolean
		LocalPostAccountingEntity		is like ToAccountingEntity
		LocalBypassStructureRelationEdit is a BypassStructureRelationEdit
	    LocalInstZoneAccountingUnit		is like AccountingUnit
		LocalInstZoneDimension1			is a FinanceDimension1
	    LocalInstAccountingUnit			is like AccountingUnit
		LocalInstFinanceDimension1		is like FinanceDimension1
		LocalEntity						is a AccountingUnitTopNodeGroup

		LocalGeneralLedgerChartAccount		is a GeneralLedgerChartAccount


	Sets
				
	Relations
		JournalControlExistsRel
			one-to-one relation to GeneralLedgerJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalClosePeriod
				related.GeneralLedgerJournalControl			= LocalJournalControl
		JournalControlRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
		GLCurrencyJournalControlRel
			one-to-one relation to GLCurrencyJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalClosePeriod
				related.GeneralLedgerJournalControl			= LocalJournalControl
				related.FromCurrency						= LocalCurrencyCode
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SystemAccount						= LocalSystemAccount
		SystemAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses BySystemAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= LocalAccountingEntity
		InterEntityAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByInterEntityAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= LocalAccountingEntity





		FinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension1Structure			= FinanceEnterpriseGroup.EnterpriseDim1Structure
		FinanceDimension2Rel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension2Structure			= FinanceEnterpriseGroup.EnterpriseDim2Structure
		FinanceDimension3Rel
			one-to-one relation to FinanceDimension3Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension3Structure			= FinanceEnterpriseGroup.EnterpriseDim3Structure
		FinanceDimension4Rel
			one-to-one relation to FinanceDimension4Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension4Structure			= FinanceEnterpriseGroup.EnterpriseDim4Structure
		FinanceDimension5Rel
			one-to-one relation to FinanceDimension5Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension5Structure			= FinanceEnterpriseGroup.EnterpriseDim5Structure
		FinanceDimension6Rel
			one-to-one relation to FinanceDimension6Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension6Structure			= FinanceEnterpriseGroup.EnterpriseDim6Structure
		FinanceDimension7Rel
			one-to-one relation to FinanceDimension7Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension7Structure			= FinanceEnterpriseGroup.EnterpriseDim7Structure
		FinanceDimension8Rel
			one-to-one relation to FinanceDimension8Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension8Structure			= FinanceEnterpriseGroup.EnterpriseDim8Structure
		FinanceDimension9Rel
			one-to-one relation to FinanceDimension9Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension9Structure			= FinanceEnterpriseGroup.EnterpriseDim9Structure
		FinanceDimension10Rel
			one-to-one relation to FinanceDimension10Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension10Structure			= FinanceEnterpriseGroup.EnterpriseDim10Structure
		GLInterEntityTotalUpdateRel
			one-to-one relation to GLInterEntityTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalClosePeriod
				related.GeneralLedgerJournalControl			= LocalJournalControl
				related.GLInterEntityTotal.ToAccountingEntity	= LocalPostAccountingEntity
				related.GLInterEntityTotal.CurrencyCode		= LocalCurrencyCode
				related.GLInterEntityTotal.AutoReverse		= LocalAutoReverse
		GLInterEntityTotalRel
			one-to-many relation to GLInterEntityTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= LocalAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalClosePeriod
				related.GeneralLedgerJournalControl			= LocalJournalControl
			Instance Selection
				where (related.Status.Unreleased)
		EntityZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByEntityZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= LocalAccountingEntity
		DefaultZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByDefaultZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingUnitStructure		= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity			= LocalAccountingEntity
		AUZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingUnitStructure 	= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit		    	= LocalInstAccountingUnit
		EnterpriseZoneFinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses ByEnterpriseZoneDimensionInStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure
		FinDim1ZoneDimension1Rel
			one-to-many relation to FinanceDimension1Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure
				related.FinanceDimension1			= LocalInstFinanceDimension1
		DefaultZoneFinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses ByDefaultZoneDimensionInStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure
		GeneralLedgerZoneTotalRel
			one-to-one relation to GeneralLedgerZoneTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.AccountingEntity							= LocalAccountingEntity
				related.GeneralLedgerClosePeriod					= LocalClosePeriod
				related.GeneralLedgerJournalControl					= LocalJournalControl
				related.GeneralLedgerZoneTotal.Currency				= LocalCurrencyCode
				related.GeneralLedgerZoneTotal.ZoneAccountingUnit	= LocalInstZoneAccountingUnit
				related.GeneralLedgerZoneTotal.ZoneFinanceDimension	= LocalInstZoneDimension1
		GLTransactionRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.AccountingEntity							= LocalAccountingEntity
				related.GeneralLedgerClosePeriod					= LocalClosePeriod
				related.GeneralLedgerJournalControl					= LocalJournalControl
		SystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AccountingEntity	 		= LocalAccountingEntity
				related.GeneralLedgerSystemCode		= System
		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup          = FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode         = LocalSystemCode
#ifdef module ap
		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroupAndVendor.VendorGroup
				related.Vendor							= VendorGroupAndVendor.Vendor
#endif
















				
 	Conditions
		GLProcessingSystems
			restricted
			when (System 	= "GL"
			or    System	= "RJ"
			or    System 	= "CA")
		ExpenseReportSystems
			restricted
			when (System = "AP"
			or    System = "IC"
			or    System = "PO")
		SystemTransactionEvents
			restricted
			when (GeneralLedgerEvent = "CB"
			or    GeneralLedgerEvent = "AB"
			or    GeneralLedgerEvent = "ZB"
			or    GeneralLedgerEvent = "ES")
		AccountingUnitSelected
			restricted
        	when (FinanceEnterpriseGroup.AccountingUnitLabel entered)
		ProjectEntry
			restricted
        	when (FinanceEnterpriseGroup.ProjectLabel entered)
		FinanceDimension1Entry
			restricted
        	when (FinanceEnterpriseGroup.FinanceDimension1Label entered)
        WithinPostingDateRange
        	restricted
        	when (FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup
        	and  (!PostingDateRange entered
        	or   (PostingDateRange entered
        	and   PostingDate within PostingDateRange)))
		WithinSearchDateRange	
			restricted
			when (Resource entered
			and  (System = "PR"
			or    System = "PS")
			and   TransactionDate within SearchDateRange)
		ProcessedWithinSearchDateRange	
			restricted
			when (Resource entered
			and   System = "PR"
			and   TransactionDate within SearchDateRange
			and	  Status.History
			and   IsContextFEG)



 		IsContextFEG
 			restricted
 			when (FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

  	Field Groups



			
 	Field Rules
 		FinanceEnterpriseGroup
			required
 		AccountingEntity
			if (AccountingEntity.ValidSystems entered
			and !GLProcessingSystems)
				constraint (System within AccountingEntity.ValidSystems)
					"InvalidSystemFor<FinanceEnterpriseGroup.AccountingEntityLabel>"
			required
		DimensionCode
			force default to FinanceCodeBlock.DimensionCode
		BaseZoneAccountingUnit
			if (AccountingEntity.AccountingUnitZoneBalancing)
				LocalAccountingEntity		= AccountingEntity
				initialize LocalInstAccountingUnit
				if (ZoneFinanceCodeBlock.AccountingUnit entered)
					LocalInstAccountingUnit		= ZoneFinanceCodeBlock.AccountingUnit
	        	force default to DerivedBaseZoneAccountingUnit
	        else
	        	force default to blank 
		BaseZoneDimension1
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				initialize LocalInstFinanceDimension1
				if (ZoneFinanceCodeBlock.FinanceDimension1 entered)
					LocalInstFinanceDimension1	= ZoneFinanceCodeBlock.FinanceDimension1
	        	force default to DerivedBaseZoneFinanceDimension
	        else
	        	force default to blank 
        ZoneAccountingUnit
			if (FinanceCodeBlock.ToAccountingEntity.AccountingUnitZoneBalancing)
				LocalAccountingEntity		= FinanceCodeBlock.ToAccountingEntity
				LocalInstAccountingUnit		= FinanceCodeBlock.AccountingUnit
		        force default to DerivedZoneAccountingUnit
		    else
	        	force default to blank 
        ZoneDimension1
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				LocalInstFinanceDimension1	= FinanceCodeBlock.FinanceDimension1
				force default to DerivedZoneFinanceDimension
		    else
	        	force default to blank 
		OrganizationKeyFields
			force default to FinanceCodeBlock.OrganizationString
		ZoneSystemKeyFields
			force default to ZoneSystemKeyString
		ZoneFields
			force default to ZoneFieldsString
		TransactionDate
			required
		PostingDate
			required
		TransactionAmount
			if (TransactionAmount changed)
				initialize ReportCurrencyAmount
		CurrencyCode
			default to AccountingEntity.FunctionalCurrency		
			required
		ReportCurrencyAmount
    		if (CurrencyTable not entered)
 				LocalCurrencyTable				= FinanceEnterpriseGroup.CurrencyTable
 			else
 				LocalCurrencyTable				= CurrencyTable
			required

		APPaid
			if (!FinanceCodeBlock.Project entered)
				initialize APPaid
		GeneralLedgerEvent
			if (FinanceCodeBlock.Ledger.CurrencyLedger)
				constraint (GeneralLedgerEvent = "GR" or GeneralLedgerEvent = "CT")
					"<GeneralLedgerEvent>EventNotValidForLedger"
			required
		PostingDateJournalCodeKey
			if (JournalByJournalCode)
				PostingDateJournalCodeKey = DerivedPostingDateJournalCodeKey
			else
				PostingDateJournalCodeKey = PostingDate
		PrimaryLedger
			default to FinanceCodeBlock.Ledger
		FinanceCodeBlock
			if (CostCenter entered)
				if (FinanceEnterpriseGroup.BODCostCenter.AccountingUnit)
					FinanceCodeBlock.AccountingUnit = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension1)
					FinanceCodeBlock.FinanceDimension1 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension2)
					FinanceCodeBlock.FinanceDimension2 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension3)
					FinanceCodeBlock.FinanceDimension3 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension4)
					FinanceCodeBlock.FinanceDimension4 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension5)
					FinanceCodeBlock.FinanceDimension5 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension6)
					FinanceCodeBlock.FinanceDimension6 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension7)
					FinanceCodeBlock.FinanceDimension7 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension8)
					FinanceCodeBlock.FinanceDimension8 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension9)
					FinanceCodeBlock.FinanceDimension9 = CostCenter
				if (FinanceEnterpriseGroup.BODCostCenter.Dimension10)
					FinanceCodeBlock.FinanceDimension10 = CostCenter
#ifdef module ap				
			if (VendorGroupAndVendor.Vendor entered)
				if (VendorRel exists)
					default to VendorRel.ExpenseDefault
						default individual fields
				else
					constraint (VendorRel exists)
						"VendorDoesNotExist"
			if (ExpenseManagementInterfaceExpenseType entered)
				default to ExpenseManagementInterfaceExpenseType.FinanceStructure
					default individual fields
#endif			
			if (FinanceCodeBlock.ToAccountingEntity.ValidSystems entered
			and !GLProcessingSystems)
				constraint (System within FinanceCodeBlock.ToAccountingEntity.ValidSystems)
					"InvalidSystemForPosting<FinanceEnterpriseGroup.AccountingEntityLabel>"
			required
		System
			required
			if (FinanceCodeBlock.GeneralLedgerChartAccount.Account.SystemRestriction entered)
				constraint (System within FinanceCodeBlock.GeneralLedgerChartAccount.Account.SystemRestriction)
					"InvalidSystemForAccount"


			
	Rule Blocks
		CreateTransactionDefaultValues	















			constraint (FinanceCodeBlock.GeneralLedgerChartAccount entered)
				"BlankIsNotValidFor<FinanceEnterpriseGroup.AccountLabel>"
			DimensionCode				= FinanceCodeBlock.DimensionCode
			if (AccountingEntity.AccountingUnitZoneBalancing)
				LocalAccountingEntity		= AccountingEntity
				initialize LocalInstAccountingUnit
				if (ZoneFinanceCodeBlock.AccountingUnit entered)
					LocalInstAccountingUnit		= ZoneFinanceCodeBlock.AccountingUnit
	        	BaseZoneAccountingUnit		= DerivedBaseZoneAccountingUnit
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				initialize LocalInstFinanceDimension1
				if (ZoneFinanceCodeBlock.FinanceDimension1 entered)
					LocalInstFinanceDimension1	= ZoneFinanceCodeBlock.FinanceDimension1
	        	BaseZoneDimension1			= DerivedBaseZoneFinanceDimension
			if (FinanceCodeBlock.ToAccountingEntity.AccountingUnitZoneBalancing)
				LocalAccountingEntity		= FinanceCodeBlock.ToAccountingEntity
				LocalInstAccountingUnit		= FinanceCodeBlock.AccountingUnit
		        ZoneAccountingUnit			= DerivedZoneAccountingUnit
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				LocalInstFinanceDimension1	= FinanceCodeBlock.FinanceDimension1
				ZoneDimension1				= DerivedZoneFinanceDimension

			OrganizationKeyFields		= FinanceCodeBlock.OrganizationString
			ZoneSystemKeyFields			= ZoneSystemKeyString
			ZoneFields					= ZoneFieldsString
			if (!FinanceCodeBlock.Project entered)
				initialize APPaid
			if (JournalByJournalCode)
				PostingDateJournalCodeKey	= DerivedPostingDateJournalCodeKey
			else
				PostingDateJournalCodeKey	= PostingDate
			if (!PrimaryLedger entered)
				PrimaryLedger					= FinanceCodeBlock.Ledger


	
		EditTransactionDetail
			if (!BypassUnitAndAmountEdit)
				constraint (TransactionAmount entered
						or	ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount entered								
						or	ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount entered
						or	ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount entered
						or	UnitsAmount entered)
					"AmountOrUnitsAmountIsRequired"

		AssignInterEntityCodeBlockDefaults
			LocalEntity.DimensionEntity					= LocalAccountingEntity
			if (FinanceEnterpriseGroup.AccountingUnitRequired)
				if (InterEntityAccountingUnitRel exists)
					invoked.FinanceCodeBlock.AccountingUnit	= InterEntityAccountingUnitRel.AccountingUnit
				else
					if (LocalEntity.DimensionEntity.AccountingUnitZoneBalancing
					and LocalZoneAccountingUnit entered)
						invoked.FinanceCodeBlock.AccountingUnit	= LocalZoneAccountingUnit
					else
						invoked.FinanceCodeBlock.AccountingUnit	= SystemAccountingUnitRel.AccountingUnit


			if (FinanceEnterpriseGroup.FinanceDimension1Required)
				if (FinanceEnterpriseGroup.Dimension1ZoneBalancing
				and LocalZoneDimension1 entered)
					invoked.FinanceCodeBlock.FinanceDimension1	= LocalZoneDimension1
				else
					invoked.FinanceCodeBlock.FinanceDimension1	= FinanceDimension1Rel.FinanceDimension1
			if (FinanceEnterpriseGroup.FinanceDimension2Required)
				invoked.FinanceCodeBlock.FinanceDimension2	= FinanceDimension2Rel.FinanceDimension2
			if (FinanceEnterpriseGroup.FinanceDimension3Required)
				invoked.FinanceCodeBlock.FinanceDimension3	= FinanceDimension3Rel.FinanceDimension3
			if (FinanceEnterpriseGroup.FinanceDimension4Required)
				invoked.FinanceCodeBlock.FinanceDimension4	= FinanceDimension4Rel.FinanceDimension4
			if (FinanceEnterpriseGroup.FinanceDimension5Required)
				invoked.FinanceCodeBlock.FinanceDimension5	= FinanceDimension5Rel.FinanceDimension5
			if (FinanceEnterpriseGroup.FinanceDimension6Required)
				invoked.FinanceCodeBlock.FinanceDimension6	= FinanceDimension6Rel.FinanceDimension6
			if (FinanceEnterpriseGroup.FinanceDimension7Required)
				invoked.FinanceCodeBlock.FinanceDimension7	= FinanceDimension7Rel.FinanceDimension7
			if (FinanceEnterpriseGroup.FinanceDimension8Required)
				invoked.FinanceCodeBlock.FinanceDimension8	= FinanceDimension8Rel.FinanceDimension8
			if (FinanceEnterpriseGroup.FinanceDimension9Required)
				invoked.FinanceCodeBlock.FinanceDimension9	= FinanceDimension9Rel.FinanceDimension9
			if (FinanceEnterpriseGroup.FinanceDimension10Required)
				invoked.FinanceCodeBlock.FinanceDimension10	= FinanceDimension10Rel.FinanceDimension10

		UpdateInterEntityZoneAmounts
			LocalEntity.DimensionEntity					= LocalAccountingEntity
			if (LocalEntity.DimensionEntity.AccountingUnitZoneBalancing
			or	FinanceEnterpriseGroup.Dimension1ZoneBalancing)
				if (LocalFrAccountingEntity		!= LocalAccountingEntity)
					LocalClosePeriod				= LocalToAccountingEntityJournalView.GeneralLedgerClosePeriod
					LocalJournalControl				= LocalToAccountingEntityJournalView.GeneralLedgerJournalControl
					LocalBaseZoneAccountingUnit		= LocalToAccountingEntityJournalView.BaseZoneAccountingUnit
					LocalBaseZoneDimension1			= LocalToAccountingEntityJournalView.BaseZoneDimension1
				else
					if (PrmJournalCreated)
						LocalAccountingEntity			= LocalFrAccountingEntity
						LocalClosePeriod				= PrmClosePeriod
						LocalJournalControl				= PrmJournalControl
						LocalBaseZoneAccountingUnit		= JournalControlExistsRel.BaseZoneAccountingUnit
						LocalBaseZoneDimension1			= JournalControlExistsRel.BaseZoneDimension1
					else
						LocalClosePeriod				= LocalAccountingEntityJournalView.GeneralLedgerClosePeriod
						LocalJournalControl				= LocalAccountingEntityJournalView.GeneralLedgerJournalControl
						LocalBaseZoneAccountingUnit		= LocalAccountingEntityJournalView.BaseZoneAccountingUnit
						LocalBaseZoneDimension1			= LocalAccountingEntityJournalView.BaseZoneDimension1
				include UpdateZoneTotals

		UpdateZoneTotals
			LocalCurrencyCode				= LocalActionCurrencyCode
			LocalTempZoneAccountingUnit		= LocalZoneAccountingUnit
			LocalTempZoneDimension1			= LocalZoneDimension1
			if (LocalEntity.DimensionEntity.AccountingUnitZoneBalancing
			and LocalZoneAccountingUnit		= LocalBaseZoneAccountingUnit)
				initialize LocalZoneAccountingUnit
			if (FinanceEnterpriseGroup.Dimension1ZoneBalancing
			and LocalZoneDimension1	= LocalBaseZoneDimension1)
				initialize LocalZoneDimension1
			if (LocalZoneDimension1 entered
			and !LocalZoneAccountingUnit entered)
				if (FinanceEnterpriseGroup.AccountingUnitRequired)
					if (AccountingEntity.AccountingUnitZoneBalancing)
						LocalZoneAccountingUnit		= LocalTempZoneAccountingUnit
					else
						LocalZoneAccountingUnit		= SystemAccountingUnitRel.AccountingUnit
			if (LocalZoneAccountingUnit entered
			and !LocalZoneDimension1 entered)
				if (FinanceEnterpriseGroup.FinanceDimension1Required)
					if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
						LocalZoneDimension1		= LocalTempZoneDimension1
					else
						LocalZoneDimension1		= FinanceDimension1Rel.FinanceDimension1

			if (TransactionAmountTotal		= 0
			and	FunctionalAmountTotal		= 0
			and	AlternateAmountTotal		= 0
			and	AlternateAmount2Total		= 0
			and	AlternateAmount3Total		= 0

			and	ReportAmount1Total			= 0
			and	ReportAmount2Total			= 0
			and	ReportAmount3Total			= 0
			and	ReportAmount4Total			= 0
			and	ReportAmount5Total			= 0)
				initialize LocalZoneAccountingUnit
				initialize LocalZoneDimension1
			if (LocalZoneAccountingUnit entered
			or  LocalZoneDimension1 entered)
				LocalAccountingEntity			= LocalEntity.DimensionEntity
				LocalInstZoneAccountingUnit		= LocalZoneAccountingUnit
				LocalInstZoneDimension1			= LocalZoneDimension1
				invoke Update GeneralLedgerZoneTotalRel
					invoked.TransactionAmount			+= TransactionAmountTotal
					invoked.FunctionalAmount			+= FunctionalAmountTotal
					invoked.AlternateAmount				+= AlternateAmountTotal
					invoked.AlternateAmount2			+= AlternateAmount2Total
					invoked.AlternateAmount3			+= AlternateAmount3Total

					invoked.ReportAmount1				+= ReportAmount1Total
					invoked.ReportAmount2				+= ReportAmount2Total
					invoked.ReportAmount3				+= ReportAmount3Total
					invoked.ReportAmount4				+= ReportAmount4Total
					invoked.ReportAmount5				+= ReportAmount5Total
					invoked.UnitsAmount					+= UnitsAmountTotal

 	Actions
 		Create is a Create Action

    		completion message is "GlobalLedgerTransactionIsValid"
			Entrance Rules
				include EditTransactionDetail
			Exit Rules
				invoke Delete
					





 		Delete is a Delete Action
 			restricted
