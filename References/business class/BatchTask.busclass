BatchTask is a BusinessClass
    owned by la
    prefix is TASK
    default label is "Job"
    
    Ontology
    	symbolic key is BatchTask
    
    Patterns
    	implements ChildHierarchy
    		children are BatchStreamTasks
    	
    Persistent Fields
       
    	Name				is Alpha 80 
    	Description			is Alpha 80
    	Type				is Numeric size 1
    		States
	  			TaskStream		value is 1
	  				default label is "JobStream"
	  			TaskAction		value is 2
	  				default label is "Job"
	  			JavaClass		value is 3
	  	BusinessClass		is a BusinessView
  		TaskAction			is a BusinessAction
  			default label is "Action"
  		JavaClass			is a ScheduleableJavaClass
  		MimeType			is MimeType
  			default label is "MIME_Type"
  		Data				is DataView
  		JavaData			is Text
  		SaveActionResults	is Boolean
  		AsyncTasks			is Boolean
 		Owner		 		is an Actor
 			default label is "Owner"
  		
  		
  	Derived Fields
		ContainsSaveActionResults is a DerivedField
			type is Boolean
			if (Type.TaskAction
			or  Type.JavaClass)
				return SaveActionResults		
				
			for each BatchTaskSteps
				if (each.TaskStep.ContainsSaveActionResults)				
					return true
					
			return false
	
		MapField1 is a DerivedField
			type is LPLName
			if (Type.TaskAction)
				return BusinessClass
			else
			if (Type.TaskStream)
				return BatchTask
			else
			if (Type.JavaClass)
				return JavaClass
	
			return blank	
				
		MapField2 is a DerivedField
			type is LPLName
			if (Type.TaskAction)
				return TaskAction
				
			return blank	
			
		ContainsPrivate is a DerivedField
			type is Boolean
			if (Type.TaskStream)
				for each BatchTaskSteps
					if (each.TaskStep.IsPrivate)

						return true          
			return false

		InPublicOrOtherActorsPrivateStream is a DerivedField
			type is Alpha 250
  			initialize InPublicOrOtherActorsPrivateStream

 			for each BatchTaskStepsInStream
				if (not each.BatchTask.IsPrivate)
					InPublicOrOtherActorsPrivateStream += "used in public job stream " + each.BatchTask
					end for each
				else
					if (each.BatchTask.Owner not = Owner)
						InPublicOrOtherActorsPrivateStream += "used in private job stream owned by different user: " + each.BatchTask + ", " + each.BatchTask.Owner
						end for each

			return InPublicOrOtherActorsPrivateStream

		PrivateStreamResidentWarningMessage is a MessageField
			restricted
			"TheJobIsCurrentlyUsedInOneOrMoreJobStreams.AnyChangesAppliedWillBeInEffectWhereEverItIsUsed."

		PublicStreamResidentWarningMessage is a MessageField
			restricted
			"TheJobIsCurrentlyUsedInOneOrMoreJobStreams.ItMayBeInJobStreamsOwnedByOtherUsers.AnyChangesAppliedWillBeInEffectWhereEverItIsUsed."

		TaskCheckPointExists is a DerivedField
			type is Boolean
			default label is "TaskCheckpointExists"
			for each (Request) RequestsWithUnfinishedTriggers 
				for each (Trigger) each (Request).NonFinishedTriggers
					if (each (Trigger).AsyncActionRequest.CheckPointRel exists)
						return true
						          
			return false
			
		UsedInStreamWarningsEnabled is a DerivedField
			type is Boolean
			if (config(batchtaskstep).DisableBatchtaskUsedInStreamWarnings = true)
				return false
			else
				return true

		MakePublicConfirmEnabled is a DerivedField
			type is Boolean
			if (config(batchtaskstep).DisableBatchtaskMakePublicConfirm = true)
				return false
			else
				return true

        DerivedType is a DerivedField
            type is Numeric size 1
            restricted
            if (Type entered)
 				return Type
            
            return Type.TaskAction

    Transient Fields
    	TypeTransientField		is Numeric size 1
			default label is "Type"
    		States
	  			TaskStream		value is 1
	  				default label is "JobStream"
	  			TaskAction		value is 2
	  				default label is "Job"
	  				
    		derive value from DerivedType

	Context Fields
		BatchTaskTaskContextField is a BatchTask	

	Conditions
  		IsPrivate
  			default label is "Private"
			when (Owner entered)

		IsValidTaskAction
			default label is "ValidTaskAction"
			when (Type.TaskAction
			and   BusinessClass exists
			and   TaskAction exists)
				
		UsedInStream
			when (BatchTaskStepsInStream exists)	
			
		CondSaveActionResults
			restricted
			when (TaskAction.ActionResultOption.SaveResults
			or    TaskAction.ActionResultOption.InheritSaveResults)
			
		CanChangeSaveActionResult
			default label is untranslatable 
			when (Type.JavaClass
			or   (Type.TaskAction
			and   TaskAction exists
			and   TaskAction.ActionResultOption.DefaultNoResults))
			
		HasActionResults
			default label is "ActionResultsExist"
			when (ActionResultsRel exists)

		IsTaskScheduled 
			default label is "TaskScheduled"
			when (RequestsWithUnfinishedTriggers exists) 
				
		IsScheduledInStream 
			default label is "ScheduledInStream"
			when (BatchTaskStepsInStreamSched exists)
			
		IsScheduled 
			default label is "Scheduled"
			when (IsTaskScheduled
			or    IsScheduledInStream)
			
		IsInProgress // Is this BatchTask in "In Progress" state either directly or indirectly?
			default label is untranslatable
			when (IsTaskInProgress
			or    IsInStreamInProgress)
					
		IsTaskInProgress // Is this BatchTask in "In Progress" state directly?
			default label is untranslatable
			when (InProgressRequests exists) 
				
		IsInStreamInProgress // Is this BatchTask "In Progress" indirectly (a stream where this resides or it's parent is "In Progress")
			default label is untranslatable
			when (BatchTaskStepsInStreamInProgress exists)
		
        BatchTaskIsPrivateAndUsedInStream
        	default label is untranslatable
        	when (IsPrivate and UsedInStream)

		BatchTaskIsPublicAndUsedInStream	
			default label is untranslatable				
        	when (!IsPrivate and UsedInStream)

    	CheckPointExists
    		default label is "CheckpointExists"
    		when (TaskCheckPointExists 
    		or	  ParentStreamCheckPointExists)

    	ParentStreamCheckPointExists
    		default label is "ParentStreamCheckpointExists"
    		when (BatchTaskStepsInStreamWithCheckpoint exists)
    		
		WarnPublicUsedInStream
			when (BatchTaskIsPublicAndUsedInStream and UsedInStreamWarningsEnabled)
 	
		WarnPrivateUsedInStream
			when (BatchTaskIsPrivateAndUsedInStream and UsedInStreamWarningsEnabled)
 	
  	Relations
  		BatchTaskStepsInStream 
  			one-to-many relation to BatchTaskStep 
  			delete restricted
  			Field Mapping uses ByTaskStep
  				related.TaskStep = BatchTask
  				
		BatchTaskStepsInStreamSched
  			one-to-many relation to BatchTaskStep 
  			delete restricted
  			Field Mapping uses ByTaskStep
  				related.TaskStep = BatchTask 
  			Instance Selection
  				where (related.BatchTask.IsScheduled) 

		BatchTaskStepsInStreamWithCheckpoint
  			one-to-many relation to BatchTaskStep 
  			delete restricted
  			Field Mapping uses ByTaskStep
  				related.TaskStep = BatchTask 
  			Instance Selection
  				where (related.BatchTask.CheckPointExists) 

		BatchTaskStepsInStreamInProgress
  			one-to-many relation to BatchTaskStep 
  			delete restricted
  			Field Mapping uses ByTaskStep
  				related.TaskStep = BatchTask 
  			Instance Selection
  				where (related.BatchTask.IsInProgress) // Where the parent task of a stream we reside in is in "In Progress" state. Will upward recurse.  				
  		
  		BatchTaskSteps 
  			one-to-many relation to BatchTaskStep 
  			delete restricted
  			Field Mapping uses ByExecutionOrder
  				related.BatchTask = BatchTask
  				
		BatchStreamTasks
			one-to-many relation to BatchTask
			disable subset select on dependent relation
			Field Mapping uses symbolic key			
  				related.BatchTask = BatchTaskSteps.TaskStep
  				
		ActionResultsRel  				
  			one-to-many relation to ActionResult 
  			Field Mapping uses ByDataAreaBatchTask
  				related.DataArea		= parentcontext.dataarea
  				related.BatchTask 		= BatchTask
  				related.BatchTaskStep 	= blank
  				
		RequestsWithUnfinishedTriggers
    		one-to-many relation to AsyncActionRequest
			Field Mapping uses ByDataAreaBatchTask
				related.DataArea 	    = parentcontext.dataarea
				related.BatchTask	    = BatchTask
				related.InactiveInGroup = false
			Instance Selection
				where (related.NotSuccessfullyCompleted)

		InProgressRequests
    		one-to-many relation to AsyncActionRequest
			Field Mapping uses ByDataAreaBatchTask
				related.DataArea 	    = parentcontext.dataarea
				related.BatchTask	    = BatchTask
				related.InactiveInGroup = false
			Instance Selection
				where (related.InProgress)

  	Field Rules

		TypeTransientField
			initial value is DerivedType
			  	
  		Type
  			cannot be changed
  				"TypeCannotBeChanged"
  			
  			if (Type not entered)
  				if (BusinessClass entered or TaskAction entered)
  					default to Type.TaskAction
  				else
  				if (JavaClass entered)
  					default to Type.JavaClass



  					








		SaveActionResults
			cannot be changed


    


			
 	SubType Type.TaskStream Field Rules
	
		BusinessClass
			cannot be entered
				"ClassValidOnlyForTypeJob"
		
		TaskAction
			cannot be entered
				"ActionValidOnlyForTypeJob"

		Data
			cannot be entered
				"DataOnlyValidForTypeJob"				
	
		JavaClass
			cannot be entered	
				"JavaClassValidOnlyForType_JavaClass"
		
		JavaData
			cannot be entered	
				"JavaDataValidOnlyForType_JavaClass"
		
	SubType Type.TaskAction Field Rules



	
		BusinessClass
			required
		
		TaskAction
			required
				"ActionRequired"
		
		MimeType

			force default to "text/xml"
			
		Data
			required
				"JobParametersAreRequired"
			
		JavaClass
			cannot be entered
				"JavaClassValidOnlyForType_JavaClass"

		JavaData
			cannot be entered	
				"JavaDataValidOnlyForType_JavaClass"				

	SubType Type.JavaClass Field Rules



		
		Data
			cannot be entered
				"DataOnlyValidForTypeJob"
		
		JavaClass
			required	
			
		BusinessClass
			cannot be entered
				"ClassValidOnlyForTypeJob"
		
		TaskAction
			cannot be entered
				"ActionValidOnlyForTypeJob"
		
	Sets





 				
		ByTaskAction
			Sort Order
				BusinessClass
				TaskAction
 				BatchTask
 			Instance Selection
 				where (Type.TaskAction) 				
 		
 		ByJavaClass
			Sort Order
				JavaClass
 				BatchTask
 			Instance Selection
 				where (Type.JavaClass)
 				
		ByActorBatchTask 
			Sort Order 
				Owner
				BatchTask 
		
		ByTypeOwnerBatchTask
			Sort Order
				Type
				Owner
 				BatchTask
 				
	Rule Blocks
	
		OwnerChangeConstraints



	



			if (old Owner entered)   
				if (IsPrivate) 
					constraint (not BatchTaskStepsInStream exists) 
						"CannotChangeOwner:JobIsPrivateAndIsUsedInAJobStream.OwnerOfPrivateJobsInJobStreamsMustMatchOwnerOfParentJobStream."
						
					constraint (not ContainsPrivate) 
							"CannotChangeOwner:JobStreamIncludesPrivateJob(s).OwnerOfPrivateJobsInJobStreamsMustMatchOwnerOfJobStream."
				else
				if (!IsPrivate) 
					constraint(not ContainsPrivate)
						"CannotMakeJobStreamPublic.ItContainsAPrivateJob"
						
					if (MakePublicConfirmEnabled)
						confirmation required
							"ChangingAJobFromPrivateToPublicAllowsItToBeChangedAndUsedByOtherUsers.AnyChangesAppliedByAnyUserWillBeInEffectForAllUsersInAllPlacesItIsUsed.DoYouWishToContinue?"
				
			else    
				constraint (InPublicOrOtherActorsPrivateStream = blank)
					"CannotMakePrivate,<InPublicOrOtherActorsPrivateStream>"
			
	
	Actions
		Create is a Create Action

			Action Rules
				Type = TypeTransientField

				if (!IsPrivate)
					if (MakePublicConfirmEnabled)
						confirmation required
							"PublicJobsCanBeUsedAndChangedByOtherUsers.AnyChangesAppliedByAnyUserWillBeInEffectForAllUsersInAllPlacesTheJobIsUsed.DoYouWishToCreateAsPublic?"
						
				SaveActionResults = true	//TODO remove if get "force default to" field rule to work...

		Update is an Update Action

			Action Rules

				Type = TypeTransientField	

				if (Owner != old Owner)
					include OwnerChangeConstraints
									
				constraint (not IsInProgress)
					"<BatchTask>OrAJobStreamThatIncludesItIsInProgressState.CannotUpdate."

				if (CheckPointExists)
					confirmation required
						"<BatchTask>OrAJobStreamThatIncludesItHasUnfinishedTriggersAndRecoveryInformation_(Checkpoint)Exists.UpdatingAtThisTimeMayCauseCorruptionOrLossOfDataOrCompromiseTheAbilityToRecoverAFailedJobCorrectly.AreYouSureYouWantToUpdate?"
				else
					if (IsScheduled)
						confirmation required
							"<BatchTask>OrAJobStreamThatIncludesItIsPendingScheduling,CurrentlyInProcess,OrInAnIncompletedOrFailedState.UpdatingAtThisTimeMayImpactThePendingOrCurrentExecutionsOfItOrJobStreamsThatIncludeIt.AreYouSureYouWantToUpdate?"

				if (Type.TaskStream)
					invoke ValidateTaskStream  
				
		Delete is a Delete Action

			Action Rules

				constraint (not TaskCheckPointExists)	
					"CannotDelete:UnfinishedTriggersExistForThisTaskAndRecoveryInformation_(Checkpoint)Exists.TaskIsPendingScheduling,CurrentlyInProcess,OrInAnIncompletedOrFailedState."

				constraint (not IsTaskScheduled)	
					"CannotDelete:ThisTaskIsPendingScheduling,CurrentlyInProcess,OrInAnIncompletedOrFailedState."

		ValidateTaskStream is an Instance Action
			Action Rules
				invoke ValidateTaskStreamTask
					invoked.TaskToCheck = BatchTask

	 	ValidateTaskStreamTask is an Instance Action
			restricted
			Parameters
				TaskToCheck is a BatchTask
			Parameter Rules
				TaskToCheck
					required
			Action Rules
				if (Type.TaskStream)
					for each BatchTaskStep(BatchTask) set
						invoke ValidateTaskStream each
							invoked.TaskToCheck = TaskToCheck		
							
		ValidateParameters is an Instance Action
			restricted



		RunStream is an Instance Action
			run in background
			default label is "RunSelectedJob"
			
			Queue Mapping Fields
				MapField1
				MapField2
				
			Action Rules
				invoke Run
					run outside of action background group // The "Run" task must be the top level so that the stream resume logic works correctly when nested background actions are fired off.
					invoked.ParamBatchTask = BatchTask
										
		Run is a Set Action
			run in background 
			default label is "RunJob"
			
			Queue Mapping Fields
				ParamBatchTask.MapField1
				ParamBatchTask.MapField2
			
			Parameters
				ParamBatchTask is a BatchTask
					default label is "Job"	
					
			Parameter Rules
				ParamBatchTask
					required
					invoke ValidateParameters ParamBatchTask	

			Instance Selection
				where (BatchTask = ParamBatchTask)															
				
		ChangeOwner is an Update Action	
			restricted

			Action Rules
			
				include OwnerChangeConstraints
			

		ChangeJobOwner is an Instance Action
			valid when (IsPrivate)

            Parameters
                NewOwner   is an Actor
			
            Parameter Rules
                NewOwner
                    required

					constraint (NewOwner != Owner)
						"NewOwnerAlreadyOwnsThisJob"					

            Action Rules

				invoke ChangeOwner		
					invoked.Owner = NewOwner


		MakeJobPublic is an Instance Action
			valid when (IsPrivate)

            Action Rules

				invoke ChangeOwner		
					invoked.Owner = blank
                    

		MakeJobPrivate is an Instance Action
			valid when (!IsPrivate)

            Parameters
                AssignPrivateOwner   is an Actor
			
            Parameter Rules
                AssignPrivateOwner
                    required

            Action Rules

				invoke ChangeOwner		
					invoked.Owner = AssignPrivateOwner


        Copy is an Instance Action
            Parameters
                NewJob              is AlphaUpper size 30
                NewJobDescription   is Alpha 80

            Parameter Rules
                NewJob
                    required

                    constraint (NewJob != BatchTask)
                        "CopyMustHaveANewName"

                NewJobDescription
                    initial value is Description

            Action Rules

                invoke Create BatchTask
                    invoked.BatchTask   = NewJob
                    invoked.Name        = Name
                    invoked.Description = NewJobDescription
                    invoked.Type        = Type
                    invoked.BusinessClass = BusinessClass
                    invoked.TaskAction  = TaskAction
                    invoked.JavaClass   = JavaClass
                    invoked.MimeType    = MimeType
                    invoked.Data        = Data
                    invoked.JavaData    = JavaData
                    invoked.SaveActionResults = SaveActionResults
                    invoked.AsyncTasks  = AsyncTasks
                    invoked.Owner       = Owner

                for each BatchTaskStep set
                    invoke Copy each
                        invoked.NewJob = NewJob
                        invoked.PrmExecutionOrder = each.ExecutionOrder



        ChangeOwnerOnOwnersJobs is a Set Action
            run in foreground
            completion message is "OwnershipOn<OldOwner>'sJobsChangedTo<NewOwner>"

            Parameters
                OldOwner	is an Actor
                NewOwner	is an Actor

            Parameter Rules
				OldOwner
					required
			
				NewOwner
					required
					
					constraint (OldOwner != NewOwner)
						"OldAndNewOwnerMustDiffer"					

            Instance Selection
                where (Owner = OldOwner)

				
            Action Rules
            



                Instance Rules		
                	Owner = NewOwner

                	
        ChangeOwnersJobsToPublic is a Set Action
            run in foreground
            completion message is "<OldOwner>'sJobsChangedToPublic"
			confirmation required
				"OwnershipOnAllJobsOwnedByOldOwnerWillBeRemovedAndTheJobsWillBecomePublic.PublicJobsCanBeChangedAndUsedByOtherUsers.AnyChangesAppliedByAnyUserWillBeInEffectForAllUsersInAllPlacesTheJobsAreUsed.DoYouWishToContinue?"

            Parameters
                OldOwner	is an Actor

            Parameter Rules

				OldOwner
					required


            Instance Selection
                where (Owner = OldOwner)

				
            Action Rules






                Instance Rules
                	Owner = blank
