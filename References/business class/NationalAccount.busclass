NationalAccount is a BusinessClass
	owned by ar
	prefix is NAC
	classic name is NATACCT

	Ontology
		symbolic key is NationalAccount
			classic set name is NACSET1

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		NationalAccountTransactionStatus is Numeric size 1
			sql name is NAccountTransactionStatus
			classic name is NA-TRAN-STATUS
			States
				InitializedValue	  value is 0
				AddInvoicedCustomer   value is 1
				Delete				value is 2
				EstablishRelationship value is 3

		ParentNationalAccount is 	Boolean
		CustomerGroupField

	Derived Fields
		AddCompleteWithPossibleTransactionUpdatesPendingMessage is a MessageField
			restricted
			"AddCompleteWithPossibleTransactionUpdatesPending;RunNationalAccountTransactionUpdate"


	Context Fields
		NationalAccountBalance
		ReceivableAgePeriod

	Local Fields


		LocalReceivableInvoiceDetail		is a ReceivableInvoiceDetail
		LocalCompany 						is a FromReceivableCompany



		LocalYear							is like GeneralLedgerCloseYear
		CreationCompleteMessage				is Alpha size 250

	Field Rules
		NationalAccount.InvoiceAccountGroup.Company
			required
		NationalAccount.InvoiceAccountGroup.Customer
			required

	Create Rules
		if (NationalAccount.NationalAccountGroup.NatCompany entered)
			constraint (NationalAccount.NationalAccountGroup.NatCustomer entered)
				"CustomerIsRequired"
		if (NationalAccount.NationalAccountGroup.NatCompany entered)
			constraint (NationalAccount.InvoiceAccountGroup.Company entered)
				"InvoiceCompanyIsRequired"
		if (NationalAccount.NationalAccountGroup.NatCompany entered)
			constraint (NationalAccount.InvoiceAccountGroup.Customer entered)
				"InvoiceCustomerIsRequired"
		if (NationalAccount.NationalAccountGroup.NatCompany entered
		and NationalAccount.NationalAccountGroup.NatCustomer entered)
			constraint (ParentCompanyCustomerRel exist)
				"AccountCustomerIsNotValid"
			constraint (!NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.NationalAccountGroup.NatCompany.ICBillingDefaultCustomer)
				"CannotCreate;_\Parent_\Customer_\Company<NationalAccount.NationalAccountGroup.NatCompany>HasThis_\Company<NationalAccount.NationalAccountGroup.NatCompany>_\Customer<NationalAccount.NationalAccountGroup.NatCustomer>As_\Default_\Intercompany_\Billing_\Customer."	
			constraint (!NationalAccount.NationalAccountGroup.NatCustomer = NationalCustomerRel.ReceivablesCompanyWithICBDefaultRel.ICBillingDefaultCustomer)
				"CannotCreate;_\Parent_\CustomerIsRelatedToA_\CompanyAs_\Default_\Intercompany_\Billing_\Customer"	

		if (NationalAccount.InvoiceAccountGroup.Company entered
		and NationalAccount.InvoiceAccountGroup.Customer entered)
			constraint (CompanyCustomerRel exist)
				"Invoiced_\Company<NationalAccount.InvoiceAccountGroup.Company>_\Customer<NationalAccount.InvoiceAccountGroup.Customer>DoesNotExist"	
		if (NationalAccount.InvoiceAccountGroup.Company entered
		and NationalAccount.InvoiceAccountGroup.Customer entered)
			constraint (InvoiceCustomerRel exist)
				"InvoicedCustomerIsNotValid"
			constraint (!NationalAccount.InvoiceAccountGroup.Customer = NationalAccount.InvoiceAccountGroup.Company.ICBillingDefaultCustomer)
				"CannotCreate;_\Child_\Customer_\Company(<NationalAccount.InvoiceAccountGroup.Company>)HasThis_\Company<NationalAccount.InvoiceAccountGroup.Company>_\Customer<NationalAccount.InvoiceAccountGroup.Customer>As_\Default_\Intercompany_\Billing_\Customer."	
			constraint (!NationalAccount.InvoiceAccountGroup.Customer = InvoiceCustomerRel.ReceivablesCompanyWithICBDefaultRel.ICBillingDefaultCustomer)
				"CannotCreate;_\Child_\CustomerIsRelatedToACompanyAsDefault_\Intercompany_\Billing_\Customer"	

		if (NationalAccount.NationalAccountGroup.NatCompany entered
		and NationalAccount.NationalAccountGroup.NatCustomer entered
		and NationalAccount.InvoiceAccountGroup.Company = NationalAccount.NationalAccountGroup.NatCompany)
			constraint (!NationalAccount.InvoiceAccountGroup.Customer = NationalAccount.NationalAccountGroup.NatCustomer)
				"TheEntered_\Invoiced_\Company<NationalAccount.InvoiceAccountGroup.Company>AndEntered_\Invoiced_\Customer<NationalAccount.InvoiceAccountGroup.Customer>CannotBeTheSameAsThe_\Parent_\National_\Account_\Company<NationalAccount.NationalAccountGroup.NatCompany>And_\Customer<NationalAccount.NationalAccountGroup.NatCustomer>"	
		if (NationalAccount.NationalAccountGroup.NatCompany entered
		and NationalAccount.NationalAccountGroup.NatCustomer entered)
			constraint (!IsNationalAccountParentChildRel)
				"Invoiced_\Company<NationalAccount.InvoiceAccountGroup.Company>And_\Customer<NationalAccount.InvoiceAccountGroup.Customer>AreAlreadyDefinedAsA_\National_\Account_\CompanyAnd_\Customer.CannotAddAs_\Invoiced_\CompanyAnd_\Customer."	
			constraint (!NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.NationalAccountGroup.NatCompany.ICBillingDefaultCustomer)
				"CannotCreate;Parent_\Customer_\CompanyHasThis_\Company_\CustomerAsDefault_\Intercompany_\Billing_\Customer"	

		if (NationalAccount.NationalAccountGroup.NatCompany entered
		and NationalAccount.NationalAccountGroup.NatCustomer entered)
			constraint (!IsNationalAccountChildCheckRel)
				"Invoiced_\Company<NationalAccount.InvoiceAccountGroup.Company>And_\Customer<NationalAccount.InvoiceAccountGroup.Customer>AreAlreadyRelatedTo_\National_\Account_\Company<first NationalAccountChildCheckRel.NationalAccount.NationalAccountGroup.NatCompany>And_\Customer<first NationalAccountChildCheckRel.NationalAccount.NationalAccountGroup.NatCustomer>"	
		if  (NationalAccountGroupGeneralLedgerCompanyRel.AccountingEntity != InvoiceAccountGroupGeneralLedgerCompanyRel.AccountingEntity)
			if (NationalAccount.NationalAccountGroup.NatCompany entered)
				constraint (InterEntityChildRelationRel exists)
					"Inter_\Entity_\RelationNotDefinedBetween_\Child_\Company<NationalAccount.InvoiceAccountGroup.Company>And_\Parent_\Company<NationalAccount.NationalAccountGroup.NatCompany>."	
				constraint (InterEntityParentRelationRel exists)
					"Inter_\Entity_\RelationNotDefinedBetween_\Parent_\Company<NationalAccount.NationalAccountGroup.NatCompany>And_\Child_\Company<NationalAccount.InvoiceAccountGroup.Company>."	

	Rule Blocks
		CreateExitRules
			if (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedWithMassUpdateLogic)
				CreationCompleteMessage = AddCompleteWithPossibleTransactionUpdatesPendingMessage

	Conditions

		IsMultipleCompany
			classic name is CROSSCOMPREL
			restricted
			when (NationalAccount.NationalAccountGroup.NatCompany != NationalAccount.InvoiceAccountGroup.Company)

		IsSameCompany
			classic name is INVCUST
			restricted
			when (InvoiceCustomerRel exists)

		IsInitialTransactionStatus
			classic name is NA-TRANS
			restricted
			when (not NationalAccountTransactionStatus.InitializedValue)

		IsNationalAccountBalance
			restricted
			when (NationalAccountBalanceRel exists)

		IsNationalAccount
			restricted
			when (NationalAccountRel exists)

		IsNotNationalAccount
			restricted
			when (!NationalAccountRel exists)


		IsNationalAccountTransaction
			restricted
			when (NationalAccountTransactionRel exists)

		IsReceivableInvoice
			restricted
			when (ReceivableInvoiceRel exists)

		IsNationalAccountParentCheckRel
			restricted
			when (!NationalAccountParentCheckRel exists)	

		IsNationalAccountParentRel
			restricted
			when (NationalAccountParentCheckRel exists)	

		IsNationalAccountParentChildRel
			restricted
			when (NationalAccountParentChildRel exists)

		IsNationalAccountChildCheckRel
			restricted
			when (NationalAccountChildCheckRel exists)

		IsNationalAccountSelfRel
			restricted
			when (instance count of NationalAccountParentCheckRel = 1)
		
		IsDeletePending
			when (NationalAccountTransactionStatus = 2)

		IsAdditionPending
			when (NationalAccountTransactionStatus = 1
			or	  NationalAccountTransactionStatus = 3)

		IsAInvoiceAccountCustomer
			restricted
			when (CompanyCustomerRel exists)



	Relations	


		CompanyCustomerRel	
			one-to-one relation to CompanyCustomer
			required
			Field Mapping uses symbolic key
				related.Company  = NationalAccount.InvoiceAccountGroup.Company
				related.Customer = NationalAccount.InvoiceAccountGroup.Customer

		InvoiceCompanyCustomerRel	
			one-to-one relation to CompanyCustomer
			required
			Field Mapping uses symbolic key
				related.Company  = NationalAccount.InvoiceAccountGroup.Company
				related.Customer = NationalAccount.InvoiceAccountGroup.Customer

		ParentCompanyCustomerRel	
			one-to-one relation to CompanyCustomer
			required
			Field Mapping uses symbolic key
				related.Company  = NationalAccount.NationalAccountGroup.NatCompany
				related.Customer = NationalAccount.NationalAccountGroup.NatCustomer




		CompanyCustomerPeriodTotalsLocalRel	
			one-to-many relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company 								= NationalAccount.InvoiceAccountGroup.Company
				related.CompanyCustomerPeriodTotals.Customer 	= NationalAccount.InvoiceAccountGroup.Customer
				related.CompanyCustomerPeriodTotals.Year		= LocalYear

		NatCompanyCustomerPeriodTotalsLocalRel	
			one-to-one relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company 								= NationalAccount.NationalAccountGroup.NatCompany
				related.CompanyCustomerPeriodTotals.Customer 	= NationalAccount.NationalAccountGroup.NatCustomer
				related.CompanyCustomerPeriodTotals.Year		= LocalYear




		InvoiceCustomerRel	
			one-to-one relation to Customer
			required
			Field Mapping uses symbolic key
				related.CustomerGroup = NationalAccount.CustomerGroup	
				related.Customer	  = NationalAccount.InvoiceAccountGroup.Customer

		NationalCustomerRel	
			one-to-one relation to Customer
			required
			Field Mapping uses symbolic key
				related.CustomerGroup = NationalAccount.CustomerGroup	
				related.Customer	  = NationalAccount.NationalAccountGroup.NatCustomer



		NationalAccountGroupGeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= NationalAccount.NationalAccountGroup.NatCompany

		InvoiceAccountGroupGeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= NationalAccount.InvoiceAccountGroup.Company




		InterEntityChildRelationRel	
			one-to-one relation to GLInterEntityRelation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= NationalAccountGroupGeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.AccountingEntity			= InvoiceAccountGroupGeneralLedgerCompanyRel.AccountingEntity
				related.ToAccountingEntity			= NationalAccountGroupGeneralLedgerCompanyRel.AccountingEntity

		InterEntityParentRelationRel	
			one-to-one relation to GLInterEntityRelation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= NationalAccountGroupGeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.AccountingEntity			= NationalAccountGroupGeneralLedgerCompanyRel.AccountingEntity
				related.ToAccountingEntity			= InvoiceAccountGroupGeneralLedgerCompanyRel.AccountingEntity




		NationalAccountRel	
			one-to-many relation to NationalAccount
			Field Mapping uses Set5	
				related.NationalAccount.NationalAccountGroup.NatCompany  = NationalAccount.NationalAccountGroup.NatCompany	
				related.NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.NationalAccountGroup.NatCustomer	
			Instance Selection


				where	(related.UniqueID != UniqueID)

		NationalAccountParentCheckRel	
			one-to-many relation to NationalAccount
			Field Mapping uses Set5	
				related.NationalAccount.NationalAccountGroup.NatCompany  = NationalAccount.NationalAccountGroup.NatCompany	
				related.NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.NationalAccountGroup.NatCustomer	




		NationalAccountDetailRel	
			one-to-many relation to NationalAccount
			Field Mapping uses Set5	
				related.NationalAccount.NationalAccountGroup.NatCompany  = NationalAccount.NationalAccountGroup.NatCompany	
				related.NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.NationalAccountGroup.NatCustomer	




		NationalAccountParentChildRel	
			one-to-many relation to NationalAccount
			Field Mapping uses Set5	
				related.NationalAccount.NationalAccountGroup.NatCompany  = NationalAccount.InvoiceAccountGroup.Company	
				related.NationalAccount.NationalAccountGroup.NatCustomer = NationalAccount.InvoiceAccountGroup.Customer	




		NationalAccountChildCheckRel	
			one-to-many relation to NationalAccount
			Field Mapping uses Set2	
				related.NationalAccount.InvoiceAccountGroup.Company		= NationalAccount.InvoiceAccountGroup.Company	
				related.NationalAccount.InvoiceAccountGroup.Customer	= NationalAccount.InvoiceAccountGroup.Customer	
			Instance Selection


				where	(related.UniqueID != UniqueID)




		NationalAccountBalanceRel	
			classic name is NATBALANCE
			one-to-one relation to NationalAccountBalance
			required
			Field Mapping uses symbolic key
				related.Company		= NationalAccount.NationalAccountGroup.NatCompany
				related.Customer	= NationalAccount.NationalAccountGroup.NatCustomer




		NationalAccountTransactionDeleteRel	
			one-to-many relation to NationalAccountTransaction
			Field Mapping uses ByNationalAccount

				related.NationalAccount.Company 								= NationalAccount.NationalAccountGroup.NatCompany					
				related.NationalAccount.Customer 								= NationalAccount.NationalAccountGroup.NatCustomer
				related.Company 												= NationalAccount.InvoiceAccountGroup.Company
				related.Customer 												= NationalAccount.InvoiceAccountGroup.Customer


		NationalAccountTransactionRel	
			one-to-one relation to NationalAccountTransaction
			Field Mapping uses ByNationalAccountTransaction

				related.NationalAccount.Company									= NationalAccount.NationalAccountGroup.NatCompany					
				related.NationalAccount.Customer 								= NationalAccount.NationalAccountGroup.NatCustomer

				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType		= LocalReceivableInvoiceDetail.ReceivableInvoiceDetailType
				related.ReceivableInvoiceDetail.Invoice							= LocalReceivableInvoiceDetail.Invoice
				related.ReceivableInvoiceDetail.PaymentSeq						= LocalReceivableInvoiceDetail.PaymentSeq
				related.Company 	 											= NationalAccount.InvoiceAccountGroup.Company
				related.Customer 												= NationalAccount.InvoiceAccountGroup.Customer




		ReceivableInvoiceRel	
			one-to-many relation to ReceivableInvoice
			Field Mapping uses Set4
				related.Company 				 = NationalAccount.NationalAccountGroup.NatCompany
				related.Customer				 = NationalAccount.NationalAccountGroup.NatCustomer




		OpenReceivableInvoiceDetailRel	
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3
				related.Company		= NationalAccount.NationalAccountGroup.NatCompany
				related.Customer	= NationalAccount.NationalAccountGroup.NatCustomer

		ReceivableInvoiceDetailRel	
			classic name is NATOITEMS
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set4
				related.Company		= NationalAccount.NationalAccountGroup.NatCompany
				related.Customer	= NationalAccount.NationalAccountGroup.NatCustomer

		ReceivableInvoiceTransactionDetailRel	
			classic name is INVOITEMS
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set4
				related.Company		= NationalAccount.InvoiceAccountGroup.Company
				related.Customer	= NationalAccount.InvoiceAccountGroup.Customer

		InvoiceCustomerTransactionDetailAgePeriodRel	
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses Set3
				related.Company		= NationalAccount.InvoiceAccountGroup.Company
				related.Customer	= NationalAccount.InvoiceAccountGroup.Customer
			Instance Selection
				where (related.CompanyAgingPeriod = ReceivableAgePeriod.AgePeriodSequence)




		InvoiceCustomerPaymentsAgePeriodRel	
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set9
				related.Company 	= NationalAccount.InvoiceAccountGroup.Company
				related.Customer 	= NationalAccount.InvoiceAccountGroup.Customer
			Instance Selection
				where (related.CompanyAgingPeriod = ReceivableAgePeriod.AgePeriodSequence)



	Sets
		Set2
			indexed
			Sort Order
				NationalAccount.InvoiceAccountGroup
				NationalAccount.NationalAccountGroup

		Set3
			indexed
			Instance Selection
				where (IsMultipleCompany)
			Sort Order
				NationalAccount

		Set4
			indexed
			Instance Selection
				where (IsInitialTransactionStatus)
			Sort Order
				NationalAccount

		Set5
			Sort Order
				NationalAccount.NationalAccountGroup
				NationalAccount.InvoiceAccountGroup



	Actions

		Create is a Create Action
			completion message is "<CreationCompleteMessage>"
			Entrance Rules
				constraint (ParentCompanyCustomerRel.NationalAccountIndicator != "I")
					"CustomerIsAlreadyAnInvoicedCustomer"
				constraint (!IsAdditionPending)
					"CustomerIsAlreadySetForNationalAccountAddition;RunNationalAccountTransactionUpdate"
				constraint(NationalAccount.NationalAccountGroup.NatCompany.CustomerGroupField.CustomerGroup = NationalAccount.InvoiceAccountGroup.Company.CustomerGroupField.CustomerGroup)	
					"Company<NationalAccount.InvoiceAccountGroup.Company>IsAttemptingToBeAdded.ThatCompanyIsTiedTo_\Invoiced_\Customer_\Group(<NationalAccount.InvoiceAccountGroup.Company.CustomerGroupField.CustomerGroup>)AndDoesNotEqualTo_\National_\Account_\Customer_\Group(<NationalAccount.NationalAccountGroup.NatCompany.CustomerGroupField.CustomerGroup>)"	

			Action Rules

				include CreateExitRules
				CustomerGroup = NationalAccount.NationalAccountGroup.NatCompany.CustomerGroupField.CustomerGroup
				if (IsNationalAccountParentCheckRel)
					ParentNationalAccount = true
				CustomerGroupField.CustomerGroup = NationalAccount.NationalAccountGroup.NatCompany.CustomerGroupField.CustomerGroup












			Exit Rules

				if (!NationalAccountBalanceRel exists)
					invoke Create NationalAccountBalanceRel
						invoked.TransientInvoiceCustomer.Company = NationalAccount.InvoiceAccountGroup.Company
						invoked.TransientInvoiceCustomer.Customer = NationalAccount.InvoiceAccountGroup.Customer
						invoked.TransientNationalAccountSource	  = true	

				invoke InvoiceCustomerUpdate NationalAccountBalanceRel
					invoked.PrmCompany			= NationalAccount.InvoiceAccountGroup.Company

					invoked.PrmCustomer 		= NationalAccount.InvoiceAccountGroup.Customer
					invoked.PrmType				= 1

				invoke FastUpdate ParentCompanyCustomerRel
					invoked.NationalAccountIndicator = "N"
				invoke FastUpdate CompanyCustomerRel
					invoked.NationalAccountIndicator = "I"
								
				if (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedInMaintenanceForm) 

					for each InvoiceCompanyCustomerRel.OpenReceivableInvoiceDetailRel
						invoke Create NationalAccountTransaction
							fill in fields from each					

							invoked.NationalAccount.Company															 = NationalAccount.NationalAccountGroup.NatCompany
							invoked.NationalAccount.Customer 														 = NationalAccount.NationalAccountGroup.NatCustomer
							invoked.NationalAccountTransaction.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = each.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
							invoked.NationalAccountTransaction.ReceivableInvoiceDetail								 = each.ReceivableInvoiceDetail

							invoked.TransactionAmount																 = each.InvoiceAmount.CurrencyAmount
							invoked.BaseAmount																		 = each.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount
							invoked.OpenBaseAmount																	 = each.BaseOpenAmount
							invoked.OpenTransactionAmount															 = each.OpenAmount
							invoked.OpenSortBaseAmount																 = each.BaseOpenAmount

				if (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedWithMassUpdateLogic) 
					if (IsNationalAccountSelfRel)
						NationalAccountTransactionStatus = 3
					if (!IsNationalAccountSelfRel)
						NationalAccountTransactionStatus = 1


		Update is an Update Action
			restricted
			Exit Rules
				if (IsNationalAccountTransaction)	
					if (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedInMaintenanceForm) 
						for each OpenReceivableInvoiceDetailRel
							LocalReceivableInvoiceDetail = each.ReceivableInvoiceDetail
							invoke Update NationalAccountTransactionRel
								invoked.NationalAccount.Company															 = NationalAccount.NationalAccountGroup.NatCompany
								invoked.NationalAccount.Customer 	  													 = NationalAccount.NationalAccountGroup.NatCustomer
								invoked.NationalAccountTransaction.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = each.ReceivableInvoiceDetail.ReceivableInvoiceDetailType

								invoked.NationalAccountTransaction.ReceivableInvoiceDetail								 = each.ReceivableInvoiceDetail
								invoked.Company 																		 = NationalAccount.InvoiceAccountGroup.Company
								invoked.Customer 																		 = NationalAccount.InvoiceAccountGroup.Customer
								invoked.TransactionDate																	 = each.TransactionDate
								invoked.DueDate																			 = each.DueDate
								invoked.DiscountDate.DiscDate[1]														 = each.DiscountDate.DiscDate[1]							
								invoked.DiscountDate.DiscDate[2]														 = each.DiscountDate.DiscDate[2]
								invoked.DiscountDate.DiscDate[3]														 = each.DiscountDate.DiscDate[3]												
								invoked.DiscountPercent.DiscPct[1]														 = each.DiscountPercent.DiscPct[1]
								invoked.DiscountPercent.DiscPct[2]														 = each.DiscountPercent.DiscPct[2]						
								invoked.DiscountPercent.DiscPct[3]														 = each.DiscountPercent.DiscPct[3]						
								invoked.DiscountAmount.OrigDiscAmt[1]													 = each.DiscountAmount.OrigDiscAmt[1]
								invoked.DiscountAmount.OrigDiscAmt[2]													 = each.DiscountAmount.OrigDiscAmt[2]
								invoked.DiscountAmount.OrigDiscAmt[3]													 = each.DiscountAmount.OrigDiscAmt[3]												
								invoked.BaseAmount																		 = each.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	
								invoked.TransactionAmount																 = each.InvoiceAmount.CurrencyAmount

								invoked.OpenBaseAmount																	 = each.BaseOpenAmount
								invoked.OpenTransactionAmount															 = each.OpenAmount
								invoked.OpenSortBaseAmount																 = each.BaseOpenAmount



								invoked.Project																			 = each.Project
								invoked.NationalAccountIndicator														 = CompanyCustomerRel.NationalAccountIndicator
								invoked.CustomerMajorClass																 = CompanyCustomerRel.CustomerMajorClass
								invoked.CustomerMinorClass																 = CompanyCustomerRel.CustomerMinorClass
								invoked.RiskIndicator																	 = CompanyCustomerRel.RiskIndicator
								invoked.LastApplicationSequence															 = each.LastApplicationSequence
								invoked.SalesRepresentative																 = each.SalesRepresentative
								invoked.TermsCode																		 = each.TermsCode
								invoked.ProjectContractCustomer															 = each.ProjectContractCustomer
								invoked.BatchNumber																		 = each.BatchNumber
								invoked.CustomerPurchaseOrder 															 = ReceivableInvoiceRel.CustomerPurchaseOrder
								invoked.ReceivableProcessLevel															 = ReceivableInvoiceRel.ReceivableProcessLevel
								invoked.TransactionUserField1															 = ReceivableInvoiceRel.TransactionUserField1
								invoked.BankTransactionCode 															 = ReceivableInvoiceRel.BankTransactionCode
								invoked.BankTransactionType																 = ReceivableInvoiceRel.BankTransactionType
								invoked.OriginalCurrency 																 = ReceivableInvoiceRel.OriginalCurrency
								invoked.CurrencyRate																	 = ReceivableInvoiceRel.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate
								invoked.CurrencyMultiplicationOrDivision												 = ReceivableInvoiceRel.CurrencyMultiplicationOrDivision
								invoked.SummarizeDetail																	 = ReceivableInvoiceRel.SummarizeDetail
								invoked.CrossReferenceReceivableInvoiceType												 = ReceivableInvoiceRel.ReceivableCrossReference.ReceivableInvoiceType
								invoked.CrossReferenceReceivableInvoice													 = ReceivableInvoiceRel.ReceivableCrossReference.ReceivableInvoice

		Delete is a Delete Action
			valid when (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedInMaintenanceForm)
			Action Rules

			Entrance Rules

				invoke InvoiceCustomerUpdate NationalAccountBalanceRel
					invoked.PrmCompany			= NationalAccount.InvoiceAccountGroup.Company
					invoked.PrmCustomer 		= NationalAccount.InvoiceAccountGroup.Customer
					invoked.PrmType				= 2

				invoke Delete NationalAccountTransactionDeleteRel

				invoke FastUpdate CompanyCustomerRel
					invoked.NationalAccountIndicator = blank	

				if (!IsNationalAccountParentRel) 
					invoke FastUpdate ParentCompanyCustomerRel
						invoked.NationalAccountIndicator = blank

			Exit Rules
				if (!IsNationalAccount)
					confirmation required
							"DeletingInvoicedRecordWillAlsoDeletesTheParentRecord"
					invoke Delete NationalAccountBalanceRel



		DeleteWithMassUpdateLogic is an Instance Action
			completion message is "DeletePending;RunNationalAccountTransactionUpdate"
			default label is "Delete"
			valid when (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedWithMassUpdateLogic)
			Entrance Rules
				constraint (!IsDeletePending)
					"CustomerIsAlreadySetForDeletion;RunNationalAccountTransactionUpdate"

			Action Rules
				NationalAccountTransactionStatus = 2


		JustDelete is a Delete Action  
			restricted
			Entrance Rules
				if (NationalAccount.NationalAccountGroup.NatCompany.NatAccountTransUpdateSource.TransactionsUpdatedInMaintenanceForm)
					invoke Delete NationalAccountTransactionDeleteRel

			Exit Rules
				invoke Update CompanyCustomerRel
					invoked.NationalAccountIndicator = blank


		UpdateNationalAcctBalanceRules is an Instance Action
			Parameters
				AccountCreditLimit	is a CreditLim
				ReceivableHoldCode	is a HoldCode
				Required 			is Boolean
				CycleCode			is Boolean
				NASummary			is Boolean
				ZeroBalance			is Boolean
				PastDueOnly			is Boolean
				OverCreditLimitOnly	is Boolean
				CreditBalance		is Boolean
			Parameter Rules
				AccountCreditLimit
					initial value is NationalAccountBalanceRel.CreditLimit
				ReceivableHoldCode
					initial value is NationalAccountBalanceRel.ReceivableHoldCode
				Required
					initial value is NationalAccountBalanceRel.StatementRequired
				NASummary
					initial value is NationalAccountBalanceRel.NationalAccountSummaryStatement
				ZeroBalance
					initial value is NationalAccountBalanceRel.ZeroBalanceStatement
				CreditBalance
					initial value is NationalAccountBalanceRel.CreditBalanceStatement
				CycleCode
					initial value is NationalAccountBalanceRel.ReceivableStatementCycle
		
		Purge is a Purge Action
			restricted
