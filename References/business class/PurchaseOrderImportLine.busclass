PurchaseOrderImportLine is a BusinessClass
    owned by po
    prefix is CAL
    classic name is POCLINE

    Ontology
        symbolic key is PurchaseOrderImportLine

    Patterns
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

    Persistent Fields
    	RunGroup
    	Company							is a PurchasingCompany
    	PurchaseOrderImport     		is like PurchaseOrderImport
			default label is "InterfacePurchaseOrder"
		POCode
		Vendor
		PurchaseOrder                                       
		LineNumber
		RecordType						is Numeric 2
			classic name is REC-TYP
			States
				AddPurchaseOrderLine     value is 2
				UpdatePurchaseOrderLine  value is 4
				CancelPurchaseOrderLine  value is 8
				DoNotUpdate              value is 98
        HasError                         is Boolean
        ErrorMessage                     is Alpha 150
        ErrorLevel                       is Numeric 2
        	States
        		Line                     value is 2
        		LineAOC                  value is 5
        		LineComment              value is 7
        		LineDistribution         value is 8
        		LineAssetDefault         value is 9
        ResultProcessedBy                is a PurchaseOrderInterfaceResult
        Item
        ItemType
        ServiceCode
        Description
        Quantity
        EnteredUnitCost                  is an InternationalCost
            classic name is ENT-UNIT-CST
            precision is DerivedNumberOfDecimalsCost
            default label is "UnitCost"
        TaxableUnitCost                  is an InternationalCost
            classic name is TAXBL-UNT-CST
        EnteredBuyUOM                    is a UnitOfMeasure
            classic name is ENT-BUY-UOM
        EarlyDeliveryDate                is Date
            classic name is EARLY-DL-DATE
        LateDeliveryDate                 is Date
            classic name is LATE-DL-DATE
        ShipToLocation                   is an InventoryLocation
            classic name is LOCATION
        VendorItem
            classic name is VEN-ITEM
        DistributionCode                 is a PayablesDistributionCode
            classic name is DIST-CODE
        TaxCode
        StockWeight
            classic name is WEIGHT
        StockVolume
            classic name is CUBIC-FEET
        CostOption
        CertificationRequired            is Boolean
            classic name is CERT-REQ-FL
        InspectionRequired               is Boolean
            classic name is INSP-REQ-FL
        MSDSRequired                     is Boolean
            classic name is MSDS-FLAG
        IgnoreLeadTimeCalculation        is Boolean
            classic name is NO-LT-CALC-FL
        Taxable                          is Boolean
            classic name is TAXABLE-FLAG
        OvershipmentTolerancePercentage
            sql name is OTolerancePercentage
            classic name is OSHIP-TOL-PCT
        UndershipmentTolerancePercentage
            sql name is UTolerancePercentage
            classic name is USHIP-TOL-PCT
        UserDate3                        is Date
        UserDate4                        is Date
        MajorPurchasingClass
            classic name is PURCH-MAJCL
        MinorPurchasingClass
            classic name is PURCH-MINCL
        Manufacturer
            classic name for Manufacturer.ManufacturerCode is MANUF-CODE
            classic name for Manufacturer.ManufacturerDivision is MANUF-DIVISION
        ManufacturerNumber
            classic name is MANUF-NBR
        Closed
            classic name is CLOSED-FL
        ZeroOvershipment                 is Boolean
            classic name is ZERO-OSHIP-FL
            restricted
        ZeroUndershipment                is Boolean
            classic name is ZERO-USHIP-FL
            restricted
        ExcludeFromAddOnChargeSpread     is Boolean
            classic name is EXCL-AOC-SPRD
        PurchaseOrderUserField2
            classic name is PO-USER-FLD-2
        PurchaseOrderUserField4          is a UserFld2
            classic name is PO-USER-FLD-4
        PurchaseOrderUserField6          is a UserFld3
            classic name is PO-USER-FLD-6
        TaxUsageCode
            classic name is TAX-USAGE-CD
        ICNCode
        SupplementaryQuantity            is a Quantity
            classic name is SUPLMNTARY-QTY
        CommodityCode					 is a CommCodes
        Retainage                        is Boolean
        RetainageFirstPercent            is a Pct
            classic name is RET-PCT-1
        RetainageSecondPercent           is a Pct
            classic name is RET-PCT-2
        RetainageUpToPercentComplete     is a Pct
            classic name is RET-UP-TO-PCT
        RetainageOverridePercentComplete is a Pct
            sql name is ROverridePercentComplete
            classic name is RET-OVRD-PCT
        ProductTaxCategory
            classic name is PROD-TAX-CAT
        ItemGTIN
            classic name is GTIN
        GlobalLineType
            classic name is GLBL-LINE-TYPE
		PurchaseOrderLineCreated		is Boolean
		DistributionBy
		OvershipmentToleranceOption
		UndershipmentToleranceOption
		EAMWorkOrder
		EAMWorkOrderActivity
		EAMProjectID
		EAMProjectType
		EAMProjectTaxCode
		EAMManufacturing
    	EAMTrade
    	EAMCommodityCode
    	EAMLineType
    	Chemical					is Boolean
    	RebuildRepair				is Boolean
    	TestRequired				is Boolean
    	EAMTool						is a EAMToolField  
    	HSNSACCode
		
	Context Fields
		ContextPurchaseOrderImport is a PurchaseOrderImport
	
	Local Fields
		LocalInterfaceResult            is like PurchaseOrderInterfaceResult
		LocalErrorMessage               is Alpha 150
		LocalRunGroup                   is like RunGroup
		LocalPurchaseOrderLineExists    is like PurchaseOrder
		LocalPurchaseOrder2             is like PurchaseOrder
		LocalFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
		
	Derived Fields
		DerivedNumberOfDecimalsCost is a ConditionalField
			type is Numeric size 1
			restricted
			if (Item exists)
				Item.NumberOfDecimalsCost
			else
				InventoryCompanyRel.NumberOfDecimalsCost
				
		NotEligibleToCancelMessage is a MessageField
    		restricted
    		"PurchaseOrderLineIsNotEligibleToCancel"
    		
    	NotFoundToCancelMessage is a MessageField
    		restricted
    		"ReferencedPurchaseOrderLineCannotBeFoundToCancel"
		
		PurchaseOrderLineAlreadyExistsMessage is a MessageField
    		restricted
    		"CannotAddNewPurchaseOrderLine;PurchaseOrderLineNumberAlreadyExists"
    
    	DuplicateLineMessage is a MessageField
    		restricted
    		"CannotProcessLine;DuplicateImportLinesExistForThisPurchaseOrderAndLineNumber"
    	
    	CannotUpdateClosedMessage is a MessageField
    		restricted
    		"CannotUpdate;PurchaseOrderIsClosed"
    		
    	NotFoundToUpdateMessage is a MessageField
    		restricted
    		"ReferencedPurchaseOrderLineCannotBeFoundToUpdate"
    		
    	AddOnChargeNotEligibleToCancelMessage is a MessageField
    		restricted
    		"AddOnChargeIsNotEligibleToCancel"
    		
    	AddOnChargeNotFoundToUpdateMessage is a MessageField
    		restricted
    		"AddOnChargeCannotBeFoundToUpdate"
    		
    	CannotSetToClosedMessage is a MessageField
    		restricted
    		"CannotSetHeaderOrLineToClosed;MustProcessToGetToClosedStatus"
    		
    	CannotBeHistoricalMessage is a MessageField
    		restricted
    		"LineOrAddOnChargeCannotBeSetToHistoricalIfHeaderNotSetToHistorical"	
    		
	Relations
		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company          = Company

		PurchaseOrderImportRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByRunGroup2
				related.RunGroup            = RunGroup
				related.Company				= Company
				related.PurchaseOrderImport	= PurchaseOrderImport
				related.POCode              = POCode

		InterfaceHeaderIsHistoricalRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByPurchaseOrderImport
				related.Company              = Company
				related.PurchaseOrderImport  = PurchaseOrderImport
				related.POCode               = POCode
			Instance Selection
				where (related.Closed = "H")
		
		InterfacedPurchaseOrderRel
			one-to-many relation to InterfacedPurchaseOrder
			Field Mapping uses ByImport
				related.Company              = Company
				related.PurchaseOrderImport  = PurchaseOrderImport
				related.POCode               = POCode
		
		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company              = Company
				related.PurchaseOrder        = PurchaseOrder
		
		PurchaseOrder2Rel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company              = Company
				related.PurchaseOrder        = LocalPurchaseOrder2
		
		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company              = Company
				related.PurchaseOrder        = LocalPurchaseOrderLineExists
				related.PurchaseOrderLine    = LineNumber
		
		DistributionsRel
			one-to-many relation to PurchaseOrderImportLineDistribution
			Field Mapping uses ByRunGroup
				related.RunGroup                    = RunGroup
				related.Company						= Company
				related.PurchaseOrderImport     	= PurchaseOrderImport
				related.POCode                      = POCode
				related.LineNumber					= LineNumber

		PurchaseOrderDistributionsRel
			one-to-many relation to PurchaseOrderLineDistribution
			Field Mapping uses symbolic key
				related.Company                     = Company
				related.PurchaseOrder               = LocalPurchaseOrderLineExists
				related.PurchaseOrderLine           = LineNumber
		
		AddOnChargesRel
			one-to-many relation to PurchaseOrderImportAddOnCharge
			Field Mapping uses ByRunGroup
				related.RunGroup                    = RunGroup
				related.Company						= Company
				related.PurchaseOrderImport     	= PurchaseOrderImport
				related.POCode                      = POCode
				related.LineNumber					= LineNumber

		CommentsRel
			one-to-many relation to PurchaseOrderImportComment
			Field Mapping uses Set1
				related.Company						= Company
				related.PurchaseOrderImport     	= PurchaseOrderImport
				related.POCode                      = POCode
				related.LineNumber					= LineNumber
				
		PurchaseOrderImportAssetDefaultsRel
			one-to-many relation to PurchaseOrderImportAssetDefaults
			Field Mapping uses Set1
				related.Company                     = Company
				related.PurchaseOrderImport         = PurchaseOrderImport
				related.POCode                      = POCode                    
				related.LineNumber                  = LineNumber
				
		PurchaseOrderLineAssetDefaultsRel
			one-to-one relation to PurchaseOrderLineAssetDefaults
			Field Mapping uses symbolic key
				related.Company                     = Company
				related.PurchaseOrder			    = LocalPurchaseOrderLineExists                  
				related.PurchaseOrderLine           = LineNumber
		
		LocalInterfaceResultsRel
			one-to-one relation to PurchaseOrderInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.PurchaseOrderInterfaceResult		= LocalInterfaceResult 
				
		PurchaseOrderImportByRunGroupRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByRunGroup
				related.RunGroup                    = LocalRunGroup
		
		PurchaseOrderLineDistributionsWithAssetTemplateRel
            one-to-many relation to PurchaseOrderImportLineDistribution
            Field Mapping uses Set1
                related.Company                   = Company
                related.PurchaseOrderImport       = PurchaseOrderImport
                related.POCode                    = POCode
                related.LineNumber				  = LineNumber
            Instance Selection
            	where (related.AddOnCharge not entered
            	and    related.AssetTemplate entered)
            	
        DuplicateImportLineRel
        	one-to-many relation to PurchaseOrderImportLine
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
				related.LineNumber          = LineNumber
				related.RecordType      	= RecordType
			Instance Selection  		        	
        		where (related.PurchaseOrderImportLine     != PurchaseOrderImportLine)
        
        OtherStandaloneImportLinesRel
        	one-to-many relation to PurchaseOrderImportLine
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
        	Instance Selection
        		where (related.PurchaseOrderImportLine     != PurchaseOrderImportLine
        		and    !related.PurchaseOrderImportExists)
        		
        OtherStandaloneImportAddOnChargesRel
        	one-to-many relation to PurchaseOrderImportAddOnCharge
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
        	Instance Selection
        		where (related.Standalone)

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

    Sets

		Set1
			Sort Order
				Company
				PurchaseOrderImport
				POCode
				LineNumber
				RecordType
				
		ByRunGroup
			Sort Order
				RunGroup
				Company
				PurchaseOrderImport
				POCode
				LineNumber
				RecordType
				

	Conditions
		NoOtherStandaloneRecords
			restricted
			when (!OtherStandaloneImportLinesRel exists
			and   !OtherStandaloneImportAddOnChargesRel exists)
		
		RecordExists
			restricted
			when (PurchaseOrderImportLine exists)
			
		AssetTemplateExists
			when (PurchaseOrderLineDistributionsWithAssetTemplateRel exists)

		AssetDefaultExists
			when (PurchaseOrderImportAssetDefaultsRel exists)
		
		DistributionsExist
			restricted
			when (DistributionsRel exists)
			
		PurchaseOrderDistributionsExist
			restricted
			when (PurchaseOrderDistributionsRel exists)
		
		PurchaseOrderImportExists
			restricted
			when (PurchaseOrderImportRel exists)
			
		PurchaseOrderExists
			restricted
			when (PurchaseOrderRel exists)
			
		PurchaseOrderLineExists
			restricted
			when (PurchaseOrderLineRel exists)
			
		CancelLine
			restricted
			when (RecordType = RecordType.CancelPurchaseOrderLine)
			
		AddLine
			restricted
			when (RecordType = RecordType.AddPurchaseOrderLine)
			
		UpdateLine
			restricted
			when (RecordType = RecordType.UpdatePurchaseOrderLine)
		
		DoNotUpdateLine
			restricted
			when (RecordType = RecordType.DoNotUpdate)	

		AddOrUpdateLine
			restricted
			when (AddLine
			or    UpdateLine)
			
		ClosedPO
    		restricted
    		when (Closed = "Y")
    		
    	HistoricalPO
    		restricted
    		when (Closed = "H")
    		
    	HeaderIsHistorical
    		restricted
    		when (InterfaceHeaderIsHistoricalRel exists)
    		
    	DuplicateLineExists
    		restricted
    		when (DuplicateImportLineRel exists)
    		
    	IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)
			
    Field Rules
		RunGroup
			default to PurchaseOrderImportRel.RunGroup
			required
		Company
			initial value is ContextPurchaseOrderImport.Company
			required
			cannot be changed
		PurchaseOrderImport
			initial value is ContextPurchaseOrderImport.PurchaseOrderImport
			required
			cannot be changed
		POCode
			initial value is ContextPurchaseOrderImport.POCode
			cannot be changed
		PurchaseOrder
			if (InterfacedPurchaseOrderRel exists
			and !PurchaseOrderImportExists)
        		PurchaseOrder = InterfacedPurchaseOrderRel.PurchaseOrder
		LineNumber
			required
			cannot be changed
		RecordType
			constraint (!first PurchaseOrderImportRel.PurchaseOrderImportRecordType = 7)
				"CannotAssociateAnImportLineRecordWithAPurchaseOrderCancellation"
			if (first PurchaseOrderImportRel.PurchaseOrderImportRecordType = 1)
				default to 2
			if (first PurchaseOrderImportRel.PurchaseOrderImportRecordType = 1)
				constraint (RecordType = 2)
					"RecordTypeMustBeAddPurchaseOrderLineIfPurchaseOrderRecordTypeIsAdd"

			required
			cannot be changed
		Vendor
			force default to first PurchaseOrderImportRel.Vendor
		Description
			default to Item.Description
        Closed
            default to "N"

	Actions
		Create is a Create Action
		
		CreateNoRules is a Create Action
			restricted
			bypass field rules
			
		Update is an Update Action
			
			Action Rules
				constraint (!PurchaseOrderLineCreated)
					"CannotUpdateInterfaceLine;PurchaseOrderLineHasAlreadyBeenCreated"
		
		FastUpdate is an Update Action
			restricted
			bypass field rules
								
		Delete is a Delete Action
			Entrance Rules
				invoke Delete PurchaseOrderImportAssetDefaultsRel
				invoke Delete AddOnChargesRel
				invoke Delete CommentsRel
				invoke Delete DistributionsRel
				if (PurchaseOrderLineCreated)
					invoke Delete PurchaseOrderLineRel
				if (!PurchaseOrderImportExists
				and PurchaseOrder entered
				and NoOtherStandaloneRecords)
					invoke UpdateFromInterface PurchaseOrderRel
						invoked.SetInterfaceInProcessFalse   = true
		
		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
		
		MassDelete is a Set Action
			restricted
			Parameters
				PrmRunGroup                 is a RunGroup
					default label is "RunGroup"
					
			Instance Selection
				where (PrmRunGroup !entered
				or     RunGroup = PrmRunGroup)
				
			Sort Order
				RunGroup
				Company	
				PurchaseOrderImport
				
			Action Rules
			
				Instance Rules
				
					invoke Delete
		
		CreateAssetDefaults is an Instance Action
			restricted
			Parameters
    			PrmCompany                  is a PurchasingCompany
    			PrmRecordType               is Numeric 2
    				States
						AddAssetDefaults			value is 15
						UpdateAssetDefaults			value is 16
    			AssetDescription         	is a Description
		        TagNumber 
		        AssetGroup
		        AssetAccountingUnitGroup
		        Combine 
		        HoldAsset                	is Boolean
		        ItemNumber                	is an AssetItemNumber
		        Project						is a FinanceCodeBlockProjectOnly
		        ItemDescription          	is a Description
		        ModelNumber
		        PurchaseDate	             is Date
		        InServiceDate   	         is Date
		        TransactionItemTax  	     is an InternationalAmount
		        AssetLocation
		        AssetDivision
		        LocationDetail          	 is an AssetLocationDetail
		        
		    Parameter Rules
		    	PrmCompany
		    		default to Company
		    
		    Action Rules
		    	invoke Create PurchaseOrderImportAssetDefaults
		    		invoked.Company						= PrmCompany
                	invoked.PurchaseOrderImportLine     = PurchaseOrderImportLine
	                invoked.PurchaseOrderImport         = PurchaseOrderImport
	                invoked.LineNumber                  = LineNumber
	                invoked.RecordType                  = RecordType
	                invoked.AssetDescription            = AssetDescription
	                invoked.TagNumber                   = TagNumber
	                invoked.AssetGroup                  = AssetGroup
	                invoked.AssetAccountingUnitGroup    = AssetAccountingUnitGroup
	                invoked.Combine               	    = Combine
	                invoked.HoldAsset                   = HoldAsset
	                invoked.ItemNumber                  = ItemNumber
	                invoked.Project                     = Project
	                invoked.ItemDescription             = ItemDescription
	                invoked.ModelNumber                 = ModelNumber
	                invoked.PurchaseDate                = PurchaseDate
	                invoked.InServiceDate               = InServiceDate
	                invoked.AssetLocation               = AssetLocation
	                invoked.AssetDivision               = AssetDivision
	            	invoked.LocationDetail              = LocationDetail
		
		UpdateRunGroup is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmRunGroup					is a RunGroup
				NewRunGroup					is a RunGroup

			Instance Selection
				where (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    RunGroup = PrmRunGroup)
				
			Sort Order
				RunGroup
				Company
			
			Action Rules
				Instance Rules
					RunGroup   = NewRunGroup

		SetError is an Instance Action
 			restricted
 			Parameters
 				PrmErrorMessage			is Alpha 150
 				PrmResult      			is like PurchaseOrderInterfaceResult
 				PrmErrorLevel           is Numeric 2
 					
			Action Rules
				LocalInterfaceResult   = PrmResult
				LocalFinanceEnterpriseGroup		= GeneralLedgerCompanyRel.FinanceEnterpriseGroup							
				ErrorMessage					= PrmErrorMessage
				ErrorLevel                      = PrmErrorLevel
				

				
		LoadInterfacedPurchaseOrderLines is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmRunGroup					is a RunGroup
				PrmCompany                  is a PurchasingCompany
				PrmResult                   is like PurchaseOrderInterfaceResult
				PrmSpecificAction           is Numeric 1
					States
						Create              value is 1
						Update              value is 2
						Cancel              value is 3
			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				
			Local Fields
				LocalPurchaseOrder      		is like PurchaseOrder
				LocalPurchaseOrderRecordInError is Boolean
				PurchaseOrderWithErrors         is like PurchaseOrderImport
				LocalExtendedAmount				is an InternationalAmount
    			LocalExtendedTaxableAmount		is an InternationalAmount
    			LocalStockWeight				is a StockWeight
    			LocalStockVolume				is a StockVolume
    			LocalAccruedTaxAmount			is an InternationalAmount
    			LocalInvoicedTaxAmount			is an InternationalAmount
    			LocalOpenPurchaseAmount         is an InternationalAmount
    			LocalNumberOfLines				is a NumberOfLines
    			LocalNumberOfClosedLines		is a NumberOfClosedLines	
							
			Instance Selection			
				where (RunGroup	= PrmRunGroup
				and  ((PrmCompany  not entered
				and    GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
				or     Company	= PrmCompany))

			Sort Order
				RunGroup
				Company	
				PurchaseOrderImport
				POCode
				
			Action Rules
				Empty Set Rules
				
					invoke LoadInterfacedPurchaseOrderLineDistributions PurchaseOrderImportLineDistribution
						
						invoked.PrmFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup 
						invoked.PrmRunGroup                 = PrmRunGroup
						invoked.PrmCompany                  = PrmCompany
						invoked.PrmResult                   = PrmResult
						invoked.PrmSpecificAction           = PrmSpecificAction
				
				RunGroup Set Rules
					
					Exit Rules
						
						invoke LoadInterfacedPurchaseOrderLineDistributions PurchaseOrderImportLineDistribution
							invoked.PrmFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup                 = PrmRunGroup
							invoked.PrmCompany                  = PrmCompany
							invoked.PrmResult                   = PrmResult
							invoked.PrmSpecificAction           = PrmSpecificAction
			
				POCode Set Rules
					
					Entrance Rules
						if (PurchaseOrderImportExists)
							LocalPurchaseOrder = PurchaseOrderImportRel.PurchaseOrder
							LocalPurchaseOrder2 = PurchaseOrderImportRel.PurchaseOrder
						LocalPurchaseOrderRecordInError = PurchaseOrderImportRel.RecordInError
						
						initialize LocalNumberOfLines
						initialize LocalNumberOfClosedLines
						initialize LocalStockWeight
						initialize LocalStockVolume
						initialize LocalExtendedAmount
    					initialize LocalExtendedTaxableAmount
    					initialize LocalAccruedTaxAmount
    					initialize LocalInvoicedTaxAmount
						initialize LocalOpenPurchaseAmount
					
					Exit Rules
						
						if (PurchaseOrderImportExists)
							LocalPurchaseOrder2 = PurchaseOrderImportRel.PurchaseOrder
						else
						if (PurchaseOrderExists) 
							LocalPurchaseOrder2 = PurchaseOrder
						invoke UpdateHeaderAmountsFromPurchaseOrderLine PurchaseOrder2Rel
							invoked.PrmFromBatch				= true
							invoked.PrmNumberOfLines  			= LocalNumberOfLines
							invoked.PrmNumberOfClosedLines 		= LocalNumberOfClosedLines
							invoked.PrmStockWeight          	= LocalStockWeight
							invoked.PrmStockVolume	        	= LocalStockVolume
							invoked.PrmExtendedAmount			= LocalExtendedAmount
    						invoked.PrmExtendedTaxableAmount	= LocalExtendedTaxableAmount
    						invoked.PrmAccruedTaxAmount			= LocalAccruedTaxAmount
    						invoked.PrmInvoicedTaxAmount	    = LocalInvoicedTaxAmount
							invoked.PrmOpenPurchaseAmount       = LocalOpenPurchaseAmount
							
				Instance Rules
					
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalInterfaceResult 		= PrmResult
					if (InterfacedPurchaseOrderRel exists
					and !PurchaseOrderImportExists)
		        		PurchaseOrder = InterfacedPurchaseOrderRel.PurchaseOrder
					if (PurchaseOrderExists) 
						LocalPurchaseOrder = PurchaseOrder
						LocalPurchaseOrder2 = PurchaseOrder
						invoke UpdateFromInterface PurchaseOrder2Rel
							invoked.SetUpdateInProcessTrue  	= true
							invoked.PrmOriginatingInterfaceRun  = PrmResult
					if ((PurchaseOrderImportExists
					and LocalPurchaseOrderRecordInError = false)
					or (!PurchaseOrderImportExists
					and (HasError = false
					or   LocalInterfaceResultsRel.IncludePurchaseOrdersInError )))
						LocalPurchaseOrderLineExists = LocalPurchaseOrder
						if  (RecordType.AddPurchaseOrderLine
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 1))
							initialize PurchaseOrderWithErrors
							HasError 	= false
							initialize ErrorMessage
							ErrorLevel 	= 0	
							if (ClosedPO)
								HasError			  = true
								LocalErrorMessage 	  = CannotSetToClosedMessage
							else 
							if (HistoricalPO
							and !HeaderIsHistorical)
								HasError		   = true
								LocalErrorMessage  = CannotBeHistoricalMessage
							else
							if (DuplicateLineExists)
								HasError           = true
								LocalErrorMessage  = DuplicateLineMessage 
							else
							if (!PurchaseOrderLineExists)
								if (PurchaseOrderLineCreated = false)
									invoke CreateFromImport PurchaseOrderLine
										resume on error
											HasError    		= true
											LocalErrorMessage	= error message
										fill in fields from this instance
											except invoked.PurchaseOrder
											except invoked.ItemGTIN
											except invoked.EnteredUnitCost
										invoked.PurchaseOrder 		= LocalPurchaseOrder
										invoked.PurchaseOrderLine 	= LineNumber
										invoked.VendorBuyUnitCost	= EnteredUnitCost
										if (LocalInterfaceResultsRel.EnableGTINProcessing)
											invoked.ItemGTIN    = ItemGTIN
										if (Retainage = true)
											invoked.Retainage  = 1
										else
										if (Retainage = false)
											invoked.Retainage  = 0
										if (DistributionsExist
										or  DistributionCode entered)
											invoked.BypassDistributionCreation = true
										if (HistoricalPO
										or  HeaderIsHistorical)
											invoked.Released   = true
											invoked.Issued     = true 
											invoked.PurchaseOrderLineLifeCycleState = 4 
											invoked.Closed = "H"	
								if (!HasError)
									PurchaseOrderLineCreated = true
									increment LocalNumberOfLines 
									if (Closed = true)
										increment LocalNumberOfClosedLines
									LocalExtendedAmount				+= PurchaseOrderLineRel.ExtendedAmount
									LocalExtendedTaxableAmount		+= PurchaseOrderLineRel.ExtendedTaxableAmount
									LocalStockWeight				+= PurchaseOrderLineRel.StockWeight
									LocalStockVolume				+= PurchaseOrderLineRel.StockVolume
									LocalAccruedTaxAmount			+= PurchaseOrderLineRel.AccruedTaxAmount
									LocalInvoicedTaxAmount			+= PurchaseOrderLineRel.InvoicedTaxAmount
									LocalOpenPurchaseAmount         += PurchaseOrderLineRel.OpenPurchaseAmount
									for each AddOnChargesRel
										if (!HasError)
											invoke CreatePurchaseOrderLineAddOnCharge PurchaseOrderAndLineAddOnCharge
												resume on error
													HasError          = true
													LocalErrorMessage = error message
												fill in fields from each
												invoked.PurchaseOrder        = LocalPurchaseOrder
												invoked.PurchaseOrderLine    = LineNumber
															
											if (!HasError)
												invoke FastDelete each
											else 
											if (HasError)
												if (PurchaseOrderImportExists)
													invoke SetError PurchaseOrderImportRel
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 5
												else
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 5
												PurchaseOrderWithErrors = PurchaseOrderImport 
													
								if (!HasError)
									for each CommentsRel
										if (!HasError)
											invoke SystemCreateLine PurchaseOrderLineComment
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												fill in fields from each
												invoked.PurchaseOrder        = LocalPurchaseOrder
												invoked.PurchaseOrderLine    = LineNumber
												
											if (!HasError)
												invoke FastDelete each
											else 
											if (HasError)
												if (PurchaseOrderImportExists)
													invoke SetError PurchaseOrderImportRel
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 7
												else
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 7
												PurchaseOrderWithErrors = PurchaseOrderImport 
										
								if (!HasError)
									for each PurchaseOrderImportAssetDefaultsRel
										if (each.RecordType = 15)
											invoke Create PurchaseOrderLineAssetDefaults
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												invoked.Company						= Company
												invoked.PurchaseOrder               = LocalPurchaseOrder
												invoked.PurchaseOrderLine           = LineNumber
												invoked.AssetDescription            = each.AssetDescription
												invoked.TagNumber                   = each.TagNumber
												invoked.AssetGroup                  = each.AssetGroup
												invoked.AssetAccountingUnitGroup    = each.AssetAccountingUnitGroup
												invoked.Project                     = each.Project
												invoked.Combine               	    = each.Combine
												invoked.HoldAsset                   = each.HoldAsset
												invoked.ItemNumber                  = each.ItemNumber
												invoked.ItemDescription             = each.ItemDescription
												invoked.ModelNumber                 = each.ModelNumber
												invoked.PurchaseDate                = each.PurchaseDate
												invoked.InServiceDate               = each.InServiceDate
												invoked.AssetLocation               = each.AssetLocation
												invoked.AssetDivision               = each.AssetDivision
												invoked.LocationDetail              = each.LocationDetail
										else
										if (each.RecordType = 16)
											invoke Update PurchaseOrderLineAssetDefaultsRel
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												fill in fields from each
										if (!HasError)
											invoke FastDelete PurchaseOrderImportAssetDefaultsRel
										else 
										if (HasError)
											if (PurchaseOrderImportExists)
												invoke SetError PurchaseOrderImportRel
													invoked.PrmErrorMessage = LocalErrorMessage
													invoked.PrmResult       = PrmResult
													invoked.PrmErrorLevel   = 9
											else
												invoke SetError
													invoked.PrmErrorMessage = LocalErrorMessage
													invoked.PrmResult       = PrmResult
													invoked.PrmErrorLevel   = 9
											PurchaseOrderWithErrors = PurchaseOrderImport 
							else
							if (PurchaseOrderLineExists
							and PurchaseOrderLineCreated = false)
								HasError           = true
								LocalErrorMessage  = PurchaseOrderLineAlreadyExistsMessage
							if (!PurchaseOrderImportExists)
								ResultProcessedBy = PrmResult
						else
						if  ((RecordType.UpdatePurchaseOrderLine
						or   RecordType.DoNotUpdate)
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 2))
							HasError 	= false
							initialize ErrorMessage
							ErrorLevel 	= 0	
							initialize PurchaseOrderWithErrors
							if (PurchaseOrderLineExists
							and RecordType.UpdatePurchaseOrderLine)
								if (PurchaseOrderLineRel.Released = false)
									invoke Unreleased.Update PurchaseOrderLineRel
										resume on error
											HasError    		= true
											LocalErrorMessage	= error message
										fill in fields from this instance
											except invoked.EnteredUnitCost
										invoked.PurchaseOrder 		= LocalPurchaseOrder
										invoked.PurchaseOrderLine 	= LineNumber
										invoked.VendorBuyUnitCost	= EnteredUnitCost
										invoked.FromInterfaceUpdate = true
										if (Retainage = true)
											invoked.Retainage  = 1
										else
										if (Retainage = false)
											invoked.Retainage  = 0
								else
								if (PurchaseOrderLineRel.Released
								and (PurchaseOrderRel.IsClosed = false
								or  Company.ReopenPurchaseOrder))
									invoke Released.Update PurchaseOrderLineRel
										resume on error
											HasError    		= true
											LocalErrorMessage	= error message
										fill in fields from this instance
											except invoked.EnteredUnitCost
										invoked.PurchaseOrder 		= LocalPurchaseOrder
										invoked.PurchaseOrderLine 	= LineNumber
										invoked.VendorBuyUnitCost	= EnteredUnitCost
										invoked.FromInterfaceUpdate = true
										if (Retainage = true)
											invoked.Retainage  = 1
										else
										if (Retainage = false)
											invoked.Retainage  = 0
								else
								if (PurchaseOrderRel.IsClosed
								and Company.ReopenPurchaseOrder = false)
									HasError    		= true
									LocalErrorMessage 	= CannotUpdateClosedMessage  	
								if (!HasError)
									for each AddOnChargesRel
										if (!HasError)
											if (each.RecordType.AddAddOnCharge)
												invoke Create PurchaseOrderAndLineAddOnCharge
													resume on error
														HasError          = true
														LocalErrorMessage = error message
													fill in fields from each
														except invoked.PurchaseOrder
														except invoked.PurchaseOrderLine
													invoked.PurchaseOrder 		= LocalPurchaseOrder
													invoked.PurchaseOrderLine 	= LineNumber
												if (!HasError)
													invoke FastDelete each
												if (HasError)
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 3
											else
											if  (each.RecordType.UpdateAddOnCharge)
												if (each.AddOnChargeExists)
													invoke Update each.PurchaseOrderAndLineAddOnChargeRel
														resume on error
															HasError     		= true
															LocalErrorMessage	= error message
														fill in fields from each
														invoked.PurchaseOrder 		= LocalPurchaseOrder
														invoked.PurchaseOrderLine 	= LineNumber
													if (!HasError)
														invoke FastDelete each
													if (HasError)
														invoke SetError
															invoked.PrmErrorMessage = LocalErrorMessage
															invoked.PrmResult       = PrmResult
															invoked.PrmErrorLevel   = 3
												else 
												if (!each.AddOnChargeExists)
													HasError            = true
													LocalErrorMessage   = AddOnChargeNotFoundToUpdateMessage
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 3
											else
											if  (each.RecordType.CancelAddOnCharge)
												if (each.PurchaseOrderAndLineAddOnChargeRel.IsCancelAllowed)
													invoke CancelPurchaseOrderAddOnCharge each.PurchaseOrderAndLineAddOnChargeRel
														resume on error
															HasError     		= true
															LocalErrorMessage	= error message
												else
												if (each.PurchaseOrderAndLineAddOnChargeRel.IsCancelAllowed = false)
													HasError            = true
													LocalErrorMessage   = AddOnChargeNotEligibleToCancelMessage
												if (!HasError)
													invoke FastDelete each
												if (HasError)
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 3
													
								if (!HasError)
									for each CommentsRel
										if (!HasError)
											invoke SystemCreateLine PurchaseOrderLineComment
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												fill in fields from each
												invoked.PurchaseOrder        = LocalPurchaseOrder
												invoked.PurchaseOrderLine    = LineNumber
												
											if (!HasError)
												invoke FastDelete each
											else 
											if (HasError)
												if (PurchaseOrderImportExists)
													invoke SetError PurchaseOrderImportRel
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 7
												else
													invoke SetError
														invoked.PrmErrorMessage = LocalErrorMessage
														invoked.PrmResult       = PrmResult
														invoked.PrmErrorLevel   = 7
												PurchaseOrderWithErrors = PurchaseOrderImport 
										
								if (!HasError)
									for each PurchaseOrderImportAssetDefaultsRel
										if (each.RecordType = 15)
											invoke Create PurchaseOrderLineAssetDefaults
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												invoked.Company						= Company
												invoked.PurchaseOrder               = LocalPurchaseOrder
												invoked.PurchaseOrderLine           = LineNumber
												invoked.AssetDescription            = each.AssetDescription
												invoked.TagNumber                   = each.TagNumber
												invoked.AssetGroup                  = each.AssetGroup
												invoked.AssetAccountingUnitGroup    = each.AssetAccountingUnitGroup
												invoked.Project                     = each.Project
												invoked.Combine               	    = each.Combine
												invoked.HoldAsset                   = each.HoldAsset
												invoked.ItemNumber                  = each.ItemNumber
												invoked.ItemDescription             = each.ItemDescription
												invoked.ModelNumber                 = each.ModelNumber
												invoked.PurchaseDate                = each.PurchaseDate
												invoked.InServiceDate               = each.InServiceDate
												invoked.AssetLocation               = each.AssetLocation
												invoked.AssetDivision               = each.AssetDivision
												invoked.LocationDetail              = each.LocationDetail
										else
										if (each.RecordType = 16)
											invoke Update PurchaseOrderLineAssetDefaultsRel
												resume on error
													HasError	      = true
													LocalErrorMessage = error message
												fill in fields from each
										if (!HasError)
											invoke FastDelete PurchaseOrderImportAssetDefaultsRel
										else 
										if (HasError)
											if (PurchaseOrderImportExists)
												invoke SetError PurchaseOrderImportRel
													invoked.PrmErrorMessage = LocalErrorMessage
													invoked.PrmResult       = PrmResult
													invoked.PrmErrorLevel   = 9
											else
												invoke SetError
													invoked.PrmErrorMessage = LocalErrorMessage
													invoked.PrmResult       = PrmResult
													invoked.PrmErrorLevel   = 9
											PurchaseOrderWithErrors = PurchaseOrderImport 
							else
							if (!PurchaseOrderLineExists)
								HasError            = true
								LocalErrorMessage   = NotFoundToUpdateMessage
							if (!PurchaseOrderImportExists)
								ResultProcessedBy = PrmResult
						else
						if  (RecordType.CancelPurchaseOrderLine
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 3))
							
							HasError 	= false
							initialize ErrorMessage
							ErrorLevel 	= 0	
							initialize PurchaseOrderWithErrors
							if (PurchaseOrderLineExists
							and PurchaseOrderLineRel.PurchaseOrderLineEligibleToBeCancelled)
								invoke CancelLine PurchaseOrderLineRel
									resume on error
										HasError    		= true
										LocalErrorMessage	= error message
							else
							if (!PurchaseOrderLineExists)
								HasError    		= true
								LocalErrorMessage 	= NotFoundToCancelMessage
							else
							if (PurchaseOrderLineRel.PurchaseOrderLineEligibleToBeCancelled = false)
								HasError    		= true
								LocalErrorMessage 	= NotEligibleToCancelMessage
							if (!PurchaseOrderImportExists)
								ResultProcessedBy = PrmResult
						
						if (HasError)
							if (PurchaseOrderImportExists)
								invoke SetError PurchaseOrderImportRel
									invoked.PrmErrorMessage = LocalErrorMessage
									invoked.PrmResult       = PrmResult
									invoked.PrmErrorLevel   = 2
							else
								invoke SetError
									invoked.PrmErrorMessage = LocalErrorMessage
									invoked.PrmResult       = PrmResult
									invoked.PrmErrorLevel   = 2
							PurchaseOrderWithErrors = PurchaseOrderImport 
						else
						if (!HasError)
							if ((PrmSpecificAction = 0)
							or ((RecordType.UpdatePurchaseOrderLine
							or  RecordType.DoNotUpdate)
							and PrmSpecificAction = 2)
							or (RecordType.AddPurchaseOrderLine
							and PrmSpecificAction = 1)
							or (RecordType.CancelPurchaseOrderLine
							and PrmSpecificAction = 1))
								if (!DistributionsExist)
									
									if (PurchaseOrder entered)
										invoke UpdateFromInterface PurchaseOrderRel
											invoked.SetInterfaceInProcessFalse   = true
											if (LocalInterfaceResultsRel.ReleasePurchaseOrders)
												invoked.ReleasePurchaseOrder = true	
												
									invoke FastDelete






										
		FinishLoadInterfaceLines is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmRunGroup             	is a RunGroup
				PrmCompany              	is a Company
				PrmResult               	is like PurchaseOrderInterfaceResult
				PrmSpecificAction           is Numeric 1
					States
						Create              value is 1
						Update              value is 2
						Cancel              value is 3
						       
			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
					
			Instance Selection
				where (RunGroup = PrmRunGroup
				and   !PurchaseOrderImportExists 
				and   ((PrmCompany not entered
				and    GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
				or     Company  = PrmCompany))
				
			Sort Order
				RunGroup
				Company
				
			Action Rules
				Empty Set Rules
					invoke FinishLoadInterfaceAddOnCharges PurchaseOrderImportAddOnCharge
						invoked.PrmFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
						invoked.PrmRunGroup         	  = PrmRunGroup
						invoked.PrmCompany          	  = PrmCompany
						invoked.PrmResult           	  = PrmResult
						invoked.PrmSpecificAction   	  = PrmSpecificAction
					
				RunGroup Set Rules
								
					Exit Rules
						invoke FinishLoadInterfaceAddOnCharges PurchaseOrderImportAddOnCharge
							invoked.PrmFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup         	  = PrmRunGroup
							invoked.PrmCompany          	  = PrmCompany
							invoked.PrmResult           	  = PrmResult
							invoked.PrmSpecificAction   	  = PrmSpecificAction
						
				Instance Rules
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalInterfaceResult 		= PrmResult
					if (!HasError)
						if ((PrmSpecificAction = 0)
						or ((RecordType.UpdatePurchaseOrderLine
						or  RecordType.DoNotUpdate)
						and  PrmSpecificAction = 2)
						or (RecordType.AddPurchaseOrderLine
						and PrmSpecificAction = 1)
						or (RecordType.CancelPurchaseOrderLine
						and PrmSpecificAction = 3))
							invoke UpdateFromInterface PurchaseOrderRel
								invoked.SetInterfaceInProcessFalse   = true
								if (LocalInterfaceResultsRel.ReleasePurchaseOrders)
									invoked.ReleasePurchaseOrder = true
							


