RebateQualifierContract is a BusinessClass
    owned by po
    prefix is RQCN
    
    Ontology
  		symbolic key is RebateQualifierContract

	Patterns
		implements ContextualParent
		
    Persistent Fields
    	OriginalContractNumber							is Numeric size 15	
    	NumberOfItemsSelectedForQualificationPurposes	is Numeric size 9    	
    	NumberOfEligibleItemsToSelect					is Numeric size 9
    	
    Local Fields
		LocalContractAndContractLine   
		
	Derived Fields
		DerivedSelectAllItemsForRebateMessage is a MessageField
			restricted
			"SelectAllItemsForRebateQualification"
			
		DerivedAllItemsHaveBeenSelectedForQualificationMessage is a MessageField
			restricted
			"AllItemsHaveBeenSelectedForRebateQualification"
			
		DerivedAllItemsHaveBeenSelectedForCalculationMessage is a MessageField
			restricted
			"AllItemsHaveBeenSelectedForRebateCalculation"
			
		DerivedJobSubmissionMessage is a MessageField
			restricted
			"JobHasBeenSubmitted.CheckForCompletionIn'MyScheduledActions'."

		DerivedDeleteAllCalculationOnlyItemsForRebateMessage is a MessageField
			restricted
			"DeleteAllItemsSelectedForRebateCalculationOnly"
			
		DerivedCompletionMessageSelectAllItemsForQualificationAction is a ConditionalField
			type is Alpha size up to 150
			restricted
			if (Contract.NumberOfLinesQuickApproximation < 1000)
				DerivedAllItemsHaveBeenSelectedForQualificationMessage
			else
				DerivedJobSubmissionMessage
				            	
		DerivedCompletionMessageSelectAllItemsForCalculationAction is a ConditionalField
			type is Alpha size up to 150
			restricted
			if (Contract.NumberOfLinesQuickApproximation < 1000)
				DerivedAllItemsHaveBeenSelectedForCalculationMessage
			else
				DerivedJobSubmissionMessage

		DerivedCompletionMessageDeleteAllItemsForCalculationOnlyAction is a ConditionalField
			type is Alpha size up to 150
			restricted
			if (Contract.NumberOfLinesQuickApproximation < 1000)
				DerivedDeleteAllCalculationOnlyItemsForRebateMessage
			else
				DerivedJobSubmissionMessage
	
    Conditions
    	NotAllItemsSelected
    		restricted
    		when (ContractRebateQualifier.ShowSelectAllItemsOption
    		and   NumberOfItemsSelectedForQualificationPurposes != NumberOfEligibleItemsToSelect)
    		
	Relations
		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup 				= ContractGroup
				related.Contract      				= OriginalContractNumber
				
		ContractLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup 				= ContractGroup
				related.Contract      				= OriginalContractNumber
				
		DirectBuyContractLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup				= ContractGroup
				related.Contract					= OriginalContractNumber
			Instance Selection
				where (!related.Contract.IsDistributorContract
				or    (related.Contract.IsDistributorContract
				and	   related.DistributorContractLineNonManufacturerContract))     
				
		ContractRebateQualifierItemsRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses symbolic key
				related.ContractGroup 			= ContractGroup
				related.Contract    			= Contract
				related.ContractRebateType		= ContractRebateType				
				related.ContractRebate			= blank
				related.ContractRebateQualifier = ContractRebateQualifier
            Instance Selection
            	where (related.ContractRebateQualifierItem.RebateContract = OriginalContractNumber
	            and    related.ContractRebateQualifierItem.RebateContractLine != 0)
				
		RebateQualifierItemRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses symbolic key
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractRebateType		= ContractRebateType
				related.ContractRebate			= blank
				related.ContractRebateQualifier	= ContractRebateQualifier
            Instance Selection
            	where (related.ContractRebateQualifierItem.RebateContract     = LocalContractAndContractLine.Contract
            	and    related.ContractRebateQualifierItem.RebateContractLine = LocalContractAndContractLine.ContractLine)
				
		ContractRebateQualifierItemsForQualifierWithoutNonQualifyingItemsRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses symbolic key
				related.ContractGroup 			= ContractGroup
				related.Contract    			= Contract
				related.ContractRebateType		= ContractRebateType				
				related.ContractRebate			= blank
				related.ContractRebateQualifier = ContractRebateQualifier
            Instance Selection
            	where (related.ContractRebateQualifierItem.RebateContract 		= OriginalContractNumber
	            and    related.ContractRebateQualifierItem.RebateContractLine 	!= 0
	            and    related.UseThisItemForQualificationPurposes				= true)
				
		ContractRebateQualifierItemsForCalculationOnlyRel
			one-to-many relation to ContractRebateQualifierItem
			Field Mapping uses symbolic key
				related.ContractGroup 			= ContractGroup
				related.Contract    			= Contract
				related.ContractRebateType		= ContractRebateType				
				related.ContractRebate			= blank
				related.ContractRebateQualifier = ContractRebateQualifier
            Instance Selection
            	where (related.UseThisItemForQualificationPurposes				= false)
				
		RebateQualifierContractsItemsAlreadyAddedForRel
			one-to-many relation to RebateQualifierContract
			Field Mapping uses ByOriginalContract
				related.ContractGroup 			= ContractGroup
				related.OriginalContractNumber	= OriginalContractNumber 
				related.Contract    			= Contract
				related.ContractRebateType		= ContractRebateType				
				related.ContractRebate			= blank
            Instance Selection
            	where (related.ContractRebateQualifier	!= ContractRebateQualifier)
				
	Sets
		ByOriginalContract
			duplicates
			Sort Order
				ContractGroup
            	OriginalContractNumber    
				Contract
				ContractRebateType
				ContractRebate
				ContractRebateQualifier

		ByContract
			duplicates
			Sort Order
				ContractGroup
				Contract
            	OriginalContractNumber    
	
  	Field Rules
  	
  	Actions     	 	
 		Create is a Create Action
 			restricted
 		    Field Rules
 		    	NumberOfEligibleItemsToSelect
 		    		if (Contract.NumberOfLinesQuickApproximation < 1000)
 		    			NumberOfEligibleItemsToSelect = instance count of DirectBuyContractLinesRel
 		    		else
 		    			NumberOfEligibleItemsToSelect = Contract.NumberOfLinesQuickApproximation	
 		    
 		    Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToAddRebateQualifierContracts"
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToAddRebateQualifierContract"
    		Exit Rules
				invoke CountContractLine ContractLine
					invoked.PrmContractGroup			= ContractGroup
					invoked.PrmContract					= Contract
					invoked.PrmOriginalContractNumber	= OriginalContractNumber
					invoked.PrmContractRebateType		= ContractRebateType
					invoked.PrmContractRebate			= ContractRebate
					invoked.PrmContractRebateQualifier	= ContractRebateQualifier
				
				if (ContractRebateQualifier.CalculateOnAllContractItemsSpend)
					invoke SelectAllItemsForRebateCalculation RebateQualifierContract
 					
 		Update is an Update Action
 			restricted
 		    Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToModifyRebateQualifierContracts"
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToModifyRebateQualifierContract"
	            		
 		Delete is a Delete Action
 			valid when (Contract.CanAmend)
 			Action Rules
    			constraint (Contract.CanAmend)
    				"ContractMustBeInDraftOrAddendumOrAmendmentStatusToDeleteRebateQualifierContracts"
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToDeleteRebateQualifierContract"
 				if (ContractRebateQualifierItemsRel exists)
					confirmation required
						"RebateQualifierItemsExistForThisContract.DoYouWantToContinueAndHaveThemDeletedForYou?"
					invoke Delete ContractRebateQualifierItemsRel
			Exit Rules
				if (ContractRebate.TotalExpectedAmount entered)
	    			invoke SetQualifierChangedFlagToYes ContractRebate		
				
		SelectAllItemsForRebateQualification is an Instance Action
			valid when (NotAllItemsSelected)
			completion message is "<DerivedCompletionMessageSelectAllItemsForQualificationAction>"

			Action Rules
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToAddRebateQualifierItems"
    			initialize NumberOfItemsSelectedForQualificationPurposes
				initialize NumberOfEligibleItemsToSelect
    			if (Contract.NumberOfLinesQuickApproximation < 1000)
					for each ContractLinesRel
                        if ((each.Contract.IsDistributorContract
                        and  each.ContractLine.ManufacturerContract        = each.Contract)
                        or (!each.Contract.IsDistributorContract))						
                        	LocalContractAndContractLine.Contract 	  = each.Contract
							LocalContractAndContractLine.ContractLine = each.ContractLine
							if (!RebateQualifierItemRel exists)
								invoke Create ContractRebateQualifierItem				
									invoked.ContractGroup									= ContractGroup
									invoked.Contract										= Contract
									invoked.ContractRebateType								= ContractRebateType
									invoked.ContractRebateQualifier							= ContractRebateQualifier
									invoked.ContractRebateQualifierItem.RebateContract		= each.Contract
									invoked.ContractRebateQualifierItem.RebateContractLine	= each.ContractLine
									if (each.ServicePurchaseTypeContract)
										invoked.ItemNumber                                  = each.ItemDescription
									else
									if (each.ItemNumber entered)
										invoked.ItemNumber									= each.ItemNumber
									else
									if (each.Contract.ManufacturerOrDistributor.ManufacturerContract
									and each.ManufacturerNumber entered)

										invoked.ItemNumber									= each.ManufacturerNumber
									else
										invoked.ItemNumber									= each.DerivedItemFromVendorOrManufacturerItem
									invoked.UseThisItemForQualificationPurposes				= true
							else
								invoke Update RebateQualifierItemRel
									invoked.UseThisItemForQualificationPurposes				= true
							

					NumberOfEligibleItemsToSelect					= instance count of DirectBuyContractLinesRel
					NumberOfItemsSelectedForQualificationPurposes	= NumberOfEligibleItemsToSelect
				else
					invoke SelectAllItemsForRebateQualification ContractLine
						invoked.PrmContractGroup						= ContractGroup
						invoked.PrmContract								= Contract
						invoked.PrmContractRebateType					= ContractRebateType
						invoked.PrmContractRebate						= ContractRebate
						invoked.PrmContractRebateQualifier				= ContractRebateQualifier
						invoked.PrmOriginalContractNumber				= OriginalContractNumber

		SelectAllItemsForRebateCalculation is an Instance Action
			completion message is "<DerivedCompletionMessageSelectAllItemsForCalculationAction>"
			restricted
			Action Rules
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToAddRebateQualifierItems"
    			initialize NumberOfItemsSelectedForQualificationPurposes
				initialize NumberOfEligibleItemsToSelect
    			if (Contract.NumberOfLinesQuickApproximation < 1000)
					for each ContractLinesRel
						LocalContractAndContractLine.Contract 	  = each.Contract
						LocalContractAndContractLine.ContractLine = each.ContractLine
						if ((!RebateQualifierItemRel exists)
						and (!RebateQualifierContractsItemsAlreadyAddedForRel exists))
							invoke Create ContractRebateQualifierItem				
								invoked.ContractGroup									= ContractGroup
								invoked.Contract										= Contract
								invoked.ContractRebateType								= ContractRebateType
								invoked.ContractRebateQualifier							= ContractRebateQualifier
								invoked.ContractRebateQualifierItem.RebateContract		= each.Contract
								invoked.ContractRebateQualifierItem.RebateContractLine	= each.ContractLine
								if (each.ServicePurchaseTypeContract)
									invoked.ItemNumber                                  = each.ItemDescription
								else
								if (each.ItemNumber entered)
									invoked.ItemNumber									= each.ItemNumber
								else
								if (each.Contract.ManufacturerOrDistributor.ManufacturerContract
								and each.ManufacturerNumber entered)
									invoked.ItemNumber									= each.ManufacturerNumber
								else
									invoked.ItemNumber									= each.DerivedItemFromVendorOrManufacturerItem
								invoked.UseThisItemForQualificationPurposes				= false
					NumberOfEligibleItemsToSelect					= instance count of DirectBuyContractLinesRel
					NumberOfItemsSelectedForQualificationPurposes	= instance count of ContractRebateQualifierItemsForQualifierWithoutNonQualifyingItemsRel	
				else
					invoke SelectAllItemsForRebateCalculation ContractLine
						invoked.PrmContractGroup						= ContractGroup
						invoked.PrmContract								= Contract
						invoked.PrmContractRebateType					= ContractRebateType
						invoked.PrmContractRebate						= ContractRebate
						invoked.PrmContractRebateQualifier				= ContractRebateQualifier
						invoked.PrmOriginalContractNumber				= OriginalContractNumber

		DeleteAllItemsForRebateCalculationOnly is an Instance Action
			completion message is "<DerivedCompletionMessageDeleteAllItemsForCalculationOnlyAction>"
			restricted
			Action Rules
    			constraint (ContractRebate.Active)
    				"ContractRebateMustBeActiveToAddRebateQualifierItems"
    			if (Contract.NumberOfLinesQuickApproximation < 1000)
					for each ContractLinesRel
						LocalContractAndContractLine.Contract 	  = each.Contract
						LocalContractAndContractLine.ContractLine = each.ContractLine
						if (RebateQualifierItemRel exists)
							invoke Delete ContractRebateQualifierItemsForCalculationOnlyRel
				else
					invoke DeleteAllNonQualificationItemsForRebateCalculation ContractLine
						invoked.PrmContractGroup						= ContractGroup
						invoked.PrmContract								= Contract
						invoked.PrmContractRebateType					= ContractRebateType
						invoked.PrmContractRebate						= ContractRebate
						invoked.PrmContractRebateQualifier				= ContractRebateQualifier
						invoked.PrmOriginalContractNumber				= OriginalContractNumber

		FastUpdate is an Instance Action
			restricted
			Parameters
				PrmSelectedItemCount			is Numeric size 9

			Action Rules
			    NumberOfEligibleItemsToSelect						= PrmSelectedItemCount
				if (ContractRebate.CalculateRebateAmountOnAllSpendForQualifyingContracts)
			   		NumberOfItemsSelectedForQualificationPurposes	= PrmSelectedItemCount
					
		UpdateItemCounts is a Set Action
			completion message is "UpdateItemCountsIsComplete"
			restricted
			Parameters
				PrmContractGroup			is a ContractGroup
				
			Parameter Rules
				PrmContractGroup
					required
						"ContractGroupIsRequired"
					
			Instance Selection
				where (ContractGroup		= PrmContractGroup)
				
			Action Rules
				Instance Rules
					NumberOfItemsSelectedForQualificationPurposes	= instance count of ContractRebateQualifierItemsForQualifierWithoutNonQualifyingItemsRel
                    if (ContractRel.IsDistributorContract)
                        NumberOfEligibleItemsToSelect               = instance count of DirectBuyContractLinesRel
                    else
                    	NumberOfEligibleItemsToSelect				= instance count of ContractLinesRel

		Purge is a Purge Action
			restricted
			
