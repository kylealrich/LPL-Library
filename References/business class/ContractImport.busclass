ContractImport is a BusinessClass
   	owned by po
    prefix is CNIM

    Ontology
    	symbolic key is ContractImport
	
	Patterns
		implements CompoundDocument
			Document Components
				ContractLineImport set
				ContractImportPriceChange set
        disable EffectiveDated

    Persistent Fields
    	Name 								is a Description
    	Description							is a Description4
	   	VendorAgreementReference			is AlphaUpper size 30  
    	ContractType
		ContractSubtype
		ContractClassification
		ContractSubclassification
		Supplier
		SupplierSourceId
    		default label is "SupplierContact"
    	Vendor	
	   	SupplierOriginatedContract			is Boolean
	   	WorkingContractID					is AlphaUpper size 30
	   	WorkingContractType					is Numeric size 2
    		States
    			Distributor						value is 3
     			GroupPurchasingOrganization	    value is 4
    			Manufacturer					value is 2
    			Project 						value is 7
    			Supplier						value is 1
		GPOContractNumber                                    
		ManufacturerSupplier                is a GPOSupplierID
			default label is "GPOAssignedSupplierNumber"
		FutureEffectiveDate                 is Date
		FutureExpirationDate                is Date
		EffectiveDate						is Date
		ExpirationDate						is Date
		ContractReviewDate					is Date
		RenewalContract						is Boolean
		ProposedTotalContractAmount	 		is an InternationalAmount
			precision is CurrencyCode.NumberOfDecimals
		MaximumAmount						is an InternationalAmount
		TotalLineMaximumAmount				is an InternationalAmount
		ApPoPurchaseFrom						
		TermsCode
		CurrencyCode						is a Currency
		PerOrderMinimumAmount				is Numeric 13
		PerOrderMaximumAmount				is Numeric 13
		NotificationPercent					is Numeric size 3
		CommodityCode
		ManufacturerCodeDivision 			is a Manufacturer
		LineLevelBreaks						is Numeric size 1
			States
				ContractTotals	 				value is 1
				OrderTotals 					value is 2
		UOMSMustMatch						is Boolean
			default label is "UO\MsMustMatch_forItemmast"
		UOMSMustMatchForSpecials			is Boolean
			default label is "UO\MsMustMatch_forSpecials"
		UseContractUOM						is Boolean
			default label is "UseContractUOM_forItemmast"	
		AllowReferenceOfItemsNotOnContract	is Boolean
		TaxCode
		DefaultTaxable						is Boolean
		DefaultAccount						is a FinanceCodeBlock
		CreateCommitments                   is Numeric 1 
			States
				No								value is 0
				Header							value is 1
				Line							value is 2
				HeaderSpread                    value is 3
				LineSpread                      value is 4                  	
		CommitmentCompany                   is an AccountingEntity 
		CommitmentAccount					is a FinanceCodeBlock
		GroupPurchasingOrganization 	
	    Stockless							is Boolean
		Priority							is Numeric size 1
		Buyer   						
		ScheduleFrequency   				is Numeric size 1
			States
				Weekly 							value is 1
				BiWeekly						value is 2
				Monthly							value is 3
				Quarterly						value is 4
		MaximumReleaseNumber				is Numeric size 4
		DoNotIssue							is Boolean
		FreightTerm
		ShipTerm
		POCode 							
		PoUserField1 						is AlphaUpper size 1
		PoUserField3 						is AlphaUpper size 10
		PoUserField5 						is Alpha size 30
		PayablesDistributionCode
			default label is "DistributionCode"
		BlanketStandingRequestingLocation   is a RequestingLocationGroup
			default label is "RequestingLocation"
		LifetimeEdit 						is Numeric size 1
			States
				PurchaseOrders					value is 0
				PurchaseOrdersAndReqs			value is 1
		RetainagePercentCompleteTracking 			is Numeric size 1
			States
				NoRetainage						value is 0
				HeaderLevel						value is 1
				LineLevel						value is 2
		RetainagePercent1 					is Percent size 5.2
		RetainageUpToPercent 				is Percent size 5.2
		RetainagePercent2 					is Percent size 5.2
		RetainageDueDays 					is Numeric size 4
		RetainageOverridePercent 			is Percent size 5.2
		ManufacturerOrDistributor
		SpreadEdits
			restricted
		Contact								is an Employee
		GPONegotiated						is Boolean 
		GPOSupplier 
		MultiTierDistributor                is Boolean
		ContractImportSource				is Numeric size 2
			States
				Manual							value is 1
				Interface						value is 2
		CreationInProgress                  is Boolean
		Template                            is Boolean
		S2Contract                          is Boolean
		NationalContractNumber              is Alpha size 120
		PreferredContract					is Boolean
		DoNotCreateDistributorContract      is Boolean
		EnableClinicalSystemUseLocations    is Boolean 
			default label is "PassLocationDataToClinicalUseSystems"
		LinesUpdated                        is Boolean 
		HeaderUpdated                       is Boolean

    Transient Fields
   			
	Local Fields
		LocalNewVendor						is like Vendor
		LocalNewPurchaseFrom				is like PurchaseFromLocation
		LocalContract						is a Contract
		UpdatedBaseCost						is an InternationalCost	
		OriginalBaseCost					is an InternationalCost
		LocalTolerancePercent				is Percent size 6.3
		LocalEffectiveDate					is Date
		LocalExpirationDate                 is Date
		LocalPriceChangeDate				is Date
		LocalTier                           is a ContractImportTier
		LocalLinkToContract                 is Boolean
		LocalUpdateContract                 is Boolean
		LocalDistributorPricingCode         is like ContractDistributorPricing
		LocalMembership                     is Alpha 7
		LocalItemSupplier                   is a GPOSupplierID
		LocalSupplier                       is a Supplier
		LocalSupplierSourceId               is like SupplierSourceId
		LocalUnreleasedMembersToStart       is Boolean
	Field Groups
		PushToContractLineImport  
			EffectiveDate
			ExpirationDate
		
	Derived Fields
		
		DerivedTolerancePercent is a DerivedField
			type is like InternationalAmount
			restricted
			return (LocalTolerancePercent * 100)

		ChangePercent is a DerivedField
			type is like InternationalAmount
			restricted
			return (((UpdatedBaseCost - OriginalBaseCost) / (OriginalBaseCost)) * 100)
			
		DerivedDefaultConnector                                                is a DerivedField
			type is Alpha size 10
			restricted
			if (ContractSubclassification entered)
				if (ContractSubclassification.Connector entered)
					if (ContractSubclassification.UseForInterface)
						return ContractSubclassification.Connector
					else
						return blank
				else
					return blank
			else
				if (ContractClassification.Connector entered)
					if (ContractClassification.UseForInterface)
						return ContractClassification.Connector
					else
						return blank
				else
					return blank				

		DerivedDefaultToleranceAmount                                          is a DerivedField
			type is like InternationalAmount
			if (ContractSubclassification entered)
				if (ContractSubclassification.UseForInterface)
					return ContractSubclassification.CostChangeToleranceAmount
			else
				if (ContractClassification.UseForInterface)
					return ContractClassification.CostChangeToleranceAmount	
				
		DerivedDefaultTolerancePercent                                          is a DerivedField
			type is Percent size 6.3
			if (ContractSubclassification entered)
				if (ContractSubclassification.UseForInterface)
					return ContractSubclassification.CostChangeTolerancePercent
			else
				if (ContractClassification.UseForInterface)
					return ContractClassification.CostChangeTolerancePercent	

		DerivedShowHealthcareInformation								is a DerivedField
			type is Boolean
			restricted
			if (ContractSubclassification entered)
				return ContractSubclassification.ShowHealthcareInformation
			else
				return ContractClassification.ShowHealthcareInformation

		DerivedRebateCode is a DerivedField
			type is Alpha size 50
			if (first ContractGPOHeaderRel.RebateCode = "+")
				return "1.0 To 5 Percent"
			else
			if (first ContractGPOHeaderRel.RebateCode = "++")
				return "5.1 To 10 Percent"
			else
			if (first ContractGPOHeaderRel.RebateCode = "+++")
				return "10.1 To 15 Percent"
			else
			if (first ContractGPOHeaderRel.RebateCode = "++++")
				return "15.1 To 20.0 Percent"
			else
			if (first ContractGPOHeaderRel.RebateCode = "+++++")
				return "20.1 Percent Or Greater" 

		DerivedChangePercent is a DerivedField
			type is like InternationalAmount
			restricted
			if (OriginalBaseCost not = 0)
				if (ChangePercent < 0)
					return ChangePercent * -1
				else
					return ChangePercent
			else
				return 0


		ChangeAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (UpdatedBaseCost - OriginalBaseCost)
			
		DerivedChangeAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (OriginalBaseCost not = 0)
				if (ChangeAmount < 0)
					return ChangeAmount * -1
				else
					return ChangeAmount
			else
				return 0
				
		NumberOfLines 													is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ContractLineImport set)	

		NumberOfLinesQuickApproximation 								is a ComputeField
			type is Numeric 6
			restricted
			(last ContractLineImport set.ContractLineImport)	

		ApPoPurchFrom is a ConditionalField
			type is Alpha size 4
			restricted		
			if (ApPoPurchaseFrom.PurchaseFromLocation entered)
				ApPoPurchaseFrom.PurchaseFromLocation
			else
				ApPoPurchaseFrom.VendorLocation
				
		DerivedPrimaryContract is a ConditionalField
			type is AlphaUpper size 30
			if (WorkingContractRel exists)
				first WorkingContractRel.RelatedContractID
			else
				ContractImport
				
		DerivedToContract is a DerivedField
			type is like Contract
			return first ContractsFromImportNavRel.Contract 
		
		DerivedToContractForGPO is a DerivedField
			type is like Contract
			return first ContractsFromImportRel.Contract 

		DerivedRelatedDescription is a StringField
			type is Alpha size 500
			restricted
			Name
			" "
			Description

		MultiTierDistributorMessage is a MessageField
			"MultiTierDistributor"
		
		ManufacturerContractMessage is a MessageField
			"Manufacturer"
		
		DistributorContractMessage is a MessageField
			"Distributor"

		ServiceMessage is a MessageField
			"Service"
		
		DoNotCreateDistributorContractMessage is a MessageField
			"DistributorContractsWillNotBeCreated"
		
		GPOContractType is a DerivedField
			type is Alpha size 30
			if (MultiTierDistributor)
				return MultiTierDistributorMessage
			else
			if (ManufacturerOrDistributor.ManufacturerContract)
				return ManufacturerContractMessage
			else
			if (ManufacturerOrDistributor.DistributorContract)
				return DistributorContractMessage
			else
				return ServiceMessage

		DerivedCreateNewContract is a DerivedField
			type is Boolean
			if(CreateNewContract = true)
				return true
			else
				return false
				
		DerivedCanUpdateContract is a DerivedField
			type is Boolean
			if(CanUpdateContract = true)
				return true
			else
				return false
				
		DerivedLineUOMErrors is a DerivedField
			type is Boolean
			if(LineUOMErrors = true)
				return true
			else
				return false
				
		DerivedHasNewEffectiveDate is a DerivedField
			type is Boolean
			if(HasNewEffectiveDate = true)
				return true
			else
				return false
				
		DerivedHasNewExpirationDate is a DerivedField
			type is Boolean
			if(HasNewExpirationDate = true)
				return true
			else
				return false
		
		DerivedContactName is a DerivedField
            type is Alpha size 101
            return Contact.FirstLastName
            
        DerivedContactEmail is a DerivedField
            type is Alpha size 100
            return Contact.EmployeeWorkEmailAddress

	Conditions
		NoPurchaseType
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType = blank))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType = blank)))
		HasUpdateFlagsSetToTrue 
			restricted 
			when (LinesUpdated 		= true                        
			or    HeaderUpdated 	= true)
		DistributedPurchasingChannel
			restricted
			when (GPONegotiated
			and   ContractGPOHeaderRel.PurchasingChannel contains "Distributed")
		DirectPurchasingChannel
			restricted
			when (GPONegotiated
			and   ContractGPOHeaderRel.PurchasingChannel contains "Direct")
		HasLinesWithMismatchedDates
			restricted
			when  (MismatchedDatesRel exists)
		ClassificationHasTolerances
			restricted
			when (DerivedDefaultToleranceAmount entered
			or    DerivedDefaultTolerancePercent entered)
		HasAPurchaseType
			restricted
			when (((ContractSubtype not entered)
			and   (ContractType.PurchaseType.Contract
			or	   ContractType.PurchaseType.Blanket
			or     ContractType.PurchaseType.Service					
			or     ContractType.PurchaseType.CatalogQuote
			or     ContractType.PurchaseType.Standing))
			or   ((ContractSubtype entered)
			and   (ContractSubtype.PurchaseType.Contract
			or     ContractSubtype.PurchaseType.Blanket
			or     ContractSubtype.PurchaseType.CatalogQuote
			or     ContractSubtype.PurchaseType.Service					
			or     ContractSubtype.PurchaseType.Standing))) 
		IsS2Contract
			restricted
			when (S2Contract = true)
		MultiplePriceProgram
			restricted
			when (ContractImportTierMemberMPPRel exists)
		NonServicePurchaseType
			restricted
			when (((ContractSubtype not entered)
			and   (ContractType.PurchaseType.Contract
			or	   ContractType.PurchaseType.Blanket
			or     ContractType.PurchaseType.CatalogQuote
			or     ContractType.PurchaseType.Standing))
			or   ((ContractSubtype entered)
			and   (ContractSubtype.PurchaseType.Contract
			or     ContractSubtype.PurchaseType.Blanket
			or     ContractSubtype.PurchaseType.CatalogQuote
			or     ContractSubtype.PurchaseType.Standing)))
		AssociatedContractClosed
			restricted
			when (HasAssociatedContract
			and   ManufacturerContractRel.ContractStatus.Closed)			
		AssociatedContractOpen
			restricted
			when (HasAssociatedContract
			and   !ManufacturerContractRel.ContractStatus.Closed)		
		NoDistributorLines
			restricted
			when (ContractGroup.DoNotAutoCreateDistributorLines = true
			and   CanCreateDistributorContracts)
		HasAssociatedContract
			when (ManufacturerContractRel exists)
		HasAssociatedGPOContract 
			restricted 
			when (GPOContractDirect exists)
		FutureDatesEntered
			when (FutureEffectiveDate entered
			or    FutureExpirationDate entered)
		CanUpdateNewDatesOnContract
			when ((FutureExpirationDate entered
			or     FutureEffectiveDate entered)
			and   (FutureEffectiveDate !entered
			or    (FutureEffectiveDate entered
			and    FutureEffectiveDate <= current date)))
		CanUpdateDatesOnContract
			when ((GPOContractNumber !entered
			or    (GPOContractNumber entered
			and    ContractGroup.DoNotAllowGPOUpdates = false))
			and    ContractLinesExist) 
		CanHaveReplenishment
			restricted
			when (Vendor entered
			and   ItemMasterLineRel exists)
		HasNewEffectiveDate
			restricted
			when (FutureEffectiveDate entered)
		HasNewExpirationDate
			restricted
			when (FutureExpirationDate entered)
		HasGPOSupplier
			restricted
			when (GPOSupplier entered)
		HasGPOSupplierAndIsHealthTrust
			restricted
			when (HasGPOSupplier
			and   GPOIsHealthTrust2021)
		HasGPOSupplierAndIsGHX
			restricted
			when (HasGPOSupplier
			and   GPOIsGHX)
		HasGPOSupplierAndIsNotGHX
			restricted
			when (HasGPOSupplier
			and   !GPOIsGHX)
		NewPurchaseFromLocationExists
			restricted
			when (NewPurchaseFromLocationRel exists)
		BlanketOrStandingOrServices
			restricted
			when (((ContractSubtype not entered)
			and   (ContractType.PurchaseType.Blanket
			or     ContractType.PurchaseType.Service					
			or     ContractType.PurchaseType.Standing))
			or   ((ContractSubtype entered)
			and   (ContractSubtype.PurchaseType.Blanket
			or     ContractSubtype.PurchaseType.Service					
			or     ContractSubtype.PurchaseType.Standing)))
			
		BlanketOrStanding
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Blanket
			or      ContractType.PurchaseType.Standing))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Blanket
			or      ContractSubtype.PurchaseType.Standing)))
		StandingOrService
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Standing
			or 	    ContractType.PurchaseType.Service))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Standing
			or 	    ContractSubtype.PurchaseType.Service)))
		ServicePurchaseType
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Service))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Service)))
		StandingPurchaseType
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Standing))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Standing)))
		ContractPurchaseType
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Contract))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Contract)))
		ContractOrBlanket
			restricted
			when (((ContractSubtype not entered)
			and    (ContractType.PurchaseType.Contract
			or      ContractType.PurchaseType.Blanket))
			or    ((ContractSubtype entered)
			and    (ContractSubtype.PurchaseType.Contract
			or      ContractSubtype.PurchaseType.Blanket)))
		ContractOrBlanketOrService
			restricted
			when ((ContractSubtype not entered
			and    ContractType.ContractOrBlanketOrServiceType)
			or    (ContractSubtype entered
			and    ContractSubtype.ContractOrBlanketOrServiceType))
			
		ContractOrBlanketOrCatalog
			restricted
			when ((ContractSubtype not entered
			and    ContractType.ContractOrBlanketOrCatalogType)
			or    (ContractSubtype entered
			and    ContractSubtype.ContractOrBlanketOrCatalogType))
		
		ContractAndNotManOrDist
			restricted
			when (IsNotDistributorAndNotManufacturer
			and   ContractOrBlanketOrCatalog)
		ContractTypeOrSubTypeChanged
			restricted
			when ((ContractSubtype changed)
			or    (ContractType changed))
		ToCostComparisonExists
			restricted
			when (ContractLineFromCostCompareRel exists)
		ChangeToPurchaseType
			restricted
			when (ContractTypeOrSubTypeChanged
			and   HasAPurchaseType
			and ((ContractSubtype not entered
			and   old ContractType.NoPurchaseType)
			or   (ContractSubtype entered
			and   old ContractSubtype.NoPurchaseType)))
		UseCommitments
			restricted
			when (CreateCommitments.Header
			or    CreateCommitments.Line
			or    CreateCommitments.HeaderSpread
			or	  CreateCommitments.LineSpread)
		UseHeaderCommitments
			restricted
			when (CreateCommitments.Header
			or	  CreateCommitments.HeaderSpread)
		UseLineCommitments
			restricted
			when (CreateCommitments.Line
			or	  CreateCommitments.LineSpread)
		IsManufacturerContract
			restricted
			when (ManufacturerOrDistributor.ManufacturerContract)
		IsManufacturerContractForGPONotMultiTierDistributor
			restricted
			when (IsManufacturerContractForGPO
			and   !MultiTierDistributor
			and   !DoNotCreateDistributorContract)
		IsManufacturerContractForGPONotGHX
			restricted
			when (IsManufacturerContractForGPO
			and  !GPOIsGHX)
		IsManufacturerContractForGPO
			restricted
			when (IsManufacturerContract
			and   GPONegotiated)
		IsManufacturerContractNotForGPO
			restricted
			when (IsManufacturerContract
			and   !GPONegotiated)
		IsDistributorContractForGPO
			restricted
			when (IsDistributorContract
			and   GPONegotiated)
		ServicePurchaseTypeForGPO
			restricted
			when (ServicePurchaseType
			and   GPONegotiated)
		IsDistributorContract
			restricted
			when (ManufacturerOrDistributor.DistributorContract)
		IsNotDistributorContract
			restricted
			when (!ManufacturerOrDistributor.DistributorContract)
		IsNotDistributorAndNotManufacturer
			restricted
			when ((!ManufacturerOrDistributor.DistributorContract)
			and  (!ManufacturerOrDistributor.ManufacturerContract))
		IsManufacturerOrDistributorContract
			restricted
			when (ManufacturerOrDistributor.ManufacturerContract
			or    ManufacturerOrDistributor.DistributorContract)
		IsNotDistributorAndNotManufacturerAndPurchaseType
			restricted	
			when (HasAPurchaseType
			and   IsNotDistributorAndNotManufacturer
			and   UseCommitmentsOnContract)
		LineRetainageExists
			restricted
			when (ContractLineImportRetainageRel exists)
		ContractLinesExist
			restricted
			when (ContractLineImport set exists)
		CreateLinesExist
			restricted
			when (ImportLineForContractRel exists)
		UseRetainage
			restricted
			when (!RetainagePercentCompleteTracking.NoRetainage)
		RetainageTurnedOn
			restricted
			when (RetainagePercentCompleteTracking changed
			and	  old RetainagePercentCompleteTracking.NoRetainage)
		NonBlankContractLinesExist
			restricted
			when (CreateLineRel exists
			or    UpdateLineRel exists
			or    DeleteLineRel exists)
		NonCreateContractLinesExist
			restricted
			when (UpdateLineRel exists
			or    DeleteLineRel exists
			or 	  BlankLineRel exists)
		NonUpdateContractLinesExist
			restricted
			when ((CreateLineRel exists
			or     DeleteLineRel exists
			or 	   BlankLineRel exists)
			and   !ServicePurchaseType)
		ContractLinesToDeleteExist 
			restricted 
			when (DeleteLineRel exists)
		ContractsFromImport
			restricted
			when (ContractsFromImportRel exists
            or    ContractsUpdatedFromImportRel exists)
		CanViewMultipleContracts
			restricted
			when (ContractsFromImport
			and  !GPOContractNumberEntered)
		CanViewSingleContract
			restricted
			when (ContractsFromImport
			and   GPOContractNumberEntered)
		CanUpdateContract
			when ((ContractsFromImport
			and    NonBlankContractLinesExist
			and    GPOContractNumberEntered)
			or    (NonBlankContractLinesExist
			and   !GPOContractNumberEntered))
		UpdateContract 
			restricted
			when (NonBlankContractLinesExist)
		PotentialCostDiscrepancies
			when (HasGPOSupplier
			and   ContractsFromImport
			and   UpdateLineRel exists)
		CreateNewContract
			when (!ContractsFromImport
			and   CreateLinesExist)
		CreateNewContractOrService
			when (CreateNewContract
			or   (ServicePurchaseType
			and   !ContractsFromImport)) 
		DisplayCanUseForCostDefaulting
			restricted
			when (HasAPurchaseType
			and   ContractImportLineRel exists)
			
		TierCostExists
			restricted
			when (ContractLineTierCostForTierRel exists)
			
		CompareTierCostExists
			restricted
			when (ContractLineTierCostForCompareTierRel exists)
		
		NoPurchaseTypeAndManufacturerContract
			restricted
			when (NoPurchaseType
			and   ManufacturerOrDistributor.ManufacturerContract)
			
		WorkingContractIDEntered
			restricted
			when (WorkingContractID entered)
		UpdateableLineErrorsExist
			restricted
			when (ContractImportUpdateableErrorLineRel exists)
		LineErrorsExist  
			restricted
            when (ContractImportErrorLineRel exists)
        HasLineErrors   
        	restricted
            when (ContractImportLineErrors exists)
        UpdatedContractExists
        	restricted
            when (ContractUpdatedFromImportRel exists)
		UseRetainageOnContract
			restricted                            
			when (ContractGroup.UseRetainage)
		UseCommitmentsOnContract
			restricted                
			when (ContractGroup.UseCommitments)
		TierCostsExist
			restricted
			when (ContractLineImportTierCostRel exists
			and   first ContractImportTierRel.FixedTier)        
		CanLinkToContract
			restricted
			when (ContractsFromImportNavRel !exists
			and   HasGPOSupplier
			and   !CreationInProgress
			and   !ServicePurchaseType)   
		CanUnlinkFromContract
			restricted
			when (HasGPOSupplier
			and   ContractsFromImportNavRel exists)
		HasOpenManufacturerContract
			restricted
			when (HasGPOSupplier
			and   ContractsFromImportNavRel exists)
		CanCreateFromGHX  
			restricted
			when (last GHXContractGPOHeaderRel.ManufacturerPartNumber = last CreateLineRel.ManufacturerInformation.ManufacturerNumber) 
		CanCreateContract
			restricted
			when (CreateLinesExist
			and  !CreationInProgress
			and  (CanLinkToContract
			or    !HasGPOSupplier))
		DistributorsExist
			restricted
			when (ContractImportDistributorRel exists)
		DistributorsToCreateExist
			restricted
			when (ContractImportDistributorToCreateRel exists)
		GPOContractNumberEntered
			restricted
			when (GPOContractNumber entered)
		NewGPOContractExists
			restricted
			when (DerivedToContract entered)
		GPOContractDoesNotExist
			restricted
			when (GPOContractNumberEntered
			and   ContractGPOHeaderRel !exists)
		GHXGPOContractDoesNotExist
			restricted
			when (GPOContractNumberEntered
			and   GHXContractGPOHeaderRel !exists)
		WholeContractDiscontinued
			when  (GPOContractNumberEntered
			and  ((ContractGroup.GPOUsed.GHX
			and    GHXContractGPOHeaderRel !exists)
			or   ((ContractGroup.GPOUsed.Vizient
			or     ContractGroup.GPOUsed.HealthTrust2021)
			and    ContractGPOHeaderRel !exists))) 
		AllDistributorsHavePricing
			restricted
			when (ContractImportDistributorNoPricingRel !exists)
		LineUOMErrors	
			when (LineUOMErrorsRel exists)
		DuplicateUOMErrors
			when (DuplicateUOMErrorsRel exists)
		LinesWithClosedCreateNew 
			when (ClosedLineCreateNewRel exists)
		TierWithNoQualifier
			restricted
			when (ContractImportTierNoQualifierRel exists)
		CanUpdateSupplierForGPO
			restricted
			when ((SupplierChanged
			or    (SupplierChangedFromMapping
			and   ContractsFromImportNavRel exists))
			and   NewSupplierMapped)
		SupplierChanged
			when (ManufacturerSupplier entered
			and   GPOSupplierMatchRel !exists) 
		SupplierChangedFromMapping
			when (Supplier != first ContractsFromImportNavRel.Supplier
			and   DerivedToContract entered) 
		SupplierChangedFromMappingOrGPO
			restricted
			when (SupplierChanged
			or    SupplierChangedFromMapping)
		ReplenishmentLinesExist
			restricted
			when (ReplenishmentLinesRel exists)
		NewSupplierNotMapped
			restricted
			when (GPOSupplierNameRel.SupplierNotMapped)
		NewSupplierMapped
			restricted
			when (GPOSupplierNameRel.SupplierMapped)		
		OpenPOLinesExist
			restricted
			when (OpenPurchaseOrderLinesRel exists)
		OpenReqLinesExist
			restricted
			when (OpenRequisitionLinesRel exists
			and   NewGPOContractExists)
		VendorMapped
			restricted
			when (GPOSupplierNameRel.ContractSupplier.Vendor entered)
		VendorEntered
			restricted
			when (Vendor entered)
		DirectVendorItemsToUpdate
			restricted
			when (VendorItemMismatchRel exists)
		IndirectVendorItemsToUpdate
			restricted
			when (DistributorVendorItemMismatchRel exists)
		VendorItemsToUpdate
			when (VendorItemMismatchRel exists 
			or    DistributorVendorItemMismatchRel exists)
		VendorItemUpdatesFromAttributes 
			restricted 
			when (VendorItemMismatchAndAttributeUpdateRel exists)
		DistributorHasMembersNeedingACode
			restricted
			when (ContractImportDistributorMismatchedMembersRel exists)
		HasMissingGPOItems
			restricted
			when (WholeContractDiscontinued
			or    ContractLinesToDeleteExist)  
		CanCreateDistributorContracts
			restricted
			when (ContractImportDistributorCreateContractRel exists)
		CanDefaultAccountToDistributor
			restricted
			when (CanCreateDistributorContracts
			and  (DefaultAccount entered
			or    PayablesDistributionCode entered))
		LinesToProcessExist
			restricted
			when (ProcessLineRel exists
			and   HasAssociatedContract)
		HasUpdatedTiers
			restricted
			when (UpdatedTierMembersRel exists)
		GPOIsHealthTrust
			restricted
			when (ContractGroup.GPOUsed = 1)
		GPOIsVizient
			restricted
			when (ContractGroup.GPOUsed = 2)
		GPOIsHealthTrust2021
			restricted
			when (ContractGroup.GPOUsed = 4)
		GPOIsGHX
			restricted
			when (ContractGroup.GPOUsed = 5)
		NoGPO
			restricted
			when (ContractGroup.GPOUsed = 0)
		GPOAndIsHealthTrust
			restricted
			when (GPOContractNumberEntered
			and   GPOIsHealthTrust)
		GPOAndIsHealthTrust2021
			restricted
			when (GPOContractNumberEntered
			and   GPOIsHealthTrust2021)
		GPOAndIsGHX
			restricted
			when (GPOContractNumberEntered
			and   GPOIsGHX)
		GPOSupplierIsUpdated
			restricted
			when ((GPOIsHealthTrust
			and    HPGMainHeaderChangedSupplierRel exists)
			or    (GPOIsVizient
			and    ContractGPOHeaderChangedSupplierRel exists)
			or    (GPOIsHealthTrust2021
			and    HPG2021ChangedSupplierRel exists))
		HasOtherGPOContractsForSupplier
			restricted
			when (HeadersForSupplierRel exists)
		HasOtherGPOContractsForSupplierGHX
			restricted
			when (HeadersForSupplierGHXRel exists)
		ManufacturerTierMemberRelExists
			when (ManufacturerTierMemberRel exists)
		HasS2Contracts
			when (S2ContractRel exists)
		HasTierMembersMissingOnContract
			when (NoContractTierMemberRel exists)
		HasDistributorLinesWithContracts 
			restricted 
			when (DistributorContractLineHasContractRel exists)
			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
		 	and   ContractGroup.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))
			
		MyContract
			default label is "MyContracts"
			when (Contact = actor.agent(Employee).Employee)

		HasLinesSelectedThatExistOnContract
			restricted 
			when (HasLinesSelectedForCopyAndOnContractRel exists)
		HasLinesSelectedForCopy 
			restricted 
			when (LineSelectedForCopyRel exists)
		HasLines 
			restricted 
			when (ContractLineImport set exists)

		TierMemberForManufacturerExists 
			restricted 
			when (TierMemberForManufacturerRel exists)

	Relations
	
		WorkingContractRel
			one-to-many relation to RelatedContract
			Field Mapping uses ByRelatedWorkingContract
				related.ContractGroup 		 = ContractGroup
				related.Contract      	 	 = ContractImport
				related.WorkingContract 	 = true
  			Instance Selection
  				where (related.RelatedContractType != blank)
  				
		NationalContractRel 
			one-to-many relation to ContractImport 
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber    = NationalContractNumber
				related.ContractGroup        = ContractGroup 
			Instance Selection 
				where (related.GPOContractNumber entered
				and    NationalContractNumber entered)

		S2ContractRel 
			one-to-many relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup        = ContractGroup
			Instance Selection
				where (related.NationalContractNumber = GPOContractNumber
				and    related.NationalContractNumber entered
				and    GPOContractNumber entered)
		
		ContractImportTierRel is a ContractImportTier set
		
		ContractImportTierMemberMPPRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup       = ContractGroup
				related.ContractImport      = ContractImport
			Instance Selection
				where (related.Tier !entered)
		
		NoContractTierMemberRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup       = ContractGroup
				related.ContractImport      = ContractImport
			Instance Selection
				where (related.NoContractTierMember = true)

		ContractTemplateRel 
			one-to-many relation to ContractImport
			Field Mapping uses ByContractDescending
				related.ContractGroup        = ContractGroup
				related.ContractImport       = ContractImport 
			Instance Selection
				where (related.Template)	
				
		NewSupplierSourceIDRel
			one-to-one relation to SupplierSourceId
			Field Mapping uses symbolic key
				related.SupplierGroup        = ContractGroup
				related.Supplier             = LocalSupplier
				related.SupplierSourceId     = LocalSupplierSourceId
		
		ContractGPOCategoryRel
			one-to-many relation to ContractGPOCategory
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber    = GPOContractNumber 

		ContractGPOCategory2021Rel
			one-to-many relation to ContractGPOCategory
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber    = GPOContractNumber
			Instance Selection
				where (related.ContractCycleNumber = HT2021CurrentRel.ContractCycleNumber) 

		ContractGPOSupplier2021Rel
			one-to-many relation to ContractGPOSupplier
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber    = GPOContractNumber

		ContractGPODistributorRel
			one-to-many relation to ContractGPODistributor
			Field Mapping uses BySupplier
				related.GPOContractNumber    = GPOContractNumber
				related.ItemSupplier         = LocalItemSupplier 

		ContractGPOTermRel
			one-to-many relation to ContractGPOTerm
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber    = GPOContractNumber 
			Instance Selection
				where (related.ManufacturerSupplier = ManufacturerSupplier) 

		UploadSpreadsheetRel
			one-to-many relation to SampleDocumentTemplate
			Field Mapping uses ByType
				related.Type         				= 101 
		
		FactSheetRel
			one-to-one relation to SampleDocumentTemplate
			Field Mapping uses symbolic key
				related.SampleDocumentTemplate      = "CATALOGINTERFACE_ST"
		
		GPOContractProcessingRel
			one-to-one relation to SampleDocumentTemplate
			Field Mapping uses symbolic key
				related.SampleDocumentTemplate      = "GPOCONTRACTPROCESSING_ST"

		ContractsFromImportRel     
			one-to-many relation to RelatedContract
			Field Mapping uses ByID
				related.ContractGroup       = ContractGroup
				related.RelatedContractID   = ContractImport
				related.RelatedContractType = 10
            Instance Selection
                where (related.Contract.NotClosed)			
				
		NewPurchaseFromLocationRel
			one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup          = ContractGroup
				related.Vendor               = LocalNewVendor
				related.PurchaseFromLocation = LocalNewPurchaseFrom 

		RelatedContractsToUnlink
			one-to-many relation to RelatedContract
            Field Mapping uses ByID
                related.ContractGroup       = ContractGroup
                related.RelatedContractID   = ContractImport.WorkingContractID				

		RelatedContractsToRemoveRel
            one-to-many relation to RelatedContract
            Field Mapping uses ByID
                related.ContractGroup       = ContractGroup
                related.RelatedContractID   = ContractImport
            Instance Selection
                where  (related.RelatedContractType = 10
                or      related.RelatedContractType = 12
				or      related.RelatedContractType = 15
				or      related.RelatedContractType = 18
				or      related.RelatedContractType = 19)
		
		ContractsFromImportNavRel
            one-to-many relation to RelatedContract
            Field Mapping uses ByID
                related.ContractGroup       = ContractGroup
                related.RelatedContractID   = ContractImport
            Instance Selection
                where ((related.RelatedContractType = 10
                or      related.RelatedContractType = 12)
                and     related.Contract.NotClosed)
                
        ContractsUpdatedFromImportRel
            one-to-many relation to RelatedContract
            Field Mapping uses ByID
                related.ContractGroup       = ContractGroup
                related.RelatedContractID   = ContractImport
                related.RelatedContractType = 12
            Instance Selection
            	where (related.Contract.NotClosed)
                
        ContractUpdatedFromImportRel
            one-to-many relation to RelatedContract
            Field Mapping uses ByID
                related.ContractGroup       = ContractGroup
                related.RelatedContractID   = ContractImport
                related.RelatedContractType = 12
            Instance Selection
                where (related.Contract = LocalContract)
		
		ContractImportLineRel is a ContractLineImport set 
		
		ContractImportLineProcessRel is a ContractLineImport set
            Instance Selection
                where (related.UpdateFunction = "U"
                or     related.UpdateFunction = "D"
                or     related.UpdateFunction = "C")
        
        ContractImportErrorLineRel is a ContractLineImport set
            Instance Selection
                where (related.ErrorsExist)
                
        ContractImportUpdateableErrorLineRel is a ContractLineImport set
            Instance Selection
                where (related.UpdateableErrorsExist)

        LinesWithDifferentManAndVendorItemsRel is a ContractLineImport set
            Instance Selection
                where (related.ManufacturerInformation.ManufacturerNumber != related.VendorItem)

        ContractImportLineErrors is a ContractLineImportError set
		
		OpenPurchaseOrderLinesRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByContractLine
				related.ProcurementGroup      = ContractGroup
				related.Contract              = DerivedToContract
			Instance Selection
				where (related.Closed = "N")
		
		OpenRequisitionLinesRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByContract
				related.Contract              = DerivedToContract
			Instance Selection
				where (related.SourceRecordExists = false
				and    related.Closed             = false)

		LineUOMErrorsRel 
			one-to-many relation to ContractLineImportError
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        	Instance Selection
        		where (related.UOMErrorsExist)				
		
		DuplicateUOMErrorsRel
			one-to-many relation to ContractLineImportError
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        	Instance Selection
        		where (related.DuplicateUOMErrorsExist)				

		ClosedLineCreateNewRel
			one-to-many relation to ContractLineImportError
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport		= ContractImport
			Instance Selection
				where (related.ErrorMessageNumber = 21)

		DuplicateUOMLinesRel
			one-to-many relation to ContractLineImport
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        	Instance Selection
        		where (related.LineWithDuplicateUOM)
        		
		CreateLineRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        		related.UpdateFunction	= "C"
        		
		ContractLineImportTierCostRel 
			one-to-many relation to ContractLineImportTierCost
			Field Mapping uses symbolic key
				related.ContractGroup   = ContractGroup
				related.ContractImport  = ContractImport
		
		ContractLineTierCostForTierRel
			one-to-many relation to ContractLineImportTierCost
			Field Mapping uses symbolic key
				related.ContractGroup   = ContractGroup
				related.ContractImport  = ContractImport
			Instance Selection
				where (related.ContractImportTier = LocalTier)
		
		ContractLineTierCostForCompareTierRel
			one-to-many relation to ContractLineTierCost
			Field Mapping uses symbolic key
				related.ContractGroup   = ContractGroup
				related.Contract	    = LocalContract
			Instance Selection
				where (related.ContractTier = LocalTier)
		
		UpdateLineRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        		related.UpdateFunction	= "U"
        
        DeleteLineRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        		related.UpdateFunction	= "D"
		
		NoGPOItemRel
			one-to-many relation to ContractLineImport
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        	Instance Selection
        		where (related.UpdateFunction = "D"
				or     WholeContractDiscontinued)

		ProcessLineRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        	Instance Selection
        		where (related.UpdateFunction = "D"
        		or     related.UpdateFunction = "C"
        		or     related.UpdateFunction = "U")			

		BlankLineRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	= ContractGroup
        		related.ContractImport	= ContractImport
        		related.UpdateFunction	= blank
        		
		ImportLineForContractRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByUpdateFunction
				related.ContractGroup	   = ContractGroup
        		related.ContractImport	   = ContractImport
        		related.UpdateFunction	   = "C"
        		
		ServiceLineRel is a ContractLineImport set 	 			
			Instance Selection
				where (related.ServiceItem)

		NonServiceLineRel is a ContractLineImport set  				
			Instance Selection
				where (related.NonServiceItem)

		ReplenishmentLinesRel is a ContractLineImport set
			Instance Selection
				where (related.ReplenishmentExists)
		
		PoCompanyRel
			one-to-many relation to PurchasingCompany
			Field Mapping uses Set2
				related.ProcurementGroup = ContractGroup

        ContractLinePriceChangeRel
        	one-to-many relation to ContractLinePriceChange
        	Field Mapping uses ByFromImport
        		related.FromImport               = ContractImport
        	Instance Selection
        		where (related.ContractGroup     = ContractGroup)
        
        ContractLinePriceChangeTierRel
        	one-to-many relation to ContractLinePriceChange
        	Field Mapping uses ByTierOnly		
        		related.ContractTier             = LocalTier
        	Instance Selection
        		where (related.ContractGroup     = ContractGroup
        		and    related.FromImport        = ContractImport)
        
        ContractImportPriceChangeRel
        	one-to-one relation to ContractImportPriceChange
        	Field Mapping uses symbolic key
        		related.ContractGroup			  = ContractGroup
        		related.ContractImport			  = ContractImport
        		related.ContractImportPriceChange = LocalPriceChangeDate
				
		ContractLineImportRetainageRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByRetainage
				related.ContractGroup		= ContractGroup
				related.ContractImport		= ContractImport
				related.Retainage			= 1
				
		UpdateContractTierRel
			one-to-one relation to ContractTier
			Field Mapping uses symbolic key
				related.ContractGroup	    = ContractGroup
        		related.Contract    	    = LocalContract
				related.ContractTier        = LocalTier
				
		ContractImportTierNoQualifierRel
			one-to-many relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup	    = ContractGroup
        		related.ContractImport    	= ContractImport
        	Instance Selection
        		where (related.NoQualifier)			

		ContractImportNewTierRel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup	    = ContractGroup
        		related.ContractImport    	= ContractImport
        		related.ContractImportTier  = LocalTier				

		ContractImportTierQualifierRel
			one-to-many relation to ContractImportTierQualifier
			Field Mapping uses symbolic key
				related.ContractGroup	    = ContractGroup
        		related.ContractImport    	= ContractImport
        		
        ContractImportTierQualCodeRel
        	one-to-many relation to ContractImportTierQualCode
        	Field Mapping uses symbolic key
				related.ContractGroup	    = ContractGroup
        		related.ContractImport    	= ContractImport
        		
		UpdateableLineErrorRel
			one-to-many relation to ContractLineImport
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport		= ContractImport
			Instance Selection
				where (related.UpdateableErrorsExist)

        LineErrorRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.ErrorsExist)
        
		VendorItemMismatchRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.UpdatedOrMismatchedVendorItem)

		VendorItemMismatchAndAttributeUpdateRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.UpdatedOrMismatchedVendorItem
				and    related.HasVendorItemUpdateFromAttributeUpdate)

		MismatchedDatesRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.EffectiveDate  != EffectiveDate
                or     related.ExpirationDate != ExpirationDate)		

		ItemMasterLineRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.ItemType = 1)

		LinesSelectedForCopyWithErrorsRel 
           	one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.SelectedForCopy
				and    related.ErrorsExist)				

		LineSelectedForCopyRel 
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.SelectedForCopy)		
		HasLinesSelectedForCopyAndOnContractRel
            one-to-many relation to ContractLineImport
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport			
           	Instance Selection
                where (related.SelectedForCopy
				and    related.ContractLineExists)		

		ExistingContractTierRel
			one-to-one relation to ContractTier 
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.Contract      = LocalContract		
				related.ContractTier  = LocalTier 
		
		DistributorVendorItemMismatchRel
            one-to-many relation to ContractLineImportDistributor
            Field Mapping uses symbolic key
                related.ContractGroup       = ContractGroup
                related.ContractImport      = ContractImport
            Instance Selection
                where (related.UpdatedOrMismatchedVendorItem)

        ContractImportRel
        	one-to-many relation to ContractImport
        	Field Mapping uses symbolic key
        		related.ContractGroup       = ContractGroup
        		
        ContractLineFromCostCompareRel
			one-to-many relation to ContractLinePriceChange
			Field Mapping uses ByFromImport
				related.FromImport	  = ContractImport
			Instance Selection
				where (related.ComparisonOnly
				and    related.ContractGroup = ContractGroup)
        
		ContractGPOItemRel
			one-to-many relation to ContractGPOItem
			Field Mapping uses ByGPOContract
				related.GPOContractNumber = GPOContractNumber

		ContractGPOItemUpdatedRel  
			one-to-many relation to ContractGPOItem
			Field Mapping uses ByGPOContract
				related.GPOContractNumber = GPOContractNumber
			Instance Selection 
				where (related.OperationFlagEntered)

		ContractGPOItemForSupplierRel
			one-to-many relation to ContractGPOItem
			Field Mapping uses BySupplier
				related.GPOContractNumber = GPOContractNumber
				related.ItemSupplier      = LocalItemSupplier

        ContractGPOHeaderRel
 			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber       	
        
		HeadersForSupplierRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOSupplier
				related.ManufacturerSupplier = ManufacturerSupplier 
			Instance Selection
				where ((GPOIsHealthTrust
				and     related.MainContractIndicator = true)
				or      GPOIsVizient)
			
		HeadersForSupplierGHXRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByManufacturerEID
				related.ManufacturerEID      = ManufacturerSupplier

        GHXContractGPOHeaderRel
 			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractNumber
				related.ContractNumber = GPOContractNumber 

        ContractGPOHeaderChangedSupplierRel
 			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.ManufacturerSupplier != ManufacturerSupplier)  

		HPGMainHeaderRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.MainContractIndicator = true)
				
		HPGMainHeaderChangedSupplierRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.MainContractIndicator = true
				and    related.ManufacturerSupplier != ManufacturerSupplier)

		HPG2021ChangedSupplierRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.StartDate 			 = EffectiveDate
				and    related.ManufacturerSupplier != ManufacturerSupplier)

		HPGGPOHeaderRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.MainContractIndicator = false)

		HT2021FutureRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.StartDate > EffectiveDate)			

		HT2021FutureExpirationRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.EndDate > ExpirationDate)	

		HT2021CurrentRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.StartDate <= EffectiveDate)			

		ContractGPOParticipantRel
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber = GPOContractNumber

		ContractGPODistributorParticipantRel
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByItemSupplier
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.ItemSupplier != ManufacturerSupplier) 	
				
		NewContractImportDistributorParticipantRel
			one-to-many relation to ContractImportTierDistributor
			Field Mapping uses ByGPOMembership
				related.ContractGroup    				= ContractGroup
				related.ContractImport   				= ContractImport
				related.ContractImportGPOMembership		= LocalMembership
				related.ContractImportTierDistributor	= GPOSupplierRel.ContractSupplier

		GPOSupplierRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses symbolic key
				related.SupplierGroup               = ContractGroup
				related.ContractImportGPOSupplier 	= LocalItemSupplier

		GPOSupplierNameRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses symbolic key
				related.SupplierGroup               = ContractGroup
				related.ContractImportGPOSupplier 	= ManufacturerSupplier

		GPOSupplierMatchRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses ByContractSupplier
				related.SupplierGroup               = ContractGroup
				related.ContractSupplier        	= Supplier
				related.ContractImportGPOSupplier   = ManufacturerSupplier 

		ContractImportDistributorCreateContractRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.ParticipantsExist
				and    related.LinesExist)
				
        ContractImportDistributorForSupplierRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses ByDistributorSupplier
				related.ContractGroup     		= ContractGroup
				related.GPODistributorSupplier	= LocalItemSupplier
				related.ContractImport    		= ContractImport

        ContractImportDistributorRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport

        ContractImportDistributorToCreateRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.DoNotCreateDistributorContract = false)		

 		ContractImportDistributorMainRel
 			one-to-one relation to ContractImportDistributor
 			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     			= ContractGroup
				related.ContractImport    			= ContractImport
				related.ContractImportDistributor 	= LocalSupplier
				 				
     	ContractImportDistributorMismatchedMembersRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.MembersNeedingACode
				and    related.DoNotCreateDistributorContract)

     	DistributorContractLineHasContractRel
 			one-to-many relation to ContractLineImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection 
				where (related.ContractVendorItem entered)
        ContractImportDistributorNoPricingRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.DistributorPricingCode  !entered
				and    related.ParticipantsExist
				and    related.LinesExist
				and    related.DoNotCreateDistributorContract = false
				and   (related.DistributorContractNumber !entered
				or    (related.DistributorContractNumber entered
				and    !related.DistributorPricingExists)))
				       
        ContractCostCompareToRel
			one-to-many relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
			Instance Selection
				where (related.Contract = ContractLineFromCostCompareRel.Contract)	
				
		ManufacturerContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.Contract          = DerivedToContract

		GPOContractDirect
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.Contract          = DerivedToContractForGPO			

		NewContractTierMemberRel
			one-to-many relation to ContractImportTierMember
			delete cascades
			Field Mapping uses ByMembership
				related.ContractGroup     			= ContractGroup
				related.GPOContractNumber  			= GPOContractNumber
				related.ContractImportGPOMembership	= LocalMembership		

		DeletedContractTierMemberRel
			one-to-many relation to ContractImportTierMember
			delete cascades
			Field Mapping uses ByMembership
				related.ContractGroup     			= ContractGroup
				related.GPOContractNumber  			= GPOContractNumber			

		ManufacturerTierMemberRel
			one-to-many relation to ContractImportTierMember
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.ManufacturerPurchaseFrom)

		UpdatedTierMembersRel
			one-to-many relation to ContractImportTierMember
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.TiersDoNotMatch = true)		
		
		UpdatedTierMemberRel                                 
			one-to-many relation to ContractImportTierMember
			delete cascades
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.Updated = true)

		TierMemberForManufacturerRel 
			one-to-many relation to ContractImportTierMember 
			delete cascades 
			Field Mapping uses symbolic key
				related.ContractGroup     = ContractGroup
				related.ContractImport    = ContractImport
			Instance Selection
				where (related.PurchaseMethod = 1
				or     related.PurchaseMethod = 3)			
        			
	Sets
				
		ByWorkingContract
			Sort Order
				ContractGroup
				WorkingContractID
				ContractImport
		
		ByContract
			Sort Order
				ContractGroup
				ContractImport
				
		ByContractDescending
			Sort Order
				ContractGroup
				ContractImport descending
		
		ByGPOContractNumber
			Sort Order
				GPOContractNumber
				ContractGroup
			Instance Selection
				where (GPOContractNumberEntered)			

		ByGPOSupplier
			Sort Order
				ContractGroup
				GPOSupplier
				ContractImport
			Instance Selection
				where (GPOContractNumberEntered)
				
		ByManufacturerSupplier
			Sort Order
				ContractGroup
				ManufacturerSupplier
				ContractImport
			Instance Selection
				where (GPOContractNumberEntered)				

	Field Rules
		Name
			if (!Template)
				required
 		Supplier
 			
 			if (Supplier not entered
 			and !Template)
 				required
 					"SupplierIsRequired"
 			else
				if (NewGPOContractExists
				and ManufacturerContractRel.Supplier != Supplier)
					cannot be changed
						"SupplierCannotBeChanged"
		
		SupplierSourceId
			if (!Template)
				default to 1
				
				required
					"SupplierContactIsRequired"

		WorkingContractID
			if (WorkingContractID not entered)
				default to ContractImport
			if (WorkingContractID = ContractImport)
				WorkingContractType = blank
		ApPoPurchFrom
			constraint (Vendor not entered)
				"CanNotEnterPurchaseFromLocationWithoutAVendor"
		ApPoPurchaseFrom
			if  (ContractTypeOrSubTypeChanged
			and !HasAPurchaseType)	
				ApPoPurchaseFrom.VendorLocation  = blank
				ApPoPurchaseFrom.PurchaseFromLocation = blank
			if ((SupplierSourceId changed
			or   ChangeToPurchaseType)
			and  ContractGroup.SupplierGroupRel.DefaultSupplierContactLocation
			and  HasAPurchaseType)
				ApPoPurchaseFrom.VendorLocation = SupplierSourceId.VendorLocation
				ApPoPurchaseFrom.PurchaseFromLocation = blank
			if (ApPoPurchaseFrom.VendorLocation entered
			and SupplierSourceId.VendorLocation entered)
				constraint (ApPoPurchaseFrom.VendorLocation = SupplierSourceId.VendorLocation)
					"CannotEnterVendorLocationThatIsDifferentThanSupplierContactVendorLocation"
			if (ApPoPurchaseFrom.PurchaseFromLocation entered
			and SupplierSourceId.VendorLocation entered)
				constraint (ApPoPurchaseFrom.PurchaseFromLocation = SupplierSourceId.VendorLocation)
					"CannotEnterPOVendorLocationThatIsDifferentThanSupplierContactVendorLocation"					
		ExpirationDate
			constraint (MaximumReleaseNumber not entered)
				"CannotEnterBothAnExpirationDateAndAMaximumNumberOfReleases"			
			constraint (ExpirationDate > EffectiveDate)
				"ExpirationDateMustBeGreaterThanEffectiveDate"			
			if (UseCommitments)
				required
					"ExpirationDateIsRequiredWhenUsingCommitments"	
	
		ContractReviewDate
			if (ContractReviewDate != 0)
				if (EffectiveDate != 0)
					constraint (ContractReviewDate >= EffectiveDate)
						"ContractNotEffectiveForTheReviewDate"
				if (ExpirationDate != 0)
					constraint (ContractReviewDate <= ExpirationDate)
						"ContractNotEffectiveForTheReviewDate"
		LineLevelBreaks
			default to 1
		CreateCommitments
			default to 0
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)					
				force default to 0
			if (!CreateCommitments.No)	
				constraint (ExpirationDate > 0)
					"ExpirationDateIsRequiredForCommittedContracts"
			if (IsManufacturerOrDistributorContract)
				constraint (CreateCommitments.No)
					"CommitmentsAreNotAllowedOnManufacturerOrDistributorContracts"

		UOMSMustMatch
			if (NonServicePurchaseType)
				default to false
			if (ContractTypeOrSubTypeChanged
			and !NonServicePurchaseType)
				force default to false
			if (ServicePurchaseType)
				constraint (UOMSMustMatch = false)
					"CannotSetUOMMustMatchFlagToTrueForServicePurchaseTypes"
			
					
			if (StandingPurchaseType)
				constraint (UOMSMustMatch = false)
					"CannotSetUOMsMustMatchToTrueForStandingPurchaseType"
			
		UseContractUOM
			if (ContractOrBlanketOrCatalog)
				if (UOMSMustMatch)
					UseContractUOM = true
				else 
					default to false
			else
				if  (ContractTypeOrSubTypeChanged)
					force default to false
				else
					default to false
				constraint (UseContractUOM = false)
					"CanOnlySetTheUseContractUOMFlagToTrueForContractOrCatalogOrBlanketPurchaseTypes"
		AllowReferenceOfItemsNotOnContract
			default to false
			if (!ContractAndNotManOrDist)
				force default to false
		Stockless
			if (ContractTypeOrSubTypeChanged
			and !ContractPurchaseType)					
				force default to false
			else
				default to false
		Priority
			if  (ContractTypeOrSubTypeChanged
			and !ContractOrBlanketOrCatalog)					
				force default to 0
			else
				if (!ContractOrBlanketOrCatalog)
					force default to 0
				else
					default to 5
		DefaultTaxable			
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)					
				force default to false
			default to false
		TaxCode
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)					
				force default to blank
				DefaultTaxable = false
			constraint(DefaultTaxable)
				"CannotHaveATaxCodeIfTheDefaultTaxableIsFalse"
			if (DefaultTaxable = true)
				required
					"TaxCodeIsRequiredWhenTaxableFlagIsYes"
		GroupPurchasingOrganization
			if  (ContractTypeOrSubTypeChanged
			and !ContractPurchaseType)					
				GroupPurchasingOrganization = blank

			if (GPOSupplier entered) 
				constraint (GroupPurchasingOrganization = GPOSupplier.Supplier.Vendor) 
					"GroupPurchasingOrganizationVendorMustBeTheSameAsTheVendorForTheGPOSupplier" 

		Buyer
			if (ContractTypeOrSubTypeChanged
			and !BlanketOrStandingOrServices)
				force default to blank
		POCode
			if (ContractTypeOrSubTypeChanged
			and !BlanketOrStandingOrServices)
				force default to blank
		CurrencyCode
			if (ApPoPurchaseFrom.VendorLocation entered
			and ApPoPurchaseFrom.VendorLocation.InvoiceCurrency entered)
				CurrencyCode = ApPoPurchaseFrom.VendorLocation.InvoiceCurrency
			else
			if (Supplier.Vendor.InvoiceCurrency entered)
				CurrencyCode = Supplier.Vendor.InvoiceCurrency
			else
				default to ContractGroup.DefaultCurrency
			if (CurrencyCode not entered)
				required
		ScheduleFrequency
			if (ContractTypeOrSubTypeChanged
			and !StandingPurchaseType)
				force default to blank
		MaximumReleaseNumber
			if (ContractTypeOrSubTypeChanged
			and !StandingPurchaseType)
				force default to 0
		DoNotIssue
			if (ContractTypeOrSubTypeChanged
			and !StandingPurchaseType)
				force default to false
		ShipTerm	
			if (ContractTypeOrSubTypeChanged
			and !BlanketOrStanding)
				force default to blank
			else
				if (!BlanketOrStanding)
					cannot be entered								
		FreightTerm	
			if (ContractTypeOrSubTypeChanged
			and !BlanketOrStanding)
				force default to blank
			else
				if (!BlanketOrStanding)
					cannot be entered								
		Vendor
			Vendor = Supplier.Vendor
		CommodityCode
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)					
				initialize
		NotificationPercent					
			if  (ContractTypeOrSubTypeChanged
			and !ContractOrBlanketOrService)					
				force default to 0
           	constraint (NotificationPercent <= 100)
                "NotificationPercentCannotBeGreaterThan100%"
        MaximumAmount
        	if (MaximumAmount entered)
				constraint (TotalLineMaximumAmount <= MaximumAmount)
					"TheTotalOfTheLineMaximumAmountsCannotBeGreaterThanTheLifetimeMaximumAmountAtTheContractHeader"		
        			
		PerOrderMinimumAmount
			if  (ContractTypeOrSubTypeChanged
			and (StandingPurchaseType
			or   NoPurchaseType))	
				force default to 0
		PerOrderMaximumAmount
			if  (ContractTypeOrSubTypeChanged
			and (StandingPurchaseType
			or   NoPurchaseType))	
				force default to 0

   		CommitmentAccount
			if (UseHeaderCommitments)                      
				required
   			else
   				initialize CommitmentAccount

		CommitmentCompany
			if (UseCommitments)
				required
		
		ManufacturerOrDistributor
			if (ManufacturerOrDistributor.ManufacturerContract
			or  ManufacturerOrDistributor.DistributorContract)
				constraint (!ServicePurchaseType)
					"ManufacturerOrDistributorContractsCannotBeServicePurchaseTypes"
				constraint (!BlanketOrStanding)
					"ManufacturerOrDistributorContractsCannotBeBlanketOrStandingPurchaseTypes"
		
		RetainagePercentCompleteTracking
			if (LineRetainageExists)
				constraint (!RetainagePercentCompleteTracking.NoRetainage)
					"RetainageTrackingCannotBeTurnedOff;LineRetainageExists"
				required
					"TrackPercentCompleteIsRequiredWhenLinesExistThatUseRetainage"
		
		RetainagePercent1
			if (RetainagePercentCompleteTracking.HeaderLevel)
				required
					"FirstRetainagePercentIsRequired"
			if (!RetainagePercentCompleteTracking.NoRetainage)
				constraint (RetainagePercent1 >= 0% and RetainagePercent1 <= 100%)
					"FirstRetainagePercentMustBeAPositiveValueNotGreaterThan100%"
			if (RetainagePercentCompleteTracking.NoRetainage)
				cannot be entered
					"FirstRetainagePercentCannotBeEnteredIfRetainageIsNotBeingTracked"
					
		RetainageUpToPercent
			if (RetainagePercentCompleteTracking.HeaderLevel)
				required
					"UpToPercentCompleteIsRequired"
			if (!RetainagePercentCompleteTracking.NoRetainage)
				constraint (RetainageUpToPercent >=0% and RetainageUpToPercent <= 100%)
					"RetainageUpToPercentCompleteMustBeAPositiveValueNotGreaterThan100%"
			if (RetainagePercentCompleteTracking.NoRetainage)
				cannot be entered
					"RetainageUpToPercentCompleteCannotBeEnteredIfRetainageIsNotBeingTracked"
					
		RetainagePercent2
			if (RetainagePercentCompleteTracking.NoRetainage)
				cannot be entered
					"SecondRetainagePercentCannotBeEnteredIfRetainageIsNotBeingTracked"
			else
				constraint (RetainagePercent2 >= 0% and RetainagePercent2 <= 100%)
					"SecondRetainagePercentMustBeAPositiveValueNotGreaterThan100%"
		
		RetainageDueDays
			if (RetainagePercentCompleteTracking.NoRetainage)
				cannot be entered
					"RetainageDueDaysCannotBeEnteredIfRetainageIsNotBeingTracked"
			if (!RetainageDueDays = 0)
				constraint (ExpirationDate > 0)
					"ExpirationDateIsRequiredWithRetainageInvoiceDueDays"
		
		RetainageOverridePercent
			if (RetainagePercentCompleteTracking.NoRetainage)
				cannot be entered
					"OverridePercentCompleteCannotBeEnteredIfRetainageIsNotBeingTracked"
			else
				constraint (RetainageOverridePercent >= 0% and RetainageOverridePercent <= 100%)
					"RetainageOverridePercentMustBeAPositiveValueNotGreaterThan100%"

		DefaultAccount
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)					
				initialize
			if (PayablesDistributionCode entered)
				cannot be entered
					"DefaultAccountInformationCannotBeEnteredWhenADefaultDistributionCodeIsEntered"
		
			if (UseHeaderCommitments)
				cannot be entered
					"DefaultAccountInformationCannotBeEnteredWhenUsingHeaderCommitments"

		PayablesDistributionCode
			if  (ContractTypeOrSubTypeChanged
			and  NoPurchaseType)
				PayablesDistributionCode = blank					
			if (UseHeaderCommitments)
				cannot be entered
					"DistributionCodeCodeCannotBeEnteredWhenUsingHeaderCommitments"
			
			if (DefaultAccount entered)
				cannot be entered
					"DistributionCodeCannotBeEnteredWhenDefaultAccountInformationIsEntered"
				
			constraint (PayablesDistributionCode.IsPercentDistributionCode)
				"TheDistributionCodeMustBeDefinedWithPercents,NotAmounts"

		BlanketStandingRequestingLocation
			if (!BlanketOrStanding)
				force default to blank
				
		ManufacturerCodeDivision
			if  (ContractTypeOrSubTypeChanged
			and !ContractPurchaseType
			and !NoPurchaseTypeAndManufacturerContract)					
				initialize
			if (ServicePurchaseType)
				initialize	
					
		LifetimeEdit
			if  (ContractTypeOrSubTypeChanged
			and (NoPurchaseType
			or   ServicePurchaseType))					
				force default to 0
				
		PoUserField1
			if  (ContractTypeOrSubTypeChanged
			and !BlanketOrStanding)					
				force default to blank
				
		PoUserField3
			if  (ContractTypeOrSubTypeChanged
			and !BlanketOrStanding)					
				force default to blank
				
		PoUserField5
			if  (ContractTypeOrSubTypeChanged
			and !BlanketOrStanding)					
				force default to blank
						
		GPONegotiated 
			constraint (!Supplier.GroupPurchasingOrganization) 
				"ContractIsForA_GPOSupplier;ContractCannotBe_GPONegotiated" 

		GPOSupplier 
			if (GPONegotiated) 
				required 
					"GPOSupplierIsRequiredWhenGPONegotiated" 
			constraint (GPONegotiated) 
				"CannotHaveA_GPOSupplierUnlessTheContractIsGPONegotiated" 
			constraint (GPOSupplier.Supplier.GroupPurchasingOrganization) 
				"GPOSupplierIsNotDefinedAsAGroupPurchasingOrganization" 

		ContractImportSource
			default to 1
		
	Actions
		Create is a Create Action
						
			Field Rules
				ApPoPurchaseFrom
					if  (HasAPurchaseType
					and !ApPoPurchaseFrom entered
					and  ContractGroup.SupplierGroupRel.DefaultSupplierContactLocation)
						ApPoPurchaseFrom.VendorLocation = SupplierSourceId.VendorLocation	
						
				ContractType
					required
					
				ContractClassification
					required

		CreateTemplate is a Create Action
			
			Entrance Rules
				ContractImport = last ContractImportRel.ContractImport +1
				Template = true
				
		CreateNoRules is a Create Action
			restricted
			bypass field rules
			
			Entrance Rules
				ContractImport = last ContractImportRel.ContractImport +1
			
		Update is an Update Action
			Field Rules
		   		
			Action Rules
				if (ManufacturerOrDistributor changed)
					if (IsManufacturerOrDistributorContract)
						constraint (!ServiceLineRel exists)
							"ServiceLinesExist;CannotChangeToManufacturerOrDistributorContract"							
						constraint (!UseCommitments)
							"UsingCommitments;CannotChangeToManufacturerOrDistributorContract"
						constraint (!BlanketOrStanding)
							"ManufacturerOrDistributorContractsCannotBeBlanketOrStandingPurchaseTypes"
					if (IsDistributorContract)
						constraint (!UseCommitments)
							"UsingCommitments;CannotChangeToDistributorContract"
						constraint (!BlanketOrStanding)
							"BlanketOrStandingPurchaseTypes;CannotChangeToDistributorContract"
					else
						if (IsManufacturerContract)
							constraint (!UseCommitments)
								"UsingCommitments;CannotChangeToManufacturerContract"
							constraint (!BlanketOrStanding)
								"BlanketOrStandingPurchaseTypes;CannotChangeToManufacturerContract"

				if ((ContractType changed
				or   ContractSubtype changed)
			    and  ServicePurchaseType)
			    	constraint (!NonServiceLineRel exists)
			    		"CannotChangeTheContractTypeOrSubtypeToAServicePurchaseTypeTypeWhenNonserviceLinesExist"
			
			Exit Rules
								
				if (ContractTypeOrSubTypeChanged)
					invoke UpdateTypeSubTypeRelatedInformation ContractLineImport
                        invoked.PrmContractGroup        = ContractGroup
                        invoked.PrmContractImport        = ContractImport
						
				if (CreateCommitments changed)
					invoke UpdateCommitmentInformation ContractLineImport
                        invoked.PrmContractGroup        = ContractGroup
                        invoked.PrmContractImport        = ContractImport
										
				if (UOMSMustMatch changed)
					if (UOMSMustMatch = false)
						invoke UpdateContractLineImportErrors ContractLineImport
                            invoked.PrmContractGroup        = ContractGroup
                            invoked.PrmContractImport        = ContractImport

		Delete is a Delete Action
			restricted
			
		DeleteInterface is an Instance Action
			default label is "DeleteContractInterface"
			Entrance Rules
			
				for each DeletedContractTierMemberRel
					invoke Delete each 
			
			Action Rules
			
				for each RelatedContractsToRemoveRel
					invoke Delete each				
				if (ContractImport != WorkingContractID)
					for each RelatedContractsToUnlink
						invoke Delete each
				if (NumberOfLines = 0)
					invoke Delete
				else
				if (NumberOfLinesQuickApproximation < 100)
					invoke Delete ContractLineImport set
					invoke Delete ContractImport
				else
					invoke DeleteAllLines ContractLineImport
						invoked.ParmContractGroup   = ContractGroup
						invoked.ParmContractImport  = ContractImport

		
		FastUpdate is an Update Action
			restricted
			bypass field rules
								
		DeleteInterfacedContractLines is an Instance Action
			valid when (ContractLinesExist)
			Action Rules
				confirmation required
					"Warning;AllContractLineInterfaceRecordsWillBeDeleted;DoYouWantToContinue?"
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport        = ContractImport
                    invoked.PrmUpdateType            = "D"
								
		ResetAllUpdateFunctionFieldsToBlanks is an Instance Action
			valid when (NonBlankContractLinesExist)
			Action Rules
				confirmation required
					"Warning;TheUpdateFunctionFieldOfAllContractLineInterfaceRecordsWillBeResetToBlanks;DoYouWantToContinue?"
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport        = ContractImport
                    invoked.PrmUpdateType            = "B"
				
		ResetAllUpdateFunctionFieldsToCreate is an Instance Action
			valid when (NonCreateContractLinesExist)
			Action Rules
				confirmation required
					"Warning;TheUpdateFunctionFieldOfAllContractLineInterfaceRecordsWillBeResetToCreate;DoYouWantToContinue?"
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport        = ContractImport
                    invoked.PrmUpdateType            = "C"
										
		ResetAllUpdateFunctionFieldsToUpdate is an Instance Action
			valid when (NonUpdateContractLinesExist)
			Action Rules
				if (!LocalLinkToContract)
					confirmation required
						"Warning;TheUpdateFunctionFieldOfAllContractLineImportRecordsWillBeResetToUpdate;DoYouWantToContinue?"
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport       = ContractImport
                    invoked.PrmUpdateType           = "U"
                    invoked.UpdateContractFlag      = LocalUpdateContract
		
		ProcessDiscontinuedContractsAndItems is an Instance Action 
			valid when (HasMissingGPOItems)
			Parameters 
				CurrentContract                 is a Contract 
				CreateAsManufacturerContract    is Boolean 
				CreateDistributorContracts      is Boolean 
				CreateNewContract               is Boolean 
				AddLinesToExistingContract      is Boolean 
				ExistingContractForLineAdd      is a Contract 
				CloseExistingLines              is Boolean 
				HoldExistingLines               is Boolean 
				ProcurementReasonCode
				SelectAllDiscontinuedLines      is Boolean 
				NewName 						is a Description
				NewDescription 					is Text
				NewContact                      is an Employee
				NewSupplier						is a Supplier
				NewSupplierContact				is a SupplierSourceId
				NewContractType					is a ContractType
				NewContractSubtype				is a ContractSubtype
				NewContractClassification		is a ContractClassification
				NewContractSubclassification	is a ContractSubclassification
				NewContractHasNoParent			is Boolean
				NewParentContract				is a Contract
				NewEffectiveDate				is Date
				NewExpirationDate				is Date
				NewContractReviewDate			is Date
				NewTargetedPurchasesFromDate	is Date
				NewTargetedPurchasesToDate		is Date
				NewCurrencyCode					is a Currency
				CopySelectAll					is Boolean
				CopyTiersOrDistributorPricing	is Boolean
				CopyContractParticipants		is Boolean
				CopyContacts					is Boolean
				CopyManufacturerContracts		is Boolean
				CopyContractLines				is Boolean
				CopyArticlesAndTerms			is Boolean
				CopyContractComments			is Boolean
				CopyContractAttachments         is Boolean
				CopyContractLineComments		is Boolean
				CopyContractLineAttachments     is Boolean
				CopyManualQuestions				is Boolean
				CopyMilestones					is Boolean
				CopyDeliverables				is Boolean
				CopyHoldForLines                is Boolean
				CopyLocations                   is Boolean
				CopyCapitatedInformation        is Boolean
				CopyQualifierContractsAndItems  is Boolean 

			Parameter Rules 
				CurrentContract 
					initial value is GPOContractDirect.Contract 
					default to GPOContractDirect.Contract 
				
				CloseExistingLines
					initial value is true  

				CreateAsManufacturerContract
					initial value is true 
				
				CreateDistributorContracts 
					initial value is true 
				
				SelectAllDiscontinuedLines 
					initial value is true 

				AddLinesToExistingContract 
					if (AddLinesToExistingContract = true)
						CreateNewContract = false 
						constraint (ExistingContractForLineAdd entered)
							"MustEnterExistingContractToAddLinesTo"
				CreateNewContract 
					if (CreateNewContract = true)
						AddLinesToExistingContract = false 
						initialize ExistingContractForLineAdd

				ExistingContractForLineAdd
					if (ExistingContractForLineAdd entered)
						constraint (ExistingContractForLineAdd != GPOContractDirect.Contract)
							"ContractAndExistingContractToAddLinesToCannotBeTheSame"				
						constraint (ExistingContractForLineAdd.NotClosed 
									and !ExistingContractForLineAdd.ContractTemplate 
									and (ExistingContractForLineAdd.ContractPurchaseType or ExistingContractForLineAdd.CatalogQuotePurchaseType))
							"ContractToAddLinesToMustNotBeClosed;CannotBeTemplate;MustBeContractOrCatalogQuoteType"
						if (ExistingContractForLineAdd.IsManufacturerContract)
							for each CurrentContract.ContractTierRel 
								LocalTier		= each.ContractTier 
								LocalContract	= ExistingContractForLineAdd 
								constraint (ExistingContractTierRel exists)
									"CannotAddLinesToContract<ExistingContractForLineAdd>;NotAllTiersOnContract<CurrentContract>AreOnContractToAddLinesTo;MustAddTiersToContract<ExistingContractForLineAdd>BeforeProcessing"
						if (GPOContractDirect.IsDistributorContract)
							constraint (!ExistingContractForLineAdd.IsDistributorContract)
								"CannotMoveSelectedLinesFromADistributorContractToAnotherDistributorContract;MustMoveAtManufacturerContractLevel"

				NewName
					initial value is CurrentContract.Name 
					default to CurrentContract.Name
				NewDescription
					initial value is GPOContractDirect.Contract.Description
					default to GPOContractDirect.Contract.Description
				NewContact
					initial value is GPOContractDirect.Contract.PrimaryContactRel.Contact
					default to GPOContractDirect.Contract.PrimaryContactRel.Contact
				NewSupplier
					initial value is GPOContractDirect.Contract.Supplier
					default to GPOContractDirect.Contract.Supplier
					if (NewSupplierContact entered
					and CreateNewContract)
						required
							"SupplierIsRequiredWhenSupplierContactIsEntered"
				NewSupplierContact
					initial value is GPOContractDirect.Contract.SupplierSourceId
					default to GPOContractDirect.Contract.SupplierSourceId
					if (NewSupplier entered
					and CreateNewContract)
						required
							"SupplierContactIsRequiredWhenSupplierIsEntered"
				NewContractType
					initial value is GPOContractDirect.Contract.ContractType
					default to GPOContractDirect.Contract.ContractType
					if (CreateNewContract)
						required
							"ContractTypeIsRequired"
				NewContractSubtype
					initial value is GPOContractDirect.Contract.ContractSubtype
					if (NewContractSubtype entered)
						constraint (NewContractType entered)
							"ContractTypeIsRequiredWhenContractSubtypeIsEntered"
				NewContractClassification
					initial value is GPOContractDirect.Contract.ContractClassification
					default to GPOContractDirect.Contract.ContractClassification
					if (CreateNewContract)
						required
							"ContractClassificationIsRequired"
					if  (NewContractSubclassification not entered)
						if (GPOContractDirect.Contract.ContractSubclassification not entered
						and GPOContractDirect.Contract.ContractClassification.UseIDM)
							constraint (NewContractClassification.UseIDM)
								"CannotSwitchToNonIDMClassification"

						if (GPOContractDirect.Contract.ContractSubclassification entered
						and GPOContractDirect.Contract.ContractSubclassification.UseIDM)
							constraint (NewContractClassification.UseIDM)
								"CannotSwitchToNonIDMClassification"
				NewContractSubclassification
					initial value is GPOContractDirect.Contract.ContractSubclassification
					if (NewContractSubclassification entered)
						constraint (NewContractClassification entered)
							"ContractClassificationIsRequiredWhenContractSubclassificationIsEntered"
					if  (NewContractSubclassification entered)
						if (GPOContractDirect.Contract.ContractSubclassification not entered
						and GPOContractDirect.Contract.ContractClassification.UseIDM)
							constraint (NewContractSubclassification.UseIDM)
								"CannotSwitchToNonIDMSubclassification"

						if (GPOContractDirect.Contract.ContractSubclassification entered
						and	GPOContractDirect.Contract.ContractSubclassification.UseIDM)
							constraint (NewContractSubclassification.UseIDM)
								"CannotSwitchToNonIDMSubclassification"
				NewEffectiveDate
					initial value is GPOContractDirect.Contract.EffectiveDate
				NewExpirationDate
					initial value is GPOContractDirect.Contract.ExpirationDate
				NewContractReviewDate
					initial value is GPOContractDirect.Contract.ContractReviewDate
				NewCurrencyCode
					if (NewSupplier.Vendor.InvoiceCurrency entered)
						NewCurrencyCode = NewSupplier.Vendor.InvoiceCurrency
					else
						default to GPOContractDirect.Contract.CurrencyCode
				CopySelectAll
					initial value is true
				CopyContractParticipants
					if (CopyContractParticipants)
						constraint (!CopySelectAll)
							"CannotSelectTheCopyParticipants/MembersOptionWhenTheSelectAllOptionIsSelected"
						if (GPOContractDirect.Contract.ContractTierMember set exists
						or  GPOContractDirect.Contract.ContractDistributorPricingMember set exists)
							constraint (CopyTiersOrDistributorPricing)
								"CannotCopyMembersWithoutCopyingTiersOrDistributorPricing"
				CopyContractLineComments
					if (CopyContractLineComments)
						constraint (!CopySelectAll)
							"CannotSelectTheCopyContractLineCommentsOptionWhenTheSelectAllOptionIsSelected"
						if (!AddLinesToExistingContract)
							constraint (CopyContractLines)
								"CannotCopyContractLineCommentsWithoutCopyingContractLines"
						if (!AddLinesToExistingContract)
							constraint (CopyContractLines)
								"CannotCopyContractLineCommentsWithoutCopyingContractLines"
				CopyContractLineAttachments
					if (CopyContractLineAttachments)
						constraint (!CopySelectAll)
							"CannotSelectTheCopyContractLineAttachmentsOptionWhenTheSelectAllOptionIsSelected"
						if (!AddLinesToExistingContract)
							constraint (CopyContractLines)
								"CannotCopyContractLineAttachmentsWithoutCopyingContractLines"
				CopyManufacturerContracts
					if (CopyManufacturerContracts)
						constraint (!CopySelectAll)
							"CannotSelectTheCopyManufacturerContractsOptionWhenTheSelectAllOptionIsSelected"
					if (!CopySelectAll)
						if ((GPOContractDirect.Contract.IsDistributorContract)
						and (CopyContractLines
						or  CopyContractParticipants))
							CopyManufacturerContracts = true
				CopyLocations 
					if (CopyLocations)
						constraint (!CopySelectAll)
							"CannotSelectTheCopyLocationsOptionWhenTheSelectAllOptionIsSelected"
				CopyContractLines
					if (GPOContractDirect.Contract.LineTierCostsExist
					and CopyContractLines
					and CreateAsManufacturerContract)
						constraint (CopyTiersOrDistributorPricing)
							"ContractLineTierCostsExist;MustSelectToCopyTiers"

				CopyTiersOrDistributorPricing 
					if ((GPOContractDirect.IsManufacturerContract
					and !CreateAsManufacturerContract)
					or  (GPOContractDirect.IsDistributorContract
					and !CreateDistributorContracts))
						constraint (CopyTiersOrDistributorPricing = false)
							"CannotCopyTiersOrDistributorPricingWhenNotCreatingAsAManufacturerOrDistributorContract"
				NewParentContract
					if (NewContractHasNoParent)
						constraint (NewParentContract = blank)
							"ANewParentContractCannotBeEnteredIfYouCheckedTheBoxIndicatingThereIsNoParentContract"

				NewTargetedPurchasesFromDate
					if (NewEffectiveDate = GPOContractDirect.Contract.EffectiveDate)
						if (GPOContractDirect.Contract.EffectiveDate > 0)
							constraint (NewTargetedPurchasesFromDate >= GPOContractDirect.Contract.EffectiveDate)
								"NewTargetedPurchasesFromDateCannotBeLessThanContractEffectiveDate"
					else
						constraint (NewTargetedPurchasesFromDate >= NewEffectiveDate)
							"NewTargetedPurchasesFromDateCannotBeLessThanNewEffectiveDate"
					if (NewExpirationDate = GPOContractDirect.Contract.ExpirationDate)
						if (GPOContractDirect.Contract.ExpirationDate > 0)
							constraint (NewTargetedPurchasesFromDate <= GPOContractDirect.Contract.ExpirationDate)
								"NewTargetedPurchasesFromDateCannotBeGreaterThanContractExpirationDate"
					else
						constraint (NewTargetedPurchasesFromDate <= NewExpirationDate)
							"NewTargetedPurchasesFromDateCannotBeGreaterThanNewExpirationDate"

				NewTargetedPurchasesToDate
					constraint (NewTargetedPurchasesToDate > NewTargetedPurchasesFromDate)
						"NewTargetedPurchasesToDateCannotBeLessThanFromDate"
					if (NewExpirationDate = GPOContractDirect.Contract.ExpirationDate)
						if (GPOContractDirect.Contract.ExpirationDate > 0)
							constraint (NewTargetedPurchasesToDate <= GPOContractDirect.Contract.ExpirationDate)
								"NewTargetedPurchasesToDateCannotBeGreaterThanContractExpirationDate"
					else
						constraint (NewTargetedPurchasesToDate <= NewExpirationDate)
							"NewTargetedPurchasesToDateCannotBeGreaterThanNewExpirationDate"						
			
			Action Rules 

				if  (AddLinesToExistingContract
				or   CreateNewContract)
					if (LinesSelectedForCopyWithErrorsRel exists)
						confirmation required 
							"LinesWithErrorsSelectedForAddingLinesOrCreatingNewContract;LinesCannotBeAddedToContractsWithoutFixingErrors;LinesWithErrorsWillOnlyBeDeleted;DoYouWantToContinue?"

				if (CloseExistingLines)
					constraint (!HoldExistingLines)
						"CannotBothCloseAndHoldExistingLines"

				if (HoldExistingLines)
					constraint (!CloseExistingLines)
						"CannotBothCloseAndHoldExistingLines"

				if (AddLinesToExistingContract)
					if (GPOContractDirect.IsManufacturerContract)
						constraint (!ExistingContractForLineAdd.IsDistributorContract)
							"OriginalContractIsAManufacturerContract;CannotAddLinesToADistributorContract"

					if (GPOContractDirect.IsDistributorContract)
						constraint (!ExistingContractForLineAdd.IsManufacturerContract)
							"OriginalContractIsADistributorContract;CannotAddLinesToAManufacturerContract"

				if (CopyTiersOrDistributorPricing
				or	CopyContractParticipants
				or	CopyContacts
				or	CopyManufacturerContracts
				or	CopyContractLines
				or	CopyArticlesAndTerms
				or	CopyContractComments
				or  CopyContractAttachments
				or	CopyContractLineComments
				or  CopyContractLineAttachments
				or	CopyManualQuestions
				or  CopyLocations
				or  CopyCapitatedInformation)
					constraint (!CopySelectAll)
						"CannotCheckSelectAllOptionWhenIndividualCopyOptionsAreChecked"
				
				if (AddLinesToExistingContract)
					constraint (!CreateNewContract)
						"CannotBothAddLinesToExistingContractAndCreateContract"

				if (CreateNewContract)
					constraint (!AddLinesToExistingContract)
						"CannotBothAddLinesToExistingContractAndCreateContract"

				if (SelectAllDiscontinuedLines
				and !HasLinesSelectedForCopy)
					for each NoGPOItemRel 
						invoke FastUpdate each 
							invoked.SelectedForCopy = true 
				
				if (CreateNewContract
				or  AddLinesToExistingContract)

					constraint (HasLinesSelectedThatExistOnContract)
						"HasNoLinesSelectedThatExistOnContract;CannotCreateNewContractOrAddLines"

				constraint (HasLinesSelectedForCopy)
					"MustSelectLinesToRunProcess"
				
				invoke ProcessDiscontinuedLines ContractLineImport 
					invoked.ParmContractGroup               = ContractGroup 
					invoked.ParmContractImport              = ContractImport
					invoked.CreateNewContract               = CreateNewContract 
					invoked.AddLinesToExistingContract      = AddLinesToExistingContract 
					invoked.ExistingContractForLineAdd      = ExistingContractForLineAdd
					invoked.CreateAsManufacturerContract	= CreateAsManufacturerContract
					invoked.CreateDistributorContracts      = CreateDistributorContracts
					invoked.CloseExistingLines              = CloseExistingLines
					invoked.HoldExistingLines               = HoldExistingLines 
					invoked.ProcurementReasonCode           = ProcurementReasonCode
					invoked.NewName 						= NewName 
					invoked.NewDescription 					= NewDescription
					invoked.NewContact                      = NewContact
					invoked.NewSupplier						= NewSupplier
					invoked.NewSupplierContact				= NewSupplierContact 
					invoked.NewContractType					= NewContractType 
					invoked.NewContractSubtype				= NewContractSubtype
					invoked.NewContractClassification		= NewContractClassification
					invoked.NewContractSubclassification	= NewContractSubclassification
					invoked.NewContractHasNoParent			= NewContractHasNoParent
					invoked.NewParentContract				= NewParentContract
					invoked.NewEffectiveDate				= NewEffectiveDate
					invoked.NewExpirationDate				= NewExpirationDate 
					invoked.NewContractReviewDate			= NewContractReviewDate
					invoked.NewTargetedPurchasesFromDate	= NewTargetedPurchasesFromDate
					invoked.NewTargetedPurchasesToDate		= NewTargetedPurchasesToDate
					invoked.NewCurrencyCode					= NewCurrencyCode
					invoked.CopySelectAll					= CopySelectAll
					invoked.CopyTiersOrDistributorPricing	= CopyTiersOrDistributorPricing
					invoked.CopyContractParticipants	    = CopyContractParticipants	
					invoked.CopyContacts					= CopyContacts 
					invoked.CopyManufacturerContracts		= CopyManufacturerContracts
					if (CopySelectAll = false)
						invoked.CopyContractLines           = true 								
					else 
						invoked.CopyContractLines            = false 
					invoked.CopyArticlesAndTerms			= CopyArticlesAndTerms
					invoked.CopyContractComments			= CopyContractComments
					invoked.CopyContractAttachments         = CopyContractAttachments
					invoked.CopyContractLineComments		= CopyContractLineComments
					invoked.CopyContractLineAttachments     = CopyContractLineAttachments
					invoked.CopyManualQuestions				= CopyManualQuestions
					invoked.CopyMilestones					= CopyMilestones
					invoked.CopyDeliverables				= CopyDeliverables
					invoked.CopyHoldForLines                = CopyHoldForLines
					invoked.CopyLocations                   = CopyLocations
					invoked.CopyCapitatedInformation        = CopyCapitatedInformation
					invoked.CopyQualifierContractsAndItems  = CopyQualifierContractsAndItems
					if (WholeContractDiscontinued)
						invoked.AllLinesSelected            = SelectAllDiscontinuedLines

		CreateContractFromInterfacedRecords is an Instance Action
			valid when (CanCreateContract)
			completion message is "CreationHasStarted;Check'MyActions'ForCompletion"
			Parameters
				ParmAccountToDistContract       	is Boolean
				ParmDoNotCreateDistributorLines		is Boolean
				ParmSpecialItemsAccountDefaultOnly  is Boolean
				
			Parameter Rules
				ParmDoNotCreateDistributorLines
					initial value is true

			Action Rules
				invoke Update
				if (Contact entered)
					constraint (Contact.IsActive)
						"CannotCreateContract;PrimaryInternalContactIsInactive"
				if (NonCreateContractLinesExist)
					confirmation required
						"Warning:ContractLinesExistWhereUpdateFunctionIsOtherThanCreate;DoYouWantToContinue?"
				constraint (Name entered)
					"NameIsRequiredToCreateNewContract"
 				constraint (Supplier entered)
 					"SupplierIsRequiredToCreateNewContract"
				constraint (ContractType entered)
					"ContractTypeIsRequiredToCreateNewContract"
				constraint (ContractClassification entered)
					"ContractClassificationIsRequiredToCreateNewContract"
				if (!ContractImport.ContractType.HasAPurchaseType)
					if (TierMemberForManufacturerExists)
						confirmation required 
							"ManufacturerContractWillNotBeUsedForCostDefaulting;AllTierMembersWillBeChangedToDistributorOnly;DoYouWantToContinue?"
						for each TierMemberForManufacturerRel 
							invoke Update each 
								invoked.PurchaseMethod = 2 
				if (!VendorEntered
				and  ManufacturerTierMemberRelExists)
					confirmation required
						"NoVendorEnteredForManufacturerContractSupplier;ReleaseMembersAndReleaseWillNotBeAllowedForContractUntilVendorIsEntered;DoYouWantToContinue?"	
				if (DistributorsToCreateExist)
					for each ContractImportDistributorToCreateRel
						if (!each.VendorEntered)
							confirmation required
								"NoVendorEnteredForDistributorContractForSupplier<each.ContractImportDistributor>;ReleaseMembersAndReleaseWillNotBeAllowedForContractUntilVendorIsEntered;DoYouWantToContinue?"
						if (each.VendorEntered)
							constraint (!each.SupplierRel.Vendor.VendorStatus.Inactive)
								"Vendor<each.SupplierRel.Vendor>ForDistributorSupplier<each.ContractImportDistributor>IsInactive"		
					for each ContractImportDistributorCreateContractRel
						if (!each.DistributorContractNumber entered
						and  each.DoNotCreateDistributorContract = false)
							confirmation required
								"Distributor<each.ContractImportDistributor>HasNoContractNumberEnteredToAssociateWith;ANewDistributorContractWillBeCreated;DoYouWantToContinue?"
					constraint (AllDistributorsHavePricing)
						"MustEnterAPricingCodeAndTitleForAllDistributors" 
					constraint (ContractImportDistributorMismatchedMembersRel !exists)
						"DistributorMembersExistForDistributor<first ContractImportDistributorMismatchedMembersRel.ContractImportDistributor>WithDifferentMarkups;MustEnterAPricingCode"
				invoke Create Contract
					fill in fields from ContractImport
					invoked.PurchasingContact				= Contact
					invoked.Contract						= 0
					invoked.ParentContract	            	= 0
					invoked.ContractStatus					= 1
					invoked.PreviousState					= 0
					invoked.ApprovalStatus					= 0
					invoked.NegotiationStatus				= 0
					invoked.FinalApprovalStatus				= 0
					invoked.TotalLineMaximumAmount			= 0
					invoked.HasBeenActivated				= false
					invoked.ContractSource					= 5
					invoked.AddendumExists                  = false
					invoked.AmendmentExists					= false
					invoked.NotificationPercent             = NotificationPercent/100
					if (ContractImport = ContractImport.WorkingContractID)
						invoked.WorkingContractID  				= blank
						invoked.WorkingContractType 			= 0
					
				LocalContract	= ContractGroup.LastContract
				invoke CreateRelatedContract RelatedContract
					invoked.ContractGroup	  		   = ContractGroup
					invoked.Contract		  		   = LocalContract
					invoked.RelatedContractID 		   = ContractImport
					invoked.RelatedContractType		   = 10
					invoked.RelatedSupplierName 	   = ContractImport.Supplier.SupplierName
					invoked.ManufacturerCodeDivision   = ContractImport.ManufacturerCodeDivision
					invoked.Supplier				   = ContractImport.Supplier
					invoked.Vendor					   = ContractImport.Vendor
					invoked.RelatedContractDescription = ContractImport.DerivedRelatedDescription
					
				if (!ContractImport = ContractImport.WorkingContractID)
					invoke CreateRelatedContract RelatedContract
						invoked.ContractGroup	  		   = ContractGroup
						invoked.Contract		  		   = LocalContract
						invoked.RelatedContractID 		   = ContractImport.WorkingContractID
						invoked.RelatedContractType		   = ContractImport.WorkingContractType
						invoked.RelatedSupplierName 	   = ContractImport.Supplier.SupplierName
						invoked.ManufacturerCodeDivision   = ContractImport.ManufacturerCodeDivision
						invoked.Supplier				   = ContractImport.Supplier
						invoked.Vendor					   = ContractImport.Vendor
						invoked.RelatedContractDescription = ContractImport.DerivedRelatedDescription
						invoked.WorkingContract            = true

				if (NationalContractNumber entered)
					invoke CreateRelatedContract RelatedContract 
						invoked.ContractGroup	  		   = ContractGroup
						invoked.Contract		  		   = LocalContract
						invoked.RelatedContractID 		   = NationalContractRel.ContractImport
						invoked.RelatedContractType		   = 18
						invoked.RelatedSupplierName 	   = NationalContractRel.Supplier.SupplierName
						invoked.ManufacturerCodeDivision   = NationalContractRel.ManufacturerCodeDivision
						invoked.Supplier				   = NationalContractRel.Supplier
						invoked.Vendor					   = NationalContractRel.Vendor
						invoked.RelatedContractDescription = NationalContractRel.DerivedRelatedDescription
				
				if (HasS2Contracts)
					for each S2ContractRel
						invoke CreateRelatedContract RelatedContract 
							invoked.ContractGroup	  		   = ContractGroup
							invoked.Contract		  		   = LocalContract
							invoked.RelatedContractID 		   = each.ContractImport
							invoked.RelatedContractType		   = 19
							invoked.RelatedSupplierName 	   = each.Supplier.SupplierName
							invoked.ManufacturerCodeDivision   = each.ManufacturerCodeDivision
							invoked.Supplier				   = each.Supplier
							invoked.Vendor					   = each.Vendor
							invoked.RelatedContractDescription = each.DerivedRelatedDescription				
		
				if (IsManufacturerContract)
					for each ContractImportTier set
						invoke Create ContractTier
							fill in fields from each.ContractImportTier
							invoked.Contract		  		   = LocalContract
							invoked.ContractTier               = each.ContractImportTier
							if (each.TierMarkupDiscount = "M")
								invoked.TierMarkupDiscount     = 1
							else
							if (each.TierMarkupDiscount = "D")
								invoked.TierMarkupDiscount     = 2
							else
								invoked.TierMarkupDiscount     = 3
							if (each.FreightMarkupDiscount = "M")
								invoked.FreightMarkupDiscount  = 1
							else 
							if (each.FreightMarkupDiscount = "D")
								invoked.FreightMarkupDiscount  = 2
							else 
								invoked.FreightMarkupDiscount  = 0
		        			    
		            for each ContractImportTierQualifierRel
		            	invoke Create ContractTierQualifier
		            		fill in fields from each
		            		invoked.Contract                   = LocalContract
		            		invoked.ContractTier               = each.ContractImportTier

    	            for each ContractImportTierQualCodeRel
		            	invoke Create ContractTierQualifierCode
		            		fill in fields from each.ContractImportTierQualCode
		            		invoked.Contract                   = LocalContract
		            		invoked.ContractTier               = each.ContractImportTier 
		            		invoked.ContractTierQualifier      = each.ContractImportTierQualifier
		        
		        	for each ContractImportTierMember set
		        		invoke Create ContractTierMember
		        			invoked.ContractGroup              				= ContractGroup
		        			invoked.Contract                   				= LocalContract
		        			invoked.ContractTierMember.Company 				= each.ContractImportTierMember.Company
		        			invoked.ContractTierMember.Location				= each.ContractImportTierMember.Location
		        			invoked.ContractTierMember.RequestingLocation	= each.ContractImportTierMember.RequestingLocation
		        			invoked.ContractTierMember.PricingGroup         = each.ContractImportTierMember.PricingGroup
		        			invoked.Tier                                    = each.Tier
	        				invoked.PurchaseMethod                          = each.PurchaseMethod
	        				invoked.FromImport                              = true
	        				
	        			invoke Update each
	        				invoked.Updated = false
	        				
	        	if (IsDistributorContract)
					for each ContractImportDistributor set
						invoke Create ContractDistributorPricing
		        			invoked.ContractGroup              									= ContractGroup
		        			invoked.Contract                   									= LocalContract						
							invoked.ContractDistributorPricing                                  = each.DistributorPricingCode
							invoked.Title                                                       = each.DistributorPricingTitle
							invoked.DistributorPricing.DistributorPricingAmtPct.PricingPercent  = 0
							invoked.DistributorPricing.PricingMarkupDiscount                	= "F" 
					
						LocalDistributorPricingCode = each.DistributorPricingCode
						
					for each ContractImportTierMember set				
						invoke Create ContractDistributorPricingMember 
		            		invoked.ContractGroup								 				= ContractGroup
		            		invoked.Contract									 				= LocalContract
		            		invoked.ContractDistributorPricingMember.Company	 				= each.ContractImportTierMember.Company
		            		invoked.ContractDistributorPricingMember.Location	 				= each.ContractImportTierMember.Location
		            		invoked.ContractDistributorPricingMember.RequestingLocation			= each.ContractImportTierMember.RequestingLocation
		            		invoked.ContractDistributorPricingMember.PricingGroup           	= each.ContractImportTierMember.PricingGroup
		            		invoked.ContractDistributorPricingMember.ManufacturerContract 		= LocalContract
		            		invoked.PricingIdentifier							 				= LocalDistributorPricingCode
		            		invoked.FromImport                                                  = true
	        				
	        	if (ServicePurchaseType)
       				for each ContractImportTierMember set
	       				invoke Create ContractParticipant
	        				invoked.ContractGroup                       			= ContractGroup
	        				invoked.Contract                            			= DerivedToContract
	        				invoked.ContractParticipant.ParticipantLocation.Company = each.ContractImportTierMember.Company	        	 
	        	
			Exit Rules
			
				invoke CreateContractFromImportLines ContractLineImport
					invoked.PrmContractGroup					= ContractGroup
					invoked.ImportedContract					= ContractImport
					invoked.NewContract         				= LocalContract
					invoked.ParmAccountToDistContract       	= ParmAccountToDistContract
					invoked.ParmDoNotCreateDistributorLines		= ParmDoNotCreateDistributorLines
					invoked.ParmSpecialItemsAccountDefaultOnly  = ParmSpecialItemsAccountDefaultOnly
		
		CloseContract is an Instance Action   
			valid when (AssociatedContractOpen)
			Action Rules
				invoke CloseContractIndirect GPOContractDirect 

		CleanUpLineErrors is an Instance Action
            valid when (LineErrorsExist)
            completion message is "CleanUpLineErrorsLinesHasStarted;Check'MyActions'ForCompletion"
            Parameters
                ContractGroup
                ContractImport
                UpdateContract            is a Contract
                
            Parameter Rules
                UpdateContract
 					initial value is DerivedToContract
					default to DerivedToContract
                    
            Action Rules
                invoke CleanUpLineErrorsLines ContractImportErrorLineRel 
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.ImportedContract        = ContractImport
                    invoked.UpdateContract          = UpdateContract
		
		CompareContractInterfaceCost is an Instance Action
			Parameters
				ContractGroup
				ContractImport
				CompareContract      is a Contract
				CompareFromDate      is Date
				CompareToDate        is Date
				ShowZeroDifference   is Boolean
				ShowZeroOrdered      is Boolean
				CompareFromTier      is a ContractImportTier
				CompareToTier        is a ContractImportTier
				
			Parameter Rules
				
				CompareContract
					required
					if (CompareToTier !entered)
						constraint (ContractLinePriceChangeRel !exists)
							"CompareAlreadyExistsToThisContract"
					if (CompareToTier entered)
						LocalTier = CompareToTier
						constraint (ContractLinePriceChangeTierRel !exists)
							"CompareAlreadyExistsToThisContractAndTier"
				
				CompareFromDate
					
					initial value is CompareContract.EffectiveDate
					default to CompareContract.EffectiveDate
					required
						"MustEnterAFromDateForQuantityCalculations"
					constraint (CompareFromDate < CompareToDate)
						"CompareFromDateMustBePriorToCompareToDate"
					constraint (CompareFromDate >= CompareContract.EffectiveDate)
						"CompareFromDateCannotBePriorToCompareContractEffectiveDate"
					
				CompareToDate
					
					initial value is CompareContract.ExpirationDate 
					default to CompareContract.EffectiveDate
					required
						"MustEnterAToDateForQuantityCalculations"
					constraint (CompareFromDate < CompareToDate)
						"CompareFromDateMustBePriorToCompareToDate"
					constraint (CompareToDate <= CompareContract.ExpirationDate)
						"CompareToDateCannotBeLaterThanCompareContractExpirationDate"
				
				CompareFromTier
					if (CompareFromTier entered
					and CompareFromTier != CompareToTier)
						LocalTier = CompareFromTier
						constraint (TierCostExists)
							"NoLineTierCostRecordsExistForCompareFromTier"	
				
						LocalContract = CompareContract	
						constraint (CompareTierCostExists)
							"NoLineTierCostRecordsExistForCompareFromTierOnCompareContract" 
					
					if (CompareFromTier entered
					and CompareToTier !entered)
						CompareToTier = CompareFromTier

				CompareToTier
					if (CompareToTier entered)
						LocalTier  = CompareToTier
						constraint (TierCostExists)
							"NoLineTierCostRecordsExistForCompareToTier"
						
						LocalContract = CompareContract	
						constraint (CompareTierCostExists)
							"NoLineTierCostRecordsExistForCompareToTierOnCompareContract" 

					if (CompareToTier entered
					and CompareFromTier !entered)
						CompareFromTier = CompareToTier
			
			Action Rules
				invoke CompareContractImportLineCosts ContractLineImport 
					invoked.PrmContractGroup		= ContractGroup
					invoked.ImportedContract		= ContractImport
					invoked.CompareContract			= CompareContract
					invoked.CompareFromDate         = CompareFromDate
					invoked.CompareToDate           = CompareToDate
					invoked.ShowZeroDifference    	= ShowZeroDifference
					invoked.ShowZeroOrdered         = ShowZeroOrdered
					invoked.CompareFromTier         = CompareFromTier
					invoked.CompareToTier           = CompareToTier
			
		ProcessContractLineUpdates is an Instance Action
			valid when (CanUpdateContract)
			completion message is "ContractUpdatesHaveStarted;Check'MyActions'ForCompletion"
			Parameters
				ContractGroup
				ContractImport
				UpdateContract				is a Contract
				TolerancePercent			is Percent size 6.3
				Connector
				ToleranceAmount				is an InternationalAmount
				RejectAllCostIncreases		is Boolean
				UpdateTier              	is Boolean
				FromContractCreation        is Boolean
				UpdateCostsOnly             is Boolean
				IndirectUpdate              is Boolean
				FromCatalogUpdate           is Boolean
				FromCheckForNewTierCosts    is Boolean 
				MultipleContracts           is Boolean 
				ProcessItemMasterOnly       is Boolean
				MultipleUOMHandling         is Numeric size 1
					States
						SetUOMSMustMatchToTrue  value is 1
						CloseCurrentItem        value is 2
				ClosedLineHandling           is Numeric size 1
					States 
						CreateNewContractLine 		value is 1
						DoNotCreateNewContractLine 	value is 2
							
			Parameter Rules
				UpdateContract
					initial value is DerivedToContract
					default to DerivedToContract
					required
				    if (!FromCatalogUpdate)
					    constraint (!UpdateContract.ContractStatus.Closed)
	    					"ContractStatusCannotBeClosedToPerformContractUpdates" 
	    				if (ContractImport.Supplier entered)
	    					constraint (ContractImport.Supplier = UpdateContract.Supplier)
								"Contract<UpdateContract>DoesNotHaveTheSameSupplierAsTheImportedContract"
						constraint (ContractImport.ContractType = UpdateContract.ContractType)
							"ContractTypeMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.ContractSubtype = UpdateContract.ContractSubtype)
							"ContractSubtypeMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.CurrencyCode = UpdateContract.CurrencyCode)
							"CurrencyCodeMustBeTheSameOnBothImportAndContract"	
						constraint (ContractImport.ManufacturerOrDistributor = UpdateContract.ManufacturerOrDistributor)
							"ManufacturerAndDistributorContractFlagsMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.CreateCommitments = UpdateContract.CreateCommitments)
							"CommitmentFlagMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.MaximumAmount = UpdateContract.MaximumAmount)
							"MaximumAmountMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.PerOrderMinimumAmount = UpdateContract.PerOrderMinimumAmount)
							"PerOrderMinimumAmountMustBeTheSameOnBothImportAndContract"
						constraint (ContractImport.PerOrderMaximumAmount = UpdateContract.PerOrderMaximumAmount)
							"PerOrderMaximumAmountMustBeTheSameOnBothImportAndContract"
					 
				TolerancePercent
					initial value is DerivedDefaultTolerancePercent 
					
				ToleranceAmount
					initial value is DerivedDefaultToleranceAmount
					
				Connector
					initial value is DerivedDefaultConnector
					if (TolerancePercent > 0 and ToleranceAmount > 0)
						required
							"ConnectorIsRequiredWhenTolerancePercentAndToleranceAmountAreEntered"
					else
						cannot be entered
							"CannotEnterConnectorUnlessTolerancePercentAndToleranceAmountAreEntered"
				RejectAllCostIncreases
					if (RejectAllCostIncreases)
						constraint (TolerancePercent = 0 and ToleranceAmount = 0)
							"CannotEnterTolerancePercentOrAmountWhenRejectingAllCostIncreases"

				MultipleUOMHandling
					initial value is ContractGroup.DefaultGPOMultipleUOMHandling
					default to ContractGroup.DefaultGPOMultipleUOMHandling

				ClosedLineHandling 
				 	initial value is ContractGroup.DefaultGPOClosedLineHandling
				 	default to ContractGroup.DefaultGPOClosedLineHandling
			Action Rules
				if (!IndirectUpdate
				and !FromCheckForNewTierCosts)
					if (LinesWithClosedCreateNew)
						constraint (ClosedLineHandling > 0)
							"MustMakeAChoiceOfHowToProcessLinesWhichAreClosedOnTheUpdateContract"

				if (!IndirectUpdate
				and  ContractGroup.DefaultGPOMultipleUOMHandling = 0)
					if (DuplicateUOMErrors)
						constraint (MultipleUOMHandling > 0)
							"ItemsWithDuplicateUnitsOfMeasureExist;MustSelectAMultipleUOMHandlingOption"
				
				if (UpdateContract.HasMembersToRelease)
					LocalUnreleasedMembersToStart = true
				LocalContract  = UpdateContract
				
				if ((UpdateContract.EffectiveDate  != EffectiveDate
				and  EffectiveDate < UpdateContract.EffectiveDate)      
				or  (UpdateContract.ExpirationDate != ExpirationDate
				and  ExpirationDate > UpdateContract.ExpirationDate))
					invoke UpdateContractDates UpdateContract
						invoked.FromUpdateProcess 	= true
						invoked.NewEffectiveDate	= EffectiveDate
						invoked.NewExpirationDate	= ExpirationDate
				
				if (IsManufacturerContract)
					for each ContractImportTier set
						LocalTier     = each.ContractImportTier
						LocalContract = UpdateContract
						if (!UpdateContractTierRel exists)
							invoke Create ContractTier
								fill in fields from each.ContractImportTier
								invoked.Contract		  		   = UpdateContract
								invoked.ContractTier               = each.ContractImportTier
				
				invoke ProcessContractImportLinesUpdates ContractLineImport 
					invoked.PrmContractGroup			= ContractGroup
					invoked.ImportedContract			= ContractImport
					invoked.UpdateContract				= UpdateContract
					invoked.TolerancePercent			= TolerancePercent
					invoked.Connector					= Connector
					invoked.ToleranceAmount				= ToleranceAmount		
					invoked.RejectAllCostIncreases		= RejectAllCostIncreases
					invoked.UpdateTier              	= UpdateTier
					invoked.FromContractCreation        = FromContractCreation
					invoked.UpdateCostsOnly             = UpdateCostsOnly
					invoked.UnreleasedMembersToStart    = LocalUnreleasedMembersToStart
					invoked.MultipleUOMHandling         = MultipleUOMHandling
					invoked.MultipleContracts           = MultipleContracts
					invoked.ProcessItemMasterOnly       = ProcessItemMasterOnly
					invoked.ClosedLineHandling          = ClosedLineHandling
					
				if (!ContractUpdatedFromImportRel exists) 
                
                    invoke CreateRelatedContract RelatedContract
                        invoked.ContractGroup                 = ContractGroup
                        invoked.Contract                      = UpdateContract
                        invoked.RelatedContractID             = ContractImport
                        invoked.RelatedContractType           = 12
                        invoked.RelatedSupplierName           = ContractImport.Supplier.SupplierName
                        invoked.ManufacturerCodeDivision      = ContractImport.ManufacturerCodeDivision
                        invoked.Supplier                      = ContractImport.Supplier
                        invoked.Vendor                        = ContractImport.Vendor
                        invoked.RelatedContractDescription    = ContractImport.DerivedRelatedDescription    	
					
		SetCanUseForCostDefaultingToYes is an Instance Action
			valid when (DisplayCanUseForCostDefaulting)
			Action Rules
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport        = ContractImport
                    invoked.PrmUpdateType            = "T"
						
		SetCanUseForCostDefaultingNo is an Instance Action
			valid when (DisplayCanUseForCostDefaulting)
			Action Rules
				invoke UpdateAllContractLineImports ContractLineImport
                    invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport        = ContractImport
                    invoked.PrmUpdateType            = "F"

		LoadManufacturerSupplier is a Set Action
			restricted
			
			Action Rules
			
				Instance Rules
				
					ManufacturerSupplier = ContractGPOHeaderRel.ManufacturerSupplier

		LinkToContract is an Instance Action
			valid when (CanLinkToContract)
			Parameters
				ContractGroup               
				LinkToContractNumber              	is a Contract
				RunContractLineUpdatesImmediately 	is Boolean
				DoNotSetLinesToUpdate             	is Boolean
				TolerancePercent					is Percent size 6.3
				Connector
				ToleranceAmount						is an InternationalAmount
				RejectAllCostIncreases				is Boolean
				UpdateCostsOnly                     is Boolean
								
			Parameter Rules
			
				LinkToContractNumber
					required
					constraint (!LinkToContractNumber.ContractStatus.Closed)
						"CannotLinkToAClosedContract"
					if (ManufacturerOrDistributor.ManufacturerContract)
						constraint (LinkToContractNumber.ManufacturerOrDistributor.ManufacturerContract)
							"MustLinkToAManufacturerContract"
					if (ManufacturerOrDistributor.DistributorContract)
						constraint (LinkToContractNumber.ManufacturerOrDistributor.DistributorContract)
							"MustLinkToADistributorContract"					  
					constraint (Supplier = LinkToContractNumber.Supplier)
						"MustLinkToAContractWithTheSameSupplierNumber"
					if (RunContractLineUpdatesImmediately = true)
						constraint (DoNotSetLinesToUpdate = false)
							"CannotSetBothRunContractLineUpdatesImmediatelyAndDoNotSetLinesToUpdateToTrue"
					
			Action Rules
				invoke CreateRelatedContract RelatedContract
					invoked.ContractGroup	  		   = ContractGroup
					invoked.Contract		  		   = LinkToContractNumber
					invoked.RelatedContractID 		   = ContractImport
					invoked.RelatedContractType		   = 10
					invoked.RelatedSupplierName 	   = ContractImport.Supplier.SupplierName
					invoked.ManufacturerCodeDivision   = ContractImport.ManufacturerCodeDivision
					invoked.Supplier				   = ContractImport.Supplier
					invoked.Vendor					   = ContractImport.Vendor
					invoked.RelatedContractDescription = ContractImport.DerivedRelatedDescription

				if (!ContractImport = ContractImport.WorkingContractID)
					invoke CreateRelatedContract RelatedContract
						invoked.ContractGroup	  		   = ContractGroup
						invoked.Contract		  		   = LinkToContractNumber
						invoked.RelatedContractID 		   = ContractImport.WorkingContractID
						invoked.RelatedContractType		   = ContractImport.WorkingContractType
						invoked.RelatedSupplierName 	   = ContractImport.Supplier.SupplierName
						invoked.ManufacturerCodeDivision   = ContractImport.ManufacturerCodeDivision
						invoked.Supplier				   = ContractImport.Supplier
						invoked.Vendor					   = ContractImport.Vendor
						invoked.RelatedContractDescription = ContractImport.DerivedRelatedDescription
						invoked.WorkingContract            = true

				if (NationalContractNumber entered)
					invoke CreateRelatedContract RelatedContract 
						invoked.ContractGroup	  		   = ContractGroup
						invoked.Contract		  		   = LinkToContractNumber
						invoked.RelatedContractID 		   = NationalContractRel.ContractImport
						invoked.RelatedContractType		   = 18
						invoked.RelatedSupplierName 	   = NationalContractRel.Supplier.SupplierName
						invoked.ManufacturerCodeDivision   = NationalContractRel.ManufacturerCodeDivision
						invoked.Supplier				   = NationalContractRel.Supplier
						invoked.Vendor					   = NationalContractRel.Vendor
						invoked.RelatedContractDescription = NationalContractRel.DerivedRelatedDescription
				
				if (HasS2Contracts)
					for each S2ContractRel
						invoke CreateRelatedContract RelatedContract 
							invoked.ContractGroup	  		   = ContractGroup
							invoked.Contract		  		   = LinkToContractNumber
							invoked.RelatedContractID 		   = each.ContractImport
							invoked.RelatedContractType		   = 19
							invoked.RelatedSupplierName 	   = each.Supplier.SupplierName
							invoked.ManufacturerCodeDivision   = each.ManufacturerCodeDivision
							invoked.Supplier				   = each.Supplier
							invoked.Vendor					   = each.Vendor
							invoked.RelatedContractDescription = each.DerivedRelatedDescription		


				LocalLinkToContract = true

				if (RunContractLineUpdatesImmediately = true)
					LocalUpdateContract = true				
				if (DoNotSetLinesToUpdate = false)
					invoke ResetAllUpdateFunctionFieldsToUpdate
				
				if (DistributorsExist
				and ManufacturerOrDistributor.ManufacturerContract
				and !MultiTierDistributor)
					for each ContractImportDistributorRel
						invoke LinkToContract each
							invoked.ParmManufacturerContract = LinkToContractNumber
							
				if (ManufacturerOrDistributor.DistributorContract
				or  MultiTierDistributor)
					invoke LinkToContractVendorItem ContractLineImport
						invoked.ParmContractGroup  = ContractGroup
						invoked.ParmContractImport = ContractImport

				invoke LoadContractAndLine ContractLineImport 
					invoked.ParmContractGroup	= ContractGroup
					invoked.ParmContractImport  = ContractImport
					invoked.ParmContract        = LinkToContractNumber						
				
		UpdateTiers is an Instance Action
			valid when (HasUpdatedTiers)
				
			Action Rules
				invoke UpdateContractTiers ContractImportTierMember
					invoked.ParmContractGroup  		= ContractGroup
					invoked.ParmContractImport 		= ContractImport
					invoked.ParmUpdateContract 		= ContractImport.DerivedToContract
						
		AddMembersToContract is an Instance Action
			valid when (HasTierMembersMissingOnContract)
			Action Rules
				invoke AddMembersToContractSet ContractImportTierMember
					invoked.ParmContractGroup 	= ContractGroup
					invoked.ParmContractImport  = ContractImport
		
		CheckForManuallyChangedCosts is a Set Action
        	restricted
			completion message is "ViewResults_inCostDiscrepancies"        	
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        			default label is "ContractGroup"
        		ParmGPOSupplier     		is a Supplier
					default label is "GPOSupplier"

        	Parameter Rules
        		ParmGPOSupplier
        			initial value is ParmContractGroup.DefaultGPOSupplier
					default to ParmContractGroup.DefaultGPOSupplier
					required
					constraint (ParmGPOSupplier.GroupPurchasingOrganization) 
						"GPOSupplierIsNotDefinedAsAGroupPurchasingOrganization" 		

        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
                and    ContractImport.DerivedToContract entered
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)	
				
			Action Rules
				Instance Rules
					invoke CheckForManuallyChangedCosts ContractLineImport
						invoked.ParmContractGroup       = ContractGroup
						invoked.ParmContractImport      = ContractImport
						
		ClearUpdateFlags is a Set Action 
			restricted 
			Parameters
				ParmContractGroup is a ContractGroup
			Instance Selection 
				where (ParmContractGroup = ContractGroup 
				and    ContractImport.HasUpdateFlagsSetToTrue)

			Sort Order 
				ContractGroup
				ContractImport 
			Action Rules  
				
				Instance Rules 
					LinesUpdated 	= false
					HeaderUpdated   = false 

		FindVendorItemChanges is a Set Action
			restricted
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        		ParmGPOSupplier     		is like Supplier
				AutoUpdateContracts         is Boolean
				ProcessOnlyUpdatedRecords   is Boolean

        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    ContractImport.LinesUpdated = true))
                and   (ContractImport.DerivedToContract !entered
				or    (ContractImport.DerivedToContract entered
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
				
			Action Rules
				Instance Rules
					
					if (!MultiTierDistributor
					and !IsDistributorContract)
						invoke FindVendorItemChanges ContractLineImportDistributor
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmContractImport          = ContractImport
							invoked.ParmGPOContractNumber       = GPOContractNumber	
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = ProcessOnlyUpdatedRecords							
					else
					if (MultiTierDistributor
					or  IsDistributorContract)
						invoke FindVendorItemChanges ContractLineImport
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmContractImport          = ContractImport
							invoked.ParmGPOContractNumber       = GPOContractNumber							
							invoked.AutoUpdateContracts         = AutoUpdateContracts
							invoked.ProcessOnlyUpdatedRecords   = ProcessOnlyUpdatedRecords
												
		UnlinkFromContract is an Instance Action
			valid when (CanUnlinkFromContract)
			confirmation required 
				"ThisActionWillUnlinkManufacturerAndDistributorContractsFromThisContractInterface;DoYouWantToContinue?"
			
			Action Rules
				for each RelatedContractsToRemoveRel
					invoke Delete each
				for each ContractImportDistributorRel
					invoke Update each
						invoked.DistributorContractNumber = 0
						invoked.LocalFromImportUnlink = true
				if (ContractImport != WorkingContractID)
					for each RelatedContractsToUnlink
						invoke Delete each
				invoke CleanUpLineErrors
				if (HasDistributorLinesWithContracts)
					invoke UnlinkFromDistributorContract ContractLineImportDistributor
						invoked.ParmContractGroup 	= ContractGroup 
						invoked.ParmContractImport	= ContractImport
				invoke ClearContractAndLine ContractLineImport 
					invoked.ParmContractGroup 	= ContractGroup 
					invoked.ParmContractImport	= ContractImport

		FindNewDistributors is a Set Action
			restricted
			Parameters
				ParmContractGroup    is a ContractGroup  
				ParmContractImport   is a ContractImport
				AutoUpdateContracts  is Boolean
			
			Instance Selection
			
				where (ParmContractGroup    = ContractGroup
				and    ParmContractImport	= ContractImport)
				
			Action Rules
			
				Instance Rules
					if (GPOIsVizient)
						for each ContractGPODistributorParticipantRel
							LocalItemSupplier   = each.ItemSupplier
							LocalSupplier       = GPOSupplierRel.ContractSupplier
							if (ContractImportDistributorForSupplierRel !exists
							and ContractImportDistributorMainRel !exists
							and GPOSupplierRel.SupplierMapped
							and ContractGPOItemForSupplierRel exists)
								invoke AddNewDistributor ContractImportDistributor
									invoked.ContractGroup                                   = ContractGroup
									invoked.ContractImport                                  = ContractImport
			            			invoked.GPODistributorSupplier                          = each.ItemSupplier
									invoked.ContractImportDistributor                       = GPOSupplierRel.ContractSupplier
									invoked.LocalAutoUpdateContracts                        = AutoUpdateContracts
					else 
					if (GPOIsHealthTrust2021)
						for each ContractGPOSupplier2021Rel
							LocalItemSupplier   = each.GPOSupplier
							LocalSupplier       = GPOSupplierRel.ContractSupplier
							if (ContractImportDistributorForSupplierRel !exists
							and ContractImportDistributorMainRel !exists
							and GPOSupplierRel.SupplierMapped
							and ContractGPOItemForSupplierRel exists)
								invoke AddNewDistributor ContractImportDistributor
									invoked.ContractGroup                                   = ContractGroup
									invoked.ContractImport                                  = ContractImport
			            			invoked.GPODistributorSupplier                          = each.GPOSupplier
									invoked.ContractImportDistributor                       = GPOSupplierRel.ContractSupplier
									invoked.LocalAutoUpdateContracts                        = AutoUpdateContracts	
									invoked.EffectiveDate                                   = each.ContractDistributorEffectiveDate 
									invoked.ExpirationDate									= each.ContractDistributorExpireDate												
					else
					if (GPOIsHealthTrust)
					  	for each HPGGPOHeaderRel
							invoke FindNewDistributorHT each
								invoked.ParmContractGroup  	= ContractGroup
								invoked.ParmContractImport 	= ContractImport
								invoked.AutoUpdateContracts	= AutoUpdateContracts
					else
					if (GPOIsGHX)
						for each GHXContractGPOHeaderRel
							if (IsManufacturerContract
							and each.VendorEID entered
							and each.VendorEID != each.ManufacturerEID
							and each.ContractEndDate = ExpirationDate)
								LocalItemSupplier	= each.VendorEID
								LocalSupplier       = GPOSupplierRel.ContractSupplier
								if (LocalSupplier entered)
									if (ContractImportDistributorMainRel !exists
									and ContractImportDistributorForSupplierRel !exists)
										invoke AddNewDistributor ContractImportDistributor
											invoked.ContractGroup                                   = ContractGroup
											invoked.ContractImport                                  = ContractImport
					            			invoked.GPODistributorSupplier                          = LocalItemSupplier
											invoked.ContractImportDistributor                       = LocalSupplier
											invoked.LocalAutoUpdateContracts                        = AutoUpdateContracts	

		FindNewParticipants is a Set Action
			restricted
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        		ParmGPOSupplier     		is like Supplier
				StandardMarkupCalculation   is Boolean
				AutoUpdateContracts         is Boolean
				ProcessOnlyUpdatedRecords	is Boolean

        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    ContractImport.HeaderUpdated))				
                and   (ContractImport.DerivedToContract !entered
				or    (ContractImport.DerivedToContract entered
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
				
			Sort Order
			
				ContractGroup
				ContractImport
			
			Action Rules
				ContractImport Set Rules
					Exit Rules
					
						if (AutoUpdateContracts)
							if (HasTierMembersMissingOnContract)
								invoke AddMembersToContract 
				
				Instance Rules
					
					invoke FindNewParticipants ContractGPOParticipant
						invoked.ParmContractGroup           = ParmContractGroup
						invoked.ParmGPOSupplier             = ParmGPOSupplier
						invoked.ParmContractImport          = ContractImport
						invoked.ParmGPOContractNumber       = GPOContractNumber									
						invoked.StandardMarkupCalculation   = StandardMarkupCalculation

        FindNewContractDates is a Set Action
        	restricted
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        		ParmGPOSupplier     		is like Supplier
				ParmInterfaceContract       is like ContractImport
				AutoUpdateContracts         is Boolean
				LineUpdateOption            is Numeric 1
				ProcessOnlyUpdatedRecords   is Boolean

        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
				and   (ParmInterfaceContract !entered
				or     ParmInterfaceContract = ContractImport)
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    ContractImport.HeaderUpdated))
                and   (ContractImport.DerivedToContract !entered
				or    (ContractImport.DerivedToContract entered
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
        		        		        
        	Action Rules
        		Instance Rules
        		
        			if (GPOIsVizient)
	        			if (first ContractGPOHeaderRel.StartDate >= current date)
	        				FutureEffectiveDate  = first ContractGPOHeaderRel.StartDate
	        			if (first ContractGPOHeaderRel.EndDate   != ExpirationDate)
	        				FutureExpirationDate = first ContractGPOHeaderRel.EndDate 

					if (GPOIsHealthTrust)
						if (first HPGMainHeaderRel.StartDate	>= current date)
	        				FutureEffectiveDate  = first HPGMainHeaderRel.StartDate						
						if (first HPGMainHeaderRel.EndDate      != ExpirationDate) 
	        				FutureExpirationDate = first HPGMainHeaderRel.EndDate 
	        				
					if (GPOIsHealthTrust2021)
						if (HT2021FutureRel exists)
	        				FutureEffectiveDate  = HT2021FutureRel.StartDate						
	        			if (HT2021FutureExpirationRel exists)
	        				FutureExpirationDate = HT2021FutureExpirationRel.EndDate 

					if  (AutoUpdateContracts
					and  CanUpdateNewDatesOnContract)
						invoke UpdateNewDatesOnContract
							invoked.LineUpdateOption = LineUpdateOption

		UpdateDatesOnContract is an Instance Action  
			valid when (CanUpdateDatesOnContract)
			Parameters
				NewEffectiveDate            is Date
				NewExpirationDate           is Date
				NewReviewDate               is Date
				LineUpdateOption            is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3				

			Parameter Rules
				LineUpdateOption
					initial value is 2
					default to 2

				NewEffectiveDate
					initial value is EffectiveDate
					
					if (NewEffectiveDate entered
					and NewExpirationDate entered)
						constraint (NewEffectiveDate < NewExpirationDate)
							"IfBothNewEffectiveAndExpirationDateAreEntered,NewEffectiveDateMustBeBeforeNewExpiration"

					if (NewEffectiveDate entered
					and NewExpirationDate !entered)
						constraint (NewEffectiveDate < ExpirationDate)
							"NewEffectiveDateMustBeBeforeCurrentExpirationDate"
							
				NewExpirationDate
					initial value is ExpirationDate

					if (NewExpirationDate entered
					and NewEffectiveDate !entered)
						constraint (EffectiveDate < NewExpirationDate)
							"NewExpirationDateMustBeAfterCurrentEffectiveDate"
							
				NewReviewDate
					initial value is ContractReviewDate			
							
			Action Rules
			
				constraint (NewExpirationDate != ExpirationDate
				or          NewEffectiveDate  != EffectiveDate
				or          NewReviewDate 	  != ContractReviewDate)
					"MustEnterSomeNewValueThatIsDifferentToUpdateDates"

				if (IsManufacturerOrDistributorContract
				and ExpirationDate entered)
					constraint (NewExpirationDate entered)
						"MustEnterExpirationDateForManufacturerOrDistributorContract"

				LocalEffectiveDate  = EffectiveDate
				LocalExpirationDate = ExpirationDate

				EffectiveDate		= NewEffectiveDate
				ExpirationDate		= NewExpirationDate
				ContractReviewDate	= NewReviewDate
					
				if (ContractReviewDate != 0)
					if (EffectiveDate != 0)
						constraint (ContractReviewDate >= EffectiveDate)
							"ContractNotEffectiveForTheReviewDate"
					if (ExpirationDate != 0)
						constraint (ContractReviewDate <= ExpirationDate)
							"ContractNotEffectiveForTheReviewDate"
				
				invoke UpdateEffectiveExpirationDates ContractLineImport
                	invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport       = ContractImport
                    invoked.PrmNewEffectiveDate     = EffectiveDate
                    invoked.PrmOldEffectiveDate     = LocalEffectiveDate
                    invoked.PrmNewExpirationDate    = ExpirationDate
                    invoked.PrmOldExpirationDate    = LocalExpirationDate
					invoked.LineUpdateOption        = LineUpdateOption
					
				if (DerivedToContract entered
				and !ContractsFromImportNavRel.Contract.ContractStatus.Closed)
					invoke UpdateContractDates ManufacturerContractRel
						invoked.LineUpdateOption    	= LineUpdateOption
						invoked.NewEffectiveDate		= NewEffectiveDate
						invoked.NewExpirationDate		= NewExpirationDate
						invoked.NewReviewDate			= NewReviewDate

		UpdateNewDatesOnContract is an Instance Action  
			valid when (CanUpdateNewDatesOnContract)
			Parameters
				LineUpdateOption            is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3			
			
			Parameter Rules
				LineUpdateOption
					initial value is 2
					default to 2
			
			Action Rules
			
				LocalEffectiveDate  = EffectiveDate
				LocalExpirationDate = ExpirationDate

				if (FutureEffectiveDate entered)
					EffectiveDate   = FutureEffectiveDate
				if (FutureExpirationDate entered)
					ExpirationDate	= FutureExpirationDate
					
				if (GPOIsHealthTrust2021)
					for each ContractImportDistributorRel
						invoke UpdateDistributorDates each 
				
				if (GPOAndIsGHX)
					for each ContractImportDistributorRel 
						if (each.DistributorContractNumber entered
						and LocalExpirationDate != ExpirationDate)
							invoke UpdateDistributorDatesGHX each
								invoked.NewExpirationDate    = ExpirationDate

				invoke UpdateExpirationDatesFromHeaderUpdate ContractImportTierMember
					invoked.ParmContractGroup		= ContractGroup
					invoked.ParmContractImport  	= ContractImport
					invoked.ParmNewExpirationDate    = ExpirationDate
                    invoked.ParmOldExpirationDate    = LocalExpirationDate	

				invoke UpdateEffectiveExpirationDates ContractLineImport
                	invoked.PrmContractGroup        = ContractGroup
                    invoked.PrmContractImport       = ContractImport
                    invoked.PrmNewEffectiveDate     = EffectiveDate
                    invoked.PrmOldEffectiveDate     = LocalEffectiveDate
                    invoked.PrmNewExpirationDate    = ExpirationDate
                    invoked.PrmOldExpirationDate    = LocalExpirationDate
					invoked.LineUpdateOption        = LineUpdateOption
					
				if (DerivedToContract entered
				and !ContractsFromImportNavRel.Contract.ContractStatus.Closed)
					invoke UpdateContractDates ManufacturerContractRel
						invoked.LineUpdateOption    = LineUpdateOption
						invoked.NewEffectiveDate	= EffectiveDate
						invoked.NewExpirationDate	= ExpirationDate
				initialize FutureEffectiveDate
				initialize FutureExpirationDate

		UpdateGPOSupplierOnThisContract is an Instance Action
			valid when (GPOSupplierIsUpdated)
			completion message is "ViewResultsInContractSupplierChanges"			
			
			Action Rules

        		if (GPOIsVizient)
        			if (first ContractGPOHeaderRel.ManufacturerSupplier != ManufacturerSupplier)
        				ManufacturerSupplier = first ContractGPOHeaderRel.ManufacturerSupplier
        		else 
        		if (GPOIsHealthTrust)
        			if (first HPGMainHeaderRel.ManufacturerSupplier != ManufacturerSupplier)
        				ManufacturerSupplier = first HPGMainHeaderRel.ManufacturerSupplier 	
        		else
        		if (GPOIsHealthTrust2021)
        			if (HPG2021ChangedSupplierRel exists)
        				ManufacturerSupplier = HPG2021ChangedSupplierRel.ManufacturerSupplier

        FindChangedContractSuppliers is a Set Action
        	restricted
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        		ParmGPOSupplier     		is like Supplier
				AutoUpdateContracts         is Boolean
				ProcessOnlyUpdatedRecords   is Boolean

        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    HeaderUpdated = true))
                and   (DerivedToContract !entered
				or    (DerivedToContract entered
				and   !ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
        		        		        
        	Action Rules
        		Instance Rules
        			
        			if (GPOIsVizient)
        				if (first ContractGPOHeaderRel.ManufacturerSupplier != ManufacturerSupplier)
        					ManufacturerSupplier = first ContractGPOHeaderRel.ManufacturerSupplier
        			else 
        			if (GPOIsHealthTrust)
        				if (first HPGMainHeaderRel.ManufacturerSupplier != ManufacturerSupplier)
        					ManufacturerSupplier = first HPGMainHeaderRel.ManufacturerSupplier 	
        			else
        			if (GPOIsHealthTrust2021)
        				if (HPG2021ChangedSupplierRel exists)
        					ManufacturerSupplier = HPG2021ChangedSupplierRel.ManufacturerSupplier
        			
        			if (AutoUpdateContracts
        			and CanUpdateSupplierForGPO)
						invoke ChangeSupplierAndVendor

		RemoveMissingGPOItems is an Instance Action		
			valid when (HasMissingGPOItems)
			Action Rules
			
				invoke SetToCleanMissingGPOItems ContractLineImport
					invoked.ParmContractGroup 	= ContractGroup
					invoked.ParmContractImport	= ContractImport	

		UpdateVendorItemsOnContract is an Instance Action
			valid when (VendorItemsToUpdate)
			
			Action Rules
				constraint (!VendorItemUpdatesFromAttributes)
					"VendorItemsHaveAlsoBeenUpdatedFromAttributeUpdates;MustReviewAllVendorItemUpdatesAtLineLevel"
				
				invoke UpdateMismatchedVendorItemsOnContract
					invoked.ParmContractGroup      = ContractGroup
					invoked.ParmContractImport     = ContractImport
				
		UpdateMismatchedVendorItemsOnContract is a Set Action
			restricted
			Parameters
				ParmContractGroup     is a ContractGroup
				ParmContractImport    is a ContractImport
				
			Instance Selection
			
				where (ParmContractGroup  = ContractGroup
				and    ParmContractImport = ContractImport)
			
			Action Rules
				Instance Rules
					for each VendorItemMismatchRel
						if (each.CanReplaceAndInactivateVendorItem)
							invoke ReplaceAndInactivateVendorItem each  
						else
						if (each.CanUpdateVendorItemOnContract)
							invoke UpdateVendorItemOnContract each
	
					for each DistributorVendorItemMismatchRel
						if (each.CanReplaceAndInactivateVendorItem)
							invoke ReplaceAndInactivateVendorItem each  
						else
						if (each.CanUpdateVendorItemOnContract)
							invoke UpdateVendorItemOnContract each		

		ChangeSupplierAndVendor is an Instance Action
			valid when (CanUpdateSupplierForGPO)
			
			Parameters
				ParmNewSupplier             	is a Supplier
					default label is "NewSupplier"
				ParmNewVendor                   is a Vendor
				ParmNewSupplierContact          is a SupplierSourceId
					default label is "NewSupplierContact"
				ParmNewPurchaseFrom             is a PurchaseFromLocation
					default label is "NewPurchaseFrom"  
				InactivateOldVendorItems 		is Boolean
					default label is "InactivateOldVendorItemsIfVendorChanged"
				InactivateOldSupplier       	is Boolean
				UpdateVendorOnRequisitionLines 	is Boolean
				ChangeReplenishmentVendor  	is Boolean			
					default label is "ChangeReplenishmentVendorForAllRelatedReplenishmentItems"

			Parameter Rules
			
				ParmNewSupplier
					
					initial value is GPOSupplierNameRel.ContractSupplier
					default to GPOSupplierNameRel.ContractSupplier
					LocalSupplier 			= GPOSupplierNameRel.ContractSupplier
					if (ParmNewSupplierContact entered)
						LocalSupplierSourceId	= ParmNewSupplierContact
					else 
						LocalSupplierSourceId   = SupplierSourceId
					constraint (NewSupplierSourceIDRel exists)				
						"NewSupplierAndNewSupplierContactNotValid"
						
					if (DerivedToContract entered)
						if (ManufacturerContractRel.ContractStatus.Active)
							constraint (ParmNewSupplier.Vendor entered)
								"NewSupplierMustBeAssociatedWithAVendorIfContractIsActive"

				ParmNewVendor
					initial value is ParmNewSupplier.Vendor 
				ParmNewPurchaseFrom
					
					LocalNewVendor			= ParmNewSupplier.Vendor
					LocalNewPurchaseFrom    = ParmNewPurchaseFrom
					
					if (ParmNewPurchaseFrom entered)
						constraint (ParmNewSupplier.Vendor entered)
							"CannotEnterAPurchaseFromIfNewSupplierDoesNotHaveAVendor"
						constraint (NewPurchaseFromLocationExists)
							"POPurchaseFrom:<ParmNewPurchaseFrom>DoesNotExist"								

				ParmNewSupplierContact          
					initial value is SupplierSourceId
					default to SupplierSourceId

				ChangeReplenishmentVendor
					if (ChangeReplenishmentVendor = true)
						confirmation required
							"AllItemReplenishmentSourceRecordsRelatedToContractLinesWillHaveTheirVendorChangedToTheNewVendor;DoYouWantToContinue?"
												
			Action Rules
			
				if (SupplierChanged)
					Supplier 								= GPOSupplierNameRel.ContractSupplier
					Vendor   								= GPOSupplierNameRel.ContractSupplier.Vendor
				if (ParmNewSupplierContact != SupplierSourceId)
					SupplierSourceId                        = ParmNewSupplierContact
				if (ApPoPurchaseFrom.PurchaseFromLocation != ParmNewPurchaseFrom)
					ApPoPurchaseFrom.PurchaseFromLocation 	= ParmNewPurchaseFrom
					initialize ApPoPurchaseFrom.VendorLocation
				if (ManufacturerContractRel exists)
					if (!ManufacturerContractRel.ContractStatus.Closed)
						invoke ChangeSupplierAndVendor ManufacturerContractRel
							invoked.ParmNewSupplier 				= GPOSupplierNameRel.ContractSupplier
							invoked.ParmNewVendor                   = GPOSupplierNameRel.ContractSupplier.Vendor
							invoked.ParmNewPurchaseFrom             = ParmNewPurchaseFrom
							invoked.ParmNewSupplierContact          = ParmNewSupplierContact
							invoked.InactivateOldVendorItems 		= InactivateOldVendorItems
							invoked.InactivateOldSupplier    		= InactivateOldSupplier
							invoked.UpdateVendorOnRequisitionLines 	= UpdateVendorOnRequisitionLines 	
							invoked.ChangeReplenishmentVendor       = ChangeReplenishmentVendor
							invoked.FromGPOInterface                = true

		FindTierChangesForThisRecord is an Instance Action
			valid when (IsManufacturerContractForGPONotGHX)
			Parameters
				UpdateContractImmediately is Boolean
				
			Parameter Rules
				UpdateContractImmediately
					initial value is true	
			
			Action Rules
			
				invoke FindNewContractDates 
 					invoked.ParmContractGroup           = ContractGroup
					invoked.ParmGPOSupplier             = GPOSupplier
					invoked.AutoUpdateContracts         = UpdateContractImmediately
					invoked.ParmInterfaceContract       = ContractImport
					invoked.LineUpdateOption            = 2
					invoked.ProcessOnlyUpdatedRecords   = false 

				invoke ProcessUpdatedParticipants ContractImportTierMember
					invoked.ParmContractGroup			= ContractGroup
					invoked.ParmGPOSupplier         	= GPOSupplier
					invoked.ParmContractImport          = ContractImport
					invoked.AutoUpdateContracts     	= UpdateContractImmediately				

		CheckForNewAndUpdatedItemsForThisRecord is an Instance Action
			valid when (HasGPOSupplierAndIsNotGHX)
			Parameters
        		AutoUpdateContracts  		is Boolean
				TolerancePercent		   	is Percent size 6.3
				Connector
				ToleranceAmount			   	is an InternationalAmount
				RejectAllCostIncreases	   	is Boolean
				UpdateCostsOnly             is Boolean
				ProcessItemMasterOnly       is Boolean
				FindDiscontinuedItems       is Boolean 
								
			Parameter Rules
				
				Connector
					if (TolerancePercent > 0 and ToleranceAmount > 0)
						required
							"ConnectorIsRequiredWhenTolerancePercentAndToleranceAmountAreEntered"
					else
						cannot be entered
							"CannotEnterConnectorUnlessTolerancePercentAndToleranceAmountAreEntered"

				RejectAllCostIncreases
					if (RejectAllCostIncreases)
						constraint (TolerancePercent = 0 and ToleranceAmount = 0)
							"CannotEnterTolerancePercentOrAmountWhenRejectingAllCostIncreases"
				
			Action Rules
				
				constraint (!first ContractsFromImportNavRel.Contract.ContractStatus.Closed)
					"ContractInterfaceIsAssociatedWithAClosedContract;CannotCheckForNewAndUpdatedItems"
				
				invoke FindNewContractDates ContractImport
 					invoked.ParmContractGroup           = ContractGroup
					invoked.ParmGPOSupplier             = GPOSupplier
					invoked.AutoUpdateContracts         = AutoUpdateContracts
					invoked.ParmInterfaceContract       = ContractImport
					invoked.LineUpdateOption            = 2
					invoked.ProcessOnlyUpdatedRecords   = false 

				invoke CheckForNewAndUpdatedItems
					invoked.ParmContractGroup 		= ContractGroup
					invoked.ParmContractImport 		= ContractImport
					invoked.ParmGPOSupplier     	= GPOSupplier
					invoked.AutoUpdateContracts 	= AutoUpdateContracts
					invoked.TolerancePercent        = TolerancePercent
					invoked.Connector				= Connector
					invoked.ToleranceAmount         = ToleranceAmount
					invoked.RejectAllCostIncreases	= RejectAllCostIncreases
					invoked.UpdateCostsOnly         = UpdateCostsOnly					
					invoked.ProcessItemMasterOnly   = ProcessItemMasterOnly
					invoked.FindDiscontinuedItems   = FindDiscontinuedItems

        CheckForNewAndUpdatedItems is a Set Action
        	restricted
        	Parameters
        		ParmContractGroup    		is a ContractGroup
        		ParmContractImport          is like ContractImport
        		ParmGPOSupplier     		is like Supplier
        		AutoUpdateContracts  		is Boolean
				TolerancePercent		   	is Percent size 6.3
				Connector
				ToleranceAmount			   	is an InternationalAmount
				RejectAllCostIncreases	   	is Boolean
				MultipleContracts           is Boolean
				UpdateCostsOnly             is Boolean
				ProcessItemMasterOnly       is Boolean
				DefaultTolerance            is Boolean
				ProcessOnlyUpdatedRecords   is Boolean
				FindDiscontinuedItems       is Boolean
				        		
        	Instance Selection
        		where (ContractGroup 	= ParmContractGroup
        		and    GPOSupplier  	= ParmGPOSupplier
        		and    GPOContractNumber entered
        		and   (ParmContractImport !entered
        		or     ParmContractImport = ContractImport)
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    ContractImport.LinesUpdated = true))
				and   (ContractImport.DerivedToContract !entered                                   
				or    (ContractImport.DerivedToContract entered                                    
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))  
        	
        	Sort Order
        	
        		ContractGroup
        		ContractImport
        	
        	Action Rules

				ContractImport Set Rules
        			Entrance Rules
        			
						if (IsManufacturerContract
						or  MultiTierDistributor)
        					if (ContractGroup.GPOUsed = 2)
	        					for each ContractGPOHeaderRel
	        						LocalTier = each.TierLevel
	        						if (ContractImportNewTierRel !exists) 			
	
										invoke Create ContractImportTier
											invoked.ContractGroup       = ContractGroup
											invoked.ContractImport      = ContractImport
											invoked.ContractImportTier  = LocalTier
											invoked.Description         = each.TierDescription
											invoked.TierTitle           = LocalTier
											if (MultiTierDistributor
											and first ContractImportDistributorRel.MarkupPercent > 0)
												invoked.TierMarkupDiscount  			= "M"
												invoked.TierPricingAmtPct.TierPercent 	= first ContractImportDistributorRel.MarkupPercent
											else 
												invoked.TierMarkupDiscount  = "F" 											
											invoked.GPOContractNumber   = GPOContractNumber        			
        				
        		Instance Rules
        		
					if (FindDiscontinuedItems)
						invoke FindDiscontinuedItems ContractLineImport 
							invoked.ParmContractGroup           = ParmContractGroup
							invoked.ParmContractImport          = ContractImport 

					invoke AddAndUpdateLines ContractGPOItem
						invoked.ParmContractGroup       	= ParmContractGroup
						invoked.ParmContractImport      	= ContractImport
						invoked.ParmGPOContractNumber   	= ContractImport.GPOContractNumber
						invoked.AutoUpdateContracts   		= AutoUpdateContracts
						invoked.TolerancePercent      		= TolerancePercent
						invoked.Connector             		= Connector
						invoked.ToleranceAmount		  		= ToleranceAmount
						invoked.RejectAllCostIncreases		= RejectAllCostIncreases
						invoked.MultipleContracts       	= MultipleContracts
						invoked.UpdateCostsOnly         	= UpdateCostsOnly
						invoked.ProcessItemMasterOnly   	= ProcessItemMasterOnly
						if (IsDistributorContract)
							invoked.ParmDistributor     	= true 
						invoked.DefaultTolerance        	= DefaultTolerance 
						invoked.ProcessOnlyUpdatedRecords	= ProcessOnlyUpdatedRecords  	   
	        			
        DeleteOldInterfaceRecordsInstance is an Instance Action 
        	restricted
        	Action Rules
        	
        		invoke DeleteOldInterfaceRecordsSet ContractGPOGHXInterface
        			invoked.ParmGPOContractNumber = GPOContractNumber
        	
	        						
        			
    			
       			
        				
        					
        			            
