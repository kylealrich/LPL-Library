CompanySystemClosingControl is a BusinessClass
	owned by glif
	prefix is IFCSC

	Ontology
		symbolic key is CompanySystemClosingControl

    Patterns
        implements StaticJava

	Persistent Fields
		CurrencyTable			
		Control					is Boolean
		ValidEntryDate			is a DateRange
		ClosedPeriod			is a GeneralLedgerClosePeriod
			delete ignored
		OpenPeriods				is Numeric 2

	Local Fields
		LocalClosePeriod		is a GeneralLedgerClosePeriod
		LocalDate				is Date
		LocalCount				is Numeric 3
#ifdef module am
		LocalAssetPeriodsClosed is Numeric 2
		LocalCloseBook			is like Book
#endif			
	Derived Fields
		CurrentPeriodEndDate	is a DerivedField
			type is Date
			restricted
			if (!LocalClosePeriod entered)
				LocalClosePeriod		= EntityCurrentPeriod
			if (LocalClosePeriod	entered)
				return first CurrentGeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
			else
				return Company.AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod.Date
		NextPeriodBeginDate	is a DerivedField
			type is Date
			restricted
			return (CurrentPeriodEndDate + 1)
		CurrentPeriodBeginDate is a DerivedField
			type is Date
			restricted
			return (Company.AccountingEntity.CurrentPeriod.DerivedBeginGregorian)		
		DerivedEndDate is a DerivedField
			type is Date
			restricted
			if (!OpenPeriods entered)
				LocalClosePeriod	= ClosedPeriod
				LocalDate			= last GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date 
			else 
				if (CurrentPeriodNotClosed)
					if (OpenPeriods 		= 1)
						LocalDate 			= Company.AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod.Date
					else
						LocalClosePeriod 	= EntityCurrentPeriod
						LocalCount 			= 2
						for each GeneralLedgerClosePeriodRel
							LocalDate 		= each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
							if (LocalCount 	= OpenPeriods)
								end for each
							else
								LocalCount 	+= 1
				else
					LocalClosePeriod 		= EntityCurrentPeriod
					LocalCount 				= 1
					for each GeneralLedgerClosePeriodRel
						LocalDate 			= each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
						if (LocalCount 		= OpenPeriods)
							end for each								
						else
							LocalCount 		+= 1			
			return LocalDate
			
		EntityCurrentPeriod		is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			return Company.AccountingEntity.CurrentPeriod

	Relations
		AllAccountingEntityPeriodRel
			one-to-many relation to AccountingEntityPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
				related.AccountingEntity					= Company.AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod > LocalClosePeriod)
		GeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= Company.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod > LocalClosePeriod)	
		CurrentGeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= Company.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod		= LocalClosePeriod)					
		SystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
				related.AccountingEntity					= Company.AccountingEntity
				related.GeneralLedgerSystemCode				= GeneralLedgerSystemCode
		CurrentAccountingEntityPeriodRel
			one-to-many relation to AccountingEntityPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= Company.FinanceEnterpriseGroup
				related.AccountingEntity					= Company.AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod		= LocalClosePeriod)
		CompanySystemClosingControlRel
			one-to-many relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode				= GeneralLedgerSystemCode
			Instance Selection
				where (related.Company.AccountingEntity 	= Company.AccountingEntity
				and	   related.Control
				and	   related.CurrentPeriodNotClosed
				and   !related.UniqueID						= UniqueID)


#ifdef module am
		OtherClosingControlsForSystemRel
			one-to-many relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode				= GeneralLedgerSystemCode
			Instance Selection
				where (related.Company.AccountingEntity 	= Company.AccountingEntity
				and   !related.UniqueID						= UniqueID)
				
			
		AssetBookCalendarsRel
			one-to-many relation to BookCalendar
			Field Mapping uses ByCompanyBookDate
            	related.FinanceEnterpriseGroup 				= Company.FinanceEnterpriseGroup
                related.Company								= Company
            Instance Selection
            	where (related.CalendarStatus 	= "C"
            	and related.PostingBook 		= true
            	and related.CloseBook 			= 0
            	and related.Book.Impairment 	= false)    
#endif

	Sets
		BySystemCode
			Sort Order
				GeneralLedgerSystemCode
				Company
				
	Conditions
		ValidSystemCodes
			restricted
			when (GeneralLedgerSystemCode 	= "AP"
			or    GeneralLedgerSystemCode	= "AR"
			or	  GeneralLedgerSystemCode	= "BL"
			or 	  GeneralLedgerSystemCode	= "PO"
			or 	  GeneralLedgerSystemCode	= "IC"
			or 	  GeneralLedgerSystemCode	= "AM"
			or 	  GeneralLedgerSystemCode	= "CB"
			or 	  GeneralLedgerSystemCode	= "FR"
			or	  GeneralLedgerSystemCode	= "LM")
			
		CurrentPeriodNotClosed
			restricted
			when (!ClosedPeriod.GeneralLedgerCalendarPeriod = EntityCurrentPeriod)
			
		InValidSystemCodes
			restricted
			when (GeneralLedgerSystemCode 	= "PS"
			or    GeneralLedgerSystemCode	= "CA"
			or    GeneralLedgerSystemCode 	= "RJ") 	
						
	Field Rules
		CurrencyTable
			initial value is Company.CurrencyTable
			default to Company.CurrencyTable

			
		Control
			constraint (ValidSystemCodes)
				"ControlInvalidForSystem<GeneralLedgerSystemCode>"
	
	Attach Rules

	Rule Blocks
		ValidEntryDateUpdate
			if (!Control)
				initialize ValidEntryDate
				initialize OpenPeriods
			else
				if (!ValidEntryDate.Begin entered)
					if (CurrentPeriodNotClosed)
						ValidEntryDate.Begin	= CurrentPeriodBeginDate
					else
						ValidEntryDate.Begin	= NextPeriodBeginDate
				if (!ValidEntryDate.End entered)
					ValidEntryDate.End		= DerivedEndDate
				if (!SystemClosingControlRel exists)
					invoke AutoCreate SystemClosingControl
						invoked.FinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.AccountingEntity				= Company.AccountingEntity
						invoked.GeneralLedgerSystemCode			= GeneralLedgerSystemCode
						invoked.Control							= Control
				else
					invoke Update SystemClosingControlRel
						invoked.Control							= Control

	Actions
		Create is a Create Action
 			Entrance Rules 	
				constraint (!InValidSystemCodes)
					"<GeneralLedgerSystemCode>ClosingControlMustBeCreatedOnThe_System_Closing_ControlForm"
				if (Control)
					constraint (!GeneralLedgerSystemCode.RecordType.User)
						"ControlFieldCannotBeCheckedForUserDefinedSystemCodes"						
		 			if (OpenPeriods entered)
						if (ValidEntryDate entered)
			 				confirmation required
			 					"ValidEntryDateWillBeAdjustedBasedOnEnteredNumberOfPeriods"
						initialize ValidEntryDate	
 			Action Rules 	
				include ValidEntryDateUpdate
#ifdef module am
			Exit Rules
				if (Control	= true)			
					if (GeneralLedgerSystemCode = "AM")
						constraint (AssetBookCalendarsRel exists)
							"ACloseBookMustBeIdentifiedBeforeTurningOnSystemControlForAssetSystem"
						invoke ValidateEntityCloseDates	AssetBookCalendarsRel	
						if (DerivedEndDate entered) 
							for each AssetBookCalendarsRel
								LocalCloseBook			= each.Book
								LocalAssetPeriodsClosed = each.NumberOfPeriodCloseRuns	



								if ((LocalAssetPeriodsClosed + 1) != (Company.AccountingEntity.CurrentPeriod.PeriodNumber))
									confirmation required
										"Warning:AssetCloseBook<LocalCloseBook>DoesNotHaveTheSameNumberOfPeriodsClosedAsTheAccountingEntityCloseLedger;SelectYesToProceed"

#endif							
		Update is an Update Action
 			Entrance Rules
				if (Control)
					constraint (!GeneralLedgerSystemCode.RecordType.User)
						"ControlFieldCannotBeCheckedForUserDefinedSystemCodes"				
		 			if (OpenPeriods changed)
		 				if (OpenPeriods entered
		 				and ValidEntryDate entered)
			 				confirmation required
			 					"ValidEntryDateWillBeAdjustedBasedOnEnteredNumberOfPeriods;Proceed?"
							initialize ValidEntryDate	
					else
						if (ValidEntryDate changed
						and OpenPeriods entered)
			 				confirmation required
			 					"UpdatingTheValidEntryDateWillClearTheNumberOfPeriods;Proceed?"
							initialize OpenPeriods									
									
 			Action Rules 	
				include ValidEntryDateUpdate
#ifdef module am
				if (Control = true
				and old Control = false)
					if (GeneralLedgerSystemCode = "AM")
						constraint (AssetBookCalendarsRel exists)
							"ACloseBookMustBeIdentifiedBeforeTurningOnSystemControlForAssetSystem"
						invoke ValidateEntityCloseDates	AssetBookCalendarsRel	
						if (DerivedEndDate entered) 
							for each AssetBookCalendarsRel
								LocalCloseBook			= each.Book
								LocalAssetPeriodsClosed = each.NumberOfPeriodCloseRuns	



								if ((LocalAssetPeriodsClosed + 1) != (Company.AccountingEntity.CurrentPeriod.PeriodNumber))
									confirmation required
										"Warning:AssetCloseBook<LocalCloseBook>DoesNotHaveTheSameNumberOfPeriodsClosedAsTheAccountingEntityCloseLedger;SelectYesToProceed"

				if ((Control changed    
				and (Control = false 
				and old Control = true)))
 					if (!CompanySystemClosingControlRel exists)
						invoke Update SystemClosingControlRel
							invoked.Control = false					

#endif	

											
		Delete is a Delete Action
 			Entrance Rules
#ifdef module am
 				if (!OtherClosingControlsForSystemRel exists)
					invoke AutoDelete SystemClosingControlRel
#endif

		UpdateCompanySystemClosingControl is an Instance Action
			restricted
			Parameters
				PrmCompany						is like Company
					default label is "Company"
				PrmSystem						is like GeneralLedgerSystemCode
					default label is "System"

			Parameter Rules
				PrmCompany
					required
				PrmSystem
					required

 			Entrance Rules 


 			Action Rules
 				if (Control)
	 				ClosedPeriod				= EntityCurrentPeriod
					LocalClosePeriod			= ClosedPeriod
					ValidEntryDate.Begin		= NextPeriodBeginDate
					ValidEntryDate.End			= DerivedEndDate

 			Exit Rules
 				if (!CompanySystemClosingControlRel exists)
					if (SystemClosingControlRel.Control)
						invoke UpdateFromSubSystem SystemClosingControlRel
