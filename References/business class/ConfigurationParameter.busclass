ConfigurationParameter is a BusinessClass
    owned by la
    prefix is CPAR
	contains environment data
	disable data area copy
		preserve target data
	framework type is ConfigParam 

    Ontology
    	symbolic key is ConfigurationParameter

    Patterns
        disable AsOfDateProcessing
        disable EffectiveDated
        implements LightweightAuditing
        implements AuditLogEntryActions
        
    Persistent Fields
    	Value is Alpha size up to 300
    		primitive type is Type
   			primitive size is Length 
    		primitive decimal size is Precision
    		
    	Type				is a PrimitiveType
    	Length				is Numeric size 6
    	Precision			is Numeric size 1
    	
	Transient Fields
		TConfigurationParameterCategory is a ConfigurationParameterCategory
			default label is "PredefinedComponent"
			derive value from DerivedCategory 

		TConfigurationParameterKey is a ConfigurationParameterKey
			default label is "PredefinedNameKey"
			derive value from DerivedKey 
		
		TConfigurationParameterKeyFieldState is a ConfigurationParameterKeyFieldState
			default label is "Value"
			derive value from DerivedStateValue
		
		TNonStandardValue is Boolean
			default label is "UseNonStandardValue"		
	
		UsePredefinedComponent is Numeric 1 
			States
				Predefined  value is 1 
				AdHoc 		value is 2
			
	Context Fields
		ConfigurationParameterCategory
		ConfigurationParameterKey
		
	Local Fields
		ImportCreated is Boolean		
				
	Derived Fields
		ConfigParamKey is a NativeField
			type is Alpha size up to 150
			default label is "BasedOnKey"
			
		UpdateMode is a NativeField
			type is Boolean
			restricted
			
		DerivedCategory is a DerivedField
			type is Alpha size 30		
			restricted	
			
			if (UpdateMode)
				if (ConfigurationParameterCategoryRel exists)
					DerivedCategory = ConfigurationParameter.ConfigurationID
				else
					DerivedCategory = blank
			else
			if (KeyInContext)
				DerivedCategory = ConfigurationParameterKey.ConfigurationParameterCategory
			else
			if (CategoryInContext)
				DerivedCategory = ConfigurationParameterCategory.ConfigurationParameterCategory
			else
				DerivedCategory = ConfigurationParameter.ConfigurationID
			
		DerivedKey is a DerivedField
			type is Alpha size up to 150	
			restricted		
			
			if (UpdateMode)
				if (ConfigurationParameterKeyRel exists)
					DerivedKey = ConfigurationParameter.ConfigParamKey
				else
					DerivedKey = blank
			else
			if (KeyInContext)
				DerivedKey = ConfigurationParameterKey.ConfigurationParameterKey
			else
				DerivedKey = ConfigurationParameter.ConfigParamKey	
				
		DerivedStateValue is a DerivedField
			type is Alpha size up to 300
			restricted
			if (TConfigurationParameterKey.HasStates and (TConfigurationParameterKey.StrictStates or StateValueRel exists))
				DerivedStateValue = Value
			else
				DerivedStateValue = blank
		
		PreferredComponent is a DerivedField
			type is like ConfigurationParameterCategory				
			
			return ConfigurationParameterKeyRel.PreferredCategory	
			
		DerivedRefreshCategory is a DerivedField
			type is Alpha size 30		
			restricted		
			
			if (ConfigurationParameter.ConfigurationID entered)
				return ConfigurationParameter.ConfigurationID
			
			return TConfigurationParameterKey.ConfigurationParameterCategory		
			
		ImportCreatedMsg is a MessageField
			"ImportCreated_Configuration_Parameter"                
			
		ImportUpdatedMsg is a MessageField
			"ImportUpdated_Configuration_Parameter"
			
		ImportCompletionMessage is a DerivedField
    		type is MessageField
    		if (ImportCreated)
    			return ImportCreatedMsg
    		else
    			return ImportUpdatedMsg
    	
    	UpperName is a DerivedField
    		type is AlphaUpper size up to 150
    		default label is "UpperCaseName"
    		restricted
    		return ConfigurationParameter.Name

	Conditions
		CanEnterAdHoc
			when ((TConfigurationParameterKey entered
			and   !TConfigurationParameterKey.Usage.Key)
			or    UsePredefinedComponent.AdHoc)

		ConfigurationParameterKeyExists
			when (ConfigurationParameterKeyRel exists)
			
		FixedSize
			when (Type.FixedSize)	
			
		PrecisionIsValid
			when (Type.Number)				
			
		CategoryInContext
			restricted			
			when (ConfigurationParameterCategory in context and ConfigurationParameterCategory.ConfigurationParameterCategory entered or ConfigurationParameterKey in context and ConfigurationParameterKey.ConfigurationParameterCategory entered)
			
		KeyInContext
			restricted			
			when (ConfigurationParameterKey in context and ConfigurationParameterKey.ConfigurationParameterKey entered)
			
		CanEditCategory
			restricted
			when (not UpdateMode and not CategoryInContext)
			
		CanEditKey
			restricted
			when (not UpdateMode and not KeyInContext)		
			
		CanCreate
			restricted
			when (not CategoryInContext or not ConfigurationParameterCategory.UserInterfaceGroupOnly)	
			
		SharePageAnalyticsExists
			restricted
			when (config.sharepageanalytics != blank)
			
		ConfigurableFeaturesEnabled
			restricted
			when (config.configurablefeaturesenabled = "true")

		Deprecated
			when (ConfigurationParameterKeyRel.Deprecated)		
			
		ValidForResidency
			restricted
			when (not KeyInContext or ConfigurationParameterKey.ValidForResidency)							
			
	Field Rules
		Length
			if (FixedSize)
				force default to Type.MaxSize
				
		Type
			default to TConfigurationParameterKey.PreferredDataType	
		












		Value
			if (TConfigurationParameterKey.HasStates)
				if (TConfigurationParameterKeyFieldState entered)
					Value = TConfigurationParameterKeyFieldState
				required
					"InvalidValue"
				
		TConfigurationParameterKeyFieldState
			if (TConfigurationParameterKey.StrictStates)
				if (TConfigurationParameterKeyFieldState not entered)
					TConfigurationParameterKeyFieldState = Value
				required

	Create Rules  // Create Exit Rules are too late, "insert" has already been called. "Create Rules" happen prior.
		if (ConfigurationParameter.ConfigurationID = blank)
			ConfigurationParameter.ConfigurationID = TConfigurationParameterCategory
			
		if (ConfigurationParameter.Name = blank)
			ConfigurationParameter.Name = TConfigurationParameterKey	
			
		if (ConfigurationParameterCategoryRel.CaseInsensitiveKey)
			ConfigurationParameter.Name = UpperName	
			
		if (not ValidForResidency)
			confirmation required
				"DefinedKeyResidencyOf_'<ConfigurationParameterKey.Residence>'_isNotValidForTheCurrentDataArea.CreateAnyway?"

	Relations
		SharePageAnalyticsRel
			one-to-many relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID 	= "config"
				related.ConfigurationParameter.Name 			= "sharepageanalytics"
				
		ConfigurableFeaturesEnabledRel		
			one-to-many relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID 	= "config"
				related.ConfigurationParameter.Name 			= "configurablefeaturesenabled"
			Instance Selection
				where (related.Value = "true")

		ConfigurableFeaturesExistsRel
			one-to-many relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID 	= "config"
				related.ConfigurationParameter.Name 			= "configurablefeaturesenabled"

		ConfigurationParameterCategoryRel
    		one-to-one relation to ConfigurationParameterCategory
			Field Mapping uses symbolic key
				related.ConfigurationParameterCategory = ConfigurationParameter.ConfigurationID
				
		ConfigurationParameterKeyRel
    		one-to-one relation to ConfigurationParameterKey
			Field Mapping uses symbolic key
				related.ConfigurationParameterCategory = ConfigurationParameter.ConfigurationID
				related.ConfigurationParameterKey      = ConfigParamKey
				
		StateValueRel
			one-to-one relation to ConfigurationParameterKeyFieldState
			Field Mapping uses symbolic key
				related.ConfigurationParameterCategory 		= ConfigurationParameter.ConfigurationID	
				related.ConfigurationParameterKey 	   		= ConfigParamKey
				related.ConfigurationParameterKeyFieldState = Value
			


	Actions
		Create is a Create Action
			
			Entrance Rules
				constraint (CanCreate)
					"CategoryIsNotDefinedAsAResidenceCategory"
					
				if (Deprecated)
					confirmation required
						"KeyIsDeprecated.AreYouSureYouWantToCreate?"
						
		Import is an Import Action
			completion message is "<ImportCompletionMessage>"
			restricted
			
			Local Fields
				LocalConfigParam is a ConfigurationParameter
				LocalPassword is Password 
				
			Entrance Rules
				if (Deprecated)
					confirmation required
						"KeyIsDeprecated.AreYouSureYouWantToCreate?"
				
			Action Rules
				LocalConfigParam = ConfigurationParameter
				
				if (LocalConfigParam exists)
					ImportCreated = false
					
					invoke Update LocalConfigParam
						if (Type = 8399) 
							invoked.Value 				= LocalPassword 
						else                                            
							invoked.Value				= Value
					    invoked.Type      				= Type
    					invoked.Length    				= Length
    					invoked.Precision 				= Precision
    			else 
					constraint(CanCreate)
						"CreateNotAvailableForThisParameter"
						
					ImportCreated = true
					
					invoke Create this instance
						invoked.ConfigurationParameter = ConfigurationParameter
						invoked.Value                  = Value
				    	invoked.Type                   = Type
    					invoked.Length                 = Length
    					invoked.Precision              = Precision
		
		SharePageAnalytics is a Create Action
			valid when (!SharePageAnalyticsExists)
			completion message is "ThankYou!YouHaveOptedInAndAreNowSharingPageAnalyticsWithUs!"
			Parameters
				CustomerId is Alpha 40							
				Application is Alpha 20							
					States
						GLOBALHR value is "GLOBALHR"
							default label is untranslatable
						GLOBALFINANCE value is "GLOBALFINANCE"
							default label is untranslatable
						PROCUREMENT value is "PROCUREMENT"
							default label is untranslatable
						FINANCIALS value is "FINANCIALS"
							default label is untranslatable
				EnvironmentType is Alpha 5						
					States
						PRODUCTION 		value is "PROD"
						STAGE 			value is "STAGE"
						TRAIN 			value is "TRAIN"
						TEST 			value is "TEST"
						DEVELOPMENT 	value is "DEV"
			Parameter Rules
				CustomerId
					required
				Application
					required
				EnvironmentType
					required
			Local Fields
				LocApplication     is Alpha 20
				LocEnvironmentType is Alpha 5				
			Action Rules

				LocApplication = Application
				LocEnvironmentType = EnvironmentType
				
				invoke Create this instance
					invoked.ConfigurationParameter.ConfigurationID = "config"
					invoked.ConfigurationParameter.Name = "sharepageanalytics"
					invoked.Type = 8222  
					invoked.Length = 65
					invoked.Value = CustomerId + "_" + LocApplication + "_" + LocEnvironmentType
		
		EnableConfigurableFeatures is an Import Action
			valid when (!ConfigurableFeaturesEnabled)
			completion message is "ConfigurableFeaturesAreNowEnabled"
			Parameters
				SynchronizeSecurityFeatures is Boolean
				ResetUIFeatures				is Boolean
			Parameter Rules
				SynchronizeSecurityFeatures
					initial value is true
				ResetUIFeatures
					initial value is true				
			Action Rules
				if (config.configurablefeaturesenabled = "false")
					invoke Update first ConfigurableFeaturesExistsRel
						invoked.Value = "true"
				else 
				if (config.configurablefeaturesenabled = blank)
					invoke Create this instance
						invoked.ConfigurationParameter.ConfigurationID = "config"
						invoked.ConfigurationParameter.Name = "configurablefeaturesenabled"
						invoked.Type = 8233 	
						invoked.Length = 1
						invoked.Value = "true"
			Exit Rules
				if (SynchronizeSecurityFeatures
				or  ResetUIFeatures)
					invoke ResetConfigurableFeatures Role in foreground
						invoked.RunForAllRoles 			= true
						invoked.SyncSecurityFeatures 	= SynchronizeSecurityFeatures	
						invoked.ResetUIFeatures			= ResetUIFeatures

		Update is an Update Action 
			Entrance Rules
				constraint (not Type changed
				or          not old Type = 8399) 
					"CannotChangeFromPasswordType.MustDeleteAndAddNew."
		
		Delete is a Delete Action
		
		UpgradeType is a Set Action
			run in foreground
			Action Rules
				Instance Rules  
					if (Type = 30)
						Type = 8222
					else
					if (Type = 17)
						Type = 8209
					else
					if (Type = 0)
						Type = 8192
					else	
					if (Type = 16)
						Type = 8208
					else
					if (Type = 41)
						Type = 8233
					else
					if (Type = 33)
						Type = 8194
					else
					if (Type = 5)
						Type = 8197
					else
					if (Type = 2)
						Type = 8194
					else
					if (Type = 20)
						Type = 8194
					else
					if (Type = 7)
						Type = 8194
					else
					if (Type = 3)
						Type = 8195
					else
					if (Type = 1)
						Type = 8193
					else
					if (Type = 18)
						Type = 8210
					else
					if (Type = 29)
						Type = 8221
					else
					if (Type = 19)
						Type = 8211
					else
					if (Type = 44)
						Type = 8236
					else
					if (Type = 35)
						Type = 8227
					else
					if (Type = 42)
						Type = 8234
					else
					if (Type = 200)
						Type = 8392
					else
					if (Type = 202)
						Type = 8394	
					else
					if (Type = 203)
						Type = 8395	
					else
					if (Type = 204)
						Type = 8396
					else
					if (Type = 205)
						Type = 8397
					else
					if (Type = 206)
						Type = 8398
					else
					if (Type = 207)
						Type = 8399
					else
					if (Type = 208)
						Type = 8400
					else
					if (Type = 209)
						Type = 8401
					else
					if (Type = 210)
						Type = 8402
					else
					if (Type = 211)
						Type = 8403
					else
					if (Type = 212)
						Type = 8404
					else
					if (Type = 213)
						Type = 8405
					else
					if (Type = 214)
						Type = 8406
					else
					if (Type = 216)
						Type = 8408
					else
					if (Type = 217)
						Type = 8409
					else
					if (Type = 219)
						Type = 8411
					else
					if (Type = 220)
						Type = 8412	
					else
					if (Type = 221)
						Type = 8413	
					else
					if (Type < 8192)
						Type = 8222
		
		   
    				
