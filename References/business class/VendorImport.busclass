VendorImport is a BusinessClass
	owned by ap
	prefix is CVV
	classic name is APCVENMAST

	Ontology
		symbolic key is VendorImport
			classic set name is CVVSET1
			classic name for VendorImport.VendorLocation is LOCATION-CODE

	Patterns
		implements StaticJava
		disable AuditIndex
		implements ContextualParent
		disable Auditing
		disable EffectiveDated

	Persistent Fields
		RunGroup
		RecordInError                 				   is Boolean
		ErrorMessage								   is Alpha 150
		LocationType
			classic name is LOC-TYPE


		NewVendor								is like Vendor
		VendorClass
			classic name is VEN-CLASS
		VendorName                            
			classic name is VENDOR-VNAME
		VendorSearchName                      is a VendorName 
			holds pii
			classic name is VENDOR-SNAME
		ContactName                           is a VendorName 
			holds pii
			classic name is VENDOR-CONTCT
		PayVendor                             is a Vendor

		OldPayVendor						  is an OldVendor			
		VendorStatus                          is AlphaUpper size 1
			States
				Active                 value is "A"
				Inactive               value is "I"
				InactiveForPOAdditions value is "D"
		PaymentPriority
			classic name is VEN-PRIORITY
		PhoneNumber                           is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is PHONE-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NUM
			classic name for PhoneNumber.Extension is PHONE-EXT
		FaxNumber 
			holds pii
			classic name for FaxNumber.InternationalPrefix is FAX-PREFIX
			classic name for FaxNumber.SubscriberNumber is FAX-NUM
			classic name for FaxNumber.Extension is FAX-EXT
		TelexNumber 
			holds pii
			classic name is TELEX-NUM
		TermsCode

		InvoiceCurrency                                is a Currency
			classic name is INV-CURRENCY
		BalanceCurrency                                is a Currency
			classic name is BAL-CURRENCY
		RevalueCurrency                                is Boolean
			classic name is CURR-RECALC
		SeparatePayment                                is Boolean
			classic name is SEP-CHK-FLAG
		TaxID 
			holds pii
		CheckDigitType						  is a TaxIDCheckDigitType
			classic name is CHK-DIG-TYPE
		TaxCode


		DistributionCode                      is a PayablesDistributionCode
			classic name is DIST-CODE
		AccrualCode                           is a PayablesAccrualCode
			classic name is ACCR-CODE
		BankTransactionCode
			default label is "PaymentCode"
			classic name is BANK-INST-CODE
		PayablesProcessGroup
 			default label is "ProcessGroup"
			classic name is PROC-GRP
		CashCode
		BankEntity
		BankCurrency                          is a Currency
		BankAccountNumber
			classic name is VBANK-ACCT-NO
		BankAccountType
			classic name is VBANK-ACCT-TP
		GlobalBankAccountType	
		BankAccountValidationType
			classic name is VBANK-IDENT
		CrossBorderIdentifier
			classic name is CROSS-IDENT
		IncomeCode                            is a PayablesIncomeCode
		IncomeWithholding                     is Boolean
			classic name is INCOME-WH-FLG
		EDINumber
			classic name is EDI-NBR
		ACHPrenotification
			classic name is ACH-PRENOT
		MaximumInvoiceAmount                  is an InternationalAmount
			classic name is MAX-INV-AMT

		OriginDate                            is Date
		UserName01
		UserName02
		UserName03
		UserName04
		UserName05
		UserName06
		CustomerGroup
			classic name is CUST-GROUP
			disable surrogates
		Customer
		LegalName							  is a VendorName 
			holds pii
		PrimeRate
		InvoiceGroup						  is a PayablesInvoiceGroup		
		DiscountCode                          is a PayablesDiscountCode
		ERSCapable                            is Boolean
		InvoiceReference                      is a PayablesReferenceType	
			classic name is INVC-REF-TYPE










		EDIAutoRelease                        is Boolean
			classic name is EDI-AUTO-REL
		AuthorityCode						is a PayablesAuthorityCode
			classic name is AUTH-CODE

		Project								is a FinanceCodeBlockProjectOnly
			classic name is ACTIVITY
		ChargeCode							is a CashLedgerChargeCode
		PaymentCategoryCode					is a CashLedgerPaymentCategoryCode
			classic name is PMT-CAT-CODE
		NormalOrExpressCode
			classic name is NORM-EXP-CODE
		PaymentForm							is a CashLedgerPaymentForm
			classic name is PMT-FORM
		SwiftID
		MatchTable
		TermsCalculation
			classic name is DISC-CALC-DATE
		CreatePOD                             is Boolean
			classic name is CREATE-POD-FL
		Enclosure                             is Boolean
		PoolOption
		HoldUntilInspected
			classic name is HOLD-INSP-FLAG
		WriteOffAmount                        is an InternationalAmount
			classic name is WRITE-OFF-AMT
		VendorClaimType
			classic name is VEN-CLAIM-TYPE
		VendorClaimHoldCode                   is a PayablesHoldCode
			classic name is CLAIM-HOLD-CD
		AutomaticChargebackHoldCode           is a PayablesHoldCode
			classic name is CB-HOLD-CODE
		ChargebackMinimumAmount               is an InternationalAmount
			classic name is CB-MINIMUM-AMT
		ReplaceGoods                          is Boolean
		ShipOrHold
		EmailAddress						  is an EmailAddressMulti 
			holds pii
			classic name is E-MAIL-ADDRESS
		URLAddress
			classic name is URL-ADDR
		VendorAccount
			classic name is VEND-ACCT
		LanguageCode						  is an IsoLocale
		TaxUsageCode                           
			classic name is TAX-USAGE-CD
		VATRegistrationCountry                is a Country
			classic name is VAT-REG-CTRY
		VATRegistrationNumber
			classic name is VAT-REG-NBR
		ValidatePurchaseOrder                 is AlphaUpper size 1
			classic name is VALIDATE-PO
			States
				CompanyDefault   value is blank
				Yes              value is "Y"
				No               value is "N"
		RequirePurchaseOrder                  is AlphaUpper size 1
			classic name is REQUIRE-PO
			States
				CompanyDefault   value is blank
				Yes              value is "Y"
				No               value is "N"
		WorkflowGroup
		MobileNumber                          is a MobilePhone 
			holds pii
			classic name for MobileNumber.MobilePhoneNumber.InternationalPrefix is MBL-INT-PREFIX
			classic name for MobileNumber.MobilePhoneNumber.SubscriberNumber is MOBILE-NUM
			classic name for MobileNumber.MobilePhoneNumber.Extension is MOBILE-EXT
		PayImmediately                        is Boolean
			classic name is PAY-IMM-FLAG
		DiversityCode                         is a PayablesDiversityCode
			classic name is DIVERSE-CODE
		IntermediaryBankEntity                is a BankEntity
			classic name is INTM-BANK-ENT
		IntermediaryBankAccount               is a BankAccountNumber
			classic name is INTM-BANK-ACCT
		IntermediaryBankAccountValidationType is a BankAccountValidationType
			sql name is IBankAccountValidationType
			classic name is INTM-BANK-IDNT
		IntermediaryBankCurrency              is a Currency
			classic name is INTM-BANK-CURR
		IntermediaryPrenotification           is an ACHPrenotification
			classic name is INTM-PRENOT
		IntermediarySwiftID                   is a SwiftID
			classic name is INTM-SWIFT-ID
		IntermediaryPaymentCategory           is a CashLedgerPaymentCategoryCode
			classic name is INTM-PMT-CAT
		IntermediaryNormalOrExpressCode       is a NormalOrExpressCode
			sql name is INormalOrExpressCode
			classic name is INTM-NORM-EXP
		IntermediaryPaymentForm               is a CashLedgerPaymentForm
			classic name is INTM-PMT-FORM
		IntermediaryChargeCode                is a CashLedgerChargeCode
			classic name is INTM-CHRG-CD
		IntermediaryCrossBorderIdentifier     is a CrossBorderIdentifier
			sql name is ICrossBorderIdentifier
			classic name is INTM-CRS-IDENT
		FloatDays
		MatchPrepayment                       is Boolean
			classic name is MTCH-PREPAY-FL
		MatchPrepaymentMethod
			classic name is MTCH-PREPAY-MT
		BACSReference
			classic name is BUILD-SOC-REF
		BACSName                              is an AccountName
			classic name is BUILD-ACCT-NM
		GiroNumber
		CreditCardNumber                      is a CrCardNumber 
			holds pii
			classic name is CR-CARD-NUMBER
		BankInstructions1                              is a BankInstruct1
			classic name is BANK-INSTRUCT1
		BankInstructions2                              is a BankInstruct2
			classic name is BANK-INSTRUCT2
		BankInstructions3                              is a BankInstruct3
			classic name is BANK-INSTRUCT3
		BankInstructions4                              is a BankInstruct4
			classic name is BANK-INSTRUCT4
		UseProcurementCard                    is Boolean
			classic name is P-CARD-FLAG
		ProcurementCardNumber
			classic name is PCARD-NBR
		ValidateDiversityDates                is Boolean
			classic name is VAL-DIV-DATE
		PayablesGLNNumber                              is a GlobalLocationNumber
			classic name is AP-GLN-NBR
		TaxIDType                             is a TaxIdentificationType
		ExemptFromSecondaryWithholding                 is Boolean
			classic name is SEC-WTH-EXEMPT
		SecondaryWithholdingCode1             is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE1
		SecondaryWithholdingCode2             is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE2
		SecondaryWithholdingCode3             is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE3
		ValidateCertificationDate                      is Boolean
			classic name is VALID-CERT-DT
		ForeignEconomicRegulatoryCode
			classic name is FOR-ECON-CODE
		Carrier								   			is Boolean
			classic name is CARRIER-FLAG
		BankingCode
		BankID
		AssignmentNumber
			classic name is ASSIGNMENT-NBR
		DebitingSign
		IntermediaryBankingCode               is a BankingCode
			classic name is INTM-BANK-CODE
		IntermediaryBankID                    is a BankID
			classic name is INTM-BANK-ID
		IntermediaryAssignmentNumber          is an AssignmentNumber
			sql name is IAssignmentNumber
			classic name is INTM-ASSIGN-NO
		IntermediaryDebitingSign              is a DebitingSign
			classic name is INTM-DEBITING


		Sepa										   is Boolean
			classic name is SEPA-FLAG





		HoldCode                                       is a PayablesHoldCode
			classic name is HLD-CODE
		PostalAddress								   is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY-ADDR5
			classic name for PostalAddress.StateProvince is STATE-PROV
			classic name for PostalAddress.PostalCode is POSTAL-CODE
			classic name for PostalAddress.County is COUNTY
			classic name for PostalAddress.Country is COUNTRY-CODE
			classic name for PostalAddress.Region is REGION
		NormalRemitToLocation                          is Boolean
			classic name is NORM-REMIT
		NormalPurchaseFromLocation                     is Boolean
			classic name is NORM-PURCH
		RemitTo                                        is like VendorLocation  
			classic name is REMIT-TO-CODE
		PurchaseFrom                                   is like VendorLocation  
			classic name is PURCH-FR-LOC
		RIBKey
			classic name is RIBKEY
		PovBuyerCode                                   is a Buyer
			default label is "Buyer"
		PovOpenPurchaseLimit                           is an InternationalAmount
			classic name is POV-OPEN-PO-LM
			default label is "OpenPurchaseLimit"
		PovOpenPurchaseAmount                          is an InternationalAmount
			classic name is POV-OPEN-PO-AM
			default label is "OpenPurchaseAmount"
		PovLeadtime                                    is a LeadtimeDays
			default label is "LeadTime"
		PovEdiNumber                                   is an EDINumber
			default label is "EDINumber"
		PovFaxNumber                                   is a FaxNumber
			classic name for PovFaxNumber.InternationalPrefix is POV-FAX-PREFIX
			classic name for PovFaxNumber.SubscriberNumber is POV-FAX-NUMBER
			classic name for PovFaxNumber.Extension is POV-FAX-EXT
			default label is "FaxNumber"
		PovMaximumOrderAmount                          is an InternationalAmount
			classic name is POV-MAX-ORD-AM
			default label is "MaximumOrderAmount"
		PovFreightTerm                                 is a FreightTerm
			classic name is POV-FREIGHT-TR
			default label is "FreightTerm"
		PovShipVia                                     is a ShipVia
			default label is "ShipVia"
		PovFobCode                                     is a ShipTerm
			default label is "ShippingTerm"
		PovNormalDelivery                              is a NormalDeliveryDay
			classic name is POV-NORM-DEL
			default label is "NormalDeliveryDay"
		PovOverShipment                                is an OvershipmentTolerancePercentage
			classic name is POV-OSHIP-TPCT
			default label is "OverShipmentPercent"
		PovUnderShipment                               is an UndershipmentTolerancePercentage
			classic name is POV-USHIP-TPCT
			default label is "UnderShipmentPercent"
		PovHINNumber                                   is AlphaUpper size 9
			classic name is POV-HIN-NBR
			default label is "HINNumber"
		PovZeroOvershipment                            is Boolean
			classic name is POV-ZOHSHIP-FL
			restricted
		PovZeroUndershipment                           is Boolean
			classic name is POV-ZUHSHIP-FL
			restricted
		PovCancelAllBackorders                         is Boolean
			classic name is POV-CAN-ALL-BO
			restricted
		PovReturnMaterialAuthorizationRequired         is Boolean
			sql name is PRMAuthorizationRequired
			classic name is POV-RMA-REQ
			default label is "RMARequired"
		PovReturnMaterialAuthorizationDocumentRequired is Boolean
			sql name is PRMADocumentRequired
			classic name is POV-RMA-DOC-RQ
			default label is "RMADocumentRequired"
		PovOverShipVia                                 is a ShipVia
			classic name is POV-OV-SHP-VIA
			default label is "OverShipVia"
		PovRequisitionLocation                         is a LocationControl
			classic name is POV-REQ-LOCLVL
			default label is "RequisitionLocation"
		PovMixContractsOnPurchaseOrder				   is Boolean
			classic name is POV-REQ-CONLVL
			default label is "MixContractsOnPurchaseOrder"
		PovIssueMethod                                 is a PurchaseOrderIssueMethod
			classic name is POV-ISSUE-MTHD
			default label is "IssueMethod"
		PovRevisedIssueMethod                          is a PurchaseOrderIssueMethod
			classic name is POV-REV-ISS-MT
			default label is "RevisedIssueMethod"
		PovRevisedEDINumber                            is an EDINumber
			classic name is POV-REV-EDI-NB
			default label is "RevisedEDINumber"
		PovRevisedEDITransaction                       is AlphaUpper size 1
			classic name is POV-REV-EDI-TR
			default label is "RevisedEDITransaction"
			States
				NotApplicable     value is blank
				POTransaction     value is "P"
				ChangeTransaction value is "C"
		PovRevisedEDIInclude                           is AlphaUpper size 1
			classic name is POV-REV-INCL
			default label is "RevisedEDIInclude"
			States
				RevisionsOnly     value is "O"
				RevisionsComplete value is "C"
				Reissue           value is "I"
				NotApplicable     value is "N"
		PovVendorContact                               is a VendorName 
			holds pii
			classic name is POV-VEN-CONT
			default label is "VendorContact"
		PovPhoneNumber                                 is a TelephoneNumber 
			holds pii
			classic name for PovPhoneNumber.InternationalPrefix is POV-PHONE-PREF
			classic name for PovPhoneNumber.SubscriberNumber is POV-PHONE-NUM
			classic name for PovPhoneNumber.Extension is POV-PHONE-EXT
			default label is "PhoneNumber"
		PurchasingVendorAccount                        is a VendorAccount
			classic name is POV-VEND-ACCT
		PovPurchaseOrderCode                           is a POCode
			classic name is POV-PO-CODE
			default label is "PurchaseOrderCode"
		PovUpdatePOCost                                is Numeric size 1
			classic name is POV-UPD-PO-CST
			default label is "UpdatePOCost"
			States
				DoNotUpdatePOCostFromReceipt				value is 1
				UpdatePOCostFromReceiptOrAcknowledgement	value is 2
		PovUserField01                                 is a PovUsrFld01
			classic name is POV-USR-FLD-01
			default label is "UserField1"
		PovUserField02                                 is a PovUsrFld02
			classic name is POV-USR-FLD-02
			default label is "UserField2"
		PovUserField03                                 is a PovUsrFld03
			classic name is POV-USR-FLD-03
			default label is "UserField3"
		PovUserField04                                 is a PovUsrFld04
			classic name is POV-USR-FLD-04
			default label is "UserField4"
		PovUserField05                                 is a PovUsrFld05
			classic name is POV-USR-FLD-05
			default label is "UserField5"
		IntermediaryRIBKey                             is a RIBKey
			classic name is INTM-RIBKEY
		VendorBACSReference                            is a BACSReference
			classic name is VN-BLD-SOC-REF
		VendorBACSName                                 is an AccountName
			classic name is VN-BLD-ACCT-NM
		InBACSReference                                is a BACSReference
			classic name is IN-BLD-SOC-REF
		InBACSName                                     is an AccountName
			classic name is IN-BLD-ACCT-NM
		MinimumOrderWeight
			classic name is MIN-ORD-WEIGHT
		UnloadingPort
		LoadingPort
		RuleGroup                                      is a MatchRule
		LocationIDPrintOption                          is Numeric size 1
			classic name is LOC-ID-PRT
			States
				DoNotPrint					value is 0
				PrintHINOnPOLine			value is 1
				PrintGLNOnPOLine			value is 2
				PrintGLNOnPOHeaderOnly		value is 3
				PrintGLNOnPOHeaderAndLine	value is 4
		AllowChangeToPunchoutPurchaseOrder             is Boolean
			sql name is AChangeToPunchoutPurchaseOrder
			classic name is PUNCHOUT-CHG-F
		POEmailAddress                                 is an EmailAddressMulti 
			holds pii
			classic name is EMAIL-ADDRESS
		ReorderOnSunday                                is Boolean
			classic name is REORDER-SUN-FL
		ReorderOnMonday                                is Boolean
			classic name is REORDER-MON-FL
		ReorderOnTuesday                               is Boolean
			classic name is REORDER-TUE-FL
		ReorderOnWednesday                             is Boolean
			classic name is REORDER-WED-FL
		ReorderOnThursday                              is Boolean
			classic name is REORDER-THU-FL
		ReorderOnFriday                                is Boolean
			classic name is REORDER-FRI-FL
		ReorderOnSaturday                              is Boolean
			classic name is REORDER-SAT-FL
		DiverseCode5                                   is AlphaUpper size 5
			classic name is DIVERSE-CODE5
		PovGTINInUse                                   is Boolean
			default label is "GTINInUse"
		UpdateItemFromGTIN                             is Boolean
		PurchaseOrderGLNNumber                         is a GlobalLocationNumber
			classic name is PO-GLN-NBR
		IntermediarySepa								is Boolean
			classic name is INTM-SEPA-FLAG

		VendorConversionResult
		OvershipmentToleranceOption
		UndershipmentToleranceOption
		TaxRegistrationType						       is Numeric size 1
			States
				Registered				value is 1
				UnRegistered			value is 2
				SpecialEconomicZone		value is 3
				CompositeDealer			value is 4
		ElectronicGovernmentID				
		DefaultVendorPaymentCurrency				is Numeric size 1			
			States
				CashCode				value is 0
				Invoice					value is 1
		AllowWithholdingCodeOverride			        is Boolean
		LineLevelWithholding                            is Boolean
		EnrolledWithholding                             is Boolean
		TinNot								 			is Boolean
		VendorRestrictions
		DunAndBradstreetNumber							is Alpha 20				
			default label is "Dun&Bradstreet"
		ExpenseDefault							is a FinanceCodeBlock
			default label is "DefaultFinanceStructure"
		AutomaticEmailingOfCreditMemo			is Boolean
		AutomaticEmailingOfDebitMemo			is Boolean
		W8Verified								is AlphaUpper size 1
					States
						Yes		value is "Y"
						No		value is "N"
		FATCAId									is Alpha size 6
		FinancialInstitutionType				is Alpha size 5
		GIINCategoryCode						is AlphaUpper size 2
			classic name is GIIN-CAT-CODE
			States
				Lead			value is "LE"
				Single			value is "SL"
				Member			value is "ME"
				Branch			value is "BR"
				Sponsoring		value is "SP"
		ISOCountryNumber						is Numeric size 3
		FATCAPercentage							is Percent 7.4
		FATCAIncomeCode							is a PayablesIncomeCode
		FATCAAccount							is a FinanceCodeBlockFull
		TwitterID 
			holds pii
		SocialNetworkID2 
			holds pii
		SocialNetworkID3 
			holds pii
		SocialNetworkID4 
			holds pii
		SocialNetworkID5 
			holds pii
		InvoiceRoutingCategory
		AllowZeroCostInvoice					is AlphaUpper size 1	
			classic name is OPEN-ZERO-COST
			States
				CompanyDefault	value is blank
				Yes				value is "Y"
				No				value is "N"
		CaseNumber								is Alpha 20
		DefaultTaxIndicator		is a TaxIndicator				
		ExcludeInvoiceLineImport					is Boolean
			default label is "ExcludeDocumentInterfaceDetailImport"

	Local Fields
		ValidateBankAccountNumber
		InterfacedVendor				is a Vendor view
		ErrorOccurred					is Boolean
		LocalErrorMessage				is Alpha 150
		LocalVendorConversionResult		is like VendorConversionResult
		LocalUpdateAddressRecords		is AlphaUpper size 1
			States
				Yes value is "Y"
				No  value is "N"
		LocalVendor						is like Vendor
		LocalVendorLocation				is like VendorLocation
		LocalVendorContactCode			is like VendorContactCode
		LocalContactLevel				is like ContactLevel
		LocalCompany					is like PayablesCompany
		LocalIncomeWithholdingCode      is like IncomeWithholdingCode
		LocalWithholdingCategory        is like WithholdingCategory
		LocalAddToVendorBalance			is AlphaUpper size 1
			States
				Yes value is "Y"
				No  value is "N"

		LocalItemGroup 					is like ItemGroup
		LocalGlobalLocationNumber		is like GlobalLocationNumber
		LocalGlobalLocationNumberType	is a GlobalLocationNumberType
		LocalVendorAndVendorLocation					is a VendorAndVendorLocation
		LocalPurchasingVendorAndPurchaseFromLocation	is a PurchasingVendorAndPurchaseFromLocation
		LocalPayablesCertificationCode	is a PayablesCertificationCode
		LocalCertificationEffectiveDate is Date
		LocalTemplate is a PayablesInvoiceTemplate

	Relations
		VendorImportForVendorRel
			one-to-one relation to VendorImport
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.VendorImport.Vendor				= blank
				related.VendorImport.OldVendor			= VendorImport.OldVendor
				related.VendorImport.VendorLocation		= blank

		VendorContactImportRel is a VendorContactImport set

		VendorExcludeTemplateImportRel is a VendorExcludeTemplateImport set

		VendorCertificationImportsRel							
			one-to-many relation to VendorCertificationImport
			Field Mapping uses symbolic key
				related.VendorGroup								= VendorGroup
			Instance Selection
				where (related.VendorImport.OldVendor			= VendorImport.OldVendor
				and    related.VendorImport.VendorLocation 		= VendorImport.VendorLocation)

		VendorCertificationImportRel is a VendorCertificationImport set

		VendorContactRel
			one-to-one relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= LocalVendor
				related.VendorLocation					= LocalVendorLocation
				related.VendorContact.VendorContactCode	= LocalVendorContactCode
				related.VendorContact.ContactLevel		= LocalContactLevel

		VendorAddressRel
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= LocalVendor
				related.VendorLocation					= LocalVendorLocation
				related.VendorContact.VendorContactCode	= LocalVendorContactCode
				related.VendorContact.ContactLevel		= LocalContactLevel

		VendorCertificationRel
			one-to-one relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= LocalVendor
				related.VendorLocation					= LocalVendorLocation
				related.PayablesCertificationCode		= LocalPayablesCertificationCode
				related.CertificationEffectiveDate		= LocalCertificationEffectiveDate

		VendorBalanceImportRel
			one-to-many relation to VendorBalanceImport
			Field Mapping uses ByVendorImport
				related.VendorGroup							= VendorGroup
				related.VendorBalanceImport.Vendor			= VendorImport.Vendor
				related.VendorBalanceImport.OldVendor		= VendorImport.OldVendor
				related.VendorBalanceImport.VendorLocation	= VendorImport.VendorLocation

		VendorAddressImportRel
			one-to-many relation to VendorAddressImport
			Field Mapping uses symbolic key
				related.VendorGroup									= VendorGroup
			Instance Selection
				where (related.VendorAddressImport.Vendor			= VendorImport.Vendor
				and    related.VendorAddressImport.OldVendor		= VendorImport.OldVendor
				and    related.VendorAddressImport.VendorLocation	= VendorImport.VendorLocation)

		VendorWithholdingCodeImportRel
			one-to-many relation to VendorWithholdingCodeImport
			Field Mapping uses symbolic key
				related.VendorGroup						    = VendorGroup
				related.VendorImport.Vendor					= VendorImport.Vendor
				related.VendorImport.OldVendor      		= VendorImport.OldVendor
				related.VendorImport.VendorLocation 		= VendorImport.VendorLocation

		VendorWithholdingDefaultRel
			one-to-one relation to VendorWithholdingDefault
			Field Mapping uses symbolic key
				related.VendorGroup                             = VendorGroup
				related.Vendor                                  = LocalVendor
				related.VendorLocation                          = LocalVendorLocation
				related.IncomeWithholdingCode                   = LocalIncomeWithholdingCode
				related.WithholdingCategory                     = LocalWithholdingCategory

		VendorWithholdingCodeRel
			one-to-one relation to VendorWithholdingCode
			Field Mapping uses symbolic key
				related.VendorGroup                             = VendorGroup
				related.Vendor                                  = LocalVendor
				related.Company                                 = LocalCompany
				related.IncomeWithholdingCode                   = LocalIncomeWithholdingCode

		VendorMappingTableInterfaceRel
			one-to-one relation to VendorMappingTableInterface
			Field Mapping uses symbolic key
				related.VendorGroup									= VendorGroup
				related.VendorMappingTableInterface.OldVendor		= VendorImport.OldVendor
				related.VendorMappingTableInterface.VendorLocation	= blank

		PayVendorMappingTableInterfaceRel			
			one-to-many relation to VendorMappingTableInterface
			Field Mapping uses symbolic key
				related.VendorGroup									= VendorGroup
			Instance Selection
				where (related.VendorMappingTableInterface.OldVendor = OldPayVendor)

		VendorLocationMappingTableInterfaceRel
			one-to-one relation to VendorMappingTableInterface
			Field Mapping uses symbolic key
				related.VendorGroup									= VendorGroup
				related.VendorMappingTableInterface.OldVendor		= VendorImport.OldVendor
				related.VendorMappingTableInterface.VendorLocation	= VendorImport.VendorLocation

		PayVendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup 			= VendorGroup
				related.Vendor					= PayVendor

		LegacyPayVendorRel			
			one-to-many relation to Vendor
			Field Mapping uses ByLegacyVendor
				related.VendorGroup				= VendorGroup
				related.LegacyVendor			= OldPayVendor

		PayToVendorRel
			one-to-one relation to PayToVendor
			Field Mapping uses symbolic key
				related.VendorGroup 			= VendorGroup
				related.Vendor					= VendorMappingTableInterfaceRel.Vendor
				related.PayVendor				= PayVendor

		VendorLocationRel
			one-to-one relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup 			= VendorGroup
				related.Vendor					= VendorMappingTableInterfaceRel.Vendor
				related.VendorLocation			= VendorImport.VendorLocation

		PurchaseFromLocationRel
			one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup 			= VendorGroup
				related.Vendor					= VendorMappingTableInterfaceRel.Vendor
				related.PurchaseFromLocation	= VendorImport.VendorLocation

		VendorBalanceRel
			one-to-one relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= LocalVendor
				related.VendorLocation	= LocalVendorLocation
				related.Company			= LocalCompany

		PurchasingVendorRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup		= VendorGroup
				related.Vendor			= VendorMappingTableInterfaceRel.Vendor

		GlobalLocationNumberRel
			one-to-one relation to GlobalLocationNumber
			Field Mapping uses symbolic key
				related.ItemGroup 				= LocalItemGroup
				related.GlobalLocationNumber	= LocalGlobalLocationNumber

		GlobalLocationNumberDetailRel
			one-to-many relation to GlobalLocationNumberDetail
			Field Mapping uses symbolic key
				related.ItemGroup 													= LocalItemGroup
				related.GlobalLocationNumber										= LocalGlobalLocationNumber
			Instance Selection
				where (related.GlobalLocationNumberDetail.GlobalLocationNumberType	= LocalGlobalLocationNumberType
				and    related.GlobalLocationNumberID 								= GlobalLocationNumberID)

		InvoiceTemplateExclusionRel
			one-to-many relation to InvoiceTemplateExclusion
			Field Mapping uses Set1
				related.VendorGroup							= VendorGroup
				related.VendorClass							= blank
				related.Vendor								= VendorMappingTableInterfaceRel.Vendor
				related.Template							= LocalTemplate

	Sets
		ByRunGroup
			indexed
			Sort Order
				RunGroup
				VendorGroup
				VendorImport
		ByVendorConversionResult
			indexed
			Sort Order
				VendorConversionResult
				VendorGroup
				VendorImport

	Conditions
		RecordExists
			restricted
			when (VendorImport exists)

		HasLocation
			restricted
			when (VendorImport.VendorLocation entered)
		IsValidForCrossBorderPayments
			restricted
			when ((BankEntity entered
			and    BankAccountNumber entered)
			or	   BankEntity entered
			or     BankAccountNumber entered)

		IsValidForIntermediaryCrossBorderPayments
			restricted
			when ((IntermediaryBankEntity entered
			and    IntermediaryBankAccount entered)
			or	   IntermediaryBankEntity entered
			or     IntermediaryBankAccount entered)

		HasVendorCertificationImport
			when (VendorCertificationImportRel exists)

		HasVendorBalanceImport
			when (VendorBalanceImportRel exists)

		CreatePurchasingVendor
			when (PovBuyerCode entered
			or    PovOpenPurchaseLimit entered
			or    PovOpenPurchaseAmount entered
			or    PovLeadtime entered
			or    PovEdiNumber entered
			or    PovFaxNumber entered
			or    PovMaximumOrderAmount entered
			or    PovFreightTerm entered
			or    PovShipVia entered
			or    UnloadingPort entered
			or    LoadingPort entered
			or    PovFobCode entered
			or    PovNormalDelivery entered
			or    PovOverShipment entered
			or    PovUnderShipment entered
			or    PovHINNumber entered


			or    OvershipmentToleranceOption entered
			or    UndershipmentToleranceOption entered

			or    PovReturnMaterialAuthorizationRequired entered
			or    PovReturnMaterialAuthorizationDocumentRequired entered
			or    PovOverShipVia entered
			or    PovRequisitionLocation entered
			or    PovMixContractsOnPurchaseOrder entered
			or    PovIssueMethod entered
			or    PovRevisedIssueMethod entered
			or    PovRevisedEDINumber entered
			or    PovRevisedEDITransaction entered
			or    PovRevisedEDIInclude entered
			or    PovVendorContact entered
			or    PovPhoneNumber entered
			or    PurchasingVendorAccount entered
			or    PovPurchaseOrderCode entered
			or    PovUpdatePOCost entered)

		CreatePurchaseFromLocation
			when(PovLeadtime entered
			or   PovEdiNumber entered
			or   PovFaxNumber entered
			or   PovMaximumOrderAmount entered
			or   PovFreightTerm entered
			or   PovShipVia entered
			or   PovFobCode entered
			or   PovNormalDelivery entered
			or   UnloadingPort entered
			or   LoadingPort entered
			or   PovUnderShipment entered


			or   OvershipmentToleranceOption entered
			or   UndershipmentToleranceOption entered
			or   PovIssueMethod entered
			or   PovRevisedIssueMethod entered
			or   PovRevisedEDINumber entered
			or   PovRevisedEDITransaction entered
			or   PovRevisedEDIInclude entered
			or   PovVendorContact entered
			or   PovPhoneNumber entered
			or   POEmailAddress entered
			or   ReorderOnSunday entered
			or   ReorderOnMonday entered
			or   ReorderOnTuesday entered
			or   ReorderOnWednesday entered
			or   ReorderOnThursday entered
			or   ReorderOnFriday entered
			or   ReorderOnSaturday entered
			or   AllowChangeToPunchoutPurchaseOrder entered)

		VendorMappingTableInterfaceExists
			when (VendorMappingTableInterfaceRel exists)

		VendorMappingTableInterfaceNotExists
			when (VendorMappingTableInterfaceRel not exists)

		VATRegistrationCountryRequired          
			restricted
			when (VATRegistrationNumber entered)

		AllowWithholdingCodeTab
			restricted
			when (AllowWithholdingCodeOverride
			or VendorGroup.GlobalWithholding
			or VendorWithholdingCodeImportRel exists)

	Derived Fields
		AddressErrorMessage is a MessageField
			restricted
			"UpdateAddressRecordsMustBeYesWhenVendorAddressImportRecord(s)Exist"
		LocationTypeRequiredErrorMessage is a MessageField
			restricted
			"LocationTypeRequiredWhenImportingLocations"
		VendorLocationErrorMessage is a MessageField
			restricted
			"VendorLocationCannotBeImported;VendorDoesNotExist"
		GlobalLocationNumberID  	is a DerivedField
			type is Alpha size 18
			if (LocalGlobalLocationNumberType.Vendor
			or  LocalGlobalLocationNumberType.VendorLocation)
				return LocalVendorAndVendorLocation
			else
			if (LocalGlobalLocationNumberType.PurchasingVendor
			or  LocalGlobalLocationNumberType.PurchaseFromLocation)
		 		return LocalPurchasingVendorAndPurchaseFromLocation

		DerivedPayVendor is a DerivedField			
			type is like Vendor
			if (PayVendor entered)
				return PayVendor
			else
				if (OldPayVendor entered)
					if (LegacyPayVendorRel exists)
						return first LegacyPayVendorRel.Vendor
					else
						if (PayVendorMappingTableInterfaceRel exists)
							return first PayVendorMappingTableInterfaceRel.Vendor

		OldPayVendorNotFoundMsg is a MessageField		
			restricted
			"OldPayVendorNotFound"

	Field Rules
		RunGroup
			required

		IntermediarySwiftID
			if (!action type.Create)
				constraint (IntermediaryBankEntity entered
				or			IntermediaryBankAccount entered)
					"CrossBorderValidOnlyIfBankIdentificationOrAccountNumberEntered"
			if (IsValidForIntermediaryCrossBorderPayments
			and IntermediaryBankAccountValidationType.IbanAndBIC)
				required
					"B\I\CNumber_&_\I\B\A\NRequiredWhenVendorBankIdentification_=_\Z"

		BankEntity
			if (BankAccountValidationType.NationalClearingSystem)
				required
					"RequiredWith_\National_\Clearing_\System"
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankEntityRequiredForElectronicPaymentTypePaymentCode"	

		BankAccountNumber
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankAccountNumberRequiredForElectronicPaymentTypePaymentCode"	
			if (!action type.Create)
				if (BankAccountValidationType entered					
				and not BankAccountValidationType.Check)
					required
						"RequiredWithSelectedValidationType"	         

				if (BankAccountType entered)
					required
						"RequiredWhenUsing_\Account_\Type"               

				if (GlobalBankAccountType entered)						 
					required
						"RequiredWhenUsing_\Global_\Account_\Type"
						
				if (ACHPrenotification = "P"
				or  ACHPrenotification = "A")
					required
						"RequiredWhenACHPrenotificationIsEntered"    


				initialize ValidateBankAccountNumber
				ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
				ValidateBankAccountNumber.BankAccountNumber 		= BankAccountNumber
				constraint (ValidateBankAccountNumber.IsValidBankAccount)
					"<ValidateBankAccountNumber.ErrorMessage>"

		BankAccountType
			if (BankTransactionCode.PaymentOutputOption.ElectronicFile
			or	BankTransactionCode.PaymentOutputOption.Swift
			or  BankTransactionCode.PaymentOutputOption.WireTransfer)
				required
					"BankAccountTypeRequiredForElectronicPayments"	

		IntermediaryBankAccount
			if (!action type.Create)
				if (IntermediaryBankAccountValidationType entered			
				and not IntermediaryBankAccountValidationType.Check)
					required
						"RequiredWithSelectedValidationType"	         

				if (IntermediaryPrenotification = "P"
				or  IntermediaryPrenotification = "A")
					required
						"RequiredWhenACHPrenotificationIsEntered"        


				initialize ValidateBankAccountNumber
				ValidateBankAccountNumber.BankAccountValidationType = IntermediaryBankAccountValidationType
				ValidateBankAccountNumber.BankAccountNumber 		= IntermediaryBankAccount
				constraint (ValidateBankAccountNumber.IsValidBankAccount)
					"<ValidateBankAccountNumber.ErrorMessage>"

		Sepa
			force default to CashCode.Sepa

		IntermediarySepa
			force default to CashCode.Sepa

		SwiftID
			if (!action type.Create)
				constraint (BankEntity entered
				or			BankAccountNumber entered)
					"CrossBorderValidOnlyIfBankIdentificationOrAccountNumberEntered"
			if (IsValidForCrossBorderPayments
			and BankAccountValidationType.IbanAndBIC)
				required
					"B\I\CNumber_&_\I\B\A\NRequiredWhenVendorBankIdentification_=_\Z"

		BankAccountValidationType
			if (CashCode entered
			and CashCode.Sepa)
				default to CashCode.BankAccountValidationType.IbanAndBIC

		IntermediaryBankAccountValidationType
			if (CashCode entered
			and CashCode.Sepa)
				default to CashCode.BankAccountValidationType.IbanAndBIC

		PostalAddress
			required

		VendorClass
			if (!HasLocation)
				required

		VendorName
			required


		VendorStatus
			initial value is "A"
			default to "A"
















	Rule Blocks
		PurchaseFromLocationRules
			invoked.VendorGroup 						= VendorGroup
			invoked.Vendor								= VendorMappingTableInterfaceRel.Vendor
			invoked.PurchaseFromLocation				= VendorImport.VendorLocation
			invoked.LeadtimeDays 						= PovLeadtime
			invoked.EDINumber 							= PovEdiNumber
			invoked.FaxNumber 							= PovFaxNumber
			invoked.MaximumOrderAmount 					= PovMaximumOrderAmount
			invoked.FreightTerm 						= PovFreightTerm
			invoked.ShipVia 							= PovShipVia
			invoked.ShipTerm 							= PovFobCode
			invoked.NormalDeliveryDay					= PovNormalDelivery
			invoked.UnloadingPort 						= UnloadingPort
			invoked.LoadingPort 						= LoadingPort
			invoked.OvershipmentTolerancePercentage		= PovOverShipment
			invoked.UndershipmentTolerancePercentage	= PovUnderShipment
			invoked.OvershipmentToleranceOption			= OvershipmentToleranceOption
			invoked.UndershipmentToleranceOption 		= UndershipmentToleranceOption
			invoked.IssueMethod 						= PovIssueMethod
			invoked.RevisedIssueMethod 					= PovRevisedIssueMethod
			invoked.RevisedEDINumber 					= PovRevisedEDINumber
			invoked.RevisedEDITransaction 				= PovRevisedEDITransaction
			invoked.RevisionsInclude 					= PovRevisedEDIInclude
			invoked.ContactName 						= PovVendorContact
			invoked.PhoneNumber 						= PovPhoneNumber
			invoked.EmailAddress 						= POEmailAddress
			invoked.VendorReturnShippingMethod 			= PovOverShipVia
			invoked.MixContractsOnPurchaseOrder			= PovMixContractsOnPurchaseOrder
			invoked.ReorderOnSunday 					= ReorderOnSunday
			invoked.ReorderOnMonday 					= ReorderOnMonday
			invoked.ReorderOnTuesday 					= ReorderOnTuesday
			invoked.ReorderOnWednesday 					= ReorderOnWednesday
			invoked.ReorderOnThursday 					= ReorderOnThursday
			invoked.ReorderOnFriday						= ReorderOnFriday
			invoked.ReorderOnSaturday					= ReorderOnSaturday
			invoked.AllowChangeToPunchoutPurchaseOrder	= AllowChangeToPunchoutPurchaseOrder
			invoked.GlobalLocationNumber				= PurchaseOrderGLNNumber

		PurchasingVendorRules
			invoked.VendorGroup 								= VendorGroup
			invoked.Vendor										= VendorMappingTableInterfaceRel.Vendor
			invoked.Buyer										= PovBuyerCode
			invoked.OpenPurchaseLimit 							= PovOpenPurchaseLimit
			invoked.OpenPurchaseAmount 							= PovOpenPurchaseAmount
			invoked.LeadtimeDays 								= PovLeadtime
			invoked.EDINumber 									= PovEdiNumber
			invoked.FaxNumber 									= PovFaxNumber
			invoked.MaximumOrderAmount 							= PovMaximumOrderAmount
			invoked.FreightTerm 								= PovFreightTerm
			invoked.ShipVia 									= PovShipVia
			invoked.UnloadingPort 								= UnloadingPort
			invoked.LoadingPort 								= LoadingPort
			invoked.ShipTerm 									= PovFobCode
			invoked.NormalDeliveryDay 							= PovNormalDelivery
			invoked.OvershipmentTolerancePercentage 			= PovOverShipment
			invoked.UndershipmentTolerancePercentage 			= PovUnderShipment
			invoked.OvershipmentToleranceOption 				= OvershipmentToleranceOption
			invoked.UndershipmentToleranceOption 				= UndershipmentToleranceOption

			invoked.ReturnMaterialAuthorizationRequired 		= PovReturnMaterialAuthorizationRequired
			invoked.ReturnMaterialAuthorizationDocumentRequired = PovReturnMaterialAuthorizationDocumentRequired
			invoked.VendorReturnShippingMethod 					= PovOverShipVia
			invoked.LocationControl								= PovRequisitionLocation
			invoked.MixContractsOnPurchaseOrder 				= PovMixContractsOnPurchaseOrder
			invoked.IssueMethod 								= PovIssueMethod
			invoked.RevisedIssueMethod 							= PovRevisedIssueMethod
			invoked.RevisedEDINumber 							= PovRevisedEDINumber
			invoked.RevisedEDITransaction 						= PovRevisedEDITransaction
			invoked.RevisionsInclude 							= PovRevisedEDIInclude
			invoked.ContactName 								= PovVendorContact
			invoked.PhoneNumber 								= PovPhoneNumber
			invoked.POCode 										= PovPurchaseOrderCode
			invoked.UpdatePurchaseOrderCost 					= PovUpdatePOCost
			invoked.EmailAddress								= POEmailAddress
			invoked.ReorderOnSunday 							= ReorderOnSunday
			invoked.ReorderOnMonday 							= ReorderOnMonday
			invoked.ReorderOnTuesday 							= ReorderOnTuesday
			invoked.ReorderOnWednesday 							= ReorderOnWednesday
			invoked.ReorderOnThursday 							= ReorderOnThursday
			invoked.ReorderOnFriday								= ReorderOnFriday
			invoked.ReorderOnSaturday							= ReorderOnSaturday
			invoked.AllowChangeToPunchoutPurchaseOrder			= AllowChangeToPunchoutPurchaseOrder
			invoked.GlobalLocationNumber						= LocalGlobalLocationNumber


		InterfaceThisVendor



			if (VendorImport.VendorLocation entered
			and LocationType not entered)
				ErrorOccurred		= true
				LocalErrorMessage	= LocationTypeRequiredErrorMessage

			if (!ErrorOccurred)
				if (LocalUpdateAddressRecords.No
				and VendorAddressImportRel exists)
					ErrorOccurred		= true
					LocalErrorMessage	= AddressErrorMessage


			if (!ErrorOccurred)		
				if  (OldPayVendor entered
				and !LegacyPayVendorRel exists
				and !PayVendorMappingTableInterfaceRel exists)
					ErrorOccurred		= true
					LocalErrorMessage	= OldPayVendorNotFoundMsg


			if (VendorImport.VendorLocation entered)
				if (VendorMappingTableInterfaceNotExists)
					ErrorOccurred		= true
					LocalErrorMessage	= VendorLocationErrorMessage



			if (VendorImport.VendorLocation not entered)
				if (!ErrorOccurred)
					if (VendorMappingTableInterfaceNotExists)
						invoke Create Vendor
							assign result to InterfacedVendor
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							fill in fields from this instance
							if (NewVendor entered)
								invoked.Vendor					= NewVendor
							invoked.VendorAddress				= PostalAddress
							invoked.LegacyVendor				= VendorImport.OldVendor
							invoked.PayVendor					= DerivedPayVendor		
							invoked.GlobalLocationNumber		= PayablesGLNNumber
							invoked.VendorConversionResult		= LocalVendorConversionResult
							invoked.VendorStatus				= "I"
							invoked.ValidateCertificationDate	= false
							invoked.BypassBODActionExitRules	= true
							invoked.TransientVendorImport		= VendorImport 
							invoked.DunAndBradstreetNumber		= DunAndBradstreetNumber	
					else
						invoke Update VendorMappingTableInterfaceRel.Vendor
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							fill in fields from this instance
							invoked.VendorAddress			= PostalAddress
							invoked.LegacyVendor			= VendorImport.OldVendor
							invoked.GlobalLocationNumber	= PayablesGLNNumber
							invoked.VendorConversionResult	= LocalVendorConversionResult
							invoked.VendorStatus			= "I"
							if (VendorMappingTableInterfaceRel.Vendor.VendorCertificationsRel exists)
								invoked.ValidateCertificationDate	= ValidateCertificationDate
							else
								invoked.ValidateCertificationDate	= false



				if (!ErrorOccurred)
					if (PayablesGLNNumber entered)
						LocalItemGroup				= VendorGroup
						LocalGlobalLocationNumber	= PayablesGLNNumber
						if (GlobalLocationNumberRel not exists)
							invoke Create GlobalLocationNumberRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								invoked.Description = VendorName
								invoked.Active		= true

						if (!ErrorOccurred)
							if (GlobalLocationNumberDetailRel not exists)
								invoke Create GlobalLocationNumberDetail
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									invoked.ItemGroup				= VendorGroup
									invoked.GlobalLocationNumber	= LocalGlobalLocationNumber
									invoked.GlobalLocationNumberDetail.GlobalLocationNumberType = GlobalLocationNumberType.Vendor
									invoked.VendorAndVendorLocation.Vendor	= VendorMappingTableInterfaceRel.Vendor


				if (!ErrorOccurred)
					if (CreatePurchasingVendor)
						if (PurchaseOrderGLNNumber entered)
							LocalItemGroup				= VendorGroup
							LocalGlobalLocationNumber	= PurchaseOrderGLNNumber
							if (GlobalLocationNumberRel not exists)
								invoke Create GlobalLocationNumberRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									invoked.Description = VendorName
									invoked.Active		= true

						if (!ErrorOccurred)
							if (PovRevisedIssueMethod not entered)
								PovRevisedIssueMethod = PurchaseOrderIssueMethod.Paper
							if (PurchasingVendorRel not exists)
								invoke Create PurchasingVendor
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									include PurchasingVendorRules
							else
								invoke Update PurchasingVendorRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									include PurchasingVendorRules


						if (!ErrorOccurred)
							if (PurchaseOrderGLNNumber entered)
								LocalItemGroup					= VendorGroup
								LocalGlobalLocationNumber		= PurchaseOrderGLNNumber
								LocalGlobalLocationNumberType	= GlobalLocationNumberType.PurchasingVendor
								LocalPurchasingVendorAndPurchaseFromLocation.PurchasingVendor = VendorMappingTableInterfaceRel.Vendor
								if (GlobalLocationNumberDetailRel not exists)
									invoke Create GlobalLocationNumberDetail
										resume on error
											ErrorOccurred		= true
											LocalErrorMessage	= error message
										invoked.ItemGroup				= VendorGroup
										invoked.GlobalLocationNumber	= LocalGlobalLocationNumber
										invoked.GlobalLocationNumberDetail.GlobalLocationNumberType	= GlobalLocationNumberType.PurchasingVendor
										invoked.PurchasingVendorAndPurchaseFromLocation				= LocalPurchasingVendorAndPurchaseFromLocation



				if (!ErrorOccurred)
					if (PayVendor entered
					and PayToVendorRel not exists)
						invoke Create PayToVendor
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							invoked.VendorGroup 								= VendorGroup
							invoked.Vendor										= VendorMappingTableInterfaceRel.Vendor
							invoked.PayVendor									= DerivedPayVendor	
							invoked.PayType										= "P"
							invoked.Default										= true



				if (!ErrorOccurred)
					if (HoldCode entered)
						invoke SetHoldCode VendorMappingTableInterfaceRel.Vendor
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							invoked.VendorHoldCode 	= HoldCode
					else
						if (VendorMappingTableInterfaceRel.Vendor.OnHold)
							invoke SetHoldCode VendorMappingTableInterfaceRel.Vendor
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								invoked.VendorHoldCode 	= blank



			if (VendorImport.VendorLocation entered)
				if (!ErrorOccurred)
					if (PayablesGLNNumber entered)
						LocalItemGroup				= VendorGroup
						LocalGlobalLocationNumber	= PayablesGLNNumber
						if (GlobalLocationNumberRel not exists)
							invoke Create GlobalLocationNumberRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								invoked.Description = VendorName
								invoked.Active		= true

				if (!ErrorOccurred)
					if (VendorLocationRel not exists)
						invoke Create VendorLocationRel
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							fill in fields from this instance
							invoked.RemitToCode						= RemitTo
							invoked.VendorAddress					= PostalAddress
							invoked.VendorConversionResult			= LocalVendorConversionResult
							invoked.GlobalLocationNumber			= LocalGlobalLocationNumber
							invoked.BankInstruction1				= BankInstructions1
							invoked.BankInstruction2				= BankInstructions2
							invoked.BankInstruction3				= BankInstructions3
							invoked.BankInstruction4				= BankInstructions4
							invoked.ValidateCertificationDate		= false
							if (VATRegistrationCountry entered
							or  VATRegistrationNumber entered)
								invoked.TaxRegistrationType			= 1
					else
						invoke Update VendorLocationRel
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							fill in fields from this instance
							invoked.RemitToCode						= RemitTo
							invoked.VendorAddress					= PostalAddress
							invoked.VendorConversionResult			= LocalVendorConversionResult
							invoked.GlobalLocationNumber			= LocalGlobalLocationNumber
							invoked.BankInstruction1				= BankInstructions1
							invoked.BankInstruction2				= BankInstructions2
							invoked.BankInstruction3				= BankInstructions3
							invoked.BankInstruction4				= BankInstructions4
							if (VendorLocationRel.VendorCertificationRel exists)
								invoked.ValidateCertificationDate	= ValidateCertificationDate
							else
								invoked.ValidateCertificationDate	= false
							if (VATRegistrationCountry entered
							or  VATRegistrationNumber entered)
								invoked.TaxRegistrationType			= 1

					if (!ErrorOccurred)
						if (VendorLocationMappingTableInterfaceRel not exists)
							invoke Create VendorLocationMappingTableInterfaceRel	
								invoked.Vendor										= VendorMappingTableInterfaceRel.Vendor
								invoked.EDINumber									= EDINumber
								invoked.VendorName									= VendorName


				if (!ErrorOccurred)
					if (PayablesGLNNumber entered)
						LocalItemGroup								= VendorGroup
						LocalGlobalLocationNumber					= PayablesGLNNumber
						LocalGlobalLocationNumberType				= GlobalLocationNumberType.VendorLocation
						LocalVendorAndVendorLocation.Vendor			= VendorMappingTableInterfaceRel.Vendor
						LocalVendorAndVendorLocation.VendorLocation = VendorImport.VendorLocation
						if (GlobalLocationNumberDetailRel not exists)
							invoke Create GlobalLocationNumberDetail
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								invoked.ItemGroup				= VendorGroup
								invoked.GlobalLocationNumber	= LocalGlobalLocationNumber
								invoked.GlobalLocationNumberDetail.GlobalLocationNumberType = GlobalLocationNumberType.VendorLocation
								invoked.VendorAndVendorLocation								= LocalVendorAndVendorLocation



				if (!ErrorOccurred)
					if (LocationType.PurchaseFrom
					or  LocationType.BothRemitToPurchaseFrom)
						if (CreatePurchaseFromLocation)


							if (PurchaseOrderGLNNumber entered)
								LocalItemGroup				= VendorGroup
								LocalGlobalLocationNumber	= PurchaseOrderGLNNumber
								if (GlobalLocationNumberRel not exists)
									invoke Create GlobalLocationNumberRel
										resume on error
											ErrorOccurred		= true
											LocalErrorMessage	= error message
										invoked.Description = VendorName
										invoked.Active		= true

							if (!ErrorOccurred)		
								if (PurchaseFromLocationRel not exists)
									invoke Create PurchaseFromLocation
										resume on error
											ErrorOccurred		= true
											LocalErrorMessage	= error message
										include PurchaseFromLocationRules
								else
									invoke Update PurchaseFromLocationRel
										resume on error
											ErrorOccurred		= true
											LocalErrorMessage	= error message
										include PurchaseFromLocationRules


						if (!ErrorOccurred)
							if (PurchaseOrderGLNNumber entered)
								LocalItemGroup								= VendorGroup
								LocalGlobalLocationNumber					= PurchaseOrderGLNNumber
								LocalGlobalLocationNumberType				= GlobalLocationNumberType.PurchaseFromLocation
								LocalPurchasingVendorAndPurchaseFromLocation.PurchasingVendor 		= VendorMappingTableInterfaceRel.Vendor
								LocalPurchasingVendorAndPurchaseFromLocation.PurchaseFromLocation	= VendorImport.VendorLocation
								if (GlobalLocationNumberDetailRel not exists)
									invoke Create GlobalLocationNumberDetail
										resume on error
											ErrorOccurred		= true
											LocalErrorMessage	= error message
										invoked.ItemGroup				= VendorGroup
										invoked.GlobalLocationNumber	= LocalGlobalLocationNumber
										invoked.GlobalLocationNumberDetail.GlobalLocationNumberType = GlobalLocationNumberType.PurchaseFromLocation
										invoked.PurchasingVendorAndPurchaseFromLocation				= LocalPurchasingVendorAndPurchaseFromLocation



			if (!ErrorOccurred)
				for each VendorBalanceImportRel
					if (!ErrorOccurred)
						LocalVendor				= VendorMappingTableInterfaceRel.Vendor
						LocalVendorLocation		= VendorImport.VendorLocation
						LocalCompany			= each.Company
						if (VendorBalanceRel not exists)
							invoke Create VendorBalanceRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								fill in fields from each
								invoked.VendorBalanceDate.LastPaymentDate	= each.LastPaymentDate
								invoked.VendorBalanceDate.LastPurchaseDate	= each.LastPurchaseDate
								if (BalanceCurrency not entered)
									invoked.BalanceCurrency					= each.Company.Currency
								else
									invoked.BalanceCurrency					= BalanceCurrency
								invoked.VendorConversionResult				= LocalVendorConversionResult
						else
							if (LocalAddToVendorBalance.No)
								invoke Update VendorBalanceRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
									if (BalanceCurrency not entered)
										invoked.BalanceCurrency				= each.Company.Currency
									else
										invoked.BalanceCurrency				= BalanceCurrency
									invoked.VendorBalanceDate.LastPaymentDate	= each.LastPaymentDate
									invoked.VendorBalanceDate.LastPurchaseDate	= each.LastPurchaseDate
									invoked.VendorConversionResult				= LocalVendorConversionResult
							else
								invoke VendorImportUpdate VendorBalanceRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									invoked.PrmCurrentBalance					= each.CurrentBalance
									invoked.PrmCurrentYearIncomeWithholding		= each.CurrentYearIncomeWithholding
									invoked.PrmLastYearIncomeWithholding		= each.LastYearIncomeWithholding
									invoked.PrmHighestBalance					= each.HighestBalance
									invoked.PrmLastPaymentDate					= each.LastPaymentDate
									invoked.PrmLastPurchaseDate 				= each.LastPurchaseDate
									invoked.PrmVendorConversionResult				= LocalVendorConversionResult

						if (!ErrorOccurred)
							invoke Delete each
								resume on error			
									ErrorOccurred		= true
									LocalErrorMessage	= error message
						else
							invoke Update each
								resume on error			
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								invoked.VendorConversionResult					= LocalVendorConversionResult



			if (!ErrorOccurred)
				for each VendorContactImportRel
					if (!ErrorOccurred)
						LocalVendor				= VendorMappingTableInterfaceRel.Vendor
						LocalVendorLocation		= VendorImport.VendorLocation
						LocalVendorContactCode	= each.VendorContactImport.VendorContactCode
						LocalContactLevel		= each.VendorContactImport.ContactLevel
						if (VendorContactRel not exists)
							invoke Create VendorContactRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								fill in fields from each
								invoked.ContactName		= each.Name
								invoked.VendorAddress	= each.ContactAddress		
						else
							invoke Update VendorContactRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								fill in fields from each
								invoked.ContactName		= each.Name					
								invoked.VendorAddress	= each.ContactAddress		

			if (!ErrorOccurred)
				for each VendorExcludeTemplateImportRel
				    LocalTemplate = each.Template
					if (!ErrorOccurred
					and !InvoiceTemplateExclusionRel exists)
						invoke Create InvoiceTemplateExclusion
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							invoked.VendorGroup		= VendorGroup
							invoked.VendorClass		= blank
							invoked.Vendor			= VendorMappingTableInterfaceRel.Vendor
							invoked.Template		= each.Template

				if (!ErrorOccurred)
					invoke Delete VendorExcludeTemplateImportRel
						resume on error			
							ErrorOccurred		= true
							LocalErrorMessage	= error message
				

			if (!ErrorOccurred)
				if (LocalUpdateAddressRecords.Yes)
					for each VendorAddressImportRel
						if (!ErrorOccurred)
							LocalVendor				= VendorMappingTableInterfaceRel.Vendor
							LocalVendorLocation		= VendorImport.VendorLocation
							LocalVendorContactCode	= each.VendorAddressImport.VendorContactImport.VendorContactCode
							LocalContactLevel		= each.VendorAddressImport.VendorContactImport.ContactLevel
							if (VendorAddressRel not exists)
								invoke Create VendorAddressRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
									invoked.PostalAddress					= each.PostalAddress
									invoked.VendorConversionResult			= LocalVendorConversionResult
							else
								invoke Update VendorAddressRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
									invoked.PostalAddress					= each.PostalAddress
									invoked.VendorConversionResult			= LocalVendorConversionResult
							if (!ErrorOccurred)
								invoke Delete each
									resume on error			
										ErrorOccurred		= true
										LocalErrorMessage	= error message
							else
								invoke Update each
									resume on error			
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									invoked.VendorConversionResult			= LocalVendorConversionResult

				if (!ErrorOccurred)
					invoke Delete VendorContactImportRel
						resume on error			
							ErrorOccurred		= true
							LocalErrorMessage	= error message


			if (!ErrorOccurred)
				for each VendorCertificationImportRel
					if (!ErrorOccurred)
						LocalVendor						= VendorMappingTableInterfaceRel.Vendor
						LocalVendorLocation				= VendorImport.VendorLocation
						LocalPayablesCertificationCode	= each.PayablesCertificationCode
						LocalCertificationEffectiveDate = each.CertificationEffectiveDate
						if (VendorCertificationRel not exists)
							invoke Create VendorCertificationRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								fill in fields from each
						else
							invoke Update VendorCertificationRel
								resume on error
									ErrorOccurred		= true
									LocalErrorMessage	= error message
								fill in fields from each
						if (!ErrorOccurred)
							invoke Delete each
								resume on error			
									ErrorOccurred		= true
									LocalErrorMessage	= error message

			if (!ErrorOccurred)
				if (ValidateCertificationDate)
					if (VendorImport.VendorLocation not entered)
						invoke Update VendorMappingTableInterfaceRel.Vendor
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							invoked.ValidateCertificationDate	= ValidateCertificationDate
					else
						invoke Update VendorLocationRel
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
							invoked.ValidateCertificationDate	= ValidateCertificationDate


			if (!ErrorOccurred)
				for each VendorWithholdingCodeImportRel
					if (each.VendorWithholdingType.VendorWithholdingDefault)
						if (!ErrorOccurred)
							LocalVendor				   = VendorMappingTableInterfaceRel.Vendor
							LocalVendorLocation		   = VendorImport.VendorLocation
							LocalIncomeWithholdingCode = each.IncomeWithholdingCode
							LocalWithholdingCategory   = each.WithholdingCategory
							if (VendorWithholdingDefaultRel not exists)
								invoke Create VendorWithholdingDefaultRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
							else
								invoke Update VendorWithholdingDefaultRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
							if (!ErrorOccurred)
								invoke Delete each
									resume on error			
										ErrorOccurred		= true
										LocalErrorMessage	= error message
					if (each.VendorWithholdingType.VendorWithholdingCode)
						if (!ErrorOccurred)
							LocalVendor				   = VendorMappingTableInterfaceRel.Vendor
							LocalVendorLocation		   = VendorImport.VendorLocation
							LocalCompany               = each.Company
							LocalIncomeWithholdingCode = each.IncomeWithholdingCode
							if (VendorWithholdingCodeRel not exists)
								invoke Create VendorWithholdingCodeRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
							else
								invoke Update VendorWithholdingCodeRel
									resume on error
										ErrorOccurred		= true
										LocalErrorMessage	= error message
									fill in fields from each
							if (!ErrorOccurred)
								invoke Delete each
									resume on error			
										ErrorOccurred		= true
										LocalErrorMessage	= error message

			if (ErrorOccurred)
				RecordInError					= true
				ErrorMessage					= LocalErrorMessage
				VendorConversionResult			= LocalVendorConversionResult
			else
				if (VendorImport.VendorLocation not entered)
					invoke SetImportStatus VendorMappingTableInterfaceRel.Vendor
						resume on error			
							ErrorOccurred		= true
							LocalErrorMessage	= error message
						invoked.PrmVendorStatus = VendorStatus
				if (!ErrorOccurred)
					invoke Delete
						resume on error			
							ErrorOccurred		= true
							LocalErrorMessage	= error message

	Actions
		CreateVendorImport is a Create Action

		CreateVendorLocationImport is a Create Action
			Field Rules
				LocationType
					required

		Update is an Update Action

		Delete is a Delete Action

 		ResetErrorMessage is an Instance Action
			Action Rules
	 			initialize ErrorMessage
	 			RecordInError = false

		ConvertThisVendor is an Instance Action
			restricted
			Parameters
				AddToVendorBalance			is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				UpdateAddressRecords		is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
			Parameter Rules
				AddToVendorBalance
					initial value is "N"
					default to "N"
				UpdateAddressRecords
					initial value is "N"
					default to "N"
			Action Rules
				LocalAddToVendorBalance			= LocalAddToVendorBalance.No
				LocalUpdateAddressRecords		= LocalUpdateAddressRecords.Yes
				include InterfaceThisVendor

		VendorInterface is a Set Action
			run in background
			Parameters
				PrmRunGroup					is a RunGroup
					default label is "RunGroup"
				PrmVendorGroup				is a VendorGroup
					default label is "VendorGroup"
				AddToVendorBalance			is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"
				UpdateAddressRecords		is AlphaUpper size 1
					States
						Yes value is "Y"
						No  value is "N"

			Parameter Rules
				PrmRunGroup
					required
				PrmVendorGroup
					required
				AddToVendorBalance
					initial value is AddToVendorBalance.No
					default to AddToVendorBalance.No
				UpdateAddressRecords
					initial value is UpdateAddressRecords.No
					default to UpdateAddressRecords.No

			Local Fields
				LocalInstanceCount				is Numeric 10
				LocalResultView					is a VendorConversionResult view

			Instance Selection
				where (RunGroup		= PrmRunGroup
				and    VendorGroup	= PrmVendorGroup)

			Sort Order
				RunGroup
				VendorGroup
				VendorImport

			Action Rules
				Set Rules
					Entrance Rules
						invoke Create VendorConversionResult
							assign result to LocalResultView
							invoked.VendorInterfaceType			= 1
							invoked.VendorGroup					= PrmVendorGroup
							invoked.RunTime						= current timestamp
							invoked.Status						= 2
							invoked.RunGroup					= PrmRunGroup
							invoked.AddToVendorBalance			= AddToVendorBalance
							invoked.UpdateAddressRecords		= UpdateAddressRecords

					Exit Rules
						if (!ErrorOccurred)		
							invoke Update LocalResultView.VendorConversionResult
								invoked.RecordsProcessed			= LocalInstanceCount
								invoked.Status						= 1

							if (PrmVendorGroup.VendorGroup.FinanceEnterpriseGroup.BODTrigger)
								invoke VendorImportBODUpdate Vendor
									invoked.PrmVendorConversionResult	= LocalResultView.VendorConversionResult
									invoked.PrmVendorGroup				= PrmVendorGroup

				Instance Rules
					LocalVendorConversionResult 	= LocalResultView.VendorConversionResult
					LocalUpdateAddressRecords		= UpdateAddressRecords
					LocalAddToVendorBalance			= AddToVendorBalance

					include InterfaceThisVendor

					LocalInstanceCount				+= 1
		DeleteAllTransactionsForRunGroup is a Set Action	
			default label is "DeleteByRunGroup"
			confirmation required

			Parameters
				PrmRunGroup				  is AlphaUpper 30	
					default label is "RunGroup"
				PrmVendorGroup is a VendorGroup
					default label is "VendorGroup"
					
			Parameter Rules
				PrmVendorGroup
					required
					initial value is actor.context.VendorGroup
				PrmRunGroup
					required
			
			Instance Selection
				where (RunGroup		= PrmRunGroup
				and    VendorGroup	= PrmVendorGroup)
				
			Action Rules
				Instance Rules
					invoke Delete VendorCertificationImportRel
					invoke Delete VendorContactImportRel
					invoke Delete VendorExcludeTemplateImportRel
					invoke Delete VendorWithholdingCodeImportRel
					invoke Delete 
