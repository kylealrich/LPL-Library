UserWebServiceInterface is a BusinessClass
    owned by repository
    prefix is uswi
    framework type is LPLConfiguration

	Patterns
		disable EffectiveDated
		disable AsOfDateProcessing
		implements DynamicCreation
		implements ConfigurationMetadata
		implements AuditLogEntryActions

    Ontology
        symbolic key is UserWebServiceInterface

    Persistent Fields
    	WebServiceInterface	is LPLName
    	Status 				is a UserObjectStatus
		LPL             	is LPL
    	Description			is a ConfigDescription
    	UserEditorType
    	Independent			is Boolean
    	ErrorText			is Text

	Field Rules
		WebServiceInterface
			required





		LPL
			required

			if (Status.Active)
				LocParseText = ParseText

				if (not LocParseText = blank)
					confirmation required
						"<LocParseText>:_User_Business_ClassIsInvalid.__DoYouWantToSaveAnyway?"

					Status = Status.Invalid
					ErrorText = LocParseText

		UserEditorType
			default to UserEditorType.LPL

		Status
			if (Status.Active)
				initialize ErrorText

    Derived Fields
    	ConfigActor is a DerivedField
			type is Actor
			default label is "Actor"
			return blank

    	ParseText is a NativeField
			type is Text

	Local Fields
		LocParseText is Text
		LocParsed is Boolean  
		
    Conditions
		ConfigGlobal
			default label is "GlobalConfiguration"
			when (true)

		HasErrorText
			default label is "ErrorTextEntered"
			when (ErrorText entered)

		IsWSIIndependent
			restricted
			when (not WebServiceInterfaceRel exists
			or    WebServiceInterfaceRel.Independent)

    Relations
    	WebServiceInterfaceRel
			one-to-one relation to BusinessWebServiceInterface
			Field Mapping uses symbolic key
				related.BusinessWebServiceInterface = WebServiceInterface

   	Actions
    	Create is a Create Action
    		Action Rules
    			Independent = IsWSIIndependent

    			constraint (Independent) 
    				"CannotModifyAnExistingUserWebServiceInterface"

    		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent

		CreateFromSnapshot is a Create Action
			restricted
			bypass field rules

			

				
    	Update is an Update Action
    		Action Rules
    			Independent = IsWSIIndependent

    			constraint (Independent) 
    				"CannotModifyAnExistingUserWebServiceInterface"

    		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent

		UpdateFromSnapshot is an Update Action
			restricted
			bypass field rules

			
			Action Rules
				constraint (Independent) 
    				"CannotModifyAnExistingUserWebServiceInterface"


				
    	Delete is a Delete Action
    		Exit Rules
    			invoke FireEvent
    			
    	DeleteFromSnapshot is a Delete Action
			restricted
			bypass relational integrity rules

				
    	Activate is an Instance Action
    		valid when (not Status.Active)
    		Action Rules
    			LocParseText = ParseText

				if (not LocParseText = blank)
					constraint(LocParseText = blank)
						"<LocParseText>:_User_Web_Service_InterfaceIsInvalid._Cannot_Activate."

				Status = Status.Active
				initialize ErrorText

    		Exit Rules



				if (Independent)
					LocParseText = ParseText 

    			invoke FireEvent

    	Deactivate is an Instance Action
    		valid when (not Status.Inactive)
    		Action Rules
    			Status =  Status.Inactive
    		Exit Rules
    			invoke FireEvent

    	Invalidate is an Instance Action
    		valid when (not Status.Invalid)
    		restricted
    		Action Rules
    			Status = Status.Invalid
    		Exit Rules
    			invoke FireEvent

    	FireEvent is an Instance Action
			restricted


        CreateConfiguration is a Create Action
        	restricted
            Parameters
                Name is LPLName

			Parameter Rules
				Name
					required

            Action Rules
                invoke Create this instance
                    invoked.WebServiceInterface = Name
                    invoked.LPL                 = Name + " is a WebserviceInterface"










		TagItem is an Instance Action
			Parameters
				ParamConfigurationTag is a ConfigurationTag
					default label is "Tag"
			
			Entrance Rules
				if (Status.Inactive)
					confirmation required
						"UserWebServiceInterfaceIsInactive,TagAnyway?"
							
				if (Status.Invalid)
					confirmation required
						"UserWebServiceInterfaceIsInvalid,TagAnyway?"
								
			Action Rules
				invoke Create ConfigurationTagItem
					invoked.ConfigurationTag = ParamConfigurationTag
					invoked.ConfigurationTagItem.Reference = reference to this instance		  

    Sets
    	ByWebServiceInterface
    		indexed
    		Sort Order
    			WebServiceInterface

		ByIndependent
    		indexed
    		Sort Order
    			Independent
    			WebServiceInterface

