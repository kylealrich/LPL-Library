GLTransactionInterface is a BusinessClass
	owned by GeneralLedger
	prefix is GLITR
	default label is "GlobalLedgerTransactionInterface"

	Ontology
		symbolic key is GLTransactionInterface

	Patterns
		enable explicit context override
		disable Auditing
		disable EffectiveDated
		disable AsOfDateProcessing
		implements InlineUserFields 
			size is 1000
				
	Persistent Fields
		AccountingEntity
        Status							is Numeric 1
            States
                Unreleased				value is 0
                Error		   			value is 1
                BudgetEdit	   			value is 2
					default label is "PendingReset"
				ResetInProgress			value is 3
		OrganizationCode				is a GeneralLedgerOrganizationCode
		ToAccountingEntity
		AccountingUnit
			context of ToAccountingEntity
		AccountCode						is a GeneralLedgerAccountCode
		GeneralLedgerEvent
			default label is "GlobalLedgerEvent"	
		JournalCode						is AlphaUpper 6	
        TransactionDate					is an ExchangeDate
        Reference
		Description						is Alpha up to 60
        CurrencyCode					is a FromCurrency
        UnitsAmount
        TransactionAmount				is a CurrencyAmount 

		ReportCurrencyAmount			is a FinanceCurrencyAmount
    	System							is a GeneralLedgerSystemCode
		AutoReverse						is Boolean
		PostingDate
		Project
		FinanceDimension1
		FinanceDimension2
		FinanceDimension3
		FinanceDimension4
		FinanceDimension5
		FinanceDimension6
		FinanceDimension7
		FinanceDimension8
		FinanceDimension9
		FinanceDimension10
		Ledger
		DocumentNumber					is Alpha up to 30
		ErrorMessage					is Alpha 150
        AutoReverseDate       			is Date
		Resource						is an Employee
			sql name is "FinanceResource"
		VendorGroupAndVendor 			is a GlonlyVendorGroupAndVendor
		Billed							is Numeric 1
            States
                Unprocessed				value is 0
                Invoiced				value is 1
                Processed				value is 3
                Distributed				value is 4
                Hold					value is 5
 		RevenueRecognized				is Numeric 1
            States
                Unprocessed				value is 0
                Processed				value is 1
                Draft					value is 2
                Hold					value is 3
 		Capitalize						is Numeric 1
			States
				Unprocessed 			value is 0
				Processed				value is 1
				Hold					value is 2
		LaborDistribution				is Numeric 1
			States
				Unprocessed				value is 0
				Processed				value is 1
				Distributed				value is 2
		
		APPaid							is AlphaUpper 1
			States
				EligibleForBilling      value is blank
				HoldForBilling          value is "H" 
		SenderLogicalID				
		SenderComponentID			
		SenderCreationDateTime 		
		SenderBODID					
		SenderOriginalBOD
		OriginatingTransaction			is BusinessObjectReference
		DrillBackLink					is Alpha up to 500
		IndirectBurden					is Numeric 1
			States
				Unprocessed				value is 0
				Draft					value is 1
				Processed				value is 2
		GLTObjectId						is an ObjId			
		HROrganizationUnit				is Numeric size 6
			default label is "OrganizationUnit"		
		PayCode							is AlphaUpper size 20
		Job 							is Numeric size 9
		Position						is Numeric size 9
		CreatedByFES					is Boolean		
			protected
		FESManuallyUpdated				is Boolean
			protected
		MigStatus
	Context Fields
#ifdef module integration
		FSMInboundBODTracker
#endif


	Derived Fields

#ifdef module integration
		SSJEFailedAckBODXML is a DerivedField
			type is XMLDocument
			restricted
			SSJEFailedAckBODXML = template.IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_Acknowledge_ST document for this instance
		
		SSSJEFailedConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SSSJEFailedConfirmBODXML = template.IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_Confirm_ST document for this instance
		
		DerivedErrorMessageXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(ErrorsInRunGroupRel exists)
				for each ErrorsInRunGroupRel
					LocalRunGroupErrorMessage = "Failed message, For RunGroup:" + each.GLTransactionInterface.RunGroup+" and SequenceNumber:"+ each.GLTransactionInterface.SequenceNumber + "," + "With Error Message: " + each.ErrorMessage + ", " +"Productline: " + DerivedappProdline
					DerivedErrorMessageXMLBOD += template.IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_ACKErrorMessage_XML_ST document for this instance
				return DerivedErrorMessageXMLBOD

		DerivedConfirmErrorMessageXML is a DerivedField
            type is XMLDocument
            restricted
            if(ErrorsInRunGroupRel exists)
                for each ErrorsInRunGroupRel
					LocalRunGroupErrorMessage = "Failed message, For RunGroup:" + each.GLTransactionInterface.RunGroup+" and SequenceNumber:"+ each.GLTransactionInterface.SequenceNumber + "," + "With Error Message: " + each.ErrorMessage + ", " +"Productline: " + DerivedappProdline
                    DerivedConfirmErrorMessageXML += template.IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_ConfirmErrorMessage_XML_ST document for this instance
                return DerivedConfirmErrorMessageXML
				
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

					
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value					
		
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
		
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp
			
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"
		
		DerivedFailedConfirmBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccoutingEntity + ":" + ":" + GLTransactionInterface.RunGroup + ":" + "?SourceSystemJournalEntry&verb=Confirm&TrackerID="+LocalFSMInboundBODTracker
		
		DerivedAccoutingEntity is a DerivedField
			type is Alpha 50
			restricted 
			return FinanceEnterpriseGroup + DerivedDelimiter + AccountingEntity
		
		DerivedSenderLogicalID is a DerivedField	
			type is Alpha 100
			restricted
			return SenderLogicalID
						
		DerivedSenderComponentID is a DerivedField	
			type is Alpha 100
			restricted
			return SenderComponentID
				
		DerivedSenderBODID	is a DerivedField	
			type is Alpha 100
			restricted
			return SenderBODID			
		
		DerivedSSJEFailedACKBODID is a DerivedField
			type is Alpha 600
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedAccoutingEntity + ":" + ":" + GLTransactionInterface.RunGroup + ":" + "?SourceSystemJournalEntry&verb=Ack&TrackerID="+LocalFSMInboundBODTracker
#endif

	
		DerivedRoundTo					is a DerivedField
    		type is Decimal 5.4
    		restricted
    		if (!CurrencyCode exists)
    			return .01
    		if (CurrencyCode.NumberOfDecimals = 2)
    			return .01
    		if (CurrencyCode.NumberOfDecimals = 0)
    			return 1
    		if (CurrencyCode.NumberOfDecimals = 3)
    			return .001
    		if (CurrencyCode.NumberOfDecimals = 4)
    			return .0001

		RoundedTransactionAmount	is a DerivedField
    		type is like InternationalAmount
    		restricted
    		if (TransactionAmount entered)
	    		RoundedTransactionAmount	   = TransactionAmount
	    		round RoundedTransactionAmount to nearest DerivedRoundTo
	    		return RoundedTransactionAmount
	    	else
	    		return 0
	
		DerivedOrganizationCode		is a DerivedField
			type is like GeneralLedgerOrganizationCode
			restricted
			LocalCount 		= 2
			LocalCount2		= 1
			if (!OrganizationCode[1] = "~")
				return OrganizationCode
			while (LocalCount  < 14)
				if (!OrganizationCode[LocalCount] = "~")
					LocalOrganizationCodeArray.AlphaElement[LocalCount2]	= OrganizationCode[LocalCount]
				else
					LocalCount 		+= 1
					end while
				LocalCount2		+= 1
				LocalCount 		+= 1
			LocalCount2 		= 13
			while (LocalCount  < 41)
				LocalOrganizationCodeArray.AlphaElement[LocalCount2]	= OrganizationCode[LocalCount]
				LocalCount 		+= 1
				LocalCount2		+= 1
			return LocalOrganizationCodeArray

		DerivedBeginGregorian is a DerivedField
			type is Date
			restricted
			LocalDayNumeric  = LocalJulianAlpha[5:7]
			LocalDateAlpha   = LocalJulianAlpha[1:4] + "0101" 
			LocalDate 		 = LocalDateAlpha
			LocalDate 	    += (LocalDayNumeric - 1)
			return LocalDate
			
		DerivedEntityCalendarPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			return first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod

		DerivedToAccountingEntity is a DerivedField
			type is like AccountingEntity
			restricted
			if (OrganizationCode entered)
				return LocalOrganizationCode.AccountingEntity
			return ToAccountingEntity
			
		DerivedAccountingUnit is a DerivedField
			type is like AccountingUnit
			restricted
			if (OrganizationCode entered)
				return LocalOrganizationCode.AccountingUnit
			return AccountingUnit

		DerivedGeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			if (GeneralLedgerAccountCodeRel exists)	
				return AccountCode.GeneralLedgerChartAccount
			return AccountCode

		AccountingEntityErrorMessage	is a MessageField
			restricted
			"<FinanceEnterpriseGroup.AccountingEntityLabel>ToRequiredOrDoesNotExist"	
		OrgCodeAccountingEntityErrorMessage is a MessageField
			restricted
			"CannotEnterBoth_Organization_CodeAnd_To<FinanceEnterpriseGroup.AccountingEntityLabel>"
		AccountingUnitErrorMessage		is a MessageField
			restricted
			"<FinanceEnterpriseGroup.AccountingUnitLabel>RequiredOrDoesNotExist"
		AccountErrorMessage				is a MessageField
			restricted
			"<FinanceEnterpriseGroup.AccountLabel>DoesNotExist"
		PostingDateErrorMessage			is a MessageField
			restricted
			"<FinanceEnterpriseGroup.AccountingEntityLabel>PeriodIsClosed"
		PostingDateNoPeriodErrorMessage is a MessageField
			restricted
			"NoPeriodFoundFor_Posting_Date<PostingDate>"
		PostingDateRequiredMessage		is a MessageField
			restricted
			"PostingDateIsRequired"
		BudgetEditErrorMessage			is a MessageField
			restricted

			"BudgetErrorExists;Perform_\Reset_\All_\ErrorsActionBeforeUpdatingTransactions"	
		AutoReverseDateErrorMessage		is a MessageField
			restricted
			"AutoReverseDateCannotBeLessThanPeriodEndDate"
		AutoReverseDatePostingDateErrorMessage	is a MessageField
			restricted
			"AutoReverseDateMustBeGreaterThanPostingDate"
		PostingProjectErrorMessage		is a MessageField
			restricted
			"<FinanceEnterpriseGroup.ProjectLabel>MustBePostingType"
		BillableProjectErrorMessage		is a MessageField
			restricted
			"<FinanceEnterpriseGroup.ProjectLabel>MustBeBillable"
		CapitalProjectErrorMessage		is a MessageField
			restricted
			"<FinanceEnterpriseGroup.ProjectLabel>MustBeCapital"
		ResourceRequiredErrorMessage	is a MessageField
			restricted
			"ResourceIsRequiredForLaborDistribution"
		ProjectRequiredMessage			is a MessageField
			restricted
			"<FinanceEnterpriseGroup.ProjectLabel>IsRequired"
		Dimension1BaseZoneNotDefinedMessage is a MessageField
			"<FinanceEnterpriseGroup.FinanceDimension1Label>_Default_ZoneNotDefined"
		AccountingUnitBaseZoneNotDefinedMessage is a MessageField
			"<FinanceEnterpriseGroup.AccountingUnitLabel>_Default_ZoneNotDefined"
		FrontEndSplitRequiredMessage is a MessageField
			"FrontEndSplitIsRequired"						
#ifdef module cam
		NotExpendableErrorMessage			is a MessageField
			restricted
			"<FinanceEnterpriseGroup.FinanceDimension10Label>:_<FinanceDimension10>_IsNotExpendable"

		DetailNotSetupErrorMessage			is a MessageField
			restricted
			"<FinanceDimension10>_MustBeSetupAs_a_<FinanceEnterpriseGroup.FinanceDimension10Label>_Detail"
#endif
					
	Transient Fields
		IsErrorTransaction				is Boolean
			derive value from ErrorTransaction
			
	Local Fields
		LocalMainUserTemplate			is Alpha size 250
		LocalTransactionInterface		is a GLTransactionInterface
		BypassStructureRelationEdit
		BypassProjectEdits
		LocalEventCode					is a GeneralLedgerEvent
		LocalOrgCode					is a OrganizationCode
		LocalEntity						is a AccountingEntityField
		LocalEndDate					is a GeneralLedgerCalendarPeriod
		LocalLedger						is a Ledger
		LocalInstAccountingEntity		is like AccountingEntity
		LocalCount						is Numeric 2
		LocalCount2						is Numeric 2
		LocalOrganizationCodeArray		is an AlphaArray
		LocalOrganizationCode			is an OrganizationCode
		LocalFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
		LocalRunGroup					is AlphaUpper 30
		LocalGLTDEntity					is like AccountingEntity
		LocalAckBodTriggered 			is Boolean
		LocalTransactionInterfaceView   is a GLTransactionInterfaceEdit view
		LocalPeriodEndDate				is Date
		LocalJulianAlpha				is Alpha 7
		LocalDayNumeric					is Numeric 3
		LocalDateAlpha   				is Alpha 8
		LocalDate						is Date
		LocalClosePeriod				is a GeneralLedgerClosePeriod		
		LocalSetFEG						is like FinanceEnterpriseGroup
		LocalSetRunGroup				is AlphaUpper 30
		LocalJournalAmountUpdated		is Boolean			
		LocalBudgetEditGroup2			is UniqueID			
		LocalJournalCodeBlockUpdated	is Boolean			
		LocalInterfaceResult		 	is a GLTransactionInterfaceResult		
		LocalCashOffsetAccount			is a GeneralLedgerChartAccount			
		LocalCalculateGLFinanceStructure	is a CalculateGLFinanceStructure	
		LocalAnswer 						is Alpha size 1						

		LocalNativeLPLBODTrigger		is Boolean
		LocalRunGroupErrorMessage		is Alpha 600
		LocalAckErrorMessageXML			is XMLDocument
		LocalConfirmErrorMessageXML		is XMLDocument
#ifdef module integration
		NewBODTracker  					is a FSMInboundBODTracker view
#endif
		LocalFSMInboundBODTracker		is Numeric 15
		Error            				is Boolean
		LocalBODTrigger					is Boolean
		LocalErrorMessage 				is Alpha 150
		LocalTriggerFrom				is Alpha size 100
		LocalConfigurationParameter		is Alpha size up to 200			

#ifdef module ap
		LocalDerivedFESKey 				is a FrontEndSplitKey
#endif
		LocalFEGtext					is like FinanceEnterpriseGroup
		LocalFESAmount					is like InternationalAmount
  	Field Groups

	Sets
		ByRunGroupEntity
			Sort Order
				FinanceEnterpriseGroup
				GLTransactionInterface.RunGroup
				AccountingEntity
				GLTransactionInterface.SequenceNumber

		ByStatusAndRunGroup
			Sort Order
				FinanceEnterpriseGroup
				Status
				GLTransactionInterface.RunGroup
				GLTransactionInterface.SequenceNumber
				
	Relations 
		
		GLTransInterfaceEntityRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses ByRunGroupEntity
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.GLTransactionInterface.RunGroup	= LocalTransactionInterface.RunGroup
		
		
		CurrExchangeRateRel
			one-to-many relation to CurrExchangeRate
			Field Mapping uses ByFromCurrency
				related.FinanceEnterpriseGroup		 					   = FinanceEnterpriseGroup
				related.CurrExchangeRate.CurrencyRelationship.FromCurrency = ReportCurrencyAmount.AccountingEntity.FunctionalCurrency
				related.CurrExchangeRate.CurrencyRelationship.ToCurrency   = ReportCurrencyAmount.FinanceEnterpriseGroup.ReportCurrencyOne
			Instance Selection
				where (related.Rate  = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyRate
				or related.Rate      = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyRate
				or related.Rate      = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyRate)
			
				
#ifdef module integration
		
		UserTemplateRel
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
			Instance Selection
				where (related.UserTemplate		= LocalMainUserTemplate)
						
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter

		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 5
            	related.FSMBODConfiguration.Noun 		= "SourceSystemJournalEntry"
            	related.FSMBODConfiguration.Direction 	= 1

		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
#endif		
		GLTransactionInterfaceResultRel
			one-to-many relation to GLTransactionInterfaceResult
			Field Mapping uses ByRunGroup
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.RunGroup	                = GLTransactionInterface.RunGroup

		GLTransactionInterfaceRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.GLTransactionInterface			= LocalTransactionInterface
		ErrorsInRunGroupRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses ByStatusAndRunGroup
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.Status							= Status.Error
				related.GLTransactionInterface.RunGroup = LocalRunGroup
		BudgetEditInRunGroupRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses ByStatusAndRunGroup
				related.FinanceEnterpriseGroup			= LocalSetFEG
				related.Status							= Status.BudgetEdit
				related.GLTransactionInterface.RunGroup = LocalRunGroup
		GeneralLedgerAccountCodeRel
			one-to-one relation to GeneralLedgerAccountCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerAccountCode	= AccountCode
		GLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses ByJournalizeGroup
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.JournalizeGroup					= LocalRunGroup
				related.Status							= 1


		GLTransactionDetailForEntityRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses ByJournalizeGroup
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.JournalizeGroup					= LocalRunGroup
			Instance Selection
				where (related.Status.Released
				and    related.AccountingEntity			= LocalGLTDEntity)				
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < PostingDate)
		EntityLedgerPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= AccountingEntity
				related.Ledger						= LocalLedger
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	not < LocalEndDate)
		AssumedEntityLedgerPeriodRel
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= AccountingEntity
				related.GeneralLedgerClosePeriod	= LocalClosePeriod
				related.Ledger						= LocalLedger				
		BudgetEntityLedgerRel
			one-to-one relation to BudgetEntityLedger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= LocalInstAccountingEntity
				related.Ledger						= LocalLedger
		AnyBudgetEntityLedgerRel
			one-to-many relation to BudgetEntityLedger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
		GLInterfaceBudgetGroupRel
			one-to-one relation to GLInterfaceBudgetGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.GLInterfaceBudgetGroup.RunGroup	= GLTransactionInterface.RunGroup
				related.GLInterfaceBudgetGroup.Entity	= blank
		GLInterfaceEntityBudgetGroupRel
			one-to-one relation to GLInterfaceBudgetGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.GLInterfaceBudgetGroup.RunGroup	= GLTransactionInterface.RunGroup
				related.GLInterfaceBudgetGroup.Entity	= AccountingEntity	
		BudgetErrorsForRunGroupRel
			one-to-many relation to GLInterfaceBudgetGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
			Instance Selection
				where(related.GLInterfaceBudgetGroup.RunGroup	= LocalRunGroup
				and related.BudgetErrorsExist)
		InterfaceBudgetGroupRel
			one-to-one relation to GLInterfaceBudgetGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= LocalSetFEG	
				related.GLInterfaceBudgetGroup.RunGroup	= LocalSetRunGroup
				related.GLInterfaceBudgetGroup.Entity	= LocalGLTDEntity						

		DefaultZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByDefaultZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= AccountingEntity
		DefaultZoneFinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses ByDefaultZoneDimensionInStructure
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceDimension1Structure	= FinanceEnterpriseGroup.EnterpriseDim1Structure
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup	= actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity		= AccountingEntity	

		GLInterfaceCashOffsetRel				
			one-to-many relation to GLTransactionInterface
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.GLTransactionInterface.RunGroup	= LocalRunGroup
				and    related.AccountCode						= LocalCashOffsetAccount)

		GLInterfaceByRunGroupRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
			Instance Selection
				where (related.GLTransactionInterface.RunGroup	= GLTransactionInterface.RunGroup)
				
#ifdef module cb			
		CashCodeByAccountRel
			one-to-many relation to CompanyCashCode
			Field Mapping uses ByCashGLAccount
				related.CashAccount.GeneralLedgerChartAccount	= DerivedGeneralLedgerChartAccount
			Instance Selection
				where (related.CashCode.CashManagementGroup		= FinanceEnterpriseGroup)
		CashCodeFundEditByAccountingUnitRel
			one-to-one relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to LocalInterfaceResult
		 		related.CashCode				= first CashCodeByAccountRel.CashCode
		 		related.AccountingEntity		= DerivedToAccountingEntity
		 		related.AccountingUnit			= DerivedAccountingUnit
		 		related.FinanceDimension1		= blank
		CashCodeFundEditByDimension1Rel
			one-to-one relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to LocalInterfaceResult
		 		related.CashCode				= first CashCodeByAccountRel.CashCode
		 		related.AccountingEntity		= DerivedToAccountingEntity
		 		related.AccountingUnit			= blank
		 		related.FinanceDimension1		= FinanceDimension1
		CashCodeFundEditRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to LocalInterfaceResult
#endif
#ifdef module ap

		FESDistributionsByKeyLocalRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey

		FESDistByDistributionRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey
			    related.FrontEndSplitDistributions.Distribution		= GLTransactionInterface.SequenceNumber

		RecordEligibleForFESRel
			one-to-many relation to GLTransactionInterface
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.GLTransactionInterface.RunGroup	= LocalRunGroup
				and	related.RecordEligibleForFES)
#endif
		ProjectFundingSourceRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= Project.ParentDisplayContractRel.Project
				related.FinanceDimension2		= FinanceDimension2

#ifdef module cam
		CustodialDetailAmountRel
			one-to-many relation to CustodialDetailAmount
			Field Mapping uses ByCustodialPosting
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CustodialPosting       = FinanceDimension10
			Instance Selection
				where (related.CustodialAccountManagement.AccountingEntity	= DerivedToAccountingEntity)

		CustodialAccountEditByPostingRel
			one-to-one relation to CustodialAccountEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to LocalInterfaceResult
		  		related.AccountingEntity		= DerivedToAccountingEntity
		 		related.FinanceDimension10		= FinanceDimension10

		CustodialAccountEditRel
			one-to-many relation to CustodialAccountEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to LocalInterfaceResult
#endif

 	Conditions
 		ErrorTransaction
 			restricted
 			when (ErrorMessage entered)
		EntityBudgetErrorsExist
			restricted
 			when (GLInterfaceBudgetGroupRel.BudgetErrorsExist
 			or    GLInterfaceEntityBudgetGroupRel.BudgetErrorsExist)
 		BudgetGroupExists
 			when (GLInterfaceBudgetGroupRel exists
 			or    GLInterfaceEntityBudgetGroupRel exists)
 		AnyBudgetEntityLedgersExist
 			when (AnyBudgetEntityLedgerRel exists)
		SystemTransactionEvents
			restricted
			when (GeneralLedgerEvent = "CB"
			or    GeneralLedgerEvent = "AB"
			or    GeneralLedgerEvent = "ZB"
			or    GeneralLedgerEvent = "ES")
		GLProcessingSystems
			restricted
			when (System 	= "GL"
			or    System	= "RJ"
			or    System 	= "CA")
		SecurityGroupAllowsAccess
			when (actor.context.AccountingEntitySecurityGroup = blank
			or   (AccountingEntitySecurityGroupMemberRel exists))
		EncumbranceOptionForUpdate							
			restricted
			when (System.EncumbranceOption.Track
			or    System.EncumbranceOption.TrackAndEdit)
		FundAccountingEnabled
			restricted
			when (actor.context.FinanceEnterpriseGroup.FundAccounting)
		FrontEndSplitsEnabled
			restricted
			when (actor.context.FinanceEnterpriseGroup.FrontEndSplits)
		FESExcludedEvent
			restricted
			when (GeneralLedgerEvent = "AR"
			or    GeneralLedgerEvent = "BI"
			or    GeneralLedgerEvent = "BIR"
			or    GeneralLedgerEvent = "RE"
			or    GeneralLedgerEvent = "RER"
			or    GeneralLedgerEvent = "BD"
			or    GeneralLedgerEvent = "LR"
			or    GeneralLedgerEvent = "PJ"
			or    GeneralLedgerEvent = "PL"
			or    GeneralLedgerEvent = "RI")
#ifdef module ap
		RecordEligibleForFES
			restricted
			when (FinanceEnterpriseGroup.FrontEndSplits
			and not CreatedByFES
			and (TransactionAmount != 0
			or (TransactionAmount = 0 
			and UnitsAmount entered))
			and FinanceDimension2 not entered
			and Billed.Unprocessed
			and RevenueRecognized.Unprocessed
			and	Project entered
			and !Project.ExcludeFromFES
			and Project.first FESProjectShadowContractRel.SummaryProject.ProjectContract.FrontEndSplits)
#endif

#ifdef module cam
		CustodialProcessingSystems
			restricted
			when (System 	!= "CB"
			and   System	!= "AP"
			and   System 	!= "AR")
#endif

		PendingFESGLInterfaceTransactions
			when (Project.ParentDisplayContract entered
			and	  Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled	
			and   !Project.ExcludeFromFES
			and   FinanceDimension2 != blank)
		
		StatusForResetAllErrors
			when (Status.Error
			or    Status.BudgetEdit)

 	Field Rules
 		Ledger
 			initial value is FinanceEnterpriseGroup.CoreLedger
 			default to FinanceEnterpriseGroup.CoreLedger
 			if(Ledger.CurrencyLedger)
				constraint (GeneralLedgerEvent	= "GR" or GeneralLedgerEvent = "CT")
					"InvalidGlobalLedgerEventForCurrencyLedger"
					
 		AccountingEntity
			if (AccountingEntity.ValidSystems entered
			and !GLProcessingSystems)
				constraint (System within AccountingEntity.ValidSystems)
					"InvalidSystemFor<FinanceEnterpriseGroup.AccountingEntityLabel>"
 			required
 		OrganizationCode
 			if (ToAccountingEntity entered)
 				cannot be entered
 					"CannotEnterBoth_Organization_CodeAnd_To<FinanceEnterpriseGroup.AccountingEntityLabel>"
 			else
 				required

 			OrganizationCode		     = DerivedOrganizationCode
			LocalOrgCode				 = OrganizationCode
			LocalEntity.AccountingEntity = LocalOrgCode.AccountingEntity
			if (LocalEntity.AccountingEntity.ValidSystems entered
			and !GLProcessingSystems)
				constraint (System within LocalEntity.AccountingEntity.ValidSystems)
					"InvalidSystemForOrganization<FinanceEnterpriseGroup.AccountingEntityLabel>"
					
 		ToAccountingEntity
 			if (OrganizationCode entered)
				cannot be entered
 					"CannotEnterBoth_Organization_CodeAnd_To<FinanceEnterpriseGroup.AccountingEntityLabel>"
 			else
 				default to AccountingEntity
 				required 				
 		AccountingUnit
 			if (OrganizationCode entered)
				cannot be entered
 					"CannotEnterBoth_Organization_CodeAnd<FinanceEnterpriseGroup.AccountingUnitLabel>" 	
 		AccountCode
 			required





		CurrencyCode
			default to AccountingEntity.FunctionalCurrency
		PostingDate
			if (!Ledger entered)
				LocalLedger					= FinanceEnterpriseGroup.CoreLedger
			else
				LocalLedger					= Ledger
			LocalEndDate				= DerivedEntityCalendarPeriod
			constraint (LocalLedger exists)
				"LedgerDoesNotExist"
			constraint (AccountingEntity exists)
				"<FinanceEnterpriseGroup.AccountingEntityLabel>DoesNotExist"

			LocalClosePeriod	 = first EntityLedgerPeriodRel.GeneralLedgerClosePeriod
			LocalPeriodEndDate   = AssumedEntityLedgerPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
			LocalJulianAlpha	 = AssumedEntityLedgerPeriodRel.GeneralLedgerClosePeriod.BeginDate
			
			constraint (PostingDate >= DerivedBeginGregorian
			and        PostingDate <= LocalPeriodEndDate)
				"NoPeriodExistsFor_Posting_Date<PostingDate>"				

			constraint (AssumedEntityLedgerPeriodRel.PeriodStatus.Open
			or			AssumedEntityLedgerPeriodRel.PeriodStatus.Backpost)
				"<FinanceEnterpriseGroup.AccountingEntityLabel>PeriodIsClosed"
				
			required

		TransactionDate
			default to current corporate date
		GeneralLedgerEvent
			default to "JE"
		System
			default to "GL"
		ReportCurrencyAmount

			if (!TransactionAmount entered)
				if  (Ledger.CurrencyLedger
				and (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount entered
				or	 ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount entered))
					LocalEventCode	= "GR"
					constraint (GeneralLedgerEvent	= LocalEventCode)
						"CurrencyLedgerWithoutTransactionAmountRequires<LocalEventCode>GlobalLedgerEvent"

		Project
			constraint (Project.ProjectType.Posting)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBePostingType"	

		Billed
			constraint (Project entered)
				"BilledCannotBeEnteredWithout<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (Project.Billable)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBeBillable"

		RevenueRecognized	
			constraint (Project entered)
				"RevenueRecognizedCannotBeEnteredWithout<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (Project.Billable)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBeBillable"

		Capitalize		
			constraint (Project entered)
				"CapitalizeCannotBeEnteredWithout<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (Project.Capital)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBeCapital"

		LaborDistribution
			if (LaborDistribution.Distributed)
				constraint (Project entered)
					"LaborDistributionCannotBeDistributedWithout<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (Resource entered)
				"LaborDistributionCannotBeEnteredWithoutResource"
		
		APPaid
			constraint (Project entered)
				"AP_PaidCannotBeEnteredWithout<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (Project.Billable)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBeBillable"
		
		IndirectBurden
			constraint (Project entered)
				"IndirectBurdenCannotBeEnteredWithout<FinanceEnterpriseGroup.ProjectLabel>"

		CreatedByFES
			if (CreatedByFES
			and	action type.Update
			and (OrganizationCode	changed
			or	ToAccountingEntity	changed
			or	AccountingUnit		changed
			or	AccountCode			changed
			or	Project				changed
			or	FinanceDimension1	changed
			or	FinanceDimension2	changed
			or	FinanceDimension3	changed
			or	FinanceDimension4	changed
			or	FinanceDimension5	changed
			or	FinanceDimension6	changed
			or	FinanceDimension7	changed
			or	FinanceDimension8	changed
			or	FinanceDimension9	changed
			or	FinanceDimension10	changed
			or	TransactionAmount	changed))
				confirmation required
					"OverrideFrontEndSplit?"
				FESManuallyUpdated = true

	Rule Blocks
	
		CheckCodeBlockChanges
			LocalJournalCodeBlockUpdated = false
			if (OrganizationCode	changed
			or	ToAccountingEntity	changed
			or	AccountingUnit		changed
			or	AccountCode			changed

			or	Project				changed
			or	FinanceDimension1	changed
			or	FinanceDimension2	changed
			or	FinanceDimension3	changed
			or	FinanceDimension4	changed
			or	FinanceDimension5	changed
			or	FinanceDimension6	changed
			or	FinanceDimension7	changed
			or	FinanceDimension8	changed
			or	FinanceDimension9	changed
			or	FinanceDimension10	changed)
				LocalJournalCodeBlockUpdated = true

		ReduceFESCommitments
			if (!FESExcludedEvent
			and  Project entered
			and  FinanceDimension2 entered
			and  FinanceEnterpriseGroup.FrontEndSplits
			and  FinanceEnterpriseGroup.UseFundedAmounts
			and !Project.ExcludeFromFES
			and  Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled
			and  TransactionAmount entered
			and  CurrencyCode = Project.Currency)
				LocalFESAmount = TransactionAmount * -1
				if (LocalFESAmount entered)
					invoke UpdateFESExpenditures ProjectFundingSourceRel
						invoked.Commitment									= true
						invoked.TransactionDate								= TransactionDate
						invoked.FinanceCodeBlock.Ledger						= Ledger
						invoked.FinanceCodeBlock.ToAccountingEntity			= ToAccountingEntity
						invoked.FinanceCodeBlock.AccountingUnit				= AccountingUnit
						invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= AccountCode
						invoked.FinanceCodeBlock.Project					= Project
						invoked.FinanceCodeBlock.FinanceDimension1			= FinanceDimension1
						invoked.FinanceCodeBlock.FinanceDimension2			= FinanceDimension2
						invoked.FinanceCodeBlock.FinanceDimension3			= FinanceDimension3
						invoked.FinanceCodeBlock.FinanceDimension4			= FinanceDimension4
						invoked.FinanceCodeBlock.FinanceDimension5			= FinanceDimension5
						invoked.FinanceCodeBlock.FinanceDimension6			= FinanceDimension6
						invoked.FinanceCodeBlock.FinanceDimension7			= FinanceDimension7
						invoked.FinanceCodeBlock.FinanceDimension8			= FinanceDimension8
						invoked.FinanceCodeBlock.FinanceDimension9			= FinanceDimension9
						invoked.FinanceCodeBlock.FinanceDimension10			= FinanceDimension10					
						invoked.Amount										= LocalFESAmount

 	Actions
 	
 		InterfaceRunGroupByEntity is an Instance Action
        	run in background

			Parameters
				FinanceEnterpriseGroup
				RunGroup				    is AlphaUpper 30
				PartialUpdate               is Boolean
				MoveErrorsToNewRunGroup     is Boolean
				JournalizeByEntity          is Boolean
				ErrorRunGroupPrefix         is AlphaUpper size 15
				JournalByJournalCode
				BypassOrganizationCode      is Boolean
				BypassAccountCode           is Boolean
				BypassStructureRelationEdit
				InterfaceInDetail           is Boolean
				CurrencyTable
				BypassNegativeRateEdit
				EditOnly                    is Boolean
				EditAndInterface            is Boolean
					default label is untranslatable:"EditAndInterfaceIfNoErrors"
				PrimaryLedger				is a Ledger	

			Parameter Rules
				FinanceEnterpriseGroup
					required
				RunGroup
					required
				PartialUpdate
					constraint (not EditAndInterface)
						"Partial_UpdateNotValidWith_Edit_And_InterfaceOption"
				JournalizeByEntity
					initial value is true
				BypassOrganizationCode
					if (FinanceEnterpriseGroup.first GeneralLedgerOrganizationCode set not exists)
						BypassOrganizationCode = true
					initial value is actor.context.FinanceEnterpriseGroup.NoOrgCodesExist
				BypassAccountCode
					if (FinanceEnterpriseGroup.first GeneralLedgerAccountCode set not exists)
						BypassAccountCode = true
					initial value is actor.context.FinanceEnterpriseGroup.NoAccountCodesExist
				EditAndInterface
					constraint (not EditOnly)
						"Edit_And_InterfaceOptionNotValidWith_Edit_Only_No_Update"	
				MoveErrorsToNewRunGroup
					constraint (PartialUpdate)
						"CannotMoveErrorsToNewRunGroupUnless_Partial_UpdateIsSpecified"		
				CurrencyTable
					initial value is actor.context.FinanceEnterpriseGroup.CurrencyTable
					default to actor.context.FinanceEnterpriseGroup.CurrencyTable						
				
			Action Rules
				LocalTransactionInterface.RunGroup = RunGroup

				for each distinct AccountingEntity in GLTransInterfaceEntityRel
					invoke InterfaceTransactions GLTransactionInterface in background
							invoked.PrmEnterpriseGroup		    = FinanceEnterpriseGroup
							invoked.PrmRunGroup					= RunGroup		
							invoked.PrmAccountingEntity         = each.AccountingEntity
							invoked.PrmJournalizeByEntity 		= JournalizeByEntity
							invoked.PrmByPassOrganizationCode 	= BypassOrganizationCode
							invoked.PrmByPassAccountCode 		= BypassAccountCode
							invoked.PrmBypassStructureRelationEdit = BypassStructureRelationEdit
							invoked.PrmJournalByJournalCode 	= JournalByJournalCode
							invoked.PrmPartialUpdate 			= PartialUpdate
							invoked.PrmMoveErrorsToNewRunGroup 	= MoveErrorsToNewRunGroup
							invoked.PrmErrorRunGroupPrefix 		= ErrorRunGroupPrefix
							invoked.PrmInterfaceInDetail 		= InterfaceInDetail
							invoked.PrmCurrencyTable 			= CurrencyTable
							invoked.PrmJournalizeByEntity 		= JournalizeByEntity
							invoked.PrmBypassNegativeRateEdit 	= BypassNegativeRateEdit
							invoked.PrmEditOnly 				= EditOnly
							invoked.PrmEditAndInterface 		= EditAndInterface
							invoked.PrmPrimaryLedger			= PrimaryLedger
 		










































		CopyRunGroup is a Set Action

			completion message is "CopyComplete:<CopyFromRunGroup>CopiedTo<CopyToRunGroup>"
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				CopyFromRunGroup				is AlphaUpper 30
				CopyToRunGroup					is AlphaUpper 30
				NewPostingDate					is Date
				NewTransactionDate				is Date

			Parameter Rules
				PrmEnterpriseGroup
					required
				CopyFromRunGroup
					required
				CopyToRunGroup
					constraint (CopyToRunGroup	!= CopyFromRunGroup)
						"Copy_To_Run_GroupCannotBeTheSameAs_Copy_From_Run_Group"
					required
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmEnterpriseGroup
				and    GLTransactionInterface.RunGroup	= CopyFromRunGroup)
				
			Action Rules
				Empty Set Rules
					constraint (false)
						"NoRecordsFoundForCopyFromRunGroup<CopyFromRunGroup>"

				Set Rules
				
				Instance Rules
					LocalTransactionInterface.RunGroup			= CopyToRunGroup
					LocalTransactionInterface.SequenceNumber	= GLTransactionInterface.SequenceNumber
					if (!GLTransactionInterfaceRel exists)		
						invoke CreateFromCopy Unreleased GLTransactionInterface
							fill in fields from this instance
								except invoked.ErrorMessage
							invoked.GLTransactionInterface.RunGroup		= CopyToRunGroup
							if (NewPostingDate entered)
								invoked.PostingDate 					= NewPostingDate
							if (NewTransactionDate entered)
								invoked.TransactionDate					= NewTransactionDate
					else
						constraint (!GLTransactionInterfaceRel exists)		
							"CannotCopy,RecordsExistforCopyToRunGroup<CopyToRunGroup>"

		DeleteAllTransactionsForRunGroup is a Set Action
			confirmation required
		
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"
			
			Parameter Rules
				PrmRunGroup
					required			
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalRunGroup 				= PrmRunGroup
					constraint (!GLTransactionDetailRel exists)
						"CannotDelete,JournalizeNotCompleteForThisRunGroup"
					constraint(BudgetErrorsForRunGroupRel not exists)
						"BudgetErrorExistsForRunGroup<PrmRunGroup>;Perform_\Reset_\All_\ErrorsActionBeforeDeletingTransactions"
							
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
				and    GLTransactionInterface.RunGroup	= PrmRunGroup
				and   (Status.Unreleased
				or     Status.Error))
				
			Action Rules
			
				Instance Rules
					if (Status.Unreleased)
						invoke Delete Unreleased this instance
					else
						invoke Delete Error this instance 
					
#ifdef module integration
		SendConfirmGLTransactionInterfaceNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(ErrorMessage entered)
					LocalMainUserTemplate = "IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_Confirm_ST"
					if(UserTemplateRel exists)
						send ion bod
							bod is SSSJEFailedConfirmBODXML
							bod type is "Confirm.BOD"							
							accounting entity is DerivedAccoutingEntity											
		SendAcknowledgeGLTransactionInterfaceNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(ErrorMessage entered)
					LocalMainUserTemplate = "IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_Acknowledge_ST"	
					if(UserTemplateRel exists)
						send ion bod
							bod is SSJEFailedAckBODXML
							bod type is "Acknowledge.SourceSystemJournalEntry"
							accounting entity is DerivedAccoutingEntity		
		TriggerInterfaceFailedNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
				RestartFlag 			  is Boolean
				PrmTriggerFrom 			  is Alpha size 100
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup" 
			Parameter Rules
				PrmRunGroup
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalRunGroup 				= PrmRunGroup
			Action Rules
				LocalTriggerFrom   			 = PrmTriggerFrom
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 5
					invoked.PrmNoun						= "SourceSystemJournalEntry"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= LocalTriggerFrom
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmMainUserTemplate			= "IONAcknowledgeSourceSystemJournalEntry_GLTransactionInterface_Acknowledge_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if(FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(SenderComponentID entered and SenderLogicalID entered)
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 5
								invoked.Noun 					= "SourceSystemJournalEntry"
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.BODAccountingEntity		= DerivedAccoutingEntity
								invoked.RunGroup				= GLTransactionInterface.RunGroup
								invoked.Reference1			 	= GLTransactionInterface
								invoked.Reference2 				= LocalTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.BODAccountingEntity		= DerivedAccoutingEntity
								invoked.RunGroup				= GLTransactionInterface.RunGroup
								invoked.Reference1			 	= GLTransactionInterface
								invoked.Reference2 				= LocalTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage
						invoke SendConfirmGLTransactionInterfaceNativeLPLBOD
							resume on error
								Error            								= true
								LocalErrorMessage     							= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= LocalErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SSSJEFailedConfirmBODXML
								invoked.BODID								= DerivedFailedConfirmBODID
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SSSJEFailedConfirmBODXML
								invoked.BODID								= DerivedFailedConfirmBODID					
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 5
								invoked.Noun 					= "SourceSystemJournalEntry"
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.BODAccountingEntity		= DerivedAccoutingEntity
								invoked.RunGroup				= GLTransactionInterface.RunGroup
								invoked.Reference1			 	= GLTransactionInterface
								invoked.Reference2 				= LocalTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.BODAccountingEntity		= DerivedAccoutingEntity
								invoked.RunGroup				= GLTransactionInterface.RunGroup
								invoked.Reference1			 	= GLTransactionInterface
								invoked.Reference2 				= LocalTriggerFrom
								initialize invoked.Error			
								initialize invoked.ErrorMessage
						invoke SendAcknowledgeGLTransactionInterfaceNativeLPLBOD
							resume on error
								Error            								= true
								LocalErrorMessage     							= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= LocalErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SSJEFailedAckBODXML
								invoked.BODID								= DerivedSSJEFailedACKBODID
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status								= 3
								invoked.CloseDate							= system current timestamp
								invoked.BODXML								= SSJEFailedAckBODXML
								invoked.BODID								= DerivedSSJEFailedACKBODID
#endif					
		InterfaceTransactions is a Set Action
			completion message is "<LocalCompletionMessage>" //"InterfaceComplete:<PrmRunGroup>"
			valid when (!BudgetGroupExists)

			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmAccountingEntity			is an AccountingEntity
					default label is "AccountingEntity"
				PrmPartialUpdate			is Boolean
					default label is "PartialUpdate"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmJournalizeByEntity		is Boolean
					default label is "JournalizeByEntity"
				PrmJournalByJournalCode		is a JournalByJournalCode
					default label is "JournalByJournalCode"
				PrmByPassOrganizationCode	is Boolean
					default label is "ByPassOrganizationCode"
				PrmByPassAccountCode		is Boolean
					default label is "ByPassAccountCode"
				PrmBypassStructureRelationEdit is Boolean
					default label is "ByPassStructureRelationEdit"
				PrmInterfaceInDetail		is Boolean
					default label is "InterfaceInDetail"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmBypassNegativeRateEdit	is a BypassNegativeRateEdit
					default label is "BypassNegativeRateEdit"
				PrmEditOnly					is Boolean
					default label is "EditOnlyNoUpdate"
				PrmEditAndInterface			is Boolean
					default label is "EditAndInterfaceIfNoErrors"
				PrmBypassProjectDateEdit	is a BypassProjectDateEdit
					default label is "BypassProjectDateEdit"
				PrmBypassProjectEdits		is Boolean				
					default label is "BypassProjectEdits"
				PrmPrimaryLedger			is a Ledger
					default label is "PrimaryLedger"	
					
			Parameter Rules
				PrmRunGroup
					required
					LocalFinanceEnterpriseGroup	= PrmEnterpriseGroup
					LocalSetFEG					= PrmEnterpriseGroup
					LocalRunGroup				= PrmRunGroup
					constraint (!ErrorsInRunGroupRel exists)
						"FixOrRun_\Reset_\All_\ErrorsBeforeInterfacing_Run_Group<PrmRunGroup>"					
					constraint (!BudgetEditInRunGroupRel exists)			
						"Run_\Reset_\All_\ErrorsToClear_\Budget_\EditRecordsBeforeInterfacing_Run_Group<PrmRunGroup>"		
				PrmByPassOrganizationCode
					initial value is actor.context.FinanceEnterpriseGroup.NoOrgCodesExist
					if (!PrmEnterpriseGroup.GeneralLedgerOrganizationCode set exists)
						PrmByPassOrganizationCode = true
				PrmByPassAccountCode
					initial value is actor.context.FinanceEnterpriseGroup.NoAccountCodesExist
					initial value is true
					if (!PrmEnterpriseGroup.GeneralLedgerAccountCode set exists)
						PrmByPassAccountCode = true
				PrmJournalizeByEntity
					initial value is true
				PrmCurrencyTable
					initial value is actor.context.FinanceEnterpriseGroup.CurrencyTable
					default to actor.context.FinanceEnterpriseGroup.CurrencyTable
				PrmMoveErrorsToNewRunGroup
					constraint (PrmPartialUpdate)
						"CannotMoveErrorsToNewRunGroupUnless_Partial_UpdateIsSpecified"
				PrmEditAndInterface
					constraint (!PrmEditOnly)
						"Edit_And_InterfaceOptionNotValidWith_Edit_Only_No_Update"
				PrmPartialUpdate
					constraint (!PrmEditAndInterface)
						"Partial_UpdateNotValidWith_Edit_And_InterfaceOption"
													
			Local Fields
				EditOnly					is Boolean
				ErrorOccurred				is Boolean
				EntityErrorOccurred			is Boolean
				TransactionError			is Boolean
				LocalErrorMessage			is Alpha 150
				LocalBypassOrganizationCode	is a BypassOrganizationCodeEdit
				LocalAccountingEntity		is an AccountingEntity
				LocalGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
				LocalCompletionMessage		is Alpha 150
				LocalErrorRunGroup			is AlphaUpper 30
				LocalErrorSequence			is Numeric 12
				GoodRecordCount				is Numeric 12
				BudgetRecordCount			is Numeric 12
				PassedTransactionCount		is Numeric 12
				FailedTransactionCount		is Numeric 12
				LocalGLTransactionInterfaceResultView is a GLTransactionInterfaceResult view
				LocalInterfaceBudgetGroupView is a GLInterfaceBudgetGroup view
				LocalInterfaceEntityBudgetGroupView is a GLInterfaceBudgetGroup view
				LocalInterfaceBudgetGroupReference	is BusinessObjectReference
				LocalBudgetEditGroup		is UniqueID				
				PostingDateError			is Boolean
				Dimension1ZoneError			is Boolean
				AccountingUnitZoneError		is Boolean
				CommitNow					is Boolean
				LocalInterfaceLedger		is like Ledger
				LocalGLTransactionDetail	is a GLTransactionDetail view
				LocalFinanceCodeBlock		is a FinanceCodeBlock
				LocalReportCurrencyAmount	is a FinanceCurrencyAmount
				InstanceEndDate				is like GeneralLedgerCalendarPeriod
				LocalPeriodEndDate			is Date

				LocalTransactionCodeBlock	is a TransactionCodeBlock
				LocalCurrencyCalc			is Boolean
				LocalAsyncId				is an AsyncActionRequest
				LocalBackgroundGroup		is AlphaUpper 25
				LocalForEachSumFESAmount	is an InternationalAmount
				LocalFESExecuted			is Boolean
				LocalTransactionAmount		is an InternationalAmount
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmEnterpriseGroup
				and    GLTransactionInterface.RunGroup	= PrmRunGroup
				and    Status.Unreleased
				and    ((PrmAccountingEntity entered 
				and     AccountingEntity				= PrmAccountingEntity)
				or      !PrmAccountingEntity entered))

			Sort Order
				FinanceEnterpriseGroup
				GLTransactionInterface.RunGroup
				Status
				AccountingEntity
				Ledger
				PostingDate
				System
				OrganizationCode
				FinanceDimension1
				AccountCode
				GLTransactionInterface.SequenceNumber

			Accumulators

			Rule Blocks
				BudgetUpdateGroupTotalsProcess
					if (!TransactionError)
						LocalReportCurrencyAmount	= LocalGLTransactionDetail.ReportCurrencyAmount
						LocalFinanceCodeBlock		= LocalGLTransactionDetail.FinanceCodeBlock
						LocalLedger					= LocalFinanceCodeBlock.Ledger
						LocalInstAccountingEntity	= LocalFinanceCodeBlock.ToAccountingEntity
						if  (BudgetEntityLedgerRel exists
						and (System.EncumbranceOption.Track
						or   System.EncumbranceOption.TrackAndEdit))
							if (PrmAccountingEntity entered
							or  PrmJournalizeByEntity)
								if (GLInterfaceEntityBudgetGroupRel exists)
									LocalBudgetEditGroup	= GLInterfaceEntityBudgetGroupRel.UniqueID
								else
									LocalBudgetEditGroup	= LocalInterfaceEntityBudgetGroupView.UniqueID										
							else
								if (GLInterfaceBudgetGroupRel exists)
									LocalBudgetEditGroup	= GLInterfaceBudgetGroupRel.UniqueID
								else
									LocalBudgetEditGroup	= LocalInterfaceBudgetGroupView.UniqueID
							invoke UpdateGroupTotals BudgetTemplate
								invoked.PrmFinanceEnterpriseGroup							= FinanceEnterpriseGroup
								invoked.PrmBudgetEditGroup									= LocalBudgetEditGroup
								invoked.PrmTransactionCodeBlock.ToAccountingEntity			= LocalFinanceCodeBlock.ToAccountingEntity
								invoked.PrmTransactionCodeBlock.AccountingUnit				= LocalFinanceCodeBlock.AccountingUnit
								invoked.PrmTransactionCodeBlock.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
								invoked.PrmTransactionCodeBlock.Project						= LocalFinanceCodeBlock.Project
								invoked.PrmTransactionCodeBlock.FinanceDimension1			= LocalFinanceCodeBlock.FinanceDimension1
								invoked.PrmTransactionCodeBlock.FinanceDimension2			= LocalFinanceCodeBlock.FinanceDimension2
								invoked.PrmTransactionCodeBlock.FinanceDimension3			= LocalFinanceCodeBlock.FinanceDimension3
								invoked.PrmTransactionCodeBlock.FinanceDimension4			= LocalFinanceCodeBlock.FinanceDimension4
								invoked.PrmTransactionCodeBlock.FinanceDimension5			= LocalFinanceCodeBlock.FinanceDimension5
								invoked.PrmTransactionCodeBlock.FinanceDimension6			= LocalFinanceCodeBlock.FinanceDimension6
								invoked.PrmTransactionCodeBlock.FinanceDimension7			= LocalFinanceCodeBlock.FinanceDimension7
								invoked.PrmTransactionCodeBlock.FinanceDimension8			= LocalFinanceCodeBlock.FinanceDimension8
								invoked.PrmTransactionCodeBlock.FinanceDimension9			= LocalFinanceCodeBlock.FinanceDimension9
								invoked.PrmTransactionCodeBlock.FinanceDimension10			= LocalFinanceCodeBlock.FinanceDimension10
								invoked.PrmTransactionCodeBlock.Ledger						= LocalFinanceCodeBlock.Ledger
								invoked.PrmEndDate								= InstanceEndDate
								invoked.PrmReportAmounts.ProjectAmount			= LocalReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
								invoked.PrmReportAmounts.ReportAmount1			= LocalReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
								invoked.PrmReportAmounts.ReportAmount2			= LocalReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
								invoked.PrmReportAmounts.ReportAmount3			= LocalReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
								invoked.PrmReportAmounts.ReportAmount4			= LocalReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
								invoked.PrmReportAmounts.ReportAmount5			= LocalReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
								if (AccountingEntity = LocalFinanceCodeBlock.ToAccountingEntity)
									invoked.PrmReportAmounts.FunctionalAmount	= LocalReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount	= LocalReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount2	= LocalReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount3	= LocalReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
								else
									invoked.PrmReportAmounts.FunctionalAmount	= LocalReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount	= LocalReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount2	= LocalReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
									invoked.PrmReportAmounts.AlternateAmount3	= LocalReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
								invoked.PrmOriginatingDocument   				= reference to LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
							Status	= Status.BudgetEdit
							BudgetRecordCount += 1

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						if (!System.EncumbranceOption.NotUsed)		
							PrmJournalizeByEntity = true			

					Exit Rules	
						if (ErrorOccurred)
							if (!PrmPartialUpdate)
								LocalCompletionMessage = PrmEnterpriseGroup.InterfaceIncompleteMessage
							else
								LocalCompletionMessage = PrmEnterpriseGroup.InterfaceErrorsMovedMessage
								LocalCompletionMessage += (" " + LocalErrorRunGroup)
						else	
							LocalCompletionMessage = PrmEnterpriseGroup.InterfaceCompleteMessage
							if (PrmEditAndInterface)
								LocalAsyncId = current async action request id
								invoke InterfaceTransactions GLTransactionInterface
									run after LocalAsyncId
									invoked.PrmEnterpriseGroup  		= PrmEnterpriseGroup
									invoked.PrmRunGroup					= PrmRunGroup
									invoked.PrmAccountingEntity 		= PrmAccountingEntity
									invoked.PrmPartialUpdate			= PrmPartialUpdate
									invoked.PrmMoveErrorsToNewRunGroup	= PrmMoveErrorsToNewRunGroup
									invoked.PrmErrorRunGroupPrefix		= PrmErrorRunGroupPrefix
									invoked.PrmJournalizeByEntity		= PrmJournalizeByEntity
									invoked.PrmJournalByJournalCode 	= PrmJournalByJournalCode
									invoked.PrmByPassOrganizationCode 	= PrmByPassOrganizationCode
									invoked.PrmByPassAccountCode		= PrmByPassAccountCode
									invoked.PrmBypassStructureRelationEdit = PrmBypassStructureRelationEdit
									invoked.PrmInterfaceInDetail		= PrmInterfaceInDetail
									invoked.PrmCurrencyTable			= PrmCurrencyTable
									invoked.PrmBypassNegativeRateEdit 	= PrmBypassNegativeRateEdit
									invoked.PrmPrimaryLedger			= PrmPrimaryLedger

				FinanceEnterpriseGroup Set Rules
					Entrance Rules
						ErrorOccurred			= false
						LocalBypassOrganizationCode	= PrmByPassOrganizationCode
						BypassStructureRelationEdit = PrmBypassStructureRelationEdit
						if (PrmEditOnly
						or  PrmEditAndInterface)
							EditOnly = true	
						if (CurrExchangeRateRel exists)
							PrmCurrencyTable = CurrExchangeRateRel.CurrencyTable	
						invoke Create GLTransactionInterfaceResult
							assign result to LocalGLTransactionInterfaceResultView
							invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.RunTime				   = current timestamp
							invoked.RunGroup			   = PrmRunGroup
							invoked.EditOnly			   = EditOnly
							invoked.PartialUpdate		   = PrmPartialUpdate

						if (!PrmAccountingEntity entered
						and !PrmJournalizeByEntity
						and !EditOnly)
							if (AnyBudgetEntityLedgersExist)
								if (!GLInterfaceBudgetGroupRel exists)
									invoke Create GLInterfaceBudgetGroup
										assign result to LocalInterfaceBudgetGroupView
										invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
										invoked.GLInterfaceBudgetGroup.RunGroup			= PrmRunGroup
										invoked.BypassStructureRelationEdit 			= PrmBypassStructureRelationEdit
										invoked.OriginatingInterfaceRun	   				= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
										invoked.InterfaceInDetail		   				= PrmInterfaceInDetail
										invoked.ErrorRunGroupPrefix						= PrmErrorRunGroupPrefix
										invoked.MoveErrorsToNewRunGroup					= PrmMoveErrorsToNewRunGroup
							            invoked.TransAutoReverseDate                    = AutoReverseDate
										invoked.PrimaryLedger							= PrmPrimaryLedger
								else
									invoke Update GLInterfaceBudgetGroupRel
										invoked.BypassStructureRelationEdit 			= PrmBypassStructureRelationEdit
										invoked.OriginatingInterfaceRun	   				= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
										invoked.InterfaceInDetail		   				= PrmInterfaceInDetail
										invoked.ErrorRunGroupPrefix						= PrmErrorRunGroupPrefix
										invoked.MoveErrorsToNewRunGroup					= PrmMoveErrorsToNewRunGroup
										invoked.ErrorRunGroup							= blank
										invoked.TransAutoReverseDate                    = AutoReverseDate
										invoked.PrimaryLedger							= PrmPrimaryLedger									
									LocalInterfaceBudgetGroupView						= GLInterfaceBudgetGroupRel.GLInterfaceBudgetGroup
							            
						Dimension1ZoneError = false
						initialize LocalErrorMessage
						
						if (FinanceEnterpriseGroup.Dimension1ZoneBalancing)
							if (!DefaultZoneFinanceDimension1Rel exists)
								Dimension1ZoneError = true
								LocalErrorMessage 	= Dimension1BaseZoneNotDefinedMessage
					
					Exit Rules
						LocalFinanceEnterpriseGroup = FinanceEnterpriseGroup
						LocalRunGroup 				= PrmRunGroup
						if (!EditOnly)
							if (GLTransactionDetailRel exists)				
								if (!ErrorOccurred
								or  PrmPartialUpdate)
									if (!PrmAccountingEntity entered
									and !PrmJournalizeByEntity)	
										if (BudgetRecordCount > 0)
											if (GLInterfaceBudgetGroupRel exists)
												LocalBudgetEditGroup	= GLInterfaceBudgetGroupRel.UniqueID
											else
												LocalBudgetEditGroup	= LocalInterfaceBudgetGroupView.UniqueID										

											invoke EditTotalsRoute BudgetTemplateGroupTotal in background
												run outside of action background group
												run after current action background group
												invoked.PrmFinanceEnterpriseGroup							= PrmEnterpriseGroup
												invoked.PrmBudgetEditGroup									= LocalBudgetEditGroup
												if (System.EncumbranceOption.TrackAndEdit)
													invoked.PrmMode							= BudgetEditMode.Hard
												else
													invoked.PrmMode							= BudgetEditMode.UpdateOnly
												invoked.PrmBudgetEditCallBack.BudgetEditCallBackReference	= reference to GLInterfaceBudgetGroupRel
												invoked.PrmBusinessClassName				= "GLTransactionInterface"
												invoked.PrmEditContext						= "InterfaceTransactions_FEGExitRule"
										else
											invoke JournalizeTransactions GLTransactionDetail in background
												invoked.PrmEnterpriseGroup			   = PrmEnterpriseGroup
												invoked.PrmJournalizeGroup			   = PrmRunGroup
												invoked.PrmBypassStructureRelationEdit = PrmBypassStructureRelationEdit
												invoked.PrmOriginatingInterfaceRun	   = LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
												invoked.PrmInterfaceInDetail		   = PrmInterfaceInDetail
												invoked.PrmCurrencyTable			   = PrmCurrencyTable
							                    invoked.PrmAutoReverseDate             = AutoReverseDate
							                    invoked.PrmPrimaryLedger			   = PrmPrimaryLedger	                    												
						invoke Update LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
							invoked.PassedCount		  = PassedTransactionCount
							invoked.FailedCount		  = FailedTransactionCount
							if (ErrorOccurred)
								invoked.Status 		  = 2
								invoked.ErrorRunGroup = LocalErrorRunGroup
							else

								invoked.TransientSenderLogicalID        = SenderLogicalID
								invoked.TransientSenderComponentID      = SenderComponentID
								invoked.TransientSenderCreationDateTime = SenderCreationDateTime
								invoked.TransientSenderBODID            = SenderBODID
								invoked.TransientSenderOriginalBOD      = SenderOriginalBOD
								invoked.TransientAccountingEntity		= AccountingEntity

								invoked.Status        = 1
#ifdef module cb			
						if (FinanceEnterpriseGroup.FundAccounting
						and LocalInterfaceResult entered)
							invoke Delete CashCodeFundEditRel
#endif		      
#ifdef module cam
						if (FinanceEnterpriseGroup.CustodialAccountManagement
						and LocalInterfaceResult entered)
							invoke Delete CustodialAccountEditRel
#endif		      

				AccountingEntity Set Rules
					Entrance Rules
						AccountingUnitZoneError = false
						
						if (!Dimension1ZoneError)
							if (AccountingEntity.AccountingUnitZoneBalancing)
								if (!DefaultZoneAccountingUnitRel exists)
									AccountingUnitZoneError = true
									LocalErrorMessage		= AccountingUnitBaseZoneNotDefinedMessage
									
						if (Dimension1ZoneError
						or  AccountingUnitZoneError)
							EntityErrorOccurred   = true
						else
							EntityErrorOccurred	  = false
						
						LocalAccountingEntity = AccountingEntity
						
						if (PrmAccountingEntity entered
						or  PrmJournalizeByEntity
						and !EditOnly)
							if (AnyBudgetEntityLedgersExist)
								if (!GLInterfaceEntityBudgetGroupRel exists)
									invoke Create GLInterfaceBudgetGroup
										assign result to LocalInterfaceEntityBudgetGroupView
										invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
										invoked.GLInterfaceBudgetGroup.RunGroup			= PrmRunGroup
										invoked.GLInterfaceBudgetGroup.Entity			= LocalAccountingEntity
										invoked.BypassStructureRelationEdit 			= PrmBypassStructureRelationEdit
										invoked.OriginatingInterfaceRun	   				= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
										invoked.InterfaceInDetail		   				= PrmInterfaceInDetail
										invoked.ErrorRunGroupPrefix						= PrmErrorRunGroupPrefix
										invoked.MoveErrorsToNewRunGroup					= PrmMoveErrorsToNewRunGroup
							            invoked.TransAutoReverseDate                    = AutoReverseDate
										invoked.PrimaryLedger							= PrmPrimaryLedger										
								else
									invoke Update GLInterfaceEntityBudgetGroupRel
										assign result to LocalInterfaceEntityBudgetGroupView
										invoked.BypassStructureRelationEdit 			= PrmBypassStructureRelationEdit
										invoked.OriginatingInterfaceRun	   				= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
										invoked.InterfaceInDetail		   				= PrmInterfaceInDetail
										invoked.ErrorRunGroupPrefix						= PrmErrorRunGroupPrefix
										invoked.MoveErrorsToNewRunGroup					= PrmMoveErrorsToNewRunGroup
										invoked.ErrorRunGroup							= blank
							            invoked.TransAutoReverseDate                    = AutoReverseDate	
										invoked.PrimaryLedger							= PrmPrimaryLedger									

					
					Exit Rules
						LocalFinanceEnterpriseGroup = FinanceEnterpriseGroup
						LocalRunGroup 				= PrmRunGroup
						LocalGLTDEntity 			= LocalAccountingEntity
						if (!EditOnly)
							if (GLTransactionDetailForEntityRel exists)
								if (!EntityErrorOccurred
								or  PrmPartialUpdate)
									if (PrmAccountingEntity entered
									or  PrmJournalizeByEntity)
										if (BudgetRecordCount > 0)
											if (GLInterfaceEntityBudgetGroupRel exists)
												LocalBudgetEditGroup	= GLInterfaceEntityBudgetGroupRel.UniqueID
											else
												LocalBudgetEditGroup	= LocalInterfaceEntityBudgetGroupView.UniqueID										

											invoke EditTotalsRoute BudgetTemplateGroupTotal in background
												run outside of action background group
												run after current action background group
												invoked.PrmFinanceEnterpriseGroup							= FinanceEnterpriseGroup
												invoked.PrmBudgetEditGroup									= LocalBudgetEditGroup
												if (System.EncumbranceOption.TrackAndEdit)
													invoked.PrmMode							= BudgetEditMode.Hard
												else
													invoked.PrmMode							= BudgetEditMode.UpdateOnly
												invoked.PrmBusinessClassName				= "GLTransactionInterface"
												invoked.PrmEditContext						= "InterfaceTransactions_EntityExitRule"
												if (GLInterfaceEntityBudgetGroupRel exists)
													invoked.PrmBudgetEditCallBack.BudgetEditCallBackReference	= reference to GLInterfaceEntityBudgetGroupRel
												else
													invoked.PrmBudgetEditCallBack.BudgetEditCallBackReference	= reference to LocalInterfaceEntityBudgetGroupView.GLInterfaceBudgetGroup
												invoked.PrmBudgetEditCallBack.AutoReverseDate                   = AutoReverseDate	
												invoked.PrmCurrencyTable										= PrmCurrencyTable
										else
							                LocalBackgroundGroup = "Journalize" + LocalAccountingEntity	
							                invoke JournalizeTransactions GLTransactionDetail in background 
							                    invoked.PrmEnterpriseGroup            = FinanceEnterpriseGroup
							                    invoked.PrmJournalizeGroup            = PrmRunGroup
							                    invoked.PrmAccountingEntity           = LocalAccountingEntity
							                    invoked.PrmOriginatingInterfaceRun    = LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
							                    invoked.PrmInterfaceInDetail          = PrmInterfaceInDetail
							                    invoked.PrmCurrencyTable			  = PrmCurrencyTable
							                    invoked.PrmAutoReverseDate            = AutoReverseDate	
							                    invoked.PrmPrimaryLedger			  = PrmPrimaryLedger									






											GoodRecordCount = 0

									CommitNow			= true
								
				PostingDate Set Rules
					Entrance Rules
						
						if (!Ledger entered)
							LocalLedger				= FinanceEnterpriseGroup.CoreLedger
						else
							LocalLedger				= Ledger
						LocalInterfaceLedger		= LocalLedger
						PostingDateError			= false
						
						if (!Dimension1ZoneError
						and !AccountingUnitZoneError)
							initialize LocalErrorMessage
													
						if (!PostingDate entered)
							PostingDateError		= true
							if (!LocalErrorMessage entered)
								LocalErrorMessage	= PostingDateRequiredMessage
						else
							LocalEndDate			= DerivedEntityCalendarPeriod
							InstanceEndDate			= LocalEndDate

							LocalClosePeriod	 = first EntityLedgerPeriodRel.GeneralLedgerClosePeriod
							LocalPeriodEndDate   = AssumedEntityLedgerPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
							LocalJulianAlpha	 = AssumedEntityLedgerPeriodRel.GeneralLedgerClosePeriod.BeginDate
			
							if (PostingDate < DerivedBeginGregorian
							or  PostingDate > LocalPeriodEndDate)
								PostingDateError	= true
								LocalErrorMessage	= PostingDateNoPeriodErrorMessage
							else
								if (!AssumedEntityLedgerPeriodRel.PeriodStatus.Open
								and	!AssumedEntityLedgerPeriodRel.PeriodStatus.Backpost)
									PostingDateError	= true
									LocalErrorMessage	= PostingDateErrorMessage

				Instance Rules
					BypassProjectEdits			= PrmBypassProjectEdits
					LocalEndDate				= InstanceEndDate
					if (CommitNow)
						commit transaction
						CommitNow = false

					if (!System entered)
						System					= "GL"
						
					if (OrganizationCode entered)
						LocalOrganizationCode		= DerivedOrganizationCode
					
					BypassStructureRelationEdit = PrmBypassStructureRelationEdit
					
					if (!PrmByPassAccountCode)
						if (GeneralLedgerAccountCodeRel exists)	
							LocalGeneralLedgerChartAccount	= AccountCode.GeneralLedgerChartAccount
						else
							LocalGeneralLedgerChartAccount	= AccountCode
					else
						LocalGeneralLedgerChartAccount		= AccountCode

					if (Dimension1ZoneError
					or  AccountingUnitZoneError
					or  PostingDateError)
						TransactionError			= true
					else
						TransactionError			= false
						initialize LocalErrorMessage

					if (!TransactionError)
						if (AutoReverseDate entered)
							if (!FinanceEnterpriseGroup.AutoReverseWithinSamePeriod)
								if (AutoReverseDate <= LocalPeriodEndDate)
									TransactionError 	= true
									LocalErrorMessage	= AutoReverseDateErrorMessage
							else
								if (AutoReverseDate <= PostingDate)
									TransactionError 	= true
									LocalErrorMessage	= AutoReverseDatePostingDateErrorMessage

					if (!TransactionError)
					    if (!LocalGeneralLedgerChartAccount	exists)
							TransactionError	= true
							LocalErrorMessage	= AccountErrorMessage
					
					if (!TransactionError)
						if (OrganizationCode entered)
							if (!LocalOrganizationCode.AccountingEntity entered)
								TransactionError	= true
								LocalErrorMessage	= AccountingEntityErrorMessage
							if (ToAccountingEntity entered)
								TransactionError    = true
								LocalErrorMessage   = OrgCodeAccountingEntityErrorMessage
						else
							if (!ToAccountingEntity entered)
								TransactionError	= true
								LocalErrorMessage	= AccountingEntityErrorMessage
												
					if (!TransactionError)
						if (FinanceEnterpriseGroup.AccountingUnitRequired)					
							if (OrganizationCode entered)
								if (!LocalOrganizationCode.AccountingUnit entered)
									TransactionError	= true
									LocalErrorMessage	= AccountingUnitErrorMessage
							else
								if (!AccountingUnit entered)
									TransactionError	= true
									LocalErrorMessage	= AccountingUnitErrorMessage
																						
					if (!TransactionError)
						if (Project entered)
							if (!Project.ProjectType.Posting)
								TransactionError	= true
								LocalErrorMessage	= PostingProjectErrorMessage
							else
							if (!PrmBypassProjectEdits)
								if ((Billed entered
								or   RevenueRecognized entered)
								and !Project.Billable)
									TransactionError	= true
									LocalErrorMessage	= BillableProjectErrorMessage
								else
								if (Capitalize entered
								and !Project.Capital)
									TransactionError	= true
									LocalErrorMessage	= CapitalProjectErrorMessage
								else
								if (LaborDistribution entered
								and Resource not entered)
									TransactionError	= true
									LocalErrorMessage	= ResourceRequiredErrorMessage
						else
							if (!PrmBypassProjectEdits)
								if (Billed entered
								or  RevenueRecognized entered
								or  Capitalize entered
								or  LaborDistribution.Distributed
								or  IndirectBurden entered)
									TransactionError	= true
									LocalErrorMessage	= ProjectRequiredMessage

					if (!TransactionError)
						if (TransactionAmount entered)
							if ((ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount entered)
							or  (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyRate entered
							and !ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered))
								if (OrganizationCode entered)
									LocalTransactionCodeBlock.ToAccountingEntity	= LocalOrganizationCode.AccountingEntity
									LocalTransactionCodeBlock.AccountingUnit		= LocalOrganizationCode.AccountingUnit
								else
									LocalTransactionCodeBlock.ToAccountingEntity	= ToAccountingEntity
									LocalTransactionCodeBlock.AccountingUnit		= AccountingUnit
								LocalTransactionCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
								LocalTransactionCodeBlock.Project					= Project
								LocalTransactionCodeBlock.FinanceDimension1			= FinanceDimension1
								LocalTransactionCodeBlock.FinanceDimension2			= FinanceDimension2
								LocalTransactionCodeBlock.FinanceDimension3			= FinanceDimension3
								LocalTransactionCodeBlock.FinanceDimension4			= FinanceDimension4
								LocalTransactionCodeBlock.FinanceDimension5			= FinanceDimension5
								LocalTransactionCodeBlock.FinanceDimension6			= FinanceDimension6
								LocalTransactionCodeBlock.FinanceDimension7			= FinanceDimension7
								LocalTransactionCodeBlock.FinanceDimension8			= FinanceDimension8
								LocalTransactionCodeBlock.FinanceDimension9			= FinanceDimension9
								LocalTransactionCodeBlock.FinanceDimension10		= FinanceDimension10
								LocalTransactionCodeBlock.Ledger					= LocalInterfaceLedger
	
								ReportCurrencyAmount.UseDerivedCalculations			= true
								LocalCurrencyCalc									= ReportCurrencyAmount.AssignToCurrency
								LocalCurrencyCalc									= ReportCurrencyAmount.DerivedCalculationsComplete
								if  (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyRate
								if  (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.AlternateAmount.EnteredCurrencyRate
								if  (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyRate
								if  (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.AlternateAmount.EnteredCurrencyRate
								if (!AccountingEntity				= LocalOrganizationCode.AccountingEntity)
									if  (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate entered
									and !ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount entered)
										initialize ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyRate
									if  (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate entered
									and !ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount entered)
										initialize ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate
									if  (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate entered
									and !ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount entered)
										initialize ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyRate
									if  (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyRate entered
									and !ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount entered)
										initialize ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyRate
								if (Project entered)
									if  (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyRate entered
									and !ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered)
										initialize ReportCurrencyAmount.ProjectAmount.EnteredCurrencyRate
								if  (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.ReportAmount1.EnteredCurrencyRate
								if  (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.ReportAmount2.EnteredCurrencyRate
								if  (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.ReportAmount3.EnteredCurrencyRate
								if  (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.ReportAmount4.EnteredCurrencyRate
								if  (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyRate entered
								and !ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount entered)
									initialize ReportCurrencyAmount.ReportAmount5.EnteredCurrencyRate
								LocalCurrencyCalc									= ReportCurrencyAmount.DerivedCalculationsComplete
													
#ifdef module ap
					if(FinanceEnterpriseGroup.FrontEndSplits)
						if(!TransactionError
						and RecordEligibleForFES)
							TransactionError	= true
							LocalErrorMessage	= FrontEndSplitRequiredMessage
#endif
#ifdef module cb			
					if (!TransactionError)
						if  (FinanceEnterpriseGroup.FundAccounting
						and (GLProcessingSystems
						or   System.RecordType.User)
						and  LocalGeneralLedgerChartAccount.AccountSubType	= "CASH"
						and (first CashCodeByAccountRel.CashCode.EditAvailableFunds
						or   first CashCodeByAccountRel.CashCode.RestrictedFunds))
							if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
								LocalInterfaceResult	= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult

								if (first CashCodeByAccountRel.CashCode.EditAvailableFunds)
									invoke Update CashCodeFundEditByAccountingUnitRel
										invoked.EditAmount += (TransactionAmount *-1)
								else
									invoke Update CashCodeFundEditByAccountingUnitRel
								if (CashCodeFundEditByAccountingUnitRel.ExceedesFundBalance)
									TransactionError	= true
									LocalErrorMessage	= CashCodeFundEditByAccountingUnitRel.ErrorMessage
									if (first CashCodeByAccountRel.CashCode.EditAvailableFunds)
										invoke Update CashCodeFundEditByAccountingUnitRel
											invoked.EditAmount += TransactionAmount
									else 
										invoke Delete CashCodeFundEditByAccountingUnitRel
							else
								LocalInterfaceResult	= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
								if (first CashCodeByAccountRel.CashCode.EditAvailableFunds)
									invoke Update CashCodeFundEditByDimension1Rel
										invoked.EditAmount += (TransactionAmount *-1)
								else
									invoke Update CashCodeFundEditByDimension1Rel
								if (CashCodeFundEditByDimension1Rel.ExceedesFundBalance)
									TransactionError	= true
									LocalErrorMessage	= CashCodeFundEditByDimension1Rel.ErrorMessage
									if (first CashCodeByAccountRel.CashCode.EditAvailableFunds)
										invoke Update CashCodeFundEditByDimension1Rel
											invoked.EditAmount += TransactionAmount
									else
										invoke Delete CashCodeFundEditByDimension1Rel
#endif		      
#ifdef module cam
					if (!TransactionError)
						if  (FinanceEnterpriseGroup.CustodialAccountManagement
						and  FinanceDimension10 entered
						and  CustodialProcessingSystems
						and  LocalGeneralLedgerChartAccount.AccountSubType	= "CASH")
							if (!CustodialDetailAmountRel exists)
								TransactionError	= true
								LocalErrorMessage	= DetailNotSetupErrorMessage
							else
								if (TransactionAmount < 0
								and !FinanceDimension10.Expendable)
									TransactionError	= true
									LocalErrorMessage	= NotExpendableErrorMessage
								else
									LocalInterfaceResult	= LocalGLTransactionInterfaceResultView.GLTransactionInterfaceResult
									invoke Update CustodialAccountEditByPostingRel
										invoked.EditAmount += (TransactionAmount *-1)
									if (CustodialAccountEditByPostingRel.ExceedsBalance)
										TransactionError	= true
										LocalErrorMessage	= CustodialAccountEditByPostingRel.ErrorMessage
										invoke Update CustodialAccountEditByPostingRel
											invoked.EditAmount += TransactionAmount
#endif

					if (!TransactionError)
						LocalFESExecuted = false
						if (EditOnly)
							invoke Create GLTransactionInterfaceEdit
								resume on error
									TransactionError	= true
									LocalErrorMessage	= error message
								fill in fields from this instance
								invoked.JournalizeGroup								= PrmRunGroup
								if (OrganizationCode entered)
									invoked.FinanceCodeBlock.ToAccountingEntity		= LocalOrganizationCode.AccountingEntity
									invoked.FinanceCodeBlock.AccountingUnit			= LocalOrganizationCode.AccountingUnit
								else
									invoked.FinanceCodeBlock.ToAccountingEntity		= ToAccountingEntity
									invoked.FinanceCodeBlock.AccountingUnit			= AccountingUnit
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
								invoked.FinanceCodeBlock.Project					= Project
								invoked.FinanceCodeBlock.FinanceDimension1			= FinanceDimension1
								invoked.FinanceCodeBlock.FinanceDimension2			= FinanceDimension2
								invoked.FinanceCodeBlock.FinanceDimension3			= FinanceDimension3
								invoked.FinanceCodeBlock.FinanceDimension4			= FinanceDimension4
								invoked.FinanceCodeBlock.FinanceDimension5			= FinanceDimension5
								invoked.FinanceCodeBlock.FinanceDimension6			= FinanceDimension6
								invoked.FinanceCodeBlock.FinanceDimension7			= FinanceDimension7
								invoked.FinanceCodeBlock.FinanceDimension8			= FinanceDimension8
								invoked.FinanceCodeBlock.FinanceDimension9			= FinanceDimension9
								invoked.FinanceCodeBlock.FinanceDimension10			= FinanceDimension10
								invoked.FinanceCodeBlock.Ledger						= LocalInterfaceLedger
								invoked.JournalByJournalCode						= PrmJournalByJournalCode
								invoked.BypassNegativeRateEdit						= PrmBypassNegativeRateEdit
						else
							invoke Create Released GLTransactionDetail
								assign result to LocalGLTransactionDetail
								resume on error
									TransactionError	= true
									LocalErrorMessage	= error message
								fill in fields from this instance

								invoked.JournalizeGroup								= PrmRunGroup
								if (OrganizationCode entered)
									invoked.FinanceCodeBlock.ToAccountingEntity		= LocalOrganizationCode.AccountingEntity
									invoked.FinanceCodeBlock.AccountingUnit			= LocalOrganizationCode.AccountingUnit
								else
									invoked.FinanceCodeBlock.ToAccountingEntity		= ToAccountingEntity
									invoked.FinanceCodeBlock.AccountingUnit			= AccountingUnit
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
								invoked.FinanceCodeBlock.Project					= Project
								invoked.FinanceCodeBlock.FinanceDimension1			= FinanceDimension1
								invoked.FinanceCodeBlock.FinanceDimension2			= FinanceDimension2
								invoked.FinanceCodeBlock.FinanceDimension3			= FinanceDimension3
								invoked.FinanceCodeBlock.FinanceDimension4			= FinanceDimension4
								invoked.FinanceCodeBlock.FinanceDimension5			= FinanceDimension5
								invoked.FinanceCodeBlock.FinanceDimension6			= FinanceDimension6
								invoked.FinanceCodeBlock.FinanceDimension7			= FinanceDimension7
								invoked.FinanceCodeBlock.FinanceDimension8			= FinanceDimension8
								invoked.FinanceCodeBlock.FinanceDimension9			= FinanceDimension9
								invoked.FinanceCodeBlock.FinanceDimension10			= FinanceDimension10
								invoked.FinanceCodeBlock.Ledger						= LocalInterfaceLedger
								invoked.JournalByJournalCode						= PrmJournalByJournalCode
								invoked.BypassNegativeRateEdit						= PrmBypassNegativeRateEdit
								invoked.PrimaryLedger								= PrmPrimaryLedger
								invoked.MigStatus									= MigStatus
									
							if (LocalErrorMessage entered)
								TransactionError = true

							include BudgetUpdateGroupTotalsProcess

					if (TransactionError)
						ErrorOccurred		= true
						EntityErrorOccurred = true
						FailedTransactionCount += 1
						if (!EditOnly)
							if (PrmPartialUpdate
							and PrmMoveErrorsToNewRunGroup)
								if (!LocalErrorRunGroup entered)
									increment PrmEnterpriseGroup.LastErrorRunGroupNumber
									LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmEnterpriseGroup.LastErrorRunGroupNumber

								invoke Update GLInterfaceEntityBudgetGroupRel
									invoked.ErrorRunGroup	= LocalErrorRunGroup
						invoke UpdateError Unreleased this instance 
							invoked.PrmErrorMessage			= LocalErrorMessage
							if (!EditOnly)
								if (PrmPartialUpdate
								and PrmMoveErrorsToNewRunGroup)
									invoked.PrmErrorRunGroup	= LocalErrorRunGroup

					else
						GoodRecordCount += 1
						PassedTransactionCount += 1
						if (!EditOnly)
							if (!Status.BudgetEdit)
								invoke Purge Unreleased this instance 					
				
#ifdef module ap
		FrontEndSplitTransactions is a Set Action
			completion message is "FrontEndSplitTransactionsSubmitted"
			valid when (FrontEndSplitsEnabled)
			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmRunCashOffset			is Boolean
					default label is "RunCreateCashOffsets"
				PrmCashOffsetAccount		is a GeneralLedgerChartAccount
					default label is "CashOffsetAccount"
				PrmInterface				is Boolean
					default label is "Interface"
				PrmAccountingEntity			is an AccountingEntity
					default label is "<PrmEnterpriseGroup.AccountingEntityLabel>"
				PrmEditOnly					is Boolean
					default label is "EditOnlyNoUpdate"
				PrmEditAndInterface			is Boolean
					default label is "EditAndInterfaceIfNoErrors"
				PrmPartialUpdate			is Boolean
					default label is "PartialUpdate"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmJournalizeByEntity		is Boolean
					default label is "JournalizeBy<PrmEnterpriseGroup.AccountingEntityLabel>"
				PrmJournalByJournalCode		is a JournalByJournalCode
					default label is "SplitJournalsByJournalCode"
				PrmByPassOrganizationCode	is Boolean
					default label is "ByPassOrganizationCode"
				PrmByPassAccountCode		is Boolean
					default label is "ByPassAccountCode"
				PrmBypassStructureRelationEdit is Boolean
					default label is "BypassStructureRelationValidation"
				PrmInterfaceInDetail		is Boolean
					default label is "InterfaceInDetail"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmBypassNegativeRateEdit	is a BypassNegativeRateEdit
					default label is "BypassNegativeRateEdit"
				PrmBypassProjectDateEdit	is a BypassProjectDateEdit
					default label is "BypassProjectDateEdit"
				PrmBypassProjectEdits		is Boolean				
					default label is "BypassProjectEdits"
				PrmMoveFrontEndSplitErrorsToErrorGroup is Boolean
    				default label is "MoveFrontEndSplitErrorsToErrorRunGroup"
				PrmMoveCreateOffsetsErrorsToErrorGroup is Boolean
    				default label is "MoveCreateCashOffsetsErrorsToErrorRunGroup"

			Parameter Rules
				PrmRunGroup
					required
					if(PrmInterface)
						LocalFinanceEnterpriseGroup	= PrmEnterpriseGroup
						LocalRunGroup				= PrmRunGroup
						LocalSetFEG					= PrmEnterpriseGroup
						constraint (!ErrorsInRunGroupRel exists)
							"FixOrRun_\Reset_\All_\ErrorsBeforeInterfacing_Run_Group<PrmRunGroup>"
						constraint (!BudgetEditInRunGroupRel exists)			
							"Run_\Reset_\All_\ErrorsToClear_\Budget_\EditRecordsBeforeInterfacing_Run_Group<PrmRunGroup>"		
				PrmCashOffsetAccount
					if(PrmRunCashOffset)
						required
						constraint (PrmCashOffsetAccount.AccountSubType	= "CASH")
							"CashOffsetAccountMustBeAccountSubType_\CASH"
						LocalFinanceEnterpriseGroup = PrmEnterpriseGroup
						LocalRunGroup				= PrmRunGroup
						LocalCashOffsetAccount		= PrmCashOffsetAccount
						constraint (GLInterfaceCashOffsetRel !exists)
							"CashOffsetsAlreadyCreatedForRunGroup<PrmRunGroup>AndCashOffsetAccount<PrmCashOffsetAccount>"
				PrmByPassOrganizationCode
					initial value is actor.context.FinanceEnterpriseGroup.NoOrgCodesExist
					if (!PrmEnterpriseGroup.GeneralLedgerOrganizationCode set exists)
						PrmByPassOrganizationCode = true
				PrmByPassAccountCode
					initial value is actor.context.FinanceEnterpriseGroup.NoAccountCodesExist
					initial value is true
					if (!PrmEnterpriseGroup.GeneralLedgerAccountCode set exists)
						PrmByPassAccountCode = true
				PrmJournalizeByEntity
					initial value is true
				PrmCurrencyTable
					initial value is actor.context.FinanceEnterpriseGroup.CurrencyTable
					default to actor.context.FinanceEnterpriseGroup.CurrencyTable
				PrmEditAndInterface
					constraint (!PrmEditOnly)
						"Edit_And_InterfaceOptionNotValidWith_Edit_Only_No_Update"
				PrmPartialUpdate
					if(PrmRunCashOffset)
						constraint (!PrmPartialUpdate)
							"PartialUpdateNotValidWithRunCreateCashOffset"
													
			Local Fields
				LocalAsyncId						is an AsyncActionRequest
				LocalSequenceNumber					is Numeric 12
				LocalInterfaceLedger				is like Ledger
				LocalGeneralLedgerChartAccount		is a GeneralLedgerChartAccount
				ErrorOccurred						is Boolean
				TransactionError					is Boolean
				LocalErrorMessage					is Alpha 150
				LocalForEachSumFESAmount			is an InternationalAmount
				LocalForEachSumUnitsAmount			is an UnitsAmount
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and	GLTransactionInterface.RunGroup	= PrmRunGroup
				and	Status.Unreleased
				and RecordEligibleForFES)
			Sort Order
				FinanceEnterpriseGroup
				GLTransactionInterface.RunGroup
				Status
				AccountingEntity
				Ledger
				PostingDate
				System
				OrganizationCode
				FinanceDimension1
				AccountCode
				GLTransactionInterface.SequenceNumber

			Accumulators
				SequenceNumber

			Rule Blocks
				FillFESKeyFields
					LocalFEGtext		= PrmEnterpriseGroup
					LocalDerivedFESKey	= "GLTI-"+PrmEnterpriseGroup+"-"+PrmRunGroup

				RunCreateCashOffsets
					invoke CreateCashOffsets GLTransactionInterface
						run after LocalAsyncId
						invoked.PrmEnterpriseGroup  			= PrmEnterpriseGroup
						invoked.PrmRunGroup						= PrmRunGroup
						invoked.PrmCashOffsetAccount			= PrmCashOffsetAccount
						invoked.PrmInterfaceAfterOffset			= PrmInterface
						invoked.PrmAccountingEntity				= PrmAccountingEntity
						invoked.PrmEditOnly						= PrmEditOnly
						invoked.PrmEditAndInterface				= PrmEditAndInterface
						invoked.PrmPartialUpdate				= PrmPartialUpdate
						invoked.PrmMoveErrorsToNewRunGroup  	= PrmMoveErrorsToNewRunGroup
						invoked.PrmErrorRunGroupPrefix			= PrmErrorRunGroupPrefix
						invoked.PrmJournalizeByEntity			= PrmJournalizeByEntity
						invoked.PrmJournalByJournalCode			= PrmJournalByJournalCode
						invoked.PrmByPassOrganizationCode		= PrmByPassOrganizationCode
						invoked.PrmByPassAccountCode			= PrmByPassAccountCode
						invoked.PrmBypassStructureRelationEdit 	= PrmBypassStructureRelationEdit
						invoked.PrmInterfaceInDetail			= PrmInterfaceInDetail
						invoked.PrmCurrencyTable				= PrmCurrencyTable
						invoked.PrmBypassNegativeRateEdit		= PrmBypassNegativeRateEdit
						invoked.PrmBypassProjectDateEdit		= PrmBypassProjectDateEdit
						invoked.PrmBypassProjectEdits			= PrmBypassProjectEdits
						invoked.PrmMoveCreateOffsetsErrorsToErrorGroup = PrmMoveCreateOffsetsErrorsToErrorGroup

				RunInterface
					invoke InterfaceTransactions GLTransactionInterface
						run after LocalAsyncId
						invoked.PrmEnterpriseGroup  			= PrmEnterpriseGroup
						invoked.PrmRunGroup						= PrmRunGroup
						invoked.PrmAccountingEntity				= PrmAccountingEntity
						invoked.PrmEditOnly						= PrmEditOnly
						invoked.PrmEditAndInterface				= PrmEditAndInterface
						invoked.PrmPartialUpdate				= PrmPartialUpdate
						invoked.PrmMoveErrorsToNewRunGroup  	= PrmMoveErrorsToNewRunGroup
						invoked.PrmErrorRunGroupPrefix			= PrmErrorRunGroupPrefix
						invoked.PrmJournalizeByEntity			= PrmJournalizeByEntity
						invoked.PrmJournalByJournalCode			= PrmJournalByJournalCode
						invoked.PrmByPassOrganizationCode		= PrmByPassOrganizationCode
						invoked.PrmByPassAccountCode			= PrmByPassAccountCode
						invoked.PrmBypassStructureRelationEdit 	= PrmBypassStructureRelationEdit
						invoked.PrmInterfaceInDetail			= PrmInterfaceInDetail
						invoked.PrmCurrencyTable				= PrmCurrencyTable
						invoked.PrmBypassNegativeRateEdit		= PrmBypassNegativeRateEdit
						invoked.PrmBypassProjectDateEdit		= PrmBypassProjectDateEdit
						invoked.PrmBypassProjectEdits			= PrmBypassProjectEdits
							
			Action Rules
				Empty Set Rules
					if(!ErrorOccurred)
						if (PrmRunCashOffset)
							include RunCreateCashOffsets
						else
							if (PrmInterface)
								include RunInterface
				Set Rules
					Entrance Rules
						include FillFESKeyFields
						invoke Purge FESDistributionsByKeyLocalRel
					Exit Rules
						include FillFESKeyFields
						invoke Purge FESDistributionsByKeyLocalRel
						LocalAsyncId = current async action request id
						if(!ErrorOccurred)
							if (PrmRunCashOffset)
								include RunCreateCashOffsets	
							else
								if (PrmInterface)
									include RunInterface
				Instance Rules
					TransactionError	= false
					initialize	LocalErrorMessage
					include FillFESKeyFields
					if (!System entered)
						System						= "GL"
					if (OrganizationCode entered)
						LocalOrganizationCode		= DerivedOrganizationCode
					BypassStructureRelationEdit 	= PrmBypassStructureRelationEdit
					if (!Ledger entered)
						LocalLedger					= FinanceEnterpriseGroup.CoreLedger
					else
						LocalLedger					= Ledger
					LocalInterfaceLedger			= LocalLedger
					if (!PrmByPassAccountCode)
						if (GeneralLedgerAccountCodeRel exists)	
							LocalGeneralLedgerChartAccount	= AccountCode.GeneralLedgerChartAccount
						else
							LocalGeneralLedgerChartAccount	= AccountCode
					else
						LocalGeneralLedgerChartAccount		= AccountCode
					if (SequenceNumber !entered)
						SequenceNumber = last GLInterfaceByRunGroupRel.GLTransactionInterface.SequenceNumber + 1

					invoke SplitDistribution FrontEndSplitDistributions in foreground
						resume on error
							TransactionError	= true
							LocalErrorMessage	= error message
						invoked.PrmFinanceEnterpriseGroup 							= FinanceEnterpriseGroup
						invoked.PrmDerivedFESKey									= LocalDerivedFESKey
						invoked.PrmDistribution										= GLTransactionInterface.SequenceNumber
						invoked.PrmDistributionAmount								= TransactionAmount
						invoked.PrmDistributionAmountWithTax						= TransactionAmount
						invoked.PrmDistributionUnitsAmount							= UnitsAmount
						invoked.PrmTransactionDate									= TransactionDate
						invoked.PrmPostingDate										= PostingDate
						invoked.PrmTransactionCurrencyCode							= CurrencyCode
						invoked.PrmDistributionBy									= DistributionBy.ByAmount
						invoked.PrmNumberOfDecimalsQuantity							= NumberOfDecimalsQuantity.0Decimals
						invoked.PrmGeneralLedgerSystemCode							= System
						invoked.PrmTransactionCodeBlock.Ledger						= LocalInterfaceLedger
						invoked.PrmAccountingEntity									= AccountingEntity
						if (OrganizationCode entered)
							invoked.PrmTransactionCodeBlock.ToAccountingEntity		= LocalOrganizationCode.AccountingEntity
							invoked.PrmTransactionCodeBlock.AccountingUnit			= LocalOrganizationCode.AccountingUnit
						else
							invoked.PrmTransactionCodeBlock.ToAccountingEntity		= ToAccountingEntity
							invoked.PrmTransactionCodeBlock.AccountingUnit			= AccountingUnit
						invoked.PrmTransactionCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
						invoked.PrmTransactionCodeBlock.Project						= Project
						invoked.PrmTransactionCodeBlock.FinanceDimension1			= FinanceDimension1
						invoked.PrmTransactionCodeBlock.FinanceDimension2			= FinanceDimension2
						invoked.PrmTransactionCodeBlock.FinanceDimension3			= FinanceDimension3
						invoked.PrmTransactionCodeBlock.FinanceDimension4			= FinanceDimension4
						invoked.PrmTransactionCodeBlock.FinanceDimension5			= FinanceDimension5
						invoked.PrmTransactionCodeBlock.FinanceDimension6			= FinanceDimension6
						invoked.PrmTransactionCodeBlock.FinanceDimension7			= FinanceDimension7
						invoked.PrmTransactionCodeBlock.FinanceDimension8			= FinanceDimension8
						invoked.PrmTransactionCodeBlock.FinanceDimension9			= FinanceDimension9
						invoked.PrmTransactionCodeBlock.FinanceDimension10			= FinanceDimension10
					if (LocalErrorMessage entered)
						TransactionError = true
					if(!TransactionError)
						initialize LocalForEachSumFESAmount
						initialize LocalForEachSumUnitsAmount
						if(FESDistByDistributionRel exists)
							for each FESDistByDistributionRel
								LocalForEachSumFESAmount			+= each.FESAmount
								LocalForEachSumUnitsAmount 			+= each.FESUnitsAmount
								invoke Create GLTransactionInterface
									fill in fields from this instance
										except invoked.ReportCurrencyAmount
										except invoked.OrganizationCode
									invoked.GLTransactionInterface.SequenceNumber		= SequenceNumber
									if (last FESDistByDistributionRel.FrontEndSplitDistributions = each.FrontEndSplitDistributions)
										invoked.UnitsAmount					= each.FESUnitsAmount + (UnitsAmount - LocalForEachSumUnitsAmount)
										invoked.TransactionAmount 			= each.FESAmount + (TransactionAmount - LocalForEachSumFESAmount)
									else
										invoked.UnitsAmount					= each.FESUnitsAmount
										invoked.TransactionAmount 			= each.FESAmount
									invoked.Ledger							= each.CodeBlock.Ledger
									invoked.ToAccountingEntity				= each.CodeBlock.ToAccountingEntity
									invoked.AccountingUnit					= each.CodeBlock.AccountingUnit
									invoked.AccountCode						= each.CodeBlock.GeneralLedgerChartAccount
									invoked.Project							= each.CodeBlock.Project
									invoked.FinanceDimension1				= each.CodeBlock.FinanceDimension1
									invoked.FinanceDimension2				= each.CodeBlock.FinanceDimension2
									invoked.FinanceDimension3				= each.CodeBlock.FinanceDimension3
									invoked.FinanceDimension4				= each.CodeBlock.FinanceDimension4
									invoked.FinanceDimension5				= each.CodeBlock.FinanceDimension5
									invoked.FinanceDimension6				= each.CodeBlock.FinanceDimension6
									invoked.FinanceDimension7				= each.CodeBlock.FinanceDimension7
									invoked.FinanceDimension8				= each.CodeBlock.FinanceDimension8
									invoked.FinanceDimension9				= each.CodeBlock.FinanceDimension9
									invoked.FinanceDimension10				= each.CodeBlock.FinanceDimension10
									invoked.CreatedByFES					= true
								SequenceNumber	+= 1
							invoke Purge Unreleased this instance
					if(TransactionError)
						if (PrmMoveFrontEndSplitErrorsToErrorGroup)
							if(!(PrmRunGroup contains "-ERROR"))
								invoke UpdateError Unreleased this instance 
									invoked.PrmErrorMessage		= LocalErrorMessage
									invoked.PrmErrorRunGroup    = PrmRunGroup + "-ERROR"
							else
								ErrorOccurred = true
								invoke UpdateError Unreleased this instance 
									invoked.PrmErrorMessage		= LocalErrorMessage
						else
							ErrorOccurred = true	
							invoke UpdateError Unreleased this instance 
								invoked.PrmErrorMessage		= LocalErrorMessage
#endif



		CreateCashOffsets is a Set Action
			completion message is "CreateCashOffsetsSubmitted"
			valid when (FundAccountingEnabled)

			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmCashOffsetAccount		is a GeneralLedgerChartAccount
					default label is "CashOffsetAccount"
				PrmInterfaceAfterOffset		is Boolean
					default label is "InterfaceAfterOffset"
				PrmAccountingEntity			is an AccountingEntity
					default label is "<PrmEnterpriseGroup.AccountingEntityLabel>"
				PrmEditOnly					is Boolean
					default label is "EditOnlyNoUpdate"
				PrmEditAndInterface			is Boolean
					default label is "EditAndInterfaceIfNoErrors"
				PrmPartialUpdate			is Boolean
					default label is "PartialUpdate"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmJournalizeByEntity		is Boolean
					default label is "JournalizeBy<PrmEnterpriseGroup.AccountingEntityLabel>"
				PrmJournalByJournalCode		is a JournalByJournalCode
					default label is "SplitJournalsByJournalCode"
				PrmByPassOrganizationCode	is Boolean
					default label is "ByPassOrganizationCode"
				PrmByPassAccountCode		is Boolean
					default label is "ByPassAccountCode"
				PrmBypassStructureRelationEdit is Boolean
					default label is "BypassStructureRelationValidation"
				PrmInterfaceInDetail		is Boolean
					default label is "InterfaceInDetail"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmBypassNegativeRateEdit	is a BypassNegativeRateEdit
					default label is "BypassNegativeRateEdit"
				PrmBypassProjectDateEdit	is a BypassProjectDateEdit
					default label is "BypassProjectDateEdit"
				PrmBypassProjectEdits		is Boolean				
					default label is "BypassProjectEdits"
				PrmMoveCreateOffsetsErrorsToErrorGroup is Boolean
    				default label is "MoveCreateCashOffsetsErrorsToErrorRunGroup"
					
			Parameter Rules
				PrmRunGroup
					required
					LocalFinanceEnterpriseGroup	= PrmEnterpriseGroup
					LocalRunGroup				= PrmRunGroup
					LocalSetFEG					= PrmEnterpriseGroup
					if(PrmInterfaceAfterOffset)
						constraint (!ErrorsInRunGroupRel exists)
							"FixOrRun_\Reset_\All_\ErrorsBeforeInterfacing_Run_Group<PrmRunGroup>"	
						constraint (!BudgetEditInRunGroupRel exists)			
							"Run_\Reset_\All_\ErrorsToClear_\Budget_\EditRecordsBeforeInterfacing_Run_Group<PrmRunGroup>"		
#ifdef module ap
					if(PrmEnterpriseGroup.FrontEndSplits)
						constraint (!RecordEligibleForFESRel exists)
							"RunFrontEndSplitBeforeCreateCashOffsets"
#endif
				PrmCashOffsetAccount
					required
					constraint (PrmCashOffsetAccount.AccountSubType	= "CASH")
						"CashOffsetAccountMustBeAccountSubType_\CASH"
					LocalFinanceEnterpriseGroup = PrmEnterpriseGroup
					LocalRunGroup				= PrmRunGroup
					LocalCashOffsetAccount		= PrmCashOffsetAccount
					constraint (GLInterfaceCashOffsetRel !exists)
						"CashOffsetsAlreadyCreatedForRunGroup<PrmRunGroup>AndCashOffsetAccount<PrmCashOffsetAccount>"
				PrmByPassOrganizationCode
					initial value is actor.context.FinanceEnterpriseGroup.NoOrgCodesExist
					if (!PrmEnterpriseGroup.GeneralLedgerOrganizationCode set exists)
						PrmByPassOrganizationCode = true
				PrmByPassAccountCode
					initial value is actor.context.FinanceEnterpriseGroup.NoAccountCodesExist
					initial value is true
					if (!PrmEnterpriseGroup.GeneralLedgerAccountCode set exists)
						PrmByPassAccountCode = true
				PrmJournalizeByEntity
					initial value is true
				PrmCurrencyTable
					initial value is actor.context.FinanceEnterpriseGroup.CurrencyTable
					default to actor.context.FinanceEnterpriseGroup.CurrencyTable
				PrmEditAndInterface
					constraint (!PrmEditOnly)
						"Edit_And_InterfaceOptionNotValidWith_Edit_Only_No_Update"
													
			Local Fields
				LocalAsyncId						is an AsyncActionRequest
				LocalSequenceNumber					is Numeric 12
				ErrorOccurred						is Boolean
				TransactionError					is Boolean
				LocalErrorMessage					is Alpha 150
				LocalInterfaceLedger				is like Ledger
				LocalGeneralLedgerChartAccount		is a GeneralLedgerChartAccount
				
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmEnterpriseGroup
				and    GLTransactionInterface.RunGroup	= PrmRunGroup
				and    AccountCode						!= PrmCashOffsetAccount
				and    Status.Unreleased)

			Sort Order
				FinanceEnterpriseGroup
				GLTransactionInterface.RunGroup
				Status
				AccountingEntity
				Ledger
				PostingDate
				System
				OrganizationCode
				FinanceDimension1
				AccountCode
				GLTransactionInterface.SequenceNumber

			Accumulators
				SequenceNumber

			Action Rules
				Empty Set Rules

				Set Rules
					Exit Rules
						if (!ErrorOccurred)
							LocalAsyncId = current async action request id
							invoke PostVAlidationCreateCashOffsets GLTransactionInterface		
								run after LocalAsyncId
								invoked.PrmEnterpriseGroup  			= PrmEnterpriseGroup
								invoked.PrmRunGroup						= PrmRunGroup
								invoked.PrmCashOffsetAccount			= PrmCashOffsetAccount
								invoked.PrmInterfaceAfterOffset			= PrmInterfaceAfterOffset
								invoked.PrmAccountingEntity				= PrmAccountingEntity
								invoked.PrmEditOnly						= PrmEditOnly
								invoked.PrmEditAndInterface				= PrmEditAndInterface
								invoked.PrmPartialUpdate				= PrmPartialUpdate
								invoked.PrmMoveErrorsToNewRunGroup  	= PrmMoveErrorsToNewRunGroup
								invoked.PrmErrorRunGroupPrefix			= PrmErrorRunGroupPrefix
								invoked.PrmJournalizeByEntity			= PrmJournalizeByEntity
								invoked.PrmJournalByJournalCode			= PrmJournalByJournalCode
								invoked.PrmByPassOrganizationCode		= PrmByPassOrganizationCode
								invoked.PrmByPassAccountCode			= PrmByPassAccountCode
								invoked.PrmBypassStructureRelationEdit 	= PrmBypassStructureRelationEdit
								invoked.PrmInterfaceInDetail			= PrmInterfaceInDetail
								invoked.PrmCurrencyTable				= PrmCurrencyTable
								invoked.PrmBypassNegativeRateEdit		= PrmBypassNegativeRateEdit
								invoked.PrmBypassProjectDateEdit		= PrmBypassProjectDateEdit
								invoked.PrmBypassProjectEdits			= PrmBypassProjectEdits

				Instance Rules
					if(!PrmBypassStructureRelationEdit)
						initialize TransactionError
						initialize LocalErrorMessage
						if (OrganizationCode entered)
							LocalOrganizationCode		= DerivedOrganizationCode
						if (!Ledger entered)
							LocalLedger					= FinanceEnterpriseGroup.CoreLedger
						else
							LocalLedger					= Ledger
						LocalInterfaceLedger			= LocalLedger
						if (!PrmByPassAccountCode)
							if (GeneralLedgerAccountCodeRel exists)	
								LocalGeneralLedgerChartAccount	= AccountCode.GeneralLedgerChartAccount
							else
								LocalGeneralLedgerChartAccount	= AccountCode
						else
							LocalGeneralLedgerChartAccount		= AccountCode

						invoke ValidateStructureRules
							resume on error
								TransactionError	= true
								LocalErrorMessage	= error message
							if (OrganizationCode entered)
								invoked.PrmTransactionCodeBlock.ToAccountingEntity		= LocalOrganizationCode.AccountingEntity
								invoked.PrmTransactionCodeBlock.AccountingUnit			= LocalOrganizationCode.AccountingUnit
								if(LocalOrganizationCode.AccountingEntity entered)
									invoked.PrmAccountingEntityEntered = true
								if(LocalOrganizationCode.AccountingUnit entered)
									invoked.PrmAccountingUnitEntered = true
							else
								invoked.PrmTransactionCodeBlock.ToAccountingEntity		= ToAccountingEntity
								invoked.PrmTransactionCodeBlock.AccountingUnit			= AccountingUnit
								if(ToAccountingEntity entered)
									invoked.PrmAccountingEntityEntered = true
								if(AccountingUnit entered)
									invoked.PrmAccountingUnitEntered = true
							invoked.PrmTransactionCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
							if(LocalGeneralLedgerChartAccount entered)
								invoked.PrmAccountEntered = true
							invoked.PrmTransactionCodeBlock.Project						= Project
							invoked.PrmTransactionCodeBlock.FinanceDimension1			= FinanceDimension1
							invoked.PrmTransactionCodeBlock.FinanceDimension2			= FinanceDimension2
							invoked.PrmTransactionCodeBlock.FinanceDimension3			= FinanceDimension3
							invoked.PrmTransactionCodeBlock.FinanceDimension4			= FinanceDimension4
							invoked.PrmTransactionCodeBlock.FinanceDimension5			= FinanceDimension5
							invoked.PrmTransactionCodeBlock.FinanceDimension6			= FinanceDimension6
							invoked.PrmTransactionCodeBlock.FinanceDimension7			= FinanceDimension7
							invoked.PrmTransactionCodeBlock.FinanceDimension8			= FinanceDimension8
							invoked.PrmTransactionCodeBlock.FinanceDimension9			= FinanceDimension9
							invoked.PrmTransactionCodeBlock.FinanceDimension10			= FinanceDimension10
							invoked.PrmTransactionCodeBlock.Ledger						= Ledger
					
						if(TransactionError
						and !PrmBypassStructureRelationEdit)
							if (PrmMoveCreateOffsetsErrorsToErrorGroup)
								if(!(PrmRunGroup contains "-ERROR"))
									invoke UpdateError Unreleased this instance 
										invoked.PrmErrorMessage		= LocalErrorMessage
										invoked.PrmErrorRunGroup    = PrmRunGroup + "-ERROR"
								else
									ErrorOccurred = true
									invoke UpdateError Unreleased this instance 
										invoked.PrmErrorMessage		= LocalErrorMessage
							else
								ErrorOccurred = true	
								invoke UpdateError Unreleased this instance 
									invoked.PrmErrorMessage		= LocalErrorMessage

		PostVAlidationCreateCashOffsets is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
				PrmRunGroup					is AlphaUpper 30
				PrmCashOffsetAccount		is a GeneralLedgerChartAccount
				PrmInterfaceAfterOffset		is Boolean
				PrmAccountingEntity			is an AccountingEntity
				PrmEditOnly					is Boolean
				PrmEditAndInterface			is Boolean
				PrmPartialUpdate			is Boolean
				PrmMoveErrorsToNewRunGroup  is Boolean
				PrmErrorRunGroupPrefix		is AlphaUpper 15
				PrmJournalizeByEntity		is Boolean
				PrmJournalByJournalCode		is a JournalByJournalCode
				PrmByPassOrganizationCode	is Boolean
				PrmByPassAccountCode		is Boolean
				PrmBypassStructureRelationEdit is Boolean
				PrmInterfaceInDetail		is Boolean
				PrmCurrencyTable			is a CurrencyTable
				PrmBypassNegativeRateEdit	is a BypassNegativeRateEdit
				PrmBypassProjectDateEdit	is a BypassProjectDateEdit
				PrmBypassProjectEdits		is Boolean				
					
			Parameter Rules
													
			Local Fields
				LocalAsyncId						is an AsyncActionRequest
				LocalSequenceNumber					is Numeric 12
				ErrorOccurred						is Boolean
				TransactionError					is Boolean
				LocalErrorMessage					is Alpha 150
				LocalInterfaceLedger				is like Ledger
				LocalGeneralLedgerChartAccount		is a GeneralLedgerChartAccount
				
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmEnterpriseGroup
				and    GLTransactionInterface.RunGroup	= PrmRunGroup
				and    AccountCode						!= PrmCashOffsetAccount
				and    Status.Unreleased)

			Sort Order
				FinanceEnterpriseGroup
				GLTransactionInterface.RunGroup
				Status
				AccountingEntity
				Ledger
				PostingDate
				System
				OrganizationCode
				FinanceDimension1
				AccountCode
				GLTransactionInterface.SequenceNumber

			Accumulators
				SequenceNumber

			Action Rules
				Empty Set Rules

				Set Rules
					Exit Rules
						if (PrmInterfaceAfterOffset
						and !ErrorOccurred)
							LocalAsyncId = current async action request id
							invoke InterfaceTransactions GLTransactionInterface
								run after LocalAsyncId
								invoked.PrmEnterpriseGroup  			= PrmEnterpriseGroup
								invoked.PrmRunGroup						= PrmRunGroup
								invoked.PrmAccountingEntity				= PrmAccountingEntity
								invoked.PrmEditOnly						= PrmEditOnly
								invoked.PrmEditAndInterface				= PrmEditAndInterface
								invoked.PrmPartialUpdate				= PrmPartialUpdate
								invoked.PrmMoveErrorsToNewRunGroup  	= PrmMoveErrorsToNewRunGroup
								invoked.PrmErrorRunGroupPrefix			= PrmErrorRunGroupPrefix
								invoked.PrmJournalizeByEntity			= PrmJournalizeByEntity
								invoked.PrmJournalByJournalCode			= PrmJournalByJournalCode
								invoked.PrmByPassOrganizationCode		= PrmByPassOrganizationCode
								invoked.PrmByPassAccountCode			= PrmByPassAccountCode
								invoked.PrmBypassStructureRelationEdit 	= PrmBypassStructureRelationEdit
								invoked.PrmInterfaceInDetail			= PrmInterfaceInDetail
								invoked.PrmCurrencyTable				= PrmCurrencyTable
								invoked.PrmBypassNegativeRateEdit		= PrmBypassNegativeRateEdit
								invoked.PrmBypassProjectDateEdit		= PrmBypassProjectDateEdit
								invoked.PrmBypassProjectEdits			= PrmBypassProjectEdits
							
				Instance Rules
					if (SequenceNumber !entered)
						SequenceNumber = last GLInterfaceByRunGroupRel.GLTransactionInterface.SequenceNumber + 1
					initialize LocalCalculateGLFinanceStructure
					LocalCalculateGLFinanceStructure.InputFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					LocalCalculateGLFinanceStructure.InputGLTransactionInterface	= GLTransactionInterface
					LocalCalculateGLFinanceStructure.InputGLFinanceStructureType	= "I"
					LocalCalculateGLFinanceStructure.InputOffsetCashAccount			= PrmCashOffsetAccount
					LocalAnswer = LocalCalculateGLFinanceStructure.CalculateGLFinanceStructure

					invoke Create GLTransactionInterface
						fill in fields from this instance
							except invoked.Billed
							except invoked.RevenueRecognized
							except invoked.Capitalize
							except invoked.LaborDistribution
							except invoked.APPaid
							except invoked.IndirectBurden
							except invoked.ErrorMessage
						invoked.GLTransactionInterface.SequenceNumber							= SequenceNumber
						invoked.TransactionAmount												= TransactionAmount *-1
						invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount	= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount	= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount	= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount		= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1
						invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1
						invoked.UnitsAmount														= UnitsAmount * -1
						invoked.ToAccountingEntity				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.ToAccountingEntity
						invoked.AccountingUnit					= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.AccountingUnit
						invoked.AccountCode						= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.GeneralLedgerChartAccount
						invoked.Project							= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.Project
						invoked.FinanceDimension1				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension1
						invoked.FinanceDimension2				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension2
						invoked.FinanceDimension3				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension3
						invoked.FinanceDimension4				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension4
						invoked.FinanceDimension5				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension5
						invoked.FinanceDimension6				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension6
						invoked.FinanceDimension7				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension7
						invoked.FinanceDimension8				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension8
						invoked.FinanceDimension9				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension9
						invoked.FinanceDimension10				= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.FinanceDimension10
						invoked.Ledger							= LocalCalculateGLFinanceStructure.OutputFinanceCodeBlock.Ledger

					SequenceNumber	+= 1


		ResetAllErrors is a Set Action
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"
				PrmUpdate				is Boolean
					
			Local Fields
				LocalSetEntity			is like AccountingEntity
				LocalCurrentRunGroup	is AlphaUpper 30
				LocalCurrentAsyncId		is an AsyncActionRequest
				LocalAsyncId			is an AsyncActionRequest
							
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    StatusForResetAllErrors
				and  ((PrmRunGroup entered
				and    GLTransactionInterface.RunGroup = PrmRunGroup)
				or    !PrmRunGroup entered))
			Set Is
				PrmFinanceEnterpriseGroup
				PrmRunGroup

			Sort Order
				FinanceEnterpriseGroup
				Status
				GLTransactionInterface.RunGroup
				GLTransactionInterface.SequenceNumber
					
			Action Rules
				Set Rules
				GLTransactionInterface.RunGroup Set Rules
					Entrance Rules
					Exit Rules
						LocalGLTDEntity				= AccountingEntity
						LocalCurrentRunGroup 		= GLTransactionInterface.RunGroup
						LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
						LocalSetFEG					= PrmFinanceEnterpriseGroup
						LocalRunGroup				= PrmRunGroup
						LocalSetRunGroup			= PrmRunGroup
						if (!PrmRunGroup entered)
							LocalRunGroup			= LocalCurrentRunGroup
							LocalSetRunGroup		= LocalCurrentRunGroup
						if (InterfaceBudgetGroupRel exists
						and !BudgetEditInRunGroupRel exists
						and PrmUpdate)
							invoke Purge InterfaceBudgetGroupRel
						LocalCurrentAsyncId = current async action request id
						if (GLTransactionDetailRel exists
						and !System.EncumbranceOption.NotUsed
						and !PrmUpdate)
							invoke DeleteRecordSet GLTransactionDetail
								assign async action request id to LocalAsyncId
								run after LocalCurrentAsyncId
								invoked.PrmFEG			= PrmFinanceEnterpriseGroup
								if (PrmRunGroup entered)
									invoked.PrmGLTIRunGroup	= PrmRunGroup
								else
									invoked.PrmGLTIRunGroup	= LocalCurrentRunGroup
							LocalCurrentAsyncId = LocalAsyncId
						if(!PrmUpdate)
							invoke ResetAllErrors GLTransactionInterface
								run after LocalCurrentAsyncId
								invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.PrmRunGroup					= PrmRunGroup
								invoked.PrmUpdate					= true
				Instance Rules
					if(PrmUpdate)
						initialize ErrorMessage
						Status = Status.Unreleased
					else
						end set action instance loop
			
		ResetUnreleased is a Set Action
			restricted
			Parameters
				PrmFEG is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"
					
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFEG
				and    Status.ResetInProgress
				and    GLTransactionInterface.RunGroup = PrmRunGroup)
			
			Sort Order
				FinanceEnterpriseGroup
				Status
				GLTransactionInterface.RunGroup
				GLTransactionInterface.SequenceNumber
					
			Action Rules
				Instance Rules
					Status = Status.Unreleased

		DeleteBudgetEditRecords is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmRunGroup 			is AlphaUpper 30
					default label is "RunGroup"
				PrmAccountingEntity 	is like AccountingEntity
					default label is "Entity"

			Instance Selection
				where (GLTransactionInterface.RunGroup 	= PrmRunGroup
				and    AccountingEntity					= PrmAccountingEntity
				and    Status.BudgetEdit)
				
			Action Rules

				Instance Rules
					invoke Purge BudgetEdit this instance 
					
		MoveToErrorForBudgetEdit is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmRunGroup 			is AlphaUpper 30
					default label is "RunGroup"
				PrmAccountingEntity 	is like AccountingEntity
					default label is "Entity"
				PrmErrorRunGroup		is AlphaUpper 30
				PrmOrigInterfaceRun		is a GLTransactionInterfaceResult
				
			Local Fields
				LocalOrigInterfaceRun	is a GLTransactionInterfaceResult
				
			Instance Selection
				where (GLTransactionInterface.RunGroup 	= PrmRunGroup
				and    AccountingEntity					= PrmAccountingEntity
				and    Status.BudgetEdit)
				
			Action Rules
				Set Rules
					Exit Rules
						LocalFinanceEnterpriseGroup		= PrmEnterpriseGroup
						LocalRunGroup					= PrmRunGroup
						LocalOrigInterfaceRun			= PrmOrigInterfaceRun
						if (GLTransactionDetailRel exists)
							invoke DeleteRecordSet GLTransactionDetail
								invoked.PrmFEG			= PrmEnterpriseGroup
								invoked.PrmGLTIRunGroup	= PrmRunGroup


							
						invoke Update LocalOrigInterfaceRun.GLTransactionInterfaceResult
							invoked.Status 		  		= 2
							invoked.ErrorRunGroup 		= PrmErrorRunGroup 
							
				Instance Rules
					invoke UpdateError BudgetEdit this instance 
						invoked.PrmErrorRunGroup	= PrmErrorRunGroup
						invoked.PrmErrorMessage		= BudgetEditErrorMessage

		
		TriggerGLTransactionInterface is an Instance Action 
			restricted
			Parameters
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup" 
			Parameter Rules
				PrmRunGroup
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					LocalRunGroup 				= PrmRunGroup
				
			Action Rules
#ifdef module ap
				if (FinanceEnterpriseGroup.BODTrigger)
					if(SenderComponentID entered and SenderLogicalID entered and (!LocalAckBodTriggered))				
	                	trigger PayablesService.GLTransactionInterfaceService PA service
	                    	resume on error
	                        title is "EG:<FinanceEnterpriseGroup>RunGroup:<GLTransactionInterface.RunGroup>"
	                        Criteria
	                        	FinanceEnterpriseGroup      
	                        Variables
	                        	include persistent fields from ErrorsInRunGroupRel
	                            FinanceEnterpriseGroup
	                            	variable name is FEG
	                            GLTransactionInterfaceResultRel.Status
	                            	variable name is Status	
	                            SenderOriginalBOD
	                            	variable name is SOriginalBOD
	                            GLTransactionInterface.RunGroup
	                            	variable name is RGroup
						LocalAckBodTriggered = true
#endif

		Import is an Import Action
			restricted
			Parameters
				InputData is CSVText
			Action Rules
				dbimport InputData into GLTransactionInterface

		ValidateStructureRules is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmTransactionCodeBlock 		is a TransactionCodeBlock
				PrmAccountingEntityEntered		is Boolean
				PrmAccountingUnitEntered		is Boolean
				PrmAccountEntered				is Boolean
			Parameter Rules
				PrmTransactionCodeBlock
					required
			Action Rules
				if (!PrmAccountingEntityEntered
				and PrmTransactionCodeBlock.ToAccountingEntity entered)
					ToAccountingEntity = PrmTransactionCodeBlock.ToAccountingEntity
				if(!PrmAccountingUnitEntered
				and PrmTransactionCodeBlock.AccountingUnit entered)
					AccountingUnit = PrmTransactionCodeBlock.AccountingUnit
				if(!PrmAccountEntered
				and PrmTransactionCodeBlock.GeneralLedgerChartAccount entered)
					AccountCode = PrmTransactionCodeBlock.GeneralLedgerChartAccount
				if(Project not entered
				and PrmTransactionCodeBlock.Project entered)
					Project = PrmTransactionCodeBlock.Project
				if(FinanceDimension1 not entered
				and PrmTransactionCodeBlock.FinanceDimension1 entered)
					FinanceDimension1 = PrmTransactionCodeBlock.FinanceDimension1
				if(FinanceDimension2 not entered
				and PrmTransactionCodeBlock.FinanceDimension2 entered)
					FinanceDimension2 = PrmTransactionCodeBlock.FinanceDimension2
				if(FinanceDimension3 not entered
				and PrmTransactionCodeBlock.FinanceDimension3 entered)
					FinanceDimension3 = PrmTransactionCodeBlock.FinanceDimension3
				if(FinanceDimension4 not entered
				and PrmTransactionCodeBlock.FinanceDimension4 entered)
					FinanceDimension4 = PrmTransactionCodeBlock.FinanceDimension4
				if(FinanceDimension5 not entered
				and PrmTransactionCodeBlock.FinanceDimension5 entered)
					FinanceDimension5 = PrmTransactionCodeBlock.FinanceDimension5
				if(FinanceDimension6 not entered
				and PrmTransactionCodeBlock.FinanceDimension6 entered)
					FinanceDimension6 = PrmTransactionCodeBlock.FinanceDimension6
				if(FinanceDimension7 not entered
				and PrmTransactionCodeBlock.FinanceDimension7 entered)
					FinanceDimension7 = PrmTransactionCodeBlock.FinanceDimension7
				if(FinanceDimension8 not entered
				and PrmTransactionCodeBlock.FinanceDimension8 entered)
					FinanceDimension8 = PrmTransactionCodeBlock.FinanceDimension8
				if(FinanceDimension9 not entered
				and PrmTransactionCodeBlock.FinanceDimension9 entered)
					FinanceDimension9 = PrmTransactionCodeBlock.FinanceDimension9
				if(FinanceDimension10 not entered
				and PrmTransactionCodeBlock.FinanceDimension10 entered)
					FinanceDimension10 = PrmTransactionCodeBlock.FinanceDimension10

		InterfaceAllRunGroups		is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmPartialUpdate	   			is Boolean
					default label is "PartialUpdate"
				PrmMoveErrorsToNewRunGroup		is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix			is AlphaUpper 30
					default label is "ErrorRunGroupPrefix"
				PrmJournalizeByEntity 			is Boolean
					default label is "JournalizeByEntity"
				PrmJournalByJournalCode			is a JournalByJournalCode
					default label is "JournalByJournalCode"
				PrmByPassOrganizationCode		is Boolean
					default label is "BypassOrganizationCode"
				PrmByPassAccountCode			is Boolean
					default label is "BypassAccountCode"
				PrmBypassStructureRelationEdit	is a BypassStructureRelationEdit
					default label is "BypassStructureRelationEdit"
				PrmInterfaceInDetail			is Boolean
					default label is "InterfaceInDetail"
				PrmCurrencyTable				is a CurrencyTable
					default label is "CurrencyTable"
				PrmBypassNegativeRateEdit		is a BypassNegativeRateEdit
					default label is "BypassNegativeRateEdit"
				PrmEditOnly						is Boolean
					default label is "EditOnly"
				PrmEditAndInterface				is Boolean
					default label is "EditAndInterface"
				PrmPrimaryLedger				is a Ledger
					default label is "PrimaryLedger"
			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmByPassOrganizationCode
					initial value is actor.context.FinanceEnterpriseGroup.NoOrgCodesExist
					if (!PrmEnterpriseGroup.GeneralLedgerOrganizationCode set exists)
						PrmByPassOrganizationCode = true
				PrmByPassAccountCode
					initial value is actor.context.FinanceEnterpriseGroup.NoAccountCodesExist
					if (!PrmEnterpriseGroup.GeneralLedgerAccountCode set exists)
						PrmByPassAccountCode = true
				PrmJournalizeByEntity
					initial value is true
				PrmEditAndInterface
					constraint (!PrmEditOnly)
						"Edit_And_InterfaceOptionNotValidWith_Edit_Only_No_Update"	
				PrmPartialUpdate
					constraint (!PrmEditAndInterface)
						"Partial_UpdateNotValidWith_Edit_And_InterfaceOption"
			Instance Selection
				where(FinanceEnterpriseGroup = PrmEnterpriseGroup)
			Sort Order is ByRunGroupEntity
			Action Rules
				GLTransactionInterface.RunGroup Set Rules
					Exit Rules
						invoke InterfaceTransactions GLTransactionInterface in background
							run outside of action background group
							invoked.PrmEnterpriseGroup		       = PrmEnterpriseGroup
							invoked.PrmRunGroup					   = GLTransactionInterface.RunGroup		
							invoked.PrmByPassOrganizationCode	   = PrmByPassOrganizationCode
							invoked.PrmByPassAccountCode		   = PrmByPassAccountCode
							invoked.PrmBypassStructureRelationEdit = PrmBypassStructureRelationEdit
							invoked.PrmJournalByJournalCode		   = PrmJournalByJournalCode
							invoked.PrmPartialUpdate			   = PrmPartialUpdate
							invoked.PrmMoveErrorsToNewRunGroup	   = PrmMoveErrorsToNewRunGroup
							invoked.PrmErrorRunGroupPrefix		   = PrmErrorRunGroupPrefix
							invoked.PrmInterfaceInDetail		   = PrmInterfaceInDetail
							invoked.PrmCurrencyTable			   = PrmCurrencyTable
							invoked.PrmJournalizeByEntity		   = PrmJournalizeByEntity
							invoked.PrmBypassNegativeRateEdit	   = PrmBypassNegativeRateEdit
							invoked.PrmEditOnly					   = PrmEditOnly
							invoked.PrmEditAndInterface			   = PrmEditAndInterface
							invoked.PrmPrimaryLedger			   = PrmPrimaryLedger
				Instance Rules
	
	StateCycles
		GLTransactionInterfaceLifeCycle is a StateCycle
			state field is Status
			
			Unreleased	is a State
		 		Create is a Create Action
		 			bypass field rules 
					Entrance Rules
						constraint (FinanceEnterpriseGroup exists)
							"FinanceEnterpriseGroupDoesNotExist"
						constraint (GLTransactionInterface.RunGroup entered)
							"RunGroupIsRequired"
						constraint (GLTransactionInterface.SequenceNumber entered)
							"SequenceNumberIsRequired"
						TransactionAmount 	= RoundedTransactionAmount
	 			        if (!Ledger entered)
 							Ledger				= FinanceEnterpriseGroup.CoreLedger
						if (!CurrencyCode entered)
							CurrencyCode 		= AccountingEntity.FunctionalCurrency
						if (!TransactionDate entered)
							TransactionDate 	= current corporate date
						if (!GeneralLedgerEvent entered)
							GeneralLedgerEvent	= "JE"
						if (!System entered)
							System 				= "GL" 


















					Exit Rules
						if (!FESExcludedEvent
						and  Project entered
						and  FinanceDimension2 entered
						and  FinanceEnterpriseGroup.FrontEndSplits
						and  FinanceEnterpriseGroup.UseFundedAmounts
						and !Project.ExcludeFromFES
						and  Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled
						and  TransactionAmount entered
						and  CurrencyCode = Project.Currency)
							LocalFESAmount = TransactionAmount
							if (LocalFESAmount entered)
								invoke UpdateFESExpenditures ProjectFundingSourceRel
									invoked.Commitment									= true
									invoked.TransactionDate								= TransactionDate
									invoked.FinanceCodeBlock.Ledger						= Ledger
									invoked.FinanceCodeBlock.ToAccountingEntity			= ToAccountingEntity
									invoked.FinanceCodeBlock.AccountingUnit				= AccountingUnit
									invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= AccountCode
									invoked.FinanceCodeBlock.Project					= Project
									invoked.FinanceCodeBlock.FinanceDimension1			= FinanceDimension1
									invoked.FinanceCodeBlock.FinanceDimension2			= FinanceDimension2
									invoked.FinanceCodeBlock.FinanceDimension3			= FinanceDimension3
									invoked.FinanceCodeBlock.FinanceDimension4			= FinanceDimension4
									invoked.FinanceCodeBlock.FinanceDimension5			= FinanceDimension5
									invoked.FinanceCodeBlock.FinanceDimension6			= FinanceDimension6
									invoked.FinanceCodeBlock.FinanceDimension7			= FinanceDimension7
									invoked.FinanceCodeBlock.FinanceDimension8			= FinanceDimension8
									invoked.FinanceCodeBlock.FinanceDimension9			= FinanceDimension9
									invoked.FinanceCodeBlock.FinanceDimension10			= FinanceDimension10					
									invoked.Amount										= LocalFESAmount

		 		CreateFromCopy is a Create Action
					restricted
					bypass field rules

		 		Update is an Update Action
					Entrance Rules
						constraint (TransactionAmount entered
								or	ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount entered
								or	ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount entered
								or	UnitsAmount entered)
							"AmountOrUnitsAmountIsRequired"
					Action Rules					
						LocalJournalAmountUpdated = false
						if (TransactionAmount changed
						or	ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount changed)
							LocalJournalAmountUpdated = true
							if (GLInterfaceEntityBudgetGroupRel exists)
								LocalBudgetEditGroup2 = GLInterfaceEntityBudgetGroupRel.UniqueID
							else
							if (GLInterfaceBudgetGroupRel exists)
								LocalBudgetEditGroup2 = GLInterfaceBudgetGroupRel.UniqueID
							else
								initialize LocalBudgetEditGroup2
					Exit Rules						
						if (LocalJournalAmountUpdated
						and LocalBudgetEditGroup2 entered)
							invoke PurgeGroupTotalsForEditGroup BudgetTemplateGroupTotal
								invoked.PrmFinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup
								invoked.PrmBudgetEditGroup		  = LocalBudgetEditGroup2
   						
		 		Delete is a Delete Action
					Entrance Rules
						LocalFinanceEnterpriseGroup = FinanceEnterpriseGroup
						LocalRunGroup 				= GLTransactionInterface.RunGroup
						constraint (!GLTransactionDetailRel exists)
							"CannotDelete;RunGroupIsNotJournalized"
						if (Reference = "FrontEndSplit")
							confirmation required
								"DeletingInterfacedFrontEndSplit,RememberToAdjustOrDeleteItsOffset"
					Exit Rules
						include ReduceFESCommitments

				UpdateError is an Instance Action
					restricted
					Parameters
						PrmErrorMessage		is Alpha 150
							default label is "ErrorMessage"
						PrmErrorRunGroup    is AlphaUpper 30
							default label is "ErrorRunGroup"


					Action Rules
						if (PrmErrorRunGroup entered)
							GLTransactionInterface.RunGroup 	  = PrmErrorRunGroup








						ErrorMessage 		= PrmErrorMessage
						make transition to Error

				Purge is a Purge Action
					restricted
					Exit Rules
						include ReduceFESCommitments
			
			Error is a State
		 		Update is an Update Action
					Action Rules
			 			initialize ErrorMessage
						LocalJournalAmountUpdated = false
						LocalJournalCodeBlockUpdated = false	
						if (TransactionAmount changed
						or	ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount changed
						or	ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount changed)
							LocalJournalAmountUpdated = true
						include CheckCodeBlockChanges		
						if (LocalJournalAmountUpdated		
						or	LocalJournalCodeBlockUpdated)	
							if (GLInterfaceEntityBudgetGroupRel exists)
								LocalBudgetEditGroup2 = GLInterfaceEntityBudgetGroupRel.UniqueID
							else
							if (GLInterfaceBudgetGroupRel exists)
								LocalBudgetEditGroup2 = GLInterfaceBudgetGroupRel.UniqueID
							else
								initialize LocalBudgetEditGroup2
						make transition to Unreleased		

					Exit Rules						













    						
		 		Delete is a Delete Action
					Entrance Rules
						LocalFinanceEnterpriseGroup = FinanceEnterpriseGroup
						LocalRunGroup 				= GLTransactionInterface.RunGroup
						if (GLInterfaceEntityBudgetGroupRel exists)
							LocalBudgetEditGroup2 = GLInterfaceEntityBudgetGroupRel.UniqueID
						else
						if (GLInterfaceBudgetGroupRel exists)
							LocalBudgetEditGroup2 = GLInterfaceBudgetGroupRel.UniqueID
						else
							initialize LocalBudgetEditGroup2
						constraint (!GLTransactionDetailRel exists)
							"CannotDelete;RunGroupIsNotJournalized"
						if (Reference = "FrontEndSplit")
							confirmation required
								"DeletingInterfacedFrontEndSplit,RememberToAdjustOrDeleteItsOffset"
						constraint(!EntityBudgetErrorsExist)
							"BudgetErrorExistsForRunGroup<GLTransactionInterface.RunGroup>;Perform_\Reset_\All_\ErrorsActionBeforeDeletingTransactions"





					Exit Rules
						include ReduceFESCommitments

			BudgetEdit is a State




						
				Delete is a Delete Action
					Local Fields
						LocalBudgetEditGroup			is UniqueID
						LocalGeneralLedgerChartAccount	is a GeneralLedgerChartAccount
						
					Exit Rules
						if (!Ledger entered)
							LocalLedger				= FinanceEnterpriseGroup.CoreLedger
						else
							LocalLedger				= Ledger
						if (GeneralLedgerAccountCodeRel exists)	
							LocalGeneralLedgerChartAccount	= AccountCode.GeneralLedgerChartAccount
						else
							LocalGeneralLedgerChartAccount	= AccountCode
						LocalOrganizationCode		= OrganizationCode
						LocalInstAccountingEntity	= LocalOrganizationCode.AccountingEntity
						if  (BudgetEntityLedgerRel exists
						and (System.EncumbranceOption.Track
						or   System.EncumbranceOption.TrackAndEdit))
							if (GLInterfaceEntityBudgetGroupRel exists)
								LocalBudgetEditGroup	= GLInterfaceEntityBudgetGroupRel.UniqueID
							else
								LocalBudgetEditGroup	= GLInterfaceBudgetGroupRel.UniqueID
							invoke UpdateGroupTotals BudgetTemplate
								invoked.PrmFinanceEnterpriseGroup							= FinanceEnterpriseGroup
								invoked.PrmBudgetEditGroup									= LocalBudgetEditGroup

								invoked.PrmTransactionCodeBlock.ToAccountingEntity			= LocalOrganizationCode.AccountingEntity
								invoked.PrmTransactionCodeBlock.AccountingUnit				= LocalOrganizationCode.AccountingUnit
								invoked.PrmTransactionCodeBlock.GeneralLedgerChartAccount	= LocalGeneralLedgerChartAccount
								invoked.PrmTransactionCodeBlock.Project						= Project
								invoked.PrmTransactionCodeBlock.FinanceDimension1			= FinanceDimension1
								invoked.PrmTransactionCodeBlock.FinanceDimension2			= FinanceDimension2
								invoked.PrmTransactionCodeBlock.FinanceDimension3			= FinanceDimension3
								invoked.PrmTransactionCodeBlock.FinanceDimension4			= FinanceDimension4
								invoked.PrmTransactionCodeBlock.FinanceDimension5			= FinanceDimension5
								invoked.PrmTransactionCodeBlock.FinanceDimension6			= FinanceDimension6
								invoked.PrmTransactionCodeBlock.FinanceDimension7			= FinanceDimension7
								invoked.PrmTransactionCodeBlock.FinanceDimension8			= FinanceDimension8
								invoked.PrmTransactionCodeBlock.FinanceDimension9			= FinanceDimension9
								invoked.PrmTransactionCodeBlock.FinanceDimension10			= FinanceDimension10
								invoked.PrmTransactionCodeBlock.Ledger						= LocalLedger
								invoked.PrmEndDate											= DerivedEntityCalendarPeriod
								invoked.PrmReportAmounts.ProjectAmount		= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1
								invoked.PrmReportAmounts.ReportAmount1		= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1
								invoked.PrmReportAmounts.ReportAmount2		= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1
								invoked.PrmReportAmounts.ReportAmount3		= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1
								invoked.PrmReportAmounts.ReportAmount4		= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1
								invoked.PrmReportAmounts.ReportAmount5		= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1
								if (!AccountingEntity = LocalOrganizationCode.AccountingEntity)
									invoked.PrmReportAmounts.FunctionalAmount	= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount	= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount2	= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount3	= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1
								else
									invoked.PrmReportAmounts.FunctionalAmount	= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount	= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount2	= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1
									invoked.PrmReportAmounts.AlternateAmount3	= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1
						include ReduceFESCommitments

				UpdateError is an Instance Action
					restricted
					Parameters
						PrmErrorMessage		is Alpha 150
							default label is "ErrorMessage"
						PrmErrorRunGroup    is AlphaUpper 30
							default label is "ErrorRunGroup"


					Action Rules
						if (PrmErrorRunGroup entered)
							GLTransactionInterface.RunGroup 	  = PrmErrorRunGroup








						ErrorMessage 		= PrmErrorMessage
						make transition to Error
					
				Purge is a Purge Action
					restricted
					Exit Rules
						include ReduceFESCommitments

