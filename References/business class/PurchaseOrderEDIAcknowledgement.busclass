PurchaseOrderEDIAcknowledgement is a BusinessClass
    owned by po
    prefix is POCSV
	sql name is POEDIAcknowledgement
	
    Ontology
    	symbolic key is PurchaseOrderEDIAcknowledgement
    
    Patterns
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
       	disable DataTranslations

    Persistent Fields
        RunGroup
        EDINumber                 	
        Company                   is like Company
        InterchgControl           is Alpha size 9
        GroupControl              is Alpha size 9
        TxnSetControl             is Alpha size 9
        PurchaseOrder             is like PurchaseOrder    
        PORelease                 
        POCode                    is like POCode   
        RecordId                  is Alpha size 2
        EdiSegment                is Alpha size 3

		TransactionSetPurpose	  is Alpha size 2
		AcknowledgementType		  is Alpha size 2
		PurchaseOrderDate		  is Date
        AcknowledgementDate		  is Date
		TransmissionStatus		  is Numeric size 1
		TransmissionDate		  is TimeStamp
		NumberOfTransmissionAttempts is Numeric size 3
		CompanyGLN				  is Alpha size 13

		PurchaseOrderRevision	  is like PurchaseOrderRevision  

		Currency    			  is like Currency    

		TaxAmount				  is an InternationalCost 

		FreightTerm               is like FreightTerm   
		ShipTerm				  is like ShipTerm      

		DiscountRate			  is Alpha size 5      
		DiscountDays			  is Numeric size 3    
		DiscountDaysDue			  is Numeric size 3    

		DefaultDeliveryDate		  is Date             

		ShippingMethod			  is like ShippingMethod  

		Vendor					  is like Vendor
		VendorGLN				  is Alpha size 13

		PurchaseFromLocation	  is like VendorLocation
		PurchaseFromLocationGLN	  is Alpha size 13

		AddOnCharge 			  is like AddOnCharge               
		TotalAddOnChargeAmount	  is like InternationalAmount   

		Description				  

		PurchaseOrderLine		  is like PurchaseOrderLine
		MatchDetailKey			  is Alpha size 85

		EarlyDeliveryDate		  is Date

		LineStatus				  is Alpha 2
		AcknowledgementStatusDate is Date
		DateQualifier			  is Alpha 3

		CommodityCode			  is like CommodityCode

		Comments		          is like Comment

		Item					  is like Item
		VendorItem				  is like VendorItem     
		ItemGTIN    			  is like ItemGTIN

		UnitOfMeasure			  is like UnitOfMeasure

		EnteredUnitCost			  is like InternationalCost
    		precision is DerivedNumberOfDecimalsCost

		Quantity				  is like Quantity

		Backorder					is Boolean
		BackorderType				is Numeric size 1
            States
                VendorBackorder			value is 1
                ManufacturerBackorder	value is 2
		BackorderQuantity			is like UnsignedQuantity
		EstimatedAvailabilityDate	is Date
		POShipDate					is Date

    Local Fields
    	LocalRunGroup             		is a RunGroup
    	LocalVendor               		is like Vendor
		LocalDisableDeliveryTolerance	is Boolean
		ExecuteDeliveryToleranceDays	is Numeric size 3

		AckCompany                      is like Company
		AckPurchaseOrder                is like PurchaseOrder
		LocalBackorderDetails			is a Description
    
	Derived Fields
		DeliveryDateWithinTolerance is a ComputeField
			type is Date
			restricted
			(PurchaseOrderLineRel.EarlyDeliveryDate + DerivedDeliveryToleranceDays)

		POShipDateWithLeadTime is a ComputeField
			type is Date
			restricted
			(POShipDate + PurchaseOrderLineRel.DerivedLeadTimeDays as days)

		DerivedDeliveryToleranceDays is a DerivedField
			type is Numeric size 3
			restricted
			initialize LocalDisableDeliveryTolerance
			if (PurchaseFromLocationRel not exists or PurchaseFromLocationRel.DeliveryToleranceOption.DefaultToNextLevel)
				if (PurchasingVendorRel not exists or PurchasingVendorRel.DeliveryToleranceOption.DefaultToNextLevel)
					if (PurchasingCompanyRel exists and PurchasingCompanyRel.DeliveryToleranceOption.UseDeliveryToleranceDays)
						return PurchasingCompanyRel.DeliveryToleranceDays
					else
						LocalDisableDeliveryTolerance = true
				else
					if (PurchasingVendorRel.DeliveryToleranceOption.UseDeliveryToleranceDays)
						return PurchasingVendorRel.DeliveryToleranceDays
					else
						LocalDisableDeliveryTolerance = true
			else
				if (PurchaseFromLocationRel.DeliveryToleranceOption.UseDeliveryToleranceDays)
					return PurchaseFromLocationRel.DeliveryToleranceDays
				else
					LocalDisableDeliveryTolerance = true		

		DerivedNumberOfDecimalsCost is a ConditionalField
			type is Numeric size 1
			restricted
			if (ItemExists)
				ItemRel.NumberOfDecimalsCost
			else
			if (InventoryCompanyRel exists) 
				InventoryCompanyRel.NumberOfDecimalsCost
			else
				8

		BackorderTypeMessage 						is a DerivedField
			type is MessageField
			if (BackorderType.VendorBackorder)
				return VendorBackorderMessage
			else
			if (BackorderType.ManufacturerBackorder)
				return ManufacturerBackorderMessage
			else
				return BackorderMessage

		BackorderQuantityMessage 					is a DerivedField
			type is MessageField
			if (BackorderQuantity entered)
				return BackorderQuantityDetailMessage

		EstimatedAvailabilityMessage 				is a DerivedField
			type is MessageField
			if (EstimatedAvailabilityDate entered)
				return EstimatedDateDetailMessage

		VendorBackorderMessage 						is a MessageField
			"VendorBackorder"

		ManufacturerBackorderMessage 				is a MessageField
			"ManufacturerBackorder"

		BackorderMessage 							is a MessageField
			"Backorder"

		BackorderQuantityDetailMessage				is a MessageField
			";_Backorder_QuantityIs<BackorderQuantity>"

		EstimatedDateDetailMessage 					is a MessageField
			";_Estimated_Availability_DateIs<EstimatedAvailabilityDate>"

		BackorderDetailMessage 						is a DerivedField
			type is MessageField
			return BackorderTypeMessage + BackorderQuantityMessage 

    Conditions
    
    	ItemExists
    		restricted
    		when (ItemRel exists)
    	
    	PurchaseOrderExists
    		restricted
    		when (PurchaseOrderRel exists)
    		
    	PurchaseOrderHasLinesToBackorder 
			restricted 
			when (PurchaseOrderRel.HasLinesToBackorder)
		
		PurchaseOrderRevisionExists
    		restricted
    		when (PurchaseOrderRevisionsRel exists)
    	
    	PurchaseOrderLineExists
    		restricted
    		when (PurchaseOrderLineRel exists)
			
		ValidPurchaseOrderExists
			restricted
			when (PurchaseOrder not entered
			or    PurchaseOrderExists)

    	FromContract
			restricted
			when (PurchaseOrderLineRel.CostCode.TierReqLocParticipant
			or	  PurchaseOrderLineRel.CostCode.TierIcLocationParticipant
			or	  PurchaseOrderLineRel.CostCode.TierCompanyParticipant
			or    PurchaseOrderLineRel.CostCode.Contract
			or	  PurchaseOrderLineRel.CostCode.CatalogQuote
			or	  PurchaseOrderLineRel.CostCode.Blanket)
		
		FromLastPOLastCost
			restricted
			when (PurchaseOrderLineRel.CostCode.LastCost
			or    PurchaseOrderLineRel.CostCode.LastPoCreated)
    	
    	CostUpdateYes
			restricted
			when ((PurchaseOrderLineRel.HasPurchaseFromLocation
			and  ((PurchaseOrderLineRel.CostOption.VendorDetermined and PurchaseFromLocationRel.UpdatePurchaseOrderCost.UpdatePOCostFromReceiptOrAcknowledgement)
			or    (PurchaseFromLocationRel.OverrideContractCost and FromContract)
			or    (PurchaseFromLocationRel.OverrideLastPOLastCost and FromLastPOLastCost)))
			or   ((not PurchaseOrderLineRel.HasPurchaseFromLocation 
			and  ((PurchaseOrderLineRel.CostOption.VendorDetermined and PurchasingVendorRel.UpdatePurchaseOrderCost.UpdatePOCostFromReceiptOrAcknowledgement)
			or    (PurchasingVendorRel.OverrideContractCost and FromContract)
			or    (PurchasingVendorRel.OverrideLastPOLastCost and FromLastPOLastCost)))))
    	
    	VendorItemChangeAllowedPurchaseFrom
    		restricted
    		when (PurchaseFromLocationRel.AllowVendorItemUpdate = true)
    		
    	VendorItemChangeAllowedVendor
    		restricted
    		when (PurchasingVendorRel.AllowVendorItemUpdate = true)

    	VendorItemChanged
    		restricted
    		when (PurchaseOrderLineRel.VendorItem != VendorItem)

    	QuantityChanged
    		restricted
    		when (PurchaseOrderLineRel.Quantity != Quantity)
    		
    	UnitOfMeasureChanged
    		restricted
    		when (PurchaseOrderLineRel.EnteredBuyUOM != UnitOfMeasure)
    		
    	EnteredUnitCostChanged
    		restricted
    		when (PurchaseOrderLineRel.EnteredUnitCost != EnteredUnitCost)

    	EarlyDeliveryDateChanged
    		restricted
    		when (PurchaseOrderLineRel.EarlyDeliveryDate != EarlyDeliveryDate)

		POShipDateChanged
    		restricted
    		when (PurchaseOrderLineRel.POShipDate != POShipDate)

		InventoriedOrNonstock
			restricted
			when (PurchaseOrderLineRel.ItemType.Inventoried
			or    PurchaseOrderLineRel.ItemType.NonStock)
			
		CompanySecurityGroupAllowsAccess
			restricted
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)
			
		SecurityGroupAllowsAccess
			restricted
			when (Company !entered
			or   (Company entered
			and   CompanySecurityGroupAllowsAccess))
		
		IsValidVendorItem
			restricted
			when (not InventoriedOrNonstock											
			or    VendorItemRel.Active												
			or   (VendorItemRel not exists and ActiveVendorItemsRel not exists))	
		
		POADateEarlierThanPODate
			restricted
			when (EarlyDeliveryDate < PurchaseOrderRel.PurchaseOrderDate)

		EarlyDeliveryDateEarlierThanPODate
			restricted
			when (EarlyDeliveryDate < PurchaseOrderRel.PurchaseOrderDate)

		POShipDateWithLeadTimeEarlierThanPODate
			restricted
			when (POShipDateWithLeadTime < PurchaseOrderRel.PurchaseOrderDate)

    Relations
    
    	AcknowledgementsByRunGroupRel
    		one-to-many relation to PurchaseOrderEDIAcknowledgement
    		Field Mapping uses ByRunGroup
				related.RunGroup					= LocalRunGroup

        ItemUOMBuyRel
        	one-to-one relation to ItemUOM
        	Field Mapping uses symbolic key
        		related.ItemGroup         = InventoryCompanyRel.ItemGroup
        		related.Item              = Item
        		related.UnitOfMeasure     = UnitOfMeasure

    	UnitOfMeasureRel
    		one-to-one relation to UnitOfMeasure
    		Field Mapping uses symbolic key
        		related.ItemGroup		= InventoryCompanyRel.ItemGroup
        		related.UnitOfMeasure	= UnitOfMeasure

		VendorItemsRel 
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= PurchasingCompanyRel.ProcurementGroup
				related.Item				= Item
				related.Vendor				= PurchaseOrderRel.Vendor
        		
		ActiveVendorItemsRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= PurchasingCompanyRel.ProcurementGroup
				related.Item				= Item
				related.Vendor				= PurchaseOrderRel.Vendor
			Instance Selection
				where (related.Active)
        
		VendorItemRel
			one-to-one relation to VendorItem
			Field Mapping uses Set4
				related.ProcurementGroup	= PurchasingCompanyRel.ProcurementGroup
				related.Vendor				= PurchaseOrderRel.Vendor
				related.Item				= Item
				related.VendorItem			= VendorItem
		
		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup           = InventoryCompanyRel.ItemGroup
				related.Item                = Item
		
    	InventoryCompanyRel
    		one-to-one relation to InventoryCompany
    		Field Mapping uses symbolic key
    			related.Company                   = Company

		PurchaseOrderRel 
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company 			= Company
				related.PurchaseOrder       = PurchaseOrder

		AckPurchaseOrderRel 
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company 			= AckCompany
				related.PurchaseOrder       = AckPurchaseOrder

		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company 			= Company
				related.PurchaseOrder       = PurchaseOrder
				related.PurchaseOrderLine   = PurchaseOrderLine
		
		PurchaseOrderRevisionsRel
			one-to-many relation to PurchaseOrderRevision
			Field Mapping uses ByDescending
				related.Company             	= Company
				related.PurchaseOrder       	= PurchaseOrder
		
		VendorGLNRel
			one-to-many relation to Vendor
			Field Mapping uses ByGlobalLocationNumber
				related.GlobalLocationNumber      = VendorGLN
				related.VendorGroup               = PayablesCompanyRel.VendorGroup

    	PurchaseFromLocationGLNRel
			one-to-many relation to VendorLocation
			Field Mapping uses ByGlobalLocationNumber
				related.GlobalLocationNumber      = PurchaseFromLocationGLN
				related.VendorGroup               = PayablesCompanyRel.VendorGroup
				related.Vendor                    = LocalVendor
    	
    	PurchasingVendorRel
    		one-to-one relation to PurchasingVendor
    		Field Mapping uses symbolic key
    			related.VendorGroup               = PayablesCompanyRel.VendorGroup
    			related.Vendor                    = PurchaseOrderRel.Vendor
    	
    	PurchaseFromLocationRel
    		one-to-one relation to PurchaseFromLocation
    		Field Mapping uses symbolic key
    			related.VendorGroup               = PayablesCompanyRel.VendorGroup
    			related.Vendor                    = PurchaseOrderRel.Vendor
    			related.PurchaseFromLocation      = PurchaseOrderRel.PurchaseFromLocation
    	
    	PayablesCompanyRel
    		one-to-one relation to PayablesCompany
    		Field Mapping uses symbolic key
    			related.Company                   = Company
    			
    	GLNCompanyRel
    		one-to-many relation to InventoryCompany
    		Field Mapping uses ByGlobalLocationNumber 
    			related.GlobalLocationNumber      = CompanyGLN

    	PurchasingCompanyRel
    		one-to-one relation to PurchasingCompany
    		Field Mapping uses symbolic key
    			related.Company                   = Company
    			
    	CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company

		VendorBackorderDetailsForPORel
			one-to-many relation to VendorBackorderDetails
            Field Mapping uses ByPurchaseOrderLine
				related.ProcurementGroup 			= PurchasingCompanyRel.ProcurementGroup
                related.PurchasingCompany			= Company
                related.PurchaseOrder				= PurchaseOrder
                related.PurchaseOrderLine   		= PurchaseOrderLine
			Instance Selection
				where (related.IsOpen)    			
		
		AllVendorBackorderDetailsForPORel
			one-to-many relation to VendorBackorderDetails
            Field Mapping uses ByPurchaseOrderLine
				related.ProcurementGroup 			= PurchasingCompanyRel.ProcurementGroup
                related.PurchasingCompany			= Company
                related.PurchaseOrder				= PurchaseOrder
                related.PurchaseOrderLine   		= PurchaseOrderLine

    Sets

    	ByRunGroup
			Sort Order
				RunGroup
				Company
				PurchaseOrder
				RecordId
				PurchaseOrderLine
				LineStatus
				PurchaseOrderEDIAcknowledgement

    	ByCompanyPurchaseOrderAcknowledgement
			Sort Order
				Company
				PurchaseOrder
				PurchaseOrderEDIAcknowledgement

	Field Rules
		Backorder
			if (PurchaseOrderLineRel.ItemType.Service)
				constraint (not Backorder)
					"CannotBackorderServiceTypeItems"				
			if (PurchaseOrderLineRel.ItemType.Special
			and PurchaseOrderLineRel.ContractLine not entered)
				constraint (not Backorder)
					"CannotBackorderASpecialItemWithoutContract"	
		BackorderType
			if (BackorderType entered)
				Backorder = true 
			constraint (Backorder)
				"BackorderMustBeTurnedOnWhenEnteringBackorderType"

		BackorderQuantity
			if (BackorderQuantity entered)
				Backorder = true 
			constraint (Backorder)
				"BackorderMustBeTurnedOnWhenEnteringBackorderQuantity"
			constraint (BackorderQuantity <= Quantity)
				"BackorderQuantityCannotExceeedQuantity"

		EstimatedAvailabilityDate
			if (EstimatedAvailabilityDate entered)
				Backorder = true 
			constraint (Backorder)
				"BackorderMustBeTurnedOnWhenEnteringEstimatedAvailabilityDate"
			constraint (EstimatedAvailabilityDate >= current corporate date)
				"EstimatedAvailabilityDateCannotBeBeforeCurrentDate"

		POShipDate
			ExecuteDeliveryToleranceDays = DerivedDeliveryToleranceDays
			if (POShipDate changed 
			and PurchaseOrderLineRel.DerivedLeadTimeDays entered
			and not LocalDisableDeliveryTolerance 
			and not POShipDateWithLeadTimeEarlierThanPODate)
				EarlyDeliveryDate = POShipDateWithLeadTime

    Actions

        Create is a Create Action

			Field Rules
			
				Company 
					required
					
				PurchaseOrder
					required

		Update is an Update Action

			Action Rules

				if (VendorItemChanged)
					constraint (VendorItem entered)
    		    		"VendorItemCannotBeBlank"
					if (InventoriedOrNonstock)
			    	    constraint (VendorItemsRel exists)
	    		    		"VendorItem<VendorItem>IsNotValidForThisItem"

				if (QuantityChanged)
   					constraint (Quantity > 0)
						"QuantityMustBeGreaterThanZero"
 	            	if (PurchaseOrderLineRel.ServiceCode.Amount)
		      	      	constraint(Quantity = 1)
	        	    		"ServiceItemByAmount,QuantityMustBe1"

				if (UnitOfMeasureChanged)
					constraint (UnitOfMeasure entered)
						"UnitOfMeasureCannotBeBlank"
					if (InventoriedOrNonstock)
						constraint (ItemUOMBuyRel.OKForBuying)
							"<UnitOfMeasure>IsNotValidForThisItem<Item>"
					else
						constraint (UnitOfMeasureRel exists)
							"UnitOfMeasure<UnitOfMeasure>DoesNotExist"

				if (EnteredUnitCostChanged)
    				constraint (EnteredUnitCost > 0)
   						"UnitCostMustBeGreaterThanZero"

				if (EarlyDeliveryDateChanged)
					if (!PurchaseOrderLineRel.ItemType.Service)
						constraint (EarlyDeliveryDate > 0)
							"DeliveryDateCannotBeBlank"
					constraint (EarlyDeliveryDate >= PurchaseOrderRel.PurchaseOrderDate)
						"DeliveryDateCannotBeBeforePurchaseOrderDateOf<PurchaseOrderRel.PurchaseOrderDate>"

				if (POShipDateChanged)
					constraint (POShipDate >= PurchaseOrderRel.PurchaseOrderDate)
						"ShipDateCannotBeBeforePurchaseOrderDateOf<PurchaseOrderRel.PurchaseOrderDate>"



        Delete is a Delete Action

        ProcessPurchaseOrderEDIAcknowledgement is a Set Action

            Parameters
                PrmRunGroup					is a RunGroup
					default label is "RunGroup"
				PrmCompany                  is a PurchasingCompany
					default label is "Company"
				PrmVendor                   is a Vendor
					default label is "Vendor"
				EnableGLNProcessing         is Boolean
				SendEmailToBuyers           is Boolean
				ManualProcessing			is Boolean
				PrmPurchaseOrder			is a PurchaseOrder
					default label is "PurchaseOrder"
				PrmAcknowledgementFromPO	is Boolean		
					
			Parameter Rules
				
				PrmRunGroup
					LocalRunGroup     = PrmRunGroup
					required
						"RunGroupIsRequired"
				EnableGLNProcessing 
					if (EnableGLNProcessing)
						constraint (PrmCompany entered)
							"MustEnterCompanyIfUsingGLNProcessing"
										
			Local Fields
				LocalAcknowledgementResultView		is a PurchaseOrderAcknowledgementResult view
				LocalPurchaseOrderRevisionView      is a PurchaseOrderRevision view
				LocalAcknowledgementResult          is like PurchaseOrderAcknowledgementResult
				LocalPurchaseOrderRevision          is like PurchaseOrderRevision
				LocalQuantityMatched				is Boolean
				LocalFailedDeliveryDate				is Boolean
				LocalManualAcknowledgementUpdate	is Boolean		
				LocalUnreleaseManualAcknowledgement is Boolean      
			
			Instance Selection			
				where (RunGroup	= PrmRunGroup
				and  ((PrmCompany  not entered)
				or    (Company					   = PrmCompany)
				or    (EnableGLNProcessing
				and    first GLNCompanyRel.Company = PrmCompany))
				and   ((PrmVendor not entered)
				or     (PurchaseOrderRel.Vendor   = PrmVendor)))
				
			Sort Order
				RunGroup
				Company
				PurchaseOrder
				RecordId
				PurchaseOrderLine
				
				
			Action Rules
			
				Empty Set Rules
				
					invoke Create PurchaseOrderAcknowledgementResult
						invoked.FinanceEnterpriseGroup			= actor.context.FinanceEnterpriseGroup
						invoked.RunTime							= current timestamp
						invoked.RunGroup						= PrmRunGroup
						invoked.Company 						= PrmCompany
						invoked.Vendor                          = PrmVendor
						invoked.EnableGLNProcessing         	= EnableGLNProcessing
				
				RunGroup Set Rules
					Entrance Rules
			
						invoke Create PurchaseOrderAcknowledgementResult
							assign result to LocalAcknowledgementResultView
							if (ManualProcessing)
								invoked.FinanceEnterpriseGroup		= PrmCompany.FinanceEnterpriseGroup
							else			
								invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
							invoked.RunTime							= current timestamp
							invoked.RunGroup						= PrmRunGroup
							invoked.Company 						= PrmCompany
							invoked.Vendor                          = PrmVendor
							invoked.EnableGLNProcessing         	= EnableGLNProcessing
					
					Exit Rules
					    if  (PrmAcknowledgementFromPO
                        and  LocalUnreleaseManualAcknowledgement)                       
                            invoke UnreleaseHeaderFromAcknowledgment PurchaseOrderLineRel 
						
						if (SendEmailToBuyers)
							invoke SendAcknowledgementEmailToBuyers Buyer
								invoked.PurchaseOrderAcknowledgementResult = LocalAcknowledgementResult
							
				Instance Rules
				
					if (EnableGLNProcessing = true
					and Company !entered)
						Company = first GLNCompanyRel.Company
					if (PurchaseOrderExists)
						if (!ManualProcessing)
							if 	(RecordId = "01") 
								LocalAcknowledgementResult = LocalAcknowledgementResultView.PurchaseOrderAcknowledgementResult
								if (PurchaseOrderRevisionsRel !exists)
									invoke CreateFirst PurchaseOrderRevision
										assign result to LocalPurchaseOrderRevisionView
										fill in fields from this instance
										invoked.Company         	= Company
										invoked.PurchaseOrder 		= PurchaseOrder
										invoked.AcknowledgementType	= AcknowledgementType
										if (AcknowledgementDate entered)
									        invoked.AcknowledgementDate = AcknowledgementDate		  
									    else
									    	invoked.AcknowledgementDate	= current corporate date


						 				invoked.NumberOfTransmissionAttempts = NumberOfTransmissionAttempts 
										invoked.AcknowledgementResult = LocalAcknowledgementResult
								else  
									invoke Update first PurchaseOrderRevisionsRel
										invoked.PurchaseOrderRevision = first PurchaseOrderRevisionsRel.PurchaseOrderRevision
										invoked.AcknowledgementType	= AcknowledgementType
								        if (AcknowledgementDate entered)
									        invoked.AcknowledgementDate = AcknowledgementDate		  
									    else
									    	invoked.AcknowledgementDate	= current corporate date		  


						 				invoked.NumberOfTransmissionAttempts = NumberOfTransmissionAttempts 
										invoked.AcknowledgementResult = LocalAcknowledgementResult
											
								if (PurchaseOrderRevisionExists)
									LocalPurchaseOrderRevision = first PurchaseOrderRevisionsRel.PurchaseOrderRevision
								else
									LocalPurchaseOrderRevision = LocalPurchaseOrderRevisionView.PurchaseOrderRevision
								if (PurchaseOrderDate entered
								and PurchaseOrderRel.PurchaseOrderDate     != PurchaseOrderDate)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.PODate                  = PurchaseOrderRel.PurchaseOrderDate
										invoked.EDIDate                 = PurchaseOrderDate
										invoked.MessageNumber           = 1
							if (RecordId = "40") 
								if (Vendor entered
								and PurchaseOrderRel.Vendor    != Vendor)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.PONumeric               = PurchaseOrderRel.Vendor
										invoked.EDINumeric              = Vendor
										invoked.MessageNumber           = 7
								
								else
								if (EnableGLNProcessing
								and VendorGLN entered
								and PurchaseOrderRel.Vendor      != VendorGLNRel.Vendor)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.PONumeric               = PurchaseOrderRel.Vendor
										invoked.EDINumeric              = first VendorGLNRel.Vendor
										invoked.MessageNumber           = 9
										
							if (RecordId = "45") 
								if (PurchaseFromLocation entered
								and PurchaseOrderRel.PurchaseFromLocation    != PurchaseFromLocation)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.POAlpha                 = PurchaseOrderRel.PurchaseFromLocation
										invoked.EDIAlpha                = PurchaseFromLocation
										invoked.MessageNumber           = 8
								if (Vendor entered)
									LocalVendor = Vendor
								else
								if (VendorGLN entered)
									LocalVendor = VendorGLNRel.Vendor
								
								if (PurchaseFromLocation !entered
								and EnableGLNProcessing
								and PurchaseFromLocationGLN entered
								and PurchaseOrderRel.PurchaseFromLocation    != PurchaseFromLocationGLNRel.VendorLocation)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.POAlpha                 = PurchaseOrderRel.PurchaseFromLocation
										invoked.EDIAlpha                = PurchaseFromLocationGLNRel.VendorLocation
										invoked.MessageNumber           = 11
							
							if (RecordId = "55") 
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.EDIAlpha                = Comments
									invoked.MessageNumber           = 40
							
							if (PurchaseOrderLine entered)
								if (PurchaseOrderLineExists)
									if (RecordId = "80") 
										if (CommodityCode entered
										and CommodityCode != PurchaseOrderLineRel.CommodityCode)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.CommodityCode
												invoked.EDIAlpha                = CommodityCode
												invoked.MessageNumber           = 12
									
										if (Description entered
										and Description != PurchaseOrderLineRel.Description)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.Description
												invoked.EDIAlpha                = Description
												invoked.MessageNumber           = 46
									
									if (RecordId = "60"		
									or  RecordId = "75")	
										if (Quantity entered)
											if (Quantity != PurchaseOrderLineRel.Quantity)
												invoke Create PurchaseOrderAcknowledgementMessage
													invoked.AcknowledgementResult 	= LocalAcknowledgementResult
													invoked.Company         		= Company
													invoked.PurchaseOrder   		= PurchaseOrder
													invoked.PurchaseOrderLine       = PurchaseOrderLine
													invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
													invoked.PONumeric               = PurchaseOrderLineRel.Quantity
													invoked.EDINumeric              = Quantity
													if (RecordId = "60")	
    												    invoked.MessageNumber           = 18
													else
													    invoked.MessageNumber           = 50
												LocalQuantityMatched = false
											else
												LocalQuantityMatched = true
										
										if (Item entered
										and Item != PurchaseOrderLineRel.Item)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.Item
												invoked.EDIAlpha                = Item
													if (RecordId = "60") 
														invoked.MessageNumber           = 14
													else
													    invoked.MessageNumber           = 51
										
										if (VendorItem entered
										and VendorItem != PurchaseOrderLineRel.VendorItem)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.VendorItem
												invoked.EDIAlpha                = VendorItem												
												if (RecordId = "60")	
													invoked.MessageNumber       = 47
												else
													invoked.MessageNumber       = 48

										if (UnitOfMeasure entered
										and UnitOfMeasure != PurchaseOrderLineRel.EnteredBuyUOM)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.EnteredBuyUOM
												invoked.EDIAlpha                = UnitOfMeasure
												if (RecordId = "60") 
												    invoked.MessageNumber       = 16
                                                else
												    invoked.MessageNumber       = 53
                                                    
										if (ItemGTIN entered
										and ItemGTIN != PurchaseOrderLineRel.ItemGTIN)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.ItemGTIN
												invoked.EDIAlpha                = ItemGTIN
												if (RecordId = "60")	
                                                    invoked.MessageNumber       = 17
												else
                                                    invoked.MessageNumber       = 52
												    
										if (EnteredUnitCost entered
										and EnteredUnitCost != PurchaseOrderLineRel.EnteredUnitCost)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAmount                = PurchaseOrderLineRel.EnteredUnitCost
												invoked.EDIAmount               = EnteredUnitCost
                                                invoked.MessageNumber           = 20
												    
									if (RecordId = "63")	
										if (Quantity entered
										and Quantity != PurchaseOrderLineRel.VendorPriceUOMQuantity)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.PONumeric               = PurchaseOrderLineRel.ItemGTIN
												invoked.EDINumeric              = ItemGTIN
												invoked.MessageNumber           = 19		
												
										if (EnteredUnitCost entered
										and EnteredUnitCost != PurchaseOrderLineRel.DerivedVendorPriceUnitCost)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAmount                = PurchaseOrderLineRel.DerivedVendorPriceUnitCost
												invoked.EDIAmount               = EnteredUnitCost
												if (!CostUpdateYes)
													invoked.MessageNumber       = 21		
												else 
													if (UnitOfMeasure entered
													and UnitOfMeasure != PurchaseOrderLineRel.EnteredBuyUOM)
														invoked.POAlpha			= PurchaseOrderLineRel.EnteredBuyUOM
														invoked.EDIAlpha		= UnitOfMeasure
														invoked.MessageNumber	= 55 		
													else
														invoked.MessageNumber   = 42		
											if  (CostUpdateYes
											and (UnitOfMeasure not entered
											or   UnitOfMeasure = PurchaseOrderLineRel.EnteredBuyUOM))
												invoke UpdateFromAcknowledgement PurchaseOrderLineRel
													invoked.VendorBuyUnitCost   = EnteredUnitCost
													
										if (UnitOfMeasure entered
										and UnitOfMeasure != PurchaseOrderLineRel.VendorPriceUOM)
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.POAlpha                 = PurchaseOrderLineRel.VendorPriceUOM
												invoked.EDIAlpha                = UnitOfMeasure
												invoked.MessageNumber           = 22
	
									if (RecordId = "70")	
										if (EarlyDeliveryDate entered)
											if (EarlyDeliveryDate != PurchaseOrderLineRel.EarlyDeliveryDate)
												ExecuteDeliveryToleranceDays 		= DerivedDeliveryToleranceDays
												invoke Create PurchaseOrderAcknowledgementMessage
													invoked.AcknowledgementResult 	= LocalAcknowledgementResult
													invoked.Company         		= Company
													invoked.PurchaseOrder   		= PurchaseOrder
													invoked.PurchaseOrderLine       = PurchaseOrderLine
													invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
													invoked.PODate                  = PurchaseOrderLineRel.EarlyDeliveryDate
													invoked.EDIDate                 = EarlyDeliveryDate
													if (EarlyDeliveryDateEarlierThanPODate)
														invoked.MessageNumber = 57
													else
													if (LocalDisableDeliveryTolerance)
														invoked.MessageNumber = 58
													else
													if (EarlyDeliveryDate <= DeliveryDateWithinTolerance)
														invoked.MessageNumber = 43	
													else
														invoked.MessageNumber = 45
														
											if (not LocalDisableDeliveryTolerance and not EarlyDeliveryDateEarlierThanPODate)			
												if (EarlyDeliveryDate <= DeliveryDateWithinTolerance)
													invoke FastUpdate PurchaseOrderLineRel
														invoked.EarlyDeliveryDate   = EarlyDeliveryDate
												else
													invoke FastUpdate PurchaseOrderLineRel
														invoked.LateDeliveryDate   = EarlyDeliveryDate
													LocalFailedDeliveryDate = true
										else
										if (POShipDate entered)
											if (POShipDate != PurchaseOrderLineRel.POShipDate)
												ExecuteDeliveryToleranceDays 		= DerivedDeliveryToleranceDays

												if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate)
													invoke FastUpdate PurchaseOrderLineRel
														invoked.POShipDate   = POShipDate

													invoke Create PurchaseOrderAcknowledgementMessage
														invoked.AcknowledgementResult 	= LocalAcknowledgementResult
														invoked.Company         		= Company
														invoked.PurchaseOrder   		= PurchaseOrder
														invoked.PurchaseOrderLine       = PurchaseOrderLine
														invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
														invoked.PODate                  = PurchaseOrderLineRel.POShipDate
														invoked.EDIDate                 = POShipDate
														
														if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate)
															invoked.MessageNumber = 60
														else
															invoked.MessageNumber = 61


												if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate
												and PurchaseOrderLineRel.DerivedLeadTimeDays entered
												and not LocalDisableDeliveryTolerance 
												and not POShipDateWithLeadTimeEarlierThanPODate)

													invoke FastUpdate PurchaseOrderLineRel
														if(POShipDateWithLeadTime <= DeliveryDateWithinTolerance)
															invoked.EarlyDeliveryDate = POShipDateWithLeadTime
														else
															invoked.LateDeliveryDate = POShipDateWithLeadTime

													invoke Create PurchaseOrderAcknowledgementMessage
														invoked.AcknowledgementResult 	= LocalAcknowledgementResult
														invoked.Company         		= Company
														invoked.PurchaseOrder   		= PurchaseOrder
														invoked.PurchaseOrderLine       = PurchaseOrderLine
														invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
														invoked.PODate                  = PurchaseOrderLineRel.EarlyDeliveryDate
														invoked.EDIDate                 = POShipDateWithLeadTime

														if(POShipDateWithLeadTime <= DeliveryDateWithinTolerance)
															invoked.MessageNumber = 62
														else
															invoked.MessageNumber = 63

									if (RecordId = "75")	
										if (LineStatus = "IA"
										and LocalFailedDeliveryDate)
											LineStatus = "IC"
											
										if (LineStatus = "AC")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 23
										else 
										if (LineStatus = "AR")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 24
										else
										if (LineStatus = "BP")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 25
										else
										if (LineStatus = "DR")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 26
										else
										if (LineStatus = "IA")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 27
										else
										if (LineStatus = "IB")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 28
										else 
										if (LineStatus = "IC")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 29
										else
										if (LineStatus = "ID")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 30
										else 
										if (LineStatus = "IE")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 31
												
										else 
										if (LineStatus = "IF")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 32
										else 
										if (LineStatus = "IH")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 33
										else 
										if (LineStatus = "IP")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 34
										else 
										if (LineStatus = "IQ")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 35
										else 
										if (LineStatus = "IR")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 36
										else 
										if (LineStatus = "IS")
											if (Item entered
											and Item != PurchaseOrderLineRel.Item)
												invoke Create PurchaseOrderAcknowledgementMessage
													invoked.AcknowledgementResult 	= LocalAcknowledgementResult
													invoked.Company         		= Company
													invoked.PurchaseOrder   		= PurchaseOrder
													invoked.PurchaseOrderLine       = PurchaseOrderLine
													invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
													invoked.POAlpha 			= PurchaseOrderLineRel.Item
													invoked.EDIAlpha 			= Item
													invoked.MessageNumber 		= 37

											if (VendorItem entered
											and VendorItem != PurchaseOrderLineRel.VendorItem)
												invoke Create PurchaseOrderAcknowledgementMessage
													invoked.AcknowledgementResult   = LocalAcknowledgementResult
													invoked.Company                 = Company
													invoked.PurchaseOrder           = PurchaseOrder
													invoked.PurchaseOrderLine       = PurchaseOrderLine
													invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
													invoked.POAlpha             = PurchaseOrderLineRel.VendorItem
													invoked.EDIAlpha            = VendorItem

													if (PurchaseOrderRel.PurchaseFromLocation entered
													and PurchaseFromLocationRel exists)
														if (!VendorItemChangeAllowedPurchaseFrom)
															invoked.MessageNumber       = 54
														else
														if (VendorItemChangeAllowedPurchaseFrom)
															if (not IsValidVendorItem)
																invoked.MessageNumber		= 56
															else
																invoked.MessageNumber       = 49 
													else
														if (!VendorItemChangeAllowedVendor)
															invoked.MessageNumber       = 54
														else
														if (VendorItemChangeAllowedVendor)
															if (not IsValidVendorItem)
																invoked.MessageNumber		= 56
															else
																invoked.MessageNumber       = 49

												if (PurchaseOrderRel.PurchaseFromLocation entered
												and PurchaseFromLocationRel exists)
													if (VendorItemChangeAllowedPurchaseFrom 
													and IsValidVendorItem)
														invoke FastUpdate PurchaseOrderLineRel
															invoked.VendorItem      = VendorItem
															if (this instance.PurchaseOrderLineRel.ItemType.Special)
																invoked.MatchDetailKey = VendorItem
												else
												if (VendorItemChangeAllowedVendor
												and IsValidVendorItem)
													invoke FastUpdate PurchaseOrderLineRel
														invoked.VendorItem      = VendorItem 
														if (this instance.PurchaseOrderLineRel.ItemType.Special)
															invoked.MatchDetailKey = VendorItem 	
										else 
										if (LineStatus = "IW")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 38
										else 
										if (LineStatus = "SP")
											invoke Create PurchaseOrderAcknowledgementMessage
												invoked.AcknowledgementResult 	= LocalAcknowledgementResult
												invoked.Company         		= Company
												invoked.PurchaseOrder   		= PurchaseOrder
												invoked.PurchaseOrderLine       = PurchaseOrderLine
												invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
												invoked.MessageNumber           = 39
                             
                                        if (LineStatus = "BP"
                                        or LineStatus  = "IB")
                                            BackorderQuantity = Quantity
                                            invoke Create PurchaseOrderAcknowledgementMessage
                                                invoked.AcknowledgementResult 	= LocalAcknowledgementResult
                                                invoked.Company         		= Company
                                                invoked.PurchaseOrder   		= PurchaseOrder
                                                invoked.PurchaseOrderLine       = PurchaseOrderLine
                                                invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
                                                if (Item entered)
											        invoked.EDIAlpha 			= Item
                                                else
                                            		invoked.EDIAlpha 			= PurchaseOrderLineRel.Item
                                                invoked.POAlpha 				= BackorderDetailMessage
                                                invoked.EDIDate 				= AcknowledgementStatusDate 
                                                invoked.MessageNumber           = 59
	
											if (VendorBackorderDetailsForPORel exists)  
                                                for each VendorBackorderDetailsForPORel
                                                    invoke FastUpdate each
                                                        if (AcknowledgementStatusDate entered
                                                        and AcknowledgementStatusDate >= current corporate date)
                                                            invoked.EstimatedAvailabilityDate = AcknowledgementStatusDate
                                                        invoked.AcknowledgementType			= 2 
                                                        invoked.AcknowledgementDate			= current corporate date
                                                        invoked.BackorderQuantity			= Quantity
                                            else 
											if (AllVendorBackorderDetailsForPORel not exists) 
                                                invoke CreateBackorderFromPurchaseOrder VendorBackorderDetails
                                                    fill in fields from this instance
                                                    invoked.ProcurementGroup			= PurchasingCompanyRel.ProcurementGroup
                                                    invoked.PurchasingCompany			= Company
                                                    if (AcknowledgementStatusDate entered
                                                    and AcknowledgementStatusDate >= current corporate date)
                                                        invoked.EstimatedAvailabilityDate = AcknowledgementStatusDate
                                                    invoked.AcknowledgementType			= 2 
                                                    invoked.AcknowledgementDate			= current corporate date
                                                    invoked.BackorderQuantity			= Quantity
                                                    if (Item not entered)
                                                        invoked.Item					= PurchaseOrderLineRel.Item
                                                    if (Vendor not entered)
                                                        invoked.Vendor					= PurchaseOrderLineRel.Vendor
                                                    if (VendorItem not entered)
                                                        invoked.VendorItem				= PurchaseOrderLineRel.VendorItem	

									if (RecordId = "90")	
										invoke Create PurchaseOrderAcknowledgementMessage
											invoked.AcknowledgementResult 	= LocalAcknowledgementResult
											invoked.Company         		= Company
											invoked.PurchaseOrder   		= PurchaseOrder
											invoked.PurchaseOrderLine       = PurchaseOrderLine
											invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
											invoked.EDIAlpha                = Comments
											invoked.MessageNumber           = 40
											
								else
								if (!PurchaseOrderLineExists)
									invoke Create PurchaseOrderAcknowledgementMessage
										invoked.AcknowledgementResult 	= LocalAcknowledgementResult
										invoked.Company         		= Company
										invoked.PurchaseOrder   		= PurchaseOrder
										invoked.PurchaseOrderLine       = PurchaseOrderLine
										invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
										invoked.MessageNumber           = 13

						else
							initialize LocalManualAcknowledgementUpdate
							LocalAcknowledgementResult = LocalAcknowledgementResultView.PurchaseOrderAcknowledgementResult
							if (PurchaseOrderRevisionsRel !exists)
								invoke CreateFirst PurchaseOrderRevision
									assign result to LocalPurchaseOrderRevisionView
									fill in fields from this instance
									invoked.Company         	= Company
									invoked.PurchaseOrder 		= PurchaseOrder
									invoked.Buyer               = PurchaseOrderRel.Buyer 
									if (PrmAcknowledgementFromPO) 		
										invoked.AcknowledgementType	= "MA" 
									else
										invoked.AcknowledgementType	= "SP"
							        	invoked.AcknowledgementDate = current date		  
									invoked.AcknowledgementResult = LocalAcknowledgementResult
							else  
								invoke Update first PurchaseOrderRevisionsRel
									invoked.PurchaseOrderRevision = first PurchaseOrderRevisionsRel.PurchaseOrderRevision
							        invoked.Buyer               = PurchaseOrderRel.Buyer
									if (PrmAcknowledgementFromPO) 		
										invoked.AcknowledgementType	= "MA" 
									else
										invoked.AcknowledgementType	= "SP"
							        	invoked.AcknowledgementDate = current date		  
									invoked.AcknowledgementResult = LocalAcknowledgementResult
							
							if (PurchaseOrderRevisionExists)
								LocalPurchaseOrderRevision = first PurchaseOrderRevisionsRel.PurchaseOrderRevision
							else
								LocalPurchaseOrderRevision = LocalPurchaseOrderRevisionView.PurchaseOrderRevision							
							
							if (EarlyDeliveryDate != PurchaseOrderLineRel.EarlyDeliveryDate)
								ExecuteDeliveryToleranceDays 		= DerivedDeliveryToleranceDays
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.PODate                  = PurchaseOrderLineRel.EarlyDeliveryDate
									invoked.EDIDate                 = EarlyDeliveryDate
									if (EarlyDeliveryDateEarlierThanPODate)
										invoked.MessageNumber = 57
									else
									if (LocalDisableDeliveryTolerance)
										invoked.MessageNumber = 58
									else
									if (EarlyDeliveryDate <= DeliveryDateWithinTolerance)
										invoked.MessageNumber = 43	
									else
										invoked.MessageNumber = 45
								if (not LocalDisableDeliveryTolerance and not EarlyDeliveryDateEarlierThanPODate)	
									LocalManualAcknowledgementUpdate = PrmAcknowledgementFromPO		
									if (EarlyDeliveryDate <= DeliveryDateWithinTolerance)
										invoke FastUpdate PurchaseOrderLineRel
											invoked.EarlyDeliveryDate   = EarlyDeliveryDate
									else
										invoke FastUpdate PurchaseOrderLineRel
											invoked.LateDeliveryDate   = EarlyDeliveryDate
										LocalFailedDeliveryDate = true
							
                            if (POShipDate entered)
								if (POShipDate != PurchaseOrderLineRel.POShipDate)
									ExecuteDeliveryToleranceDays 		= DerivedDeliveryToleranceDays

									if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate)
										invoke FastUpdate PurchaseOrderLineRel
											invoked.POShipDate   = POShipDate

										invoke Create PurchaseOrderAcknowledgementMessage
											invoked.AcknowledgementResult 	= LocalAcknowledgementResult
											invoked.Company         		= Company
											invoked.PurchaseOrder   		= PurchaseOrder
											invoked.PurchaseOrderLine       = PurchaseOrderLine
											invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
											invoked.PODate                  = PurchaseOrderLineRel.POShipDate
											invoked.EDIDate                 = POShipDate
											
											if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate)
												invoked.MessageNumber = 60
											else
												invoked.MessageNumber = 61


									if (POShipDate >= PurchaseOrderRel.PurchaseOrderDate
									and PurchaseOrderLineRel.DerivedLeadTimeDays entered
									and not LocalDisableDeliveryTolerance 
									and not POShipDateWithLeadTimeEarlierThanPODate)
										invoke FastUpdate PurchaseOrderLineRel
											if(POShipDateWithLeadTime <= DeliveryDateWithinTolerance)
												invoked.EarlyDeliveryDate = POShipDateWithLeadTime
											else
												invoked.LateDeliveryDate = POShipDateWithLeadTime

										invoke Create PurchaseOrderAcknowledgementMessage
											invoked.AcknowledgementResult 	= LocalAcknowledgementResult
											invoked.Company         		= Company
											invoked.PurchaseOrder   		= PurchaseOrder
											invoked.PurchaseOrderLine       = PurchaseOrderLine
											invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
											invoked.PODate                  = PurchaseOrderLineRel.EarlyDeliveryDate
											invoked.EDIDate                 = POShipDateWithLeadTime

											if(POShipDateWithLeadTime <= DeliveryDateWithinTolerance)
												invoked.MessageNumber = 62
											else
												invoked.MessageNumber = 63

							if (Quantity != PurchaseOrderLineRel.Quantity)
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.PONumeric               = PurchaseOrderLineRel.Quantity
									invoked.EDINumeric              = Quantity
									invoked.MessageNumber           = 18
								LocalQuantityMatched = false
							else
								LocalQuantityMatched = true
									
							if (UnitOfMeasure != PurchaseOrderLineRel.EnteredBuyUOM)
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.POAlpha                 = PurchaseOrderLineRel.EnteredBuyUOM
									invoked.EDIAlpha                = UnitOfMeasure
									invoked.MessageNumber           = 16

							if (EnteredUnitCost != PurchaseOrderLineRel.EnteredUnitCost)
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.POAmount                = PurchaseOrderLineRel.EnteredUnitCost
									invoked.EDIAmount               = EnteredUnitCost
									if (PrmAcknowledgementFromPO)
										if (!CostUpdateYes)
											invoked.MessageNumber		= 21
										else
											if (UnitOfMeasure entered
											and UnitOfMeasure != PurchaseOrderLineRel.EnteredBuyUOM)
												invoked.POAlpha 		= PurchaseOrderLineRel.EnteredBuyUOM
												invoked.EDIAlpha 		= UnitOfMeasure
												invoked.MessageNumber	= 55
											else
												invoked.MessageNumber	= 42
									else
										invoked.MessageNumber           = 20
								
								if (PrmAcknowledgementFromPO)
									if  (CostUpdateYes
									and (UnitOfMeasure not entered
									or   UnitOfMeasure = PurchaseOrderLineRel.EnteredBuyUOM))
										LocalManualAcknowledgementUpdate = PrmAcknowledgementFromPO
										invoke UpdateFromAcknowledgement PurchaseOrderLineRel
											invoked.VendorBuyUnitCost   = EnteredUnitCost			
											
							if (VendorItem != PurchaseOrderLineRel.VendorItem)
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.POAlpha                 = PurchaseOrderLineRel.VendorItem
									invoked.EDIAlpha                = VendorItem
									if (PurchaseOrderRel.PurchaseFromLocation entered
									and PurchaseFromLocationRel exists)
										if (!VendorItemChangeAllowedPurchaseFrom)
											invoked.MessageNumber       = 15
										else
										if (VendorItemChangeAllowedPurchaseFrom)
											if (!IsValidVendorItem)
												invoked.MessageNumber		= 56
											else
												invoked.MessageNumber       = 41
									else
										if (!VendorItemChangeAllowedVendor)
											invoked.MessageNumber   	= 15
										else
										if (VendorItemChangeAllowedVendor)
											if (!IsValidVendorItem)
												invoked.MessageNumber		= 56
											else
												invoked.MessageNumber       = 41
								if (PurchaseOrderRel.PurchaseFromLocation entered
								and PurchaseFromLocationRel exists)
									if (VendorItemChangeAllowedPurchaseFrom
									and IsValidVendorItem)
										LocalManualAcknowledgementUpdate = PrmAcknowledgementFromPO
										invoke FastUpdate PurchaseOrderLineRel
											invoked.VendorItem      = VendorItem
											if (this instance.PurchaseOrderLineRel.ItemType.Special)
												invoked.MatchDetailKey = VendorItem
								else
									if (VendorItemChangeAllowedVendor
									and IsValidVendorItem)
										LocalManualAcknowledgementUpdate = PrmAcknowledgementFromPO
										invoke FastUpdate PurchaseOrderLineRel
											invoked.VendorItem      = VendorItem
											if (this instance.PurchaseOrderLineRel.ItemType.Special)
												invoked.MatchDetailKey = VendorItem 	
							if  (PrmAcknowledgementFromPO
							and  LocalManualAcknowledgementUpdate)						 
							    LocalUnreleaseManualAcknowledgement = true
								invoke UnreleaseFromAcknowledgement PurchaseOrderLineRel 

							if (Backorder)
								invoke Create PurchaseOrderAcknowledgementMessage
									invoked.AcknowledgementResult 	= LocalAcknowledgementResult
									invoked.Company         		= Company
									invoked.PurchaseOrder   		= PurchaseOrder
									invoked.PurchaseOrderLine       = PurchaseOrderLine
									invoked.PurchaseOrderRevision   = LocalPurchaseOrderRevision
									invoked.EDIAlpha 				= Item
									invoked.POAlpha 				= BackorderDetailMessage
									invoked.EDIDate 				= EstimatedAvailabilityDate 
									invoked.MessageNumber           = 59
								invoke CreateBackorderFromPurchaseOrder VendorBackorderDetails
									fill in fields from this instance
									invoked.ProcurementGroup			= PurchasingCompanyRel.ProcurementGroup
									invoked.PurchasingCompany			= Company
									invoked.AcknowledgementDate			= current corporate date
									if  (PrmAcknowledgementFromPO)
										invoked.AcknowledgementType			= 1 
									else 
										invoked.AcknowledgementType         = 3 
									if (Item not entered)
										invoked.Item					= PurchaseOrderLineRel.Item
									if (Vendor not entered)
										invoked.Vendor					= PurchaseOrderLineRel.Vendor
									if (VendorItem not entered)
										invoked.VendorItem				= PurchaseOrderLineRel.VendorItem	
						if (Company entered
						and PurchaseOrder entered)
							invoke Delete		










								
								
        PopulateMissingCompanyOrVendor is a Set Action
            Parameters
                PrmCompany is a Company
                    default label is "Company"
            Parameter Rules
                PrmCompany
                    required
                    
            Sort Order is primary
            
            Instance Selection
                where (Company not entered
                or (RecordId = "40" and Vendor not entered))
            
            Action Rules
                Instance Rules
					AckCompany = PrmCompany
					AckPurchaseOrder = PurchaseOrder
					if (AckPurchaseOrderRel exists)
						if (Company not entered)
							Company = PrmCompany
						if (RecordId = "40" and Vendor not entered)
							Vendor = AckPurchaseOrderRel.Vendor
                                                              
 
