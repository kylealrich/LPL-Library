AsyncScheduleTemplate is a BusinessClass
    owned by async
    prefix is ASST
    stored in environment

    Ontology
    	symbolic key is AsyncScheduleTemplate

    Patterns
        disable EffectiveDated
        disable AsOfDateProcessing
        implements UniqueID
       
    Persistent Fields
    	Description 				is Alpha 50
    	ScheduleType				is Numeric size 1
    		States
    			Template	value is 1
    			Exclusion	value is 2
    	ScheduleYearType			is Numeric size 1
    		default label is "YearType"    						
    		States												
    			EveryYear		value is 0
    			OddYears		value is 1
        		EvenYears		value is 2
        		SpecificYear    value is 3
        		Range			value is 4
        		Multiple		value is 5
    	AsyncScheduleYear
    		default label is "ScheduleDays"
    	ScheduleMonth				is a AsyncScheduleMonth
    	ScheduleMonthsArray			is a AsyncScheduleMonths
    		default label is "ScheduleMonths"
    	ScheduleDay					is a AsyncScheduleDay
    	ScheduleDaysArray			is a AsyncScheduleDays
    		default label is "ScheduleDays"
    	ScheduleWeekDay				is a AsyncScheduleWeekDay
    	ScheduleWeekDaysArray		is a AsyncScheduleWeekDays	
    		default label is "ScheduleDaysOfWeek"		
    	ScheduleWeekDayOccurence	is a AsyncScheduleWeekDayOccurence
    		default label is "ScheduleWeekDayOccurrence"
    	ScheduleWeekDayOccurenceArray is a AsyncScheduleWeekDayOccurences
    		default label is "ScheduleWeekOccurrence"
    	ScheduleWeekNumber			is a AsyncScheduleWeekNumber
    	ScheduleWeekNumbersArray	is a AsyncScheduleWeekNumbers
    		default label is "ScheduleWeekNumber"
    	ScheduleHour				is a AsyncScheduleHour
    	ScheduleHoursArray			is a AsyncScheduleHours
    		default label is "ScheduleHour"
    	ScheduleMinute				is a AsyncScheduleMinute
    	ScheduleMinutesArray		is a AsyncScheduleMinutes
    		default label is "ScheduleMinute"
    	ScheduleTimeZone			is a TimeZone
    	ExcludeWhen					is an AsyncExcludeWhen 
    	
	Local Fields
		LocalTestTime 				is TimeStamp
		    	
	Transient Fields
		TestTime 					is TimeStamp
			derive value from LocalTestTime    
    
    Field Rules
    	ScheduleType
    		required
    		cannot be changed
    		
    	AsyncScheduleYear
			if (ScheduleYearType.SpecificYear or ScheduleYearType.Range or ScheduleYearType.Multiple)
				required
					"YearIsRequired"
				
				if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and not ScheduleYearType.EveryYear)
					if (ScheduleMonth.EveryMonth and ScheduleDay.EveryDay and ScheduleWeekDay.EveryWeekDay and ScheduleWeekDayOccurence.EveryOccurrence and ScheduleWeekNumber.EveryWeek and ScheduleHour.EveryHour and ScheduleMinute.EveryMinute)
						confirmation required
							"AreYouSureYouWantToExcludeEntireYears?"
					else
						confirmation required
							"AreYouSureYouWantToExcludeEntireYears?ConsiderUsingYearValuesWhenMatchingOnAllSelectedCriteria."
					
			else
				initialize AsyncScheduleYear
				
		ScheduleMonth
			if (not ScheduleMonth.Range and not ScheduleMonth.Multiple)
				initialize ScheduleMonthsArray
				
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleMonth.Range)
				constraint (ScheduleMonthsArray.AsyncScheduleMonthSelect[1] > 1 or ScheduleMonthsArray.AsyncScheduleMonthSelect[2] < 12)
					"SelectionWillResultInNoAllowedSchedules"
					 
				if (ScheduleYearType.EveryYear and ScheduleDay.EveryDay and ScheduleWeekDay.EveryWeekDay and ScheduleWeekDayOccurence.EveryOccurrence and ScheduleWeekNumber.EveryWeek and ScheduleHour.EveryHour and ScheduleMinute.EveryMinute)
					confirmation required
						"AreYouSureYouWantToExcludeEntireMonths?"
				else
					confirmation required
						"AreYouSureYouWantToExcludeEntireMonths?ConsiderUsingMonthValuesWhenMatchingOnAllSelectedCriteria."
				
		ScheduleMonthsArray				
			if (ScheduleMonth.Range or ScheduleMonth.Multiple)
				required
				
		ScheduleDay
			if (not ScheduleDay.Range and not ScheduleDay.Multiple)
				initialize ScheduleDaysArray
				
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleDay.Range)
				constraint (ScheduleDaysArray.AsyncScheduleDaySelect[1] > 1 or ScheduleDaysArray.AsyncScheduleDaySelect[2] < 31)
					"SelectionWillResultInNoAllowedSchedules"				
				
		ScheduleDaysArray				
			if (ScheduleDay.Range or ScheduleDay.Multiple)
				required
				
		ScheduleWeekDay
			if (not ScheduleWeekDay.Range and not ScheduleWeekDay.Multiple)
				initialize ScheduleWeekDaysArray
			
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleWeekDay.Range)
				constraint (ScheduleWeekDaysArray.AsyncScheduleWeekDaySelect[1] > 1 or ScheduleWeekDaysArray.AsyncScheduleWeekDaySelect[2] < 7)
					"SelectionWillResultInNoAllowedSchedules"		
				
		ScheduleWeekDaysArray						
			if (ScheduleWeekDay.Range or ScheduleWeekDay.Multiple)
				required
		
		ScheduleWeekDayOccurence
			if (not ScheduleWeekDayOccurence.Range and not ScheduleWeekDayOccurence.Multiple)
				initialize ScheduleWeekDayOccurenceArray
				
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleWeekDayOccurence.Range)
				constraint (ScheduleWeekDayOccurenceArray.AsyncScheduleWeekDayOccurenceSelect[1] > 1 or ScheduleWeekDayOccurenceArray.AsyncScheduleWeekDayOccurenceSelect[2] < 5)
					"SelectionWillResultInNoAllowedSchedules"		
				
		ScheduleWeekDayOccurenceArray
			if (ScheduleWeekDayOccurence.Range or ScheduleWeekDayOccurence.Multiple)
				required
				
		ScheduleWeekNumber
			if (not ScheduleWeekNumber.Range and not ScheduleWeekNumber.Multiple)
				initialize ScheduleWeekNumbersArray

			if (ScheduleType.Exclusion)
				constraint (not ScheduleWeekNumber.BiWeekly)
					"BiWeeklyNotSupportedForExclusionSchedules"
					
				if (ExcludeWhen.AnyMatch and ScheduleWeekNumber.Range)
					constraint (ScheduleWeekNumbersArray.AsyncScheduleWeekNumberSelect[1] > 1 or ScheduleWeekNumbersArray.AsyncScheduleWeekNumberSelect[2] < 53)
						"SelectionWillResultInNoAllowedSchedules"		
					
		ScheduleWeekNumbersArray
			if (ScheduleWeekNumber.Range or ScheduleWeekNumber.Multiple)
				required
						
		ScheduleHour
			if (not ScheduleHour.Range and not ScheduleHour.Multiple)
				initialize ScheduleHoursArray	
				
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleHour.Range)
				constraint (ScheduleHoursArray.AsyncScheduleHourSelect[1] > 0 or ScheduleHoursArray.AsyncScheduleHourSelect[2] < 23)
					"SelectionWillResultInNoAllowedSchedules"			
			
			initial value is "-3" 
				
		ScheduleHoursArray
			if (ScheduleHour.Range or ScheduleHour.Multiple)
				required
			
		ScheduleMinute
			if (not ScheduleMinute.Range and not ScheduleMinute.Multiple)
				initialize ScheduleMinutesArray
				
			if (ScheduleType.Exclusion and ExcludeWhen.AnyMatch and ScheduleMinute.Range)
				constraint (ScheduleMinutesArray.AsyncScheduleMinuteSelect[1] > 0 or ScheduleMinutesArray.AsyncScheduleMinuteSelect[2] < 59)
					"SelectionWillResultInNoAllowedSchedules"
					
			initial value is "-3" 
				
		ScheduleMinutesArray								
			if (ScheduleMinute.Range or ScheduleMinute.Multiple)
				required	
				
		ScheduleTimeZone
			initial value is ContextTimeZone
			default to ContextTimeZone		
			
		TestTime
			initial value is CurrentTime
			default to CurrentTime
			
		ExcludeWhen
			initial value is ExcludeWhen.AllMatch 
			
			if (ScheduleType.Template)
				force default to ExcludeWhen.AllMatch 
    	
	Conditions
		DisplayScheduleYear
			when (ScheduleYearType.SpecificYear or ScheduleYearType.Range or ScheduleYearType.Multiple) 	
			
		DisplayScheduleYearType
			when (ScheduleYearType.EvenYears or ScheduleYearType.OddYears)
			
		DisplayScheduleMonth
			when (ScheduleMonth.Range or ScheduleMonth.Multiple)			
			
		DisplayScheduleDay
			when (ScheduleDay.Range or ScheduleDay.Multiple)
			
		DisplayScheduleWeekDay
			when (ScheduleWeekDay.Range or ScheduleWeekDay.Multiple)			
			
		DisplayScheduleWeekDayOccurence
			default label is "DisplayScheduleWeekDayOccurrence"
			when (ScheduleWeekDayOccurence.Range or ScheduleWeekDayOccurence.Multiple)		
			
		DisplayScheduleWeekNumber
			when (ScheduleWeekNumber.Range or ScheduleWeekNumber.Multiple)			
		
		DisplayScheduleHour
			when (ScheduleHour.Range or ScheduleHour.Multiple)
			
		DisplayScheduleMinute
			when (ScheduleMinute.Range or ScheduleMinute.Multiple)		
		
		DisplayYearElement2
			default label is untranslatable
			when (ScheduleYearType.Range or ScheduleYearType.Multiple)
			
		DisplayMonthElement2
			default label is untranslatable
			when (ScheduleMonth.Range or ScheduleMonth.Multiple)
			
		DisplayDayElement2
			default label is untranslatable
			when (ScheduleDay.Range or ScheduleDay.Multiple)	
			
		DisplayDayOfWeekElement2
			default label is untranslatable
			when (ScheduleWeekDay.Range or ScheduleWeekDay.Multiple)	
			
		DisplayWeekDayOccurenceElement2
			default label is untranslatable
			when (ScheduleWeekDayOccurence.Range or ScheduleWeekDayOccurence.Multiple)								
			
		DisplayWeekNumberElement2
			default label is untranslatable
			when (ScheduleWeekNumber.Range or ScheduleWeekNumber.Multiple)			
			
		DisplayHourElement2
			default label is untranslatable
			when (ScheduleHour.Range or ScheduleHour.Multiple)	
			
		DisplayMinuteElement2
			default label is untranslatable
			when (ScheduleMinute.Range or ScheduleMinute.Multiple)		
			
		HasAuditRecords
			default label is "AuditRecordsExist"
			when (AuditingRel exists)					
			    	
	Derived Fields
		ContextTimeZone is a NativeField
			type is Alpha size 30	
		
		ContextTimeZoneDisplayName is a NativeField
			type is Alpha size 30	
			
		CurrentTime is a NativeField
			type is TimeStamp
			

		NextScheduledExecution1 is a NativeField
			type is TimeStamp
		


		NextScheduledExecution2 is a NativeField
			type is TimeStamp
		


		NextScheduledExecution3 is a NativeField
			type is TimeStamp	
			
		AsyncAuditingEnabled is a NativeField
			type is Boolean
			default label is untranslatable
			restricted

			    	
    Actions
    	CreateTemplate is a Create Action
    		Entrance Rules
    			ScheduleType = ScheduleType.Template
    			LocalTestTime = TestTime 
    		Action Rules
    			if (ScheduleYearType.EveryYear and ScheduleMonth.EveryMonth and ScheduleDay.EveryDay and ScheduleWeekDay.EveryWeekDay and ScheduleWeekDayOccurence.EveryOccurrence and ScheduleWeekNumber.EveryWeek and ScheduleHour.EveryHour and ScheduleMinute.EveryMinute)
    				confirmation required
    					"AreYouSureYouWantToScheduleForEveryMinuteInTime?"
    		Exit Rules
				if (AsyncAuditingEnabled) 
					invoke Create AsyncAuditEntry  
    				
    	CreateExclusion is a Create Action
    		Entrance Rules
    			ScheduleType = ScheduleType.Exclusion
    			LocalTestTime = TestTime 
			Action Rules    
				constraint (not ScheduleYearType.EveryYear or not ScheduleMonth.EveryMonth or not ScheduleDay.EveryDay or not ScheduleWeekDay.EveryWeekDay or not ScheduleWeekDayOccurence.EveryOccurrence or not ScheduleWeekNumber.EveryWeek or not ScheduleHour.EveryHour or not ScheduleMinute.EveryMinute)
					"MustChooseAtLeastOneOption"	
			Exit Rules
				if (AsyncAuditingEnabled) 
					invoke Create AsyncAuditEntry  
    				
    	Update is an Update Action
    		Entrance Rules
    			LocalTestTime = TestTime 
    			
    		Action Rules
    			if (ScheduleType.Template)
	    			if (ScheduleYearType.EveryYear and ScheduleMonth.EveryMonth and ScheduleDay.EveryDay and ScheduleWeekDay.EveryWeekDay and ScheduleWeekDayOccurence.EveryOccurrence and ScheduleWeekNumber.EveryWeek and ScheduleHour.EveryHour and ScheduleMinute.EveryMinute)
    					confirmation required
    						"AreYouSureYouWantToScheduleForEveryMinuteInTime?"
	    		else
	    			constraint (not ScheduleYearType.EveryYear or not ScheduleMonth.EveryMonth or not ScheduleDay.EveryDay or not ScheduleWeekDay.EveryWeekDay or not ScheduleWeekDayOccurence.EveryOccurrence or not ScheduleWeekNumber.EveryWeek or not ScheduleHour.EveryHour or not ScheduleMinute.EveryMinute)
	    				"MustChooseAtLeastOneOption"
	    	
	    		if (AsyncAuditingEnabled)
					invoke Create AsyncAuditEntry 
	    				
    	Delete is a Delete Action
    		Entrance Rules
    			if (AsyncAuditingEnabled)
					invoke Create AsyncAuditEntry
				 		
	Relations
		AuditingRel
			one-to-many relation to AsyncAuditEntry
			Field Mapping uses ByBusClassID
				related.Reference.BusinessClassName = "AsyncScheduleTemplate"
				related.Reference.BusinessObjectKey = UniqueID
    	
    Sets
		ByType
			indexed
			Sort Order
				ScheduleType
				AsyncScheduleTemplate
				
