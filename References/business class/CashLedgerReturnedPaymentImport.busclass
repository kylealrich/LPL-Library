CashLedgerReturnedPaymentImport is a BusinessClass
    owned by cb
    prefix is RPL
    sql name is CLedgerReturnedPaymentImport
    classic name is CBRTPLOAD

    Ontology
        symbolic key is CashLedgerReturnedPaymentImport
            classic set name is RPLSET1
            classic name for CashLedgerReturnedPaymentImport.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerReturnedPaymentImport.TransactionNumber is TRANS-NBR
			classic name for CashLedgerReturnedPaymentImport.SequenceNumber is SEQ-NBR
			
    Patterns
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

    Persistent Fields
        Status                             	is Numeric size 1
            classic name is REC-STATUS
            States
                Unreleased value is 0
                Released   value is 1
        Company                            	is a GeneralLedgerCompany
			disable surrogates
        ReturnDate                         	is Date
            classic name is RET-DATE
        PostDate                           	is Date
        Description
        OriginalDepositBankTransactionCode 	is a DepositBankTransactionCode
            sql name is ODepositBankTransactionCode
            classic name is DEP-BANK-INST
        DepositType                        	is AlphaUpper size 1
            States
                ManualPayment           value is blank
                WirePayment             value is "1"
                CreditCard              value is "2"
                Lockbox                 value is "3"
                ElectronicFundsTransfer value is "4"
                Rebate                  value is "5"
        DepositNumber                   	is a TransactionNumber
            classic name is DEPOSIT-NBR
        ElectronicFundsTransferNumber  	    is a TransactionNumber
            classic name is EFT-NUMBER
        BankExpenseTransactionAmount       	is an InternationalAmount
            classic name is BEXP-TRAN-AMT
		TransactionData1                    is a TransactionData
            classic name is USER-FIELD1
		TransactionData2                    is a TransactionData
            classic name is USER-FIELD2
		TransactionData3                    is a TransactionData
            classic name is USER-FIELD3
		TransactionData4                    is a TransactionData
            classic name is USER-FIELD4
        ReceiptAmount                      	is an InternationalAmount
        Reference
        TaxCode
        TaxableAmount                      	is an InternationalAmount
            classic name is TAXABLE-AMT
        GeneralLedgerSourceCode				is a GeneralLedgerEvent
            classic name is SOURCE-CODE
            default label is "SourceCode"
        CashLedgerStatement					is like CashLedgerStatement
            classic name is RECON-STMT-NBR
        BankExpenseAccount                 	is a FinanceCodeBlock
            classic name for BankExpenseAccount.ToAccountingEntity is BEXP-COMPANY
            classic name for BankExpenseAccount.AccountingUnit is BEXP-ACCT-UNIT
            classic name for BankExpenseAccount.GeneralLedgerChartAccount is BEXP-ACCOUNT
            classic name for BankExpenseAccount.Project is BEXP-ACTIVITY
        ReceiptAccount                     	is a FinanceCodeBlock
            classic name for ReceiptAccount.ToAccountingEntity is RCPT-COMPANY
            classic name for ReceiptAccount.AccountingUnit is RCPT-ACCT-UNIT
            classic name for ReceiptAccount.GeneralLedgerChartAccount is RCPT-ACCOUNT
            classic name for ReceiptAccount.Project is ACTIVITY
		TaxAccountingEntity					is a ToAccountingEntity
		InterfaceAsPosted					is Boolean

        ImportStatus						is Numeric 1
            States
                ReadyToImport			value is 0
                Error		   			value is 1
		ErrorMessage						is Alpha 150
		CashLedgerReturnedPaymentInError	is a TransactionIDNumber

	Local Fields
		CashLedgerSourceRecord
		LocalFinanceEnterpriseGroup	is like FinanceEnterpriseGroup
		
	Transient Fields
		TransientFromCurrency				is a FromCurrency
			derive value from CashLedgerReturnedPaymentImport.CashCode.Currency
		CashLedgerTransactionId				is a  CashLedgerTransaction
		ElectronicFundTransactionId			is a  CashLedgerElectronicFundsTransferTransaction
			context of CashLedgerReturnedPaymentImport.CashCode

	Derived Fields
		DescriptionMessage					is a MessageField
			restricted
			"CreatedByCashLedgerReturnedPaymentInterface"		
		ClearingAccountErrorMessage			is a MessageField
			restricted
			"CannotRelease:CashAccountsNotSetUpInCompanyCashCode"	
		ReconAccountErrorMessage			is a MessageField
			restricted
			"CannotRelease:ReconciliationAccountsNotSetUpInCompanyCashCode"	
		BankExpenseAccountErrorMessage			is a MessageField
			restricted
			"CannotRelease:BankExpenseAccountsNotSetUpInCompanyCashCode"							
		StatusErrorMessage					is a MessageField
			restricted
			"StatusMustBeReleasedOrUnreleased"				
		InterfaceAsPostedErrorMessage		is a MessageField
			restricted	
			"StatusMustBeReleasedToInterfaceAsPosted"
			
		InterfacePostingMessage is a LabelField 
			restricted
			"JournalCreatedByCashLedgerReturnedPaymentImport"

    Conditions
    	RecordExists
    		restricted
    		when (CashLedgerReturnedPaymentImport exists)
    		
        IsUnreleased
        	restricted
            when (Status.Unreleased)
            
		IsCashManagementTransaction
			restricted
			when (DepositType.ManualPayment
			or DepositType.WirePayment
			or DepositType.Lockbox
			or DepositType.Rebate)
			
		IsEFTTransactions
			restricted
			when (DepositType.CreditCard
			or DepositType.ElectronicFundsTransfer)

		IsPartiallyImported
			when (HasCashLedgerReturnedPaymentImportInProcess)	


		HasCashLedgerReturnedPaymentImportInProcess	
			restricted
			when (CashLedgerReturnedPaymentInErrorRel.ImportInProcess = true)

		AutoNumberingAllowed
			restricted
			when ((CashManagementGroup.AutoTranNumberByCompany
			and    Company.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoTranNumberByCashCode
			and    CashLedgerReturnedPaymentImport.CashCode.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoTranNumberByBankTransactionCode
			and    CashLedgerReturnedPaymentImport.BankTransactionCode.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoTranNumberByCashCodeBankTranCode
			and    CashLedgerReturnedPaymentImport.BankTransactionCode.AutoTransactionNumbering
			and    CashLedgerReturnedPaymentImport.CashCode.AutoTransactionNumbering))
								
	Relations
	
		CashLedgerEFTTransactionReferencesRel	
			one-to-many relation to CashLedgerElectronicFundsTransferTransaction
			Field Mapping uses Set2
				related.CashManagementGroup												 = CashManagementGroup	
                related.CashCode                                            			 = CashLedgerReturnedPaymentImport.CashCode
                related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = OriginalDepositBankTransactionCode
                related.Reference														 = ElectronicFundsTransferNumber

		CashLedgerTransactionDepositsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup	
				related.CashCode   				= CashLedgerReturnedPaymentImport.CashCode
				related.BankTransactionCode 	= OriginalDepositBankTransactionCode
				related.TransactionNumber   	= DepositNumber

        CompanyCashCodeRel
            one-to-one relation to CompanyCashCode
            Field Mapping uses symbolic key
                related.Company  				= Company
                related.CashCode 				= CashLedgerReturnedPaymentImport.CashCode

 		CashLedgerReturnedPaymentImportRel
 			one-to-many relation to CashLedgerReturnedPaymentImport
 			Field Mapping uses symbolic key
 				related.CashManagementGroup											= CashManagementGroup
 			Instance Selection
            	where (related.CashLedgerReturnedPaymentImport.RunGroup				= CashLedgerReturnedPaymentImport.RunGroup
            	and    related.CashLedgerReturnedPaymentImport.CashCode				= CashLedgerReturnedPaymentImport.CashCode
            	and    related.CashLedgerReturnedPaymentImport.BankTransactionCode	= CashLedgerReturnedPaymentImport.BankTransactionCode)

		CashLedgerReturnedPaymentInErrorRel
			one-to-one relation to CashLedgerReturnedPayment
			Field Mapping uses symbolic key
	           	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashLedgerReturnedPaymentImport.CashCode
                related.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPaymentImport.BankTransactionCode
                related.CashLedgerReturnedPayment.TransactionIDNumber	= CashLedgerReturnedPaymentInError

		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.GeneralLedgerSystemCode		= "CB"

		CashLedgerReturnedPaymentImportRel2
 			one-to-many relation to CashLedgerReturnedPaymentImport
 			Field Mapping uses symbolic key
 				related.CashManagementGroup								= CashManagementGroup
 			Instance Selection
            	where (related.CashLedgerReturnedPaymentImport.RunGroup				= CashLedgerReturnedPaymentImport.RunGroup
            	and	related.CashLedgerReturnedPaymentImport.CashCode				= CashLedgerReturnedPaymentImport.CashCode
            	and	related.CashLedgerReturnedPaymentImport.BankTransactionCode		= CashLedgerReturnedPaymentImport.BankTransactionCode
				and	related.CashLedgerReturnedPaymentImport.TransactionNumber		= CashLedgerReturnedPaymentImport.TransactionNumber)

	Sets
		ByCashLedgerReturnedPaymentInError
			indexed
			Sort Order
				CashManagementGroup
				CashLedgerReturnedPaymentImport.CashCode
				CashLedgerReturnedPaymentImport.BankTransactionCode
				CashLedgerReturnedPaymentInError
				CashLedgerReturnedPaymentImport.TransactionNumber
				CashLedgerReturnedPaymentImport.SequenceNumber
				CashLedgerReturnedPaymentImport.RunGroup
 			                             
    Field Rules
    
		CashLedgerSourceRecord
			force default to CashLedgerSourceRecord.CashLedgerTransaction
        
		Company
            required
			
        ReturnDate
            required

		PostDate
			if (PostDate not entered)
				PostDate = ReturnDate

        Description
            default to DescriptionMessage

        OriginalDepositBankTransactionCode
            required

		DepositType		
			initial value is DepositType.ManualPayment
			default to DepositType.ManualPayment

		DepositNumber
			if (IsCashManagementTransaction)
				if (CashLedgerTransactionId entered)
					DepositNumber	= CashLedgerTransactionId.TransactionNumber
				required
					"DepositNumberRequiredForDepositType"                   
				constraint (first CashLedgerTransactionDepositsRel exists)
					"OriginalDepositDoesNotExist"                             
			else
				cannot be entered
					"DepositNumberMustBeBlankForSelectedDepositType"
											
		ElectronicFundsTransferNumber 	
			if (IsEFTTransactions)
				if (ElectronicFundTransactionId entered)
					ElectronicFundsTransferNumber		= ElectronicFundTransactionId.Reference
				required
					"E\F\TNumberRequiredForDepositType"                       
				constraint (first CashLedgerEFTTransactionReferencesRel exists)
					"Original_\E\F\TDepositDoesNotExist"                      
			else
				cannot be entered
					"E\F\TNumberMustBeBlankForSelectedDepositType"            

		ReceiptAmount
			required			


	Context Fields
		
	Rule Blocks
	

	Actions
		InterfaceReturnedCashPayments is a Set Action

			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmJournalizeDistributions	is Boolean
					default label is "JournalizeReleasedDistributions"
				PrmAutoNumberingAction 			is Numeric 1
					States
						OverrideNumberWithAnAutoGeneratedNumber	value is 1
						BypassAutoTransactionNumbering			value is 2
					default label is "AutoTransactionNumberingAction"
											
			Parameter Rules
				PrmRunGroup
					required
						"RunGroupIsRequired"
				PrmAutoNumberingAction
					if (PrmCashManagementGroup.AutoTranNumberForReturnedPaymentForm)
						required
							"AutoNumberingActionSelectionRequired"
				PrmJournalizeDistributions													
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
					constraint (GeneralLedgerSystemCodeRel.EncumbranceOption.NotUsed)
						"JournalizeDistributionsNotAllowedWhenBudgetingSetToTrackOrTrackAndEdit"
																	
			Local Fields
				ErrorOccurred							is Boolean
				ReturnedPaymentError					is Boolean
				DistributionError						is Boolean
				LocalErrorMessage						is Alpha 150
				LocalCompletionMessage					is Alpha 150
				LocalErrorRunGroup						is AlphaUpper 30
				LocalErrorSequence						is Numeric 12
				PostingDateError						is Boolean
				LocalTransactionIDNumber				is a TransactionIDNumber

				ErrorUpdate								is Boolean

				LocalReleaseReturnedPayment				is Boolean
				LocalCashTransactionImportResultView 	is a CashTransactionImportResult view				
				LocalCashLedgerReturnedPayment			is a CashLedgerReturnedPayment view
				LocalInterfaceAsPosted					is Boolean
				GLTJournalizeGroup						is like JournalizeGroup
				CommitNow								is Boolean
				LocalInterfacedReturnedPaymentAmount	is an InternationalAmount	
				LocalInterfacedReturnedPaymentCount		is Numeric 7				
				
			Instance Selection
				where (CashManagementGroup						= PrmCashManagementGroup
				and    CashLedgerReturnedPaymentImport.RunGroup	= PrmRunGroup)
			
			Sort Order
				CashManagementGroup
				CashLedgerReturnedPaymentImport.RunGroup
				CashLedgerReturnedPaymentImport.CashCode
				CashLedgerReturnedPaymentImport.BankTransactionCode
				CashLedgerReturnedPaymentImport.TransactionNumber
				CashLedgerReturnedPaymentImport.SequenceNumber

  			Accumulators
				NetReturnedPaymentAmount
				NumberOfDistributions
				
			Action Rules
				Empty Set Rules
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
					if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track
                    or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)
						invoke ProcessInterfaceBatchEdits BudgetEditBatch in background		
							invoked.PrmFinanceEnterpriseGroup	= PrmCashManagementGroup
							invoked.PrmBusinessClassName		= "CashLedgerReturnedPayment"

				Set Rules
					Exit Rules
						LocalFinanceEnterpriseGroup = PrmCashManagementGroup      
						if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track
						or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)
							invoke ProcessInterfaceBatchEdits BudgetEditBatch in background		
								invoked.PrmFinanceEnterpriseGroup	= PrmCashManagementGroup
								invoked.PrmBusinessClassName		= "CashLedgerReturnedPayment"
						if (ErrorOccurred)
							LocalCompletionMessage = PrmCashManagementGroup.FinanceEnterpriseGroup.InterfaceErrorsMovedMessage
							LocalCompletionMessage += (" " + LocalErrorRunGroup)
						else		
							LocalCompletionMessage = PrmCashManagementGroup.FinanceEnterpriseGroup.InterfaceCompleteMessage
				
				CashManagementGroup Set Rules
					Entrance Rules
						ErrorOccurred			= false
						
						if (PrmJournalizeDistributions)
							LocalFinanceEnterpriseGroup = PrmCashManagementGroup
							invoke IncrementLastJournalizeGroup GeneralLedgerSystemCodeRel
							GLTJournalizeGroup	= GeneralLedgerSystemCodeRel.DerivedJournalizeGroup
							CommitNow			= true
						
						invoke Create CashTransactionImportResult
							assign result to LocalCashTransactionImportResultView
							invoked.CashManagementGroup	= CashManagementGroup
							invoked.RunTime				= current timestamp
							invoked.RunGroup			= PrmRunGroup
							invoked.RunType				= 4 
							invoked.JournalizeGroup		= GLTJournalizeGroup

					Exit Rules
						if (PrmJournalizeDistributions)
							invoke JournalizeDistributionsForGroup CashLedgerGLDistribution in background
								invoked.PrmCashManagementGroup	= PrmCashManagementGroup
								invoked.PrmJournalizeGroup		= GLTJournalizeGroup
								invoked.PrmDescription			= InterfacePostingMessage

						invoke Update LocalCashTransactionImportResultView.CashTransactionImportResult
							if (ErrorOccurred)
								invoked.Status 		  = 2
								invoked.ErrorRunGroup = LocalErrorRunGroup
							else
								invoked.Status        = 1
							invoked.InterfacedReturnedPaymentAmount	= LocalInterfacedReturnedPaymentAmount	
							invoked.InterfacedReturnedPaymentCount	= LocalInterfacedReturnedPaymentCount	

				CashLedgerReturnedPaymentImport.BankTransactionCode Set Rules
					Entrance Rules



				CashLedgerReturnedPaymentImport.TransactionNumber Set Rules
					Entrance Rules
						initialize LocalErrorMessage
						initialize LocalTransactionIDNumber
						NumberOfDistributions		= 1
						ReturnedPaymentError		= false
						DistributionError			= false
						LocalReleaseReturnedPayment	= false
						LocalInterfaceAsPosted		= InterfaceAsPosted
						
					Exit Rules
						if (!ReturnedPaymentError)
							invoke Update LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment
								invoked.BankAccountReturnAmount				= NetReturnedPaymentAmount
								invoked.BankAccountReturnAmountUnsigned		= NetReturnedPaymentAmount
								invoked.LastDistributionSequence	= (NumberOfDistributions -1)
								if (!DistributionError)
									invoked.ImportInProcess			= false
									invoked.OriginatingImportRun	= LocalCashTransactionImportResultView.CashTransactionImportResult
							if (LocalReleaseReturnedPayment
							and !DistributionError)
								invoke ReleaseFromImport LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment
									resume on error
										DistributionError	= true
									invoked.PrmInterfaceAsPosted = LocalInterfaceAsPosted
									invoked.PrmJournalizeGroup	 = GLTJournalizeGroup
							LocalInterfacedReturnedPaymentCount		+= 1						
							LocalInterfacedReturnedPaymentAmount	+= NetReturnedPaymentAmount	
						if (DistributionError
						and PrmJournalizeDistributions)
							invoke UpdateJournalizeGroup LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment
								invoked.PrmJournalizeGroup	= blank

							
				Instance Rules






					if (CommitNow)
						commit transaction
						CommitNow = false

					if (ImportStatus.Error)
						ErrorOccurred	  = true
						DistributionError = true
					else
						if (CashLedgerReturnedPaymentInError entered
						and LocalTransactionIDNumber 		!entered)
							LocalCashLedgerReturnedPayment	 = CashLedgerReturnedPaymentInErrorRel.CashLedgerReturnedPayment
							LocalTransactionIDNumber		 = CashLedgerReturnedPaymentInError
							NumberOfDistributions			+= CashLedgerReturnedPaymentInErrorRel.LastDistributionSequence
							NetReturnedPaymentAmount		+= CashLedgerReturnedPaymentInErrorRel.BankAccountReturnAmount
							if (Status.Released)
								LocalReleaseReturnedPayment	= true
								if (PrmJournalizeDistributions)
									invoke UpdateJournalizeGroup CashLedgerReturnedPaymentInErrorRel.CashLedgerReturnedPayment
										invoked.PrmJournalizeGroup	= GLTJournalizeGroup

						if (!CashLedgerReturnedPaymentInError	 entered
						and LocalTransactionIDNumber 			!entered)
							if (!Status.Unreleased
							and !Status.Released)
								ErrorOccurred			= true
								ReturnedPaymentError	= true
								LocalErrorMessage		= StatusErrorMessage
							if (Status.Released)
								if (CashLedgerReturnedPaymentImport.BankTransactionCode.AutomaticReconciliation
								and CompanyCashCodeRel.ReconcileGeneralLedgerEntry)
									if (CompanyCashCodeRel.ReconciliationAccount !entered) 
										ErrorOccurred			= true
										ReturnedPaymentError	= true
										LocalErrorMessage		= ReconAccountErrorMessage	
								else	
									if (CompanyCashCodeRel.CashAccount !entered) 
										ErrorOccurred			= true
										ReturnedPaymentError	= true
										LocalErrorMessage		= ClearingAccountErrorMessage
									if (BankExpenseTransactionAmount  entered
									and BankExpenseAccount 			 !entered)	
										if (CompanyCashCodeRel.BankExpenseAccount !entered) 
											ErrorOccurred			= true
											ReturnedPaymentError	= true
											LocalErrorMessage		= BankExpenseAccountErrorMessage
							if (Status.Unreleased
							and InterfaceAsPosted)
								ErrorOccurred			= true
								ReturnedPaymentError	= true
								LocalErrorMessage		= InterfaceAsPostedErrorMessage	 														
							if (!ReturnedPaymentError)
								invoke Create CashLedgerReturnedPayment
									assign result to LocalCashLedgerReturnedPayment
									resume on error
										ErrorOccurred			= true
										ReturnedPaymentError	= true
										LocalErrorMessage		= error message
									fill in fields from this instance
										except invoked.Status
									invoked.CashManagementGroup						= CashManagementGroup
									invoked.CashCode								= CashLedgerReturnedPaymentImport.CashCode						
									invoked.CashLedgerReturnedPayment.BankTransactionCode	= CashLedgerReturnedPaymentImport.BankTransactionCode

									if (PrmAutoNumberingAction.OverrideNumberWithAnAutoGeneratedNumber
									and AutoNumberingAllowed)
										invoked.TransactionNumber					= blank
									else	
										invoked.TransactionNumber					= CashLedgerReturnedPaymentImport.TransactionNumber
									invoked.Status									= Status.Unreleased
									invoked.Company.OrigCompany						= Company 
									if (PostDate not entered)
										invoked.PostDate							= ReturnDate
									else
										invoked.PostDate							= PostDate	
									if (Description not entered)
										invoked.Description							= DescriptionMessage
									else
										invoked.Description							= Description	
									invoked.BankExpenseData.CurrencyAmount			= BankExpenseTransactionAmount
									invoked.BankExpenseAmountUnsigned       		= BankExpenseTransactionAmount
									invoked.OriginatingImportRun					= LocalCashTransactionImportResultView.CashTransactionImportResult
									invoked.ImportInProcess							= true						
									invoked.CurrencyTable							= PrmCurrencyTable
									invoked.AutoNumberingAction						= PrmAutoNumberingAction
									
								if (!ReturnedPaymentError)
									LocalTransactionIDNumber	= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.TransactionIDNumber

									if (Status.Released)
										LocalReleaseReturnedPayment	= true

						if (ReturnedPaymentError)
							if (PrmMoveErrorsToNewRunGroup)
								if (!LocalErrorRunGroup entered)
									increment PrmCashManagementGroup.LastErrorRunGroupNumber
									LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmCashManagementGroup.LastErrorRunGroupNumber
							invoke UpdateError ReadyToImport this instance 
								invoked.PrmErrorMessage			= LocalErrorMessage
								if (PrmMoveErrorsToNewRunGroup)
									invoked.PrmErrorRunGroup	= LocalErrorRunGroup
						else
							initialize LocalErrorMessage

							invoke Create CashLedgerGLDistribution
								resume on error
									ErrorOccurred		= true
									DistributionError	= true
									LocalErrorMessage	= error message
								fill in fields from this instance
								invoked.CashCode										= CashLedgerReturnedPaymentImport.CashCode
								invoked.CashLedgerSourceRecord							= "CRP"
								invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerReturnedPaymentImport.BankTransactionCode
								invoked.CashLedgerGLDistribution.TransactionIDNumber	= LocalTransactionIDNumber
								invoked.CashLedgerGLDistribution.SequenceNumber			= NumberOfDistributions
								invoked.TransactionNumber								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.TransactionNumber
								invoked.CompanyAccountingEntity							= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.Company.OrigCompany.AccountingEntity
								invoked.Reference										= Reference  //"CashLedgerReturnedPaymentImport"
								invoked.Description										= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.Description
								invoked.LocalControlDocumentNumber						= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.TransactionNumber
								invoked.LocalDocumentNumber								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.TransactionNumber
								invoked.LocalExchangeDate								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.ReturnDate
								if (LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.PostDate not entered)
									invoked.LocalPostingDate							= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.ReturnDate
									invoked.PostDate									= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.ReturnDate
								else
									invoked.LocalPostingDate							= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.PostDate
									invoked.PostDate									= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.PostDate
								if (LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.GeneralLedgerSourceCode	entered
								and LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.GeneralLedgerSourceCode	!= "CB")
									invoked.LocalGeneralLedgerEvent						= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.GeneralLedgerSourceCode
									invoked.GeneralLedgerSourceCode						= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.GeneralLedgerSourceCode
								else
									invoked.LocalGeneralLedgerEvent						= "CL"
									invoked.GeneralLedgerSourceCode						= "CL"
								invoked.Company.OrigCompany								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.Company.OrigCompany 	
								invoked.RecordType										= ""
								invoked.LocalKeepRateOnly								= false
								invoked.GLFinanceCodeBlock								= ReceiptAccount
								invoked.GLTransactionAmount								= ReceiptAmount
								invoked.TaxableBankAmount								= TaxableAmount
								invoked.Status											= Status.Unreleased
								invoked.CreateFromBatchType								= 3	
								invoked.BypassBudgetEditing							 	= true
								invoked.LocalHeaderUniqueID								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.UniqueID
								invoked.LocalHeaderBusinessObjectRef					= reference to LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment
								invoked.LocalCurrencyTable								= LocalCashLedgerReturnedPayment.CashLedgerReturnedPayment.CurrencyTable
								if (Status.Released
								and PrmJournalizeDistributions)
									invoked.GLTJournalizeGroup							= GLTJournalizeGroup
							if (LocalErrorMessage entered)
								if (PrmMoveErrorsToNewRunGroup)
									if (!LocalErrorRunGroup entered)
										increment PrmCashManagementGroup.LastErrorRunGroupNumber
										LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmCashManagementGroup.LastErrorRunGroupNumber

								CashLedgerReturnedPaymentInError	= LocalTransactionIDNumber
								invoke UpdateError ReadyToImport this instance 
									invoked.PrmErrorMessage			= LocalErrorMessage
									if (PrmMoveErrorsToNewRunGroup)
										invoked.PrmErrorRunGroup	= LocalErrorRunGroup
							else
								NumberOfDistributions		+= 1
								NetReturnedPaymentAmount	+= ReceiptAmount
								invoke Purge ReadyToImport this instance 

 		DeletePartiallyImportedRecord is an Instance Action	
		 	valid when (IsPartiallyImported)
			Action Rules
				invoke Delete CashLedgerReturnedPaymentInErrorRel
    						
		DeleteAllRelatedRecords is a Delete Action
			default label is untranslatable
			restricted
				
		DeleteAllTransactionsForRunGroup is a Set Action
			confirmation required
		
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmRunGroup				  	is AlphaUpper 30
					default label is "RunGroup"

			Parameter Rules

			Instance Selection
				where (CashManagementGroup							= PrmCashManagementGroup
				and    CashLedgerReturnedPaymentImport.RunGroup	= PrmRunGroup)
				
			Action Rules
				Instance Rules
					if (IsPartiallyImported)
						invoke DeletePartiallyImportedRecord
				    else	
				    	invoke RunGroupDelete

		RunGroupDelete is a Delete Action
			default label is untranslatable
			restricted
														
	StateCycles
		CashLedgerReturnedPaymentImportLifeCycle is a StateCycle
			state field is ImportStatus
			
			ReadyToImport	is a State
		 		Create is a Create Action
					Entrance Rules 
						CashLedgerSourceRecord = CashLedgerSourceRecord.CashLedgerTransaction
					Action Rules
					Exit Rules
						initialize CashLedgerTransactionId
						initialize ElectronicFundTransactionId	

		 		CreateFromCopy is a Create Action
					default label is untranslatable
					restricted
					bypass field rules

		 		Update is an Update Action
					Entrance Rules 
						CashLedgerSourceRecord = CashLedgerSourceRecord.CashLedgerTransaction
					Action Rules
					Exit Rules
						initialize CashLedgerTransactionId
						initialize ElectronicFundTransactionId	

		 		Delete is a Delete Action
		 			valid when (!IsPartiallyImported)

				UpdateError is an Instance Action
					default label is untranslatable
					restricted
					Parameters
						PrmErrorMessage		is Alpha 150
							default label is "ErrorMessage"
						PrmErrorRunGroup    is AlphaUpper 30
							default label is "ErrorRunGroup"
					Action Rules
						if (PrmErrorRunGroup entered)
							CashLedgerReturnedPaymentImport.RunGroup = PrmErrorRunGroup
						ErrorMessage 		= PrmErrorMessage
						make transition to Error

				Purge is a Purge Action
					restricted
			
			Error is a State
		 		Update is an Update Action
					Action Rules
						if (instance count of CashLedgerReturnedPaymentImportRel2 = 1)
							initialize ErrorMessage
							make transition to ReadyToImport

		 		ResetErrorMessage is an Instance Action
					Action Rules
						if (CashLedgerReturnedPaymentInError	!entered
              			and instance count of CashLedgerReturnedPaymentImportRel2 > 1)
							confirmation required
								"ResettingErrorMessageOnNonInterfacedRecordWillResetAllErrorsForTransactionNumber;Continue?"
									for each CashLedgerReturnedPaymentImportRel2
										if (each.ImportStatus.Error)
											invoke Error.InvokedResetErrorMessage each
						else
							initialize ErrorMessage
							make transition to ReadyToImport

				InvokedResetErrorMessage is an Instance Action
					restricted
					default label is untranslatable
					Action Rules
			 			initialize ErrorMessage
						make transition to ReadyToImport

				ResetErrorsByRunGroup is a Set Action		
					Parameters
						PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
							default label is "FinanceEnterpriseGroup"
						PrmRunGroup						is AlphaUpper 30
							default label is "RunGroup"

					Parameter Rules
						PrmRunGroup
							required
								"RunGroupIsRequired"

					Instance Selection
						where (CashManagementGroup.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						and    CashLedgerReturnedPaymentImport.RunGroup		= PrmRunGroup
						and    ErrorMessage entered)

					Action Rules
						Instance Rules
							invoke InvokedResetErrorMessage

		 		Delete is a Delete Action
		 			valid when (!IsPartiallyImported)
			
