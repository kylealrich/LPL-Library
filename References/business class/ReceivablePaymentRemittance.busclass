ReceivablePaymentRemittance is a BusinessClass
	owned by ar
	prefix is RMI
	classic name is ARREMIT

	Ontology
		symbolic key is ReceivablePaymentRemittance
			classic set name is RMISET1
			classic name is REMIT-SEQ
			classic name for ReceivablePaymentHeader is BATCH-NBR
			classic name for ReceivablePayment is PAYMENT-SEQ

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId
		implements Archivable

	Persistent Fields

		ReceivableInvoiceType			is AlphaUpper size 1
			classic name is TRANS-TYPE
			States
				Invoice			value is "I"
				CreditMemo		value is "C"
					default label is "Credit memo"
				DebitMemo		value is "D"
				MixedSignLines	value is "M"
		ReceivableInvoice				is like ReceivableInvoice
			classic name is INVOICE
		Status							is Numeric size 1
			States
				Unapplied				value is 0
				ApplicationNotPerfomed	value is 1
					default label is "ApplicationNotPerformed"
				Applied					value is 2
		AppldAmt						is an InternationalAmount
			default label is "RequestedApplicationAmount"
		CashApplicationResult			is like CashApplicationResult

		CashApplicationMessageNumber	is Numeric 3
		CertificationNumber							
		CertificationDate				is Date		
		InvoiceCompany					is a ReceivableCompany	
		InvoiceDetail					is a Sequence				
		OriginatingInterfaceRun			is like ReceivablesInterfaceResult

	Transient Fields
		TransientProformaInterface		is Boolean






		TransientReceivableApplicationSequenceForContext is a ReceivableApplicationSequenceForContext 
			derive value from DerivedReceivableApplicationSequenceForContext
		TransientFundDistributionSetState								is a FundDistributionSetState 
			derive value from DerivedFundDistributionSetState
		TransientReceivableCompanyForContext	is a ReceivableCompanyForContext 
			derive value from DerivedReceivableCompanyForContext
		TransientReceivableBatchForContext	is a ReceivableBatchForContext 
			derive value from DerivedReceivableBatchForContext
		TransientReceivableInvoiceForContext 	is a ReceivableInvoiceForContext 
			derive value from DerivedReceivableInvoiceForContext
		TransientDistributionSetState			is Numeric size 1 
			States
				NotSpecified				value is 0
				OutOfBalance				value is 1
				ReadyForProcessing 			value is 2
				Processed					value is 3
			derive value from DerivedDistributionSetState
		TransientDistributionSetCompleteness	is Numeric size 1 
			States
				NotSpecified			value is 0
				Incomplete				value is 1
				Complete 				value is 2
			derive value from DerivedDistributionSetCompleteness
		TransientRemittanceHeaderStatus			is Numeric size 1 
			States
				Unapplied					value is 0
				Applied 					value is 2
			derive value from DerivedRemittanceHeaderStatus


	Local Fields
		LocalCompany					is a Company
		LocalReceivableCompany			is like ReceivableCompany 
		LocalCustomer					is like Customer
		LocalTransactionType			is Alpha 1
		LocalActionCode					is an ActionCode
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		LocalFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
		LocalAccountingEntity			is like AccountingEntity
		LocalSumInvoiceDetailOpenAmount is like InternationalAmount 
		LocalPaymentOpenAmount 			is like InternationalAmount 
		LocalSumPendingRemitAmount		is like InternationalAmount 
		LocalLastDistributionSequence	is a DistSeq 
		LocalReceivableGLDistribution	is like ReceivableGLDistribution 
		LocalInvoiceDetail 				is like PaymentSeq 
		LocalCurrencyWork				is a ReceivableExchange 
		LocalTriggerFrom				is Alpha size 100
		NativeLPLBODTrigger				is Boolean
		LocalNativeCustomerGroup 		is Alpha size 50
		NewBODTracker					is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker		is Numeric 15
		Error							is Boolean
		ErrorMessages					is Alpha 300
		LocalConfigurationParameter		is Alpha size up to 200

	Context Fields
		FSMInboundBODTracker


	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 40
			restricted
			"InforCustomerRemittanceAdvice"

		ContextMessageText is a MessageField
			restricted
			"ReceivablePaymentRemittance<ReceivablePaymentRemittance>ReceivableInvoice<ReceivableInvoice>"

		Msg108 is a MessageField
			restricted
			"NonBasePaymentOrCreditMustBeAppliedToLikeInvoice"

		Msg110 is a MessageField
			restricted
			"CreditMemoRecordNotFound"

		Msg120 is a MessageField
			restricted
			"ReceivablesToPayablesTransferRecordExists;CannotPerformApplication"

		Msg124 is a MessageField
			restricted
			"InvoiceOrDebitMemoNotFoundOrFullyApplied"

		Msg125 is a MessageField
			restricted
			"OpenInvoiceNotFoundOrPaymentCashDetailsDoNotAlignWithInvoice"

		Msg126 is a MessageField
			restricted
			"Both_companies_must_have_the_same_Detail_Finance_Structure_selections"

		Msg127 is a MessageField
			restricted
			"NoApplicationsCouldBeMade"

		ErrorMessage is a DerivedField
			type is Alpha size up to 200

			if (CashApplicationMessageNumber = 108)
				return Msg108
			else
			if (CashApplicationMessageNumber = 110)
				return Msg110
			else
			if (CashApplicationMessageNumber = 120)
				return Msg120
			else
			if (CashApplicationMessageNumber = 124)
				return Msg124
			else
			if (CashApplicationMessageNumber = 125)
				return Msg125
			else
			if (CashApplicationMessageNumber = 126)
				return Msg126
			else
			if (CashApplicationMessageNumber = 127)
				return Msg127


		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedNativeBODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID

		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedDistributionSetSelectionTitle is a LabelField 
			"DistributionSetSelection_forPayment<ReceivablePayment.PaymentNumber>"

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha 20
			restricted
			return GeneralLedgerCompanyRel.FinanceEnterpriseGroup

		NativeBODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			NativeBODCurrentTimeStamp = system current timestamp
			return NativeBODCurrentTimeStamp

		NativeAlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			return NativeBODCurrentTimeStamp

		NativeBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 40
			return NativeAlphaCurrentTimeStamp[1:4] + "-" + NativeAlphaCurrentTimeStamp[5:6] + "-" + NativeAlphaCurrentTimeStamp[7:8] + "T" + NativeAlphaCurrentTimeStamp[9:10] + ":" + NativeAlphaCurrentTimeStamp[11:12] + ":" + NativeAlphaCurrentTimeStamp[13:14] + "Z"

		DerivedReceivableInvoiceType is a DerivedField
			type is Alpha 40
			restricted
			if(ReceivableInvoiceType = ReceivableInvoiceType.CreditMemo)
				return "C"
			else
			if(ReceivableInvoiceType = ReceivableInvoiceType.DebitMemo)
				return "D"
			else
			if(ReceivableInvoiceType = ReceivableInvoiceType.Invoice)
				return "I"
			else
			if(ReceivableInvoiceType = ReceivableInvoiceType.MixedSignLines)
				return "M"

		DerivedDocumentID is a DerivedField
			type is Alpha 200
			restricted
			return Company using "%d" + DerivedDelimiter  + ReceivablePaymentHeader  + DerivedDelimiter + DervivedPaymentSequence + DerivedDelimiter + DerivedReceivableInvoiceType + DerivedDelimiter + ReceivableInvoice


		DerivedGLCAccountingEntity is a DerivedField
			type is Alpha 20
			restricted
			return GeneralLedgerCompanyRel.AccountingEntity

		DerivedDefaultBODLocation is a DerivedField
			type is AlphaUpper size 20
			return ""

		DerivedNativeBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedFinanceEnterpriseGroup + DerivedDelimiter +  DerivedGLCAccountingEntity + ":" + DerivedDefaultBODLocation + ":" + DerivedDocumentID + ":" + "?CustomerRemittanceAdvice&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker

		DerivedAccountingEntity is a DerivedField
			type is Alpha 20
			restricted
			return DerivedFinanceEnterpriseGroup + DerivedDelimiter + Company.GeneralLedgerCompany.AccountingEntity

		DerivedActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (LocalActionCode = "C" or LocalActionCode.Create or action type.Create)
				return "Add"
			else
			if (LocalActionCode = "U" or LocalActionCode.Update or action type.Update)
				return "Replace"
			else
			if (LocalActionCode = "D")
				return "Deleted"

		DerivedRMStatus is a DerivedField
			type is Alpha 10
			restricted
			if (Status = "0")
				return "Open"
			else
			if (Status = "1")
				return "Pending"
			else
			if (Status = "2")
				return "Closed"

		DerivedBaseCurrCd is a DerivedField
			type is Alpha 10
			restricted
			return ReceivablePayment.OriginalCurrency

		DerivedPayCurrCd is a DerivedField
			type is Alpha 10
			restricted
			return ReceivablePayment.OriginalCurrency

		DerivedCurrCd is a DerivedField
			type is Alpha 10
			restricted
			return ReceivablePayment.OriginalCurrency

		DervivedPaymentSequence is a DerivedField
			type is Alpha 40
			restricted
			return ReceivablePayment.LastRemittanceSequence

		DerivedDisplayID is a DerivedField
			type is Alpha 40
			restricted
			return ReceivablePaymentHeader

		NativeDate is a DerivedField
			type is Alpha size 20
			return ReceivablePayment.GeneralLedgerDate

		DerivedPostDate	is a DerivedField
			type is Alpha size 40
			return NativeDate[1:4] + "-" + NativeDate[5:6] + "-" + NativeDate[7:8] + "T" + NativeAlphaCurrentTimeStamp[9:10] + ":" + NativeAlphaCurrentTimeStamp[11:12] + ":" + NativeAlphaCurrentTimeStamp[13:14] + "Z"

		DerivedCustomer is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.Customer

		DerivedPaymentMethod is a DerivedField
			type is Alpha size 30
			return "Cash"

		DerivedOrigAmount is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.TransactionAmount

		DerivedTransAmount is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.BaseAmount

		DerivedDocRef is a DerivedField
			type is Alpha size 30
			return "CustomerRemittanceAdvice"

		DerivedPaymentAmt is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.BaseAppliedAmount

		DerviedPaymentTranAmt is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.Amount

		DerviedDiscountAmt is a DerivedField
			type is Alpha size 30
			return ReceivablePayment.BaseAdjustAmount

		DerivedRoundTo is a DerivedField
			type is Decimal 5.4
			restricted
			if (ReceivablePayment.OriginalCurrency.NumberOfDecimals = 2)
				return .01
			else
			if (ReceivablePayment.OriginalCurrency.NumberOfDecimals = 0)
				return 1
			else
			if (ReceivablePayment.OriginalCurrency.NumberOfDecimals = 3)
				return .001
			else
			if (ReceivablePayment.OriginalCurrency.NumberOfDecimals = 4)
				return .0001
			else
				return .01

		DerivedDistributionSetState is a DerivedField 
			type is Numeric size 1
			restricted
			if (AllowSelectDistributionSet)
				if (InvoiceDetail not entered)
					if (!ReceivablePaymentRemittanceInvoiceDetailEnteredForThisInvoiceRel exists)
						return 0
					else
					if (!ReceivablePayment.Status.Unreleased)
						return 3
					else
					if (AppldAmt not entered)
						return 1
					else
					if (sum OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel.AppldAmt != AppldAmt)
						return 1
					else
					if (any OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel.DerivedDetailDistributionSetState != 2)
						return 1
					else
						return 2
				else
					return 0
			else
				return 0

		DerivedDistributionSetCompleteness is a DerivedField 
			type is Numeric size 1
			restricted
			if (AllowSelectDistributionSet)
				if (!ThisInstanceExists)
					return 0
				else
				if (TransientDistributionSetState.NotSpecified)
					return 0
				else
				if (TransientDistributionSetState.ReadyForProcessing
				or  TransientDistributionSetState.Processed)
					return 2
				else
					return 1
			else
				return 0

		DerivedRemittanceHeaderStatus is a DerivedField 
			type is Numeric size 1
			restricted
			if (AllowSelectDistributionSet)
				if (InvoiceDetail not entered)
					if (TransientDistributionSetState.NotSpecified)
						if (Status = 2)
							return 2
						else
							return 0
					else
					if (!OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel exists)
						return 0
					else
					if (any OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel.Status != 2)
						return 0
					else
						return 2
				else
					return 0
			else
				return 0

		DerivedDetailDistributionSetState is a DerivedField 
			type is Numeric size 1
			restricted
			if (AllowSelectDistributionSet)
				if (InvoiceDetail entered)
					if (!ReceivablePayment.Status.Unreleased)
						return 3
					else
					if (AppldAmt not entered)
						return 1
					else
						if (InvoiceCompanyReceivableInvoiceRel.AlternateReceivableInvoiceType.CreditMemo)
							if (sum RemittanceApplyDistribution set.DistributionAmount.CurrencyAmount != AppldAmt)
								return 1
							else
								return 2
						else
							if (sum RemittanceApplyDistribution set.DistributionAmount.CurrencyAmount != (AppldAmt * -1))
								return 1
							else
								return 2
				else
					return 0
			else
				return 0

		DerivedDistributionSetSumOfLines is a DerivedField 
			type is like InternationalAmount
			return sum OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel.AppldAmt

		DerivedDistributionSetLinesDifference is a DerivedField 
			type is like InternationalAmount
			return AppldAmt - DerivedDistributionSetSumOfLines

		DerivedAppliedAmountInPaymentCurrency is a DerivedField 
			type is like InternationalAmount
			if (InvoiceCompanyReceivableInvoiceRel.OriginalCurrency != ReceivablePayment.OriginalCurrency)
				initialize LocalCurrencyWork
				LocalCurrencyWork.CurrencyTable							= ReceivablePaymentHeader.CurrencyTable
				LocalCurrencyWork.FinanceEnterpriseGroup				= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				LocalCurrencyWork.ExchangeDate							= ReceivablePayment.DepositDate
				LocalCurrencyWork.FromCurrency							= InvoiceCompanyReceivableInvoiceRel.OriginalCurrency
				LocalCurrencyWork.TransactionAmount						= AppldAmt
				LocalCurrencyWork.BaseAmount.ToCurrency					= ReceivablePayment.OriginalCurrency
				return LocalCurrencyWork.BaseAmount.OutputCurrencyAmount
			else
				return AppldAmt

		DerivedReceivableCompanyForContext is a DerivedField 
			type is Numeric size 12
			restricted
			return Company

		DerivedReceivableBatchForContext is a DerivedField 
			type is Numeric size 12
			restricted
			return ReceivablePaymentHeader

		DerivedReceivableInvoiceForContext is a DerivedField 
			type is Numeric size 6
			restricted
			return ReceivablePayment

		DerivedReceivableApplicationSequenceForContext is a DerivedField 
			type is Numeric 7
			return ReceivablePaymentRemittance

		DerivedFundDistributionSetState is a DerivedField 
			type is AlphaUpper size 2
			if (AllowSelectDistributionSet)
				if (ReceivablePayment.Status.Unreleased)
					return "NR"
				else
					return "CR"
			else
				return ""

		CustomerRemittanceAdviceXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			CustomerRemittanceAdviceXMLBOD = template.IONSyncCustomerRemittanceAdvice_ReceivablePaymentRemittance_Header_ST document for this instance

		ReceivablePaymentRemittanceWithRecord is a LabelField		
			"ReceivablePaymentRemittance<ReceivablePaymentRemittance>forBatch<ReceivablePaymentHeader>"

		ReceivablePaymentRemittanceWithNoRecord is a LabelField		
			"ReceivablePaymentRemittance"

		DerivedReceivablePaymentRemittance is a DerivedField		
			type is MessageField
			if(ReceivablePaymentRemittance exist)
				return ReceivablePaymentRemittanceWithRecord
			else
				return ReceivablePaymentRemittanceWithNoRecord


	Field Rules




		ReceivablePaymentRemittance
			autosequence using ReceivablePayment.LastRemittanceSequence






		ReceivableInvoiceType
			required
			if (!ReceivablePayment.Status.Unreleased
			and !Company.AllowRemittanceChanges)
				cannot be changed


		ReceivableInvoice
			required
			if (!ReceivablePayment.Status.Unreleased
			and !Company.AllowRemittanceChanges)
				cannot be changed

		AppldAmt
			constraint (AppldAmt >= 0)
				"RequestedApplicationAmountCannotBeNegative"

	Relations

		CustomerReceivableInvoiceRel
			one-to-many relation to ReceivableInvoice
			Field Mapping uses Set4
				related.Company									= Company
				related.Customer								= ReceivablePayment.Customer
				related.ReceivableInvoiceType					= ReceivableInvoiceType

		IntercompanyReceivableInvoiceDetailRel
			classic name is AROITEMS
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType = ReceivableInvoiceType
				and	related.ReceivableInvoiceDetail.Invoice = ReceivableInvoice
				and	related.Origin.IntercompanyBilling)

		InvoiceCompanyReceivableInvoiceDetailRel	
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company = InvoiceCompany
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType = ReceivableInvoiceType
				and   related.ReceivableInvoiceDetail.Invoice = ReceivableInvoice)

		LocalReceivableInvoiceRel
			one-to-many relation to ReceivableInvoice
			Field Mapping uses Set5
				related.AlternateReceivableInvoiceType		= LocalTransactionType
				related.ReceivableInvoice					= ReceivableInvoice


		NationalAccountTransactionRel
			one-to-many relation to NationalAccountTransaction
			Field Mapping uses ByNationalAccountTransaction 
				related.NationalAccount.Company									= LocalCompany
				related.NationalAccount.Customer								= LocalCustomer
				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType 	= LocalTransactionType
				related.ReceivableInvoiceDetail.Invoice							= ReceivableInvoice

		ReceivableCompanyRel	
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company = InvoiceCompany

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		ReceivableInvoiceDetailRel
			classic name is AROITEMS
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType = ReceivableInvoiceType
				and   related.ReceivableInvoiceDetail.Invoice = ReceivableInvoice)


		InvoiceCompanyReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses Set6
				related.Company									= InvoiceCompany
				related.AlternateReceivableInvoiceType			= ReceivableInvoiceType 
				related.ReceivableInvoice						= ReceivableInvoice

		LocalReceivableCompanyReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses Set5
				related.AlternateReceivableInvoiceType			= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
				related.Company									= LocalReceivableCompany

		UnknownReceivableCompanyReceivableInvoiceRel
			one-to-many relation to ReceivableInvoice
			Field Mapping uses Set5
				related.AlternateReceivableInvoiceType			= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice

		ReceivableInvoiceDetailInvoiceCompanyRel
			one-to-one relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company												 =	InvoiceCompany
				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 =	ReceivableInvoiceType
				related.ReceivableInvoiceDetail.Invoice						 =	ReceivableInvoice
				related.ReceivableInvoiceDetail.PaymentSeq					 =	InvoiceDetail

		AssociatedReceivableGLDistributionRel 
			one-to-many relation to ReceivableGLDistribution
			Field Mapping uses Set2
				related.ReceivableCompanyDataGroup.TransactionCompany	 = InvoiceCompany
				related.BatchNumber										 = ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.BatchNumber
				related.TransType										 = ReceivableInvoiceDetailInvoiceCompanyRel.AlternateReceivableInvoiceType
				related.Invoice											 = ReceivableInvoice
			Instance Selection
				where (related.AssociatedLine							 = ReceivableInvoiceDetailInvoiceCompanyRel.AssociatedLine
				and	   related.AccumulationType.Detail
				and	   related.DistributionSource.AccountsReceivable
				and	   related.DistributionAmount.CurrencyAmount entered)

		OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= InvoiceCompany
				related.ReceivableInvoiceType					= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
			Instance Selection
				where (related.Company							= Company
				and	   related.ReceivablePaymentHeader			= ReceivablePaymentHeader
				and	   related.ReceivablePayment				= ReceivablePayment
				and	   related.ReceivablePaymentRemittance	   != ReceivablePaymentRemittance)

		OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceWithDistributionsRel
			one-to-many relation using OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel
			Instance Selection
				where (related.RemittanceApplyDistributionSetExists)

		OldOtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= old InvoiceCompany
				related.ReceivableInvoiceType					= old ReceivableInvoiceType
				related.ReceivableInvoice						= old ReceivableInvoice
			Instance Selection
				where (related.Company							= Company
				and	   related.ReceivablePaymentHeader			= ReceivablePaymentHeader
				and	   related.ReceivablePayment				= ReceivablePayment
				and	   related.ReceivablePaymentRemittance	   != ReceivablePaymentRemittance)

		ReceivablePaymentRemittanceForThisInvoiceDetailRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= InvoiceCompany
				related.ReceivableInvoiceType					= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
				related.InvoiceDetail							= InvoiceDetail
				related.Company									= Company
				related.ReceivablePaymentHeader					= ReceivablePaymentHeader
				related.ReceivablePayment						= ReceivablePayment

		LocalReceivablePaymentRemittanceForThisInvoiceDetailRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= InvoiceCompany
				related.ReceivableInvoiceType					= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
				related.InvoiceDetail							= LocalInvoiceDetail
			Instance Selection
				where (related.Status.Unapplied
				or	   related.Status.ApplicationNotPerfomed)

		PortalPaymentReceivableApplicationsAvailableForPostingRel	
			one-to-many relation to ReceivableApplication
			valid when (PaymentOriginIsThirdPartyPaymentProcessing)	
			Field Mapping uses Set2
				related.CreditTransaction.CreditCompany			= Company
				related.CreditTransaction.CreditBatch			= ReceivablePaymentHeader
				related.CreditTransaction.CreditSequence		= ReceivablePayment
			Instance Selection
				where (related.Company							= InvoiceCompany
				and	   related.ReceivableApplication.TransType	= ReceivableInvoiceType
				and	   related.ReceivableApplication.Invoice	= ReceivableInvoice
				and	   related.ReceivableApplication.PaymentSeq	= InvoiceDetail
				and	   related.Status							< 5)


		LocalReceivableApplicationSelectRel
			one-to-one relation to ReceivableApplicationSelect
			Field Mapping uses Set2
				related.ReceivableApplicationSelect.TransactionCompany									 = InvoiceCompany
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableInvoiceType
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.Invoice						 = ReceivableInvoice
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.PaymentSeq					 = LocalInvoiceDetail

		ReceivablePaymentRemittanceHeaderForThisInvoiceDetailRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= InvoiceCompany
				related.ReceivableInvoiceType					= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
				related.InvoiceDetail							= blank
				related.Company									= Company
				related.ReceivablePaymentHeader					= ReceivablePaymentHeader
				related.ReceivablePayment						= ReceivablePayment

		RemittanceApplyDistributionDescendingRel
			one-to-many relation to RemittanceApplyDistribution
			Field Mapping uses RemittanceApplyDistributionDescending
				related.Company								= Company
				related.ReceivablePaymentHeader				= ReceivablePaymentHeader
				related.ReceivablePayment					= ReceivablePayment
				related.InvoiceCompany						= InvoiceCompany
				related.ReceivableInvoiceType				= ReceivableInvoiceType
				related.ReceivableInvoice					= ReceivableInvoice
				related.InvoiceDetail						= InvoiceDetail

		RemittanceApplyDistributionByInvoiceRel
			one-to-many relation to RemittanceApplyDistribution
			Field Mapping uses ByInvoice
				related.InvoiceCompany						= InvoiceCompany
				related.ReceivableInvoiceType				= ReceivableInvoiceType
				related.ReceivableInvoice					= ReceivableInvoice
			Instance Selection
				where ((related.ReceivablePaymentRemittance.Status.Unapplied
				or	   related.ReceivablePaymentRemittance.Status.ApplicationNotPerfomed)
				and	   related.Company						= Company
				and	   related.ReceivablePaymentHeader		= ReceivablePaymentHeader
				and	   related.ReceivablePayment			= ReceivablePayment)

		RemittanceApplyDistributionByInvoiceThisDistributionRel
			one-to-many relation to RemittanceApplyDistribution
			Field Mapping uses ByInvoice
				related.InvoiceCompany						= InvoiceCompany
				related.ReceivableInvoiceType				= ReceivableInvoiceType
				related.ReceivableInvoice					= ReceivableInvoice
				related.OriginalLastDistributionSequence	= LocalLastDistributionSequence
				related.OriginalReceivableGLDistribution	= LocalReceivableGLDistribution
			Instance Selection
				where ((related.ReceivablePaymentRemittance.Status.Unapplied
				or	   related.ReceivablePaymentRemittance.Status.ApplicationNotPerfomed)
				and	   related.Company						= Company
				and	   related.ReceivablePaymentHeader		= ReceivablePaymentHeader
				and	   related.ReceivablePayment			= ReceivablePayment)

		ReceivablePaymentRemittanceUnappliedForThisInvoiceRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany						= InvoiceCompany
				related.ReceivableInvoiceType				= ReceivableInvoiceType
				related.ReceivableInvoice					= ReceivableInvoice
			Instance Selection
				where (related.InvoiceDetail entered
				and	  (related.Status.Unapplied
				or	   related.Status.ApplicationNotPerfomed))

		AllReceivableApplicationSelectForThisInvoiceRel
			one-to-many relation to ReceivableApplicationSelect
			Field Mapping uses Set4
				related.ReceivableApplicationSelect.TransactionCompany									 = InvoiceCompany
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.Invoice						 = ReceivableInvoice
				related.ReceivableApplicationSelect.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableInvoiceType

		ReceivablePaymentRemittanceInvoiceDetailEnteredForThisInvoiceRel
			one-to-many relation to ReceivablePaymentRemittance
			Field Mapping uses ByInvoice
				related.InvoiceCompany							= InvoiceCompany
				related.ReceivableInvoiceType					= ReceivableInvoiceType
				related.ReceivableInvoice						= ReceivableInvoice
			Instance Selection
				where (related.Company							= Company
				and	   related.ReceivablePaymentHeader			= ReceivablePaymentHeader
				and	   related.ReceivablePayment				= ReceivablePayment
				and	   related.InvoiceDetail entered)




		FSMBODConfigurationParameterRel
			one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
				related.FSMBODConfigurationParameter	= LocalConfigurationParameter

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb		= 1
				related.FSMBODConfiguration.Noun		= "CustomerRemittanceAdvice"
				related.FSMBODConfiguration.Direction	= 1

		FSMInboundBODTrackerRel
			one-to-one relation to FSMInboundBODTracker
			Field Mapping uses symbolic key
				related.FSMInboundBODTracker	= LocalFSMInboundBODTracker




	Conditions
		IsIntercompanyBilling
			restricted
			when(IntercompanyReceivableInvoiceDetailRel exists)

		IsCreditMemo
			restricted
			classic name is CRMEMO
			when (ReceivableInvoiceType.CreditMemo)

		IsCreditMemoOrMixedSignLines		
			restricted
			when (ReceivableInvoiceType.CreditMemo
			or    ReceivableInvoiceType.MixedSignLines)

		IsCreditMemo2
			restricted
			classic name is RMISET2
			when (ReceivableInvoiceType.CreditMemo)

		IsInvoiceOrDebitMemo
			restricted
			classic name is RMISET3
			when (ReceivableInvoiceType.Invoice
			or	ReceivableInvoiceType.DebitMemo)

		IsUnapplied	
			restricted
			when (Status.Unapplied)

		InvoiceCompanyReceivableInvoiceRelExists 
			restricted
			when(InvoiceCompanyReceivableInvoiceRel exists)

		AllowSelectDistributionSet 
			restricted
			when (Company.CustomerBusinessGroup.FinanceEnterpriseGroup.FundAccounting
			and   Company.SelectFundDistributionSet)

		RemittanceForThisInvoiceWithoutDetailExists 
			restricted
			when (ReceivablePaymentRemittanceHeaderForThisInvoiceDetailRel exists)

		IsDistributionSetSelectionNavValid 
			restricted
			when (AllowSelectDistributionSet
			and   RemittanceForThisInvoiceWithoutDetailExists)

		IsSelectedDistributionSetsNavValid 
			restricted
			when (AllowSelectDistributionSet
			and   ReceivablePaymentRemittanceInvoiceDetailEnteredForThisInvoiceRel exists)

		AllowProrateAndSelectAll 
			restricted
			when (AllowSelectDistributionSet
			and   InvoiceDetail not entered
			and   ReceivablePayment.Status.Unreleased
			and  !TransientDistributionSetState.ReadyForProcessing)

		RemittanceApplyDistributionSetExists 
			restricted
			when (RemittanceApplyDistribution set exists)

		ThisInstanceExists
			restricted
			when (ReceivablePaymentRemittance exists)

		FundAccountingIsSupported
			restricted
			when (InvoiceCompanyReceivableInvoiceRel exists
			and   InvoiceCompanyReceivableInvoiceRel.OriginIsFundAccountingSupported
			and   InvoiceCompanyReceivableInvoiceRel.ProrateDistributionsRel exists)

		InstanceExistsAndFundAccountingIsSupported
			restricted
			when (ThisInstanceExists
			and   FundAccountingIsSupported)

		InstanceExistsAndFundAccountingIsNotSupported
			restricted
			when (ThisInstanceExists
			and   !FundAccountingIsSupported)

		PaymentOriginIsThirdPartyPaymentProcessing	
			restricted
			when (ReceivablePayment.Origin = "T")	

		ReceivableApplicationsAvailableForPostingExist	
			restricted
			when (PortalPaymentReceivableApplicationsAvailableForPostingRel exists)	

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	



	Sets

		Set2
			indexed
			Instance Selection
				where (IsCreditMemo2)
			Sort Order
				Company
				ReceivablePaymentHeader
				ReceivablePayment
				ReceivableInvoiceType
				ReceivablePaymentRemittance

		Set3
			indexed
			Instance Selection
				where (IsInvoiceOrDebitMemo)
			Sort Order
				Company
				ReceivablePaymentHeader
				ReceivablePayment
				ReceivableInvoiceType
				ReceivablePaymentRemittance

		ByCashApplicationResult
			indexed
			Sort Order
				CashApplicationResult
				Company
				ReceivablePaymentHeader
				ReceivablePayment
				ReceivableInvoiceType
				ReceivablePaymentRemittance

		Set4	
			indexed
			Instance Selection
				where (IsUnapplied)
			Sort Order
				Company
				ReceivableInvoiceType
				ReceivableInvoice
				ReceivablePaymentHeader	
				ReceivablePayment	
				ReceivablePaymentRemittance	

		ByInvoice 
			indexed
			Sort Order
				InvoiceCompany
				ReceivableInvoiceType
				ReceivableInvoice
				InvoiceDetail
				Company
				ReceivablePaymentHeader
				ReceivablePayment
				ReceivablePaymentRemittance


	Rule Blocks

		CommonEdits
			if (!TransientProformaInterface)
				constraint (!Status.Applied)
					"CannotChangeRemittance;ApplicationHasOccurred"

			if (!action type.Delete)
				constraint (ReceivablePayment.IsOpenOrUnreleased)
					"CannotChange;Payment<ReceivablePayment>ForCustomer<ReceivablePayment.Customer>Is<ReceivablePayment.Status>"

			if (Company.VendorCreateAndInterfaceToAP)
				constraint (!ReceivablePayment.HasAPTransfers)
					"CannotChange;PaymentPendingTransferToAP"

			constraint (!ReceivablePayment.HasRTMs)
				"CannotChange;RTMPaymentPending"

			if (AllowSelectDistributionSet) 
				constraint (ReceivablePayment.Status.Unreleased)
					"RemittancesAreLockedOncePaymentIsReleased"
				constraint (!ReceivableInvoiceType.MixedSignLines)
					"MustUse_Alternate_Receivable_Invoice_TypeWhenAddingA_Mixed_Sign_LinesTransaction"

		CreateUpdateEdits

			if (ReceivablePayment.IsThirdPartyPaymentProcessingOrigin)	
				if (Company.ApplyCashAcrossReceivableCompanies)	
					constraint (InvoiceCompany entered)
						"InvoicingCompanyRequired"
					constraint (ReceivableCompanyRel exists)
						"Invoice_CompanyDoesNotExist"					

			if (ReceivablePayment.IsThirdPartyPaymentProcessingOrigin)	
				if (Company.ApplyCashAcrossReceivableCompanies	
				and InvoiceCompany entered)
					constraint (InvoiceCompanyReceivableInvoiceDetailRel exists)
						"Receivable_InvoiceDoesNotExists"

			if (ReceivablePayment.IsPrepaymentTaxWithHolding	
			and ReceivablePayment.PrepaymentExists)
				if	(ReceivableInvoiceType.CreditMemo
				or  ReceivableInvoiceType.MixedSignLines)
					constraint (!IsCreditMemoOrMixedSignLines)
							"CannotCreateCreditMemoOrAMixedSignLineTransactionRemittanceForTaxWithHoldingPrepaymentTypePayment"

			if (Company.EditPaymentRemitTransactions)
				LocalTransactionType = ReceivableInvoiceType
				if (!LocalReceivableInvoiceRel exists)
					LocalTransactionType = ReceivableInvoiceType.DebitMemo
					constraint (LocalReceivableInvoiceRel exists)
						"RemitTransaction<ReceivableInvoice>DoesNotExist" 
					ReceivableInvoiceType = ReceivableInvoiceType.DebitMemo

				if  (ReceivablePayment.Customer entered	//moving this back under the "if (Company.EditPaymentRemitTransactions)" branch
				and !ReceivablePayment.CompanyCustomerRel.ThirdPartyPayer
				and !ReceivablePayment.ReceivableCompanyRel.IsApplyCashAcrossReceivableCompanies)	
					if (Company != ReceivableInvoiceDetailRel.Company
					or  ReceivablePayment.Customer != ReceivableInvoiceDetailRel.Customer)
						if (ReceivablePayment.CompanyCustomerRel.NationalAccountIndicator.No)
							constraint (CustomerReceivableInvoiceRel exists)
								"PaymentCustomerNotPartOfNationalAccount"
						else
							if (ReceivablePayment.CompanyCustomerRel.NationalAccountIndicator.Child)
								LocalCompany = ReceivablePayment.CompanyCustomerRel.NationalCompany
								LocalCustomer = ReceivablePayment.CompanyCustomerRel.NationalCustomer
							else
								LocalCompany = ReceivablePayment.CompanyCustomerRel.Company
								LocalCustomer = ReceivablePayment.CompanyCustomerRel.Customer

							LocalTransactionType = ReceivableInvoiceType

							if (!NationalAccountTransactionRel exists
							and  ReceivableInvoiceType.Invoice)
								LocalTransactionType = "D"
								constraint (NationalAccountTransactionRel exists)
									"PaymentCustomerNotPartOfNationalAccount"

			if (AllowSelectDistributionSet) 

				if (InvoiceCompany not entered)
					LocalReceivableCompany = Company
					if (LocalReceivableCompanyReceivableInvoiceRel exists)
						InvoiceCompany = Company
					else
						InvoiceCompany = first UnknownReceivableCompanyReceivableInvoiceRel.Company

				if (Company.EditPaymentRemitTransactions)

					constraint (InvoiceCompanyReceivableInvoiceRel exists)
						"InvoiceDoesNotExist._\Invoice_\Type:<ReceivableInvoiceType>_\Invoice:<ReceivableInvoice>"

					if (!InvoiceCompanyReceivableInvoiceRel.Origin.IntercompanyBilling)
						if (InvoiceDetail entered)
							if (action type.Create)
								constraint (!ReceivablePaymentRemittanceForThisInvoiceDetailRel exists)
									"RemittanceAlreadyExists._\Invoice_\Type:<ReceivableInvoiceType>_\Invoice:<ReceivableInvoice>_\Invoice_\Detail:<InvoiceDetail>"
						else
							if (action type.Create)
								constraint (!ReceivablePaymentRemittanceHeaderForThisInvoiceDetailRel exists)
									"RemittanceWithout_\Invoice_\DetailAlreadyExistsForThis_\Invoice._\Invoice_\Type:<ReceivableInvoiceType>_\Invoice:<ReceivableInvoice>"

							LocalSumInvoiceDetailOpenAmount = sum InvoiceCompanyReceivableInvoiceRel.OpenReceivableInvoiceDetailRel.OpenAmount 

							constraint (LocalSumInvoiceDetailOpenAmount > 0)
								"InvoiceHasNoOpenAmount"

							if (AppldAmt entered)
								constraint (AppldAmt > 0)
									"Requested_\Application_\AmountCannotBeLessThanZero"
								constraint (AppldAmt <= LocalSumInvoiceDetailOpenAmount)
									"Requested_\Application_\AmountCannotBeGreaterThanThe_\Open_\AmountOfTheInvoice"






	Actions
		Create is a Create Action
			Action Rules




				include CommonEdits
				include CreateUpdateEdits

				if (ReceivablePayment.Customer not entered
				and ReceivableInvoiceDetailRel exists)
					invoke Update ReceivablePayment
						invoked.Customer		= first ReceivableInvoiceDetailRel.Customer
			Exit Rules
				invoke TriggerCustomerRemittanceAdvice




		Update is an Update Action
			Action Rules
				include CommonEdits
				include CreateUpdateEdits



		FastUpdate is an Update Action
			restricted



		Delete is a Delete Action
			Action Rules
				include CommonEdits

				if (AllowSelectDistributionSet) 
					if (!InvoiceDetail entered)
						invoke Delete OtherReceivablePaymentRemittanceForThisInvoiceNotThisInstanceRel

		PaymentTransferDelete is a Delete Action
			restricted
			Action Rules

		TriggerCustomerRemittanceAdvice is an Instance Action
			restricted
			Action Rules
				LocalFinanceEnterpriseGroup	 = GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				LocalAccountingEntity		 = GeneralLedgerCompanyRel.AccountingEntity

				if (Company.FinanceEnterpriseGroup.BODTrigger)
						if (action != "UpdateBODIdFields") 
							LocalActionCode = LocalActionCode.Create
							increment bod id.VariationID
							trigger "CustomerRemittanceAdviceService" PA service
								resume on error
								title is "EG:<LocalFinanceEnterpriseGroup>CustomerRemittanceAdvice:<ReceivablePaymentRemittance>"
								Criteria
									LocalFinanceEnterpriseGroup
									Company

								Variables
									LocalActionCode
										variable name is ActionCode
									include persistent fields from ReceivablePaymentRemittance
									bod id.VariationID
										variable name is BODVariationId
									LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
										variable name is CurrentTimeStamp
									LocalAccountingEntity
										variable name is AccountingEntity
									Company
										variable name is Company


		SendCustomerRemittanceAdviceNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is CustomerRemittanceAdviceXMLBOD
					bod type is "Sync.CustomerRemittanceAdvice"
					accounting entity is DerivedAccountingEntity
					document id is DerivedDocumentID
					variation id is DerivedNativeBODVariationID

		TriggerCustomerRemittanceAdviceNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "CustomerRemittanceAdvice"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "ReceivablePaymentRemittance"
					invoked.PrmFinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					invoked.PrmCustomerBusinessGroup	= ReceivablePayment.Customer.CustomerGroup
					invoked.PrmAccountingEntity			= GeneralLedgerCompanyRel.AccountingEntity
					invoked.PrmCompany					= Company
					invoked.PrmMainUserTemplate			= "IONSyncCustomerRemittanceAdvice_ReceivablePaymentRemittance_Header_ST"
				NativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if(Company.FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "CustomerRemittanceAdvice"
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedNativeBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.Reference1				= Company
							invoked.Reference2				= ReceivablePaymentHeader
							invoked.Reference3				= ReceivablePayment
							invoked.Reference4				= ReceivablePaymentRemittance
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							initialize invoked.Error
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedNativeBODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.Reference1				= Company
							invoked.Reference2				= ReceivablePaymentHeader
							invoked.Reference3				= ReceivablePayment
							invoked.Reference4				= ReceivablePaymentRemittance
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							initialize invoked.Error
							initialize invoked.ErrorMessage
					invoke SendCustomerRemittanceAdviceNativeLPLBOD
						resume on error
							Error										= true
							ErrorMessages								= error message
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessages
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= CustomerRemittanceAdviceXMLBOD
							invoked.BODID								= DerivedNativeBODID
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status								= 3
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= CustomerRemittanceAdviceXMLBOD
							invoked.BODID								= DerivedNativeBODID

		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation		  is Alpha size 22
					default label is "Location"
				PrmDocumentID		is Alpha size 100
					default label is "DocumentID"
				PrmRevision		  is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord	is Alpha size 1
					default label is "SystemOfRecord"
				PrmVariationID	   is Alpha size 22
					default label is "VariationID"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				if (bod id.VariationID != PrmVariationID)
					bod id.VariationID			= PrmVariationID

		Purge is a Purge Action
			restricted
			Entrance Rules
				invoke Purge RemittanceApplyDistribution set

		SelectInvoiceDetailForFundApply is an Instance Action 
			default label is "SelectLinesAndProrateDistributions"
			valid when (AllowProrateAndSelectAll)
			Local Fields
				LocalAppliedAmount			is like InternationalAmount
			Action Rules

				invoke Delete ReceivablePaymentRemittanceInvoiceDetailEnteredForThisInvoiceRel

				LocalSumInvoiceDetailOpenAmount = sum InvoiceCompanyReceivableInvoiceRel.OpenReceivableInvoiceDetailRel.OpenAmount - sum ReceivablePaymentRemittanceUnappliedForThisInvoiceRel.AppldAmt
				if (AllReceivableApplicationSelectForThisInvoiceRel exists)
					LocalSumInvoiceDetailOpenAmount -= sum AllReceivableApplicationSelectForThisInvoiceRel.TransactionApplicationAmount

				constraint (LocalSumInvoiceDetailOpenAmount > 0)
					"InvoiceHasNoOpenAmount"
				constraint (AppldAmt <= LocalSumInvoiceDetailOpenAmount)
					"Requested_\Application_\AmountCannotBeGreaterThanThe_\Open_\AmountOfTheInvoice"

				if (AppldAmt not entered)
					AppldAmt = LocalSumInvoiceDetailOpenAmount

				LocalSumInvoiceDetailOpenAmount = AppldAmt

				for each InvoiceCompanyReceivableInvoiceRel.OpenReceivableInvoiceDetailRel

					if (each.OpenAmount > 0)

						if (each.OpenAmount <= LocalSumInvoiceDetailOpenAmount)
							LocalAppliedAmount = each.OpenAmount
						else
							LocalAppliedAmount = LocalSumInvoiceDetailOpenAmount

						LocalSumInvoiceDetailOpenAmount -= LocalAppliedAmount

						invoke Create ReceivablePaymentRemittance
							invoked.Company						= Company
							invoked.ReceivablePaymentHeader		= ReceivablePaymentHeader
							invoked.ReceivablePayment			= ReceivablePayment
							invoked.ReceivableInvoiceType		= each.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
							invoked.ReceivableInvoice			= each.ReceivableInvoiceDetail.Invoice
							invoked.AppldAmt					= LocalAppliedAmount
							invoked.InvoiceCompany				= InvoiceCompany
							invoked.InvoiceDetail				= each.ReceivableInvoiceDetail.PaymentSeq

						invoke ProrateAndSelectAllForFundApply each

						if (LocalSumInvoiceDetailOpenAmount = 0)
							end for each


		MatchDistributionsForFundAccounting is an Instance Action 
			restricted
			Local Fields
				LocalAmountRemaining		is like InternationalAmount
				LocalDistributionOpenAmount	is like InternationalAmount
				LocalSelectedAmount			is like InternationalAmount
				LocalPendingRemitAmount		is like InternationalAmount
				LocalMatchSuccessful		is Boolean
			Action Rules

				invoke Delete RemittanceApplyDistribution set
				initialize LocalMatchSuccessful

				if (ReceivableInvoiceDetailInvoiceCompanyRel.AssociatedLine entered)
					LocalMatchSuccessful = true

					if (ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.AlternateReceivableInvoiceType.CreditMemo)
						LocalAmountRemaining = AppldAmt
					else
						LocalAmountRemaining = AppldAmt * -1

					for each AssociatedReceivableGLDistributionRel

						LocalLastDistributionSequence	= each.LastDistributionSequence
						LocalReceivableGLDistribution	= each.ReceivableGLDistribution
						LocalPendingRemitAmount			= sum RemittanceApplyDistributionByInvoiceThisDistributionRel.DistributionAmount.CurrencyAmount

						LocalDistributionOpenAmount = each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount

						if (each.DistributionAmount.CurrencyAmount > 0)
							if (LocalAmountRemaining < LocalDistributionOpenAmount)
								LocalSelectedAmount 	= LocalAmountRemaining
								LocalAmountRemaining 	= 0
							else
								LocalSelectedAmount 	= LocalDistributionOpenAmount
								LocalAmountRemaining   -= LocalDistributionOpenAmount
						else
							if (LocalAmountRemaining > LocalDistributionOpenAmount)
								LocalSelectedAmount 	= LocalAmountRemaining
								LocalAmountRemaining 	= 0
							else
								LocalSelectedAmount 	= LocalDistributionOpenAmount
								LocalAmountRemaining   -= LocalDistributionOpenAmount

						if (LocalSelectedAmount != 0)
							invoke Create RemittanceApplyDistribution set
								invoked.OriginalLastDistributionSequence	= each.LastDistributionSequence
								invoked.OriginalReceivableGLDistribution	= each.ReceivableGLDistribution
								invoked.InvoiceCompany						= InvoiceCompany
								invoked.ReceivableInvoiceType				= ReceivableInvoiceType
								invoked.ReceivableInvoice					= ReceivableInvoice
								invoked.InvoiceDetail						= InvoiceDetail
								invoked.ApplyFundDistributionAccount		= each.GeneralLedgerAccount
								invoked.DistributionAmount.CurrencyAmount 	= LocalSelectedAmount
								invoked.DistributionAmount.ExchangeDate		= each.DistributionAmount.ExchangeDate
								invoked.OriginalCurrency					= each.OriginalCurrency
								invoked.Customer							= each.ReceivableCompanyDataGroup.Customer

						if (LocalAmountRemaining = 0)
							end for each

					if (LocalAmountRemaining != 0)
						LocalMatchSuccessful = false

				constraint (LocalMatchSuccessful)
					"Distribution_MatchWasNotSuccessful.EitherProrateDistributionsOrSelectDistributionsManually."


		ProrateAndSelectAllForFundApply is an Instance Action 
			restricted
			Local Fields
				LocalAdjustmentPercent 		is a Percent
				LocalInvoiceOpenAmount 		is an InternationalAmount
				LocalSumInvoiceFundApplied 	is an InternationalAmount
				LocalApplyAmount 			is an InternationalAmount
				LocalSumApplyAmounts 		is an InternationalAmount
				LocalNewAmount 				is an InternationalAmount
				LocalOldAmount 				is an InternationalAmount
				LocalPreviousFundApplied	is an InternationalAmount
				LocalApplicationAmount		is an InternationalAmount
				LocalDifference				is an InternationalAmount
				LocalSumRoundAmounts 		is an InternationalAmount
				LocalAmountToAdd			is an InternationalAmount
				LocalDistributionOpenAmount	is an InternationalAmount
				LocalPendingRemitAmount		is an InternationalAmount

			Action Rules

				invoke Delete RemittanceApplyDistribution set

				LocalSumInvoiceFundApplied 	= sum ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.ProrateDistributionsRel.FundAppliedAmount + sum RemittanceApplyDistributionByInvoiceRel.DistributionAmount.CurrencyAmount

				if (ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.AlternateReceivableInvoiceType.CreditMemo)
					LocalInvoiceOpenAmount 	= ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.InvoiceAmount.CurrencyAmount - LocalSumInvoiceFundApplied
				else
					LocalInvoiceOpenAmount 	= ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.InvoiceAmount.CurrencyAmount + LocalSumInvoiceFundApplied

				if (LocalInvoiceOpenAmount = AppldAmt)
					for each ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.ProrateDistributionsRel

						LocalLastDistributionSequence	= each.LastDistributionSequence
						LocalReceivableGLDistribution	= each.ReceivableGLDistribution
						LocalPendingRemitAmount		= sum RemittanceApplyDistributionByInvoiceThisDistributionRel.DistributionAmount.CurrencyAmount

						if ((each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount) != 0)
							invoke Create RemittanceApplyDistribution set
								invoked.OriginalLastDistributionSequence	= each.LastDistributionSequence
								invoked.OriginalReceivableGLDistribution	= each.ReceivableGLDistribution
								invoked.InvoiceCompany						= InvoiceCompany
								invoked.ReceivableInvoiceType				= ReceivableInvoiceType
								invoked.ReceivableInvoice					= ReceivableInvoice
								invoked.InvoiceDetail						= InvoiceDetail
								invoked.ApplyFundDistributionAccount		= each.GeneralLedgerAccount
								invoked.DistributionAmount.CurrencyAmount 	= each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount
								invoked.DistributionAmount.ExchangeDate		= each.DistributionAmount.ExchangeDate
								invoked.OriginalCurrency					= each.OriginalCurrency
								invoked.Customer							= each.ReceivableCompanyDataGroup.Customer
				else
					for each ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.ProrateDistributionsRel

						LocalLastDistributionSequence	= each.LastDistributionSequence
						LocalReceivableGLDistribution	= each.ReceivableGLDistribution
						LocalPendingRemitAmount		= sum RemittanceApplyDistributionByInvoiceThisDistributionRel.DistributionAmount.CurrencyAmount

						LocalAdjustmentPercent 	= ((each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount) / LocalInvoiceOpenAmount)
						LocalApplyAmount		= AppldAmt * LocalAdjustmentPercent

						round LocalApplyAmount to nearest DerivedRoundTo

						if (LocalApplyAmount > 0
						and LocalApplyAmount > (each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount))
							LocalApplyAmount	= each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount

						if (LocalApplyAmount < 0
						and LocalApplyAmount < (each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount))
							LocalApplyAmount	= each.DistributionAmount.CurrencyAmount - each.FundAppliedAmount - LocalPendingRemitAmount

						if (LocalApplyAmount != 0)
							LocalSumApplyAmounts += LocalApplyAmount
							invoke Create RemittanceApplyDistribution set
								invoked.OriginalLastDistributionSequence	= each.LastDistributionSequence
								invoked.OriginalReceivableGLDistribution	= each.ReceivableGLDistribution
								invoked.InvoiceCompany						= InvoiceCompany
								invoked.ReceivableInvoiceType				= ReceivableInvoiceType
								invoked.ReceivableInvoice					= ReceivableInvoice
								invoked.InvoiceDetail						= InvoiceDetail
								invoked.ApplyFundDistributionAccount		= each.GeneralLedgerAccount
								invoked.DistributionAmount.CurrencyAmount 	= LocalApplyAmount
								invoked.DistributionAmount.ExchangeDate		= each.DistributionAmount.ExchangeDate
								invoked.OriginalCurrency					= each.OriginalCurrency
								invoked.Customer							= each.ReceivableCompanyDataGroup.Customer

					if (ReceivableInvoiceDetailInvoiceCompanyRel.ReceivableInvoiceRel.AlternateReceivableInvoiceType.CreditMemo)
						LocalApplicationAmount = AppldAmt
					else
						LocalApplicationAmount = AppldAmt * -1

					if (LocalSumApplyAmounts != LocalApplicationAmount)

						LocalDifference = LocalApplicationAmount - LocalSumApplyAmounts

						for each RemittanceApplyDistributionDescendingRel

							LocalLastDistributionSequence	= each.OriginalLastDistributionSequence
							LocalReceivableGLDistribution	= each.OriginalReceivableGLDistribution
							LocalPendingRemitAmount		= sum RemittanceApplyDistributionByInvoiceThisDistributionRel.DistributionAmount.CurrencyAmount

							LocalDistributionOpenAmount  = each.ReceivableGLDistributionRel.DistributionAmount.CurrencyAmount - each.ReceivableGLDistributionRel.FundAppliedAmount - LocalPendingRemitAmount

							if (each.ReceivableGLDistributionRel.DistributionAmount.CurrencyAmount > 0)
								if (LocalDifference <= LocalDistributionOpenAmount)
									LocalAmountToAdd	 = LocalDifference
									LocalDifference		 = 0
								else
									LocalAmountToAdd	 = LocalDistributionOpenAmount
									LocalDifference		-= LocalDistributionOpenAmount
							else
								if (LocalDifference >= LocalDistributionOpenAmount)
									LocalAmountToAdd	 = LocalDifference
									LocalDifference		 = 0
								else
									LocalAmountToAdd	 = LocalDistributionOpenAmount
									LocalDifference		-= LocalDistributionOpenAmount

							LocalNewAmount 	= each.DistributionAmount.CurrencyAmount + LocalAmountToAdd

							if (LocalNewAmount = 0)
								invoke Delete each
							else
								invoke Update each
									invoked.DistributionAmount.CurrencyAmount 				= LocalNewAmount

							if (LocalDifference = 0)
								end for each


		ApplyCreditRemittances is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashApplicationResult		is like CashApplicationResult
				PrmCompany						is a ReceivableCompany
				PrmReceivablePaymentHeader 		is a ReceivablePaymentHeader
				PrmReceivablePayment 			is a ReceivablePayment
				PrmGlDate						is Date
				WorkGLDate						is Date
				PrmFirstAttemptRemittanceOnly 	is Boolean
				PrmCurrencyOverride			  	is Boolean
				PrmOperator						is a ReceivableOperator
				PrmOverride						is Boolean

			Sort Order is Set2

			Instance Selection
				where (Company 					= PrmCompany
				and	   ReceivablePaymentHeader 	= PrmReceivablePaymentHeader
				and	   ReceivablePayment 		= PrmReceivablePayment
				and    ReceivableInvoice entered
				and   (Status.Unapplied
				or    (Status.ApplicationNotPerfomed
				and   !PrmFirstAttemptRemittanceOnly)))

			Action Rules
				Instance Rules
					invoke AutoCash2055FullyApplyPaymentAction ReceivablePayment
						invoked.PrmRemitSequence 				= ReceivablePaymentRemittance
						invoked.PrmCashApplicationResult		= PrmCashApplicationResult
						invoked.PrmGlDate						= PrmGlDate
						invoked.PrmWorkGLDate					= WorkGLDate
						invoked.PrmCurrencyOverride				= PrmCurrencyOverride
						invoked.PrmOperator						= PrmOperator
						invoked.PrmOverride						= PrmOverride

		ApplyInvoiceAndDebitRemittances is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashApplicationResult		is a CashApplicationResult
				PrmCompany						is a ReceivableCompany
				PrmReceivablePaymentHeader 		is a ReceivablePaymentHeader
				PrmReceivablePayment 			is a ReceivablePayment
				PrmGlDate						is Date
				WorkGLDate						is Date
				PrmFirstAttemptRemittanceOnly 	is Boolean
				PrmCurrencyOverride			  	is Boolean
				PrmOperator						is a ReceivableOperator
				PrmOverride						is Boolean

			Local Fields
				LocalAutoCashAsyncID			is an AsyncActionRequest

			Sort Order is Set3

			Instance Selection
				where (Company 					= PrmCompany
				and	   ReceivablePaymentHeader 	= PrmReceivablePaymentHeader
				and	   ReceivablePayment 		= PrmReceivablePayment
				and    ReceivableInvoice entered
				and   (Status.Unapplied
				or    (Status.ApplicationNotPerfomed
				and   !PrmFirstAttemptRemittanceOnly)))

			Action Rules
				Empty Set Rules
					if (PrmReceivablePayment.Status.Open
					and PrmReceivablePayment.CompanyCustomerRel.MaximumOverageReasonCode entered)
						LocalAutoCashAsyncID = PrmCashApplicationResult.AsyncID
						invoke CheckAndCreateOverageAdjustment PrmReceivablePayment in background group (PrmCashApplicationResult.DerivedBackgroundGroup)
							run after LocalAutoCashAsyncID
							assign async action request id to LocalAutoCashAsyncID
							invoked.PrmCashApplicationResult		= PrmCashApplicationResult
							invoked.PrmGlDate						= PrmGlDate
							invoked.PrmWorkGLDate					= WorkGLDate
							invoked.PrmOperator						= PrmOperator
							invoked.PrmOverride						= PrmOverride
						
						invoke FastUpdate PrmCashApplicationResult
							invoked.AsyncID							= LocalAutoCashAsyncID

				Set Rules
					Exit Rules
						if (PrmReceivablePayment.Status.Open
						and PrmReceivablePayment.CompanyCustomerRel.MaximumOverageReasonCode entered)
							LocalAutoCashAsyncID = PrmCashApplicationResult.AsyncID
							invoke CheckAndCreateOverageAdjustment PrmReceivablePayment in background group (PrmCashApplicationResult.DerivedBackgroundGroup)
								run after LocalAutoCashAsyncID
								assign async action request id to LocalAutoCashAsyncID
								invoked.PrmCashApplicationResult		= PrmCashApplicationResult
								invoked.PrmGlDate						= PrmGlDate
								invoked.PrmWorkGLDate					= WorkGLDate
								invoked.PrmOperator						= PrmOperator
								invoked.PrmOverride						= PrmOverride
							
							invoke FastUpdate PrmCashApplicationResult
								invoked.AsyncID							= LocalAutoCashAsyncID

				Instance Rules
					invoke AutoCash2055FullyApplyPaymentAction ReceivablePayment
						invoked.PrmRemitSequence 				= ReceivablePaymentRemittance
						invoked.PrmCashApplicationResult		= PrmCashApplicationResult
						invoked.PrmGlDate						= PrmGlDate
						invoked.PrmWorkGLDate					= WorkGLDate
						invoked.PrmCurrencyOverride				= PrmCurrencyOverride
						invoked.PrmOperator						= PrmOperator
						invoked.PrmOverride						= PrmOverride
