ReplicationSet is a BusinessClass
	prefix is RST
	owned by la
	framework type is ReplicationSet
		
	Patterns
		implements LightweightAuditing
		disable AuditIndex
		implements AuditLogEntryActions
	
	Ontology
		symbolic key is ReplicationSet
		
	Persistent Fields
		Description      is Text
		ExportFormat     is Alpha size 1
			States
				JSON     value is "J"
				CSV      value is "C"
				XML      value is "X"
				COLUMNAR value is "R"

		LastRefreshStamp        	is TimeStamp
			default label is "LastReplication"
			disable Auditing when in background
		LastRegistrationStamp  	 	is TimeStamp        
		VariationID					is a RepSetVariationID
			disable Auditing 
		ActionGroupID				is UniqueID
			disable Auditing 
		CurrentRefreshStamp     	is TimeStamp
			disable Auditing when in background
		MaintainHistoryCount		is Numeric size 3
		ReplicationSchemaDestination
			default label is "SchemaDestination"
		ReplicationDataDestination
			default label is "DataDestination"
		LocaleSet					is an IsoLocaleSet
		DefaultLocale				is an IsoLocale
		EnableEnterpriseSearch		is Boolean
			default label is "Enable_Enterprise_Search"
		RepositoryVersion			is Numeric size 8
		LocalDestination			is a DataArea
		IncludeAsOfTimeField		is Boolean
			default label is "IncludeReplicationAsOfTimeField"
		PfiServiceDefinition
			default label is "ProcessServiceDefinition"
		TimeStorageResolution		is Numeric size 1
			States
				Seconds				value is 0
				Milliseconds		value is 1
		LastResetToStamp				is TimeStamp
			
	Conditions
		SchemaRegistrationRequired
			when (not ExportFormat.COLUMNAR and ReplicationSchemaDestination entered and ((not LastRegistrationStamp entered and HasActiveRepSetBCRecords) or HasActiveUnregisteredRepSetBCRecords))
			
		CanRegisterOutOfDateSchemas
			default label is "Register_out_of_date_schemas_is_allowed"
			when (ReplicationSchemaDestination entered and (LastRegistrationStamp entered and HasActiveUnregisteredRepSetBCRecords and not InProcess) and not HasDupeUnregisteredRepSetBCReplicateNames)
			
		CanRegisterSchemas
			default label is "Schema_registration_is_allowed"
			when (ReplicationSchemaDestination entered and not InProcess and HasActiveRepSetBCRecords and not HasDupeRepSetBCReplicateNamesSchema)
			
		ReplicationIsValid
			when (not SchemaRegistrationRequired and not InProcessExcludeCurrentAsyncId and HasActiveRepSetBCRecords and not HasDupeRepSetBCReplicateNames)		

		CanForceUnlock
			restricted			
			when (Locked and not ActionGroupActive)
			
		ActionGroupExists
			restricted
			when (ActionGroupRel exists)
			
		ActionGroupActive
			default label is "ReplicationInProcess"
			when ((ActionGroupID entered and not first ActionGroupRel.ActionGroupSuccessfullyCompleted) or RootAsyncActionRequestProcessingRel exists)

		ActionGroupPending
			default label is "ReplicationPendingScheduling"
			when ((ActionGroupID entered and not first ActionGroupRel.ActionGroupSuccessfullyCompleted) or RootAsyncActionRequestPendingRel exists)	

		ActionGroupActiveExcludeCurrent
			restricted
			default label is "ReplicationInProcess"
			when (ActionGroupID entered and not first ActionGroupRel.ActionGroupSuccessfullyCompletedExcludeCurrent)
			
		ReplicationIncomplete
			restricted
			when (RepSetBCIncompleteRel exists)
			
		BackfillIncomplete
			restricted
			when (RepSetBCBackfillIncompleteRel exists)
		
		ArchiveBackfillIncomplete
			default label is untranslatable
			restricted
			when (RepSetBCArchiveBackfillIncompleteRel exists)	
			
		InProcess
			when (Locked or ActionGroupActive or ReplicationIncomplete)

		InProcessExcludeCurrentAsyncId
			restricted
			when (Locked or ActionGroupActiveExcludeCurrent or ReplicationIncomplete)		
		
		RunningInProcess
			restricted			
			when (Locked or ActionGroupActive)
			
		CanReset
			restricted 
			default label is untranslatable
			when (not RunningInProcess and not RepSetBCArchiveBackfillRunningInProcess exists)
			
		RedAlert
			restricted
			when (SchemaRegistrationRequired or (not RunningInProcess and ReplicationIncomplete) or HasDupeRepSetBCReplicateNames)
			
		YellowAlert
			restricted
			when (RunningInProcess or not HasActiveRepSetBCRecords or HasInactiveRepSetBCRecords)	
		
		DefaultLocaleRequired
			when (EnableEnterpriseSearch or (LocaleSet entered and ExportFormat.JSON))	
			
		AnyDelivered
			default label is "Delivered"
			when (RepSetBCDeliveredRel exists)	
			
		HasInactiveRepSetBCRecords 
			restricted
			when (RepSetBCInactiveRel exists)
		
		HasActiveRepSetBCRecords 
			restricted
			when (RepSetBCActiveRel exists)
		
		HasActiveUnregisteredRepSetBCRecords 
			restricted
			when (RepSetBCRegistrationRequiredRel exists)
				
		CanCopy
			default label is untranslatable:"CanCopy"
			restricted
		    when (not ExportFormat.COLUMNAR and (not ReplicationSet.InProcess or InternalExecution))
		
		ValidForT2V
			restricted
			when (RepSetBCNotDeliveredRel exists or RepSetBCClientField set exists)
		
		ShowAutomationDataLakeQueue
		    restricted
		    when (ReplicationDataDestination.ReplicationDataDestinationDataLake.Batch or ReplicationDataDestination.ReplicationDataDestinationDataLake.Streaming)
		    
		ShowImsQueue
			restricted
			when (ReplicationDataDestination.IMS)
		
		ShowDataLakeQueue
		    restricted
		    when (ReplicationDataDestination.ReplicationDataDestinationDataLake.Batch)
		    
		ShowStreamingQueue
		    restricted
		    when (ReplicationDataDestination.ReplicationDataDestinationDataLake.Streaming)
	
		ShowLastRefreshStamp
		    when (LastRefreshStamp entered
			and   ReplicationSet entered)

		ShowNoLastRefreshStampMessage
			when (!LastRefreshStamp entered
			and   ReplicationSet entered
			and   !InProcess)
			
		DataLakeQueueIncomplete
			default label is untranslatable:"DataLakeQueueIncomplete"
			restricted
			when (ShowDataLakeQueue and DataLakeQueueIncompleteRel exists)

		IMSQueueNewOrFailed
			restricted
			when (IONOutboxQueueNewOrFailedRel exists)
			
		ArchivableRepSetBCSExist
			restricted
			default label is untranslatable
			when (ArchivableRepSetBCRel exists)

	Local Fields
		LocalBusinessClass 			is a BusinessClass		
		LocalRepSetHistoryStamp 	is TimeStamp	
		LocalNewSchemaMessage		is Boolean
		LocalRepSetBCChecked		is Boolean
		LocalClearIncremental		is Boolean
		LocalRegistrationWarnings 	is Text
		LocalImsBCRepNameTruncation is Boolean
        LocalCopyErrors            is Numeric size 6    
		ReplicationSetIncrementalBusClasses is Text
		ReplicationSetBackfillBusClasses is Text

	Rule Blocks

		InactiveRepSetBCBlock 
			if (not HasActiveRepSetBCRecords)
				confirmation required
					"ReplicationSetContainsNoActiveReplicationSetBusinessClasses.Continue?"
			else
			if (HasInactiveRepSetBCRecords)
				confirmation required
					"ReplicationSetContainsOneOrMoreInactiveReplicationSetBusinessClassesThatWillBeSkipped.Continue?"
					
		HasDupeRepSetBCReplicateNamesBlock 
			if (not DisableDuplicateReplicateNameCheck)
				for each RepSetBCActiveRel
					constraint (not each.OtherActiveReplicateClassName exists)
						"DuplicateActiveReplicationSetBusinessClassesFoundUsingReplicateClassName<each.ReplicateClassName>.FirstReplicationSetIs<each.first OtherActiveReplicateClassName.ReplicationSet>.CannotRegisterOrReplicate."

	Derived Fields
		
		FromLogicalId is a NativeField
			type is Alpha size 250
				
		Locked is a NativeField
			type is Boolean		
			
		CanEnableEnterpriseSearch is a NativeField
			type is Boolean		
			restricted
			
		AllSchemaRegistrationRequiredMessage is a MessageField
			restricted
			"SchemaRegistrationIsRequiredBeforeReplication"		
			
		PartialSchemaRegistrationRequiredMessage is a MessageField
			restricted
			"OneOrMoreSchemaRegistrationsAreRequiredBeforeReplication"	
			
		IncompleteReplicationMessage is a MessageField
			restricted
			"ReplicationIsIncomplete"	
			
		DuplicateReplicateClassNamesMessage is a MessageField 
			restricted			
			"ReplicationSetContainsReplicationSetBusinessClassesThatHaveDuplicateReplicateClassNamesInOtherSets.CannotRegisterOrReplicateUntilResolved."				
			
		NoActiveMembersMessage is a MessageField 
			restricted			
			"ReplicationSetContainsNoActiveReplicationSetBusinessClasses."	
			
		InactiveActiveMembersMessage is a MessageField 
			restricted			
			"ReplicationSetContainsInactiveReplicationSetBusinessClasses."	
			
		ActionGroupActivedMessage is a MessageField
			restricted
			"ReplicationSetIsCurrentlyProcessing"	
			
		RegistrationCompleteMessage is a MessageField
			restricted
			"SchemaRegistrationComplete"		
			
		RegistrationCompleteWithWarningsMessage is a MessageField
			restricted
			"SchemaRegistrationCompleteWithWarnings.Check_'My_Notifications'_ForDetails."	

		InProcessMessage is a MessageField
			"ReplicationInProcess"

		NoLastRefreshStampMessage is a MessageField
			"Not_Replicated"

		RegistrationCompletionMessage is a DerivedField	
			type is MessageField
			if (LocalRegistrationWarnings entered)
				return RegistrationCompleteWithWarningsMessage
			else
				return RegistrationCompleteMessage
			
		ReplicationSetLockedMessage is a MessageField
			restricted
			"ReplicationSetIsLocked"

		InactiveReplicationClassesMessage is a MessageField
			restricted
			"InactiveReplicationClassesExistAndWillBeSkippedDuringReplication"

		ReplicateActionNotValidMessage is a MessageField
			restricted
			"ReplicateActionNotValid"
							
		ActiveReplicationAlertMessage is a DerivedField
			type is MessageField
			if (ActionGroupActive)
				return ActionGroupActivedMessage
			else 
			if (Locked)
				return ReplicationSetLockedMessage
			
			return ""	
			
		IsMultiTenant is a NativeField
			type is Boolean
			restricted				
			
		SchemaDefaultIMS is a NativeField
			type is Boolean
			restricted
			
		SchemaDefaultFTP is a NativeField
			type is Boolean
			restricted
			
		SchemaDefaultDirectory is a NativeField
			type is Boolean
			restricted											

        DataLakeConfigured is a NativeField
            type is Boolean
            restricted

        StreamingConfigured is a NativeField
            type is Boolean
            restricted

        IMSConfigured is a NativeField
            type is Boolean
            restricted

		DataDefaultIMS is a NativeField
			type is Boolean
			restricted
			
		DataDefaultFTP is a NativeField
			type is Boolean
			restricted
			
		DataDefaultDirectory is a NativeField
			type is Boolean
			restricted	
			
		DataDefaultLocal is a NativeField
			type is Boolean
			restricted						

		DataDefaultBatch is a NativeField
			type is Boolean
			restricted

		DataDefaultStreaming is a NativeField
			type is Boolean
			restricted

		DeveloperMode is a NativeField
			type is Boolean
			restricted				
		
		CompassConfigured is a NativeField
			type is Boolean
			restricted
			









		ActionGroupActiveExcludeUnlock is a DerivedField
			type is Boolean
			restricted
			default label is "ReplicationInProcess"
			
			if (ActionGroupID entered)
				for each ActionGroupActiveRel
					if (each.ImplementingClass != "ReplicationSet"
					or  each.AsyncAction != "UnlockReplicationSet")
						
						if ((each.PendingScheduling
						and each.AsyncActionRequest != ActionGroupID) 
						or  each.NonFinishedTriggersExist)
							return true
				
			return false

        CopyCompletedMessage is a MessageField
            restricted
            "ReplicationSetCopied"                    
            
        CopyCompletedWithErrorsMessage is a MessageField
            restricted
            "ReplicationSetCopiedWith<LocalCopyErrors>Errors"    
            
        CopyCompletedWithErrorMessage is a MessageField
            restricted
            "ReplicationSetCopiedWith<LocalCopyErrors>Error"            
            
        CopyCompletionMessage is a DerivedField
            type is MessageField
            
            if (LocalCopyErrors = 1)
                return CopyCompletedWithErrorMessage
                
            if (LocalCopyErrors > 1)
                return CopyCompletedWithErrorsMessage
            
            return CopyCompletedMessage    
            

		DisableDuplicateReplicateNameCheck is a DerivedField
			type is Boolean
			restricted
			
			if (config(Replication).disableRepSetBCDuplicateReplNameCheck = "true")
				return true
			
			return false      
			
		HasDupeRepSetBCReplicateNames is a DerivedField
			type is Boolean
			restricted
			
			HasDupeRepSetBCReplicateNames = false
			
			for each RepSetBCActiveRel
				if (each.HasDupeReplicated)
					HasDupeRepSetBCReplicateNames = true
					end for each
						
			return HasDupeRepSetBCReplicateNames
			
		HasDupeRepSetBCReplicateNamesSchema is a DerivedField
			type is Boolean
			restricted
			
			HasDupeRepSetBCReplicateNamesSchema = false
			
			for each RepSetBCActiveRel
				if (each.HasDupeSchema)
					HasDupeRepSetBCReplicateNamesSchema = true
					end for each
						
			return HasDupeRepSetBCReplicateNamesSchema		
			
		HasDupeUnregisteredRepSetBCReplicateNames is a DerivedField
			type is Boolean
			restricted
			
			HasDupeUnregisteredRepSetBCReplicateNames = false
			
			for each RepSetBCRegistrationRequiredRel
				if (each.HasDupeSchema)
					HasDupeUnregisteredRepSetBCReplicateNames = true
					end for each
						
			return HasDupeUnregisteredRepSetBCReplicateNames
			

		
		AdjustedCurrentRefreshStamp is a NativeField
			type is TimeStamp	
			restricted
			
		InternalExecution is a NativeField
		    type is Boolean
		    restricted
		    
		ReplicationIsNotValidMF is a DerivedField
			type is MessageField

			if (SchemaRegistrationRequired)
				if (not LastRegistrationStamp entered)
					return AllSchemaRegistrationRequiredMessage
				else
				if (RepSetBCRegistrationRequiredRel exists)
					return PartialSchemaRegistrationRequiredMessage
			else 

			if (Locked)		
				return ReplicationSetLockedMessage
			else 
			if (ActionGroupActiveExcludeCurrent)
				return InProcessMessage
			else
			if (ReplicationIncomplete)
				return IncompleteReplicationMessage
			else 

			if (!HasActiveRepSetBCRecords)
				return NoActiveMembersMessage
			else

			if (HasDupeRepSetBCReplicateNames) 
				return DuplicateReplicateClassNamesMessage
			else
			if (HasInactiveRepSetBCRecords)
				return InactiveReplicationClassesMessage

			else
				return ReplicateActionNotValidMessage

	Delete Rules
		constraint (not RepSetBCDeliveredRel exists)
			"CannotDeleteAReplicationSetWithDeliveredReplicationSetBusinessClasses"

	Field Rules
		ExportFormat
			default to ExportFormat.JSON
			if (ReplicationDataDestination.ReplicationDataDestinationDataLake.Batch
			or  ReplicationDataDestination.ReplicationDataDestinationDataLake.Streaming)
			    constraint (ExportFormat.JSON)
                    "DataLakeIngestionOnlySupportsJSONExportType"
            
            if (ExportFormat changed)
            	if (old ExportFormat = ExportFormat.COLUMNAR and RepSetBC set exists)
            		confirmation required
            			"PleaseReviewReplicateNamesOnReplicationSetBusinessClasses"
            	if (ExportFormat = ExportFormat.COLUMNAR)
            		for each RepSetBC set
            			invoke Update each
            				invoked.ReplicateClassName = each.DefaultReplicateClassName





		MaintainHistoryCount
			initial value is 10
			constraint (MaintainHistoryCount >= 0)
				"ValueCannotBeNegative"	
				
		ReplicationSchemaDestination
			ReplicationSchemaDestination.Dummy = true 
				
			if (not ExportFormat.COLUMNAR)
				if (ReplicationDataDestination.IMS)
					required
						"MustChooseAtLeastOneSchemaDestination"
	
					if (not ReplicationSchemaDestination.IMS)
						confirmation required
							"ShouldUseDataCatalogSchemaRegistrationWithIMS"

	            if (ReplicationDataDestination.ReplicationDataDestinationDataLake.Batch)
	                required
						"MustChooseAtLeastOneSchemaDestination"

					if (not ReplicationSchemaDestination.IMS)
					    confirmation required
							"ShouldUseDataCatalogSchemaRegistrationWithDataLake"

	            if (ReplicationDataDestination.ReplicationDataDestinationDataLake.Streaming)
	                required
						"MustChooseAtLeastOneSchemaDestination"

					if (not ReplicationSchemaDestination.IMS)
					    confirmation required
							"ShouldUseDataCatalogSchemaRegistrationWithStreaming"

				if (ReplicationSchemaDestination not entered
				and (ReplicationDataDestination.FTP
				or   ReplicationDataDestination.Directory))
					confirmation required
						"CreateWithNoSchemaDestination?"
								
								
		ReplicationDataDestination
			if (not ExportFormat.COLUMNAR)
				required				
					"MustChooseAtLeastOneDataDestination"

		LocaleSet
			constraint (not InProcess)
				"CannotChangeLocaleSetWhileReplicationIsActive" 
				
			if (!SchemaRegistrationRequired 
			and ((LocaleSet entered
			and not old LocaleSet entered)
			or (not LocaleSet entered
			and old LocaleSet entered)))
				confirmation required
					"ChangingTheLocaleSetToOrFromBlankRequiresANewSchemaRegistration.AreYouSure?"
					
				invoke SetRegistrationRequired RepSetBC set
					invoked.ClearIncrementalFlag = false
				
		DefaultLocale
			initial value is parentcontext.locale
			
			if (DefaultLocaleRequired)
				required	
					"ADefaultLocaleIsRequiredForJSONOutputWhenALocaleSetIsChosenOr_'Enable_Enterprise_Search'_isEnabled."	
					
		EnableEnterpriseSearch
			if (EnableEnterpriseSearch)
				constraint(CanEnableEnterpriseSearch)
					"AnION_\Data_\CatalogVersionGreaterThan_\V\1IsRequiredWhenUsing_\Enterprise_\Search."
		
			if (EnableEnterpriseSearch changed) 
				
				LocalNewSchemaMessage = !SchemaRegistrationRequired 
				
				if (ReplicationSchemaDestination.IMS
				and !SchemaRegistrationRequired
				and RepSetBCFieldTextSearchRel exists)	
					confirmation required
						"Changing_Enterprise_SearchWithTheCurrentSetDefinitionRequiresANewSchemaRegistration.AreYouSure?"
						
					if (EnableEnterpriseSearch)
						LocalClearIncremental = false 
					else
						LocalClearIncremental = true 
						
					invoke SetRegistrationRequired RepSetBC set
						invoked.ClearIncrementalFlag = LocalClearIncremental
						
					LocalNewSchemaMessage = false 
				
				if (EnableEnterpriseSearch)
					if (first RepSetBC set exists)
						if (LocalNewSchemaMessage)
							confirmation required
								"Enabling_Enterprise_SearchMayCauseNewFieldsToBeAddedToBusinessClassesInTheSetAndMayRequireANewSchemaRegistration.AreYouSure?"
						else
							confirmation required
								"Enabling_Enterprise_SearchMayCauseNewFieldsToBeAddedToBusinessClassesInTheSet.AreYouSure?"	
						
						invoke AddRepresentativeTextFields RepSetBC set				
						
		IncludeAsOfTimeField
			if (IncludeAsOfTimeField changed)
				initialize LocalRepSetBCChecked
				
				if (IncludeAsOfTimeField)
					LocalClearIncremental = false 
				else
					LocalClearIncremental = true 
					
				for each RepSetBC set
					if (each.LastRegistrationStamp entered)
						if (not LocalRepSetBCChecked)
							confirmation required
								"ThisChangeWillRequireANewSchemaRegistrationForOneOrMoreBusinessClassesInTheSet.AreYouSure?"
							LocalRepSetBCChecked = true
							
						invoke SetRegistrationRequired each
							invoked.ClearIncrementalFlag = LocalClearIncremental
							
		PfiServiceDefinition							
			if (PfiServiceDefinition entered
			and not PfiServiceDefinition.CanBeInitiated)
				confirmation required
					"<PfiServiceDefinition>IsNotCurrentlyEnabled.SaveAnyway?"

	Relations
		RepSetBCRegistrationRequiredRel is a RepSetBC set
			Instance Selection
				where (related.LastRegistrationStamp = blank and not related.Inactive)

		RepSetBCRel 
			one-to-many relation to RepSetBC
			Field Mapping uses ByBusinessClass
				related.ReplicationSet = ReplicationSet
				related.BusinessClass  = LocalBusinessClass		
				
		RepSetBCIncompleteRel is a RepSetBC set
			Instance Selection
				where (related.ReplicationIncomplete)	
				
		RepSetBCBackfillIncompleteRel is a RepSetBC set
			Instance Selection
				where (related.BackfillIncomplete)
				
		RepSetBCArchiveBackfillIncompleteRel is a RepSetBC set
			Instance Selection
				where (related.ArchiveBackfillIncomplete)
				
		RepSetBCArchiveBackfillRunningInProcess is a RepSetBC set
			Instance Selection
				where (related.ArchiveBackfillRunningInProcess)
				
		RepSetBCIncremental is a RepSetBC set
			Instance Selection
				where (related.IncrementalReplication and related.LastRegistrationStamp entered and not related.DisableIncrementalReplication and not related.Inactive)				
				
		RepSetBCDeliveredRel is a RepSetBC set
			Instance Selection
				where (related.Delivered)	
				

		RepSetBCDeliveredWithDelRel is a RepSetBC set
			Instance Selection
				include deleted records
				where (related.Delivered)
				

		RepSetBCNotDeliveredRel is a RepSetBC set 
			Instance Selection
				where (related.Delivered = false)
	

		RepSetBCNotDeliveredWithDelRel is a RepSetBC set 
			Instance Selection
				include deleted records
				where (related.Delivered = false)	
		
		ArchivableRepSetBCRel
			one-to-many relation to RepSetBC
			Field Mapping uses symbolic key
				related.ReplicationSet = ReplicationSet
			Instance Selection
				where (related.HasUpdateStamp and related.BusinessClass.ArchivingEnabledForBusinessClass)			 					
				
		RepSetBCFieldTextSearchRel is a RepSetBCField set
			Instance Selection
				where (related.DerivedIsTextSearchable)
				
		BusinessClassRel
			one-to-many relation to BusinessView
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Type.BusinessClass
				and    related.Deprecated = false)


		RootAsyncActionRequestProcessingRel
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByClass
				related.ImplementingClass 	= "ReplicationSet"
				related.AsyncAction 		= "Replicate"
			Instance Selection
				where (related.MappingField1 = ReplicationSet 
				and   (related.NonFinishedTriggersExist))		


		RootAsyncActionRequestPendingRel
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByClass
				related.ImplementingClass 	= "ReplicationSet"
				related.AsyncAction 		= "Replicate"
			Instance Selection
				where (related.MappingField1 = ReplicationSet 
				and   (related.PendingScheduling))		

		ActionGroupRel
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByActionGroup
				related.ActionGroup = ActionGroupID  
			Instance Selection                      
				where (related.ActionGroup entered) 
				
		ActionGroupActiveRel
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByActionGroup
				related.ActionGroup = ActionGroupID  
				related.InactiveInGroup = false 
			Instance Selection                      
				where (related.ActionGroup entered) 
				
		ReplicationSetHistoryInstance 
			one-to-one relation to ReplicationSetHistory
			Field Mapping uses symbolic key
				related.ReplicationSet 		  = ReplicationSet
				related.ReplicationSetHistory = LocalRepSetHistoryStamp
				
		ReplicationParameters
			one-to-one relation to ConfigurationParameterCategory				
			Field Mapping uses symbolic key
				related.ConfigurationParameterCategory = "Replication"
				
		RepSetBCHistoryWarningByStampRel
			one-to-many relation to RepSetBCHistory
			Field Mapping uses ByRepSetStamp				
				related.ReplicationSet 				 = ReplicationSet
				related.RepSetBCHistory.HistoryStamp = AdjustedCurrentRefreshStamp
				related.RepSetBCHistory.Backfill 	 = 0 
			Instance Selection                      
				where (related.WarningsExist = true)
				
		RepSetBCActiveRel is a RepSetBC set 
			Instance Selection
				where (related.Inactive = false)
			
		RepSetBCInactiveRel is a RepSetBC set 
			Instance Selection
				where (related.Inactive = true)

		DataLakeQueueRel
		    one-to-many relation to DataLakeQueue
		    Field Mapping uses ByReplicationSet
		        related.ReplicationSet = ReplicationSet
		        
		DataLakeQueueIncompleteRel
		    one-to-many relation to DataLakeQueue
		    Field Mapping uses ByReplicationSet
		        related.ReplicationSet = ReplicationSet
		    Instance Selection
		    	where (related.Status != 3) 

		IONOutboxQueueNewOrFailedRel
			one-to-many relation to IONOutboxQueue
			Field Mapping uses ByReplicationSet
				related.FromLogicalId  = FromLogicalId
				related.ReplicationSet = ReplicationSet
			Instance Selection
				where (related.IsNewOrFailedImsQueue)
	
	Actions
		Create is an Action

		Update is an Action
			valid when (not InProcess)

			Action Rules
                if (ExportFormat.COLUMNAR)
                    for each RepSetBC set
                        if (each.AlsoRepToColumnar)
                            confirmation required
                                "Setting_Export_FormatToCOLUMNARWillClear_Also_Replicate_To_ColumnarInEachReplicationClass.Continue?"
                            invoke Update each
                                invoked.AlsoRepToColumnar = false

		Delete is an Action
			valid when (not InProcess)
			confirmation required
				"AreYouSureYouWantToDeleteThisReplicationSetAndAllRelatedSetup?"
			
		Purge is a Purge Action
			valid when (not InProcess)
			confirmation required
				"ThisCannotBeUndone,AreYouSureYouWantToPurgeThisReplicationSetAndAllRelatedSetup?"
		
		Replicate is an Instance Action 
			run in background
				schedule concurrency is NoActionGroupConcurrency
				initial misfire strategy is DoNothing 
			valid when (ReplicationIsValid)
				"<ReplicationIsNotValidMF>"
			
			Queue Mapping Fields
				ReplicationSet
			
			Entrance Rules
				include HasDupeRepSetBCReplicateNamesBlock 
			
				invoke LockReplicationSet
				increment VariationID
				CurrentRefreshStamp = system current timestamp
				ActionGroupID = current action background group id
			
			Exit Rules
				if (not ReplicationIncomplete) 
			    	invoke SetInProcess RepSetBC set
						
				invoke ReplicateSet RepSetBC in background group(ReplicationSet)
					invoked.ParamReplicationSet = ReplicationSet
				
		LockReplicationSet is an Instance Action 
			restricted
			
			Entrance Rules
				constraint (not Locked)
					"CannotLockAnAlreadyLockedReplicationSet"

			
		UnlockReplicationSet is an Instance Action
			restricted
			run in background
			
			Parameters
				SkipUnlockRequests is Boolean
					default label is untranslatable
					
			Local Fields
				LocalActor is an Actor
				LocErrorText is Text	
				LocalWasIncremental is Boolean	
			
			Queue Mapping Fields
				ReplicationSet
			
			Entrance Rules
				if (LastRefreshStamp entered)
					LocalWasIncremental = true
				
				if (SkipUnlockRequests) 								
					constraint (not ActionGroupActiveExcludeUnlock)
						"CannotUnlockReplicationSetWhileStillActive"
				else 													
					constraint (not ActionGroupActive)
						"CannotUnlockReplicationSetWhileStillActive"
					
				if (CurrentRefreshStamp entered)



					LocalRepSetHistoryStamp = AdjustedCurrentRefreshStamp
					
					if (MaintainHistoryCount > 0
					or  RepSetBCHistoryWarningByStampRel exists)
						
						if (not ReplicationSetHistoryInstance exists)
							invoke Create ReplicationSetHistory
								invoked.ReplicationSet 		  = ReplicationSet
								invoked.ReplicationSetHistory = LocalRepSetHistoryStamp
								invoked.VariationID 		  = VariationID
						else
							invoke Update ReplicationSetHistoryInstance
								invoked.VariationID 		  = VariationID
						
					invoke DeleteHistory ReplicationSetHistory in background
						invoked.ParamReplicationSet = ReplicationSet
						invoked.KeepHistoryCount = MaintainHistoryCount
						invoked.MinimumStamp = LastRefreshStamp
						invoked.CurrentStamp = LocalRepSetHistoryStamp
						
					LastRefreshStamp = LocalRepSetHistoryStamp
					initialize CurrentRefreshStamp
					
				invoke ClearRestartInformation RepSetBC set
					invoked.Unlock = true
					invoked.WasIncremental = LocalWasIncremental
					invoked.ClearArchive = false

                if (ExportFormat.COLUMNAR)
                    invoke ClearColumnarCheckPoint RepSetBC set
						

			
			Exit Rules
				if (SkipUnlockRequests 
				and PfiServiceDefinition entered)
					trigger PfiServiceDefinition PA service
						resume on error
							LocalActor = actor
							LocErrorText = error message
							send notification
								to LocalActor 
								description is "<ReplicationSet>FailedToTriggerService<PfiServiceDefinition>"
								detail is "<LocErrorText>"


						title is "ReplicationSet<ReplicationSet>Complete"
						Variables
							ReplicationSet
							LastRefreshStamp
							VariationID
			
		ForceUnlock is an Instance Action
			valid when (CanForceUnlock)
			confirmation required
				"ReplicationSetShouldOnlyBeUnlockedIfYouAreCertainItIsNotActivelyProcessing.LastRefreshStampWillNotBeUpdated.AreYouSure?"

			Action Rules
				initialize CurrentRefreshStamp	
				invoke UnlockReplicationSet	in foreground
					invoked.SkipUnlockRequests = false								
			
		RegisterSchema is an Instance Action
			default label is "RegisterSchemas"
			valid when (CanRegisterSchemas)
			completion message is "<RegistrationCompletionMessage>"
			
			Local Fields
				LocalActor is an Actor
			
			Entrance Rules
				if (LastRefreshStamp entered 
			    and LastRegistrationStamp entered 
				and RepSetBCIncremental exists)
					confirmation required
						"RegisteringAllSchemasMayResultInOneOrMorePreviouslyReplicatedBusinessClassesRequiringFullReplication.YouCanAlsoUseThe_'Register_Out_Of_Date_Schemas'_ActionToRegisterOnlyThoseThatRequireIt.AreYouSureYouWantToContinue?"

				include HasDupeRepSetBCReplicateNamesBlock 
				include InactiveRepSetBCBlock 
				

			
			Exit Rules
				if (LocalRegistrationWarnings entered)
					LocalActor = actor
					send notification
						to LocalActor 
						description is "RegisterAllSchemasCompletedWithWarningsForReplicationSet<ReplicationSet>"
						detail is "<LocalRegistrationWarnings>"


				if (ReplicationSchemaDestination.IMS and LocalImsBCRepNameTruncation)
					LocalActor = actor
					send notification
						to LocalActor
						description is "OneOrMoreBusinessClassNamesAreOverThe100CharacterIMSLimit"
						detail is "OneOrMoreBusinessClassNamesAreOverThe100CharacterIMSLimitForReplicationSet<ReplicationSet>.TheyWillBeTruncatedTo100CharactersInTheSchema"
				
		RegisterOutOfDateSchemas is an Instance Action
			valid when (CanRegisterOutOfDateSchemas)
			completion message is "<RegistrationCompletionMessage>"
			
			Local Fields
				LocalActor is an Actor
				
			Entrance Rules
				include HasDupeRepSetBCReplicateNamesBlock 
				include InactiveRepSetBCBlock 
				
			Exit Rules
				if (LocalRegistrationWarnings entered)
					LocalActor = actor
					send notification
						to LocalActor 
						description is "RegisterOutOfDateSchemasCompletedWithWarningsForReplicationSet<ReplicationSet>"
						detail is "<LocalRegistrationWarnings>"


				if (ReplicationSchemaDestination.IMS and LocalImsBCRepNameTruncation)
					LocalActor = actor
					send notification
						to LocalActor
						description is "OneOrMoreBusinessClassNamesAreOverThe100CharacterIMSLimit"
						detail is "OneOrMoreBusinessClassNamesAreOverThe100CharacterIMSLimitForReplicationSet<ReplicationSet>.TheyWillBeTruncatedTo100CharactersInTheSchema"
						
		ValidateAndRegisterAllOutOfDateDeliveredSchemas is a Set Action
			run in foreground
			disable checkpoint
			completion message is "<RegistrationCompletionMessage>"
			
			Sort Order
				ReplicationSet
				
			Action Rules
				Set Rules
					Entrance Rules
						invoke ValidateDeliveredSchemas ReplicationSet
					
				Instance Rules
					if (CanRegisterOutOfDateSchemas)
						invoke RegisterOutOfDateSchemas ReplicationSet	
					
		Reset is an Instance Action
			valid when (CanReset)
			Local Fields
				IncrementalConfirmed		is Boolean
				IgnoreIndicatorConfirmed	is Boolean
				BackfillConfirmed 			is Boolean
			
			Entrance Rules
				if (LastRefreshStamp entered)
					confirmation required
						"ResettingWillClearTheLastRefreshStamp.TheNextReplicationWillIncludeAllData.AnyHistoryWillBeRemoved."
				
				if (ReplicationIncomplete)
					confirmation required
						"ReplicationIsIncomplete.ResettingWillClearRestartInformationAndLeaveReplicationIncomplete.AreYouSure?"
				
				if (ArchiveBackfillIncomplete)
					confirmation required
						"ReplicationArchiveBacfillIsIncomplete.ResettingWillClearArchiveRestartInformationAndLeaveArchivebackfillIncomplete.AreYouSure?"		
						
				for each RepSetBC set
					if (each.BusinessClass.HasIncrementalReplicationIndicator
					and each.EnableIndicator)
						if (each.IgnoreIndicatorOnFullReplication)
							IgnoreIndicatorConfirmed = true
						
							invoke Update each
								invoked.IncrementalReplication = false
						else
							if (IncrementalConfirmed)
								ReplicationSetIncrementalBusClasses = ReplicationSetIncrementalBusClasses + ", " + each.BusinessClass
							else
								ReplicationSetIncrementalBusClasses = each.BusinessClass 
						
							IncrementalConfirmed = true
						
					if (each.BackfillDate entered)
						if (BackfillConfirmed)
							ReplicationSetBackfillBusClasses = ReplicationSetBackfillBusClasses + ", " + each.BusinessClass
						else
							ReplicationSetBackfillBusClasses = each.BusinessClass
						
						BackfillConfirmed = true
						
			
				if (IncrementalConfirmed)
					confirmation required
						"SetContainsBusinessClassesThatUseAnIndicatorField.BusinessClassesWithAnIndicatorField:<ReplicationSetIncrementalBusClasses>.TheIndicatorFieldIsNotResetByThisProcess.ResetOnlyAffectsTimeBasedReplicationAndIndicatorReplicationsThatIgnoreTheIndicatorOnFullReplications."
						
				if (IgnoreIndicatorConfirmed)
					confirmation required
						"SetContainsBusinessClassesThatUseAnIndicatorFieldAndSpecifyToIgnoreTheIndicatorOnAFullReplication.TheIndicatorFieldIsNotResetByThisProcessButResettingWillCauseTheNextReplicationOfTheseToIgnoreTheIndicatorBeforeResumingIncrementalIndicatorReplications."

				if (BackfillConfirmed)
					confirmation required
						"SetContainsBusinessClassesThatHaveABackfillDate.BusinessClassesWithABackfillDate:<ReplicationSetBackfillBusClasses>.TheExistingValueWillBeUsedOnTheNextReplicationUnlessManuallyChanged."
					
			Action Rules
				initialize LastRefreshStamp
				invoke DeleteHistory ReplicationSetHistory
					invoked.ParamReplicationSet = ReplicationSet
					invoked.KeepHistoryCount = 0
					
				if (ReplicationIncomplete)
					invoke ClearRestartInformation RepSetBC set
						invoked.ClearArchive = true

                    if (ExportFormat.COLUMNAR)
                        invoke ClearColumnarCheckPoint RepSetBC set
				else 
					for each RepSetBC set
						invoke ClearRecordCount each 

						if (each.ArchiveBackfillIncomplete or each.ArchiveBackfillToStamp entered)
							invoke ClearArchiveBackfillRestartInformation each
						else
							invoke ClearArchiveDates each
											
						if (BackfillIncomplete)
							invoke ClearBackfillRestartInformation each
							
				LastResetToStamp  = system current timestamp	
				
					

			
			
		ResetToPreviousTime is an Instance Action
			valid when (CanReset)
			
			Entrance Rules
				if (ReplicationIncomplete)
					confirmation required
						"ReplicationIsIncomplete.AreYouSure?"
			
			Parameters
				PreviousTime is a ReplicationSetHistory
					default label is "ReplicationTime"
			
			Parameter Rules
				PreviousTime
					required
					
					constraint (PreviousTime <= LastRefreshStamp)
						"CannotMoveForwardOnceResetToAPreviousTime.RunAReplicationToGetUpToDate."
					
			Local Fields
				PrevLastRefresh is TimeStamp
					
			Action Rules
				PrevLastRefresh = LastRefreshStamp
				LastRefreshStamp = PreviousTime
				
				invoke ClearRestartInformation RepSetBC set
					invoked.ParamLastRefresh = LastRefreshStamp
					invoked.ParamPrevLastRefresh = PrevLastRefresh
					invoked.ClearArchive = true 

                if (ExportFormat.COLUMNAR)
                    invoke ClearColumnarCheckPoint RepSetBC set
				
		ValidateSchemas is an Instance Action
			valid when (not ExportFormat.COLUMNAR)
			completion message is "\"ValidateBusinessClassSchemas\"SubmittedForReplicationSet\"<ReplicationSet>\""
			Action Rules
				invoke ValidateBusinessClassSchemas RepSetBC in background
					invoked.ParamReplicationSet = ReplicationSet		
					
		ValidateDeliveredSchemas is an Instance Action
			restricted
			completion message is "\"ValidateDeliveredSchemasCompletedSuccessfully\""
			Action Rules
				invoke ValidateDeliveredBusinessClassSchemas RepSetBC
			
		AddBusinessClasses is an Instance Action
			completion message is "Added<TotalCount>BusinessClasses"
			Parameters
				Module 		is a BusinessModule
				OwnedBy 	is Numeric size 1
					States
						All 		value is 1
						Application value is 2
						Framework   value is 3
				NameIsLike	is LPLName
				NamePrefix  is Alpha size 5
				AddPersistentFields							is Boolean
				AddPersistentUserFields 					is Boolean
				ExplodeCompoundFields						is Boolean
				ReplacePeriodsWithUnderscores				is Boolean
				UseSQLName									is Boolean
				AddPersistentFieldCubeDimensionValues 		is Boolean
				AddPersistentUserFieldCubeDimensionValues 	is Boolean
				MarkAsDelivered								is Boolean
			
			Local Fields
				Count 			is Numeric size 3
				TotalCount		is Numeric size 6
				ProcessRecord 	is Boolean		
				RepSetBCView 	is a RepSetBC view
				
			Parameter Rules
				OwnedBy
					initial value is 2	
					
				ReplacePeriodsWithUnderscores
					initial value is true
					
				UseSQLName
					initial value is true
					
				MarkAsDelivered
					initial value is DeveloperMode 
				
			Action Rules
				if (ExportFormat.COLUMNAR)
					AddPersistentFields	= true
					if (not DeveloperMode)
						AddPersistentUserFields = true
					
				for each BusinessClassRel
					LocalBusinessClass = each.BusinessView
					
					if  ((not Module entered or Module = each.Module)

					and (OwnedBy.All or (OwnedBy.Application and not each.IsFramework) or (OwnedBy.Framework and each.IsFramework))
					and (not NameIsLike entered or each.BusinessView like NameIsLike)
					and (not RepSetBCRel exists))

						invoke Create RepSetBC
							assign result to RepSetBCView
							invoked.ReplicationSet 						= ReplicationSet
							invoked.BusinessClass						= each.BusinessView
							invoked.TransReplacePeriodsWithUnderscores 	= ReplacePeriodsWithUnderscores
							invoked.TransExplodeCompoundFields 			= ExplodeCompoundFields
							if (NamePrefix entered)
								invoked.ReplicateClassName = NamePrefix + each.BusinessView
							if (MarkAsDelivered and (DeveloperMode or InternalExecution))
								invoked.Delivered = true
							invoked.EnableIndicator = each.BusinessView.HasIncrementalReplicationIndicator
							if ((AddPersistentFields or AddPersistentUserFields) and ExplodeCompoundFields and UseSQLName)
								invoked.UseSQLName = true
							
						Count += 1
						TotalCount += 1

						if (Count >= 100)
							commit transaction
							initialize Count
							
						if (AddPersistentFields or AddPersistentUserFields or AddPersistentFieldCubeDimensionValues or AddPersistentUserFieldCubeDimensionValues)
							invoke AddFields RepSetBCView.RepSetBC
								invoked.AddPersistentFields 						= AddPersistentFields
								invoked.AddPersistentUserFields 					= AddPersistentUserFields
								invoked.ExplodeCompoundFields						= ExplodeCompoundFields
								invoked.ReplacePeriodsWithUnderscores				= ReplacePeriodsWithUnderscores
								invoked.UseSQLName									= UseSQLName
								invoked.AddPersistentFieldCubeDimensionValues 		= AddPersistentFieldCubeDimensionValues
								invoked.AddPersistentUserFieldCubeDimensionValues 	= AddPersistentUserFieldCubeDimensionValues
                                
        Copy is an Instance Action
        	valid when (not ExportFormat.COLUMNAR)
            completion message is "<CopyCompletionMessage>"    
            
            Parameters
                NewReplicationSet     is like ReplicationSet
                OldPrefix             is Alpha size 5
                NewPrefix             is Alpha size 5
                SkipErrors            is Boolean
                
            Parameter Rules
                NewReplicationSet
                    required    
                
                NewPrefix
                    if (not NewPrefix entered)
                        confirmation required
                            "NotSettingANewPrefixIsMoreLikelyToResultInNameCollision.Continue?"            
            
            Action Rules
                invoke Create ReplicationSet
                    invoked.ReplicationSet                  = NewReplicationSet
                    invoked.Description                     = Description 
                    invoked.ExportFormat                    = ExportFormat
                    invoked.MaintainHistoryCount            = MaintainHistoryCount
                    invoked.ReplicationSchemaDestination    = ReplicationSchemaDestination
                    invoked.ReplicationDataDestination      = ReplicationDataDestination
                    invoked.LocaleSet						= LocaleSet
                    invoked.DefaultLocale					= DefaultLocale
                    invoked.EnableEnterpriseSearch			= EnableEnterpriseSearch
                    invoked.RepositoryVersion				= RepositoryVersion
                    invoked.LocalDestination				= LocalDestination
                    invoked.IncludeAsOfTimeField			= IncludeAsOfTimeField
                    invoked.PfiServiceDefinition			= PfiServiceDefinition
                    invoked.TimeStorageResolution			= TimeStorageResolution

                initialize LocalCopyErrors
                
                for each RepSetBC set
                    if (SkipErrors)
                        invoke Copy each
                            resume on error
                                LocalCopyErrors += 1
                            invoked.NewReplicationSet    = NewReplicationSet    
                            invoked.OldPrefix            = OldPrefix
                            invoked.NewPrefix            = NewPrefix
                    else
                        invoke Copy each
                            invoked.NewReplicationSet    = NewReplicationSet    
                            invoked.OldPrefix            = OldPrefix
                            invoked.NewPrefix            = NewPrefix
                            
		MakeAllMembersActive is an Instance Action 
			valid when (HasInactiveRepSetBCRecords)  
			 
			Action Rules
				for each RepSetBCInactiveRel
					if (each.OtherActiveReplicateClassName exists)
						confirmation required 
							"<each.ReplicateClassName>ReplicateClassNameAlreadyActiveInReplicationSet<each.first OtherActiveReplicateClassName.ReplicationSet>.SkipAndContinue?"
					else
						if (LastRefreshStamp entered and each.IncrementalReplication and not each.DisableIncrementalReplication and not each.BusinessClass.HasIncrementalReplicationIndicator)
							confirmation required
								"If<ReplicationSet>HasBeenReplicatedWhileMembersWereInactive,DataWillBeMissingForOneOrMoreMembers.YouMayWantToManuallyResetThoseRecordsBeforeTheNextReplication.Continue?"
				 		
						invoke SetInactive each
							invoked.ParamInactive = false
			 	                         
		MakeAllMembersInactive is an Instance Action 
			valid when (HasActiveRepSetBCRecords)
			confirmation required
				"AreYouSureYouWantToInactivateAllMembersOfThisReplicationSet?"
			 	
			Action Rules
				for each RepSetBCActiveRel
			 		invoke SetInactive each
			 			invoked.ParamInactive = true
