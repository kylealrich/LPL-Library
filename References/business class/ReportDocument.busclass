ReportDocument is a BusinessClass
    owned by la
    prefix is RDOC
    disable data area copy

    Ontology
    	symbolic key is ReportDocument

    Patterns
    	implements CreateStamp
    	implements UpdateStamp
        disable Auditing
        disable EffectiveDated
        disable AsOfDateProcessing

    Persistent Fields
    	Name 					is Alpha size 80 	
    	ReportParameters		is Text		
    	Document				is BinaryObject
			enable alternate document location
    	MimeType				is MimeType
    		default label is "MIME_Type"
    	SourceType				is Numeric size 2
    		States
    			Unknown 	 = 0
    			AuditLog	 = 1
    			List		 = 2
    			SummaryForm	 = 3
    			Matrix		 = 4
    			OrgChart 	 = 5
    			Page		 = 6
    			Composite	 = 7
    			Form		 = 8
    			StaticJava 	 = 9
    			AdminConsole = 10
    			ManualReport = 11
    	UserFolder
    		delete ignored
    	SourceKey1				is LPLName
    	SourceKey2				is LPLName
    	SourceKey3				is LPLName
    	AsyncID					is UniqueID
    	ReportData
    	    delete ignored
    	Description				is Text
    	DocumentGroup			is UniqueID
    
    Field Rules
		ReportParameters
			if (!SourceType.StaticJava and !SourceType.ManualReport and HasAsyncID)
				required
		Document
			if (!SourceType.StaticJava)
				required
		MimeType
			if (!SourceType.StaticJava)
				required
		
		ReportData
			if (SourceType.StaticJava)
				required
				
	Conditions
	
		UserNotificationForCurrentActorExists
			restricted
			when (UserNotificationForCurrentActorRel exists)

		HasLocalDocument
			default label is untranslatable
			when (IsStoredLocally and Document entered)
			
		HasDocument
			default label is untranslatable
			when (HasLocalDocument or IsStoredRemotely)

			
    	HasName
    		default label is "NameEntered"
    		when (Name entered)
    
    	UsesSourceKey1
    		when (not SourceType.Unknown and not SourceType.StaticJava and not SourceType.ManualReport)
    	
    	UsesSourceKey2
    		when (not SourceType.Unknown and not SourceType.AuditLog and not SourceType.StaticJava and not SourceType.ManualReport)
    	
    	UsesSourceKey3
    		when (SourceType.SummaryForm or SourceType.Matrix or SourceType.Composite or SourceType.Form)
    	
    	HasAsyncID
			default label is "AsyncIDEntered"
    		when (AsyncID entered)

    	HasReportData
			default label is "ReportDataEntered"
    		when (ReportData entered)
    		
    	HasRptDoc
			default label is "ReportDocumentEntered"
    		when (ReportData entered and Document entered)
    		
    	HasFolder
    		default label is "FolderEntered"
    		when (UserFolder entered)
    	
    	KnownReferencesExist
    		restricted
    		when (UserFolder exists or ReportData exists or UserReport set exists or UserNotificationRel exists)
    		
    	HasDocumentGroup
			default label is untranslatable
			when (DocumentGroup entered)
    	
    Derived Fields
    	PDF is a MessageField 
    		"PDF" 
    	CSV is a MessageField 
    		"CSV" 
    	Excel is a MessageField 
    		"Excel" 
    	XML is a MessageField 
    		"XML" 
    	
    	FileType is a DerivedField 
	    	type is Alpha size 100 
	    	if (MimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ) 
	    		return Excel 
	    	if (MimeType = "text/csv") 
	    		return CSV 
	    	if (MimeType = "application/pdf") 
	    		return PDF 
	    	if (MimeType = "application/xml") 
	    		return XML
	    	return MimeType
	    	
    	SourceKey1Label is a DerivedField
    		type is Alpha size 100
			if (SourceType.Page)
				return PageNameLabel
			else
				return BusinessClassNameLabel

    	PageNameLabel is a LabelField
    		"PageName"

    	BusinessClassNameLabel is a LabelField
    		"BusinessClassName"
    	
    	SourceKey2Label is a DerivedField
    		type is Alpha size 50
			if (SourceType.List
			or  SourceType.OrgChart)
				return ListNameLabel
			else
			if (SourceType.Page)
				return PanelNameLabel
			else
				return FormNameLabel
				
    	ListNameLabel is a LabelField
    		"ListName"

    	PanelNameLabel is a LabelField
    		"PanelName"
    		
    	FormNameLabel is a LabelField
    		"FormName"
						
		FormTitle is a DerivedField
			type is Alpha size 50
			if (MimeType = "application/pdf")
				return PrintFileFormTitle
			else
				return ReportFormTitle		

    	PrintFileFormTitle is a LabelField
    		"PrintFile"
    		
    	ReportFormTitle is a LabelField
    		"Report"
    		
		UserReportForCurrentActorExists is a DerivedField
			type is Boolean
			restricted
			
			LocalActor = actor
			
			if (ReportDocumentActorLocRel exists)
				return true
			else
				return false
				
		UserReportForLocalActorExists is a DerivedField
			type is Boolean
			restricted
			
			if (ReportDocumentActorLocRel exists)
				return true
			else
				return false
			
		AssociatedBatchTask is a DerivedField
			type is like BatchTask
			default label is "AssociatedJob"
			
			return ReportData.ActionResult.BatchTask

		AssociatedBatchTaskParentStream is a DerivedField
			type is like BatchTask
			default label is "AssociatedJobParentJobStream"
			
			return ReportData.ActionResult.ParentActionResult.BatchTask
			
		AssociatedBatchTaskSequenceInParentStream is a DerivedField
			type is Numeric size 8	
			default label is "AssociatedJobSequenceInParentJobStream"




			if (ReportData.ActionResult.HasParent)
				return ReportData.ActionResult.ParentActionResult.BatchTaskStep.ExecutionOrder
			else
				return 0

		AssociatedBatchTaskTopLevelStream is a DerivedField
			type is like BatchTask
			default label is "AssociatedJobTopLevelJobStream"
			
			if (ReportData.ActionResult.HasParent)
				return ReportData.ActionResult.TopLevelResultRel.BatchTask
			else
				return ""

        DocumentS3DownloadUrl is a NativeField
            type is Text
            default label is "DocumentUrl"

		S3ObjectKey is a NativeField
			type is Text
			default label is "S\3ObjectKey"

		UploadBatchSize is a NativeField
			type is Numeric size 8
			restricted

		RemainingUploadEligible is a DerivedField
			type is Numeric size 10
			return instance count of UploadEligibleReportDocument

		UpperCaseDataArea is a DerivedField
			type is DataAreaName
			restricted
			return parentcontext.dataarea  

		IsStoredRemotely is a DerivedField
			type is Boolean
			default label is "StoredRemotely"
			return (!IsStoredLocally)

		IsStoredLocally is a NativeField
			type is Boolean
			default label is "StoredLocally"

		UploadDelayTimestamp is a NativeField
			type is TimeStamp

		UploadToS3Enabled is a NativeField
			type is Boolean
			default label is "UploadToS\3Enabled"

		DocumentTitle is a NativeField
			type is DocumentTitle size 100
			
		FileExtension is a NativeField
			type is Alpha size 10
			restricted
			
		FileName is a DerivedField
			type is FileName size 100
			
			if (FileExtension entered)
				return DocumentTitle + "." + FileExtension
			
			return DocumentTitle
		
	Local Fields
		LocalActor is an Actor
		LocalAsyncActionRequest 		is an AsyncActionRequest
		LocalReportEmailOption 			is a ReportEmailOption
		LocalReportDistributionProfile 	is a ReportDistributionProfile
		LocalBypassUserNotification		is Boolean
		
	Rule Blocks
		ValidateParamActorEmail
			if (ParamActor not entered)
				confirmation required
					"<ParamSendEmail label><ParamSendEmail>IsNotValidForPublicDocumentsAndWillBeIgnored,Continue?"
			else
			if (not ParamActor.ContactInfo.EmailAddress entered and not ParamActor.ContactInfo.AlternateEmail entered)
				confirmation required
					"Actor<ParamActor>DoesNotHaveAnEmailAddress.<ParamSendEmail label><ParamSendEmail>WillBeIgnored,Continue?"

	Relations
		ReportDocumentActorLocRel
			one-to-one relation to UserReport
			Field Mapping uses ByReportDocumentActor
				related.ReportDocument 	= ReportDocument
				related.Actor			= LocalActor
				
		UserNotificationForCurrentActorRel
			one-to-many relation to UserNotification
			Field Mapping uses BySourceObject
				related.SourceObject = reference to ReportDocument
        	Instance Selection		
        		where (related.Actor  = actor)

		UserNotificationRel
			one-to-many relation to UserNotification
			Field Mapping uses BySourceObject
				related.SourceObject = reference to ReportDocument

		ReportDataRel
			one-to-one relation to ReportData
			Field Mapping uses symbolic key
				related.ReportData = ReportData

		UploadEligibleReportDocument
			one-to-many relation to ReportDocument
			Field Mapping uses ByStorageUpdateStamp
			Instance Selection
			    where (Document_storage = blank) 

		AsyncActionRequestRel
			default label is "AsyncActionRequest"
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByDataAreaAction
				related.DataArea = UpperCaseDataArea
				related.ImplementingClass = "ReportDocument"
				related.AsyncAction = "UploadEligibleToS3"
				
		AutoDisableAsyncActionRequestRel
			default label is "AsyncActionRequest"
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByDataAreaAction
				related.DataArea = UpperCaseDataArea
				related.ImplementingClass = "ReportDocument"
				related.AsyncAction = "UploadEligibleToS3"
			Instance Selection
				where (related.SystemRequest.AutoDisable)

		AlternateStorageConfigRel
			one-to-one relation to AlternateStorageConfig
			Field Mapping uses symbolic key
				related.AlternateStorageConfig.BusinessClass = "ReportDocument"
				related.AlternateStorageConfig.BusinessField = "Document"

	Sets
		ByName
			no duplicates
			indexed
			Sort Order
				Name
				ReportDocument
			Instance Selection
				where (HasName)
				
		ByMimeType
			no duplicates
			indexed
			Sort Order
				MimeType
				ReportDocument	
		
		ByActorMimeType
			no duplicates
			indexed
			Sort Order
				create stamp.actor
				MimeType
				create stamp
				ReportDocument	
				
		ByActorName
			no duplicates
			indexed
			Sort Order
				create stamp.actor
				Name
				ReportDocument

		ByActorTime
			no duplicates
			indexed
			Sort Order
				create stamp.actor
				create stamp descending 
				ReportDocument	
				
		ByActorSource
			no duplicates
			indexed
			Sort Order
				create stamp.actor
				UserFolder
				SourceKey1
				SourceKey2
				SourceKey3
				create stamp descending 
				ReportDocument		
																
		ByAsyncID	
			no duplicates
			indexed 
			Sort Order	
				AsyncID
				create stamp descending 
				ReportDocument
			Instance Selection
				where (HasAsyncID)
				
		ByRptData
			indexed
			Sort Order
				ReportData
				ReportDocument
			Instance Selection
				where (HasReportData)






		ByUpdateStamp
			indexed
			Sort Order
				update stamp
				ReportDocument

		ByStorageUpdateStamp
			indexed
			Sort Order
			    Document_storage
				update stamp descending
				ReportDocument
				
		ByDocumentGroup
			indexed
			Sort Order
				DocumentGroup
				create stamp.actor
				ReportDocument

	Actions

		CreateWithUserReport is a Create Action
			restricted	
			
			Action Rules
				invoke EndWorkUpdateAsyncRequest
			
			Exit Rules
				invoke AddUserReport
					invoked.ParamActor 					= actor		

					invoked.ParamSendEmail 				= LocalReportEmailOption
					invoked.ParamDistProfile			= LocalReportDistributionProfile
					invoked.ParamBypassUserNotification	= LocalBypassUserNotification
				
		Create is a Create Action
			restricted

			Action Rules
				invoke EndWorkUpdateAsyncRequest

					
		Update is an Update Action

			
		ViewDocument is an Update Action
			restricted
			
		ExternalDelete is an Instance Action
			valid when (not KnownReferencesExist)
			default label is "Delete"
			confirmation required
				"ThereCanBeUnkownReferencesToThisRecord.AreYouSureYouWantToDelete?"
			
			Exit Rules
				invoke Delete
										
		Delete is a Delete Action
			restricted
			Entrance Rules
				invoke Create AmazonS3ObjectReference
					invoked.BusinessObjectReference = reference to this instance
					invoked.S3ObjectKey             = S3ObjectKey
					
		DeleteInternal is a Delete Action // This is used by doc gen when we end up not distributing. This can happen if all dist profiles are "burts" types. 
			default label is "Delete"
			restricted
		

		AddUserReport is an Instance Action
			default label is "Share"
			Parameters
				ParamActor 					is an Actor
					default label is "Actor"
				ParamSendEmail 				is a ReportEmailOption
					default label is "SendEmailOption"
				ParamDistProfile 			is a ReportDistributionProfile					
					default label is "EmailTemplateSource"
				ParamBypassUserNotification		is Boolean
					default label is "BypassUserNotification"
					
			Local Fields
				DeleteUserReports is Boolean
				
			Parameter Rules
				ParamActor
					LocalActor = ParamActor
					
					if (not ParamActor entered)
						constraint (not UserReportForLocalActorExists)
							"DocumentAlreadySharedAsPublic"
							
						confirmation required
							"ThisWillShareTheDocumentWithEveryone.AreYouSure?"
							
						DeleteUserReports = true							
					else 
						constraint (not UserReportForLocalActorExists)
							"DocumentAlreadySharedWith<ParamActor>"		
							
						LocalActor = blank	
						if (UserReportForLocalActorExists)
							confirmation required
								"DocumentIsSharedAsPublic.AreYouSureYouWantToMakePrivate?"	

							DeleteUserReports = true
				
				ParamSendEmail
					if (ParamSendEmail entered) 
						if (ParamDistProfile entered and ParamDistProfile.ReportEmailOption != ParamSendEmail)
							confirmation required
								"Conflicting<ParamSendEmail label>Supplied.<ParamDistProfile label>ValueOf<ParamDistProfile.ReportEmailOption>WillBeUsed.Continue?"
							ParamSendEmail = ParamDistProfile.ReportEmailOption 
						
						include ValidateParamActorEmail
						
				ParamDistProfile 
					if (ParamSendEmail.DefinedMessageOnly and ParamDistProfile not entered)
						required
							"OptionRequiresAReportDistributionProfile"
							
					if (ParamDistProfile entered) 
						if (ParamSendEmail entered and ParamDistProfile.ReportEmailOption != ParamSendEmail)
							confirmation required
								"Conflicting<ParamSendEmail label>Supplied.<ParamDistProfile label>ValueOf<ParamDistProfile.ReportEmailOption>WillBeUsed.Continue?"
						
						ParamSendEmail = ParamDistProfile.ReportEmailOption 
						
						if (ParamSendEmail entered) 
							include ValidateParamActorEmail
						
			Action Rules
				if (DeleteUserReports)
					invoke DeleteInternal UserReport set
					
				if (ParamDistProfile entered) 
					ParamSendEmail = ParamDistProfile.ReportEmailOption
					
				if (ParamSendEmail entered and (not ParamActor entered or (not ParamActor.ContactInfo.EmailAddress entered and not ParamActor.ContactInfo.AlternateEmail entered)))
					initialize ParamSendEmail
					initialize ParamDistProfile
					
				invoke CreateUserReport UserReport
					invoked.ParamActor 						= ParamActor
					invoked.ParamReportDocument  			= ReportDocument
					invoked.ParamReportEmailOption 			= ParamSendEmail
					invoked.ParamReportDistributionProfile	= ParamDistProfile
					invoked.ParamBypassUserNotification     = ParamBypassUserNotification
					

		CreateUserReports is a Set Action
			completion message is "CreatedMissingUserReports"
			
			Local Fields
				LocActor is an Actor
				
			Action Rules
				Instance Rules
					if (UserFolder exists)
						LocActor = UserFolder.Actor
					else
						LocActor = create stamp.actor
					
					invoke AddUserReport
						resume on error
						invoked.ParamActor 		= LocActor
						invoked.ParamSendEmail 	= LocalReportEmailOption.None
						invoked.ParamDistProfile = blank

		DownloadDocumentToDatabase is an Instance Action
			valid when (IsStoredRemotely)

			Exit Rules
				invoke Create AmazonS3ObjectReference
					invoked.BusinessObjectReference = reference to this instance
					invoked.S3ObjectKey = S3ObjectKey

		UploadDocumentToS3 is an Instance Action
			default label is "UploadDocumentToS\3"
			restricted

		UploadEligibleToS3 is a Set Action
			default label is "UploadEligibleToS\3"
			disable checkpoint
			Sort Order is ByStorageUpdateStamp
			Instance Selection
			    where (Document_storage = blank
			    and update stamp < UploadDelayTimestamp) 

			Local Fields
				Count                is Numeric size 8
					value is 0

				LocalUploadBatchSize is Numeric size 8
					value is UploadBatchSize

				TransferredSize is Numeric size 15
					value is 0

				TotalTransferredSize is Numeric size 25
					value is 0

				EndedEarly is Boolean
					value is false

				StartTime is TimeStamp

				LatestStampReached is TimeStamp

			Action Rules

				Set Rules
					Entrance Rules
						StartTime = current timestamp

						if (!AlternateStorageConfigRel exists)
							invoke Create AlternateStorageConfig
								invoked.AlternateStorageConfig.BusinessClass = "ReportDocument"
								invoked.AlternateStorageConfig.BusinessField = "Document"
								invoked.StorageTarget = AlternateStorageConfig.StorageTarget.S3

					Exit Rules

						if (not EndedEarly)
							LatestStampReached = UploadDelayTimestamp

						if (UploadToS3Enabled)
							invoke Update AlternateStorageConfigRel
								invoked.LastRun = LatestStampReached

						invoke SubmitUploadMetrics
							invoked.TransferredSize  = TotalTransferredSize
							invoked.TransferredCount = Count
							invoked.StartTime        = StartTime
							invoked.EndTime          = current timestamp

						if (UploadEligibleReportDocument exists)
							invoke EndWorkUpdateAsyncRequest

				Instance Rules
					if (not UploadToS3Enabled)
						end set action instance loop
					if (UploadBatchSize > 0
					and Count >= UploadBatchSize)
						EndedEarly = true
						end set action instance loop

					LatestStampReached = update stamp

					TransferredSize = Document size

					invoke UploadDocumentToS3
						resume on error
							initialize TransferredSize

					TotalTransferredSize += TransferredSize

					increment Count

		SubmitUploadMetrics is an Instance Action
			restricted
			Parameters
				TransferredSize  is Numeric size 25
				TransferredCount is Numeric size 8
				StartTime        is TimeStamp
				EndTime          is TimeStamp



		EndWorkUpdateAsyncRequest is an Instance Action
			restricted
			manual update


		UpdateAsyncRequest is an Instance Action
			restricted

			Action Rules

				LocalAsyncActionRequest = first AutoDisableAsyncActionRequestRel.AsyncActionRequest
				if (not LocalAsyncActionRequest exists)
					LocalAsyncActionRequest = first AsyncActionRequestRel.AsyncActionRequest

				if (LocalAsyncActionRequest exists)
					invoke SetPendingScheduling LocalAsyncActionRequest
						invoked.ParamPendingScheduling = true

