InboundCXMLInvoice is a BusinessClass
	owned by cxml

	prefix is ICXI

	Ontology
		symbolic key is InboundCXMLInvoice

	Patterns
		implements CRUD

	Persistent Fields
		RunGroup
		ProcessStatus			is AlphaUpper size 10
			default label is "Status"
			States
				New				value is "0"
				Error			value is "1"
				Success			value is "2"
				Warning			value is "3"
		ResponseXML				is XMLDocument
			default label is "Data"
		LastUpdatedTimeStamp	is TimeStamp
			default label is "LastUpdated"
		StatusMessage			is Text
			default label is "Message"
		DocumentNumber			is Alpha size 22
		AttachmentData			is a MultiPartArray

	Local Fields

		CXMLHeader				is XMLDocument
		CXMLRequestHeader		is XMLDocument
		CXMLDetailOrder			is XMLDocument
		CXMLDetailOrderInfo		is XMLDocument
		CXMLDetailSummary		is XMLDocument

		LocalLineIndex			is Numeric size 3
		LocalLineCount			is Numeric size 3
		LocalExtrinsicIndex		is Numeric size 3
		LocalExtrinsicCount		is Numeric size 3
		LocalSequenceNumber		is Numeric size 3
		LocalWorkOrderExtrinsic is AlphaUpper size 30
		LocalLocationExtrinsic 	is AlphaUpper size 20

		LocalDate				is Alpha size 25
		LocalMonth				is Alpha size 2
		LocalDay				is Alpha size 2
		LocalYear				is Alpha size 4

		LocalCompany			is like Company
		LocalPurchaseOrder		is like PurchaseOrder
		LocalVendor				is like Vendor
		LocalCount				is Numeric size 2

		LocalCXMLCompany		is Alpha size 29
		LocalCXMLPO				is Alpha size 29

		LocalDelimiter			is Alpha size 1
		LocalExtensionCount		is Numeric size 2
		LocalExtension			is Alpha size 4
		LocalFileName			is Alpha size 50

		LocalListName           is Alpha size 80
		LocalExternalValue      is Alpha size 80
		LocalLawsonValue        is Alpha size 80

		LocalInvoice			is AlphaUpper 22
		LocalPayloadID			is Alpha size 100

		ShipAOC					is an InternationalAmount
		DiscountAOC				is an InternationalAmount
		SpecialHandlingAOC		is an InternationalAmount
		DueAmount				is an InternationalAmount
		
		LocalActor				is an Actor
		

		IDMItem
		IDMAttributes
		IDMUniqueId				is an IDMPID
		LocalAttachment			is an Attachment
		LocalMultiPartIndex		is Numeric size 1
		FailedIDMConnection 	is Boolean

	Derived Fields
		DerivedDate is a DerivedField
			type is Alpha size 10
			restricted
			LocalDate = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@invoiceDate")

			if (LocalDate != "")
				LocalDay		= LocalDate[9:10]
				LocalMonth		= LocalDate[6:7]
				LocalYear		= LocalDate[1:4]
				return LocalYear + LocalMonth + LocalDay
			else
				return blank

		DerivedCompany is a DerivedField
			type is like Company
			restricted
			if (IsBlanketPO)
				LocalCXMLCompany = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/MasterAgreementReference/@agreementID")
			if (IsStandardPO)
				LocalCXMLCompany = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderReference/@orderID")
			if (IsBuyersPO)
				LocalCXMLCompany = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderIDInfo/@orderID")
			if (LocalPayloadID != ""
				and PurchaseOrderRevisionsRel exist)
				return PurchaseOrderRevisionsRel.Company
			else
				LocalCount = 0
				if (LocalCXMLCompany != "")
					while (LocalCount < 29)
						LocalCount = LocalCount + 1
						if (LocalCXMLCompany[LocalCount:LocalCount] = LocalDelimiter)
							LocalCount = LocalCount - 1
							return LocalCXMLCompany[1:LocalCount]
							end while

		DerivedPurchaseOrder is a DerivedField
			type is like PurchaseOrder
			restricted
			if (IsBlanketPO)
				LocalCXMLPO = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/MasterAgreementReference/@agreementID")
			if (IsStandardPO)
				LocalCXMLPO = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderReference/@orderID")
			if (IsBuyersPO)
				LocalCXMLPO = (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderIDInfo/@orderID")
			if (LocalPayloadID != ""
				and PurchaseOrderRevisionsRel exist)
				return PurchaseOrderRevisionsRel.PurchaseOrder
			else
				LocalCount = 29
				if (LocalCXMLPO != "")
					while (LocalCount > 0)
						LocalCount = LocalCount - 1
						if (LocalCXMLPO[LocalCount:LocalCount] = LocalDelimiter)
							LocalCount = LocalCount + 1
							return LocalCXMLPO[LocalCount:29]
							end while

		DerivedExtension is a DerivedField
			type is Alpha 10
        	restricted
			if (LocalAttachment.MimeType = "image/tiff")
				return ".tif"
			else
			if (LocalAttachment.MimeType = "image/jpeg")
				return ".jpg"
			else
			if (LocalAttachment.MimeType = "application/pdf")
				return ".pdf"
			else
			if (LocalAttachment.MimeType = "application/msword")
				return ".doc"
			else
			if (LocalAttachment.MimeType = "text/plain")
				return ".txt"
			else
			if (LocalAttachment.MimeType = "text/html")
				return ".htm"
			else
			if (LocalAttachment.MimeType = "image/png")
				return ".png"
			else
			if (LocalAttachment.MimeType = "image/gif")
				return ".gif"
			else
			if (LocalAttachment.MimeType = "text/csv")
				return ".csv"
			else
			if (LocalAttachment.MimeType = "application/vnd.oasis.opendocument.presentation")
				return ".odp"
			else
			if (LocalAttachment.MimeType = "application/vnd.oasis.opendocument.spreadsheet")
				return ".ods"
			else
			if (LocalAttachment.MimeType = "application/vnd.oasis.opendocument.text")
				return ".odt"
			else
			if (LocalAttachment.MimeType = "application/vnd.ms-powerpoint")
				return ".ppt"
			else
			if (LocalAttachment.MimeType = "application/vnd.openxmlformats-officedocument.presentationml.presentation")
				return ".pptx"
			else
			if (LocalAttachment.MimeType = "application/rtf")
				return ".rtf"
			else
			if (LocalAttachment.MimeType = "application/vnd.ms-excel")
				return ".xls"
			else
			if (LocalAttachment.MimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
				return ".xlsx"
			else
			if (LocalAttachment.MimeType = "application/zip")
				return ".zip"
			else
			if (LocalAttachment.MimeType = "application/x-7z-compressed")
				return ".7z"
			else
			if (LocalAttachment.MimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document")
				return ".docx"
			else
				LocalExtensionCount = 0
				LocalExtension = ""
				LocalFileName = AttachmentData.Part[LocalMultiPartIndex].FileName
				while (LocalExtension != ".")
					LocalExtension = LocalFileName[LocalExtensionCount:LocalExtensionCount]
					LocalExtensionCount = LocalExtensionCount + 1
				return "." + LocalFileName[LocalExtensionCount:(LocalExtensionCount+9)]

		DerivedIDMConnected is a DerivedField
			type is Boolean
        	restricted
			if (IDMConfigurationRel exists)
				invoke BackgroundTestConnection IDMConfigurationRel
					resume on error
						FailedIDMConnection = true

				if (FailedIDMConnection)
					return false
				else
					return true
			else
				return false
	
	Field Rules
		ProcessStatus
			default to ProcessStatus.New
		RunGroup
			default to ResponseXML select "/cXML/Header/To/Credential[1]/Identity"
		LastUpdatedTimeStamp
            default to current timestamp
            initial value is current timestamp
		LocalDelimiter
          	default to "-"
        DocumentNumber
        	default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@invoiceID"
        LocalInvoice
        	default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@invoiceID"
        CXMLHeader
        	default to ResponseXML select "/cXML[Header]"
        CXMLRequestHeader
        	default to ResponseXML select "/cXML/Request/InvoiceDetailRequest[InvoiceDetailRequestHeader]"
        CXMLDetailOrder
        	default to ResponseXML select "/cXML/Request/InvoiceDetailRequest[InvoiceDetailOrder]"
        CXMLDetailOrderInfo
        	default to ResponseXML select "/cXML/Request/InvoiceDetailRequest[InvoiceDetailOrderInfo]"
        CXMLDetailSummary
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest[InvoiceDetailSummary]"
		ShipAOC
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailSummary/ShippingAmount/Money"
		DiscountAOC
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailSummary/InvoiceDetailDiscount/Money"
		SpecialHandlingAOC
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailSummary/SpecialHandlingAmount/Money"
		DueAmount
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailSummary/DueAmount/Money"
		LocalPayloadID
			default to ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderReference/DocumentReference/@payloadID"
	Sets
		ByLastUpdated
			duplicates
			Sort Order
				LastUpdatedTimeStamp
				RunGroup
				ProcessStatus

	Conditions
		IsRegularInvoiceType
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@purpose" = "standard")
		IsLineLevelCreditMemo
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@purpose" = "lineLevelCreditMemo")
		IsCreditMemo
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailRequestHeader/@purpose" = "creditMemo")
		CompanyNotPopulated
			when LocalCompany = ""
		PurchaseOrderNotPopulated
			when LocalPurchaseOrder = ""
		VendorNotPopulated
			when LocalVendor = ""
		IsBlanketPO
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/MasterAgreementReference/@agreementID" != "")
		IsStandardPO
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderReference/@orderID" != "")
		IsBuyersPO
			when (ResponseXML select "/cXML/Request/InvoiceDetailRequest/InvoiceDetailOrder/InvoiceDetailOrderInfo/OrderIDInfo/@orderID" != "")
		ShipAOCExists 
			when ShipAOC != blank
    	DiscountExists 
    		when DiscountAOC != blank
    	SpecialHandlingAOCExists 
    		when SpecialHandlingAOC != blank
    	DueAmountExists
    		when DueAmount != blank
    	HasAttachment
    		when (AttachmentData != "")
		IsIDMConfigured
			when (IDMConfigurationRel.DerivedDefaultConnection entered
			or IsIDMAuthDSConfigured)
		IsIDMAuthDSConfigured
			restricted
			when (config.AUTH_DS_PUBLIC_KEY != blank
			and config.AUTH_DS_SECRET_KEY != blank
			and config.AUTH_DS_URL != blank)
		IDMStoredDocument
			when (IDMUniqueId != "")
		AutoRejectEnabled
			when (CXMLConfigurationRel.InvoiceAutoReject)
		RejectInvoiceWithoutAttachment
			when (PurchaseOrderRel.RequireAttachment
				and AutoRejectEnabled
				and !HasAttachment)
		IDMDocumentExists
			when (IDMUniqueId != "")
		StoreAttachmentsInIDM
			when (CXMLConfigurationRel.InvoiceAttachment)
		IgnoreAttachment
			when (CXMLConfigurationRel.IgnoreFirstAttachment)
		RejectInvoiceWithAribaAttachment
			when (PurchaseOrderRel.RequireAttachment
				and AutoRejectEnabled
				and IgnoreAttachment
				and AttachmentData.Part[2].FileName = "")

		NotifyError
			when ((CXMLConfigurationRel.NotificationLevel.Error
			or CXMLConfigurationRel.NotificationLevel.Both) 
			and (ProcessStatus.Error or ProcessStatus.Warning))
		NotifySuccess
			when ((CXMLConfigurationRel.NotificationLevel.Success
			or CXMLConfigurationRel.NotificationLevel.Both) 
			and ProcessStatus.Success)
		EmailNotification
			when (CXMLConfigurationRel.NotificationType.Email
			or CXMLConfigurationRel.NotificationType.Both)
		UserNotification
			when (CXMLConfigurationRel.NotificationType.User
			or CXMLConfigurationRel.NotificationType.Both)
		
	Relations
		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company				= LocalCompany
				related.PurchaseOrder		= LocalPurchaseOrder

		DataSubstitutionRel
    		one-to-many relation to EDIDataSubstitutionTable
    		Field Mapping uses ByExternalValue
        		related.EDIDataSubstitutionTable.EdilistName            = LocalListName
        		related.EDIDataSubstitutionTable.ExternalValue          = LocalExternalValue

        EDIInvoiceMatchInterfaceInputRel
        	one-to-one relation to EDIInvoiceMatchInterfaceInput
        	Field Mapping uses ByRunGroup
        		related.RunGroup					= RunGroup
        		related.Company						= LocalCompany
        		related.Vendor						= LocalVendor
        		related.OldVendor					= blank
        		related.EDINumber					= blank
        		related.Invoice						= LocalInvoice
        		related.Suffix						= blank
        		related.LineNumber					= blank
        		related.SeqNbr						= blank
        		related.RecordType					= "H"
        		related.PurchaseOrder				= LocalPurchaseOrder
        		related.InterfacedPurchaseOrder 	= blank
        		related.InterfacedPOCode 			= blank

        IDMConfigurationRel
        	one-to-one relation to IDMConfiguration
        	Field Mapping uses symbolic key
        		related.IDMConfiguration		= actor.context.FinanceEnterpriseGroup
        		
   		PurchaseOrderRevisionsRel
			one-to-many relation to PurchaseOrderRevision
			Field Mapping uses ByStatusUpdate
				related.TransmissionPayloadID 	= LocalPayloadID

        CXMLConfigurationRel
        	one-to-many relation to CXMLConfiguration
        	Field Mapping uses symbolic key
        		related.FinanceEnterpriseGroup 	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.Default)

	Rule Blocks

		TranslateCXMLHeader
		
			LocalCompany 			= DerivedCompany
			LocalPurchaseOrder 		= DerivedPurchaseOrder
			LocalVendor 			= PurchaseOrderRel.Vendor

			invoke Create EDIInvoiceMatchInterfaceInput


				invoked.InProgress					= true

				invoked.RunGroup					= RunGroup
				invoked.RecordType 					= "H"

				if (CompanyNotPopulated)
					StatusMessage += "Company was not populated. "
					ProcessStatus = ProcessStatus.Error 				
				invoked.Company						= LocalCompany

				if (VendorNotPopulated)
		        	StatusMessage += "Vendor was not populated. "
		        	ProcessStatus = ProcessStatus.Error  
				invoked.Vendor						= LocalVendor

				invoked.Invoice 					= LocalInvoice

				if (PurchaseOrderNotPopulated)
		        	StatusMessage += "Purchase Order was not populated. "
		        	ProcessStatus = ProcessStatus.Error
				invoked.PurchaseOrder				= LocalPurchaseOrder

				if (IsRegularInvoiceType)
					invoked.InvoiceType				= ""
				else
				if (IsLineLevelCreditMemo)
					invoked.InvoiceType				= "C"
				else
				if (IsCreditMemo)
					invoked.InvoiceType				= "C"
				else
					invoked.InvoiceType				= ""

				invoked.InvoiceCurrency				= CXMLDetailSummary select "//InvoiceDetailSummary/NetAmount/Money/@currency"
				invoked.InvoiceDate					= DerivedDate
				invoked.PurchaseFromLocation		= PurchaseOrderRel.PurchaseFromLocation

				if (DueAmountExists)
					invoked.InvoiceTransactionAmount	= CXMLDetailSummary select "//InvoiceDetailSummary/DueAmount/Money"
				else
					invoked.InvoiceTransactionAmount	= CXMLDetailSummary select "//InvoiceDetailSummary/NetAmount/Money"

				invoked.TaxAmount					= CXMLDetailSummary select "//InvoiceDetailSummary/Tax/Money"
				invoked.RemitToCode					= CXMLRequestHeader select "//InvoiceDetailRequestHeader/InvoicePartner/Contact[@role=remitTo]/@addressID"
				invoked.Operator					= "ARIBA"

				if (IsLineLevelCreditMemo or IsCreditMemo)
					if(CXMLRequestHeader select "//InvoiceDetailRequestHeader/Extrinsic/IdReference[@identifier=\"original_invoice\"]/Description" != "")
						invoked.CreditMemoReferenceInvoice  = CXMLRequestHeader select "//InvoiceDetailRequestHeader/Extrinsic/IdReference[@identifier=\"original_invoice\"]/Description"
					else 
					if (CXMLRequestHeader select "//InvoiceDetailRequestHeader/InvoiceIDInfo/@invoiceID" != "")
						invoked.CreditMemoReferenceInvoice  = CXMLRequestHeader select "//InvoiceDetailRequestHeader/InvoiceIDInfo/@invoiceID"
				
				invoked.IDMDocumentPID				= IDMUniqueId

		TranslateCXMLDetail

			LocalSequenceNumber 	+= 1
			LocalLineIndex 			+= 1

			LocalLineCount 			= CXMLDetailOrder select "count(//InvoiceDetailOrder/InvoiceDetailItem)"

			while (LocalLineIndex <= LocalLineCount)
				invoke Create EDIInvoiceMatchInterfaceInput
					invoked.RunGroup					= RunGroup
					invoked.RecordType 					= "D"
					invoked.Company						= LocalCompany
					invoked.Vendor						= LocalVendor
					invoked.Invoice 					= LocalInvoice
					invoked.SeqNbr						= LocalSequenceNumber
					invoked.PurchaseOrder				= LocalPurchaseOrder

					invoked.LineNumber					= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/InvoiceDetailItemReference/@lineNumber"
					invoked.Item						= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/InvoiceDetailItemReference/ItemID/BuyerPartID"
					invoked.ItemDescription				= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/InvoiceDetailItemReference/Description"
					invoked.VendorItem					= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/InvoiceDetailItemReference/ItemID/SupplierPartID"
					invoked.EnteredQuantity				= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/@quantity"
					invoked.EnteredUOM					= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/UnitOfMeasure"
					invoked.UnitCost					= CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/UnitPrice/Money"

                	LocalExtrinsicCount         = CXMLDetailOrder select "count(//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/Extrinsic)"
                	LocalExtrinsicIndex         = 1

					LocalWorkOrderExtrinsic = ""
					LocalLocationExtrinsic 	= ""

                	if (CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/Extrinsic[<LocalExtrinsicIndex>]/@name" != "")
                    	while (LocalExtrinsicIndex <= LocalExtrinsicCount)
                        	if ((CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/Extrinsic[<LocalExtrinsicIndex>]/@name") = "workOrderNo")
                            	LocalWorkOrderExtrinsic = CXMLDetailOrder select "//InvoiceDetailOrder/InvoiceDetailItem[<LocalLineIndex>]/Extrinsic[<LocalExtrinsicIndex>]"
                        	LocalExtrinsicIndex += 1
                    	invoked.EAMWorkOrder            = LocalWorkOrderExtrinsic

				LocalLineIndex 			+= 1
				LocalSequenceNumber 	+= 1

		TranslateCXMLAOC

    		LocalSequenceNumber = 0
			include ShippingAmountAOC
			include DiscountAOC
			include SpecialHandlingAOC

		ShippingAmountAOC
			if (ShipAOCExists)
				LocalListName			= "AOC_CODE"
				LocalExternalValue		= "SHIPPINGAMOUNT"
				LocalSequenceNumber		+= 1
				if (DataSubstitutionRel exists)
            		invoke Create EDIInvoiceMatchInterfaceInput
	                    invoked.RunGroup                    = RunGroup
	                   	invoked.RecordType                  = "M"
	                   	invoked.MiscAddOnChargeAmount       = CXMLDetailSummary select "//InvoiceDetailSummary/ShippingAmount/Money"
	                    invoked.Company                     = LocalCompany
	                    invoked.Vendor                      = LocalVendor
	                    invoked.Invoice                     = LocalInvoice
						invoked.SeqNbr						= LocalSequenceNumber
	                    invoked.PurchaseOrder               = LocalPurchaseOrder
	                    invoked.MiscAddOnCharge             = DataSubstitutionRel.EDIDataSubstitutionTable.LawsonValue

		DiscountAOC
			if (DiscountExists)
				LocalListName			= "AOC_CODE"
				LocalExternalValue		= "DISCOUNT"
				LocalSequenceNumber		+= 1
				if (DataSubstitutionRel exists)
            		invoke Create EDIInvoiceMatchInterfaceInput
	                    invoked.RunGroup                    = RunGroup
	                   	invoked.RecordType                  = "M"
	                   	invoked.MiscAddOnChargeAmount       = CXMLDetailSummary select "//InvoiceDetailSummary/InvoiceDetailDiscount/Money"
	                    invoked.Company                     = LocalCompany
	                    invoked.Vendor                      = LocalVendor
	                    invoked.Invoice                     = LocalInvoice
						invoked.SeqNbr						= LocalSequenceNumber
	                    invoked.PurchaseOrder               = LocalPurchaseOrder
	                    invoked.MiscAddOnCharge             = DataSubstitutionRel.EDIDataSubstitutionTable.LawsonValue

		SpecialHandlingAOC
			if (SpecialHandlingAOCExists)
				LocalListName			= "AOC_CODE"
				LocalExternalValue		= "SPECIALHANDLING"
				LocalSequenceNumber		+= 1
				if (DataSubstitutionRel exists)
					invoke Create EDIInvoiceMatchInterfaceInput
			            invoked.RunGroup                = RunGroup
    					invoked.RecordType              = "M"
			            invoked.MiscAddOnChargeAmount   = CXMLDetailSummary select "//InvoiceDetailSummary/SpecialHandlingAmount/Money"
			            invoked.Company                 = LocalCompany
			            invoked.Vendor                  = LocalVendor
			            invoked.Invoice                 = LocalInvoice
			            invoked.SeqNbr                  = LocalSequenceNumber
			            invoked.PurchaseOrder           = LocalPurchaseOrder
			            invoked.MiscAddOnCharge         = DataSubstitutionRel.EDIDataSubstitutionTable.LawsonValue

		UpdateInProgressFlag
			invoke Update EDIInvoiceMatchInterfaceInputRel
				invoked.InProgress = false

		CreateRejectInvoiceStatus
			invoke CreateCXMLInvoiceStatus OutboundCXMLInvoiceStatus
				invoked.DocumentNumber				= LocalInvoice
				invoked.InvoiceID					= LocalInvoice
				invoked.InvoiceDate					= DerivedDate
				invoked.InvoiceStatus				= 4
				invoked.VendorGroup					= PurchaseOrderRel.Vendor.VendorGroup
				invoked.Vendor						= PurchaseOrderRel.Vendor
				invoked.PurchaseFromLocation		= PurchaseOrderRel.PurchaseFromLocation
				invoked.InvoiceComments				= "Attachment Required"
			StatusMessage		= "Invoice Rejected: Attachment Required"
			ProcessStatus		= ProcessStatus.Success
			
		SendNotification
			if (EmailNotification)
				send email
					to CXMLConfigurationRel.ToNotificationEmail
					from CXMLConfigurationRel.FromNotificationEmail
					subject "CXML_Invoice_<ProcessStatus>_-_Invoice:<LocalInvoice>_|_Vendor:<PurchaseOrderRel.Vendor.VendorName>"
					Contents
	                    "Invoice:<LocalInvoice>"
	                    "Company:<LocalCompany>"
	                    "PurchaseOrder:<LocalPurchaseOrder>"
	                    "Vendor:<PurchaseOrderRel.Vendor.VendorName>"
	                    "Status:<ProcessStatus>_-_<StatusMessage>"
			if (UserNotification and ProcessStatus.Success)
				LocalActor = actor
				send notification
					to LocalActor
					description is "CXML_Invoice_<ProcessStatus>_-_Invoice:<LocalInvoice>_|_Vendor:<PurchaseOrderRel.Vendor.VendorName>"
					priority is low
					detail is "Invoice:<LocalInvoice>_|_Company:<LocalCompany>_|_PurchaseOrder:<LocalPurchaseOrder>_|_Vendor:<PurchaseOrderRel.Vendor.VendorName>_|_Status:<ProcessStatus>_-_<StatusMessage>"
			if (UserNotification and (ProcessStatus.Error or ProcessStatus.Warning))
				LocalActor = actor
				send notification
					to LocalActor
					description is "CXML_Invoice_<ProcessStatus>_-_Invoice:<LocalInvoice>_|_Vendor:<PurchaseOrderRel.Vendor.VendorName>"
					priority is high
					detail is "Invoice:<LocalInvoice>_|_Company:<LocalCompany>_|_PurchaseOrder:<LocalPurchaseOrder>_|_Vendor:<PurchaseOrderRel.Vendor.VendorName>_|_Status:<ProcessStatus>_-_<StatusMessage>"
							
	Actions
		Create is a Create Action

			Exit Rules
				if (ProcessStatus.New)
					invoke TranslateInboundInvoiceCXML
						resume on error
							StatusMessage += error message
							ProcessStatus = ProcessStatus.Error
					if (NotifyError)
						include SendNotification
			
		Delete is a Delete Action
		Update is an Update Action
			Action Rules
                LastUpdatedTimeStamp = current timestamp
                


		
		TranslateInboundInvoiceCXML is an Instance Action
			restricted
			Action Rules
				StatusMessage = ""
				if (RejectInvoiceWithoutAttachment or RejectInvoiceWithAribaAttachment)
					include CreateRejectInvoiceStatus
				else
#ifdef module idm
					if (StoreAttachmentsInIDM)
						invoke StoreInvoiceAttachment
							resume on error
								StatusMessage += error message
#endif
					include TranslateCXMLHeader
					include TranslateCXMLDetail
					include TranslateCXMLAOC
					include UpdateInProgressFlag

				if (StatusMessage = "")
					ProcessStatus = ProcessStatus.Success
					StatusMessage = "Record successfully translated"
					if (IDMDocumentExists)
						StatusMessage += " | Invoice Attachment(s) stored in IDM"
					if (NotifySuccess)
						include SendNotification
				LastUpdatedTimeStamp = current timestamp
				


				
		StoreInvoiceAttachment is an Instance Action
			restricted
			Action Rules
				if (HasAttachment)
					LocalMultiPartIndex				= 1
					if (IsIDMConfigured)
						while (LocalMultiPartIndex < 4)
							if (AttachmentData.Part[LocalMultiPartIndex].FileName != "")
								LocalAttachment.File			= AttachmentData.Part[LocalMultiPartIndex].Content
								LocalAttachment.MimeType		= AttachmentData.Part[LocalMultiPartIndex].ContentType
								if (LocalMultiPartIndex = 1)
									LocalAttachment.Title			= PurchaseOrderRel.Vendor + "-" + LocalInvoice
								else
									LocalAttachment.Title			= PurchaseOrderRel.Vendor + "-" + LocalInvoice + "-" + LocalMultiPartIndex
								IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeName	= "ExternalID"
								IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeValue	= LocalAttachment.Title
								IDMItem.DocumentType			= "FSM_ScannedDocument"
								IDMItem.Attachment.File			= LocalAttachment.File
								IDMItem.Attachment.Title		= LocalAttachment.Title + DerivedExtension
								IDMItem.IDMAttributes			= IDMAttributes
								IDMItem.IDMAccessControlList	= "Public"
								if (IDMItem.Upload)
									if (LocalMultiPartIndex = 1)
										IDMUniqueId					= IDMItem.IDMUniqueId
										ProcessStatus 				= ProcessStatus.Success
								else
									StatusMessage += " | Invoice image: " + AttachmentData.Part[LocalMultiPartIndex].FileName + "was not stored in IDM"
									ProcessStatus = ProcessStatus.Warning
							LocalMultiPartIndex				+= 1
					else
						StatusMessage += " | IDM Configuration not set"
						ProcessStatus = ProcessStatus.Warning

























































































































































































