Account is a BusinessClass
	owned by GeneralLedger
	prefix is GLACC   
    representative text is "<Account>-<AccountDescription>"
    
    Ontology
    	symbolic key is Account

	Patterns
		implements BODId

	Context Fields
#ifdef module integration
		FSMInboundBODTracker
#endif	
    Persistent Fields
		ChartSection				is Numeric 1
			States
				BalanceSheet    	value is 1
				IncomeStatement 	value is 2  
		AccountType
		AccountSubType
    	AccountDescription 			is a Description
		AllowUnits					is Numeric 1			
			States
				NotRequired 			value is 0
				No             			value is 1
				Required    			value is 2
		TranslationCode				is a GeneralLedgerTranslationCode	
		Revalue						is Boolean				
		NaturalBalance				is Numeric 1			
			States
				None	 			value is 0
				Debit          		value is 1
				Credit  			value is 2
		Active
		SystemRestriction			is a GeneralLedgerSystemCode group
		ValidSubAccounts			is a GeneralLedgerSubAccount group
		SystemAccount
		XbrlTag						is Alpha 60
		Currency
		InterfaceInDetail			is Boolean
		IsReconcilable				is Boolean
		LikeChartAccount			is a GeneralLedgerChartAccount
			delete ignored
    	RequireProject				is Boolean
					
    Transient Fields
    	CreateMajorChartAccount		is Boolean

		TransientSystemAccount	    is Boolean
			derive value from DerivedSystemAccount
		BypassNewStructureNotification is Boolean		
		InvokedByUpload				is Boolean

		RequesterActor					is an Actor
	 	RequestedBy						is Alpha 100
		RequesterPhone					is a Telephone 
			holds pii
	 	RequesterEmail					is an EmailAddress 
	 		holds pii
		RequestPriority					is Numeric 1
			States
				High				value is 1
				Medium				value is 2
				Low					value is 3
		NeededBy						is Date
		Notes							is Text


		TransientAttachmentDescription	is a Description
			default label is "AttachmentDescription"
		TransientAttachment				is a DocumentAttachment
			default label is "Attachment"

		
	Local Fields
		LocalSystemAccount 			is a SystemAccount
		LocalChartAccount 			is a GeneralLedgerChartAccount
		LocalRejectComment			is Alpha size up to 500
		LocalSystemAccountUpdate	is Boolean
		LocalSubAccount				is a GeneralLedgerSubAccount
		LocalActionCode				is an ActionCode
		LocalBODCurrentTimeStamp	is a BODCurrentTimeStamp
		LocalNativeLPLBODTrigger	is Boolean				
#ifdef module integration
		NewBODTracker  				is a FSMInboundBODTracker view
#endif
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
	    LocalBODTrigger				is Boolean
	    LocalConfigurationParameter	is Alpha size up to 200
	    
	Derived Fields
		DerivedSystemAccount		is a DerivedField
			type is Boolean
			restricted
			if (SystemAccount entered)
				return true
			else
				return false
		MajorAccountDoesNotExist	is a DerivedField
			type is Boolean
			restricted
			LocalChartAccount = Account
			if (!LocalChartAccount exists)
				return true
			else
				return false
		DeleteSubmittedMessage		is a MessageField
			"DeleteSubmittedToBackground"
		DeleteCompletedMessage		is a MessageField
			"DeleteCompleted"			
		DerivedCountOfValidSubAccounts is a DerivedField
			type is Numeric 6
			return instance count of ValidSubAccountsRel
		DerivedCountOfChartAccountsForAccountRel is a DerivedField
			type is Numeric 6
			return instance count of ChartAccountsForAccountRel
		DerivedAcountAttachmentsCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (AccountAttachment set exists)
				return "(" + instance count of AccountAttachment set + ")"
			else
				return ""

#ifdef module integration 
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		BODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID
			
		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp
			
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"
		
		DerivedBODDocumentID is a DerivedField
			type is Alpha size 100
			restricted
			return FinanceEnterpriseGroup + DerivedDelimiter + Account
			
		DerivedAccountingEntity is a DerivedField
			type is Alpha 25
			restricted
			return ""
			
		DerivedBODRevision is a DerivedField
			type is Alpha 25
			restricted
			return ""
				
		DerivedBODFormattedId is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +DerivedAccountingEntity + ":"  + ":" + DerivedBODDocumentID+ ":" + DerivedBODRevision +"?CodeDefinition&verb=Sync&TrackerID="+LocalFSMInboundBODTracker
		
		DerivedBODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Create or LocalActionCode.Create)
				return "Add"
			else
				return "Replace"
				
		DerivedBODStatusCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Delete or LocalActionCode.Delete)
				return "Deleted"
			else 
			if (Active = "true")
				return "Open"
			else
				return "Closed"
		
		DerivedCodeLabel is a DerivedField
			type is Alpha 25
			restricted
			return FinanceEnterpriseGroup.AccountLabel
			
		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor
			
		DerivedBODUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedBODUpdateTimeStamp = update stamp.timestamp
			return DerivedBODUpdateTimeStamp
			
		DerivedBODFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODUpdateTimeStamp[1:4] + "-" + DerivedBODUpdateTimeStamp[5:6] + "-" + DerivedBODUpdateTimeStamp[7:8] + "T" + DerivedBODUpdateTimeStamp[9:10] + ":" + DerivedBODUpdateTimeStamp[11:12] + ":" + DerivedBODUpdateTimeStamp[13:14] + "Z"
		
		AccountXMLBOD is a DerivedField
			type is XMLDocument
	        restricted
	        AccountXMLBOD = template.IONSyncCodeDefination_Account_ST document for this instance
	        
	    DerivedSystemOfRecord is a DerivedField
	    	type is Alpha 10
	    	restricted
	    	return 0
#endif

	Conditions
		ShowSubAccountPanel
			restricted
			when (FinanceEnterpriseGroup.UseSubAccounts
			and  !ValidSubAccounts entered)
		BalanceSheetTranslationCodes
			restricted
			when (TranslationCode = "BS"
			or    TranslationCode = "HB" )
		IsASystemAccount
			restricted
			when (SystemAccount entered)
		MissingSubAccounts
			when (ValidSubAccounts entered
			and ((MissingMajorAccount
			and   DerivedCountOfChartAccountsForAccountRel < DerivedCountOfValidSubAccounts)
			or   (!MissingMajorAccount
			and   DerivedCountOfChartAccountsForAccountRel < (DerivedCountOfValidSubAccounts + 1))))

		MissingMajorAccount
			restricted

			when (!GeneralLedgerChartAccountRel exists)
		AccountExists
			restricted
			when (Account exists)
		InterEntityAccount
			restricted
			when (SystemAccount.InterEntityPayables
			or    SystemAccount.InterEntityReceivables
			or    SystemAccount.InterEntityPayablesAndReceivables)
		FutureChanges
			restricted
			when (this instance.has future changes)
		ZoneAccount
			restricted
			when (SystemAccount.ZonePayables
			or    SystemAccount.ZoneReceivables
			or    SystemAccount.ZonePayablesAndReceivables)
		DepartmentJournalAccount
			restricted
			when (SystemAccount.DepartmentPayables
			or    SystemAccount.DepartmentReceivables
			or    SystemAccount.DepartmentPayablesAndReceivables)
		HasTransientAttachment
			restricted
			when (TransientAttachment entered)

	Relations
		SingleSystemAccountsRel
			one-to-many relation to Account
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SystemAccount			= LocalSystemAccount
			Instance Selection
				where (related.Account			!= Account)

		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= Account 
		GeneralLedgerChartAccountByAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Account						= Account 
		SubAccountRel
			one-to-many relation to GeneralLedgerSubAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerSubAccount within ValidSubAccounts)
		AllSubAccountsRel is a GeneralLedgerSubAccount set







		ValidSubAccountsRel
			one-to-many relation to GeneralLedgerSubAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerSubAccount within ValidSubAccounts)
		ChartAccountsForAccountRel		is a GeneralLedgerChartAccount(Account) set			
		DeleteGeneralLedgerChartAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Account						= Account 
		AllSystemAccountsRel
			one-to-many relation to Account
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.SystemAccount entered)
		GeneralLedgerJournalControlRel		is a GeneralLedgerJournalControl set
			Instance Selection
				where (related.IsPosted)
				
		ReportingChartAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerChartAccount = Account)
				

#ifdef module integration
		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "CodeDefinition"
            	related.FSMBODConfiguration.Direction 	= 1
							
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
       
#endif		

	Sets
		BySystemAccount
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				SystemAccount
				Account

	Field Rules
		Account
			if (action type.Create)
				if (FinanceEnterpriseGroup.AccountRegularExpression entered)
					constraint (Account matches FinanceEnterpriseGroup.AccountRegularExpression)
						"InvalidFormatFor<FinanceEnterpriseGroup.AccountLabel>"
		ChartSection
			required
		AccountDescription
			required
		AccountType

			required
			if (AccountType.Equity
			or  AccountType.Asset
			or  AccountType.Liability)
				constraint (ChartSection.BalanceSheet)
					"IncorrectAccountTypeForChartSection"

			if (AccountType.Revenue
			or  AccountType.Expense)
				constraint (ChartSection.IncomeStatement)
					"IncorrectAccountTypeForChartSection"

		AccountSubType
			constraint (AccountSubType.AccountType = AccountType)
				"<FinanceEnterpriseGroup.AccountLabel>TypeDoesNotMatch<FinanceEnterpriseGroup.AccountLabel>TypeOnSubType"
		TranslationCode
			if (ChartSection.BalanceSheet)
				default to "BS"
				constraint (TranslationCode != "IS")
					"CannotUseIncomeStatementTranslationCodeOnBalanceSheet<FinanceEnterpriseGroup.AccountLabel>"
			else
				default to "IS"
				constraint (!BalanceSheetTranslationCodes)
					"CannotUseBalanceSheetTranslationCodeOnIncomeStatement<FinanceEnterpriseGroup.AccountLabel>"				
		ValidSubAccounts
			constraint (FinanceEnterpriseGroup.UseSubAccounts)
				"FinanceEnterpriseGroupDoesNotUseSubAccounts"



		SystemAccount
			LocalSystemAccount		= SystemAccount
			constraint (!SingleSystemAccountsRel exists)
				"<SystemAccount>AlreadyExists"
			if (SystemAccount.RetainedEarnings
			or  SystemAccount.UndistributedRetainedEarnings)
				constraint (ChartSection.BalanceSheet)
					"<SystemAccount>CanOnlyBeFromBalanceSheet"

			if (SystemAccount.AverageDailyBalance)
				constraint (ChartSection.IncomeStatement)
					"<SystemAccount>CanOnlyBeFromIncomeStatement"

			if (SystemAccount.TranslationGain
			or  SystemAccount.TranslationLoss)
				LocalSystemAccount		= SystemAccount.TranslationGainAndLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.TranslationGainAndLoss)
				LocalSystemAccount		= SystemAccount.TranslationGain
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.TranslationLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"

			if (SystemAccount.RealizedGain
			or  SystemAccount.RealizedLoss)
				LocalSystemAccount		= SystemAccount.RealizedGainAndLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.RealizedGainAndLoss)
				LocalSystemAccount		= SystemAccount.RealizedGain
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.RealizedLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"

			if (SystemAccount.UnrealizedGain
			or  SystemAccount.UnrealizedLoss)
				LocalSystemAccount		= SystemAccount.UnrealizedGainAndLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.UnrealizedGainAndLoss)
				LocalSystemAccount		= SystemAccount.UnrealizedGain
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.UnrealizedLoss
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"

			if (SystemAccount.ZonePayables
			or  SystemAccount.ZoneReceivables)
				LocalSystemAccount		= SystemAccount.ZonePayablesAndReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.ZonePayablesAndReceivables)
				LocalSystemAccount		= SystemAccount.ZonePayables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.ZoneReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"

			if (SystemAccount.InterEntityPayables
			or  SystemAccount.InterEntityReceivables)
				LocalSystemAccount		= SystemAccount.InterEntityPayablesAndReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.InterEntityPayablesAndReceivables)
				LocalSystemAccount		= SystemAccount.InterEntityPayables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.InterEntityReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
					
			if (SystemAccount.DepartmentPayables
			or  SystemAccount.DepartmentReceivables)
				LocalSystemAccount		= SystemAccount.DepartmentPayablesAndReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
			if (SystemAccount.DepartmentPayablesAndReceivables)
				LocalSystemAccount		= SystemAccount.DepartmentPayables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"
				LocalSystemAccount		= SystemAccount.DepartmentReceivables
				constraint (!SingleSystemAccountsRel exists)
					"<SystemAccount>AlreadyExists"

			if (InterEntityAccount
			or DepartmentJournalAccount
			or  ZoneAccount)
				constraint (ChartSection.BalanceSheet)
					"ChartSectionMustBeBalanceSheetFor<SystemAccount>"

		LikeChartAccount
			if (LikeChartAccount exists)
				constraint (LikeChartAccount.ChartSection = ChartSection)
					"ChartSectionsDoNotMatch"					

		Active
			if (!Active)
				constraint (SystemAccount.No)
					"CannotInactivateSystem<FinanceEnterpriseGroup.AccountLabel>"					

		CreateMajorChartAccount
			initial value is true		
		
		RequireProject
			if (!SystemAccount.No)
				RequireProject = false

	Translation Field Rules
		AccountDescription
			if (FinanceEnterpriseGroup.BODTrigger)
				invoke TriggerChartOfAccountBOD ReportingChartAccountRel
		
				
	Attach Rules

	Action Exit Rules
		if (FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 
					LocalActionCode = LocalActionCode.Update
					if (action type.Create)
						LocalActionCode = LocalActionCode.Create
					else
						if (action type.Delete)
							LocalActionCode = LocalActionCode.Delete
		
					increment bod id.VariationID
	














	Rule Blocks
		AddCreateRequestAccount
			invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
			invoked.Account							= Account
			invoked.ChartSection					= ChartSection
			invoked.AccountType						= AccountType
			invoked.AccountDescription				= AccountDescription
			invoked.AllowUnits						= AllowUnits
			invoked.TranslationCode					= TranslationCode
			invoked.Revalue							= Revalue
			invoked.NaturalBalance					= NaturalBalance
			invoked.Active							= true
			invoked.SystemRestriction				= SystemRestriction
			invoked.ValidSubAccounts				= ValidSubAccounts
			invoked.SystemAccount					= SystemAccount
			invoked.XbrlTag							= XbrlTag
			invoked.Currency						= Currency
			invoked.InterfaceInDetail				= InterfaceInDetail
			invoked.LikeChartAccount				= LikeChartAccount

			invoked.RequireProject					= RequireProject
		
		TriggerAccount
			trigger "AccountService" PA service
				resume on error
				title is "EG:<FinanceEnterpriseGroup>Acct:<Account>"
				Criteria
					FinanceEnterpriseGroup
					Account
				Variables
					LocalActionCode
						variable name is ActionCode
					include persistent fields from FinanceEnterpriseGroup
					include persistent fields from Account
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
							
		DeleteRules
			if (FinanceEnterpriseGroup.BODTrigger)
				LocalActionCode = LocalActionCode.Delete
				increment bod id.VariationID
				include TriggerAccount



				
	Apply Pending Effective Rules
		if (FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
			if (action != "UpdateBODIdFields") 
				LocalActionCode = LocalActionCode.Update
				if (action type.Create)
					LocalActionCode = LocalActionCode.Create
				else
					if (action type.Delete)
						LocalActionCode = LocalActionCode.Delete
	
				increment bod id.VariationID
				include TriggerAccount



				
	Audit Entry Rules
		if(not audit period.Future)
			if (FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
				if (!action type.Delete)
					include TriggerAccount



					
    Actions
		Create is a Create Action
			completion message is "Created<FinanceEnterpriseGroup.AccountLabel>"
								
			Action Rules
				if ((SystemAccount.RetainedEarnings
				or   SystemAccount.UndistributedRetainedEarnings)
				and  !ChartSection entered)
					ChartSection	= ChartSection.BalanceSheet


			Exit Rules
				if (!InvokedByUpload
				and (CreateMajorChartAccount
				or  !FinanceEnterpriseGroup.UseSubAccounts))			
					LocalSystemAccountUpdate	= false
					invoke Create GeneralLedgerChartAccount
						fill in user fields from this instance
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.GeneralLedgerChartAccount	= Account
						invoked.DisplayAccount				= Account
						invoked.ChartSection				= ChartSection
						invoked.AccountType					= AccountType
						invoked.AccountSubType				= AccountSubType
						invoked.AccountDescription			= AccountDescription
						invoked.AllowUnits					= AllowUnits
						invoked.TranslationCode				= TranslationCode
						invoked.Revalue						= Revalue
						invoked.NaturalBalance				= NaturalBalance
						invoked.Active						= Active
						invoked.SystemRestriction			= SystemRestriction
						invoked.XbrlTag						= XbrlTag
						invoked.ChartType					= ChartType.Posting
						invoked.Account						= Account
						invoked.Currency					= Currency
						invoked.InterfaceInDetail			= InterfaceInDetail
						invoked.IsReconcilable				= IsReconcilable
						invoked.BypassNewStructureNotification = BypassNewStructureNotification
						invoked.SystemAccount				= SystemAccount
						invoked.RequireProject				= RequireProject
						if  (SystemAccount entered
						and FinanceEnterpriseGroup.SystemSubAccount entered)
							LocalSystemAccountUpdate	= true
					if (LocalSystemAccountUpdate)
						LocalChartAccount		=  Account + "-" + FinanceEnterpriseGroup.SystemSubAccount
						if (!LocalChartAccount exists)
							LocalSubAccount 		= FinanceEnterpriseGroup.SystemSubAccount

							invoke CreateChartAccount LocalSubAccount
								invoked.PrmAccount				= Account
								invoked.LikeChartAccount		= Account
						invoke Update LocalChartAccount
							invoked.SystemAccount			= SystemAccount
					if (LikeChartAccount entered
					and LikeChartAccount exists
					and LikeChartAccount != Account)
						LocalChartAccount = Account
						invoke AddAccountToCharts LocalChartAccount
							invoked.LikeChartAccount = LikeChartAccount 
					else
						invoke AddAccountToUnusedChart FinanceEnterpriseGroup.UnusedAccountChart
							invoked.GeneralLedgerChartAccount = Account
											
				if (ValidSubAccounts entered)
					invoke CreateSubAccounts
						invoked.PrmLikeChartAccount = LikeChartAccount 					
				
				if (!LikeChartAccount entered)
					LikeChartAccount = first GeneralLedgerChartAccount set.GeneralLedgerChartAccount
						
		CreateSubAccounts is an Instance Action

			
			Parameters
				PrmLikeChartAccount  is a GeneralLedgerChartAccount
					default label is "LikeChartAccount"
			
			Parameter Rules
				PrmLikeChartAccount
					initial value is LikeChartAccount
					default to LikeChartAccount
					constraint (PrmLikeChartAccount.ChartSection = ChartSection)
						"ChartSectionsDoNotMatch"
										
			Action Rules
				constraint (MissingSubAccounts)
					"AllSubAccountsAlreadyExist"
				invoke CreateChartAccountForGroup GeneralLedgerSubAccount
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmAccount 				  = Account
					invoked.PrmValidSubAccounts		  =	ValidSubAccounts
					invoked.PrmLikeChartAccount 	  = PrmLikeChartAccount 				

		Update is an Update Action
			completion message is "Updated<FinanceEnterpriseGroup.AccountLabel>"
			Field Rules
				ChartSection
					cannot be changed
			Exit Rules
				if (CreateMajorChartAccount
				and MajorAccountDoesNotExist)
					invoke Create GeneralLedgerChartAccount
						fill in user fields from this instance					
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.GeneralLedgerChartAccount	= Account
						invoked.DisplayAccount				= Account
						invoked.ChartSection				= ChartSection
						invoked.AccountType					= AccountType
						invoked.AccountSubType				= AccountSubType
						invoked.AccountDescription			= AccountDescription
						invoked.AllowUnits					= AllowUnits
						invoked.TranslationCode				= TranslationCode
						invoked.Revalue						= Revalue
						invoked.NaturalBalance				= NaturalBalance
						invoked.Active						= Active
						invoked.SystemRestriction			= SystemRestriction
						invoked.SystemAccount				= SystemAccount
						invoked.XbrlTag						= XbrlTag
						invoked.ChartType					= ChartType.Posting
						invoked.Account						= Account
						invoked.Currency					= Currency
						invoked.IsReconcilable				= IsReconcilable
						invoked.RequireProject				= RequireProject
					if (LikeChartAccount entered
					and LikeChartAccount exists
					and LikeChartAccount != Account)
						LocalChartAccount = Account
						invoke AddAccountToCharts LocalChartAccount
							invoked.LikeChartAccount = LikeChartAccount 
					else
						invoke AddAccountToUnusedChart FinanceEnterpriseGroup.UnusedAccountChart
							invoked.GeneralLedgerChartAccount = Account
				else							

					LocalSystemAccountUpdate	= false
					for each GeneralLedgerChartAccountByAccountRel

						invoke Update each
							fill in user fields from this instance
							if (each.GeneralLedgerSubAccount entered)
								LocalSubAccount					= each.GeneralLedgerSubAccount
								fill in user fields from LocalSubAccount
							if (AccountType changed)
								invoked.AccountType				= AccountType
							if (AccountSubType changed)
								invoked.AccountSubType			= AccountSubType
							if (AccountDescription changed)
								invoked.AccountDescription		= AccountDescription
							if (AllowUnits changed)
								invoked.AllowUnits				= AllowUnits
							if (TranslationCode changed)
								invoked.TranslationCode			= TranslationCode
							if (Revalue changed)
								invoked.Revalue					= Revalue
							if (NaturalBalance changed)
								invoked.NaturalBalance			= NaturalBalance
							if (Active changed)
								invoked.Active					= Active
							if (SystemRestriction changed)
								invoked.SystemRestriction		= SystemRestriction
							if (XbrlTag changed)
								invoked.XbrlTag					= XbrlTag
							if (Currency changed)
								invoked.Currency				= Currency
							if (InterfaceInDetail changed)
								invoked.InterfaceInDetail		= InterfaceInDetail
							if (IsReconcilable changed)
								invoked.IsReconcilable			= IsReconcilable
							if (SystemAccount changed)
								invoked.SystemAccount			= SystemAccount
								if  (SystemAccount entered
								and FinanceEnterpriseGroup.SystemSubAccount entered)
									LocalSystemAccountUpdate	= true
							invoked.ChartType					= ChartType.Posting	
							invoked.UpdatedByAccount            = true
							if (RequireProject changed)
								invoked.RequireProject			= RequireProject							
					if (LocalSystemAccountUpdate)
						LocalChartAccount		=  Account + "-" + FinanceEnterpriseGroup.SystemSubAccount
						if (!LocalChartAccount exists)
							LocalSubAccount 		= FinanceEnterpriseGroup.SystemSubAccount
							invoke CreateChartAccount LocalSubAccount
								invoked.PrmAccount				= Account
								invoked.LikeChartAccount		= Account
						invoke Update LocalChartAccount
							invoked.SystemAccount			= SystemAccount

				if (ValidSubAccounts changed)
					if (ValidSubAccounts entered)
						invoke CreateSubAccounts
							invoked.PrmLikeChartAccount = LikeChartAccount 
													
		DeleteAccount is an Instance Action
			completion message is "<LocalCompletionMessage>"
			
			Local Fields
				LocalCompletionMessage		is Alpha 100
				
			Action Rules
				constraint (!any DeleteGeneralLedgerChartAccountRel.UsedByATransaction)
					"AccountIsInUseAndCannotBeDeleted"
					
				if (instance count of DeleteGeneralLedgerChartAccountRel > 100)
					LocalCompletionMessage = DeleteSubmittedMessage
					invoke DeleteChartAccountsForAccount GeneralLedgerChartAccount in background
						invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.PrmAccount				  = Account
				else
					LocalCompletionMessage = DeleteCompletedMessage
					invoke Delete DeleteGeneralLedgerChartAccountRel
					invoke Delete
					
		Delete is a Delete Action
			restricted
			
			Entrance Rules
				
				include DeleteRules
		
			Action Rules

#ifdef module integration	
		SendAccountBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is AccountXMLBOD
					bod type is "Sync.CodeDefinition"
					accounting entity is DerivedAccountingEntity
					document id is DerivedBODDocumentID
					variation id is	BODVariationID

		TriggerAccountNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "CodeDefinition"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "Account"
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmMainUserTemplate			= "IONSyncCodeDefination_Account_ST "
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger 		 = true
				if(FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "CodeDefinition"					
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= Account
							invoked.Reference2				= "Account"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Reference1				= FinanceEnterpriseGroup
							invoked.BODDocumentID			= Account
							invoked.BODVariationID			= BODVariationID
							invoked.BODID					= DerivedBODFormattedId
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= Account
							invoked.Reference2				= "Account"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendAccountBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBODFormattedId
							invoked.BODXML								= AccountXMLBOD
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status								= 3
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBODFormattedId
							invoked.BODXML								= AccountXMLBOD	
#endif
		
		BuildSubAccountsForGroup is a Set Action
			Parameters
				PrmFinanceEnterpriseGroup 		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmValidSubAccounts				is a GeneralLedgerSubAccount group
					default label is "ValidSubAccountsGroup"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmValidSubAccounts
					required
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ValidSubAccounts		  = PrmValidSubAccounts)
			Action Rules
				Instance Rules
					if (instance count of SubAccountRel < 25)
						invoke CreateChartAccountForGroup GeneralLedgerSubAccount in foreground
							invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PrmAccount 				  = Account
							invoked.PrmValidSubAccounts		  =	ValidSubAccounts
							invoked.PrmLikeChartAccount 	  = LikeChartAccount
						commit transaction 	
					else
						invoke CreateChartAccountForGroup GeneralLedgerSubAccount in background
							invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PrmAccount 				  = Account
							invoked.PrmValidSubAccounts		  =	ValidSubAccounts
							invoked.PrmLikeChartAccount 	  = LikeChartAccount				
							
		PopulateLikeChartAccount is a Set Action
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    LikeChartAccount not entered)
				
			Action Rules
				Instance Rules
					LikeChartAccount = first GeneralLedgerChartAccount set.GeneralLedgerChartAccount																	
		
		BODDataInitialLoadCodeDefAccountCriteria1 is a Set Action	
			restricted
			Parameters
				PrmFEG						is a FinanceEnterpriseGroup	
				PrmFromAccount				is an Account
				PrmToAccount				is an Account
			Parameter Rules
			Instance Selection							
				where  (((PrmFEG entered
				and		  PrmFEG = FinanceEnterpriseGroup)
				or		  PrmFEG not entered)				
				and    ((PrmFromAccount entered
				and		 PrmFromAccount <= Account)
				or		 PrmFromAccount not entered)				
				and    ((PrmToAccount entered
				and		 PrmToAccount >= Account)
				or		 PrmToAccount not entered)
				and		(Active = true))
		
			Sort Order
				FinanceEnterpriseGroup
			Action Rules								
				Empty Set Rules
				FinanceEnterpriseGroup Set Rules
					Entrance Rules
					
					Exit Rules				
						
				Instance Rules	
					if (FinanceEnterpriseGroup.BODTrigger)
						LocalActionCode	= LocalActionCode.Create	
						increment bod id.VariationID
						include TriggerAccount




		RequestNewAccount is a Create RequestAction
			action comment required
			request action process is RequestNewAccount
			request action linkback webapp is FinancialBusinessAnalyst
			allow user fields as parameters
			Parameters
				RequesterActor				is an Actor
			 	RequestedBy					is Alpha 100
	 			RequesterPhone				is a Telephone 
	 				holds pii
			 	RequesterEmail				is an EmailAddress 
			 		holds pii
				RequestPriority				is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy					is Date
				Notes						is Text

				FinanceEnterpriseGroup
				Account
				ChartSection				is Numeric 1
					States
						BalanceSheet    	value is 1
						IncomeStatement 	value is 2  
				AccountType
				AccountSubType
		    	AccountDescription 			is a Description
				AllowUnits					is Numeric 1			
					States
						NotRequired 		value is 0
						No             		value is 1
						Required    		value is 2
				TranslationCode				is a GeneralLedgerTranslationCode	
				Revalue						is Boolean				
				NaturalBalance				is Numeric 1			
					States
						None	 			value is 0
						Debit          		value is 1
						Credit  			value is 2
				Active
				SystemRestriction			is a GeneralLedgerSystemCode group
				ValidSubAccounts			is a GeneralLedgerSubAccount group
				LikeChartAccount			is a GeneralLedgerChartAccount
				SystemAccount
				XbrlTag						is Alpha 60
				Currency
				InterfaceInDetail			is Boolean
				TransientAttachmentDescription	is a Description
					default label is "Description"
				TransientAttachment				is a DocumentAttachment
					default label is "Attachment"
				InvokedByUpload				is Boolean	
				CreateMajorChartAccount		is Boolean
				IsReconcilable				is Boolean
				BypassNewStructureNotification is Boolean
				RequireProject				is Boolean
				
			Parameter Rules
				RequestPriority
					required
				
				NeededBy
					required
					
				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ChartSection
					if (actor.final approver)
						required

				AccountType
					if (actor.final approver)
						required			
				LikeChartAccount
					constraint (LikeChartAccount.ChartSection = ChartSection)
						"ChartSectionsDoNotMatch"
									
				TransientAttachment
					if (TransientAttachmentDescription entered)
						required
							"AttachmentIsRequiredWhen_DescriptionIsEntered"
				Account
					if (actor.final approver)
						required	
				
				
			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include AddCreateRequestAccount
					invoked.CreateMajorChartAccount		= CreateMajorChartAccount
					invoked.AccountSubType				= AccountSubType

				if (TransientAttachment entered)
					invoke Create AccountAttachment
						invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.Account					= Account
						invoked.Description				= TransientAttachmentDescription
						invoked.Attachment				= TransientAttachment


		RequestUpdateAccount is an Update RequestAction
			action comment required
			request action process is RequestUpdateAccount
			request action linkback webapp is FinancialBusinessAnalyst
			allow user fields as parameters
			Parameters
				RequesterActor
			 	RequestedBy
	 			RequesterPhone		
			 	RequesterEmail
				RequestPriority
				NeededBy
				Notes

				FinanceEnterpriseGroup
				ChartSection				
				AccountType
				AccountSubType
		    	AccountDescription 			
				AllowUnits					         
				TranslationCode						
				Revalue						
				NaturalBalance				
				Active
				SystemRestriction			
				ValidSubAccounts
				LikeChartAccount			
				SystemAccount
				XbrlTag						
				Currency
				InterfaceInDetail			

				RequireProject
				
			Parameter Rules
				RequestPriority
					required
				
				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ChartSection
					if (actor.final approver)
						required

				AccountType
					if (actor.final approver)
						required			

				LikeChartAccount
					constraint (LikeChartAccount.ChartSection = ChartSection)
						"ChartSectionsDoNotMatch"			

			Action Rules
				invoke Update
					fill in user fields from parameters
					include AddCreateRequestAccount
					
		
