Customer is a BusinessClass
	owned by ar
	prefix is CUD
	classic name is CUSTDESC
	representative text is "<Name>_(<Customer>)"
	representative image is Logo.File
		display as full image
		missing image is random background
			foreground text is "<ShortName>"

	Ontology
		symbolic key is Customer
			classic set name is CUDSET1
			classic name for CustomerGroup is CUST-GROUP

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId

	Persistent Fields
		CustomerReference					is a Reference
			default label is "ExternalCustomerReference"
		CustomerReference2					is a Reference
		SearchName 
			holds pii
		Name								is a VendorName 
			holds pii
		PostalAddress						is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY
			classic name for PostalAddress.StateProvince is STATE
			classic name for PostalAddress.PostalCode is ZIP
			classic name for PostalAddress.Country is COUNTRY-CODE


		Contact 
			holds pii
		ContactTitle						is a Title
			classic name is TITLE
		PhoneNumber							is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is INT-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NMBR
			classic name for PhoneNumber.Extension is PHONE-EXT
		CreditAgencyCode					is a DunnCd
			classic name is DUNN-CD
		CreditAgencyDate					is Date
			classic name is DUNN-DATE
		CreditAgencyNumber					is a DunnNumber
			classic name is DUNN-NUMBER
		ReceivableHoldCode
			classic name is HOLD-CODE
		OpenOrderAmount						is an InternationalAmount
			disable Auditing	
			classic name is OPEN-ORDS
		CurrentReceivableBalance			is an InternationalAmount
			disable Auditing	
			classic name is CURR-BAL
		CurrentBillOfExchangeBalance		is an InternationalAmount
			default label is "CurrentBill_ofExchangeBalance"
			disable Auditing	
			classic name is DRAFT-BAL
		OrderLimit							is an OrderLim
			classic name is ORDER-LIM
		CreditLimit							is a CreditLim
			classic name is CREDIT-LIM
		CustomerOrderAddressOverride		is Boolean
			classic name is OVR-ADDR-FL
		CheckDigitType						is a TaxIDCheckDigitType
			classic name is CHK-DIG-TYPE
		TaxIdentificationType
		TaxID 
			holds pii
		VendorGroupAndVendor


		CustomerChangeAudit					is Boolean
			classic name is CUST-AUDIT
		LegalName 
			holds pii
		Logo								is a LogoAttachment
		EmailAddress						is an EmailAddressMulti 
			holds pii
		URLAddress
		OriginatingInterfaceRun				is like CustomerInterfaceResult

		FinanceChargeLatePaymentIDMSeq		is Numeric size 3
			restricted
			protected
		FinanceChargeLatePaymentNetIDMSeq	is Numeric size 3
			restricted
			protected
		VATRegistrationNumber 
			holds pii
		VATRegistrationCountry				is a Country
		TaxRegistrationType					is Numeric size 1
			States
				Registered			value is 1
				Unregistered		value is 2
				SpecialEconomicZone	value is 3
		ElectronicGovernmentID				
		MobileNumber						is a MobilePhone 
			holds pii
		FaxNumber 
			holds pii
		TwitterID 
			holds pii
		SocialNetworkID2 
			holds pii
		SocialNetworkID3 
			holds pii
		SocialNetworkID4 
			holds pii
		SocialNetworkID5 
			holds pii
		CustomerCompanyGroup   

	Local Fields
		CurrencyWork				is a ReceivableExchange
		LocalWorkAmount				is an InternationalAmount
		ActionCode					is Alpha size 1
			States
				Create value is "C"
				Update value is "U"
				Delete value is "D"
		CalculateTax
		LocalTaxCode				is like TaxCode
		MaxLogoSize
		LocalReceivableCompany		is a ReceivableCompany
		LocalCompanyCustomer		is a CompanyCustomer
		LocalCustomerGroup			is like CustomerGroup
		LocalSearchName				is like SearchName 
			holds pii
		LocalLegalName				is like LegalName 
			holds pii
		LocalOldBankTransactionCode	is like BankTransactionCode
		LocalNewBankTransactionCode	is like BankTransactionCode

		ValidateCheckDigit

		SumOfCompanyCustomerRelDone								is Boolean	
		SumOfCompanyCustomerRelGroupUnreleasedPayments			is like InternationalAmount	
		SumOfCompanyCustomerRelGroupUnappliedPaymentsCredits	is like InternationalAmount	

		LocalText is Text

	Transient Fields
		RequesterActor					is an Actor
		RequestedBy						is Alpha 100
		RequesterPhone					is a Telephone 
			holds pii
		RequesterEmail					is an EmailAddress 
			holds pii
		RequestPriority					is Numeric 1
			States
				High		value is 1
				Medium		value is 2
				Low			value is 3
		NeededBy						is Date
		Notes							is Text

		PrmSearchName					is a SearchName
		PrmPostalAddress				is a PostalAddressV2	
			holds pii
		PrmContact						is a Contact
		PrmReceivableHoldCode			is like ReceivableHoldCode
		PrmTaxID						is a TaxID 
			holds pii
		PrmVendorGroupAndVendor			is a VendorGroupAndVendor
		PrmLegalName					is a LegalName
		PrmEmailAddress					is an EmailAddressMulti 
			holds pii
		TransientAttachmentComment		is a NewCommentText
			default label is "Comment"
		TransientAttachment				is a DocumentAttachment
			default label is "Attachment"
		TransientIncludeElectronicFundsTransferCustomerGroupTransactions	is Boolean	
			default label is "IncludeElectronicFundsTransferGroupedCustomers"	
		BypassValidActorContext			is Boolean

	Context Fields
		ReceivableCompany
		CompanyRange

	Rule Blocks
		CreateUpdateRequestCustomer
			invoked.Customer						= Customer
			invoked.CustomerGroup					= CustomerGroup
			invoked.Logo							= Logo
			invoked.CustomerReference				= CustomerReference
			invoked.CustomerReference2				= CustomerReference2
			invoked.SearchName						= PrmSearchName
			invoked.Name							= Name
			invoked.PostalAddress					= PrmPostalAddress
			invoked.Contact							= PrmContact
			invoked.ContactTitle					= ContactTitle
			invoked.PhoneNumber						= PhoneNumber
			invoked.CreditAgencyCode				= CreditAgencyCode
			invoked.CreditAgencyDate				= CreditAgencyDate
			invoked.CreditAgencyNumber				= CreditAgencyNumber
			invoked.ReceivableHoldCode				= PrmReceivableHoldCode
			invoked.OpenOrderAmount					= OpenOrderAmount
			invoked.CurrentReceivableBalance		= CurrentReceivableBalance
			invoked.CurrentBillOfExchangeBalance	= CurrentBillOfExchangeBalance
			invoked.OrderLimit  					= OrderLimit
			invoked.CreditLimit						= CreditLimit
			invoked.CustomerOrderAddressOverride	= CustomerOrderAddressOverride
			invoked.TaxID							= PrmTaxID
			invoked.VendorGroupAndVendor			= PrmVendorGroupAndVendor
			invoked.CustomerChangeAudit 			= CustomerChangeAudit
			invoked.LegalName						= PrmLegalName
			invoked.Logo							= Logo
			invoked.EmailAddress					= PrmEmailAddress
			invoked.URLAddress						= URLAddress
			invoked.VATRegistrationNumber			= VATRegistrationNumber
			invoked.VATRegistrationCountry			= VATRegistrationCountry
			invoked.TwitterID						= TwitterID
			invoked.SocialNetworkID2				= SocialNetworkID2
			invoked.SocialNetworkID3				= SocialNetworkID3
			invoked.SocialNetworkID4				= SocialNetworkID4
			invoked.SocialNetworkID5				= SocialNetworkID5
			invoked.MobileNumber					= MobileNumber
			invoked.FaxNumber						= FaxNumber

		SumCompanyCustomerRelAmounts	
			if (!SumOfCompanyCustomerRelDone)	
				initialize SumOfCompanyCustomerRelGroupUnreleasedPayments	
				initialize SumOfCompanyCustomerRelGroupUnappliedPaymentsCredits	
					for each CompanyCustomerRel
						SumOfCompanyCustomerRelGroupUnreleasedPayments			 += each.GroupUnreleasedPayments			
						SumOfCompanyCustomerRelGroupUnappliedPaymentsCredits	 += each.GroupUnappliedPaymentsCredits	
				SumOfCompanyCustomerRelDone = true	

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "Customer"
			Customer " - " Name

		ShortName is a StringField
			type is AlphaUpper 3
			default label is "Name"
			Name












		CreateMessage				is a LabelField
			restricted
			"CreateCustomer"

		CustomerMessage				is a LabelField
			restricted
			"Customer<Customer>_-_<Name>"

		DerivedFormTitle		is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return CustomerMessage
			else
				return CreateMessage

		DerivedInterfacedCustomer is a DerivedField
			type is like InterfacedCustomer
			default label is "InterfacedCustomer"
			return CustomerMappingTableInterfaceRel.InterfacedCustomer

		NetBalance is a DerivedField
			type is like InternationalAmount
			if ((TotalCurrentBalance - VendorRel.first VendorBalanceMasterRel.CurrentBalance) < 0)
				return (VendorRel.first VendorBalanceMasterRel.CurrentBalance - TotalCurrentBalance)
			else
				return (TotalCurrentBalance - VendorRel.first VendorBalanceMasterRel.CurrentBalance)

		NetBalanceType is a DerivedField
			type is Alpha 14
			if ((TotalCurrentBalance - VendorRel.first VendorBalanceMasterRel.CurrentBalance) < 0)
				return "Net AP Balance"
			else
				return "Net AR Balance"

		TotalCurrentBalance	is a DerivedField	
			type is like InternationalAmount

			return (CurrentBillOfExchangeBalance + CurrentReceivableBalance)	//IEFIN-74464 removing "sum"

		CurrentBalance is a DerivedField
			type is like InternationalAmount
			classic name is CURR-DRAFT-BAL
			restricted
			return (CurrentReceivableBalance + CurrentBillOfExchangeBalance)

		TotalUnreleasedApplied is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalWorkAmount
			for each CompanyCustomerRel

				if (each.Company.Currency = CustomerGroup.Currency)
					LocalWorkAmount								+= each.UnreleasedApplied
				else
					CurrencyWork.FinanceEnterpriseGroup			= CustomerBusinessGroupRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= each.UnreleasedApplied
					CurrencyWork.FromCurrency					= each.Company.Currency
					CurrencyWork.BaseAmount.ToCurrency			= CustomerGroup.Currency
					LocalWorkAmount								+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return LocalWorkAmount

		TotalGroupUnreleasedApplied is a DerivedField	
			type is like InternationalAmount
			include SumCompanyCustomerRelAmounts	

			return	(SumOfCompanyCustomerRelGroupUnreleasedPayments)	

		TotalUnappliedPaymentsCredits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalWorkAmount
			for each CompanyCustomerRel

				if (each.Company.Currency = CustomerGroup.Currency)
					LocalWorkAmount								+= each.UnappliedPaymentsCredits
				else
					CurrencyWork.FinanceEnterpriseGroup			= CustomerBusinessGroupRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= each.UnappliedPaymentsCredits
					CurrencyWork.FromCurrency					= each.Company.Currency
					CurrencyWork.BaseAmount.ToCurrency			= CustomerGroup.Currency
					LocalWorkAmount								+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return LocalWorkAmount

		TotalGroupUnappliedPaymentsCredits is a DerivedField	
			type is like InternationalAmount
			include SumCompanyCustomerRelAmounts	

			return	(SumOfCompanyCustomerRelGroupUnappliedPaymentsCredits)	

		TotalUnreleasedPayments is a DerivedField
			type is like InternationalAmount
 			restricted
			initialize LocalWorkAmount
			for each CompanyCustomerRel

				if (each.Company.Currency = CustomerGroup.Currency)
					LocalWorkAmount								+= each.UnreleasedPayments
				else
					CurrencyWork.FinanceEnterpriseGroup			= CustomerBusinessGroupRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= each.UnreleasedPayments
					CurrencyWork.FromCurrency					= each.Company.Currency
					CurrencyWork.BaseAmount.ToCurrency			= CustomerGroup.Currency
					LocalWorkAmount								+= CurrencyWork.BaseAmount.OutputCurrencyAmount

			return LocalWorkAmount

		TotalGroupTotalUnreleasedPayments is a DerivedField	
			type is like InternationalAmount
			include SumCompanyCustomerRelAmounts	

			return	(SumOfCompanyCustomerRelGroupUnreleasedPayments)	

		DerivedTaxCode is a DerivedField
			type is like TaxCode
 			restricted
			initialize CalculateTax
			CalculateTax.InFinanceEnterpriseGroup		= CustomerGroup.FinanceEnterpriseGroup
			CalculateTax.CallingModule					= "Customer"
			CalculateTax.VertexQuantumOption			= "G"
			CalculateTax.TaxEntity						= blank
			CalculateTax.CustomerGrp					= CustomerGroup
			CalculateTax.PostalAddress					= PostalAddress
			CalculateTax.DontCreateResultFiles			= true
			return CalculateTax.ReturnedGeoCode

		CustomerCity		is a ConditionalField
			type is Alpha size 18
 			restricted
			if (PostalAddress.Municipality entered)
				PostalAddress.Municipality
			else
				blank

		CustomerStateProvince	is a ConditionalField
			type is AlphaUpper size 2
 			restricted
			if (PostalAddress.StateProvince entered)
				PostalAddress.StateProvince
			else
				blank

		CustomerPostalCode	is a ConditionalField
			type is Alpha size 10
 			restricted
			if (PostalAddress.PostalCode entered)
				PostalAddress.PostalCode
			else
				blank

		AddressCSPDisplay	is a StringField
			type is AlphaRight size 60
			CustomerCity
			","
			CustomerStateProvince
			" "
			CustomerPostalCode

		BelongsToContextCompany is a DerivedField
			type is Boolean
			restricted
			if (!ReceivableCompany in context)
				return false
			LocalReceivableCompany = ReceivableCompany
			if (LocalCompanyCustomer exists)
				return true

		BelongsToContextCompanyTrue is a DerivedField
			type is Boolean
			restricted
			LocalReceivableCompany = ReceivableCompany
			if (LocalReceivableCompany entered)
				if (LocalCompanyCustomer exists)
					return true
				else
					return false
			else
				return true

		CustomersForCompany is a LabelField
			"For_Company<ReceivableCompany>"

		CustomersForCompanyLabel is a DerivedField
			type is MessageField
			if (ReceivableCompany entered)
				return CustomersForCompany
			else
				return ""

		FullAddressDisplay is a DerivedField	
			type is Text
			default label is "Address"
			initialize LocalText

			if (PostalAddress.DeliveryAddress.AddressLine1 entered)
				LocalText += PostalAddress.DeliveryAddress.AddressLine1

			if (PostalAddress.DeliveryAddress.AddressLine2 entered)
				if (LocalText entered)
					LocalText += "\u000a"
				LocalText += PostalAddress.DeliveryAddress.AddressLine2

			if (PostalAddress.DeliveryAddress.AddressLine3 entered)
				if (LocalText entered)
					LocalText += "\u000a"
				LocalText += PostalAddress.DeliveryAddress.AddressLine3

			if (PostalAddress.DeliveryAddress.AddressLine4 entered)
				if (LocalText entered)
					LocalText += "\u000a"
				LocalText += PostalAddress.DeliveryAddress.AddressLine4

			if (PostalAddress.Municipality entered)
				if (LocalText entered)
					LocalText += "\u000a"
				LocalText += PostalAddress.Municipality
				if (PostalAddress.StateProvince entered
					or PostalAddress.PostalCode entered)
					LocalText += ", "

			if (PostalAddress.StateProvince entered
				and PostalAddress.PostalCode entered)
				LocalText += PostalAddress.StateProvince + " " + PostalAddress.PostalCode
			else
				LocalText += PostalAddress.StateProvince + PostalAddress.PostalCode
			if (PostalAddress.Country entered)
				if (LocalText entered)
					LocalText += "\u000a"
				LocalText += PostalAddress.Country
			return LocalText

		CustomerGroupCustomerTitleWithRecord is a LabelField	
			"ForCustomerGroup<CustomerGroup>_-_<CustomerGroup.Name>_-_Customer<Customer>_-_<Name>"

		CustomerGroupCustomerTitle is a DerivedField	
			type is MessageField
			return CustomerGroupCustomerTitleWithRecord




	Field Rules
		CreditAgencyDate
			if (CreditAgencyDate entered)
				constraint (CreditAgencyCode entered)
					"IfCreditAgencyDateEntered,CreditAgencyCodeMustBeEntered"		

		CreditAgencyCode
			if (CreditAgencyCode entered)
				constraint (CreditAgencyDate entered)
					"IfCreditAgencyCodeEntered,CreditAgencyDateMustBeEntered"		

		CustomerReference

			if  (CustomerReference entered
			and (action type.Create
			or   CustomerReference changed))
				constraint  (!InterfacedCustomerRel exists)
					"InterfaceCustomerAlreadyExists"

				constraint  (!CustomerReferenceRel exists)
					"InterfaceCustomerAlreadyExists"

		OrderLimit
			if (CreditLimit entered)
				constraint (OrderLimit <= CreditLimit)
					"OrderLimitCannotBeGreaterThanCreditLimit"

		CreditAgencyNumber
			constraint (!CustomerRelExists)
				"DuplicateDunningNumber"				

		Name
			required

		SearchName
			default to Name
			if (Name not entered)
				SearchName = Name
			if (CustomerSearchNameRel exists)
				confirmation required
					"Warning,SearchNameAlreadyExists;Proceed?"

		LegalName
			default to Name
			if (CustomerLegalNameRel exists)
				confirmation required
					"Warning,LegalNameAlreadyExists;Proceed?"

		ReceivableHoldCode
			constraint (ReceivableHoldCode.CustomerApplicable)
				"HoldCodeMustBeCustomerApplicable" 

		Logo
			if (Logo changed
			or	Customer not exists)
				MaxLogoSize = CustomerGroup.LogoImageMaximumSizeBytes

		VendorGroupAndVendor
			if (VendorGroupAndVendor entered)
				constraint ((VendorGroupAndVendor.Vendor.CustomerGroup not entered and VendorGroupAndVendor.Vendor.Customer not entered)
				or (VendorGroupAndVendor.Vendor.CustomerGroup = CustomerGroup and VendorGroupAndVendor.Vendor.Customer = Customer))
					"AssociatedVendorIsAlreadyLinkedToAnotherCustomer"
				constraint (!IsICBillingDefaultCustomer)
					"CannotRelateCustomerToVendor;CustomerIsDefaultInterCompanyCustomer"  
				constraint (!VendorGroupAndVendor.Vendor.IsIntercompanyBillingDefaultVendor)
					"CannotRelateCustomerToVendor;VendorIsDefaultInterCompanyVendor"  

		CheckDigitType
			initial value is PostalAddress.Country.TaxIDCheckDigitType
			default to PostalAddress.Country.TaxIDCheckDigitType
			if (CheckDigitType.NoCheckDigit
			and PostalAddress.Country.TaxIDCheckDigitType entered)
				force default to PostalAddress.Country.TaxIDCheckDigitType






		TaxID
			if (!CheckDigitType.Ignore
			and !CheckDigitType.NoCheckDigit)
				required
					"TaxIDRequiredWhenCheckDigitTypeIsEnteredOrDefaulted;CheckDigitType=<CheckDigitType>"
				initialize ValidateCheckDigit
				if (CheckDigitType.MOD10)
					constraint (TaxID matches "\d{10}")
						"TaxIDForMOD\10MustBe10Digits"
					ValidateCheckDigit.ValidationType 	= "T"
				if (CheckDigitType.MOD11)
					ValidateCheckDigit.ValidationType 	= "E"
				if (CheckDigitType.MOD11Hyphen2)
					ValidateCheckDigit.ValidationType 	= "O"
				ValidateCheckDigit.NumberToValidate = TaxID
				constraint (ValidateCheckDigit.IsNumberValid)
					"InvalidCheckDigit"





			if (TaxID entered
			and TaxIdentificationType entered
			and TaxIdentificationTypeRel.RegularExpression entered)
				constraint (TaxID matches TaxIdentificationTypeRel.RegularExpression)
					"TaxFormatDoesNotMatchEnteredTaxInformation;FormatIs<TaxIdentificationTypeRel.FormatExample>"

		CustomerCompanyGroup 
			if (CustomerCompanyGroup entered)
				constraint (CustomerCompanyGroup.first CustomerCompanyGroupMembersRel.Company.CustomerGroupField.CustomerGroup = CustomerGroup)
					"CannotEnterCustomerCompanyGroupWhereMemberReceivablesCompaniesRelateToADifferentCustomerGroup<CustomerCompanyGroup.first CustomerCompanyGroupMembersRel.Company.CustomerGroupField.CustomerGroup>"		


	Create Rules








		if (!BypassValidActorContext)
			constraint (IsValidForActorContextCreateRulesOnly)	
				"CannotCreate_Customer.Customer<Customer>For_Customer_Group<CustomerGroup>NotValidFor_Actor_Context.Actor<actor>DoesNotHave'Finance_Enterprise_Group'ContextFor_Finance_Enterprise_Group_<CustomerBusinessGroupRel.FinanceEnterpriseGroup>"	


	Conditions

		IsICBillingDefaultCustomer
			restricted
			when (ReceivablesCompanyWithICBDefaultRel exists)

		RecordExists
			restricted
			when (Customer exists)

		CustomerRelExists
			restricted
			when (CustomerRel exists)

		BillOfExchangeProcessing
			restricted
			when (CustomerGroup.BillOfExchangeProcessing)

		ElectronicFundsTransferProcessing
			restricted
			when (CustomerGroup.ElectronicFundsTransferProcess)

		ElectronicFundsOrBOEProcessing
			restricted
			when (CustomerGroup.BillOfExchangeProcessing
			or	  CustomerGroup.EFTProcessingLevel.GroupLevelProcessing)

		ElectronicFundsGroupLevelProcessing	
			restricted
			when (CustomerGroup.EFTProcessingLevel.GroupLevelProcessing)

		HasBillTo
			classic name is BILLTO-EXISTS
			restricted
			when (first BilltoRel exists)

		IsCreditAgency
			classic name is CUDSET2
			restricted
			when (CreditAgencyNumber entered)

		IsCompanyCustomer
			classic name is CUSTOMER-EXIST
			restricted
			when (first ArcustomerRel exists)

		HasEFTCustomerGroup
			classic name is FTGRP-EXISTS
			restricted
			when (first FtcustgrpRel exists)

		HasCustomerDraftBank
			restricted
			when (first CustomerDraftBankRel exists)

		HasCustomerEFTDraftBank
			restricted
			when (CustomerEFTDraftBankRel exists)

		HasBalance
			restricted
			when (CurrentReceivableBalance entered)

		IsValidForActorContext
			restricted
			when (CustomerBusinessGroupRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		IsValidForActorContextCreateRulesOnly	
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CustomerBusinessGroupRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		Testing
			restricted
			when (CustomerGroup = "MFS")

		HasPendingEFTAdjustments
			restricted
			when (ReceivableEFTAdjustmentsRel exists)

		HasOpenEFTTransactions
			restricted
			when (OpenEFTTransactionsRel exists)

		EmailEntered
			restricted
			when (EmailAddress entered)

		PhoneNumberEntered
			restricted
			when (PhoneNumber entered)

		URLEntered
			restricted
			when (URLAddress entered)

		ShowNetBalance
			when (VendorGroupAndVendor.Vendor.first VendorBalanceMasterRel.BalanceCurrency = CustomerGroup.Currency)


		CustomerTypeExists
			restricted
			when (CustomerInvoiceTypeCodesRel exists)

		HasOpenTransactions
			when (OpenTransactionsRel exists)

		HasPendingAdjustmentsAndNoEFTProcessingHold
			restricted
			when (!IsEFTTransactionOnHold
			and	  HasPendingEFTAdjustments)

		AvailableForAllEFTAdjustments
			when (any OpenElectronicFundsTransferTransactionsRel.AvailableForEFTAdjustmentsHold)

		AllowEFTAdjustmentAdd
			restricted
			when (any OpenElectronicFundsTransferTransactionsRel.AllowEFTAdjustmentAdd)

		AllowEFTAdjustmentUnselect
			restricted
			when (any OpenElectronicFundsTransferTransactionsRel.AllowEFTAdjustmentUnselect)

		IsEFTTransactionOnHold
			restricted
			when (ReceivableElectronicFundsTransferNotifyRel.HoldAllProcessing)

		WithinCompanyRangeFilter
			when ((CompanyRange not entered
			and	ArcustomerRel exists)
			or	(CompanyRange entered
			and	CompanyCustomerFilterRel exists))

		InterfacedCustomersExist
			restricted
			when (CustomerMappingTableInterfaceRel exists)

		CustomerReferenceEntered
			restricted
			when (CustomerReference entered)

		HasCompanyCustomerAndNoVendorBalance
			when (ArcustomerRel exists
			and   VendorGroupAndVendor.Vendor.TotalVendorBalancesRel not exists)

		HasVendor
			when (VendorRel exists)

		HasCustomerDunning
			restricted
			when (CustomerDunningHistoryRel exists)

		AnonymizeLogAnonymizeRelExists
			restricted
			when (first AnonymizeLogAnonymizeRel exists)

		AnonymizeLogPurgeRelExists
			restricted
			when (first AnonymizeLogPurgeRel exists)

		HasTransientAttachment
			restricted
			when (TransientAttachment entered)

		HasGroupLevelDraftBank
			restricted
			when (first GroupLevelDraftBanksRel exists)

	Relations

		CustomerBusinessGroupRel	
			one-to-one relation to CustomerBusinessGroup
			Field Mapping uses symbolic key
				related.CustomerBusinessGroup = CustomerGroup

		ReceivablesCompanyWithICBDefaultRel
			one-to-many relation to ReceivableCompany
			Field Mapping uses ByICBCustomerDefault
				related.CustomerGroupField.CustomerGroup	 = CustomerGroup
				related.ICBillingDefaultCustomer			 = Customer

		CustomerDunningHistoryRel
			one-to-many relation to DunningHistory
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Customer				 = Customer
				and	related.Customer.CustomerGroup	 = CustomerGroup )

		CustomerRel
			one-to-many relation to	 Customer
			Field Mapping uses Set2
			Instance Selection
				where (related.CreditAgencyNumber 	= CreditAgencyNumber
				and	related.CustomerGroup 		= CustomerGroup
				and	related.UniqueID != UniqueID)

		ArcustomerRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses Set3
				related.Customer = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup)

		CompanyCustomerContactRel
			one-to-many relation to CompanyCustomerContact
			Field Mapping uses ByCustomer
				related.Customer = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup			= CustomerGroup)

		BilltoRel
			one-to-many relation to CustomerBillTo
			Field Mapping uses symbolic key
				related.CustomerGroup = CustomerGroup
				related.Customer	  = Customer

		FtcustgrpRel
			one-to-many relation to ElectronicFundsTransferCustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup = CustomerGroup
			Instance Selection
				where (related.ElectronicFundsTransferCustomerGroup.Company not entered
				and   related.ElectronicFundsTransferCustomerGroup.CreditCustomer = Customer)

		CustomerBillToWithDefaultBillToRel
			one-to-many relation to CustomerBillTo
			Field Mapping uses symbolic key
				related.CustomerGroup = CustomerGroup
				related.Customer	  = Customer
			Instance Selection
				where (related.DefaultBillTo)

		CustomerDraftBankRel
			one-to-many relation to CustomerDraftBank
			Field Mapping uses ByCustomerGroupCustomer
				related.CustomerGroup	= CustomerGroup
				related.Customer		= Customer



		CustomerOnlyDraftBankRel
			one-to-many relation to CustomerDraftBank
			Field Mapping uses ByCustomerGroupCustomer
				related.CustomerGroup	= CustomerGroup
				related.Customer		= Customer
			Instance Selection
				where (related.IsCustomer)

		CustomerEFTDraftBankRel
			one-to-many relation to CustomerDraftBank
			Field Mapping uses ByCustomerGroupCustomer
				related.CustomerGroup							= CustomerGroup
				related.Customer 								= Customer
			Instance Selection
				where (related.BankType = "E")


		OpenEFTTransactionsRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses OpenByCustomer
				related.Customer = Customer
			Instance Selection
				where (related.AvailableForEFTAdjustments
				and	related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup)

		ReceivableElectronicFundsTransferAdjustmentRel
			one-to-many relation to ReceivableElectronicFundsTransferAdjustment
			Field Mapping uses ByCustomerGroup
				related.CustomerGroup											= CustomerGroup
			Instance Selection
				where (related.ReceivableInvoiceDetailRel.Customer				= Customer)

		OpenTransactionsRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses OpenByCustomer
				related.Customer = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup)


		ReceivableInvoicesRel
			one-to-many relation to ReceivableInvoice
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup
				and	related.Customer = Customer
				and	related.OpenReceivableDetailRecords)


		PastDueTransactionsRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses OpenByCustomer
				related.Customer = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup
				and	related.DueDate < current corporate date)

		OpenPaymentsRel
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set4
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup
				and	related.Customer = Customer)

		AgingPeriodRel
			one-to-many relation to ReceivableAgePeriod
			Field Mapping uses symbolic key
			Instance Selection
				where (related.CustomerGroup	 = CustomerGroup
				and	related.ReceivableCompany = blank
				and	related.SetupIndicator = "C")

		CompanyCustomerRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses Set3
				related.Customer	  = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup			= CustomerGroup)

		CompanyCustomerFilterRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses Set3
				related.Customer	  = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup			= CustomerGroup
				and   ((CompanyRange.ToCompany not entered and related.Company >= CompanyRange.FromCompany)
				or	 (CompanyRange.FromCompany not entered and related.Company <= CompanyRange.ToCompany)
				or	(CompanyRange.ToCompany entered and CompanyRange.FromCompany entered and related.Company within CompanyRange)))


		CompanyCustomerTaxableRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses Set3
				related.Customer	  = Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup		= CustomerGroup
				and	related.TaxExempt										= false)

		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup = VendorGroupAndVendor.VendorGroup
				related.Vendor 		= VendorGroupAndVendor.Vendor

		ReceivableElectronicFundsTransferNotifyRel
			one-to-one relation to ReceivableElectronicFundsTransferNotify
			Field Mapping uses symbolic key

				related.CustomerGroup 									= CustomerGroup

				related.Company 										= blank

				related.Customer 										= Customer

		ReceivableInvoiceDisputesRel	is a ReceivableInvoiceDispute set

		TaxCodeRel
			one-to-one relation to TaxCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CustomerBusinessGroupRel.FinanceEnterpriseGroup
				related.TaxCode					= LocalTaxCode

		CustomerSearchNameRel
			one-to-many relation to Customer
			Field Mapping uses Set4
				related.CustomerGroup 	 = CustomerGroup
				related.SearchName		 = SearchName
			Instance Selection
				where (related.Customer	!= Customer)

		CustomerSearchNameAlternateRel
			one-to-many relation to Customer
			Field Mapping uses Set4
				related.CustomerGroup 	 = LocalCustomerGroup
				related.SearchName		 = LocalSearchName
			Instance Selection
				where (related.Customer	!= Customer)

		CustomerLegalNameRel
			one-to-many relation to Customer
			Field Mapping uses Set4
				related.CustomerGroup 	 = CustomerGroup
			Instance Selection
				where (related.Customer	!= Customer
				and	related.LegalName = LegalName)

		CustomerLegalNameAlternateRel
			one-to-many relation to Customer
			Field Mapping uses Set4
				related.CustomerGroup 	 = LocalCustomerGroup
			Instance Selection
				where (related.Customer	!= Customer
				and	related.LegalName = LocalLegalName)

		CustomerInvoiceTypeCodesRel
			one-to-many relation to CustomerInvoiceTypeCode
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Customer						= Customer)

		OpenTransactionsForPaymentCodeRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses OpenByCustomer
				related.Customer = Customer
			Instance Selection
				where (related.IsValidForPaymentCodeChangeNew
				and	related.BankTransactionCode		= LocalOldBankTransactionCode)

		CustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByCustomer
				related.CustomerGroup					= CustomerGroup
				related.Customer						= Customer

		InterfacedCustomerRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup					= CustomerGroup
				related.InterfacedCustomer				= CustomerReference

		CustomerReferenceRel
			one-to-many relation to Customer
			Field Mapping uses ByCustomerReference
				related.CustomerReference			= CustomerReference
				related.CustomerGroup				= CustomerGroup
			Instance Selection
				where (related.UniqueID				!= UniqueID)

		AnonymizeLogAnonymizeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByCustomer
				related.FinanceEnterpriseGroup	= CustomerBusinessGroupRel.FinanceEnterpriseGroup
				related.CustomerGroup			= CustomerGroup
				related.Customer				= Customer
			Instance Selection
				where (related.Status.Anonymized)

		AnonymizeLogPurgeRel
			one-to-many relation to AnonymizeLog
			Field Mapping uses ByCustomer
				related.FinanceEnterpriseGroup	= CustomerBusinessGroupRel.FinanceEnterpriseGroup
				related.CustomerGroup			= CustomerGroup
				related.Customer				= Customer
			Instance Selection
				where (related.Status.AuditLogPurged)

		TaxIdentificationTypeRel
			one-to-one relation to TaxIdentificationType
			Field Mapping uses symbolic key
				related.TaxIdentificationType   = TaxIdentificationType

		CustomerShipToRel
			one-to-many relation to CustomerShipTo
			Field Mapping uses ByCustomer
				related.Customer				= Customer
			Instance Selection
				where (related.Company.CustomerGroupField.CustomerGroup			= CustomerGroup)

		ContextCompanyCustomerRel	
			one-to-one relation to CompanyCustomer	
			Field Mapping uses symbolic key
				related.Company		= ReceivableCompany	
				related.Customer	= Customer	

		EFTCustomerGroupRel
			one-to-many relation to ElectronicFundsTransferCustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup = CustomerGroup
			Instance Selection
				where (related.ElectronicFundsTransferCustomerGroup.Company		= blank
				and related.ElectronicFundsTransferCustomerGroup.CreditCustomer = Customer)

		OpenElectronicFundsTransferTransactionsRel
			one-to-many relation to ReceivableInvoiceDetail
			Field Mapping uses OpenByCustomer
			Instance Selection
				where ((related.Customer = Customer
				or related.Customer = any EFTCustomerGroupRel.ElectronicFundsTransferCustomerGroup.Customer)
				and related.AvailableForEFTAdjustments
				and	related.Company.CustomerGroupField.CustomerGroup	= CustomerGroup)

		ReceivableEFTAdjustmentsRel
			one-to-many relation to ReceivableElectronicFundsTransferAdjustment
			Field Mapping uses ByCustomerGroup
				related.CustomerGroup											= CustomerGroup
			Instance Selection
				where (related.ReceivableInvoiceDetailRel.Customer				= Customer
				or related.ReceivableInvoiceDetailRel.Customer = any EFTCustomerGroupRel.ElectronicFundsTransferCustomerGroup.Customer)

		GroupLevelDraftBanksRel
			one-to-many relation to CustomerDraftBank
			Field Mapping uses Set4
				related.CustomerGroup							= CustomerGroup
				related.Company									= blank
				related.Customer 								= Customer

		CustomerCompanyGroupMemberRel  
			one-to-many relation to CustomerCompanyGroupMember
			Field Mapping uses Set2
				related.CustomerCompanyGroup					= CustomerCompanyGroup
			Instance Selection
				where (related.first Company.CustomerGroupField.CustomerGroup = CustomerGroup)

		LocalCompanyCustomerRel	
			one-to-one relation to CompanyCustomer	
			Field Mapping uses symbolic key
				related.Company		= LocalReceivableCompany	
				related.Customer	= Customer	
	Sets

		Set2
			indexed
			Instance Selection
				where (IsCreditAgency)
			Sort Order
				CreditAgencyNumber
				CustomerGroup

		Set4
			indexed
			Sort Order
				CustomerGroup
				SearchName
				Customer

		Set5
			indexed
			Sort Order
				PostalAddress.PostalCode
				CustomerGroup
				Customer

		Set6
			indexed
			Sort Order
				PhoneNumber.SubscriberNumber
				CustomerGroup
				Customer

		Set8
			indexed
			Sort Order
				CustomerGroup
				PostalAddress.Municipality
				PostalAddress.StateProvince
				SearchName
				Customer

		ByCustomer
			indexed
			Sort Order
				Customer
				CustomerGroup

		ByAddr1
			indexed
			Sort Order
				CustomerGroup
				PostalAddress.DeliveryAddress.AddressLine1
				PostalAddress.Municipality
				PostalAddress.StateProvince
				Customer

		ByTaxID
			duplicates
			Sort Order
				TaxID
				CustomerGroup
				Customer

		ByCustomerReference
			indexed
			Sort Order
				CustomerReference
				CustomerGroup
				Customer
			Instance Selection
				where (CustomerReferenceEntered)

		ByOriginatingInterfaceRun
			indexed
			Sort Order
				OriginatingInterfaceRun
				CustomerGroup
				Customer


	Action Exit Rules











		if (CustomerReference entered)
			if (action type.Create
			or (action type.Update
				and CustomerReference changed))
				if (!CustomerMappingTableInterfaceRel exists)
					invoke Create CustomerMappingTableInterface
						invoked.CustomerGroup 		= CustomerGroup
						invoked.InterfacedCustomer	= CustomerReference
						invoked.Customer			= Customer
						invoked.Name				= Name
						invoked.SearchName			= SearchName
				else
					invoke Update CustomerMappingTableInterfaceRel
						invoked.InterfacedCustomer	= CustomerReference
		else
		if (CustomerMappingTableInterfaceRel exists)
			invoke Delete CustomerMappingTableInterfaceRel

	Form Invokes
		VendorForm
			invoke Update VendorGroupAndVendor.Vendor

	Actions

		Anonymize	is an Instance Action	
			restricted
			Parameters
				PrmFromVendor is Boolean
			Action Rules
				if (!PrmFromVendor)
					if (AnonymizeLogAnonymizeRelExists)
						confirmation required
							"Warning,TheAnonymizeActionIsNonReversableAndAnonymizeRecord(s)AlreadyExists;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToAnonymizeAgain?"
					else
						confirmation required
							"Warning,TheAnonymizeActionIsNonReversable;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToAnonymize?"

				invoke Anonymize CompanyCustomerRel
				invoke Anonymize CompanyCustomerContactRel
				invoke Anonymize BilltoRel
				invoke Anonymize CustomerShipToRel
				invoke Anonymize CustomerMappingTableInterfaceRel

				if (VendorRel exists
				and !PrmFromVendor)
					invoke Anonymize VendorRel
						invoked.PrmFromCustomer	= true

				SearchName			= Customer
				Name				= Customer
				CustomerReference2	= Customer
				Contact				= Customer
				LegalName			= Customer

				initialize PostalAddress
				initialize PhoneNumber
				initialize TaxID
				initialize EmailAddress
				initialize URLAddress

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= CustomerBusinessGroupRel.FinanceEnterpriseGroup
					invoked.Status						= 1
					invoked.AffectedBusinessClass		= "AR1"
					invoked.CustomerGroup				= CustomerGroup
					invoked.Customer					= Customer



		Create	is a Create Action
			Action Rules
			Exit Rules
				if (VendorGroupAndVendor entered)
					invoke SetCustomer VendorGroupAndVendor.Vendor
						invoked.PrmCustomerGroup	= CustomerGroup
						invoked.PrmCustomer			= Customer

				if (CustomerCompanyGroup entered) 
					for each CustomerCompanyGroupMemberRel
						invoke Create CompanyCustomer
							invoked.Company = each.Company
							invoked.Customer = Customer
							invoked.ReceivableDefaultCode = each.ReceivableDefaultCode
							invoked.OriginatingInterfaceRun = OriginatingInterfaceRun

		T2VCreate is a Create Action
			restricted
			default label is untranslatable
			Entrance Rules
				BypassValidActorContext = true

		CreatePendingAddAllEFTAdjustments	is an Instance Action
			default label is "AddAll"

			Action Rules
				constraint (AllowEFTAdjustmentAdd)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"No_\Pending_\E\F\T_\AdjustmentsTo_\AddForCompanyCustomer"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				invoke EFTAdjustmentAdd OpenElectronicFundsTransferTransactionsRel



		CreatePendingHoldAllEFTAdjustments	is an Instance Action
			default label is "HoldAll"

			Action Rules
				constraint (AvailableForAllEFTAdjustments)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"No_\Pending_\E\F\T_\AdjustmentsTo_\PostponeForCompanyCustomer"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				invoke EFTAdjustmentHold OpenElectronicFundsTransferTransactionsRel



		CreatePendingPostponeAllEFTAdjustments	is an Instance Action
			default label is "PostponeAll"

			Action Rules
				constraint (AvailableForAllEFTAdjustments)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"No_\Pending_\E\F\T_\AdjustmentsTo_\PostponeForCompanyCustomer"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				invoke EFTAdjustmentPostpone OpenElectronicFundsTransferTransactionsRel



		CreatePendingDeleteAllEFTAdjustments	is an Instance Action
			default label is "DeleteAll"

			Action Rules
				constraint (AvailableForAllEFTAdjustments)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"No_\Pending_\E\F\T_\AdjustmentsTo_\DeleteForCompanyCustomer"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				invoke EFTAdjustmentDelete OpenElectronicFundsTransferTransactionsRel



		CreatePendingUnselectAllEFTAdjustments	is an Instance Action
			default label is "UnselectAll"

			Action Rules
				constraint (AllowEFTAdjustmentUnselect)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"No_\Pending_\E\F\T_\AdjustmentsTo_\UnselectForCompanyCustomer"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				invoke EFTAdjustmentUnselect OpenElectronicFundsTransferTransactionsRel


		Delete	is a Delete Action
			Entrance Rules
				invoke Delete CompanyCustomerRel
				if (VendorGroupAndVendor entered)
					invoke Update VendorRel
						invoked.CustomerGroup	= blank
						invoked.Customer		= blank
				invoke Delete CustomerMappingTableInterfaceRel

		FastUpdate	is an Update Action
			restricted
			Exit Rules
				invoke FastUpdate CompanyCustomerRel
					invoked.ActionCode	= ActionCode.Update


		GetTaxAreaIdUsingAddress	is an Instance Action

			default label is "UpdateVertexTaxCode"






			Parameters
				PrmTaxEntity	is a TaxEntity
					default label is "TaxEntity"
			Parameter Rules
				PrmTaxEntity
					required
			Local Fields
				LocalCountry	is a Country
				LocalState		is a StateProvince
				LocalZip		is a PostalCode
				LocalCounty		is a County
				LocalCity		is a Municipality

			Action Rules
				initialize CalculateTax
				CalculateTax.RelatedObjectReference		 = reference to this instance
				CalculateTax.CallingModule				 = "Customer"
				CalculateTax.VertexQuantumOption		 = "G"
				CalculateTax.InFinanceEnterpriseGroup	 = PrmTaxEntity.FinanceEnterpriseGroup
				CalculateTax.TaxEntity					 = PrmTaxEntity
				CalculateTax.PostalAddress				 = PostalAddress
				if (CalculateTax.OutputErrorNumber not entered)
					LocalTaxCode						 = CalculateTax.ReturnedGeoCode
					LocalState							 = CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].StateProvince
					LocalZip							 = CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].PostalCode
					LocalCounty							 = CalculateTax.OutputMultipleGeoCodes.GeoCodeTable[1].County

					if (PostalAddress.County not entered)
						PostalAddress.County =	LocalCounty
					if (PostalAddress.PostalCode not entered)
						PostalAddress.PostalCode = LocalZip
					if (LocalTaxCode entered)
						if (!TaxCodeRel exists)
							LocalCity = PostalAddress.Municipality
							invoke Create TaxCode
								invoked.FinanceEnterpriseGroup	= CustomerBusinessGroupRel.FinanceEnterpriseGroup
								invoked.TaxCode					= LocalTaxCode
								invoked.TaxType					= "S"
								invoked.Description				= LocalCity + " " + LocalState + " ," + LocalZip

						invoke Update CompanyCustomerTaxableRel
							invoked.TaxCode = LocalTaxCode



		PortalCustomerUpdateRequest	is an Update RequestAction	
			request action process is PortalCustomerUpdateRequest
			request action linkback webapp is ReceivablesManager
			allow user fields as parameters

			Parameters
				Customer
				CustomerGroup

				PrmPostalAddress
				PrmContact
				PrmTaxID
				PrmEmailAddress
				ContactTitle
				PhoneNumber
				URLAddress

				RequesterActor
				RequestedBy
				RequesterPhone
				RequesterEmail
				MobileNumber
				FaxNumber
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5

			Parameter Rules
				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.PresentationName
					default to RequesterActor.PersonName.PresentationName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

			Action Rules
				invoke Update Customer
					fill in user fields from parameters
					invoked.Customer		= Customer
					invoked.CustomerGroup	= CustomerGroup
					invoked.PostalAddress	= PrmPostalAddress
					invoked.Contact			= PrmContact
					invoked.ContactTitle	= ContactTitle
					invoked.PhoneNumber		= PhoneNumber
					invoked.TaxID			= PrmTaxID
					invoked.EmailAddress	= PrmEmailAddress
					invoked.URLAddress		= URLAddress
					invoked.MobileNumber		= MobileNumber
					invoked.FaxNumber			= FaxNumber
					invoked.TwitterID			= TwitterID
					invoked.SocialNetworkID2	= SocialNetworkID2
					invoked.SocialNetworkID3	= SocialNetworkID3
					invoked.SocialNetworkID4	= SocialNetworkID4
					invoked.SocialNetworkID5	= SocialNetworkID5



		ProcessPendingEFTAdjustments	is an Instance Action
			valid when (HasPendingAdjustmentsAndNoEFTProcessingHold)
			Action Rules
				for each ReceivableEFTAdjustmentsRel
					if (each.ReceivableInvoiceDetailRel.SummarizeDetail)
						if (each.WorkAction.Add)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel.ReceivableInvoiceDetailRel
								invoked.EftAction		= "1"
								invoked.EftExtract		= 0
						else
						if (each.WorkAction.Delete
						and each.ReceivableInvoiceDetailRel.TemporaryHold not entered)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel.ReceivableInvoiceDetailRel
								invoked.EftAction		= blank
								invoked.EftExtract		= 0
								invoked.EFTNotification	= 0
							invoke Delete each.ReceivableInvoiceDetailRel.PreNoteElectronicFundsTransferRel
							invoke Delete each.ReceivableInvoiceDetailRel.FinalNoteElectronicFundsTransferRel
							invoke Purge each.ReceivableInvoiceDetailRel.EFTNotiExtractPrenoteInvoiceDetailsRel
							invoke Purge each.ReceivableInvoiceDetailRel.EFTNotiExtractFinalNoteInvoiceDetailsRel
						else
						if (each.WorkAction.Delete
						and each.ReceivableInvoiceDetailRel.TemporaryHold = "R")
							invoke EFTUpdate each.ReceivableInvoiceDetailRel.ReceivableInvoiceDetailRel
								invoked.EftAction		= blank
								invoked.EftExtract		= 0
								invoked.TemporaryHold	= blank
							invoke Update each.ReceivableInvoiceDetailRel.FinalNoteElectronicFundsTransferRel
								invoked.EftAction		= blank
								invoked.TemporaryHold	= blank
						else
						if (each.WorkAction.Hold)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel.ReceivableInvoiceDetailRel
								invoked.EftAction		= "6"
								invoked.EftExtract		= 8
						else
						if (each.WorkAction.Postpone)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel.ReceivableInvoiceDetailRel
								invoked.EftAction		= "2"
								invoked.EftExtract		= 8
					else
						if (each.WorkAction.Add)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel
								invoked.EftAction		= "1"
								invoked.EftExtract		= 0
						else
						if (each.WorkAction.Delete
						and each.ReceivableInvoiceDetailRel.TemporaryHold not entered)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel
								invoked.EftAction		= blank
								invoked.EftExtract		= 0
								invoked.EFTNotification	= 0
							invoke Delete each.ReceivableInvoiceDetailRel.PreNoteElectronicFundsTransferRel
							invoke Delete each.ReceivableInvoiceDetailRel.FinalNoteElectronicFundsTransferRel
							invoke Purge each.ReceivableInvoiceDetailRel.EFTNotiExtractPrenoteInvoiceDetailsRel
							invoke Purge each.ReceivableInvoiceDetailRel.EFTNotiExtractFinalNoteInvoiceDetailsRel
						else
						if (each.WorkAction.Delete
						and each.ReceivableInvoiceDetailRel.TemporaryHold = "R")
							invoke EFTUpdate each.ReceivableInvoiceDetailRel
								invoked.EftAction		= blank
								invoked.EftExtract		= 0
								invoked.TemporaryHold	= blank
							invoke Update each.ReceivableInvoiceDetailRel.FinalNoteElectronicFundsTransferRel
								invoked.EftAction		= blank
								invoked.TemporaryHold	= blank
						else
						if (each.WorkAction.Hold)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel
								invoked.EftAction		= "6"
								invoked.EftExtract		= 8
						else
						if (each.WorkAction.Postpone)
							invoke EFTUpdate each.ReceivableInvoiceDetailRel
								invoked.EftAction		= "2"
								invoked.EftExtract		= 8

					invoke Purge each



		PurgeAuditLog	is an Instance Action	
			restricted
			Parameters
				PrmFromVendor			is Boolean
			Action Rules
				if (!PrmFromVendor)
					if (AnonymizeLogPurgeRelExists)
						confirmation required
							"Warning,ThePurgeAuditLogActionIsNonReversableAndAnonymizeRecordAlreadyExists;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToPurgeAuditLogAgain?"
					else
						confirmation required
							"Warning,ThePurgeAuditLogActionIsNonReversable;AreYouSureYouWantToContinue?"
						confirmation required
							"ProceedToPurgeAuditLog?"

				invoke PurgeAuditLog CompanyCustomerRel
				invoke PurgeAuditLog CompanyCustomerContactRel
				invoke PurgeAuditLog BilltoRel
				invoke PurgeAuditLog CustomerShipToRel
				invoke PurgeAuditLog CustomerMappingTableInterfaceRel

				if (VendorRel exists
				and !PrmFromVendor)
					invoke PurgeAuditLog VendorRel
						invoked.PrmFromCustomer	= true

				invoke purge audit log entries

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= CustomerBusinessGroupRel.FinanceEnterpriseGroup
					invoked.Status						= 2
					invoked.AffectedBusinessClass		= "AR1"
					invoked.CustomerGroup				= CustomerGroup
					invoked.Customer					= Customer




		RequestNewCustomer	is a Create RequestAction
			request action process is RequestNewCustomer
			request action linkback webapp is ReceivablesManager
			allow user fields as parameters
			Parameters
				RequesterActor					is an Actor
				RequestedBy						is Alpha 100
				RequesterPhone					is a Telephone 
					holds pii
				RequesterEmail					is an EmailAddress 
					holds pii
				RequestPriority					is Numeric 1
					States
						High		value is 1
						Medium		value is 2
						Low			value is 3
				NeededBy						is Date
				Notes							is Text

				Customer
				CustomerGroup
				Logo							is a LogoAttachment
				CustomerReference				is a Reference
				CustomerReference2				is a Reference
				PrmSearchName					is a SearchName
				Name
				PrmPostalAddress				is a PostalAddressV2	
					holds pii
				PrmContact						is a Contact
				ContactTitle					is a Title
				PhoneNumber						is a TelephoneNumber 
					holds pii
				CreditAgencyCode				is a DunnCd
				CreditAgencyDate				is Date
				CreditAgencyNumber				is a DunnNumber
				PrmReceivableHoldCode			is like ReceivableHoldCode
				OpenOrderAmount					is an InternationalAmount
				CurrentReceivableBalance		is an InternationalAmount
				CurrentBillOfExchangeBalance	is an InternationalAmount
				OrderLimit						is an OrderLim
				CreditLimit						is a CreditLim
				CustomerOrderAddressOverride	is Boolean
				PrmTaxID						is a TaxID 
					holds pii
				PrmVendorGroupAndVendor			is a VendorGroupAndVendor
				CustomerChangeAudit				is Boolean
				PrmLegalName					is a LegalName
				PrmEmailAddress					is an EmailAddressMulti 
					holds pii
				URLAddress
				VATRegistrationNumber
				VATRegistrationCountry			is a Country
				TransientAttachmentComment		is a NewCommentText
					default label is "Comment"
				TransientAttachment				is a DocumentAttachment
					default label is "Attachment"
				MobileNumber						is a MobilePhone 
					holds pii
				FaxNumber 
					holds pii
				TwitterID 
					holds pii
				SocialNetworkID2 
					holds pii
				SocialNetworkID3 
					holds pii
				SocialNetworkID4 
					holds pii
				SocialNetworkID5 
					holds pii

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required
				Notes
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				CustomerGroup
					if (actor.final approver)
						required

				PrmSearchName
					default to Name
					if (actor.approver or actor.final approver)
						LocalCustomerGroup	=	CustomerGroup
						LocalSearchName		=	PrmSearchName
						if (first CustomerSearchNameAlternateRel exists)
							confirmation required
								"AnotherCustomerWithSameSearchNameAlreadyExists,Continue?"

				PrmLegalName
					default to Name
					if (actor.approver or actor.final approver)
						LocalCustomerGroup	=	CustomerGroup
						LocalLegalName		=	PrmLegalName
						if (first CustomerLegalNameAlternateRel exists)
							confirmation required
								"AnotherCustomerWithSameLegalNameAlreadyExists,Continue?"
				PrmPostalAddress
					required

			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include CreateUpdateRequestCustomer

				if (TransientAttachment entered)
					invoke Create CustomerAttachment
						fill in fields from this instance
						invoked.Comment					= TransientAttachmentComment
						invoked.Attachment				= TransientAttachment



		RequestUpdateCustomer	is an Update RequestAction

			request action process is RequestUpdateCustomer
			request action linkback webapp is ReceivablesManager
			allow user fields as parameters
			bypass field rules
			Parameters
				RequesterActor
				RequestedBy
				RequesterPhone
				RequesterEmail
				RequestPriority
				NeededBy
				Notes
				Customer
				CustomerGroup
				Logo
				CustomerReference
				CustomerReference2
				PrmSearchName
				PrmPostalAddress
				PrmContact
				PrmReceivableHoldCode
				PrmTaxID
				PrmVendorGroupAndVendor
				PrmLegalName
				PrmEmailAddress
				Name
				ContactTitle
				PhoneNumber
				CreditAgencyCode
				CreditAgencyDate
				CreditAgencyNumber
				OpenOrderAmount
				CurrentReceivableBalance
				CurrentBillOfExchangeBalance
				OrderLimit
				CreditLimit
				CustomerOrderAddressOverride
				CustomerChangeAudit
				URLAddress
				VATRegistrationNumber
				VATRegistrationCountry
				TwitterID
				SocialNetworkID2
				SocialNetworkID3
				SocialNetworkID4
				SocialNetworkID5
				MobileNumber
				FaxNumber

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.PresentationName
					default to RequesterActor.PersonName.PresentationName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress


			Action Rules
				invoke Update
					fill in user fields from parameters
					include CreateUpdateRequestCustomer



		ResetBalance	is an Instance Action
			valid when (Testing)
			completion message is "CurrentReceivableBalanceResetTo<CurrentReceivableBalance>"
			Action Rules
				CurrentReceivableBalance	 = sum OpenTransactionsRel.InvoiceAmount.CurrencyAmount
				CurrentReceivableBalance	 -= sum OpenPaymentsRel.TransactionAmount



		SetVendor	is an Instance Action
			restricted
			Parameters
				PayablesVendorGroup	is a VendorGroup
				PayablesVendor			is a Vendor
			Action Rules
				if (PayablesVendorGroup entered
				and PayablesVendor entered)
					constraint ((VendorGroupAndVendor.VendorGroup not entered and VendorGroupAndVendor.Vendor not entered)
					or (PayablesVendorGroup = VendorGroupAndVendor.VendorGroup and PayablesVendor = VendorGroupAndVendor.Vendor))
						"CustomerIsAlreadyLinkedWithAnotherVendor"
				VendorGroupAndVendor.VendorGroup	= PayablesVendorGroup
				VendorGroupAndVendor.Vendor			= PayablesVendor



		TriggerPayFrom	is an Instance Action
			restricted
			Action Rules
					invoke TriggerPayFromPartyMasterBOD CompanyCustomerRel



		Update	is an Update Action
			Local Fields
				LocalVendorGroup	is a VendorGroup
				LocalVendor			is a Vendor
			Action Rules
				if (VendorGroupAndVendor changed)
					if (old VendorGroupAndVendor entered)
						LocalVendorGroup = old VendorGroupAndVendor.VendorGroup
						LocalVendor		 = old VendorGroupAndVendor.Vendor
						invoke SetCustomer LocalVendor
							invoked.PrmCustomerGroup	= blank
							invoked.PrmCustomer			= blank

				if (PostalAddress.DeliveryAddress.AddressLine1 changed
				or  PostalAddress.Municipality changed
				or  PostalAddress.StateProvince changed
				or  PostalAddress.PostalCode changed
				or  PostalAddress.Country changed)	
					for each CompanyCustomerTaxableRel
						if (each.UsingVertex)
							initialize LocalTaxCode
							invoke GetTaxAreaIdUsingAddress Customer
								invoked.PrmTaxEntity = each.TaxEntityRel.TaxEntity
							constraint (LocalTaxCode entered)
								"VertexTaxAreaIdLookupFailed;SomethingWrongWithTheAddress"
							end for each
			Exit Rules
				if (Name changed)	
					invoke UpdateTextSearch CompanyCustomer
						invoked.PrmCustomerGroup = CustomerGroup
						invoked.PrmCustomer = Customer

				if (VendorGroupAndVendor changed and VendorGroupAndVendor entered)
						invoke SetCustomer VendorGroupAndVendor.Vendor
							invoked.PrmCustomerGroup	= CustomerGroup
							invoked.PrmCustomer			= Customer

				invoke FastUpdate CompanyCustomerRel
					invoked.ActionCode	= ActionCode.Update



		UpdateBODIdFields	is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation		  is Alpha size 22
					default label is "Location"
				PrmDocumentID		is Alpha size 100
					default label is "DocumentID"
				PrmRevision		  is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord	is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord







		UpdateCurrentBalance	is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				ChangeAmount is an InternationalAmount
			Action Rules
				CurrentReceivableBalance += ChangeAmount



		UpdateDraftBalance	is an Instance Action
			restricted
			Parameters
				ChangeAmount			is an InternationalAmount
			Action Rules
				CurrentBillOfExchangeBalance += ChangeAmount



		UpdatePaymentCode	is an Instance Action

			Parameters
				PrmFromBankTransactionCode				is a BankTransactionCode
				PrmToBankTransactionCode				is a BankTransactionCode

			Parameter Rules
				PrmFromBankTransactionCode
					required
				PrmToBankTransactionCode
					required

			Action Rules
				constraint (HasOpenTransactions)	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules
					"CustomerDoesNotHaveOpenTransactions"	//IEFIN-66614 Commenting out the "valid when" to help slowness in retrieving lists and adding constraint in Action Rules

				LocalOldBankTransactionCode = PrmFromBankTransactionCode

				LocalNewBankTransactionCode = PrmToBankTransactionCode

				constraint (PrmToBankTransactionCode.BankTransactionType = "C"
				or		  PrmToBankTransactionCode.BankTransactionType = "D")
					"BankTransactionCodeMustBeCashPaymentTypeOrBillOfExchangePaymentType"

				if (PrmToBankTransactionCode.BankTransactionType = "D")
					constraint (PrmToBankTransactionCode.TransactionOrigin = "R")
						"BankTransactionCodeOriginMustBeAccountsReceivable"

				if (PrmToBankTransactionCode.BankTransactionType = "C")
					constraint (PrmToBankTransactionCode.TransactionOrigin != "R")
						"CannotSpecifyElectronicFundsTransferTypeBankCodeForCustomer;UseUpdatePaymentCodeActionPerCompanyCustomerToSpecifyElectronicFundsTransferTypeBankCode"

				for each OpenTransactionsForPaymentCodeRel
					invoke UpdatePaymentCode each
						invoked.PrmNewBankTransactionCode			= LocalNewBankTransactionCode

		CreateCompanyCustomerFromCustomerCompanyGroup is an Instance Action  
			valid when (RecordExists)
			Parameters
				PrmCustomerCompanyGroup is a CustomerCompanyGroup
					default label is "CustomerCompanyGroup"
			Parameter Rules
				PrmCustomerCompanyGroup
					required

			Action Rules
				CustomerCompanyGroup = PrmCustomerCompanyGroup

				constraint (CustomerCompanyGroup.first CustomerCompanyGroupMembersRel.Company.CustomerGroupField.CustomerGroup = CustomerGroup)
					"CannotEnterCustomerCompanyGroupWhereMemberReceivablesCompaniesRelateToADifferentCustomerGroup<CustomerCompanyGroup.first CustomerCompanyGroupMembersRel.Company.CustomerGroupField.CustomerGroup>"		

				for each CustomerCompanyGroupMemberRel
					LocalReceivableCompany = each.Company

					if (!LocalCompanyCustomerRel exists)
						invoke Create CompanyCustomer
							invoked.Company = each.Company
							invoked.Customer = Customer
							invoked.ReceivableDefaultCode = each.ReceivableDefaultCode
		
		InitializeBalance is a Set Action
			restricted
			Parameters
				PrmCustomerGroup  is a CustomerGroup
				PrmCustomerRange  is a CustomerRange
				PrmNbrOfRunGroups       is Numeric 3
				PrmRunGroup             is Numeric 3
			Instance Selection
				where ((CustomerGroup = PrmCustomerGroup)
				and (PrmCustomerRange	not entered
				or	  Customer within PrmCustomerRange)
				and (PrmNbrOfRunGroups <= 1
				or  (Customer % PrmNbrOfRunGroups) = PrmRunGroup))
			Action Rules
				Instance Rules
					initialize CurrentReceivableBalance
					initialize CurrentBillOfExchangeBalance


