AssetItemAdjustmentImport is a BusinessClass
    owned by am
    prefix is ITN
    classic name is AMASSETINV

    Ontology
        symbolic key is AssetItemAdjustmentImport
            classic set name is ITNSET2
            classic name for AssetItemAdjustmentImport.SequenceNumber is SEQ-NUMBER

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

    Persistent Fields

        ItemNumber                  is an AssetItemNumber
            classic name is ITEM-NBR
        Description
        PurchaseDate                is Date
        ItemQuantity
        BaseItemCost                is an InternationalAmount
        	restricted
            classic name is ITEM-COST-BASE
        BaseItemTax                 is an InternationalAmount
        	restricted
            classic name is ITEM-TAX-BASE
        TransactionItemCost         is an InternationalAmount
            classic name is ITEM-COST-TRAN
        TransactionItemTax          is an InternationalAmount
            classic name is ITEM-TAX-TRAN
        BaseNumberOfDecimals
            classic name is BASE-ND
        TransactionNumberOfDecimals is a CurrencyNumberOfDecimals
            classic name is TRAN-ND
        InvoiceCompany      		is a PayablesCompany
        Vendor
        PayablesInvoice
        PayablesInvoiceDistribution
        PurchaseOrder

        PONumber
            classic name is PO-NBR
        PORelease
        POCode                      is AlphaUpper size 4
        VendorName
        Invoice

        ModelNumber
        SerialNumber
        Project						is a FinanceCodeBlockProjectOnly
            classic name is ACTIVITY
        AddToBasis                  is AlphaUpper size 1
            States
                Yes value is "Y"
                No  value is "N"
        Compute
        BarCode                     is an AssetBarCode
        AssetLocation
            classic name is LOCATION-NAME
        LocationDetail              is AlphaUpper size 14
            classic name is LOC-DTL
		AssetItemReferenceFields
		OriginatingAssetInterfaceOptions			is an AssetInterfaceOptions
		OriginatingGLTransactionDetail				is a GLTransactionDetail
			delete ignored
		DistributionCodeBlock						is a FinanceCodeBlock
		OriginatingAssetCapitalTransaction			is a AssetCapitalTransaction
			delete ignored
		InterfaceSequenceNumber  					is Numeric size 8
		PostWIPToProject 							is Boolean

	Transient Fields
		AssetCurrency	is a FromCurrency
			derive value from Asset.Currency
		TransientBypassProjectEdits                 is a BypassProjectEdits
		TransientBypassStructureRelationEdit		is a BypassStructureRelationEdit
		
	Derived Fields
		DerivedTransactionAmount	is a DerivedField
			type is like InternationalAmount
			restricted
			if (OriginatingAssetInterfaceOptions.PostingType
			or LocalProjectCurrency2 = LocalProjectCurrency)
				return LocalTransactionAmount2
			else
				LocalExchangeDate 								= PurchaseDate
				CurrencyWork.FromCurrency           			= LocalProjectCurrency2
				CurrencyWork.BaseAmount.ToCurrency 				= LocalProjectCurrency
				CurrencyWork.TransactionAmount  				= LocalTransactionAmount2
				return CurrencyWork.BaseAmount.OutputCurrencyAmount

	Local Fields
		LocalFund 						is an AssetFundField

	    LocalPostingDate				is like PostingDate
		LocalJournalizeGroup			is like JournalizeGroup
		LocalProjectCurrency			is like Currency
		LocalFundAmount					is an InternationalAmount
		LocalFundCount					is Numeric 4
  		LocalFinanceDimension1			is like FinanceDimension1
  		LocalFinanceDimension2			is like FinanceDimension2
  		LocalFinanceDimension3			is like FinanceDimension3
  		LocalFinanceDimension4			is like FinanceDimension4
  		LocalFinanceDimension5			is like FinanceDimension5
  		LocalFinanceDimension6			is like FinanceDimension6
  		LocalFinanceDimension7			is like FinanceDimension7
  		LocalFinanceDimension8			is like FinanceDimension8
  		LocalFinanceDimension9			is like FinanceDimension9
  		LocalFinanceDimension10			is like FinanceDimension10		 
		LocalTransactionAmount			is an InternationalAmount
		LocalWIPAccount					is a FinanceCodeBlockFull
		LocalClearingAccount			is a FinanceCodeBlockFull
		LocalAccountingEntity			is like AccountingEntity
		LocalAccountingUnit				is like AccountingUnit
		LocalProject						is like Project
		LocalSummaryCode				is AlphaUpper size 30
		LocalTransactionAmount2			is a InternationalAmount	
		LocalProjectCurrency2			is like Currency
		LocalExchangeDate   			is an ExchangeDate
		CurrencyWork					is a FromCurrencyExchangeGroup
						
    Sets
        Set1
            indexed
            Sort Order
                AssetItemAdjustmentImport.RunGroup
                Asset
                AssetItemAdjustmentImport.SequenceNumber

        ByAssetRunGroupSequence
            indexed
            Sort Order
                Asset
                AssetItemAdjustmentImport.RunGroup
                AssetItemAdjustmentImport.SequenceNumber

		ByProjectAsset
			Sort Order
				Project
				Asset
                AssetItemAdjustmentImport.RunGroup
                AssetItemAdjustmentImport.SequenceNumber descending
				
		ByRunGroupSequence		
           	Sort Order
                AssetItemAdjustmentImport.RunGroup
                AssetItemAdjustmentImport.SequenceNumber
				Asset				


        ByAssetInterfaceOptions
            Sort Order
                Asset
                OriginatingAssetInterfaceOptions
                AssetItemAdjustmentImport.RunGroup
                AssetItemAdjustmentImport.SequenceNumber                

		ByDistributionCodeBlock
			Sort Order
				Asset
                OriginatingAssetInterfaceOptions
				InterfaceSequenceNumber
				DistributionCodeBlock
				AssetItemAdjustmentImport.RunGroup
                AssetItemAdjustmentImport.SequenceNumber


	Relations
		ProjectAssetInterfaceRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses ByInterfaceRecord
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.InterfaceRecord			= reference to this instance
	






		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode     = "AM"

		AssetItemAdjustmentFundsRel
			one-to-many relation to AssetItemAdjustmentFund
			Field Mapping uses ByInterfaceFund	
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.Asset						= Asset
				related.AssetItemAdjustmentImport	= AssetItemAdjustmentImport				
				
		AssetItemAdjustmentFundRel
			one-to-one relation to AssetItemAdjustmentFund
			Field Mapping uses ByFund
				related.Asset						= Asset
				related.AssetItemAdjustmentImport	= AssetItemAdjustmentImport		
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit				= LocalAccountingUnit	
				related.Project						= LocalProject				
				related.FinanceDimension1			= LocalFinanceDimension1
				related.FinanceDimension2			= LocalFinanceDimension2
				related.FinanceDimension3			= LocalFinanceDimension3				
				related.FinanceDimension4			= LocalFinanceDimension4
				related.FinanceDimension5			= LocalFinanceDimension5
				related.FinanceDimension6			= LocalFinanceDimension6		
				related.FinanceDimension7			= LocalFinanceDimension7
				related.FinanceDimension8			= LocalFinanceDimension8
				related.FinanceDimension9			= LocalFinanceDimension9
				related.FinanceDimension10			= LocalFinanceDimension10

		AssetFundControlRel
			one-to-one relation to AssetFundControl
			Field Mapping uses symbolic key
				related.AssetFundControl		= FinanceEnterpriseGroup

		AssetInterfaceFundsRel
			one-to-many relation to AssetItemAdjustmentFund
			Field Mapping uses ByInterfaceFund
				related.FinanceEnterpriseGroup 	 	= FinanceEnterpriseGroup			
				related.Asset						= Asset
				related.AssetItemAdjustmentImport	= AssetItemAdjustmentImport
				
		AssetItemBarcodesRel
			one-to-many relation to AssetItem
			Field Mapping uses Set4
				related.FinanceEnterpriseGroup 	 	= FinanceEnterpriseGroup			
				related.BarCode						= BarCode				


	Conditions
		IsProjectCapitalization
			restricted
			when (OriginatingAssetInterfaceOptions entered)

		ProjectCapitalization
			restricted
			when (OriginatingAssetInterfaceOptions entered
			and !CapitalizationUpgradeInProgress)
		
		NotProjectCapitalization
			restricted
			when (OriginatingAssetInterfaceOptions not entered
			and !CapitalizationUpgradeInProgress)

		FundAccounting
			when (Asset.FinanceEnterpriseGroup.FundAccounting
			and not Asset.AssetType.AllocateDepreciationExpense)

		FundAllocationExists
			when (AssetItemAdjustmentFundsRel exists)

		CapitalizationUpgradeInProgress
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)

		UseOldCapitalization
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled)

		UseUpgradedCapitalization
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed)
				
    Field Rules
		PurchaseDate
			required

        AddToBasis
            default to "Y"

        Compute
            default to "N"

		BaseNumberOfDecimals
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"

		TransactionNumberOfDecimals
			default to Asset.TransactionNumberOfDecimals
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"	
					
        BaseItemCost                       		
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"

        BaseItemTax                        			
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"

        TransactionItemCost                			
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"

        TransactionItemTax                 		
			if (IsProjectCapitalization)
				cannot be changed
					"CannotChangeAmountOfCapitalizationEntry"

		Vendor
			if (Vendor entered)
				constraint (InvoiceCompany entered)
					"VendorRequiresAPayablesCompanyToBeEntered"
				constraint (PayablesInvoice entered)
					"VendorRequiresAPayablesInvoiceToBeEntered"
						
		PayablesInvoice
			if (PayablesInvoice entered)
				constraint (Vendor entered)
					"PayablesInvoiceRequiresAVendorToBeEntered"
		
		BarCode
			constraint (AssetItemBarcodesRel not exists)
				"AssetBarCodeIsAlreadyAssignedToAnAssetItem"
				
	Rule Blocks

		CreateWIPClearingTransactions
			if(OriginatingAssetInterfaceOptions.WorkInProcessAccount entered)
				LocalWIPAccount									= OriginatingAssetInterfaceOptions.WorkInProcessAccount
			else
				LocalWIPAccount									= DistributionCodeBlock
				TransientBypassStructureRelationEdit   = true
			if (FinanceEnterpriseGroup.FundAccounting)
				LocalWIPAccount.ToAccountingEntity			= each.AccountingEntity
				if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalWIPAccount.AccountingUnit			= each.AccountingUnit	
				else					
					LocalWIPAccount.FinanceDimension1		= each.Fund
			LocalClearingAccount							= OriginatingAssetInterfaceOptions.AssetClearingAccount	
			if (FinanceEnterpriseGroup.FundAccounting)	
				LocalClearingAccount.ToAccountingEntity		= each.AccountingEntity
				if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalClearingAccount.AccountingUnit		= each.AccountingUnit	
				else					
					LocalClearingAccount.FinanceDimension1	= each.Fund

			invoke Released.Create GLTransactionDetail
				invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				invoked.AccountingEntity		= LocalWIPAccount.ToAccountingEntity
				invoked.System					= "AM"
				invoked.GeneralLedgerEvent		= "CP"
				invoked.Reference				= "ProjectAssetWorkInProcess"
				invoked.Capitalize				= 1	
				invoked.Billed					= blank		
				invoked.RevenueRecognized		= blank
				invoked.JournalizeGroup			= LocalJournalizeGroup
				invoked.PostingDate				= LocalPostingDate
				invoked.FinanceCodeBlock		= LocalWIPAccount	
				if(!PrmPostWIPToProject)
					initialize invoked.FinanceCodeBlock.Project
					TransientBypassProjectEdits  = true	
		        invoked.TransactionDate			= current corporate date	
				invoked.TransactionAmount		= (each.TransactionAmount * -1)
				invoked.CurrencyCode			= LocalProjectCurrency
			
			if(OriginatingAssetInterfaceOptions.WorkInProcessAccount not entered)
				TransientBypassStructureRelationEdit   = false
				if(!PrmPostWIPToProject)
					TransientBypassProjectEdits  = false
			invoke Released.Create GLTransactionDetail
				invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup										
				invoked.AccountingEntity		= LocalClearingAccount.ToAccountingEntity
				invoked.System					= "AM"
				invoked.GeneralLedgerEvent		= "CP"
				invoked.Reference				= "ProjectAssetClearing"
				invoked.Capitalize				= 1	
				invoked.Billed					= blank		
				invoked.RevenueRecognized		= blank
				invoked.JournalizeGroup			= LocalJournalizeGroup
				invoked.PostingDate				= LocalPostingDate
				invoked.FinanceCodeBlock		= LocalClearingAccount	
		        invoked.TransactionDate			= current corporate date	
				invoked.TransactionAmount		= (each.TransactionAmount)
				invoked.CurrencyCode			= LocalProjectCurrency	
	
						
		ReverseWIPClearingTransactions
			if(OriginatingAssetInterfaceOptions.WorkInProcessAccount entered)
				LocalWIPAccount								= OriginatingAssetInterfaceOptions.WorkInProcessAccount
			else
				LocalWIPAccount								= DistributionCodeBlock
				TransientBypassStructureRelationEdit    = true
				if(!PostWIPToProject)
					initialize LocalWIPAccount.Project
					TransientBypassProjectEdits  		    = true
			if (FinanceEnterpriseGroup.FundAccounting)
				LocalWIPAccount.ToAccountingEntity			= each.AccountingEntity
				if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalWIPAccount.AccountingUnit			= each.AccountingUnit	
				else					
					LocalWIPAccount.FinanceDimension1		= each.Fund
			LocalClearingAccount						= OriginatingAssetInterfaceOptions.AssetClearingAccount	
			if (FinanceEnterpriseGroup.FundAccounting)
				LocalClearingAccount.ToAccountingEntity		= each.AccountingEntity
				if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalClearingAccount.AccountingUnit		= each.AccountingUnit	
				else					
					LocalClearingAccount.FinanceDimension1	= each.Fund

			
			invoke Released.Create GLTransactionDetail
				invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				invoked.AccountingEntity		= LocalWIPAccount.ToAccountingEntity
				invoked.System					= "AM"
				invoked.GeneralLedgerEvent		= "CP"
				invoked.Reference				= "ProjectAssetWorkInProcess"
				invoked.Capitalize				= 1	
				invoked.Billed					= blank		
				invoked.RevenueRecognized		= blank
				invoked.JournalizeGroup			= LocalJournalizeGroup
				invoked.PostingDate				= LocalPostingDate
				invoked.FinanceCodeBlock		= LocalWIPAccount	
		        invoked.TransactionDate			= current corporate date	
				invoked.TransactionAmount		= (each.TransactionAmount)
				if (OriginatingAssetInterfaceOptions.SummaryType)
					invoked.CurrencyCode			= OriginatingAssetInterfaceOptions.AssetCurrency
				else
					invoked.CurrencyCode			= LocalProjectCurrency
			
			if(OriginatingAssetInterfaceOptions.WorkInProcessAccount not entered)
				TransientBypassStructureRelationEdit   = false
				if(!PostWIPToProject)
					TransientBypassProjectEdits  = false
			invoke Released.Create GLTransactionDetail
				invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup										
				invoked.AccountingEntity		= LocalClearingAccount.ToAccountingEntity
				invoked.System					= "AM"
				invoked.GeneralLedgerEvent		= "CP"
				invoked.Reference				= "ProjectAssetClearing"
				invoked.Capitalize				= 1	
				invoked.Billed					= blank		
				invoked.RevenueRecognized		= blank
				invoked.JournalizeGroup			= LocalJournalizeGroup
				invoked.PostingDate				= LocalPostingDate
				invoked.FinanceCodeBlock		= LocalClearingAccount	
		        invoked.TransactionDate			= current corporate date	
				invoked.TransactionAmount		= (each.TransactionAmount * -1)
				if (OriginatingAssetInterfaceOptions.SummaryType)
					invoked.CurrencyCode			= OriginatingAssetInterfaceOptions.AssetCurrency
				else
					invoked.CurrencyCode			= LocalProjectCurrency




	
	Actions
		Create is an Action
			valid when (!CapitalizationUpgradeInProgress)
		
		Update is an Action
			valid when (!CapitalizationUpgradeInProgress)

		BuildInterfaceFundRecords is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity 	is like AccountingEntity	
				PrmProjectCurrency		is like Currency		
				PrmJournalizeGroup		is a JournalizeGroup		
				PrmPostingDate			is Date
				PrmPostWIPToProject     is Boolean									
			Action Rules
				LocalAccountingEntity 	= PrmAccountingEntity	
				LocalProjectCurrency	= PrmProjectCurrency		
				LocalJournalizeGroup	= PrmJournalizeGroup		
				LocalPostingDate		= PrmPostingDate	
				initialize LocalFund
				initialize LocalTransactionAmount
				initialize LocalFundAmount	
				initialize LocalFundCount
				for each ProjectAssetInterfaceRel
					LocalSummaryCode		= each.SummaryCode
					LocalAccountingEntity 	= each.AccountingEntity
		        	if (AssetFundControlRel.AccountingUnit)
						LocalAccountingUnit		= each.AccountingUnit
				   	if (AssetFundControlRel.Project) 
						if (UseOldCapitalization)
							LocalProject			= each.GLTransactionDetail.FinanceCodeBlock.Project
						else
							LocalProject			= each.AssetCapitalTransaction.FinanceCodeBlock.Project
					if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						LocalFund			= each.AccountingUnit 
					else	
						LocalFund			= each.FinanceDimension1  
					if (AssetFundControlRel.FinanceDimension1)	
						LocalFinanceDimension1	= each.FinanceDimension1  
					if (AssetFundControlRel.FinanceDimension2)
						LocalFinanceDimension2	= each.FinanceDimension2
					if (AssetFundControlRel.FinanceDimension3)	
						LocalFinanceDimension3	= each.FinanceDimension3
					if (AssetFundControlRel.FinanceDimension4)
						LocalFinanceDimension4	= each.FinanceDimension4
					if (AssetFundControlRel.FinanceDimension5)
						LocalFinanceDimension5	= each.FinanceDimension5
					if (AssetFundControlRel.FinanceDimension6)
						LocalFinanceDimension6	= each.FinanceDimension6
					if (AssetFundControlRel.FinanceDimension7)
						LocalFinanceDimension7	= each.FinanceDimension7
					if (AssetFundControlRel.FinanceDimension8)
						LocalFinanceDimension8	= each.FinanceDimension8
					if (AssetFundControlRel.FinanceDimension9)
						LocalFinanceDimension9	= each.FinanceDimension9
					if (AssetFundControlRel.FinanceDimension10)
						LocalFinanceDimension10	= each.FinanceDimension10		
					if (UseOldCapitalization)
						LocalFundAmount  		= each.GLTransactionDetail.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						LocalProjectCurrency2	= each.GLTransactionDetail.FinanceCodeBlock.Project.Currency
					else
						LocalFundAmount  		= each.AssetCapitalTransaction.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						LocalProjectCurrency2	= each.AssetCapitalTransaction.FinanceCodeBlock.Project.Currency
					LocalTransactionAmount2	= LocalFundAmount
					LocalFundAmount			= DerivedTransactionAmount

					if (AssetItemAdjustmentFundRel exists)
						invoke Update AssetItemAdjustmentFundRel
							invoked.TransactionAmount	+= LocalFundAmount	

					else
						invoke Create AssetItemAdjustmentFundRel
							invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
							invoked.AccountingEntity	 	= LocalAccountingEntity
				        	if (AssetFundControlRel.AccountingUnit)
								invoked.AccountingUnit		= LocalAccountingUnit
				        	if (AssetFundControlRel.Project)      	
								invoked.Project				= LocalProject	
							invoked.Fund 					= LocalFund
				        	if (AssetFundControlRel.FinanceDimension1)

								invoked.FinanceDimension1	= LocalFinanceDimension1	
				        	if (AssetFundControlRel.FinanceDimension2)
								invoked.FinanceDimension2	= LocalFinanceDimension2	
				        	if (AssetFundControlRel.FinanceDimension3)
								invoked.FinanceDimension3	= LocalFinanceDimension3	
				        	if (AssetFundControlRel.FinanceDimension4)
				        		invoked.FinanceDimension4	= LocalFinanceDimension4	
				        	if (AssetFundControlRel.FinanceDimension5)
								invoked.FinanceDimension5	= LocalFinanceDimension5	
				        	if (AssetFundControlRel.FinanceDimension6)
								invoked.FinanceDimension6	= LocalFinanceDimension6	
				        	if (AssetFundControlRel.FinanceDimension7)
								invoked.FinanceDimension7	= LocalFinanceDimension7	
				        	if (AssetFundControlRel.FinanceDimension8)
								invoked.FinanceDimension8	= LocalFinanceDimension8
				        	if (AssetFundControlRel.FinanceDimension9)
								invoked.FinanceDimension9	= LocalFinanceDimension9	
				        	if (AssetFundControlRel.FinanceDimension10)
								invoked.FinanceDimension10	= LocalFinanceDimension10
							invoked.TransactionAmount		= LocalFundAmount	

							
			Exit Rules
				invoke UpdatePercentContribution AssetItemAdjustmentFundsRel
					invoked.TotalItemCost = TransactionItemCost
				if (OriginatingAssetInterfaceOptions.AssetClearingAccount entered)			
					for each AssetItemAdjustmentFundsRel		
						include CreateWIPClearingTransactions
		
		
		DeleteProjectCapitalization is a Delete Action
			valid when (ProjectCapitalization)				
			Parameters	
				PrmFinanceEnterpriseGroup 	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmPostingDate				is Date
					default label is "PostingDate"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is FinanceEnterpriseGroup	
				PrmPostingDate
					if (IsProjectCapitalization)
						required
							
			Local Fields
				LocalJournalizeGroup 	is a JournalizeGroup
			
			Action Rules
				if (OriginatingAssetInterfaceOptions entered)
					if (OriginatingAssetInterfaceOptions.AssetClearingAccount entered)
			            increment GeneralLedgerSystemCodeRel.LastJournalizeGroup 
	   					LocalJournalizeGroup 	= GeneralLedgerSystemCodeRel.DerivedJournalizeGroup 	
	   					LocalPostingDate		= PrmPostingDate	
	   					LocalProjectCurrency	= OriginatingAssetInterfaceOptions.Project.Project.Currency				
						if (FundAccounting)
							for each AssetItemAdjustmentFundsRel		
								include ReverseWIPClearingTransactions
				
						else
							invoke Released.Create GLTransactionDetail
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.AccountingEntity		= Asset.Company.AccountingEntity
								invoked.System					= "AM"
								invoked.GeneralLedgerEvent		= "CP"
								invoked.Reference				= "ReverseProjectWorkInProcess"
								invoked.Capitalize				= 1	
								invoked.Billed					= blank		
								invoked.RevenueRecognized		= blank
								invoked.PostingDate				= PrmPostingDate
								invoked.JournalizeGroup			= LocalJournalizeGroup
								if(OriginatingAssetInterfaceOptions.WorkInProcessAccount entered)
									invoked.FinanceCodeBlock		= OriginatingAssetInterfaceOptions.WorkInProcessAccount
								else
									invoked.FinanceCodeBlock		= DistributionCodeBlock
									TransientBypassStructureRelationEdit   = true
									if(!PostWIPToProject)
										initialize invoked.FinanceCodeBlock.Project
										TransientBypassProjectEdits  = true
						        invoked.TransactionDate			= current corporate date	
								invoked.TransactionAmount		= TransactionItemCost
								if (OriginatingAssetInterfaceOptions.SummaryType)
									invoked.CurrencyCode			= OriginatingAssetInterfaceOptions.AssetCurrency
								else
									invoked.CurrencyCode			= Project.Project.Currency
		
							if(OriginatingAssetInterfaceOptions.WorkInProcessAccount not entered)
								TransientBypassStructureRelationEdit   = false
								if(!PostWIPToProject)
									TransientBypassProjectEdits  = false
							invoke Released.Create GLTransactionDetail
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.AccountingEntity		= Asset.Company.AccountingEntity
								invoked.System					= "AM"
								invoked.GeneralLedgerEvent		= "CP"
								invoked.Reference				= "ReverseProjectAssetClearing"
								invoked.Capitalize				= 1	
								invoked.Billed					= blank		
								invoked.RevenueRecognized		= blank
								invoked.PostingDate				= PrmPostingDate
								invoked.JournalizeGroup			= LocalJournalizeGroup
								invoked.FinanceCodeBlock		= OriginatingAssetInterfaceOptions.AssetClearingAccount	
						        invoked.TransactionDate			= current corporate date	
								invoked.TransactionAmount		= TransactionItemCost * -1
								if (OriginatingAssetInterfaceOptions.SummaryType)
									invoked.CurrencyCode			= OriginatingAssetInterfaceOptions.AssetCurrency
								else
									invoked.CurrencyCode			= Project.Project.Currency
	
						invoke InitiateJournalizeForRunGroup PrmFinanceEnterpriseGroup in background
							invoked.PrmJournalizeGroup				= LocalJournalizeGroup
							invoked.PrmJournalizeGroupDescription	= "ProjectAssetInterfaceReversal"

			Exit Rules
				invoke Delete ProjectAssetInterfaceRel	
					invoked.CapitalizePrm 	= 0
				invoke Delete AssetItemAdjustmentFundsRel	

		Delete is an Action
			restricted
			Entrance Rules
				if (ProjectAssetInterfaceRel exists)
					invoke DeleteAfterInterface ProjectAssetInterfaceRel

		OnlineDelete is a Delete Action
			default label is "Delete"
			valid when (NotProjectCapitalization)
			Exit Rules
				invoke Delete AssetItemAdjustmentFundsRel
				















































