CashLedgerTransactionDetail is a BusinessClass
    owned by cb
    prefix is CBTS

	Ontology
		symbolic key is CashLedgerTransactionDetail

	Patterns
		implements Archivable

    Persistent Fields
        CashManagementAccount
        CashCode
        BankTransactionCode
        TransactionNumber
        CashLedgerSourceRecord
        CashLedgerTransaction
        DetailStatus                    is Numeric size 1
            classic name is REC-STATUS
            States
                Unreconciled            value is 0
                Reconciled              value is 1
        IssuedBankAmount                is an CurrencyAmount
		ReconciledBankAmount			is an InternationalAmount
        DebitCreditIndicator
        Description
        CommentText
        TransactionData1                is a TransactionData
        TransactionData2                is a TransactionData        
        TransactionData3                is a TransactionData        
        TransactionData4                is a TransactionData
        ReconciliationIdentifier
		DetailTransactionNumber			is Alpha size 22
		Reference

	Local Fields
		LocalCashManagementGroup			is like CashManagementGroup
		LocalCashManagementAccount			is like CashManagementAccount
		LocalCashLedgerTransaction			is like CashLedgerTransaction
		LocalBankTransactionCode            is like BankTransactionCode
		LocalCashLedgerSourceRecord         is like CashLedgerSourceRecord


    Field Rules
		CashCode
			if (CashCode changed)
				initialize CashLedgerTransaction
				initialize CashLedgerSourceRecord

		BankTransactionCode
			if (CashLedgerTransaction entered)
				required
			if (BankTransactionCode changed)
				initialize CashLedgerTransaction
				initialize CashLedgerSourceRecord 
			
		TransactionNumber
			if (TransactionNumber changed)
				initialize CashLedgerTransaction
				initialize CashLedgerSourceRecord

		CashLedgerSourceRecord
			default to first CashLedgerTransactionRel.CashLedgerSourceRecord
			default to "CBT"


		CashLedgerTransaction
			if (CashLedgerTransaction !entered)
				default to first CashLedgerTransactionRel.CashLedgerTransaction
			if (CashLedgerTransaction entered)
				CashManagementAccount            = CashLedgerTransaction.CashManagementAccount
				CashCode                         = CashLedgerTransaction.CashCode
				TransactionNumber                = CashLedgerTransaction.TransactionNumber

		IssuedBankAmount
			required

		DetailTransactionNumber 
			default to TransactionNumber

		Description
			default to CashLedgerTransaction.Description

		Reference 
			default to CashLedgerTransaction.Reference

		DebitCreditIndicator
			if (CashLedgerTransaction.BankTransactionSign.BankCredit)          	
				if (IssuedBankAmount >= 0)
					DebitCreditIndicator = "C"
				else
					DebitCreditIndicator = "D"
			else	
				if (IssuedBankAmount >= 0)
					DebitCreditIndicator = "D"
				else
					DebitCreditIndicator = "C"
	
	Conditions
		SecurityGroupAllowsAccess
			when ((actor.context.CashCodeSecurityGroup = "")
			or   (actor.context.CashCodeSecurityGroup != ""
			and   CashCodeSecurityGroupDetailRel exists))

	Sets

		ByCashLedgerTransaction
			Sort Order
				CashManagementGroup
				CashManagementAccount
				CashLedgerSourceRecord
				CashLedgerTransaction
				CashLedgerTransactionDetail

		ByDetailStatus
			Sort Order
				CashManagementGroup
				BankTransactionCode
				CashLedgerSourceRecord
				CashLedgerTransaction
				DetailStatus
				CashLedgerTransactionDetail

		ByReconciliationIdentifier
			Sort Order
				CashManagementGroup
				CashManagementAccount
				ReconciliationIdentifier
				CashLedgerTransactionDetail

	Relations
		CashLedgerTransactionRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup 			= CashManagementGroup
				related.CashCode						= CashCode	
				related.BankTransactionCode				= BankTransactionCode
				related.TransactionNumber				= TransactionNumber	

		NoTransactionDetailBankStatementReconciliationRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByCashLedgerTransactionDetail
				related.CashManagementGroup		= LocalCashManagementGroup
				related.CashManagementAccount	= LocalCashManagementAccount
				related.LineType				= 2
				related.CashLedgerTransaction	= LocalCashLedgerTransaction
			Instance Selection
				where (!related.CashLedgerTransactionDetail entered)

		LocalCashLedgerTransactionRel
			one-to-one relation to CashLedgerTransaction
			Field Mapping uses symbolic key
				related.CashManagementGroup      = CashManagementGroup
				related.BankTransactionCode      = LocalBankTransactionCode
				related.CashLedgerSourceRecord   = LocalCashLedgerSourceRecord
				related.CashLedgerTransaction  	 = LocalCashLedgerTransaction

		CashCodeSecurityGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup         = actor.context.FinanceEnterpriseGroup
				related.CashCodeGroup				= actor.context.CashCodeSecurityGroup.FinanceDimensionStructure
				related.CashCode                    = CashCode

            
    Actions

        Create is a Create Action
			Exit Rules
				increment CashLedgerTransaction.TotalDetailAmount by IssuedBankAmount

		Update is an Update Action
			Exit Rules
				if (CashLedgerTransaction	changed
                or  BankTransactionCode		changed)
					increment CashLedgerTransaction.TotalDetailAmount by IssuedBankAmount
					if (old CashLedgerTransaction entered)
						LocalCashLedgerTransaction        = old CashLedgerTransaction
						LocalBankTransactionCode          = old BankTransactionCode
						LocalCashLedgerSourceRecord       = old CashLedgerSourceRecord
						decrement LocalCashLedgerTransactionRel.TotalDetailAmount by old IssuedBankAmount

				if (IssuedBankAmount changed
				and	  CashLedgerTransaction !changed) 
					increment CashLedgerTransaction.TotalDetailAmount by (IssuedBankAmount- old IssuedBankAmount)

		Delete is a Delete Action
			Entrance Rules
				decrement CashLedgerTransaction.TotalDetailAmount by IssuedBankAmount


        UpdateLineDetailStatus is an Instance Action
  			default label is untranslatable
  			restricted
  			Parameters
  				PrmLineStatus 					is Numeric 1
					default label is "Status"
					States
						Unreconciled	value is 0
						Reconciled		value is 1
				PrmCashManagementAccount		is a CashManagementAccount
				PrmReconcileBankAmount			is an InternationalAmount
            Action Rules
				if (PrmLineStatus.Reconciled)
					ReconciledBankAmount	= PrmReconcileBankAmount
				else
					initialize	ReconciledBankAmount
  				DetailStatus = PrmLineStatus
				if (PrmLineStatus.Reconciled)
					increment CashLedgerTransaction.ReconciliationData.CurrencyAmount by PrmReconcileBankAmount
					increment CashLedgerTransaction.ReconciledDetailAmount by IssuedBankAmount
				else
					decrement CashLedgerTransaction.ReconciliationData.CurrencyAmount by PrmReconcileBankAmount
					decrement CashLedgerTransaction.ReconciledDetailAmount by IssuedBankAmount
					if (CashLedgerTransaction.Status.Reconciled)
						invoke Reconciled.ReopenFromCTMBankStatement CashLedgerTransaction

        LoadLineDetailsIntoReconciliation is a Set Action
			default label is untranslatable
			restricted
			Parameters
  				PrmCashManagementGroup		is a CashManagementGroup
  				PrmCashManagementAccount	is a CashManagementAccount
  				PrmBankStatement			is a BankStatement
  				PrmMassStatementLoad		is Boolean
  				PrmMassAccountLoad			is Boolean
            Parameter Rules

            Local Fields
				LocalReconciliationIdentifier is a BankStatementReconciliation view
				BackgroundGroup				  is AlphaUpper up to 50
				
			Sort Order is ByCashLedgerTransaction

			Instance Selection
                where (CashManagementGroup		= PrmCashManagementGroup
				and    CashManagementAccount	= PrmCashManagementAccount
				and	   !ReconciliationIdentifier entered
				and    CashLedgerTransaction entered
				and    !CashLedgerTransaction.DetailsOutOfBalance
				and    (CashLedgerTransaction.Status.Open
				or	   (CashLedgerTransaction.Status.PendingApproval
				and	    CashCode.AllowReconciliationForVoidStopPaid
				and     CashLedgerTransaction.ApprovalRequestType entered))
				and     !BankStatementReconciliation set exists
				and	   PrmBankStatement			= PrmBankStatement)

            Action Rules
                Empty Set Rules
					if (PrmBankStatement entered)
						increment PrmBankStatement.CompletedReconLoadProcesses
						if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
							if (PrmMassStatementLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
							invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
								invoked.PrmCashManagementGroup		= PrmCashManagementGroup
								invoked.PrmCashManagementAccount	= PrmCashManagementAccount
								invoked.PrmBankStatement			= PrmBankStatement
					else
						increment PrmCashManagementAccount.CompletedReconLoadProcesses
						if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
							if (PrmMassAccountLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
							invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
								invoked.PrmMassAccountLoad	= PrmMassAccountLoad

                CashLedgerTransaction Set Rules
					Exit Rules
						LocalCashManagementGroup             = PrmCashManagementGroup
						LocalCashManagementAccount           = PrmCashManagementAccount
						LocalCashLedgerTransaction           = CashLedgerTransaction
						if (NoTransactionDetailBankStatementReconciliationRel exists) 
							invoke Delete NoTransactionDetailBankStatementReconciliationRel

                Set Rules
					Exit Rules
						if (PrmBankStatement entered)
							increment PrmBankStatement.CompletedReconLoadProcesses
							if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
								if (PrmMassStatementLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
								invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
									invoked.PrmCashManagementGroup		= PrmCashManagementGroup
									invoked.PrmCashManagementAccount	= PrmCashManagementAccount
									invoked.PrmBankStatement			= PrmBankStatement
						else
							increment PrmCashManagementAccount.CompletedReconLoadProcesses
							if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
								if (PrmMassAccountLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
								invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
									invoked.PrmMassAccountLoad	= PrmMassAccountLoad

				Instance Rules
					invoke Create BankStatementReconciliation
						fill in fields from this instance
						invoked.CashManagementGroup				= PrmCashManagementGroup
						invoked.CashManagementAccount			= PrmCashManagementAccount
						invoked.CashCode						= CashCode
						invoked.BankTransactionCode				= BankTransactionCode
						invoked.SystemCode						= CashLedgerTransaction.SourceCode
						invoked.CashLedgerTransaction			= CashLedgerTransaction
						invoked.CashLedgerTransactionIdentifier	= CashLedgerTransaction.CashLedgerTransactionIdentifier
						invoked.LineType						= 2 
						invoked.TransactionNumber				= com.lawson.apps.sharedfinance.base.StringUtils.trimLeadingSpaces(DetailTransactionNumber)
						invoked.TransactionDate					= CashLedgerTransaction.IssueDate
						invoked.TransactionAmount				= IssuedBankAmount
						if (IssuedBankAmount < 0)
							invoked.TransactionAmount           = (IssuedBankAmount * -1)
						else
							invoked.TransactionAmount           = IssuedBankAmount
						invoked.DebitCreditIndicator   	        = DebitCreditIndicator
						invoked.Description						= Description
						invoked.Comment							= CommentText
						invoked.TransactionDataOne				= TransactionData1
						invoked.TransactionDataTwo				= TransactionData2
						invoked.TransactionDataThree			= TransactionData3
						invoked.TransactionDataFour				= TransactionData4
						
					ReconciliationIdentifier	= LocalReconciliationIdentifier.BankStatementReconciliation
				
					if (DetailStatus.Reconciled)
						invoke MarkAsReconciled LocalReconciliationIdentifier.BankStatementReconciliation

		CashLedgerTransactionDetailPurge is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup						is a CashManagementGroup
				PrmCashManagementAccount					is a CashManagementAccount
				PrmDetailPurgeCutoffDate					is Date
			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
				and    CashManagementAccount = PrmCashManagementAccount
				and    CashLedgerTransaction.Status.Reconciled
				and    CashLedgerTransaction.ReconciliationData.ExchangeDate <= PrmDetailPurgeCutoffDate
				and	   first BankStatementReconciliation set.ReconMatchNumber.BankStatement.StatementStatus.Closed)
			Action Rules
				Instance Rules
					invoke PurgeInternal BankStatementReconciliation set
					invoke Purge
			
		Purge is a Purge Action
			restricted
