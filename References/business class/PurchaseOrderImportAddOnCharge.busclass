PurchaseOrderImportAddOnCharge is a BusinessClass
    owned by po
    prefix is CAO
    classic name is POCAOCDTL

    Ontology
        symbolic key is PurchaseOrderImportAddOnCharge

    Patterns
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

    Persistent Fields
    	RunGroup
    	Company							is a PurchasingCompany
    	PurchaseOrderImport     		is like PurchaseOrderImport
			default label is "PurchaseOrder"
		POCode
		PurchaseOrder
		LineNumber
		AddOnCharge
		RecordType						is Numeric 2
			classic name is REC-TYP
			States
				PurchaseOrderSpreadAOC		value is 9
				AddAddOnCharge				value is 10
				UpdateAddOnCharge			value is 12
				CancelAddOnCharge			value is 13
        HasError                         is Boolean
        ErrorMessage                     is Alpha 150
        ResultProcessedBy                is a PurchaseOrderInterfaceResult
        Vendor
        PurchaseFromLocation
            classic name is PURCH-FR-LOC
        AddOnChargePercent
            classic name is AOC-RATE
        EnteredUnitCost               is an InternationalCost
            classic name is ENT-UNIT-CST
        TotalAddOnChargeAmount        is an InternationalAmount
            classic name is TOTAL-AOC
        TaxCode
        Taxable                       is Boolean
            classic name is TAXABLE-FLAG
        PrintOnPO                     is Boolean
            classic name is AOC-ON-PO
        Summarize                     is Boolean
            classic name is SUMMARY-FLAG
        ZeroCost                      is Boolean
            classic name is ZERO-COST-FLG
        Closed
            classic name is CLOSED-FL
        CrossReferenceVendor
            classic name is XREF-VENDOR
        Currency
            classic name is CURRENCY-CODE
        EnteredCurrencyConversionRate
            classic name is ENT-CNV-RATE

	Local Fields
		LocalInterfaceResult            is like PurchaseOrderInterfaceResult
		LocalErrorMessage               is Alpha 150
		LocalFinanceEnterpriseGroup 	is like FinanceEnterpriseGroup 
		
	Context Fields
		ContextPurchaseOrderImport is a PurchaseOrderImport
		
	Derived Fields
		
		NotEligibleToCancelMessage is a MessageField
    		restricted
    		"PurchaseOrderAddOnChargeIsNotEligibleToCancel"
    		
    	NotFoundToCancelMessage is a MessageField
    		restricted
    		"ReferencedPurchaseOrderAddOnChargeCannotBeFoundToCancel"
		
		AlreadyExistsMessage is a MessageField
    		restricted
    		"CannotAddNewPurchaseOrderAddOnCharge;PurchaseOrderAddOnChargeAlreadyExists"
    
    	DuplicateAddOnChargeMessage is a MessageField
    		restricted
    		"CannotProcessAddOnCharge;DuplicateImportAddOnChargesExistForThisPurchaseOrderAndAddOnCharge"

    	CannotUpdateClosedMessage is a MessageField
    		restricted
    		"CannotUpdate;PurchaseOrderIsClosed"
    		
    	NotFoundToUpdateMessage is a MessageField
    		restricted
    		"ReferencedPurchaseOrderAddOnChargeCannotBeFoundToUpdate"
    		
    	CannotSetToClosedMessage is a MessageField
    		restricted
    		"CannotSetHeaderOrLineToClosed;MustProcessToGetToClosedStatus"
    		
    	CannotBeHistoricalMessage is a MessageField
    		restricted
    		"LineOrAddOnChargeCannotBeSetToHistoricalIfHeaderNotSetToHistorical"	
	
	Relations
		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company              = Company
				related.PurchaseOrder        = PurchaseOrder
		
		PurchaseOrderImportRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByRunGroup2
				related.RunGroup            = RunGroup
				related.Company				= Company
				related.PurchaseOrderImport	= PurchaseOrderImport
				related.POCode              = POCode

		POImportRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByPurchaseOrderImport
				related.Company				= Company
				related.PurchaseOrderImport	= PurchaseOrderImport
				related.POCode              = POCode	
		
		InterfaceHeaderIsHistoricalRel
			one-to-many relation to PurchaseOrderImport
			Field Mapping uses ByPurchaseOrderImport
				related.Company              = Company
				related.PurchaseOrderImport  = PurchaseOrderImport
				related.POCode               = POCode
			Instance Selection
				where (related.Closed = "H")
		
		PurchaseOrderImportLineRel
			one-to-many relation to PurchaseOrderImportLine
			Field Mapping uses Set1
				related.Company						= Company
				related.PurchaseOrderImport     	= PurchaseOrderImport
				related.POCode                      = POCode
				related.LineNumber					= LineNumber

		InterfacedPurchaseOrderRel
			one-to-many relation to InterfacedPurchaseOrder
			Field Mapping uses ByImport
				related.Company              = Company
				related.PurchaseOrderImport  = PurchaseOrderImport
				related.POCode               = POCode
		
		LocalInterfaceResultsRel
			one-to-one relation to PurchaseOrderInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.PurchaseOrderInterfaceResult		= LocalInterfaceResult 

		PurchaseOrderAndLineAddOnChargeRel    
			one-to-one relation to PurchaseOrderAndLineAddOnCharge
			Field Mapping uses symbolic key
				related.Company                             = Company
				related.PurchaseOrder                       = PurchaseOrder
				related.PurchaseOrderLine                   = LineNumber
				related.AddOnCharge                         = AddOnCharge
				
		PurchaseOrderSpreadAddOnChargeRel
			one-to-one relation to PurchaseOrderSpreadAddOnCharge
			Field Mapping uses symbolic key
				related.Company                             = Company
				related.PurchaseOrder                       = PurchaseOrder
				related.AddOnCharge                         = AddOnCharge
				
		OtherStandaloneImportLinesRel
        	one-to-many relation to PurchaseOrderImportLine
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
        	Instance Selection
        		where (!related.PurchaseOrderImportExists)
        		
		DuplicateImportAddOnChargesRel
        	one-to-many relation to PurchaseOrderImportAddOnCharge
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
				related.LineNumber          = LineNumber
				related.AddOnCharge         = AddOnCharge
				related.RecordType          = RecordType
			Instance Selection
				where  (related.PurchaseOrderImportAddOnCharge !=PurchaseOrderImportAddOnCharge)    				

        OtherStandaloneImportAddOnChargesRel
        	one-to-many relation to PurchaseOrderImportAddOnCharge
        	Field Mapping uses Set1
        		related.Company          	= Company
        		related.PurchaseOrderImport = PurchaseOrderImport
        		related.POCode              = POCode
        	Instance Selection
        		where (related.Standalone
        		and    related.PurchaseOrderImportAddOnCharge !=PurchaseOrderImportAddOnCharge)

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company
				
    Conditions
    
    	PurchaseOrderImportExists
			restricted
			when (PurchaseOrderImportRel exists)
			
		PurchaseOrderExists
			restricted
			when (PurchaseOrderRel exists)
    	
    	RecordExists
    		when (PurchaseOrderImportAddOnCharge entered)
    
    	SpreadAddOnCharge
    		restricted
    		when (RecordType = 9)
    		
    	NotStandalone
    		restricted
    		when (PurchaseOrderImportRel exists)
    		
    	HeaderAddOnCharge
    		restricted
    		when (LineNumber !entered)
    	
    	HeaderStandalone
    		restricted
    		when (LineNumber !entered
    		and  !PurchaseOrderImportRel exists)
    		
    	LineStandalone
    		restricted
    		when (LineNumber entered
    		and  !PurchaseOrderImportLineRel exists)
    		
    	Standalone
    		restricted
    		when (HeaderStandalone
    		or    LineStandalone)
    	
    	NoOtherStandaloneRecords
			restricted
			when (!OtherStandaloneImportLinesRel exists
			and   !OtherStandaloneImportAddOnChargesRel exists)
    	
    	NoParents
    		restricted
    		when (HeaderStandalone
    		or    LineStandalone)
    		
    	AddOnChargeExists
    		restricted
    		when (PurchaseOrderAndLineAddOnChargeRel exists)
    	
    	SpreadExists
    		restricted
    		when (PurchaseOrderSpreadAddOnChargeRel exists)
    
    	CancelAddOnCharge
    		restricted
    		when (RecordType = 13)
    		
    	ClosedPO
    		restricted
    		when (Closed = "Y")
    		
    	HistoricalPO
    		restricted
    		when (Closed = "H")
    		
    	HeaderIsHistorical
    		restricted
    		when (InterfaceHeaderIsHistoricalRel exists)
    
     	DuplicateAddOnChargeExists
    		restricted
    		when (DuplicateImportAddOnChargesRel exists)
 
    Sets

		Set1
			not indexed
			Sort Order
				Company
				PurchaseOrderImport
				POCode
				LineNumber
				AddOnCharge
				RecordType
				
		ByRunGroup
			Sort Order
				RunGroup
				Company
				PurchaseOrderImport
				POCode
				LineNumber
				AddOnCharge
				RecordType
				
				
	Field Rules
		RunGroup
			default to POImportRel.RunGroup
			default to PurchaseOrderImportLineRel.RunGroup
			required
		
		Company
			initial value is ContextPurchaseOrderImport.Company
			required
			cannot be changed
		PurchaseOrderImport
			initial value is ContextPurchaseOrderImport.PurchaseOrderImport
			required
			cannot be changed
		POCode
			initial value is ContextPurchaseOrderImport.POCode
			cannot be changed
		PurchaseOrder
			if (InterfacedPurchaseOrderRel exists
			and !PurchaseOrderImportExists)
        		PurchaseOrder = InterfacedPurchaseOrderRel.PurchaseOrder
		LineNumber
			cannot be changed
		AddOnCharge
			required
			cannot be changed
		
		RecordType
			if (PurchaseOrderImportRel.PurchaseOrderImportRecordType = 1)
				constraint (RecordType = 9
				or          RecordType = 10)
					"RecordTypeMustBeAddOrSpreadAOCIfPurchaseOrderRecordTypeIsAdd"
			else
			if (PurchaseOrderImportLineRel.RecordType = 2) 
				constraint (RecordType = 9
				or          RecordType = 10)
					"RecordTypeMustBeAddOrSpreadAOCIfPurchaseOrderLineRecordTypeIsAdd"
			required
			cannot be changed

	Actions
		Create is a Create Action
		CreateNoRules is a Create Action
			restricted
			bypass field rules
		Update is an Update Action
		
		FastUpdate is an Update Action
			restricted
			bypass field rules
			
		Delete is a Delete Action

			Entrance Rules
			
				if (Standalone
				and PurchaseOrder entered
				and NoOtherStandaloneRecords)
					invoke UpdateFromInterface PurchaseOrderRel
						invoked.SetInterfaceInProcessFalse   = true

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
			
		MassDelete is a Set Action
			restricted
			Parameters
				PrmRunGroup                 is a RunGroup
					default label is "RunGroup"
					
			Instance Selection
				where (PrmRunGroup !entered
				or     RunGroup = PrmRunGroup)
				
			Sort Order
				RunGroup
				Company	
				PurchaseOrderImport
				
			Action Rules
			
				Instance Rules
				
					invoke Delete
		
		UpdateRunGroup is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmRunGroup					is a RunGroup
				NewRunGroup					is a RunGroup

			Instance Selection
				where (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    RunGroup = PrmRunGroup)
				
			Sort Order
				RunGroup
				Company
			
			Action Rules
				Instance Rules
					RunGroup   = NewRunGroup

		LoadInterfacedSpreadOrStandaloneAddOnCharges is a Set Action    
			restricted
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmRunGroup					is a RunGroup
				PrmCompany                  is a PurchasingCompany
				PrmResult                   is like PurchaseOrderInterfaceResult
				PrmSpecificAction           is Numeric 1
					States
						Create              value is 1
						Update              value is 2
						Cancel              value is 3
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
					
			Local Fields
				LocalPurchaseOrder 				is like PurchaseOrder
				LocalPurchaseOrderRecordInError is Boolean
			
			Instance Selection			
				where  (RunGroup		= PrmRunGroup
				and    (NoParents
				or     	RecordType  = 9
				or      HeaderAddOnCharge)
				and   ((PrmCompany  not entered
				and     GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
				or      Company		= PrmCompany))
				
			Sort Order
				RunGroup
				Company	
				PurchaseOrderImport
				POCode
				
			Action Rules
				Empty Set Rules
				
					invoke FinishLoadInterface PurchaseOrderImport
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup 
						invoked.PrmRunGroup  				= PrmRunGroup
						invoked.PrmCompany   				= PrmCompany
						invoked.PrmResult    				= PrmResult
						invoked.PrmSpecificAction 			= PrmSpecificAction
					
				RunGroup Set Rules
					Exit Rules
						
						invoke FinishLoadInterface PurchaseOrderImport
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup 
							invoked.PrmRunGroup  				= PrmRunGroup
							invoked.PrmCompany   				= PrmCompany
							invoked.PrmResult    				= PrmResult
							invoked.PrmSpecificAction 			= PrmSpecificAction
			
				POCode Set Rules
					
					Entrance Rules
						if (PurchaseOrderImportExists)
							LocalPurchaseOrder = PurchaseOrderImportRel.PurchaseOrder
						
						LocalPurchaseOrderRecordInError = PurchaseOrderImportRel.RecordInError
						
				Instance Rules
					LocalInterfaceResult       	= PrmResult
					LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
					
					if (InterfacedPurchaseOrderRel exists
					and !PurchaseOrderImportExists)
		        		PurchaseOrder = InterfacedPurchaseOrderRel.PurchaseOrder
					
					if (PurchaseOrderExists) 
						LocalPurchaseOrder = PurchaseOrder
						invoke UpdateFromInterface PurchaseOrderRel
							invoked.SetUpdateInProcessTrue  	= true
							invoked.PrmOriginatingInterfaceRun  = PrmResult
					
					if ((PurchaseOrderImportExists
					and  LocalPurchaseOrderRecordInError = false)
					or (!PurchaseOrderImportExists
					and (HasError = false
					or   LocalInterfaceResultsRel.IncludePurchaseOrdersInError)))
						initialize ErrorMessage
						HasError 	= false
						if  (RecordType.AddAddOnCharge
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 1))
							if (ClosedPO)
								HasError			  = true
								LocalErrorMessage 	  = CannotSetToClosedMessage
							else 
							if (HistoricalPO
							and !HeaderIsHistorical)
								HasError		   = true
								LocalErrorMessage  = CannotBeHistoricalMessage
							else
							if (DuplicateAddOnChargeExists)
								HasError           = true
								LocalErrorMessage  = DuplicateAddOnChargeMessage
							else
							if (!AddOnChargeExists)
								invoke CreatePurchaseOrderAddOnCharge PurchaseOrderAndLineAddOnCharge
									resume on error
										HasError    		= true
										LocalErrorMessage	= error message
									fill in fields from this instance
									invoked.PurchaseOrder      		= LocalPurchaseOrder
									invoked.PurchaseOrderLine       = LineNumber
									if (HistoricalPO
									or  HeaderIsHistorical)
										invoked.Closed = "H"
							else
							if (AddOnChargeExists)
								HasError           = true
								LocalErrorMessage  = AlreadyExistsMessage
							if (NoParents)
								ResultProcessedBy = PrmResult
						else
						if  (RecordType.UpdateAddOnCharge
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 2))
							if (AddOnChargeExists
							and (PurchaseOrderRel.IsClosed = false
							or  Company.ReopenPurchaseOrder))
								invoke Update PurchaseOrderAndLineAddOnChargeRel
									resume on error
										HasError    		= true
										LocalErrorMessage	= error message
									fill in fields from this instance
							else
							if (PurchaseOrderRel.IsClosed
							and Company.ReopenPurchaseOrder = false)
								HasError	        = true
								LocalErrorMessage   = CannotUpdateClosedMessage
							else
							if (!AddOnChargeExists)
								HasError            = true
							    LocalErrorMessage   = NotFoundToUpdateMessage
						else
						if  (RecordType.CancelAddOnCharge
						and (PrmSpecificAction = 0
						or   PrmSpecificAction = 3))
							if (AddOnChargeExists
							and PurchaseOrderAndLineAddOnChargeRel.IsCancelAllowed)
								invoke CancelPurchaseOrderAddOnCharge PurchaseOrderAndLineAddOnChargeRel
									resume on error
										HasError    		= true
										LocalErrorMessage	= error message
									fill in fields from this instance
							else
							if (!AddOnChargeExists)
								HasError    		= true
								LocalErrorMessage 	= NotFoundToCancelMessage
							else
							if (PurchaseOrderAndLineAddOnChargeRel.IsCancelAllowed = false)
								HasError            = true
								LocalErrorMessage   = NotEligibleToCancelMessage
						else
						if (RecordType.PurchaseOrderSpreadAOC)
							if (!SpreadExists)
								invoke Create PurchaseOrderSpreadAddOnCharge
									resume on error
										HasError    		= true
										LocalErrorMessage	= error message
									fill in fields from this instance
									invoked.PurchaseOrder 	= LocalPurchaseOrder
									invoked.EnteredAddOnChargeAmount = TotalAddOnChargeAmount
							else
							if (SpreadExists)
								HasError    		= true
								LocalErrorMessage 	= AlreadyExistsMessage
						if (HasError)
							if (NoParents)
								ResultProcessedBy = PrmResult
							if (PurchaseOrderImportRel exists)
								invoke SetError PurchaseOrderImportRel
									invoked.PrmErrorMessage = LocalErrorMessage
									invoked.PrmResult       = PrmResult
									if (RecordType.PurchaseOrderSpreadAOC)
										invoked.PrmErrorLevel   = 4
									else
									if (LineNumber = 0)
										invoked.PrmErrorLevel   = 3
									else
										invoked.PrmErrorLevel   = 5
							else
								ErrorMessage				= LocalErrorMessage
						else
						if (!HasError)
							if ((PrmSpecificAction = 0)
							or (RecordType.PurchaseOrderSpreadAOC)
							or (RecordType.UpdateAddOnCharge
							or  PrmSpecificAction = 2)
							or (RecordType.AddAddOnCharge
							and PrmSpecificAction = 1)
							or (RecordType.CancelAddOnCharge
							and PrmSpecificAction = 1))	
								if (PurchaseOrder entered)
									invoke UpdateFromInterface PurchaseOrderRel
										invoked.SetInterfaceInProcessFalse   = true
										if (LocalInterfaceResultsRel.ReleasePurchaseOrders)
											invoked.ReleasePurchaseOrder = true	
								
								invoke FastDelete
								
		FinishLoadInterfaceAddOnCharges is a Set Action
			restricted
			Parameters 
				PrmFinanceEnterpriseGroup 	is like FinanceEnterpriseGroup 
				PrmRunGroup             	is a RunGroup
				PrmCompany              	is a Company
				PrmResult               	is like PurchaseOrderInterfaceResult
				PrmSpecificAction           is Numeric 1
					States
						Create              value is 1
						Update              value is 2
						Cancel              value is 3
						       
			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
					
			Instance Selection
				where (RunGroup = PrmRunGroup
				and    Standalone 
				and   ((PrmCompany not entered
				and    GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
				or     Company  = PrmCompany))
				
			Sort Order
				RunGroup
				Company
				
			Action Rules
				Empty Set Rules
					
					LocalInterfaceResult       	= PrmResult
					LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup 
						
					invoke Finish LocalInterfaceResultsRel
				
				RunGroup Set Rules
								
					Exit Rules
						LocalFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup 
						LocalInterfaceResult       		= PrmResult
						invoke Finish LocalInterfaceResultsRel
							
				Instance Rules
					LocalInterfaceResult = PrmResult
					if (!HasError)
						if ((PrmSpecificAction = 0)
						or  (RecordType.UpdateAddOnCharge
						and  PrmSpecificAction = 2)
						or ((RecordType.AddAddOnCharge
						or   RecordType.PurchaseOrderSpreadAOC)
						and  PrmSpecificAction = 1)
						or  (RecordType.CancelAddOnCharge
						and  PrmSpecificAction = 3))
							invoke UpdateFromInterface PurchaseOrderRel
								invoked.SetInterfaceInProcessFalse   = true
								if (LocalInterfaceResultsRel.ReleasePurchaseOrders)
									invoked.ReleasePurchaseOrder = true
							


		
