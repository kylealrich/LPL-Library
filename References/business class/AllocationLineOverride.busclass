AllocationLineOverride is a BusinessClass
    owned by Allocations
    prefix is ALLIO

    Ontology
    	symbolic key is AllocationLineOverride

    Persistent Fields
		AccountingEntity
		AccountingUnit
		GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
		Project
		FinanceDimension1
		FinanceDimension2
		FinanceDimension3
		FinanceDimension4
		FinanceDimension5
		FinanceDimension6
		FinanceDimension7
		FinanceDimension8
		FinanceDimension9
		FinanceDimension10
		Weight					is Decimal 31.4 
        WeightDecimal           is a AllocationWeightDecimal
            default label is "Weight"
		Direction				is Numeric 1
			States
				From			value is 0
				To				value is 1
		
		TreatBlankAccountAsEmpty			is Boolean
		TreatBlankAccountingUnitAsEmpty		is Boolean
		TreatBlankProjectAsEmpty			is Boolean
		TreatBlankDimension1AsEmpty			is Boolean
		TreatBlankDimension2AsEmpty			is Boolean
		TreatBlankDimension3AsEmpty			is Boolean
		TreatBlankDimension4AsEmpty			is Boolean
		TreatBlankDimension5AsEmpty			is Boolean
		TreatBlankDimension6AsEmpty			is Boolean
		TreatBlankDimension7AsEmpty			is Boolean
		TreatBlankDimension8AsEmpty			is Boolean
		TreatBlankDimension9AsEmpty			is Boolean
		TreatBlankDimension10AsEmpty		is Boolean
		
	Context Fields
		AllocationContext
	
	Sets
		ByDirection
			Sort Order
				FinanceEnterpriseGroup
				AllocationControl
				Allocation
				AllocationLine	
				Direction
				AllocationLineOverride
				GeneralLedgerCalendarPeriod
		    		
    Relations
    	OverridesRel
    		one-to-many relation to AllocationLineOverride
    		Field Mapping uses ByDirection
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.AllocationControl		= AllocationControl
    			related.Allocation				= Allocation
    			related.AllocationLine			= AllocationLine
    			related.Direction				= Direction
    		Instance Selection
    			where (related.GeneralLedgerCalendarPeriod = blank)

    	OtherOverridesRel
    		one-to-many relation to AllocationLineOverride
    		Field Mapping uses ByDirection
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.AllocationControl		= AllocationControl
    			related.Allocation				= Allocation
    			related.AllocationLine			= AllocationLine
    			related.Direction				= Direction
    		Instance Selection
    			where (related.GeneralLedgerCalendarPeriod = blank
    			and related.AllocationLineOverride != AllocationLineOverride)

		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup   = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity        = AccountingEntity

	Conditions
        ActiveOneDimensionOverride
            restricted
            when ((AccountingEntity not entered or AccountingEntity.Status.Active)
            and   (AccountingUnit not entered or AccountingUnit.Active)
            and   (GeneralLedgerChartAccount not entered or GeneralLedgerChartAccount.Active)
            and   (Project not entered or Project.Active)
            and   (FinanceDimension1 not entered or FinanceDimension1.Active)
            and   (FinanceDimension2 not entered or FinanceDimension2.Active)
            and   (FinanceDimension3 not entered or FinanceDimension3.Active)
            and   (FinanceDimension4 not entered or FinanceDimension4.Active)
            and   (FinanceDimension5 not entered or FinanceDimension5.Active)
            and   (FinanceDimension6 not entered or FinanceDimension6.Active)
            and   (FinanceDimension7 not entered or FinanceDimension7.Active)
            and   (FinanceDimension8 not entered or FinanceDimension8.Active)
            and   (FinanceDimension9 not entered or FinanceDimension9.Active)
            and   (FinanceDimension10 not entered or FinanceDimension10.Active))

        AccountingEntitySecurityGroupAllowsAccess
            restricted
            when (AccountingEntity not entered 
            or    AccountingEntity.AccountingEntitySecurityGroupAllowsAccess)

		AccountingUnitConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.AccountingUnitSelected
			and   not FinanceEnterpriseGroup.AccountingUnitRequired)
		
		ProjectConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.ProjectEntry
			and   not FinanceEnterpriseGroup.ProjectRequired)
		
		FinanceDimension1ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension1Entry
			and   not FinanceEnterpriseGroup.FinanceDimension1Required)
		
		FinanceDimension2ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension2Entry
			and   not FinanceEnterpriseGroup.FinanceDimension2Required)
		
		FinanceDimension3ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension3Entry
			and   not FinanceEnterpriseGroup.FinanceDimension3Required)
			
		FinanceDimension4ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension4Entry
			and   not FinanceEnterpriseGroup.FinanceDimension4Required)
			
		FinanceDimension5ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension5Entry
			and   not FinanceEnterpriseGroup.FinanceDimension5Required)
			
		FinanceDimension6ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension6Entry
			and   not FinanceEnterpriseGroup.FinanceDimension6Required)
			
		FinanceDimension7ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension7Entry
			and   not FinanceEnterpriseGroup.FinanceDimension7Required)
			
		FinanceDimension8ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension8Entry
			and   not FinanceEnterpriseGroup.FinanceDimension8Required)
			
		FinanceDimension9ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension9Entry
			and   not FinanceEnterpriseGroup.FinanceDimension9Required)
			
		FinanceDimension10ConfiguredButNotRequired
			restricted
			when (FinanceEnterpriseGroup.FinanceDimension10Entry
			and   not FinanceEnterpriseGroup.FinanceDimension10Required)

		ManualFromSplit
			restricted
			when (AllocationLine.FromMultipleDimensionCompute not entered
			and   AllocationLine.FromSplit)
			
		ManualToSplit
			restricted
			when (AllocationLine.ToMultipleDimensionCompute not entered
			and   AllocationLine.ToSplit)
			
		SecurityGroupAllowsAccess
			when (actor.context.AccountingEntitySecurityGroup = blank
			or   (AccountingEntitySecurityGroupMemberRel exists))
		
		IsDimensionChanged
			restricted
			when (not AllocationLineOverride = DimensionCode)
			
	Derived Fields
				
        DimensionCode        is a StringField
            type is Alpha 105
            restricted
            AccountingEntity.DerivedSequenceNumber
            AccountingUnit.DerivedSequenceNumber
            GeneralLedgerChartAccount.DerivedSequenceNumber
            Project.DerivedSequenceNumber
			FinanceDimension1.DerivedSequenceNumber
			FinanceDimension2.DerivedSequenceNumber
			FinanceDimension3.DerivedSequenceNumber
			FinanceDimension4.DerivedSequenceNumber
			FinanceDimension5.DerivedSequenceNumber
			FinanceDimension6.DerivedSequenceNumber
			FinanceDimension7.DerivedSequenceNumber
			FinanceDimension8.DerivedSequenceNumber
			FinanceDimension9.DerivedSequenceNumber
			FinanceDimension10.DerivedSequenceNumber
			DerivedSequenceNumber
			
		DerivedSequenceNumber	is a DerivedField
			type is AlphaRight 7
			restricted
			return DerivedAlphaSequence[2:8]
		DerivedAlphaSequence	is a DerivedField
			type is AlphaRight 8
			restricted
			return (10000000 + Direction)
			
		Percent is a DerivedField
			type is Percent size 14.10
			if (AllocationLineOverride != last OverridesRel.AllocationLineOverride)
				return WeightDecimal/(sum OverridesRel.WeightDecimal)
			else
				return 1.0 - (sum OtherOverridesRel.Percent)
			
	Field Rules
		Direction
			cannot be changed
        WeightDecimal
            initial value is 1.0
            default to 1.0
            if (not AllocationLine.AllowNegativeWeights)
				constraint (WeightDecimal>0.0)
					"WeightMustBePositive"
            required

		AccountingUnit
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.AccountingUnitOverrideRequired
				or   AllocationLine.AccountingUnitSummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.AccountingUnit entered or AllocationLine.TreatBlankFromAccountingUnitAsEmpty)) 
					or   (Direction.To 
					and not (AllocationLine.ToOverride.AccountingUnit entered or AllocationLine.TreatBlankToAccountingUnitAsEmpty)))
					and not TreatBlankAccountingUnitAsEmpty) 
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.AccountingUnitLabel>"
				if (AccountingUnit entered)
					initialize TreatBlankAccountingUnitAsEmpty
		GeneralLedgerChartAccount
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.AccountOverrideRequired
				or   AllocationLine.AccountSummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.GeneralLedgerChartAccount entered or AllocationLine.TreatBlankFromAccountAsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.GeneralLedgerChartAccount entered or AllocationLine.TreatBlankToAccountAsEmpty)))
					and not TreatBlankAccountAsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.AccountLabel>"
				if (GeneralLedgerChartAccount entered)
					initialize TreatBlankAccountAsEmpty
		Project
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.ProjectOverrideRequired
				or   AllocationLine.ProjectSummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.Project entered or AllocationLine.TreatBlankFromProjectAsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.Project entered or AllocationLine.TreatBlankToProjectAsEmpty)))
					and not TreatBlankProjectAsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.ProjectLabel>"
				if (Project entered)
					initialize TreatBlankProjectAsEmpty
		FinanceDimension1
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension1OverrideRequired
				or   AllocationLine.FinanceDimension1SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension1 entered or AllocationLine.TreatBlankFromDimension1AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension1 entered or AllocationLine.TreatBlankToDimension1AsEmpty)))
					and not TreatBlankDimension1AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension1Label>"
				if (FinanceDimension1 entered)
					initialize TreatBlankDimension1AsEmpty
		FinanceDimension2
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension2OverrideRequired
				or   AllocationLine.FinanceDimension2SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension2 entered or AllocationLine.TreatBlankFromDimension2AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension2 entered or AllocationLine.TreatBlankToDimension2AsEmpty)))
					and not TreatBlankDimension2AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension2Label>"
				if (FinanceDimension2 entered)
					initialize TreatBlankDimension2AsEmpty
		FinanceDimension3
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension3OverrideRequired
				or   AllocationLine.FinanceDimension3SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension3 entered or AllocationLine.TreatBlankFromDimension3AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension3 entered or AllocationLine.TreatBlankToDimension3AsEmpty)))
					and not TreatBlankDimension3AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension3Label>"
				if (FinanceDimension3 entered)
					initialize TreatBlankDimension3AsEmpty
		FinanceDimension4
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension4OverrideRequired
				or   AllocationLine.FinanceDimension4SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension4 entered or AllocationLine.TreatBlankFromDimension4AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension4 entered or AllocationLine.TreatBlankToDimension4AsEmpty)))
					and not TreatBlankDimension4AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension4Label>"
				if (FinanceDimension4 entered)
					initialize TreatBlankDimension4AsEmpty
		FinanceDimension5
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension5OverrideRequired
				or   AllocationLine.FinanceDimension5SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension5 entered or AllocationLine.TreatBlankFromDimension5AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension5 entered or AllocationLine.TreatBlankToDimension5AsEmpty)))
					and not TreatBlankDimension5AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension5Label>"
				if (FinanceDimension5 entered)
					initialize TreatBlankDimension5AsEmpty
		FinanceDimension6
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension6OverrideRequired
				or   AllocationLine.FinanceDimension6SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension6 entered or AllocationLine.TreatBlankFromDimension6AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension6 entered or AllocationLine.TreatBlankToDimension6AsEmpty)))
					and not TreatBlankDimension6AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension6Label>"
				if (FinanceDimension6 entered)
					initialize TreatBlankDimension6AsEmpty
		FinanceDimension7
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension7OverrideRequired
				or   AllocationLine.FinanceDimension7SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension7 entered or AllocationLine.TreatBlankFromDimension7AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension7 entered or AllocationLine.TreatBlankToDimension7AsEmpty)))
					and not TreatBlankDimension7AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension7Label>"
				if (FinanceDimension7 entered)
					initialize TreatBlankDimension7AsEmpty
		FinanceDimension8
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension8OverrideRequired
				or   AllocationLine.FinanceDimension8SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension8 entered or AllocationLine.TreatBlankFromDimension8AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension8 entered or AllocationLine.TreatBlankToDimension8AsEmpty)))
					and not TreatBlankDimension8AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension8Label>"
				if (FinanceDimension8 entered)
					initialize TreatBlankDimension8AsEmpty
		FinanceDimension9
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension9OverrideRequired
				or   AllocationLine.FinanceDimension9SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension9 entered or AllocationLine.TreatBlankFromDimension9AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension9 entered or AllocationLine.TreatBlankToDimension9AsEmpty)))
					and not TreatBlankDimension9AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension9Label>"
				if (FinanceDimension9 entered)
					initialize TreatBlankDimension9AsEmpty
		FinanceDimension10
			if (action type.Create)
				if (not AllocationControl.AllocationSourceSystem.TransferPricing
				and (AllocationLine.FinanceDimension10OverrideRequired
				or   AllocationLine.FinanceDimension10SummaryOrNodeOverrideRequired))
					if (((Direction.From 
					and not (AllocationLine.FromOverride.FinanceDimension10 entered or AllocationLine.TreatBlankFromDimension10AsEmpty))
					or  (Direction.To 
					and not (AllocationLine.ToOverride.FinanceDimension10 entered or AllocationLine.TreatBlankToDimension10AsEmpty)))
					and not TreatBlankDimension10AsEmpty)
						required
							"MustEnterOverrideFor<FinanceEnterpriseGroup.FinanceDimension10Label>"
				if (FinanceDimension10 entered)
					initialize TreatBlankDimension10AsEmpty

	Rule Blocks
		CheckLine
			if (not AllocationLine.UseOverrideForCompute)
				if (Direction.From)
					constraint (AllocationLine.FromOverrideSummary not entered
					and not AllocationLine.HasFromGroupOverrides
					and not AllocationLine.HasFromWeightCompute)
						"SummaryOverride,GroupOverride,OrSummary/groupWeightComputeExists;CannotSpecifyManualOverrides."
					
				if (Direction.To)
					constraint (AllocationLine.ToOverrideSummary not entered
					and not AllocationLine.HasToGroupOverrides
					and not AllocationLine.HasToWeightCompute)
						"SummaryOverride,GroupOverride,OrSummary/groupWeightComputeExists;CannotSpecifyManualOverrides."

	Create Rules
		include CheckLine
		AllocationLineOverride  = DimensionCode
		
	Actions
 		Create is a Create Action
			Entrance Rules
				Direction = Direction.To
			
		CreateFrom is a Create Action
			default label is "Create"
			Entrance Rules
				Direction = Direction.From

    	Update is an Update Action
		    Local Fields
				LocalAllocationLineOverrideView is a AllocationLineOverride view
				
			Field Rules

    		Entrance Rules
    			include CheckLine
    			
    		Action Rules
				if (IsDimensionChanged)
					if (Direction.To)
				        invoke Create AllocationLineOverride
							assign result to LocalAllocationLineOverrideView
				            fill in fields from this instance
				            invoked.AllocationLineOverride 	=	DimensionCode
			    	else
				        invoke CreateFrom AllocationLineOverride
							assign result to LocalAllocationLineOverrideView
				            fill in fields from this instance
				            invoked.AllocationLineOverride 	=	DimensionCode
		    
			Exit Rules   
			    if (IsDimensionChanged)
			        invoke Delete
	        		AllocationLineOverride = LocalAllocationLineOverrideView
	        	
    	Delete is a Delete Action

		DeleteWeight is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				initialize Weight
                initialize WeightDecimal

        UpdateWeightDecimal is a Set Action
            restricted
            Instance Selection
                where (Weight entered and WeightDecimal not entered)
            
            Action Rules
                Instance Rules
                    WeightDecimal = Weight
