UserNotification is a BusinessClass
    owned by la
    prefix is UNOT
	disable data area copy
	
    Ontology
    	symbolic key is UserNotification

    Patterns
    	disable AsOfDateProcessing

        
    Persistent Fields
    	Actor
    	Description 				is Alpha size 100
    	Details						is Text
    	SourceType					is Numeric size 1
    		States
    			Document 		value is 1
    			ProcessFlow 	value is 2
    				default label is "ProcessAutomation"
    			PersonalWatch	value is 3
    			AsyncAction		value is 4  
    			ActionRequest   value is 5 
    			Navigation		value is 6
    			NewWebApp		value is 7
    				default label is "NewApplication"
    			LinkBack		value is 8
				Message			value is 9
    	Status						is Numeric size 1
    		States
    			Unread				value is 0
    			Read				value is 1
		Priority					is a NotificationPriority
		SourceObject				is BusinessObjectReference	
    	MimeType					is MimeType
    		default label is "MIME_Type"
    	AsyncID						is UniqueID
    	NavigationName				is LPLName
    	LinkBackURL					is Text
    	LinkBackURLText			    is Text
    	
	Transient Fields
		SuppressIon is Boolean     	
			default label is "Suppress_ION"

	Local Fields
		LocalDaysForRounding is Numeric 3

	Field Rules
		Actor
			initial value is actor
			default to actor
		
		Description
			required
			
		SourceType
			required	
					
		SourceObject
			if (not SourceType.Message and not SourceType.AsyncAction and not SourceType.ActionRequest and not SourceType.NewWebApp and not SourceType.LinkBack)
				required	
								
		Priority
			default to 5	
			
		MimeType
			if (SourceType.Document)
				required	
				
		NavigationName
			if (SourceType.Navigation or SourceType.NewWebApp)
				required				
	
		LinkBackURL
			if (SourceType.LinkBack)
				required	
	
	Derived Fields
		NotificationIcon is a DerivedField
			type is BinaryDocument
			if (SourceType.ProcessFlow)
				return icon.frameworkGenericWorkUnits
			if (SourceType.ActionRequest)
				return icon.frameworkGenericAction
			if (SourceType.Document)
				return icon.frameworkGenericFolder
			if (SourceType.Message)
				return icon.frameworkGenericForm	
			if (SourceType.Navigation)
				return icon.frameworkGenericQueues
			if (SourceType.LinkBack)
				return icon.frameworkGenericQueues
			if (SourceType.NewWebApp)
				return icon.frameworkGenericStar
			if (SourceType.AsyncAction)
				return icon.frameworkGenericRequests
			return icon.frameworkGenericWorkUnits

		NeedsActionAlertDisplay is a MessageField
			"NeedsAction"
			
		SendToION is a NativeField
			type is Boolean
			restricted
			
		NumberUnreadForActor is a ComputeField 
    		type is Numeric 10
    		default label is "NumberOfUnreadNotificationsForActor"
    		(instance count of UnreadNotifications)

		CurrentDateGMT is a DerivedField
			type is Date
			return current date

		CreateDateGMT is a DerivedField
			type is Date 
			return create stamp

		NotificationDaysOld is a DerivedField
			type is Numeric 3
			return (CurrentDateGMT - CreateDateGMT)

		NotificationWeeksOld is a DerivedField
			type is Numeric 3
			LocalDaysForRounding = NotificationDaysOld % 7
			return ((NotificationDaysOld - LocalDaysForRounding) / 7)

		NotificationMonthsOld is a DerivedField
			type is Numeric 3
			LocalDaysForRounding = NotificationDaysOld % 30
			return ((NotificationDaysOld - LocalDaysForRounding) / 30)

		NotificationYearOld is a DerivedField
			type is Numeric 3
			LocalDaysForRounding = NotificationDaysOld % 365
			return ((NotificationDaysOld - LocalDaysForRounding) / 365)

		TodayMF is a MessageField
			"Today"

		YesterdayMF is a MessageField
			"Yesterday"

		NotificationDaysAgoMF is a MessageField
			"<NotificationDaysOld>_days"

		NotificationWeeksAgoMF is a MessageField
			"<NotificationWeeksOld>_weeks"

		NotificationMonthsAgoMF is a MessageField
			"<NotificationMonthsOld>_month\(\s\)"

		DaysAgoExceedsMaxMF is a MessageField
			"Older"

		DaysAgo is a ConditionalField
			type is Alpha 50
			if (NotificationDaysOld = 0)
				TodayMF
			else
			if (NotificationDaysOld = 1)
				YesterdayMF
			else
			if (NotificationDaysOld < 14)
				NotificationDaysAgoMF
			else
			if (NotificationDaysOld < 62)
				NotificationWeeksAgoMF
			else
			if (NotificationDaysOld < 365)
				NotificationMonthsAgoMF
			else
				DaysAgoExceedsMaxMF

	Conditions
		NotificationToday
			default label is untranslatable
			when (NotificationDaysOld = 0)

		HighPriority
			default label is untranslatable
			when (Priority.High or Priority.ExtremelyHigh)

		HasAsyncID
			default label is "AsyncIDEntered"
    		when (AsyncID entered)

		HasUnreadNotifications
			default label is "UnreadNotifications"
			when (UnreadNotifications exists)
			
		HasLargeUnreadNotificationsForActor
			restricted
			default label is "UnreadNotifications"
			when (NumberUnreadForActor > 500)			
			
		IsDocumentOrMessage
			default label is "DocumentOrMessage"
			when (SourceType.Document or SourceType.Message)
			
		HasUnreadDocumentOrMessage
			default label is "UnreadDocumentOrMessage"
			when (Status.Unread and (SourceType.Document or SourceType.Message))
    		
		RecentlyUpdatedNotifications
			restricted
			when (update stamp > (system current timestamp - 10 days))

		ShowNotificationInUI
			when (session.key.AllowMobileWorkflow = "true"
			or    SourceType.Document 
			or    SourceType.Message
			or    SourceType.NewWebApp)

		IsActionRequest
			default label is "ActionRequest"
			when (SourceType.ActionRequest)

		ActionRequestInProcess
			when (IsActionRequest
			and   SourceObject(ActionRequest).Status.InProcess)
			
		IsProcessFlow
			default label is "ProcessFlow"
			when (SourceType.ProcessFlow)

		ProcessFlowInProcess
			when (IsProcessFlow
			and   SourceObject(PfiQueueTask).IsCurrentActionWaitingSnapshot
			and   SourceObject(PfiQueueTask).IsValidFilter)	

		UserNotificationNeedsAction
			when (ActionRequestInProcess
			or    ProcessFlowInProcess)

		CanSendToION
			restricted
			when ((not SuppressIon) and SendToION)

	Relations
		UnreadNotifications
			one-to-many relation to UserNotification
			Field Mapping uses ByActorUnread
				related.Actor = actor

	Actions
		Create is a Create Action
			restricted
			
			Exit Rules
				if (CanSendToION)
					invoke SendNotificationToIOn




		CreateMessage is a Create Action
			default label is "SendMessageNotification"
			
			Parameters
				ParamActor 			is an Actor
					default label is "To"
				ParamPriority 		is a NotificationPriority
					default label is "Priority"
				ParamDescription	is Alpha size 100
					default label is "Description"
				ParamDetails		is Text
					default label is "Details"

			Parameter Rules
				ParamPriority
					initial value is 5					
			
			Action Rules
				invoke Create this instance
					invoked.SourceType 	= 9 
					invoked.Actor		= ParamActor
					invoked.Priority	= ParamPriority
					invoked.Description = ParamDescription
					invoked.Details 	= ParamDetails
				
		Redirect is an Update Action 
		Update is an Update Action
		View is an Update Action 
		
		RedirectTwo is an Instance Action
		
		SendNotificationToIOn is an Instance Action
			default label is "SendNotificationToION"
			valid when (CanSendToION)
			restricted

		
		SendEmail is an Instance Action
			valid when (SourceType.Message)
			Parameters
				From is an EmailAddress
				To is an MultipleEmailAddress
				AdditonalComment is Text
					default label is "AdditionalComment"
			Action Rules
				send email
                	to		To
                	from	From
                	subject	"<Description>"
                	Contents
                		if (AdditonalComment entered)
                			"<AdditonalComment>"
                		"<Details>"  
		
		MarkAsRead is an Instance Action
			valid when (Status.Unread)
			completion message is "NotificationMarkedAsRead"
			Action Rules
				Status = Status.Read
				
		MarkAsUnread is an Instance Action
			valid when (Status.Read)
			completion message is "NotificationMarkedAsUnread"
			Action Rules
				Status = Status.Unread	
				
		Delete is a Delete Action	
		
		Purge is a Purge Action
		
		PurgeMyReadNotifications is a Set Action
			Parameters
				ThruDate 			is Date
				PurgeOffsetDays 	is Numeric size 3
				PhysicallyDelete 	is Boolean
			
			Local Fields
				LocalThruDate 	is Date
					value is ThruDate


			Parameter Rules
				ThruDate
					if (ThruDate entered)
						LocalThruDate = (ThruDate + 1 day)
					else	 
					if (not PurgeOffsetDays entered)
						required	
							"MustEnterThruDateOrOffset"
					else
						LocalThruDate  = current date - (PurgeOffsetDays - 1)
			
				PurgeOffsetDays
					constraint (not ThruDate entered)
						"CannotEnterBothThruDateAndOffset"

			Instance Selection
				where (Actor = actor
				and    Status.Read
				and    create stamp < LocalThruDate)

			Sort Order 
				Actor
				Status
				create stamp
							
			Action Rules

				Instance Rules
					if (PhysicallyDelete)
						invoke Purge
					else
						invoke Delete
		
		PurgeNotifications is a Set Action
			Parameters
				ThruDate 			is Date
				PurgeOffsetDays 	is Numeric size 3
				IncludeUnread		is Boolean
				PhysicallyDelete 	is Boolean
			
			Local Fields
				LocalThruDate 	is Date
					value is ThruDate


			Parameter Rules
				ThruDate
					if (ThruDate entered)
						LocalThruDate = (ThruDate + 1 day)
					else	 
					if (not PurgeOffsetDays entered)
						required	
							"MustEnterThruDateOrOffset"
					else
						LocalThruDate  = current date - (PurgeOffsetDays - 1)
			
				PurgeOffsetDays
					constraint (not ThruDate entered)
						"CannotEnterBothThruDateAndOffset"

				IncludeUnread
					if (IncludeUnread)
						confirmation required
							"UnreadMessagesMayNotHaveBeenActedUpon.AreYouSureYouWantToIncludeUnreadMessages?"
						
			Instance Selection
				where (create stamp < LocalThruDate
				and   (Status.Read
				or     IncludeUnread))

			Sort Order 
				create stamp
				Status
							
			Action Rules

				Instance Rules
					if (PhysicallyDelete)
						invoke Purge
					else
						invoke Delete
						
		PurgeNotificationsWithDeleted is a Set Action
			Parameters
				ThruDate 			is Date
				PurgeOffsetDays 	is Numeric size 3
				IncludeUnread		is Boolean
			
			Local Fields
				LocalThruDate 	is Date
					value is ThruDate


			Parameter Rules
				ThruDate
					if (ThruDate entered)
						LocalThruDate = (ThruDate + 1 day)
					else	 
					if (not PurgeOffsetDays entered)
						required	
							"MustEnterThruDateOrOffset"
					else
						LocalThruDate  = current date - (PurgeOffsetDays - 1)
			
				PurgeOffsetDays
					constraint (not ThruDate entered)
						"CannotEnterBothThruDateAndOffset"

				IncludeUnread
					if (IncludeUnread)
						confirmation required
							"UnreadMessagesMayNotHaveBeenActedUpon.AreYouSureYouWantToIncludeUnreadMessages?"
						
			Instance Selection
				include deleted records
				where (create stamp < LocalThruDate
				and   (Status.Read
				or     IncludeUnread))

			Sort Order 
				create stamp
				Status
							
			Action Rules

				Instance Rules
					if (not has future changes)
						invoke Purge
							resume on error
						
		PurgeNotificationsForActor is a Set Action
			Parameters
				ParamActor			is an Actor
					default label is "Actor"
				ThruDate 			is Date
				PurgeOffsetDays 	is Numeric size 3
				IncludeUnread		is Boolean
				PhysicallyDelete 	is Boolean
			
			Local Fields
				LocalThruDate 	is Date
					value is ThruDate


			Parameter Rules
				ParamActor
					required
					
				ThruDate
					if (ThruDate entered)
						LocalThruDate = (ThruDate + 1 day)
					else	 
					if (not PurgeOffsetDays entered)
						required	
							"MustEnterThruDateOrOffset"
					else
						LocalThruDate  = current date - (PurgeOffsetDays - 1)
			
				PurgeOffsetDays
					constraint (not ThruDate entered)
						"CannotEnterBothThruDateAndOffset"
						
				IncludeUnread
					if (IncludeUnread)
						confirmation required
							"UnreadMessagesMayNotHaveBeenActedUpon.AreYouSureYouWantToIncludeUnreadMessages?"						

			Instance Selection
				where (Actor = ParamActor
				and    create stamp < LocalThruDate
				and   (Status.Read
				or     IncludeUnread))

			Sort Order 
				Actor
				create stamp
				Status
							
			Action Rules

				Instance Rules
					if (PhysicallyDelete)
						invoke Purge
					else
						invoke Delete						
		
		MarkAllRead is a Set Action
			run in foreground
			valid when (not HasLargeUnreadNotificationsForActor)
			Instance Selection
				where (Actor = actor
				and    Status.Unread)
		
			Sort Order
				Actor
				Status
				
			Action Rules
				Instance Rules
					Status = Status.Read

		MarkAllReadBackground is a Set Action
			default label is "MarkAllReadInBackground"
			valid when (HasUnreadNotifications)
			Instance Selection
				where (Actor = actor
				and    Status.Unread)
		
			Sort Order
				Actor
				Status
				
			Action Rules
				Instance Rules
					Status = Status.Read	
				
	Sets
		ByActorCreated
			no duplicates
			indexed
			Sort Order
				Actor
				create stamp
				Priority
				UserNotification

		ByActorPriority
			no duplicates
			indexed
			Sort Order
				Actor
				Priority
				create stamp
				UserNotification
	
		ByActorUnread
			no duplicates
			indexed
			Sort Order
				Actor
				Priority
				create stamp
				UserNotification
			Instance Selection
				where (Status.Unread)
					
		ByActorUnreadDocumentOrMessage
			no duplicates
			indexed
			Sort Order
				Actor
				Priority
				create stamp
				UserNotification
			Instance Selection
				where (HasUnreadDocumentOrMessage)
					
		ByActorSourceType
			no duplicates
			indexed
			Sort Order
				Actor
				SourceType			
				create stamp
				Priority
				UserNotification

	    BySourceObject
	    	no duplicates
	    	indexed
	    	Sort Order
	    		SourceObject
	    		UserNotification	
	    		
		ByAsyncID	
			no duplicates
			indexed 
			Sort Order	
				AsyncID
				create stamp descending 
				UserNotification
			Instance Selection
				where (HasAsyncID)	    					
													
