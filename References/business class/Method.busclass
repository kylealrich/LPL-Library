Method is a BusinessClass
    owned by am
    prefix is AMM
    classic name is AMMETHOD

    Ontology
        symbolic key is Method
            classic set name is AMMSET1

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
        Description
        MethodType                     	is AlphaUpper size 1
            States
                Depreciation 		value is "D"
                Insurance    		value is "I"
                Replacement  		value is "R"
        MethodCategoryType             	is AlphaUpper size 1
            classic name is CATEGORY-TYPE
            States
                System 				value is "S"
                User   				value is "U"
        Active                         	is Boolean
            classic name is METH-STATUS
        MethodFormula 					
		MethodPercents	
        RecordType                     	is AlphaUpper size 1
            States
                Compute           	value is "C"
                Percent           	value is "P"
                UnitsOfProduction 	value is "U"
        DepreciationOptimizingMethod   	is a Method 
            classic name is OPT-METHOD
        TotalUnits                     	is Decimal size 17
        StraightLineDepreciationMethod 	is AlphaUpper size 1
            classic name is SL-CALCULATION
            States
                Default       		value is "D"
                Original      		value is "O"
                Mixed         		value is "M"
                NotApplicable 		value is "N"
        CreationDate                   	is TimeStamp
        CreatedBy                      	is an Operator 
        	holds pii
            classic name is CREATOR-ID
		
		
	Local Fields
		LocalEstUnits					is Numeric 16
		LocalActUnits					is Numeric 16
		EstComputed 					is Boolean




		LocalCodeBlock1					is a ComputeCodeBlock


				
		
	Rule Blocks
		LocalTotals
			if (!EstComputed)
				for each MethodUOPRel
					LocalEstUnits += each.EstimatedYearlyUnitsOfProduction
					LocalActUnits += each.ActualYearlyUnitsOfProduction
				EstComputed = true
		
		OptimizationMethodCheck	
			if (Method = "SL"
			or Method  = "SL20%"
			or Method  = "SL30%"
			or Method  = "SL40%"
	        or Method  = "SL50%"
	        or Method  = "SL60%"
	        or Method  = "SL75%"
	        or Method  = "SL80%"
			or Method  = "SYD"
			or Method  = "100%BONUS"
	        or Method  = "SLBZERO")
	        	constraint (DepreciationOptimizingMethod = "SL")
	            	"CannotChangeTheOptimizationForSystemMethodType" 				

    Derived Fields
        DepreciationOptimizingMethodDescription is a StringField
            type is Alpha size 30
            classic name is OPT-METH-DESC
            DepreciationOptimizingMethod.Description

		TotalEstimatedUnits is a DerivedField
			type is Numeric size 16
			include LocalTotals
			return LocalEstUnits  	
			
		TotalActualUnits is a DerivedField
			type is Numeric size 16
			include LocalTotals
			return LocalActUnits

		UOPPeriodDeprConvention is a DerivedField
			type is AlphaUpper size 2
			restricted
			if (HasUOPAmounts)
				return (MethodUOPRel.PeriodDepreciationConvention)

    	MethodFormulaOutput is a DerivedField	
    		type is like InternationalAmount
    		restricted
    		return MethodFormula.MethodComputeOutput 

		125DBMethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12*1.25)/Life)"
		150DBMethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12*1.5)/Life)"
		150DB20MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.2))*12*1.5)/Life)"
		150DB30MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.3))*12*1.5)/Life)"
		150DB40MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.4))*12*1.5)/Life)"
		150DB50MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.5))*12*1.5)/Life)"
		150DB60MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.6))*12*1.5)/Life)"
		150DB75MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.75))*12*1.5)/Life)"
		150DB80MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.8))*12*1.5)/Life)"
		175DBMethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12*1.75)/Life)"
		200DBMethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12*2)/Life)"
		200DB20MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.2))*12*2)/Life)"
		200DB30MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.3))*12*2)/Life)"
		200DB40MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.4))*12*2)/Life)"
		200DB50MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.5))*12*2)/Life)"
		200DB60MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.6))*12*2)/Life)"
		200DB75MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.75))*12*2)/Life)"
		200DB80MethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.8))*12*2)/Life)"
		SLMethodMessage					is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12)/LifeInYears)"
		SL20MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.2))*12)/LifeInYears)"
		SL30MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.3))*12)/LifeInYears)"
		SL40MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.4))*12)/LifeInYears)"
		SL50MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.5))*12)/LifeInYears)"
		SL60MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.6))*12)/LifeInYears)"
		SL75MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.75))*12)/LifeInYears)"
		SL80MethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue-((Basis-FirstYearExpenseAmount-BasisReductionPercentage)*.8))*12)/LifeInYears)"
		SLBZEROMethodMessage			is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-FirstYearExpenseAmount-BasisReductionPercentage-SalvageValue)*12)/LifeInYears)"
		SYDMethodMessage				is a MessageField
			"(((Basis-LifeToDateDepreciation+YearToDateDepreciation-SalvageValue)*12)/LifeInYears)"
		100BonusMethodMessage			is a MessageField
			"Depreciates100%ofTheAssetBasisInTheFirstPeriodOfTheAssetLife"

    Conditions

		MethodEntered
			restricted
			when (Method entered)
		
        IsActiveStatus
        	restricted
            when (Active)

        IsCompute
        	restricted
            when (RecordType.Compute)

        IsDepreciation
        	restricted
            when (MethodType.Depreciation)

        IsInsurance
        	restricted
            when (MethodType.Insurance)

        IsSystemDefined
        	restricted
            when (MethodCategoryType.System)

		SystemMethodsLoaded
			restricted
			when (SystemDefinedMethodsRel exists)
				
        IsOptMethod
        	restricted
            when (DepreciationOptimizingMethod entered)

        IsPercentTable
        	restricted
            when (RecordType.Percent)

        IsReplacement
        	restricted
            when (MethodType.Replacement)

        IsUopTable
        	restricted
            when (RecordType.UnitsOfProduction)

        IsUserDefined
        	restricted
            when (MethodCategoryType.User)

		HasCompute
			restricted
			when (MethodFormula entered)
						
		HasPercents
			when (sum MethodPercents > 0)		

		HasUOPAmounts
			when (MethodUOPRel exists)

		UOPAvailable
			when (RecordType not entered
			or HasUOPAmounts)
			
		DepComputeAvailable
			when (MethodType.Depreciation
			and IsUserDefined)

		IsSystemDepreciationMethod
			when (MethodType.Depreciation
			and IsSystemDefined)

		InsComputeAvailable
			when (MethodType.Insurance)			

		RepComputeAvailable
			when (MethodType.Replacement)	
					
		PercentsAvailable
			when (RecordType not entered
			or HasPercents)

		MethodDriverExists
			restricted
			when (HasCompute
			or HasUOPAmounts
			or HasPercents)

		SystemDefined
			restricted
			when (Method = "SL"
			or Method  	 = "SL20%"
			or Method 	 = "SL30%"
			or Method  	 = "SL40%"
	        or Method  	 = "SL50%"
	        or Method  	 = "SL60%"			
			or Method 	 = "SL75%"
			or Method  	 = "SL80%"
			or Method 	 = "SYD"
			or Method 	 = "ACCT-LEVEL"
			or Method 	 = "SLBZERO")	
			
		ThisRecordExists
			restricted	
			when (ThisRecord exists)
			



		IsCustomMethod
			restricted
			when (Method.MethodCategoryType.User
			and Method.RecordType.Compute)

		Is125DBMethod
			restricted
			when(Method = "125DB")
		Is150DBMethod
			restricted
			when(Method = "150DB")
		Is150DB20Method
			restricted
			when(Method = "150DB20%")
		Is150DB30Method
			restricted
			when(Method = "150DB30%")
		Is150DB40Method
			restricted
			when(Method = "150DB40%")
		Is150DB50Method
			restricted
			when(Method = "150DB50%")
		Is150DB60Method
			restricted
			when(Method = "150DB60%")
		Is150DB75Method
			restricted
			when(Method = "150DB75%")
		Is150DB80Method
			restricted
			when(Method = "150DB80%")
		Is175DBMethod
			restricted
			when(Method = "175DB")
		Is200DBMethod
			restricted
			when(Method = "200DB")
		Is200DB20Method
			restricted
			when(Method = "200DB20%")
		Is200DB30Method
			restricted
			when(Method = "200DB30%")
		Is200DB40Method
			restricted
			when(Method = "200DB40%")
		Is200DB50Method
			restricted
			when(Method = "200DB50%")
		Is200DB60Method
			restricted
			when(Method = "200DB60%")
		Is200DB75Method
			restricted
			when(Method = "200DB75%")
		Is200DB80Method
			restricted
			when(Method = "200DB80%")
		IsSLMethod
			restricted
			when(Method = "SL")
		IsSL20Method
			restricted
			when(Method = "SL20%")
		IsSL30Method
			restricted
			when(Method = "SL30%")
		IsSL40Method
			restricted
			when(Method = "SL40%")
		IsSL50Method
			restricted
			when(Method = "SL50%")
		IsSL60Method
			restricted
			when(Method = "SL60%")
		IsSL75Method
			restricted
			when(Method = "SL75%")
		IsSL80Method
			restricted
			when(Method = "SL80%")
		IsSLBZEROMethod
			restricted
			when(Method = "SLBZERO")
		IsSYDMethod
			restricted
			when(Method = "SYD")
		Is100BonusMethod
			restricted
			when(Method = "100%BONUS")

    Relations








        MethodPercentTableRel
            classic name is AMTABLEPCT
            one-to-one relation to MethodPercentTable
            delete cascades
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
                related.Method 					= Method

		MethodRel 
			one-to-one relation to Method
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Method  				= Method
		
		MethodUOPRel is a MethodUnitsOfProductionYear set

		DepMethodRel  
			one-to-many relation to Method
			Field Mapping uses Set3
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.MethodType 				= "D"
			Instance Selection
				where (related.Method 			!= Method)		
		
		InsMethodRel	
			one-to-many relation to Method
			Field Mapping uses Set3   	
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.MethodType 				= "I"				
			Instance Selection
				where (related.Method 			!= Method)
				
		RepMethodRel	
			one-to-many relation to Method
			Field Mapping uses Set3
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.MethodType 				= "R"				
			Instance Selection
				where (related.Method 			!= Method)

		ThisRecord
			one-to-one relation to Method
			Field Mapping uses Set3
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.MethodType				= MethodType
				related.Method					= Method

		SystemDefinedMethodsRel
			one-to-many relation to Method
			Field Mapping uses Set3
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup			
			Instance Selection
				where (related.IsSystemDefined)
				
		DepreciationFormulasRel
			one-to-many relation to MethodFormula
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup				



		InsuranceReplacementFormulasRel
			one-to-many relation to MethodFormula
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup				
			Instance Selection
				where (!related.IsDepreciationFormula
				and related.MethodFormula not = "Migration")	
				

		DepreciationFormulaMethodsRel
			one-to-many relation to Method
			Field Mapping uses ByMethodFormula
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.MethodFormula			= MethodFormula
				related.MethodType				= "D"
										
	Cube Relations









		GLTotalCellRel 
			cell relation to GeneralLedgerTotal
			period view is year 2014

            Dimension Mapping
           		related.GeneralLedgerTotal.Ledger			= LocalCodeBlock1.Ledger
                related.AccountingEntity					= LocalCodeBlock1.AccountingEntity
                related.GeneralLedgerTotal.AccountingUnit	= LocalCodeBlock1.AccountingUnit
                related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalCodeBlock1.GeneralLedgerChartAccount
                related.GeneralLedgerTotal.EntityYearPeriod	= LocalCodeBlock1.GeneralLedgerCalendarPeriod
        	Preload Measures
              	NetFunctionalAmount

		GLTotalMatrixRel 
			matrix relation to GeneralLedgerTotal
			period view is year 2014

            Dimension Mapping
           		related.GeneralLedgerTotal.Ledger			= LocalCodeBlock1.Ledger
                related.AccountingEntity					= LocalCodeBlock1.AccountingEntity
                related.GeneralLedgerTotal.AccountingUnit	= LocalCodeBlock1.AccountingUnit
                related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalCodeBlock1.GeneralLedgerChartAccount
                related.GeneralLedgerTotal.EntityYearPeriod	= LocalCodeBlock1.GeneralLedgerCalendarPeriod
        	Preload Measures
              	NetFunctionalAmount						
				
    Sets

        Set2
            indexed
            Sort Order
                FinanceEnterpriseGroup
                MethodType
                RecordType
                Method

        Set3
            indexed
            Sort Order
                FinanceEnterpriseGroup
                MethodType
                Method

		ByMethodFormula
			Sort Order
				FinanceEnterpriseGroup
				MethodFormula
				MethodType
				Method
				
				
				
				
	Attach Rules
		constraint (Active)
			"MethodMustBeActive"		

    Field Rules

		Method	

        Description
            required
            if (MethodCategoryType = "S")
            	cannot be changed

		MethodFormula
			if (MethodFormula entered)
				constraint (!MethodUOPRel exists)
					"CannotAssignBothMethodComputeAndUnitOfProductionDetail"				
				constraint (!MethodPercents entered)
					"CannotAssignBothMethodComputeAndPercentTable"	
				RecordType = "C"	
		
		MethodPercents
			if (MethodPercents entered)
				constraint (!MethodUOPRel exists)
					"CannotAssignUnitOfProductionDetailAndPercentTable"					
				constraint (!MethodFormula entered)
					"CannotAssignAMethodComputeAndPercentTable"						
				RecordType = "P"
			if (MethodType = "D"
			and MethodPercents entered)
				constraint (sum MethodPercents = 100)	
					"MethodPercentMustEqual100"


		MethodCategoryType	
			if (Method = "200DB"
			or Method = "175DB"
			or Method = "150DB"
			or Method = "125DB"
			or Method = "200DB30%"
			or Method = "150DB30%"
			or Method = "SL20%"
			or Method = "200DB20%"
			or Method = "150DB20%"
			or Method = "SL"
			or Method = "SL30%"
			or Method = "200DB40%"
			or Method = "150DB40%"
			or Method = "SL40%"
			or Method = "200DB50%"
			or Method = "150DB50%"
			or Method = "SL50%"
			or Method = "200DB60%"
			or Method = "150DB60%"
			or Method = "SL60%"
			or Method = "200DB80%"
			or Method = "150DB80%"
			or Method = "SL80%"
			or Method = "200DB75%"
			or Method = "150DB75%"
			or Method = "SL75%"
			or Method = "SYD"
			or Method = "ACCT-LEVEL"			
			or Method = "100%BONUS"
            or Method = "SLBZERO")
				MethodCategoryType = "S"	
			else 
				MethodCategoryType = "U"				
			cannot be changed
						
        MethodType
            default to "D"
            required
            if (!MethodType.Depreciation)
            	constraint (!HasUOPAmounts)
            		"AUnitOfProductionTableIsNotValidForInsuranceOrReplacementTypeMethods"	           
            	constraint (MethodFormula not = "200DB"
				and MethodFormula not = "175DB"
				and MethodFormula not = "150DB"
				and MethodFormula not = "125DB"
				and MethodFormula not = "200DB30%"
				and MethodFormula not =  "150DB30%"
				and MethodFormula not =  "SL"
				and MethodFormula not =  "SL30%"
				and MethodFormula not =  "200DB40%"
				and MethodFormula not =  "150DB40%"
				and MethodFormula not =  "SL40%"
				and MethodFormula not =  "200DB50%"
				and MethodFormula not =  "150DB50%"
				and MethodFormula not =  "SL50%"
				and MethodFormula not =  "200DB75%"
				and MethodFormula not =  "150DB75%"
				and MethodFormula not =  "SL75%"
				and MethodFormula not =  "200DB20%"
				and MethodFormula not =  "150DB20%"
				and MethodFormula not =  "SL20%"
				and MethodFormula not =  "200DB60%"
				and MethodFormula not =  "150DB60%"
				and MethodFormula not =  "SL60%"
				and MethodFormula not =  "200DB80%"
				and MethodFormula not =  "150DB80%"
				and MethodFormula not =  "SL80%"
				and MethodFormula not =  "SYD"
				and MethodFormula not =  "ACCT-LEVEL"			
				and MethodFormula not =  "100%BONUS"
	            and MethodFormula not =  "SLBZERO")				
					"DepreciationMethodFormulaCannotBeUsedAsAnInsuranceOrReplacementFormula"
            if (MethodType.Replacement or MethodType.Insurance)
				constraint (HasPercents or HasCompute)
					"APercentTableOrComputeIsRequiredOnInsuranceAndReplacementTypeMethods"	

		Active
			initial value is true
					
		DepreciationOptimizingMethod
			if (DepreciationOptimizingMethod entered)
				constraint (MethodType.Depreciation)
					"OptimizationCanOnlyAppliedToADepreciationTypeMethod"	
				constraint (HasCompute)
					"DepreciationMethodMustHaveAFormulaToApplyOptimization"
				constraint (!DepreciationOptimizingMethod = Method)	
					"OptimizationMethodCannotBeTheSameAsTheMethod"		
				constraint (!DepreciationOptimizingMethod = "SLBZERO")
					"SLBZEROIsNotAnAllowedOptimizationMethod"
			if (Method = "SL"
			or Method  = "SL20%"
			or Method  = "SL30%"
            or Method  = "SL40%"
            or Method  = "SL50%"
            or Method  = "SL60%"
            or Method  = "SL75%"
            or Method  = "SL80%"            
			or Method  = "SYD"
			or Method  = "100%BONUS"
            or Method  = "SLBZERO")
            	cannot be changed
            		"CannotChangeTheOptimizationMethodForSystemTypeMethod" 
            		 					
		StraightLineDepreciationMethod
			initial value is "N"
			default to "N"
			if (action type.Update and StraightLineDepreciationMethod changed)
				confirmation required
					"WarningChangingStraightLineDepreciationMethodMayAffectDepreciation;Proceed?"
			if (!DepreciationOptimizingMethod = "SL")
				constraint (StraightLineDepreciationMethod = "N")
					"OptimizingMethodIsNotSL,CannotUseSLCalculationFlag"	
			else
				constraint (!StraightLineDepreciationMethod = "N")	
					"OpmitizationMethodIsSL,StraightLineCalculationOptionMustBeDefault,Original,OrMixed" 	

    Actions
        Create is a Create Action
        	valid when (SystemMethodsLoaded)

        SystemCreate is a Create Action
        	restricted

		SystemUpdate is an Update Action
			restricted
			bypass field rules				

        Update is an Update Action
        	valid when (!MethodCategoryType.System)

			Field Rules
				MethodFormula
					if (MethodFormula entered)
						RecordType = "C"
					else
						if (MethodFormula changed)
							if (MethodPercents entered)
								RecordType = "P"
							else 
								initialize RecordType	
							 	
				MethodPercents		
					if (MethodPercents entered)
						RecordType = "P"
					else
						if (MethodPercents changed)
							if (MethodFormula entered)
								RecordType = "C"
							else 
								initialize RecordType

        	Entrance Rules
        		include OptimizationMethodCheck
				
			Action Rules



        Delete is a Delete Action
        	valid when (!MethodCategoryType.System)

    	
	        	
	
