AccountingEntity is a BusinessClass
	owned by GeneralLedger
	prefix is GLAE
	representative text is "<DerivedRepresentativeText>"

	
	Ontology
		symbolic key is AccountingEntity

	Patterns
		implements BODId
        implements StaticJava
		implements ChildHierarchy
			children are ChildrenRel
			child set is HierarchyDetailRel
				child is SubordinateAccountingEntity
			top node when (IsTopNode)
			descendants are DescendantsRel

	Context Fields
		ContextEntity				is an AccountingEntityContextValue
		ReportingBasis
		AccountingUnitStructure
		AccountingEntityGroup
		AllocationContext
		SkipAttachRule
		BypassActiveCodeBlockEdit
#ifdef module integration
		FSMInboundBODTracker
#endif
#ifdef module ap
		PayablesCompany		
		PayablesInvoice		
#endif

	Persistent Fields
		Name
			translatable
		LastYearClosed					is a FiscalYear
		AccountingUnitZoneBalancing		is Boolean
		FunctionalCurrency				is a Currency
		FunctionalAutoBalanceThreshold 	is Unsigned Decimal 19.3
			precision is FunctionalCurrency.NumberOfDecimals		
		AlternateCurrency				is a Currency
		AlternateAutoBalanceThreshold 	is Unsigned Decimal 19.3
			precision is AlternateCurrency.NumberOfDecimals		
		AlternateCurrency2				is a Currency
		Alternate2AutoBalanceThreshold 	is Unsigned Decimal 19.3
			precision is AlternateCurrency2.NumberOfDecimals	
		AlternateCurrency3				is a Currency
		Alternate3AutoBalanceThreshold 	is Unsigned Decimal 19.3
			precision is AlternateCurrency3.NumberOfDecimals	
		Status							is Numeric 1
			States
				Active					value is 0 
				Delete					value is 1
				Inactive				value is 2
		UnreleaseOfReleasedEntries		is Boolean					
		AutoBalance						is Boolean
		CurrencyLedger					is Numeric 1 
			States
				NoBalancing				value is 0
				TransactionAmount		value is 1
				AllCurrencyAmounts		value is 2
		CloseConfiguration				is a GeneralLedgerCloseConfiguration
		FiscalYear			       		is a GeneralLedgerCloseYear
		CurrentPeriod			   		is a GeneralLedgerClosePeriod
		BudgetActual					is Boolean
		TopNode							is AlphaUpper 12 
		IsTopNode						is Boolean
		IsAcctUnitStructureEntity		is Boolean
		SequenceNumber                  is Numeric 7
		PostingCategory	
		ProcessStatus					is Numeric 1
			States
				None					value is 0 
				PostInProcess			value is 1
        	disable Auditing
		SystemAccountingUnitDefined		is Boolean
		DefaultZoneAccountingUnitDefined is Boolean
		EntityZoneAccountingUnitDefined is Boolean
		SubAccount						is a GeneralLedgerSubAccount
		JournalApproval					is Numeric 1	
			States
				None					value is 0
				AmountOnly				value is 1
				AmountAndUnit			value is 2
		JournalApprovalAmount			is an InternationalAmount
			precision is FunctionalCurrency.NumberOfDecimals
		ValidSystems					is a GeneralLedgerSystemCode group
		AsyncId							is a AsyncActionRequest
			delete ignored
        	disable Auditing
		AddressCode
		AverageDailyBalance				is Boolean
#ifdef module sharedfinance
		BypassApprovalCode				is a ApprovalCode
#endif
#ifndef module sharedfinance
		BypassApprovalCode				is AlphaUpper 30
#endif
		FinanceDimension1
		FinanceDimension2
		FinanceDimension3
		FinanceDimension4
		FinanceDimension5
		FinanceDimension6
		FinanceDimension7
		FinanceDimension8
		FinanceDimension9
		FinanceDimension10		

#ifdef module lm 	
		LeaseAccountingMethod 		 
		LeaseAccountingStandard		is Numeric size 1
			States
				ASC 				value is 1
				GASB 				value is 2
				IFRS				value is 3
#endif

#ifndef module lm 	
		LeaseAccountingMethod 		is Numeric size 1 
		LeaseAccountingStandard		is Numeric size 1
			States
				ASC 				value is 1
				GASB 				value is 2
				IFRS				value is 3
#endif
		DisplayAccountingEntity		is like AccountingEntity
			default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>"
		DimensionType
		Level						is Numeric 3	
		ParentAccountingEntity		is like AccountingEntity  
			default label is "Parent<FinanceEnterpriseGroup.AccountingEntityLabel>"
		EntityBasis					is like ReportingBasis  
		RemoveFromReportingBasisInProgress	is Boolean	
		    	

	Transient Fields
		TransientContextEntity is an AccountingEntityContextValue
			derive value from AccountingEntity

		TransientAccountingUnitStructure is an AccountingUnitStructure
			derive value from DerivedAUStructure

		ParentEntity		is a AccountingEntity
			derive value from AccountingEntityInContextReportingBasisRel.AccountingEntity
	
	Rule Blocks

		EntityCalendarSetUp
			if (!AccountingEntityPeriodRel exists)
				invoke UpdateClosePeriods

		AccountingEntityRules
			trigger "AccountingEntityService" PA service
				resume on error
				title is "EG:<FinanceEnterpriseGroup>AE:<AccountingEntity>"
				Criteria
					FinanceEnterpriseGroup
					AccountingEntity
				Variables
					LocalActionCode
						variable name is ActionCode
					include persistent fields from FinanceEnterpriseGroup
					include persistent fields from FinanceEnterpriseGroup.EnterpriseChart
					include persistent fields from AccountingEntity
					include persistent fields from AccountingEntity.ReportingBasis
					include persistent fields from AccountingEntity.AccountingUnitStructure
					include persistent fields from AccountingEntity.AccountingEntityGroup
					include persistent fields from AddressCode
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
		
		SumInterEntityPayablesLedgers
			initialize SumOfInterEntityPayablesJournals
				for each GeneralLedgerTotalInterEntityPayablesRel
					LocalEntityYearPeriod = each.GeneralLedgerTotal.EntityYearPeriod
					SumOfInterEntityPayablesJournals += each.NetFunctionalAmount 
		
		SumInterEntityPayablesAccountLedgers
			initialize SumOfInterEntityPayablesJournals
				for each GeneralLedgerTotalOnlyAccountPayablesRel
					LocalEntityYearPeriod = each.GeneralLedgerTotal.EntityYearPeriod
					SumOfInterEntityPayablesJournals += each.NetFunctionalAmount			
				
		SumInterEntityReceivablesLedgers 
			initialize SumOfInterEntityReceivablesJournals
				for each GeneralLedgerTotalInterEntityReceivablesRel
					LocalEntityYearPeriod = each.GeneralLedgerTotal.EntityYearPeriod
					SumOfInterEntityReceivablesJournals += each.NetFunctionalAmount
		
		SumInterEntityReceivablesAccountLedgers 
			initialize SumOfInterEntityReceivablesJournals
				for each GeneralLedgerTotalOnlyAccountReceivablesRel
					LocalEntityYearPeriod = each.GeneralLedgerTotal.EntityYearPeriod
					SumOfInterEntityReceivablesJournals += each.NetFunctionalAmount			
	

	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforAccountingEntity"
			
		ContextMessageText is a MessageField
			restricted
			"AccountingEntity<AccountingEntity>"
		RelationMessageText is a MessageField
			restricted
			"_\Relation_"
		DerivedRepresentativeText	is a DerivedField
			type is Alpha 120
			restricted
			if (IsTopNode)
				return Name
			else				
				return DerivedRepresentativeTextString
		DerivedRepresentativeTextString is a StringField	
			type is Alpha 120
			DisplayAccountingEntity
			" - "
			Name
		DerivedAUStructure				is a DerivedField
			type is like AccountingUnitStructure
			restricted
			if (ReportingBasis entered)
				return ReportingBasis.AccountingUnitStructure
			else
				return FinanceEnterpriseGroup.EnterpriseAUStructure
				
		AccountingEntityLabel 			is a DerivedField
			type is Alpha 25
			restricted
			LocalFinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup
			return LocalFinanceEnterpriseGroup.FinanceEnterpriseGroup.AccountingEntityLabel
		AlternateCurrencyEntered		is a ConditionalField
			type is Boolean
			restricted
			if (AlternateCurrency entered)
				true
			else
				false
		AlternateCurrency2Entered		is a ConditionalField
			type is Boolean
			restricted
			if (AlternateCurrency2 entered)
				true
			else
				false
		AlternateCurrency3Entered		is a ConditionalField
			type is Boolean
			restricted
			if (AlternateCurrency3 entered)
				true
			else
				false				
		DerivedTopNode	is a DerivedField
			type is AlphaUpper 12
			restricted
			return ReportingBasis.AccountingEntityTopNode				
		DerivedReportingBasis	is a DerivedField
			type is AlphaUpper 15
			restricted
			return ReportingBasis				
		NextYear 			is a DerivedField
			type is Alpha 4
			restricted
			LocalEndCalendarPeriod		= GeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod

			return (CurrentPeriod.GeneralLedgerCloseYear + 1)
		NextPeriod 			is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			LocalEndCalendarPeriod		= GeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			return first NextGeneralLederClosePeriodRel.GeneralLedgerClosePeriod
		PreviousYear 		is a DerivedField
			type is Alpha 4
			restricted
			LocalEndCalendarPeriod		= GeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod

			return (CurrentPeriod.GeneralLedgerCloseYear - 1)
		PreviousPeriod 		is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			LocalEndCalendarPeriod		= GeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
			return last PreviousGeneralLederClosePeriodRel.GeneralLedgerClosePeriod
        DerivedSequenceNumber   is a DerivedField
            type is AlphaRight 7
            restricted
            return DerivedAlphaSequence[2:8]
        DerivedAlphaSequence    is a DerivedField
            type is AlphaRight 8
            restricted
            return (10000000 + SequenceNumber)
		DerivedClosePeriodsInPriorYears	is a DerivedField
			type is Numeric 5
			restricted
			return instance count of ClosePeriodLessThanFiscalYearRel
		DerivedEntityPeriodsInPriorYears is a DerivedField
			type is Numeric 5
			restricted
			return instance count of EntityPeriodLessThanFiscalYearRel
		DerivedFiscalYear		is a DerivedField
			type is like GeneralLedgerCloseYear
			return FiscalYear
		DerivedEnterpriseAccountingUnitEntityNode is a StringField
			type is AlphaUpper 15
			restricted
			FinanceEnterpriseGroup.EnterpriseAUStructure.StructureSequence
			"_"
			AccountingEntity
			"_ENTITY"		
		DerivedContextAccountingUnitEntityNode is a StringField
			type is AlphaUpper 25
			restricted
			AccountingUnitStructure.StructureSequence
			"_"
			AccountingEntity
			"_ENTITY"				
		DerivedPayablesAccount 			is a DerivedField
			type is like Account 
			restricted
			LocalSystemAccount		= SystemAccount.InterEntityPayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount.Account
			else
				LocalSystemAccount		= SystemAccount.InterEntityPayables 
				return first SystemAccountRel.GeneralLedgerChartAccount.Account
		DerivedReceivablesAccount		is a DerivedField
			type is like Account 
			restricted
			LocalSystemAccount		= SystemAccount.InterEntityPayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount.Account
			else
				LocalSystemAccount		= SystemAccount.InterEntityReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount.Account
		DerivedPayablesAccountSubAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (SubAccount entered)
				return DerivedPayablesAccount + "-" + SubAccount
			else
			if (FinanceEnterpriseGroup.SystemSubAccount entered)
				return DerivedPayablesAccount + "-" + FinanceEnterpriseGroup.SystemSubAccount
			else
				return DerivedPayablesAccount
		DerivedReceivablesAccountSubAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			if (SubAccount entered)
				return DerivedReceivablesAccount + "-" + SubAccount
			else
			if (FinanceEnterpriseGroup.SystemSubAccount entered)
				return DerivedReceivablesAccount + "-" + FinanceEnterpriseGroup.SystemSubAccount
			else
				return DerivedReceivablesAccount
		DerivedDepartmentPayablesAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount		= SystemAccount.DepartmentPayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount		= SystemAccount.DepartmentPayables 
				return first SystemAccountRel.GeneralLedgerChartAccount
		DerivedDepartmentReceivablesAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount		= SystemAccount.DepartmentPayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount		= SystemAccount.DepartmentReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount
		CurrentPeriodEndDate			is a DerivedField
			type is Date
			return CurrentPeriod.GeneralLedgerCalendarPeriod.Date
			
		CurrentYearEndDate				is a DerivedField
			type is Date
			return last CurrentYearClosePeriodsRel.DerivedEndDate
	
		CardViewCurrentPeriodEndDate	is a StringField
			type is Alpha 30
			"CurrentPeriod"
			CurrentPeriodEndDate

		YearPeriodLabel					is a StringField
			type is Alpha 30
			YearAndPeriodMessage
			" "
			FiscalYear
			" "
			CurrentPeriod
		YearAndPeriodMessage			is a MessageField
			restricted
			"YearAndPeriod"
		DerivedZonePayablesAccount 			is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount		= SystemAccount.ZonePayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount		= SystemAccount.ZonePayables 
				return first SystemAccountRel.GeneralLedgerChartAccount
		DerivedZoneReceivablesAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			restricted
			LocalSystemAccount		= SystemAccount.ZonePayablesAndReceivables 
			if (SystemAccountCheckRel exists)
				return first SystemAccountRel.GeneralLedgerChartAccount
			else
				LocalSystemAccount		= SystemAccount.ZoneReceivables 
				return first SystemAccountRel.GeneralLedgerChartAccount




































		InterEntityPayablesGeneralLedgerTotal is a DerivedField 
			type is like InternationalAmount
			restricted 
			include SumInterEntityPayablesLedgers
			return (SumOfInterEntityPayablesJournals)	
		
		InterEntityPayablesAccountGeneralLedgerTotal is a DerivedField 
			type is like InternationalAmount
			restricted 
			include SumInterEntityPayablesAccountLedgers
			return (SumOfInterEntityPayablesJournals)	

		InterEntityReceivablesGeneralLedgerTotal is a DerivedField 
			type is like InternationalAmount
			restricted 
			include SumInterEntityReceivablesLedgers
			return (SumOfInterEntityReceivablesJournals)
				
		InterEntityReceivablesAccountGeneralLedgerTotal is a DerivedField 
			type is like InternationalAmount
			restricted 
			include SumInterEntityReceivablesAccountLedgers
			return (SumOfInterEntityReceivablesJournals)
		
		DerivedInterEntityReceivablesAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return (FinanceEnterpriseGroup.InterEntityReceivablesRel.Account + "-" + LocalSubAccount)
		
		DerivedInterEntityPayablesAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			return (FinanceEnterpriseGroup.InterEntityPayablesRel.Account + "-" + LocalSubAccount)
			
		ActorSecurityGroup is a DerivedField
			type is like AccountingEntitySecurityGroup
			return actor.context.AccountingEntitySecurityGroup
			
		DerivedBeginningBalanceString is a StringField				
			type is AlphaUpper 20
			restricted
			LocalPrmGeneralLedgerCloseYear
			"000"

		DerivedParentEntity  is a DerivedField
			type is like AccountingEntity
			restricted
			if (action type.Create)
				return ParentAccountingEntity	
			else		
				return AccountingEntityInContextReportingBasisRel.AccountingEntity

		DerivedParentNameInContextEntity is a DerivedField
			type is like AccountingEntity
			LocalParentAccountingEntity = AccountingEntityInContextReportingBasisRel.AccountingEntity
			if (LocalParentAccountingEntity != DerivedTopNode)
				return LocalParentAccountingEntity.DisplayAccountingEntity
				
		DerivedParentInContextEntity  is a DerivedField
			type is like FinanceDimension4
			restricted
			return AccountingEntityInContextReportingBasisRel.AccountingEntity

		DescendantOfContextEntity is a DerivedField
			type is Boolean
			if (DescendantOfContextEntityRel exists)
				return true
			


#ifdef module integration
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedIntegrationApplication is a DerivedField
			type is Alpha size 200
			restricted
			LocalConfigurationParameter	= "IntegrationApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IsMultipleFEG"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					

		BODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Create or LocalActionCode.Create)
				return "Add"
			if (action type.Update or LocalActionCode.Update or action type.Delete or LocalActionCode.Delete)
				return "Replace"
			else
				return ""
		
		DerivedAccountingEntity is a DerivedField
			type is Alpha 9
			restricted
			return AccountingEntity using "%d"
		
		BODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return bod id.VariationID
			
		BODAccountingEntity	is a DerivedField
			type is AlphaUpper size 22
			restricted
			if(DerivedCleanDocumentID = "Y")
				return DerivedAECrossAccountingEntity
			else
				return FinanceEnterpriseGroup + DerivedDelimiter + AccountingEntity
		
		BODAccountingEntityFEG is a DerivedField
			type is AlphaUpper size 22
			restricted
			if(DerivedMultipleFEG = "Y")
				return FinanceEnterpriseGroup + DerivedDelimiter + AccountingEntity
			else
				return AccountingEntity
		
		DerivedAECrossAccountingEntity is a DerivedField
			type is Alpha size 50
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if (FSMBODAECrossReferenceDetailRel.DestinationValue entered)
					LocalBODAccountingEntity = FSMBODAECrossReferenceDetailRel.DestinationValue
					return LocalBODAccountingEntity
				else
					LocalBODAccountingEntity = BODAccountingEntityFEG
					return LocalBODAccountingEntity
			else
				return LocalBODAccountingEntity 
					
		BODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODCurrentTimeStamp = current timestamp
			return BODCurrentTimeStamp
			
		BODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCurrentTimeStamp[1:4] + "-" + BODCurrentTimeStamp[5:6] + "-" + BODCurrentTimeStamp[7:8] + "T" + BODCurrentTimeStamp[9:10] + ":" + BODCurrentTimeStamp[11:12] + ":" + BODCurrentTimeStamp[13:14] + "Z"
		
		BODCreateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODCreateTimeStamp =  create stamp.timestamp
			return BODCreateTimeStamp
			
		DerivedDefaultBODLocation is a DerivedField
			type is AlphaUpper size 20
			restricted
			return AddressCode
			
		BODFormattedCreateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCreateTimeStamp[1:4] + "-" + BODCreateTimeStamp[5:6] + "-" + BODCreateTimeStamp[7:8] + "T" + BODCreateTimeStamp[9:10] + ":" + BODCreateTimeStamp[11:12] + ":" + BODCreateTimeStamp[13:14] + "Z"
		
		BODUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODUpdateTimeStamp = update stamp.timestamp
			return BODUpdateTimeStamp
			
		BODFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODUpdateTimeStamp[1:4] + "-" + BODUpdateTimeStamp[5:6] + "-" + BODUpdateTimeStamp[7:8] + "T" + BODUpdateTimeStamp[9:10] + ":" + BODUpdateTimeStamp[11:12] + ":" + BODUpdateTimeStamp[13:14] + "Z"
	
		DerivedDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedCleanDocumentID = "Y")
				return DerivedAECrossAccountingEntity
			else
				return FinanceEnterpriseGroup + DerivedDelimiter + AccountingEntity

		DerivedBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:" + DerivedTenantID +":" + BODAccountingEntity + ":" +DerivedDefaultBODLocation+ ":" +DerivedDocumentID + ":" +"?AccountingEntity&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
	
		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor
			
		DerivedBODStatusCode is a DerivedField
			type is Alpha 10
			restricted
			if (Status.Active)
				return "Open"
			if (Status.Delete)
				return "Deleted"
			if (Status.Inactive)
				return "Closed"
				
		DerivedAccountingChart is a DerivedField
			type is AlphaUpper size 15
			restricted
			return FinanceEnterpriseGroup.EnterpriseChart
			
		DerivedAccountingChartDescription is a DerivedField
			type is Alpha size 60
			restricted
			return FinanceEnterpriseGroup.EnterpriseChart.Description
			
		DerivedAccountingChartID is a DerivedField
			type is Alpha size 60
			restricted
			if(DerivedCleanDocumentID = "Y")
				return DerivedAccountingChart
			else
				return FinanceEnterpriseGroup + DerivedDelimiter + DerivedAccountingChart

		DerivedAddressDescription is a DerivedField
			type is Alpha size 60
			restricted
			return AddressCode.Description
			
		DerivedAccountingEntityAddressLine1 is a DerivedField
			type is Alpha 50
			restricted
			return AddressCode.PostalAddress.DeliveryAddress.AddressLine1
		
		DerivedAccountingEntityAddressLine2 is a DerivedField
			type is Alpha 50
			restricted
			return AddressCode.PostalAddress.DeliveryAddress.AddressLine2
		
		DerivedAccountingEntityAddressLine3 is a DerivedField
			type is Alpha 50
			restricted
			return AddressCode.PostalAddress.DeliveryAddress.AddressLine3
		
		DerivedAccountingEntityAddressLine4 is a DerivedField
			type is Alpha 50
			restricted
			return AddressCode.PostalAddress.DeliveryAddress.AddressLine4
		DerivedAccountingEntityMunicipality is a DerivedField
			type is Alpha 58
			restricted
			return AddressCode.PostalAddress.Municipality
		
		DerivedAccountingEntityPostalCode is a DerivedField
			type is Alpha 10
			restricted
			return AddressCode.PostalAddress.PostalCode
		
		DerivedAccountingEntityCountry is a DerivedField
			type is Alpha 10
			restricted
			return AddressCode.PostalAddress.Country


		DerivedAddressType is a DerivedField
			type is Alpha 20
			restricted
			if(AddressCode.PostalAddress.Type = 1)
				return "Post Office"
			if(AddressCode.PostalAddress.Type = 2)
				return "Street"
			if(AddressCode.PostalAddress.Type = 3)
				return "Military"
			if(AddressCode.PostalAddress.Type = 4)
				return "Undefined Address Type" 
 
		DerivedReportCurrencyOne is a DerivedField
			type is AlphaUpper size 5
			restricted
			return FinanceEnterpriseGroup.ReportCurrencyOne

		DerivedFinancialCalendarID is a DerivedField
			type is Alpha size 60
			return FinanceEnterpriseGroup + DerivedDelimiter + CloseConfiguration

		DerivedfinancialCalendarName is a DerivedField
			type is Alpha size 60
			return CloseConfiguration.Description
			
		DerivedTaxID is a DerivedField
			type is Alpha size 25
			restricted
			if (DerivedIntegrationApplication = "Local.ly" and AddressCode.PostalAddress.Country = "FR")
				return BODTaxEntityRel.TaxID
			else
				return ""
		
		AccountingEntityXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if(DerivedCleanDocumentID = "Y")
				AccountingEntityXMLBOD = template.IONSyncAccountingEntity_AccountingEntity_CleanDoc_ST document for this instance
			else
				AccountingEntityXMLBOD = template.IONSyncAccountingEntity_AccountingEntity_ST document for this instance
#endif			
	Local Fields
		LocalYear						is like GeneralLedgerCloseYear
		LocalFinanceEnterpriseGroup		is a TempFinanceEnterpriseGroup
		LocalLedger						is a Ledger
		LocalEndCalendarPeriod			is a GeneralLedgerCalendarPeriod
		LocalPeriod						is a GeneralLedgerClosePeriod

		LocalLedgerTopNode				is AlphaUpper 20
		LocalGeneralLedgerCloseYear		is Year
		LocalGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod
		LocalSystemAccount				is a SystemAccount
		LocalDateRange					is a DateRange
		LocalSystemCode  				is a GeneralLedgerSystemCode		
		LocalActionCode					is an ActionCode
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		SumOfInterEntityPayablesJournals 	is an InternationalAmount 
		SumOfInterEntityReceivablesJournals is an InternationalAmount
		NewGeneralLedgerJournal				is a GeneralLedgerJournalControl view 
		LocalSubAccount						is a GeneralLedgerSubAccount
		LocalPayablesEntityAccount			is a GeneralLedgerChartAccount 	
		LocalReceivablesEntityAccount		is a GeneralLedgerChartAccount
		LocalInterEntityNettingAccount		is a GeneralLedgerChartAccount
		LocalEndingDate						is Date
		LocalStartDate						is Date 
		LocalEndDate 						is Date 
		LocalAccountAnalysisTopNode			is like AccountingEntity  			
		LocalEntityYearPeriod				is a GeneralLedgerCalendarPeriod 
		LocalDimension						is like FinanceDimension1 
		LocalDimension1						is like FinanceDimension1
		LocalDimension2						is like FinanceDimension2
		LocalDimension3						is like FinanceDimension3
		LocalDimension4						is like FinanceDimension4
		LocalDimension5						is like FinanceDimension5
		LocalDimension6						is like FinanceDimension6
		LocalDimension7						is like FinanceDimension7
		LocalDimension8						is like FinanceDimension8
		LocalDimension9						is like FinanceDimension9
		LocalDimension10					is like FinanceDimension10
		LocalAccountingUnit					is like AccountingUnit 
		LocalProject 						is like Project   
		LocalPrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear			
		LocalPrmGeneralLedgerCalendarYear	is a Year 
#ifdef module integration
		NewBODTracker  						is a FSMInboundBODTracker view
#endif
		LocalFSMInboundBODTracker			is Numeric 15
		Error            					is Boolean
	    ErrorMessage     					is Alpha 300
	    LocalBODTrigger						is Boolean
#ifdef module Allocations
		LocalAllocationRun				is an AllocationRun
#endif
		NativeLPLBODTrigger				is Boolean
		NativeLPLBODTriggerExclude 		is Boolean
		LocalCodeBlockRelation			is a CodeBlockRelation
		LocalKeyFromValue				is Alpha 200
		LocalKeyToValue					is Alpha 200
		LocalFinanceEnterpriseGroup1	is like FinanceEnterpriseGroup
		LocalAccountingEntity			is an AccountingEntity
		LocalParentAccountingEntity		is an AccountingEntity
		LocalChildEntity				is an AccountingEntity
		LocalReportingBasis				is like ReportingBasis
		TopNodeFound					is Boolean
		LocalConfigurationParameter		is Alpha size up to 200
		LocalAEAlreadyExecuted			is Boolean
		LocalBODAccountingEntity  		is Alpha 50
		LocalBackgroundGroup			is Alpha 200
		
    Conditions
    	NotMemberOfGroup
    		restricted
    		when (PostingEntity
    		and   !AccountingEntityGroupMemberRel exists)
  		TransactionsExists
  			restricted
            when (UsedByATransaction)
        DeleteAllowed
        	restricted
        	when (Status.Delete)
  		AlternateCurrencyExists
  			restricted
            when (AlternateCurrency entered)
  		AlternateCurrency2Exists
  			restricted
            when (AlternateCurrency2 entered)
  		AlternateCurrency3Exists
  			restricted
            when (AlternateCurrency3 entered)            
		SubordinatesExist
			restricted
			when (HierarchyDetailRel exists)
		HierarchyRecordsExist
			restricted
			when (SubordinateInTopNodeRel exists)
		AccountingEntitiesForReportingBasis
			restricted
			when (HierarchyRecordRel exists)
		PostingAccountingEntitiesForReportingBasis
			restricted
			when (HierarchyRecordRel exists
			and PostingEntity)
		HelperListEntities
			restricted
			when (PostingEntity
			and  !HelperListAccountingEntityRel exists)
		PostingEntity
			restricted
			when (!IsTopNode
			and   !IsAcctUnitStructureEntity
			and	DimensionType.Posting)
		ActivePostingEntity
			restricted
			when (PostingEntity
			and   Status.Active)
		ADBPostingEntity
			restricted
			when (PostingEntity
			and   AverageDailyBalance)
		CalendarSetupChanged
			restricted
			when (PostingEntity
			and   DerivedClosePeriodsInPriorYears !=  DerivedEntityPeriodsInPriorYears)
		RecurringJournalClosing
			restricted
			when (PostingEntity
			and   RJSystemClosingControlRel.Control)
		ProjectClosing
			restricted
			when (PostingEntity
			and   PSSystemClosingControlRel.Control)
		CostAllocationClosing
			restricted
			when (PostingEntity
			and   CASystemClosingControlRel.Control)
		GLJournalClosing
			restricted
			when (PostingEntity
			and   GLSystemClosingControlRel.Control)
		FutureChanges
			restricted
			when (this instance.has future changes)
		DimAndEntityZoneBalance
			restricted
			when (PostingEntity
			and  (AccountingUnitZoneBalancing
			or    FinanceEnterpriseGroup.Dimension1ZoneBalancing))
		BalanceTransactionCurrency
			when (CurrencyLedger.TransactionAmount
			or    CurrencyLedger.AllCurrencyAmounts)		

#ifdef module ap
		VendorAccountRestrictionsExist		
			when (VendorAccountRestrictionRel exists)
#endif

		SecurityGroupAllowsAccess
			when ((actor.context.AccountingEntitySecurityGroup = "")
			or    (BypassActiveCodeBlockEdit)
			or    (actor.context.AccountingEntitySecurityGroup != ""
			and    AccountingEntitySecurityGroupMemberRel exists))
	
		AccountingEntitySecurityGroupAllowsAccess
			when ((actor.context.AccountingEntitySecurityGroup = "")
			or    (BypassActiveCodeBlockEdit)
			or    (actor.context.AccountingEntitySecurityGroup != ""
			and    AccountingEntitySecurityGroupMemberRel exists))
	
#ifdef module ad
        AverageDailyBalanceEntities 
    		restricted
            when (ADBAccountMasterRel exists)
#endif
		NotInContextHierarchyEntity
			restricted
			when (PostingEntity
			and  !AccountingEntityInContextReportingBasisRel exists)

		EligibleParent
			restricted
			when (DimensionType.Summary
			and	EntityBasis	= ReportingBasis
			and	AccountingEntity != ContextEntity
			and	AccountingEntity != ContextEntityRel.ParentEntity
			and	!DescendantOfContextEntity)

		EligibleToRemove
			restricted
			when (!ChildrenRel exists)

		EligibleToRemoveFromBasis
			restricted
			when (EligibleToRemove
			and !ReportingBasis.IsForAccountAnalysis
			and RemoveFromReportingBasisInProgress = false)

		NodeDimension
			restricted
			when (DimensionType.Node
			or IsTopNode)

		InContextSummaryEntities
			restricted
			when(AccountingEntityInContextReportingBasisRel exists
			and DimensionType.Summary)

	Relations

		AccountingEntityHierarchyRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= ReportingBasis.AccountingEntityTopNode
				related.SubordinateAccountingEntity		= AccountingEntity 
				related.AccountingEntity				= ReportingBasis.AccountingEntityTopNode

		AccountingEntityLocalShadowRel
			one-to-many relation to AccountingEntityShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ReportingBasis			= LocalReportingBasis
				related.AccountingEntity		= LocalAccountingEntity

		AccountingEntityInContextReportingBasisRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup
				related.TopNode							= ReportingBasis.AccountingEntityTopNode
				related.SubordinateAccountingEntity		= AccountingEntity
			valid when (!NodeDimension)

		PostingEntitiesRel
			one-to-many relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.NotInContextHierarchyEntity)		

		ContextEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= ContextEntity

		DescendantsRel
			one-to-many relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AccountingEntity	   = ShadowDescendantsRel.AccountingEntity

		ShadowDescendantsRel
			one-to-many relation to AccountingEntityShadow
			delete cascades
			Field Mapping uses BySummaryEntity
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SummaryEntity			    = AccountingEntity	

		DescendantOfContextEntityRel
			one-to-one relation to AccountingEntityShadow
			Field Mapping uses BySummaryEntity
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.SummaryEntity					= ContextEntity
				related.AccountingEntity				= AccountingEntity

		CurrentYearClosePeriodsRel 
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses ByEndDateForYear
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
				related.GeneralLedgerCloseYear				= FiscalYear	

		AllClosePeriodsRel 
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCloseYear <= LocalYear)

		AllPeriodsForYearRel 
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses ByEndDateForYear
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
				related.GeneralLedgerCloseYear				= LocalYear			
		AccountingEntityPeriodRel

			one-to-many relation to AccountingEntityPeriod
			valid when (PostingEntity)
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
		ChildrenRel
			one-to-many relation to AccountingEntity
			disable subset select on dependent relation	
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				related.AccountingEntity		= HierarchyDetailRel.SubordinateAccountingEntity		
		HierarchyDetailRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses ByParent
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
		ParentRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses BySubordinate
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity		= AccountingEntity
			Instance Selection
				where (related.AccountingEntity.TopNode	= DerivedTopNode)
		SubordinateInTopNodeRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= DerivedTopNode
				related.SubordinateAccountingEntity		= AccountingEntity			
		HierarchyRecordRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup       = FinanceEnterpriseGroup
				related.TopNode           			 = DerivedTopNode
				related.SubordinateAccountingEntity	 = AccountingEntity 								
		HelperListAccountingEntityRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= ReportingBasis.AccountingEntityTopNode
				related.SubordinateAccountingEntity		= AccountingEntity 
		GeneralLederClosePeriodRel
			one-to-one relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)			
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration	= CloseConfiguration
				related.GeneralLedgerClosePeriod		= CurrentPeriod
		NextGeneralLederClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod > LocalEndCalendarPeriod)
		PreviousGeneralLederClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod < LocalEndCalendarPeriod)
		CurrentGeneralLederClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = LocalEndCalendarPeriod)
		AccountingEntityPeriodValidity
			one-to-many relation to AccountingEntityPeriod
			valid when (PostingEntity)
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerClosePeriod			= LocalPeriod
		AccountingEntityInBasisRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses ByTopNodeInSubordinate
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity		= AccountingEntity			
		CodeBlockRelationRel
			one-to-one relation to CodeBlockRelation
			Field Mapping uses ByFromTo
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.FromField				= 0
				related.ToField					= 1
		CodeBlockRelationDetailRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.CodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
				related.AccountingEntity		= AccountingEntity
		NewYearEntityLedgerPeriodRel
			one-to-one relation to EntityLedgerPeriod
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= AccountingEntity
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= LocalGeneralLedgerCalendarPeriod
				related.Ledger						= LocalLedger
		SelectYearAccountingEntityPeriod
			one-to-many relation to AccountingEntityPeriod
			valid when (PostingEntity)
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCloseYear = LocalYear)
		SystemAccountCheckRel
			one-to-many relation to Account
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
			Instance Selection
				where (related.SystemAccount		= LocalSystemAccount)
		ClosePeriodLessThanFiscalYearRel
			one-to-many relation to GeneralLedgerClosePeriod
			valid when (PostingEntity)
			Field Mapping uses ByEndDateForYear
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerCloseYear		< FiscalYear)
		EntityPeriodLessThanFiscalYearRel
			one-to-many relation to AccountingEntityPeriod
			valid when (PostingEntity)
			delete cascades
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCloseYear < FiscalYear)
		EnterpriseAccountingUnitEntityNodeRel
			one-to-one relation to AccountingUnit
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity 			= AccountingEntity
				related.AccountingUnit				= DerivedEnterpriseAccountingUnitEntityNode
		ContextStructureAccountingUnitEntityNodeRel
			one-to-one relation to AccountingUnit
			valid when (PostingEntity)
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity 			= AccountingEntity
				related.AccountingUnit				= DerivedContextAccountingUnitEntityNode
		UnusedPostingAccountingUnitsRel
			one-to-many relation to AccountingUnit
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity 			= AccountingEntity
			Instance Selection
				where (related.HelperListAccountingUnit)
		JournalsToPostRel
			one-to-many relation to GeneralLedgerJournalControl
			valid when (PostingEntity)
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.Status					 = 1				
				related.AccountingEntity		 = AccountingEntity 
			Instance Selection
				where (((LocalLedger entered
				and      related.Ledger 		 = LocalLedger)
				or      !LocalLedger entered)
				and   ((LocalSystemCode entered
				and     related.System 			 = LocalSystemCode)
				or      !LocalSystemCode entered))   	
		AccountingEntityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			valid when (PostingEntity)
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AccountingEntityGroup  = AccountingEntityGroup
				related.AccountingEntity	   = AccountingEntity
		UnpostedGeneralLedgerJournalControlRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup

			Instance Selection
				where ((related.Status			= 1
				or 	   related.Status			= 2)
				and    related.AccountingEntity	= AccountingEntity)

		EntityNodeAccountingUnitRel is an AccountingUnit set
			Instance Selection
				where (related.AccountingUnitType = 4)
		InterEntityAccountsRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerChartAccount	= DerivedPayablesAccountSubAccount
				or 	   related.GeneralLedgerChartAccount	= DerivedReceivablesAccountSubAccount)
		InterDepartmentAccountsRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses ByAccount
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerChartAccount	= DerivedDepartmentPayablesAccount
				or 	   related.GeneralLedgerChartAccount	= DerivedDepartmentReceivablesAccount)

		PayablesInterDepartmentAccountTotalRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.Scenario									    = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= DerivedPayablesAccountSubAccount
			Instance Selection
				where (related.AccountingEntity							!= AccountingEntity
				and   ((AccountingEntity.SubAccount entered
				and     related.GeneralLedgerSubAccount					 = AccountingEntity.SubAccount)
				or     (AccountingEntity.FinanceDimension1 entered
				and     related.FinanceDimension1						 = AccountingEntity.FinanceDimension1)
				or     (AccountingEntity.FinanceDimension2 entered
				and     related.FinanceDimension2						 = AccountingEntity.FinanceDimension2)
				or     (AccountingEntity.FinanceDimension3 entered
				and     related.FinanceDimension3						 = AccountingEntity.FinanceDimension3)
				or     (AccountingEntity.FinanceDimension4 entered
				and     related.FinanceDimension4						 = AccountingEntity.FinanceDimension4)
				or     (AccountingEntity.FinanceDimension5 entered
				and     related.FinanceDimension5						 = AccountingEntity.FinanceDimension5)
				or     (AccountingEntity.FinanceDimension6 entered
				and     related.FinanceDimension6						 = AccountingEntity.FinanceDimension6)
				or     (AccountingEntity.FinanceDimension7 entered
				and     related.FinanceDimension7						 = AccountingEntity.FinanceDimension7)
				or     (AccountingEntity.FinanceDimension8 entered
				and     related.FinanceDimension8						 = AccountingEntity.FinanceDimension8)
				or     (AccountingEntity.FinanceDimension9 entered
				and     related.FinanceDimension9						 = AccountingEntity.FinanceDimension9)
				or     (AccountingEntity.FinanceDimension10 entered
				and     related.FinanceDimension10						 = AccountingEntity.FinanceDimension10))
				and    (related.GeneralLedgerTotal.Ledger.CloseLedger    = false))

		ReceivablesInterDepartmentAccountTotalRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
				related.Scenario									    = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= DerivedReceivablesAccountSubAccount
			Instance Selection
				where (related.AccountingEntity							!= AccountingEntity
				and   ((AccountingEntity.SubAccount entered
				and     related.GeneralLedgerSubAccount					 = AccountingEntity.SubAccount)
				or     (AccountingEntity.FinanceDimension1 entered
				and     related.FinanceDimension1						 = AccountingEntity.FinanceDimension1)
				or     (AccountingEntity.FinanceDimension2 entered
				and     related.FinanceDimension2						 = AccountingEntity.FinanceDimension2)
				or     (AccountingEntity.FinanceDimension3 entered
				and     related.FinanceDimension3						 = AccountingEntity.FinanceDimension3)
				or     (AccountingEntity.FinanceDimension4 entered
				and     related.FinanceDimension4						 = AccountingEntity.FinanceDimension4)
				or     (AccountingEntity.FinanceDimension5 entered
				and     related.FinanceDimension5						 = AccountingEntity.FinanceDimension5)
				or     (AccountingEntity.FinanceDimension6 entered
				and     related.FinanceDimension6						 = AccountingEntity.FinanceDimension6)
				or     (AccountingEntity.FinanceDimension7 entered
				and     related.FinanceDimension7						 = AccountingEntity.FinanceDimension7)
				or     (AccountingEntity.FinanceDimension8 entered
				and     related.FinanceDimension8						 = AccountingEntity.FinanceDimension8)
				or     (AccountingEntity.FinanceDimension9 entered
				and     related.FinanceDimension9						 = AccountingEntity.FinanceDimension9)
				or     (AccountingEntity.FinanceDimension10 entered
				and     related.FinanceDimension10						 = AccountingEntity.FinanceDimension10))
				and    (related.GeneralLedgerTotal.Ledger.CloseLedger    = false))

		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.SystemAccount					= LocalSystemAccount
		RJSystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerSystemCode				= "RJ"
		PSSystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerSystemCode				= "PS"
		CASystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerSystemCode				= "CA"
		GLSystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerSystemCode				= "GL"
		RecurringJournalScheduleRel
			one-to-many relation to RecurringJournalSchedule
			Field Mapping uses ByProcessedPeriodJournal
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
				related.GeneralLedgerClosePeriod			= CurrentPeriod
				related.PeriodSelected						= true
				related.PeriodProcessed						= false
			Instance Selection
				where (!related.RecurringJournalControl.Status.Deleted)
		UnpostedRecurringJournalsRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where ((related.Status				= 1
				or 	    related.Status				= 2
				or 	    related.Status				= 3)
				and		related.System				= "RJ"
				and		related.AccountingEntity	= AccountingEntity
				and     related.GeneralLedgerClosePeriod = CurrentPeriod)
		UnpostedProjectJournalsRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where ((related.Status				= 1
				or 	    related.Status				= 2
				or 	    related.Status				= 3)
				and		related.System				= "PS"
				and		related.AccountingEntity	= AccountingEntity
				and     related.GeneralLedgerClosePeriod = CurrentPeriod)
		UnpostedCostAllocationJournalsRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where ((related.Status				= 1
				or 	    related.Status				= 2
				or 	    related.Status				= 3)
				and		related.System				= "CA"
				and		related.AccountingEntity	= AccountingEntity
				and     related.GeneralLedgerClosePeriod = CurrentPeriod)
				
		GeneralLedgerTotalInterEntityPayablesRel
			one-to-many relation to GeneralLedgerTotal 
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 = FinanceEnterpriseGroup
				related.Scenario									 = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalPayablesEntityAccount
				related.AccountingEntity							 = AccountingEntity 
			Instance Selection 
				where (((LocalGeneralLedgerCalendarPeriod entered
				and      related.GeneralLedgerTotal.EntityYearPeriod.Date > LocalStartDate
				and 	 related.GeneralLedgerTotal.EntityYearPeriod.Date <= LocalEndDate)
				or      !LocalGeneralLedgerCalendarPeriod entered)
				and    ((LocalDateRange entered
				and		 related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				or 		!LocalDateRange entered) 
				and    ((LocalDimension	entered 
				and 	(related.FinanceDimension1 entered  
				and 	 related.FinanceDimension1  = LocalDimension1)
				or 		(related.FinanceDimension2 entered 
				and		 related.FinanceDimension2  = LocalDimension2)
				or 		(related.FinanceDimension3 entered 
				and      related.FinanceDimension3  = LocalDimension3)
				or 		(related.FinanceDimension4 entered  
				and    	 related.FinanceDimension4  = LocalDimension4)
				or 		(related.FinanceDimension5 entered 
				and 	 related.FinanceDimension5  = LocalDimension5)
				or 		(related.FinanceDimension6 entered 
				and 	 related.FinanceDimension6  = LocalDimension6)
				or 		(related.FinanceDimension7 entered 
				and		 related.FinanceDimension7  = LocalDimension7)
				or 		(related.FinanceDimension8  entered 
				and		 related.FinanceDimension8  = LocalDimension8)
				or		(related.FinanceDimension9 entered  
				and      related.FinanceDimension9  = LocalDimension9)
				or      (related.FinanceDimension10 entered  
				and 	 related.FinanceDimension10 = LocalDimension10))
				or 		 LocalDimension not entered)



				and     (related.IsOpenPeriod))
		
		GeneralLedgerTotalOnlyAccountPayablesRel
			one-to-many relation to GeneralLedgerTotal 
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 = FinanceEnterpriseGroup
				related.Scenario									 = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalPayablesEntityAccount
				related.AccountingEntity							 = AccountingEntity 
			Instance Selection 
				where (((LocalGeneralLedgerCalendarPeriod entered
				and      related.GeneralLedgerTotal.EntityYearPeriod.Date > LocalStartDate
				and 	 related.GeneralLedgerTotal.EntityYearPeriod.Date <= LocalEndDate)
				or      !LocalGeneralLedgerCalendarPeriod entered)
				and    ((LocalDateRange entered
				and		 related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				or 		!LocalDateRange entered)
				and 	(related.FinanceDimension1 not entered 
				and		 related.FinanceDimension2 not entered
				and      related.FinanceDimension3 not entered 
				and   	 related.FinanceDimension4 not entered 
				and		 related.FinanceDimension5 not entered 
				and 	 related.FinanceDimension6 not entered 
				and		 related.FinanceDimension7 not entered 
				and 	 related.FinanceDimension8 not entered 
				and		 related.FinanceDimension9 not entered 
				and      related.FinanceDimension10 not entered)



				and     (related.IsOpenPeriod))
				
		GeneralLedgerTotalInterEntityReceivablesRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 = FinanceEnterpriseGroup
				related.Scenario									 = FinanceEnterpriseGroup.ActualsScenario			 
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalReceivablesEntityAccount
				related.AccountingEntity							 = AccountingEntity
			Instance Selection 
				where (((LocalGeneralLedgerCalendarPeriod entered
				and      related.GeneralLedgerTotal.EntityYearPeriod.Date > LocalStartDate
				and 	 related.GeneralLedgerTotal.EntityYearPeriod.Date <= LocalEndDate)
				or      !LocalGeneralLedgerCalendarPeriod entered)	
				and    ((LocalDateRange entered
				and		 related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				or 		!LocalDateRange entered)
				and    ((LocalDimension	entered 
				and 	(related.FinanceDimension1 entered  
				and 	 related.FinanceDimension1  = LocalDimension1)
				or 		(related.FinanceDimension2 entered 
				and		 related.FinanceDimension2  = LocalDimension2)
				or 		(related.FinanceDimension3 entered 
				and      related.FinanceDimension3  = LocalDimension3)
				or 		(related.FinanceDimension4 entered  
				and    	 related.FinanceDimension4  = LocalDimension4)
				or 		(related.FinanceDimension5 entered 
				and 	 related.FinanceDimension5  = LocalDimension5)
				or 		(related.FinanceDimension6 entered 
				and 	 related.FinanceDimension6  = LocalDimension6)
				or 		(related.FinanceDimension7 entered 
				and		 related.FinanceDimension7  = LocalDimension7)
				or 		(related.FinanceDimension8  entered 
				and		 related.FinanceDimension8  = LocalDimension8)
				or		(related.FinanceDimension9 entered  
				and      related.FinanceDimension9  = LocalDimension9)
				or      (related.FinanceDimension10 entered  
				and 	 related.FinanceDimension10 = LocalDimension10))
				or 		 LocalDimension not entered)



				and     (related.IsOpenPeriod))
			
		GeneralLedgerTotalOnlyAccountReceivablesRel
			one-to-many relation to GeneralLedgerTotal 
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 = FinanceEnterpriseGroup
				related.Scenario									 = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalReceivablesEntityAccount
				related.AccountingEntity							 = AccountingEntity 
			Instance Selection 
				where (((LocalGeneralLedgerCalendarPeriod entered
				and      related.GeneralLedgerTotal.EntityYearPeriod.Date > LocalStartDate
				and 	 related.GeneralLedgerTotal.EntityYearPeriod.Date <= LocalEndDate)
				or      !LocalGeneralLedgerCalendarPeriod entered)
				and    ((LocalDateRange entered
				and		 related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				or 		!LocalDateRange entered)
				and 	(related.FinanceDimension1 not entered 
				and		 related.FinanceDimension2 not entered
				and      related.FinanceDimension3 not entered 
				and   	 related.FinanceDimension4 not entered 
				and		 related.FinanceDimension5 not entered 
				and 	 related.FinanceDimension6 not entered 
				and		 related.FinanceDimension7 not entered 
				and 	 related.FinanceDimension8 not entered 
				and		 related.FinanceDimension9 not entered 
				and      related.FinanceDimension10 not entered)



				and     (related.IsOpenPeriod))
					
					
		GeneralLedgerTotalInterEntityNettingRel
			one-to-many relation to GeneralLedgerTotal 
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 	= FinanceEnterpriseGroup
				related.Scenario									 	= FinanceEnterpriseGroup.ActualsScenario 
				related.GeneralLedgerTotal.GeneralLedgerChartAccount 	= LocalInterEntityNettingAccount
				related.AccountingEntity							 	= AccountingEntity
			Instance Selection 
				where (((LocalDateRange.Begin entered and LocalDateRange.End entered)
				and related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				and	!related.GeneralLedgerTotal.Ledger.CloseLedger				
				and (related.FinanceEnterpriseGroup.InterEntityDimension not entered
				or	related.FinanceEnterpriseGroup.InterEntityDimension.SubAccount 
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension1
				and	related.FinanceDimension1 = LocalDimension1)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension2
				and	related.FinanceDimension2 = LocalDimension2)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension3
				and	related.FinanceDimension3 = LocalDimension3)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension4
				and	related.FinanceDimension4 = LocalDimension4)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension5
				and	related.FinanceDimension5 = LocalDimension5)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension6
				and	related.FinanceDimension6 = LocalDimension6)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension7
				and	related.FinanceDimension7 = LocalDimension7)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension8
				and	related.FinanceDimension8 = LocalDimension8)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension9
				and	related.FinanceDimension9 = LocalDimension9)
				or	(related.FinanceEnterpriseGroup.InterEntityDimension.Dimension10
				and	related.FinanceDimension10 = LocalDimension10)))

		GeneralLedgerTotalAllInterEntityNettingRel
			one-to-many relation to GeneralLedgerTotal 
			Field Mapping uses ByGeneralLedgerChartAccountPeriod
				related.FinanceEnterpriseGroup						 = FinanceEnterpriseGroup
				related.Scenario									 = FinanceEnterpriseGroup.ActualsScenario
			Instance Selection 
				where (((LocalDateRange.Begin entered and LocalDateRange.End entered)
				and related.GeneralLedgerTotal.EntityYearPeriod.Date within LocalDateRange)
				and	!related.GeneralLedgerTotal.Ledger.CloseLedger
				and	related.GeneralLedgerTotal.GeneralLedgerChartAccount.IsAInterEntityAccount
				and	related.AccountingEntity	= AccountingEntity)

		EntityLedgerLastOpenPeriodsRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByLedgerEntity
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Ledger						= FinanceEnterpriseGroup.CoreLedger
				related.AccountingEntity			= AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCloseYear = LocalPrmGeneralLedgerCalendarYear
				and (related.PeriodStatus.Open
				or	related.PeriodStatus.Backpost)
				and	related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= LocalEndingDate)

		EntityLedgerYearPeriodsRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByLedgerEntity
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Ledger						= FinanceEnterpriseGroup.CoreLedger
				related.AccountingEntity			= AccountingEntity
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCloseYear = LocalPrmGeneralLedgerCalendarYear)

		GeneralLedgerSubAccountRel
			one-to-many relation to GeneralLedgerSubAccount
			Field Mapping uses symbolic key 		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				
		AccountingEntityToDimension1Rel
			one-to-many relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension2Rel
			one-to-many relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension3Rel
			one-to-many relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)			 
		
		AccountingEntityToDimension4Rel
			one-to-many relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension5Rel
			one-to-many relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension6Rel
			one-to-many relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension7Rel
			one-to-many relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)	
		
		AccountingEntityToDimension8Rel
			one-to-many relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)
		
		AccountingEntityToDimension9Rel
			one-to-many relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)													
		
		AccountingEntityToDimension10Rel
			one-to-many relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.DimensionType = 1)		
		
		AccountingEntityToSystemDimension1Rel
			one-to-many relation to FinanceDimension1
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension1)
		
		AccountingEntityToSystemDimension2Rel
			one-to-many relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension2)
		
		AccountingEntityToSystemDimension3Rel
			one-to-many relation to FinanceDimension3
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension3)			 
		
		AccountingEntityToSystemDimension4Rel
			one-to-many relation to FinanceDimension4
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension4)
		
		AccountingEntityToSystemDimension5Rel
			one-to-many relation to FinanceDimension5
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension5)
		
		AccountingEntityToSystemDimension6Rel
			one-to-many relation to FinanceDimension6
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension6)
		
		AccountingEntityToSystemDimension7Rel
			one-to-many relation to FinanceDimension7
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension7)	
		
		AccountingEntityToSystemDimension8Rel
			one-to-many relation to FinanceDimension8
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension8)
		
		AccountingEntityToSystemDimension9Rel
			one-to-many relation to FinanceDimension9
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension9)													
		
		AccountingEntityToSystemDimension10Rel
			one-to-many relation to FinanceDimension10
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
			Instance Selection 
				where (related.SystemDimension10)		
		
		AccountingEntityToSystemProjectRel
			one-to-many relation to Project 
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	   = FinanceEnterpriseGroup
			Instance Selection 
				where (related.IsASystemProject
				and    related.ProjectType = 1) 	

		SystemFinanceDimension1Rel
			one-to-one relation to FinanceDimension1Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension1Structure			= FinanceEnterpriseGroup.EnterpriseDim1Structure
		SystemFinanceDimension2Rel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension2Structure			= FinanceEnterpriseGroup.EnterpriseDim2Structure
		SystemFinanceDimension3Rel
			one-to-one relation to FinanceDimension3Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension3Structure			= FinanceEnterpriseGroup.EnterpriseDim3Structure
		SystemFinanceDimension4Rel
			one-to-one relation to FinanceDimension4Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension4Structure			= FinanceEnterpriseGroup.EnterpriseDim4Structure
		SystemFinanceDimension5Rel
			one-to-one relation to FinanceDimension5Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension5Structure			= FinanceEnterpriseGroup.EnterpriseDim5Structure
		SystemFinanceDimension6Rel
			one-to-one relation to FinanceDimension6Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension6Structure			= FinanceEnterpriseGroup.EnterpriseDim6Structure
		SystemFinanceDimension7Rel
			one-to-one relation to FinanceDimension7Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension7Structure			= FinanceEnterpriseGroup.EnterpriseDim7Structure
		SystemFinanceDimension8Rel
			one-to-one relation to FinanceDimension8Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension8Structure			= FinanceEnterpriseGroup.EnterpriseDim8Structure
		SystemFinanceDimension9Rel
			one-to-one relation to FinanceDimension9Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension9Structure			= FinanceEnterpriseGroup.EnterpriseDim9Structure
		SystemFinanceDimension10Rel
			one-to-one relation to FinanceDimension10Hierarchy
			Field Mapping uses BySystemDimensionInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FinanceDimension10Structure			= FinanceEnterpriseGroup.EnterpriseDim10Structure		
		SystemProjectRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses BySystemProjectInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.ProjectStructure					= FinanceEnterpriseGroup.EnterpriseProjectStructure

		LastGeneralLedgerClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration		= CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod < LocalGeneralLedgerCalendarPeriod)	
				
#ifdef module Allocations
		UnjournalizedAllocationRunsRel
			one-to-many relation to AllocationRun
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.AllocationSourceSystem.Allocation
				and    related.AllocationPeriod.EndDateJulian = CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.EndDateJulian
				and    not related.Status.Journalized
				and    not related.Status.Failed
				and    not related.Status.Canceled)
		UnjournalizedAllocationTransactionDetailsRel
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationRun
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AllocationRun			= LocalAllocationRun
			Instance Selection
				where (related.AccountingEntity = AccountingEntity
				or     related.FinanceCodeBlock.ToAccountingEntity = AccountingEntity)
#endif
		UnpostedGLJournalsRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where ((related.Status				= 0
				or		related.Status				= 1
				or 	    related.Status				= 2
				or 	    related.Status				= 3)
				and		related.System				= "GL"
				and		related.AccountingEntity	= AccountingEntity
				and     related.GeneralLedgerClosePeriod = CurrentPeriod)
		ReportingBasisForEntityRel
			one-to-many relation to AccountingEntityHierarchy
			delete restricted
			Field Mapping uses BySubordinate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity	= AccountingEntity
		ZoneAccountGeneralLedgerTotalRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByGeneralLedgerChartAccountPeriod 
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Scenario					= FinanceEnterpriseGroup.ActualsScenario

			Instance Selection
				where ((related.GeneralLedgerTotal.GeneralLedgerChartAccount = DerivedZonePayablesAccount
				or      related.GeneralLedgerTotal.GeneralLedgerChartAccount = DerivedZoneReceivablesAccount)
				and	   (related.AccountingEntity			                 = AccountingEntity))
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod < LocalEndCalendarPeriod)
		GeneralLedgerCalendarPeriodNettingRel
			one-to-many relation to GeneralLedgerCalendarPeriod 
			Field Mapping uses LeafRecords 
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup 
			Instance Selection 
				where (related.Date 			not < LocalEndingDate)	
		GeneralLedgerCalendarSpecificPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.GeneralLedgerCalendarPeriod = LocalGeneralLedgerCalendarPeriod )		
		ReleasedJournalsRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Status					= 1
				related.AccountingEntity		= AccountingEntity
			Instance Selection
				where (((LocalLedger entered 
				and      related.Ledger			= LocalLedger)
				or       !LocalLedger entered)
				and    ((LocalSystemCode entered
				and      related.System			= LocalSystemCode)
				or		 !LocalSystemCode entered))
		AccountingUnitEntityNodeRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
			Instance Selection
				where (related.AccountingUnitType = 4)	
		SystemPostingAccountingUnitRel
			one-to-many relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
			Instance Selection
				where (related.SystemPostingAccountingUnit)									
#ifdef module glif
		CompanySystemClosingRel
			one-to-many relation to CompanySystemClosingControl
			Field Mapping uses symbolic key
#endif	
		GeneralLedgerZoneTotalRel
			one-to-many relation to GeneralLedgerZoneTotal
			Field Mapping uses ByBalanceUpdated
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.BalanceUpdated			 = 0				
				related.AccountingEntity		 = AccountingEntity 
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = LocalGeneralLedgerCalendarPeriod
#ifdef module ad
		ADBAccountMasterRel
			one-to-many relation to ADBAccountMaster
			Field Mapping uses ByEntityAccount
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
		AverageDailyBalanceAccountRel
			one-to-many relation to AverageDailyBalanceAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
#endif	
		InterEntityFromRel
			one-to-many relation to GLInterEntityRelation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= AccountingEntity
		InterEntityToRel
			one-to-many relation to GLInterEntityRelation
			Field Mapping uses ByToAccountingEntity
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.ToAccountingEntity					= AccountingEntity
				
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.AccountingEntityGroup       = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity            = AccountingEntity
				
		EntityInAverageDailyBalanceBasisRel	
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses BySubordinate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity	= AccountingEntity
			Instance Selection
				where (related.ReportingBasisRel.ReportingBasis.AverageDailyBalance)

#ifdef module ap
		VendorAccountRestrictionRel		
			one-to-many relation to VendorAccountRestriction
			Field Mapping uses ByAccountEntity
				related.VendorGroup					= PayablesInvoice.Vendor.VendorGroup
				related.Vendor						= PayablesInvoice.Vendor
			Instance Selection
				where (related.AccountingEntity = AccountingEntity
				or    (related.AccountingEntity !entered
				and    related.GeneralLedgerChartAccount entered))
#endif















#ifdef module integration				
		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter
        
        FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "AccountingEntity"
            	related.FSMBODConfiguration.Direction 	= 1
		
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
        
        FSMBODAECrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFAE"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= BODAccountingEntityFEG )

#endif
            	


		AccountingUnitPostTypeByEntityRel	
			one-to-many relation to AccountingUnit
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AccountingEntity       = AccountingEntity
				
		HierarchyRecordForAccountAnalysisRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup       = FinanceEnterpriseGroup
				related.TopNode           			 = LocalAccountAnalysisTopNode
				related.SubordinateAccountingEntity  = AccountingEntity 								
#ifdef module integration
		BODTaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TaxEntity				= AccountingEntity
#endif

		CodeBlockRelationDetailFromToRel
			one-to-one relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.CodeBlockRelation					= LocalCodeBlockRelation
				related.KeyFromValue						= LocalKeyFromValue
				related.KeyToValue							= LocalKeyToValue

#ifdef module lm
		LeaseAccountingEntityRel
			one-to-many relation to Lease
			Field Mapping uses symbolic key
			Instance Selection 
				where (related.Company.AccountingEntity = AccountingEntity)
#endif
		AccountingEntityRel1
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup1
				related.AccountingEntity			= LocalAccountingEntity
					
		SystemAccountCheckRel1
			one-to-many relation to Account
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup1
			Instance Selection
				where (related.SystemAccount		= LocalSystemAccount)

		LocalReportingBasisRel
			one-to-one relation to ReportingBasis
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingBasis				= LocalReportingBasis

	Sets				






		ByCloseConfiguration
			Sort Order
				FinanceEnterpriseGroup
				CloseConfiguration
				AccountingEntity
							
	Field Rules
		AccountingEntity
			if 	(PostingEntity
			and  action type.Create)
				if (FinanceEnterpriseGroup.AccountingEntityRegularExpression entered)
					constraint (AccountingEntity matches FinanceEnterpriseGroup.AccountingEntityRegularExpression)
						"InvalidFormatFor<FinanceEnterpriseGroup.AccountingEntityLabel>"		
		Name
			if (PostingEntity)
				required
#ifdef module lm 	
		LeaseAccountingMethod 		 
			initial value is FinanceEnterpriseGroup.LeaseAccountingMethod
			if (LeaseAccountingEntityRel exists)
				cannot be changed 
					"CannotChangeLeaseAccountingMethod,LeasesExistsWithinThis<FinanceEnterpriseGroup.AccountingEntityLabel>"

		LeaseAccountingStandard	 
			initial value is FinanceEnterpriseGroup.LeaseAccountingStandard
			if (LeaseAccountingEntityRel exists)
				cannot be changed 
					"CannotChangeLeaseAccountingStandard,LeasesExistsWithinThis<FinanceEnterpriseGroup.AccountingEntityLabel>"


#endif
		FunctionalCurrency
			if (PostingEntity)
				if (old FunctionalCurrency entered
				and TransactionsExists)
					constraint (FunctionalCurrency	= old FunctionalCurrency)
						"FunctionalCurrencyCannotBeChanged"			
				required
		FunctionalAutoBalanceThreshold
			constraint (FunctionalCurrency entered)
				"Functional_CurrencyNotSpecified"
		AlternateCurrency
			if (PostingEntity)
				if (old AlternateCurrency entered
				and TransactionsExists)
					constraint (AlternateCurrency	= old AlternateCurrency)
						"AlternateCurrencyCannotBeChanged"
				if (AlternateCurrency entered
				and FunctionalCurrency	!= AlternateCurrency)
					constraint (FinanceEnterpriseGroup.CurrencyTable entered)
						"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency"
		AlternateAutoBalanceThreshold
			constraint (AlternateCurrency entered)
				"Alternate_CurrencyNotSpecified"
		AlternateCurrency2
			if (PostingEntity)		
				if (old AlternateCurrency2 entered
				and TransactionsExists)
					constraint (AlternateCurrency2	= old AlternateCurrency2)
						"AlternateCurrency2CannotBeChanged"
				if (AlternateCurrency2 entered
				and FunctionalCurrency	!= AlternateCurrency2)
					constraint (FinanceEnterpriseGroup.CurrencyTable entered)
						"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency2"
		Alternate2AutoBalanceThreshold
			constraint (AlternateCurrency2 entered)
				"Alternate_Currency2NotSpecified"
		AlternateCurrency3
			if (PostingEntity)		
				if (old AlternateCurrency3 entered
				and TransactionsExists)
					constraint (AlternateCurrency3	= old AlternateCurrency3)
						"AlternateCurrency3CannotBeChanged"
				if (AlternateCurrency3 entered
				and FunctionalCurrency	!= AlternateCurrency3)
					constraint (FinanceEnterpriseGroup.CurrencyTable entered)
						"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency3"						
		Alternate3AutoBalanceThreshold
			constraint (AlternateCurrency3 entered)
				"Alternate_Currency3NotSpecified"
		CloseConfiguration
			if (PostingEntity)
				required




		CurrentPeriod
			if (PostingEntity)
				required
				constraint (CurrentPeriod exists) 
					"ClosePeriodDoesNotExist"
				FiscalYear 			= CurrentPeriod.GeneralLedgerCloseYear
				if (CurrentPeriod != old CurrentPeriod)
					LocalYear	= FiscalYear - 1
					constraint (first AllPeriodsForYearRel exists)
						"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
					LocalYear	= FiscalYear
					constraint (first AllPeriodsForYearRel exists)
						"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
					LocalYear	= FiscalYear + 1
					constraint (first AllPeriodsForYearRel exists)
						"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
		AccountingUnitZoneBalancing
			constraint (FinanceEnterpriseGroup.AccountingUnitLabelExists)
				"AccountingUnitNotUsedInFinanceStructure"
			if (PostingEntity)		
				LocalSystemAccount	= SystemAccount.ZonePayablesAndReceivables 
				if (!SystemAccountCheckRel exists)			
					LocalSystemAccount	= SystemAccount.ZonePayables 
					constraint (SystemAccountCheckRel exists)
						"ZonePayablesIsNotSetupFor<FinanceEnterpriseGroup.AccountLabel>"

					LocalSystemAccount	= SystemAccount.ZoneReceivables 
					constraint (SystemAccountCheckRel exists)
						"ZoneReceivablesIsNotSetupFor<FinanceEnterpriseGroup.AccountLabel>"

		Status
			initial value is Status.Active
			default to Status.Active
			if (!PostingEntity)
				Status = Status.Active
		AutoBalance
			if (PostingEntity)		
				LocalSystemAccount	= SystemAccount.AutoBalance 
				constraint (SystemAccountCheckRel exists)
					"Required:SetupForAutoBalance<FinanceEnterpriseGroup.AccountLabel>"

		CurrencyLedger
			if (PostingEntity
			and CurrencyLedger.AllCurrencyAmounts)
				LocalSystemAccount	= SystemAccount.AutoBalance 
				constraint (SystemAccountCheckRel exists)
					"BalanceBy_All_Currency_Amounts_Requires_SetupFor_Auto_Balance<FinanceEnterpriseGroup.AccountLabel>"
				
		AverageDailyBalance
			if (PostingEntity)		
				constraint (!FinanceEnterpriseGroup.ADBSelection.None)
					"SetupForFinanceEnterpriseGroupADB_SelectionIsRequired"

		DisplayAccountingEntity
			initial value is AccountingEntity
			default to AccountingEntity

		DimensionType
			initial value is DimensionType.Posting
			if(IsTopNode)
				default to DimensionType.Node
			else
				default to DimensionType.Posting
			if(DimensionType.Summary)
				constraint(ReportingBasis entered)
					"Summary<FinanceEnterpriseGroup.AccountingEntityLabel>CanBeCreatedOnlyFromReportingBasis"

		ParentEntity
			if(!IsTopNode)
				default to DerivedTopNode

	Attach Rules
		if (!SkipAttachRule)
			if (!parentcontext.name = "AccountingUnit"
			and !parentcontext.name = "AccountingUnitUpload"
			and !parentcontext.name = "AccountingEntity"
			and !parentcontext.name = "AccountingUnitHierarchy"
			and !parentcontext.name = "AccountingUnitShadow"
			and !parentcontext.name = "AccountingUnitStructure"
			and !parentcontext.name = "AccountAnalysisSettings"
			and !parentcontext.name = "BudgetGroup"
			and !parentcontext.name = "BudgetTemplateMember"
			and !parentcontext.name = "BudgetTemplatePending"
			and !parentcontext.name = "BudgetChange"
			and !parentcontext.name = "BudgetImport"
			and !parentcontext.name = "AccountingEntityPeriod"
			and !parentcontext.name = "AccountingEntityHierarchy"
			and !parentcontext.name = "AccountingEntityShadow"
			and !parentcontext.name = "EntityLedgerPeriod"
			and !parentcontext.name = "CodeBlockRelationDetail"
			and !parentcontext.name = "ReconciliationAccount"
			and !parentcontext.name = "GeneralLedgerTotal"
			and !parentcontext.name = "ReportingBasis"
			and !parentcontext.name = "BudgetEntityLedger"
			and !parentcontext.name = "PurgeTransactionDetail" 
			and !parentcontext.name = "PurgeNotToBePostedTransactionDetail" 
            and !parentcontext.name = "AllocationLineSourceValue"
            and !parentcontext.name = "AllocationLineValue"			
            and !parentcontext.name = "AllocationLineSingleOverride"
            and !parentcontext.name = "AllocationLineTempOverride"
            and !parentcontext.name = "AllocationRunWeightDetail"
#ifdef module am
            and !parentcontext.name = "AssetTransactionSummary"
            and !parentcontext.name = "AssetTransactionBeginningBalance"
#endif
			and !BypassActiveCodeBlockEdit)
				constraint (Status.Active)
					"CannotAttachAnInactive<FinanceEnterpriseGroup.AccountingEntityLabel>"

	
	Apply Pending Effective Rules
		if((action type.Create or action type.Update) and (AsyncId not changed and ProcessStatus not changed) and !LocalBODTrigger)
			if (FinanceEnterpriseGroup.BODTrigger)
				if (action != "UpdateBODIdFields") 
					LocalActionCode = LocalActionCode.Update
					if (action type.Create)
						LocalActionCode = LocalActionCode.Create
					else
						if (action type.Delete)
							LocalActionCode = LocalActionCode.Delete
					increment bod id.VariationID       
					include AccountingEntityRules



					
	
	Audit Entry Rules
		if(not audit period.Future)
			if((action type.Create or action type.Update) and (AsyncId not changed and ProcessStatus not changed) and !LocalBODTrigger)
				if (FinanceEnterpriseGroup.BODTrigger)
					if (!action type.Delete)
						include AccountingEntityRules



	
	
	Action Exit Rules
		if((action type.Create or action type.Update) and (AsyncId not changed and ProcessStatus not changed) and !LocalBODTrigger)
			if (FinanceEnterpriseGroup.BODTrigger)
				if (!action type.Delete)
					if (action != "UpdateBODIdFields") 
						LocalActionCode = LocalActionCode.Update
						if (action type.Create)
							LocalActionCode = LocalActionCode.Create
						else
							if (action type.Delete)
								LocalActionCode = LocalActionCode.Delete
			
						increment bod id.VariationID
			




















 	Actions
 		Create is an Action
			completion message is "Created_<FinanceEnterpriseGroup.AccountingEntityLabel>"
            Field Rules
                SequenceNumber autosequence using FinanceEnterpriseGroup.AccountingEntityLastSeq

			Action Rules

			Exit Rules
				if (PostingEntity)
					include EntityCalendarSetUp

					invoke NotifyNewStructureComponent FinanceEnterpriseGroup
						invoked.PrmNewAccountingEntity			= AccountingEntity

    	Update is an Update Action
			completion message is "Updated_<FinanceEnterpriseGroup.AccountingEntityLabel>"

			Entrance Rules
#ifdef module ad
				if (AverageDailyBalance changed)
					if (AverageDailyBalance)
						constraint (instance count of EntityInAverageDailyBalanceBasisRel <= 1)
							"CannotChange_Average_Daily_Balance;<FinanceEnterpriseGroup.AccountingEntityLabel>_<AccountingEntity>ExistsInMultipleReportingBasisWithAverageDailyBalanceEnabled"
					else
						constraint (!ADBAccountMasterRel exists)
							"AverageDailyBalanceCannotBeChanged;SetupExistsInADBChartAccount"
						constraint (!AverageDailyBalanceAccountRel exists)
							"AverageDailyBalanceCannotBeChanged;SetupExistsInADBChartAccount"
#endif				
				if (PostingEntity)
					if(CloseConfiguration changed)
						constraint (!AccountingEntityInBasisRel exists)
							"CannotChangeCloseConfiguration;ExistsInReportingBasis"
					if (CurrentPeriod changed)
						constraint (!AccountingEntityInBasisRel exists)
							"CannotChangeCurrentPeriod;ExistsInReportingBasis"
					if (old FunctionalCurrency entered
					and TransactionsExists)
						constraint (FunctionalCurrency	= old FunctionalCurrency)
							"FunctionalCurrencyCannotBeChanged"			
					if (old AlternateCurrency entered
					and TransactionsExists)
						constraint (AlternateCurrency	= old AlternateCurrency)
							"AlternateCurrencyCannotBeChanged"

					if (old AlternateCurrency2 entered
					and TransactionsExists)
						constraint (AlternateCurrency2	= old AlternateCurrency2)
							"AlternateCurrency2CannotBeChanged"
					if (old AlternateCurrency3 entered
					and TransactionsExists)
						constraint (AlternateCurrency3	= old AlternateCurrency3)
							"AlternateCurrency3CannotBeChanged"
			Action Rules
					if (SubAccount changed)
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension1 changed)
						initialize SubAccount
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension2 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension3 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension4 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension5 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension6 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension7 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension8
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension8 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension9
						initialize FinanceDimension10
					if (FinanceDimension9 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension10
					if (FinanceDimension10 changed)
						initialize SubAccount
						initialize FinanceDimension1
						initialize FinanceDimension2
						initialize FinanceDimension3
						initialize FinanceDimension4
						initialize FinanceDimension5
						initialize FinanceDimension6
						initialize FinanceDimension7
						initialize FinanceDimension8
						initialize FinanceDimension9

    		Exit Rules
				if (PostingEntity)
					if (CurrentPeriod changed
					or	CloseConfiguration changed)
						invoke Delete AccountingEntityPeriodRel 
						include EntityCalendarSetUp
				if (Name changed)
					invoke UpdateDescription AccountingUnitEntityNodeRel
						invoked.PrmDescription = Name
						
		UpdateEntityBasis	is an Instance Action
			restricted
			Parameters
				PrmEntityBasis					is like ReportingBasis
			Action Rules
				if(PrmEntityBasis entered)
					EntityBasis = PrmEntityBasis
					
    	Delete is an Action
    		confirmation required
			completion message is "Deleted_<FinanceEnterpriseGroup.AccountingEntityLabel>"
    		valid when (DeleteAllowed)
			Entrance Rules
				invoke Delete EntityNodeAccountingUnitRel
				invoke Delete AccountingEntityPeriodRel
				if (FinanceEnterpriseGroup.BODTrigger)
					LocalActionCode = LocalActionCode.Delete
					increment bod id.VariationID
					include AccountingEntityRules



		
		RestrictedDelete is a Delete Action
			restricted
			valid when (DeleteAllowed)
			Entrance Rules
				invoke Delete EntityNodeAccountingUnitRel
				invoke Delete AccountingEntityPeriodRel
				invoke DeleteAll AccountingUnit set
				include AccountingEntityRules




		UpdateFiscalYearPeriod is an Instance Action
			restricted
			Parameters
				PrmEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity		is a AccountingEntity
					default label is "AccountingEntity"
				PrmFiscalYear			is a GeneralLedgerCloseYear
					default label is "FiscalYear"
				PrmCurrentPeriod		is a GeneralLedgerClosePeriod
					default label is "CurrentPeriod"

			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmAccountingEntity
					required
				PrmFiscalYear
					required
				PrmCurrentPeriod
					required

			Action Rules
				if (FiscalYear		< PrmFiscalYear)
					LocalYear			= PrmFiscalYear + 1
					for each AllPeriodsForYearRel
						LocalPeriod		= each.GeneralLedgerClosePeriod
						if (!AccountingEntityPeriodValidity exists)
							invoke Create AccountingEntityPeriod in foreground
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.AccountingEntity			= AccountingEntity
								invoked.GeneralLedgerClosePeriod	= each.GeneralLedgerClosePeriod


					for each CodeBlockRelationDetailRel
						LocalLedger					= each.Ledger
						for each SelectYearAccountingEntityPeriod
							LocalGeneralLedgerCloseYear			= each.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
							LocalGeneralLedgerCalendarPeriod	= each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
							if (!NewYearEntityLedgerPeriodRel exists)
								invoke Create Open NewYearEntityLedgerPeriodRel
				FiscalYear			= PrmCurrentPeriod.GeneralLedgerCloseYear
				CurrentPeriod		= PrmCurrentPeriod

		AddToReportingBasis is an Instance Action
			valid when(!ReportingBasis.IsForAccountAnalysis)
			Action Rules


				invoke Create AccountingEntityHierarchy
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup				
					invoked.AccountingEntity				= DerivedTopNode 
					invoked.SubordinateAccountingEntity   	= AccountingEntity
					invoked.TopNode							= DerivedTopNode 






				LocalReportingBasis = ReportingBasis
				invoke BuildShadowFile AccountingEntityHierarchy in foreground
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmReportingBasis	  	  = LocalReportingBasisRel.ReportingBasis
					invoked.PrmAccountingEntity		  = AccountingEntity

		FillEntityDimensionType	is a Set Action
			completion message is "FillEntityDimensionTypeSubmitted"
			restricted
            Action Rules
                Instance Rules
					if(DimensionType not entered)
						if(IsTopNode)
							DimensionType	= DimensionType.Node
						else
							DimensionType	= DimensionType.Posting
					if(DisplayAccountingEntity not entered)
						DisplayAccountingEntity	= AccountingEntity

		UpdateLevel is an Instance Action
			restricted
			Parameters
				PrmLevel				  		is Numeric 3
					default label is "Level"
				PrmParentAccountingEntity		is like AccountingEntity
					default label is "ParentAccountingEntity"
			Action Rules
				if (!DimensionType.Posting)	
					Level				 	= PrmLevel
					ParentAccountingEntity	= PrmParentAccountingEntity

		CreateChildSummaryWithin is an Instance Action
			valid when (DimensionType.Summary)
			allow user fields as parameters
			Parameters
				PrmAccountingEntity	 		is like AccountingEntity 
					default label is "<FinanceEnterpriseGroup.AccountingEntityLabel>"
				PrmName 					is a Name
					default label is "Name"
			Parameter Rules
				PrmAccountingEntity
					required
				PrmName
					required
			Local Fields
				LocalAccountingEntityView is a AccountingEntity view
			Action Rules
			Exit Rules
				invoke Create
					assign result to LocalAccountingEntityView
					fill in user fields from parameters
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.AccountingEntity		= ReportingBasis.BasisSequence +"_"+ PrmAccountingEntity
					invoked.DisplayAccountingEntity	= PrmAccountingEntity
					invoked.Name					= PrmName
					invoked.DimensionType			= DimensionType.Summary
					invoked.EntityBasis				= ReportingBasis
					invoked.ParentAccountingEntity	= AccountingEntity
					invoked.Status					= 0

				invoke CreateSummary AccountingEntityHierarchy
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.AccountingEntity				= AccountingEntity
					invoked.SubordinateAccountingEntity   	= LocalAccountingEntityView.AccountingEntity 
					invoked.TopNode							= ReportingBasis.AccountingEntityTopNode

				LocalReportingBasis = ReportingBasis
				invoke BuildShadowFile AccountingEntityHierarchy in foreground
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmReportingBasis	  	  = LocalReportingBasisRel.ReportingBasis
					invoked.PrmAccountingEntity		  = LocalAccountingEntityView.AccountingEntity

		AddPostingToSummary is an Instance Action
			valid when (DimensionType.Posting)
			Action Rules
				LocalAccountingEntity = ContextEntity
				invoke Create AccountingEntityHierarchy
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup				
					invoked.AccountingEntity				= ContextEntity 
					invoked.SubordinateAccountingEntity   	= AccountingEntity
					invoked.TopNode							= DerivedTopNode

				invoke BuildShadowFile AccountingEntityHierarchy in foreground
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmReportingBasis	  	  = LocalReportingBasisRel.ReportingBasis
					invoked.PrmAccountingEntity		  = AccountingEntity

		Move is an Instance Action
			valid when (!DimensionType.Node)
			Parameters
				PrmContextEntity	is a AccountingEntityContextValue
					default label is "Context<FinanceEnterpriseGroup.AccountingEntityLabel>"
				NewParent 			is a AccountingEntity
					default label is "Parent<FinanceEnterpriseGroup.AccountingEntityLabel>"
			Parameter Rules
				PrmContextEntity
					initial value is AccountingEntity
				NewParent
					default to DerivedTopNode
					required
					constraint (NewParent != AccountingEntity)
						"CannotMoveToSelf"
					constraint (NewParent.DimensionType.Summary
					or			NewParent.DimensionType.Node)
						"ParentMustBeASummaryNode"
					constraint (NewParent.EntityBasis = ReportingBasis)
						"ParentDoesNotBelongToThisStructure"
					constraint (NewParent != DerivedParentInContextEntity)
						"<NewParent.Name>IsAlreadyAParent<FinanceEnterpriseGroup.AccountingEntityLabel>"	
					TopNodeFound = false
					LocalAccountingEntity = NewParent
					if (!NewParent.DimensionType.Node)
						while (!TopNodeFound)
							constraint (AccountingEntity != LocalAccountingEntity.AccountingEntityInContextReportingBasisRel.AccountingEntity)
								"<AccountingEntity>MayNotBeMovedToADescendantOfItsOwnBranch" 
							if (LocalAccountingEntity.AccountingEntityInContextReportingBasisRel.AccountingEntity.DimensionType.Node
							or  AccountingEntity not entered)
								TopNodeFound = true
							else
								LocalAccountingEntity = LocalAccountingEntity.AccountingEntityInContextReportingBasisRel.AccountingEntity	
			Local Fields
				OldParent is like AccountingEntity
			Entrance Rules
				OldParent						= DerivedParentInContextEntity
				ParentEntity					= NewParent
			Action Rules
				ParentEntity					= NewParent
				if(AccountingEntityInContextReportingBasisRel exists)
					invoke DeleteSummary AccountingEntityInContextReportingBasisRel
				invoke CreateSummary AccountingEntityHierarchy
					invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup				
					invoked.AccountingEntity				= NewParent 
					invoked.SubordinateAccountingEntity   	= AccountingEntity
					invoked.TopNode							= DerivedTopNode				
			Exit Rules
 				LocalAccountingEntity 			= AccountingEntity
				LocalReportingBasis 			= ReportingBasis
				invoke BuildShadowFile AccountingEntityHierarchy in foreground
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmReportingBasis	  	  = LocalReportingBasisRel.ReportingBasis
					invoked.PrmAccountingEntity		  = AccountingEntity
				if(DimensionType.Summary)
					invoke WalkDownHierarchy

		WalkDownHierarchy is an Instance Action
			restricted
			Action Rules
				LocalAccountingEntity 			= AccountingEntity
				LocalReportingBasis 			= ReportingBasis
				for each ChildrenRel
					invoke BuildShadowFile AccountingEntityHierarchy in foreground
						invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.PrmReportingBasis	  	  = LocalReportingBasisRel.ReportingBasis
						invoked.PrmAccountingEntity		  = each.AccountingEntity

					invoke WalkDownHierarchy each.AccountingEntity


		DeleteTopNode is a Delete Action
			restricted
			Entrance Rules
				include AccountingEntityRules





		RemoveFromReportingBasis is an Instance Action
			valid when(EligibleToRemoveFromBasis)
			Entrance Rules
				constraint (!HierarchyDetailRel exists)
					"CannotRemove,ChildrenExist"
			Action Rules
				RemoveFromReportingBasisInProgress = true


				LocalReportingBasis							= ReportingBasis
				LocalAccountingEntity						= AccountingEntity
				LocalBackgroundGroup 						= FinanceEnterpriseGroup + AccountingEntity + "DeleteRelatedRecords"

				invoke DeleteShadowAccountingEntities AccountingEntityShadow in background group (LocalBackgroundGroup)
					invoked.PrmFinanceEnterpriseGroup 		= FinanceEnterpriseGroup
					invoked.PrmReportingBasis	  	  		= LocalReportingBasis
					invoked.PrmAccountingEntity		  		= LocalAccountingEntity

				invoke DeleteInBackground AccountingEntityHierarchy in background group (LocalBackgroundGroup)
					invoked.PrmFinanceEnterpriseGroup 		= FinanceEnterpriseGroup
					invoked.PrmTopNode						= DerivedTopNode
					invoked.PrmSubordinateAccountingEntity	= AccountingEntity

				if (DimensionType.Summary)
					invoke DeleteInBackground in background
						run after background group (LocalBackgroundGroup)
				else
					invoke DeleteInBackgroundComplete in background
						run after background group (LocalBackgroundGroup)




		DeleteInBackgroundComplete is an Instance Action
			restricted
			Action Rules
				RemoveFromReportingBasisInProgress = false			

		DeleteInBackground is an Instance Action
			restricted
			Action Rules
				RemoveFromReportingBasisInProgress = false			
				invoke Delete
					resume on error

		UpdateProcessStatus is an Instance Action
			restricted
			refresh and lock this instance	
			Parameters
				PrmProcessStatus	is Numeric 1
					default label is "ProcessStatus"

			Action Rules
				ProcessStatus	= PrmProcessStatus

		UpdateAsyncId is an Instance Action
			restricted
			refresh and lock this instance	
			Parameters
				PrmAsyncId	is like AsyncActionRequest
					default label is "AsyncId"

			Action Rules
				AsyncId		= PrmAsyncId

		UpdateClosePeriods is an Instance Action
			restricted

			Action Rules
				LocalYear					= FiscalYear + 1
				for each AllClosePeriodsRel
					invoke Create AccountingEntityPeriod
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.AccountingEntity			= AccountingEntity

						invoked.GeneralLedgerClosePeriod	= each.GeneralLedgerClosePeriod

							








































					
        FixupSequenceNumbers is a Set Action
            restricted

            Parameters
                PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
                	default label is "FinanceEnterpriseGroup"
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
            Action Rules
                Instance Rules
                    if (SequenceNumber = 0 )
                        increment FinanceEnterpriseGroup.AccountingEntityLastSeq 
                        SequenceNumber = FinanceEnterpriseGroup.AccountingEntityLastSeq					

		RebuildTotals is an Instance Action
			restricted
		    Parameters
		        PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmAccountingEntity				is a AccountingEntity
				PrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear
				PrmGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod 
				
			Local Fields
                TempAsyncId					    is an AsyncActionRequest
			Action Rules
					
				LocalYear				= PrmGeneralLedgerCloseYear

				if (PrmGeneralLedgerCloseYear entered 
				and PrmGeneralLedgerCalendarPeriod not entered)
					for each AllPeriodsForYearRel
						LocalDateRange.Begin = each.DerivedBeginGregorian
						LocalDateRange.End   = each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date

						invoke InitializeTotals GeneralLedgerTotal in background
							assign async action request id to TempAsyncId
							invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity				= AccountingEntity
							invoked.PrmDateRange					= LocalDateRange

						invoke RebuildTotalsFromPostedTransactions GeneralLedgerTransaction in background
							run after TempAsyncId
							invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity				= AccountingEntity
							invoked.PrmGeneralLedgerCalendarPeriod	= each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod



				if (PrmGeneralLedgerCloseYear entered 
				and PrmGeneralLedgerCalendarPeriod entered)
					LocalGeneralLedgerCalendarPeriod = PrmGeneralLedgerCalendarPeriod
					LocalDateRange.Begin     = last LastGeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date + 1
					LocalDateRange.End       = PrmGeneralLedgerCalendarPeriod.Date 
					
					
					invoke InitializeTotals GeneralLedgerTotal in background
						assign async action request id to TempAsyncId
						invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity				= AccountingEntity
						invoked.PrmDateRange					= LocalDateRange

					invoke RebuildTotalsFromPostedTransactions GeneralLedgerTransaction in background
						run after TempAsyncId
						invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity				= AccountingEntity
						invoked.PrmGeneralLedgerCalendarPeriod	= PrmGeneralLedgerCalendarPeriod


	

		RebalanceAccountingUnitZones is an Instance Action
			restricted
			Parameters
				PrmCalendarPeriod				is a GeneralLedgerCalendarPeriod
					default label is "BeginCalendarPeriod"
				PrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear		
					default label is "FiscalYear"
			Action Rules



				
				invoke BuildZoneBalanceTotal GeneralLedgerTotal in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmCalendarPeriod			= PrmCalendarPeriod

				invoke ProcessZoneRebalancing AccountingUnitZoneBalance in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmCalendarPeriod			= PrmCalendarPeriod
					invoked.PrmGeneralLedgerCloseYear   = PrmGeneralLedgerCloseYear		
					
				if (PrmGeneralLedgerCloseYear entered)	
					LocalPrmGeneralLedgerCloseYear	= PrmGeneralLedgerCloseYear			
					PrmCalendarPeriod				= DerivedBeginningBalanceString		
					invoke BuildPeriodZeroZoneBalanceTotal GeneralLedgerTotal in background		
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmCalendarPeriod			= PrmCalendarPeriod
						
					invoke ProcessPeriodZeroZoneRebalancing AccountingUnitZoneBalance in background	
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmCalendarPeriod			= PrmCalendarPeriod

		RebalanceFinanceDimension1Zones is an Instance Action
			refresh and lock this instance	
			restricted
			Parameters
				PrmCalendarPeriod				is a GeneralLedgerCalendarPeriod
					default label is "BeginCalendarPeriod"
				PrmGeneralLedgerCloseYear is a GeneralLedgerCloseYear
					default label is "FiscalYear"	
			Action Rules

				invoke BuildFinanceDimension1ZoneTotal GeneralLedgerTotal in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmCalendarPeriod			= PrmCalendarPeriod

				invoke ProcessFinanceDimension1ZoneRebalancing FinanceDimension1ZoneBalance in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmCalendarPeriod			= PrmCalendarPeriod
					invoked.PrmGeneralLedgerCloseYear   = PrmGeneralLedgerCloseYear
				
				if (PrmGeneralLedgerCloseYear entered)				
					LocalPrmGeneralLedgerCloseYear	= PrmGeneralLedgerCloseYear
					PrmCalendarPeriod				= DerivedBeginningBalanceString
					invoke BuildPeriodZeroFinanceDimension1ZoneTotal GeneralLedgerTotal in background
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmCalendarPeriod			= PrmCalendarPeriod
						
					invoke ProcessPeriodZeroFinanceDimension1ZoneRebalancing FinanceDimension1ZoneBalance in background
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmCalendarPeriod			= PrmCalendarPeriod	

		InitiatePosting is an Instance Action
			refresh and lock this instance	
			restricted
			
			Parameters
				PrmPeriodOption				is Numeric 1
					default label is "PeriodOption"
					States
						CurrentPeriod			value is 1
						PreviousPeriod			value is 2
						NextPeriod				value is 3
						SpecifyYearAndPeriod	value is 4
						AllPeriods				value is 5				
				PrmGeneralLedgerCalendarPeriod	is like GeneralLedgerCalendarPeriod
					default label is "GlobalLedgerCalendarPeriod"
				PrmLedger					is like Ledger
					default label is "Ledger"
				PrmSystemCode				is like GeneralLedgerSystemCode
					default label is "SystemCode"
				PrmJournalPostingResult		is a JournalPostingResult				
					default label is "JournalPostingResult"
				PrmPostThroughDate			is Date		
				
			Action Rules
				LocalLedger							= PrmLedger
				LocalSystemCode						= PrmSystemCode

				if (JournalsToPostRel exists
				and AccountingEntity.Status.Active)
					ProcessStatus					= ProcessStatus.PostInProcess

					if (PrmPeriodOption.AllPeriods)
						initialize LocalGeneralLedgerCalendarPeriod
					else										
					if (PrmGeneralLedgerCalendarPeriod entered)
						LocalGeneralLedgerCalendarPeriod	= PrmGeneralLedgerCalendarPeriod
					else
					if (PrmPeriodOption.CurrentPeriod)
						LocalGeneralLedgerCalendarPeriod	= CurrentPeriod.GeneralLedgerCalendarPeriod
					else
					if (PrmPeriodOption.PreviousPeriod)
						LocalGeneralLedgerCalendarPeriod	= PreviousPeriod
					else
						LocalGeneralLedgerCalendarPeriod	= NextPeriod

					invoke ChangeStatusAndReleasedFlag GeneralLedgerJournalControl in background

						run after AsyncId
							assign async action request id to AsyncId
							invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity				= AccountingEntity
							invoked.PrmGeneralLedgerCalendarPeriod	= LocalGeneralLedgerCalendarPeriod
							invoked.PrmJournalPostingResult			= PrmJournalPostingResult
							invoked.PrmLedger						= PrmLedger
							invoked.PrmSystemCode					= PrmSystemCode
							invoked.PrmPostingTimeStamp				= current timestamp
							invoked.PrmReleaseInProcessOnly			= true
							invoked.PrmPostThroughDate				= PrmPostThroughDate		
							invoked.PrmSkipAttachRule				= true						
						
		InitiateJournalize is an Instance Action
			restricted
			refresh and lock this instance			
			Parameters
				PrmJournalizeGroup			is a JournalizeGroup
					default label is "JournalizeGroup"			
				PrmOriginatingInterfaceRun	is a GLTransactionInterfaceResult
					default label is "GlobalLedgerTransactionInterfaceResult"	
				PrmInterfaceInDetail		is Boolean
					default label is "InterfaceInDetail"
				PrmJournalizeGroupDescription is a Description
					default label is "JournalizeGroupDescription"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmAutoReverseDate			is Date
					default label is "AutoReverseDate"
				PrmPrimaryLedger			is a Ledger
					default label is "PrimaryLedger"
           
            Local Fields
                LocalBackgroundGroup          is AlphaUpper 25
                                                        
            Action Rules

                LocalBackgroundGroup = "Journalize" + AccountingEntity
                invoke JournalizeTransactions GLTransactionDetail in background 


                    invoked.PrmEnterpriseGroup            = FinanceEnterpriseGroup
                    invoked.PrmJournalizeGroup            = PrmJournalizeGroup
                    invoked.PrmAccountingEntity           = AccountingEntity
                    invoked.PrmOriginatingInterfaceRun    = PrmOriginatingInterfaceRun
                    invoked.PrmJournalizeGroupDescription = PrmJournalizeGroupDescription
                    invoked.PrmInterfaceInDetail          = PrmInterfaceInDetail
                    invoked.PrmCurrencyTable			  = PrmCurrencyTable
                    invoked.PrmAutoReverseDate			  = PrmAutoReverseDate
					invoked.PrmPrimaryLedger			  = PrmPrimaryLedger
















		AddToGroup is an Instance Action
			
			Action Rules
				invoke Create AccountingEntityGroupMember
					fill in fields from this instance
					invoked.AccountingEntityGroup = AccountingEntityGroup
											
		SetSystemDimensionFlags is an Instance Action
			restricted
			
			Parameters
				PrmSystemAccountingUnitDefined		is Boolean
					default label is "SystemAccountingUnitDefined"
				PrmDefaultZoneAccountingUnitDefined is Boolean
					default label is "DefaultZoneAccountingUnitDefined"
				PrmEntityZoneAccountingUnitDefined  is Boolean	
					default label is "EntityZoneAccountingUnitDefined"
				
			Action Rules
				SystemAccountingUnitDefined		 = PrmSystemAccountingUnitDefined
				DefaultZoneAccountingUnitDefined = PrmDefaultZoneAccountingUnitDefined
				EntityZoneAccountingUnitDefined  = PrmEntityZoneAccountingUnitDefined

		CloseRecurringJournalPeriod is an Instance Action
			valid when (RecurringJournalClosing)
			Parameters
			Entrance Rules
				if (RecurringJournalClosing)
					constraint (!RecurringJournalScheduleRel exist)
						"CannotClose;UnprocessedRecurringEntriesExist"



					
					
			Action Rules
				if (RecurringJournalClosing)
					invoke UpdateSystemClosingControl RJSystemClosingControlRel
						invoked.PrmEnterpriseGroup		 = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity		 = AccountingEntity
						invoked.PrmSystem				 = "RJ"

#ifdef module Allocations		
		ValidateAllocationRunsForClosing is an Instance Action
			restricted
			default label is untranslatable
			Local Fields
				LocalActor is an Actor
			Action Rules
				if (CostAllocationClosing)
					if (CASystemClosingControlRel.ClosedPeriod = AccountingEntity.CurrentPeriod)
						LocalActor = actor
						send notification
							to LocalActor
							description is "Entity<AccountingEntity>CloseResult"
							detail is "Period<CurrentPeriod.PeriodName>Ending<CurrentPeriodEndDate>For<AccountingEntity>IsAlreadyClosed"
					else
						for each UnjournalizedAllocationRunsRel
							LocalAllocationRun = each.AllocationRun
							if (LocalAllocationRun.Status.Started
							or  LocalAllocationRun.Status.PreparingForEdit
							or  LocalAllocationRun.Status.EditInProgress
							or  LocalAllocationRun.Status.JournalizeInProcess)
								constraint (not UnjournalizedAllocationTransactionDetailsRel exist)
									"CannotCloseThePeriod;AllocationRunOrJournalizeProcessIsInProgress"
							else
							if (LocalAllocationRun.Status.Completed)
								constraint (not UnjournalizedAllocationTransactionDetailsRel exist)
									"CannotCloseThePeriod;UnjournalizedTransactionsExist._\Allocation_\Run=<LocalAllocationRun>"
#endif
						
		CloseCostAllocationPeriod is an Instance Action
			valid when (CostAllocationClosing)
			Parameters
			Local Fields
				LocalActor is an Actor
			Entrance Rules
				if (CostAllocationClosing
				and not CASystemClosingControlRel.ClosedPeriod = AccountingEntity.CurrentPeriod)
					constraint (!UnpostedCostAllocationJournalsRel exist)
						"CannotClose;UnprocessedGLJournalCostAllocationExist"
					
			Action Rules
				if (CostAllocationClosing
				and not CASystemClosingControlRel.ClosedPeriod = AccountingEntity.CurrentPeriod)
					LocalActor = actor
					invoke UpdateSystemClosingControl CASystemClosingControlRel
						invoked.PrmEnterpriseGroup		 = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity		 = AccountingEntity
						invoked.PrmSystem				 = "CA"
						
					send notification
						to LocalActor
						description is "Entity<AccountingEntity>CloseResult"
						detail is "Period<CurrentPeriod.PeriodName>Ending<CurrentPeriodEndDate>For<AccountingEntity>IsSuccessfullyClosed"
											















		CloseGeneralLedgerSystemControl is an Instance Action
			default label is "CloseGlobalLedgerSystemControl"
			valid when (GLJournalClosing)
			Parameters
			Entrance Rules
				if (GLJournalClosing)
					constraint (!UnpostedGLJournalsRel exist)
						"CannotClose;UnprocessedJournalsExist"
					
			Action Rules
				if (GLJournalClosing)
					invoke UpdateSystemClosingControl GLSystemClosingControlRel
						invoked.PrmEnterpriseGroup		 = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity		 = AccountingEntity
						invoked.PrmSystem				 = "GL"

		CloseProjectSystemControl is an Instance Action
			valid when (ProjectClosing)
			Parameters
			Entrance Rules
				if (ProjectClosing)
					constraint (!UnpostedProjectJournalsRel exist)
						"CannotClose;UnprocessedJournalsExist"
					
			Action Rules
				if (ProjectClosing)
					invoke UpdateSystemClosingControl PSSystemClosingControlRel
						invoked.PrmEnterpriseGroup		 = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity		 = AccountingEntity
						invoked.PrmSystem				 = "PS"
												
		JournalizeRecurringJournal is an Instance Action
			restricted
			Parameters
				PrmRJJournalizeResult		is a RJJournalizeResult
			
			Local Fields
				LocalRJJournalizeResultView	is a RJJournalizeResult view				
					
			Action Rules
				if (!PrmRJJournalizeResult entered)
					invoke Create RJJournalizeResult
						assign result to LocalRJJournalizeResultView
						invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.RunTime					= current timestamp
						invoked.AccountingEntity		= AccountingEntity
					PrmRJJournalizeResult	= LocalRJJournalizeResultView.RJJournalizeResult

				invoke BatchJournalize RecurringJournalSchedule
					invoked.PrmEnterpriseGroup		 = FinanceEnterpriseGroup
					invoked.PrmAccountingEntity		 = AccountingEntity
					invoked.PrmClosePeriod			 = CurrentPeriod
					invoked.PrmRJJournalizeResult	 = PrmRJJournalizeResult
											
		UpdateZoneBalance is an Instance Action
			restricted
			Parameters
				PrmPeriodOption					is Numeric 1
					default label is "PeriodOption"
					States
						CurrentPeriod	value is 1
						PreviousPeriod	value is 2
						NextPeriod		value is 3
						SpecifyPeriod	value is 4
				PrmGeneralLedgerClosePeriod		is a GeneralLedgerClosePeriod
					default label is "GlobalLedgerClosePeriod"
				PrmChangedTotalsOnly			is Boolean
					default label is "ChangedTotalsOnly"

			Parameter Rules
				PrmPeriodOption
					required
						"PeriodOptionIsRequired"

			Local Fields
				LocalFrCalendarPeriod			is like GeneralLedgerCalendarPeriod
				LocalToCalendarPeriod			is like GeneralLedgerCalendarPeriod
 
			Action Rules
				if (PrmPeriodOption.CurrentPeriod)
					LocalEndCalendarPeriod		= CurrentPeriod
				else
					if (PrmPeriodOption.PreviousPeriod)
						LocalEndCalendarPeriod		= PreviousPeriod
					else
						if (PrmPeriodOption.NextPeriod)
							LocalEndCalendarPeriod		= NextPeriod
						else
							LocalEndCalendarPeriod		= PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				if (PreviousGeneralLederClosePeriodRel exists)
					LocalFrCalendarPeriod	= last PreviousGeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				else
					LocalFrCalendarPeriod 	= first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
				if (PrmGeneralLedgerClosePeriod entered)
					LocalToCalendarPeriod		= PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				else
					LocalToCalendarPeriod		= first CurrentGeneralLederClosePeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
					PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod		= LocalToCalendarPeriod

				invoke InitializeZoneTotals GLZoneBalance in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmFrCalendarPeriod			= LocalFrCalendarPeriod
					invoked.PrmToCalendarPeriod			= LocalToCalendarPeriod

				invoke UpdateZoneBalanceAmount GeneralLedgerZoneTotal in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmGeneralLedgerClosePeriod	= PrmGeneralLedgerClosePeriod
					invoked.PrmRebuild					= true
					invoked.PrmChangedTotalsOnly		= PrmChangedTotalsOnly

		UpdateZonePayablesAndReceivablesBalance is an Instance Action
			restricted
			Parameters
				PrmPeriodOption					is Numeric 1
					default label is "PeriodOption"
					States
						CurrentPeriod	value is 1
						PreviousPeriod	value is 2
						NextPeriod		value is 3
						SpecifyPeriod	value is 4
				PrmGeneralLedgerCalendarPeriod		is a GeneralLedgerCalendarPeriod
					default label is "GlobalLedgerClosePeriod"

			Action Rules
				if (PrmGeneralLedgerCalendarPeriod entered)
					LocalGeneralLedgerCalendarPeriod	= PrmGeneralLedgerCalendarPeriod
				else
				if (PrmPeriodOption.CurrentPeriod)
					LocalGeneralLedgerCalendarPeriod	= CurrentPeriod.GeneralLedgerCalendarPeriod
				else
				if (PrmPeriodOption.PreviousPeriod)
					LocalGeneralLedgerCalendarPeriod	= PreviousPeriod
				else
					LocalGeneralLedgerCalendarPeriod	= NextPeriod
				if (GeneralLedgerZoneTotalRel exists)					
					invoke UpdateZoneBalanceAmount GeneralLedgerZoneTotal in background
						run after AsyncId
						assign async action request id to AsyncId
						invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= LocalGeneralLedgerCalendarPeriod
						invoked.PrmRebuild					= false

		RebuildUndistributedRetainedEarnings is an Instance Action
			restricted
		    Parameters
		        PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmAccountingEntity				is a AccountingEntity
				PrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear

			Local Fields
				TempAsyncId						is a AsyncActionRequest
			Action Rules
				LocalYear				= PrmGeneralLedgerCloseYear

				for each AllPeriodsForYearRel						

					LocalDateRange.Begin = each.DerivedBeginGregorian	
					LocalDateRange.End   = each.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date	
					invoke InitializeUndistributedRetainedEarnings GeneralLedgerTotal in background		
						assign async action request id to TempAsyncId
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmDateRange				= LocalDateRange

					invoke RebuildUndistributedRetainedEarnings GeneralLedgerTotal in background
						run after TempAsyncId
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity			= AccountingEntity
						invoked.PrmDateRange				= LocalDateRange

		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
				
		BODDataInitialLoadAccountingEntityCriteria is a Set Action
			restricted
			Parameters
				PrmFEG						is a FinanceEnterpriseGroup
				PrmFromAccountingEntity		is a AccountingEntity
				PrmToAccountingEntity		is a AccountingEntity
			Parameter Rules
			Instance Selection	
				where  (((PrmFEG entered
				and		 PrmFEG = FinanceEnterpriseGroup)
				or		 PrmFEG not entered)	
				and		((PrmFromAccountingEntity entered
				and		  PrmFromAccountingEntity <= AccountingEntity)
				or		  PrmFromAccountingEntity not entered)				
				and    ((PrmToAccountingEntity entered
				and		 PrmToAccountingEntity >= AccountingEntity)
				or		 PrmToAccountingEntity not entered)
				and 	(Status.Active))
		
			Action Rules								
				Instance Rules	
					if (FinanceEnterpriseGroup.BODTrigger)
						LocalActionCode	= LocalActionCode.Create		
						increment bod id.VariationID
						include AccountingEntityRules



						
						
		Netting is an Instance Action
			restricted 
			Parameters 
				PrmPeriodOption 				is Numeric 1
					States 
						SpecifyPeriod 			value is 1 
						AllPeriods 				value is 2
						PeriodRange 			value is 3
				PrmGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod
					default label is "GlobalLedgerCalendarPeriod"	
				PrmStartingPeriod		 		 is a GeneralLedgerCalendarPeriod
					default label is "StartingPeriod"
		        PrmEndingPeriod					 is a GeneralLedgerCalendarPeriod
		        	default label is "EndingPeriod"			
#ifdef module sharedfinance			
				PrmApprovalCode						is a ApprovalCode  
#endif
				PrmCreateInPendingApproval		is Boolean 
			Local Fields
				LocalReceivablesTotal        		is an InternationalAmount 
				LocalPayablesTotal			 		is an InternationalAmount
				LocalActor 							is an Actor  
				LocalPostingDate					is Date 
				LocalFinanceCodeBlock				is like TransactionCodeBlock
				LocalPayablesTotalPositive			is Boolean
				LocalReceivablesTotalPositive		is Boolean
				LocalDiffTotal				 		is an InternationalAmount
			Rule Blocks 				
				CalculatePayablesAndReceivablesAmount
					initialize LocalReceivablesTotal
					initialize LocalPayablesTotal
					LocalReceivablesTotalPositive	= false
					LocalPayablesTotalPositive		= false
					LocalInterEntityNettingAccount 	= LocalReceivablesEntityAccount
					LocalReceivablesTotal 			= sum GeneralLedgerTotalInterEntityNettingRel.NetFunctionalAmount
					LocalInterEntityNettingAccount 	= LocalPayablesEntityAccount
					LocalPayablesTotal 				= sum GeneralLedgerTotalInterEntityNettingRel.NetFunctionalAmount
					if(LocalReceivablesTotal < 0)
						LocalReceivablesTotal = LocalReceivablesTotal * -1
					else
						LocalReceivablesTotalPositive = true
					if(LocalPayablesTotal < 0)
						LocalPayablesTotal = LocalPayablesTotal * -1
					else
						LocalPayablesTotalPositive = true

					initialize LocalDiffTotal
					if(LocalReceivablesTotal != 0
					and LocalPayablesTotal != 0)
						if(LocalReceivablesTotalPositive)
							if(!LocalPayablesTotalPositive)
								if(LocalReceivablesTotal >= LocalPayablesTotal)
									LocalDiffTotal = LocalPayablesTotal
								else
									LocalDiffTotal = LocalReceivablesTotal
							else
								LocalDiffTotal = LocalPayablesTotal * -1
						else
							if(LocalPayablesTotalPositive)
								if(LocalReceivablesTotal <= LocalPayablesTotal)
									LocalDiffTotal = LocalPayablesTotal * -1
								else
									LocalDiffTotal = LocalReceivablesTotal * -1
							else
								LocalDiffTotal = LocalReceivablesTotal * -1 
				
				CreateNettingBalanceJournal
					if(NewGeneralLedgerJournal.GeneralLedgerJournalControl not exists)
						invoke Unreleased.Create GeneralLedgerJournalControl
							assign result to NewGeneralLedgerJournal
							invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
							invoked.AccountingEntity 	 					= AccountingEntity 
							invoked.Ledger									= FinanceEnterpriseGroup.CoreLedger
							invoked.PostingDate								= LocalPostingDate   
							invoked.Description         					= "Inter Entity Balancing Journal for-"+AccountingEntity
							invoked.System			        				= "GL"
							invoked.TransactionDate							= current corporate date 
							invoked.CurrencyTable							= FinanceEnterpriseGroup.CurrencyTable
							invoked.Currency 								= AccountingEntity.FunctionalCurrency
							invoked.GeneralLedgerEvent      				= "CB"
							invoked.AllowUnrelease  						= true
							invoked.PendingBudgetEdit       				= true 
							invoked.InterEntityNettingJournal				= true
							invoked.ApprovalProcessRequiredThroughNetting   = PrmCreateInPendingApproval 
#ifdef module sharedfinance								
							invoked.ApprovalCode							= PrmApprovalCode	
#endif											
							if(PrmCreateInPendingApproval)
								invoked.QuickPostForNetting					= false
							else
								invoked.QuickPostForNetting					= true

					invoke Unreleased.Create GeneralLedgerTransaction 
						invoked.FinanceEnterpriseGroup						= NewGeneralLedgerJournal.GeneralLedgerJournalControl.FinanceEnterpriseGroup
						invoked.AccountingEntity 							= NewGeneralLedgerJournal.GeneralLedgerJournalControl.AccountingEntity
						invoked.GeneralLedgerClosePeriod					= NewGeneralLedgerJournal.GeneralLedgerJournalControl.GeneralLedgerClosePeriod
						invoked.PostingDate 								= NewGeneralLedgerJournal.GeneralLedgerJournalControl.PostingDate
						invoked.GeneralLedgerJournalControl 				= NewGeneralLedgerJournal.GeneralLedgerJournalControl.GeneralLedgerJournalControl
						invoked.CurrencyTable								= NewGeneralLedgerJournal.GeneralLedgerJournalControl.CurrencyTable
						invoked.TransactionDate                             = NewGeneralLedgerJournal.GeneralLedgerJournalControl.TransactionDate
						invoked.PrimaryLedger								= FinanceEnterpriseGroup.CoreLedger
						invoked.CurrencyCode								= AccountingEntity.FunctionalCurrency
						invoked.GeneralLedgerEvent              			= "CB"
						invoked.FinanceCodeBlock							= LocalFinanceCodeBlock
						invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= LocalReceivablesEntityAccount
						invoked.TransactionAmount 				       		= (LocalDiffTotal * -1)

					invoke Unreleased.Create GeneralLedgerTransaction
						invoked.FinanceEnterpriseGroup							= NewGeneralLedgerJournal.GeneralLedgerJournalControl.FinanceEnterpriseGroup
						invoked.AccountingEntity 								= NewGeneralLedgerJournal.GeneralLedgerJournalControl.AccountingEntity
						invoked.GeneralLedgerClosePeriod						= NewGeneralLedgerJournal.GeneralLedgerJournalControl.GeneralLedgerClosePeriod
						invoked.PostingDate 									= NewGeneralLedgerJournal.GeneralLedgerJournalControl.PostingDate
						invoked.GeneralLedgerJournalControl 					= NewGeneralLedgerJournal.GeneralLedgerJournalControl.GeneralLedgerJournalControl 
						invoked.CurrencyTable									= NewGeneralLedgerJournal.GeneralLedgerJournalControl.CurrencyTable
						invoked.TransactionDate                             	= NewGeneralLedgerJournal.GeneralLedgerJournalControl.TransactionDate
						invoked.PrimaryLedger									= FinanceEnterpriseGroup.CoreLedger
						invoked.CurrencyCode									= AccountingEntity.FunctionalCurrency
						invoked.GeneralLedgerEvent              				= "CB"
						invoked.FinanceCodeBlock								= LocalFinanceCodeBlock
						invoked.FinanceCodeBlock.GeneralLedgerChartAccount     	= LocalPayablesEntityAccount
						invoked.TransactionAmount 				       			= LocalDiffTotal

				CreateJournalControl 
					if (InterEntityReceivablesGeneralLedgerTotal entered
					and InterEntityPayablesGeneralLedgerTotal entered )	
						if (InterEntityReceivablesGeneralLedgerTotal > 0)
							LocalReceivablesTotal = InterEntityReceivablesGeneralLedgerTotal
						else 
							LocalReceivablesTotal = -1*(InterEntityReceivablesGeneralLedgerTotal)				
						if (InterEntityPayablesGeneralLedgerTotal >0)
							LocalPayablesTotal = InterEntityPayablesGeneralLedgerTotal
						else 
							LocalPayablesTotal = -1*(InterEntityPayablesGeneralLedgerTotal)
			
						if (NewGeneralLedgerJournal.GeneralLedgerJournalControl not exists)
							invoke Unreleased.Create GeneralLedgerJournalControl
								assign result to NewGeneralLedgerJournal
								invoked.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
								invoked.AccountingEntity 	 						= AccountingEntity 
								invoked.Ledger										= FinanceEnterpriseGroup.CoreLedger
								invoked.PostingDate									= LocalPostingDate   
								invoked.Description         						= "Inter Entity Balancing Journal for-"+AccountingEntity
								invoked.System			        					= "GL"
								invoked.TransactionDate								= current corporate date 
								invoked.CurrencyTable								= FinanceEnterpriseGroup.CurrencyTable
								invoked.Currency 									= AccountingEntity.FunctionalCurrency
								invoked.GeneralLedgerEvent      					= "CB"
								invoked.AllowUnrelease  							= true
								invoked.PendingBudgetEdit       					= true     
								invoked.InterEntityNettingJournal					= true
								invoked.ApprovalProcessRequiredThroughNetting       = PrmCreateInPendingApproval 
#ifdef module sharedfinance								
								invoked.ApprovalCode								= PrmApprovalCode	
#endif											
								if(PrmCreateInPendingApproval)
									invoked.QuickPostForNetting						= false
								else
									invoked.QuickPostForNetting						= true
						include CreateJournalTransactions  
				
				CreateJournalTransactions
					if (LocalPayablesTotal> LocalReceivablesTotal)	
						invoke Unreleased.Create GeneralLedgerTransaction 
							invoked.FinanceEnterpriseGroup							 = NewGeneralLedgerJournal.FinanceEnterpriseGroup
							invoked.AccountingEntity 								 = NewGeneralLedgerJournal.AccountingEntity
							invoked.GeneralLedgerClosePeriod						 = NewGeneralLedgerJournal.GeneralLedgerClosePeriod
							invoked.PostingDate 									 = NewGeneralLedgerJournal.PostingDate
							invoked.GeneralLedgerJournalControl 					 = NewGeneralLedgerJournal.GeneralLedgerJournalControl
							invoked.PrimaryLedger									 = FinanceEnterpriseGroup.CoreLedger
							invoked.FinanceCodeBlock.Ledger							 = NewGeneralLedgerJournal.Ledger
							invoked.FinanceCodeBlock.ToAccountingEntity				 = NewGeneralLedgerJournal.AccountingEntity
							invoked.FinanceCodeBlock.AccountingUnit 				 = LocalAccountingUnit 
							invoked.FinanceCodeBlock.GeneralLedgerChartAccount		 = LocalReceivablesEntityAccount
							invoked.FinanceCodeBlock.Project 						 = LocalProject
							invoked.FinanceCodeBlock.FinanceDimension1				 = LD1
							invoked.FinanceCodeBlock.FinanceDimension2				 = LD2
							invoked.FinanceCodeBlock.FinanceDimension3				 = LD3
							invoked.FinanceCodeBlock.FinanceDimension4			 	 = LD4
							invoked.FinanceCodeBlock.FinanceDimension5		 		 = LD5
							invoked.FinanceCodeBlock.FinanceDimension6				 = LD6
							invoked.FinanceCodeBlock.FinanceDimension7				 = LD7
							invoked.FinanceCodeBlock.FinanceDimension8				 = LD8
							invoked.FinanceCodeBlock.FinanceDimension9				 = LD9
							invoked.FinanceCodeBlock.FinanceDimension10				 = LD10
							invoked.TransactionDate                                  = NewGeneralLedgerJournal.TransactionDate
							invoked.TransactionAmount 				       			 = -1*(LocalReceivablesTotal)
							invoked.CurrencyCode									 = AccountingEntity.FunctionalCurrency
							invoked.CurrencyTable									 = NewGeneralLedgerJournal.CurrencyTable
							invoked.GeneralLedgerEvent              				 = "CB"
						
						invoke Unreleased.Create GeneralLedgerTransaction
							invoked.FinanceEnterpriseGroup							 = NewGeneralLedgerJournal.FinanceEnterpriseGroup
							invoked.AccountingEntity 								 = NewGeneralLedgerJournal.AccountingEntity
							invoked.GeneralLedgerClosePeriod						 = NewGeneralLedgerJournal.GeneralLedgerClosePeriod
							invoked.PostingDate 									 = NewGeneralLedgerJournal.PostingDate
							invoked.GeneralLedgerJournalControl 					 = NewGeneralLedgerJournal.GeneralLedgerJournalControl 
							invoked.PrimaryLedger									 = FinanceEnterpriseGroup.CoreLedger
							invoked.FinanceCodeBlock.Ledger    					 	 = NewGeneralLedgerJournal.Ledger
							invoked.FinanceCodeBlock.ToAccountingEntity 			 = NewGeneralLedgerJournal.AccountingEntity
							invoked.FinanceCodeBlock.AccountingUnit  				 = LocalAccountingUnit
							invoked.FinanceCodeBlock.GeneralLedgerChartAccount     	 = LocalPayablesEntityAccount
							invoked.FinanceCodeBlock.Project 						 = LocalProject
							invoked.FinanceCodeBlock.FinanceDimension1				 = LD1
							invoked.FinanceCodeBlock.FinanceDimension2				 = LD2
							invoked.FinanceCodeBlock.FinanceDimension3				 = LD3
							invoked.FinanceCodeBlock.FinanceDimension4			 	 = LD4
							invoked.FinanceCodeBlock.FinanceDimension5		 		 = LD5
							invoked.FinanceCodeBlock.FinanceDimension6				 = LD6
							invoked.FinanceCodeBlock.FinanceDimension7				 = LD7
							invoked.FinanceCodeBlock.FinanceDimension8				 = LD8
							invoked.FinanceCodeBlock.FinanceDimension9				 = LD9
							invoked.FinanceCodeBlock.FinanceDimension10				 = LD10
							invoked.TransactionDate                                  = NewGeneralLedgerJournal.TransactionDate
							invoked.TransactionAmount 				       			 = (LocalReceivablesTotal)
							invoked.CurrencyCode									 = AccountingEntity.FunctionalCurrency
							invoked.CurrencyTable									 = NewGeneralLedgerJournal.CurrencyTable
							invoked.GeneralLedgerEvent              				 = "CB"
					else 
						invoke Unreleased.Create GeneralLedgerTransaction 
							invoked.FinanceEnterpriseGroup							 = NewGeneralLedgerJournal.FinanceEnterpriseGroup
							invoked.AccountingEntity 								 = NewGeneralLedgerJournal.AccountingEntity
							invoked.GeneralLedgerClosePeriod						 = NewGeneralLedgerJournal.GeneralLedgerClosePeriod
							invoked.PostingDate 									 = NewGeneralLedgerJournal.PostingDate
							invoked.GeneralLedgerJournalControl 					 = NewGeneralLedgerJournal.GeneralLedgerJournalControl 
							invoked.FinanceCodeBlock.Ledger    					 	 = NewGeneralLedgerJournal.Ledger
							invoked.PrimaryLedger									 = FinanceEnterpriseGroup.CoreLedger
							invoked.FinanceCodeBlock.ToAccountingEntity				 = NewGeneralLedgerJournal.AccountingEntity
							invoked.FinanceCodeBlock.AccountingUnit 				 = LocalAccountingUnit 
							invoked.FinanceCodeBlock.GeneralLedgerChartAccount		 = LocalReceivablesEntityAccount
							invoked.FinanceCodeBlock.Project 						 = LocalProject
							invoked.FinanceCodeBlock.FinanceDimension1				 = LD1
							invoked.FinanceCodeBlock.FinanceDimension2				 = LD2
							invoked.FinanceCodeBlock.FinanceDimension3				 = LD3
							invoked.FinanceCodeBlock.FinanceDimension4			 	 = LD4
							invoked.FinanceCodeBlock.FinanceDimension5		 		 = LD5
							invoked.FinanceCodeBlock.FinanceDimension6				 = LD6
							invoked.FinanceCodeBlock.FinanceDimension7				 = LD7
							invoked.FinanceCodeBlock.FinanceDimension8				 = LD8
							invoked.FinanceCodeBlock.FinanceDimension9				 = LD9
							invoked.FinanceCodeBlock.FinanceDimension10				 = LD10
							invoked.TransactionDate                                  = NewGeneralLedgerJournal.TransactionDate
							invoked.TransactionAmount 				       			 = -1*(LocalPayablesTotal)
							invoked.CurrencyCode									 = AccountingEntity.FunctionalCurrency
							invoked.CurrencyTable									 = NewGeneralLedgerJournal.CurrencyTable
							invoked.GeneralLedgerEvent              				 = "CB"
								
								
						invoke Unreleased.Create GeneralLedgerTransaction
							invoked.FinanceEnterpriseGroup							 = NewGeneralLedgerJournal.FinanceEnterpriseGroup
							invoked.AccountingEntity 								 = NewGeneralLedgerJournal.AccountingEntity
							invoked.GeneralLedgerClosePeriod						 = NewGeneralLedgerJournal.GeneralLedgerClosePeriod
							invoked.PostingDate 									 = NewGeneralLedgerJournal.PostingDate
							invoked.GeneralLedgerJournalControl 					 = NewGeneralLedgerJournal.GeneralLedgerJournalControl 
							invoked.PrimaryLedger									 = FinanceEnterpriseGroup.CoreLedger
							invoked.FinanceCodeBlock.Ledger    					 	 = NewGeneralLedgerJournal.Ledger 
							invoked.FinanceCodeBlock.ToAccountingEntity				 = NewGeneralLedgerJournal.AccountingEntity 
							invoked.FinanceCodeBlock.AccountingUnit 				 = LocalAccountingUnit
							invoked.FinanceCodeBlock.GeneralLedgerChartAccount     	 = LocalPayablesEntityAccount
							invoked.FinanceCodeBlock.Project 						 = LocalProject
							invoked.FinanceCodeBlock.FinanceDimension1				 = LD1
							invoked.FinanceCodeBlock.FinanceDimension2				 = LD2
							invoked.FinanceCodeBlock.FinanceDimension3				 = LD3
							invoked.FinanceCodeBlock.FinanceDimension4			 	 = LD4
							invoked.FinanceCodeBlock.FinanceDimension5		 		 = LD5
							invoked.FinanceCodeBlock.FinanceDimension6				 = LD6
							invoked.FinanceCodeBlock.FinanceDimension7				 = LD7
							invoked.FinanceCodeBlock.FinanceDimension8				 = LD8
							invoked.FinanceCodeBlock.FinanceDimension9				 = LD9
							invoked.FinanceCodeBlock.FinanceDimension10				 = LD10
							invoked.TransactionDate                                  = NewGeneralLedgerJournal.TransactionDate
							invoked.TransactionAmount 				       			 = (LocalPayablesTotal)
							invoked.CurrencyCode									 = AccountingEntity.FunctionalCurrency
							invoked.CurrencyTable									 = NewGeneralLedgerJournal.CurrencyTable
							invoked.GeneralLedgerEvent              				 = "CB"
						
			
				CheckingRequiredDimensions
					LocalLedger								 	= FinanceEnterpriseGroup.CoreLedger
					LocalFinanceCodeBlock.Ledger 				= FinanceEnterpriseGroup.CoreLedger
					LocalFinanceCodeBlock.ToAccountingEntity 	= AccountingEntity
					LocalAccountingUnit 						= first SystemPostingAccountingUnitRel.AccountingUnit
					LocalFinanceCodeBlock.AccountingUnit 		= LocalAccountingUnit
					if (FinanceEnterpriseGroup.ProjectRequired)
						LocalProject = SystemProjectRel.Project
						LocalFinanceCodeBlock.Project = LocalProject
					if (FinanceEnterpriseGroup.FinanceDimension1Required
					and LocalDimension1 not entered)						
						LocalDimension1 = SystemFinanceDimension1Rel.FinanceDimension1
						LocalFinanceCodeBlock.FinanceDimension1 = LocalDimension1
					if (FinanceEnterpriseGroup.FinanceDimension2Required
					and LocalDimension2 not entered)	
						LocalDimension2 = SystemFinanceDimension2Rel.FinanceDimension2
						LocalFinanceCodeBlock.FinanceDimension2 = LocalDimension2
					if (FinanceEnterpriseGroup.FinanceDimension3Required
					and LocalDimension3 not entered)		
						LocalDimension3 = SystemFinanceDimension3Rel.FinanceDimension3
						LocalFinanceCodeBlock.FinanceDimension3 = LocalDimension3
					if (FinanceEnterpriseGroup.FinanceDimension4Required
					and LocalDimension4 not entered)
						LocalDimension4 = SystemFinanceDimension4Rel.FinanceDimension4
						LocalFinanceCodeBlock.FinanceDimension4 = LocalDimension4
					if (FinanceEnterpriseGroup.FinanceDimension5Required
					and LocalDimension5 not entered)
						LocalDimension5 = SystemFinanceDimension5Rel.FinanceDimension5
						LocalFinanceCodeBlock.FinanceDimension5 = LocalDimension5
					if (FinanceEnterpriseGroup.FinanceDimension6Required
					and LocalDimension6 not entered)
						LocalDimension6 = SystemFinanceDimension6Rel.FinanceDimension6
						LocalFinanceCodeBlock.FinanceDimension6 = LocalDimension6
					if (FinanceEnterpriseGroup.FinanceDimension7Required
					and LocalDimension7 not entered)
						LocalDimension7 = SystemFinanceDimension7Rel.FinanceDimension7
						LocalFinanceCodeBlock.FinanceDimension7 = LocalDimension7
					if (FinanceEnterpriseGroup.FinanceDimension8Required
					and LocalDimension8 not entered)
						LocalDimension8 = SystemFinanceDimension8Rel.FinanceDimension8
						LocalFinanceCodeBlock.FinanceDimension8 = LocalDimension8
					if (FinanceEnterpriseGroup.FinanceDimension9Required
					and LocalDimension9 not entered)
						LocalDimension9 = SystemFinanceDimension9Rel.FinanceDimension9
						LocalFinanceCodeBlock.FinanceDimension9 = LocalDimension9			
					if (FinanceEnterpriseGroup.FinanceDimension10Required
					and LocalDimension10 not entered)
						LocalDimension10 = SystemFinanceDimension10Rel.FinanceDimension10
						LocalFinanceCodeBlock.FinanceDimension10 = LocalDimension10

			Action Rules
				LocalPayablesEntityAccount  			= FinanceEnterpriseGroup.first InterEntityPayablesRel.Account
				LocalReceivablesEntityAccount  			= FinanceEnterpriseGroup.first InterEntityReceivablesRel.Account
				LocalPrmGeneralLedgerCalendarYear		= FiscalYear
				constraint(LocalPayablesEntityAccount entered)
					"InterEntityPayablesAccountNotExist"
				constraint(LocalReceivablesEntityAccount entered)
					"InterEntityReceivablesAccountNotExist"
				include CheckingRequiredDimensions

				initialize LocalDateRange
				initialize LocalStartDate
				initialize LocalEndDate
				LocalStartDate	= first EntityLedgerYearPeriodsRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
				LocalEndDate	= last EntityLedgerYearPeriodsRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
				if (PrmPeriodOption.SpecifyPeriod) 
					LocalDateRange.Begin	= PrmGeneralLedgerCalendarPeriod.Date
					LocalDateRange.End		= PrmGeneralLedgerCalendarPeriod.Date
					LocalPostingDate 		= LocalDateRange.End
				else
					if (PrmPeriodOption.PeriodRange)
						LocalDateRange.Begin	= PrmStartingPeriod.Date
						LocalDateRange.End		= PrmEndingPeriod.Date
						if(LocalStartDate > PrmStartingPeriod.Date)
							LocalDateRange.Begin	= LocalStartDate
						if(LocalEndDate < PrmEndingPeriod.Date)
							LocalDateRange.End		= LocalEndDate
						LocalEndingDate        		= LocalDateRange.End
					else
						LocalDateRange.Begin 	= LocalStartDate
						LocalDateRange.End		= LocalEndDate
						LocalEndingDate     	= max GeneralLedgerTotalAllInterEntityNettingRel.GeneralLedgerTotal.EntityYearPeriod.Date
					if(GeneralLedgerTotalAllInterEntityNettingRel exists)
						LocalDateRange.Begin	= min GeneralLedgerTotalAllInterEntityNettingRel.GeneralLedgerTotal.EntityYearPeriod.Date
					LocalDateRange.End		= first EntityLedgerLastOpenPeriodsRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
					LocalPostingDate 		= LocalDateRange.End
				constraint(LocalPostingDate entered)
					"LastPeriodShouldBeOpen"

				if (FinanceEnterpriseGroup.InterEntityDimension.SubAccount)
					for each distinct GeneralLedgerSubAccount in GeneralLedgerTotalAllInterEntityNettingRel
						LocalPayablesEntityAccount  		= FinanceEnterpriseGroup.first InterEntityPayablesRel.Account
						LocalReceivablesEntityAccount  		= FinanceEnterpriseGroup.first InterEntityReceivablesRel.Account
						if(each.GeneralLedgerSubAccount entered)
							LocalPayablesEntityAccount		= LocalPayablesEntityAccount + "-" + each.GeneralLedgerSubAccount
							LocalReceivablesEntityAccount	= LocalReceivablesEntityAccount + "-" + each.GeneralLedgerSubAccount
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension1)
					for each distinct FinanceDimension1 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension1 = each.FinanceDimension1
						LocalFinanceCodeBlock.FinanceDimension1 = LocalDimension1
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension2)
					for each distinct FinanceDimension2 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension2 = each.FinanceDimension2
						LocalFinanceCodeBlock.FinanceDimension2 = LocalDimension2
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension3)
					for each distinct FinanceDimension3 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension3 = each.FinanceDimension3
						LocalFinanceCodeBlock.FinanceDimension3 = LocalDimension3
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension4)
					for each distinct FinanceDimension4 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension4 = each.FinanceDimension4
						LocalFinanceCodeBlock.FinanceDimension4 = LocalDimension4
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal
				
				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension5)
					for each distinct FinanceDimension5 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension5 = each.FinanceDimension5
						LocalFinanceCodeBlock.FinanceDimension5 = LocalDimension5
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension6)
					for each distinct FinanceDimension6 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension6 = each.FinanceDimension6
						LocalFinanceCodeBlock.FinanceDimension6 = LocalDimension6
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension7)
					for each distinct FinanceDimension7 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension7 = each.FinanceDimension7
						LocalFinanceCodeBlock.FinanceDimension7 = LocalDimension7
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension8)
					for each distinct FinanceDimension8 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension8 = each.FinanceDimension8
						LocalFinanceCodeBlock.FinanceDimension8 = LocalDimension8
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension9)
					for each distinct FinanceDimension9 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension9 = each.FinanceDimension9
						LocalFinanceCodeBlock.FinanceDimension9 = LocalDimension9
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				if (FinanceEnterpriseGroup.InterEntityDimension.Dimension10)
					for each distinct FinanceDimension10 in GeneralLedgerTotalAllInterEntityNettingRel
						LocalDimension10 = each.FinanceDimension10
						LocalFinanceCodeBlock.FinanceDimension10 = LocalDimension10
						include CalculatePayablesAndReceivablesAmount
						if(LocalDiffTotal entered)
							include CreateNettingBalanceJournal

				invoke Unreleased.Release 	NewGeneralLedgerJournal.GeneralLedgerJournalControl

				LocalActor = actor
				send notification
					to LocalActor
					description is "InterEntityBalanceActionComplete"
					detail is "InterEntityBalanceActionCompleteFor:<AccountingEntity>"	
					
					
		TriggerAccountingEntityRules is an Instance Action		
			restricted
			default label is untranslatable
			Entrance Rules
			Action Rules
				if(FinanceEnterpriseGroup.BODTrigger)
					LocalActionCode = LocalActionCode.Update
					increment bod id.VariationID
					include AccountingEntityRules

#ifdef module integration		
		SendAccountingEntityNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is AccountingEntityXMLBOD
					bod type is "Sync.AccountingEntity"
					document id is DerivedDocumentID
					accounting entity is BODAccountingEntity
					variation id is BODVariationID
					
		TriggerAccountingEntityNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "AccountingEntity"
					invoked.PrmTriggerFrom				= "AccountingEntity"
					invoked.PrmDirection				= 1
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= AccountingEntity
					invoked.PrmMainUserTemplate         = "IONSyncAccountingEntity_AccountingEntity_ST"
				NativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger		= true
				if(FinanceEnterpriseGroup.BODTrigger and NativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "AccountingEntity"					
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.BODAccountingEntity		= BODAccountingEntity
							invoked.Reference1				= AccountingEntity
							invoked.Direction				= 1
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= BODAccountingEntity
							invoked.Reference1				= AccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendAccountingEntityNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBODID
							invoked.BODXML								= AccountingEntityXMLBOD
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status								= 3
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBODID
							invoked.BODXML								= AccountingEntityXMLBOD
													
		TriggerAccountingEntityNativeLPLOutBOD is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				invoke TriggerAccountingEntityNativeLPLBOD
#endif				

		PurgeGLRecordFEG is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup 		is a FinanceEnterpriseGroup
				PrmCloseConfiguration			is a GeneralLedgerCloseConfiguration
				PrmGeneralLedgerCloseYear		is a GeneralLedgerCloseYear
					context of PrmCloseConfiguration
				PrmAccountingEntityGroup		is an AccountingEntityGroup
				PrmAccountingEntity				is an AccountingEntity
				PrmGeneralLedgerSystemCode 		is a GeneralLedgerSystemCode
				PrmPurgeGLRecordsResult			is a PurgeGLRecordsResult
				PrmRecordType					is a RecordType
				PrmSystemCodeSelectionOption 	is Numeric 1
				PrmEntityOption					is Numeric 1
				PrmPurgeGeneralLedgerTotal		is Boolean
				PrmReportOnly					is Boolean
								
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmCloseConfiguration
					required
				PrmGeneralLedgerCloseYear
					required
				PrmSystemCodeSelectionOption
					required
				PrmAccountingEntity
					if(PrmEntityOption = 1 )
						required
							"AccountingEntityIsRequired"
					
			Local Fields
				LocalPurgeGLRecordsResultDetailView is a PurgeGLRecordsResultDetail view
				PurgeGLBackgroundGroup				is AlphaUpper up to 200
				LocalPostingDateRange				is a DateRange							
				
			Instance Selection
		        where (	FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and 	((PrmAccountingEntity entered
		        and 	AccountingEntity = PrmAccountingEntity)
		        or		PrmAccountingEntity not entered)
		        and 	Status.Active
				and 	PostingEntity)
		        
		    Action Rules
		    	Set Rules
		    		Entrance Rules
						PurgeGLBackgroundGroup 		= "PurgeGLTransactionHistoryRecord"
						LocalPostingDateRange.Begin	= PrmGeneralLedgerCloseYear.DerivedStartDate
						LocalPostingDateRange.End	= PrmGeneralLedgerCloseYear.DerivedCloseYearEndDate
		    		Exit Rules

		    	Instance Rules
		            invoke Create PurgeGLRecordsResultDetail
						assign result to LocalPurgeGLRecordsResultDetailView
						invoked.FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
						invoked.PurgeGLRecordsResult			= PrmPurgeGLRecordsResult.PurgeGLRecordsResult
						invoked.AccountingEntity				= AccountingEntity	
					invoke CheckAllEntityPeriodsFinalClosed PrmGeneralLedgerCloseYear
						invoked.PrmAccountingEntity 			= AccountingEntity
						invoked.PrmPurgeGLRecordsResult			= PrmPurgeGLRecordsResult
						invoked.PrmPurgeGLRecordsResultDetail	= LocalPurgeGLRecordsResultDetailView.PurgeGLRecordsResultDetail
		            if(!LocalPurgeGLRecordsResultDetailView.PurgeGLRecordsResultDetail.Status=1)
						if( ( PrmGeneralLedgerSystemCode entered and (PrmGeneralLedgerSystemCode = "GL" or PrmRecordType.User) )
							or	PrmSystemCodeSelectionOption = 2 )
							invoke PurgeGLTransactionDetailHistoryRecords GLTransactionDetail in background group(PurgeGLBackgroundGroup)
								invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.PrmAccountingEntity				= AccountingEntity
								invoked.PrmGeneralLedgerCloseYear		= PrmGeneralLedgerCloseYear
								invoked.PrmSystemCodeSelectionOption	= PrmSystemCodeSelectionOption
								invoked.PrmRecordType					= PrmRecordType
								invoked.PrmGeneralLedgerSystemCode		= PrmGeneralLedgerSystemCode
								invoked.PrmReportOnly					= PrmReportOnly
								invoked.PrmPurgeGLRecordsResult			= PrmPurgeGLRecordsResult
								invoked.PrmPurgeGLRecordsResultDetail	= LocalPurgeGLRecordsResultDetailView.PurgeGLRecordsResultDetail
								invoked.PrmPostingDateRange				= LocalPostingDateRange
			            invoke PurgeGLTransactionPostedRecords GeneralLedgerTransaction in background group(PurgeGLBackgroundGroup)
							invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
							invoked.PrmAccountingEntity				= AccountingEntity
							invoked.PrmGeneralLedgerCloseYear		= PrmGeneralLedgerCloseYear
							invoked.PrmSystemCodeSelectionOption	= PrmSystemCodeSelectionOption
							invoked.PrmRecordType					= PrmRecordType
							invoked.PrmGeneralLedgerSystemCode		= PrmGeneralLedgerSystemCode
							invoked.PrmReportOnly					= PrmReportOnly
							invoked.PrmPurgeGLRecordsResult			= PrmPurgeGLRecordsResult
							invoked.PrmPurgeGLRecordsResultDetail	= LocalPurgeGLRecordsResultDetailView.PurgeGLRecordsResultDetail
						if(PrmPurgeGeneralLedgerTotal)
							invoke PurgeGLTotalRecords GeneralLedgerTotal in background group(PurgeGLBackgroundGroup)
								invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.PrmAccountingEntity				= AccountingEntity
								invoked.PrmGeneralLedgerCloseYear		= PrmGeneralLedgerCloseYear
								invoked.PrmSystemCodeSelectionOption	= PrmSystemCodeSelectionOption
								invoked.PrmRecordType					= PrmRecordType
								invoked.PrmGeneralLedgerSystemCode		= PrmGeneralLedgerSystemCode
								invoked.PrmReportOnly					= PrmReportOnly
								invoked.PrmPurgeGLRecordsResult			= PrmPurgeGLRecordsResult
								invoked.PrmPurgeGLRecordsResultDetail	= LocalPurgeGLRecordsResultDetailView.PurgeGLRecordsResultDetail

	


		CreateOrDeleteEntityRelationFromEntityToBlank is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntityRule         is an AccountingEntity group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalCommitCounter				is Numeric 3
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
            Sort Order
                FinanceEnterpriseGroup
                AccountingEntity
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyFromValue			= AccountingEntity
					LocalKeyToValue				= blank
					if(PrmDeleteFlag)
						invoke Delete CodeBlockRelationDetailFromToRel
					else
						invoke Update CodeBlockRelationDetailFromToRel
							invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
							invoked.CodeBlockRelation                   = PrmCodeBlockRelation
							invoked.AccountingEntity		          	= AccountingEntity
							invoked.DefaultToValue                      = PrmDefaultToValue
					increment LocalCommitCounter
					if (LocalCommitCounter > 50)
						commit transaction
						initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromEntityToUnit is a Set Action
			restricted
			Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntityRule         is an AccountingEntity group
                PrmAccountingUnitRule    		is an AccountingUnit group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
                PrmAccountingEntityRule
                PrmAccountingUnitRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
            Sort Order
                FinanceEnterpriseGroup
                AccountingEntity
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteUnitByGrpRelFromEntityToUnit AccountingUnit
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
                            	invoked.PrmAccountingUnitRule           = PrmAccountingUnitRule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteUnitByGrpRelFromEntityToUnit AccountingUnit
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmAccountingUnitRule           = PrmAccountingUnitRule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToAccount is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntityRule         is an AccountingEntity group
                PrmAccountRule                  is a GeneralLedgerChartAccount group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
                PrmAccountingEntityRule
                PrmAccountRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
            Sort Order
                FinanceEnterpriseGroup
                AccountingEntity
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteAccByGrpRelFromEntityToAccount GeneralLedgerChartAccount
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
                            	invoked.PrmAccountRule                  = PrmAccountRule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteAccByGrpRelFromEntityToAccount GeneralLedgerChartAccount
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmAccountRule                  = PrmAccountRule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

        CreateOrDeleteEntityRelationFromEntityToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntityRule         is an AccountingEntity group
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
                PrmAccountingEntityRule
                PrmProjectRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
            Sort Order
                FinanceEnterpriseGroup
                AccountingEntity
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteProjectRelationFromEntityToProject Project
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
                            	invoked.PrmProjectRule                  = PrmProjectRule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteProjectRelationFromEntityToProject Project
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmProjectRule                  = PrmProjectRule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension1 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension1Rule               is a FinanceDimension1 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension1Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim1ByGrpRelFromEntityToDimension1 FinanceDimension1
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension1Rule	            = PrmDimension1Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim1ByGrpRelFromEntityToDimension1 FinanceDimension1
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension1Rule	            = PrmDimension1Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension2 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension2Rule               is a FinanceDimension2 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension2Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim2ByGrpRelFromEntityToDimension2 FinanceDimension2
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension2Rule	            = PrmDimension2Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim2ByGrpRelFromEntityToDimension2 FinanceDimension2
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension2Rule	            = PrmDimension2Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
		
		CreateOrDeleteEntityByGrpRelFromEntityToDimension3 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension3Rule               is a FinanceDimension3 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension3Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim3ByGrpRelFromEntityToDimension3 FinanceDimension3
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension3Rule	            = PrmDimension3Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim3ByGrpRelFromEntityToDimension3 FinanceDimension3
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension3Rule	            = PrmDimension3Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension4 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension4Rule               is a FinanceDimension4 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension4Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim4ByGrpRelFromEntityToDimension4 FinanceDimension4
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension4Rule	            = PrmDimension4Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim4ByGrpRelFromEntityToDimension4 FinanceDimension4
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension4Rule	            = PrmDimension4Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension5 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension5Rule               is a FinanceDimension5 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension5Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim5ByGrpRelFromEntityToDimension5 FinanceDimension5
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension5Rule	            = PrmDimension5Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim5ByGrpRelFromEntityToDimension5 FinanceDimension5
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension5Rule	            = PrmDimension5Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
		
		CreateOrDeleteEntityByGrpRelFromEntityToDimension6 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension6Rule               is a FinanceDimension6 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension6Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim6ByGrpRelFromEntityToDimension6 FinanceDimension6
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension6Rule	            = PrmDimension6Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim6ByGrpRelFromEntityToDimension6 FinanceDimension6
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension6Rule	            = PrmDimension6Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
						
		CreateOrDeleteEntityByGrpRelFromEntityToDimension7 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension7Rule               is a FinanceDimension7 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension7Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim7ByGrpRelFromEntityToDimension7 FinanceDimension7
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension7Rule	            = PrmDimension7Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim7ByGrpRelFromEntityToDimension7 FinanceDimension7
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension7Rule	            = PrmDimension7Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension8 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension8Rule               is a FinanceDimension8 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension8Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim8ByGrpRelFromEntityToDimension8 FinanceDimension8
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension8Rule	            = PrmDimension8Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim8ByGrpRelFromEntityToDimension8 FinanceDimension8
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension8Rule	            = PrmDimension8Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension9 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension9Rule               is a FinanceDimension9 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension9Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim9ByGrpRelFromEntityToDimension9 FinanceDimension9
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension9Rule	            = PrmDimension9Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim9ByGrpRelFromEntityToDimension9 FinanceDimension9
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension9Rule	            = PrmDimension9Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity

		CreateOrDeleteEntityByGrpRelFromEntityToDimension10 is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
		        PrmCodeBlockRelation			is a CodeBlockRelation
		        PrmAccountingEntityRule         is an AccountingEntity group
				PrmDimension10Rule               is a FinanceDimension10 group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDimension10Rule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalAccountingEntityArray		is an AccountingEntityArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
		        and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
		        FinanceEnterpriseGroup
		        AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim10ByGrpRelFromEntityToDimension10 FinanceDimension10
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[1]
								invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
								invoked.PrmDimension10Rule	            = PrmDimension10Rule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity
					else
						invoke CreateOrDeleteDim10ByGrpRelFromEntityToDimension10 FinanceDimension10
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmAccountingEntity				= LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter-1]
							invoked.PrmAccountingEntityArray    	= LocalAccountingEntityArray
							invoked.PrmDimension10Rule	            = PrmDimension10Rule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalAccountingEntityArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalAccountingEntityArray.AccountingEntity[LocalArrayCounter] = AccountingEntity


		CreateOrDeleteEntityByGrpRelFromBlankToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmAccountingEntityRule         is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyFromValue			= blank
					LocalKeyToValue				= AccountingEntity
					if(PrmDeleteFlag)
						invoke Delete CodeBlockRelationDetailFromToRel
					else
						invoke Update CodeBlockRelationDetailFromToRel
							invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
							invoked.CodeBlockRelation                   = PrmCodeBlockRelation
							invoked.AccountingEntity		          	= AccountingEntity
							invoked.DefaultToValue                      = PrmDefaultToValue
					increment LocalCommitCounter
					if (LocalCommitCounter > 50)
						commit transaction
						initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromAccountToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmAccount		    			is a GeneralLedgerChartAccount
				PrmAccountArray					is an AccountArray
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccount
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.GeneralLedgerChartAccount	= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityRelationFromProjectToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProject		    			is a Project
				PrmProjectArray					is a ProjectArray
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmProject
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmProjectArray.Project[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmProjectArray.Project[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmProjectArray.Project[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmProjectArray.Project[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Project						= PrmProjectArray.Project[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension1ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension1					is a FinanceDimension1
				PrmDimension1Array				is a FinanceDimension1Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension1
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension1Array.FinanceDimension1[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension1Array.FinanceDimension1[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension1					= PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension2ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension2					is a FinanceDimension2
				PrmDimension2Array				is a FinanceDimension2Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension2
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension2Array.FinanceDimension2[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension2Array.FinanceDimension2[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension2					= PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
								
		CreateOrDeleteEntityByGrpRelFromDimension3ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension3					is a FinanceDimension3
				PrmDimension3Array				is a FinanceDimension3Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension3
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension3Array.FinanceDimension3[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension3Array.FinanceDimension3[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension3					= PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension4ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension4					is a FinanceDimension4
				PrmDimension4Array				is a FinanceDimension4Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension4
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension4Array.FinanceDimension4[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension4Array.FinanceDimension4[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension4					= PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension5ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension5					is a FinanceDimension5
				PrmDimension5Array				is a FinanceDimension5Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension5
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension5Array.FinanceDimension5[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension5Array.FinanceDimension5[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension5					= PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
	
		CreateOrDeleteEntityByGrpRelFromDimension6ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension6					is a FinanceDimension6
				PrmDimension6Array				is a FinanceDimension6Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension6
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension6Array.FinanceDimension6[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension6Array.FinanceDimension6[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension6					= PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension7ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension7					is a FinanceDimension7
				PrmDimension7Array				is a FinanceDimension7Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension7
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension7Array.FinanceDimension7[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension7Array.FinanceDimension7[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension7					= PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension8ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension8					is a FinanceDimension8
				PrmDimension8Array				is a FinanceDimension8Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension8
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension8Array.FinanceDimension8[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension8Array.FinanceDimension8[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension8					= PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension9ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension9					is a FinanceDimension9
				PrmDimension9Array				is a FinanceDimension9Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension9
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension9Array.FinanceDimension9[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension9Array.FinanceDimension9[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension9					= PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteEntityByGrpRelFromDimension10ToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmDimension10					is a FinanceDimension10
				PrmDimension10Array				is a FinanceDimension10Array
				PrmAccountingEntityRule			is an AccountingEntity group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension10
				PrmAccountingEntityRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalCommitCounter				is Numeric 3
				LocalArrayCounter				is Numeric 5
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	AccountingEntity within PrmAccountingEntityRule
				and PostingEntity)
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Set Rules
					Exit Rules
						if (LocalCommitCounter > 0)
							commit transaction
				Instance Rules
					LocalArrayCounter = 1
					initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= AccountingEntity
					if (PrmDeleteFlag)
						while (PrmDimension10Array.FinanceDimension10[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension10Array.FinanceDimension10[LocalArrayCounter] entered)
							LocalKeyFromValue = PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation			= PrmCodeBlockRelation
								invoked.DefaultToValue				= PrmDefaultToValue
								invoked.Dimension10					= PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
								invoked.AccountingEntity			= AccountingEntity
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter



		RequestNewAccountingEntity is a Create RequestAction
			action comment required
			request action process is RequestNewFEGDimensions
			request action linkback webapp is FinancialBusinessAnalyst
			allow user fields as parameters
			Parameters
				RequesterActor				is an Actor
			 	RequestedBy					is Alpha 100
	 			RequesterPhone				is a Telephone
			 	RequesterEmail				is an EmailAddress
				RequestPriority				is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy					is Date
				FinanceEnterpriseGroup
				PrmAccountingEntity			is like AccountingEntity
					default label is "AccountingEntity"
				Busclass					is Alpha 100
				Name
				Status						is Numeric 1
					States
						Active					value is 0 
						Delete					value is 1
						Inactive				value is 2
    			PostingCategory
    			SubAccount						is a GeneralLedgerSubAccount
    			FunctionalCurrency				is a Currency
				FunctionalAutoBalanceThreshold 	is Unsigned Decimal 19.3
					precision is FunctionalCurrency.NumberOfDecimals		
				AlternateCurrency				is a Currency
				AlternateAutoBalanceThreshold 	is Unsigned Decimal 19.3
					precision is AlternateCurrency.NumberOfDecimals		
				AlternateCurrency2				is a Currency
				Alternate2AutoBalanceThreshold 	is Unsigned Decimal 19.3
					precision is AlternateCurrency2.NumberOfDecimals	
				AlternateCurrency3				is a Currency
				Alternate3AutoBalanceThreshold 	is Unsigned Decimal 19.3
					precision is AlternateCurrency3.NumberOfDecimals	
				FinanceDimension1
				FinanceDimension2
				FinanceDimension3
				FinanceDimension4
				FinanceDimension5
				FinanceDimension6
				FinanceDimension7
				FinanceDimension8
				FinanceDimension9
				FinanceDimension10
				AverageDailyBalance				is Boolean
				CloseConfiguration				is a GeneralLedgerCloseConfiguration
				FiscalYear			       		is a GeneralLedgerCloseYear
				CurrentPeriod			   		is a GeneralLedgerClosePeriod
				AccountingUnitZoneBalancing		is Boolean
				AutoBalance						is Boolean
				CurrencyLedger					is Numeric 1
					States
						NoBalancing				value is 0
						TransactionAmount		value is 1
						AllCurrencyAmounts		value is 2
				UnreleaseOfReleasedEntries		is Boolean
				ValidSystems					is a GeneralLedgerSystemCode group
				JournalApproval					is Numeric 1
					States
						None					value is 0
						AmountOnly				value is 1
						AmountAndUnit			value is 2
				JournalApprovalAmount			is an InternationalAmount	
				AddressCode
#ifdef module sharedfinance
				BypassApprovalCode				is a ApprovalCode
#endif
#ifndef module sharedfinance
				BypassApprovalCode				is AlphaUpper 30
#endif
#ifdef module lm 	
				LeaseAccountingStandard			is Numeric size 1
					States
						ASC 					value is 1
						GASB 					value is 2
						IFRS					value is 3  		
#endif
				
			Parameter Rules
				RequestPriority
					required				
				NeededBy
					required					
				RequesterActor
					initial value is actor
					default to actor
				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber
				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress				
				Busclass
					default to "AccountingEntity"				
				FinanceEnterpriseGroup
					LocalFinanceEnterpriseGroup1 = FinanceEnterpriseGroup					
				PrmAccountingEntity
					required
					LocalAccountingEntity = PrmAccountingEntity
					constraint (!AccountingEntityRel1 exists)
						"AccountingEntityAlreadyExists"					
				Name
					required				
#ifdef module lm 	
				LeaseAccountingStandard
					initial value is FinanceEnterpriseGroup.LeaseAccountingStandard
					if (LeaseAccountingEntityRel exists)
						cannot be changed 
							"CannotChangeLeaseAccountingStandard,LeasesExistsWithinThis<FinanceEnterpriseGroup.AccountingEntityLabel>"	
#endif
				FunctionalCurrency
					if (old FunctionalCurrency entered)
						constraint (FunctionalCurrency	= old FunctionalCurrency)
							"FunctionalCurrencyCannotBeChanged"			
					required
				FunctionalAutoBalanceThreshold
					constraint (FunctionalCurrency entered)
						"Functional_CurrencyNotSpecified"
				AlternateCurrency
					if (old AlternateCurrency entered)
						constraint (AlternateCurrency	= old AlternateCurrency)
							"AlternateCurrencyCannotBeChanged"
					if (AlternateCurrency entered
					and FunctionalCurrency	!= AlternateCurrency)
						constraint (FinanceEnterpriseGroup.CurrencyTable entered)
							"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency"
				AlternateAutoBalanceThreshold
					constraint (AlternateCurrency entered)
						"Alternate_CurrencyNotSpecified"
				AlternateCurrency2
					if (old AlternateCurrency2 entered)
						constraint (AlternateCurrency2	= old AlternateCurrency2)
							"AlternateCurrency2CannotBeChanged"
					if (AlternateCurrency2 entered
					and FunctionalCurrency	!= AlternateCurrency2)
						constraint (FinanceEnterpriseGroup.CurrencyTable entered)
							"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency2"
				Alternate2AutoBalanceThreshold
					constraint (AlternateCurrency2 entered)
						"Alternate_Currency2NotSpecified"
				AlternateCurrency3
					if (old AlternateCurrency3 entered)
						constraint (AlternateCurrency3	= old AlternateCurrency3)
							"AlternateCurrency3CannotBeChanged"
					if (AlternateCurrency3 entered
					and FunctionalCurrency	!= AlternateCurrency3)
						constraint (FinanceEnterpriseGroup.CurrencyTable entered)
							"CurrencyExchangeTableIsRequiredOnFinanceEnterpriseGroupForAlternateCurrency3"						
				Alternate3AutoBalanceThreshold
					constraint (AlternateCurrency3 entered)
						"Alternate_Currency3NotSpecified"
				CloseConfiguration
					required
				CurrentPeriod
					required
					constraint (CurrentPeriod exists) 
						"ClosePeriodDoesNotExist"
					FiscalYear 			= CurrentPeriod.GeneralLedgerCloseYear
					if (CurrentPeriod != old CurrentPeriod)
						LocalYear	= FiscalYear - 1
						constraint (first AllPeriodsForYearRel exists)
							"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
						LocalYear	= FiscalYear
						constraint (first AllPeriodsForYearRel exists)
							"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
						LocalYear	= FiscalYear + 1
						constraint (first AllPeriodsForYearRel exists)
							"PeriodsDoNotExistInCloseConfigurationForYear<LocalYear>"
				AccountingUnitZoneBalancing
					constraint (FinanceEnterpriseGroup.AccountingUnitLabelExists)
						"AccountingUnitNotUsedInFinanceStructure"
					LocalSystemAccount	= SystemAccount.ZonePayablesAndReceivables
					if (!SystemAccountCheckRel1 exists)
						LocalSystemAccount	= SystemAccount.ZonePayables 
						constraint (SystemAccountCheckRel1 exists)
							"ZonePayablesIsNotSetupFor<FinanceEnterpriseGroup.AccountLabel>"
						LocalSystemAccount	= SystemAccount.ZoneReceivables 
						constraint (SystemAccountCheckRel1 exists)
							"ZoneReceivablesIsNotSetupFor<FinanceEnterpriseGroup.AccountLabel>"
				Status
					initial value is Status.Active
					default to Status.Active
				AutoBalance
					LocalSystemAccount	= SystemAccount.AutoBalance 
					constraint (SystemAccountCheckRel1 exists)
						"Required:SetupForAutoBalance<FinanceEnterpriseGroup.AccountLabel>"
				CurrencyLedger
					if (CurrencyLedger.AllCurrencyAmounts)
						LocalSystemAccount	= SystemAccount.AutoBalance 
						constraint (SystemAccountCheckRel1 exists)
							"BalanceBy_All_Currency_Amounts_Requires_SetupFor_Auto_Balance<FinanceEnterpriseGroup.AccountLabel>"						
				AverageDailyBalance
					constraint (!FinanceEnterpriseGroup.ADBSelection.None)
						"SetupForFinanceEnterpriseGroupADB_SelectionIsRequired"

			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
					invoked.AccountingEntity						= PrmAccountingEntity
					invoked.Name									= Name
					invoked.Status									= Status
					invoked.PostingCategory							= PostingCategory
					invoked.SubAccount								= SubAccount
					invoked.FunctionalCurrency						= FunctionalCurrency
					invoked.AlternateCurrency						= AlternateCurrency
					invoked.AlternateCurrency2						= AlternateCurrency2
					invoked.AlternateCurrency3						= AlternateCurrency3
					invoked.FunctionalAutoBalanceThreshold			= FunctionalAutoBalanceThreshold
					invoked.AlternateAutoBalanceThreshold			= AlternateAutoBalanceThreshold
					invoked.Alternate2AutoBalanceThreshold			= Alternate2AutoBalanceThreshold
					invoked.Alternate3AutoBalanceThreshold			= Alternate3AutoBalanceThreshold
					invoked.FinanceDimension1						= FinanceDimension1
					invoked.FinanceDimension2						= FinanceDimension2
					invoked.FinanceDimension3						= FinanceDimension3
					invoked.FinanceDimension4						= FinanceDimension4
					invoked.FinanceDimension5						= FinanceDimension5
					invoked.FinanceDimension6						= FinanceDimension6
					invoked.FinanceDimension7						= FinanceDimension7
					invoked.FinanceDimension8						= FinanceDimension8
					invoked.FinanceDimension9						= FinanceDimension9
					invoked.FinanceDimension10						= FinanceDimension10
					invoked.AverageDailyBalance						= AverageDailyBalance
					invoked.CloseConfiguration						= CloseConfiguration								
					invoked.FiscalYear								= FiscalYear
					invoked.CurrentPeriod							= CurrentPeriod
					invoked.AccountingUnitZoneBalancing				= AccountingUnitZoneBalancing
					invoked.AutoBalance								= AutoBalance
					invoked.CurrencyLedger							= CurrencyLedger
					invoked.UnreleaseOfReleasedEntries				= UnreleaseOfReleasedEntries
					invoked.ValidSystems							= ValidSystems
					invoked.JournalApproval							= JournalApproval
					invoked.JournalApprovalAmount					= JournalApprovalAmount
					invoked.AddressCode								= AddressCode
					invoked.BypassApprovalCode						= BypassApprovalCode

#ifdef module lm

		LoadAccountingStandardFields is a Set Action
			restricted
			Action Rules
				Instance Rules
					if (LeaseAccountingMethod = 0)
						LeaseAccountingStandard = 1
					else
						LeaseAccountingStandard = 2
#endif

#ifdef module ad

		ProcessBuildDailyTotal is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmBeginBalancePeriod			is AlphaUpper size 10
					default label is "BeginningBalancePeriod"
				PrmStartPeriod                  is like GeneralLedgerCalendarPeriod
					default label is "StartPeriod"
				PrmEndPeriod                    is like GeneralLedgerCalendarPeriod
					default label is "EndPeriod"
				PrmSystemUREAccountOnly		is Boolean
					default label is "SystemUREAccountOnly"









				PrmDateRange					is a DateRange		
					default label is "DateRange"

			Local Fields
				LocalAsyncId			is a AsyncActionRequest
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ActivePostingEntity)
			Sort Order		
				FinanceEnterpriseGroup
				AccountingEntity
			Action Rules
				Empty Set Rules
				Instance Rules
					initialize LocalAsyncId
					if (not PrmSystemUREAccountOnly)	
						invoke GetBeginBalance GeneralLedgerTotal in background
							invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PrmAccountingEntity       = AccountingEntity
							invoked.PrmReportingBasis         = PrmReportingBasis
							invoked.PrmBeginBalancePeriod     = PrmBeginBalancePeriod

					invoke InitializeTotals DailyPeriodTotal in background
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity       = AccountingEntity
						invoked.PrmStartPeriod            = PrmStartPeriod
						invoked.PrmEndPeriod              = PrmEndPeriod
						invoked.PrmSystemUREAccountOnly   = PrmSystemUREAccountOnly
					
					invoke BuildDailyTotal GeneralLedgerTransaction in background
						run after LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.PrmAccountingEntity       = AccountingEntity
						invoked.PrmStartPeriod            = PrmStartPeriod
						invoked.PrmEndPeriod              = PrmEndPeriod
						invoked.PrmSystemUREAccountOnly   = PrmSystemUREAccountOnly
#endif
