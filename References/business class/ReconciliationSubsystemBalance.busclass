ReconciliationSubsystemBalance is a BusinessClass
    owned by reconciliation
    prefix is RSBA

    Ontology
        symbolic key is ReconciliationSubsystemBalance

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields
		SystemCode					is a GeneralLedgerSystemCode
        ReportTotal 				is an InternationalAmount
        ReportDocument
			delete ignored
        RecordStatus				is Numeric 1
        	States
        		Open				value is 0
        		Processed			value is 1

    Conditions
    	ReportedInFunctionalCurrency
    		restricted
			when (ReconciliationSubsystemBalance.InvoiceCurrency = DerivedFunctionalCurrency)
			
		ReconLevelMatches
			restricted
			when (LocalMatchesLevel)

	Local Fields
		LocalEndDate				is a GeneralLedgerCalendarPeriod
		LocalPostingDate			is Date
		LocalReportDocument			is a ReportDocument
		LocalAccountingEntity		is an AccountingEntity
		LocalAccrualCodeBlock		is like FinanceCodeBlockFull
		LocalRAccountStructure		is like ReconciliationAccountStructure
		LocalReconAccount			is like ReconciliationAccount
		LocalMatchesLevel			is Boolean
		
	Derived Fields
		DerivedLedger				is a DerivedField
			type is like Ledger
			return PayablesAccrualCodeDetailRel.DistributionAccount.Ledger
			
		DerivedGLChartAccount		is a DerivedField
			type is like GeneralLedgerChartAccount
			if (SystemCode = "AP")
				return PayablesAccrualCodeDetailRel.DistributionAccount.GeneralLedgerChartAccount
			else
			if (SystemCode = "AR")
				return ReceivableGeneralLedgerCodeRel.DistributionAccount.GeneralLedgerChartAccount
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.ReceivedNotInvoiced)
				return PayablesProcessLevelRel.ReceiptAccrualAccount.GeneralLedgerChartAccount
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
				return PayablesProcessLevelRel.MatchedNotReceivedAccount.GeneralLedgerChartAccount
			else
			if(SystemCode = "IC")
				return GeneralLedgerCategoryRel.InventoryAccount.GeneralLedgerChartAccount
				
		DerivedAccountingEntity		is a DerivedField
			type is like AccountingEntity
			if (SystemCode = "AP")
				return PayablesAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity
			else
			if (SystemCode = "AR")
				return ReceivableGeneralLedgerCodeRel.DistributionAccount.ToAccountingEntity
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.ReceivedNotInvoiced)
				return PayablesProcessLevelRel.ReceiptAccrualAccount.ToAccountingEntity
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
				return PayablesProcessLevelRel.MatchedNotReceivedAccount.ToAccountingEntity
			else
			if(SystemCode = "IC")
				return GeneralLedgerCategoryRel.InventoryAccount.ToAccountingEntity
					
		DerivedFunctionalCurrency	is a DerivedField
			type is like Currency
			LocalAccountingEntity	= DerivedAccountingEntity
			return LocalAccountingEntity.FunctionalCurrency
			
		DerivedAccountingUnit		is a DerivedField
			type is like AccountingUnit
			if (SystemCode = "AP")
				return PayablesAccrualCodeDetailRel.DistributionAccount.AccountingUnit
			else
			if (SystemCode = "AR")
				return ReceivableGeneralLedgerCodeRel.DistributionAccount.AccountingUnit
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.ReceivedNotInvoiced)
				return PayablesProcessLevelRel.ReceiptAccrualAccount.AccountingUnit
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
				return PayablesProcessLevelRel.MatchedNotReceivedAccount.AccountingUnit
			else
			if(SystemCode = "IC")
				return GeneralLedgerCategoryRel.InventoryAccount.AccountingUnit
					
		DerivedProject				is a DerivedField
			type is like Project
			if (SystemCode = "AP")
				return PayablesAccrualCodeDetailRel.DistributionAccount.Project
			else
			if (SystemCode = "AR")
				return ReceivableGeneralLedgerCodeRel.DistributionAccount.Project
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.ReceivedNotInvoiced)
				return PayablesProcessLevelRel.ReceiptAccrualAccount.Project
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
				return PayablesProcessLevelRel.MatchedNotReceivedAccount.Project
			else
			if(SystemCode = "IC")
				return GeneralLedgerCategoryRel.InventoryAccount.Project
				
		DerivedEntityCalendarPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			return first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod

		DerivedDate                 is a StringField
			type is Alpha up to 35
			LocalPostingDate
		
		ReferenceMessage            is a MessageField
            "Reference"
			
		DerivedReferenceNumber		is a DerivedField
			type is AlphaUpper 150
			if(ReconciliationSubsystemBalance.SecondarySortCriteria entered)
				return DerivedDate + " " + ReferenceMessage + " " + ReconciliationSubsystemBalance.AccrualCode +" - " +ReconciliationSubsystemBalance.SecondarySortCriteria
			else
				return DerivedDate + " " + ReferenceMessage + " " + ReconciliationSubsystemBalance.AccrualCode
			
		DerivedFEG					is a DerivedField
			type is like FinanceEnterpriseGroup
			return Company.FinanceEnterpriseGroup
			









			
	Relations
		ReconciliationAccountStructureRel
			one-to-one relation to ReconciliationAccountStructure
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= DerivedFEG
				related.ReconciliationAccountStructure	= ReconciliationAccountRel.ReconciliationAccountStructure
				
		StructureRowRel
			one-to-one relation to StructureRow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= DerivedFEG
				related.StructureRow			= ReconciliationAccountStructureRel.ReconciliationLevel
				
		PayablesAccrualCodeDetailRel
			one-to-one relation to PayablesAccrualCodeDetail
			Field Mapping uses symbolic key
				related.VendorGroup			= PayablesCompanyRel.VendorGroup
				related.PayablesAccrualCode	= ReconciliationSubsystemBalance.AccrualCode
				related.Company				= PayablesCompanyRel.Company
				
		ReceivableGeneralLedgerCodeRel
			one-to-one relation to ReceivableGeneralLedgerCode
			Field Mapping uses symbolic key
				related.Company						= ReceivableCompanyRel.Company
				related.ReceivableGeneralLedgerCode	= ReconciliationSubsystemBalance.AccrualCode
				
		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company			= Company
				
		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company			= Company
		
		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company			= Company
				
		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company			= Company
				
		PayablesProcessLevelRel    
			one-to-one relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company 				= MatchCompanyRel.Company
				related.PayablesProcessLevel	= ReconciliationSubsystemBalance.AccrualCode
				
		GeneralLedgerCategoryRel
    		one-to-one relation to GeneralLedgerCategory
    		Field Mapping uses symbolic key
    			related.Company				= InventoryCompanyRel.Company
    			related.InventoryLocation	= ReconciliationSubsystemBalance.SecondarySortCriteria
    			related.GeneralLedgerCategory = ReconciliationSubsystemBalance.AccrualCode
						
		ReconciliationAccountRel
			one-to-many relation to ReconciliationAccount
			Field Mapping uses ByGeneralLedgerChartAccount
				related.ReconciliationManagementGroup					  = DerivedFEG
				related.ReconciliationCodeBlock.GeneralLedgerChartAccount = DerivedGLChartAccount
				related.ReconciliationCodeBlock.AccountingEntity 		  = DerivedAccountingEntity

		PeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByPeriod														
				related.ReconciliationManagementGroup	= DerivedFEG
				related.ReconciliationAccountStructure	= LocalRAccountStructure			
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = LocalAccountingEntity.CloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod = LocalEndDate
				related.PeriodEndReconciliation.ReconciliationAccount = LocalReconAccount	

		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= DerivedFEG
			Instance Selection
				where (related.Date 			not < LocalPostingDate		
				and	   related.PeriodType.EndDate)

		ExactCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= DerivedFEG
			Instance Selection
				where (related.Date 				= LocalPostingDate		
				and	   related.PeriodType.EndDate)
				
		EntityLedgerPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= DerivedFEG
				related.AccountingEntity			= DerivedAccountingEntity
				related.Ledger						= DerivedLedger
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	not < LocalEndDate)
		
		ReconciliationPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = DerivedFEG  
				related.ReconciliationAccountStructure	         = PeriodEndReconciliationRel.ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliationRel.PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration          = PeriodEndReconciliationRel.PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = LocalEndDate
			Instance Selection
				where (related.DetailType.ReconciliationDetail
				and   ((!related.OriginatingTransaction entered 
				and    related.Company					= Company
				and    related.AccrualCode				= ReconciliationSubsystemBalance.AccrualCode)
				or     (related.OriginatingTransaction entered
				and    related.OriginatingTransaction.BusinessClassName 																		= "ReconciliationSubsystemBalance"
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.Company				    = ReconciliationSubsystemBalance.Company
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.ReconciliationAccountType  = ReconciliationSubsystemBalance.ReconciliationAccountType
				and	   related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.ReconciliationDate 		= ReconciliationSubsystemBalance.ReconciliationDate
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.AccrualCode 				= ReconciliationSubsystemBalance.AccrualCode
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.InvoiceCurrency			= ReconciliationSubsystemBalance.InvoiceCurrency
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.SecondarySortCriteria 		= ReconciliationSubsystemBalance.SecondarySortCriteria)))

		ParentReconPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup	         = DerivedFEG  
				related.ReconciliationAccountStructure	         = PeriodEndReconciliationRel.ParentPeriodEndReconciliation.ReconciliationAccountStructure
				related.ReconciliationAccount			         = PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.ReconciliationAccount
				related.GeneralLedgerCloseConfiguration          = PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = LocalEndDate
			Instance Selection
				where (related.DetailType.ReconciliationDetail
				and   ((!related.OriginatingTransaction entered 
				and    related.Company					= Company
				and    related.AccrualCode				= ReconciliationSubsystemBalance.AccrualCode)
				or     (related.OriginatingTransaction entered
				and    related.OriginatingTransaction.BusinessClassName 																		= "ReconciliationSubsystemBalance"
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.Company				    = ReconciliationSubsystemBalance.Company
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.ReconciliationAccountType  = ReconciliationSubsystemBalance.ReconciliationAccountType
				and	   related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.ReconciliationDate 		= ReconciliationSubsystemBalance.ReconciliationDate
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.AccrualCode 				= ReconciliationSubsystemBalance.AccrualCode
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.InvoiceCurrency			= ReconciliationSubsystemBalance.InvoiceCurrency
				and    related.OriginatingTransaction(ReconciliationSubsystemBalance).ReconciliationSubsystemBalance.SecondarySortCriteria 		= ReconciliationSubsystemBalance.SecondarySortCriteria)))
				
	Rule Blocks
	

		CheckReconLevel
			if (SystemCode = "AP")
				LocalAccrualCodeBlock		= PayablesAccrualCodeDetailRel.DistributionAccount
			else
			if (SystemCode = "AR")
				LocalAccrualCodeBlock	= ReceivableGeneralLedgerCodeRel.DistributionAccount
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.ReceivedNotInvoiced)
				LocalAccrualCodeBlock	= PayablesProcessLevelRel.ReceiptAccrualAccount
			else
			if(SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
				LocalAccrualCodeBlock = PayablesProcessLevelRel.MatchedNotReceivedAccount
			else
			if(SystemCode = "IC")
				LocalAccrualCodeBlock	= GeneralLedgerCategoryRel.InventoryAccount
					
			LocalMatchesLevel			= false
			if ((StructureRowRel.Type	= 1)
			or  (StructureRowRel.Type	= 2		
			and  each.ReconciliationCodeBlock.AccountingUnit = LocalAccrualCodeBlock.AccountingUnit)
			or  (StructureRowRel.Type	= 4		
			and  each.ReconciliationCodeBlock.Project = LocalAccrualCodeBlock.Project)
			or  (StructureRowRel.Type	= 6		
			and  each.ReconciliationCodeBlock.FinanceDimension1 = LocalAccrualCodeBlock.FinanceDimension1)
			or  (StructureRowRel.Type	= 7		
			and  each.ReconciliationCodeBlock.FinanceDimension2 = LocalAccrualCodeBlock.FinanceDimension2)
			or  (StructureRowRel.Type	= 8		
			and  each.ReconciliationCodeBlock.FinanceDimension3 = LocalAccrualCodeBlock.FinanceDimension3)
			or  (StructureRowRel.Type	= 9		
			and  each.ReconciliationCodeBlock.FinanceDimension4 = LocalAccrualCodeBlock.FinanceDimension4)
			or  (StructureRowRel.Type	= 10		
			and  each.ReconciliationCodeBlock.FinanceDimension5 = LocalAccrualCodeBlock.FinanceDimension5)
			or  (StructureRowRel.Type	= 11		
			and  each.ReconciliationCodeBlock.FinanceDimension6 = LocalAccrualCodeBlock.FinanceDimension6)
			or  (StructureRowRel.Type	= 12		
			and  each.ReconciliationCodeBlock.FinanceDimension7 = LocalAccrualCodeBlock.FinanceDimension7)
			or  (StructureRowRel.Type	= 13		
			and  each.ReconciliationCodeBlock.FinanceDimension8 = LocalAccrualCodeBlock.FinanceDimension8)
			or  (StructureRowRel.Type	= 14		
			and  each.ReconciliationCodeBlock.FinanceDimension9 = LocalAccrualCodeBlock.FinanceDimension9)
			or  (StructureRowRel.Type	= 15		
			and  each.ReconciliationCodeBlock.FinanceDimension10 = LocalAccrualCodeBlock.FinanceDimension10))
				LocalMatchesLevel		= true
						
		CreateReconciliationPeriodDetail
			LocalPostingDate		= ReconciliationSubsystemBalance.ReconciliationDate date
			if (ExactCalendarPeriodRel exists
			and ReportedInFunctionalCurrency
			and ReconciliationAccountRel exists)
				LocalEndDate	 	= DerivedEntityCalendarPeriod
				for each ReconciliationAccountRel
					include CheckReconLevel
					if (ReconLevelMatches)
						LocalRAccountStructure		= each.ReconciliationAccountStructure
						LocalReconAccount			= each.ReconciliationAccount	
						if (PeriodEndReconciliationRel exists)
							if (PeriodEndReconciliationRel.IsAccountWithinConsolidatedGroup)
								if (ParentReconPeriodDetailRel exists)
									invoke Update ParentReconPeriodDetailRel
										if (SystemCode = "AP")
											invoked.PeriodAmount				= (ReportTotal * -1)
										else
											invoked.PeriodAmount				= ReportTotal
										if(!first ParentReconPeriodDetailRel.OriginatingTransaction entered)
											invoked.OriginatingTransaction 		= reference to this instance
										invoked.ReferenceNumber					= DerivedReferenceNumber
										invoked.Description						= DerivedReferenceNumber
										initialize invoked.ReportDocument
								else
									invoke CreatePeriodDetail ReconciliationPeriodDetail
										invoked.ReconciliationManagementGroup	= DerivedFEG
										invoked.ReconciliationAccountStructure	= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.ReconciliationAccountStructure
										invoked.ReconciliationAccount			= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.ReconciliationAccount
										invoked.ReferenceNumber					= DerivedReferenceNumber
										invoked.Description						= DerivedReferenceNumber
										invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
										invoked.TransactionDate					= ReconciliationSubsystemBalance.ReconciliationDate	
										invoked.StartPeriod						= LocalEndDate
										invoked.DetailPeriod					= LocalEndDate
										invoked.AccrualCode						= ReconciliationSubsystemBalance.AccrualCode
										invoked.Company							= Company
										invoked.OriginatingTransaction 			= reference to this instance
										if (SystemCode = "AP")
											invoked.PeriodAmount				= (ReportTotal * -1)
										else
											invoked.PeriodAmount				= ReportTotal
										initialize invoked.ReportDocument
							else		
								if 	(ReconciliationPeriodDetailRel exists)
									invoke Update ReconciliationPeriodDetailRel
										if (SystemCode = "AP")
											invoked.PeriodAmount				= (ReportTotal * -1)
										else
											invoked.PeriodAmount				= ReportTotal
										if(!first ReconciliationPeriodDetailRel.OriginatingTransaction entered)
											invoked.OriginatingTransaction 		= reference to this instance
										invoked.ReferenceNumber					= DerivedReferenceNumber
										invoked.Description						= DerivedReferenceNumber
										initialize invoked.ReportDocument
								else	
									invoke CreatePeriodDetail ReconciliationPeriodDetail
										invoked.ReconciliationManagementGroup	= DerivedFEG
										invoked.ReconciliationAccountStructure	= PeriodEndReconciliationRel.ReconciliationAccountStructure
										invoked.ReconciliationAccount			= PeriodEndReconciliationRel.PeriodEndReconciliation.ReconciliationAccount
										invoked.ReferenceNumber					= DerivedReferenceNumber
										invoked.Description						= DerivedReferenceNumber
										invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliationRel.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
										invoked.TransactionDate					= ReconciliationSubsystemBalance.ReconciliationDate	
										invoked.StartPeriod						= LocalEndDate
										invoked.DetailPeriod					= LocalEndDate
										invoked.AccrualCode						= ReconciliationSubsystemBalance.AccrualCode
										invoked.Company							= Company
										invoked.OriginatingTransaction 			= reference to this instance
										if (SystemCode = "AP")
											invoked.PeriodAmount				= (ReportTotal * -1)
										else
											invoked.PeriodAmount				= ReportTotal
										initialize invoked.ReportDocument

    Sets

		ByReconciliationDate
			duplicates
			Sort Order
                Company
				ReconciliationSubsystemBalance.ReconciliationDate
                SystemCode
                ReconciliationSubsystemBalance.AccrualCode
                ReconciliationSubsystemBalance.SecondarySortCriteria
                
	Actions
	
		Create is a Create Action
			restricted
			Exit Rules
				include CreateReconciliationPeriodDetail
				
		Update is an Update Action
			restricted
			Exit Rules
				include CreateReconciliationPeriodDetail

		UpdateReportDocument is an Update Action
			restricted
			Action Rules
				LocalReportDocument		= ReportDocument
				RecordStatus			= 1
			
			Exit Rules			
				LocalPostingDate		= ReconciliationSubsystemBalance.ReconciliationDate date
				if (ExactCalendarPeriodRel exists
				and ReportedInFunctionalCurrency
				and ReconciliationAccountRel exists)
					LocalEndDate	 	= DerivedEntityCalendarPeriod
					for each ReconciliationAccountRel
						include CheckReconLevel
						if (ReconLevelMatches)
							LocalRAccountStructure		= each.ReconciliationAccountStructure
							LocalReconAccount			= each.ReconciliationAccount	
							if (PeriodEndReconciliationRel exists)
								if (!PeriodEndReconciliationRel.ReportDocument entered
								and PeriodEndReconciliationRel.Status.Open)
									invoke Update Open PeriodEndReconciliationRel
										invoked.ReportDocument	= ReportDocument
								if (!PeriodEndReconciliationRel.ReportDocument entered
								and PeriodEndReconciliationRel.Status.InProcess)
									invoke Update InProcess PeriodEndReconciliationRel
										invoked.ReportDocument	= ReportDocument
								if (PeriodEndReconciliationRel.IsAccountWithinConsolidatedGroup)
									if (ParentReconPeriodDetailRel exists)
										invoke Update ParentReconPeriodDetailRel
											if (SystemCode = "AP")
												invoked.PeriodAmount				= (ReportTotal * -1)
											else
												invoked.PeriodAmount				= ReportTotal
											if(!first ParentReconPeriodDetailRel.OriginatingTransaction entered)
												invoked.OriginatingTransaction 		= reference to this instance
											invoked.ReferenceNumber					= DerivedReferenceNumber
											invoked.Description						= DerivedReferenceNumber
											invoked.ReportDocument					= ReportDocument
									else 
										invoke CreatePeriodDetail ReconciliationPeriodDetail
											invoked.ReconciliationManagementGroup	= DerivedFEG
											invoked.ReconciliationAccountStructure	= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.ReconciliationAccountStructure
											invoked.ReconciliationAccount			= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.ReconciliationAccount
											invoked.ReferenceNumber					= DerivedReferenceNumber
											invoked.Description						= DerivedReferenceNumber
											invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliationRel.ParentPeriodEndReconciliation.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
											invoked.TransactionDate					= ReconciliationSubsystemBalance.ReconciliationDate	
											invoked.StartPeriod						= LocalEndDate
											invoked.DetailPeriod					= LocalEndDate
											invoked.AccrualCode						= ReconciliationSubsystemBalance.AccrualCode
											invoked.Company							= Company
											invoked.OriginatingTransaction 			= reference to this instance
											if (SystemCode = "AP")
												invoked.PeriodAmount				= (ReportTotal * -1)
											else
												invoked.PeriodAmount				= ReportTotal
											invoked.ReportDocument					= ReportDocument
								else
									if 	(ReconciliationPeriodDetailRel exists)
										invoke Update ReconciliationPeriodDetailRel
											if (SystemCode = "AP")
												invoked.PeriodAmount				= (ReportTotal * -1)
											else
												invoked.PeriodAmount				= ReportTotal
											if(!first ReconciliationPeriodDetailRel.OriginatingTransaction entered)
												invoked.OriginatingTransaction 		= reference to this instance
											invoked.ReferenceNumber					= DerivedReferenceNumber
											invoked.Description						= DerivedReferenceNumber
											invoked.ReportDocument					= ReportDocument
									else
										invoke CreatePeriodDetail ReconciliationPeriodDetail	
											invoked.ReconciliationManagementGroup	= DerivedFEG
											invoked.ReconciliationAccountStructure	= PeriodEndReconciliationRel.ReconciliationAccountStructure
											invoked.ReconciliationAccount			= PeriodEndReconciliationRel.PeriodEndReconciliation.ReconciliationAccount
											invoked.ReferenceNumber					= DerivedReferenceNumber
											invoked.Description						= DerivedReferenceNumber
											invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliationRel.PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
											invoked.TransactionDate					= ReconciliationSubsystemBalance.ReconciliationDate	
											invoked.StartPeriod						= LocalEndDate
											invoked.DetailPeriod					= LocalEndDate
											invoked.AccrualCode						= ReconciliationSubsystemBalance.AccrualCode
											invoked.Company							= Company
											invoked.OriginatingTransaction 			= reference to this instance
											if (SystemCode = "AP")
												invoked.PeriodAmount				= (ReportTotal * -1)
											else
												invoked.PeriodAmount				= ReportTotal
											invoked.ReportDocument					= ReportDocument
		
		PopulateReconciliationAccountTypeField is a Set Action 
			default label is untranslatable
			restricted
			Instance Selection
				where (ReconciliationSubsystemBalance.ReconciliationAccountType not entered)
			Action Rules
				Instance Rules
					if(SystemCode = "AP")
						ReconciliationSubsystemBalance.ReconciliationAccountType = ReconciliationAccountType.PayablesAccrual
					else
					if(SystemCode = "AR")
						ReconciliationSubsystemBalance.ReconciliationAccountType = ReconciliationAccountType.Receivables
								
		Delete is a Delete Action
			restricted
			Entrance Rules
				if (SystemCode = "PO" and ReconciliationSubsystemBalance.ReconciliationAccountType.MatchedNotReceived)
					LocalPostingDate		= ReconciliationSubsystemBalance.ReconciliationDate date
					if (ExactCalendarPeriodRel exists
					and ReportedInFunctionalCurrency
					and ReconciliationAccountRel exists)
						LocalEndDate	 	= DerivedEntityCalendarPeriod
						for each ReconciliationAccountRel
							include CheckReconLevel
							if (ReconLevelMatches)
								LocalRAccountStructure		= each.ReconciliationAccountStructure
								LocalReconAccount			= each.ReconciliationAccount
								if (PeriodEndReconciliationRel exists)
									if (PeriodEndReconciliationRel.IsAccountWithinConsolidatedGroup)
										if (ParentReconPeriodDetailRel exists)
											invoke Delete ParentReconPeriodDetailRel
									else
										if(ReconciliationPeriodDetailRel exists)
											invoke Delete ReconciliationPeriodDetailRel
					
