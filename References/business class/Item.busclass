Item is a BusinessClass
	owned by ic
	prefix is ITE
	classic name is ITEMMAST
	representative text is "<Item>-<Description>"
	representative image is Picture.File
		display as full image
		missing image is random background
			foreground text is "<ItemDescriptionAbbreviation>"

	Ontology
		symbolic key is Item
			classic set name is ITESET1

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId

	Persistent Fields
		Reference1					is a Reference
		Reference2					is a Reference
		Description
		Description2				is a Description
			classic name is DESCRIPTION2
		StockUOM					is a UnitOfMeasure
		UOMConversion
			precision is 2
			default label is "UnitOfUseConversion"
		CatchWeightCode				is AlphaUpper size 1
			classic name is CTW-CODE
			States
				NotCatchWeight				value is "N"
				AllTransactionsRequireBoth	value is "A"
				IssueRequiresBoth			value is "I"
				ReceiptRequiresBoth			value is "R"
		SecondaryUOM				is a UnitOfMeasure
			classic name is SEC-UOM
		SecondaryUOMMultiplier		is an UOMMultiplier
			classic name is SEC-UOM-MULT
		SecondaryUOMConversion		is an UOMConversion
			classic name is SEC-UOM-CONV
		CatchWeightVariancePercent
			classic name is CTW-VAR-PCT
		GenericName
			classic name is GENERIC
		FreightClass
		MajorPurchasingClass
			classic name is PURCH-MAJCL
		MinorPurchasingClass
			classic name is PURCH-MINCL
			context of MajorPurchasingClass
		MajorInventoryClass
			classic name is INVEN-MAJCL
		MinorInventoryClass
			classic name is INVEN-MINCL
			context of MajorInventoryClass
		MajorSalesClass
			classic name is SALES-MAJCL
		MinorSalesClass
			classic name is SALES-MINCL
			context of MajorSalesClass
		Manufacturer
			delete ignored
			classic name for Manufacturer.ManufacturerCode is MANUF-CODE
			classic name for Manufacturer.ManufacturerDivision is MANUF-DIVISION
		ManufacturerNumber
			classic name is MANUF-NBR
		ManufacturerNumberStripped	is a ManufacturerNumber
		HazardCode
		PurchaseTaxable
			classic name is PURCH-TAX-FL
		PurchaseTaxCode				is a TaxCode
			classic name is PURCH-TAX-CD
		ProductTaxCategory
			classic name is PROD-TAX-CAT
		HarmonizeCode
			classic name is HARMONIZE-CD
		StockWeight
			classic name is WEIGHT
		StockVolume
			classic name is CUBIC-FEET
		NumberOfDecimalsQuantity
			classic name is NBR-DEC-QTY
		NumberOfDecimalsCost
			classic name is NBR-DEC-COST
		NumberOfDecimalsPrice		is a NumberOfDecimalsCost
			classic name is NBR-DEC-PRICE
		LotTracked
			classic name is LOT-TRACK-FL
		SerialTracked
			classic name is SER-TRACK-FL
		UDITracked
			classic name is UDI-TRACK-FL
		CertificationRequired		is Boolean
			classic name is CERT-REQ-FL
		KitItem						is Boolean
			classic name is KIT-ITEM-FL
		BrokenCaseCharge			is Boolean
			classic name is BRKN-CS-CHRG
		ReplacementItem				is an Item
			classic name is REPLACE-ITEM
		UserField1					is AlphaUpper size 30
			classic name is USER-FIELD1
		UserField2
			classic name is USER-FIELD2
		UserField3					is a UserField2
			classic name is USER-FIELD3
		UserField4					is a UserField2
			classic name is USER-FIELD4
		UserField5					is a UserField2
			classic name is USER-FIELD5
		UserFieldN1					is an InternationalCost
			classic name is USER-FIELD-N1
		UserFieldN2					is an InternationalCost
			classic name is USER-FIELD-N2
		UserFieldN3					is an InternationalCost
			classic name is USER-FIELD-N3
		InventorySequence
			classic name is SEQ
			disable Auditing
		AddedDate					is Date
		MSDSRequired				is Boolean
			classic name is MSDS-FLAG
		Active						is Boolean
			classic name is ACTIVE-STATUS
		NotAvailableForUse			is Boolean
		UsageIdentifier				is an ItemUsageIdentifier
			classic name is USE-IDENTIFIER
		Consignment					is Boolean
			classic name is CONSIGNMENT-FL
		UPCExists					is Boolean
		HIBCCItemUPNExists			is Boolean
			classic name is UPN1-EXISTS
		UCCEANItemUPNExists			is Boolean
			classic name is UPN2-EXISTS
		SKUExists					is Boolean
		NationalDrugCodeExists		is Boolean
			classic name is NDC-EXISTS
		InspectionRequired			is Boolean
			classic name is INSP-REQ-FL
		ICNCode
		UNSPSCCode
			classic name for UNSPSCCode.UNSPSCSegment is ICSEGMENT
			classic name for UNSPSCCode.UNSPSCFamily is ICFAMILY
			classic name for UNSPSCCode.UNSPSCClass is ICCLASS
			classic name for UNSPSCCode.UNSPSCCommodity is ICCOMMODITY


		CapitalTechnical
			classic name is CAP-TECH-FLAG
		CommodityCode				is a CommCodes
		AllowCustomerOrderReturns	is AlphaUpper 1
			classic name is OE-ALLOW-RTN
			States
				Yes		value is "Y"
				No		value is "N"
				Limit	value is "L"
		CustomerOrderReturnDate		is Date
			classic name is OE-RTN-DATE
		CreatedBy					is an Operator 
			holds pii
		LastUpdateDate				is TimeStamp
			classic name is LAST-UPDT-DATE
		LastUpdateBy				is an Operator 
			holds pii
		Description3
			classic name is DESCRIPTION3
		EffectiveDate				is Date
			classic name is EFFECT-DT
		ExpirationDate				is Date
			classic name is EXPIRE-DT
		IssueAccount				is a FinanceCodeBlockAccountOnly
			classic name for IssueAccount.GeneralLedgerChartAccount is ISS-ACCOUNT
		Picture						is an ImageAttachment
		TextSearch					is Text
			text searchable
			default label is "Keyword"
			disable Auditing
			scannable
		CopiedFromItem				is an Item
		ChargeNumber
		Latex						is Numeric 1
			States
				Unspecified					value is 0
				PackageIndicatesLatex		value is 1
				PackageDoesNotIndicateLatex	value is 2
				NotApplicable				value is 3
		HasExpirationDate			is Boolean
		PatientChargeable			is Boolean
		ClinicalSystemUse			is Boolean
		HCPCSCode
		FromWorksheetResult			is an ItemInformationWorksheetResult
		ConsignCode
		HSNSACCode
		CriticalItem				is Boolean
		PersonalProtectiveEquipment	is Boolean
		Discontinued				is Boolean
		LocalCode					is Alpha 30
			classic name is LOCAL-CODE
		MajorPPEClass
		MinorPPEClass
			context of MajorPPEClass
		GMDNPTCode

		Recipe							is Boolean
		Ingredient						is Boolean
		NumberOfDecimalsRecipe	is Numeric 1
			default label is "ForRecipeQuantity"
	        States
	            2Decimals value is 0
	            3Decimals value is 1
	            4Decimals value is 2
		Sterile                     is Boolean 
		SingleUse                   is Boolean 
		Reusable                    is Boolean
		Reprocessed                 is Boolean 
		Implantable                 is Boolean 
		ContainsHumanTissue         is Boolean 
		Pharmaceutical              is Boolean 
		Dressing                    is Boolean 
		Bioabsorbable               is Boolean  
		Narcotic                    is Boolean 
		Instrument                  is Boolean 
		Drugs                       is Boolean 
		Analytics                   is Boolean
		ImageURL					is URL
			default label is "ImageU\R\L" 


		SpecialHandlingCode
		SpecialHandlingInstructions			is a Description4
		HandlingTimeInMinutes
		RequisitionRecallNotice             is Numeric size 2
			States
				No                          value is 0
				Warning                     value is 1
				HardError                   value is 2
		InventoryIssueRecallNotice          is Numeric size 2
			States
				No                          value is 0
				Warning                     value is 1
				HardError                   value is 2
	Transient Fields
		NewItemNumber		is Numeric 18
		LocalValidTrans		is AlphaUpper 1
		LocalValidSell		is AlphaUpper 1
		LocalValidSellPrice	is AlphaUpper 1
		LocalValidBuy		is AlphaUpper 1
			default label is untranslatable
		LocalPackingWeight	is Decimal 9.3
		LocalPackingVolume	is Decimal 9.3

		RequesterActor		is an Actor
	 	RequestedBy			is Alpha 100
		RequesterPhone		is a Telephone 
			holds pii
	 	RequesterEmail		is an EmailAddress 
	 		holds pii
		RequestPriority		is Numeric 1
			States
				High	value is 1
				Medium	value is 2
				Low		value is 3
		NeededBy			is Date
		Notes				is Text

		PurchasingClass
		InventoryClass
		SalesClass
		PPEClass
		FromExternal		is Boolean
		TransientAttachment	is a DocumentAttachment
			default label is "Attachment"

	Context Fields
		SupplyManagementReportContext	is a SupplyManagementReport
		ContextManufacturer				is a Manufacturer
		ContextManufacturerNumber		is a ManufacturerNumber
		AuditDateRange					is a DateRange
		ContextInventoryLocation        is a InventoryLocation
        ContextInventoryCompany			is a InventoryCompany
        FSMInboundBODTracker
		ContextContract                 is a Contract 

	Local Fields
		LocalCompany				is like Company



		LocalYear					is Year
		LocalMonth					is Numeric 2
		LocalDay					is Numeric 2
		LocalPeriod					is Numeric 2
		LocalDateRange				is a DateRange
		LocalLocation				is like InventoryLocation 
		LocalReqLocation			is like RequestingLocation 
		LocalActionCode				is an ActionCode
		LocalBODCurrentTimeStamp	is a BODCurrentTimeStamp
		LocalFinanceEnterpriseGroup	is like FinanceEnterpriseGroup
		LocalBaseCost				is an InternationalAmount
		MaxImageSize
		LocalNewItem				is an Item
		LocalCopyItem				is an Item
		LocalAccountingEntity		is like AccountingEntity
		ProcurementCostDefault
		Execute						is Boolean
		CostDefaultingDone			is Boolean
		LocalNativeLPLBODTrigger	is Boolean				
		LocalBODCrossReferenceAE	is Alpha size up to 200	
		LocalBODTrigger				is Boolean
		LocalTriggerFrom			is Alpha 10
		LocalGeneralLedgerCompany	is Numeric 4
		LocalAccountingentityCompany is Alpha 40
		LocalCrossAccountingEntity 	is Alpha 40
		ItemMasterCleanDocIDXMLBOD	is XMLDocument
		ItemLocationCleanDocIDXMLBOD is XMLDocument
		LocalBODFormattedID			is Alpha 100
		NewBODTracker  				is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
	    LocalConfigurationParameter	is Alpha size up to 200
	    LocalSourceValue			is Alpha 30
	    LocalAEAlreadyExecuted		is Boolean
	    LocalCrossAEValue			is Alpha 60
		LocalUOM                    is like UnitOfMeasure
		LocalGTIN                   is like ItemGTIN
		LocalManufacturer           is like Manufacturer
		LocalManufacturerNumber     is like ManufacturerNumber 
		LocalNotInUseAndHasContractLines is Boolean
		LocalFromDeleted            is Boolean 

	Rule Blocks
		BuildTextIndexes
			build text search field TextSearch
				Fields
					Reference1
					Reference2
					Description
					Description2
					Description3
					GenericName
					FreightClass
					MajorPurchasingClass
					MinorPurchasingClass
					MajorInventoryClass
					MinorInventoryClass
					MajorSalesClass
					MinorSalesClass
					MajorPPEClass
					MinorPPEClass
					DerivedManufacturerNumberTextSearch
					DerivedItemSearch
					VendorItemRel.VendorItem
					DerivedVendorItemDescriptionTextSearch
					ActiveItemGTINsRel.ItemGTIN 
					HIBCCItemUPNsForDefaultBuyUOMRel.HIBCCItemUPN  
					UNSPSCCode  

				if (KeywordShadowRel exists)
					invoke Update KeywordShadowRel
			  			invoked.ItemGroup 					= ItemGroup
						invoked.Item                		= Item
						invoked.Description					= Description
						invoked.Description2				= Description2
						invoked.Description3				= Description3
						invoked.ManufacturerCodeTextSearch = DerivedManufacturerCodeTextSearch
						invoked.ManufacturerNumberTextSearch = DerivedManufacturerNumberTextSearch
						invoked.TextSearch					= TextSearch
						invoked.ItemHasContract				= HasContract
						invoked.HasPreferredContract		= HasPreferredContract
						invoked.ItemGTIN					= GTINForStockUOM
				else
					invoke Create KeywordShadow
				  		invoked.ItemGroup 					= ItemGroup
						invoked.Item                		= Item
						invoked.Description					= Description
						invoked.Description2				= Description2
						invoked.Description3				= Description3
						invoked.ManufacturerCodeTextSearch = DerivedManufacturerCodeTextSearch
						invoked.ManufacturerNumberTextSearch = DerivedManufacturerNumberTextSearch
		  			  	invoked.TextSearch				    = TextSearch
						invoked.ItemHasContract				= HasContract
						invoked.HasPreferredContract		= HasPreferredContract
						invoked.ItemGTIN					= GTINForStockUOM

		CostDefaulting   

			ProcurementCostDefault.InItem 						= Item
			ProcurementCostDefault.InItemType 					= ItemType.NonStock

			ProcurementCostDefault.InManufacturerCode 			= Manufacturer.ManufacturerCode
			ProcurementCostDefault.InManufacturerDivision 		= Manufacturer.ManufacturerDivision
			ProcurementCostDefault.InManufacturerNumber 		= ManufacturerNumber
			ProcurementCostDefault.InQuantityUOM				= DefaultBuyUOM

			ProcurementCostDefault.InDate 						= current corporate date
			ProcurementCostDefault.InSystem						= "RQ"

			ProcurementCostDefault.InProcurementGroup 			= ItemGroup
			ProcurementCostDefault.InDescription				= Description
			Execute	= ProcurementCostDefault.DefaultUnitCost

		AddCreateRequestItem
			invoked.ItemGroup					= ItemGroup
			invoked.Item						= Item
			invoked.Picture						= Picture
			invoked.Reference1					= Reference1
			invoked.Reference2					= Reference2
			invoked.Description					= Description
			invoked.Description2				= Description2
			invoked.Description3				= Description3
			invoked.StockUOM					= StockUOM
			invoked.CatchWeightCode				= CatchWeightCode
			invoked.SecondaryUOM				= SecondaryUOM
			invoked.SecondaryUOMMultiplier		= SecondaryUOMMultiplier
			invoked.SecondaryUOMConversion		= SecondaryUOMConversion
			invoked.CatchWeightVariancePercent	= CatchWeightVariancePercent
			invoked.GenericName					= GenericName
			invoked.FreightClass				= FreightClass
			invoked.MajorPurchasingClass		= PurchasingClass.MajorPurchasingClass
			invoked.MinorPurchasingClass		= PurchasingClass.MinorPurchasingClass
			invoked.MajorInventoryClass			= InventoryClass.MajorInventoryClass
			invoked.MinorInventoryClass			= InventoryClass.MinorInventoryClass
			invoked.MajorSalesClass				= SalesClass.MajorSalesClass
			invoked.MinorSalesClass				= SalesClass.MinorSalesClass
			invoked.MajorPPEClass				= PPEClass.MajorPPEClass
			invoked.MinorPPEClass				= PPEClass.MinorPPEClass
			invoked.Manufacturer				= Manufacturer
			invoked.ManufacturerNumber			= ManufacturerNumber
			invoked.HazardCode					= HazardCode
			invoked.PurchaseTaxable				= PurchaseTaxable
			invoked.PurchaseTaxCode				= PurchaseTaxCode
			invoked.ProductTaxCategory			= ProductTaxCategory
			invoked.HarmonizeCode				= HarmonizeCode
			invoked.StockWeight					= StockWeight
			invoked.StockVolume					= StockVolume
			invoked.NumberOfDecimalsQuantity	= NumberOfDecimalsQuantity
			invoked.NumberOfDecimalsCost		= NumberOfDecimalsCost
			invoked.NumberOfDecimalsPrice		= NumberOfDecimalsPrice
			invoked.LotTracked					= LotTracked
			invoked.SerialTracked				= SerialTracked
			invoked.CertificationRequired		= CertificationRequired
			invoked.KitItem						= KitItem
			invoked.BrokenCaseCharge			= BrokenCaseCharge
			invoked.ReplacementItem				= ReplacementItem
			invoked.MSDSRequired				= MSDSRequired
			invoked.UsageIdentifier				= UsageIdentifier
			invoked.Consignment					= Consignment
			invoked.ICNCode						= ICNCode
			invoked.UNSPSCCode					= UNSPSCCode
			invoked.CapitalTechnical			= CapitalTechnical
			invoked.CommodityCode				= CommodityCode
			invoked.AllowCustomerOrderReturns	= AllowCustomerOrderReturns
			invoked.CustomerOrderReturnDate		= CustomerOrderReturnDate
			invoked.EffectiveDate				= EffectiveDate
			invoked.ExpirationDate				= ExpirationDate
			invoked.IssueAccount				= IssueAccount
			invoked.Active						= true
			invoked.ChargeNumber				= ChargeNumber
			invoked.Latex						= Latex
			invoked.HasExpirationDate			= HasExpirationDate
			invoked.PatientChargeable			= PatientChargeable
			invoked.ClinicalSystemUse			= ClinicalSystemUse
			invoked.HCPCSCode					= HCPCSCode
			invoked.ConsignCode					= ConsignCode
			invoked.HSNSACCode					= HSNSACCode
			invoked.CriticalItem				= CriticalItem
			invoked.PersonalProtectiveEquipment	= PersonalProtectiveEquipment

		TriggerItemServiceRules
			trigger "ItemService" PA service
				resume on error
				title is "EG:<LocalFinanceEnterpriseGroup>ITG:<ItemGroup>ITE:<Item>"

				Criteria
					LocalFinanceEnterpriseGroup
					LocalCompany

				Variables
					LocalActionCode
						variable name is ActionCode
					include persistent fields from Item
					include persistent fields from AllItemLocationsRel
					LocalBaseCost
						variable name is BaseCost
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					bod id.VariationID
						variable name is BODVariationId
					LocalAccountingEntity
						variable name is AccountingEntity
					LocalCompany
						variable name is Company
					LocalTriggerFrom
						variable name is TriggerFrom
					include persistent fields from Manufacturer

		DeleteRules
			LocalFinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
			LocalAccountingEntity		= ItemGroup.InventoryCompaniesRel.Company.GeneralLedgerCompany.AccountingEntity
			LocalCompany = ItemGroup.InventoryCompaniesRel.Company
			if (ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
				LocalActionCode = LocalActionCode.Delete
				increment bod id.VariationID
				LocalBaseCost = ItemContractLinesRel.BaseCost
				LocalTriggerFrom ="Item"
				include TriggerItemServiceRules



		ConsolidatedItemMasterRules

			if (LocalFromDeleted
			and ConsolidatedItemMasterByManufacturerRel exists)
				invoke Update ConsolidatedItemMasterByManufacturerRel 
					invoked.TransientDeletedFromItem = true 
			else
			if  (UpdateConsolidatedItemMaster changed
			and	 ConsolidatedItemMasterRel exists)
				if (LocalNotInUseAndHasContractLines)
					invoke UpdateForItemNotInUseWithContract ConsolidatedItemMasterRel 
				else 
					invoke Update ConsolidatedItemMasterRel 

			else 
			if (CanUseForConsolidated
			and ConsolidatedItemMasterByManufacturerRel !exists)
				invoke Create ConsolidatedItemMaster 
					invoked.ContractGroup			= ItemGroup 
					invoked.InternalItem    		= Item
					invoked.Manufacturer     		= Manufacturer 
					invoked.ManufacturerNumber  	= ManufacturerNumber 
					invoked.TransientCreateLocation	= true	


					
	Derived Fields
		DerivedNumberOfDecimalsRecipe is a DerivedField
			type is Numeric size 1
			restricted
			if (NumberOfDecimalsRecipe.2Decimals)
				return 2
			else
			if (NumberOfDecimalsRecipe.3Decimals)
				return 3
			else
				return 4
		
		RepresentativeText is a StringField
			type is Text
			default label is "Item"
			Item " - " Description

		TotalLocationsCount is a DerivedField
			type is Numeric size 10
			return (instance count of AllActiveItemLocationsRel)

		DerivedItemStatusDisplay is a DerivedField
			type is Alpha size 12
			restricted
			if (Active)
				if (Discontinued)
					return "Discontinued"
				else
					return "Active"
			else
				return "Inactive"

		DerivedItemStatus is a DerivedField
			type is AlphaUpper 1
			restricted
			if (DerivedItemStatusDisplay = "Active")
				return "A"
			else
			if (DerivedItemStatusDisplay = "Discontinued")
				return "D"
			else
				return "I"


		CardViewItemWithDescription 			is a LabelField
			"<Item>_-_<Description>"

		AddedDateCardViewDisplay				is a LabelField
			"<AddedDate>"

		LotTrackedCardViewDisplay				is a DerivedField
			type is MessageField
			if (LotTracked.NotLotTracked)
				return "Not Required"
			else
			if (LotTracked.LotRequiredAtReceipt)
				return "At Receipt"
			else
			if (LotTracked.LotRequiredAtIssue)
				return "At Issue"

		SerialTrackedCardViewDisplay			is a DerivedField
			type is MessageField
			if (SerialTracked.NotSerialTracked)
				return "Not Required"
			else
			if (SerialTracked.SerialRequiredAtReceipt)
				return "At Receipt"
			else
			if (SerialTracked.SerialRequiredAtIssue)
				return "At Issue"

		ManufacturerDescription					is a DerivedField
			type is like Description
			return Manufacturer.Description

		MobileManufactureInformation			is a LabelField
			"<Manufacturer>_-_<ManufacturerNumber>"


		DerivedItemDescription is a DerivedField
			type is like Description
			default label is "Description"
			return Description

		ItemDescriptionAbbreviation is a DerivedField
			type is AlphaUpper 3
			default label is "Item"
			return Description

		ItemAndDescriptionDisplay				is a LabelField
			"<Item>_-_<Description>"

		ItemAlphaHCPCSSequence	is a DerivedField
			type is AlphaUpper 6
			if (HCPCSCode.Sequence < 10)
				return "00000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 100)
				return "0000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 1000)
				return "000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 10000)
				return "00" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 100000)
				return "0" + HCPCSCode.Sequence
			else
				return HCPCSCode.Sequence

		ItemGroupCardViewDisplay				is a LabelField
			"ItemGroup:<ItemGroup>,_<ItemGroup.Description>"
		ItemCardViewDisplay						is a LabelField
			"Item:<Item>,_<Description>"
		ItemCardViewDisplay2					is a LabelField
			"<Item>_-_<Description>"

		Description2CardView					is a LabelField
			"<Description2>"
		Description2CardViewDisplay				is a DerivedField
			type is MessageField
			if (Description2 entered)
				return Description2CardView
			else
				return blank

		Reference1CardView						is a LabelField
			"Reference1:<Reference1>"
		Reference1CardViewDisplay				is a DerivedField
			type is MessageField
			if (Reference1Entered)
				return Reference1CardView
			else
				return blank

		Reference2CardView						is a LabelField
			"Reference2:<Reference2>"
		Reference2CardViewDisplay				is a DerivedField
			type is MessageField
			if (Reference2 entered)
				return Reference2CardView
			else
				return blank

		StockUOMCardViewDisplay					is a LabelField
			"StockUOM:<StockUOM>"

		ActiveCardView is a LabelField
			"Active"
		InactiveCardView is a LabelField
			"Inactive"
		NotAvailableView is a LabelField
			"Inactive_-NotAvailableForUse"
		DiscontinuedCardView is a LabelField
			"Discontinued"
		ActiveCardViewDisplay is a DerivedField
			type is MessageField
			default label is "Status"
			if (Discontinued)
				return DiscontinuedCardView
			else
			if (Active)
				return ActiveCardView
			else
				return InactiveCardView

		NotAvailableDisplay is a DerivedField
			type is MessageField
			default label is "Status"
			if (Discontinued)
				return DiscontinuedCardView
			else
			if (Active)
				return ActiveCardView
			else
			if (NotAvailableForUse)
				return NotAvailableView
			else
				return InactiveCardView

		IsARecipeMessage is a MessageField
			"Recipe"

		IngredientItemMessage is a LabelField
			"Ingredient"

		OnContractDisplay is a DerivedField
			type is MessageField
			if (HasContract)
				return OnContractMessage

		OnContractMessage is a LabelField
			restricted
			"OnContract"

		RecallNoticesDisplay is a DerivedField
			type is MessageField
			if (RecallNoticesExist)
				return RecallNoticesMessage

		RecallNoticesMessage is a LabelField
			restricted
			"RecallNotices"

		DuplicateManufacturerDisplay is a DerivedField
			type is MessageField
			if (DuplicateManufacturerExists)
				return DuplicateManufacturerMessage
					
		DuplicateManufacturerMessage is a LabelField
			restricted
			"OtherItemsHaveSameManufacturerInfo"

		TrackedInAlternateUOMDisplay is a DerivedField
			type is MessageField
			if (IsTrackedInAlternateUOM)
				return TrackedInAlternateUOMMessage

		TrackedInAlternateUOMMessage is a LabelField
			restricted
			"Tracked_inAlternate_UOM"

		ManufacturerCardView					is a LabelField
			"Manufacturer:<Manufacturer.ManufacturerCode>_<Manufacturer.ManufacturerDivision>"
		ManufacturerCardViewDisplay				is a DerivedField
			type is MessageField
			if (Manufacturer entered)
				return ManufacturerCardView
			else
				return blank

		ManufacturerNumberCardView				is a LabelField
			"ManufacturerNumber:<ManufacturerNumber>"
		ManufacturerNumberCardViewDisplay		is a DerivedField
			type is MessageField
			if (ManufacturerNumber entered)
				return ManufacturerNumberCardView
			else
				return blank

		GenericNameCardView						is a LabelField
			"GenericName:<GenericName>"
		GenericNameCardViewDisplay				is a DerivedField
			type is MessageField
			if (GenericName entered)
				return GenericNameCardView
			else
				return blank

		DefaultUnitCost							is a DerivedField	
			type is Alpha 30
			return "FieldDeprecated"

		LatexClinicalIndicator is a DerivedField
			type is AlphaUpper 1
			if (Latex.PackageIndicatesLatex)
				return "Y"
			else
			if (Latex.PackageDoesNotIndicateLatex)
				return "N"
			else
				return " "

		DefaultUnitCostForLowestDivisibleCost is a DerivedField 
			type is Alpha 30
			return "FieldDeprecated"

		UOMUnitConversion is a DerivedField
			type is like UOMConversion
			if (UOMConversion = 0)
				return 1
			else
				return UOMConversion

		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforItemMaster"

		ContextMessageText is a MessageField
			restricted
			"Item<Item><Description>FromItemGroup<ItemGroup>"

		ItemGroupAndItem		is a StringField
			type is AlphaUpper 39
			ItemGroup
			", "
			Item

		CreateMessage			is a LabelField
			restricted
			"Create_anItem"

		DerivedStrippedManufacturerNumber is a DerivedField
			type is like ManufacturerNumber
			return com.lawson.apps.procurement.base.StringUtils.stripNonAlphaNumeric(ManufacturerNumber)

		DerivedStrippedItem is a DerivedField
			type is like Item
			return com.lawson.apps.procurement.base.StringUtils.stripNonAlphaNumeric(Item)

		CombinedDescription		is a DerivedField
			type is Alpha up to 122
			restricted
			return Description + " " + Description2

		ItemMessage				is a LabelField
			restricted
			"Item<Item>_-_<CombinedDescription>"

		DerivedFormTitle		is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return ItemCardViewDisplay2
			else
				return CreateMessage

		AllocationUOM           is a DerivedField
			type is like UnitOfMeasure
			classic name is ALLOC-UOM
			restricted
			if (IsCatchWeightItem)
				return SecondaryUOM
			else
				return StockUOM

		Hazardous               is a ConditionalField
			type is AlphaUpper size 37
			classic name is HAZARD-FL
			restricted
			if (HasHazardCode)
				"X"
			else
				blank

		ItemCodeUsed            is a ConditionalField
			type is Numeric size 1
			restricted
			if (HasItem)
				1
			else
				blank

		DerivedHasContractAndLineLocations is a DerivedField
			type is Numeric size 1
			restricted 
			if (ContractLineItemRel exists)
				for each ContractLineItemRel 
					if (each.CanUseForConsolidated)
						return 1
						end for each 
		
		DefaultTransactionUOM			is a DerivedField
			type is like UnitOfMeasure
			restricted
			return first DefaultTransactionUOMRel.UnitOfMeasure

		DefaultInventoryTransactionUOM	is a DerivedField
			type is like UnitOfMeasure
			return first DefaultTransactionUOMRel.UnitOfMeasure

		DefaultInventoryTransactionUOMMultiplier	is a DerivedField
			type is like UOMConversion
			return first DefaultTransactionUOMRel.UOMConversion

		DefaultSellingUOM				is a DerivedField
			type is like UnitOfMeasure
			restricted
			return  DefaultSellingUOMRel.UnitOfMeasure

		DefaultSellPriceUOM				is a DerivedField
			type is like UnitOfMeasure
			restricted
			return  DefaultSellPriceUOMRel.UnitOfMeasure

		DefaultBuyUOM					is a DerivedField
			type is like UnitOfMeasure
			return first DefaultBuyUOMRel.UnitOfMeasure

		DefaultBuyUOMMultiplier         is a DerivedField
			type is like UOMConversion
			return first DefaultBuyUOMRel.UOMConversion

		DefaultRecipeUOM				is a DerivedField
			type is like UnitOfMeasure
			restricted
			return first DefaultRecipeUOMRel.RecipeUnitOfMeasure

		DerivedDate is a StringField
			type is Date
			restricted
			LocalYear
			LocalMonth
			LocalDay

		DerivedDateWith0Month0Day is a StringField
			type is Date
			restricted
			LocalYear
			0
			LocalMonth
			0
			LocalDay

		DerivedDateWith0Day is a StringField
			type is Date
			restricted
			LocalYear
			LocalMonth
			0
			LocalDay

		DerivedDateWith0Month is a StringField
			type is Date
			restricted
			LocalYear
			0
			LocalMonth
			LocalDay

		DerivedForecastDate is a DerivedField
			type is Date
			restricted
			if (LocalDay	< 10
			and LocalMonth	< 10)
				return DerivedDateWith0Month0Day
			else
			if (LocalMonth 	< 10)
				return DerivedDateWith0Month
			else
			if (LocalDay 	< 10)
				return DerivedDateWith0Day
			else
				return DerivedDate

		DerivedManufacturerCodeTextSearch is a DerivedField
			type is Alpha size 350
			restricted
			DerivedManufacturerCodeTextSearch = ""
			if (Manufacturer.ManufacturerCode entered)
				if(Manufacturer.ManufacturerDivision entered)
					DerivedManufacturerCodeTextSearch += Manufacturer 
					DerivedManufacturerCodeTextSearch += " "
				else
					DerivedManufacturerCodeTextSearch += Manufacturer.ManufacturerCode
					DerivedManufacturerCodeTextSearch += " "
			for each VendorItemRel
				if (each.Manufacturer.ManufacturerCode entered
				and each.Manufacturer.ManufacturerCode != Manufacturer.ManufacturerCode)
					if (each.Manufacturer.ManufacturerDivision entered
					and each.Manufacturer.ManufacturerDivision != Manufacturer.ManufacturerDivision)
						DerivedManufacturerCodeTextSearch += each.Manufacturer
						DerivedManufacturerCodeTextSearch += " "
					else
						DerivedManufacturerCodeTextSearch += each.Manufacturer.ManufacturerCode
						DerivedManufacturerCodeTextSearch += " "
			for each ActiveItemGTINsRel 
				if (each.Manufacturer.ManufacturerCode entered
				and each.Manufacturer.ManufacturerCode != Manufacturer.ManufacturerCode)
					if (each.Manufacturer.ManufacturerDivision entered
					and each.Manufacturer.ManufacturerDivision != Manufacturer.ManufacturerDivision)
						DerivedManufacturerCodeTextSearch += each.Manufacturer
						DerivedManufacturerCodeTextSearch += " "
					else
						DerivedManufacturerCodeTextSearch += each.Manufacturer.ManufacturerCode
						DerivedManufacturerCodeTextSearch += " "
						
		DerivedVendorItemDescriptionTextSearch is a DerivedField 
			type is Alpha size 350 
			restricted 
			DerivedVendorItemDescriptionTextSearch = ""
			for each ActiveVendorItemRel
				if (each.VendorItemDescription != Description)
					DerivedVendorItemDescriptionTextSearch += each.VendorItemDescription 
					DerivedVendorItemDescriptionTextSearch += ""
				if (each.VendorItemStripped != each.VendorItem)
					DerivedVendorItemDescriptionTextSearch += each.VendorItemStripped 
					DerivedVendorItemDescriptionTextSearch += ""					
		
		DerivedManufacturerNumberTextSearch is a DerivedField
			type is Alpha size 350
			restricted
			DerivedManufacturerNumberTextSearch = ""
			if (ManufacturerNumber entered)
				DerivedManufacturerNumberTextSearch += ManufacturerNumber
				DerivedManufacturerNumberTextSearch += " "
			if (ManufacturerNumberStripped entered
			and ManufacturerNumberStripped != ManufacturerNumber)
				DerivedManufacturerNumberTextSearch += ManufacturerNumberStripped
				DerivedManufacturerNumberTextSearch += " "
			for each ActiveVendorItemRel
				if (each.ManufacturerNumber entered
				and each.ManufacturerNumber != ManufacturerNumber)
					DerivedManufacturerNumberTextSearch += each.ManufacturerNumber
					DerivedManufacturerNumberTextSearch += " "
				if (each.ManufacturerNumberStripped entered
				and each.ManufacturerNumberStripped != each.ManufacturerNumber)
					DerivedManufacturerNumberTextSearch += each.ManufacturerNumberStripped
					DerivedManufacturerNumberTextSearch += " "
			for each AllActiveItemLocationsRel
				if (each.ManufacturerNumber entered
				and each.ManufacturerNumber != ManufacturerNumber)
					DerivedManufacturerNumberTextSearch += each.ManufacturerNumber
					DerivedManufacturerNumberTextSearch += " "
				if (each.ManufacturerNumberStripped entered
				and each.ManufacturerNumberStripped != each.ManufacturerNumber)
					DerivedManufacturerNumberTextSearch += each.ManufacturerNumberStripped
					DerivedManufacturerNumberTextSearch += " "

		DerivedItemSearch is a DerivedField 
			type is Alpha size 100
			restricted 
			DerivedItemSearch += Item
			DerivedItemSearch += ""
			if (DerivedStrippedItem != Item)
				DerivedItemSearch += DerivedStrippedItem 
				DerivedItemSearch += ""

		DerivedOffContractPercent is a ComputeField
			type is Percent 4.1
			(last ItemUsage100PercentRel.OffContractAmount / last ItemUsage100PercentRel.UsageAmount)

		MyOrderedQuantity is a DerivedField
			type is like Quantity
			return sum MyRequisitionLinesRel.Quantity



		SumPOLineQuantityByItem is a DerivedField
			type is Decimal size 13.2
			restricted
			return PoInvLineFactHeaderRel.SumPOLineQuantityByVendor

		SumDerivedExtendedAmountFromPoByItem is a DerivedField
			type is Decimal size 21.2
			restricted
			return sum PoInvLineFactHeaderRel.SumDerivedExtendedAmountFromPoByVendor

		SumMatchedQtyByItem is a DerivedField
			type is Decimal size 13.2
			restricted
			return sum PoInvLineFactHeaderRel.SumMatchedQtyByVendor

		SumDerivedExtendedInvoiceAmtByItem is a DerivedField
			type is Decimal size 21.2
			restricted
			return sum PoInvLineFactHeaderRel.SumDerivedExtendedInvoiceAmtByVendor

		GTINForStockUOM is a DerivedField
			type is like ItemGTIN
			default label is "GTIN"
			return first GTINForStockUOMRel.ItemGTIN
			
		ItemGTINForTransactionUOM is a DerivedField
			type is like ItemGTIN
			default label is "GTINForTransactionUOM"
			return first GTINForDefaultTransactionUOMRel.ItemGTIN

		LatexIndicator is a DerivedField
			type is Numeric 1
			return first GTINForStockUOMRel.LatexIndicator

		HIBCCItemUPNForBuyUOM is a DerivedField
			type is like HIBCCItemUPN
			return first HIBCCItemUPNsForDefaultBuyUOMRel.HIBCCItemUPN


		ItemLongName is a DerivedField
			type is Alpha size 75
			restricted
			return (Item + " " + Description + " " + Description2)

		MajorPurchasingClassHV is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorPurchasingClass = blank)
				return ItemGroup + "/None"
			else
				return ItemGroup + "/"  + MajorPurchasingClass

		MinorPurchasingClassHV is a DerivedField
			type is Alpha size 60
			restricted
			if (MinorPurchasingClass = blank)
				return MajorPurchasingClassHV + "/None"
			else
				return MajorPurchasingClassHV + "/" + MinorPurchasingClass

		MajorInventoryClassHV is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorInventoryClass = blank)
				return ItemGroup + "/None"
			else
				return ItemGroup + "/"  + MajorInventoryClass

		MinorInventoryClassHV is a DerivedField
			type is Alpha size 60
			restricted

			if (MinorInventoryClass = blank)
				return MajorInventoryClassHV + "/None"
			else
				return MajorInventoryClassHV + "/"  + MinorInventoryClass

		MajorPPEClassHV is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorPPEClass = blank)
				return ItemGroup + "/None"
			else
				return ItemGroup + "/"  + MajorPPEClass

		MinorPPEClassHV is a DerivedField
			type is Alpha size 60
			restricted
			if (MinorPPEClass = blank)
				return MajorPPEClassHV + "/None"
			else
				return MajorPPEClassHV + "/" + MinorPPEClass

		MajorInventoryClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorInventoryClass entered)
				return MajorInventoryClassRel.Description
			else
				return "No Major Inventory Class"

		MinorInventoryClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MinorInventoryClass entered)
				return MinorInventoryClassRel.Description
			else
				return "No Minor Inventory Class"

		MajorPurchasingClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorPurchasingClass entered)
				return MajorPurchasingClassRel.Description
			else
				return "No Major Purchasing Class"

		MinorPurchasingClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MinorPurchasingClass entered)
				return MinorPurchasingClassRel.Description
			else
				return "No Minor Purchasing Class"

		MajorPPEClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MajorPPEClass entered)
				return MajorPPEClass.Description
			else
				return "No Major PPE Class"

		MinorPPEClassDesc is a DerivedField
			type is Alpha size 60
			restricted
			if (MinorPPEClass entered)
				return MinorPPEClass.Description
			else
				return "No Minor PPE Class"


		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
						
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IntegratingApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedIntegrationApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IntegrationApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTriggerBODBasedOnCrossReference is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "TriggerBODBasedOnCrossReference"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		BODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha 4
			restricted
			return ItemGroup.BusinessGroup.FinanceEnterpriseGroup

		DerivedAccountingEntity is a DerivedField
			type is Alpha size 12
			restricted
			return ItemGroup.InventoryCompaniesRel.Company.GeneralLedgerCompany.AccountingEntity

		DerivedItemCompany is a DerivedField
			type is Alpha 4
			restricted
			return ItemGroup.InventoryCompaniesRel.Company

		DerivedBODDocumentID is a DerivedField
			type is Alpha size 45
			restricted
			if(DerivedCleanDocumentID = "Y")
				return Item
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + ItemGroup + DerivedDelimiter + Item

		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp

		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedItemUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedItemUpdateTimeStamp = update stamp.timestamp
			return DerivedItemUpdateTimeStamp

		DerivedItemFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedItemUpdateTimeStamp[1:4] + "-" + DerivedItemUpdateTimeStamp[5:6] + "-" + DerivedItemUpdateTimeStamp[7:8] + "T" + DerivedItemUpdateTimeStamp[9:10] + ":" + DerivedItemUpdateTimeStamp[11:12] + ":" + DerivedItemUpdateTimeStamp[13:14] + "Z"

		DerivedItemCreateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedItemCreateTimeStamp = create stamp.timestamp
			return DerivedItemCreateTimeStamp

		DerivedItemFormattedCreateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedItemCreateTimeStamp[1:4] + "-" + DerivedItemCreateTimeStamp[5:6] + "-" + DerivedItemCreateTimeStamp[7:8] + "T" + DerivedItemCreateTimeStamp[9:10] + ":" + DerivedItemCreateTimeStamp[11:12] + ":" + DerivedItemCreateTimeStamp[13:14] + "Z"

		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor

		DerivedItemUPC is a DerivedField
			type is AlphaUpper size 15
			restricted
			if(DerivedIntegratingApplication = "Local.ly" and ItemUPCRel exists)
				return ItemUPCRel.ItemUPC
			else
				return ""

		DerivedManufacturerCode is a DerivedField
			type is Alpha 4
			restricted
			return Manufacturer.ManufacturerCode

		DerivedManufacturerDivision is a DerivedField
			type is Alpha 4
			restricted
			return Manufacturer.ManufacturerDivision

		DerivedMCodeandMDivision is a DerivedField
			type is Alpha 15
			restricted
			if(DerivedManufacturerCode != "" or DerivedManufacturerDivision != "")
				return DerivedManufacturerCode + "^" + DerivedManufacturerDivision
			else
				return  ""

		DerivedUNSPSCSegment is a DerivedField
			type is Alpha 2
			restricted
			return UNSPSCCode.UNSPSCSegment

		DerivedUNSPSCFamily is a DerivedField
			type is Alpha 2
			restricted
			return UNSPSCCode.UNSPSCFamily

		DerivedUNSPSCClass is a DerivedField
			type is Alpha 2
			restricted
			return UNSPSCCode.UNSPSCClass

		DerivedUNSPSCCommodity is a DerivedField
			type is Alpha 2
			restricted
			return UNSPSCCode.UNSPSCCommodity
			
		DerivedCommodityCode is a DerivedField
			type is like CommCodes
			restricted
			if(CommodityCode!="")
				for each CommodityCode split on "-"
					DerivedCommodityCode += each
				return DerivedCommodityCode
			else
				return ""
		
		DerivedLocalCode is a DerivedField
			type is Alpha 35
			restricted
			return Item.LocalCode

		DerivedUNSPSCCode is a DerivedField
			type is Alpha 15
			restricted
			if(DerivedUNSPSCSegment != "" or DerivedUNSPSCFamily != "" or DerivedUNSPSCClass != "" or DerivedUNSPSCCommodity != "")
				return DerivedUNSPSCSegment + "^" + DerivedUNSPSCFamily + "^" + DerivedUNSPSCClass + "^" + DerivedUNSPSCCommodity
			else
				return ""

		DerivedIssueGLChartAccount is a DerivedField
			type is Alpha 26
			restricted
			return IssueAccount.GeneralLedgerChartAccount

		DerivedBODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Delete or LocalActionCode.Delete)
				return "Delete"
			else
			if (action type.Create or LocalActionCode.Create or (BODVariationID <= 1))
				return "Add"
			else
			if (action type.Update or LocalActionCode.Update)
				return "Replace"
			else
				return ""

		DerivedDefaultBODLocation is a DerivedField
			type is AlphaUpper size 20
			restricted
			return ""

		DerivedCrossAccountingEntity is a DerivedField
			type is AlphaUpper size 60
			restricted
			if(LocalAEAlreadyExecuted != true)
				LocalAEAlreadyExecuted = true
				if(FSMBODCrossReferenceDetailRel exists)
					LocalCrossAEValue = FSMBODCrossReferenceDetailRel.DestinationValue
				else
					LocalConfigurationParameter = "SyncItemMaster_Outbound_AccountingEntity"
					if (FSMBODConfigurationParameterRel exists)
						LocalCrossAEValue = FSMBODConfigurationParameterRel.Value
					if(LocalBODCrossReferenceAE not entered)
						LocalCrossAEValue = ItemGroup
				return LocalCrossAEValue
			else
				return LocalCrossAEValue

		DerivedBODFormattedId is a DerivedField
			type is Alpha 100
			restricted
			return  "infor-nid:" + DerivedTenantID + ":" +DerivedCrossAccountingEntity + ":" + DerivedDefaultBODLocation+":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker

		DerivedBODItemStatus is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Delete or LocalActionCode.Delete)
				return "Deleted"
			else
			if (action type.Create or action type.Update or LocalActionCode.Update or LocalActionCode.Create)
				return "Open"
			else
				return ""
		
		DerivedEffectiveDate is a DerivedField
			type is Alpha 15
			restricted
			if(EffectiveDate entered)
				DerivedEffectiveDate = EffectiveDate
				return DerivedEffectiveDate[1:4] + "-" + DerivedEffectiveDate[5:6] + "-" + DerivedEffectiveDate[7:8]
			else
				return ""
		DerivedExpirationDate is a DerivedField
			type is Alpha 15
			restricted
			if(ExpirationDate entered)
				DerivedExpirationDate = ExpirationDate
				return DerivedExpirationDate[1:4] + "-" + DerivedExpirationDate[5:6] + "-" + DerivedExpirationDate[7:8]
			else
				return ""

		DerivedLotTrackFlag is a DerivedField
			type is Alpha 10
			restricted
			if (LotTracked != "N")
				return "true"
			else
				return "false"

		DerivedSerialTrackFlag is a DerivedField
			type is Alpha 10
			restricted
			if(DerivedIntegrationApplication = "Local.ly")
				if (SerialTracked != "N")
					return "true"
				else
					return "false"
			else
				if (SerialTracked = "N")
					return "N"
				else
				if(SerialTracked ="R")
					return "R"
				else
				if(SerialTracked ="I")
					return "I"

		DerivedCatchWeightFlag is a DerivedField
			type is Alpha 10
			restricted
			if (CatchWeightCode != "N")
				return "true"
			else
				return "false"

		DerivedType is a DerivedField
			type is Alpha 20
			restricted
			return ""

		DerivedTrackingFlag is a DerivedField
			type is Alpha 20
			restricted
			return ""

		ItemUOMXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (BODStockUOMRel exist and !action type.Delete)
				for each BODStockUOMRel
					ItemUOMXMLBOD += template.IONSyncItemMaster_Item_ItemUOM_ST document for each
				return ItemUOMXMLBOD
			else
				return ""

		HIBCCItemUPNXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (HIBCCItemUPNsForDefaultBuyUOMRel exist)
				for each HIBCCItemUPNsForDefaultBuyUOMRel
					HIBCCItemUPNXMLBOD += template.IONSyncItemMaster_Item_HIBCCItemUPN_ST document for each
				return HIBCCItemUPNXMLBOD
			else
				return ""

		ItemMasterXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			ItemMasterXMLBOD = template.IONSyncItemMaster_Item_ST document for this instance

		ItemLocationXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (AllItemLocationsRel exist)
				for each AllItemLocationsRel
					ItemLocationXMLBOD += template.IONSyncItemMaster_Item_Line_ST document for each
				return ItemLocationXMLBOD
			else
				return ""

		VendorItemXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			if (VendorItemRel exist)
				for each VendorItemRel
					VendorItemXMLBOD += template.IONSyncItemMaster_Item_VendorItem_ST document for each
				return VendorItemXMLBOD
			else
				return ""

		DerivedTimeSensitive						is a DerivedField	
			type is Boolean
			return SpecialHandlingCode.TimeSensitive

				

	Field Groups
		TextSearchable
			Item
			Reference1
			Reference2
			Description
			Description2
			Description3
			GenericName
			FreightClass
			MajorPurchasingClass
			MinorPurchasingClass
			MajorInventoryClass
			MinorInventoryClass
			MajorSalesClass
			MinorSalesClass
			MajorPPEClass
			MinorPPEClass
			ManufacturerNumber
			UNSPSCCode

		DescriptionGroup
			Description
			Description2
			Description3

		ContractLineFields
			Active
			Description
			Description2
			Description3
			CommodityCode
			MinorPurchasingClass
			MajorPurchasingClass
			MajorInventoryClass
			MinorInventoryClass
			UNSPSCCode
			GenericName
			ChargeNumber                    
			Latex                                    
			HCPCSCode                       
			PersonalProtectiveEquipment     
			GMDNPTCode                      
			HSNSACCode 
			Sterile 
			SingleUse 
			Reusable 
			Reprocessed 
			Implantable 
			ContainsHumanTissue 
			Pharmaceutical                     			
			Dressing 
			Bioabsorbable
			Narcotic 
			Instrument 
			Drugs 
			Analytics 
			PatientChargeable 
			ClinicalSystemUse 
			UsageIdentifier 
			CriticalItem 
			MajorPPEClass
			MinorPPEClass 
			HazardCode 


		UpdateConsolidatedItemMaster 
			EffectiveDate   
			ExpirationDate  
			StockUOM
			Manufacturer
			ManufacturerNumber
			CommodityCode
			Description
			Description2
			Description3

			UNSPSCCode
			MajorPurchasingClass
			MinorPurchasingClass
			MajorInventoryClass
			MinorInventoryClass
			UOMConversion
			HCPCSCode
			Latex
			CriticalItem
			PersonalProtectiveEquipment
			HSNSACCode 
			GMDNPTCode
			MajorPPEClass
			MinorPPEClass
			PatientChargeable
			ClinicalSystemUse
			ChargeNumber 
			HazardCode 
			ConsignCode
			Sterile                      
			SingleUse                    
			Reusable                    
			Reprocessed                  
			Implantable                  
			ContainsHumanTissue          
			Pharmaceutical               
			Dressing                     
			Bioabsorbable		
			Active 
			Discontinued 
	Conditions
		HasContextContractAndNoQualifierItem 
			restricted 
			when (ContextContract entered
			and   TierQualifierItemRel !exists)
		
		HasContextContractAndQualifierItem 
			restricted 
			when (ContextContract entered
			and   TierQualifierItemRel exists)

		IsKitchenItem
			restricted
			when (Recipe or Ingredient)

		ActiveItemLocationExists
			restricted
			when (ActiveItemLocationRel exists)

		HasRecipe
			restricted
			when (RecipeRel exists)
			
		IsAnActiveRecipe
			restricted
			when (Recipe
			and	  ActiveRecipeRel exists)
				
		RecordExists
			restricted
			when (Item exists)

		PictureExists
			restricted
			when (Picture.File entered)

		GMDNTermEntered
			restricted 
			when (GMDNPTCode entered)
		
		IsActive
			restricted
			when (Active)

		Reference1Entered
			restricted
			when (Reference1 entered)

		Reference2Entered
			restricted
			when (Reference2 entered)
			
		ManufacturerEntered
			restricted
			when (Manufacturer entered)
			
		CommodityCodeEntered
			restricted
			when (CommodityCode entered)

		CanSetToNotAvailable
			restricted
			when (!Active
			and   !NotAvailableForUse)

		DuplicateManufacturerExists
			when (DuplicateManufacturerInfoRel exists)
		
		MoreRecordsToInactivate
			restricted
			when (!Active
			and  (ActiveVendorItemRel exists
				or ActiveItemGTINsRel exists
				or ActiveKitItemRel exists
				or AllActiveItemLocationsRel exists))

		HasItemmastUsageDateRangeForLink
			restricted
			when (ItemmastUsageDateRangeLinkRel exists)

		IsCatchWeightItem
			classic name is CW-ITEM
			restricted
			when (not CatchWeightCode.NotCatchWeight
			and   CatchWeightCode entered)

		HSPCSCodeSequenceEntered
			restricted
			when (HCPCSCode.Sequence entered)

		HSPCSCodeSequenceEnteredExists
			restricted
			when (HCPCSCode.Sequence entered
			and   HCPCSCode exists)

		HSPCSCodeSequenceEnteredNotExists
			restricted
			when (HCPCSCode.Sequence entered
			and   HCPCSCode !exists)

		HCPCSCodeEntered
			restricted
			when (HCPCSCode.HCPCS entered)

		HasUPCCodes
			restricted
			when (ItemUPCRel exists)

		HasItemAttachment
			restricted
			when (ItemAttachment set exists)

		HasVendorItems
			restricted
			when (AllVendorItemRel exists)

		HasActiveGTINs
			restricted
			when (ActiveItemGTINsRel exists)

		HasGTINs
			restricted
			when (ItemGTINsRel exists)

		OverduePurchaseOrderLines
			restricted
			when (OverduePurchaseOrderLineRel exists)

		SomeChargeInformationEntered
			restricted
			when (ChargeNumber entered
			or    HCPCSCode entered
			or    PatientChargeable = true)

		NoChargeInformationEntered
			restricted
			when (ChargeNumber !entered
			and   HCPCSCode !entered
			and   PatientChargeable = false)

		PatientChargeableEntered
			restricted
			when (ChargeNumber entered and PatientChargeable = true)

		AvailableForUse
			restricted
			when (!NotAvailableForUse)

		SameManufacturerInformation
			restricted
			when (Manufacturer 		= ContextManufacturer
			and   ManufacturerNumber 	= ContextManufacturerNumber)

		FromWorksheet
			restricted
			when (FromWorksheetResult entered)

		Copied
			restricted
			when (CopiedFromItem entered)

		HasGenericName
			classic name is GENERICNAME
			restricted
			when (GenericName entered
			and   Active)





		HasDescription2
			classic name is HAS-DESC2
			restricted
			when (Description2 entered)

		HasDesc3
			classic name is HAS-DESC3
			restricted
			when (Description3 entered)

		HasHazardCode
			classic name is HAZARD
			restricted
			when (HazardCode entered)

		RecallNoticesExist
			restricted
			when (RecallProductItemsRel exists)

		HasUNSPSCCodeSegment
			classic name is ICSEGMENT
			restricted
			when (UNSPSCCode.UNSPSCSegment entered
			and   Active)

		IsInactive
			restricted
			when (not Active)

		HasInventoryClass
			classic name is INVENTORYCLASS
			restricted
			when (MajorInventoryClass entered
			and   Active)

		HasItemmastUsageDateRange
			restricted
			when (ItemmastUsageDateRange set exists)

		HasItem
			classic name is ITEM-ENTERED
			restricted
			when (Item entered)

		VendorItemExists
			classic name is ITEMVEN-EXISTS
			restricted
			when (first VendorItemRel exists)

		HasManufacturerCode
			classic name is MANUF-CD-ENTRD
			restricted
			when (Manufacturer.ManufacturerCode entered
			and   Active)

		HasManufacturerNumber
			classic name is MANUF-NBR
			restricted
			when (ManufacturerNumber entered
			and   Active)

		IsPharmacyItem
			restricted
			when (UsageIdentifier.Drugs
			and   old UsageIdentifier.Pharmacy)

		HasPurchasingClass
			classic name is PURCHASECLASS
			restricted
			when (MajorPurchasingClass entered
			and   Active)

		HasReplacementItem
			classic name is REPLACE-ITEM
			restricted
			when (ReplacementItem entered)

		HasSalesclass
			classic name is SALESCLASS
			restricted
			when (MajorSalesClass entered
			and   Active)

		HasPPEClass
			restricted
			when (MajorPPEClass entered)
			
		HasGeneralLedgerChartAccount
			restricted
			when (IssueAccount.GeneralLedgerChartAccount entered)
			
		HasContractLinesByManufacturer
			restricted
			when (ContractLineByManufacturerRel exists)



















		IsUserFldUsed
			restricted
			when (UserField1 entered
			and   Active)

		DrugPharmacyOrNarcoticUsage
			restricted
			when (UsageIdentifier.Drugs
			or    UsageIdentifier.Pharmacy
			or    UsageIdentifier.Narcotic
			or    Pharmaceutical
			or    Narcotic
			or    Drugs)

		HealthcareInformationExists 
			restricted 
			when (HCPCSCodeEntered
			or    PatientChargeable    = true
			or    ClinicalSystemUse    = true
			or    ChargeNumber entered 	
			or    GMDNPTCode entered
			or    UsageIdentifier entered


			or    Implantable         = true
			or    Drugs               = true 
			or    Instrument          = true 
			or    Narcotic            = true 
			or    ContainsHumanTissue = true)

		PharmacyOrDrugAndShowHealthcare 
			restricted 
			when (DrugPharmacyOrNarcoticUsage
			and  (!ItemGroup.HideHealthcareInformation
			or    NDCsExists))

		NotPharmacyOrDrugAndShowHealthcare 
			restricted 
			when (!DrugPharmacyOrNarcoticUsage
			and  (!ItemGroup.HideHealthcareInformation
			or    HIBCCItemUPNsExists
			or    UCCEANItemUPNsExists))

		CanShowHealthcareInformation 
			restricted 
			when (!ItemGroup.HideHealthcareInformation
			or    HealthcareInformationExists)
		
		ContractSpecialItemExists
			restricted
			when (ContractSpecialItemsRel exists)

		ItemExistsAsContractLineSpecial
			restricted
			when (ContractItemRel exists)

		ManualItemExistsAsContractLineSpecial
			restricted
			when (ManualContractItemRel exists)

		SKUsExists
			restricted
			when (ItemSKU set exists)

		HIBCCItemUPNsExists
			restricted
			when (HIBCCItemUPN set exists)

		UCCEANItemUPNsExists
			restricted
			when (UCCEANItemUPN set exists)

		NDCsExists
			restricted
			when (NationalDrugCode set exists)

		IsAlternateUOMExists
			restricted
			when (AlternateUOMRel exists)

		IsTrackedInAlternateUOM
			restricted
			when (TrackedAlternateUOMRel exists)









		IsMyOrderedItem
			restricted
			when (MyOrderedQuantity > 0)

		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
				and ItemGroup.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or	(actor.context.FinanceEnterpriseGroup = ""))





			





		HasOpenContractLines
			restricted
			when (ContractLineItemRel exists)

		HasContractAndLineLocations 
			restricted 
			when (DerivedHasContractAndLineLocations = 1)
		
		ContractsLink
			restricted
			when (ItemContractLinesRel exists)
		
		HasContractInterfaceLines
			restricted
			when (ContractInterfaceItemRel exists)

		ContractsForNegotiationLink
			restricted
			when (ContractLinesForNegotiationRel exists)

		ItemHasVendor
			restricted
			when (PoInvLineFactHeaderRel exist)

		IsMakeToStockKitItem
			when (KitItem
			and   all ItemKitItemRel.MakeCode.MakeToStock)

		CopyItemLocationsRelExists
			when (CopyItemLocationsRel exists)

		AssociatedItemsExist
			when (AssociatedItemsRel exists)


		DisplayStockOnly
			when (not IsCatchWeightItem
			and   not HasSupplementalUOMOnALocation)

		DisplayWithCatchWeight
			when (IsCatchWeightItem)

		DisplayWithSupplemental
			when (not IsCatchWeightItem
			and   HasSupplementalUOMOnALocation)

		HasSupplementalUOMOnALocation
			when (LocationWithSupplementalUOMRel exists)


		HasLocations
			when (AllActiveInventoriedItemLocationsRel exists
			and   not AllActiveInventoriedItemLocationsWithSupplementalRel exists
			and   not IsCatchWeightItem)

		HasLocationsWithCatchWeight
			when (AllActiveInventoriedItemLocationsRel exists
			and   IsCatchWeightItem)

		HasLocationsWithSupplemental
			when (AllActiveInventoriedItemLocationsWithSupplementalRel exists
			and   not IsCatchWeightItem)

		HasSomeLocations
			when (AllItemLocationsRel exists)

		HasNoLocations
			when (AllItemLocationsRel !exists)

		HasLocationsNotClinical 
			when (HasSomeLocations
			and  !ClinicalSystemUse)
		
		HasSynchronizations
			when (ItemMasterSyncReportRel exists)

		ManualItemNumbering
			restricted
			when (ItemGroup.AutomaticItemNumbering = false)

		ItemGroupAllowsItemSync
			restricted
			when (ItemGroup.ItemSyncOption > 0)

		StockUOMValidChange
			restricted
			when (StockUOMRel not exists
			or	  StockUOMRel.UOMConversion = 1)

		HasBuyUOMNotStockUOM
			restricted
			when (BuyUOMNotStockUOMRel exists)

		FromNewItemProposal
			restricted
			when (NewItemProposalRel exists)

		HasActiveVendorItemRel
			restricted
			when (ActiveVendorItemRel exists)

		HasInactiveVendorItem
			restricted
			when (InactiveVendorItemRel exists)

		HasContract
			restricted
			when (ItemContractLinesRel exists)

		DoesNotHaveContract 
			when (ItemContractLinesRel !exists)		
		
		HasAttributeUpdates 
			restricted 
			when (AttributeUpdatesRel exists)
		
		HasPreferredContract
			restricted
			when (PreferredContractItemRel exists)

		IsHSNSACCodeEnabled
			restricted
			when (ItemGroup.BusinessGroup.UseHSNSACCode)

		HasTransientAttachment
			restricted
			when (TransientAttachment entered)

		HasParCartLocation
			restricted
			when (AllParCartLocationsRel exists)

		HasProcurementTemplateLines
			restricted
			when (ItemProcurementTemplateLinesRel exists)

		HasPurchaseOrderLines
			when (PurchaseOrderLineRel exists)
			

		IsRecipeManagementInUse
			restricted
			when (ItemGroup.RecipeManagementInUse)

		SmartphoneDisplay
			restricted
			when (display type.smartphone)

		GMDNPTCodeEntered
			restricted
			when (GMDNPTCode entered)
		
		HasSpecialHandlingCode
			restricted
			when (SpecialHandlingCode entered)

		IncompleteManufacturerInformation 
			when  (ClinicalSystemUse
			and   (Manufacturer !entered
			or     ManufacturerNumber !entered)
			and    HasSomeLocations)
		
		NonClinicalItemOnClinicalContract 
			when (!ClinicalSystemUse
			and   ContractLineForClinicalContractRel exists)
		
		CanUseForConsolidated 
			restricted 
			when  (Active
			and    Manufacturer entered
			and    ManufacturerNumber entered
			and   (ItemLocationsForConsolidatedRel exists
			or    (HasContractAndLineLocations
			and    ClinicalSystemUse)))

		CanSwapForConsolidated 
			restricted 
			when  (CanUseForConsolidated 
			and   !HasConsolidatedItemMaster
			and    DuplicateManufacturerExists)
		
		ManufacturerMismatch 
			restricted 
			when (MismatchedVendorItemManufacturer
			or    MismatchedGTINManufacturer
			or    MismatchedItemLocationManufacturer)
		
		HasConsolidatedItemMaster 
			when (ConsolidatedItemMasterRel exists) 

		MismatchedVendorItemManufacturer
			restricted
			when (MismatchedVendorItemManufacturerRel exists) 

		MismatchedGTINManufacturer 
			restricted
			when (MismatchedGTINManufacturerRel exists) 

		MismatchedItemLocationManufacturer
			restricted
			when (MismatchedItemLocationManufacturerRel exists) 			


		IsCatchWeightItemOnReceipt
			restricted
			when (CatchWeightCode.AllTransactionsRequireBoth
			or 	  CatchWeightCode.ReceiptRequiresBoth)	
		
		PreferenceCardItem
			restricted
			when (ItemGroup.PreferenceCardsInUse

			and PreferenceCardComponentItemRel exists)
		
	Relations
#ifdef module InventoryIntelligence
		IIHItemRel
			one-to-one relation to IIHItem
			Field Mapping uses symbolic key
				related.ItemGroup = ItemGroup
				related.IIHItem   = Item
				
		AllIIHItemLocationsRel
			one-to-many relation to IIHItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.Company.ItemGroup = ItemGroup)
				
#endif
		ConsolidatedItemMasterRel 
			one-to-many relation to ConsolidatedItemMaster 
			Field Mapping uses ByInternalItem
				related.ContractGroup	= ItemGroup 
				related.InternalItem    = Item 
		
		ConsolidatedItemMasterByManufacturerRel 
			one-to-many relation to ConsolidatedItemMaster 
			Field Mapping uses ByManufacturerInformation 
				related.ContractGroup			= ItemGroup
				related.Manufacturer            = Manufacturer 
				related.ManufacturerNumber      = ManufacturerNumber 

		RecipeRel
			one-to-many relation to Recipe
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item

		ActiveRecipeRel
			one-to-many relation to Recipe
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
			Instance Selection
				where (related.Active)
						
		ActiveRecipeLinesRel
			one-to-many relation to RecipeLine
			Field Mapping uses symbolic key
				related.ItemGroup				= ItemGroup
			Instance Selection
				where (related.IngredientItem	= Item
				and	   related.ActiveRecipe)
			
		TotalLocationsRel	
			default label is "TotalLocationsRel is deprecated, use AllActiveItemLocationsRel instead"
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.Company.ItemGroup = ItemGroup)

		TierQualifierItemRel 
			one-to-many relation to TierQualifierItem
			Field Mapping uses ByItemDetails 
				related.ContractGroup			= ItemGroup  
				related.Contract                = ContextContract 
				related.ItemNumber              = Item 
		
		LocationWithSupplementalUOMRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.Company.ItemGroup = ItemGroup
				and    related.SupplementalUOM.UnitOfMeasure entered)

		ItemLocationsForConsolidatedRel 
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.Company.ItemGroup = ItemGroup)		
		AllActiveItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.Company.ItemGroup = ItemGroup)

		InactiveLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (!related.Active
				and    related.Company.ItemGroup = ItemGroup)

		ActiveItemLocationRel
			one-to-many relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company 		  = ContextInventoryCompany
				related.InventoryLocation = ContextInventoryLocation
				related.Item  			  = Item
			Instance Selection
				where (related.IsActive)

		BuyUOMNotStockUOMRel is an ItemUOM set
			Instance Selection
				where ((related.ValidForBuying.Default
				or		related.ValidForBuying.Valid)
				and	   (related.UnitOfMeasure != StockUOM))

		KeywordShadowRel
			one-to-one relation to KeywordShadow
			Field Mapping uses ByShadowItem
				related.ItemGroup	= ItemGroup
				related.Item		= Item

		ItemMasterSyncReportRel
			one-to-many relation to ItemMasterSyncReport
			Field Mapping uses ByItem
				related.Item = Item

		NewItemProposalRel
			one-to-many relation to RecallProduct
			Field Mapping uses ByItemCreated
				related.RecallGroup = ItemGroup
				related.ItemCreated = Item

		ItemDuplicatesRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= NewItemNumber

		ItemGTINsRel
			classic name is ICITEMGTIN
			one-to-many relation to ItemGTIN
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item

		ActiveItemGTINsRel
			classic name is ICITEMGTIN
			one-to-many relation to ItemGTIN
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item
			Instance Selection
				where (related.Active)

		GTINForStockUOMRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set3
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= StockUOM
			Instance Selection
				where (related.Active
				and    related.UseAsDefaultPerUOM = true)

		GTINForDefaultTransactionUOMRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set3
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= DefaultTransactionUOM
			Instance Selection
				where (related.Active)

		LocalGTINRel
			one-to-one relation to ItemGTIN
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.ItemGTIN    	= LocalGTIN

		GTINForLocalUOMRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set3
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= LocalUOM
			Instance Selection
				where (related.Active
				and    related.Manufacturer			= LocalManufacturer
				and    related.ManufacturerNumber	= LocalManufacturerNumber)

		HIBCCItemUPNsForDefaultBuyUOMRel
			one-to-many relation to HIBCCItemUPN
			Field Mapping uses Set5
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= DefaultBuyUOM

		HIBCCItemUPNForLocalUOMRel
			one-to-many relation to HIBCCItemUPN
			Field Mapping uses Set5
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= LocalUOM

		MajorInventoryClassRel
			classic name is INVENTORYCLASS
			one-to-one relation to MajorClass
			valid when (HasInventoryClass)
			required
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.ClassType	= "I"
				related.MajorClass	= MajorInventoryClass

		MinorInventoryClassRel
			classic name is INVENTORYCLASS
			one-to-one relation to MinorClass
			valid when (HasInventoryClass)
			required
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.ClassType	= "I"
				related.MajorClass	= MajorInventoryClass
				related.MinorClass	= MinorInventoryClass

		AssociatedItemsRel
			one-to-many relation to AssociatedItem
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item

		CompanionItemsRel
			classic name is ITEMCOMPANION
			one-to-many relation to AssociatedItem
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item
			Instance Selection
				where (related.AssociatedItem.AssociatedItemSubType.Companion)

		SubstititeItemsRel
			classic name is ITEMSUB
			one-to-many relation to AssociatedItem
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item
			Instance Selection
				where (related.AssociatedItem.AssociatedItemSubType.Substitute)

		OrderEntryItemGroupDiagramDetailsRel
			classic name is OEDIAGDTL
			one-to-many relation to OrderEntryItemGroupDiagramDetail
			Field Mapping uses Set2
				related.Item		= Item
				related.ItemGroup	= ItemGroup

		ItemUsage100PercentRel is an ItemmastUsage set
			Instance Selection
				where (related.PercentOfUsage = 1.00
				and    related.OriginalUsage)

		ItemReplenishmentSourceRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses ByItem
				related.Item = LocalCopyItem

		NonParItemReplenishSourcesRel
			one-to-many relation to ItemReplenishmentSource
			Field Mapping uses ByItem
				related.Item = LocalCopyItem
			Instance Selection
				where (not related.InventoryLocation.ParOrExchangeCart)

		MajorPurchasingClassRel
			classic name is PURCHASECLASS
			one-to-one relation to MajorClass
			valid when (HasPurchasingClass)
			required
			Field Mapping uses symbolic key
				related.ItemGroup  = ItemGroup
				related.ClassType  = "P"
				related.MajorClass = MajorPurchasingClass

		MinorPurchasingClassRel
			classic name is PURCHASECLASS
			one-to-one relation to MinorClass
			valid when (HasPurchasingClass)
			required
			Field Mapping uses symbolic key
				related.ItemGroup  = ItemGroup
				related.ClassType  = "P"
				related.MajorClass = MajorPurchasingClass
				related.MinorClass = MinorPurchasingClass

		MinorSalesClassRel
			classic name is SALESCLASS
			one-to-one relation to MinorClass
			valid when (HasSalesclass)
			required
			Field Mapping uses symbolic key
				related.ItemGroup  = ItemGroup
				related.ClassType  = "S"
				related.MajorClass = MajorSalesClass
				related.MinorClass = MinorSalesClass

		VendorItemRel	
			classic name is POITEMVEN
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.UseAsDefault)

		AllVendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item

		ActiveVendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.Active)

		InactiveVendorItemRel
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (not related.Active)

		MismatchedVendorItemManufacturerRel 
			one-to-many relation to VendorItem
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.Active
				and   (related.Manufacturer 	  != Manufacturer
				or     related.ManufacturerNumber != ManufacturerNumber))

		MismatchedGTINManufacturerRel 
			one-to-many relation to ItemGTIN
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item
			Instance Selection
				where (related.Active
				and   (related.Manufacturer 	  != Manufacturer
				or     related.ManufacturerNumber != ManufacturerNumber))

		MismatchedItemLocationManufacturerRel 
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where  (related.Company.ItemGroup = ItemGroup
				and     related.Active
				and    !related.Discontinued
				and   (related.Manufacturer 	  != Manufacturer
				or     related.ManufacturerNumber != ManufacturerNumber))

		StockUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= StockUOM

		OriginalStockUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= old StockUOM

		SecondaryUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= SecondaryUOM

		OriginalSecondaryUOMRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= Item
				related.UnitOfMeasure	= old SecondaryUOM

		AlternateUOMRel is a ItemUOM set
			Instance Selection
				where (related.UnitOfMeasure	!= StockUOM
				and    related.UnitOfMeasure	!= SecondaryUOM)

		TrackedAlternateUOMRel is an ItemUOM set
			Instance Selection
				where (related.UnitOfMeasure	!= StockUOM
				and    related.UnitOfMeasure	!= SecondaryUOM
				and    related.TrackedIn)

		DefaultTransactionUOMRel is a ItemUOM set
			Instance Selection
				where (related.ValidForInventoryTransactions.Default)

		DefaultSellingUOMRel is a ItemUOM set
			Instance Selection
				where (related.ValidForSelling.Default)

		DefaultSellPriceUOMRel is a ItemUOM set
			Instance Selection
				where (related.ValidForSellPrice.Default)

		DefaultBuyUOMRel is a ItemUOM set
			Instance Selection
				where (related.ValidForBuying.Default)

		DefaultRecipeUOMRel is an ItemRecipeUOM set
			Instance Selection
				where (related.ValidForRecipe.Default)

		LocationsWithTransactionUOMRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.ItemGroup = ItemGroup
				and    related.DefaultTransactionUOM entered
				and    related.QuantitiesExist)

		AllActiveInventoriedItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.InventoryTracked
				and    related.Company.ItemGroup = ItemGroup)

		AllActiveInventoriedItemLocationsWithSupplementalRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Active
				and    related.InventoryTracked
				and    related.SupplementalUOM entered
				and    related.Company.ItemGroup = ItemGroup)

		CopyItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = LocalCopyItem
			Instance Selection
				where (not related.CartParLocation
				and    related.Active
				and    related.Company.ItemGroup = ItemGroup
				and    related.InventoryLocation.IsActive)
				
		NewItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           = LocalCompany
				related.InventoryLocation = LocalLocation
				related.Item              = LocalNewItem

		AllItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.ItemGroup = ItemGroup)
		
		SerialTrackedItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.ItemGroup = ItemGroup
				and    related.IsSerialTrackedOnIssueOrReceipts)

		AllParCartLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.ItemGroup = ItemGroup
				and related.CartParLocation)

		ContractSpecialItemsRel
			one-to-many relation to ContractLineSpecialItemLink
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
				related.Item		= Item

		ContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup    = ItemGroup
				related.ItemNumber   	 = NewItemNumber
			Instance Selection
				where (!related.ContractLineState.Closed
				and     related.ItemType.Special
				and     related.CanUseForCostDefaulting)

		ManualContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup    = ItemGroup
				related.ItemNumber   	 = Item
			Instance Selection
				where (!related.ContractLineState.Closed
				and     related.ItemType.Special
				and     related.CanUseForCostDefaulting)

		ItemContractLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemOpen
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item
			Instance Selection
				where (related.ItemType = 1)

		AttributeUpdatesRel    
			one-to-many relation to ContractLineAttributeUpdate 
			Field Mapping uses ByItem 
				related.ContractGroup       = ItemGroup 	
				related.InternalItemNumber	= Item
			Instance Selection 
				where (related.Status = 1)	
		PreferredContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item
			Instance Selection
				where (related.PreferredLine
				and    related.UseForCostDefaultingSomewhere)

		ContractInterfaceItemRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByItemVendorItem
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item



























		ItemmastUsage100PercentRel is an ItemmastUsage set
			Instance Selection
				where (related.PercentOfUsage	= 1.000
				and    related.OriginalUsage)

		ContractLinesForNegotiationRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item
			Instance Selection
				where (related.Contract.EligibleForNegotiation)

		ItemProcurementTemplateLinesRel
			one-to-many relation to	ProcurementTemplateLine
			Field Mapping uses	Set3
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item

		ProcurementTemplateLineStockRel
			one-to-many relation to	ProcurementTemplateLine
			Field Mapping uses	Set3
				related.ProcurementGroup		=	ItemGroup
				related.Item					=	Item
			Instance Selection
				where	(related.UnitOfMeasure	=	old StockUOM)

		ItemKitItemRel
			one-to-many relation to KitItem
			Field Mapping uses symbolic key
			Instance Selection
				where	(related.ItemGroup		= ItemGroup
				and      related.KitItem.Item	= Item)

		ActiveKitItemRel
			one-to-many relation to KitItem
			Field Mapping uses Set3
				related.ItemGroup		= ItemGroup
				related.KitItem.Item	= Item
			Instance Selection
				where	(related.Active)

		ComponentItemRel
		 	one-to-many relation to KitComponent
		 	Field Mapping uses Set2
		 		related.ItemGroup		=	ItemGroup
				related.ComponentItem	= 	Item

		ContractGroupRel
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key
				related.ContractGroup = ItemGroup

		KitComponentItemRel
		 	one-to-many relation to KitComponent
		 	Field Mapping uses Set2
		 		related.ItemGroup		= ItemGroup
				related.ComponentItem	= Item
			Instance Selection
				where (related.StopDate			=	0
				and related.StopDate			>= current corporate date)


		StockOnHandItemRel is a StockOnHandDetail(Item) set
			Instance Selection
				where (related.Item.ItemGroup	= ItemGroup)

		StockOnHandItemRel1 is a StockOnHandDetail(Item) set
			Instance Selection
				where (related.Item.ItemGroup	= ItemGroup
				and related.StockOnHandDetail.UnitOfMeasure		= StockUOM)


		TrackUomSellRel is a ItemUOM set
			Instance Selection
				where ((related.ValidForSelling.Default
				or		related.ValidForSelling.Valid)
				and	  (related.UnitOfMeasure	=	StockUOM))

		TrackUomSellPriceRel is a ItemUOM set
			Instance Selection
				where ((related.ValidForSellPrice.Default
					or related.ValidForSellPrice.Valid)
				and	   (related.UnitOfMeasure = StockUOM))

		TrackUomBuyRel is a ItemUOM set
			Instance Selection
				where ((related.ValidForBuying.Default
					or related.ValidForBuying.Valid)
				and	   (related.UnitOfMeasure = StockUOM))

		PurchasingCompaniesRel
			one-to-many relation to PurchasingCompany
			Field Mapping uses Set2
				related.ProcurementGroup = ItemGroup

		PurchaseOrderReceiptLinesByDateRel
			one-to-many relation to PurchaseOrderReceiptLine
			Field Mapping uses Set13
				related.Company = LocalCompany
			Instance Selection
				where (related.ReceivedDate >= LocalDateRange.Begin
				and    related.ReceivedDate <= LocalDateRange.End
				and    related.Item = Item)

		PurchaseOrderLineRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByItem
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item



		InventoryOrNonStockPurchaseOrderLineRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByItem
				related.ProcurementGroup      				= ItemGroup
				related.Item        						= Item
			Instance Selection
				where (related.ItemType.Inventoried
				or     related.ItemType.NonStock)

		OverduePurchaseOrderLineRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByItem
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.IsOpenForReceiving
				and   related.EarlyDeliveryDate < current corporate date
				and   related.Closed = "N")

		InventoryOrNonStockOverduePurchaseOrderLineRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses ByItem
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where ((related.ItemType.Inventoried
				or      related.ItemType.NonStock)
				and	  related.IsOpenForReceiving
				and   related.EarlyDeliveryDate < current corporate date
				and	  related.Closed = "N")

		ContractLineForClinicalContractRel 
			one-to-many relation to ContractLine 
			Field Mapping uses ByVendorItemOpen 
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item		
			Instance Selection 
				where (related.Contract.EnableClinicalSystemUseLocations)	
		
		ContractLineItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemOpen
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item

		ContractLineItemNoManufacturerNumberRel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemOpen
				related.ContractGroup	= ItemGroup
				related.ItemNumber		= Item
			Instance Selection
				where (related.ManufacturerNumber !entered)

		ContractLineByManufacturerRel     
			one-to-many relation to ContractLine
			Field Mapping uses ByMfgInfoVenItem
				related.ContractGroup                   	= ItemGroup
				related.Manufacturer.ManufacturerCode   	= Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision   = Manufacturer.ManufacturerDivision
				related.ManufacturerNumber                  = ManufacturerNumber
			Instance Selection
				where (!related.ContractLineState.Closed
				and     related.ItemType.Special
				and     related.ManufacturerNumber entered
				and     ManufacturerNumber entered
				and     Active)

		InvoiceLineFactsForItemByDateRel
			one-to-many relation to InvoiceLineFact
			Field Mapping uses ByItem
				related.ProcurementGroup	= ItemGroup
				related.Item				= Item
			Instance Selection
				where (related.InvoiceDate	>= LocalDateRange.Begin
				and    related.InvoiceDate	<= LocalDateRange.End)

		ManualItemmastUsagesRel
			one-to-many relation to ItemmastUsage
			Field Mapping uses ByManualEntry
				related.Item								= Item
				related.Company								= LocalCompany
				related.InventoryLocation					= LocalLocation
				related.RequestingLocation					= LocalReqLocation
				related.ItemmastUsageDateRange.Begin		= LocalDateRange.Begin
				related.ItemmastUsageDateRange.End			= LocalDateRange.End
				related.ItemmastUsage.UsageQuantityType		= 3

		ItemmastUsageDateRangeRel
			one-to-one relation to ItemmastUsageDateRange
			Field Mapping uses symbolic key
				related.ItemGroup						= ItemGroup
				related.Item							= Item
				related.Company							= LocalCompany
				related.InventoryLocation				= LocalLocation
				related.RequestingLocation				= LocalReqLocation
				related.ItemmastUsageDateRange.Begin	= LocalDateRange.Begin
				related.ItemmastUsageDateRange.End		= LocalDateRange.End

		ItemmastUsageDateRangeLinkRel
			one-to-many relation to ItemmastUsageDateRange
			delete cascades
			Field Mapping uses symbolic key
				related.ItemGroup						= ItemGroup
				related.Item							= Item

		MyRequisitionLinesRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.BusinessGroup = ItemGroup
				and    related.Requisition.IsMyRequisition
				and    related.Status.Processed)

		ItemRequisitionLinesRel
			one-to-many relation to RequisitionLine
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.BusinessGroup = ItemGroup)

		PoInvLineFactHeaderRel	
			one-to-many relation to PoInvLineFact
			Field Mapping uses ByItemVendor
				related.ProcureGroup	= ItemGroup
				related.Item			= Item
			Instance Selection
				where (related.ByItemVendorHeader)

		RecallProductItemsRel
			one-to-many relation to RecallProductItem
			Field Mapping uses ByItem
				related.RecallGroup	= ItemGroup
				related.Item		= Item
			Instance Selection
				where (related.RecallNotice.Status.Pending
				or     related.RecallNotice.Status.Active)

		RecallProductItemByManufRel 
			one-to-many relation to RecallProductItem
			Field Mapping uses ByManufInfo
				related.RecallGroup 								= ItemGroup 
				related.ManufacturerInformation.Manufacturer		= Manufacturer 
				related.ManufacturerInformation.ManufacturerNumber	= ManufacturerNumber

		RecallProductItemByManufNumberOnlyRel 
			one-to-many relation to RecallProductItem
			Field Mapping uses ByManufacturerNumber
				related.RecallGroup 								= ItemGroup 
				related.ManufacturerInformation.ManufacturerNumber	= ManufacturerNumber

		DuplicateClinicalManufacturerInfoRel
			one-to-many relation to Item
			Field Mapping uses Set8
				related.ItemGroup 							= ItemGroup
				related.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
				related.ManufacturerNumber					= ManufacturerNumber
			Instance Selection
				where (related.Item not = Item
				and    related.Item.Active
				and    Active 
				and    ManufacturerNumber entered
				and    related.HasConsolidatedItemMaster)

		DuplicateManufacturerInfoRel
			one-to-many relation to Item
			Field Mapping uses Set8
				related.ItemGroup 							= ItemGroup
				related.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
				related.ManufacturerNumber					= ManufacturerNumber
			Instance Selection
				where (related.Item not = Item
				and    related.Item.Active
				and    ManufacturerNumber entered)

		NotDiscontinuedLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (not related.Discontinued
				and    related.Company.ItemGroup = ItemGroup)

		InactiveOrDiscontinuedLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where ((not related.Active
				or      related.Discontinued)
				and    related.Company.ItemGroup = ItemGroup)

		PreferenceCardComponentItemRel
			one-to-many relation to ComponentItem
			Field Mapping uses ByComponentItem
				related.ItemGroup	= ItemGroup
				related.Item		= Item


		BODStockUOMRel is a ItemUOM set

		ItemUPCRel
			one-to-many relation to ItemUPC
			delete cascades
			Field Mapping uses symbolic key
				related.ItemGroup = ItemGroup
				related.Item	  = Item
				
		GeneralLedgerCompanyRel
			one-to-many relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
			Instance Selection
				where (related.BusinessGroup = ItemGroup)
				
		ItemLocationsRel
			one-to-many relation to ItemLocation
			Field Mapping uses ByItem
				related.Item = Item
			Instance Selection
				where (related.Company.ItemGroup = ItemGroup
				and related.Company = LocalGeneralLedgerCompany)

		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "ItemMaster"
				related.FSMBODConfiguration.Direction 	= 1

	   	FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "SourceBusinessGroup"
				related.FSMBODCrossReference.DestinationField 	= "DestinationAccountingEntity"
			Instance Selection
				where (related.SourceValue	= ItemGroup)
				
		FSMCleanDocIDCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "CSFGLC"
				related.FSMBODCrossReference.DestinationField 	= "DESTAE"
			Instance Selection
				where (related.SourceValue	= LocalAccountingentityCompany)
				
		FSMCleanDocIDGLCCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "CSFGLC"
				related.FSMBODCrossReference.DestinationField 	= "DESTAE"	
				
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker	
                
        FSMCleanDocIDGeneralLedgerCompanyRel
            one-to-one relation to GeneralLedgerCompany
            required
            Field Mapping uses symbolic key
                related.Company = LocalAccountingentityCompany 


	
	Sets

		Set10
			indexed
			Instance Selection
				where (HasUNSPSCCodeSegment)
			Sort Order
				ItemGroup
				UNSPSCCode
				Item

		Set11
			indexed
			Instance Selection
				where (HasManufacturerNumber)
			Sort Order
				ItemGroup
				ManufacturerNumberStripped
				Manufacturer
				Item


		Set3
			indexed
			Instance Selection
				where (HasGenericName)
			Sort Order
				ItemGroup
				GenericName
				Item

		Set4
			indexed
			Instance Selection
				where (HasPurchasingClass)
			Sort Order
				ItemGroup
				MajorPurchasingClass
				MinorPurchasingClass
				Item

		Set5
			indexed
			Instance Selection
				where (HasInventoryClass)
			Sort Order
				ItemGroup
				MajorInventoryClass
				MinorInventoryClass
				Item

		Set6
			indexed
			Instance Selection
				where (HasSalesclass)
			Sort Order
				ItemGroup
				MajorSalesClass
				MinorSalesClass
				Item

		Set8
			indexed
			Instance Selection
				where (HasManufacturerCode)
			Sort Order
				ItemGroup
				Manufacturer
				ManufacturerNumber
				Item

		ByGMDNTerm 
			Sort Order 
				ItemGroup 
				GMDNPTCode 
				Item 
		
		ByCommodityCode
			Sort Order
				ItemGroup
				CommodityCode
				Item

		FromWorksheet
			Instance Selection
				where (FromWorksheet)
			Sort Order
				FromWorksheetResult
				ItemGroup
				Item

		ByDescription
			Sort Order
				ItemGroup
				Description
				Item

		ByPPEClass


			Sort Order
				ItemGroup
				MajorPPEClass
				MinorPPEClass
				Item

	Field Rules

		AllowCustomerOrderReturns
			default to "Y"

		Description
			required
		
		LastUpdateBy
			force default to actor

		LastUpdateDate
			force default to current timestamp

		StockUOM
			required
			if (StockUOM changed)
				constraint (StockUOMValidChange)
					"UOMIsDefinedAsAnAlternateUOM;CannotChange"
				constraint (ProcurementTemplateLineStockRel not exists)
					"CannotChange,ProcurementLineItemUOMExists"     					
				constraint (LocationsWithTransactionUOMRel not exists)
					"CannotChangeUOM;UOMIsUsedByItemLocation"

				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeStockUOM;QuantitiesExistAtLocation(s)"    			
					constraint (!each.FrozenForPhysicalInventory)
						"CannotChangeStockUOM;ItemIsFrozenForPhysicalInventory"         

		CatchWeightCode

			default to "N"

			if (CatchWeightCode changed)
				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeCatchWeightCode;QuantitiesExistAtLocation(s)"   			

			if (CatchWeightCode changed
			and old CatchWeightCode.NotCatchWeight)
				constraint (AlternateUOMRel not exists)
					"CannotChangeToCatchWeightItem;AlternateUOMExists"

		SecondaryUOM

			if (!CatchWeightCode.NotCatchWeight)
				required
					"SecondaryUOMIsRequiredForCatchWeightItem"   
			else
				cannot be entered
					"CannotEnterSecondaryUOM;ItemIsNotCatchWeight"    					

			if ((not old CatchWeightCode.NotCatchWeight)
			and SecondaryUOM changed
			and SecondaryUOM entered)
				constraint (SecondaryUOMRel exists)
					"SecondaryUOM<SecondaryUOM>NotValidForTheItem"
				constraint (SecondaryUOMRel.DefaultForSelling)
					"SecondaryUOMMustBeDefaultForSelling" 								 
				constraint (SecondaryUOMRel.DefaultForBuying)
					"SecondaryUOMMustBeDefaultForBuying"

			constraint(StockUOM != SecondaryUOM)
				"SecondaryUOMCannotBeSameAsStockUOM"



			if (SecondaryUOM changed)
				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeSecondaryUOM;QuantitiesExistAtLocation(s)" 		

		SecondaryUOMConversion

			if (!CatchWeightCode.NotCatchWeight)
				required
					"ConversionFactorIsRequiredForCatchWeightItem"  	
			else
				cannot be entered
					"CannotEnterConversionFactor;ItemIsNotCatchWeight"



		UOMConversion

			default to 1

		CatchWeightVariancePercent
			constraint (!CatchWeightCode.NotCatchWeight)
				"CannotEnterVariancePercentForNonCatchWeightItem"   							

		PurchaseTaxable
			initial value is PurchaseTaxable.DefaultToNextLevel
			default to PurchaseTaxable.DefaultToNextLevel

		CommodityCode

			constraint (CommodityCode.Active)
				"CommodityCodeIsInactive"

		NumberOfDecimalsQuantity
			if (not CatchWeightCode.NotCatchWeight)
				required
					"NumberOfDecimalsForQuantityIsRequiredForCatchWeightItem"  				

			if (NumberOfDecimalsQuantity changed)
				if (NumberOfDecimalsQuantity < old NumberOfDecimalsQuantity)
					for each AllItemLocationsRel
						constraint (!each.QuantityTruncateCheck)
							"ChangingDecimalSizeCausesTruncation"  								

		ReplacementItem

			constraint (ReplacementItem exists)
				"ReplacementItemDoesNotExist"

			constraint (ReplacementItem != Item)
				"ReplacementItemCannotBeTheSameAsTheItem"                                     

			constraint (ReplacementItem.StockUOM = StockUOM)
				"ReplacementItemStockUOM<ReplacementItem.StockUOM>MustEqualUOM<StockUOM>"

		NumberOfDecimalsCost
			initial value is ItemGroup.DefaultNumberOfDecimalsCost
			if (NumberOfDecimalsCost = 0)
				default to ItemGroup.DefaultNumberOfDecimalsCost

		NumberOfDecimalsPrice
			initial value is ItemGroup.DefaultNumberOfDecimalsPrice
			if (NumberOfDecimalsPrice = 0)
				default to ItemGroup.DefaultNumberOfDecimalsPrice

		ManufacturerNumber
			if (DuplicateManufacturerInfoRel exists)
				confirmation required
					"ManufacturerInfoAlreadyExistsForItem<first DuplicateManufacturerInfoRel.Item>.Proceed?"

		ManufacturerNumberStripped
			ManufacturerNumberStripped = DerivedStrippedManufacturerNumber

		LotTracked
			initial value is LotTracked.NotLotTracked
			default to LotTracked.NotLotTracked
			if (LotTracked changed)
				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeLotTracked;QuantitiesExistAtLocation(s)" 				

				if (old LotTracked.NotLotTracked
				and !LotTracked.NotLotTracked)
					for each ItemKitItemRel
			   			constraint (!each.MakeCode.MakeToOrder)
							"CannotChangeToLotTracked,ItemIsKitItem"  						

					for each ComponentItemRel
						constraint (!each.HasMakeToOrderKitItem)
							"CannotChangeToLotTrack,ItemIsKitComponent"  					

		SerialTracked
			initial value is SerialTracked.NotSerialTracked
			default to SerialTracked.NotSerialTracked

			if (not SerialTracked.NotSerialTracked)
				constraint (AlternateUOMRel not exists)
					"SerialNumberTrackedItem,AlternateUO\M\sNotAllowed"

			if (LotTracked.LotRequiredAtIssue
			or  LotTracked.LotRequiredAtReceipt)
				constraint (SerialTracked.NotSerialTracked)
					"ItemCannotBeBothSerialAndLotTracked"    									

			if (!CatchWeightCode.NotCatchWeight)
				constraint (SerialTracked.NotSerialTracked)
					"ItemCannotBeSerialTrackedAndACatchWeightItem"

			if (SerialTracked changed)
				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeSerialTracked;QuantitiesExistAtLocation(s)"  			

				if (old SerialTracked.NotSerialTracked
				and !SerialTracked.NotSerialTracked)
		   			for each ItemKitItemRel
						constraint (!each.MakeCode.MakeToOrder)
							"CannotChangeToSerialTracked,ItemIsKitItem"  					

				if (old SerialTracked.NotSerialTracked
				and !SerialTracked.NotSerialTracked)
					for each ComponentItemRel
						constraint (!each.HasMakeToOrderKitItem)
							"CannotChangeToSerialTrack,ItemIsKitComponent"  				

		UDITracked
			initial value is UDITracked.NotUDITracked
			default to UDITracked.NotUDITracked
			if (UDITracked changed
			and (old UDITracked != blank
			or   UDITracked.UDIRequiredAtReceipt or UDITracked.UDIRequiredAtIssue))
				for each AllActiveItemLocationsRel
					constraint (!each.QuantitiesExist)
						"CannotChangeUDITracked;QuantitiesExistAtLocation(s)"

				if (old UDITracked.NotUDITracked
				and !UDITracked.NotUDITracked)
					for each ItemKitItemRel
			   			constraint (!each.MakeCode.MakeToOrder)
							"CannotChangeToUDITracked,ItemIsKitItem"

					for each ComponentItemRel
						constraint (!each.HasMakeToOrderKitItem)
							"CannotChangeToUDITrack,ItemIsKitComponent"

		AddedDate
			initial value is current corporate date
			default to current corporate date

		CapitalTechnical
			initial value is CapitalTechnical.None
			default to CapitalTechnical.None

		UsageIdentifier
			if (SKUsExists
			or  HIBCCItemUPNsExists
			or  UCCEANItemUPNsExists)
				constraint (!DrugPharmacyOrNarcoticUsage)
					"SKU,HIBCCItemUPNOrUCCEANItemUPNExists;UsageIdentifierCannotBeDrugsOrPharmacy"

			if (NDCsExists)
				constraint (DrugPharmacyOrNarcoticUsage)
					"NationalDrugCodeExists;UsageIdentifierMustBeDrugsOrPharmacyOrNarcotic"

		Active
			default to true
			initial value is true

			if (Active changed and not Active)
				for each AllActiveItemLocationsRel
					constraint (each.StockOnHandQuantity = 0)
						"CannotInactivateItem;ItemHasStockOnHandAtLocation<each.InventoryLocation>"

				for each KitComponentItemRel
					constraint (!each.HasActiveKitItem)
						"CannotInactivateItem,ItIsAnActiveKitComponent"	


		EffectiveDate
			if (ReplacementItem not entered)
				cannot be entered
					"EffectiveDatesCannotBeEntered;ReplacementItemIsBlank"           

			if (ExpirationDate entered)
				constraint (EffectiveDate < ExpirationDate)
					"EffectiveDateCannotBeGreaterThanExpirationDate"                 

		ExpirationDate
			if (ReplacementItem not entered)
				cannot be entered
					"ExpirationDateCannotBeEntered;ReplacementItemIsBlank"

		Picture
			if (Picture changed
			or	Item not exists)
				MaxImageSize = ItemGroup.ItemImageMaximumSizeBytes

		Discontinued
			if (Discontinued)
				constraint (Active)
					"CannotDiscontinueAnInactiveItem"

				if (Discontinued changed)
					constraint (old Active)
						"CannotSetToDiscontinued;ItemIsInactive"

		Recipe
			if (action type.Create)
				if (Recipe)
					constraint (ItemGroup.RecipeManagementInUse)
						"CannotSetupNewRecipeItems;_\Item_\Group<ItemGroup>DoesNotUse_\Kitchen_\Management"
			else
				if (Recipe changed)
					if (not Recipe)
						constraint (ActiveRecipeRel not exists)
							"AnActiveRecipeExistsForItem<Item>"
					else
						constraint (ItemGroup.RecipeManagementInUse)
							"CannotSetupNewRecipeItems;_\Item_\Group<ItemGroup>DoesNotUse_\Kitchen_\Management"
					
		Ingredient
			if (action type.Create)
				if (Ingredient)
					constraint (ItemGroup.RecipeManagementInUse)
						"CannotSetupNewIngredientItems;_\Item_\Group<ItemGroup>DoesNotUse_\Kitchen_\Management"
			else
				if (Ingredient changed)
					if (not Ingredient)
						constraint (ActiveRecipeLinesRel not exists)
							"Item<Item>IsDefinedAsAnIngredientForAnActiveRecipe"
					else
						constraint (ItemGroup.RecipeManagementInUse)
							"CannotSetupNewIngredientItems;_\Item_\Group<ItemGroup>DoesNotUse_\Kitchen_\Management"

		SpecialHandlingCode
			if  (SpecialHandlingCode entered
			and (action type.Create or SpecialHandlingCode changed))
				constraint (SpecialHandlingCode.Active)
					"SpecialHandlingCodeMustBeActive"
		SpecialHandlingInstructions
			if (SpecialHandlingCode entered)
				required
					"InstructionsRequiredForSpecialHandling"
			else
				initialize SpecialHandlingInstructions
		
		HandlingTimeInMinutes
			if (SpecialHandlingCode.TimeSensitive)
				required
					"HandlingTimeIsRequiredForTimeSensitiveItem"
			if (SpecialHandlingCode not entered
			or  not SpecialHandlingCode.TimeSensitive)
				initialize HandlingTimeInMinutes
		
		StockWeight
			constraint (StockWeight > 0)
				"StockWeightCannotBeNegative" 

		StockVolume
			constraint (StockVolume > 0)
				"StockCubicCannotBeNegative" 


















	Create Exit Rules

		if (ReplacementItem entered)

			constraint (ReplacementItem.StockUOM = StockUOM)
				"ReplacementItemStockUOMMustBeTheSameAsTheItemStockUOM"                       

			constraint (ReplacementItem.DefaultSellingUOM = DefaultSellingUOM)
				"ReplacementItemDefaultSellUOMMustBeTheSameAsTheItemDefaultSellUOM"            

			constraint (ReplacementItem.DefaultSellPriceUOM = DefaultSellPriceUOM)
				"ReplacementItemDefaultSellPriceUOMMustBeTheSameAsTheItemDefaultSellPriceUOM"	

		if (UsageIdentifier.Drugs)
			Drugs = true
		else
		if (UsageIdentifier.Instrument)
			Instrument = true
		else
		if (UsageIdentifier.Reusable)
			Reusable = true
		else
		if (UsageIdentifier.Pharmacy)
			Pharmaceutical = true
		else
		if (UsageIdentifier.Implant)
			Implantable = true
		else
		if (UsageIdentifier.Analytics)
			Analytics = true 			
		else
		if (UsageIdentifier.Narcotic)
			Narcotic = true 
		else
		if (UsageIdentifier.Dressing) 
			Dressing = true 			

	Actions
		Create is a Create Action
			Local Fields
				LocalIncrement is Numeric 18
			Field Rules
				Item
					if (!ItemGroup.AutomaticItemNumbering)
						if (ManualItemExistsAsContractLineSpecial)
							if (!FromExternal)
								constraint (ContractGroupRel.ChangeItemIfDuplicate)
									"CannotAddOrCopy,ItemExistsAsAContractSpecialItemOnContract:<first ManualContractItemRel.Contract>ContractLine:<first ManualContractItemRel.ContractLine>"

							if (ContractGroupRel.ChangeItemIfDuplicate)
								for each ManualContractItemRel
									invoke UpdateItemNumberWithManufacturer each

					if (ItemGroup.AutomaticItemNumbering)
						LocalIncrement = 1
						NewItemNumber =  ItemGroup.LastItem + LocalIncrement
						while (ItemDuplicatesRel exists)
							LocalIncrement += 1
							NewItemNumber =  ItemGroup.LastItem + LocalIncrement
						if (ItemExistsAsContractLineSpecial)
							if (!FromExternal)
								constraint (ContractGroupRel.ChangeItemIfDuplicate)
									"CannotAddOrCopy,ItemExistsAsAContractSpecialItemOnContract:<first ContractItemRel.Contract>ContractLine:<first ContractItemRel.ContractLine>"   
							if (ContractGroupRel.ChangeItemIfDuplicate)
								for each ContractItemRel
									invoke UpdateItemNumberWithManufacturer each
						cannot be entered
							"ItemNumberAutoAssigned,CannotEnterManually"

						increment ItemGroup.LastItem by LocalIncrement
						Item = NewItemNumber
					else
						required
							"ItemIsRequired"

					if (ItemGroup.NumericItemNumber and Item entered)
						must be numeric
							"ItemGroupRequiresItemToBeNumeric"

				ClinicalSystemUse 

					if (ItemGroup.SetForClinicalUseToTrue)
						ClinicalSystemUse = true 

			Action Rules

				if (!FromExternal)
					if (HasContractLinesByManufacturer)
						confirmation required
							"ContractLinesExistForSpecialItemsWithTheSameManufacturerInformation;UseContractLinesWithMatchingManufacturerInformationToMaintainAfterAddingItem;ClickOKToContinue"

			Exit Rules
				include BuildTextIndexes
				if (not Copied)	
					if (IsCatchWeightItem)
						invoke CreateItemUOM ItemUOM
							invoked.ItemGroup						= ItemGroup
							invoked.Item							= Item
							invoked.UnitOfMeasure					= StockUOM
							invoked.UOMConversion					= 1
							invoked.TrackedIn						= true
							invoked.ValidForInventoryTransactions	= 1
							invoked.ValidForSellPrice				= 1
							invoked.PackingWeight					= StockWeight
							invoked.PackingVolume					= StockVolume

						invoke CreateItemUOM ItemUOM
							invoked.ItemGroup						= ItemGroup
							invoked.Item							= Item
							invoked.UnitOfMeasure					= SecondaryUOM
							invoked.UOMConversion					= SecondaryUOMConversion
							invoked.ValidForInventoryTransactions	= 2
							invoked.ValidForSelling					= 1
							invoked.ValidForBuying				 	= 1
							invoked.PackingWeight					= StockWeight * SecondaryUOMConversion
							invoked.PackingVolume					= StockVolume * SecondaryUOMConversion
					else
						invoke CreateItemUOM ItemUOM
							invoked.ItemGroup						= ItemGroup
							invoked.Item							= Item
							invoked.UnitOfMeasure					= StockUOM
							invoked.UOMConversion					= 1
							invoked.TrackedIn						= true
							invoked.ValidForInventoryTransactions	= 1
							invoked.ValidForSelling					= 1
							invoked.ValidForSellPrice				= 1
							invoked.ValidForBuying					= 1
							invoked.PackingWeight					= StockWeight
							invoked.PackingVolume					= StockVolume

				if (ManufacturerNumber entered)
					if (RecallProductItemByManufNumberOnlyRel exists)
						for each RecallProductItemByManufNumberOnlyRel 
							if (each.Item !entered
							and each.CanUpdateItemOnNotice)
								invoke UpdateItemFromExternal each 
									invoked.ParmItem = Item 
					if (RecallProductItemByManufRel exists)
						for each RecallProductItemByManufRel 
							if (each.Item !entered
							and each.CanUpdateItemOnNotice)
								invoke UpdateItemFromExternal each 
									invoked.ParmItem = Item 
		
		CopyItem is a Create Action
			completion message is "ItemHasBeenCopied"

			Parameters
				PrmItemGroup				is an ItemGroup
				PrmFromItem					is an Item
				PrmNewItem					is like Item
				PrmCopyComments				is Boolean
				PrmCopyAttachments			is Boolean
				PrmCopyItemLocations		is Boolean
				PrmCopyItemReorder			is Boolean
				PrmNewManufacturer         is a Manufacturer  
				PrmNewManufacturerNumber   is a ManufacturerNumber 
			Parameter Rules
				PrmItemGroup
					required
				PrmFromItem
					required
					constraint (PrmFromItem exists)
						"FromItemDoesNotExist"
				PrmNewItem
					if (PrmItemGroup.AutomaticItemNumbering = false)
						constraint (PrmNewItem entered)
							"MustEnterANewItem"
				PrmNewManufacturer 
					initial value is PrmFromItem.Manufacturer 
				PrmNewManufacturerNumber 
					initial value is PrmFromItem.ManufacturerNumber 

			Action Rules
				invoke Create this instance
					fill in fields from PrmFromItem
						except invoked.InventorySequence
						except invoked.AddedDate
						except invoked.CreatedBy
						except invoked.Item
						except invoked.FromWorksheetResult
						except invoked.Manufacturer 
						except invoked.ManufacturerNumber 
					initialize invoked.UPCExists
					initialize invoked.HIBCCItemUPNExists
					initialize invoked.UCCEANItemUPNExists
					initialize invoked.SKUExists
					initialize invoked.NationalDrugCodeExists
					initialize invoked.CustomerOrderReturnDate
					initialize invoked.LastUpdateDate
					initialize invoked.LastUpdateBy
					initialize invoked.EffectiveDate
					initialize invoked.ExpirationDate
					initialize invoked.TextSearch
					invoked.Manufacturer       = PrmNewManufacturer
					invoked.ManufacturerNumber = PrmNewManufacturerNumber 
					invoked.NotAvailableForUse = false
					invoked.CopiedFromItem          = PrmFromItem
					if (PrmItemGroup.AutomaticItemNumbering = false)
						invoked.Item                = PrmNewItem
					if (not PrmFromItem.IsRecipeManagementInUse)
						initialize invoked.Recipe
						initialize invoked.Ingredient

				LocalNewItem    = this instance.Item

				for each PrmFromItem.ItemUOM set
					invoke Create ItemUOM
						fill in fields from each
						invoked.ItemGroup		     = PrmItemGroup
						invoked.Item          	 	 = LocalNewItem
						invoked.LocalCreateFromCopy  = true

				if  (IsRecipeManagementInUse
				and (Item.Recipe or Item.Ingredient))
					for each PrmFromItem.ItemRecipeUOM set
						invoke Create ItemRecipeUOM
							fill in fields from each
							invoked.ItemGroup			= PrmItemGroup
							invoked.Item				= LocalNewItem
							invoked.LocalCreateFromCopy = true

				if (PrmCopyComments = true)
					for each PrmFromItem.ItemComment set
						invoke Create ItemComment
							fill in fields from each
								except invoked.BeginDate
								except invoked.EndDate
							invoked.ItemGroup     = PrmItemGroup
							invoked.Item          = LocalNewItem
					for each PrmFromItem.ItemCommentAttachment set
                        invoke Create ItemCommentAttachment
                            fill in fields from each
                            invoked.ItemGroup     = PrmItemGroup
                            invoked.Item          = LocalNewItem
							invoked.Attachment.File     = each.Attachment.File                      
                            invoked.Attachment.MimeType = each.Attachment.MimeType
                            invoked.Attachment.Title    = each.Attachment.Title

				if (PrmCopyAttachments = true)
					for each PrmFromItem.ItemAttachment set
						invoke Create ItemAttachment
							fill in fields from each
							invoked.ItemGroup     = PrmItemGroup
							invoked.Item          = LocalNewItem
							invoked.Attachment.File     = each.Attachment.File                      
                            invoked.Attachment.MimeType = each.Attachment.MimeType
                            invoked.Attachment.Title    = each.Attachment.Title

				if (PrmCopyItemLocations = true)
					LocalCopyItem = PrmFromItem
					for each CopyItemLocationsRel
						invoke Create ItemLocation
							fill in fields from each
								except invoked.StockOnHandQuantity
								except invoked.SecondaryQuantity
								except invoked.UnallocatedQuantity
								except invoked.AllocatedQuantity
								except invoked.InProcessQuantity
								except invoked.BackorderedQuantity
								except invoked.InspectionHoldQuantity
								except invoked.UnreservedQuantity
								except invoked.ReservedQuantity
								except invoked.InspectionHoldCatchWeightQuantity
								except invoked.OnOrderQuantity
								except invoked.WorkInProgressQuantity
								except invoked.IntransitQuantity
								except invoked.AverageStockOnHandQuantity
								except invoked.LastLeadtime
								except invoked.PreviousLeadtime
								except invoked.LastCountDate
								except invoked.LastCycleCountDate
								except invoked.LastUpdateDate
								except invoked.HasTransactionActivity
								except invoked.LastReceiptCost
								except invoked.LastIssueCost
								except invoked.AverageAddOnCost
								except invoked.AverageCost
								except invoked.AddedDate
								except invoked.FreezeDate
								except invoked.FrozenForPhysicalInventory
								except invoked.LastIssueDate
								except invoked.TransactionCounter
								except invoked.LastReceiptDate
								except invoked.LastTurnoverCalculationDate
								except invoked.TurnoverRate
								except invoked.TransactionCount
								except invoked.CountAccuracy
								except invoked.FromWorksheetResult
							if (not PrmCopyItemReorder)
								initialize invoked.ReorderPolicy
								initialize invoked.ReorderDocument
								initialize invoked.ReorderQuantityCode
								initialize invoked.ReorderPointCode
								initialize invoked.ReorderPoint
								initialize invoked.ReorderQuantity
								initialize invoked.ReceivingDays
								initialize invoked.SuggestedReorderPoint
								initialize invoked.AutomaticPurchaseOrder
								initialize invoked.OrderMultiple
								initialize invoked.EconomicOrderQuantity
								initialize invoked.SafetyStock
								initialize invoked.MaximumOrderQuantity
								initialize invoked.MinimumOrderQuantity
								initialize invoked.LocalFromCopy
							else
								invoked.LocalFromCopy	= true
							invoked.Item				= LocalNewItem

						if (each.HasItemLocationStockUOM)
							for each each.AllLocationItemUOMRel
								invoke Create LocationItemUOM
									fill in fields from each


									invoked.Item = LocalNewItem


				if (PrmCopyItemReorder)
					LocalCopyItem = PrmFromItem
					for each NonParItemReplenishSourcesRel
						LocalCompany  							= each.Company
						LocalLocation 							= each.InventoryLocation
						if (NewItemLocationRel exists)
							invoke Create each
								invoked.Item					= LocalNewItem
								invoked.Company					= each.Company
								invoked.InventoryLocation		= each.InventoryLocation
								invoked.ItemReplenishmentSource.ReplenishmentPriority = each.ItemReplenishmentSource.ReplenishmentPriority
								invoked.Vendor					= each.Vendor
								invoked.PurchaseFromLocation	= each.PurchaseFromLocation
								invoked.ReplenishFrom			= each.ReplenishFrom

			Exit Rules


		RequestNewItem is a Create RequestAction


			action comment required
			request action process is RequestNewItem
			request action linkback webapp is ItemMasterSpecialist
			workflow event title is "New_Item_Request.<Description>|Priority:<RequestPriority>|NeededBy:<NeededBy>"
			allow user fields as parameters
			Parameters
				RequesterActor				is an Actor
			 	RequestedBy					is Alpha 100
	 			RequesterPhone				is a Telephone 
	 				holds pii
			 	RequesterEmail				is an EmailAddress 
			 		holds pii
				RequestPriority				is Numeric 1
					States
						High	value is 1
						Medium	value is 2
						Low		value is 3
				NeededBy					is Date
				Notes						is Text

				ItemGroup
				Item
				Picture						is an ImageAttachment	
				Reference1					is a Reference
				Reference2					is a Reference
				Description
				Description2				is a Description
				Description3
				StockUOM					is a UnitOfMeasure
				CatchWeightCode				is AlphaUpper size 1
					States
						NotCatchWeight				value is "N"
						AllTransactionsRequireBoth	value is "A"
						IssueRequiresBoth			value is "I"
						ReceiptRequiresBoth			value is "R"
				SecondaryUOM				is a UnitOfMeasure
				SecondaryUOMMultiplier		is an UOMMultiplier
				SecondaryUOMConversion		is an UOMConversion
				CatchWeightVariancePercent
				GenericName
				FreightClass
				PurchasingClass
				InventoryClass
				SalesClass
				PPEClass
				Manufacturer
				ManufacturerNumber
				HazardCode
				PurchaseTaxable
				PurchaseTaxCode				is a TaxCode
				ProductTaxCategory
				HarmonizeCode
				StockWeight
				StockVolume
				NumberOfDecimalsQuantity
				NumberOfDecimalsCost
				NumberOfDecimalsPrice		is a NumberOfDecimalsCost
				LotTracked
				SerialTracked
				CertificationRequired		is Boolean
				KitItem						is Boolean
				BrokenCaseCharge			is Boolean
				ReplacementItem				is an Item
				AddedDate					is Date
				MSDSRequired				is Boolean
				Active						is Boolean
				UsageIdentifier				is an ItemUsageIdentifier
				Consignment					is Boolean
				ICNCode
				UNSPSCCode
				CapitalTechnical
				CommodityCode				is a CommCodes
				AllowCustomerOrderReturns	is AlphaUpper 1
					States
						Yes		value is "Y"
						No		value is "N"
						Limit	value is "L"
				CustomerOrderReturnDate		is Date
				EffectiveDate				is Date
				ExpirationDate				is Date
				IssueAccount				is a FinanceCodeBlockAccountOnly
				TransientAttachment			is a DocumentAttachment
					default label is "Attachment"
				ChargeNumber
				Latex						is Numeric 1
					States
						Unspecified					value is 0
						PackageIndicatesLatex		value is 1
						PackageDoesNotIndicateLatex	value is 2
						NotApplicable				value is 3
				HasExpirationDate			is Boolean
				PatientChargeable			is Boolean
				ClinicalSystemUse			is Boolean
				HCPCSCode
				ConsignCode
				HSNSACCode
				CriticalItem				is Boolean
				PersonalProtectiveEquipment	is Boolean
				Sterile                     is Boolean
				Reprocessed                 is Boolean
				Pharmaceutical              is Boolean
				SingleUse                   is Boolean 
				Dressing                    is Boolean
				Reusable                    is Boolean 
				Analytics                   is Boolean 
				Implantable                 is Boolean 
				Drugs                       is Boolean 
				Instrument                  is Boolean 
				Narcotic                    is Boolean 
				ContainsHumanTissue			is Boolean 	

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ItemGroup
					if (actor.final approver)
						required

				Item
					if (actor.final approver)
						if (!ItemGroup.AutomaticItemNumbering)
							required
						else
							cannot be entered
								"ItemNumberAutoAssigned,CannotEnterManually"

						if (ItemGroup.NumericItemNumber and Item entered)
							must be numeric
								"ItemGroupRequiresItemToBeNumeric"

						if (Item entered
						and Item exists)
							cannot be entered
								"ItemAlreadyExists"

				Description
					required

				StockUOM
					if (actor.final approver)
						required

				StockWeight
					constraint (StockWeight > 0)
						"StockWeightCannotBeNegative" 

				StockVolume
					constraint (StockVolume > 0)
						"StockCubicCannotBeNegative"
						 
			Action Rules
				invoke Create this instance
					fill in user fields from parameters
					include AddCreateRequestItem

				if (TransientAttachment entered)
					invoke Create ItemAttachment
						fill in fields from this instance
						invoked.Attachment = TransientAttachment

		RequestUpdateItem is an Update RequestAction
			action comment required
			request action process is RequestUpdateItem
			request action linkback webapp is ItemMasterSpecialist
			allow user fields as parameters
			Parameters
				RequesterActor
			 	RequestedBy
	 			RequesterPhone
			 	RequesterEmail
				RequestPriority
				NeededBy
				Notes

				ItemGroup
				Picture
				Reference1
				Reference2
				Description
				Description2
				Description3
				StockUOM
				CatchWeightCode
				SecondaryUOM
				SecondaryUOMMultiplier
				SecondaryUOMConversion
				CatchWeightVariancePercent
				GenericName
				FreightClass
				PurchasingClass
				InventoryClass
				SalesClass
				PPEClass
				Manufacturer
				ManufacturerNumber
				HazardCode
				LocalCode
				PurchaseTaxable
				PurchaseTaxCode
				ProductTaxCategory
				HarmonizeCode
				StockWeight
				StockVolume
				NumberOfDecimalsQuantity
				NumberOfDecimalsCost
				NumberOfDecimalsPrice
				LotTracked
				SerialTracked
				CertificationRequired
				KitItem
				BrokenCaseCharge
				ReplacementItem
				AddedDate
				MSDSRequired
				Active
				UsageIdentifier
				Consignment
				ICNCode
				UNSPSCCode
				CapitalTechnical
				CommodityCode
				AllowCustomerOrderReturns
				CustomerOrderReturnDate
				EffectiveDate
				ExpirationDate
				IssueAccount
				Sterile                    
				Reprocessed                
				Pharmaceutical             
				SingleUse                   
				Dressing                   
				Reusable                    
				Analytics                   
				Implantable                 
				Drugs                       
				Instrument                  
				Narcotic                    
				ContainsHumanTissue			 	

			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.PresentationName
					default to RequesterActor.PersonName.PresentationName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ItemGroup
					if (actor.final approver)
						required

				Description
					required

				StockUOM
					if (actor.final approver)
						required

				StockWeight
					constraint (StockWeight > 0)
						"StockWeightCannotBeNegative" 

				StockVolume
					constraint (StockVolume > 0)
						"StockCubicCannotBeNegative"

			Action Rules
				invoke Update
					fill in user fields from parameters
					include AddCreateRequestItem

		Update is an Update Action
			Action Rules

				if (SerialTracked.SerialRequiredAtIssue)
					constraint	(TrackUomSellRel exists)
						"SerialTrackedFlag=I,SellUOMMust=StockUOM"  							
					constraint	(TrackUomSellPriceRel exists)
						"SerialTrackedFlag=I,SellPriceUOMMust=StockUOMPrice"  					

				if (SerialTracked.SerialRequiredAtReceipt)
					constraint	(TrackUomSellRel exists)
						"SerialTrackedFlag=R,SellUOMMust=StockUOM"  							
					constraint	(TrackUomSellPriceRel exists)
						"SerialTrackedFlag=R,SellPriceUOMMust=StockUOM" 						
					constraint	(TrackUomBuyRel exists)
						"SerialTrackedFlag=R,BuyUOMMust=StockUOM"

				if (StockUOM changed)
					for each AllItemLocationsRel
						if (each.InventoryTracked)
							if (!each.QuantitiesExist)
								invoke UpdateFromItem each

				if (UsageIdentifier changed)
					if (UsageIdentifier.Drugs)
						Drugs = true
					else
					if (UsageIdentifier.Instrument)
						Instrument = true
					else
					if (UsageIdentifier.Reusable)
						Reusable = true
					else
					if (UsageIdentifier.Pharmacy)
						Pharmaceutical = true
					else
					if (UsageIdentifier.Implant)
						Implantable = true
					else
					if (UsageIdentifier.Analytics)
						Analytics = true 			
					else
					if (UsageIdentifier.Narcotic)
						Narcotic = true 
					else
					if (UsageIdentifier.Dressing) 
						Dressing = true 

				if (ContractLineFields changed)
					for each ContractLineItemRel
						invoke UpdateFromItem each

				if (Manufacturer changed
				or  ManufacturerNumber changed)
					
					constraint (!ItemGroup.NoDirectUpdateToManufacturerInformation)
						"NotAllowedToUpdateManufacturerOrManufacturerNumberDirectly;Use_Sync_Item_InformationOr_Attribute_UpdateProcessToUpdate"
					
					if (Manufacturer = blank
					or  ManufacturerNumber = blank)
						constraint (!HasConsolidatedItemMaster)
							"CannotChangeManufacturerOrManufacturerNumberToBlankForItemWithConsolidatedItemLevelMasterDataRecord"
					if (ManufacturerNumber changed)
						if (RecallProductItemByManufNumberOnlyRel exists)
							for each RecallProductItemByManufNumberOnlyRel 
								if (each.Item !entered
								and each.CanUpdateItemOnNotice)
									invoke UpdateItemFromExternal each 
										invoked.ParmItem = Item 
					if (RecallProductItemByManufRel exists)
						for each RecallProductItemByManufRel 
							if (each.Item !entered
							and each.CanUpdateItemOnNotice)
								invoke UpdateItemFromExternal each 
									invoked.ParmItem = Item 
					if (PreferenceCardComponentItemRel exists)
						for each PreferenceCardComponentItemRel
							invoke Update each

			Exit Rules

				if (TextSearchable changed)
					include BuildTextIndexes

				if (StockUOM changed)
					if (StockUOMRel not exists)
						LocalValidTrans		= OriginalStockUOMRel.ValidForInventoryTransactions
						LocalValidSell		= OriginalStockUOMRel.ValidForSelling
						LocalValidSellPrice	= OriginalStockUOMRel.ValidForSellPrice
						LocalValidBuy		= OriginalStockUOMRel.ValidForBuying
						LocalPackingWeight	= OriginalStockUOMRel.PackingWeight
						LocalPackingVolume	= OriginalStockUOMRel.PackingVolume

						invoke DeleteItemUOM OriginalStockUOMRel

						invoke CreateItemUOM ItemUOM
							invoked.ItemGroup						= ItemGroup
							invoked.Item							= Item
							invoked.UnitOfMeasure					= StockUOM
							invoked.UOMConversion					= 1
							invoked.TrackedIn						= true
							invoked.ValidForInventoryTransactions	= LocalValidTrans
							invoked.ValidForSelling					= LocalValidSell
							invoked.ValidForSellPrice				= LocalValidSellPrice
							invoked.ValidForBuying					= LocalValidBuy
							invoked.PackingWeight					= LocalPackingWeight
							invoked.PackingVolume					= LocalPackingVolume
					else
						if (not StockUOMRel.TrackedIn)
							invoke UpdateItemUOM StockUOMRel
								invoked.TrackedIn = true

#ifdef module InventoryIntelligence
				if (actor.context.FinanceEnterpriseGroup.IIProvisionCheck)
					if (StockUOM changed
					or  (Active changed
					and !Active)
					or  (Discontinued changed
					and  Discontinued))
						for each AllIIHItemLocationsRel
							invoke ClearRecommendation each
						if (StockUOM changed 
						and IIHItemRel exists)
							invoke Create IIHItemAudit
								invoked.ItemGroup		= ItemGroup
								invoked.IIHItem			= Item
								invoked.BeforeStockUOM	= old StockUOM
	 							invoked.AfterStockUOM	= StockUOM
	 							invoked.UpdateDate		= current timestamp
#endif

				if (CatchWeightCode changed
				and old CatchWeightCode.NotCatchWeight)

					if (SecondaryUOMRel exists)
						invoke UpdateItemUOM SecondaryUOMRel
							invoked.UOMConversion					= SecondaryUOMConversion
							invoked.TrackedIn						= false
							invoked.ValidForInventoryTransactions	= 2
							invoked.ValidForSelling					= 1
							invoked.ValidForSellPrice				= blank
							invoked.ValidForBuying					= 1
							invoked.PackingWeight					= StockWeight * SecondaryUOMConversion
							invoked.PackingVolume					= StockVolume * SecondaryUOMConversion
					else
						invoke CreateItemUOM ItemUOM
							invoked.ItemGroup						= ItemGroup
							invoked.Item							= Item
							invoked.UnitOfMeasure					= SecondaryUOM
							invoked.UOMConversion					= SecondaryUOMConversion
							invoked.ValidForInventoryTransactions	= 2
							invoked.ValidForSelling					= 1
							invoked.ValidForBuying					= 1
							invoked.PackingWeight					= StockWeight * SecondaryUOMConversion
							invoked.PackingVolume					= StockVolume * SecondaryUOMConversion

					invoke UpdateItemUOM StockUOMRel
						invoked.ValidForInventoryTransactions	= 1
						invoked.ValidForSelling					= blank
						invoked.ValidForSellPrice				= 1
						invoked.ValidForBuying					= blank



				if (SecondaryUOMConversion changed)
					invoke UpdateItemUOM SecondaryUOMRel
						invoked.UOMConversion = SecondaryUOMConversion








				if (MajorPurchasingClass changed
				or  MinorPurchasingClass changed
				or  CommodityCode changed)
					invoke UpdateClassesAndCodes PurchaseOrderInterface
						invoked.PrmItemGroup			= ItemGroup
						invoked.PrmItem					= Item
						invoked.PrmMajorPurchasingClass	= MajorPurchasingClass
						invoked.PrmMinorPurchasingClass	= MinorPurchasingClass
						invoked.PrmCommodityCode		= CommodityCode
						invoked.PrmActor				= actor

				if (UOMConversion changed)
					if (ItemContractLinesRel exists)
						for each ItemContractLinesRel 
							if (each.UOM.UnitOfMeasure = StockUOM
							and UOMConversion > 0)
								invoke FastUpdate each 
									invoked.UOMConversion = UOMConversion 
				include ConsolidatedItemMasterRules 					

		ContractCostChanged is an Instance Action
			restricted
			refresh and lock this instance
			
			Action Rules
				LastUpdateBy = actor

		CreateTierQualifierItem is an Instance Action 
			valid when (HasContextContractAndNoQualifierItem)
			Action Rules 

				invoke Create TierQualifierItem 
					invoked.ContractGroup   			= ItemGroup
					invoked.Contract					= ContextContract 
					invoked.ItemNumber  				= Item 
					invoked.Manufacturer        		= Manufacturer
					invoked.ManufacturerNumber  		= ManufacturerNumber 
    				invoked.QualifiedOrCompetitiveItem	= 2
						
		SetUsageIdentifierBooleans is a Set Action 
			restricted 
			Instance Selection 
				where (UsageIdentifier entered)

			Action Rules 

				Instance Rules 

					if (UsageIdentifier.Drugs)
						Drugs = true
					else
					if (UsageIdentifier.Instrument)
						Instrument = true
					else
					if (UsageIdentifier.Reusable)
						Reusable = true
					else
					if (UsageIdentifier.Pharmacy)
						Pharmaceutical = true
					else
					if (UsageIdentifier.Implant)
						Implantable = true
					else
					if (UsageIdentifier.Analytics)
						Analytics = true 			
					else
					if (UsageIdentifier.Narcotic)
						Narcotic = true 
					else
					if (UsageIdentifier.Dressing) 
						Dressing = true 	

		CreateInitialConsolidatedItemMaster is a Set Action 
			restricted 
			Parameters 
				PrmContractGroup	is a ContractGroup 

			Instance Selection 
				where (PrmContractGroup = ItemGroup
				and    Manufacturer entered
				and    ManufacturerNumber entered 
				and    Active
			    and    ItemLocationsForConsolidatedRel exists)

			Action Rules

				Instance Rules 
					if (ConsolidatedItemMasterByManufacturerRel !exists)
						invoke Create ConsolidatedItemMaster 
							invoked.ContractGroup			= ItemGroup 
							invoked.InternalItem    		= Item
							invoked.Manufacturer     		= Manufacturer 
							invoked.ManufacturerNumber  	= ManufacturerNumber 
							invoked.TransientCreateLocation	= true	

		InactivateAssociatedRecords is an Instance Action
			valid when (MoreRecordsToInactivate)

			Action Rules

				for each AllActiveItemLocationsRel
					invoke Update each
						invoked.Active = false

				for each ActiveItemGTINsRel
					invoke UpdateActiveFromItem each
							invoked.SetToInactive = true

				for each ActiveVendorItemRel
					invoke InactivateFromItem each

				for each ActiveKitItemRel
					invoke Update each
						invoked.Active = false

		SetItemToNotAvailableForUse is an Instance Action
			valid when (CanSetToNotAvailable)
			Parameters
				ResetContractLinesToSpecialUsing is Numeric 1
					States
						DoNotReset			value is 0
						VendorItem			value is 1
						ManufacturerNumber	value is 2

			Action Rules
				NotAvailableForUse = true

				for each AllActiveItemLocationsRel
					invoke Update each
						invoked.Active = false

				for each ActiveItemGTINsRel
					invoke UpdateActiveFromItem each
						invoked.SetToInactive = true

				for each ActiveVendorItemRel
					invoke InactivateFromItem each

				for each ActiveKitItemRel
					invoke Update each
						invoked.Active = false

			Exit Rules
				
				if (HasOpenContractLines)
					LocalNotInUseAndHasContractLines = true 
				for each ContractLineItemRel
					invoke CreateInactiveVendorItemError each
						invoked.ResetContractLinesToSpecialUsing = ResetContractLinesToSpecialUsing

				include ConsolidatedItemMasterRules 

		ItemDetailChanged is an Instance Action
			restricted

			Action Rules
				LastUpdateBy = actor

		Delete is a Delete Action
			Entrance Rules
				include DeleteRules
				constraint (AllItemLocationsRel not exists)
					"CannotDeleteItemLocationExists"      

				if (KeywordShadowRel exists)
					invoke Delete KeywordShadowRel

			Action Rules 
				LocalFromDeleted = true 
				include ConsolidatedItemMasterRules 

		BuildTextIndex is an Instance Action
			restricted
			Action Rules
				include BuildTextIndexes







































		UpdateCommodityCode is an Instance Action
			restricted
			Parameters
				PrmCommodityCode is a CommCodes

			Action Rules
				CommodityCode = PrmCommodityCode

			Exit Rules 

				include ConsolidatedItemMasterRules 

		UpdateManufacturerInfo is an Instance Action												
			restricted
			Parameters
				PrmManufacturer			is like Manufacturer
				PrmManufacturerNumber	is a ManufacturerNumber
				PrmDescription			is a Description
				PrmDescription2			is a Description
				PrmDescription3			is a Description3
				FromVendorItem          is Boolean
			Action Rules
				Manufacturer  = PrmManufacturer

				ManufacturerNumber  		= PrmManufacturerNumber
				ManufacturerNumberStripped 	= DerivedStrippedManufacturerNumber

				if (!FromVendorItem)
					Description   = PrmDescription

					Description2  = PrmDescription2

					Description3  = PrmDescription3

			Exit Rules
				invoke BuildTextIndex		
				
				include ConsolidatedItemMasterRules 													

		SyncItemInformation is an Instance Action
			valid when (ItemGroupAllowsItemSync)
			Parameters
				Actor
				ItemGroup
				Item
				UseCurrentItemInformation	is Boolean  
				ReplacedDescription1		is a Description
				ReplacedDescription2		is a Description
				ReplacedDescription3		is a Description3
				PrmManufacturer				is a Manufacturer
				PrmManufacturerNumber		is a ManufacturerNumber
				FromAttributeUpdate         is Boolean 

			Parameter Rules
				Actor
					force default to actor
				ItemGroup
					force default to ItemGroup
				Item
					force default to Item
				ReplacedDescription1
					initial value is Description
					default to Description
					required
						"DescriptionIsRequired"
				ReplacedDescription2
					initial value is Description2
				ReplacedDescription3
					initial value is Description3
				PrmManufacturer
					initial value is Manufacturer
				PrmManufacturerNumber
					initial value is ManufacturerNumber

			Action Rules

				if (ManufacturerNumber entered
				and PrmManufacturerNumber !entered)
					confirmation required
						"ManufacturerNumberWillBeClearedFromItemAndAllRelatedRecords;DoYouWantToContinue?"
				
				if (Manufacturer entered
				and PrmManufacturer !entered 
				and FromAttributeUpdate)
					PrmManufacturer = Manufacturer 

				if (Description2 entered 
				and ReplacedDescription2 !entered)
				
					if (!FromAttributeUpdate)
						confirmation required 
							"Description2WillBeClearedFromItemAndAllRelatedRecords;DoYouWantToContinue?"

					else 
					if (FromAttributeUpdate)
						ReplacedDescription2 = Description2 

				if (Description3 entered
				and ReplacedDescription3 !entered)
					if (!FromAttributeUpdate)
						confirmation required 
							"LongDescriptionWillBeClearedFromItemAndAllRelatedRecords;DoYouWantToContinue?"
					else 
					if (FromAttributeUpdate)
						ReplacedDescription3 = Description3
				
				
				invoke SyncItemInformationForSingleItem ItemMasterSync
					invoked.Actor        			= Actor
					invoked.ItemGroup				= ItemGroup
					invoked.Item                	= Item
					invoked.ReplacedDescription1	= ReplacedDescription1
					invoked.ReplacedDescription2	= ReplacedDescription2
					invoked.ReplacedDescription3	= ReplacedDescription3
					invoked.Manufacturer            = PrmManufacturer
					invoked.ManufacturerNumber      = PrmManufacturerNumber
					invoked.OldDescription1         = Description
					invoked.OldDescription2         = Description2
					invoked.OldDescription3         = Description3
					invoked.OldManufacturer         = Manufacturer
					invoked.OldManufacturerNumber   = ManufacturerNumber
					invoked.LocalFromAttributeUpdate = FromAttributeUpdate

				invoke UpdateManufacturerInfo
					invoked.PrmManufacturer			= PrmManufacturer
					invoked.PrmManufacturerNumber 	= PrmManufacturerNumber
					invoked.PrmDescription			= ReplacedDescription1
					invoked.PrmDescription2			= ReplacedDescription2
					invoked.PrmDescription3			= ReplacedDescription3

		StripAllItems is a Set Action
			restricted
			Parameters
				ItemGroup

			Instance Selection
				where (ItemGroup = ItemGroup
				and    ManufacturerNumberStripped !entered)

			Action Rules
				Instance Rules

					ManufacturerNumberStripped = DerivedStrippedManufacturerNumber

		CalculateItemUsage is an Instance Action
			restricted
			Parameters
				PrmDateRange				is a DateRange
				PrmAdjustmentPercent		is Percent 3
				PrmCompany					is like Company 
				PrmLocation					is like InventoryLocation 
				PrmRequestingLocation		is like RequestingLocation 
				PrmReceiptOrInvoiceUsage	is Numeric 1
					States
						ReceiptUsage			value is 1
						InvoiceUsage			value is 2
						ManualEntryUsage		value is 3
				PrmUsageType				is Numeric 1
					States
						Negotiation			value is 0
						Forecasting			value is 1
						Both				value is 2
				PrmForecastBeginPeriod		is Period
				PrmAnnualize				is Boolean
			Parameter Rules
				PrmAdjustmentPercent
					if (PrmAdjustmentPercent	< 0)
						constraint ((PrmAdjustmentPercent * -1) < 100%)
							"AdjustmentPercentMustBeGreaterThanNegative100%"
				PrmAnnualize
					LocalDaysDifference		= (PrmDateRange.End	- PrmDateRange.Begin)
					constraint ((LocalDaysDifference	<= 31
					and          LocalDaysDifference	>= 28)
					or          (LocalDaysDifference	<= 62
					and          LocalDaysDifference    >= 59)
					or          (LocalDaysDifference    <= 92
					and          LocalDaysDifference    >= 89)
					or          (LocalDaysDifference    <= 123
					and          LocalDaysDifference    >= 120)
					or          (LocalDaysDifference    <= 184
					and          LocalDaysDifference    >= 181))
						"DifferenceOfDatesMustBe1,2,3,4Or6MonthsInOrderToAnnualizeUsage"
				PrmReceiptOrInvoiceUsage
					required
						"ItemUsageCalculationQuantityOptionIsRequired"

			Local Fields
				LocalUsageQuantity						is a Quantity
				LocalPercentOfUsage						is Percent 3
				LocalUsageAmount						is an InternationalAmount
				LocalUsageQuantityAmountArray			is a UsageQuantityAmountArray
				LocalOffContractQuantity				is a Quantity
				LocalOffContractAmount					is an InternationalAmount
				LocalOnContractQuantity					is a Quantity
				LocalOnContractAmount					is an InternationalAmount
				LocalQuantity							is a Quantity
				LocalAmount								is an InternationalAmount
				LocalDate								is Date
				LocalDaysDifference						is Numeric 8
				LocalMonthlyUsageQuantity				is a Quantity
				LocalMonthlyUsageAmount					is an InternationalAmount
				LocalManualAlreadyExists				is Boolean
				LocalForecastDate						is Date

			Action Rules
				LocalPeriod 	= 1
				while (LocalPeriod	< 13)
					if (LocalPeriod		= 1)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= PrmDateRange.Begin
					else
					if (LocalPeriod		= 2)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 1 month)
					else
					if (LocalPeriod		= 3)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 2 months)
					else
					if (LocalPeriod		= 4)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 3 months)
					else
					if (LocalPeriod		= 5)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 4 months)
					else
					if (LocalPeriod		= 6)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 5 months)
					else
					if (LocalPeriod		= 7)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 6 months)
					else
					if (LocalPeriod		= 8)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 7 months)
					else
					if (LocalPeriod		= 9)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 8 months)
					else
					if (LocalPeriod		= 10)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 9 months)
					else
					if (LocalPeriod		= 11)
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 10 months)
					else
						LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		= (PrmDateRange.Begin + 11 months)

					LocalPeriod 			+= 1

				initialize LocalUsageQuantity
				initialize LocalUsageAmount
				initialize LocalOffContractQuantity
				initialize LocalOffContractAmount
				LocalManualAlreadyExists	= false
				if (PrmReceiptOrInvoiceUsage.ManualEntryUsage)
					initialize LocalOnContractQuantity
					initialize LocalOnContractAmount
					initialize LocalUsageQuantityAmountArray
					LocalCompany			= PrmCompany
					LocalLocation			= PrmLocation
					LocalReqLocation		= PrmRequestingLocation
					LocalDateRange			= PrmDateRange
					if (ManualItemmastUsagesRel exists)
						LocalManualAlreadyExists	= true
				else
					for each PurchasingCompaniesRel
						LocalCompany		= each.Company
						LocalDateRange		= PrmDateRange
						if (PrmReceiptOrInvoiceUsage.ReceiptUsage)
							for each PurchaseOrderReceiptLinesByDateRel
								if ((each.Company				= PrmCompany
								or  PrmCompany					not entered)
								and (each.ShipToLocation		= PrmLocation
								or  PrmLocation			not entered))
									LocalQuantity 				= (each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier)
									LocalAmount					= ((each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier) * (each.OriginalUnitCost / each.VendorPriceUOMMultiplier))
									LocalDate					= each.ReceivedDate
									LocalUsageQuantity 			+= LocalQuantity
									LocalUsageAmount			+= LocalAmount
									LocalPeriod					= 1
									while (LocalPeriod		< 13)
										if (LocalPeriod		< 12)
											if (LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate			<= LocalDate
											and LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod + 1].PeriodBeginDate 		> LocalDate)
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity			+= LocalQuantity
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount				+= LocalAmount
												LocalPeriod		= 13
											else
												LocalPeriod		+= 1
										else
											if (LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate		<= LocalDate
											and LocalDateRange.End 	> LocalDate)
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity			+= LocalQuantity
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount				+= LocalAmount
												LocalPeriod		= 13
											else
												LocalPeriod		+= 1
									if (each.PurchaseOrderLine.Contract	not entered)
										LocalOffContractQuantity	+= (each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier)
										LocalOffContractAmount		+= ((each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier) * (each.OriginalUnitCost / each.VendorPriceUOMMultiplier))
									else
										LocalOnContractQuantity		+= (each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier)
										LocalOnContractAmount		+= ((each.EnteredReceivedQuantity * each.ReceivedUOMMultiplier) * (each.OriginalUnitCost / each.VendorPriceUOMMultiplier))
						else
						if (PrmReceiptOrInvoiceUsage.InvoiceUsage)
							for each InvoiceLineFactsForItemByDateRel
								if ((each.CompanyPurchaseOrder.PurchasingCompany	= PrmCompany
								or  PrmCompany								not entered)
								and (each.Location								= PrmLocation
								or 	PrmLocation								not entered))
									LocalQuantity 			= (each.MatchedQuantity * each.VpriUomMult)
									LocalAmount				= each.InvoiceExtendedCost
									LocalUsageQuantity 		+= LocalQuantity
									LocalUsageAmount		+= LocalAmount
									LocalDate				= each.InvoiceDate
									LocalPeriod				= 1
									while (LocalPeriod		< 13)
										if (LocalPeriod		< 12)
											if (LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate			<= LocalDate
											and LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod + 1].PeriodBeginDate 		> LocalDate)
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity			+= LocalQuantity
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount				+= LocalAmount
												LocalPeriod		= 13
											else
												LocalPeriod		+= 1
										else
											if (LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].PeriodBeginDate			<= LocalDate
											and LocalDateRange.End 																		> LocalDate)
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity			+= LocalQuantity
												LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount				+= LocalAmount
												LocalPeriod		= 13
											else
												LocalPeriod		+= 1
									if (each.CmContract	not entered)
										LocalOffContractQuantity	+= (each.MatchedQuantity * each.VpriUomMult)
										LocalOffContractAmount		+= each.InvoiceExtendedCost
									else
										LocalOnContractQuantity		+= (each.MatchedQuantity * each.VpriUomMult)
										LocalOnContractAmount		+= each.InvoiceExtendedCost

				if (LocalUsageQuantity	entered
				or (PrmReceiptOrInvoiceUsage.ManualEntryUsage
				and !LocalManualAlreadyExists))
					LocalPercentOfUsage			= (100% + PrmAdjustmentPercent)
					LocalUsageQuantity			= LocalUsageQuantity * LocalPercentOfUsage
					LocalUsageAmount			= LocalUsageAmount * LocalPercentOfUsage
					LocalOffContractQuantity	= LocalOffContractQuantity * LocalPercentOfUsage
					LocalOffContractAmount		= LocalOffContractAmount * LocalPercentOfUsage
					LocalOnContractQuantity		= LocalOnContractQuantity * LocalPercentOfUsage
					LocalOnContractAmount		= LocalOnContractAmount * LocalPercentOfUsage
					for each LocalUsageQuantityAmountArray.UsageQuantityAmount
						each.UsageQuantity	= each.UsageQuantity * LocalPercentOfUsage
						each.UsageAmount	= each.UsageAmount * LocalPercentOfUsage

					LocalCompany								= PrmCompany
					LocalLocation								= PrmLocation
					LocalReqLocation							= PrmRequestingLocation
					LocalDateRange								= PrmDateRange
					LocalYear									= PrmForecastBeginPeriod year
					LocalMonth									= PrmForecastBeginPeriod month
					LocalDay									= PrmDateRange.Begin day
					LocalForecastDate							= DerivedForecastDate
					invoke Update ItemmastUsageDateRangeRel
						invoked.ItemGroup						= ItemGroup
						invoked.Item							= Item
						invoked.Company							= PrmCompany
						invoked.InventoryLocation				= PrmLocation
						invoked.RequestingLocation				= PrmRequestingLocation
						invoked.ItemmastUsageDateRange.Begin	= PrmDateRange.Begin
						invoked.ItemmastUsageDateRange.End		= PrmDateRange.End
						invoked.UsageType						= PrmUsageType
						invoked.ForecastBeginPeriod				= PrmForecastBeginPeriod
						invoked.UsagePeriod1					= PrmDateRange.Begin
						invoked.UsagePeriod2					= (PrmDateRange.Begin + 1 month)
						invoked.UsagePeriod3					= (PrmDateRange.Begin + 2 months)
						invoked.UsagePeriod4					= (PrmDateRange.Begin + 3 months)
						invoked.UsagePeriod5					= (PrmDateRange.Begin + 4 months)
						invoked.UsagePeriod6					= (PrmDateRange.Begin + 5 months)
						invoked.UsagePeriod7					= (PrmDateRange.Begin + 6 months)
						invoked.UsagePeriod8					= (PrmDateRange.Begin + 7 months)
						invoked.UsagePeriod9					= (PrmDateRange.Begin + 8 months)
						invoked.UsagePeriod10					= (PrmDateRange.Begin + 9 months)
						invoked.UsagePeriod11					= (PrmDateRange.Begin + 10 months)
						invoked.UsagePeriod12					= (PrmDateRange.Begin + 11 months)
						invoked.ForecastPeriod1					= LocalForecastDate
						invoked.ForecastPeriod2					= (LocalForecastDate + 1 month)
						invoked.ForecastPeriod3					= (LocalForecastDate + 2 months)
						invoked.ForecastPeriod4					= (LocalForecastDate + 3 months)
						invoked.ForecastPeriod5					= (LocalForecastDate + 4 months)
						invoked.ForecastPeriod6					= (LocalForecastDate + 5 months)
						invoked.ForecastPeriod7					= (LocalForecastDate + 6 months)
						invoked.ForecastPeriod8					= (LocalForecastDate + 7 months)
						invoked.ForecastPeriod9					= (LocalForecastDate + 8 months)
						invoked.ForecastPeriod10				= (LocalForecastDate + 9 months)
						invoked.ForecastPeriod11				= (LocalForecastDate + 10 months)
						invoked.ForecastPeriod12				= (LocalForecastDate + 11 months)

					invoke CreateViaItem ItemmastUsage

						invoked.Item							= Item
						invoked.Company							= PrmCompany
						invoked.InventoryLocation				= PrmLocation
						invoked.RequestingLocation				= PrmRequestingLocation
						invoked.ItemmastUsageDateRange.Begin	= PrmDateRange.Begin
						invoked.ItemmastUsageDateRange.End		= PrmDateRange.End
						invoked.ItemmastUsage.UsageQuantityType	= PrmReceiptOrInvoiceUsage
						invoked.ItemmastUsage.AdjustmentPercent	= PrmAdjustmentPercent
						invoked.ItemmastUsage.Annualized		= 2
						invoked.PercentOfUsage					= LocalPercentOfUsage
						invoked.UsageQuantity					= LocalUsageQuantity
						invoked.UsageAmount						= LocalUsageAmount
						invoked.OffContractQuantity				= LocalOffContractQuantity
						invoked.OffContractAmount				= LocalOffContractAmount
						invoked.OnContractQuantity				= LocalOnContractQuantity
						invoked.OnContractAmount				= LocalOnContractAmount
						invoked.PeriodUsageArray				= LocalUsageQuantityAmountArray
						invoked.ArrayBeginningMonth				= PrmDateRange.Begin month
						invoked.ArrayEndingMonth				= PrmDateRange.End month
						if  (PrmAdjustmentPercent				= 0%
						and  LocalUsageQuantity entered
						and (PrmUsageType.Forecasting
						or   PrmUsageType.Both))
							invoked.OriginalUsage				= true
							invoked.CreationCode				= 1
						else
							invoked.OriginalUsage				= false
							invoked.CreationCode				= 2
						invoked.UsageType						= PrmUsageType
						invoked.ForecastBeginPeriod				= PrmForecastBeginPeriod

				if (LocalUsageQuantity	entered
				and PrmAnnualize)
					LocalDaysDifference		= (PrmDateRange.End	- PrmDateRange.Begin)

					if (LocalDaysDifference <= 31
					and LocalDaysDifference	>= 28)
						LocalUsageQuantity			*= 12
						LocalUsageAmount			*= 12
						LocalOffContractQuantity	*= 12
						LocalOffContractAmount		*= 12
						LocalOnContractQuantity		*= 12
						LocalOnContractAmount		*= 12
						LocalMonthlyUsageQuantity		= (LocalUsageQuantity / 12)
						LocalMonthlyUsageAmount			= (LocalUsageAmount / 12)
						LocalPeriod			= 2
						while (LocalPeriod	< 13)
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity	= LocalMonthlyUsageQuantity
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount		= LocalMonthlyUsageAmount
							LocalPeriod		+= 1

					if (LocalDaysDifference <= 62
					and LocalDaysDifference	>= 59)
						LocalUsageQuantity			*= 6
						LocalUsageAmount			*= 6
						LocalOffContractQuantity	*= 6
						LocalOffContractAmount		*= 6
						LocalOnContractQuantity		*= 6
						LocalOnContractAmount		*= 6
						LocalMonthlyUsageQuantity		= (LocalUsageQuantity / 12)
						LocalMonthlyUsageAmount			= (LocalUsageAmount / 12)
						LocalPeriod			= 3
						while (LocalPeriod	< 13)
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity	= LocalMonthlyUsageQuantity
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount		= LocalMonthlyUsageAmount
							LocalPeriod		+= 1

					if (LocalDaysDifference <= 92
					and LocalDaysDifference	>= 89)
						LocalUsageQuantity			*= 4
						LocalUsageAmount			*= 4
						LocalOffContractQuantity	*= 4
						LocalOffContractAmount		*= 4
						LocalOnContractQuantity		*= 4
						LocalOnContractAmount		*= 4
						LocalMonthlyUsageQuantity		= (LocalUsageQuantity / 12)
						LocalMonthlyUsageAmount			= (LocalUsageAmount / 12)
						LocalPeriod			= 4
						while (LocalPeriod	< 13)
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity	= LocalMonthlyUsageQuantity
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount		= LocalMonthlyUsageAmount
							LocalPeriod		+= 1

					if (LocalDaysDifference <= 123
					and LocalDaysDifference	>= 120)
						LocalUsageQuantity			*= 3
						LocalUsageAmount			*= 3
						LocalOffContractQuantity	*= 3
						LocalOffContractAmount		*= 3
						LocalOnContractQuantity		*= 3
						LocalOnContractAmount		*= 3
						LocalMonthlyUsageQuantity		= (LocalUsageQuantity / 12)
						LocalMonthlyUsageAmount			= (LocalUsageAmount / 12)
						LocalPeriod			= 5
						while (LocalPeriod	< 13)
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity	= LocalMonthlyUsageQuantity
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount		= LocalMonthlyUsageAmount
							LocalPeriod		+= 1

					if (LocalDaysDifference <= 184
					and LocalDaysDifference	>= 181)
						LocalUsageQuantity			*= 2
						LocalUsageAmount			*= 2
						LocalOffContractQuantity	*= 2
						LocalOffContractAmount		*= 2
						LocalOnContractQuantity		*= 2
						LocalOnContractAmount		*= 2
						LocalMonthlyUsageQuantity		= (LocalUsageQuantity / 12)
						LocalMonthlyUsageAmount			= (LocalUsageAmount / 12)
						LocalPeriod			= 7
						while (LocalPeriod	< 13)
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageQuantity	= LocalMonthlyUsageQuantity
							LocalUsageQuantityAmountArray.UsageQuantityAmount[LocalPeriod].UsageAmount		= LocalMonthlyUsageAmount
							LocalPeriod		+= 1

					invoke CreateViaItem ItemmastUsage

						invoked.Item							= Item
						invoked.Company							= PrmCompany
						invoked.InventoryLocation				= PrmLocation
						invoked.RequestingLocation				= PrmRequestingLocation
						invoked.ItemmastUsageDateRange.Begin	= PrmDateRange.Begin
						invoked.ItemmastUsageDateRange.End		= PrmDateRange.End
						invoked.ItemmastUsage.UsageQuantityType	= PrmReceiptOrInvoiceUsage
						invoked.ItemmastUsage.AdjustmentPercent	= PrmAdjustmentPercent
						invoked.ItemmastUsage.Annualized		= 1
						invoked.PercentOfUsage					= LocalPercentOfUsage
						invoked.UsageQuantity					= LocalUsageQuantity
						invoked.UsageAmount						= LocalUsageAmount
						invoked.OffContractQuantity				= LocalOffContractQuantity
						invoked.OffContractAmount				= LocalOffContractAmount
						invoked.OnContractQuantity				= LocalOnContractQuantity
						invoked.OnContractAmount				= LocalOnContractAmount
						invoked.PeriodUsageArray				= LocalUsageQuantityAmountArray
						invoked.ArrayBeginningMonth				= PrmDateRange.Begin month
						invoked.ArrayEndingMonth				= PrmDateRange.End month
						invoked.OriginalUsage					= false
						invoked.UsageType						= PrmUsageType
						invoked.ForecastBeginPeriod				= PrmForecastBeginPeriod
						invoked.CreationCode					= 2

		UpdateItem is an Instance Action
			restricted
			Parameters
				PrmKitItem             is Boolean

			Action Rules
				KitItem	= PrmKitItem
				
		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"


			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord



		BODDataInitialLoadItemCriteria is a Set Action
			restricted
			Parameters
				PrmFromItemGroup		is a ItemGroup
				PrmFromItem				is a Item
				PrmToItem				is a Item
			Parameter Rules

			Instance Selection
				where  (((PrmFromItemGroup entered
				and		  PrmFromItemGroup = ItemGroup)
				or		  PrmFromItemGroup not entered)
				and    ((PrmFromItem entered
				and		 PrmFromItem <= Item)
				or		 PrmFromItem not entered)
				and    ((PrmToItem entered
				and		 PrmToItem >= Item)
				or		 PrmToItem not entered)
				and 	(Active = true))

			Action Rules
				Instance Rules
					if (ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
						LocalActionCode				= LocalActionCode.Create
						LocalFinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
						LocalAccountingEntity		= ItemGroup.InventoryCompaniesRel.Company.GeneralLedgerCompany.AccountingEntity
						LocalCompany 				= ItemGroup.InventoryCompaniesRel.Company
						LocalBaseCost 				= ItemContractLinesRel.BaseCost
						LocalTriggerFrom 			= "Item"
						increment bod id.VariationID
						include TriggerItemServiceRules


		UpdateSecondaryUOMConversion	is an Instance Action
			restricted
			Parameters
				PrmUOMConversion		is like UOMConversion
			Action Rules
				SecondaryUOMConversion	= PrmUOMConversion

		UseThisItemForConsolidatedItemDetail is an Instance Action 
			valid when (CanSwapForConsolidated)
			Parameters 
				ItemToSwapFor	is an Item
				SetTo           is Numeric 1
					States 
						Inactive              value is 0
						NotAvailableForUse    value is 1
						NotForClinicalUse     value is 2
				PrmResetContractLinesToSpecialUsing	is Numeric 1
					default label is "IfContractLinesExistForItemToSwapFor;ResetContractLinesToSpecialUsing"
					States
						DoNotReset			value is 0
						VendorItem			value is 1
						ManufacturerNumber	value is 2

			Parameter Rules 

				ItemToSwapFor 
					initial value is first DuplicateClinicalManufacturerInfoRel.Item 
					required
					constraint (ItemToSwapFor.HasConsolidatedItemMaster)
						"ItemToSwapForMustHaveAConsolidatedItemDetailRecord"
					constraint (ItemToSwapFor.Manufacturer       = Manufacturer
					and         ItemToSwapFor.ManufacturerNumber = ManufacturerNumber) 
						"ItemToSwapForMustHaveTheSameManufacturerInformation"

				PrmResetContractLinesToSpecialUsing
					initial value is 2
			Action Rules 

				invoke Update ItemToSwapFor.first ConsolidatedItemMasterRel 
					invoked.TransientNewItem	= Item 
				if (SetTo = 0
				or  SetTo = 1)
					invoke ChangeItemStatus ItemToSwapFor 
						invoked.PrmStatus 							= "I"
						if (SetTo = 1)
							invoked.PrmMakeItemNotAvailableForUse 		= true 
							invoked.PrmResetContractLinesToSpecialUsing = PrmResetContractLinesToSpecialUsing
				if (SetTo = 2)
					invoke Update ItemToSwapFor 
						invoked.ClinicalSystemUse = false	
		
		RecreateItemKeywords is a Set Action
			restricted
			Parameters
				ParmItemGroup	is an ItemGroup
					default label is "ItemGroup"
			Parameter Rules
				ParmItemGroup
					required
						"ItemGroupIsRequired"

			Instance Selection
				where 	(ItemGroup	= ParmItemGroup
				and		Active)

			Action Rules
				Instance Rules
					invoke BuildTextIndex

        UpdateAttributes is an Instance Action 
            restricted 
            Parameters 
                ParmCommodityCode               is a CommodityCode
                ParmDescription                 is a Description
                ParmDescription2                is a Description
                ParmDescription3                is a Description3        
                ParmManufacturer                is a Manufacturer
				ParmManufacturerNumber          is a ManufacturerNumber 
                ParmUOM                         is a UnitOfMeasureEdit
                ParmUOMConversion               is a UOMConversion   
                ParmUNSPSCCode                  is a UNSPSCCode             
                ParmChargeNumber                is a ChargeNumber 
                ParmLatex                       is Numeric 1
                    States
                        Unspecified                     value is 0
                        PackageIndicatesLatex           value is 1
                        LatexFree                       value is 2
                        NotApplicable                   value is 3
                ParmHCPCSCode                   is a HCPCSCode 
                ParmRemoveHCPCS                 is Boolean
                ParmGMDNPTCode                  is a GMDNPTCode 
                ParmHazardCode                  is a HazardCode 
                ParmGlobalTradeItemNumber       is like ItemGTIN
                ParmNonDefaultGTIN              is like ItemGTIN 
                ParmNonDefaultGTIN2              is like ItemGTIN 
                ParmNonDefaultGTIN3              is like ItemGTIN 
                ParmNonDefaultGTIN4              is like ItemGTIN 
                ParmNonDefaultGTIN5              is like ItemGTIN 												
				ParmLowUOMCodeGTIN              is like ItemGTIN 
                ParmManufacturerForGTIN         is like Manufacturer 
                ParmManufacturerNumberForGTIN   is a ManufacturerNumber
				ParmUpc                         is like ItemUPC
                ParmHibccUpn                    is like HIBCCItemUPN
                ParmLowUOMCodeHibccUPN          is like HIBCCItemUPN
                ParmUccEanUpn                   is like UCCEANItemUPN
                ParmNdcNbr                      is like NationalDrugCode
                ParmSterile                     is Numeric 1
                ParmSingleUse                   is Numeric 1
                ParmReusable                    is Numeric 1
                ParmReprocessed                 is Numeric 1
                ParmImplantable                 is Numeric 1
                ParmContainsHumanTissue         is Numeric 1
                ParmPharmaceutical              is Numeric 1
                ParmDressing                    is Numeric 1
                ParmBioabsorbable               is Numeric 1                
            Action Rules
                LocalUOM                    = ParmUOM.UnitOfMeasure
				if (ParmGlobalTradeItemNumber entered)
                    LocalGTIN               = ParmGlobalTradeItemNumber
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (GTINForLocalUOMRel exists)
						invoke  UpdateActiveFromItem first GTINForLocalUOMRel 
							invoked.SetToInactive = true
							invoked.SetUseAsDefaultPerUOMToFalse = true
		
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmGlobalTradeItemNumber
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.UseAsDefaultPerUOM          = true 
							invoked.Active                      = true

			    if (ParmNonDefaultGTIN entered)
                    LocalGTIN               = ParmNonDefaultGTIN
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmNonDefaultGTIN
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.Active                      = true
							invoked.UseAsDefaultPerUOM          = false 

			    if (ParmNonDefaultGTIN2 entered)
                    LocalGTIN               = ParmNonDefaultGTIN2
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmNonDefaultGTIN2
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.Active                      = true
							invoked.UseAsDefaultPerUOM          = false 

			    if (ParmNonDefaultGTIN3 entered)
                    LocalGTIN               = ParmNonDefaultGTIN3
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmNonDefaultGTIN3
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.Active                      = true
							invoked.UseAsDefaultPerUOM          = false 

			    if (ParmNonDefaultGTIN4 entered)
                    LocalGTIN               = ParmNonDefaultGTIN4
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmNonDefaultGTIN4
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.Active                      = true
							invoked.UseAsDefaultPerUOM          = false 

			    if (ParmNonDefaultGTIN5 entered)
                    LocalGTIN               = ParmNonDefaultGTIN5
                    LocalManufacturer       = ParmManufacturerForGTIN 
                    LocalManufacturerNumber = ParmManufacturerNumberForGTIN
                    
					if (LocalGTINRel exists)
						invoke Update LocalGTINRel 
							invoked.UnitOfMeasure       = ParmUOM.UnitOfMeasure 
							invoked.FromAttributeUpdate = true
					else 
						invoke Create ItemGTIN 
							invoked.ItemGroup					= ItemGroup 
							invoked.Item            			= Item 
							invoked.ItemGTIN                    = ParmNonDefaultGTIN5
							invoked.UnitOfMeasure				= ParmUOM.UnitOfMeasure
							invoked.FullDescription				= Item.Description
							invoked.Manufacturer    			= ParmManufacturerForGTIN
							invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN
							invoked.Active                      = true
							invoked.UseAsDefaultPerUOM          = false 

				if (ParmLowUOMCodeGTIN entered) 
					if (GTINForStockUOMRel exists)
						invoke  UpdateActiveFromItem first GTINForStockUOMRel 
							invoked.SetToInactive 				 = true
							invoked.SetUseAsDefaultPerUOMToFalse = true
					invoke Create ItemGTIN 
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.ItemGTIN                    = ParmLowUOMCodeGTIN
						invoked.UnitOfMeasure				= StockUOM
						invoked.FullDescription				= Item.Description
						invoked.Manufacturer    			= ParmManufacturerForGTIN
						invoked.ManufacturerNumber			= ParmManufacturerNumberForGTIN	
						invoked.Active                      = true 				
						invoked.UseAsDefaultPerUOM          = true
				if (ParmUpc entered)
					invoke Create ItemUPC 
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.ItemUPC         			= ParmUpc
						invoked.UnitOfMeasure.UnitOfMeasure = ParmUOM.UnitOfMeasure
				if (ParmHibccUpn entered)
					if (HIBCCItemUPNForLocalUOMRel exists)
						invoke Delete first HIBCCItemUPNForLocalUOMRel
					invoke Create HIBCCItemUPN 
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.HIBCCItemUPN      			= ParmHibccUpn
						invoked.UnitOfMeasure.UnitOfMeasure = ParmUOM.UnitOfMeasure
				if (ParmLowUOMCodeHibccUPN entered)
					if (HIBCCItemUPNForLocalUOMRel exists)
						invoke Delete first HIBCCItemUPNForLocalUOMRel
					invoke Create HIBCCItemUPN 
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.HIBCCItemUPN      			= ParmLowUOMCodeHibccUPN
						invoked.UnitOfMeasure.UnitOfMeasure = StockUOM
				if (ParmUccEanUpn entered)
					invoke Create UCCEANItemUPN
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.UCCEANItemUPN      			= ParmUccEanUpn
						invoked.UnitOfMeasure.UnitOfMeasure = ParmUOM.UnitOfMeasure				
				if (ParmNdcNbr entered)
					invoke Create NationalDrugCode 
						invoked.ItemGroup					= ItemGroup 
						invoked.Item            			= Item 
						invoked.NationalDrugCode   			= ParmNdcNbr
						invoked.UnitOfMeasure.UnitOfMeasure = ParmUOM.UnitOfMeasure				
				if (ParmCommodityCode entered)
					CommodityCode 				= ParmCommodityCode
				if (ParmDescription entered)
					Description					= ParmDescription
				if (ParmDescription2 entered)
					Description2            	= ParmDescription2
				if (ParmDescription3 entered)
					Description3                = ParmDescription3
				if (ParmHazardCode entered)
					HazardCode                  = ParmHazardCode
				if (ParmUNSPSCCode entered)
					UNSPSCCode                  = ParmUNSPSCCode 
				if (ParmLatex entered)
					Latex                       = ParmLatex
				if (ParmHCPCSCode entered)
					HCPCSCode                   = ParmHCPCSCode
				else 
				if (ParmRemoveHCPCS)
					HCPCSCode                   = blank
				if (ParmGMDNPTCode entered)
					GMDNPTCode                  = ParmGMDNPTCode
				if (ParmChargeNumber entered)
					ChargeNumber                = ParmChargeNumber
				if (ParmSterile = 1)   
					Sterile = true
				else 
				if (ParmSterile = 2)
					Sterile = false					    
				if (ParmSingleUse = 1)   
					SingleUse = true
				else 
				if (ParmSingleUse = 2)
					SingleUse = false			
				if (ParmReusable = 1)   
					Reusable = true
				else 
				if (ParmReusable = 2)
					Reusable = false							   	        
			   	if (ParmReprocessed = 1)
					Reprocessed = true 
				else
				if (ParmReprocessed = 2)
					Reprocessed = false         

			   	if (ParmImplantable = 1)
					Implantable = true 
				else
				if (ParmImplantable = 2)
					Implantable = false     

				if (ParmContainsHumanTissue = 1)   
					ContainsHumanTissue = true
				else 
				if (ParmContainsHumanTissue = 2)
					ContainsHumanTissue = false					    
				if (ParmPharmaceutical = 1)   
					Pharmaceutical = true
				else 
				if (ParmPharmaceutical = 2)
					Pharmaceutical = false			
				if (ParmDressing = 1)   
					Dressing = true
				else 
				if (ParmDressing = 2)
					Dressing = false							   	        
			   	if (ParmBioabsorbable = 1)
					Bioabsorbable = true 
				else
				if (ParmBioabsorbable = 2)
					Bioabsorbable = false         


			Exit Rules

				if  (ParmDescription entered
				or   ParmDescription2 entered
				or   ParmDescription3 entered
				or   ParmManufacturer entered
				or   ParmManufacturerNumber entered)
					invoke SyncItemInformation
						invoked.Actor						= actor
						invoked.ItemGroup					= ItemGroup 
						invoked.Item                    	= Item
						if (ParmManufacturer entered)
							invoked.PrmManufacturer         = ParmManufacturer 
						else 
							invoked.PrmManufacturer         = Manufacturer 
						if (ParmManufacturerNumber entered)
							invoked.PrmManufacturerNumber	= ParmManufacturerNumber
						else 
							invoked.PrmManufacturerNumber   = ManufacturerNumber 
						if (ParmDescription entered)
							invoked.ReplacedDescription1	= ParmDescription 	
						else 
							invoked.ReplacedDescription1    = Description
						if (ParmDescription2 entered)
							invoked.ReplacedDescription2	= ParmDescription2	
						else 
							invoked.ReplacedDescription2    = Description2 
                        if (ParmDescription3 entered)
							invoked.ReplacedDescription3    = ParmDescription3 	
						else 
							invoked.ReplacedDescription3    = Description3
						invoked.FromAttributeUpdate     = true 							

				if (ContractLineFields changed
				or  ParmGlobalTradeItemNumber entered
                or  ParmNonDefaultGTIN entered               
                or  ParmNonDefaultGTIN2 entered              
                or  ParmNonDefaultGTIN3 entered              
                or  ParmNonDefaultGTIN4 entered              
                or  ParmNonDefaultGTIN5 entered              												
				or  ParmLowUOMCodeGTIN entered)
					for each ContractLineItemRel 
						invoke UpdateFromItem each 

				include ConsolidatedItemMasterRules 

		ChangeItemStatus is an Instance Action
			valid when (RecordExists)
			Parameters
				PrmStatus							is AlphaUpper 1
					default label is "Status"
					States
						Active			value is "A"
						Inactive		value is "I"
						Discontinued	value is "D"

				PrmActivateAllVendorItems 			is Boolean
					default label is "ActivateAllVendorItems"
				PrmActivateAllItemLocations			is Boolean
					default label is "ActivateAllItemLocations"

				PrmMakeItemNotAvailableForUse		is Boolean
					default label is "MakeItemNotAvailableForUse"
				PrmResetContractLinesToSpecialUsing	is Numeric 1
					default label is "ResetContractLinesToSpecialUsing"
					States
						DoNotReset			value is 0
						VendorItem			value is 1
						ManufacturerNumber	value is 2

			Parameter Rules
				PrmStatus
					initial value is DerivedItemStatus
					if(PrmStatus = DerivedItemStatus)
						if (Active)
							constraint(!Discontinued)
								"ItemIsAlreadyDiscontinued"
							constraint(Discontinued)
								"ItemIsAlreadyActive"
						else
						if (PrmMakeItemNotAvailableForUse = NotAvailableForUse)	
							constraint(Active)
								"ItemIsAlreadyInactive"
					if (PrmStatus.Discontinued)
						constraint (Active)
							"CannotSetToDiscontinued;ItemIsInactive"
					if (PrmStatus.Inactive)
						for each AllActiveItemLocationsRel
							constraint (each.StockOnHandQuantity = 0)
								"CannotInactivateItem;ItemHasStockOnHandAtLocation<each.InventoryLocation>"
						for each KitComponentItemRel
							constraint (!each.HasActiveKitItem)
								"CannotInactivateItem,ItIsAnActiveKitComponent"	

				PrmActivateAllVendorItems
					initial value is true

				PrmActivateAllItemLocations
					initial value is true

			Action Rules
				if (PrmStatus.Active) 
					Active 					= true
					NotAvailableForUse  	= false
					Discontinued			= false

					if (PrmActivateAllVendorItems)
						for each AllVendorItemRel
							if (not each.Active)
								if (each.DuplicateManufacturerRel exists)
									confirmation required
										"DuplicateRecordsExistForVendorItems;Vendor<each.DuplicateManufacturerRel.Vendor>AndManufacturerNumber<each.DuplicateManufacturerRel.ManufacturerNumber>;VendorItemsMustBeMaintainedManually;DoYouWantToContinue?"
								invoke ActivateFromItem each

					if (PrmActivateAllItemLocations)
						for each InactiveOrDiscontinuedLocationsRel
							invoke Update each
								invoked.Active 			= true
								invoked.Discontinued	= false

					for each ItemGTINsRel
						if (!each.Active)
							invoke UpdateActiveFromItem each
								invoked.SetToActive = true

					for each ItemKitItemRel
						if (!each.Active)
							invoke Update each
								invoked.Active = true

					for each ContractLineItemRel
						invoke RemoveInactiveVendorItemError each

					for each ContractSpecialItemsRel
						invoke SetContractLineToActive each

					include BuildTextIndexes

				else 

				if (PrmStatus.Inactive)
					Active			= false
					Discontinued	= false

					for each AllActiveItemLocationsRel 
						invoke Update each
							invoked.Active = false
							invoked.Discontinued = false

					for each ActiveItemGTINsRel
						invoke UpdateActiveFromItem each
							invoked.SetToInactive = true

					for each ActiveVendorItemRel
						invoke InactivateFromItem each

					for each ActiveKitItemRel
						invoke Update each
							invoked.Active = false

					if (PrmMakeItemNotAvailableForUse = true)
						NotAvailableForUse  = true

						if (PrmResetContractLinesToSpecialUsing.ManufacturerNumber) 
							constraint (ContractLineItemNoManufacturerNumberRel !exists)
								"CannotResetContractLinesUsingManufacturerNumber;AtLeastOneAssociatedContractLineDoesNotHaveAManufacturerNumber"

					invoke Delete KeywordShadowRel

				else 

				if (PrmStatus.Discontinued)
					Discontinued = true

					for each NotDiscontinuedLocationsRel
						invoke Update each
							invoked.Discontinued = true

			Exit Rules 

				for each PreferenceCardComponentItemRel
					invoke ReviewErrors each

				if (HasOpenContractLines
				and NotAvailableForUse = true
				and PrmResetContractLinesToSpecialUsing > 0)
					LocalNotInUseAndHasContractLines = true
				
				if (PrmStatus.Inactive)
					for each ContractLineItemRel
						invoke CreateInactiveVendorItemError each
							if (PrmMakeItemNotAvailableForUse = true)
								invoked.ResetContractLinesToSpecialUsing = PrmResetContractLinesToSpecialUsing	

				include ConsolidatedItemMasterRules 


		TriggerItemMasterBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				LocalActionCode	            = LocalActionCode.Update
				LocalFinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
				LocalAccountingEntity		= ItemGroup.InventoryCompaniesRel.Company.GeneralLedgerCompany.AccountingEntity
				LocalCompany                = ItemGroup.InventoryCompaniesRel.Company
				LocalBaseCost               = ItemContractLinesRel.BaseCost
				LocalTriggerFrom            = "Item"
				include TriggerItemServiceRules	

		
		SendItemMasterBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(DerivedCleanDocumentID = "Y")
					send ion bod
						bod is ItemMasterCleanDocIDXMLBOD
						bod type is "Sync.ItemMaster"
						accounting entity is LocalCrossAccountingEntity
						document id is DerivedBODDocumentID
						variation id is	BODVariationID
				else
					send ion bod
						bod is ItemMasterXMLBOD
						bod type is "Sync.ItemMaster"
						accounting entity is DerivedCrossAccountingEntity
						document id is DerivedBODDocumentID
						variation id is	BODVariationID	
		
		TriggerItemMasterNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
				RestartFlag 			is Boolean
				PrmFSMInboundBODTracker is Numeric 15
			Action Rules
				LocalBODTrigger = true
				if(ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger)
					invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
						invoked.PrmVerb 					= 1
						invoked.PrmNoun						= "ItemMaster"
						invoked.PrmDirection				= 1
						invoked.PrmTriggerFrom				= "Item"
						invoked.PrmFinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
						invoked.PrmBusinessGroup			= ItemGroup
						invoked.PrmMainUserTemplate			= "IONSyncItemMaster_Item_ST"
					LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
					if(LocalNativeLPLBODTrigger)
						invoke TriggerItemMasterNativeLPL
							invoked.RestartFlag 			= RestartFlag
							invoked.PrmFSMInboundBODTracker = PrmFSMInboundBODTracker
								
		TriggerItemMasterNativeLPL is an Instance Action
			restricted

			Entrance Rules
			Parameters
				RestartFlag 			is Boolean
				PrmFSMInboundBODTracker is Numeric 15
			Action Rules
				LocalBODTrigger = true
				if(RestartFlag)
					LocalFSMInboundBODTracker = PrmFSMInboundBODTracker
				if(DerivedCleanDocumentID = "Y")
					if(RestartFlag and LocalFSMInboundBODTracker entered)
						if (GeneralLedgerCompanyRel exists)
							initialize LocalGeneralLedgerCompany
							initialize LocalAccountingentityCompany
							initialize ItemMasterCleanDocIDXMLBOD
							initialize LocalCrossAccountingEntity
							initialize LocalBODFormattedID
							if(FSMInboundBODTrackerRel exists)
								LocalGeneralLedgerCompany = FSMInboundBODTrackerRel.Reference3
							if(DerivedMultipleFEG = "Y")
								LocalAccountingentityCompany = ItemGroup.BusinessGroup.FinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
							else
								LocalAccountingentityCompany = LocalGeneralLedgerCompany
							if(DerivedTriggerBODBasedOnCrossReference = "Y")
								if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
									LocalCrossAccountingEntity = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
							else
								LocalCrossAccountingEntity = LocalAccountingentityCompany
							initialize ItemLocationCleanDocIDXMLBOD
							if(LocalCrossAccountingEntity entered)
								if (ItemLocationsRel exist)
									for each ItemLocationsRel 
										each.LocalCrossAccountingEntity = LocalCrossAccountingEntity
										ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_Item_Line_CleanDocID_ST document for each
								invoke Update FSMInboundBODTrackerRel
									invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
									invoked.BODDocumentID			= DerivedBODDocumentID
									invoked.BODVariationID			= BODVariationID
									invoked.Status					= 1
									invoked.StartDate				= system current timestamp
									invoked.Direction				= 1
									invoked.BODAccountingEntity		= LocalCrossAccountingEntity
									invoked.Reference1				= ItemGroup
									invoked.Reference2				= Item
									invoked.Reference3				= LocalGeneralLedgerCompany
									invoked.Reference4				= "Item"
									initialize invoked.Error			
									initialize invoked.ErrorMessage
								LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" +LocalCrossAccountingEntity + ":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
								ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_Item_CleanDocID_ST document for this instance
								invoke SendItemMasterBODNativeLPL
									resume on error
				                   		Error            							= true
				                        ErrorMessage     							= error message
				                if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 								= Error
										invoked.ErrorMessage 						= ErrorMessage
										invoked.Status								= 2
										invoked.CloseDate							= system current timestamp
										invoked.BODXML								= ItemMasterCleanDocIDXMLBOD
										invoked.BODID								= LocalBODFormattedID
								else
									invoke Update FSMInboundBODTrackerRel
										invoked.Status									= 3
										invoked.CloseDate								= system current timestamp
										invoked.BODXML									= ItemMasterCleanDocIDXMLBOD
										invoked.BODID									= LocalBODFormattedID
					else
					if(DerivedTriggerBODBasedOnCrossReference = "Y")
						if(FSMCleanDocIDGLCCrossReferenceDetailRel exists)
							for each FSMCleanDocIDGLCCrossReferenceDetailRel
								initialize ItemMasterCleanDocIDXMLBOD
								initialize LocalSourceValue
								initialize LocalCrossAccountingEntity
								initialize LocalBODFormattedID
								initialize LocalGeneralLedgerCompany
								LocalSourceValue = each.SourceValue
								if (LocalSourceValue entered)
									for each LocalSourceValue split on "<DerivedDelimiter>"
										initialize LocalAccountingentityCompany
										LocalAccountingentityCompany = each
								LocalGeneralLedgerCompany = LocalAccountingentityCompany
								if(FSMCleanDocIDGeneralLedgerCompanyRel exists)
									LocalCrossAccountingEntity = each.DestinationValue
									if(LocalCrossAccountingEntity entered)
										initialize ItemLocationCleanDocIDXMLBOD
										if (ItemLocationsRel exist)
											for each ItemLocationsRel 
												each.LocalCrossAccountingEntity = LocalCrossAccountingEntity
												ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_Item_Line_CleanDocID_ST document for each
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "ItemMaster"					
												invoked.BODDocumentID			= DerivedBODDocumentID
												invoked.BODVariationID			= BODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalCrossAccountingEntity
												invoked.Reference1				= ItemGroup
												invoked.Reference2				= Item
												invoked.Reference3				= LocalAccountingentityCompany
												invoked.Reference4				= "Item"
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" +LocalCrossAccountingEntity + ":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
										ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_Item_CleanDocID_ST document for this instance
										invoke SendItemMasterBODNativeLPL
											resume on error
						                   		Error            							= true
						                        ErrorMessage     							= error message
						                if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= LocalBODFormattedID
												invoked.BODXML								= ItemMasterCleanDocIDXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= LocalBODFormattedID
												invoked.BODXML									= ItemMasterCleanDocIDXMLBOD
					else
					if(DerivedTriggerBODBasedOnCrossReference = "N")
						if (GeneralLedgerCompanyRel exists)
							for each GeneralLedgerCompanyRel
								initialize LocalGeneralLedgerCompany
								initialize ItemMasterCleanDocIDXMLBOD
								initialize LocalBODFormattedID
								LocalGeneralLedgerCompany = each.Company
								if(LocalGeneralLedgerCompany entered)
									if(DerivedMultipleFEG = "Y")
										LocalCrossAccountingEntity = ItemGroup.BusinessGroup.FinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
									else
										LocalCrossAccountingEntity = LocalGeneralLedgerCompany
									initialize ItemLocationCleanDocIDXMLBOD
									if (ItemLocationsRel exist)
										for each ItemLocationsRel 
											each.LocalCrossAccountingEntity = LocalCrossAccountingEntity
											ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_Item_Line_CleanDocID_ST document for each
									if(FSMInboundBODTracker not entered)
										invoke Create FSMInboundBODTracker
											assign result to NewBODTracker
											invoked.Verb 					= 1
											invoked.Noun 					= "ItemMaster"					
											invoked.BODDocumentID			= DerivedBODDocumentID
											invoked.BODVariationID			= BODVariationID
											invoked.Status					= 1
											invoked.StartDate				= system current timestamp
											invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
											invoked.Direction				= 1
											invoked.BODAccountingEntity		= LocalCrossAccountingEntity
											invoked.Reference1				= ItemGroup
											invoked.Reference2				= Item
											invoked.Reference3				= LocalGeneralLedgerCompany
											invoked.Reference4				= "Item"
											initialize invoked.Error			
											initialize invoked.ErrorMessage					
										LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
									LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" +LocalCrossAccountingEntity + ":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
									ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_Item_CleanDocID_ST document for this instance
									invoke SendItemMasterBODNativeLPL
										resume on error
					                   		Error            							= true
					                        ErrorMessage     							= error message
					                if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODID								= LocalBODFormattedID
											invoked.BODXML								= ItemMasterCleanDocIDXMLBOD
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODID									= LocalBODFormattedID
											invoked.BODXML									= ItemMasterCleanDocIDXMLBOD
				else
					if(LocalFSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ItemMaster"					
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
							invoked.Reference1				= ItemGroup
							invoked.Reference2				= Item
							invoked.Reference4				= "Item"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
							invoked.Reference1				= ItemGroup
							invoked.Reference2				= Item
							invoked.Reference4				= "Item"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendItemMasterBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= ItemMasterXMLBOD
							invoked.BODID								= DerivedBODFormattedId	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= ItemMasterXMLBOD
							invoked.BODID									= DerivedBODFormattedId
							
		TriggerDeleteItemMaster is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				LocalBODTrigger = true
				if(DerivedCleanDocumentID = "Y")
					if(DerivedTriggerBODBasedOnCrossReference = "Y")
						if(FSMCleanDocIDGLCCrossReferenceDetailRel exists)
							for each FSMCleanDocIDGLCCrossReferenceDetailRel
								initialize ItemMasterCleanDocIDXMLBOD
								initialize LocalSourceValue
								initialize LocalCrossAccountingEntity
								initialize LocalBODFormattedID
								initialize LocalGeneralLedgerCompany
								LocalSourceValue = each.SourceValue
								if (LocalSourceValue entered)
									for each LocalSourceValue split on "<DerivedDelimiter>"
										initialize LocalAccountingentityCompany
										LocalAccountingentityCompany = each
								LocalGeneralLedgerCompany = LocalAccountingentityCompany
								if(FSMCleanDocIDGeneralLedgerCompanyRel exists)
									LocalCrossAccountingEntity = each.DestinationValue
									if(LocalCrossAccountingEntity entered)
										initialize ItemLocationCleanDocIDXMLBOD
										if (ItemLocationsRel exist)
											for each ItemLocationsRel 
												each.LocalCrossAccountingEntity = LocalCrossAccountingEntity
												ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_Item_Line_CleanDocID_ST document for each
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "ItemMaster"					
												invoked.BODDocumentID			= DerivedBODDocumentID
												invoked.BODVariationID			= BODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.BODAccountingEntity		= LocalCrossAccountingEntity
												invoked.Reference1				= ItemGroup
												invoked.Reference2				= Item
												invoked.Reference3				= LocalAccountingentityCompany
												invoked.Reference4				= "Item"
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
										LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" +LocalCrossAccountingEntity + ":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
										ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_Item_CleanDocID_ST document for this instance
										invoke SendItemMasterBODNativeLPL
											resume on error
						                   		Error            							= true
						                        ErrorMessage     							= error message
						                if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= LocalBODFormattedID
												invoked.BODXML								= ItemMasterCleanDocIDXMLBOD
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status									= 3
												invoked.CloseDate								= system current timestamp
												invoked.BODID									= LocalBODFormattedID
												invoked.BODXML									= ItemMasterCleanDocIDXMLBOD
					else
					if(DerivedTriggerBODBasedOnCrossReference = "N")
						if (GeneralLedgerCompanyRel exists)
							for each GeneralLedgerCompanyRel
								initialize LocalGeneralLedgerCompany
								initialize ItemMasterCleanDocIDXMLBOD
								initialize LocalBODFormattedID
								LocalGeneralLedgerCompany = each.Company
								if(LocalGeneralLedgerCompany entered)
									if(DerivedMultipleFEG = "Y")
										LocalCrossAccountingEntity = ItemGroup.BusinessGroup.FinanceEnterpriseGroup + DerivedDelimiter + LocalGeneralLedgerCompany
									else
										LocalCrossAccountingEntity = LocalGeneralLedgerCompany
									initialize ItemLocationCleanDocIDXMLBOD
									if (ItemLocationsRel exist)
										for each ItemLocationsRel 
											each.LocalCrossAccountingEntity = LocalCrossAccountingEntity
											ItemLocationCleanDocIDXMLBOD += template.IONSyncItemMaster_Item_Line_CleanDocID_ST document for each
									if(FSMInboundBODTracker not entered)
										invoke Create FSMInboundBODTracker
											assign result to NewBODTracker
											invoked.Verb 					= 1
											invoked.Noun 					= "ItemMaster"					
											invoked.BODDocumentID			= DerivedBODDocumentID
											invoked.BODVariationID			= BODVariationID
											invoked.Status					= 1
											invoked.StartDate				= system current timestamp
											invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
											invoked.Direction				= 1
											invoked.BODAccountingEntity		= LocalCrossAccountingEntity
											invoked.Reference1				= ItemGroup
											invoked.Reference2				= Item
											invoked.Reference3				= LocalGeneralLedgerCompany
											invoked.Reference4				= "Item"
											initialize invoked.Error			
											initialize invoked.ErrorMessage					
										LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
									LocalBODFormattedID = "infor-nid:" + DerivedTenantID + ":" +LocalCrossAccountingEntity + ":" + DerivedBODDocumentID +"?Item&verb=Sync&TrackerID="+ LocalFSMInboundBODTracker
									ItemMasterCleanDocIDXMLBOD = template.IONSyncItemMaster_Item_CleanDocID_ST document for this instance
									invoke SendItemMasterBODNativeLPL
										resume on error
					                   		Error            							= true
					                        ErrorMessage     							= error message
					                if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODID								= LocalBODFormattedID
											invoked.BODXML								= ItemMasterCleanDocIDXMLBOD
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODID									= LocalBODFormattedID
											invoked.BODXML									= ItemMasterCleanDocIDXMLBOD
				else
					if(LocalFSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ItemMaster"					
							invoked.BODDocumentID			= DerivedBODDocumentID
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= ItemGroup.BusinessGroup.FinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedCrossAccountingEntity
							invoked.Reference1				= ItemGroup
							invoked.Reference2				= Item
							invoked.Reference4				= "Item"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					invoke SendItemMasterBODNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= ItemMasterXMLBOD
							invoked.BODID								= DerivedBODFormattedId	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= ItemMasterXMLBOD
							invoked.BODID									= DerivedBODFormattedId
								
		PopulateRecallNotice is an Instance Action	
			restricted
			Parameters
				PrmRequisitionRecallNotice		is Numeric size 2
					default label is "RequisitionRecallNotice"
				PrmInventoryIssueRecallNotice	is Numeric size 2
					default label is "InventoryIssueRecallNotice"

			Action Rules
				RequisitionRecallNotice 	= PrmRequisitionRecallNotice
				InventoryIssueRecallNotice 	= PrmInventoryIssueRecallNotice
	Action Exit Rules

		LocalFinanceEnterpriseGroup = ItemGroup.BusinessGroup.FinanceEnterpriseGroup
		LocalAccountingEntity      = ItemGroup.InventoryCompaniesRel.Company.GeneralLedgerCompany.AccountingEntity
 		LocalCompany = ItemGroup.InventoryCompaniesRel.Company
		if (ItemGroup.BusinessGroup.FinanceEnterpriseGroup.BODTrigger and (!LocalBODTrigger))
			if (!action type.Delete)
				if (action != "UpdateBODIdFields" and action != "BuildTextIndex" and action != "ContractCostChanged"
					and action != "ItemDetailChanged" and action != "UpdateCommodityCode" and action != "UpdateManufacturerInfo" and action != "SyncItemInformation"
					and action != "UpdateItem" and action != "UpdateSecondaryUOMConversion" and action != "CalculateItemUsage"
					and action != "TriggerItemMasterBOD") 
					if (action != "RecreateItemKeywords" and action != "StripAllItems")
						if (bod id.VariationID < 1)
							LocalActionCode	= LocalActionCode.Create
						else
							LocalActionCode	= LocalActionCode.Update
						increment bod id.VariationID
						LocalBaseCost = ItemContractLinesRel.BaseCost
						LocalTriggerFrom ="Item"
						include TriggerItemServiceRules

						LocalBODTrigger = true









FileCreationLogic.Item is a BusinessClass

	Persistent Fields
	
	Local Fields
					
	Relations
		
	Derived Fields
		ItemHash is a NativeField
			type is Numeric 8
			restricted	
	Actions
	
		GeneratePreviewRecordsForRunGroup is a Set Action
			restricted
			synchronized on untranslatable:"Item_GeneratePreviewRecordsForRunGroup_<FinanceEnterpriseGroupPrm>_<PrmRunGroup>"

			Parameters
				FinanceEnterpriseGroupPrm		is a FinanceEnterpriseGroup
				FileCreationSetupPrm	is a FileCreationSetup
				BeginTimeStamp			is TimeStamp
				EndTimeStamp			is TimeStamp
				AllRecords				is Boolean
				PrmNumberOfRunGroups	is Numeric 3
				PrmRunGroup				is Numeric 3
				
			Local Fields
				LocalItemGroupSelection		is a Item group in subject FileCreationItem

			Instance Selection
				where (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    (PrmNumberOfRunGroups <= 1
				or      (ItemHash % PrmNumberOfRunGroups) = PrmRunGroup)
				and	   (AllRecords
				or	    (update stamp > BeginTimeStamp
				and	     update stamp <= EndTimeStamp)))
			
			Action Rules
				Instance Rules
					LocalItemGroupSelection = FileCreationSetupPrm.EligibilityGroup
					if (LocalItemGroupSelection not entered
					or	Item within LocalItemGroupSelection)
						invoke Create FileCreationRecord
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							invoked.FileCreationSetup	= FileCreationSetupPrm
							invoked.Key1				= ItemGroup
							invoked.Key2				= Item
							invoked.SystemTimeStamp		= EndTimeStamp
							invoked.EffectiveDate		= system current corporate date
							invoked.Status				= 1
