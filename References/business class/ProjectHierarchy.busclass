ProjectHierarchy is a BusinessClass
	owned by Projects
	
	prefix is PRJHy
	
	Ontology
		symbolic key is ProjectHierarchy
		
	Patterns
		implements StaticJava
		           	  
	Context Fields
		ReportingBasis

    Persistent Fields
    	ParentProject 			is a Project
    	DisplayProject			is Alpha 60 
		ProjectType				is a DimensionType
		SystemProject			is Boolean
    	IncludeInBudgetEdit		is Boolean	

    Transient Fields
		StructureProjectNew		is Numeric 1
			derive value from StructureProjectExists
		RetainDefaultValues 	is Boolean

	Rule Blocks

		SetLocalCurrentLevel
			LocalCurrentLevel = 0
			if (LocalProject.Level = 0
			and LocalProject.ProjectType.Summary)
				LocalCurrentLevel	= 1
				LocalCopyProject	= LocalProject
				LocalParentProject	= LocalProject.ParentProject
				while (!LocalParentProject = blank 
				and    !LocalParentProject.IsTopNode)
					LocalProject		= LocalProjectHierarchyRel.ProjectHierarchy.ParentProject
					LocalParentProject	= LocalProject.ParentProject
					LocalCurrentLevel	+= 1
				LocalProject = LocalCopyProject
			else
				LocalCurrentLevel = LocalProject.Level
				
		FindParent
			include SetLocalCurrentLevel
			
			if (LocalCurrentLevel < LocalLevel)
				LocalProject = Project
			else
				while (LocalCurrentLevel > LocalLevel) 
					LocalProject = LocalProjectHierarchyRel.ProjectHierarchy.ParentProject
					include SetLocalCurrentLevel

	Derived Fields
		StructureProjectExists	is a DerivedField
			type is Boolean
			restricted			
			if (this instance exists)
				return true

		DerivedOldPrefix	is a StringField
			type is AlphaUpper 25
			restricted			
			LocalOldStructureSequence
			"_"
			
		DerivedNewPrefix    is a StringField
			type is AlphaUpper 25
			restricted			
			LocalNewStructureSequence
			"_"
			
		DerivedNewProject   is a DerivedField
			type is AlphaUpper 25
			restricted			
			I1 = DerivedOldPrefix size
			I1 += 1
			DerivedNewProject = DerivedNewPrefix + LocalCopyProject[I1:25]

		DerivedLevel1Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 1
			include FindParent
			return LocalProject

		DerivedLevel1ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 1
			include FindParent
			return LocalProject.Description
			
		DerivedLevel1ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 1
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel2Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 2
			include FindParent
			return LocalProject

		DerivedLevel2ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 2
			include FindParent
			return LocalProject.Description
			
		DerivedLevel2ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 2
			include FindParent
			return LocalProject.ProjectType
			
		DerivedLevel3Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 3
			include FindParent
			return LocalProject

		DerivedLevel3ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 3
			include FindParent
			return LocalProject.Description
			
		DerivedLevel3ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 3
			include FindParent
			return LocalProject.ProjectType
			
		DerivedLevel4Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 4
			include FindParent
			return LocalProject

		DerivedLevel4ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 4
			include FindParent
			return LocalProject.Description
			
		DerivedLevel4ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 4
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel5Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 5
			include FindParent
			return LocalProject

		DerivedLevel5ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 5
			include FindParent
			return LocalProject.Description
			
		DerivedLevel5ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 5
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel6Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 6
			include FindParent
			return LocalProject

		DerivedLevel6ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 6
			include FindParent
			return LocalProject.Description
			
		DerivedLevel6ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 6
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel7Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 7
			include FindParent
			return LocalProject

		DerivedLevel7ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 7
			include FindParent
			return LocalProject.Description
			
		DerivedLevel7ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 7
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel8Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 8
			include FindParent
			return LocalProject

		DerivedLevel8ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 8
			include FindParent
			return LocalProject.Description
			
		DerivedLevel8ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 8
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel9Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 9
			include FindParent
			return LocalProject

		DerivedLevel9ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 9
			include FindParent
			return LocalProject.Description
			
		DerivedLevel9ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 9
			include FindParent
			return LocalProject.ProjectType

		DerivedLevel10Parent is a DerivedField
			type is like Project
			LocalProject			= ParentProject
			LocalLevel				= 10
			include FindParent
			return LocalProject

		DerivedLevel10ParentDescription is a DerivedField
			type is like Description
			LocalProject			= ParentProject
			LocalLevel				= 10
			include FindParent
			return LocalProject.Description
			
		DerivedLevel10ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalProject			= ParentProject
			LocalLevel				= 10
			include FindParent
			return LocalProject.ProjectType

		DerivedProjectLevel is a DerivedField
			type is Numeric 3
			LocalProject = Project
			include SetLocalCurrentLevel
			return LocalCurrentLevel

	Local Fields
		TopNodeFound				is Boolean
		LocalProject				is a Project
		LocalCopyProject        	is a Project
		LocalNewProject         	is a Project
		LocalNewStructureSequence   is Numeric 4
		LocalOldStructureSequence   is Numeric 4		
		LocalParentProject    		is a Project
		I1					    	is Numeric 2
		LocalLevel					is Numeric 3
		LocalCurrentLevel			is Numeric 3
		LocalSummaryProject			is like Project
		TemplatesWithIncludeInBudgetEditCount is Numeric size 6
		LocalLastLevel				is Numeric 3
		LocalParentLevel1Found		is Boolean
		LocalParentLevel2Found		is Boolean
		LocalParentLevel3Found		is Boolean
		LocalParentLevel4Found		is Boolean
		LocalParentLevel5Found		is Boolean
		LocalParentLevel6Found		is Boolean
		LocalParentLevel7Found		is Boolean
		LocalParentLevel8Found		is Boolean
		LocalParentLevel9Found		is Boolean
		LocalParentLevel10Found		is Boolean
		LocalParentDisplayOrder		is Numeric 6
						
	Conditions
		NotUsedInAStructure
			restricted
			when (Project.ProjectType.Posting
			and   !ProjectInAnotherStructureRel exists)	
			
	Sets
		ByParentProject
			Sort Order
				FinanceEnterpriseGroup
				ParentProject
				Project
		BySubordinateProject
			Sort Order
				FinanceEnterpriseGroup
				Project
				ParentProject
		SubordinatesByStructure
			Sort Order
				FinanceEnterpriseGroup
				ProjectStructure
				Project
				ParentProject
		ChildrenInStructure
			Sort Order
				FinanceEnterpriseGroup
				ProjectStructure
				ParentProject
				Project
		BySystemProjectInStructure
			Sort Order
				FinanceEnterpriseGroup
				ProjectStructure
			Instance Selection
				where (SystemProject)

	Relations
		ParentStructureProjectRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses SubordinatesByStructure
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ProjectStructure
				related.Project					= ParentProject
		SiblingsRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses ByParentProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ParentProject			= ParentProject
			Instance Selection
				where (related.UniqueID != UniqueID)
		NotifyBudgetTemplateRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.NotifyOnProject
				and    related.ProjectStructure = ProjectStructure)

		TemplatesWithIncludeInBudgetEditRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup 
				related.Status 						= 2 
			Instance Selection
				where (related.PostingProject
				and related.ProjectStructure		= ProjectStructure)
				
		LocalProjectHierarchyRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ProjectStructure
				related.Project					= LocalProject
		ProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ProjectStructure
				related.Project					= Project
		MemberOfUnusedStructureRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= FinanceEnterpriseGroup.UnusedProjectStructure
				related.Project					= Project
		ProjectShadowOTORel
			one-to-one relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ProjectStructure			= ProjectStructure
				related.Project						= Project
            	related.SummaryProject				= LocalSummaryProject						
		ProjectInAnotherStructureRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses BySubordinateProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.Project						= Project
			Instance Selection
				where (related.ProjectStructure != ProjectStructure)
								

		FirstParentRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = ParentProject
		NextParent1Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = FirstParentRel.ParentProject
		NextParent2Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent1Rel.ParentProject
		NextParent3Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent2Rel.ParentProject
		NextParent4Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent3Rel.ParentProject
		NextParent5Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent4Rel.ParentProject
		NextParent6Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent5Rel.ParentProject
		NextParent7Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent6Rel.ParentProject
		NextParent8Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent7Rel.ParentProject
		NextParent9Rel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.ProjectStructure       = ProjectStructure
				related.Project                = NextParent8Rel.ParentProject

	Field Rules
		ProjectStructure
			default to FinanceEnterpriseGroup.EnterpriseProjectStructure
		DisplayProject
			default to Project.DisplayProject
 		ProjectType
 			ProjectType = Project.ProjectType
 		ParentProject
 			default to Project.ParentProject
 		IncludeInBudgetEdit
 			if (IncludeInBudgetEdit changed)
 				invoke NotifyChangeIncludeProject NotifyBudgetTemplateRel
					invoked.PrmProject       = Project
					invoked.PrmParentProject = ParentProject

 	Action Exit Rules
 		if ((action = "Create"
 		or   action = "CreateNoRules"
 		or   action = "Delete")
 		or  (action = "Update"
 		and  ParentProject != old ParentProject))
	 		if (ProjectStructure.SecurityGroupsNotRequiringRebuildRel exists)
 				invoke SetRequiresRebuild ProjectStructure.SecurityGroupsNotRequiringRebuildRel 

    Actions
		Create is a Create Action
			restricted
			Action Rules
			Exit Rules
				invoke NotifyCreateProject NotifyBudgetTemplateRel
					invoked.PrmProject 	     = Project
					invoked.PrmParentProject = ParentProject			
				if (!ProjectStructure.UnusedDimensionStructure)
					if (MemberOfUnusedStructureRel exists)
						invoke RemoveProjectFromUnusedStructure FinanceEnterpriseGroup.UnusedProjectStructure
							invoked.Project = Project
										
		CreateNoRules is a Create Action
			restricted
			bypass field rules
			
		Update is an Update Action
			restricted

		UpdateProjectInfo is an Instance Action
			restricted
			Parameters
				PrmSystemProject			is Boolean
				PrmDisplayProject			is like Project
				PrmIncludeInBudgetEdit		is Boolean

			Action Rules
				SystemProject				= PrmSystemProject
				DisplayProject				= PrmDisplayProject
				IncludeInBudgetEdit			= PrmIncludeInBudgetEdit
 				if (IncludeInBudgetEdit changed)
					if (not IncludeInBudgetEdit
					and TemplatesWithIncludeInBudgetEditRel exists) 
						TemplatesWithIncludeInBudgetEditCount		= instance count of TemplatesWithIncludeInBudgetEditRel
						if (TemplatesWithIncludeInBudgetEditCount	= 1)
							confirmation required
								"BudgetTemplate<first TemplatesWithIncludeInBudgetEditRel.BudgetTemplate>UsesPosting<DisplayProject>.Proceed?"
						else
						if (TemplatesWithIncludeInBudgetEditCount > 1)
							TemplatesWithIncludeInBudgetEditCount -= 1
							if (TemplatesWithIncludeInBudgetEditCount = 1)
								confirmation required
									"BudgetTemplate<first TemplatesWithIncludeInBudgetEditRel.BudgetTemplate>And<last TemplatesWithIncludeInBudgetEditRel.BudgetTemplate>UsePosting<DisplayProject>.Proceed?"
							else
								confirmation required
									"BudgetTemplate<first TemplatesWithIncludeInBudgetEditRel.BudgetTemplate>And<TemplatesWithIncludeInBudgetEditCount>OtherTemplatesUsePosting<DisplayProject>.Proceed?"		
 					invoke NotifyChangeIncludeProject NotifyBudgetTemplateRel
						invoked.PrmProject       = Project
						invoked.PrmParentProject = ParentProject

		Delete is a Delete Action
			restricted
			Exit Rules
				if (ProjectStructure != FinanceEnterpriseGroup.UnusedProjectStructure
				and NotUsedInAStructure)
					invoke AddProjectToUnusedStructure FinanceEnterpriseGroup.UnusedProjectStructure
						invoked.Project = Project			

		CopyProjects is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmStructure					is a ProjectStructure
				PrmNewStructure					is a ProjectStructure

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    ProjectStructure 		= PrmStructure)

			Sort Order
				FinanceEnterpriseGroup
				ProjectStructure
				Project

			Local Fields
				LocalSequence					is Numeric 7
				
			Action Rules

				Instance Rules
					LocalOldStructureSequence = PrmStructure.StructureSequence
					LocalNewStructureSequence = PrmNewStructure.StructureSequence				
					LocalCopyProject   	  	  = ParentProject
					LocalParentProject	 	  = DerivedNewProject
					if (!Project.ProjectType.Posting)
						LocalCopyProject 	  = Project
						LocalNewProject  	  = DerivedNewProject
						if (!LocalNewProject exists)
							increment FinanceEnterpriseGroup.ProjectLastSeq
							LocalSequence	  = FinanceEnterpriseGroup.ProjectLastSeq						
							invoke CreateNoRules Project
								fill in fields from LocalCopyProject
									except invoked.ProjectDateRange
									except invoked.Contract
									except invoked.PersonResponsible
									except invoked.ProjectTeam
								invoked.Project  			= LocalNewProject
								invoked.DimensionStructure 	= PrmNewStructure
								invoked.ParentProject 		= LocalParentProject
								invoked.SequenceNumber	  	= LocalSequence
					else
						LocalNewProject       = Project
							
					invoke CreateNoRules
						fill in fields from this instance
						invoked.ProjectStructure	= PrmNewStructure
						invoked.ParentProject 		= LocalParentProject
						invoked.Project		    	= LocalNewProject

		BuildShadowFile is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmProjectStructure			is a ProjectStructure
				PrmProject					is a Project
				
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    ProjectStructure			= PrmProjectStructure
				and   ((PrmProject entered
				and    Project 					= PrmProject)
				or    (!PrmProject entered
				and    !ProjectType.Node)))

			Action Rules
			
				Set Rules
					Entrance Rules
						
				Instance Rules

					LocalProject		= Project
					TopNodeFound   		= false
					if (PrmProject entered)
						invoke Delete ProjectShadowRel
					while (!TopNodeFound)
						invoke Create ProjectShadow
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.ProjectStructure 		= ProjectStructure
							invoked.Project		   			= Project
							invoked.ProjectType				= ProjectType
							invoked.SummaryProject   		= LocalProjectHierarchyRel.ParentProject
						if (!LocalProjectHierarchyRel.ParentProject.ProjectType.Summary)
							TopNodeFound = true
						else
							LocalProject = LocalProjectHierarchyRel.ParentProject			
					if (ProjectType.Summary)
						invoke SetLevel
									
		SetLevel is an Instance Action
			restricted
			
			Action Rules	
			
				if (!ProjectType.Posting)
					LocalProject = Project
					LocalLevel	 = 0
					while (LocalProject.ProjectType.Summary) 
						LocalProject	   			= LocalProjectHierarchyRel.ParentProject
						LocalLevel			  	   	+= 1
					invoke UpdateLevel Project
						invoked.PrmLevel 		   	= LocalLevel
						invoked.PrmParentProject	= LocalProjectHierarchyRel.ParentProject	

		ExportToUpload is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmProjectStructure			is a ProjectStructure
					default label is "ProjectStructure"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"					
				PrmProjectGroup				is a Project group
					default label is "CustomGroup"
				PrmBypassEdits	  is Boolean
					default label is "BypassEdits"					
	
	    	Instance Selection
	    		where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
	    		and	   ProjectStructure = PrmProjectStructure
	    		and	  (!ProjectType.Node)
	    		and	   Project within PrmProjectGroup)
	    		
	    	Local Fields
	    		LocalSequence 	is Numeric 12
	    		
	    	Action Rules
	    	
	    		Instance Rules
	    		
    				invoke ExportToUpload Project
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmProjectStructure			= PrmProjectStructure
    					invoked.PrmRunGroup 	    		= PrmRunGroup
    					invoked.PrmSingleRecordOnly 		= true		    								
						invoked.PrmBypassEdits              = PrmBypassEdits
							 
#ifdef module reconciliation						
		CreateReconciliationAccounts is a Set Action
			restricted
			Parameters
				PrmChartAccountRule		 			is a GeneralLedgerChartAccount group
				PrmReconcileFrequency				is a ReconcileFrequency
				PrmPeriodWithinQuarter				is a PeriodWithinQuarter
				PrmAccountType						is a ReconciliationAccountType
				PrmCashManagementAccount			is a CashManagementAccount
				PrmReconciliationAccountGroup		is a ReconciliationAccountGroup
				PrmRisk								is Numeric 1
					States
						Low			value is 0
						Medium		value is 1
						High		value is 2
				PrmPriority							is Numeric 1
					States
						Low			value is 0
						Medium		value is 1
						High		value is 2
				PrmCloseTask						is a CloseTask
				PrmFinanceTeam						is a FinanceTeam
				PrmFinanceTeamMember				is a FinanceTeamMember
				PrmRequiresApproval					is Boolean
				PrmApprovalCode						is an ApprovalCode
				PrmRequireSupportingDoco			is Boolean
				PrmReconciliationPolicy				is a ReconciliationPolicy
				PrmReconciliationManagementGroup 	is a ReconciliationManagementGroup
				PrmReportingChart 				 	is a ReportingChart
	    		PrmReconciliationAccountStructure 	is a ReconciliationAccountStructure
	    		PrmAccountingEntity				  	is a AccountingEntity
	    		PrmCloseConfiguration             	is a GeneralLedgerCloseConfiguration
	    		PrmReconciliationLevel            	is a StructureRow
	    		PrmProjectStructure				  	is a ProjectStructure
				BypassActiveCodeBlockEdit
									
	    	Instance Selection
	    		where (FinanceEnterpriseGroup     = PrmReconciliationManagementGroup.FinanceEnterpriseGroup
	    		and	   ProjectStructure 		  = PrmProjectStructure
	    		and    ProjectType.Posting
	    		and    PrmAccountingEntity        = PrmAccountingEntity)
			
			Sort Order is primary
								    		
	    	Action Rules
	    	
	    		Instance Rules
					invoke CreateReconciliationAccounts ReportingChartAccount
						invoked.PrmChartAccountRule					= PrmChartAccountRule	 		
						invoked.PrmReconcileFrequency 				= PrmReconcileFrequency
						invoked.PrmPeriodWithinQuarter 				= PrmPeriodWithinQuarter
						invoked.PrmAccountType						= PrmAccountType
						invoked.PrmCashManagementAccount 			= PrmCashManagementAccount		
						invoked.PrmReconciliationAccountGroup 		= PrmReconciliationAccountGroup
						invoked.PrmRisk								= PrmRisk				
						invoked.PrmPriority							= PrmPriority				
						invoked.PrmCloseTask          				= PrmCloseTask
						invoked.PrmFinanceTeam        				= PrmFinanceTeam
						invoked.PrmFinanceTeamMember  				= PrmFinanceTeamMember
						invoked.PrmRequiresApproval	  				= PrmRequiresApproval		
						invoked.PrmApprovalCode						= PrmApprovalCode
						invoked.PrmRequireSupportingDoco 			= PrmRequireSupportingDoco	
						invoked.PrmReconciliationPolicy 			= PrmReconciliationPolicy
						invoked.PrmReconciliationManagementGroup 	= PrmReconciliationManagementGroup
						invoked.PrmReportingChart 				 	= PrmReportingChart
			    		invoked.PrmReconciliationAccountStructure 	= PrmReconciliationAccountStructure
			    		invoked.PrmAccountingEntity				  	= PrmAccountingEntity
			    		invoked.PrmCloseConfiguration             	= PrmCloseConfiguration
			    		invoked.PrmProject				  			= Project
			    		invoked.PrmReconciliationLevel	 			= PrmReconciliationLevel
			    		invoked.BypassActiveCodeBlockEdit		  	= BypassActiveCodeBlockEdit
#endif
