GeneralLedgerCompany is a BusinessClass
	default label is "Company"
	owned by glif
	prefix is GLCPY 
	classic name is GLSYSTEM

	Ontology
		symbolic key is GeneralLedgerCompany
			classic set name is GLSSET1

	Patterns
		implements StaticJava
		disable AuditIndex
		implements BODId

	Persistent Fields

		Name
			translatable


		CustomerBusinessGroup
			disable surrogates
		BusinessGroup
			disable surrogates
			default label is "VendorBusinessGroup"
		FinanceEnterpriseGroup			is a snapshot of BusinessGroup.FinanceEnterpriseGroup
		AccountingEntity
		Currency						  
			classic name is CURRENCY-CODE
		CurrencyNumberOfDecimals          is Numeric size 1
			classic name is COMPANY-ND
		CurrencyTable					is like CurrencyTable	




































		Status                            is AlphaUpper size 1
			classic name is ACTIVE-STATUS
			States
				Delete        value is "D"
				Live          value is "L"
				Test          value is "T"
				Consolidation value is "C"
				Elimination   value is "E"









































































































































































		IntercompanyBilling					is Boolean
		AutoTransactionNumbering			is Boolean
		RequireHSNSACCode					is Boolean
			default label is "RequireHSN_/SACCode"

	Local Fields
		LocalNativeLPLBODTrigger  			is Boolean				
		LocalSystemAccount					is a SystemAccount
#ifdef module ap
		LocalReconciliationDate				is Date
		LocalSystemCode						is like GeneralLedgerSystemCode
		LocalAccrualCode					is AlphaUpper size 10 
		LocalSecondarySortCriteria			is AlphaUpper size 25
#endif

#ifdef module cb	
		LocalCompanyGroup					is like GeneralLedgerCompanyGroup
#endif
		ActionCode
		LocalBODCurrentTimeStamp			is a BODCurrentTimeStamp
#ifdef module integration
		NewBODTracker  				is a FSMInboundBODTracker view
#endif
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
		LocalBODTrigger				is Boolean
		LocalConfigurationParameter	is Alpha size up to 200
		
	Context Fields
#ifdef module integration
		FSMInboundBODTracker
#endif

	Derived Fields
		ContextMessageText is a MessageField
			restricted
			"Company<Company>"

		RepresentativeText is a StringField
			type is Text
			default label is "Company"
			Company " - " Name


#ifdef module integration
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "appProdline"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		BODVariationID is a DerivedField
			type is Alpha 25
			restricted
			return bod id.VariationID

		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp

		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedBODActionCode is a DerivedField
			type is Alpha 10
			restricted
			if (action type.Create or ActionCode.Create)
				return "Add"
			else
			if(action type.Update or action type.Delete)
				return "Replace"
			else
				return ""

		DerivedLastupdateBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor

		DerivedBODUpdateTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedBODUpdateTimeStamp = update stamp.timestamp
			return DerivedBODUpdateTimeStamp

		DerivedBODFormattedUpdateTimeStamp is a DerivedField
			type is Alpha size 30
			restricted
			return DerivedBODUpdateTimeStamp[1:4] + "-" + DerivedBODUpdateTimeStamp[5:6] + "-" + DerivedBODUpdateTimeStamp[7:8] + "T" + DerivedBODUpdateTimeStamp[9:10] + ":" + DerivedBODUpdateTimeStamp[11:12] + ":" + DerivedBODUpdateTimeStamp[13:14] + "Z"

		DerivedAccountingEntity is a DerivedField
			type is Alpha 40
			restricted
			return 	FinanceEnterpriseGroup+ DerivedDelimiter + AccountingEntity

		DerivedBODRevision is a DerivedField
			type is Alpha 25
			restricted
			return ""

		DerivedBODFormattedId is a DerivedField
			type is Alpha 100
			restricted
			return  "infor-nid:" + DerivedTenantID + ":" +DerivedAccountingEntity + ":"  + ":" + Company + ":" + DerivedBODRevision +"?CodeDefinition&verb=Sync&TrackerID="+LocalFSMInboundBODTracker

		UserAreaXML is a DerivedField
			type is XMLDocument
			restricted
			UserAreaXML = template.IONSyncCodeDefination_GeneralLedgerCompany_UserArea_ST document for this instance

		GeneralLedgerCompanyXML is a DerivedField
			type is XMLDocument
			restricted
			GeneralLedgerCompanyXML = template.IONSyncCodeDefination_GeneralLedgerCompany_GeneralLedgerCompany_ST document for this instance
#endif

#ifdef module cb	
 		NewPostDateIsPriorToPeriodMessage	is a MessageField
 			restricted
 			"NewPostDateIsPriorToPeriodAttemptingToClose"

		NewPostDateCannotBeGreaterThanNextPeriodEndDateMessage	is a MessageField
			restricted
			"NewPostDateCannotBeGreaterThanNextPeriodEndDate"

		CannotCloseOutstandingCashLedgerTransactionsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingCashLedgerTransactionsExist"

		CannotCloseOutstandingCashPaymentsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingCashPaymentsExist"

		CannotCloseOutstandingReturnedPaymentsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingReturnedPaymentsExist"

		CannotCloseOutstandingCashReceiptsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingCashReceiptsExist"

		CannotCloseOutstandingBankFundTransfersExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingBankFundTransfersExist"

		CannotCloseOutstandingReconciliationAdjustmentsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingReconciliationAdjustmentsExist"

		CannotCloseOutstandingCashLedgerGLDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;OutstandingCashLedgerGLDistributionsExist"

		CannotCloseOutstandingWireTransferBatchDetailsExistMessage is a MessageField	
			restricted
			"CannotClose;OutstandingWireTransferBatchDetailsExist"


		CannotCloseUnreleasedTransactionsExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedTransactionsExist"
		CannotCloseVoidOrStopPaymentTransactionsExistMessage	is a MessageField
			restricted
			"CannotClose;VoidOrStopPaymentTransactionsExist"
		CannotClosePendingApprovalCashLedgerTransactionsExistMessage	is a MessageField
			restricted
			"CannotClose;PendingApprovalTransactionsExist"
		CannotClosePendingStopPayConfirmationTransactionsExistMessage	is a MessageField
			restricted
			"CannotClose;PendingStopPayConfirmationTransactionsExist"

		CannotCloseUnreleasedCashLedgerPaymentsExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedCashLedgerPaymentsExist"
		CannotClosePendingApprovalCashLedgerPaymentsExistMessage	is a MessageField
			restricted
			"CannotClose;PendingApprovalCashLedgerPaymentsExist"
		CannotClosePendingStopPaymentApprovalCashLedgerPaymentsExistMessage	is a MessageField
			restricted
			"CannotClose;PendingStopPaymentApprovalCashLedgerPaymentsExist"

		CannotCloseUnreleasedReceiptsExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedReceiptsExist"
		CannotClosePendingApprovalReceiptsExistMessage	is a MessageField
			restricted
			"CannotClose;PendingApprovalReceiptsExist"

		CannotCloseUnreleasedReturnPaymentsExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedReturnPaymentsExist"

		CannotCloseUnreleasedFundTransfersExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedFundTransfersExist"

		CannotCloseUnreleasedReconciliationAdjustmentsExistMessage	is a MessageField
			restricted
			"CannotClose;UnreleasedReconciliationAdjustmentsExist"

		CannotCloseUnpostedCashLedgerGLDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;UnpostedCashLedgerGLDistributionsExist"

		CannotCloseUnpostedNonCashLedgerDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;UnpostedReconciliationVarianceDistributionsExist"
		CannotClosePendingApprovalNonCashLedgerDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;PendingApprovalReconciliationVarianceDistributionsExist"

		CannotCloseUnpostedBankStatementLineDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;UnpostedBankStatementLineDistributionsExist"
		CannotClosePendingApprovalBankStatementLineDistributionsExistMessage is a MessageField
			restricted
			"CannotClose;PendingApprovalBankStatementLineDistributionsExist"

		CannotCloseUnconfirmedWireTransferBatchDetailsExistMessage	is a MessageField	
			restricted
			"CannotClose;UnconfirmedWireTransferBatchDetailsExist"

		DerivedCurrentPeriodEndDate		is a DerivedField 
			type is Date
			return CurrentGeneralLedgerCalendarPeriodRel.Date

		DerivedNextPeriod 				is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			return NextGeneralLedgerClosePeriodRel.PeriodNumber

		DerivedNextPeriodEndDate		is a DerivedField
			type is Date
			restricted
			return NextGeneralLedgerCalendarPeriodRel.Date

		CompanyNameID is a MessageField
			"<Name>_(<Company>)"
#endif


































	Conditions






















		InFinanceEnterpriseGroup
			restricted
			when (actor.context.FinanceEnterpriseGroup = Company.FinanceEnterpriseGroup)

		IsHSNSACCodeEnabled
			restricted
			when (BusinessGroup.UseHSNSACCode)








#ifdef module intercobilling
		IsAValidIntercompanyBillingCompany
			when (IntercompanyBilling
			and   ReceivableCompanyRel.DefaultICBCustomerEntered
			and   PayablesCompanyRel.DefaultICBVendorEntered)

		IsValidForIntercompanyBillingSettlement
			when (ReceivableCompanyRel.DefaultICBCustomerEntered
			and   PayablesCompanyRel.DefaultICBVendorEntered)
#endif

		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)

#ifdef module cb	
		HasOutstandingCashLedgerTransactions 
			restricted
			when (CashLedgerTransactionsUnreleased
			or    CashLedgerTransactionsPendingApproval
			or    CashLedgerTransactionsPendingStopPayConfirmation
			or    CashLedgerTransactionsVoidOrStopPayment)


		CashLedgerTransactionsUnreleased
			restricted
			when (UnreleasedCashLedgerTransactionsRel exists)

		CashLedgerTransactionsPendingApproval
			restricted
			when (PendingApprovalCashLedgerTransactionsRel exists)

  		CashLedgerTransactionsPendingStopPayConfirmation
 			restricted
 			when (PendingStopPayConfirmationCashLedgerTransactionsRel exists)

		CashLedgerTransactionsVoidOrStopPayment
			restricted
			when (VoidOrStopPaymentCashLedgerTransactionsRel exists)
			
		HasOutstandingCashPayments 
			restricted
			when (CashPaymentsUnreleased
			or    CashPaymentsPendingApproval
			or    CashPaymentsPendingStopPaymentApproval)

		CashPaymentsUnreleased
			restricted
			when (UnreleasedCashLedgerPaymentsRel exists)

		CashPaymentsPendingApproval
			restricted
			when (PendingApprovalCashLedgerPaymentsRel exists)

		CashPaymentsPendingStopPaymentApproval
			restricted
			when (PendingStopPaymentApprovalCashLedgerPaymentsRel exists)
			
		HasOutstandingReturnedPayments 
			restricted
			when (ReturnedPaymentsUnreleased)

		ReturnedPaymentsUnreleased
			restricted
			when (UnreleasedCashLedgerReturnedPaymentsRel exists)
			
		HasOutstandingReconciliationAdjustments 
			restricted
			when (ReconciliationAdjustmentsUnreleased)

		ReconciliationAdjustmentsUnreleased
			restricted
			when (UnreleasedCashLedgerReconciliationAdjustmentsRel exists)
			
		HasOutstandingCashReceipts 
			restricted
			when (CashReceiptsUnreleased
			or    CashReceiptsPendingApproval)

		CashReceiptsUnreleased
			restricted
			when (UnreleasedCashLedgerCashReceiptHeadersRel exists)

		CashReceiptsPendingApproval
			restricted
			when (PendingApprovalCashLedgerCashReceiptHeadersRel exists)
			
		HasOutstandingBankFundTransfers 
			restricted
			when (BankFundTransfersUnreleased)

		BankFundTransfersUnreleased
			restricted
			when (UnreleasedCashLedgerFundTransferHeadersRel exists)
		
		HasOutstandingWireTransferBatchDetails 
			restricted
			when (WireTransferBatchDetailsUnConfirmed)

		WireTransferBatchDetailsUnConfirmed									
			restricted
			when (UnConfirmedWireTransferBatchDetailsRel exists)
		
		HasOutstandingCashLedgerGLDistributions 
			restricted
			when (CashLedgerGLDistributionsUnposted)

		CashLedgerGLDistributionsUnposted
			restricted
			when (UnpostedCashLedgerGLDistributionsRel exists)
			
		HasOutstandingNonCashLedgerDistributions 
			restricted
			when (NonCashLedgerDistributionsUnposted
			or    NonCashLedgerDistributionsPendingApproval)

		NonCashLedgerDistributionsUnposted
			restricted
			when (UnpostedNonCashLedgerDistributionsRel exists)

		NonCashLedgerDistributionsPendingApproval
			restricted
			when (PendingApprovalNonCashLedgerDistributionsRel exists)
			
		HasOutstandingBankStatementLineDistributions 
			restricted
			when (BankStatementLineDistributionsUnposted
			or    BankStatementLineDistributionsPendingApproval)

		BankStatementLineDistributionsUnposted
			restricted
			when (UnpostedBankStatementLineDistributionsRel exists)

		BankStatementLineDistributionsPendingApproval
			restricted
			when (PendingApprovalBankStatementLineDistributionsRel exists)
			
		HasDistributionErrors
			restricted
			when (CashLedgerGLDistributionsUnposted
			or	  NonCashLedgerDistributionsUnposted
			or	  NonCashLedgerDistributionsPendingApproval
			or	  BankStatementLineDistributionsUnposted
			or	  BankStatementLineDistributionsPendingApproval)
				
		CashLedgerJobResultErrorExistsForPeriod
			restricted
			when (CashLedgerJobResultErrorsRel exists)
			
		CashLedgerJobResultDetailExistsForPeriod
			restricted
			when (CashLedgerJobResultDetailsRel exists)

		CashLedgerHasBeenClosedGLHasNot
			restricted
			when (CashLedgerJobResultDetailCloseStatusRel exists)

		PeriodCloseHasBeenRunAndIsStillOpen
			restricted
			when (CashLedgerJobResultDetailOpenStatusRel exists)

		CBSystemControlExistsForCompany
			restricted
			when (InFinanceEnterpriseGroup
			and   CBCompanySystemClosingControlRel exists)

#endif

	Relations

#ifdef module ap
		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company = Company

		VendorGroupRel
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup	= BusinessGroup

		ReconciliationSubsystemBalanceRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												= Company
				related.ReconciliationSubsystemBalance.ReconciliationDate	= LocalReconciliationDate
				related.SystemCode 											= LocalSystemCode
				
		ReconciliationSubsystemBalanceByAccrualCodeRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												= Company
				related.ReconciliationSubsystemBalance.ReconciliationDate	= LocalReconciliationDate
				related.SystemCode 											= LocalSystemCode
				related.ReconciliationSubsystemBalance.AccrualCode			= LocalAccrualCode
				
		ReconciliationSubsystemBalanceBySecondarySortCriteriaRel
			one-to-many relation to ReconciliationSubsystemBalance
			Field Mapping uses ByReconciliationDate
				related.Company												 = Company
				related.ReconciliationSubsystemBalance.ReconciliationDate	 = LocalReconciliationDate
				related.SystemCode 											 = LocalSystemCode
				related.ReconciliationSubsystemBalance.AccrualCode			 = LocalAccrualCode
				related.ReconciliationSubsystemBalance.SecondarySortCriteria = LocalSecondarySortCriteria
				
#endif

#ifdef module cb	
		CurrentGeneralLedgerCalendarPeriodRel
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCalendarPeriod			= AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod	

		NextGeneralLedgerCalendarPeriodRel
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerCalendarPeriod			= AccountingEntity.NextPeriod

		CurrentGeneralLedgerClosePeriodRel
			one-to-one relation to GeneralLedgerClosePeriod
			Field Mapping uses ByGeneralLedgerCalendarPeriod
				related.FinanceEnterpriseGroup									= FinanceEnterpriseGroup
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod
				related.GeneralLedgerCloseConfiguration							= AccountingEntity.CloseConfiguration

		NextGeneralLedgerClosePeriodRel
			one-to-one relation to GeneralLedgerClosePeriod
			Field Mapping uses ByGeneralLedgerCalendarPeriod
				related.FinanceEnterpriseGroup									= FinanceEnterpriseGroup
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= AccountingEntity.NextPeriod
				related.GeneralLedgerCloseConfiguration							= AccountingEntity.CloseConfiguration

		CBCompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= Company

		CompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup 	= LocalCompanyGroup
				related.Company						= Company

		CashLedgerTransactionsRel 
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set8
				related.CashManagementGroup	  			= FinanceEnterpriseGroup
				related.Company.OrigCompany	  			= Company
			Instance Selection
				where (related.OutstandingTransactionsExist)


		UnreleasedCashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set8
				related.CashManagementGroup	  			= FinanceEnterpriseGroup
				related.Company.OrigCompany	  			= Company
				related.Status							= 0 
            Instance Selection
            	where (related.GeneralLedgerPostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date 
            	and    related.SourceCode != "AP")
		
		PendingApprovalCashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set8
				related.CashManagementGroup	  			= FinanceEnterpriseGroup
				related.Company.OrigCompany	  			= Company
				related.Status							= 7 
            Instance Selection
            	where (((related.ApprovalRequestType.Release 
				and      related.GeneralLedgerPostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
				or     ((related.ApprovalRequestType.StopPayment 
				or       related.ApprovalRequestType.Void)
				and      related.ReconciliationData.ExchangeDate <= CurrentGeneralLedgerCalendarPeriodRel.Date))
            	and      related.SourceCode != "AP")
        
        PendingStopPayConfirmationCashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set8
				related.CashManagementGroup	  			= FinanceEnterpriseGroup
				related.Company.OrigCompany	  			= Company
				related.Status							= 8 
            Instance Selection
            	where (related.ReconciliationData.ExchangeDate <= CurrentGeneralLedgerCalendarPeriodRel.Date 
            	and    related.SourceCode != "AP")
        
        VoidOrStopPaymentCashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set8
				related.CashManagementGroup	  			= FinanceEnterpriseGroup
				related.Company.OrigCompany	  			= Company
            Instance Selection
            	where ((related.Status.Voided
            	or	    related.Status.StopPayment)
            	and     related.ReconciliationData.ExchangeDate <= CurrentGeneralLedgerCalendarPeriodRel.Date 
            	and    !related.ReinstateStatus
            	and     related.SourceCode != "AP")
            	
		CashLedgerPaymentsRel 
			one-to-many relation to CashLedgerPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.CompanyBaseData.OverrideCompany	= Company
			Instance Selection
				where (related.OutstandingCashPaymentsExist)

		UnreleasedCashLedgerPaymentsRel
			one-to-many relation to CashLedgerPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.CompanyBaseData.OverrideCompany	= Company
				related.Status							= 0 
            Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
		
		PendingApprovalCashLedgerPaymentsRel
			one-to-many relation to CashLedgerPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.CompanyBaseData.OverrideCompany	= Company
				related.Status							= 6 
            Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		
		PendingStopPaymentApprovalCashLedgerPaymentsRel
			one-to-many relation to CashLedgerPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.CompanyBaseData.OverrideCompany	= Company
				related.Status							= 7 
            Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		
		CashLedgerReturnedPaymentsRel 
			one-to-many relation to CashLedgerReturnedPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
			Instance Selection
				where (related.OutstandingReturnedPaymentsExist)

		UnreleasedCashLedgerReturnedPaymentsRel
			one-to-many relation to CashLedgerReturnedPayment
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
				related.Status						= 0 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
				
		CashLedgerReconciliationAdjustmentsRel 
			one-to-many relation to CashLedgerReconciliationAdjustment
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany 		= Company
			Instance Selection
				where (related.OutstandingReconciliationAdjustmentsExist)

		UnreleasedCashLedgerReconciliationAdjustmentsRel
			one-to-many relation to CashLedgerReconciliationAdjustment
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany 		= Company
				related.Status						= 0 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
				
		CashLedgerCashReceiptHeadersRel 
			one-to-many relation to CashLedgerCashReceiptHeader
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
			Instance Selection
				where (related.OutstandingCashReceiptsExist)

		UnreleasedCashLedgerCashReceiptHeadersRel
			one-to-many relation to CashLedgerCashReceiptHeader
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
				related.Status						= 0 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 


		PendingApprovalCashLedgerCashReceiptHeadersRel
			one-to-many relation to CashLedgerCashReceiptHeader
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
				related.Status						= 2 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

			
		CashLedgerFundTransferHeadersRel 
			one-to-many relation to CashLedgerFundTransferHeader
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
			Instance Selection
				where (related.OutstandingBankFundTransfersExist)

		UnreleasedCashLedgerFundTransferHeadersRel
			one-to-many relation to CashLedgerFundTransferHeader
			Field Mapping uses ByCompany
				related.CashManagementGroup			= FinanceEnterpriseGroup
				related.Company.OrigCompany			= Company
				related.Status						= 0 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

				
		CashLedgerGLDistributionsRel 
			one-to-many relation to CashLedgerGLDistribution
			Field Mapping uses Set4
				related.CashManagementGroup					= FinanceEnterpriseGroup
				related.Company.OrigCompany					= Company
			Instance Selection
				where (related.OutstandingCashLedgerGLDistributionsExist)

		UnpostedCashLedgerGLDistributionsRel
			one-to-many relation to CashLedgerGLDistribution
			Field Mapping uses Set4
				related.CashManagementGroup					= FinanceEnterpriseGroup
				related.Company.OrigCompany					= Company
				related.Status								= 1 
			Instance Selection
				where (related.PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
			
		NonCashLedgerDistributionsRel 
			one-to-many relation to NonCashLedgerDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.OutstandingNonCashLedgerDistributionsExist)

		UnpostedNonCashLedgerDistributionsRel
			one-to-many relation to NonCashLedgerDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
				related.Status									 = 1 
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.PostingDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		PendingApprovalNonCashLedgerDistributionsRel
			one-to-many relation to NonCashLedgerDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
				related.Status									 = 3 
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.PostingDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		BankStatementLineDistributionsRel 
			one-to-many relation to BankStatementLineDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.OutstandingBankStatementLineDistributionsExist)

		UnpostedBankStatementLineDistributionsRel
			one-to-many relation to BankStatementLineDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
				related.Status									 = 1 
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.PostingDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		PendingApprovalBankStatementLineDistributionsRel
			one-to-many relation to BankStatementLineDistribution
			Field Mapping uses ByDistributionStatusByCashManagementGroup
				related.CashManagementGroup						 = FinanceEnterpriseGroup
				related.Status									 = 3 
			Instance Selection
				where (related.CashManagementAccount.LegalEntity = Company
				and    related.PostingDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
				
		WireTransferBatchDetailsRel 
			one-to-many relation to WireTransferBatchDetail
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.FromCompany						= Company
			Instance Selection
				where (related.OutstandingWireTransferBatchDetailsExist)

		UnConfirmedWireTransferBatchDetailsRel
			one-to-many relation to WireTransferBatchDetail
			Field Mapping uses ByCompany
				related.CashManagementGroup				= FinanceEnterpriseGroup
				related.FromCompany						= Company
			Instance Selection
				where (!related.Processed
				and    !related.Rejected
				and     related.PostingDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 

		CashLedgerJobResultsPeriodEndDateRel
			one-to-many relation to CashLedgerJobResult
			Field Mapping uses ByPeriodEndDate
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.PeriodEndDate								= CurrentGeneralLedgerCalendarPeriodRel.Date 

		CashLedgerJobResultJobTypeRel
			one-to-many relation to CashLedgerJobResult
			Field Mapping uses ByJobType
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.JobType										= 1 
				related.PeriodEndDate								= CurrentGeneralLedgerCalendarPeriodRel.Date 

		CashLedgerJobResultDetailsRel
			one-to-many relation to CashLedgerJobResultDetail
			Field Mapping uses ByPeriodEndDate
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.CashLedgerJobResult							= first CashLedgerJobResultJobTypeRel.CashLedgerJobResult
			Instance Selection
				where (related.Company								= Company)

		CashLedgerJobResultDetailCloseStatusRel
			one-to-many relation to CashLedgerJobResultDetail
			Field Mapping uses ByPeriodEndDate
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.CashLedgerJobResult							= first CashLedgerJobResultJobTypeRel.CashLedgerJobResult
			Instance Selection
				where (related.Company								= Company
				and	   related.Status.Closed)

		CashLedgerJobResultDetailOpenStatusRel
			one-to-many relation to CashLedgerJobResultDetail
			Field Mapping uses ByPeriodEndDate
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.CashLedgerJobResult							= first CashLedgerJobResultJobTypeRel.CashLedgerJobResult
			Instance Selection
				where (related.Company								= Company
				and	   related.Status.Open)

		CashLedgerJobResultErrorsRel
			one-to-many relation to CashLedgerJobResultError
			Field Mapping uses ByPeriodEndDate
				related.CashManagementGroup							= FinanceEnterpriseGroup
				related.CashLedgerJobResult							= first CashLedgerJobResultJobTypeRel.CashLedgerJobResult
			Instance Selection
				where  (related.Company								= Company)
#endif

#ifdef module po
		PurchasingCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company	= Company

		ProcurementGroupRel
			one-to-one relation to ProcurementGroup
			Field Mapping uses symbolic key
				related.ProcurementGroup	= BusinessGroup

		SourcingCompanyRel
			one-to-one relation to SourcingCompany
			Field Mapping uses symbolic key
				related.Company	= Company

		SourcingGroupRel
			one-to-one relation to SourcingGroup
			Field Mapping uses symbolic key
				related.SourcingGroup	= BusinessGroup

		ContractGroupRel
			one-to-one relation to ContractGroup
			Field Mapping uses symbolic key
				related.ContractGroup	= BusinessGroup
#endif

#ifdef module ic
		InventoryCompanyRel
			one-to-one relation to InventoryCompany
			Field Mapping uses symbolic key
				related.Company	= Company

		ItemGroupRel
			one-to-one relation to ItemGroup
			Field Mapping uses symbolic key
				related.ItemGroup	= BusinessGroup
#endif

#ifdef module ar
		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company	= Company

		CustomerGroupRel
			one-to-one relation to CustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup	= CustomerBusinessGroup
#endif












		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company
		AccountingEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = BusinessGroup.FinanceEnterpriseGroup
				related.AccountingEntity	   = AccountingEntity
		SystemClosingControlRel
			one-to-many relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = BusinessGroup.FinanceEnterpriseGroup
				related.AccountingEntity		= AccountingEntity
		SystemAccountRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.SystemAccount						= LocalSystemAccount














#ifdef module integration
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter

		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 1
				related.FSMBODConfiguration.Noun 		= "CodeDefinition"
				related.FSMBODConfiguration.Direction 	= 1

		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
#endif

	Sets







		ByAccountingEntity
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				Company

	Field Rules







		Name
			initial value is Company.Company.Name
			required








































		BusinessGroup
			required

		CustomerBusinessGroup
			constraint (CustomerBusinessGroup.FinanceEnterpriseGroup = BusinessGroup.FinanceEnterpriseGroup)
				"CustomerAndVendorBusinessGroupsMustReferenceTheSameFinanceEnterpriseGroup"

		AccountingEntity
			required

		Currency
			Currency = AccountingEntityRel.FunctionalCurrency

		CurrencyNumberOfDecimals
			force default to Currency.NumberOfDecimals

		CurrencyTable
			force default to BusinessGroup.FinanceEnterpriseGroup.CurrencyTable

	Rule Blocks
	
		TriggerGeneralLedgerCompanyServiceRules
			trigger "GeneralLedgerCompanyService" PA service
				resume on error
				title is "EG:<FinanceEnterpriseGroup>GeneralLedgerCompany:<Company>"
				Criteria
					FinanceEnterpriseGroup
				Variables
					ActionCode
					FinanceEnterpriseGroup
					include persistent fields from Company
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp

		RequireHSNSACCode
			if (!IsHSNSACCodeEnabled)
				cannot be entered
					"CannotEnter,HSN_/SACCodeFlagIsNotSetAtBusinessGroup"

#ifdef module cb	
		CreateCashLedgerJobResultError
			invoke Create CashLedgerJobResultError
				invoked.CashManagementGroup 				= PrmCashManagementGroup
				invoked.CashLedgerJobResult					= LocalCashLedgerJobResult 
				invoked.Company								= Company
				invoked.ErrorType							= CashLedgerJobResultErrorType
				invoked.ErrorDescription					= CashLedgerJobResultErrorMessage
#endif

	Actions
#ifdef module po
		PopulateBlankItems is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup  is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
			Action Rules
				Instance Rules
					invoke PopulateBlankItem PurchaseOrderLine
						invoked.PrmCompany				= PurchasingCompanyRel.Company

					invoke PopulateBlankItem PurchaseOrderInterface
						invoked.PrmCompany 				= PurchasingCompanyRel.Company

					invoke PopulateBlankItem PurchaseOrderReceiptLine
						invoked.PrmCompany 				= PurchasingCompanyRel.Company

					invoke PopulateBlankItem VendorReturnLine
						invoked.PrmCompany				= PurchasingCompanyRel.Company

					invoke PopulateBlankItem ContractLine
						invoked.PrmContractGroup 		= ContractGroupRel.ContractGroup

					invoke PopulateBlankItem ProcurementTemplateLine
						invoked.PrmProcurementGroup 	= ProcurementGroupRel.ProcurementGroup

					invoke PopulateBlankItem RequisitionLine
						invoked.PrmCompany				= InventoryCompanyRel.Company

					invoke PopulateBlankItem PayablesInvoiceDetail
						invoked.PrmCompany				= PurchasingCompanyRel.Company

					invoke PopulateBlankItem PayablesInvoiceAddOnCharge
						invoked.PrmCompany				= PurchasingCompanyRel.Company

#endif

#ifdef module cb
		PerformCashLedgerCompanyPeriodClose is a Set Action	
			Parameters
				PrmCashManagementGroup					is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCompany								is a GeneralLedgerCompany
					default label is "Company"
				PrmCompanyGroup							is a GeneralLedgerCompanyGroup
					default label is "CompanyGroup"
				PrmUpdateUnreleasedAndPendingApprovals	is Boolean
					default label is "UpdateUnreleasedAndPendingApprovals"
				PrmNewPostDate							is Date
					default label is "NewPostDate"
				PrmUpdateOption							is AlphaUpper size 1
					default label is "Update"
					States
						Yes					value is "Y"
						No					value is "N"
						
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCompany
					if (PrmCompany entered)
						confirmation required
							"FiscalYear:<PrmCompany.AccountingEntity.FiscalYear>,Period:<PrmCompany.AccountingEntity.CurrentPeriod.PeriodName>IsSelectedToClose;DoYouWantToContinue?"
						constraint (PrmCompanyGroup not entered)
							"CannotEnterBothCompanyAndCompanyGroup"
					if (PrmCompany not entered)
						constraint (PrmCompanyGroup entered)
							"MustEnterEitherCompanyOrCompanyGroup"
					constraint (PrmCompany.CBCompanySystemClosingControlRel.Control = true)
						"CompanyIsNotSetUpForCloseControl"
				PrmCompanyGroup
					if (PrmCompanyGroup entered)
						LocalCompanyGroup	= PrmCompanyGroup
						constraint (PrmCompanyGroup.CBSystemClosingControlCompaniesWithControlRel exists)
							"NoCompanyInTheCompanyGroupIsSetUpForCashLedgerSystemCloseControl"


				PrmNewPostDate
					if (!PrmUpdateUnreleasedAndPendingApprovals)
						initialize
					constraint (PrmUpdateUnreleasedAndPendingApprovals)
						"NewPostDateMustBeBlankIfUpdateUnreleasedAndPendingApprovalsIsNotChecked"
				PrmUpdateOption
					initial value is "N"
					default to "N"
					if (PrmUpdateOption.No)
						constraint (!PrmUpdateUnreleasedAndPendingApprovals)
							"UpdateUnreleasedAndPendingApprovalsRequiresUpdateOptionYes"

			Local Fields
				CashLedgerJobResultView					is a CashLedgerJobResult view
				LocalCashLedgerJobResult				is a CashLedgerJobResult
					context of PrmCashManagementGroup
						
			Sort Order is primary
			
			Instance Selection
				where (((PrmCompany entered
				and      Company = PrmCompany)
				or	    (PrmCompanyGroup entered
				and      CompanyGroupRel exists))
				and      CBCompanySystemClosingControlRel.Control = true
				and      CBCompanySystemClosingControlRel.CurrentPeriodNotClosed)

			Action Rules
				Instance Rules
					if (CashLedgerJobResultJobTypeRel exists)
						if (CashLedgerJobResultDetailOpenStatusRel exists)
							invoke Delete CashLedgerJobResultErrorsRel in background
						
						invoke Update CashLedgerJobResultJobTypeRel
							invoked.Company								= PrmCompany
							invoked.CompanyGroup						= PrmCompanyGroup
							invoked.RunTime								= current timestamp
							invoked.UpdateUnreleasedAndPendingApprovals	= PrmUpdateUnreleasedAndPendingApprovals
							invoked.NewPostDate							= PrmNewPostDate
							invoked.UpdateOption						= PrmUpdateOption

						LocalCashLedgerJobResult = CashLedgerJobResultJobTypeRel.CashLedgerJobResult
					else
						invoke Create CashLedgerJobResult
							assign result to CashLedgerJobResultView
							invoked.CashManagementGroup					= PrmCashManagementGroup
							invoked.JobType								= 1 
							invoked.PeriodEndDate						= CurrentGeneralLedgerCalendarPeriodRel.Date
							invoked.Company								= PrmCompany
							invoked.CompanyGroup						= PrmCompanyGroup
							invoked.UpdateUnreleasedAndPendingApprovals	= PrmUpdateUnreleasedAndPendingApprovals
							invoked.NewPostDate							= PrmNewPostDate
							invoked.UpdateOption						= PrmUpdateOption
	
						LocalCashLedgerJobResult = CashLedgerJobResultView.CashLedgerJobResult
						
					invoke CashLedgerCompanyPeriodClose
						run outside of action background group
						run after current action background group
						invoked.PrmCashManagementGroup					= PrmCashManagementGroup
						invoked.PrmCashLedgerJobResult					= LocalCashLedgerJobResult
						invoked.PrmCompany								= Company
						invoked.PrmUpdateUnreleasedAndPendingApprovals	= PrmUpdateUnreleasedAndPendingApprovals
						invoked.PrmNewPostDate							= PrmNewPostDate
						invoked.PrmUpdateOption							= PrmUpdateOption

		CashLedgerCompanyPeriodClose is a Set Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup					is a CashManagementGroup
				PrmCashLedgerJobResult					is a CashLedgerJobResult
					context of PrmCashManagementGroup
				PrmCompany								is a GeneralLedgerCompany
				PrmUpdateUnreleasedAndPendingApprovals	is Boolean
				PrmNewPostDate							is Date
				PrmUpdateOption							is AlphaUpper size 1
					States
						Yes					value is "Y"
						No					value is "N"
			
			Local Fields
				CashLedgerCompanyPeriodCloseDataError			is Boolean
				CashLedgerCompanyPeriodCloseParameterError 		is Boolean
				CashLedgerJobResultErrorType
				CashLedgerJobResultErrorMessage					is Alpha up to 100
				CashLedgerJobResultDetailView					is a CashLedgerJobResultDetail view
				LocalCashLedgerJobResult						is a CashLedgerJobResult
					context of PrmCashManagementGroup
				LocalCashLedgerJobResultDetail					is a CashLedgerJobResultDetail
					context of PrmCashManagementGroup
					context of LocalCashLedgerJobResult
				
			Sort Order is primary
			
			Instance Selection
				where (Company = PrmCompany)

			Action Rules
				Set Rules
					Exit Rules
						invoke UpdateStatusOnResult PrmCashLedgerJobResult 

				Instance Rules
					LocalCashLedgerJobResult = PrmCashLedgerJobResult	
					if (CashLedgerJobResultDetailsRel exists)
						LocalCashLedgerJobResultDetail = CashLedgerJobResultDetailsRel.CashLedgerJobResultDetail
					else
						invoke Create CashLedgerJobResultDetail
							assign result to CashLedgerJobResultDetailView
							invoked.CashManagementGroup					= PrmCashManagementGroup
							invoked.CashLedgerJobResult					= PrmCashLedgerJobResult 
							invoked.Company								= PrmCompany
						
						LocalCashLedgerJobResultDetail = CashLedgerJobResultDetailView.CashLedgerJobResultDetail
					
					if (LocalCashLedgerJobResultDetail.Status.Open)
						initialize CashLedgerJobResultErrorType
						initialize CashLedgerJobResultErrorMessage
						CashLedgerCompanyPeriodCloseDataError		= false
						CashLedgerCompanyPeriodCloseParameterError	= false
					
						if (PrmUpdateUnreleasedAndPendingApprovals
						and PrmNewPostDate entered)
							if (PrmNewPostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 
								CashLedgerCompanyPeriodCloseParameterError			= true
								CashLedgerJobResultErrorType	 					= 500 
								CashLedgerJobResultErrorMessage 					= NewPostDateIsPriorToPeriodMessage
								include CreateCashLedgerJobResultError
							else
								if (PrmNewPostDate  >  DerivedNextPeriodEndDate)
									CashLedgerCompanyPeriodCloseParameterError		= true
									CashLedgerJobResultErrorType	 				= 501 
									CashLedgerJobResultErrorMessage 				= NewPostDateCannotBeGreaterThanNextPeriodEndDateMessage
									include CreateCashLedgerJobResultError
	
						if (!CashLedgerCompanyPeriodCloseParameterError)

							if (CashLedgerTransactionsUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 1	
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedTransactionsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashLedgerTransactionsPendingApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 2	
								CashLedgerJobResultErrorMessage 				= CannotClosePendingApprovalCashLedgerTransactionsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashLedgerTransactionsPendingStopPayConfirmation)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 3	
								CashLedgerJobResultErrorMessage 				= CannotClosePendingStopPayConfirmationTransactionsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashLedgerTransactionsVoidOrStopPayment)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 4 
								CashLedgerJobResultErrorMessage 				= CannotCloseVoidOrStopPaymentTransactionsExistMessage
								include CreateCashLedgerJobResultError
	

							if (CashPaymentsUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 5	
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedCashLedgerPaymentsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashPaymentsPendingApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 6	
								CashLedgerJobResultErrorMessage					= CannotClosePendingApprovalCashLedgerPaymentsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashPaymentsPendingStopPaymentApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 7 
								CashLedgerJobResultErrorMessage 				= CannotClosePendingStopPaymentApprovalCashLedgerPaymentsExistMessage
								include CreateCashLedgerJobResultError
	

							if (ReturnedPaymentsUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 8 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedReturnPaymentsExistMessage
								include CreateCashLedgerJobResultError
	

							if (ReconciliationAdjustmentsUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 9 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedReconciliationAdjustmentsExistMessage
								include CreateCashLedgerJobResultError
	

							if (CashReceiptsUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 10 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedReceiptsExistMessage
								include CreateCashLedgerJobResultError
								
							if (CashReceiptsPendingApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 11 
								CashLedgerJobResultErrorMessage					= CannotClosePendingApprovalReceiptsExistMessage
								include CreateCashLedgerJobResultError
	

							if (BankFundTransfersUnreleased)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 12 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnreleasedFundTransfersExistMessage
								include CreateCashLedgerJobResultError
								

							if (WireTransferBatchDetailsUnConfirmed)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 13 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnconfirmedWireTransferBatchDetailsExistMessage
								include CreateCashLedgerJobResultError
								

							if (CashLedgerGLDistributionsUnposted)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 14 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnpostedCashLedgerGLDistributionsExistMessage
								include CreateCashLedgerJobResultError
	

							if (NonCashLedgerDistributionsUnposted)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 15 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnpostedNonCashLedgerDistributionsExistMessage
								include CreateCashLedgerJobResultError
								
							if (NonCashLedgerDistributionsPendingApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 16 
								CashLedgerJobResultErrorMessage 				= CannotClosePendingApprovalNonCashLedgerDistributionsExistMessage
								include CreateCashLedgerJobResultError
	

							if (BankStatementLineDistributionsUnposted)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 17 
								CashLedgerJobResultErrorMessage 				= CannotCloseUnpostedBankStatementLineDistributionsExistMessage
								include CreateCashLedgerJobResultError
								
							if (BankStatementLineDistributionsPendingApproval)
								CashLedgerCompanyPeriodCloseDataError			= true
								CashLedgerJobResultErrorType	 				= 18 
								CashLedgerJobResultErrorMessage 				= CannotClosePendingApprovalBankStatementLineDistributionsExistMessage
								include CreateCashLedgerJobResultError
	
							invoke Update LocalCashLedgerJobResultDetail 
								invoked.ErrorReport = PDFReport as pdf in landscape font offset is -3
							

							if (PrmUpdateUnreleasedAndPendingApprovals)	
								if (CashLedgerCompanyPeriodCloseDataError
								and !HasDistributionErrors)					
									if (PrmNewPostDate not entered)
										PrmNewPostDate = DerivedNextPeriodEndDate

									if (CashLedgerTransactionsUnreleased)
										invoke CompanyPeriodClosePostDateUpdateUnreleased CashLedgerTransaction
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashLedgerTransactionsPendingApproval)
										invoke CompanyPeriodClosePostDateUpdatePendingApproval CashLedgerTransaction
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashLedgerTransactionsPendingStopPayConfirmation)
										invoke CompanyPeriodClosePostDateUpdatePendingStopPayConfirmation CashLedgerTransaction
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashLedgerTransactionsVoidOrStopPayment)
										invoke CompanyPeriodClosePostDateUpdateVoidOrStopPayment CashLedgerTransaction
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (CashPaymentsUnreleased)
										invoke CompanyPeriodClosePostDateUpdateUnreleased CashLedgerPayment
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashPaymentsPendingApproval)
										invoke CompanyPeriodClosePostDateUpdatePendingApproval CashLedgerPayment
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashPaymentsPendingStopPaymentApproval)
										invoke CompanyPeriodClosePostDateUpdatePendingStopPaymentApproval CashLedgerPayment
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (ReturnedPaymentsUnreleased)
										invoke CompanyPeriodClosePostDateUpdate CashLedgerReturnedPayment
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (ReconciliationAdjustmentsUnreleased)
										invoke CompanyPeriodClosePostDateUpdate CashLedgerReconciliationAdjustment
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (CashReceiptsUnreleased)
										invoke CompanyPeriodClosePostDateUpdateUnreleased CashLedgerCashReceiptHeader
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
									if (CashReceiptsPendingApproval)
										invoke CompanyPeriodClosePostDateUpdatePendingApproval CashLedgerCashReceiptHeader
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (BankFundTransfersUnreleased)
										invoke CompanyPeriodClosePostDateUpdate CashLedgerFundTransferHeader
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 

									if (WireTransferBatchDetailsUnConfirmed)
										invoke CompanyPeriodClosePostDateUpdate WireTransferBatchDetail		
											invoked.PrmCashManagementGroup			= PrmCashManagementGroup
											invoked.PrmNewPostDate					= PrmNewPostDate
											invoked.PrmPeriodEndDate				= CurrentGeneralLedgerCalendarPeriodRel.Date
											invoked.PrmCashLedgerJobResult			= LocalCashLedgerJobResult 
											invoked.PrmCompany						= Company
											invoked.PrmCloseDetail					= LocalCashLedgerJobResultDetail 
								else
									if (!CashLedgerCompanyPeriodCloseDataError
									and PrmUpdateOption.Yes)
										invoke CloseCompany LocalCashLedgerJobResultDetail
							else
								if (!CashLedgerCompanyPeriodCloseDataError
								and PrmUpdateOption.Yes)
									invoke CloseCompany LocalCashLedgerJobResultDetail 
#endif

		Create is a Create Action
			Action Rules
			Exit Rules	
				if (IntercompanyBilling)
					LocalSystemAccount			= SystemAccount.IntercompanyBillingClearing
					constraint (SystemAccountRel exists)
						"Intercompany_Billing_Clearing_AccountNotSetup"
					LocalSystemAccount			= SystemAccount.IntercompanyBillingExpenseClearing
					constraint (SystemAccountRel exists)
						"Intercompany_Billing_Expense_Clearing_AccountNotSetup"

		Update is an Update Action
			Action Rules
				if (IntercompanyBilling)
					LocalSystemAccount			= SystemAccount.IntercompanyBillingClearing
					constraint (SystemAccountRel exists)
						"Intercompany_Billing_Clearing_AccountNotSetup"
					LocalSystemAccount			= SystemAccount.IntercompanyBillingExpenseClearing
					constraint (SystemAccountRel exists)
						"Intercompany_Billing_Expense_Clearing_AccountNotSetup"
				if (BusinessGroup changed)
					confirmation required
						"ChangingVendorBusinessGroupWillUpdateTheCorrespondingGroupOnPayablesCompany,InventoryCompany,PurchasingCompany;Continue?"

#ifdef module ap
					if (PayablesCompanyRel exists)
						constraint (VendorGroupRel exists)
							"CannotChangeVendorBusinessGroup;VendorGroup<BusinessGroup>DoesNotExist;CannotUpdatePayablesCompany"
						invoke UpdateVendorGroup PayablesCompanyRel
							invoked.PrmVendorGroup	= BusinessGroup

#endif

#ifdef module po
					if (PurchasingCompanyRel exists)
						constraint (ProcurementGroupRel exists)
							"CannotChangeVendorBusinessGroup;ProcurementGroup<BusinessGroup>DoesNotExist;CannotUpdatePurchasingCompany"
						invoke UpdateProcurementGroup PurchasingCompanyRel
							invoked.PrmProcurementGroup	= BusinessGroup

					if (SourcingCompanyRel exists)
						constraint (SourcingGroupRel exists)
							"CannotChangeVendorBusinessGroup;SourcingGroup<BusinessGroup>DoesNotExist;CannotUpdateSourcingCompany"
						invoke UpdateSourcingGroup SourcingCompanyRel
							invoked.PrmSourcingGroup	= BusinessGroup
#endif

#ifdef module ic
					if (InventoryCompanyRel exists)
						constraint (ItemGroupRel exists)
							"CannotChangeVendorBusinessGroup;ItemGroup<BusinessGroup>DoesNotExist;CannotUpdateInventoryCompany"
						invoke UpdateItemGroup InventoryCompanyRel
							invoked.PrmItemGroup	= BusinessGroup

#endif

#ifdef module ar
				if (CustomerBusinessGroup changed)
					confirmation required
						"ChangingCustomerBusinessGroupWillUpdateTheCorrespondingGroupOnReceivableCompany;Continue?"

					if (ReceivableCompanyRel exists)
						constraint (CustomerGroupRel exists)
							"CannotChangeCustomerBusinessGroup;CustomerGroup<CustomerBusinessGroup>DoesNotExist;CannotUpdateReceivableCompany"
						invoke UpdateCustomerGroup ReceivableCompanyRel
							invoked.PrmCustomerGroup	= CustomerBusinessGroup

#endif

#ifdef module ap
		UpdateReconciliationBalance is an Instance Action
			restricted
			Parameters
				PrmReconciliationDate			is Date
				PrmReportDocument				is UniqueID
				PrmSystemCode					is like GeneralLedgerSystemCode
				PrmAccrualCode					is AlphaUpper size 10
				PrmSecondarySortCriteria		is AlphaUpper size 25
				
			Action Rules
				LocalReconciliationDate = PrmReconciliationDate
				LocalSystemCode = PrmSystemCode
				LocalAccrualCode = PrmAccrualCode
				LocalSecondarySortCriteria = PrmSecondarySortCriteria
				
				if(LocalSecondarySortCriteria entered) 
					if(ReconciliationSubsystemBalanceBySecondarySortCriteriaRel exists)
						for each ReconciliationSubsystemBalanceBySecondarySortCriteriaRel
							invoke UpdateReportDocument ReconciliationSubsystemBalanceBySecondarySortCriteriaRel
								invoked.ReportDocument = PrmReportDocument
				else
				if (!LocalAccrualCode entered)	
					if (ReconciliationSubsystemBalanceRel exists)
						for each ReconciliationSubsystemBalanceRel
							invoke UpdateReportDocument ReconciliationSubsystemBalanceRel
								invoked.ReportDocument = PrmReportDocument
				else							
				if (ReconciliationSubsystemBalanceByAccrualCodeRel exists)
					for each ReconciliationSubsystemBalanceByAccrualCodeRel
						invoke UpdateReportDocument ReconciliationSubsystemBalanceByAccrualCodeRel
							invoked.ReportDocument = PrmReportDocument
#endif

		Delete is a Delete Action
			Entrance Rules
				if (FinanceEnterpriseGroup.BODTrigger)
					ActionCode	= ActionCode.Delete
					increment bod id.VariationID
					include TriggerGeneralLedgerCompanyServiceRules




		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord

#ifdef module integration		
		SendGeneralLedgerCompanyBODNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is GeneralLedgerCompanyXML
					bod type is "Sync.CodeDefinition"
					accounting entity is DerivedAccountingEntity
					document id is Company
					variation id is	BODVariationID
					
		TriggerGeneralLedgerCompanyNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "CodeDefinition"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "GeneralLedgerCompany"
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmMainUserTemplate			= "IONSyncCodeDefination_GeneralLedgerCompany_GeneralLedgerCompany_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				LocalBODTrigger = true
				if(FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)					
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "CodeDefinition"					
							invoked.BODDocumentID			= Company
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity
							invoked.Reference1				= "GeneralLedgerCompany"
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.BODDocumentID			= Company
							invoked.BODVariationID			= BODVariationID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.BODAccountingEntity		= DerivedAccountingEntity						
							invoked.Reference1				= "GeneralLedgerCompany"
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendGeneralLedgerCompanyBODNativeLPL
						resume on error
							Error            							= true
							ErrorMessage     							= error message
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODXML								= GeneralLedgerCompanyXML
							invoked.BODID								= DerivedBODFormattedId
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODXML									= GeneralLedgerCompanyXML
							invoked.BODID									= DerivedBODFormattedId
#endif

		BODDataInitialLoadGeneralLedgerCompanyCriteria is a Set Action
			restricted
			Parameters
				PrmFromGeneralLedgerCompany				is a GeneralLedgerCompany
				PrmToGeneralLedgerCompany				is a GeneralLedgerCompany
			Parameter Rules
			Instance Selection
				where  (((PrmFromGeneralLedgerCompany entered
				and		 PrmFromGeneralLedgerCompany <= Company)
				or		 PrmFromGeneralLedgerCompany not entered)
				and    ((PrmToGeneralLedgerCompany entered
				and		 PrmToGeneralLedgerCompany >= Company)
				or		 PrmToGeneralLedgerCompany not entered))

			Sort Order
			Action Rules
				Instance Rules
					if (FinanceEnterpriseGroup.BODTrigger)
						ActionCode = ActionCode.Create
						increment bod id.VariationID
						include TriggerGeneralLedgerCompanyServiceRules







	Action Exit Rules
		if (FinanceEnterpriseGroup.BODTrigger and !LocalBODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 
					ActionCode	= ActionCode.Update
					if (action type.Create)
						ActionCode	= ActionCode.Create
					else
						if (action type.Delete)
							ActionCode	= ActionCode.Delete
					increment bod id.VariationID
					include TriggerGeneralLedgerCompanyServiceRules



