FSMICInboundBODImport is a BusinessClass
	owned by integration
	
	prefix is FSMIC
	
	Ontology
		symbolic key is FSMICInboundBODImport
		
	
	Patterns
		implements InlineUserFields
			size is 1000
        implements StaticJava
        disable AuditIndex
	
	
	Context Fields
		FSMInboundBODTracker
			
	Persistent Fields
	
	Field Rules
	
	Local Fields

		NewBODTracker  							is a FSMInboundBODTracker view
		NewItem									is a Item view
		NewItemLocation							is a ItemLocation view
		LocalConfigurationParameter				is Alpha size up to 200
		LocalBODXML								is XMLDocument
		Error             						is Boolean
		ErrorMessage      						is Alpha 300
		LocalFSMInboundBODTracker				is Numeric 15
		LocalIterator							is Numeric 9
		LocalNameValue							is Alpha 100
		LocalActionCode							is Alpha 9
		LocalCompany							is Numeric 4
		LocalItemCompany						is Numeric 4
		LocalGenericDelimiter					is Alpha 9
		LocalTrackerID							is Numeric 15
		LocalItemDescriptionCount				is Numeric 9 
		LocalItemLongDescription				is Alpha 350
		LocalSerialTrackFlag					is Alpha 6
		LocalSerialTracked						is Alpha 2
		LocalLotTrackFlag						is Alpha 6
		LocalLotTracked							is Alpha 2
		LocalCatchWeightFlag					is Alpha 6
		LocalCatchWeightIndicator				is Alpha 2
		LocalUserAreaCount						is Numeric 9
		LocalMajorSalesClass					is like MajorSalesClass	
		LocalCommodityCode						is Alpha 35
		LocalOriginalCommodityCode				is Alpha 35
		LocalStatus								is Alpha 10
		LocalItemstatus							is Alpha 10
		LocalItemGroup							is Alpha 5
		LocalCommodityCodeSegment1				is Alpha 4
		LocalCommodityCodeSegment2				is Alpha 4
		LocalCommodityCodeSegment3				is Alpha 4
		LocalCommodityCodeSegment4				is Alpha 4
		LocalItemLocationCount					is Numeric 9
		LocalItemLocation						is Alpha 20
		LocalSyncItemLocation					is Alpha 20
		LocalMaximumOrderQuantity				is Alpha 13
		LocalMinimumOrderQunatity				is Alpha 13 
		LocalGeneralLedgerCategory				is Alpha 4
		LocalVariationID						is Alpha 100
		LocalBODID								is Alpha 100
		LocalItem 								is Alpha 60
		LocalItemDescription    				is Alpha 60
		LocalName				 				is Alpha size 50
		LocalName1				 				is Alpha size 50
		LocalLoop                               is Numeric 9
		LocalItemUOM							is Alpha 4
		LocalDocumentID                	 		is Alpha 40
		LocalOriginalCreateDateTime				is Alpha 25
		LocalConfirmBOD							is Alpha 20
		LocalErrorMessage 						is Alpha 300
		LocalSItemMasterXML						is XMLDocument
		LocalFromLogicalID						is Alpha 60
		LocalComponentID						is Alpha 40
		LocalAccountingEntity					is AlphaUpper size 12
		LocalProcessShipmentAE					is AlphaUpper size 12
		LocalCrossAccountingEntity				is AlphaUpper size 12
		LocalMainUserTemplate					is Alpha size 250
		LocalLineReference 						is Alpha 100
		LocalItemLocationAccountingEntity		is AlphaUpper size 12
		LocalAccountingentityCompany 			is Alpha 40

		LocalUserField1 						is AlphaUpper size 30
		LocalUserField2 						is AlphaUpper size 30
		LocalUserField3 						is AlphaUpper size 30
		LocalUserField4 						is AlphaUpper size 30
		LocalUserField5 						is AlphaUpper size 30
		LocalMinorSalesClass 					is like MinorSalesClass 
		LocalMajorInventoryClass 				is like MajorInventoryClass 
		LocalMinorInventoryClass 				is like MinorInventoryClass 
		LocalMajorPurchasingClass 				is like MajorPurchasingClass 	
		LocalMinorPurchasingClass 				is like MinorPurchasingClass 
		LocalCrossItemGroup						is Alpha 60	
		LocalSplitItem 							is Alpha 32
		LocalItemLineLocation					is Alpha 60
		LocalItemLocationStandardCost 			is an InternationalCost
		LocalPItemMasterXML 					is XMLDocument
		LocalItemLocLocationID					is Alpha 60
		LocalIAckId								is Boolean
		LocalTaskID								is Alpha 100
        LocalReferenceID						is Alpha 100
        LocalConfirmationCode 					is Alpha 100
        LocalAuthorizationID 					is Alpha 100
        LocalICompany							is Alpha 10
        LocalFinanceEnterPriseGroup				is Alpha 4

		NewInventoryTransaction       			is a InventoryTransaction view
		LocalWarehouseLocation					is Alpha 40
		LocalCurrentDate						is Alpha 25
		LocalLineCount							is Numeric 9
		LocalUnitCode							is Alpha 4
		LocalRequestedItem						is Alpha 32
		LocalQuantity							is a Quantity
		LocalReasonCode							is a ReasonCode
		LocalHoldCode							is a HoldCode
		LocalInventoryTransaction				is Numeric 12
		LocalPrefHoldBinFld						is Alpha 30
		LocalLastIssueFlag						is Boolean
		LocalPreferredHoldBin					is Alpha 10
		LocalUnitCost							is Decimal size 21.8
		LocalSerializedLotCount					is Numeric 9
		LocalSerialNumberLength					is Numeric 9
		LocalLotNumberLength					is Numeric 9
		LocalSerialNumer						is AlphaUpper 30
		LocalLotNumber							is AlphaUpper 30
		LocalLotItemQuantity					is Alpha 30
		LocalSInventoryAdjXML 					is XMLDocument

		LocalToLogicalID						is Alpha 60
        LocalReturnMsg							is Alpha 100
        LocalAfterHoldCode						is Alpha size 4
		LocalBeforeHoldCode						is Alpha size 4
		LocalInventoryTrans						is Numeric 12
		LocalToBin								is Alpha size 10	
		LocalFromBin							is Alpha size 10
		LocalInventoryLocation					is Alpha size 20
		LocalCleanAccountingEntity				is Alpha size 12
		LocalInvLotLength						is Numeric 4
		LocalInvCounter							is Numeric 4
		LocalInvLotNumber							is Alpha size 100
		LocalInvLotQuantity						is Alpha size 100

		LocalPOString							is Alpha 50
    	LocalTransDate							is Alpha 20
		LocalTotalLines							is Numeric 4
		LocalCodeLeng							is Numeric 4
		LocalListID								is Alpha 20
		LocalCode								is Alpha 20
		LocalNumOfLines							is Numeric 4 
		LocalNumberOfLinesAdded					is Numeric 4
		LocalNumOfLots							is Numeric 4
		LocalLotNum								is Alpha 20
		LocalCountLot							is Numeric 4
		LocalCountLotAdded						is Numeric 4
		LocalPONum								is Numeric 9
		LocalDescriptionLng 					is Numeric 4
		LocalSubDescriptionExists 				is Numeric 2
		LocalPORLines			  				is Numeric 4
		LocalHeaderSubDescription				is Alpha size 100
		LocalHeaderDescription					is Alpha size 100
		LocalDocRefType							is Alpha size 30
		LocalBillOfLading						is Alpha size 22
		LocalPOReceipt							is Numeric 4
		LocalHoldCodes							is Alpha size 20
		LocalPreferedHoldBin					is Alpha size 20
		LocalBOQuantity							is Decimal 13.4
		LocalAction								is Alpha size 10
		LocalTotReceivedQuantity 				is Decimal 13.4
		LocalLineFC								is Alpha size 2
		LocalBuyer								is Alpha size 20
		LocalSerailOrLotCounter					is Numeric 4
		LocalSerailOrLot						is Numeric 4
		LocalSerailCounter						is Numeric 4
		LocalTotSerailNum						is Numeric 4
		LocalTotSerail							is Numeric 4
		LocalTotLotNum							is Numeric 4
		LocalLineCounter						is Numeric 4
		LocalAccount							is Alpha 26
		LocalAccountingUnit						is Alpha 25
		NewInventoryTransactionLine				is a InventoryTransactionLine view
		LocalLotCounter							is Numeric 4
		LocalLotQuantity						is Numeric 4
		LocalRejectReason						is Alpha 60
		LocalCreateDateTime						is Alpha 40
		LocalSubAccount							is Alpha 26
		LocalDebitCodeAE						is Alpha 40
		LocalNameValueID						is Alpha 100
		LocalProject							is Alpha 40
		LocalFinanceDimension1					is Alpha 20
		LocalFinanceDimension2					is Alpha 20
		LocalFinanceDimension3					is Alpha 20
		LocalFinanceDimension4					is Alpha 20
		LocalFinanceDimension5					is Alpha 20
		LocalFinanceDimension6					is Alpha 20
		LocalFinanceDimension7					is Alpha 20
		LocalFinanceDimension8					is Alpha 20
		LocalFinanceDimension9					is Alpha 20
		LocalFinanceDimension10					is Alpha 20
		LocalInvLineRef							is Alpha 40	
		InvLineQuantity							is Alpha 40
		InvLineUnitCost							is Alpha 40
		BODLineCount							is Numeric size 40	
		INVLineNum								is Numeric 40
		LocalReqLocation						is Alpha 40
		ProcessShipmentLineAckXML				is XMLDocument 

		LocalWarehouseLocationID				is Alpha 40
		LocalItemID								is Alpha 60
		LocalFSMUOM	                	 		is Alpha 40
		LocalFSMBaseUOMQuantity					is Numeric 40
		LocalStockOnHandQuantity 				is Numeric 40
		LocalFSMItemQuantity					is Numeric 20
		LocalSyncInventoryCountXML				is XMLDocument	

	Derived Fields
		
		DerivedGenericDelimiter is a DerivedField
			type is Alpha size 9
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedMultipleFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedCleanDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedDefaultDebitCodeBlock is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "DefaultDebitCodeBlock"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		BODCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			restricted
			BODCurrentTimeStamp = system current timestamp
			return BODCurrentTimeStamp
			
		BODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCurrentTimeStamp[1:4] + "-" + BODCurrentTimeStamp[5:6] + "-" + BODCurrentTimeStamp[7:8] + "T" + BODCurrentTimeStamp[9:10] + ":" + BODCurrentTimeStamp[11:12] + ":" + BODCurrentTimeStamp[13:14] + "Z"	
		
		DerivedAckResponse is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Rejected"
			else
				return "Accepted"
				
		DerivedReasonCode is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Application_Error"
			else
				return "Application_Success"


		NativeItemAccountingEntity	is a NativeField
			type is Alpha size 20
			restricted
			
		NativeLocation	is a NativeField
			type is Alpha size 20
			restricted
		
		NativeCompany	is a NativeField
			type is Alpha size 60
			restricted
						
		DerivedDefaultItemGroup is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "DefaultItemGroup"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "IntegratingApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedItemMasterConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + LocalDocumentID + ":" +"?BOD&verb=Confirm&&TrackerID="+ LocalTrackerID 
		
		DerivedSIMErrorMessage is a DerivedField
			type is Alpha 300
			return LocalErrorMessage
					
		DerivedSIMReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing ItemMaster- " + DerivedSIMErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedSIMReturnMessage		
				
		SyncItemMasterConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncItemMasterConfirmBODXML = template.IONSyncItemMaster_ConfirmBOD_ST document for this instance


		NativeItem	is a NativeField
			type is Alpha size 60
			restricted
			
		NativeProcessItemAccountingEntity	is a NativeField
			type is Alpha size 60
			restricted	
			
		NativeProcessShipmentAccountingEntity is a NativeField
			type is Alpha size 60
			restricted
			
		NativeItemLocation is a NativeField
			type is Alpha size 60
			restricted	
				
		DerivedProcessItemMasterAckBODID is a DerivedField
			type is Alpha 300
			restricted
			if(LocalIAckId = "true")
				return "infor-nid:"+DerivedTenantID+":"+DerivedItemAckId+":"+LocalItemLocLocationID+":"+":"+"?BOD&verb=Ack&TrackerID="+ LocalTrackerID
			else
				return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" +"?BOD&verb=Ack&TrackerID="+ LocalTrackerID 
				
		DerivedPItemErrorMessage is a DerivedField
			type is Alpha 300
			restricted
			return LocalErrorMessage	
		
		DerivedPItemReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing ItemMaster- " + DerivedPItemErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedPItemErrorMessage
		
		DerivedProcessItemMConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:"+DerivedTenantID+":"+DerivedItemAckId+":"+LocalItemLocLocationID+":"+":"+"?BOD&verb=Confirm&TrackerID="+ LocalTrackerID
			
		DerivedItemAckId is a DerivedField
			type is Alpha 60
			restricted
			if(LocalItem entered)
				return LocalAccountingEntity + DerivedGenericDelimiter + LocalItemGroup + DerivedGenericDelimiter + LocalItem
			else
				return "" 
			
		DerivedItemLocAckId	is a DerivedField
			type is Alpha 60
			restricted
			if(LocalICompany entered)
				return LocalICompany + DerivedGenericDelimiter + LocalItemLocation
			else
				return ""
										
		ProcessItemMasterConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessItemMasterConfirmBODXML = template.IONProcessItemMaster_ConfirmBOD_ST document for this instance
		
		ProcessItemMasterAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessItemMasterAcknowledgeBODXML = template.IONProcessItemMaster_AcknowledgeBOD_ST document for this instance


		DerivedInventoryAdjustmentReference is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "SyncInventoryAdjustment_Reference"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
											
		NativeAccountingEntity	is a NativeField
			type is Alpha size 100
			restricted
			
		NativeWarehouseLocation is a NativeField
			type is Alpha size 100
			restricted
		
		BODFormattedCurrentDate is a DerivedField
			type is Alpha size 25
			restricted
			return BODCurrentTimeStamp[1:4] + "-" + BODCurrentTimeStamp[5:6] + "-" + BODCurrentTimeStamp[7:8] 
			
		NativeRequestedItem is a NativeField
			type is Alpha size 100
			restricted	
		
		DerivedInventoryAdjConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + LocalAccountingEntity + ":" + ":" +LocalDocumentID+ ":" + "?BOD&verb=Confirm&TrackerID="+ LocalTrackerID 

		DerivedPIErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Failed message," + "Message: "+ LocalErrorMessage +",TrackerID= "+ LocalTrackerID			

		DerivedPIReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error Inventory Adjustment- " + LocalErrorMessage
			else
				return LocalErrorMessage

		SyncInventoryAdjustmentConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncInventoryAdjustmentConfirmBODXML = template.IONSyncInventoryAdjustment_ConfirmBOD_ST document for this instance


		
		DerivedProcessInventoryHoldConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + LocalCompany + ":" + LocalInventoryLocation + ":" + LocalDocumentID + ":" + "?BOD&verb=Confirm&TrackerID=" + LocalTrackerID
		
		SyncInventoryLocationConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncInventoryLocationConfirmBODXML = template.IONSyncInventoryHold_ConfirmBOD_ST document for this instance
		


		NativeCodes is a NativeField
			type is Alpha 50
			restricted
		
		DerivedPShipmentConfirmBodID is a DerivedField
			type is Alpha 400
			restricted
			return "infor-nid:"+DerivedTenantID+":"+LocalCompany+":"+LocalItemLocation+":"+LocalInventoryTrans+":"+"?Shipment&verb=Confirm&TrackerID="+LocalTrackerID	
		
		DerivedPShipmentACKBodID is a DerivedField
			type is Alpha 400
			restricted
			return "infor-nid:"+DerivedTenantID+":"+LocalCompany+":"+LocalItemLocation+":"+LocalDocumentID+":"+"?Shipment&verb=Acknowledge&TrackerID="+LocalTrackerID	
		
		ProcessShipmentConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessShipmentConfirmBODXML = template.IONProcessShipment_ConfirmBOD_ST document for this instance
		
		ProcessShipmentACKBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessShipmentACKBODXML = template.IONProcessShipment_ACKBOD_ST document for this instance


		
		DerivedShowItemMasterConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + LocalDocumentID + ":" +"?BOD&verb=Confirm&&TrackerID="+ LocalTrackerID 
			
		ShowItemMasterConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ShowItemMasterConfirmBODXML = template.IONShowItemMaster_ConfirmBOD_ST document for this instance

		
		DerivedConfigDocID is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedConfigFEG is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		NativeWarehouselocationID	is a NativeField
			type is Alpha size 40
			restricted
		
		DerivedInventoryCountConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + LocalDocumentID + ":" +"?BOD&verb=Confirm&TrackerID="+ LocalTrackerID 
					
		DerivedSyncInventoryCountReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing SyncInventoryCount- " + LocalErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedSyncInventoryCountReturnMessage		
				
		SyncInventoryCountConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncInventoryCountConfirmBODXML = template.IONSyncInventoryCount_ConfirmBOD_ST document for this instance

	Relations
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
                
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
		
		UserTemplateRel
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
			Instance Selection
				where (related.UserTemplate   = LocalMainUserTemplate)
				
		FSMCleanDocIDCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
				related.FSMBODCrossReference.SourceField 		= "DESTAE"
				related.FSMBODCrossReference.DestinationField 	= "CSFGLC"
			Instance Selection
				where (related.SourceValue	= LocalItemLocationAccountingEntity)	
	

		FSMBODConfigurationItemMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ItemMaster"
            	related.FSMBODConfiguration.Direction 	= 2
		
		FSMBODConfigurationProcessItemMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "ItemMaster"
            	related.FSMBODConfiguration.Direction 	= 2
		
		FSMBODConfigurationInventoryAdjRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "InventoryAdjustment"
            	related.FSMBODConfiguration.Direction 	= 2
												
		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "SourceAccountingEntity"
            	related.FSMBODCrossReference.DestinationField 	= "DestinationAccountingEntity"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
		
		FSMBODCrossReferenceBusinessGroupDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "SourceAccountingEntity"
            	related.FSMBODCrossReference.DestinationField 	= "DestinationBusinessGroup"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
					
#ifdef module ic
		GeneralLedgerCategoryRel
			one-to-many relation to GeneralLedgerCategory
			Field Mapping uses symbolic key
				related.Company				=	LocalCompany
				related.InventoryLocation	=	LocalItemLocation 
				
		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	=	LocalItemGroup
				related.Item		= 	LocalItem	
				
		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company				=	LocalCompany
				related.InventoryLocation	=	LocalItemLocation
				related.Item				= 	LocalItem


				
		InventoryTransactionRel
			one-to-one relation to InventoryTransaction
			Field Mapping uses symbolic key
				related.Company				= LocalCompany
				related.InventoryLocation	= LocalItemLocation
				related.InventoryTransaction = LocalInventoryTransaction
				

		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "InventoryHold"
            	related.FSMBODConfiguration.Direction 	= 2


		InventoryTransactionLineRel		
			one-to-many relation to InventoryTransactionLine	
			Field Mapping uses symbolic key
				related.Company						= LocalCompany
				related.InventoryLocation			= LocalItemLineLocation
				related.InventoryTransaction		= LocalInventoryTransaction
				related.TransactionSystemCode		="IC"

		FSMBODConfigurationProcessShipmentRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "Shipment"
            	related.FSMBODConfiguration.Direction 	= 2		
#endif


		FSMBODConfigurationShowItemMasterRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= 4
            	related.FSMBODConfiguration.Noun 		= "ItemMaster"
            	related.FSMBODConfiguration.Direction 	= 2

		
		FSMBODCleanDocIDRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "DESTAE"
            	related.FSMBODCrossReference.DestinationField 	= "CSFGLC"
            Instance Selection
				where (related.SourceValue	= LocalCleanAccountingEntity)

		FSMBODConfigurationSyncInventoryCountRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "InventoryCount"
            	related.FSMBODConfiguration.Direction 	= 2
				
		InventoryCountItemRel
			one-to-many relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup	=	LocalItemGroup
				related.Item		= 	LocalSplitItem			
			Instance Selection	
				where (related.StockUOM	=   LocalFSMUOM)
				
		InventoryCountItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company				=	LocalCompany
				related.InventoryLocation	=	LocalItemLocation
				related.Item				= 	LocalSplitItem

	Actions
		
		Create is a Create Action
			restricted
		
		Update is an Update Action
			restricted
		
		Delete is a Delete Action				
			restricted

#ifdef module ic			

		SyncItemMasterBODImport is an Import Action
			restricted
			bod type is Sync.ItemMaster			
			Parameters
				ItemMasterBOD 				is XMLDocument		
			Action Rules
				LocalAccountingEntity   	 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalVariationID             = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalItem 					 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalBODID                   = ItemMasterBOD select "//ApplicationArea/BODID"
				LocalBODXML					 = ItemMasterBOD
				LocalActionCode				 = ItemMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalCrossAccountingEntity	 = FSMBODCrossReferenceDetailRel.DestinationValue
				LocalGenericDelimiter        = DerivedGenericDelimiter
				LocalCompany                 = NativeItemAccountingEntity
				if(FSMBODConfigurationItemMasterRel exists and FSMBODConfigurationItemMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ItemMaster"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalItem
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalItem
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					if(LocalActionCode = "Add")
						invoke CreateItem
							invoked.ItemMasterBOD       = ItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItem				= LocalItem
		                	invoked.PrmCompany			= LocalCompany 
		            else
	            		invoke UpdateOrDeleteItem
	            			invoked.ItemMasterBOD      	= ItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItem				= LocalItem
		                	invoked.PrmCompany			= LocalCompany
			    else 
			    if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "ItemMaster"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalItem
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ItemMaster Inbound BOD Service is not Enabled" 
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalItem
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ItemMaster Inbound BOD Service is not Enabled" 
						
		CreateItem 	is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
			Action Rules
				LocalItem					= PrmItem
				LocalAccountingEntity 		= PrmAccountingEntity
				LocalCompany 		  		= PrmCompany
				LocalItemDescriptionCount 	= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalIterator = 1
				LocalItemLongDescription 	= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
       			LocalItemUOM				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
       			LocalSerialTrackFlag		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
       			LocalLotTrackFlag			= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
       			LocalCatchWeightFlag		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/CatchWeightIndicator"
       			LocalStatus					= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
       			LocalUserAreaCount			= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Classification)"
       			LocalItemGroup 				= DerivedDefaultItemGroup
				LocalItemLocationCount 		= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
                while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@type"
                	LocalName1 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@languageID"
					LocalNameValue = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
					if (LocalName = "ShortName")
       					LocalItemDescription = LocalNameValue
       				else
       				if (LocalName1 = "en")
	       				LocalItemDescription = LocalNameValue
       				LocalIterator = LocalIterator + 1
	       		if(LocalItemDescription = "")
	       			LocalItemDescription = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
       			if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag = "")
					LocalSerialTracked = "N"
				else
					LocalSerialTracked = "R"
       			if(LocalLotTrackFlag = "false" or LocalLotTrackFlag = "")
					LocalLotTracked = "N"
				else
					LocalLotTracked = "R"
       			if(LocalCatchWeightFlag = "false" or LocalCatchWeightFlag = "")
					LocalCatchWeightIndicator = "N"
				else
					LocalCatchWeightIndicator = "R"
				LocalLoop = 1
				while(LocalUserAreaCount >= LocalLoop)
					LocalName = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code/@listID"
					LocalNameValue = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code"
					if(LocalName = "Product Groups")
						LocalMajorSalesClass = LocalNameValue
					if(LocalName = "Item Groups")
						LocalCommodityCode	= LocalNameValue
					LocalLoop = LocalLoop + 1
				LocalCommodityCodeSegment1 = LocalCommodityCode[0:2]
				LocalCommodityCodeSegment2 = LocalCommodityCode[3:4]
				LocalCommodityCodeSegment3 = LocalCommodityCode[5:6]
				LocalCommodityCodeSegment4 = LocalCommodityCode[7:8]
				if(LocalCommodityCodeSegment2 = "")
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1
				else 
				if(LocalCommodityCodeSegment3 = "")
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2
				else 
				if(LocalCommodityCodeSegment4 = "")
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3
				else
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3 +"-"+LocalCommodityCodeSegment4
				if(LocalStatus = "Open")
					LocalItemstatus = "true"															
				else
				if(LocalStatus = "Deleted")
					LocalItemstatus = "false"
				invoke Create Item
					assign result to NewItem 
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message 
                    invoked.ItemGroup         				= LocalItemGroup
                    invoked.Description   					= LocalItemDescription
                    invoked.StockUOM						= LocalItemUOM	
                    invoked.LotTracked						= LocalLotTracked
                    invoked.SerialTracked 					= LocalSerialTracked
                    invoked.CatchWeightCode					= LocalCatchWeightIndicator
                    invoked.MajorSalesClass					= LocalMajorSalesClass
                    invoked.Active							= LocalItemstatus
                    invoked.Item 							= LocalItem
                    invoked.Description3					= LocalItemLongDescription
                    invoked.CommodityCode					= LocalOriginalCommodityCode
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp 
					invoke SendSIMConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ItemMasterBOD      			= ItemMasterBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
               	if(LocalItemLocationCount > 0)
               		invoke CreateItemLocationLine
               			invoked.ItemMasterBOD			= ItemMasterBOD
               			invoked.PrmItem				 	= NewItem.Item
               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
               			invoked.PrmCompany				= LocalCompany
               			invoked.PrmItemstatus			= LocalItemstatus
               	else
		        	invoke Update FSMInboundBODTrackerRel
						invoked.Status			= 3
						invoked.CloseDate		= system current timestamp
             
        CreateItemLocationLine	is an Import Action
        	restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
				PrmItemstatus			is Alpha 10
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalCompany				=   PrmCompany
				LocalItemstatus				=   PrmItemstatus
				LocalItemLocationCount 		= 	ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalGenericDelimiter     	= 	DerivedGenericDelimiter
				LocalIterator = 1
				while (LocalItemLocationCount >= LocalIterator)
					LocalLineLocation			=   ItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalItemLineLocation 		= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalLineReference 		 	= 	NativeLocation
					if(DerivedIntegratingApplication = "EAM" and DerivedCleanDocumentID != "Y")
					 	LocalItemLocation 		= 	LocalSyncItemLocation
					 	LocalCompany			= 	LocalItemCompany
					else
					if(DerivedIntegratingApplication = "EAM" and DerivedCleanDocumentID = "Y")
						LocalItemLocationAccountingEntity = LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID/@accountingEntity"
						if(FSMCleanDocIDCrossReferenceDetailRel exist)
							if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
								LocalAccountingentityCompany = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
						else
							LocalAccountingentityCompany = LocalItemLocationAccountingEntity
						if(DerivedMultipleFEG != "Y")
							LocalCompany = LocalAccountingentityCompany
						else
							LocalCompany = NativeCompany
						LocalItemLocation = LocalItemLineLocation
					else
						LocalItemLocation 		= 	LocalItemLineLocation 
					LocalMaximumOrderQuantity	= 	LocalLineLocation  select "/ItemLocation/MaximumLotSizeBaseUOMQuantity"
					LocalMinimumOrderQunatity	=   LocalLineLocation  select "/ItemLocation/MinimumLotSizeBaseUOMQuantity"
					if(GeneralLedgerCategoryRel exists)
						LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
						invoke Create ItemLocation
							assign result to NewItemLocation 
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message
							invoked.Company							= LocalCompany
							invoked.InventoryLocation				= LocalItemLocation
							invoked.Item							= LocalItem
							invoked.GeneralLedgerCategory			= LocalGeneralLedgerCategory
							invoked.Active							= LocalItemstatus
							invoked.MinimumOrderQuantity			= LocalMinimumOrderQunatity
							invoked.MaximumOrderQuantity			= LocalMaximumOrderQuantity
							invoked.InventoryTracked				=  "1"
							invoked.AllowReceipt					=  "1"
							invoked.AllowIssue						=  "1"
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp 
							invoke SendSIMConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
						else	
							LocalIterator		= LocalIterator + 1
							if (LocalIterator%20 = 0)
								commit transaction
							
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= true
							invoked.ErrorMessage 			= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendSIMConfirmBOD
							invoked.PrmErrorMessage 		= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
							invoked.ItemMasterBOD      		= ItemMasterBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						LocalIterator = LocalItemLocationCount + 1
								
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp	
								
		UpdateOrDeleteItem is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
			Action Rules
				LocalItem					= 	PrmItem
				LocalAccountingEntity 		= PrmAccountingEntity
				LocalCompany 		  		= PrmCompany
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalItemDescriptionCount 	= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalIterator 				= 1
				LocalItemGroup 				= DerivedDefaultItemGroup
				LocalActionCode				= ItemMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
                while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName 		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@type"
                	LocalName1 		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@languageID"
					LocalNameValue 	= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
					if (LocalName = "ShortName")
       					LocalItemDescription = LocalNameValue
       				else
       				if (LocalName1 = "en")
	       				LocalItemDescription = LocalNameValue
       				LocalIterator = LocalIterator + 1
	       		if(LocalItemDescription = "")
	       			LocalItemDescription = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
				if(ItemRel exists)
					if(LocalActionCode = "Replace")
						LocalItemLongDescription 	= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
       					LocalItemUOM				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
       					LocalSerialTrackFlag		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
       					LocalLotTrackFlag			= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
       					LocalCatchWeightFlag		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/CatchWeightIndicator"
       					LocalUserAreaCount			= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Classification)"
       					LocalStatus					= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
       					LocalItemLocationCount 		= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
       					if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag = "")
							LocalSerialTracked = "N"
						else
							LocalSerialTracked = "R"
       					if(LocalLotTrackFlag = "false" or LocalLotTrackFlag = "")
							LocalLotTracked = "N"
						else
							LocalLotTracked = "R"
       					if(LocalCatchWeightFlag = "false" or LocalCatchWeightFlag = "")
							LocalCatchWeightIndicator = "N"
						else
							LocalCatchWeightIndicator = "R"
						LocalLoop = 1
						while(LocalUserAreaCount >= LocalLoop)
							LocalName = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code/@listID"
							LocalNameValue = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code"
							if(LocalName = "Product Groups")
								LocalMajorSalesClass = LocalNameValue
							if(LocalName = "Item Groups")
								LocalCommodityCode	= LocalNameValue
							LocalLoop = LocalLoop + 1
						LocalCommodityCodeSegment1 = LocalCommodityCode[0:2]
						LocalCommodityCodeSegment2 = LocalCommodityCode[3:4]
						LocalCommodityCodeSegment3 = LocalCommodityCode[5:6]
						LocalCommodityCodeSegment4 = LocalCommodityCode[7:8]
						if(LocalCommodityCodeSegment2 = "")
							LocalOriginalCommodityCode =  LocalCommodityCodeSegment1
						else 
						if(LocalCommodityCodeSegment3 = "")
							LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2
						else 
						if(LocalCommodityCodeSegment4 = "")
							LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3
						else
							LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3 +"-"+LocalCommodityCodeSegment4
						if(LocalStatus = "Open")
							LocalItemstatus = "true"															
						else
						if(LocalStatus = "Deleted")
							LocalItemstatus = "false"	
						invoke Update ItemRel
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message 
		                    invoked.ItemGroup         				= LocalItemGroup
		                    invoked.Description   					= LocalItemDescription
		                    invoked.StockUOM						= LocalItemUOM	
		                    invoked.LotTracked						= LocalLotTracked
		                    invoked.SerialTracked 					= LocalSerialTracked
		                    invoked.CatchWeightCode					= LocalCatchWeightIndicator
		                    invoked.MajorSalesClass					= LocalMajorSalesClass
		                    invoked.Active							= LocalItemstatus
		                    invoked.Item 							= LocalItem
		                    invoked.Description3					= LocalItemLongDescription
		                    invoked.CommodityCode					= LocalOriginalCommodityCode
		               	if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= Error
								invoked.ErrorMessage 			= ErrorMessage
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							invoke SendSIMConfirmBOD
								invoked.PrmErrorMessage 		= ErrorMessage
								invoked.ItemMasterBOD      		= ItemMasterBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						
						if(LocalItemLocationCount > 0 and (!FSMInboundBODTrackerRel.Error))
							invoke UpdateItemLocationLine
								invoked.ItemMasterBOD			= ItemMasterBOD
               					invoked.PrmItem				 	= LocalItem
		               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
		               			invoked.PrmCompany				= LocalCompany
		               			invoked.PrmItemstatus			= LocalItemstatus

					else
					if(LocalActionCode = "Delete")
						invoke Delete ItemRel
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
							invoke SendSIMConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Status			= 3
							invoked.CloseDate		= system current timestamp	
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 				= true
						invoked.ErrorMessage 		= "Error Processing SyncItemMaster - Unable to FindItem"+" " +LocalItem +" "+"for ItemGroup"+" "+LocalItemGroup
						invoked.Status				= 2
						invoked.CloseDate			= system current timestamp	
					invoke SendSIMConfirmBOD
						invoked.PrmErrorMessage 	= "Error Processing SyncItemMaster - Unable to FindItem"+" " +LocalItem +" "+"for ItemGroup"+" "+LocalItemGroup
						invoked.ItemMasterBOD      	= ItemMasterBOD
						invoked.PrmTrackerID		= LocalFSMInboundBODTracker
								
		UpdateItemLocationLine is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
				PrmItemstatus			is Alpha 10	
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalCompany				=   PrmCompany
				LocalItemstatus				=   PrmItemstatus
				LocalItemLocationCount 		= 	ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalGenericDelimiter     	= 	DerivedGenericDelimiter
				LocalIterator = 1
				while (LocalItemLocationCount >= LocalIterator)
					LocalLineLocation			=   ItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalItemLineLocation 		= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalLineReference 		 	= 	NativeLocation
					if(DerivedIntegratingApplication = "EAM" and DerivedCleanDocumentID != "Y")
					 	LocalItemLocation 		= 	LocalSyncItemLocation
					 	LocalCompany			= 	LocalItemCompany
					else
					if(DerivedIntegratingApplication = "EAM" and DerivedCleanDocumentID = "Y")
						LocalItemLocationAccountingEntity = LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID/@accountingEntity"
						if(FSMCleanDocIDCrossReferenceDetailRel exist)
							if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
								LocalAccountingentityCompany = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
						else
							LocalAccountingentityCompany = LocalItemLocationAccountingEntity
						if(DerivedMultipleFEG != "Y")
							LocalCompany = LocalAccountingentityCompany
						else
							LocalCompany = NativeCompany
						LocalItemLocation = LocalItemLineLocation
					else
						LocalItemLocation 		= 	LocalItemLineLocation 
					LocalMaximumOrderQuantity	= 	LocalLineLocation  select "/ItemLocation/MaximumLotSizeBaseUOMQuantity"
					LocalMinimumOrderQunatity	=   LocalLineLocation  select "/ItemLocation/MinimumLotSizeBaseUOMQuantity"
					if(ItemLocationRel exists)
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Update ItemLocationRel
								resume on error
                   					Error            					= true
                        			ErrorMessage     					= error message
                        		invoked.Company					= 	LocalCompany
								invoked.InventoryLocation		= 	LocalItemLocation
								invoked.Item					=	LocalItem
								invoked.GeneralLedgerCategory	=  	LocalGeneralLedgerCategory
								invoked.Active					=  	LocalItemstatus
								invoked.MinimumOrderQuantity	=  	LocalMinimumOrderQunatity
								invoked.MaximumOrderQuantity	=  	LocalMaximumOrderQuantity
								invoked.InventoryTracked		=  	"1"
								invoked.AllowReceipt			=  	"1"
								invoked.AllowIssue				=  	"1"
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendSIMConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ItemMasterBOD      			= ItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								LocalIterator = LocalItemLocationCount + 1
							else	
								LocalIterator		= LocalIterator + 1
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= true
								invoked.ErrorMessage 			= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							invoke SendSIMConfirmBOD
								invoked.PrmErrorMessage 		= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.ItemMasterBOD      		= ItemMasterBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
					else
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Create ItemLocation
								assign result to NewItemLocation 
								resume on error
	                   				Error            			= true
	                        		ErrorMessage     			= error message
								invoked.Company					= 	LocalCompany
								invoked.InventoryLocation		= 	LocalItemLocation
								invoked.Item					=	LocalItem
								invoked.GeneralLedgerCategory	=	LocalGeneralLedgerCategory
								invoked.Active					=  	LocalItemstatus
								invoked.MinimumOrderQuantity	=  	LocalMinimumOrderQunatity
								invoked.MaximumOrderQuantity	=  	LocalMaximumOrderQuantity
								invoked.InventoryTracked		=  	"1"
								invoked.AllowReceipt			=  	"1"
								invoked.AllowIssue				=  	"1"
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendSIMConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ItemMasterBOD      			= ItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								LocalIterator = LocalItemLocationCount + 1
							else	
								LocalIterator		= LocalIterator + 1
						else
							LocalFSMInboundBODTracker 			= PrmInboundTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= true
								invoked.ErrorMessage 			= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							invoke SendSIMConfirmBOD
								invoked.PrmErrorMessage 		= "Error Processing SyncItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.ItemMasterBOD      		= ItemMasterBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
               				
               	if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status			= 3
						invoked.CloseDate		= system current timestamp	
				            
		SendSIMConfirmBOD is an Instance Action
			restricted			
			Parameters
				ItemMasterBOD 	is XMLDocument
				PrmErrorMessage is Alpha 300
				PrmTrackerID	is Numeric 15
			Action Rules
				LocalSItemMasterXML					= ItemMasterBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalFromLogicalID					= ItemMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID					= ItemMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID							= ItemMasterBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalAccountingEntity				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalOriginalCreateDateTime			= ItemMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID            		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONSyncItemMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncItemMasterConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID		
						

		ProcessItemMasterBODImport is an Import Action
			restricted
			bod type is Process.ItemMaster			
			Parameters
				ItemMasterBOD 				is XMLDocument		
			Action Rules
				LocalAccountingEntity   	 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalVariationID             = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalItem 					 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalBODID                   = ItemMasterBOD select "//ApplicationArea/BODID"
				LocalBODXML					 = ItemMasterBOD
				LocalActionCode				 = ItemMasterBOD select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalDocumentID				 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalCrossItemGroup	 		 = FSMBODCrossReferenceBusinessGroupDetailRel.DestinationValue
				if(DerivedDefaultItemGroup entered)
					LocalItemGroup = DerivedDefaultItemGroup
				else
				if(LocalCrossItemGroup entered)
					LocalItemGroup = LocalCrossItemGroup
				LocalGenericDelimiter        = DerivedGenericDelimiter
				LocalCrossAccountingEntity   = NativeProcessItemAccountingEntity
				if(LocalActionCode != "Add")
					LocalSplitItem			 = NativeItem
				if(FSMBODConfigurationProcessItemMasterRel exists and FSMBODConfigurationProcessItemMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "ItemMaster"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					if(LocalActionCode = "Add")
						invoke CreateProcessItem
							invoked.ItemMasterBOD       = ItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItemGroup		= LocalItemGroup
		            else
	            		invoke UpdateOrDeleteProcessItem
	            			invoked.ItemMasterBOD      	= ItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItem				= LocalSplitItem
		                	invoked.PrmItemGroup		= LocalItemGroup
			    else 
				if(FSMInboundBODTracker not entered)	
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "ItemMaster"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalCrossAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Process ItemMaster Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalCrossAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Process ItemMaster Inbound BOD Service is not Enabled"
						
		CreateProcessItem is an Import Action 
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItemGroup			is like BusinessGroup
			Local Fields
				LocalUserArea			is XMLDocument	
			Action Rules
				LocalItemGroup				= PrmItemGroup
				LocalAccountingEntity 		= PrmAccountingEntity
				LocalItemDescriptionCount 	= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalIterator = 1	
				while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@languageID"
					LocalNameValue = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
					if (LocalName = "en")
       					LocalItemDescription = LocalNameValue
       				LocalIterator = LocalIterator + 1
       			LocalItemUOM				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
       			LocalSerialTrackFlag		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
       			LocalLotTrackFlag			= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
       			LocalStatus					= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
       			LocalUserAreaCount			= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/UserArea/Property)"
       			
       			if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag not entered)
					LocalSerialTracked = "N"
				else
					LocalSerialTracked = "R"
					
       			if(LocalLotTrackFlag = "false" or LocalLotTrackFlag not entered)
					LocalLotTracked = "N"
				else
					LocalLotTracked = "R"	
					
				if(LocalStatus = "Open")
					LocalItemstatus = "true"															
				else
				if(LocalStatus = "Deleted")
					LocalItemstatus = "false"
						
				LocalLoop = 1
				while(LocalUserAreaCount >= LocalLoop)
					LocalUserArea = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/UserArea/Property[<LocalLoop>]"
					LocalName = LocalUserArea select "/Property/NameValue/@name"
					LocalNameValue = LocalUserArea select "/Property/NameValue"
					if(LocalName = "Userdef1")
						LocalUserField1 = LocalNameValue
					else
					if(LocalName = "Userdef2")
						LocalUserField2 = LocalNameValue
					else
					if(LocalName = "Userdef3")
						LocalUserField3 = LocalNameValue
					else
					if(LocalName = "Userdef4")
						LocalUserField4 = LocalNameValue
					else
					if(LocalName = "Userdef5")
						LocalUserField5 = LocalNameValue
					else
					if(LocalName = "Major Sales Class")
						LocalMajorSalesClass = LocalNameValue
					else
					if(LocalName = "Minor Sales Class")
						LocalMinorSalesClass = LocalNameValue
					else
					if(LocalName = "Major Inventory Class")
						LocalMajorInventoryClass = LocalNameValue
					else
					if(LocalName = "Minor Inventory Class")
						LocalMinorInventoryClass = LocalNameValue
					else
					if(LocalName = "Major Purchasing Class")
						LocalMajorPurchasingClass = LocalNameValue
					else
					if(LocalName = "Minor Purchasing Class")
						LocalMinorPurchasingClass = LocalNameValue
					LocalLoop = LocalLoop + 1	
				LocalItemLocationCount 		= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"	
				invoke Create Item
					assign result to NewItem 
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message 
                    invoked.ItemGroup         				= LocalItemGroup
                    invoked.Description   					= LocalItemDescription
                    invoked.StockUOM						= LocalItemUOM	
                    invoked.LotTracked						= LocalLotTracked
                    invoked.SerialTracked 					= LocalSerialTracked
                    invoked.MajorSalesClass					= LocalMajorSalesClass
                    invoked.MinorSalesClass					= LocalMinorSalesClass
                    invoked.MinorPurchasingClass			= LocalMinorPurchasingClass
                    invoked.MajorPurchasingClass			= LocalMajorPurchasingClass
                    invoked.MajorInventoryClass				= LocalMajorInventoryClass
                    invoked.MinorInventoryClass				= LocalMinorInventoryClass
                    invoked.Active							= LocalItemstatus
                    invoked.UserField1						= LocalUserField1
                    invoked.UserField2						= LocalUserField2
                    invoked.UserField3						= LocalUserField3
                    invoked.UserField4						= LocalUserField4
                    invoked.UserField5						= LocalUserField5
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp 
					invoke SendPItemMConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ItemMasterBOD      			= ItemMasterBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					invoke SendPItemACKBOD
                        invoked.PrmErrorMessage 			= ErrorMessage
                        invoked.ItemMasterBOD      			= ItemMasterBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalAccountingEntity	
				else
               	if(LocalItemLocationCount > 0)
               		invoke CreateProcessItemLocationLine
               			invoked.ItemMasterBOD			= ItemMasterBOD
               			invoked.PrmItem				 	= NewItem.Item
               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
               			invoked.PrmItemstatus			= LocalItemstatus
               			invoked.PrmAccountingEntity 	= LocalAccountingEntity
               			invoked.PrmItemGroup			= LocalItemGroup
               	else
		        	invoke Update FSMInboundBODTrackerRel
						invoked.Status			= 3
						invoked.CloseDate		= system current timestamp	
					invoke SendPItemACKBOD
                        invoked.PrmErrorMessage 			= "Item Created Sucessfully"
                        invoked.ItemMasterBOD      			= ItemMasterBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
                        invoked.PrmItem						= NewItem.Item
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalAccountingEntity
						
		CreateProcessItemLocationLine	is an Import Action
        	restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItemstatus			is Alpha 10
				PrmItemGroup			is like BusinessGroup
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalItemstatus				=   PrmItemstatus
				LocalItemLocationCount	 	= 	ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalItemGroup				= 	PrmItemGroup
				LocalAccountingEntity		= 	PrmAccountingEntity
				LocalFinanceEnterPriseGroup	= 	LocalAccountingEntity
				LocalIterator 				= 	1
				LocalGenericDelimiter       = 	DerivedGenericDelimiter
				while (LocalItemLocationCount >= LocalIterator)
					LocalLineLocation				=   ItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalCrossAccountingEntity 		= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID/@accountingEntity" 
					LocalCompany					= 	NativeItemAccountingEntity
					LocalItemLineLocation			= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalItemLocation 				= 	NativeItemLocation
					LocalItemLocationStandardCost	= 	LocalLineLocation  select "/ItemLocation/ItemValue/UnitValue/Amount"
					if(GeneralLedgerCategoryRel exists)
						LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
						invoke Create ItemLocation
							assign result to NewItemLocation 
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message
							invoked.Company							= LocalCompany
							invoked.InventoryLocation				= LocalItemLocation
							invoked.Item							= LocalItem
							invoked.GeneralLedgerCategory			= LocalGeneralLedgerCategory
							invoked.Active							= LocalItemstatus
							invoked.InventoryTracked				=  1
							invoked.AllowReceipt					=  1
							invoked.AllowIssue						=  1
							invoked.StandardCost					= LocalItemLocationStandardCost
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp 
							invoke SendPItemMConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
							invoke SendPItemACKBOD
                        		invoked.PrmErrorMessage 			= ErrorMessage
                        		invoked.ItemMasterBOD      			= ItemMasterBOD
                        		invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        		invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        		invoked.PrmIAckId					= true
                        		invoked.PrmItem						= LocalItem
                        		invoked.PrmItemGroup				= LocalItemGroup
                        		invoked.PrmAccountingEntity 		= LocalAccountingEntity
							LocalIterator = LocalItemLocationCount + 1
						else	
							LocalIterator		= LocalIterator + 1
							if (LocalIterator%20 = 0)
								commit transaction
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= true
							invoked.ErrorMessage 				= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						invoke SendPItemMConfirmBOD
							invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
							invoked.ItemMasterBOD      			= ItemMasterBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						invoke SendPItemACKBOD
                        	invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
                        	invoked.ItemMasterBOD      			= ItemMasterBOD
                        	invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        	invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        	invoked.PrmIAckId					= true
                        	invoked.PrmItem						= LocalItem
                        	invoked.PrmItemGroup				= LocalItemGroup
                        	invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
						LocalIterator = LocalItemLocationCount + 1
								
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp	
					invoke SendPItemACKBOD
                        invoked.PrmErrorMessage 			= "Item and ItemLocation Created Sucessfully"
                        invoked.ItemMasterBOD      			= ItemMasterBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
                        invoked.PrmItem						= LocalItem
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalAccountingEntity
                        invoked.PrmCompany					= LocalCompany
                        invoked.PrmLocation					= LocalItemLocation
						
		UpdateOrDeleteProcessItem is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmItemGroup			is Alpha 20
			Local Fields
				LocalUserArea			is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalAccountingEntity 		= 	PrmAccountingEntity
				LocalItemGroup 		  		= 	PrmItemGroup
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalFinanceEnterPriseGroup	= 	LocalAccountingEntity
				LocalItemDescriptionCount 	= 	ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalIterator 				= 	1	
				while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName 				 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@languageID"
					LocalNameValue 			 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
					if (LocalName = "en")
       					LocalItemDescription = LocalNameValue
       				LocalIterator 			 = LocalIterator + 1
				LocalActionCode				 = ItemMasterBOD select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				if(ItemRel exists)
					if(LocalActionCode = "Replace")
						LocalItemUOM		 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
		       			LocalSerialTrackFlag = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
		       			LocalLotTrackFlag	 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
		       			LocalStatus			 = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
		       			LocalUserAreaCount	 = ItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/UserArea/Property)"
		       			if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag not entered)
							LocalSerialTracked = "N"
						else
							LocalSerialTracked = "R"
		       			if(LocalLotTrackFlag = "false" or LocalLotTrackFlag not entered)
							LocalLotTracked = "N"
						else
							LocalLotTracked = "R"	
						if(LocalStatus = "Open")
							LocalItemstatus = "true"															
						else
						if(LocalStatus = "Deleted")
							LocalItemstatus = "false"	
						LocalLoop = 1
						while(LocalUserAreaCount >= LocalLoop)
							LocalUserArea = ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/UserArea/Property[<LocalLoop>]"
							LocalName = LocalUserArea select "/Property/NameValue/@name"
							LocalNameValue = LocalUserArea select "/Property/NameValue"
							if(LocalName = "Userdef1")
								LocalUserField1 = LocalNameValue
							else
							if(LocalName = "Userdef2")
								LocalUserField2 = LocalNameValue
							else
							if(LocalName = "Userdef3")
								LocalUserField3 = LocalNameValue
							else
							if(LocalName = "Userdef4")
								LocalUserField4 = LocalNameValue
							else
							if(LocalName = "Userdef5")
								LocalUserField5 = LocalNameValue
							else
							if(LocalName = "Major Sales Class")
								LocalMajorSalesClass = LocalNameValue
							else
							if(LocalName = "Minor Sales Class")
								LocalMinorSalesClass = LocalNameValue
							else
							if(LocalName = "Major Inventory Class")
								LocalMajorInventoryClass = LocalNameValue
							else
							if(LocalName = "Minor Inventory Class")
								LocalMinorInventoryClass = LocalNameValue
							else
							if(LocalName = "Major Purchasing Class")
								LocalMajorPurchasingClass = LocalNameValue
							else
							if(LocalName = "Minor Purchasing Class")
								LocalMinorPurchasingClass = LocalNameValue
							LocalLoop 				= LocalLoop + 1	
						LocalItemLocationCount 		= ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"	
						invoke Update ItemRel
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message 
		                    invoked.ItemGroup         				= LocalItemGroup
		                    invoked.Description   					= LocalItemDescription
		                    invoked.StockUOM						= LocalItemUOM	
		                    invoked.LotTracked						= LocalLotTracked
		                    invoked.SerialTracked 					= LocalSerialTracked
		                    invoked.MajorSalesClass					= LocalMajorSalesClass
		                    invoked.MinorSalesClass					= LocalMinorSalesClass
		                    invoked.MinorPurchasingClass			= LocalMinorPurchasingClass
		                    invoked.MajorPurchasingClass			= LocalMajorPurchasingClass
		                    invoked.MajorInventoryClass				= LocalMajorInventoryClass
		                    invoked.MinorInventoryClass				= LocalMinorInventoryClass
		                    invoked.Active							= LocalItemstatus
		                    invoked.UserField1						= LocalUserField1
		                    invoked.UserField2						= LocalUserField2
		                    invoked.UserField3						= LocalUserField3
		                    invoked.UserField4						= LocalUserField4
		                    invoked.UserField5						= LocalUserField5
		               	if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
							invoke SendPItemMConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							invoke SendPItemACKBOD
                        		invoked.PrmErrorMessage 			= ErrorMessage
                        		invoked.ItemMasterBOD      			= ItemMasterBOD
                        		invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        		invoked.PrmItem						= LocalItem
                        		invoked.PrmItemGroup				= LocalItemGroup
                        		invoked.PrmAccountingEntity 		= LocalAccountingEntity
						
						if(LocalItemLocationCount > 0 and (!FSMInboundBODTrackerRel.Error))
							invoke UpdateProcessItemLocationLine
								invoked.ItemMasterBOD				= ItemMasterBOD
               					invoked.PrmItem				 		= LocalItem
		               			invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
		               			invoked.PrmItemstatus				= LocalItemstatus
		               			invoked.PrmAccountingEntity 		= LocalAccountingEntity
		               			invoked.PrmItemGroup				= LocalItemGroup
					else
					if(LocalActionCode = "Delete")
						invoke DeleteProcessItem
	            			invoked.ItemMasterBOD      	= ItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalAccountingEntity
		                	invoked.PrmItem				= LocalItem
		                	invoked.PrmItemGroup		= LocalItemGroup
								
					if(!FSMInboundBODTrackerRel.Error and (LocalItemLocationCount = 0) and (LocalActionCode != "Delete"))
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
						invoke SendPItemACKBOD
                        	invoked.PrmErrorMessage 			= "Item Updated Sucessfully"
                        	invoked.ItemMasterBOD      			= ItemMasterBOD
                        	invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        	invoked.PrmItem						= LocalItem
                        	invoked.PrmItemGroup				= LocalItemGroup
                        	invoked.PrmAccountingEntity 		= LocalAccountingEntity		
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= true
						invoked.ErrorMessage 				= "Unable to FindItem"+" "+LocalItem+" "+"for ItemGroup"+" "+ LocalItemGroup
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp	
					invoke SendPItemMConfirmBOD
						invoked.PrmErrorMessage 			= "Unable to FindItem"+" "+LocalItem +" "+"for ItemGroup"+" "+ LocalItemGroup
						invoked.ItemMasterBOD      			= ItemMasterBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					invoke SendPItemACKBOD
                        invoked.PrmErrorMessage 			= "Unable to FindItem" +" "+LocalItem +" "+"for ItemGroup"+" "+ LocalItemGroup
                        invoked.ItemMasterBOD      			= ItemMasterBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
                        invoked.PrmItem						= LocalItem
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
						
		UpdateProcessItemLocationLine is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmItemstatus			is Alpha 10	
				PrmAccountingEntity 	is AlphaUpper size 12
				PrmItemGroup			is Alpha 20
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalItemstatus				=   PrmItemstatus
				LocalItemGroup 				= 	PrmItemGroup
				LocalAccountingEntity		= 	PrmAccountingEntity
				LocalFinanceEnterPriseGroup	= 	LocalAccountingEntity
				LocalItemLocationCount 		= 	ItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalIterator 				= 	1
				LocalGenericDelimiter       = 	DerivedGenericDelimiter
				while (LocalItemLocationCount >= LocalIterator)
					LocalLineLocation				=   ItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalCrossAccountingEntity 		= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID/@accountingEntity" 
					LocalCompany					= 	NativeItemAccountingEntity
					LocalItemLineLocation			= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalItemLocation 				= 	NativeItemLocation
					LocalItemLocationStandardCost	= 	LocalLineLocation  select "/ItemLocation/ItemValue/UnitValue/Amount"
					if(ItemLocationRel exists)
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Update ItemLocationRel
								resume on error
                   					Error            					= true
                        			ErrorMessage     					= error message
                        		invoked.Company							= LocalCompany
								invoked.InventoryLocation				= LocalItemLocation
								invoked.Item							= LocalItem
								invoked.GeneralLedgerCategory			= LocalGeneralLedgerCategory
								invoked.Active							= LocalItemstatus
								invoked.InventoryTracked				=  "1"
								invoked.AllowReceipt					=  "1"
								invoked.AllowIssue						=  "1"
								invoked.StandardCost					= LocalItemLocationStandardCost
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendPItemMConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ItemMasterBOD      			= ItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
									invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
								invoke SendPItemACKBOD
                        			invoked.PrmErrorMessage 			= ErrorMessage
                        			invoked.ItemMasterBOD      			= ItemMasterBOD
                        			invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        			invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        			invoked.PrmIAckId					= true
                        			invoked.PrmItem						= LocalItem
                        			invoked.PrmItemGroup				= LocalItemGroup
                        			invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
								LocalIterator 							= LocalItemLocationCount + 1
							else	
								LocalIterator							= LocalIterator + 1
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= true
								invoked.ErrorMessage 				= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
							invoke SendPItemMConfirmBOD
								invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
							invoke SendPItemACKBOD
                        		invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
                        		invoked.ItemMasterBOD      			= ItemMasterBOD
                        		invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        		invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        		invoked.PrmIAckId					= true
                        		invoked.PrmItem						= LocalItem
                        		invoked.PrmItemGroup				= LocalItemGroup
                        		invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
							LocalIterator 							= LocalItemLocationCount + 1
					else
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Create ItemLocation
								assign result to NewItemLocation 
								resume on error
	                   				Error            					= true
	                        		ErrorMessage     					= error message
								invoked.Company							= LocalCompany
								invoked.InventoryLocation				= LocalItemLocation
								invoked.Item							= LocalItem
								invoked.GeneralLedgerCategory			= LocalGeneralLedgerCategory
								invoked.Active							= LocalItemstatus
								invoked.InventoryTracked				=  "1"
								invoked.AllowReceipt					=  "1"
								invoked.AllowIssue						=  "1"
								invoked.StandardCost					= LocalItemLocationStandardCost
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendPItemMConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ItemMasterBOD      			= ItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
									invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
								invoke SendPItemACKBOD
                        			invoked.PrmErrorMessage 			= ErrorMessage
                        			invoked.ItemMasterBOD      			= ItemMasterBOD
                        			invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        			invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        			invoked.PrmIAckId					= true
                        			invoked.PrmItem						= LocalItem
                        			invoked.PrmItemGroup				= LocalItemGroup
                        			invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
								LocalIterator 							= LocalItemLocationCount + 1
							else	
								LocalIterator		= LocalIterator + 1
						else
							LocalFSMInboundBODTracker 				= PrmInboundTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= true
								invoked.ErrorMessage 				= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
							invoke SendPItemMConfirmBOD
								invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
								invoked.ItemMasterBOD      			= ItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
							invoke SendPItemACKBOD
                        		invoked.PrmErrorMessage 			= "Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+ LocalItemLocation
                        		invoked.ItemMasterBOD      			= ItemMasterBOD
                        		invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        		invoked.PrmLineAccountingEntity		= LocalCrossAccountingEntity
                        		invoked.PrmIAckId					= true
                        		invoked.PrmItem						= LocalItem
                        		invoked.PrmItemGroup				= LocalItemGroup
                        		invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
							LocalIterator = LocalItemLocationCount + 1
               				
               	if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp
					invoke SendPItemACKBOD
                    	invoked.PrmErrorMessage 			= "Item and ItemLocation Updated Sucessfully"
                    	invoked.ItemMasterBOD      			= ItemMasterBOD
                    	invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                    	invoked.PrmItem						= LocalItem
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalAccountingEntity
                        invoked.PrmCompany					= LocalCompany
                        invoked.PrmLocation					= LocalItemLocation		
		
		DeleteProcessItem is an Import Action
			restricted
			Parameters
				ItemMasterBOD 			is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmItemGroup			is Alpha 20
			Action Rules
				LocalItem									= PrmItem
				LocalAccountingEntity 						= PrmAccountingEntity
				LocalFinanceEnterPriseGroup					= LocalAccountingEntity
				LocalItemGroup 		  						= PrmItemGroup
				LocalFSMInboundBODTracker 					= PrmInboundTracker
				invoke Delete ItemRel
					resume on error
	       				Error            					= true
	            		ErrorMessage     					= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendPItemMConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ItemMasterBOD      			= ItemMasterBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					invoke SendPItemACKBOD
                        invoked.PrmErrorMessage 			= ErrorMessage
                        invoked.ItemMasterBOD      			= ItemMasterBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker
                        invoked.PrmItem						= LocalItem
                        invoked.PrmItemGroup				= LocalItemGroup
                        invoked.PrmAccountingEntity 		= LocalFinanceEnterPriseGroup
						
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp
					invoke SendPItemACKBOD
	                	invoked.PrmErrorMessage 			= "Item Deleted Sucessfully"
	                	invoked.ItemMasterBOD      			= ItemMasterBOD
	                	invoked.PrmTrackerID				= LocalFSMInboundBODTracker
	                	invoked.PrmItem						= LocalItem
	                    invoked.PrmItemGroup				= LocalItemGroup
	                    invoked.PrmAccountingEntity 		= LocalAccountingEntity			
											
		SendPItemACKBOD is an Instance Action
			restricted			
			Parameters
				ItemMasterBOD 							is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmTrackerID							is Numeric 15
				PrmAccountingEntity 					is AlphaUpper size 12 
				PrmItem									is like Item
				PrmItemGroup							is Alpha 20
				PrmCompany								is like InventoryCompany
				PrmLocation								is like InventoryLocation
				PrmIAckId								is Boolean
				PrmLineAccountingEntity					is Alpha 60
			Action Rules
				LocalPItemMasterXML						= ItemMasterBOD
				LocalErrorMessage						= PrmErrorMessage
				LocalTrackerID							= PrmTrackerID
				LocalItem								= PrmItem
				LocalAccountingEntity 					= PrmAccountingEntity
				LocalItemGroup 		  					= PrmItemGroup
				LocalCompany							= PrmCompany
				LocalItemLocation						= PrmLocation
				LocalIAckId								= PrmIAckId
				LocalItemLocLocationID					= PrmLineAccountingEntity
				if(LocalCompany = "0")
					LocalICompany = ""
				else
					LocalICompany = LocalCompany
				LocalComponentID						= ItemMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID								= ItemMasterBOD select "//ApplicationArea/BODID"
				LocalTaskID								= ItemMasterBOD select "//ApplicationArea/Sender/TaskID"
				LocalReferenceID						= ItemMasterBOD select "//ApplicationArea/Sender/ReferenceID"
				LocalConfirmationCode					= ItemMasterBOD select "//ApplicationArea/Sender/ConfirmationCode"
				LocalAuthorizationID					= ItemMasterBOD select "//ApplicationArea/Sender/AuthorizationID"
				LocalFromLogicalID						= ItemMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalOriginalCreateDateTime				= ItemMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalDocumentID							= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalCrossAccountingEntity				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalMainUserTemplate					= "IONProcessItemMaster_AcknowledgeBOD_ST"
				
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessItemMasterAcknowledgeBODXML
						bod type is "Acknowledge.ItemMaster"	
						accounting entity is LocalCrossAccountingEntity
						document id is LocalDocumentID
						
		SendPItemMConfirmBOD is an Instance Action
			restricted			
			Parameters
				ItemMasterBOD 	is XMLDocument
				PrmErrorMessage is Alpha 300
				PrmTrackerID	is Numeric 15
				PrmLineAccountingEntity	is Alpha 60
			Action Rules
				LocalPItemMasterXML					= ItemMasterBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalItemLocLocationID				= PrmLineAccountingEntity
				LocalFromLogicalID					= ItemMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID					= ItemMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID							= ItemMasterBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalAccountingEntity				= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalOriginalCreateDateTime			= ItemMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID            		= ItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONProcessItemMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessItemMasterConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID	
						

		SyncInventoryAdjustmentBODImport is an Import Action
			restricted
			bod type is Sync.InventoryAdjustment			
			Parameters
				InventoryAdjustmentBOD 		 is XMLDocument	
			Action Rules
				LocalBODXML					 = InventoryAdjustmentBOD
				LocalGenericDelimiter        = DerivedGenericDelimiter
				LocalAccountingEntity   	 = InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID/@accountingEntity"
				LocalVariationID             = InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID/@variationID"
				LocalWarehouseLocation 		 = InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentLine[1]/WarehouseLocation/ID"
				LocalBODID                   = InventoryAdjustmentBOD select "//ApplicationArea/BODID"
				LocalDocumentID              = InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID"
				if(LocalAccountingEntity entered and DerivedCleanDocumentID != "Y")	
					LocalCompany			 =  NativeAccountingEntity
				else
				if(LocalAccountingEntity entered and DerivedCleanDocumentID = "Y")
					LocalItemLocationAccountingEntity = InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID/@accountingEntity"
					if(FSMCleanDocIDCrossReferenceDetailRel exist)
						if (FSMCleanDocIDCrossReferenceDetailRel.DestinationValue entered)
							LocalAccountingentityCompany = FSMCleanDocIDCrossReferenceDetailRel.DestinationValue
					else
						LocalAccountingentityCompany = LocalItemLocationAccountingEntity
					if(DerivedMultipleFEG != "Y")
						LocalCompany = LocalAccountingentityCompany
					else
						LocalCompany = NativeCompany
				if(LocalWarehouseLocation entered and DerivedCleanDocumentID != "Y")
					LocalItemLocation		 = 	NativeWarehouseLocation
				else
				if(LocalWarehouseLocation entered and DerivedCleanDocumentID = "Y")
					LocalItemLocation		 = 	LocalWarehouseLocation
				if(FSMBODConfigurationInventoryAdjRel exists and FSMBODConfigurationInventoryAdjRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "InventoryAdjustment"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.BODLocation				= LocalItemLocation
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.BODLocation				= LocalItemLocation
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					invoke CreateInventoryTransaction
						invoked.InventoryAdjustmentBOD       = InventoryAdjustmentBOD
		                invoked.PrmInboundTracker 			 = LocalFSMInboundBODTracker
		                invoked.PrmLocation			         = LocalItemLocation
		                invoked.PrmCompany			         = LocalCompany 
		        else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "InventoryAdjustment"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync InventoryAdjustment Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync InventoryAdjustment Inbound BOD Service is not Enabled"	
						
		CreateInventoryTransaction is an Import Action
			restricted			
			Parameters
				InventoryAdjustmentBOD 		 is XMLDocument	
				PrmInboundTracker   		 is like FSMInboundBODTracker
				PrmCompany					 is like InventoryCompany
				PrmLocation					 is like InventoryLocation
			Action Rules
				LocalCompany				=   PrmCompany
				LocalItemLocation			=	PrmLocation
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalCurrentDate			=   BODFormattedCurrentDate
				LocalLineCount				=   InventoryAdjustmentBOD select "count(//DataArea/InventoryAdjustment/InventoryAdjustmentLine)"
				invoke Unreleased.Create InventoryTransaction
					assign result to NewInventoryTransaction 
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message 
                    invoked.Company	        				= LocalCompany
                    invoked.InventoryLocation				= LocalItemLocation
                    invoked.InventoryDocumentType			= "AJ"
                    invoked.TransactionDate					= LocalCurrentDate
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendSIAdjConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.InventoryAdjustmentBOD		= InventoryAdjustmentBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						invoked.PrmCompany					= LocalCompany
						
				else
               	if(LocalLineCount > 0)
               		invoke CreateInventoryTransactionLine
               			invoked.InventoryAdjustmentBOD	= InventoryAdjustmentBOD
               			invoked.PrmInventoryTransaction	= NewInventoryTransaction.InventoryTransaction
               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker 
               			invoked.PrmCompany				= LocalCompany
               			invoked.PrmLocation			    = LocalItemLocation
               			
               	if(!FSMInboundBODTrackerRel.Error)
					invoke ReleaseInventoryTransaction
						invoked.PrmInventoryTransaction	= NewInventoryTransaction.InventoryTransaction
               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker 
               			invoked.PrmCompany				= LocalCompany
               			invoked.PrmLocation			    = LocalItemLocation
               			invoked.InventoryAdjustmentBOD	= InventoryAdjustmentBOD
				
		CreateInventoryTransactionLine	is an Import Action
			restricted			
			Parameters
				InventoryAdjustmentBOD 		 is XMLDocument	
				PrmInboundTracker   		 is like FSMInboundBODTracker
				PrmInventoryTransaction		 is like InventoryTransaction
				PrmCompany					 is like InventoryCompany
				PrmLocation					 is like InventoryLocation
			Local Fields
				LocalLineXML       is XMLDocument
			Action Rules
				LocalCompany				=   PrmCompany
				LocalItemLocation			=	PrmLocation
				LocalInventoryTransaction	= 	PrmInventoryTransaction
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalGenericDelimiter       = 	DerivedGenericDelimiter
				LocalLineCount				=   InventoryAdjustmentBOD select "count(//DataArea/InventoryAdjustment/InventoryAdjustmentLine)"
				LocalIterator 				= 1
				while (LocalLineCount >= LocalIterator)
					LocalLineXML				=   InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentLine[<LocalIterator>]" 
					LocalUnitCode				= 	LocalLineXML  select "/InventoryAdjustmentLine/Quantity/@unitCode"		
					LocalRequestedItem			= 	LocalLineXML  select "/InventoryAdjustmentLine/Item/ItemID/ID"
					LocalQuantity				=   LocalLineXML  select "/InventoryAdjustmentLine/Quantity"
					LocalReasonCode				=   LocalLineXML  select "/InventoryAdjustmentLine/ReasonCode"
					LocalHoldCode				=   LocalLineXML  select "/InventoryAdjustmentLine/HoldCodes/Code"
					LocalSerializedLotCount     =   LocalLineXML  select "count(/InventoryAdjustmentLine/Item/SerializedLot)"
					LocalUserAreaCount 			=   LocalLineXML  select "count(/InventoryAdjustmentLine/UserArea/Property/NameValue)"
					if (LocalHoldCode entered)
						LocalHoldCode = LocalHoldCode
					else
						LocalHoldCode = LocalReasonCode
					if(LocalUserAreaCount > 0 and DerivedInventoryAdjustmentReference = "Y")
						LocalLoop = 1
						LocalReferenceID = ""
						while(LocalUserAreaCount >= LocalLoop)
							LocalName 		= LocalLineXML  select "/InventoryAdjustmentLine/UserArea/Property/NameValue[<LocalLoop>]/@name"
							LocalNameValue 	= LocalLineXML  select "/InventoryAdjustmentLine/UserArea/Property/NameValue[<LocalLoop>]"
                			if (LocalName = "IPSReference")
                				LocalReferenceID = LocalNameValue	
                			LocalLoop		 = LocalLoop + 1
					if(LocalRequestedItem entered and DerivedCleanDocumentID != "Y")
						LocalItem				=	NativeRequestedItem
					else
					if(LocalRequestedItem entered and DerivedCleanDocumentID = "Y")
						LocalItem				=	LocalRequestedItem	
					if(ItemLocationRel exists)
						if(LocalQuantity > 0)
							LocalLastIssueFlag = "true"
						else
							LocalLastIssueFlag = ""
						if(ItemLocationRel.NoCharge = "true")
							LocalLastIssueFlag = ""
						if(ItemLocationRel.LastIssueCost = "0" and LocalQuantity> 0)
							LocalUnitCost = ItemLocationRel.LastReceiptCost
							LocalLastIssueFlag = ""
						if(LocalHoldCode entered and ItemLocationRel.BinTracked = "true")
							LocalPreferredHoldBin = ItemLocationRel.PreferredHoldBin
						else
						if(LocalHoldCode not entered and ItemLocationRel.BinTracked = "true")
							LocalPreferredHoldBin = ItemLocationRel.PreferredBin
					
					invoke Unreleased.Create InventoryTransactionLine
						assign result to NewInventoryTransactionLine
						resume on error
                   			Error            		      = true
                        	ErrorMessage     		      = error message
						invoked.Company 				  = LocalCompany
						invoked.InventoryLocation		  = LocalItemLocation
						invoked.InventoryTransaction 	  = LocalInventoryTransaction
						invoked.Item				      = LocalItem
						invoked.Quantity				  = LocalQuantity
						invoked.UnitCost				  = LocalUnitCost
						invoked.TransactionUOM			  = LocalUnitCode
						invoked.TransactionSystemCode     = "IC"
						invoked.Reference				  = LocalReferenceID
						invoked.Bin						  = LocalPreferredHoldBin
						invoked.InventoryReasonCode		  = LocalHoldCode
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						invoke SendSIAdjConfirmBOD
							invoked.PrmErrorMessage 			= ErrorMessage
							invoked.InventoryAdjustmentBOD		= InventoryAdjustmentBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							invoked.PrmCompany					= LocalCompany
						invoke Unreleased.Delete InventoryTransactionRel
						LocalIterator = LocalLineCount + 1
					else
					if(LocalSerializedLotCount > 0)
						LocalSerialNumberLength = LocalLineXML  select "count(/InventoryAdjustmentLine/Item/SerializedLot/SerialNumber)"
						LocalLotNumberLength = LocalLineXML  select "count(/InventoryAdjustmentLine/Item/SerializedLot/Lot)"
						if(LocalLotNumberLength > 0)
							LocalLotNumber = LocalLineXML  select "/InventoryAdjustmentLine/Item/SerializedLot/Lot/LotIDs/ID"
							LocalLotItemQuantity = LocalLineXML  select "/InventoryAdjustmentLine/Item/SerializedLot/Lot/Quantity"
							invoke Unreleased.Create InventoryTransactionLineDetail
								resume on error
		                   			Error            		      = true
		                        	ErrorMessage     		      = error message
								invoked.Company 				  = LocalCompany
								invoked.InventoryLocation		  = LocalItemLocation
								invoked.InventoryTransaction 	  = LocalInventoryTransaction
								invoked.TransactionSystemCode     = "IC"
								invoked.InventoryTransactionLine  = NewInventoryTransactionLine.InventoryTransactionLine
								invoked.Lot                        = LocalLotNumber
								invoked.DerivedDetailQuantityValue = LocalLotItemQuantity
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
								invoke SendSIAdjConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.InventoryAdjustmentBOD		= InventoryAdjustmentBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
									invoked.PrmCompany					= LocalCompany
								LocalIterator		 = LocalIterator + 1
							else	
								LocalIterator		 = LocalIterator + 1
						else
						if(LocalSerialNumberLength > 0)
							LocalSerialNumer = LocalLineXML  select "/InventoryAdjustmentLine/Item/SerializedLot/SerialNumber"
							invoke Unreleased.Create InventoryTransactionLineDetail
								resume on error
		                   			Error            		      = true
		                        	ErrorMessage     		      = error message
								invoked.Company 				  = LocalCompany
								invoked.InventoryLocation		  = LocalItemLocation
								invoked.InventoryTransaction 	  = LocalInventoryTransaction
								invoked.TransactionSystemCode     = "IC"
								invoked.InventoryTransactionLine  = NewInventoryTransactionLine.InventoryTransactionLine
								invoked.Serial                    = LocalSerialNumer
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
								invoke SendSIAdjConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.InventoryAdjustmentBOD		= InventoryAdjustmentBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
									invoked.PrmCompany					= LocalCompany
								LocalIterator		 = LocalIterator + 1
							else	
								LocalIterator		 = LocalIterator + 1
					else	
						LocalIterator		 = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
			
						
		ReleaseInventoryTransaction is an Instance Action
			restricted
			Parameters
        		PrmInboundTracker   		 is like FSMInboundBODTracker
				PrmInventoryTransaction		 is like InventoryTransaction
				PrmCompany					 is like InventoryCompany
				PrmLocation					 is like InventoryLocation
				InventoryAdjustmentBOD 		 is XMLDocument
			Action Rules
				LocalCompany				=   PrmCompany
				LocalItemLocation			=	PrmLocation
				LocalInventoryTransaction	= 	PrmInventoryTransaction
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				invoke Unreleased.Release InventoryTransactionRel
					resume on error
                   		Error           				= true
                        ErrorMessage   	 				= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendSIAdjConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.InventoryAdjustmentBOD	= InventoryAdjustmentBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoked.PrmCompany				= LocalCompany
					invoke Unreleased.Delete InventoryTransactionRel
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
						
						
		SendSIAdjConfirmBOD is an Instance Action
			restricted			
			Parameters
				InventoryAdjustmentBOD 	is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
				PrmCompany				is like InventoryCompany
			Action Rules
				LocalSInventoryAdjXML				= InventoryAdjustmentBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalFromLogicalID					= InventoryAdjustmentBOD select "//ApplicationArea/Sender/LogicalID"
				LocalBODID							= InventoryAdjustmentBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID"
				LocalOriginalCreateDateTime			= InventoryAdjustmentBOD select "//ApplicationArea/CreationDateTime"
				LocalAccountingEntity   			= InventoryAdjustmentBOD select "//DataArea/InventoryAdjustment/InventoryAdjustmentHeader/DocumentID/ID/@accountingEntity"
				LocalComponentID					= InventoryAdjustmentBOD select "//ApplicationArea/Sender/ComponentID"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONSyncInventoryAdjustment_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncInventoryAdjustmentConfirmBODXML
						bod type is "Confirm.BOD"
						document id is LocalDocumentID	
#endif											

#ifdef module ic	
		SyncInventoryHoldBODImport is an Import Action
			restricted
			bod type is Sync.InventoryHold			
			Parameters
				InventoryHold 				is XMLDocument	
			Local Fields
				LocalLineXML 		      is XMLDocument	
			Action Rules
				LocalGenericDelimiter		= DerivedGenericDelimiter
				LocalAfterHoldCode			= InventoryHold select "//DataArea/InventoryHold/HoldCodes/Code"
				LocalBeforeHoldCode 		= InventoryHold select "//DataArea/InventoryHold/ItemInstance/HoldCodes/Code"
				LocalQuantity				= InventoryHold select "//DataArea/InventoryHold/HoldQuantity"
				LocalCrossAccountingEntity 	= InventoryHold select "//DataArea/Sync/AccountingEntityID"
				LocalCleanAccountingEntity	= LocalCrossAccountingEntity
				LocalInvLotLength		 	= InventoryHold select "count(//DataArea/InventoryHold/ItemInstance/SerializedLot/Lot)"
				LocalAccountingEntity		= InventoryHold select "//DataArea/InventoryHold/IDs/ID/@accountingEntity"
				LocalInvCounter				= 1
				if(DerivedConfigDocID = "Y")
					LocalCrossAccountingEntity = ""
					if(FSMBODCleanDocIDRel.DestinationValue entered)
						LocalCrossAccountingEntity	= FSMBODCleanDocIDRel.DestinationValue
					else
						LocalCrossAccountingEntity	= LocalCleanAccountingEntity
					if(DerivedConfigFEG != "Y")
						LocalCompany 	= LocalCrossAccountingEntity
					else 
					if(DerivedConfigFEG = "Y")
						LocalCompany	= NativeItemAccountingEntity
					LocalItemLocation	= InventoryHold select "//DataArea/Sync/LocationID"
					LocalItem		  = InventoryHold select "//DataArea/InventoryHold/ItemInstance/ItemID/ID"
				else
					if(LocalCrossAccountingEntity entered)
						LocalCompany			= NativeItemAccountingEntity
					else
						LocalCompany			= ""	
					LocalItemLineLocation 		= InventoryHold select "//DataArea/Sync/LocationID"
					if(LocalItemLineLocation entered)
						LocalItemLocation = NativeItemLocation
					else
						LocalItemLocation = ""
					LocalItem		  = InventoryHold select "//DataArea/InventoryHold/ItemInstance/ItemID/ID"
					if(LocalItem entered)
						LocalItem	  = NativeItem
					else
						LocalItem	  = ""	
				LocalUnitCode	  = InventoryHold select "//DataArea/InventoryHold/HoldQuantity/@unitCode"
				LocalBODXML		  = InventoryHold
				LocalVariationID  = InventoryHold select "//DataArea/InventoryHold/IDs/ID/@variationID"
				LocalBODID		  = InventoryHold select "//ApplicationArea/BODID"
				LocalDocumentID	  = InventoryHold select "//DataArea/InventoryHold/IDs/ID"
				if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "InventoryHold"
							invoked.Direction				= 2					
							invoked.Company					= LocalCompany
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODLocation				= LocalItemLocation
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Company					= LocalCompany
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODLocation				= LocalItemLocation
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if(LocalAfterHoldCode not entered or (LocalBeforeHoldCode not entered and LocalAfterHoldCode entered))
						if(ItemLocationRel exists)
							if(ItemLocationRel.PreferredHoldBin not entered)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= true
									invoked.ErrorMessage 				= "Item is not in CSF at this location"
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
					
								invoke SendSyncInventoryHoldConfirmBOD
									invoked.InventoryHold			= InventoryHold
									invoked.PrmCompany				= LocalCompany
									invoked.PrmInventoryLocation    = LocalItemLocation
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							else
								if(LocalBeforeHoldCode not entered and LocalAfterHoldCode entered)
									LocalToBin    = ItemLocationRel.PreferredHoldBin
									LocalFromBin  = ItemLocationRel.PreferredBin
								else
									LocalToBin	  = ItemLocationRel.PreferredBin
									LocalFromBin  = ItemLocationRel.PreferredHoldBin
								
								invoke Unreleased.Create InventoryTransaction
									assign result to NewInventoryTransaction
									resume on error
				                   		Error            					= true
				                        ErrorMessage     					= error message
									invoked.Company					= LocalCompany
									invoked.InventoryLocation		= LocalItemLocation
									invoked.InventoryDocumentType	= "BT"
								LocalInventoryTrans = NewInventoryTransaction.InventoryTransaction
								LocalInventoryTransaction			= LocalInventoryTrans
								if(!Error)
									invoke Unreleased.Create InventoryTransactionLine
									    assign result to NewInventoryTransactionLine								
										resume on error
					                   		Error            					= true
					                        ErrorMessage     					= error message
										invoked.Company									= LocalCompany
										invoked.InventoryLocation						= LocalItemLocation
										invoked.InventoryTransaction 					= LocalInventoryTrans
										invoked.Bin										= LocalFromBin
										invoked.Quantity								= LocalQuantity
										invoked.Item									= LocalItem
										invoked.LineComment								= ""
										invoked.Reference								= ""
										invoked.FromToCompanyLocationBin.FromToBin		= LocalToBin
										invoked.TransactionUOM							= LocalUnitCode
										invoked.UnitCost								= 25.0
										invoked.FromToCompanyLocationBin.FromToCompany	= LocalCompany
										invoked.FromToCompanyLocationBin.FromToLocation	= LocalItemLocation
								if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 						= Error
										invoked.ErrorMessage 				= ErrorMessage
										invoked.Status						= 2
										invoked.CloseDate					= system current timestamp
									
									invoke SendSyncInventoryHoldConfirmBOD
										invoked.InventoryHold			= InventoryHold
										invoked.PrmCompany				= LocalCompany
										invoked.PrmInventoryLocation    = LocalItemLocation
										invoked.PrmTrackerID			= LocalFSMInboundBODTracker								
								else
									while(LocalInvCounter <= LocalInvLotLength)
										LocalLineXML = InventoryHold select "//DataArea/InventoryHold/ItemInstance/SerializedLot/Lot[<LocalInvCounter>]"
										LocalInvLotQuantity	=	LocalLineXML select "/Lot/Quantity"
										LocalInvLotNumber	=	LocalLineXML select "/Lot/LotIDs/ID"
			            				invoke Unreleased.Create InventoryTransactionLineDetail
			            					resume on error
							               		Error            							= true
							                    ErrorMessage     							= error message
			            					invoked.Company				 					= LocalCompany	
			            					invoked.InventoryLocation	 					= LocalItemLocation
			            					invoked.InventoryTransaction					= LocalInventoryTrans
			            					invoked.InventoryTransactionLine.LineNumber 	= NewInventoryTransactionLine.InventoryTransactionLine.LineNumber
			            					invoked.TransactionSystemCode					= "IC"
			            					invoked.Item									= LocalItem
			            					invoked.Lot										= LocalInvLotNumber
			            					invoked.DerivedDetailQuantityValue				= LocalInvLotQuantity
			            					invoked.InventoryTransactionLine.WarehouseShipment = NewInventoryTransactionLine.InventoryTransactionLine.WarehouseShipment
										if(Error)
											invoke Unreleased.Delete InventoryTransactionRel

											invoke Update FSMInboundBODTrackerRel
												invoked.Error 						= Error
												invoked.ErrorMessage 				= ErrorMessage
												invoked.Status						= 2
												invoked.CloseDate					= system current timestamp
											invoke SendSyncInventoryHoldConfirmBOD
												invoked.InventoryHold			= InventoryHold
												invoked.PrmCompany				= LocalCompany
												invoked.PrmInventoryLocation    = LocalItemLocation
												invoked.PrmTrackerID			= LocalFSMInboundBODTracker
											LocalInvCounter = LocalInvLotLength + 1
										else
											LocalInvCounter = LocalInvCounter + 1
														
									invoke Unreleased.Transfer InventoryTransactionRel
										resume on error
					                   		Error            					= true
					                        ErrorMessage     					= error message
									if(Error)
										invoke Unreleased.Delete InventoryTransactionRel

										invoke Update FSMInboundBODTrackerRel
											invoked.Error 						= Error
											invoked.ErrorMessage 				= ErrorMessage
											invoked.Status						= 2
											invoked.CloseDate					= system current timestamp
										invoke SendSyncInventoryHoldConfirmBOD
											invoked.InventoryHold			= InventoryHold
											invoked.PrmCompany				= LocalCompany
											invoked.PrmInventoryLocation    = LocalItemLocation
											invoked.PrmTrackerID			= LocalFSMInboundBODTracker
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status						= 3
											invoked.CloseDate					= system current timestamp	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp		
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "InventoryHold"
						invoked.Direction				= 2					
						invoked.Company					= LocalCompany
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODLocation				= LocalItemLocation
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Error					= true	
						invoked.ErrorMessage			= "Sync InventoryHold Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Company					= LocalCompany
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODLocation				= LocalItemLocation
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Error					= true	
						invoked.ErrorMessage			= "Sync InventoryHold Inbound BOD Service is not Enabled"
									
		SendSyncInventoryHoldConfirmBOD is an Instance Action
			restricted			
			Parameters
				InventoryHold 				is XMLDocument
				PrmCompany					is Numeric 4
				PrmInventoryLocation 		is Alpha 20
				PrmTrackerID				is Numeric 15
			Action Rules
				LocalInventoryLocation		= PrmInventoryLocation
				LocalCompany				= PrmCompany
				LocalBODXML					= InventoryHold
				LocalDocumentID				= InventoryHold select "//DataArea/InventoryHold/IDs/ID"
				LocalToLogicalID			= InventoryHold select "//ApplicationArea/Sender/LogicalID"
				LocalBODID					= InventoryHold select "//ApplicationArea/BODID"
				LocalCrossAccountingEntity 	= InventoryHold select "//DataArea/Sync/AccountingEntityID"
				LocalReturnMsg				= "Item is not in CSF at this location"		
				LocalTrackerID				= PrmTrackerID
				LocalMainUserTemplate		= "IONSyncInventoryHold_ConfirmBOD_ST"
				LocalOriginalCreateDateTime	= InventoryHold select "//ApplicationArea/CreationDateTime"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncInventoryLocationConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalCrossAccountingEntity
						document id is LocalDocumentID			
#endif	

#ifdef module ic
		InventoryTransactionLines is an Import Action
			restricted			
			Parameters
				ShipmentBOD 				is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmLocation					is Alpha 20
				PrmInventoryTransaction		is Numeric 10
				PrmCompany					is Numeric 4
			Local Fields
				LocalInvTransLines 			is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalCompany				= PrmCompany
    			LocalItemLocation			= PrmLocation
				LocalInventoryTrans			= PrmInventoryTransaction
				LocalInventoryTransaction	= LocalInventoryTrans
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalLineCounter			= 1
            	LocalTotalLines 			= ShipmentBOD select "count(//DataArea/Shipment/ShipmentItem)"
            	while(LocalTotalLines >= LocalLineCounter)
            		LocalInvTransLines		= ShipmentBOD select "//DataArea/Shipment/ShipmentItem[<LocalLineCounter>]"
            		initialize LocalAccount 
            		initialize LocalAccountingUnit
					initialize LocalDebitCodeAE	
					initialize LocalProject					
					initialize LocalFinanceDimension1			
					initialize LocalFinanceDimension2			
					initialize LocalFinanceDimension3			
					initialize LocalFinanceDimension4			
					initialize LocalFinanceDimension5			
					initialize LocalFinanceDimension6			
					initialize LocalFinanceDimension7			
					initialize LocalFinanceDimension8			
					initialize LocalFinanceDimension9			
					initialize LocalFinanceDimension10			
					initialize LocalInvLineRef
            		LocalNumOfLines 		= LocalNumOfLines +1
            		LocalItem				= LocalInvTransLines select "/ShipmentItem/ItemID/ID"
            		if(DerivedConfigDocID = "Y")
            			LocalItem				= LocalInvTransLines select "/ShipmentItem/ItemID/ID"
            		else
	            		if(LocalItem entered)
	            			LocalItem			= NativeItem
	            		else
	            			LocalItem			= ""
            		LocalQuantity 			= LocalInvTransLines select "/ShipmentItem/ShippedQuantity"
            		LocalItemUOM  			= LocalInvTransLines select "/ShipmentItem/ShippedQuantity/@unitCode"
            		LocalCodeLeng 			= LocalInvTransLines select "count(/ShipmentItem/Classification/Codes/Code)"
            		LocalLoop = 1
            		while(LocalLoop <= LocalCodeLeng)
            			LocalAccountingUnit	 	= ""
        				LocalAccount		 	= ""
            			LocalListID					= LocalInvTransLines select "/ShipmentItem/Classification/Codes/Code[<LocalLoop>]/@listID"
            			if(LocalListID = "Cost Centers")
            				LocalCode				= LocalInvTransLines select "/ShipmentItem/Classification/Codes/Code[<LocalLoop>]"
            				if(DerivedConfigDocID = "Y")
            					LocalAccountingUnit	= LocalInvTransLines select "/ShipmentItem/Classification/Codes/Code[<LocalLoop>]"
	            			else	
	            				if(LocalCode entered)
	            					LocalAccountingUnit = NativeCodes
	            				else
	            					LocalCode	= ""
            			LocalLoop = LocalLoop + 1

					if(DerivedDefaultDebitCodeBlock = "Y")
						LocalUserAreaCount			= LocalInvTransLines select "count (/ShipmentItem/UserArea/Property)"
						LocalIterator = 1
						while (LocalUserAreaCount >= LocalIterator)
							LocalNameValueID	=	LocalInvTransLines select "/ShipmentItem/UserArea/Property[<LocalIterator>]/NameValue/@name"
							LocalNameValue		=	LocalInvTransLines select "/ShipmentItem/UserArea/Property[<LocalIterator>]/NameValue"
							if(LocalNameValueID = "fsm.AccountingEntity")
								LocalDebitCodeAE  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.AccountingUnit")
								LocalAccountingUnit  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Account")
								LocalAccount      = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Project")
								LocalProject    = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 1 Dimensions")
								LocalFinanceDimension1  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 2 Dimensions")
								LocalFinanceDimension2  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 3 Dimensions")
								LocalFinanceDimension3  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 4 Dimensions")
								LocalFinanceDimension4  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 5 Dimensions")
								LocalFinanceDimension5  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 6 Dimensions")
								LocalFinanceDimension6  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 7 Dimensions")
								LocalFinanceDimension7  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 8 Dimensions")
								LocalFinanceDimension8  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 9 Dimensions")
								LocalFinanceDimension9  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 10 Dimensions")
								LocalFinanceDimension10	= LocalNameValue
							else
							if(LocalNameValueID = "IPSReference")
								LocalInvLineRef  = LocalNameValue
							LocalIterator = LocalIterator + 1

            		invoke Unreleased.Create InventoryTransactionLine
            			assign result to NewInventoryTransactionLine
            			resume on error
		               		Error            						= true
		                    ErrorMessage     						= error message
            			invoked.Company								= LocalCompany
            			invoked.InventoryLocation					= LocalItemLocation
            			invoked.InventoryTransaction				= LocalInventoryTrans
            			invoked.Item								= LocalItem
            			invoked.Quantity							= LocalQuantity
            			invoked.TransactionUOM						= LocalItemUOM
            			invoked.TransactionSystemCode				= "IC"
            			invoked.OffsetAccount.GeneralLedgerChartAccount =  	LocalAccount
            			invoked.OffsetAccount.AccountingUnit			= 	LocalAccountingUnit
						invoked.Reference								=	LocalInvLineRef
						invoked.OffsetAccount.Project					=	LocalProject
						invoked.OffsetAccount.FinanceDimension1			=	LocalFinanceDimension1
						invoked.OffsetAccount.FinanceDimension2			=	LocalFinanceDimension2
						invoked.OffsetAccount.FinanceDimension3			=	LocalFinanceDimension3
						invoked.OffsetAccount.FinanceDimension4			=	LocalFinanceDimension4
						invoked.OffsetAccount.FinanceDimension5			=	LocalFinanceDimension5
						invoked.OffsetAccount.FinanceDimension6			=	LocalFinanceDimension6
						invoked.OffsetAccount.FinanceDimension7			=	LocalFinanceDimension7
						invoked.OffsetAccount.FinanceDimension8			=	LocalFinanceDimension8
						invoked.OffsetAccount.FinanceDimension9			=	LocalFinanceDimension9
						invoked.OffsetAccount.FinanceDimension10		=	LocalFinanceDimension10
            		if(!Error)
            			LocalNumberOfLinesAdded = LocalNumberOfLinesAdded +1
            			LocalNumOfLots			= LocalInvTransLines select "count(/ShipmentItem/SerializedLot)"
            			LocalLotCounter 		= 1  
            			while(LocalLotCounter <= LocalNumOfLots)
            				LocalLotNum			= LocalInvTransLines select "/ShipmentItem/SerializedLot[<LocalLotCounter>]/Lot/LotIDs/ID"
            				LocalLotQuantity 	= LocalInvTransLines select "/ShipmentItem/SerializedLot[<LocalLotCounter>]/ItemQuantity"
            				LocalCountLot  		= LocalCountLot + 1
            				invoke Unreleased.QuickCreate InventoryTransactionLineDetail
            					resume on error
				               		Error            							= true
				                    ErrorMessage     							= error message
            					invoked.Company				 					= LocalCompany						
            					invoked.InventoryLocation	 					= LocalItemLocation
            					invoked.InventoryTransaction					= LocalInventoryTrans
            					invoked.InventoryTransactionLine.LineNumber 	= NewInventoryTransactionLine.InventoryTransactionLine.LineNumber
            					invoked.TransactionSystemCode					= "IC"
            					invoked.Item									= LocalItem
            					invoked.Lot										= LocalLotNum
            					invoked.Quantity								= LocalLotQuantity
            					invoked.InventoryTransactionLine.WarehouseShipment = NewInventoryTransactionLine.InventoryTransactionLine.WarehouseShipment
            				if(!Error)
            					LocalCountLotAdded = LocalCountLotAdded + 1	
            				LocalLotCounter	= LocalLotCounter +1
            			
        				LocalLineCounter = LocalLineCounter +1
        			else
        				LocalLineCounter = LocalLineCounter +1	
            	if((LocalNumOfLines > 0 and LocalNumOfLines = LocalNumberOfLinesAdded) and (LocalLotCounter-1 = LocalCountLotAdded))
            		invoke Unreleased.Release InventoryTransactionRel
            			resume on error
		               		Error            							= true
		                    ErrorMessage     							= error message
            		if(Error)
            			invoke DeleteInventoryTransaction
							invoked.ShipmentBOD						= ShipmentBOD
							invoked.PrmTrackerID					= LocalFSMInboundBODTracker
	            			invoked.PrmInventoryTransaction			= LocalInventoryTrans
	            			invoked.PrmLocation						= LocalItemLocation
							invoked.PrmCompany						= LocalCompany 
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
						
						invoke SendShipmentAckBOD
	            			invoked.ShipmentBOD						= ShipmentBOD
	            			invoked.PrmCompany						= LocalCompany
	            			invoked.PrmErrorMessage					= ErrorMessage
	            			invoked.PrmTrackerID					= LocalFSMInboundBODTracker
	            			invoked.PrmInventoryTransaction			= LocalInventoryTrans
	            			invoked.PrmLocation						= LocalItemLocation
            	else
					invoke DeleteInventoryTransaction
						invoked.ShipmentBOD						= ShipmentBOD
						invoked.PrmTrackerID					= LocalFSMInboundBODTracker
            			invoked.PrmInventoryTransaction			= LocalInventoryTrans
            			invoked.PrmLocation						= LocalItemLocation
						invoked.PrmCompany						= LocalCompany
						
		DeleteInventoryTransaction is an Import Action
			restricted			
			Parameters
				ShipmentBOD 				is XMLDocument
				PrmTrackerID   				is like FSMInboundBODTracker
				PrmLocation					is Alpha 20
				PrmInventoryTransaction		is Numeric 10
				PrmCompany					is Numeric 4
			Action Rules
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalFSMInboundBODTracker 	= PrmTrackerID
				LocalCompany				= PrmCompany
    			LocalItemLocation			= PrmLocation
				LocalInventoryTrans			= PrmInventoryTransaction
				
				invoke Unreleased.Delete InventoryTransactionRel
				
				invoke Update FSMInboundBODTrackerRel
					invoked.Error 						= true
					invoked.ErrorMessage 				= ErrorMessage
					invoked.Status						= 2
					invoked.CloseDate					= system current timestamp
				
				invoke SendProcessShipmentConfirmBOD
					invoked.ShipmentBOD						= ShipmentBOD
        			invoked.PrmCompany						= LocalCompany
        			invoked.PrmErrorMessage					= ErrorMessage
        			invoked.PrmTrackerID					= LocalFSMInboundBODTracker
        			invoked.PrmInventoryTransaction			= LocalInventoryTrans
        			invoked.PrmLocation						= LocalItemLocation
				
				invoke SendShipmentAckBOD
        			invoked.ShipmentBOD						= ShipmentBOD
        			invoked.PrmCompany						= LocalCompany
        			invoked.PrmErrorMessage					= ErrorMessage
        			invoked.PrmTrackerID					= LocalFSMInboundBODTracker
        			invoked.PrmInventoryTransaction			= LocalInventoryTrans
        			invoked.PrmLocation						= LocalItemLocation
		
		ProcessShipmentBODImport is an Import Action
			restricted
			bod type is Process.Shipment
			Parameters
				ShipmentBOD 	is XMLDocument
            Action Rules
            	LocalBODXML 					= ShipmentBOD
            	LocalDocumentID					= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID"
	            LocalVariationID				= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID/@variationID"
	            LocalBODID						= ShipmentBOD select "//ApplicationArea/BODID"
	            LocalGenericDelimiter			= DerivedGenericDelimiter
	        	LocalAccountingEntity			= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID/@location"
	        	LocalProcessShipmentAE			= ShipmentBOD select "//DataArea/Process/AccountingEntityID"
	        	LocalItemLineLocation			= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/WarehouseLocation/ID"
	        	LocalCleanAccountingEntity		= LocalProcessShipmentAE
            	if(FSMBODConfigurationProcessShipmentRel exists and FSMBODConfigurationProcessShipmentRel.Enable)
	            	if(DerivedConfigDocID = "Y")
	            		LocalSyncItemLocation		= LocalItemLineLocation
	            		if(FSMBODCleanDocIDRel.DestinationValue entered)
	            			LocalCrossAccountingEntity = FSMBODCleanDocIDRel.DestinationValue
	            		else
	            			LocalCrossAccountingEntity	= LocalCleanAccountingEntity
	            		if(DerivedConfigFEG != "Y")
	            			LocalCompany = LocalCrossAccountingEntity
	            		else
	            			LocalAccountingEntity	= LocalCrossAccountingEntity
	            			LocalCompany 			= NativeProcessShipmentAccountingEntity
	            	else
		            	if(LocalAccountingEntity entered)
		            		LocalCompany				= NativeProcessItemAccountingEntity
		            	else
		            		LocalCompany				= ""
		            	
		            	if(LocalItemLineLocation entered)
		            		LocalSyncItemLocation		= NativeItemLocation
		            	else
		            		LocalSyncItemLocation		= ""
	            	
					if(DerivedDefaultDebitCodeBlock = "Y")
						LocalItemLineLocation			= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/ShipToParty/Location/ID"
						if (LocalItemLineLocation entered)
							for each LocalItemLineLocation split on "<DerivedGenericDelimiter>"
								initialize LocalReqLocation
								LocalReqLocation = each								
					else	
						LocalReqLocation = 	LocalSyncItemLocation

					if(DerivedDefaultDebitCodeBlock = "Y")
						LocalUserAreaCount			= ShipmentBOD select "count (//DataArea/Shipment/ShipmentHeader/UserArea/Property)"
						LocalIterator = 1
						while (LocalUserAreaCount >= LocalIterator)
							LocalNameValueID	=	ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
							LocalNameValue		=	ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/UserArea/Property[<LocalIterator>]/NameValue"
							
							if(LocalNameValueID = "fsm.AccountingEntity")
								LocalDebitCodeAE  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.AccountingUnit")
								LocalAccountingUnit  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Account")
								LocalAccount      = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Project")
								LocalProject    = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 1 Dimensions")
								LocalFinanceDimension1  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 2 Dimensions")
								LocalFinanceDimension2  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 3 Dimensions")
								LocalFinanceDimension3  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 4 Dimensions")
								LocalFinanceDimension4  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 5 Dimensions")
								LocalFinanceDimension5  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 6 Dimensions")
								LocalFinanceDimension6  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 7 Dimensions")
								LocalFinanceDimension7  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 8 Dimensions")
								LocalFinanceDimension8  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 9 Dimensions")
								LocalFinanceDimension9  = LocalNameValue
							else
							if(LocalNameValueID = "fsm.Finance 10 Dimensions")
								LocalFinanceDimension10	= LocalNameValue
							else
							if(LocalNameValueID = "IPSReference")
								LocalInvLineRef  = LocalNameValue
							LocalIterator = LocalIterator + 1


					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "Shipment"
							invoked.Direction				= 2					
							invoked.Company					= LocalCompany
							invoked.BODLocation				= LocalSyncItemLocation
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalProcessShipmentAE
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else	
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Company					= LocalCompany
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalProcessShipmentAE
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
            	
	            	invoke Unreleased.Create InventoryTransaction
	            		assign result to NewInventoryTransaction
	            		resume on error
		               		Error            							    = true
		                    ErrorMessage     								= error message
		            	invoked.Company										= LocalCompany
		            	invoked.InventoryLocation							= LocalSyncItemLocation
		            	invoked.InventoryDocumentType						= "IS"
		            	invoked.FromToCompanyLocation.FromToCompany			= LocalCompany
		            	invoked.FromToCompanyLocation.FromToLocation		= LocalSyncItemLocation
		            	invoked.FromToCompanyLocation.RequestingLocation	= LocalReqLocation
						invoked.DefaultDistributionAccount.AccountingUnit				= 	LocalAccountingUnit
						invoked.DefaultDistributionAccount.GeneralLedgerChartAccount	=	LocalAccount
						invoked.DefaultDistributionAccount.Project						=	LocalProject
						invoked.DefaultDistributionAccount.ToAccountingEntity			=	LocalDebitCodeAE
						invoked.DefaultDistributionAccount.FinanceDimension1			=	LocalFinanceDimension1
						invoked.DefaultDistributionAccount.FinanceDimension2			=	LocalFinanceDimension2
						invoked.DefaultDistributionAccount.FinanceDimension3			=	LocalFinanceDimension3
						invoked.DefaultDistributionAccount.FinanceDimension4			=	LocalFinanceDimension4
						invoked.DefaultDistributionAccount.FinanceDimension5			=	LocalFinanceDimension5
						invoked.DefaultDistributionAccount.FinanceDimension6			=	LocalFinanceDimension6
						invoked.DefaultDistributionAccount.FinanceDimension7			=	LocalFinanceDimension7
						invoked.DefaultDistributionAccount.FinanceDimension8			=	LocalFinanceDimension8
						invoked.DefaultDistributionAccount.FinanceDimension9			=	LocalFinanceDimension9
						invoked.DefaultDistributionAccount.FinanceDimension10			=	LocalFinanceDimension10
					
					LocalInventoryTrans		= NewInventoryTransaction.InventoryTransaction
		           	if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= true
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						
						invoke SendProcessShipmentConfirmBOD
							invoked.ShipmentBOD						= ShipmentBOD
	            			invoked.PrmCompany						= LocalCompany
	            			invoked.PrmErrorMessage					= ErrorMessage
	            			invoked.PrmTrackerID					= LocalFSMInboundBODTracker
	            			invoked.PrmInventoryTransaction			= LocalInventoryTrans
	            			invoked.PrmLocation						= LocalSyncItemLocation
					
						invoke SendShipmentAckBOD
	            			invoked.ShipmentBOD						= ShipmentBOD
	            			invoked.PrmCompany						= LocalCompany
	            			invoked.PrmErrorMessage					= ErrorMessage
	            			invoked.PrmTrackerID					= LocalFSMInboundBODTracker
	            			invoked.PrmInventoryTransaction			= LocalInventoryTrans
	            			invoked.PrmLocation						= LocalSyncItemLocation 			
		            else
		            	invoke InventoryTransactionLines
		            		invoked.ShipmentBOD					= ShipmentBOD
		            		invoked.PrmInboundTracker			= LocalFSMInboundBODTracker 
							invoked.PrmCompany					= LocalCompany
			    			invoked.PrmLocation					= LocalSyncItemLocation
							invoked.PrmInventoryTransaction		= LocalInventoryTrans
	            else
				if(FSMInboundBODTracker not entered) 	
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "Shipment"
						invoked.Direction				= 2					
						invoked.Company					= LocalCompany
						invoked.BODLocation				= LocalSyncItemLocation
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODAccountingEntity		= LocalProcessShipmentAE
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process Shipment Inbound BOD Service is not Enabled"	
	            	LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Company					= LocalCompany
						invoked.BODLocation				= LocalSyncItemLocation
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODAccountingEntity		= LocalProcessShipmentAE
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process Shipment Inbound BOD Service is not Enabled"	
						
		SendProcessShipmentConfirmBOD is an Instance Action
			restricted			
			Parameters
				ShipmentBOD 					is XMLDocument
				PrmCompany								is Alpha size 12
				PrmTrackerID							is Numeric 15
				PrmErrorMessage							is Alpha 300
				PrmInventoryTransaction					is Numeric 12
				PrmLocation						is Alpha size 20
			Action Rules
				LocalTrackerID				= PrmTrackerID
				LocalCompany				= PrmCompany
				LocalSyncItemLocation		= PrmLocation
				LocalErrorMessage			= PrmErrorMessage
				LocalBODXML					= ShipmentBOD
				LocalToLogicalID 			= ShipmentBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= ShipmentBOD select "//ApplicationArea/Sender/ComponentID"          	
	            LocalBODID					= ShipmentBOD select "//ApplicationArea/BODID"	
	            LocalMainUserTemplate		= "IONProcessShipment_ConfirmBOD_ST"
				LocalDocumentID 			= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID"
				LocalAccountingEntity		= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID/@location"
				LocalOriginalCreateDateTime	= ShipmentBOD select "//ApplicationArea/CreationDateTime"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessShipmentConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID	
	    
	    SendShipmentAckBOD is an Instance Action
			restricted			
			Parameters
				ShipmentBOD 					is XMLDocument
				PrmLocation						is Alpha size 20
				PrmCompany								is Alpha size 12
				PrmTrackerID							is Numeric 15
				PrmErrorMessage							is Alpha 300
				PrmInventoryTransaction					is Numeric 12
			Action Rules
				LocalCreateDateTime = ShipmentBOD select "//ApplicationArea/CreationDateTime"
				LocalErrorMessage	= PrmErrorMessage
				if(LocalErrorMessage entered)
					LocalRejectReason	= "Rejected"
				else
					LocalRejectReason	= "Accepted"
					LocalErrorMessage	= "Successful"	
				if(LocalInventoryTrans entered)
					LocalDocumentID 	= LocalInventoryTrans
				else
					LocalDocumentID		= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID"	
				LocalTrackerID			= PrmTrackerID
				LocalInventoryTrans		= PrmInventoryTransaction
				LocalComponentID		= ShipmentBOD select "//ApplicationArea/Sender/ComponentID"
				LocalTaskID				= ShipmentBOD select "//ApplicationArea/Sender/TaskID"
				LocalToLogicalID       	= ShipmentBOD select "//ApplicationArea/Sender/LogicalID"
				LocalBODID				= ShipmentBOD select "//ApplicationArea/BODID"
				LocalMainUserTemplate	= "IONProcessShipment_ACKBOD_ST"
				LocalAccountingEntity			= ShipmentBOD select "//DataArea/Shipment/ShipmentHeader/DocumentID/ID/@location"
				LocalOriginalCreateDateTime		= ShipmentBOD select "//ApplicationArea/CreationDateTime"
				LocalItemLineLocation			= PrmLocation
				LocalCompany 					= PrmCompany
				if(DerivedDefaultDebitCodeBlock = "Y")
					if (InventoryTransactionLineRel exists)
						initialize BODLineCount
						for each InventoryTransactionLineRel
							BODLineCount +=1
							INVLineNum = BODLineCount
							InvLineQuantity = each.DerivedStockIssueQuantity
							InvLineUnitCost = each.TransientUnitCostValue
							LocalInvLineRef = each.Reference
							ProcessShipmentLineAckXML += template.IONProcessShipmentLine_AcknowledgeBOD_ST document for this instance	
					else
						initialize ProcessShipmentLineAckXML
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessShipmentACKBODXML
						bod type is "Acknowledge.Shipment"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID		
						
#endif

		ShowItemMasterBODImport is an Import Action
			restricted
			bod type is Show.ItemMaster
			Parameters
				ShowItemMasterBOD	is XMLDocument
			Action Rules
				LocalAccountingEntity   	 = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalVariationID             = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalItem 					 = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalBODID                   = ShowItemMasterBOD select "//ApplicationArea/BODID"
				LocalBODXML					 = ShowItemMasterBOD
				LocalActionCode				 = ShowItemMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalCrossAccountingEntity	 = FSMBODCrossReferenceDetailRel.DestinationValue
				LocalGenericDelimiter        = DerivedGenericDelimiter
				LocalCompany                 = NativeItemAccountingEntity
				
				if (FSMBODConfigurationShowItemMasterRel exists and FSMBODConfigurationShowItemMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 4
							invoked.Noun 					= "ItemMaster"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalItem
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalItem
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.Company					= LocalCompany
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalCrossAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					LocalItemGroup 				 = DerivedDefaultItemGroup
					if(ItemRel exists)
						invoke ShowUpdateItem
	            			invoked.ShowItemMasterBOD   = ShowItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItem				= LocalItem
		                	invoked.PrmCompany			= LocalCompany
		            else
		            	invoke ShowCreateItem
							invoked.ShowItemMasterBOD   = ShowItemMasterBOD
		                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
		                	invoked.PrmAccountingEntity = LocalCrossAccountingEntity
		                	invoked.PrmItem				= LocalItem
		                	invoked.PrmCompany			= LocalCompany
		        else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 4
						invoked.Noun 					= "ItemMaster"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalItem
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalCrossAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Show ItemMaster Inbound BOD Service is not Enabled" 
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalItem
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.Company					= LocalCompany
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalCrossAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Show ItemMaster Inbound BOD Service is not Enabled" 
							
		ShowCreateItem 	is an Import Action
			restricted
			Parameters
				ShowItemMasterBOD 		is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
			Action Rules
				LocalItem					= PrmItem
				LocalAccountingEntity 		= PrmAccountingEntity
				LocalCompany 		  		= PrmCompany
				LocalItemDescriptionCount 	= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalIterator = 1
				LocalItemLongDescription 	= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
       			LocalItemUOM				= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
       			LocalSerialTrackFlag		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
       			LocalLotTrackFlag			= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
       			LocalCatchWeightFlag		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/CatchWeightIndicator"
       			LocalStatus					= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
       			LocalUserAreaCount			= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Classification)"
       			LocalItemGroup 				= DerivedDefaultItemGroup
				LocalItemLocationCount 		= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
                while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName 		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@type"
					LocalNameValue 	= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
                	if (LocalName = "ShortName")
       					LocalItemDescription = LocalNameValue
                	LocalIterator = LocalIterator + 1
                if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag not entered)
					LocalSerialTracked = "N"
				else
					LocalSerialTracked = "R"
                if(LocalLotTrackFlag = "false" or LocalLotTrackFlag not entered)
					LocalLotTracked = "N"
				else
					LocalLotTracked = "R"
                if(LocalCatchWeightFlag = "false" or LocalCatchWeightFlag not entered)
					LocalCatchWeightIndicator = "N"
				else
					LocalCatchWeightIndicator = "R"
                LocalLoop = 1
                while(LocalUserAreaCount >= LocalLoop)
					LocalName = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code/@listID"
					LocalNameValue = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code"
                	if(LocalName = "Product Groups")
						LocalMajorSalesClass = LocalNameValue
					if(LocalName = "Item Groups")
						LocalCommodityCode	= LocalNameValue
					LocalLoop = LocalLoop + 1
                LocalCommodityCodeSegment1 = LocalCommodityCode[0:2]
				LocalCommodityCodeSegment2 = LocalCommodityCode[3:4]
				LocalCommodityCodeSegment3 = LocalCommodityCode[5:6]
				LocalCommodityCodeSegment4 = LocalCommodityCode[7:8]
				if(LocalCommodityCodeSegment2 not entered)
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1
				else 
				if(LocalCommodityCodeSegment3 not entered)
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2
				else 
				if(LocalCommodityCodeSegment4 not entered)
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3
				else
					LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3 +"-"+LocalCommodityCodeSegment4
                if(LocalStatus = "Open")
					LocalItemstatus = "true"															
				else
				if(LocalStatus = "Deleted")
					LocalItemstatus = "false"
                invoke Create Item
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message 
                    invoked.ItemGroup         				= LocalItemGroup
                    invoked.Description   					= LocalItemDescription
                    invoked.StockUOM						= LocalItemUOM	
                    invoked.LotTracked						= LocalLotTracked
                    invoked.SerialTracked 					= LocalSerialTracked
                    invoked.CatchWeightCode					= LocalCatchWeightIndicator
                    invoked.MajorSalesClass					= LocalMajorSalesClass
                    invoked.Active							= LocalItemstatus
                    invoked.Item 							= LocalItem
                    invoked.Description3					= LocalItemLongDescription
                    invoked.CommodityCode					= LocalOriginalCommodityCode
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp 
					invoke SendShowItemMasterConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ShowItemMasterBOD      		= ShowItemMasterBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker 
                else
               	if(LocalItemLocationCount > 0)
               		invoke ShowCreateItemLocationLine
               			invoked.ShowItemMasterBOD		= ShowItemMasterBOD
               			invoked.PrmItem				 	= NewItem.Item
               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
               			invoked.PrmCompany				= LocalCompany
               			invoked.PrmItemstatus			= LocalItemstatus
               	else
		        	invoke Update FSMInboundBODTrackerRel
						invoked.Status			= 3
						invoked.CloseDate		= system current timestamp
		
		ShowCreateItemLocationLine	is an Import Action
        	restricted
			Parameters
				ShowItemMasterBOD 		is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
				PrmItemstatus			is Alpha 10
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalCompany				=   PrmCompany
				LocalItemstatus				=   PrmItemstatus
				LocalItemLocationCount 		= 	ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalGenericDelimiter     	= 	DerivedGenericDelimiter
				LocalIterator = 1      
                while (LocalItemLocationCount >= LocalIterator)
                	LocalLineLocation			=   ShowItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalItemLocation	 		= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalMaximumOrderQuantity	= 	LocalLineLocation  select "/ItemLocation/MaximumLotSizeBaseUOMQuantity"
					LocalMinimumOrderQunatity	=   LocalLineLocation  select "/ItemLocation/MinimumLotSizeBaseUOMQuantity"
       				if(GeneralLedgerCategoryRel exists)
						LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
						invoke Create ItemLocation
							resume on error
                   				Error            					= true
                        		ErrorMessage     					= error message
							invoked.Company							= LocalCompany
							invoked.InventoryLocation				= LocalItemLocation
							invoked.Item							= LocalItem
							invoked.GeneralLedgerCategory			= LocalGeneralLedgerCategory
							invoked.Active							= LocalItemstatus
							invoked.MinimumOrderQuantity			= LocalMinimumOrderQunatity
							invoked.MaximumOrderQuantity			= LocalMaximumOrderQuantity
							invoked.InventoryTracked				=  "1"
							invoked.AllowReceipt					=  "1"
							invoked.AllowIssue						=  "1"
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp 
							invoke SendShowItemMasterConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.ShowItemMasterBOD      		= ShowItemMasterBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
						else	
							LocalIterator		= LocalIterator + 1
							if (LocalIterator%20 = 0)
								commit transaction
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= true
							invoked.ErrorMessage 			= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendShowItemMasterConfirmBOD
							invoked.PrmErrorMessage 		= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
							invoked.ShowItemMasterBOD      	= ShowItemMasterBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						LocalIterator = LocalItemLocationCount + 1
								
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
       	
       	ShowUpdateItem is an Import Action
			restricted
			Parameters
				ShowItemMasterBOD 		is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmAccountingEntity 	is AlphaUpper size 12 
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
			Action Rules
				LocalItem					= PrmItem
				LocalAccountingEntity 		= PrmAccountingEntity
				LocalCompany 		  		= PrmCompany
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalItemDescriptionCount 	= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Description)" 
				LocalIterator 				= 1
				LocalItemGroup 				= DerivedDefaultItemGroup
				LocalActionCode				= ShowItemMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
                while(LocalItemDescriptionCount >= LocalIterator)
                	LocalName 		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]/@type"
					LocalNameValue 	= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[<LocalIterator>]"
					if (LocalName = "ShortName")
       					LocalItemDescription = LocalNameValue
       				LocalIterator = LocalIterator + 1
	       		if(LocalItemDescription not entered)
	       			LocalItemDescription = ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
				if(ItemRel exists)
       				LocalItemLongDescription 	= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Description[1]"
   					LocalItemUOM				= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/BaseUOMCode"
   					LocalSerialTrackFlag		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/SerialControlIndicator"
   					LocalLotTrackFlag			= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/LotControlIndicator"
   					LocalCatchWeightFlag		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/CatchWeightIndicator"
   					LocalUserAreaCount			= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemMasterHeader/Classification)"
   					LocalStatus					= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemStatus/Code"
   					LocalItemLocationCount 		= ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
   					if(LocalSerialTrackFlag = "false" or LocalSerialTrackFlag not entered)
						LocalSerialTracked = "N"
					else
						LocalSerialTracked = "R"
   					if(LocalLotTrackFlag = "false" or LocalLotTrackFlag not entered)
						LocalLotTracked = "N"
					else
						LocalLotTracked = "R"
   					if(LocalCatchWeightFlag = "false" or LocalCatchWeightFlag not entered)
						LocalCatchWeightIndicator = "N"
					else
						LocalCatchWeightIndicator = "R"
					LocalLoop = 1
					while(LocalUserAreaCount >= LocalLoop)
						LocalName 		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code/@listID"
						LocalNameValue 	= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/Classification[<LocalLoop>]/Codes/Code"
						if(LocalName = "Product Groups")
							LocalMajorSalesClass = LocalNameValue
						if(LocalName = "Item Groups")
							LocalCommodityCode	= LocalNameValue
						LocalLoop = LocalLoop + 1
					LocalCommodityCodeSegment1 = LocalCommodityCode[0:2]
					LocalCommodityCodeSegment2 = LocalCommodityCode[3:4]
					LocalCommodityCodeSegment3 = LocalCommodityCode[5:6]
					LocalCommodityCodeSegment4 = LocalCommodityCode[7:8]
					if(LocalCommodityCodeSegment2 not entered)
						LocalOriginalCommodityCode =  LocalCommodityCodeSegment1
					else 
					if(LocalCommodityCodeSegment3 not entered)
						LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2
					else 
					if(LocalCommodityCodeSegment4 not entered)
						LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3
					else
						LocalOriginalCommodityCode =  LocalCommodityCodeSegment1 + "-"+LocalCommodityCodeSegment2 +"-"+LocalCommodityCodeSegment3 +"-"+LocalCommodityCodeSegment4
					if(LocalStatus = "Open")
						LocalItemstatus = "true"															
					else
					if(LocalStatus = "Deleted")
						LocalItemstatus = "false"
					invoke Update ItemRel
						resume on error
               				Error            					= true
                    		ErrorMessage     					= error message 
	                    invoked.ItemGroup         				= LocalItemGroup
	                    invoked.Description   					= LocalItemDescription
	                    invoked.StockUOM						= LocalItemUOM	
	                    invoked.LotTracked						= LocalLotTracked
	                    invoked.SerialTracked 					= LocalSerialTracked
	                    invoked.CatchWeightCode					= LocalCatchWeightIndicator
	                    invoked.MajorSalesClass					= LocalMajorSalesClass
	                    invoked.Active							= LocalItemstatus
	                    invoked.Item 							= LocalItem
	                    invoked.Description3					= LocalItemLongDescription
	                    invoked.CommodityCode					= LocalOriginalCommodityCode
	               	if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendShowItemMasterConfirmBOD
							invoked.PrmErrorMessage 		= ErrorMessage
							invoked.ShowItemMasterBOD      	= ShowItemMasterBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					if(LocalItemLocationCount > 0 and (!FSMInboundBODTrackerRel.Error))
						invoke ShowUpdateItemLocationLine
							invoked.ShowItemMasterBOD		= ShowItemMasterBOD
           					invoked.PrmItem				 	= LocalItem
	               			invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
	               			invoked.PrmCompany				= LocalCompany
	               			invoked.PrmItemstatus			= LocalItemstatus
	   				if(!FSMInboundBODTrackerRel.Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Status			= 3
							invoked.CloseDate		= system current timestamp	
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 				= true
						invoked.ErrorMessage 		= "Error Processing ShowItemMaster - Unable to FindItem"+" " +LocalItem +" "+"for ItemGroup"+" "+LocalItemGroup
						invoked.Status				= 2
						invoked.CloseDate			= system current timestamp	
					invoke SendShowItemMasterConfirmBOD
						invoked.PrmErrorMessage 	= "Error Processing ShowItemMaster - Unable to FindItem"+" " +LocalItem +" "+"for ItemGroup"+" "+LocalItemGroup
						invoked.ShowItemMasterBOD   = ShowItemMasterBOD
						invoked.PrmTrackerID		= LocalFSMInboundBODTracker
				
					
		ShowUpdateItemLocationLine is an Import Action
			restricted
			Parameters
				ShowItemMasterBOD 		is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmItem					is like Item
				PrmCompany				is like InventoryCompany
				PrmItemstatus			is Alpha 10	
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalItem					= 	PrmItem
				LocalCompany				=   PrmCompany
				LocalItemstatus				=   PrmItemstatus
				LocalItemLocationCount 		= 	ShowItemMasterBOD select "count(//DataArea/ItemMaster/ItemLocation)"
				LocalFSMInboundBODTracker 	= 	PrmInboundTracker
				LocalGenericDelimiter     	= 	DerivedGenericDelimiter
				LocalIterator = 1
				while (LocalItemLocationCount >= LocalIterator)
					LocalLineLocation			=   ShowItemMasterBOD select "//DataArea/ItemMaster/ItemLocation[<LocalIterator>]"
					LocalItemLocation 			= 	LocalLineLocation  select "/ItemLocation/WarehouseLocation/ID"
					LocalMaximumOrderQuantity	= 	LocalLineLocation  select "/ItemLocation/MaximumLotSizeBaseUOMQuantity"
					LocalMinimumOrderQunatity	=   LocalLineLocation  select "/ItemLocation/MinimumLotSizeBaseUOMQuantity"
					if(ItemLocationRel exists)
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Update ItemLocationRel
								resume on error
                   					Error            					= true
                        			ErrorMessage     					= error message
                        		invoked.Company					= 	LocalCompany
								invoked.InventoryLocation		= 	LocalItemLocation
								invoked.Item					=	LocalItem
								invoked.GeneralLedgerCategory	=  	LocalGeneralLedgerCategory
								invoked.Active					=  	LocalItemstatus
								invoked.MinimumOrderQuantity	=  	LocalMinimumOrderQunatity
								invoked.MaximumOrderQuantity	=  	LocalMaximumOrderQuantity
								invoked.InventoryTracked		=  	"1"
								invoked.AllowReceipt			=  	"1"
								invoked.AllowIssue				=  	"1"
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendShowItemMasterConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ShowItemMasterBOD      		= ShowItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								LocalIterator = LocalItemLocationCount + 1
							else	
								LocalIterator		= LocalIterator + 1
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= true
								invoked.ErrorMessage 			= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							invoke SendShowItemMasterConfirmBOD
								invoked.PrmErrorMessage 		= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.ShowItemMasterBOD      	= ShowItemMasterBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
					else
						if(GeneralLedgerCategoryRel exists)
							LocalGeneralLedgerCategory	= GeneralLedgerCategoryRel.GeneralLedgerCategory
							invoke Create ItemLocation
								resume on error
	                   				Error            			= true
	                        		ErrorMessage     			= error message
								invoked.Company					= 	LocalCompany
								invoked.InventoryLocation		= 	LocalItemLocation
								invoked.Item					=	LocalItem
								invoked.GeneralLedgerCategory	=	LocalGeneralLedgerCategory
								invoked.Active					=  	LocalItemstatus
								invoked.MinimumOrderQuantity	=  	LocalMinimumOrderQunatity
								invoked.MaximumOrderQuantity	=  	LocalMaximumOrderQuantity
								invoked.InventoryTracked		=  	"1"
								invoked.AllowReceipt			=  	"1"
								invoked.AllowIssue				=  	"1"
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp 
								invoke SendShowItemMasterConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ShowItemMasterBOD      		= ShowItemMasterBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								LocalIterator = LocalItemLocationCount + 1
							else	
								LocalIterator		= LocalIterator + 1
						else
							LocalFSMInboundBODTracker 			= PrmInboundTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= true
								invoked.ErrorMessage 			= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							invoke SendShowItemMasterConfirmBOD
								invoked.PrmErrorMessage 		= "Error Processing ShowItemMaster - Unable to find GeneralLedgerCategory of Company"+" "+ LocalCompany+" "+"for InventoryLocation"+" "+LocalItemLocation
								invoked.ShowItemMasterBOD      	= ShowItemMasterBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							LocalIterator = LocalItemLocationCount + 1
               				
               	if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status			= 3
						invoked.CloseDate		= system current timestamp	
           
        SendShowItemMasterConfirmBOD is an Instance Action
			restricted			
			Parameters
				ShowItemMasterBOD 	is XMLDocument
				PrmErrorMessage is Alpha 300
				PrmTrackerID	is Numeric 15
			Action Rules
				LocalSItemMasterXML					= ShowItemMasterBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalFromLogicalID					= ShowItemMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID					= ShowItemMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID							= ShowItemMasterBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID"
				LocalAccountingEntity				= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@accountingEntity"
				LocalOriginalCreateDateTime			= ShowItemMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID            		= ShowItemMasterBOD select "//DataArea/ItemMaster/ItemMasterHeader/ItemID/ID/@variationID"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONShowItemMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ShowItemMasterConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID    
				


		SyncInventoryCountBODImport is an Import Action
			restricted
			bod type is Sync.InventoryCount		
			Parameters
				InventoryCountBOD 				is XMLDocument		
			Action Rules
				LocalBODXML					 = InventoryCountBOD
				LocalVariationID             = BODCurrentTimeStamp
				LocalAccountingEntity	   	 = InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/DocumentID/ID/@accountingEntity"
				LocalBODID                   = InventoryCountBOD select "//ApplicationArea/BODID"	
				LocalDocumentID				 = InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/DocumentID/ID"
				LocalWarehouseLocation		 = InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/WarehouseLocation/ID"
				LocalGenericDelimiter		 = DerivedGenericDelimiter
				LocalWarehouseLocationID	 = NativeWarehouselocationID
				
				if(FSMBODConfigurationSyncInventoryCountRel exists and FSMBODConfigurationSyncInventoryCountRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "InventoryCount"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.Company					= LocalCompany
							invoked.BODLocation				= LocalItemLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.Company					= LocalCompany
							invoked.BODLocation				= LocalItemLocation
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					invoke SyncInventoryCountReadingValues
						invoked.InventoryCountBOD		= InventoryCountBOD
		                invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
		                invoked.PrmCompany 				= LocalCompany
		                invoked.PrmLocation 			= LocalItemLocation
			    else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "InventoryCount"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Company					= LocalCompany
						invoked.BODLocation				= LocalItemLocation
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync InventoryCount Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Company					= LocalCompany
						invoked.BODLocation				= LocalItemLocation
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync InventoryCount Inbound BOD Service is not Enabled"
						
		SyncInventoryCountReadingValues is an Import Action 
			restricted
			Parameters
				InventoryCountBOD 		is XMLDocument
				PrmInboundTracker   	is like FSMInboundBODTracker
				PrmCompany				is Numeric 4
				PrmLocation				is AlphaUpper 20
			Local Fields
				LocalLineLocation       is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker			= PrmInboundTracker
				LocalCompany						= PrmCompany
				LocalItemLocation					= PrmLocation
				LocalItem							= InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/ItemID/ID"
				LocalGenericDelimiter		 		= DerivedGenericDelimiter
				LocalAccountingEntity	   			= InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/DocumentID/ID/@accountingEntity"
				LocalSplitItem						= NativeItem
				LocalItemLocationCount		 		= InventoryCountBOD select "count(//DataArea/InventoryCount/InventoryCountLine)"		
				LocalIterator						= 1	
				if(DerivedIntegratingApplication entered and FSMBODCrossReferenceBusinessGroupDetailRel.DestinationValue entered)
					LocalItemGroup = FSMBODCrossReferenceBusinessGroupDetailRel.DestinationValue 
				else
				if(DerivedDefaultItemGroup entered)
					LocalItemGroup 		= DerivedDefaultItemGroup 
				if(LocalItemLocationCount > 0)	
            		while(LocalItemLocationCount >= LocalIterator)
            			LocalLineLocation			=   InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountLine[<LocalIterator>]"
						LocalFSMUOM					= 	LocalLineLocation select "/InventoryCountLine/BaseUOMQuantity/@unitCode"
                		LocalFSMBaseUOMQuantity		= 	LocalLineLocation select "/InventoryCountLine/BaseUOMQuantity"
                		if(InventoryCountItemRel exists)
                			if(InventoryCountItemLocationRel exists)
								LocalStockOnHandQuantity = InventoryCountItemLocationRel.StockOnHandQuantity
								LocalUnitCost			 = InventoryCountItemLocationRel.DerivedAverageCost
								LocalFSMItemQuantity	 = LocalFSMBaseUOMQuantity - LocalStockOnHandQuantity
								if (LocalFSMItemQuantity < 0)
									LocalUnitCost = ""	
								if(LocalFSMItemQuantity = 0)
            						LocalIterator		= LocalIterator +1
            					else
					            	invoke Unreleased.Create InventoryTransaction
					            		assign result to NewInventoryTransaction
					            		resume on error
						               		Error            								= true
						                    ErrorMessage     								= error message
						            	invoked.Company										= LocalCompany
						            	invoked.InventoryLocation							= LocalItemLocation
						            	invoked.InventoryDocumentType						= "AJ"					
									LocalInventoryTransaction		= NewInventoryTransaction.InventoryTransaction	
									if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 						= Error
											invoked.ErrorMessage 				= ErrorMessage
											invoked.Status						= 2
											invoked.CloseDate					= system current timestamp
										invoke SendSyncInventoryCountConfirmBOD
											invoked.PrmErrorMessage 			= ErrorMessage
											invoked.InventoryCountBOD			= InventoryCountBOD
											invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
									else
										invoke Unreleased.Create InventoryTransactionLine
											resume on error
					                   			Error            		      = true
					                        	ErrorMessage     		      = error message
											invoked.Company 				  = LocalCompany
											invoked.InventoryLocation		  = LocalItemLocation
											invoked.InventoryTransaction 	  = LocalInventoryTransaction
											invoked.Item				      = LocalSplitItem
											invoked.TransientQuantityValue	  = LocalFSMItemQuantity
											invoked.TransientPreciseUnitCost  = LocalUnitCost				
										if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 						= Error
												invoked.ErrorMessage 				= ErrorMessage
												invoked.Status						= 2
												invoked.CloseDate					= system current timestamp
											invoke SendSyncInventoryCountConfirmBOD
												invoked.PrmErrorMessage 			= ErrorMessage
												invoked.InventoryCountBOD   		= InventoryCountBOD
												invoked.PrmTrackerID				= LocalFSMInboundBODTracker
											invoke Unreleased.Delete InventoryTransactionRel
											LocalIterator		= LocalIterator +1 
											 
									    else
											invoke Unreleased.Release InventoryTransactionRel
												resume on error
							                   		Error           				= true
							                        ErrorMessage   	 				= error message
											if(Error)
												invoke Update FSMInboundBODTrackerRel
													invoked.Error 					= Error
													invoked.ErrorMessage 			= ErrorMessage
													invoked.Status					= 2
													invoked.CloseDate				= system current timestamp
												invoke SendSyncInventoryCountConfirmBOD
													invoked.PrmErrorMessage 		= ErrorMessage
													invoked.InventoryCountBOD		= InventoryCountBOD
													invoked.PrmTrackerID			= LocalFSMInboundBODTracker
												invoke Unreleased.Delete InventoryTransactionRel
												LocalIterator		= LocalIterator +1
											else
												LocalIterator		= LocalIterator +1
												             
							else
								if(LocalIterator = LocalItemLocationCount)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 						= true
										invoked.ErrorMessage 				= "Unable to find ItemLocation "+LocalItemLocation +" for Item "+ LocalSplitItem +" for ItemGroup "+ LocalItemGroup
										invoked.Status						= 2
										invoked.CloseDate					= system current timestamp
									invoke SendSyncInventoryCountConfirmBOD
										invoked.PrmErrorMessage 			= "Unable to find ItemLocation "+LocalItemLocation +" for Item "+ LocalSplitItem +" for ItemGroup "+ LocalItemGroup
										invoked.InventoryCountBOD		    = InventoryCountBOD
										invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								LocalIterator		= LocalIterator +1
                		else
							if(LocalIterator = LocalItemLocationCount)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= true
									invoked.ErrorMessage 				= "Unable to find Item "+ LocalSplitItem +" for UOM "+LocalFSMUOM +" for ItemGroup "+ LocalItemGroup
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
								invoke SendSyncInventoryCountConfirmBOD
									invoked.PrmErrorMessage 			= "Unable to find Item "+ LocalSplitItem +" for UOM "+LocalFSMUOM +" for ItemGroup "+ LocalItemGroup
									invoked.InventoryCountBOD		    = InventoryCountBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							LocalIterator		= LocalIterator +1
            			
            	else
            		invoke Update FSMInboundBODTrackerRel
            			invoked.Error 						= true
						invoked.ErrorMessage 				= "No lines to process the BOD."
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp
						
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp		
			
                	
		SendSyncInventoryCountConfirmBOD is an Instance Action
			restricted			
			Parameters
				InventoryCountBOD 		is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
			Action Rules
				LocalSyncInventoryCountXML			= InventoryCountBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalVariationID         		    = BODCurrentTimeStamp
				LocalAccountingEntity				= InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/DocumentID/ID/@accountingEntity"
				LocalFromLogicalID					= InventoryCountBOD select "//ApplicationArea/Sender/LogicalID"
				LocalBODID							= InventoryCountBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= InventoryCountBOD select "//DataArea/InventoryCount/InventoryCountHeader/DocumentID/ID"
				LocalOriginalCreateDateTime			= InventoryCountBOD select "//ApplicationArea/CreationDateTime"
				LocalComponentID					= InventoryCountBOD select "//ApplicationArea/Sender/ComponentID"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONSyncInventoryCount_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncInventoryCountConfirmBODXML
						bod type is "Confirm.BOD"
						document id is LocalDocumentID

