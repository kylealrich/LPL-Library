ContractTermAndCondition is a BusinessClass
	owned by po
	prefix is CTTM

	Patterns
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

	Ontology
		symbolic key is ContractTermAndCondition

	Persistent Fields
		Title          is a Description
			text searchable
		HeaderText     is Alpha size 100
			text searchable
		Description    	is Text
			sql name is SRCHDOC
			text searchable
			Text Variables
				ContractName				value is Contract.Name
				ContractNumber				value is Contract
				ContractRebateFrequency		value is RebateFrequencyVariable
				ContractRebatePercent		value is RebatePercentVariable
				ContractRebateType			value is RebateVariable
				ContractReviewDate			value is Contract.ContractReviewDate
				Distributor					value is DistributorContractRel.Supplier.SupplierName
				EffectiveDate				value is Contract.EffectiveDate
				ExpirationDate				value is Contract.ExpirationDate
				EventBuyer					value is SourcingEventBuyerVariable
				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
				EventDescription			value is SourcingEventDescriptionVariable
				EventName					value is SourcingEventNameVariable
				EventNumber					value is SourcingEventNumberVariable
				EventReference              value is SourcingEventReferenceVariable
				FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
				FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				FreightTerms				value is Contract.FreightTerm.Description
				GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
				PrimaryInternalContact 		value is Contract.PrimaryContactRel.Contact.Name
				PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.Email
				PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
				ProjectName					value is ProjectNameVariable
				ProjectNumber 				value is ProjectNumberVariable
				ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
				SecondHeaderRetainagePercent value is Contract.RetainagePercent2
				SupplierBusinessType		value is Contract.Supplier.BusinessType
				SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
				SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress.DisplayAddressMultiline
				SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
				SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
				SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
				SupplierName				value is Contract.Supplier.SupplierName
				SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId
				TAndCAttachmentReference    value is ContractTermAndConditionAttachment.AttachmentReference
				WorkingContractID           value is Contract.WorkingContractID

		Modified	   is Boolean
		DisplayOrder   is Numeric size 8
		ContractStatus is Numeric size 2
			States
				Draft			value is 1
				Released      	value is 2
				Active			value is 3
				Inactive    	value is 4
				Addendum	    value is 5
		Article
		TermAndCondition
		SSTerm							is Boolean
		AttachmentChanged 				is Boolean
		Status							is Numeric 2
			States
				NeedsApproval	value is 1
				PendingApproval	value is 2
				Approved		value is 3
		CreationApproved				is Boolean
		Deleted							is Boolean
		Category
		SubCategory
		LastAttachmentDisplayOrder	is Numeric size 4
			disable Auditing
		LastChildTermAndConditionDisplayOrder is Numeric size 4
			disable Auditing
		TermLevel                   is Numeric size 1
		DisplayString               is Alpha size 8
		DisplayString12             is Alpha size 12

	Transient Fields
		NewDisplayOrder			is a DisplayOrder
		FromSourcing			is Boolean

	Sets
		ByTermAndCondition
			duplicates
			sql name is BYTANDC
			Sort Order
				ContractGroup
				Contract
				TermAndCondition
				Article

		ByContractArticle
			sql name is BYARTICLE
			Sort Order
				ContractGroup
				Contract
				ContractArticle
				ParentTermAndCondition
				ContractTermAndCondition

		ByDisplayOrder
			duplicates
			Sort Order
				ContractGroup
				Contract
				ContractArticle
				ParentTermAndCondition
				DisplayOrder
				ContractTermAndCondition

		ByDisplayString
			Sort Order
				ContractGroup
				Contract
				ContractArticle
				DisplayString12
				ContractTermAndCondition

		ByTermLevel
			Sort Order
				ContractGroup
				Contract
				ContractArticle
				TermLevel
				DisplayString12
				ContractTermAndCondition

		ByDisplayStringParentTermLevel
			Sort Order
				ContractGroup
				Contract
				ContractArticle
				ParentTermAndCondition
				TermLevel
				DisplayString12
				ContractTermAndCondition

	Conditions
		AttachmentExists
			default label is "AttachmentsExist"
			when (ContractTermAndConditionAttachment set exists)
		AddendumState
			restricted
			when (Contract.ContractStatus.Addendum)
		HasVariables
			restricted
			when (Description like "*{*")
		NotLevelFour
			restricted
			when (TermLevel != 4)
		LevelFour
			restricted
			when (TermLevel = 4)
		LevelOne
			restricted
			when (TermLevel = 1)
		LevelTwo
			restricted
			when (TermLevel = 2)
		LevelThree
			restricted
			when (TermLevel = 3)
		EligibleForSourcing
			restricted
			when (Contract.SourcingEligible)
		AdhocTermAndCondition
			restricted
			when (!TermAndCondition exists)
		TermAndConditionExists
			restricted
			when (TermAndCondition > 0)
		ContractTermAndConditionExists
			restricted
			when (ContractTermAndCondition exists)
		TermAndConditionIsActive
			restricted
			when (TermAndCondition.Active
			or	  !TermAndConditionExists)
		UpdateValid
			restricted
			when (Contract.ContractStatus.Draft
			and	  !Status.PendingApproval)
		UpdateAddendumValid
			restricted
			when (AddendumState
			and	  !Status.PendingApproval
			and	  !ContractArticle.PendingRequestToDelete
			and   !Contract.ContractRedlineApprovals)
		OKToDelete
			restricted
			when (ContractArticle.OkToDeleteWhenAddendum
			and  !Contract.ContractRedlineApprovals)
		DraftTermAndConditionTextUpdateExists
			restricted
			when (DraftTermAndConditionTextUpdateRel exists)
		PendingTermAndConditionTextUpdateExists
			restricted
			when (PendingTermAndConditionTextUpdateRel exists)
		DraftTermAndConditionUpdateExists
			restricted
			when (DraftTermAndConditionUpdateRel exists)
		DraftTermAndConditionInternalUpdateExists
			restricted
			when (DraftTermAndConditionInternalUpdateRel exists)
		DisplayDraftUpdatedMessage
			restricted
			when ((CreationApproved
			or	  Contract.AddendumExists)
			and	  DraftTermAndConditionUpdateRel exists)
		DisplayPendingUpdateMessage
			restricted
			when ((CreationApproved
			or	  Contract.AddendumExists)
			and	  PendingTermAndConditionUpdateRel exists)
		DisplayChanges
			restricted
			when (DisplayDraftUpdatedMessage
			or    DisplayPendingUpdateMessage)
		ActiveUpdatesToTextExist
			restricted
			when (DraftTermAndConditionTextUpdateExists
			or	  PendingTermAndConditionTextUpdateExists)
		ActiveApprovalRequestExists
			restricted
			when (DraftTermAndConditionUpdateExists
			or	  PendingTermAndConditionUpdateExists)
		WithdrawProposedUpdatesValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  ActiveApprovalRequestExists
			and	  !ContractArticle.PendingRequestToDelete)
		ActiveApprovalRequestOnInProgressContractExists
			when (ActiveApprovalRequestExists
			and	  Contract.InProgress)
		PendingTermAndConditionUpdateExists
			restricted
			when (PendingTermAndConditionUpdateRel exists)
		PendingTermAndConditionInternalUpdateExists
			restricted
			when (PendingTermAndConditionInternalUpdateRel exists)
		BuyerEditTermActionValid
			restricted
			when (InternalApprovalOrPortalNegotiation
			and	  AllowUpdate
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier
			and  (Contract.NegotiationStatus.NeedsInternalApproval
			or    AddendumState))
		ApproverEditTermActionValid
			restricted
			when (InternalApprovalOrPortalNegotiation
			and	  AllowUpdate
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier
			and   Contract.ContractStatus.Released)
		SupplierEditTermActionValid
			restricted
			when  (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation
			and	  AllowUpdate
			and	  !PendingRequestToDelete
			and   Contract.SupplierSameAsContractSupplier)
		BuyerOrSupplierEditTermActionValid
			restricted
			when (((Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation)
			or   (Contract.BuyerAllowedToEditTermsAndConditions
			and	  InternalApprovalOrPortalNegotiation))
			and	  AllowUpdate
			and	  !PendingRequestToDelete)
		FromContractUpdateDescriptionActionValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  CreationApproved
			and	  DerivedRequireTermUpdateApproval
			and	  !PendingTermAndConditionUpdateExists
			and	  AllowUpdate
			and	  !ContractArticle.PendingRequestToDelete
			and	  !PendingRequestToDelete
			and	  !DraftRequestToDelete)
		DisplayButtons
			restricted
			when   (CreationApproved
			and	    AllowUpdate
			and     Contract.NotContractTemplate
			and	  ((ContractStatus.Draft
			and     Contract.DerivedRequireTermAndConditionApproval)
			or     (AddendumState
			and     Contract.DerivedRequireAddendumTermAndConditionApproval)))
		AllowDescriptionUpdate
			restricted
			when (((Status.NeedsApproval
			and	    !CreationApproved)
			or	   (CreationApproved
			and	    !DerivedRequireTermUpdateApproval))
			and     AllowUpdate)
		CompletedTermAndConditionUpdateExists
			restricted
			when (CompletedTermAndConditionUpdateRel exists)
		TermHasBeenUpdated
			restricted
			when (NumberOfUpdates > 1)
		AllowUpdate
			restricted
			when (TermAndCondition.AllowModification
			or	  AdhocTermAndCondition)
		NoModification
			restricted
			when (TermAndCondition exists
			and  !TermAndCondition.AllowModification)
		InApprovalProcess
			restricted
			when (Contract.ContractStatus.Released
			or	  Contract.ContractStatus.Negotiation
			or	  Contract.ContractStatus.FinalApproval)
		UpdateRequiresApproval
			restricted
			when (InApprovalProcess
			or	  (Contract.ContractStatus.Draft
			and	  Contract.DerivedRequireTermAndConditionApproval)
			or	  (Contract.ContractStatus.Addendum
			and	  Contract.RequireTermAndConditionApproval))	
		PendingRequestToDelete
			restricted
			when (PendingTermAndConditionDeleteRel exists
			or    ContractArticle.PendingRequestToDelete)
		DraftRequestToDelete
			restricted
			when (DraftTermAndConditionDeleteRel exists)
		UpdateFromPreviousVersionValid
			restricted
			when (Contract.ContractStatus.Draft
			and	  CreationApproved
			and	  NumberOfCompleteUpdates > 1
			and	  NumberOfPendingUpdates < 1
			and	  !DraftTermAndConditionUpdateExists
			and	  AllowUpdate
			and	  !ContractArticle.PendingRequestToDelete
			and	  !PendingRequestToDelete
			and	  !DraftRequestToDelete)
		PendingUpdateInCurrentVersionExists
			restricted
			when (PendingUpdateInCurrentVersionRel exists)
		InternalApprovalOrPortalNegotiation
			restricted
			when (Contract.RequireTermAndConditionApproval
			or	  Contract.UseSupplierPortalForNegotiation)
		ShowHistoryPanel
			restricted
			when (Contract.RequireTermAndConditionApproval
			or	  Contract.UseSupplierPortalForNegotiation)
		RestoreDeletedTermValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  !ContractArticle.Deleted = true
			and	  Deleted = true)
		BuyerAddendumDeleteTermButtonValid
			restricted
			when (AddendumDeleteTermButtonValid
			and   InternalApprovalOrPortalNegotiation
			and  !Contract.SupplierSameAsContractSupplier)
		SupplierAddendumDeleteTermButtonValid
			restricted
			when (AddendumDeleteTermButtonValid
			and   Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation
			and   Contract.SupplierSameAsContractSupplier)
		AddendumDeleteTermButtonValid
			restricted
			when (AddendumState
			and	  !PendingRequestToDelete
			and	  !DraftRequestToDelete
			and	  !ContractArticle.OkToDeleteWhenAddendum
			and	  !ContractArticle.PendingRequestToDelete)
		ShowTermTitleField
			restricted
			when (Contract.ContractStatus.Draft
			or	  Contract.ContractStatus.Addendum)
		AttachmentsToBeAddedExist
			restricted
			when (ContractTermAndConditionAddAttachmentRel exists)
		NewOrExistingAttachmentsExist
			restricted
			when (AttachmentsToBeAddedExist
			or    ContractTermAndConditionAttachmentExists)
		DeleteAttachmentValid
			restricted
			when (((Contract.BuyerAllowedToEditTermsAndConditions
			and	  InternalApprovalOrPortalNegotiation
			and	 !DraftRequestToDelete
			and  !Contract.SupplierSameAsContractSupplier)
			or   (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation
			and   Contract.SupplierSameAsContractSupplier))
			and	  AllowUpdate
			and	 !PendingRequestToDelete
			and	 ((ContractTermAndConditionAttachmentExists
			and	  NumberOfAttachmentsToBeDeleted < NumberOfExistingAttachments)
			or	  AttachmentsToBeAddedExist))
		BuyerDeleteTermValid
			restricted
			when ((AddendumState
			or     Contract.NegotiationStatus.NeedsInternalApproval)
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier)
		ApproverDeleteTermValid
			restricted
			when (Contract.ContractStatus.Released
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier)
		SupplierDeleteTermValid
			restricted
			when  (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  !PendingRequestToDelete
			and   Contract.SupplierSameAsContractSupplier)
		BuyerRestoreTermValid
			restricted
			when (Contract.BuyerAllowedToEditTermsAndConditions
			and   RestoreTermTestValid)
		SupplierRestoreTermValid
			restricted
			when (Contract.NegotiationStatus.NeedsSupplierApproval
			and   RestoreTermTestValid)
		AttachmentsExistingNotYetDeleted
			restricted
			when  (ContractTermAndConditionAttachmentExists
			and	   NumberOfAttachmentsToBeDeleted < NumberOfExistingAttachments)
		ContractTermAndConditionAttachmentExists
			restricted
			when (ContractTermAndConditionAttachmentRel exists)
		AttachmentsToBeDeletedExist
			restricted
			when (ContractTermAndConditionDeleteAttachmentRel exists)
		NonAttachmentPendingContractTermAndConditionUpdateExist
			restricted
			when (NonAttachmentPendingContractTermAndConditionUpdateRel exists)
		RestoreTermTestValid
			restricted
			when ((PendingRequestToDelete
			or	   DraftRequestToDelete)
			and	  !ContractArticle.PendingRequestToDelete)
		DraftCreateValid
			restricted
			when (Contract.ContractStatus.Draft
			and	  !ContractArticle.Deleted)
		AddendumCreateValid
			restricted
			when (AddendumState
			and	  !ContractArticle.Deleted
			and	  !ContractArticle.PendingRequestToDelete
			and   !Contract.ContractRedlineApprovals)
		HasChildren
			restricted
			when (ChildTermAndConditionRel exists)
		RequestToCreateTermAndConditionsInCurrentVersion
			restricted
			when (TermAndConditionsCreateRequestsInCurrentVersionRel exists)
		ParentTermAndConditionExists
			restricted
			when (ParentTermAndCondition entered)
		BuyerAddTermActionValid
			restricted
			when (Contract.NegotiationStatus.NeedsInternalApproval
			and   !Contract.SupplierSameAsContractSupplier)
		SupplierAddTermActionValid
			restricted
			when (Contract.NegotiationStatus.NeedsSupplierApproval
			and   Contract.SupplierSameAsContractSupplier)
		NonDocxAttachment
			restricted
			when (NonDocxAttachmentRel exists)
		InvalidIDMAttachment
			when (NonDocxAttachment
			and   Contract.IsUsingIDMTemplate)


	Relations
		ContractTermAndConditionAttachmentRel is a ContractTermAndConditionAttachment set

		TermAndConditionAttachmentRel is a TermAndConditionAttachment set

		Level2ContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayStringParentTermLevel
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractArticle			= ContractArticle
				related.ParentTermAndCondition	= ContractTermAndCondition
				related.TermLevel				= 2

		Level3ContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayStringParentTermLevel
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractArticle			= ContractArticle
				related.ParentTermAndCondition	= ContractTermAndCondition
				related.TermLevel				= 3

		Level4ContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayStringParentTermLevel
				related.ContractGroup			= ContractGroup
				related.Contract				= Contract
				related.ContractArticle			= ContractArticle
				related.ParentTermAndCondition	= ContractTermAndCondition
				related.TermLevel				= 4

   		ParentTermAndConditionRel
			one-to-one relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup	 	 		= ContractGroup
				related.Contract                    = Contract
				related.ContractArticle  			= ContractArticle
				related.ContractTermAndCondition 	= ParentTermAndCondition

   		ChildTermAndConditionRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup    = ContractGroup
				related.Contract         = Contract
				related.ContractArticle  = ContractArticle
			Instance Selection
				where (related.ParentTermAndCondition = ContractTermAndCondition)

   		ChildTermAndConditionLevel2Rel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup    = ContractGroup
				related.Contract         = Contract
				related.ContractArticle  = ContractArticle
			Instance Selection
				where (related.ParentTermAndCondition = ContractTermAndCondition
				and    related.TermLevel = 2)

		ChildTermAndConditionLevel3Rel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup    = ContractGroup
				related.Contract         = Contract
				related.ContractArticle  = ContractArticle
			Instance Selection
				where (related.ParentTermAndCondition = ContractTermAndCondition
				and    related.TermLevel = 3)

		ChildTermAndConditionLevel4Rel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup    = ContractGroup
				related.Contract         = Contract
				related.ContractArticle  = ContractArticle
			Instance Selection
				where (related.ParentTermAndCondition = ContractTermAndCondition
				and    related.TermLevel = 4)

   		DescendantTermAndConditionRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup 			 = ContractGroup
				related.Contract                 = Contract
				related.ContractArticle          = ContractArticle
				related.ContractTermAndCondition = ContractTermAndCondition descendants.ContractTermAndCondition

   		LocalParentTermAndConditionRel
   			one-to-many relation to ContractTermAndCondition
   			Field Mapping uses symbolic key
   				related.ContractGroup    = ContractGroup
				related.Contract         = Contract
				related.ContractArticle  = ContractArticle
			Instance Selection
				where (related.TermAndCondition = LocalParentTermAndCondition)

   		ContractTermsAttachmentByDisplayRel
			one-to-many relation to ContractTermAndConditionAttachment
			delete cascades
			Field Mapping uses ByDisplayOrder
				related.ContractGroup  			 = ContractGroup
				related.Contract        		 = Contract
				related.ContractArticle 		 = ContractArticle
				related.ContractTermAndCondition = ContractTermAndCondition

		MergeContractTermsAttachmentByDisplayRel
			one-to-many relation to ContractTermAndConditionAttachment
			delete cascades
			Field Mapping uses ByDisplayOrder
				related.ContractGroup  			 = ContractGroup
				related.Contract        		 = Contract
				related.ContractArticle 		 = ContractArticle
				related.ContractTermAndCondition = ContractTermAndCondition
			Instance Selection
				where (related.DocxAttachment)

		NonDocxAttachmentRel
			one-to-many relation to ContractTermAndConditionAttachment
			Field Mapping uses ByDisplayOrder
				related.ContractGroup  			 = ContractGroup
				related.Contract        		 = Contract
				related.ContractArticle 		 = ContractArticle
				related.ContractTermAndCondition = ContractTermAndCondition
			Instance Selection
				where (not related.DocxAttachment)

   		DistributorContractRel
   			one-to-one relation to Contract
   			Field Mapping uses ByDistributor
   				related.ContractGroup = ContractGroup
   				related.Contract      = Contract
   				related.ManufacturerOrDistributor.DistributorContract = true
   		ManufacturerContractRel
   			one-to-one relation to Contract
   			Field Mapping uses ByManufacturer
   				related.ContractGroup = ContractGroup
   				related.Contract      = Contract
   				related.ManufacturerOrDistributor.ManufacturerContract = true
   		AnotherTermForArticleRel
   			one-to-many relation to ContractTermAndCondition
   			Field Mapping uses ByDisplayOrder
   				related.ContractGroup 	= ContractGroup
   				related.Contract		= Contract
   				related.ContractArticle	= ContractArticle
   		ContractRebateRel is a ContractRebate set
   		ContractRebateTypeRel is a ContractRebateType set

		DraftTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Draft)

		DraftTermAndConditionInternalUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   !related.SupplierRequest)

		DraftTermAndConditionTextUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   (related.SpecificRequestType.UpdateTermAndCondition
				or		related.SpecificRequestType.DeleteTermAndCondition
				or		related.SpecificRequestType.Create))

		PendingTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				or    (related.Status.Complete
				and    related.ActionTaken.Disapproved))
	
		PendingTermAndConditionInternalUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   !related.SupplierRequest)

		PendingTermAndConditionTextUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   (related.SpecificRequestType.UpdateTermAndCondition
				or		related.SpecificRequestType.DeleteTermAndCondition
				or		related.SpecificRequestType.Create))

		PendingUpdateInCurrentVersionRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   related.TermNegotiationVersion > Contract.TermNegotiationVersion)

		PendingTermAndConditionDeleteRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   related.SpecificRequestType.DeleteTermAndCondition)

		DraftTermAndConditionDeleteRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   related.SpecificRequestType.DeleteTermAndCondition)

		CompletedAndApprovedTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Complete
				and	   related.ActionTaken.Approved
				and	   !related.SpecificRequestType.AddAttachment
				and	   !related.SpecificRequestType.DeleteAttachment)

		CompleteTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Complete)

		ContractTermAndConditionUpdateRel is a ContractTermAndConditionUpdate set

		NonAttachmentContractTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (!related.SpecificRequestType.AddAttachment
				and	   !related.SpecificRequestType.DeleteAttachment)

		NonAttachmentPendingContractTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   !related.SpecificRequestType.AddAttachment
				and	   !related.SpecificRequestType.DeleteAttachment)

		CompletedTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Complete
				and	   (related.RequestType.Update
				or		related.RequestType.Create))

		CurrentTermAndConditionUpdatesRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.TermNegotiationVersion = Contract.LastContractTermVersion)

		PendingTermAndConditionUpdatesNoDeletionsRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   !related.RequestType.Delete
				and	   !related.SpecificRequestType.AddAttachment
				and	   !related.SpecificRequestType.DeleteAttachment)

		OriginalTermAndConditionUpdatesRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.TermNegotiationVersion = 1
				and	   related.ActionTaken.Approved
				and	   related.RequestType.Create)

		ContractTermVersionArticleRel
			one-to-many relation to ContractTermVersionArticle
			Field Mapping uses symbolic key
				related.ContractGroup 				= ContractGroup
				related.Contract 					= Contract
				related.ContractTermVersion 		= (Contract.TermNegotiationVersion - 1)
			Instance Selection
				where (related.ContractArticle = ContractArticle)

		PreviousContractTermVersionTermRel
			one-to-many relation to ContractTermVersionTerm
			Field Mapping uses symbolic key
				related.ContractGroup 				= ContractGroup
				related.Contract 					= Contract
				related.ContractTermVersion 		= (Contract.TermNegotiationVersion - 1)
				related.ContractTermVersionArticle 	= last ContractTermVersionArticleRel.ContractTermVersionArticle
			Instance Selection
				where (related.ContractArticle				= ContractArticle
				and	   related.ContractTermAndCondition		= ContractTermAndCondition)

		ExternalNegotiationTermAndConditionUpdateRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.ApprovalStage.SupplierNegotiation)

		ContractTermAndConditionAddAttachmentRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where ((related.Status.Draft
				or	    related.Status.Pending)
				and	   related.SpecificRequestType.AddAttachment)

		ContractTermAndConditionDeleteAttachmentRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where ((related.Status.Draft
				or	    related.Status.Pending)
				and	   related.SpecificRequestType.DeleteAttachment)

		ContractTermAndConditionDeleteAttachmentDraftRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   related.SpecificRequestType.DeleteAttachment)

		AddTermAndConditionAttachmentRel
			one-to-one relation to ContractTermAndConditionAttachment
			Field Mapping uses symbolic key
				related.ContractGroup  						= ContractGroup
				related.Contract  							= Contract
				related.ContractArticle						= ContractArticle
				related.ContractTermAndCondition			= ContractTermAndCondition
				related.ContractTermAndConditionAttachment	= LocalTAndCAttachmentNumber

		TermAndConditionsCreateRequestsInCurrentVersionRel
			one-to-many relation to ContractTermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
				related.ContractTermAndCondition	= ContractTermAndCondition
			Instance Selection
				where (related.AddedDuringNegotiation
				and	   related.Status.Pending
				and	   related.SpecificRequestType.Create
				and	   related.TermNegotiationVersion > Contract.TermNegotiationVersion)

		UserTemplateRel
			one-to-one relation to UserTemplate
			Field Mapping uses symbolic key
				related.UserTemplate = LocalUserTemplate

	Context Fields
		ContractTermAndConditionAttachment

	Field Groups
		TermModified
			HeaderText
			Description

	Local Fields
		FirstLoop 						is Boolean
		LocalDisplayOrder				is a DisplayOrder
		LocalTAndCAttachmentNumber 		is Numeric 4
		FromRepository                  is Boolean
		LocalParentTermAndCondition     is a TermAndCondition
		LocalAlphaTermDisplay           is Alpha size 2
		LocalFullAlphaTermDisplay       is Alpha size 8
		LocalTopLevelTermDisplay        is Alpha size 2
		LocalSecondLevelTermDisplay     is Alpha size 2
		LocalThirdLevelTermDisplay      is Alpha size 2
		LocalFourthLevelTermDisplay     is Alpha size 2
		LocalAlphaTermDisplay3          is Alpha size 3
		LocalFullAlphaTermDisplay12     is Alpha size 12
		LocalTopLevelTermDisplay3       is Alpha size 3
		LocalSecondLevelTermDisplay3    is Alpha size 3
		LocalThirdLevelTermDisplay3     is Alpha size 3
		LocalFourthLevelTermDisplay3    is Alpha size 3
        LocalUserTemplate				is like UserTemplate

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "ContractTerm_andCondition"
			ContractTermAndCondition " - " Title

		DerivedDescriptionForIDM is a DerivedField
			type is Text
			default label is "Description"
			return Description text

		RebateVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebateVariable += ", "
				RebateVariable += each.ContractRebateType

		RebatePercentVariable is a DerivedField
			type is Alpha 60
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebatePercentVariable += " , "
				RebatePercentVariable += each.RebatePercent

		RebateFrequencyVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebateFrequencyVariable += " , "
				RebateFrequencyVariable += each.Frequency

		SourcingEventNumberVariable is a DerivedField
			type is Alpha size 30
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventNumberVariable += ", "
				SourcingEventNumberVariable += each.RelatedContractID

		SourcingEventDescriptionVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventDescriptionVariable += ", "
				SourcingEventDescriptionVariable += each.RelatedContractDescription

		SourcingEventNameVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventNameVariable += ", "
				SourcingEventNameVariable += each.SourcingEventRel.Name

		SourcingEventBuyerVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerVariable += ", "
				SourcingEventBuyerVariable += each.SourcingEventRel.Buyer.Name

		SourcingEventBuyerPhoneVariable is a DerivedField
			type is Alpha size 100
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerPhoneVariable += ", "
				SourcingEventBuyerPhoneVariable += each.SourcingEventRel.Buyer.EmployeeWorkTelephone

		SourcingEventBuyerEmailVariable is a DerivedField 
			type is EmailAddressField with multiple addresses
			holds pii
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerEmailVariable += ", "
				SourcingEventBuyerEmailVariable += each.SourcingEventRel.Buyer.EmailAddress

		ProjectNameVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.ProjectRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					ProjectNameVariable += ", "
				ProjectNameVariable += each.RelatedContractDescription

		SourcingEventReferenceVariable is a DerivedField
			type is Alpha size 50
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventReferenceVariable += ", "
				SourcingEventReferenceVariable += each.SourcingEventRel.EventReference

		ProjectNumberVariable is a DerivedField
			type is Alpha size 250
			restricted
			FirstLoop = true
			for each Contract.ProjectRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					ProjectNumberVariable += ", "
				ProjectNumberVariable += each.RelatedContractID

		DerivedCompareFirstCurrentHeaderText is a NativeField
			type is RichText
			restricted

		DerivedCompareFirstCurrentDescription is a NativeField
			type is RichText
			restricted

		DerivedCompareCurrentPreviousHeaderText is a NativeField
			type is RichText

		DerivedCompareCurrentPreviousDescription is a NativeField
			type is RichText

		DerivedRequireTermUpdateApproval is a DerivedField
			type is Boolean
			restricted
			return Contract.RequireTermAndConditionApproval

		DerivedCurrentRequestedTitle is a DerivedField
			type is like Description
			restricted
			if (PendingTermAndConditionTextUpdateRel exists)
				return last PendingTermAndConditionTextUpdateRel.RevisedTitle
			else
			if (DraftTermAndConditionTextUpdateRel exists)
				return last DraftTermAndConditionTextUpdateRel.RevisedTitle
			else
				return Title

		DerivedCurrentRequestedHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (PendingTermAndConditionTextUpdateRel exists)
				return last PendingTermAndConditionTextUpdateRel.RevisedHeaderText
			else
			if (DraftTermAndConditionTextUpdateRel exists)
				return last DraftTermAndConditionTextUpdateRel.RevisedHeaderText
			else
				return HeaderText

		DerivedCurrentRequestedDescription is a DerivedField
			type is Text
			restricted
			if (PendingTermAndConditionTextUpdateRel exists)
				return last PendingTermAndConditionTextUpdateRel.RevisedDescription
			else
			if (DraftTermAndConditionTextUpdateRel exists)
				return last DraftTermAndConditionTextUpdateRel.RevisedDescription
			else
				return Description


		DerivedFirstTermHeaderText is a DerivedField
			type is Alpha 100
			restricted
			return first ContractTermAndConditionUpdateRel.RevisedHeaderText


		DerivedFirstTermDescription is a DerivedField
			type is Text
			restricted
			return first ContractTermAndConditionUpdateRel.RevisedDescription

		DerivedCurrentVersionPreviousTitle is a DerivedField
			type is like Description
			restricted
			if (CurrentTermAndConditionUpdatesRel exists)
				return last ContractTermAndConditionUpdateRel.RevisedTitle
			else
				return Title

		DerivedCurrentVersionPreviousHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (CurrentTermAndConditionUpdatesRel exists)
				return last ContractTermAndConditionUpdateRel.RevisedHeaderText
			else
				return HeaderText

		DerivedCurrentVersionPreviousDescription is a DerivedField
			type is Text
			restricted
			if (CurrentTermAndConditionUpdatesRel exists)
				return last ContractTermAndConditionUpdateRel.RevisedDescription
			else
				return Description

		DerivedLastTitleBeforeDeletionRequest is a DerivedField
			type is like Description
			restricted
			if (PendingTermAndConditionUpdatesNoDeletionsRel exists)
				return last PendingTermAndConditionUpdatesNoDeletionsRel.RevisedTitle
			else
				return Title

		DerivedLastHeaderTextBeforeDeletionRequest is a DerivedField
			type is Alpha 100
			restricted
			if (PendingTermAndConditionUpdatesNoDeletionsRel exists)
				return last PendingTermAndConditionUpdatesNoDeletionsRel.RevisedHeaderText
			else
				return HeaderText

		DerivedLastDescriptionBeforeDeletionRequest is a DerivedField
			type is Text
			restricted
			if (PendingTermAndConditionUpdatesNoDeletionsRel exists)
				return last PendingTermAndConditionUpdatesNoDeletionsRel.RevisedDescription
			else
				return Description

		DerivedPreviousTermTitle is a DerivedField
			type is like Description
			restricted
			if (PendingRequestToDelete)
				return DerivedLastTitleBeforeDeletionRequest
			else
				return last CompletedAndApprovedTermAndConditionUpdateRel.RevisedTitle


		DerivedPreviousTermHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (PendingRequestToDelete)
				return DerivedLastHeaderTextBeforeDeletionRequest
			else
				return last CompletedAndApprovedTermAndConditionUpdateRel.RevisedHeaderText


		DerivedPreviousTermDescription is a DerivedField
			type is Text
			restricted
			if (PendingRequestToDelete)
				return DerivedLastDescriptionBeforeDeletionRequest
			else
				return last CompletedAndApprovedTermAndConditionUpdateRel.RevisedDescription

		DerivedPreviousVersionTermTitle is a DerivedField
			type is like Description
			restricted
			return last PreviousContractTermVersionTermRel.Title

		DerivedPreviousVersionTermHeaderText is a DerivedField
			type is Alpha 100
			restricted
			return last PreviousContractTermVersionTermRel.HeaderText

		DerivedPreviousVersionTermDescription is a DerivedField
			type is Text
			restricted
			return last PreviousContractTermVersionTermRel.Description


		DerivedLastTermHeaderText is a DerivedField
			type is Alpha 100
			restricted
			return last NonAttachmentContractTermAndConditionUpdateRel.RevisedHeaderText


		DerivedLastTermDescription is a DerivedField
			type is Text
			restricted
			return last NonAttachmentContractTermAndConditionUpdateRel.RevisedDescription

		NumberOfPendingUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of PendingTermAndConditionUpdateRel)

		NumberOfCompleteUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of CompleteTermAndConditionUpdateRel)

		NumberOfUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of ContractTermAndConditionUpdateRel)

		NeedsApprovalMessage is a MessageField
			restricted
			"NeedsApproval"

		PendingApprovalMessage is a MessageField
			restricted
			"PendingApproval"

		NotModifiedMessage is a MessageField
			restricted
			"NotModified"

		ApprovedMessage is a MessageField
			restricted
			"Approved"

		RejectedMessage is a MessageField
			restricted
			"Rejected"

		DisapprovedMessage is a MessageField
			restricted
			"Disapproved"

		DerivedApprovalRequestStatus is a DerivedField
			type is Alpha 25
			if (DraftTermAndConditionUpdateExists)
				return NeedsApprovalMessage
			else
			if (PendingTermAndConditionUpdateExists)
				return PendingApprovalMessage
			else
			if (CompletedTermAndConditionUpdateExists)
				return DerivedLastUpdateActionTaken
			else
			if (!CreationApproved)
				return NeedsApprovalMessage
			else
			if (!TermHasBeenUpdated)
				return NotModifiedMessage
			else
				return ""

		DerivedLastUpdateActionTaken is a DerivedField
			type is Alpha 25
			restricted
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Approved)
				return ApprovedMessage
			else
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Rejected)
				return RejectedMessage
			else
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Withdrawn)
				return ApprovedMessage

			else
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Disapproved)
				return DisapprovedMessage
			else
				return ""

		DerivedApprovalStage is a DerivedField
			type is Numeric 2
			restricted
			if (Contract.ContractStatus.Released)
				return 1	
			else
			if (Contract.ContractStatus.Negotiation)
				return 2	
			else
			if (Contract.ContractStatus.FinalApproval)
				return 3	
			else
			if (Contract.ContractStatus.Draft)
				if (Contract.DerivedRequireContractApproval)
					return 1	
				else
				if (Contract.DerivedRequireContractNegotiation)
					return 2	
				else
				if (Contract.DerivedRequireFinalApproval)
					return 3	
				else
					return ""
			if (Contract.ContractStatus.Addendum)
				if (Contract.DerivedRequireAddendumApproval)
					return 1	
				else
				if (Contract.DerivedRequireAddendumNegotiation)
					return 2	
				else
				if (Contract.DerivedRequireFinalAddendumApproval)
					return 3	
				else
					return ""
			else
				return ""

		NumberOfAttachmentsToBeAdded is a ComputeField
			type is Numeric 3
			restricted
			(instance count of ContractTermAndConditionAddAttachmentRel)

		NumberOfAttachmentsToBeDeleted is a ComputeField
			type is Numeric 3
			restricted
			(instance count of ContractTermAndConditionDeleteAttachmentRel)	

		NumberOfExistingAttachments is a ComputeField
			type is Numeric 3
			restricted
			(instance count of ContractTermAndConditionAttachmentRel)
		
		DerivedInvalidIDMAttachmentWarningMessage is a MessageField 
			"SomeAttachmentsAreNotOf_(.\docx)FileType."

        MissingTemplateMsg is a MessageField
            "TheTemplateCouldNotBeFound"
            
        ContractTermsAndConditionsAttachments is a DerivedField
            type is XMLDocument
            default label is untranslatable
            restricted
            for each ContractTermAndConditionAttachment set
                ContractTermsAndConditionsAttachments += each.AttachmentTemplate
            
        TermsTemplate is a DerivedField
            type is XMLDocument
            default label is untranslatable
            restricted
            LocalUserTemplate = "ContractTermsAndConditionsTerms_ST"
            if (UserTemplateRel exists)
                TermsTemplate = template.ContractTermsAndConditionsTerms_ST document for this instance
            else
                TermsTemplate = MissingTemplateMsg 
            return TermsTemplate

	Rule Blocks

		MaintainDisplayString12
			initialize LocalAlphaTermDisplay3
			initialize LocalFullAlphaTermDisplay12
			initialize LocalTopLevelTermDisplay3
			initialize LocalSecondLevelTermDisplay3
			initialize LocalThirdLevelTermDisplay3
			initialize LocalFourthLevelTermDisplay3
			if (TermLevel = 1)
				LocalAlphaTermDisplay3 = DisplayOrder
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2] !entered)
					LocalTopLevelTermDisplay3 = "00" + DisplayOrder
				else
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2] entered)
					LocalTopLevelTermDisplay3 = "0" + DisplayOrder
				else
					LocalTopLevelTermDisplay3 = DisplayOrder
				LocalSecondLevelTermDisplay3 = "000"
				LocalThirdLevelTermDisplay3  = "000"
				LocalFourthLevelTermDisplay3 = "000"
			if (TermLevel = 2)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3 	    = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2] + LocalFullAlphaTermDisplay12[3]
				LocalAlphaTermDisplay3   		= DisplayOrder
				if (LocalAlphaTermDisplay3[2] !entered
				and LocalAlphaTermDisplay3[3] !entered)
					LocalSecondLevelTermDisplay3 = "00" + DisplayOrder
				else
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2]  entered)
					LocalSecondLevelTermDisplay3 = "0" + DisplayOrder
				else
					LocalSecondLevelTermDisplay3 = DisplayOrder
				LocalThirdLevelTermDisplay3  = "000"
				LocalFourthLevelTermDisplay3 = "000"
			if (TermLevel = 3)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3 	    = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2]+ LocalFullAlphaTermDisplay12[3]
				LocalSecondLevelTermDisplay3    = LocalFullAlphaTermDisplay12[4] + LocalFullAlphaTermDisplay12[5]+ LocalFullAlphaTermDisplay12[6]
				LocalAlphaTermDisplay3 		    = DisplayOrder
				if (LocalAlphaTermDisplay3[2] !entered
				and LocalAlphaTermDisplay3[3] !entered)
					LocalThirdLevelTermDisplay3 = "00" + DisplayOrder
				else
				if (LocalAlphaTermDisplay3[2]  entered
				and LocalAlphaTermDisplay3[3] !entered)
					LocalThirdLevelTermDisplay3 = "0" = DisplayOrder
				else
					LocalThirdLevelTermDisplay3 = DisplayOrder
				LocalFourthLevelTermDisplay3 = "000"
			if (TermLevel = 4)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3       = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2]+ LocalFullAlphaTermDisplay12[3]
				LocalSecondLevelTermDisplay3    = LocalFullAlphaTermDisplay12[4] + LocalFullAlphaTermDisplay12[5]+ LocalFullAlphaTermDisplay12[6]
				LocalThirdLevelTermDisplay3     = LocalFullAlphaTermDisplay12[7] + LocalFullAlphaTermDisplay12[8]+ LocalFullAlphaTermDisplay12[9]
				LocalAlphaTermDisplay3 		    = DisplayOrder
				if  (LocalAlphaTermDisplay3[2] !entered
				and  LocalAlphaTermDisplay3[3] !entered)
					LocalFourthLevelTermDisplay3 = "00" + DisplayOrder
				else
				if (LocalAlphaTermDisplay3[2] entered
				and LocalAlphaTermDisplay3[3] !entered)
					LocalFourthLevelTermDisplay3 = "0" + DisplayOrder
				else
					LocalFourthLevelTermDisplay3 = DisplayOrder
			DisplayString12 = LocalTopLevelTermDisplay3 + LocalSecondLevelTermDisplay3 + LocalThirdLevelTermDisplay3 + LocalFourthLevelTermDisplay3

		MaintainDisplayString              
			initialize LocalAlphaTermDisplay
			initialize LocalFullAlphaTermDisplay
			initialize LocalTopLevelTermDisplay
			initialize LocalSecondLevelTermDisplay
			initialize LocalThirdLevelTermDisplay
			initialize LocalFourthLevelTermDisplay
			if (TermLevel = 1)
				LocalAlphaTermDisplay = DisplayOrder
				if (LocalAlphaTermDisplay[2] !entered)
					LocalTopLevelTermDisplay = "0" + DisplayOrder
				else
					LocalTopLevelTermDisplay = DisplayOrder
				LocalSecondLevelTermDisplay = "00"
				LocalThirdLevelTermDisplay  = "00"
				LocalFourthLevelTermDisplay = "00"
			if (TermLevel = 2)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay 	= LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalAlphaTermDisplay 		= DisplayOrder
				if (LocalAlphaTermDisplay[2] !entered)
					LocalSecondLevelTermDisplay = "0" + DisplayOrder
				else
					LocalSecondLevelTermDisplay = DisplayOrder
				LocalThirdLevelTermDisplay  = "00"
				LocalFourthLevelTermDisplay = "00"
			if (TermLevel = 3)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay 	= LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalSecondLevelTermDisplay = LocalFullAlphaTermDisplay[3] + LocalFullAlphaTermDisplay[4]
				LocalAlphaTermDisplay 		= DisplayOrder
				if (LocalAlphaTermDisplay[2] !entered)
					LocalThirdLevelTermDisplay = "0" + DisplayOrder
				else
					LocalThirdLevelTermDisplay = DisplayOrder
				LocalFourthLevelTermDisplay = "00"
			if (TermLevel = 4)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay    = LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalSecondLevelTermDisplay = LocalFullAlphaTermDisplay[3] + LocalFullAlphaTermDisplay[4]
				LocalThirdLevelTermDisplay  = LocalFullAlphaTermDisplay[5] + LocalFullAlphaTermDisplay[6]
				LocalAlphaTermDisplay 		= DisplayOrder
				if (LocalAlphaTermDisplay[2] !entered)
					LocalFourthLevelTermDisplay = "0" + DisplayOrder
				else
					LocalFourthLevelTermDisplay = DisplayOrder
			DisplayString = LocalTopLevelTermDisplay + LocalSecondLevelTermDisplay + LocalThirdLevelTermDisplay + LocalFourthLevelTermDisplay

	Field Rules
   		Title
   			required
   		Description
   			required
		Modified
			default to false






		Article
			default to ContractArticle.Article
		SSTerm
			if (SSTerm)
				constraint (ContractArticle.SSArticle)
					"CannotSendTermToSourcing;AssociatedArticleIsNotBeingSent"
		Status
			initial value is 1	

	Action Exit Rules 

		if (Contract.FromMatrixApproval = true)
			invoke FastUpdate Contract 
				invoked.FromMatrixApproval = false 

	Actions
		AutoCreate is a Create Action
			restricted
			Action Rules
				Status = 3	
				CreationApproved = true

		UpdateDisplayString is a Set Action
			restricted

			Action Rules

				Instance Rules

					include MaintainDisplayString12

		BuyerCreateDeleteUpdateRecord is an Instance Action
			default label is "DeleteTerm"
			valid when (BuyerDeleteTermValid)
			Action Rules
				if (RequestToCreateTermAndConditionsInCurrentVersion)
					if (Contract.ContractStatus.Addendum)
						invoke Addendum.Delete
					else
						invoke DeleteTerm
				else
					if (ContractStatus.Addendum
					and	!CreationApproved)
						invoke Addendum.Delete	
					else
						invoke Create ContractTermAndConditionUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.OriginalTitle				= Title
							invoked.RevisedTitle				= ""
							invoked.OriginalHeaderText			= HeaderText
							invoked.RevisedHeaderText			= ""
							invoked.OriginalDescription			= Description
							invoked.RevisedDescription			= ""
							invoked.RequestingActor				= actor
							invoked.RequestDateTime				= current timestamp
							invoked.RequestType					= 3		
							invoked.SpecificRequestType			= 5		
							invoked.ApprovalComment				= action comment
							invoked.ApprovalStage				= DerivedApprovalStage
							if (Contract.ContractStatus.Addendum)
								invoked.Status		= 1		
							else
								invoked.Status		= 2		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
							if (Contract.NegotiationStatus.NeedsSupplierApproval)
								invoked.SupplierRequest	= true
						for each ContractTermAndConditionAttachmentRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup						= ContractGroup
								invoked.Contract							= Contract
								invoked.ContractArticle						= ContractArticle
								invoked.ContractTermAndCondition			= ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
								invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
								invoked.DeletedAttachment 					= each.Attachment
								invoked.DeletedAttachmentRef 				= each.AttachmentReference
								invoked.RequestingActor						= actor
								invoked.RequestDateTime						= current timestamp
								invoked.RequestType							= 2		
								invoked.SpecificRequestType					= 4		
								invoked.ApprovalComment						= action comment
								invoked.ApprovalStage						= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true

						for each DescendantTermAndConditionRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.ContractTermAndCondition	= each.ContractTermAndCondition
								invoked.OriginalTitle				= each.Title
								invoked.RevisedTitle				= ""
								invoked.OriginalHeaderText			= each.HeaderText
								invoked.RevisedHeaderText			= ""
								invoked.OriginalDescription			= each.Description
								invoked.RevisedDescription			= ""
								invoked.RequestingActor				= actor
								invoked.RequestDateTime				= current timestamp
								invoked.RequestType					= 3		
								invoked.SpecificRequestType			= 5		
								invoked.ApprovalComment				= action comment
								invoked.ApprovalStage				= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true
							for each each.ContractTermAndConditionAttachmentRel
								invoke Create ContractTermAndConditionUpdate
									invoked.ContractGroup						= ContractGroup
									invoked.Contract							= Contract
									invoked.ContractArticle						= ContractArticle
									invoked.ContractTermAndCondition			= each.ContractTermAndCondition
									invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
									invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
									invoked.DeletedAttachment 					= each.Attachment
									invoked.DeletedAttachmentRef 				= each.AttachmentReference
									invoked.RequestingActor						= actor
									invoked.RequestDateTime						= current timestamp
									invoked.RequestType							= 2		
									invoked.SpecificRequestType					= 4		
									invoked.ApprovalComment						= action comment
									invoked.ApprovalStage						= DerivedApprovalStage
									if (Contract.ContractStatus.Addendum)
										invoked.Status		= 1		
									else
										invoked.Status		= 2		
									invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
									if (Contract.NegotiationStatus.NeedsSupplierApproval)
										invoked.SupplierRequest	= true

		ApproverCreateDeleteUpdateRecord is an Instance Action
			default label is "DeleteTerm"
			valid when (ApproverDeleteTermValid)
			Action Rules
				if (RequestToCreateTermAndConditionsInCurrentVersion)
					if (Contract.ContractStatus.Addendum)
						invoke Addendum.Delete
					else
						invoke DeleteTerm
				else
					if (Contract.ContractStatus.Addendum
					and	!CreationApproved)
						invoke Addendum.Delete	
					else
						invoke Create ContractTermAndConditionUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.OriginalTitle				= Title
							invoked.RevisedTitle				= ""
							invoked.OriginalHeaderText			= HeaderText
							invoked.RevisedHeaderText			= ""
							invoked.OriginalDescription			= Description
							invoked.RevisedDescription			= ""
							invoked.RequestingActor				= actor
							invoked.RequestDateTime				= current timestamp
							invoked.RequestType					= 3		
							invoked.SpecificRequestType			= 5		
							invoked.ApprovalComment				= action comment
							invoked.ApprovalStage				= DerivedApprovalStage
							if (Contract.ContractStatus.Addendum)
								invoked.Status		= 1		
							else
								invoked.Status		= 2		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
							if (Contract.NegotiationStatus.NeedsSupplierApproval)
								invoked.SupplierRequest	= true
						for each ContractTermAndConditionAttachmentRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup						= ContractGroup
								invoked.Contract							= Contract
								invoked.ContractArticle						= ContractArticle
								invoked.ContractTermAndCondition			= ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
								invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
								invoked.DeletedAttachment 					= each.Attachment
								invoked.DeletedAttachmentRef 				= each.AttachmentReference
								invoked.RequestingActor						= actor
								invoked.RequestDateTime						= current timestamp
								invoked.RequestType							= 2		
								invoked.SpecificRequestType					= 4		
								invoked.ApprovalComment						= action comment
								invoked.ApprovalStage						= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true

						for each DescendantTermAndConditionRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.ContractTermAndCondition	= each.ContractTermAndCondition
								invoked.OriginalTitle				= each.Title
								invoked.RevisedTitle				= ""
								invoked.OriginalHeaderText			= each.HeaderText
								invoked.RevisedHeaderText			= ""
								invoked.OriginalDescription			= each.Description
								invoked.RevisedDescription			= ""
								invoked.RequestingActor				= actor
								invoked.RequestDateTime				= current timestamp
								invoked.RequestType					= 3		
								invoked.SpecificRequestType			= 5		
								invoked.ApprovalComment				= action comment
								invoked.ApprovalStage				= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true
							for each each.ContractTermAndConditionAttachmentRel
								invoke Create ContractTermAndConditionUpdate
									invoked.ContractGroup						= ContractGroup
									invoked.Contract							= Contract
									invoked.ContractArticle						= ContractArticle
									invoked.ContractTermAndCondition			= each.ContractTermAndCondition
									invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
									invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
									invoked.DeletedAttachment 					= each.Attachment
									invoked.DeletedAttachmentRef 				= each.AttachmentReference
									invoked.RequestingActor						= actor
									invoked.RequestDateTime						= current timestamp
									invoked.RequestType							= 2		
									invoked.SpecificRequestType					= 4		
									invoked.ApprovalComment						= action comment
									invoked.ApprovalStage						= DerivedApprovalStage
									if (Contract.ContractStatus.Addendum)
										invoked.Status		= 1		
									else
										invoked.Status		= 2		
									invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
									if (Contract.NegotiationStatus.NeedsSupplierApproval)
										invoked.SupplierRequest	= true

		SupplierCreateDeleteUpdateRecord is an Instance Action
			default label is "DeleteTerm"
			valid when (SupplierDeleteTermValid)
			Action Rules
				if (RequestToCreateTermAndConditionsInCurrentVersion)
					if (Contract.ContractStatus.Addendum)
						invoke Addendum.Delete
					else
						invoke DeleteTerm
				else
					if (Contract.ContractStatus.Addendum
					and	!CreationApproved)
						invoke Addendum.Delete	
					else
						invoke Create ContractTermAndConditionUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.OriginalTitle				= Title
							invoked.RevisedTitle				= ""
							invoked.OriginalHeaderText			= HeaderText
							invoked.RevisedHeaderText			= ""
							invoked.OriginalDescription			= Description
							invoked.RevisedDescription			= ""
							invoked.RequestingActor				= actor
							invoked.RequestDateTime				= current timestamp
							invoked.RequestType					= 3		
							invoked.SpecificRequestType			= 5		
							invoked.ApprovalComment				= action comment
							invoked.ApprovalStage				= DerivedApprovalStage
							if (Contract.ContractStatus.Addendum)
								invoked.Status		= 1		
							else
								invoked.Status		= 2		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
							if (Contract.NegotiationStatus.NeedsSupplierApproval)
								invoked.SupplierRequest	= true
						for each ContractTermAndConditionAttachmentRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup						= ContractGroup
								invoked.Contract							= Contract
								invoked.ContractArticle						= ContractArticle
								invoked.ContractTermAndCondition			= ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
								invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
								invoked.DeletedAttachment 					= each.Attachment
								invoked.DeletedAttachmentRef 				= each.AttachmentReference
								invoked.RequestingActor						= actor
								invoked.RequestDateTime						= current timestamp
								invoked.RequestType							= 2		
								invoked.SpecificRequestType					= 4		
								invoked.ApprovalComment						= action comment
								invoked.ApprovalStage						= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true
						for each DescendantTermAndConditionRel
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.ContractTermAndCondition	= each.ContractTermAndCondition
								invoked.OriginalTitle				= each.Title
								invoked.RevisedTitle				= ""
								invoked.OriginalHeaderText			= each.HeaderText
								invoked.RevisedHeaderText			= ""
								invoked.OriginalDescription			= each.Description
								invoked.RevisedDescription			= ""
								invoked.RequestingActor				= actor
								invoked.RequestDateTime				= current timestamp
								invoked.RequestType					= 3		
								invoked.SpecificRequestType			= 5		
								invoked.ApprovalComment				= action comment
								invoked.ApprovalStage				= DerivedApprovalStage
								if (Contract.ContractStatus.Addendum)
									invoked.Status		= 1		
								else
									invoked.Status		= 2		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
								if (Contract.NegotiationStatus.NeedsSupplierApproval)
									invoked.SupplierRequest	= true
							for each ContractTermAndConditionAttachmentRel
								invoke Create ContractTermAndConditionUpdate
									invoked.ContractGroup						= ContractGroup
									invoked.Contract							= Contract
									invoked.ContractArticle						= ContractArticle
									invoked.ContractTermAndCondition			= each.ContractTermAndCondition
									invoked.ContractTermAndConditionAttachment	= each.ContractTermAndConditionAttachment
									invoked.AttachmentToDelete					= each.ContractTermAndConditionAttachment
									invoked.DeletedAttachment 					= each.Attachment
									invoked.DeletedAttachmentRef 				= each.AttachmentReference
									invoked.RequestingActor						= actor
									invoked.RequestDateTime						= current timestamp
									invoked.RequestType							= 2		
									invoked.SpecificRequestType					= 4		
									invoked.ApprovalComment						= action comment
									invoked.ApprovalStage						= DerivedApprovalStage
									if (Contract.ContractStatus.Addendum)
										invoked.Status		= 1		
									else
										invoked.Status		= 2		
									invoked.TermNegotiationVersion				= Contract.TermNegotiationVersion + 1
									if (Contract.NegotiationStatus.NeedsSupplierApproval)
										invoked.SupplierRequest	= true

		CreateUnchangedApprovedUpdateRecord is an Instance Action
			restricted
			Action Rules
				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.OriginalTitle				= Title
					invoked.RevisedTitle				= Title
					invoked.OriginalHeaderText			= HeaderText
					invoked.RevisedHeaderText			= HeaderText
					invoked.OriginalDescription			= Description
					invoked.RevisedDescription			= Description
					invoked.RequestingActor				= actor
					invoked.RequestDateTime				= current timestamp
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 2		
					invoked.ApprovalStage				= DerivedApprovalStage
					invoked.Status						= 3		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
					invoked.NoChangesMade				= true
					invoked.ActionTaken					= 2		

		BuyerRestoreTerm is an Instance Action   
			valid when (BuyerRestoreTermValid)
			Action Rules
				invoke Delete PendingTermAndConditionDeleteRel
				for each ContractTermAndConditionDeleteAttachmentRel
					invoke Delete each

		SupplierRestoreTerm is an Instance Action
			valid when (SupplierRestoreTermValid)
			Action Rules
				invoke Delete PendingTermAndConditionDeleteRel
				for each ContractTermAndConditionDeleteAttachmentRel
					invoke Delete each

		WithdrawProposedUpdates is an Instance Action
			valid when (WithdrawProposedUpdatesValid)
			Action Rules
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				for each DraftTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		

		BuyerUpdateDescription is an Instance Action
			valid when (BuyerEditTermActionValid)
			default label is "UpdateTermAndCondition"

			Parameters
				PrmRequestedTitle				is a Description
				PrmRequestedHeaderText			is Alpha 100
				PrmRequestedDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.DerivedPrimaryName
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId
				  		TAndCAttachmentReference    value is ContractTermAndConditionAttachment.AttachmentReference
				PrmComment is Text

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle
				PrmRequestedDescription
					required
						"NewDescriptionIsRequired"
					initial value is DerivedCurrentRequestedDescription

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText
				and PrmRequestedDescription = DerivedCurrentRequestedDescription)
					LocalChangesMade = false
				else
					LocalChangesMade = true

				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractTermAndConditionUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.ContractTermAndCondition	= ContractTermAndCondition
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.OriginalDescription			= DerivedCurrentRequestedDescription
						invoked.RevisedDescription			= PrmRequestedDescription
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Description = PrmRequestedDescription
						Modified = true

		ApproverUpdateDescription is an Instance Action
			valid when (ApproverEditTermActionValid)
			default label is "UpdateTermAndCondition"

			Parameters
				PrmRequestedTitle				is a Description
				PrmRequestedHeaderText			is Alpha 100
				PrmRequestedDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.DerivedPrimaryName
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId
				  		TAndCAttachmentReference    value is ContractTermAndConditionAttachment.AttachmentReference
				PrmComment is Text

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle
				PrmRequestedDescription
					required
						"NewDescriptionIsRequired"
					initial value is DerivedCurrentRequestedDescription

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText
				and PrmRequestedDescription = DerivedCurrentRequestedDescription)
					LocalChangesMade = false
				else
					LocalChangesMade = true

				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractTermAndConditionUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.ContractTermAndCondition	= ContractTermAndCondition
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.OriginalDescription			= DerivedCurrentRequestedDescription
						invoked.RevisedDescription			= PrmRequestedDescription
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Description = PrmRequestedDescription
						Modified = true


		SupplierUpdateDescription is an Instance Action
			valid when (SupplierEditTermActionValid)
			default label is "UpdateTermAndCondition"

			Parameters
				PrmRequestedTitle				is a Description
				PrmRequestedHeaderText			is Alpha 100
				PrmRequestedDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.DerivedPrimaryName
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId
				  		TAndCAttachmentReference    value is ContractTermAndConditionAttachment.AttachmentReference
				PrmComment is Text

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle
				PrmRequestedDescription
					required
						"NewDescriptionIsRequired"
					initial value is DerivedCurrentRequestedDescription

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText
				and PrmRequestedDescription = DerivedCurrentRequestedDescription)
					LocalChangesMade = false
				else
					LocalChangesMade = true

				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractTermAndConditionUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.ContractTermAndCondition	= ContractTermAndCondition
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.OriginalDescription			= DerivedCurrentRequestedDescription
						invoked.RevisedDescription			= PrmRequestedDescription
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Description = PrmRequestedDescription
						Modified = true


		UpdateFromPreviousVersion is an Instance Action
			restricted

			Parameters
				PrmContractTermAndConditionUpdate	is a ContractTermAndConditionUpdate
				PrmComment 							is Text

			Parameter Rules
				PrmContractTermAndConditionUpdate
					required
						"UpdateIsRequired"

			Local Fields
				LocalApprovalRequired	is Boolean

			Action Rules
				LocalApprovalRequired = UpdateRequiresApproval
				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.OriginalTitle				= DerivedCurrentVersionPreviousTitle
					invoked.RevisedTitle				= PrmContractTermAndConditionUpdate.RevisedTitle
					invoked.OriginalHeaderText			= DerivedCurrentVersionPreviousHeaderText
					invoked.RevisedHeaderText			= PrmContractTermAndConditionUpdate.RevisedHeaderText
					invoked.OriginalDescription			= DerivedCurrentVersionPreviousDescription
					invoked.RevisedDescription			= PrmContractTermAndConditionUpdate.RevisedDescription
					invoked.RequestingActor				= actor
					invoked.RequestDateTime				= current timestamp
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 2		
					invoked.ApprovalComment				= PrmComment
					invoked.ApprovalStage				= DerivedApprovalStage
					if (InApprovalProcess)
						invoked.Status				= 2		
					else
						if (LocalApprovalRequired)
							invoked.Status			= 1		
						else
							invoked.Status			= 3		
							invoked.ActionTaken		= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				if (!LocalApprovalRequired)
					Title = PrmContractTermAndConditionUpdate.RevisedTitle
					HeaderText = PrmContractTermAndConditionUpdate.RevisedHeaderText
					Description = PrmContractTermAndConditionUpdate.RevisedDescription
					Modified = true

		ApprovePendingTermAndConditionUpdates is an Instance Action
			default label is "ApprovePendingTerm_andConditionUpdates"
			restricted

			Local Fields
				LocalTermAndConditionAttachment is a ContractTermAndConditionAttachment view

			Action Rules
				if (NonAttachmentPendingContractTermAndConditionUpdateRel exists)
					Title = last NonAttachmentPendingContractTermAndConditionUpdateRel.RevisedTitle
					HeaderText = last NonAttachmentPendingContractTermAndConditionUpdateRel.RevisedHeaderText
					Description = last NonAttachmentPendingContractTermAndConditionUpdateRel.RevisedDescription
					if (last NonAttachmentPendingContractTermAndConditionUpdateRel.RequestType.Update)
						Modified = true
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken				= 2		
						invoked.Status					= 3		
					if (each.SpecificRequestType.AddAttachment)
						invoke Create ContractTermAndConditionAttachment
							assign result to LocalTermAndConditionAttachment
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.Attachment.File				= each.NewAttachment.File
							invoked.Attachment.MimeType			= each.NewAttachment.MimeType
							invoked.Attachment.Title			= each.NewAttachment.Title
							invoked.AttachmentReference			= each.NewAttachmentReference
						LocalTAndCAttachmentNumber = LocalTermAndConditionAttachment.ContractTermAndConditionAttachment
						if (each.NewAttachmentDisplayOrder > 0)
							invoke UpdateDisplayOrder AddTermAndConditionAttachmentRel
								invoked.NewDisplayOrder		= each.NewAttachmentDisplayOrder
					if (each.SpecificRequestType.DeleteAttachment)
						invoke DeleteFromRequest each.TermAndConditionAttachmentRel

						for each each.ContractTermVersionTermAttachmentDeletionRecordRel
							invoke DeleteFromTermVersion each.ContractTermVersionTermAttachmentOriginalRecordRel
				if (Contract.AddendumExists)
					invoke TermChangedUpdate ContractArticle set
						invoked.TermChanged = true
				CreationApproved = true
				Status = 3	
				Deleted = false

		DisapprovePendingTermAndConditionUpdates is an Instance Action
			default label is "DisapprovePendingTerm_andConditionUpdates"
			restricted
			Action Rules
				if (!CreationApproved)
					Deleted			= true
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken			= 4		
						invoked.Status				= 3		

		RejectPendingTermAndConditionUpdates is an Instance Action
			default label is "RejectPendingTerm_andConditionUpdates"
			restricted
			Action Rules
				if (!CreationApproved)
					Deleted			= true
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken				= 1		
						invoked.Status					= 3		

		SubmitDraftTermAndConditionUpdates is an Instance Action
			default label is "SubmitDraftTerm_andConditionUpdates"
			restricted
			Action Rules
				for each DraftTermAndConditionUpdateRel
					invoke Update each
						invoked.Status	= 2		

		ApproveDeleteRequest is a Delete Action
			restricted
			Action Rules
				if (!AnotherTermForArticleRel exists)
					invoke DeleteArticle ContractArticle

		UpdateDisplayOrderNegotiation is an Update Action    
			restricted

		AddAttachmentDuringNegotiation is an Update Action
			restricted

		AddTermDuringNegotiation is a Create Action
			default label is "AddTerm"
			valid when (BuyerAddTermActionValid)
			Field Rules
				SSTerm
					if (!Contract.CreateByCopy
					and ContractArticle.SSArticle)
						default to true

		   		TermLevel
					if (!ParentTermAndConditionExists)
						default to 1
					else
						default to ParentTermAndConditionRel.TermLevel + 1
					if (ParentTermAndConditionExists)
						constraint (ParentTermAndConditionRel.TermLevel < 4)
							"CannotHaveMoreThanFourLevelsOfTermsAndConditions"

	 			DisplayOrder
	 				if (!ParentTermAndConditionExists)
	 					autosequence using ContractArticle.LastTermAndConditionDisplayOrder
	 				else
	 					if (!FromRepository)
		 					autosequence using ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder

				HeaderText
					if (!HeaderText entered)
						default to Title

			Action Rules
				LocalDisplayOrder = NewDisplayOrder
				if (Contract.ContractStatus != 8)
					ContractStatus	 			= 2
				else
				if (Contract.ContractStatus = 8)
					ContractStatus              = 5

			Exit Rules
				if (LocalDisplayOrder entered)
					invoke UpdateDisplayOrderNegotiation
						invoked.NewDisplayOrder = LocalDisplayOrder

				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.RevisedTitle				= Title
					invoked.RevisedHeaderText			= HeaderText
					invoked.RevisedDescription			= Description
					invoked.RequestingActor				= actor
					invoked.RequestType					= 1		
					invoked.SpecificRequestType			= 1		
					invoked.RequestDateTime				= current timestamp
					invoked.Status						= 2		
					invoked.AdhocTermAndCondition		= AdhocTermAndCondition
					invoked.AddedDuringNegotiation		= true
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				Status = 1	
				CreationApproved = false

				include MaintainDisplayString12

		SupplierAddTermDuringNegotiation is a Create Action
			default label is "AddTerm"
			valid when (SupplierAddTermActionValid)
			Field Rules
				SSTerm
					if (!Contract.CreateByCopy
					and ContractArticle.SSArticle)
						default to true

		   		TermLevel
					if (!ParentTermAndConditionExists)
						default to 1
					else
						default to ParentTermAndConditionRel.TermLevel + 1
					if (ParentTermAndConditionExists)
						constraint (ParentTermAndConditionRel.TermLevel < 4)
							"CannotHaveMoreThanFourLevelsOfTermsAndConditions"

	 			DisplayOrder
	 				if (!ParentTermAndConditionExists)
	 					autosequence using ContractArticle.LastTermAndConditionDisplayOrder
	 				else
	 					if (!FromRepository)
		 					autosequence using ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder

				HeaderText
					if (!HeaderText entered)
						default to Title

			Action Rules
				LocalDisplayOrder = NewDisplayOrder
				ContractStatus    = 2

			Exit Rules
				if (LocalDisplayOrder entered)
					invoke UpdateDisplayOrderNegotiation
						invoked.NewDisplayOrder = LocalDisplayOrder

				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.RevisedTitle				= Title
					invoked.RevisedHeaderText			= HeaderText
					invoked.RevisedDescription			= Description
					invoked.RequestingActor				= actor
					invoked.RequestType					= 1		
					invoked.SpecificRequestType			= 1		
					invoked.RequestDateTime				= current timestamp
					invoked.Status						= 2		
					invoked.AdhocTermAndCondition		= AdhocTermAndCondition
					invoked.AddedDuringNegotiation		= true
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				Status = 1	
				CreationApproved = false

				include MaintainDisplayString12

		DeleteTerm is a Delete Action
			restricted
			Action Rules
				if (!AnotherTermForArticleRel exists)
					invoke DeleteArticle ContractArticle

		BuyerAddAttachment is an Instance Action
			default label is "AddAttachment"
			valid when (BuyerEditTermActionValid)

			Local Fields
				LocalApprovalRequired	is Boolean

			Parameters
				PrmNewAttachment				is a Attachment
				PrmNewAttachmentReference 		is a Description
				PrmNewAttachmentDisplayOrder	is a DisplayOrder

			Parameter Rules
				PrmNewAttachment
					required
						"AttachmentIsRequired"
				PrmNewAttachmentDisplayOrder
					constraint (PrmNewAttachmentDisplayOrder <= (NumberOfExistingAttachments + 1 - NumberOfAttachmentsToBeDeleted + NumberOfAttachmentsToBeAdded))
						"InvalidAttachmentDisplayOrder"

			Action Rules
				LocalApprovalRequired = UpdateRequiresApproval
				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.NewAttachment				= PrmNewAttachment
					invoked.NewAttachmentReference		= PrmNewAttachmentReference
					invoked.NewAttachmentDisplayOrder	= PrmNewAttachmentDisplayOrder
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 3		
					invoked.RequestDateTime				= current timestamp
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Addendum)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Draft)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					if (InApprovalProcess)
						invoked.Status				= 2		
					else
						if (LocalApprovalRequired)
							invoked.Status			= 1		
						else
							invoked.Status			= 3		
							invoked.ActionTaken		= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

		ApproverAddAttachment is an Instance Action
			default label is "AddAttachment"
			valid when (ApproverEditTermActionValid)

			Local Fields
				LocalApprovalRequired	is Boolean

			Parameters
				PrmNewAttachment				is a Attachment
				PrmNewAttachmentReference 		is a Description
				PrmNewAttachmentDisplayOrder	is a DisplayOrder

			Parameter Rules
				PrmNewAttachment
					required
						"AttachmentIsRequired"
				PrmNewAttachmentDisplayOrder
					constraint (PrmNewAttachmentDisplayOrder <= (NumberOfExistingAttachments + 1 - NumberOfAttachmentsToBeDeleted + NumberOfAttachmentsToBeAdded))
						"InvalidAttachmentDisplayOrder"

			Action Rules
				LocalApprovalRequired = UpdateRequiresApproval
				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.NewAttachment				= PrmNewAttachment
					invoked.NewAttachmentReference		= PrmNewAttachmentReference
					invoked.NewAttachmentDisplayOrder	= PrmNewAttachmentDisplayOrder
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 3		
					invoked.RequestDateTime				= current timestamp
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Addendum)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Draft)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					if (InApprovalProcess)
						invoked.Status				= 2		
					else
						if (LocalApprovalRequired)
							invoked.Status			= 1		
						else
							invoked.Status			= 3		
							invoked.ActionTaken		= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

		SupplierAddAttachment is an Instance Action
			default label is "AddAttachment"
			valid when (SupplierEditTermActionValid)

			Local Fields
				LocalApprovalRequired	is Boolean

			Parameters
				PrmNewAttachment				is a Attachment
				PrmNewAttachmentReference 		is a Description
				PrmNewAttachmentDisplayOrder	is a DisplayOrder

			Parameter Rules
				PrmNewAttachment
					required
						"AttachmentIsRequired"
				PrmNewAttachmentDisplayOrder
					constraint (PrmNewAttachmentDisplayOrder <= (NumberOfExistingAttachments + 1 - NumberOfAttachmentsToBeDeleted + NumberOfAttachmentsToBeAdded))
						"InvalidAttachmentDisplayOrder"

			Action Rules
				LocalApprovalRequired = UpdateRequiresApproval
				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.NewAttachment				= PrmNewAttachment
					invoked.NewAttachmentReference		= PrmNewAttachmentReference
					invoked.NewAttachmentDisplayOrder	= PrmNewAttachmentDisplayOrder
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 3		
					invoked.RequestDateTime				= current timestamp
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Addendum)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released
						or	Contract.ContractStatus.Draft)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					if (InApprovalProcess)
						invoked.Status				= 2		
					else
						if (LocalApprovalRequired)
							invoked.Status			= 1		
						else
							invoked.Status			= 3		
							invoked.ActionTaken		= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
					if (Contract.NegotiationStatus.NeedsSupplierApproval)
						invoked.SupplierRequest	= true

		DeleteAttachment is an Instance Action
			valid when (DeleteAttachmentValid)

			Local Fields
				LocalApprovalRequired	is Boolean

			Parameters
				PrmAttachmentToDelete		is a ContractTermAndConditionAttachment
				PrmAttachmentToWithdraw		is a ContractTermAndConditionUpdate

			Parameter Rules
				PrmAttachmentToDelete
					if (PrmAttachmentToWithdraw entered)
						constraint (!PrmAttachmentToDelete entered)
							"CannotEnterBothAnExistingAttachmentAndAnAttachmentToBeAdded"
				PrmAttachmentToWithdraw
					if (PrmAttachmentToDelete entered)
						constraint (!PrmAttachmentToWithdraw entered)
							"CannotEnterBothAnExistingAttachmentAndAnAttachmentToBeAdded"

			Action Rules
				if (PrmAttachmentToDelete entered)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractTermAndConditionUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.ContractTermAndCondition	= ContractTermAndCondition
						invoked.ContractTermAndConditionAttachment = ContractTermAndConditionAttachment
						invoked.RequestingActor				= actor
						invoked.AttachmentToDelete			= PrmAttachmentToDelete.ContractTermAndConditionAttachment
						invoked.DeletedAttachment 			= PrmAttachmentToDelete.Attachment
						invoked.DeletedAttachmentRef 		= PrmAttachmentToDelete.AttachmentReference
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 4		
						invoked.RequestDateTime				= current timestamp
						if (Contract.AddendumExists)
							if (Contract.ContractStatus.Released
							or	Contract.ContractStatus.Addendum)
								invoked.ApprovalStage				= 4
							else
								invoked.ApprovalStage				= 5
						else
							if (Contract.ContractStatus.Released
							or	Contract.ContractStatus.Draft)
								invoked.ApprovalStage				= 1
							else
								invoked.ApprovalStage				= 2		
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true
				else
					invoke Update PrmAttachmentToWithdraw
						invoked.RequestingActor		= actor
						invoked.RequestDateTime		= current timestamp
						invoked.ActionTaken			= 3		
						invoked.Status				= 3		


		Restore is an Instance Action
			valid when (RestoreDeletedTermValid)
			Action Rules
				Deleted = false

			Exit Rules


				invoke Create ContractTermAndConditionUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.ContractTermAndCondition	= ContractTermAndCondition
					invoked.RevisedTitle				= Title
					invoked.RevisedHeaderText			= HeaderText
					invoked.RevisedDescription			= Description
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 2		
					invoked.RequestDateTime				= current timestamp
					if (Contract.ContractStatus.Addendum
					and	Contract.RequireTermAndConditionApproval)
						invoked.Status						= 1		
					else
					if (Contract.RequireTermAndConditionApproval
					and	AdhocTermAndCondition)
						invoked.Status						= 1		
						invoked.AdhocTermAndCondition		= true
					else
						invoked.OriginalTitle				= Title
						invoked.OriginalHeaderText			= HeaderText
						invoked.OriginalDescription			= Description
						invoked.Status						= 3		
						invoked.ActionTaken					= 2		
					if (Contract.AddendumExists)
						invoked.ApprovalStage		= 4
					else
						invoked.ApprovalStage		= 1		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				if (Contract.RequireTermAndConditionApproval
				and	Contract.ContractStatus.Addendum)
					Status = 1	
				else
				if (Contract.RequireTermAndConditionApproval
				and	AdhocTermAndCondition)
					Status = 1	
				else
					CreationApproved = true
					Status = 3	

		UpdateArticleNegotiation is an Update Action
			restricted
			Field Rules
				Modified
					if ((TermAndCondition.AllowModification
					and TermModified changed)
					or  (AdhocTermAndCondition
					and  TermModified changed))
						default to true

		UpdateDisplayStringValues is an Instance Action
			restricted
			Action Rules

				include MaintainDisplayString12

		TransitionToActive is an Instance Action
			restricted
			Action Rules
				AttachmentChanged = false
				make transition to Active

		SetToInactive is an Instance Action
			restricted
			Action Rules

				make transition to Inactive
				
		ReleaseTermAndCondition is an Instance Action
			restricted
			Action Rules
				make transition to Released

	StateCycles
		ContractLifeCycle is a StateCycle
			state field is ContractStatus

			Draft is a State
				Create is a Create Action
					valid when (DraftCreateValid)

					Field Rules
						ParentTermAndCondition
							if (LocalParentTermAndCondition entered
							and FromRepository)
								ParentTermAndCondition = first LocalParentTermAndConditionRel.ContractTermAndCondition

						SSTerm
							if (!Contract.CreateByCopy
							and ContractArticle.SSArticle)
								default to true

				   		TermLevel
							if (!FromRepository)
								if (!ParentTermAndConditionExists)
									default to 1
								else
									default to ParentTermAndConditionRel.TermLevel + 1
								if (ParentTermAndConditionExists)
									constraint (ParentTermAndConditionRel.TermLevel < 4)
										"CannotHaveMoreThanFourLevelsOfTermsAndConditions"

						HeaderText
							if (!HeaderText entered
							and !FromSourcing)
								default to Title

					Action Rules
						if (!Contract.CreateByCopy
						and !Contract.UseDisplayOrder)
				 			if (!ParentTermAndConditionExists)
				 				autosequence DisplayOrder using ContractArticle.LastTermAndConditionDisplayOrder
				 			else
				 				if (!FromRepository)
					 				autosequence DisplayOrder using ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder

						LocalDisplayOrder = NewDisplayOrder

					Exit Rules
						if (LocalDisplayOrder entered)
							invoke UpdateDisplayOrder
								invoked.NewDisplayOrder = LocalDisplayOrder


						invoke Create ContractTermAndConditionUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.RevisedTitle				= Title
							invoked.RevisedHeaderText			= HeaderText
							invoked.RevisedDescription			= Description
							invoked.RequestingActor				= actor
							invoked.RequestType					= 1		
							invoked.SpecificRequestType			= 1		
							invoked.RequestDateTime				= current timestamp
							if (Contract.RequireTermAndConditionApproval
							and	AdhocTermAndCondition)
								invoked.Status						= 1		
								invoked.AdhocTermAndCondition		= true
							else
								invoked.OriginalTitle				= Title
								invoked.OriginalHeaderText			= HeaderText
								invoked.OriginalDescription			= Description
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
							if (Contract.AddendumExists)
								invoked.ApprovalStage		= 4
							else
								invoked.ApprovalStage		= 1		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

						if (Contract.RequireTermAndConditionApproval
						and	AdhocTermAndCondition)
							Status = 1	
						else
							CreationApproved = true
							Status = 3	

						include MaintainDisplayString12

				Update is an Update Action
					valid when (UpdateValid)
					Field Rules
						Modified
							if ((TermAndCondition.AllowModification
							and TermModified changed)
							or  (AdhocTermAndCondition
							and  TermModified changed))
								default to true

					Action Rules
						if (TermModified changed
						and TermAndCondition exists)
							constraint (TermAndCondition.AllowModification)
								"CannotChangeHeaderTextOrDescription;TheTermAndConditionDoesNotAllowModifications"

						if (NewDisplayOrder entered)
							if (!ContractArticle.TermDisplayChange)
								confirmation required
									"Warning;AllAdditionalTermAndConditionsWillBeAppendedToEndOfList;DoYouWantToContinue?"
							invoke Update Draft ContractArticle
								invoked.TermDisplayChange = true

						if (DraftTermAndConditionUpdateRel exists)
							for each DraftTermAndConditionUpdateRel
								invoke Update each
									invoked.RevisedTitle				= Title
									invoked.RevisedHeaderText			= HeaderText
									invoked.RevisedDescription			= Description
									invoked.RequestingActor				= actor
									invoked.RequestDateTime				= current timestamp
						else	
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.ContractTermAndCondition	= ContractTermAndCondition
								invoked.RevisedTitle				= Title
								invoked.RevisedHeaderText			= HeaderText
								invoked.RevisedDescription			= Description
								invoked.RequestingActor				= actor
								invoked.RequestType					= 2		
								invoked.SpecificRequestType			= 2		
								invoked.RequestDateTime				= current timestamp
								invoked.OriginalTitle				= DerivedPreviousTermTitle
								invoked.OriginalHeaderText			= DerivedPreviousTermHeaderText
								invoked.OriginalDescription			= DerivedPreviousTermDescription
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
								if (Contract.AddendumExists)
									invoked.ApprovalStage		= 4
								else
									invoked.ApprovalStage		= 1		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

					Exit Rules

						include MaintainDisplayString12

				MoveToNewParent is an Instance Action
					Parameters
						ContractGroup
						ContractArticle
						ContractTermAndCondition
						NewParentTermAndCondition  is a ContractTermAndCondition

					Parameter Rules
						ContractGroup
							default to ContractGroup

						ContractArticle
							default to ContractArticle

						ContractTermAndCondition
							default to ContractTermAndCondition

						NewParentTermAndCondition
							required
							constraint (NewParentTermAndCondition != ParentTermAndCondition)
								"NewParentTermAndConditionMustBeDifferentThanCurrent"
							constraint (NewParentTermAndCondition != ContractTermAndCondition)
								"TermAndConditionCannotBeItsOwnParent"

					Action Rules
						ParentTermAndCondition = NewParentTermAndCondition

			 		Exit Rules
			 			DisplayOrder        = ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder + 1
			 			increment ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder
	 					TermLevel           = ParentTermAndConditionRel.TermLevel + 1
	 					Status              = ParentTermAndConditionRel.Status
	 					CreationApproved    = ParentTermAndConditionRel.CreationApproved

						include MaintainDisplayString12
						for each DescendantTermAndConditionRel
							invoke Update each
					 			invoked.TermLevel               = each.ParentTermAndConditionRel.TermLevel + 1
					 			invoked.Status                  = each.ParentTermAndConditionRel.Status
					 			invoked.CreationApproved        = each.ParentTermAndConditionRel.CreationApproved
							invoke UpdateDisplayStringValues each

				DraftUpdateWithoutEdits is an Instance Action
					restricted
					Parameters
						ChangeSSTermTrue     is Boolean
						ChangeSSTermFalse    is Boolean
					Action Rules
						if (ChangeSSTermTrue)
							SSTerm = true
						if (ChangeSSTermFalse)
							SSTerm = false

				UpdateArticleDraft is an Update Action
					restricted
					Field Rules
						Modified
							if ((TermAndCondition.AllowModification
							and TermModified changed)
							or  (AdhocTermAndCondition
							and  TermModified changed))
								default to true

					Action Rules
						if (NewDisplayOrder entered)
							invoke UpdateArticleForDraft Draft ContractArticle
								invoked.TermDisplayChange = true

				UpdateDisplayOrder is an Update Action
					valid when (Contract.ContractStatus.Draft)
					restricted

				Delete is a Delete Action
					valid when (Contract.ContractStatus.Draft)
					Action Rules
						if (!AnotherTermForArticleRel exists)
							invoke Delete ContractArticle

				Release is an Instance Action
					restricted
					Action Rules
						make transition to Released

			Released is a State
				TransitionToDraft is an Instance Action
					restricted
					Action Rules
						make transition to Draft
				TransitionToActive is an Instance Action
					restricted
					Action Rules
						AttachmentChanged = false
						make transition to Active
				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						make transition to Addendum
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						make transition to Inactive

			Active is a State
				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						make transition to Addendum
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						make transition to Inactive

			Inactive is a State
				TransitionToDraft is an Instance Action
					restricted
					Action Rules
						make transition to Draft

				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						make transition to Addendum

				TransitionToActive is an Instance Action
					restricted
					Action Rules
						make transition to Active

			Addendum is a State
				Create is a Create Action
					valid when (AddendumCreateValid)

					Entrance Rules
						invoke Update Addendum ContractArticle set
							invoked.TermChanged = true
					Field Rules
						ParentTermAndCondition
							if (LocalParentTermAndCondition entered
							and FromRepository)
								ParentTermAndCondition = first LocalParentTermAndConditionRel.ContractTermAndCondition

						HeaderText
							if (!HeaderText entered
							and !FromSourcing)
								default to Title

						SSTerm
							if (!Contract.CreateByCopy
							and ContractArticle.SSArticle)
								default to true

				   		DisplayOrder
			 				if (!Contract.CreateByCopy
							and !Contract.UseDisplayOrder)
				 				if (!ParentTermAndConditionExists)
				 					autosequence using ContractArticle.LastTermAndConditionDisplayOrder
				 				else
				 					autosequence using ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder

				   		TermLevel
							if (!FromRepository)
								if (!ParentTermAndConditionExists)
									default to 1
								else
									default to ParentTermAndConditionRel.TermLevel + 1
								if (ParentTermAndConditionExists)
									constraint (ParentTermAndConditionRel.TermLevel < 4)
										"CannotHaveMoreThanFourLevelsOfTermsAndConditions"

					Action Rules
						LocalDisplayOrder = NewDisplayOrder

					Exit Rules
						if (LocalDisplayOrder entered)
							invoke UpdateDisplay
								invoked.NewDisplayOrder = LocalDisplayOrder

						invoke Create ContractTermAndConditionUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.ContractTermAndCondition	= ContractTermAndCondition
							invoked.RevisedTitle				= Title
							invoked.RevisedHeaderText			= HeaderText
							invoked.RevisedDescription			= Description
							invoked.RequestingActor				= actor
							invoked.RequestType					= 1		
							invoked.SpecificRequestType			= 1		
							invoked.RequestDateTime				= current timestamp
							if (Contract.ContractStatus.Addendum
							and	Contract.RequireTermAndConditionApproval)
								invoked.Status						= 1		
							else
							if (Contract.RequireTermAndConditionApproval
							and	AdhocTermAndCondition)
								invoked.Status						= 1		
								invoked.AdhocTermAndCondition		= true
							else
								invoked.OriginalTitle				= Title
								invoked.OriginalHeaderText			= HeaderText
								invoked.OriginalDescription			= Description
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
							if (Contract.AddendumExists)
								invoked.ApprovalStage		= 4
							else
								invoked.ApprovalStage		= 1		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

						if (Contract.RequireTermAndConditionApproval
						and	Contract.ContractStatus.Addendum)
							Status = 1	
						else
						if (Contract.RequireTermAndConditionApproval
						and	AdhocTermAndCondition)
							Status = 1	
						else
							CreationApproved = true
							Status = 3	

						include MaintainDisplayString12

				AddendumUpdateWithoutEdits is an Instance Action
					restricted
					Parameters
						ChangeSSTermTrue     is Boolean
						ChangeSSTermFalse    is Boolean
					Action Rules
						if (ChangeSSTermTrue)
							SSTerm = true
						if (ChangeSSTermFalse)
							SSTerm = false

				Update is an Update Action
					valid when (UpdateAddendumValid)
					Entrance Rules
						invoke Update Addendum ContractArticle set
							invoked.TermChanged = true
					Field Rules
						Modified
							if ((TermAndCondition.AllowModification
							and TermModified changed)
							or  (AdhocTermAndCondition
							and  TermModified changed))
								default to true
					Action Rules
						if (TermModified changed
						and TermAndCondition exists)
							constraint (TermAndCondition.AllowModification)
								"CannotChangeHeaderText,Description,OrDisplayOrder;TheTermAndConditionDoesNotAllowModifications"

						if (NewDisplayOrder entered)
							if (!ContractArticle.TermDisplayChange)
								confirmation required
									"Warning;AllAdditionalTermAndConditionsWillBeAppendedToEndOfList;DoYouWantToContinue?"

						if (DraftTermAndConditionUpdateRel exists)
							for each DraftTermAndConditionUpdateRel
								invoke Update each
									invoked.RevisedTitle				= Title
									invoked.RevisedHeaderText			= HeaderText
									invoked.RevisedDescription			= Description
									invoked.RequestingActor				= actor
									invoked.RequestDateTime				= current timestamp
						else	
							invoke Create ContractTermAndConditionUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.ContractTermAndCondition	= ContractTermAndCondition
								invoked.RevisedTitle				= Title
								invoked.RevisedHeaderText			= HeaderText
								invoked.RevisedDescription			= Description
								invoked.RequestingActor				= actor
								invoked.RequestType					= 2	
								invoked.SpecificRequestType			= 2	
								invoked.RequestDateTime				= current timestamp
								invoked.OriginalTitle				= DerivedPreviousTermTitle
								invoked.OriginalHeaderText			= DerivedPreviousTermHeaderText
								invoked.OriginalDescription			= DerivedPreviousTermDescription
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
								if (Contract.AddendumExists)
									invoked.ApprovalStage		= 4
								else
									invoked.ApprovalStage		= 1		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

					Exit Rules

						include MaintainDisplayString12

				UpdateArticleAddendum is an Update Action
					restricted
					Field Rules
						Modified
							if ((TermAndCondition.AllowModification
							and TermModified changed)
							or  (AdhocTermAndCondition
							and  TermModified changed))
								default to true

					Action Rules
						if (NewDisplayOrder entered)
							invoke UpdateArticleForAddendum Addendum ContractArticle
								invoked.TermDisplayChange = true

					Exit Rules

						include MaintainDisplayString12

				MoveToNewParent is an Instance Action
					Parameters
						ContractGroup
						ContractArticle
						ContractTermAndCondition
						NewParentTermAndCondition  is a ContractTermAndCondition
							default label is "NewParentTerm_andCondition"

					Parameter Rules
						ContractGroup
							default to ContractGroup

						ContractArticle
							default to ContractArticle

						ContractTermAndCondition
							default to ContractTermAndCondition

						NewParentTermAndCondition
							required
							constraint (NewParentTermAndCondition != ParentTermAndCondition)
								"NewParentTermAndConditionMustBeDifferentThanCurrent"
							constraint (NewParentTermAndCondition != ContractTermAndCondition)
								"TermAndConditionCannotBeItsOwnParent"

					Action Rules
						ParentTermAndCondition = NewParentTermAndCondition

					Exit Rules
						DisplayOrder     = ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder + 1
						increment ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder
						TermLevel        = ParentTermAndConditionRel.TermLevel + 1
						Status           = ParentTermAndConditionRel.Status
						CreationApproved = ParentTermAndConditionRel.CreationApproved

						include MaintainDisplayString12

				UpdateDisplay is an Update Action
					valid when (AddendumState)
					restricted

					Exit Rules

						include MaintainDisplayString12

				Delete is a Delete Action
					valid when (OKToDelete)

				Release is an Instance Action
					restricted
					Action Rules
						make transition to Released

				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						make transition to Inactive
