AnalyticsCalendarPeriod is a BusinessClass
	owned by analytics
	representative text is "<PeriodCaption>"
	
	prefix is ANCPd
	
	Ontology
		symbolic key is AnalyticsCalendarPeriod
			
	Patterns
        implements StaticJava
		implements ChildHierarchy
			children are ChildrenRel		
			child set is HierarchyDetailRel         
				child is SubordinatePeriod 
				aggregation percent is Weight
			top node when (IsTopNode)
		implements BODId

	Context Fields
		AnalyticsCalendar
		AnalyticsCalendarYear
		ParentCalendarYearMatch	
		ReportingBasis
		SkipShadow

	
	Persistent Fields
		DisplayPeriod		is Alpha 30
			translatable
		PeriodType			is Numeric 1
			States
				Year		     value is 1
				Quarter		     value is 2
				Month		     value is 3
				Week		     value is 4
				Day				 value is 8
				EndDate		     value is 5
				BeginningBalance value is 6
				TopNode          value is 7
				 
		Year				is Year    
		Date				is Date    
		Quarter				is Numeric 1
			States
				Quarter1	value is 1
				Quarter2	value is 2
				Quarter3	value is 3
				Quarter4	value is 4
		Month				is Numeric 2
			States
				Period1		value is 1
				Period2		value is 2
				Period3     value is 3
				Period4		value is 4
				Period5		value is 5
				Period6		value is 6
				Period7		value is 7
				Period8		value is 8
				Period9		value is 9
				Period10	value is 10
				Period11	value is 11
				Period12	value is 12
				Period13	value is 13
		Week				is Numeric 2
			States
				Week1		value is 1
				Week2		value is 2
				Week3		value is 3
				Week4		value is 4
				Week5		value is 5
				Week6		value is 6	
				Week7		value is 7
				Week8		value is 8
				Week9		value is 9
				Week10		value is 10
				Week11		value is 11
				Week12		value is 12
				Week13		value is 13
				Week14		value is 14
				Week15		value is 15
				Week16		value is 16
				Week17		value is 17
				Week18		value is 18
				Week19		value is 19
				Week20		value is 20
				Week21		value is 21
				Week22		value is 22
				Week23		value is 23
				Week24		value is 24
				Week25		value is 25
				Week26		value is 26
				Week27		value is 27
				Week28		value is 28
				Week29		value is 29
				Week30		value is 30
				Week31		value is 31
				Week32		value is 32
				Week33		value is 33
				Week34		value is 34
				Week35		value is 35
				Week36		value is 36
				Week37		value is 37
				Week38		value is 38
				Week39		value is 39
				Week40		value is 40
				Week41		value is 41
				Week42		value is 42
				Week43		value is 43
				Week44		value is 44
				Week45		value is 45
				Week46		value is 46
				Week47		value is 47
				Week48		value is 48
				Week49		value is 49
				Week50		value is 50
				Week51		value is 51
				Week52		value is 52
				Week53		value is 53
		Day					 is Numeric 3 
		TopNode				 is AlphaUpper 20 
		IsTopNode			 is Boolean	  
		StartDateJulian		 is AlphaUpper 7
		EndDateJulian		 is AlphaUpper 7
				
	Transient Fields
		CreatePeriodType	is Numeric 1
			States
				Year		 value is 1
				EndDate		 value is 5			
		NewPeriod				is AlphaUpper 20
		CreateEndDate			is Date			
		ParentPeriod			is AlphaUpper 20


		TransientStartDateJulian is AlphaUpper 7
			derive value from DerivedDisplayStartDateJulian
		TransientEndDateJulian   is AlphaUpper 7
			derive value from DerivedDisplayEndDateJulian
						
	Local Fields
		LocalTopNode			is AlphaUpper 20
		LocalPeriod		        is a AnalyticsCalendarPeriod 
		LocalYear				is Numeric 4
		LocalQuarter			is Numeric 1
		LocalMonth				is Alpha 2
		LocalMonthNumeric		is Numeric 2
		LocalWeek				is Alpha 2
		LocalWeekNumeric		is Numeric 2
		LocalDay				is Alpha 3
		LocalDayNumeric			is Numeric 3		
		LocalDate				is Date
		I1						is Numeric 3
		I2						is Numeric 3
		TempPeriod				is Numeric 3
		LocalBeginningBalanceKey is a AnalyticsCalendarPeriod
		LocalAlphaYear			is Alpha 4
		LocalAlphaDay			is Alpha 3


		TopNodeFound			is Boolean
		DatePeriod				is a AnalyticsCalendarPeriod
		LocalJulian				is Numeric 7
		LocalBeginPeriod		is a AnalyticsCalendarPeriod
		LocalEndPeriod			is a AnalyticsCalendarPeriod
		LocalYTDPeriod			is a AnalyticsCalendarPeriod

		LocalParent				is a AnalyticsCalendarPeriod
		LocalChild				is a AnalyticsCalendarPeriod
		LocalPeriodType			is Alpha 1
		LocalActionCode					is an ActionCode
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		SavePeriod				is a AnalyticsCalendarPeriod
		LookupYear				is Year
		LocalDateAlpha			is Alpha 8
		LocalPeriodTypeNumeric	is Numeric 1
		TempPeriodAlpha			is Alpha 3
		LocalYearAlpha			is Alpha 4
		LookupPeriod			is a AnalyticsCalendarPeriod
		SummaryPeriodArray
		
	Derived Fields
		PriorYearAlpha is a DerivedField
			type is Alpha 4
			restricted
			return (Year - 1)
	
		SamePeriodLastYear is a DerivedField
			type is Alpha 30
			restricted
			if (PeriodType.Year or PeriodType.Month)
				I1 = 1
				while (I1 < 31)
					if (AnalyticsCalendarPeriod[I1] = "_")
						end while
					else
						I1 += 1
				I1 += 5
				return FinanceEnterpriseGroup + "/" + AnalyticsCalendarPeriod[1:2] + PriorYearAlpha + AnalyticsCalendarPeriod[I1:30]				

		YTDCrossReference is a DerivedField
			type is Alpha 30
			if ((!PeriodType.TopNode and !AnalyticsCalendarPeriod like "*_YTD")
			and (PeriodType.Year or PeriodType.Month))
				return  FinanceEnterpriseGroup + "/" + AnalyticsCalendarPeriod + "_YTD"
				
		YTDCrossRefSPLY is a DerivedField
			type is Alpha 30
			if ((!PeriodType.TopNode and !SamePeriodLastYear like "*_YTD")
			and (PeriodType.Year or PeriodType.Month))
				return  SamePeriodLastYear + "_YTD"
					
		PeriodCaption is a DerivedField
			type is Alpha 30
			if (PeriodType.EndDate)
				return Date 
			else
			if (PeriodType.Month)
				return DerivedStartDate month name
			else				
			if (PeriodType.TopNode)
				if (AnalyticsCalendarPeriod like "*_YTD")
					return "All Years YTD"				
				else
					return "All Years"
			else				
				I1 = 1
				while (I1 < 31)
					if (AnalyticsCalendarPeriod[I1] = "_")
						end while
					else
						I1 += 1
				I1 += 1		
				return AnalyticsCalendarPeriod[I1:30]  	
					
		YearLink is a DerivedField
			type is Alpha 30		
			if (PeriodType.Month)
				I1 = 1
				while (I1 < 31)
					if (AnalyticsCalendarPeriod[I1] = "_")
						end while
					else
						I1 += 1
				I1 += 1
				return FinanceEnterpriseGroup + "/" + AnalyticsCalendarPeriod[I1:6]			

		MonthLink is a DerivedField
			type is Alpha 30		
			if (PeriodType.Month)
				I1 = 1
				while (I1 < 31)
					if (AnalyticsCalendarPeriod[I1] = "_")
						end while
					else
						I1 += 1
				I1 += 5
				return AnalyticsCalendarPeriod[I1:30]
	
		DerivedWeight is a DerivedField
			type is Percent 6.3
			restricted
			if (AnalyticsCalendarPeriod like "*_YTD"
			or  PeriodType.BeginningBalance)
				return first SubordinateInYTDTopNodeRel.Weight
			else
				return first SubordinateInTopNodeRel.Weight
							
		EndOfMonth		is a DerivedField
			type is Boolean
			restricted
			if (Date day = Date days in month)
				return true
				








				
		DerivedTopNode	is a DerivedField
			type is AlphaUpper 20
			restricted
			if (AnalyticsCalendar.TopNode entered)
				return AnalyticsCalendar.TopNode
			else
				return "NO_TOP_NODE"				

		DerivedYTDTopNode	is a DerivedField
			type is AlphaUpper 20
			restricted
			if (AnalyticsCalendar.TopNode entered)
				return AnalyticsCalendar.YTDTopNode
			else
				return "NO_YTD_TOP_NODE"	








											
		SummaryNodeString	    is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"
			DisplayPeriod

		PrefixString	    	is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"
						
		DefaultDisplayPeriod is a DerivedField
			type is Alpha 30
			restricted
			if (PeriodType.EndDate)
				return CreateEndDate
			I1 = 1
			while (I1 < 31)
				if (AnalyticsCalendarPeriod[I1] = "_")
					end while
				else
					I1 += 1
			I1 += 1		
			DefaultDisplayPeriod = AnalyticsCalendarPeriod[I1:30]  
			
		DateWithinYearRange is a DerivedField
			type is Boolean
			restricted
			if (Year >= (AnalyticsCalendarYear - 1)
			and Year <= (AnalyticsCalendarYear + 1))
				return true












			






							
		YearMatchesParent is a DerivedField
			type is Boolean
			restricted
			if (ParentCalendarYearMatch.Equal)
				if (Year = AnalyticsCalendarYear)
					return true
			else			
				return DateWithinYearRange
							
		YearMatch is a DerivedField
			type is Numeric 1
			restricted
			if (PeriodType.EndDate)
				return 2
			else
				return 1
									
		DerivedBeginningBalanceString is a StringField
			type is AlphaUpper 20
			restricted
			CreateEndDate year
			"000"

		DerivedBeginningBalanceForYear is a StringField
			type is AlphaUpper 20
			restricted
			Year
			"000"
			
		DerivedBeginningBalanceDisplayPeriod is a StringField
			type is Alpha 30
			restricted
			CreateEndDate year
			" Beginning Balance"
										
		NewEndDateString is a DerivedField
			type is AlphaUpper 20
			restricted
			LocalAlphaYear = LocalDate year
			LocalAlphaDay  = LocalDate year day
			NewEndDateString = LocalAlphaYear
			if (LocalAlphaDay size = 1)
				NewEndDateString += "00"
			else
			if (LocalAlphaDay size = 2)
				NewEndDateString += "0"
			NewEndDateString += LocalAlphaDay 
									
		NewYearString is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"			
			Year
									
		NewQuarterString is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"					
			Year
			"Q"
			LocalQuarter
		
		NewMonthString is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"					
			Year
			"M"
			LocalMonth
			
		NewWeekString is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"		
			Year
			"W"
			LocalWeek				

		NewDayString is a StringField
			type is AlphaUpper 20
			restricted
			AnalyticsCalendar.CalendarSequence
			"_"		
			Year
			"D"
			LocalDay
				















								
		BasisLabel is a LabelField
			restricted
			"BasisDate"

		DerivedPeriodType is a DerivedField
			type is Numeric 1
			return PeriodType

		DerivedPreviousJulianDate is a DerivedField
			type is AlphaUpper 7
			restricted
			if ((!PreviousEndDateRel exists)
			or  (!last PreviousEndDateRel.AnalyticsCalendarPeriod.SubordinateInTopNodeRel exists))
				LocalPeriod = DerivedEndDateJulian
				LocalDate   = LocalPeriod.Date
					
				if (AnalyticsCalendar.CalendarType.Months
				or 	AnalyticsCalendar.CalendarType.5253Week
				or  AnalyticsCalendar.CalendarType.445
				or  AnalyticsCalendar.CalendarType.454				
				or  AnalyticsCalendar.CalendarType.Other)
					LocalDate -= 1 month
				else
				if (AnalyticsCalendar.CalendarType.Weeks)
					LocalDate -= 7
				else
				if (AnalyticsCalendar.CalendarType.4WeekPeriods)
					LocalDate -= 28
				else




				if (AnalyticsCalendar.CalendarType.Days)
					LocalDate -= 1

  				LocalDate += 1
  				if (LocalDate > LocalPeriod.Date)
  					LocalDate = LocalPeriod.Date
				return NewEndDateString
								
			LocalDate = last PreviousEndDateRel.AnalyticsCalendarPeriod.Date
			if (LocalDate year day = LocalDate days in year)
				LocalJulian = (((LocalDate year + 1) * 1000) + 1)
				return LocalJulian
			else 						
				LocalJulian = (last PreviousEndDateRel.AnalyticsCalendarPeriod)
				return (LocalJulian + 1)
				
		DerivedStartDateJulian is a DerivedField
			type is AlphaUpper 7
			restricted
			if (PeriodType.EndDate)
				return AnalyticsCalendarPeriod
			if (PeriodType.BeginningBalance
			or  PeriodType.TopNode)
				return blank
			if (PeriodShadowSubordinateDatesRel exists)
				return (first PeriodShadowSubordinateDatesRel.AnalyticsCalendarPeriod.DerivedPreviousJulianDate)
			else
				return blank
			
		DerivedEndDateJulian is a DerivedField
			type is AlphaUpper 7
			restricted
			if (PeriodType.EndDate)
				return AnalyticsCalendarPeriod	
			if (PeriodType.BeginningBalance
			or  PeriodType.TopNode)
				return blank						
			return (last PeriodShadowSubordinateDatesRel.AnalyticsCalendarPeriod)				
		
		DerivedDisplayStartDateJulian is a DerivedField
			type is AlphaUpper 7
			restricted
			if (StartDateJulian entered)
				return StartDateJulian
			else
				return DerivedStartDateJulian

		DerivedDisplayEndDateJulian is a DerivedField
			type is AlphaUpper 7
			restricted
			if (EndDateJulian entered)
				return EndDateJulian
			else
				return DerivedEndDateJulian
										
		DerivedDEPMPeriod is a DerivedField
			type is AlphaUpper 7
			restricted
			if (PeriodType.Year)
				return Year
			if (PeriodType.Quarter)
				LocalQuarter = Quarter
				return "Q" + LocalQuarter + "_" + Year
			if (PeriodType.Month
			or  PeriodType.BeginningBalance)
				if (PeriodType.BeginningBalance)
					LocalMonthNumeric = 1
				else
					LocalMonthNumeric = Month
				if (Month < 10)
					return "0" + LocalMonthNumeric + "_" + Year
				else
					return MonthAndYearString
		
		MonthAndYearString is a StringField
			type is AlphaUpper 7
			restricted
			LocalMonthNumeric
			"_"
			Year

		DerivedPreviousYTDPeriod is a DerivedField
			type is like AnalyticsCalendarPeriod
			restricted
			I1 = LocalYTDPeriod size
			while (I1 > 0)
				if (LocalYTDPeriod[I1] = LocalPeriodType)
					I2 = I1
					I1 = 0
				else
					I1 -= 1
			if (LocalPeriodType = "M")					
				LocalMonthNumeric -= 1
				if (LocalMonthNumeric < 10)
					LocalMonth = ("0" + LocalMonthNumeric)
				else
					LocalMonth = LocalMonthNumeric
				DerivedPreviousYTDPeriod = (LocalYTDPeriod[1:I2] + (LocalMonth) + "_YTD")
			else
			if (LocalPeriodType = "W")
				LocalWeekNumeric -= 1
				if (LocalWeekNumeric < 10)
					LocalWeek = ("0" + LocalWeekNumeric)
				else
					LocalWeek = LocalWeekNumeric
				DerivedPreviousYTDPeriod = (LocalYTDPeriod[1:I2] + (LocalWeek) + "_YTD")
			else
			if (LocalPeriodType = "D")
				LocalDayNumeric -= 1
				if (LocalDayNumeric < 10)
					LocalDay = ("00" + LocalDayNumeric)
				else
				if (LocalDayNumeric < 100)
					LocalDay = ("0" + LocalDayNumeric)
				else				
					LocalDay = LocalDayNumeric
				DerivedPreviousYTDPeriod = (LocalYTDPeriod[1:I2] + (LocalDay) + "_YTD")
				




































														
		DerivedPriorYear is a DerivedField
			type is Year
			restricted
			return (Year - 1)
		








		DerivedCurrentDatePeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted





			if (AnalyticsCalendar.CalendarType.Weeks)
				LocalPeriodTypeNumeric = 4
			else
			if (AnalyticsCalendar.CalendarType.Days)
				LocalPeriodTypeNumeric = 8
			else
				LocalPeriodTypeNumeric = 3
			return first CurrentPeriodRel.AnalyticsCalendarPeriod cube dimension value
			
		DerivedStartDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = StartDateJulian[5:7]
			LocalDateAlpha  = StartDateJulian[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate
					
		DerivedEndDate is a DerivedField
			type is Date 
			restricted
			LocalDayNumeric = EndDateJulian[5:7]
			LocalDateAlpha  = EndDateJulian[1:4] + "0101" 
			LocalDate 		= LocalDateAlpha
			LocalDate 	   += (LocalDayNumeric - 1)
			return LocalDate
						
		DerivedParentPeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted
			if (AnalyticsCalendarPeriod like "*_YTD")
				return first YTDParentRel.AnalyticsCalendarPeriod cube dimension value



			else			
				return first ParentRel.AnalyticsCalendarPeriod cube dimension value

		DerivedNextPeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted
			if (!PeriodType.Week
			and !PeriodType.Month
			and !PeriodType.Quarter
			and !PeriodType.Day
			and !PeriodType.Year) 
				return AnalyticsCalendarPeriod cube dimension value
	
			LocalPeriodTypeNumeric = PeriodType
			
			LocalPeriod = first NextPeriodRel.AnalyticsCalendarPeriod cube dimension value
			
			if (!LocalPeriod entered)
				return AnalyticsCalendarPeriod cube dimension value
			else
				return LocalPeriod cube dimension value

		DerivedPreviousPeriod is a DerivedField
			type is like AnalyticsCalendarPeriod
			restricted
			if (!PeriodType.Week
			and !PeriodType.Month
			and !PeriodType.Quarter
			and !PeriodType.Day
			and !PeriodType.Year) 
				return AnalyticsCalendarPeriod
	
			LocalPeriodTypeNumeric = PeriodType
			
			LocalPeriod = last PreviousPeriodRel.AnalyticsCalendarPeriod
			
			if (!LocalPeriod entered)
				return AnalyticsCalendarPeriod
			else
				return LocalPeriod
								
		DerivedPreviousPeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted
			if (!PeriodType.Week
			and !PeriodType.Month
			and !PeriodType.Quarter
			and !PeriodType.Day
			and !PeriodType.Year) 
				return AnalyticsCalendarPeriod cube dimension value
	
			LocalPeriodTypeNumeric = PeriodType
			
			LocalPeriod = last PreviousPeriodRel.AnalyticsCalendarPeriod cube dimension value
			
			if (!LocalPeriod entered)
				return AnalyticsCalendarPeriod cube dimension value
			else
				return LocalPeriod cube dimension value
			









					






			
		DerivedYTDBeginningBalancePeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted
			if (DerivedPreviousPeriod = AnalyticsCalendarPeriod)
				LocalPeriod = DerivedBeginningBalanceForYear
				return LocalPeriod cube dimension value

			else
				LocalPeriod = (((DerivedPreviousPeriod - "_LTD") - "_YTD") + "_YTD")
				return LocalPeriod cube dimension value

						
		DerivedYTDEndingBalancePeriodDimValue is a DerivedField
			type is Alpha 100 
			restricted
			LocalPeriod = (((AnalyticsCalendarPeriod - "_LTD") - "_YTD") + "_YTD")
			return LocalPeriod cube dimension value















	Conditions
		PriorYearExistsInCalendar
			restricted
			when (PriorYearInCalendarRel exists)
			
		SubordinatesExist
			restricted
			when (HierarchyDetailRel exists)
			
		NotUsedInHierarchy	
			restricted
			when (PeriodType.EndDate
			and   DateWithinYearRange
			and   !SubordinateInTopNodeRel exists)
			
		HierarchyRecordsExist
			restricted
			when (SubordinateInTopNodeRel exists)
					
		SummaryWithinTopNode
			restricted
			when (SummaryNode
			and   YearMatchesParent			
			and   TopNode = DerivedTopNode)	
		
		SummaryNode
			restricted
			when (PeriodType.Year
			or    PeriodType.Quarter
			or    PeriodType.Month
			or    PeriodType.Week
			or	  PeriodType.Day)
			
		PeriodNode
			restricted
			when (PeriodType.Quarter	
			or    PeriodType.Month
			or    PeriodType.Week
			or	  PeriodType.Day
			or    PeriodType.EndDate)			




			




















									
		BegBalAndEndDate
			restricted
			when (PeriodType.EndDate
			or	  PeriodType.BeginningBalance)
			
		EndDate
			restricted
			when (PeriodType.EndDate)
			
		NotUsedInCalendar
			restricted
			when (PeriodType.EndDate
			and  !SubordinateInTopNodeRel exists)

		SummaryNotYTDOrLTD
			restricted
			when (SummaryNode
			and ((!AnalyticsCalendarPeriod like "*_YTD")
			and  (!AnalyticsCalendarPeriod like "*_LTD")))
		


				 
	Field Rules
	
		PeriodType
			required
			cannot be changed
		
		Date
			if (PeriodType.EndDate)
				required
			cannot be changed
			
		Year
			if (!PeriodType.TopNode)
				required
			if (old Year entered)
				cannot be changed
			
		Quarter
			if (PeriodType.Quarter)
				required
			cannot be changed
			
		Month
			if (PeriodType.Month)
				required
			cannot be changed
			
		Week
			if (PeriodType.Week)
				required
			cannot be changed
			
		Day	
			if (PeriodType.Day)
				required
			cannot be changed
						
		TopNode
			if (PeriodType.TopNode)
				required
			cannot be changed
						
	Relations

			
		ChildrenRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup       = FinanceEnterpriseGroup	
				related.AnalyticsCalendarPeriod	 = HierarchyDetailRel.SubordinatePeriod		
				
		HierarchyDetailRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses ByParent
				related.FinanceEnterpriseGroup       = FinanceEnterpriseGroup
				related.AnalyticsCalendarPeriod  = AnalyticsCalendarPeriod

		ParentRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses BySubordinate
				related.FinanceEnterpriseGroup	     = FinanceEnterpriseGroup
				related.SubordinatePeriod  			 = AnalyticsCalendarPeriod
			Instance Selection
				where (related.AnalyticsCalendarPeriod.TopNode = DerivedTopNode)

		YTDParentRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses BySubordinate
				related.FinanceEnterpriseGroup	     = FinanceEnterpriseGroup
				related.SubordinatePeriod  			 = AnalyticsCalendarPeriod
			Instance Selection
				where (related.AnalyticsCalendarPeriod.TopNode = DerivedYTDTopNode)








				
		SubordinateInTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup	 	 = FinanceEnterpriseGroup
				related.TopNode			  			 = DerivedTopNode
				related.SubordinatePeriod			 = AnalyticsCalendarPeriod	
												
		SubordinateInYTDTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup	 	 = FinanceEnterpriseGroup
				related.TopNode			  			 = DerivedYTDTopNode
				related.SubordinatePeriod			 = AnalyticsCalendarPeriod			








		LocalSubordinateInYTDTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup	 	 = FinanceEnterpriseGroup
				related.TopNode			  			 = DerivedYTDTopNode
				related.SubordinatePeriod			 = LocalYTDPeriod







				
		LocalParentInYTDTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses ByParentInTopNode
				related.FinanceEnterpriseGroup	 	 = FinanceEnterpriseGroup
				related.TopNode			  			 = DerivedYTDTopNode
				related.AnalyticsCalendarPeriod  = LocalYTDPeriod						







						
		HigherSiblingsInYTDTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses ByParentInTopNode
				related.FinanceEnterpriseGroup	 	 = FinanceEnterpriseGroup
				related.TopNode			  			 = DerivedYTDTopNode
				related.AnalyticsCalendarPeriod	 = LocalParent
			Instance Selection
				where (related.SubordinatePeriod	 > LocalChild
				and    related.SubordinatePeriod 	 like "*_YTD")	










								
		SubordinateInLocalTopNodeRel
			one-to-many relation to AnalyticsPeriodHierarchy
			Field Mapping uses SubordinatesByTopNode
				related.FinanceEnterpriseGroup	  	 = FinanceEnterpriseGroup
				related.TopNode			  			 = LocalTopNode
				related.SubordinatePeriod 			 = AnalyticsCalendarPeriod	
						
		UnusedLeafRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup 		 = FinanceEnterpriseGroup 
				





















		
		PreviousEndDateRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.AnalyticsCalendarPeriod < AnalyticsCalendarPeriod)

			
		CalendarRel
			one-to-one relation to AnalyticsCalendar
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.TopNode				   = TopNode
				
		PeriodShadowRel
			one-to-many relation to AnalyticsPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.AnalyticsCalendar       = AnalyticsCalendar
				related.AnalyticsCalendarPeriod = AnalyticsCalendarPeriod

		LookupPeriodShadowRel
			one-to-many relation to AnalyticsPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.AnalyticsCalendar       = AnalyticsCalendar
				related.AnalyticsCalendarPeriod = LookupPeriod
				
		PeriodShadowSubordinateDatesRel
			one-to-many relation to AnalyticsPeriodShadow
			Field Mapping uses BySummaryPeriod
				related.FinanceEnterpriseGroup             = FinanceEnterpriseGroup
				related.AnalyticsCalendar       	   = AnalyticsCalendar
				related.SummaryAnalyticsCalendarPeriod = (AnalyticsCalendarPeriod - "_YTD" - "_LTD")
			Instance Selection
				where (related.AnalyticsCalendarPeriod.PeriodType.EndDate)
				
		EndDatesWithinRange
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.AnalyticsCalendarPeriod >= LocalBeginPeriod
				and    related.AnalyticsCalendarPeriod <= LocalEndPeriod
				and    related.PeriodType.EndDate)	








		PriorYearInCalendarRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.TopNode				   = TopNode
				related.Year				   = LookupYear








				
		
		CurrentPeriodRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses ByTopNodeAndType
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.TopNode				   = TopNode
				related.PeriodType			   = LocalPeriodTypeNumeric
			Instance Selection
				where (related.DerivedStartDate <= current corporate date
				and    related.DerivedEndDate 	>= current corporate date)

		NextPeriodRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses ByTopNodeAndType
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.TopNode				   = TopNode
				related.PeriodType			   = LocalPeriodTypeNumeric
			Instance Selection	
				where (related.AnalyticsCalendarPeriod > AnalyticsCalendarPeriod)
					
		PreviousPeriodRel
			one-to-many relation to AnalyticsCalendarPeriod
			Field Mapping uses ByTopNodeAndType
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.TopNode				   = TopNode
				related.PeriodType			   = LocalPeriodTypeNumeric
			Instance Selection	
				where (related.AnalyticsCalendarPeriod < AnalyticsCalendarPeriod)
		





	


















						
	Sets				
	
		ByTopNode
			Sort Order
				FinanceEnterpriseGroup
				TopNode
				Year
				PeriodType
				AnalyticsCalendarPeriod	
				
		LeafRecords
			Sort Order
				FinanceEnterpriseGroup
				AnalyticsCalendarPeriod
			Instance Selection
				where (PeriodType.EndDate)

		LeafRecordsGregorian
			Sort Order
				FinanceEnterpriseGroup
				Date
			Instance Selection
				where (PeriodType.EndDate)
						
		ByTopNodeAndType
			Sort Order
				FinanceEnterpriseGroup
				TopNode
				PeriodType
				AnalyticsCalendarPeriod
		
		ByTopNodeTypeAndJulianDates
			Sort Order
				FinanceEnterpriseGroup
				TopNode
				PeriodType
				EndDateJulian
				StartDateJulian
				AnalyticsCalendarPeriod
							
	Action Exit Rules
		if (FinanceEnterpriseGroup.BODTrigger)
			if (!action type.Delete)
				if (action != "UpdateBODIdFields") 
					LocalActionCode = LocalActionCode.Update
					if (action type.Create)
						LocalActionCode = LocalActionCode.Create
					else
						if (action type.Delete)
							LocalActionCode = LocalActionCode.Delete
		
					increment bod id.VariationID
		
					trigger "AnalyticsCalendarPeriodService" PA service
						resume on error
						title is "EG:<FinanceEnterpriseGroup>"
						Criteria
							FinanceEnterpriseGroup
						Variables
							LocalActionCode
								variable name is ActionCode
							include persistent fields from FinanceEnterpriseGroup
							include persistent fields from AnalyticsCalendarPeriod
							include persistent fields from AnalyticsCalendar



							LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
								variable name is CurrentTimeStamp

	Rule Blocks
		CreateShadowForDate
			if (!SkipShadow)
				DatePeriod 	 = LocalPeriod
				TopNodeFound = false
				invoke Delete LocalPeriod.PeriodShadowRel
				I1 = 0
				while (!TopNodeFound)
					LookupPeriod = first LocalPeriod.SubordinateInTopNodeRel.AnalyticsCalendarPeriod
					if (!LookupPeriod.PeriodType.TopNode)
						I1 += 1
						SummaryPeriodArray.SummaryPeriod[I1] = LookupPeriod									
						invoke Create AnalyticsPeriodShadow
							invoked.FinanceEnterpriseGroup 			   = FinanceEnterpriseGroup
							invoked.AnalyticsCalendar  			   = AnalyticsCalendar
							invoked.AnalyticsCalendarPeriod		   = DatePeriod
							invoked.SummaryAnalyticsCalendarPeriod = LookupPeriod
							invoked.SummaryPeriodType				   = LookupPeriod.PeriodType
					if (LookupPeriod.PeriodType.TopNode)
						TopNodeFound = true
					else
						LocalPeriod = LookupPeriod			

				I1 = 1
				while I1 < 6
					if (SummaryPeriodArray.SummaryPeriod[I1] != blank)
						LocalPeriod = SummaryPeriodArray.SummaryPeriod[I1]
						invoke SetJulianDates LocalPeriod
					I1 += 1

 		DeleteRules
			if (FinanceEnterpriseGroup.BODTrigger)
				LocalActionCode = LocalActionCode.Delete
	
				increment bod id.VariationID
	
				trigger "AnalyticsCalendarPeriodService" PA service
					resume on error
					title is "EG:<FinanceEnterpriseGroup>"
					Criteria
						FinanceEnterpriseGroup
					Variables
						LocalActionCode
							variable name is ActionCode
						include persistent fields from FinanceEnterpriseGroup
						include persistent fields from AnalyticsCalendarPeriod
						include persistent fields from AnalyticsCalendar



						LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
							variable name is CurrentTimeStamp
				
	Actions
		Create is an Action

			Action Rules
			
				constraint (CreatePeriodType.Year
				or          CreatePeriodType.EndDate)
					"CannotDirectlyCreateThisTypeOfPeriod"			
			
				if (CreatePeriodType.Year)
					AnalyticsCalendarPeriod = NewYearString
				else					
					if (CreatePeriodType.EndDate)
						LocalDate					= CreateEndDate
						AnalyticsCalendarPeriod = NewEndDateString
						Date 						= CreateEndDate
						Year						= CreateEndDate year				
			
				PeriodType = CreatePeriodType
			
				if (!DisplayPeriod entered)
					DisplayPeriod = DefaultDisplayPeriod

				if (!PeriodType.EndDate)
					TopNode				= DerivedTopNode
				
			Exit Rules
				if (PeriodType.Year)
					invoke Create AnalyticsPeriodHierarchy
						invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup				
						invoked.AnalyticsCalendarPeriod	= DerivedTopNode 
						invoked.SubordinatePeriod	    	= AnalyticsCalendarPeriod
						invoked.TopNode						= DerivedTopNode 

					if (!AnalyticsCalendar.CalendarType.Other)

						invoke CreateYTDYear
							fill in fields from this instance
							invoked.AnalyticsCalendarPeriod = (AnalyticsCalendarPeriod + "_YTD")
							invoked.DisplayPeriod				= (DisplayPeriod + "_YTD")




				else
					LocalBeginningBalanceKey = DerivedBeginningBalanceString
					if (!LocalBeginningBalanceKey exists)
						invoke CreateBeginningBalanceKey
							invoked.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
							invoked.AnalyticsCalendarPeriod = LocalBeginningBalanceKey
							invoked.Year 						= CreateEndDate year
							invoked.DisplayPeriod				= DerivedBeginningBalanceDisplayPeriod			

		CreateYTDYear is a Create Action
			restricted
			Action Rules

				TopNode = DerivedYTDTopNode
					
			Exit Rules
				invoke Create AnalyticsPeriodHierarchy
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup				
					invoked.AnalyticsCalendarPeriod	= DerivedYTDTopNode 
					invoked.SubordinatePeriod	    	= AnalyticsCalendarPeriod
					invoked.TopNode						= DerivedYTDTopNode













										
		CreateSubordinate is a Create Action
			restricted
			Action Rules
				AnalyticsCalendarPeriod	= NewPeriod
				
				if (!DisplayPeriod entered)
					DisplayPeriod = DefaultDisplayPeriod

				if (PeriodType.EndDate)
					Date          = CreateEndDate
				else
					if (!PeriodType.BeginningBalance)
						TopNode	  = DerivedTopNode							
				
			Exit Rules

				invoke Create AnalyticsPeriodHierarchy
					invoked.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup
					invoked.AnalyticsCalendarPeriod	= ParentPeriod
					invoked.SubordinatePeriod	        = AnalyticsCalendarPeriod
					invoked.TopNode					    = DerivedTopNode 

			
				if (PeriodType.EndDate)	
					LocalBeginningBalanceKey = DerivedBeginningBalanceString
					if (!LocalBeginningBalanceKey exists)
						invoke CreateBeginningBalanceKey
							invoked.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
							invoked.AnalyticsCalendarPeriod = LocalBeginningBalanceKey
							invoked.Year 						= CreateEndDate year
							invoked.DisplayPeriod				= DerivedBeginningBalanceDisplayPeriod
					
					LocalPeriod   = AnalyticsCalendarPeriod
					include CreateShadowForDate	
				
				if (!AnalyticsCalendar.CalendarType.Other)

					if (!PeriodType.EndDate)
						invoke CreateYTDSubordinate
							fill in fields from this instance
							invoked.AnalyticsCalendarPeriod = (AnalyticsCalendarPeriod + "_YTD")
							invoked.DisplayPeriod 				= (DisplayPeriod + "_YTD")
							invoked.ParentPeriod				= ParentPeriod
						





						
						if (PeriodType.Month
						or  PeriodType.Week)							
							SavePeriod = (AnalyticsCalendarPeriod + "_YTD")
							invoke Create AnalyticsPeriodHierarchy
								invoked.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup
								invoked.AnalyticsCalendarPeriod	= SavePeriod
								invoked.SubordinatePeriod	        = AnalyticsCalendarPeriod
								invoked.TopNode					    = DerivedYTDTopNode
	






							
							if (((Month.Period1)
							and (AnalyticsCalendar.CalendarType.Months
							or   AnalyticsCalendar.CalendarType.445
							or   AnalyticsCalendar.CalendarType.454
							or   AnalyticsCalendar.CalendarType.544
							or   AnalyticsCalendar.CalendarType.5253Week
							or   AnalyticsCalendar.CalendarType.4WeekPeriods))
							or ((AnalyticsCalendar.CalendarType.Weeks)
							and (Week.Week1))
							or ((AnalyticsCalendar.CalendarType.Days)
							and (Day = 1)))


								SavePeriod = (AnalyticsCalendarPeriod + "_YTD")
								invoke Create AnalyticsPeriodHierarchy
									invoked.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup
									invoked.AnalyticsCalendarPeriod	= SavePeriod
									invoked.SubordinatePeriod	        = DerivedBeginningBalanceForYear
									invoked.TopNode					    = DerivedYTDTopNode

								









							else 
								LocalYTDPeriod	  = AnalyticsCalendarPeriod
								if (PeriodType.Month)
									LocalMonthNumeric = Month	
									LocalPeriodType   = "M"
								else
								if (PeriodType.Week)
									LocalWeekNumeric = Week
									LocalPeriodType  = "W"
								else
									LocalDayNumeric	 = Day
									LocalPeriodType  = "D"										
								invoke Create AnalyticsPeriodHierarchy
									invoked.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup
									invoked.AnalyticsCalendarPeriod	= (AnalyticsCalendarPeriod + "_YTD")
									invoked.SubordinatePeriod	        = DerivedPreviousYTDPeriod
									invoked.TopNode					    = DerivedYTDTopNode
									invoked.TransientWeight				= 1
								














																	
		CreateYTDSubordinate is a Create Action
			restricted
			Action Rules

				TopNode 	= DerivedYTDTopNode
				LocalParent = (ParentPeriod + "_YTD")
					
			Exit Rules
				
				invoke Create AnalyticsPeriodHierarchy
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup				
					invoked.AnalyticsCalendarPeriod	= LocalParent 
					invoked.SubordinatePeriod	    	= AnalyticsCalendarPeriod
					invoked.TopNode						= DerivedYTDTopNode















											
		CreateTopNode is a Create Action
			restricted
			
			Action Rules
				PeriodType					= PeriodType.TopNode
				IsTopNode		 			= true
				TopNode					    = AnalyticsCalendarPeriod
				
		CreateBeginningBalanceKey is a Create Action
			restricted
			
			Action Rules
				PeriodType    = PeriodType.BeginningBalance
				
		Update is an Action
			Action Rules
			Exit Rules





											
		Delete is an Action
		
			Entrance Rules
				constraint (!HierarchyDetailRel exists)
					"CannotDelete,SubordinatePeriodsExist"

				if (PeriodType.EndDate)
					I1 = 0
					for each PeriodShadowRel
						I1 += 1
						SummaryPeriodArray.SummaryPeriod[I1] = each.SummaryAnalyticsCalendarPeriod
								
				invoke Delete SubordinateInTopNodeRel
				invoke Delete SubordinateInYTDTopNodeRel
				if (!PeriodType.EndDate)
				    LocalYTDPeriod = (AnalyticsCalendarPeriod + "_YTD")
				    invoke Delete LocalSubordinateInYTDTopNodeRel
				    invoke Delete LocalParentInYTDTopNodeRel
				    invoke Delete LocalYTDPeriod				






		
			Exit Rules			    
				if (PeriodType.EndDate)
					I1 = 1
					while I1 < 6
						if (SummaryPeriodArray.SummaryPeriod[I1] != blank)
							LocalPeriod = SummaryPeriodArray.SummaryPeriod[I1]
							invoke SetJulianDates LocalPeriod
						I1 += 1

				include DeleteRules
				
		RemovePeriodFromHierarchy is an Instance Action
			valid when (BegBalAndEndDate)
			Action Rules
			
				if (!SkipShadow)
					if (PeriodType.EndDate)
						I1 = 0
						for each PeriodShadowRel
							I1 += 1
							SummaryPeriodArray.SummaryPeriod[I1] = each.SummaryAnalyticsCalendarPeriod
										
				invoke Delete SubordinateInTopNodeRel
				invoke Delete PeriodShadowRel
				if (!AnalyticsCalendar.CalendarType.Other)

					invoke Delete SubordinateInYTDTopNodeRel
					if (!PeriodType.EndDate)
					    LocalYTDPeriod = (AnalyticsCalendarPeriod + "_YTD")
					    invoke Delete LocalSubordinateInYTDTopNodeRel
					    invoke Delete LocalParentInYTDTopNodeRel
					    invoke Delete LocalYTDPeriod					
					
					LocalParent = first YTDParentRel.AnalyticsCalendarPeriod
					









				if (!SkipShadow)
					if (PeriodType.EndDate)
						I1 = 1
						while I1 < 6
							if (SummaryPeriodArray.SummaryPeriod[I1] != blank)
								LocalPeriod = SummaryPeriodArray.SummaryPeriod[I1]
								invoke SetJulianDates LocalPeriod
							I1 += 1
											
		CreatePeriodWithin is an Instance Action
			valid when (SummaryNotYTDOrLTD)			
			
			Parameters
				AnalyticsCalendarYear   
					default label is "AnalyticsCalendarYear"				
				ExistingEndDateBegin is a AnalyticsCalendarPeriod 
				ExistingEndDateEnd   is a AnalyticsCalendarPeriod
				NewPeriodType		 is Numeric 1
					States
						Quarter		 value is 2
						Month		 value is 3
						Week		 value is 4
						Day			 value is 8							
						EndDate		 value is 5
				CreateAll			 is Boolean						
				NewQuarter			 is Numeric 1
					States
						Quarter1	 value is 1
						Quarter2	 value is 2
						Quarter3	 value is 3
						Quarter4	 value is 4
				NewMonth			 is Numeric 2
					States
						Period1		 value is 1
						Period2		 value is 2
						Period3		 value is 3
						Period4		 value is 4
						Period5		 value is 5
						Period6		 value is 6
						Period7		 value is 7
						Period8		 value is 8
						Period9		 value is 9
						Period10	 value is 10
						Period11	 value is 11
						Period12	 value is 12
						Period13	 value is 13
				NewWeek				 is Numeric 2
					States
						Week1		 value is 1
						Week2		 value is 2
						Week3		 value is 3
						Week4		 value is 4
						Week5		 value is 5
						Week6		 value is 6	
						Week7		 value is 7
						Week8		 value is 8
						Week9		 value is 9
						Week10		 value is 10
						Week11		 value is 11
						Week12		 value is 12
						Week13		 value is 13
						Week14		 value is 14
						Week15		 value is 15
						Week16		 value is 16
						Week17		 value is 17
						Week18		 value is 18
						Week19		 value is 19
						Week20		 value is 20
						Week21		 value is 21
						Week22		 value is 22
						Week23		 value is 23
						Week24		 value is 24
						Week25		 value is 25
						Week26		 value is 26
						Week27		 value is 27
						Week28		 value is 28
						Week29		 value is 29
						Week30		 value is 30
						Week31		 value is 31
						Week32		 value is 32
						Week33		 value is 33
						Week34		 value is 34
						Week35		 value is 35
						Week36		 value is 36
						Week37		 value is 37
						Week38		 value is 38
						Week39		 value is 39
						Week40		 value is 40
						Week41		 value is 41
						Week42		 value is 42
						Week43		 value is 43
						Week44		 value is 44
						Week45		 value is 45
						Week46		 value is 46
						Week47		 value is 47
						Week48		 value is 48
						Week49		 value is 49
						Week50		 value is 50
						Week51		 value is 51
						Week52		 value is 52
						Week53		 value is 53
				NewDay				 is Numeric 3
				NumberOfDays		 is Numeric 3
					States
						365				 value is 365
						366				 value is 366
				NewEndDate 			 is Date			
				NewDisplayPeriod	 is Alpha 30
				
			Parameter Rules
				AnalyticsCalendarYear
					initial value is Year

				ExistingEndDateBegin
					if (!NewPeriodType entered)
						required
					else
						cannot be entered
				
				ExistingEndDateEnd
					default to ExistingEndDateBegin
					if (!NewPeriodType entered)
						required
					else
						cannot be entered
					constraint (ExistingEndDateEnd >= ExistingEndDateBegin)
						"InvalidRange"
													
				NewPeriodType
					if (!ExistingEndDateBegin entered)
						required
					else
						cannot be entered
						initialize NewQuarter
						initialize NewMonth
						initialize NewWeek
						initialize NewEndDate
						initialize NewDay
						initialize CreateAll
						initialize NewDisplayPeriod						
							
					if (NewPeriodType.Quarter)
						initialize NewMonth
						initialize NewWeek
						initialize NewEndDate
						initialize NewDay
						constraint (PeriodType.Year)
							"QuarterMustBeCreatedWithinAYear"
					else
						if (NewPeriodType.Month)
							initialize NewQuarter
							initialize NewWeek
							initialize NewEndDate
							initialize NewDay
							constraint (PeriodType.Year 
							or          PeriodType.Quarter)
								"MonthMustBeCreatedWithinAYearOrQuarter"							
						else
							if (NewPeriodType.Week)
								initialize NewQuarter
								initialize NewMonth
								initialize NewEndDate
								initialize NewDay
								constraint (PeriodType.Year 
								or          PeriodType.Quarter
								or			PeriodType.Month)
									"WeekMustBeCreatedWithinAYear,QuarterOrMonth"	
							else
								if (NewPeriodType.Day)
									initialize NewQuarter
									initialize NewMonth
									initialize NewWeek
									initialize NewEndDate
									constraint (PeriodType.Year 
									or          PeriodType.Month
									or			PeriodType.Week)
										"DayMustBeCreatedWithinAYear,MonthOrWeek" 
								else																		
									if (NewPeriodType.EndDate)
										initialize NewQuarter
										initialize NewMonth
										initialize NewWeek
										initialize NewDisplayPeriod
										constraint (PeriodType.Year 
										or          PeriodType.Quarter
										or          PeriodType.Month
										or			PeriodType.Week
										or 			PeriodType.Day)
											"EndDateMustBeCreatedWithinAYear,Quarter,Month,Week,OrDay"				
				
				CreateAll
					if (CreateAll)
						initialize NewQuarter
						initialize NewMonth
						initialize NewWeek
						initialize NewDay
						initialize NewDisplayPeriod
				
				NumberOfDays
					if (NewPeriodType.Day)
						if (CreateAll)
							required
						else
							cannot be entered						
				NewQuarter
					if (NewPeriodType.Quarter)
						if (!CreateAll)
							required
						else
							cannot be entered
					else
						cannot be entered								
									
				NewMonth
					if (NewPeriodType.Month)
						if (!CreateAll)
							required
						else
							cannot be entered
					else
						cannot be entered	
													
				NewWeek
					if (NewPeriodType.Week)
						if (!CreateAll)
							required
						else
							cannot be entered
					else
						cannot be entered	

				NewDay
					if (NewPeriodType.Day)
						if (!CreateAll)
							required
							constraint (NewDay < 367)
								"InvalidValue"
						else
							cannot be entered
					else
						cannot be entered	
																			
				NewDisplayPeriod
					if (ExistingEndDateBegin entered
					or 	CreateAll)
						cannot be entered						
				
				NewEndDate
					if (NewPeriodType.EndDate)
						required
					else
						cannot be entered
						
					constraint (!CreateAll)
						"CannotSpecifyCreateAllForEndDate"		
																	
			Action Rules
			
				LocalDate		= NewEndDate
				LocalQuarter	= NewQuarter
				if (NewMonth entered)
					TempPeriod			= NewMonth
					if (NewMonth < 10)
						LocalMonth 		= "0" + TempPeriod
					else
						LocalMonth 	    = TempPeriod

				if (NewWeek entered)
					TempPeriod			= NewWeek
					if (NewWeek < 10)
						LocalWeek 		= "0" + TempPeriod
					else
						LocalWeek		= TempPeriod

				if (NewDay entered)
					TempPeriod			= NewDay
					if (NewDay < 10)
						LocalDay		= "00" + TempPeriod
					else
					if (NewDay < 100)
						LocalDay	 	= "0" + TempPeriod
					else
						LocalDay		= TempPeriod
										
				if (NewPeriodType.Quarter)
					LocalPeriod = NewQuarterString
				else
				if (NewPeriodType.Month)
					LocalPeriod = NewMonthString
				else
				if (NewPeriodType.Week)
					LocalPeriod = NewWeekString
				else
				if (NewPeriodType.Day)
					LocalPeriod = NewDayString
				else
				if (NewPeriodType.EndDate)
					LocalPeriod = NewEndDateString
				
				if (NewPeriodType entered)
					if (!CreateAll)						
						constraint (!LocalPeriod exists)
							"PeriodAlreadyExists"
				
			Exit Rules															
				if (NewPeriodType entered)
					if (!CreateAll)
						invoke CreateSubordinate
							invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PeriodType		       = NewPeriodType
							invoked.NewPeriod       	   = LocalPeriod
							invoked.DisplayPeriod		   = NewDisplayPeriod
							invoked.ParentPeriod		   = AnalyticsCalendarPeriod
							invoked.Quarter				   = NewQuarter
							invoked.Month				   = NewMonth
							invoked.Week  				   = NewWeek
							invoked.Day					   = NewDay
							invoked.CreateEndDate		   = NewEndDate
							if (NewPeriodType.EndDate)
								invoked.Year			   = NewEndDate year
							else
								invoked.Year			   = Year 
					else
						if (PeriodType.Year)
							I1 = 1
							if (NewPeriodType.Month)
								I2 = 12
							else
							if (NewPeriodType.Quarter)
								I2 = 4
							else
							if (NewPeriodType.Week)
								I2 = 52
							else
							if (NewPeriodType.Day)
								I2 = NumberOfDays
						else
						if (PeriodType.Quarter)
							if (NewPeriodType.Month)
								if (Quarter = 1)
									I1 = 1
									I2 = 3
								else
								if (Quarter = 2)
									I1 = 4
									I2 = 6
								else
								if (Quarter = 3)
									I1 = 7
									I2 = 9
								else
									I1 = 10
									I2 = 12
							else
								if (Quarter = 1)
									I1 = 1
									I2 = 13
								else
								if (Quarter = 2)
									I1 = 14
									I2 = 26
								else
								if (Quarter = 3)
									I1 = 27
									I2 = 39
								else
									I1 = 40
									I2 = 52
						while (I1 <= I2)
							invoke CreatePeriodWithin
								resume on error
								invoked.AnalyticsCalendarYear = AnalyticsCalendarYear
								invoked.NewPeriodType			  = NewPeriodType
								if (NewPeriodType.Quarter)
									invoked.NewQuarter			  = I1
								else
								if (NewPeriodType.Month)
									invoked.NewMonth		      = I1
								else
								if (NewPeriodType.Week)
									invoked.NewWeek			      = I1
								else
									invoked.NewDay				  = I1
							I1 += 1	
				else
					LocalBeginPeriod = ExistingEndDateBegin
					LocalEndPeriod   = ExistingEndDateEnd
					for each EndDatesWithinRange
						LookupPeriod = each.AnalyticsCalendarPeriod
						constraint (!LookupPeriodShadowRel exists)
							"DateAlreadyExistsInCalendar-<LookupPeriod>"
						invoke Create AnalyticsPeriodHierarchy set
							invoked.SubordinatePeriod	   = each.AnalyticsCalendarPeriod
							invoked.TopNode				   = DerivedTopNode
 						LocalPeriod   = each.AnalyticsCalendarPeriod
						include CreateShadowForDate	
				
		Move is an Instance Action
			valid when (PeriodNode)		
			Parameters
				AnalyticsCalendarYear 
					default label is "GlobalLedgerCalendarYear"
				ParentCalendarYearMatch					
				NewParent is a AnalyticsCalendarPeriod
							
			Parameter Rules
				AnalyticsCalendarYear
					initial value is Year
					
				ParentCalendarYearMatch
					initial value is YearMatch
											
				NewParent
					required
					constraint (NewParent.SummaryNode)
						"ParentMustBeASummaryNode"
					constraint (NewParent.TopNode = DerivedTopNode)
						"ParentDoesNotBelongToThisCalendar"
										
			Action Rules
				invoke Delete ParentRel
				invoke Create AnalyticsPeriodHierarchy
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.AnalyticsCalendarPeriod = NewParent
					invoked.SubordinatePeriod			= AnalyticsCalendarPeriod								
					invoked.TopNode				    	= DerivedTopNode
					
 				if (PeriodType.EndDate)
 					LocalPeriod   = AnalyticsCalendarPeriod
					include CreateShadowForDate		
				else
					invoke WalkDownHierarchy			  
		
				if (!AnalyticsCalendar.CalendarType.Other)

					LocalParent = first YTDParentRel.AnalyticsCalendarPeriod
					
					invoke Delete YTDParentRel
	
					if (!PeriodType.EndDate)
						invoke Create AnalyticsPeriodHierarchy
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.AnalyticsCalendarPeriod = (NewParent + "_YTD")
							invoked.SubordinatePeriod			= AnalyticsCalendarPeriod								
							invoked.TopNode				    	= DerivedYTDTopNode
	












				
				invoke PersistJulianRange AnalyticsCalendarPeriod
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmCalendar				  = AnalyticsCalendar
	
		WalkDownHierarchy is an Instance Action
			restricted
			Action Rules
				
				for each ChildrenRel
					if (each.PeriodType.EndDate)
						LocalPeriod   = each.AnalyticsCalendarPeriod
						include CreateShadowForDate								
					else
						invoke WalkDownHierarchy each.AnalyticsCalendarPeriod	









										





		SetJulianDates is an Instance Action
			restricted
			
			Action Rules
				StartDateJulian = DerivedStartDateJulian
				EndDateJulian   = DerivedEndDateJulian	
										
		PersistJulianRange is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCalendar				  is a AnalyticsCalendar
					default label is "Calendar"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup	
					required
				PrmCalendar
					required
			
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and   (TopNode = PrmCalendar.TopNode
				or     TopNode = PrmCalendar.YTDTopNode))
				
			Action Rules
				Instance Rules
					StartDateJulian = DerivedStartDateJulian
					EndDateJulian   = DerivedEndDateJulian
						
		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location"
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
