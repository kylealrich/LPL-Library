ReconciliationPeriodDetail  is a BusinessClass
	owned by reconciliation	
	prefix is REPD
	Ontology
		symbolic key is ReconciliationPeriodDetail 
		
    Patterns
    	implements ContextualParent

	Persistent Fields								
		GeneralLedgerCloseConfiguration
			default label is "GlobalLedgerCloseConfiguration"
		DetailPeriod				is a GeneralLedgerClosePeriod
			default label is "Period"
		ReferenceNumber				is AlphaUpper 50
		Description					is Alpha 100
		DetailType					is Numeric 2
			States
				ReconciliationDetail	value is 1
				ReconcilingItem			value is 2
				Amortization			value is 3
		PeriodAmount				is an InternationalAmount
		TransactionDate
    	StartPeriod					is a GeneralLedgerClosePeriod
    		default label is "StartPeriod"
    	EndPeriod					is a GeneralLedgerClosePeriod
    		default label is "EndPeriod"
    	PeriodTerm					is Numeric 3
		CatchUpPeriod				is a snapshot of ReconciliationDetail.CatchUpPeriod
			default label is "CatchUpPeriod"
		AccumulatedAmortizedAmount	is an InternationalAmount
		RemainingBalance			is an InternationalAmount
		ElapsedPeriods				is Numeric 3
		Recurring					is Boolean
		Attachment					is an AlternateAttachment
		PostingPeriod				is a GeneralLedgerClosePeriod
			default label is "PostingPeriod"
		RelatedPeriodReconciliation	is a PeriodEndReconciliation

		HasPeriodEndDistribution	is Boolean
		ExcludeAmortizationDetail	is Boolean
		ReportDocument
			delete ignored
		TransactionReconDetail
			delete ignored
		Company 					
		AccrualCode					is AlphaUpper size 10			 
		OriginatingTransaction		is BusinessObjectReference
		ReconciliationReason
		
	Context Fields
		ReconciliationAccountStructurePeriod
		Currency

	Local Fields
		LocalAmortizationPeriod		is a GeneralLedgerClosePeriod
		LocalPeriodCount			is Numeric 3
		LocalElapsedPeriods			is Numeric 3		
		LocalAttributeCtr   		is Numeric 2
		LocalPostingDate			is Date						
		LocalPostingPeriod			is a GeneralLedgerClosePeriod
        LocalCurrentPeriod          is a GeneralLedgerClosePeriod

	Derived Fields

		ReconciliationCodeBlock is a DerivedField
			type is Alpha 100
			return ReconciliationAccount.ReconciliationCodeBlock
			
		AccountingEntity is a DerivedField
			type is like AccountingEntity
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity 
		
		AccountingUnit is a DerivedField
			type is like AccountingUnit
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingUnit
		
		GeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
			return ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount
		
		Project is a DerivedField
			type is like Project
			return ReconciliationAccount.ReconciliationCodeBlock.Project
			
		FinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension1
		
		FinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension2
			
		FinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension3
			
		FinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension4
			
		FinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension5
			
		FinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension6
		
		FinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension7
			
		FinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension8
			
		FinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension9
			
		FinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension10

			
		RemainingPeriods is a DerivedField
			type is Numeric 3
			if (DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod)	
				return (ReconciliationDetail.PeriodTerm - ElapsedPeriods)
		
		EndAmortizationPeriodDetail is a DerivedField
			type is Boolean
			restricted
			if (EndAmortizationRel not exists)
				return BeforeEndAmortizationPeriodDetail
			else
				return AfterEndAmortizationPeriodDetail

		ZeroPeriodAmountMessage is a DerivedField
			type is MessageField
			restricted
			if (EndAmortizationPeriodDetailRel exists
			or !EndAmortizationRel exists)
				return ZeroPeriodAmountBeforeEndAmortization
			else
				return ZeroPeriodAmountAfterEndAmortization

		ZeroPeriodAmountBeforeEndAmortization is a MessageField
			restricted
			"PeriodAmountIsZero"

		ZeroPeriodAmountAfterEndAmortization is a MessageField
			restricted
			"AmortizationsForThisPrepaymentHaveEndedOnAPriorPeriod"
				
		DetailAmountLabel is a LabelField
			"ReconciliationDetails"
		
		PrepaidDetailAmountLabel is a LabelField	
			"Reconciliation/AmortizationDetails"
				
		BankStatementBalanceLabel is a LabelField
			"BankStatementBalance"
			
		DerivedDetailAmountLabel is a DerivedField
			type is Alpha 80
			if (ReconciliationAccount.ReconciliationAccountType.Cash)
				return BankStatementBalanceLabel
			else
			if (ReconciliationAccount.ReconciliationAccountType.Prepaid)	
				return PrepaidDetailAmountLabel
			else
				return DetailAmountLabel

		ContextMessageEntityType is a StringField
			type is Alpha 40
			restricted
			"InforReconciliationPeriodDetail"

		ContextMessageText is a MessageField
			restricted
			"ReconciliationPeriodDetail<ReconciliationPeriodDetail>"
		
		DerivedCatchUpPeriods is a DerivedField
			type is Numeric 9
			restricted
			if (CatchUpPeriod.GeneralLedgerCalendarPeriod = DetailPeriod.GeneralLedgerCalendarPeriod)
				return (instance count of AccumulatedCatchupAmortizationRel)
				
		DerivedAbsolutePeriodAmount is a DerivedField
			type is like InternationalAmount
			if (PeriodAmount < 0)
				DerivedAbsolutePeriodAmount = PeriodAmount * -1
			else
				DerivedAbsolutePeriodAmount = PeriodAmount

		DerivedReconciliationPeriodDetailCount is a DerivedField
			type is Numeric 6
			return instance count of ReconciliationPeriodDetailCountRel

		DerivedRoundTo is a DerivedField
			type is Decimal 5.4
			restricted
			if (Currency.NumberOfDecimals = 2)
				return .01
			else
			if (Currency.NumberOfDecimals = 0)
				return 1
			else
			if (Currency.NumberOfDecimals = 3)
				return .001
			else
			if (Currency.NumberOfDecimals = 4)
				return .0001
				
	Relations
		DetailPeriodRangeRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	= GeneralLedgerCloseConfiguration 
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
				and    related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod <= EndPeriod.GeneralLedgerCalendarPeriod)

 		NextCalendarPeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	= GeneralLedgerCloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod > LocalAmortizationPeriod.GeneralLedgerCalendarPeriod)

		PeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup													= ReconciliationManagementGroup
				related.ReconciliationAccountStructure													= ReconciliationAccountStructure
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration 						= GeneralLedgerCloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= DetailPeriod.GeneralLedgerCalendarPeriod
				related.PeriodEndReconciliation.ReconciliationAccount									= ReconciliationAccount

 		CatchupPeriodDetailRel
 			one-to-many relation to ReconciliationPeriodDetail
 			Field Mapping uses symbolic key
 				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
 				related.ReconciliationDetail			= ReconciliationDetail
 			Instance Selection
 				where (related.DetailPeriod.GeneralLedgerCalendarPeriod < CatchUpPeriod.GeneralLedgerCalendarPeriod)

  		AllRelatedPeriodDetailsRel
 			one-to-many relation to ReconciliationPeriodDetail
 			Field Mapping uses symbolic key
 				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
 				related.ReconciliationDetail			= ReconciliationDetail
 			Instance Selection
 				where (related.ReconciliationPeriodDetail != ReconciliationPeriodDetail)
 
		ReconciliationDetailCommentRel
			one-to-many relation to ReconciliationDetailComment
			Field Mapping uses symbolic key
 				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
 				related.ReconciliationDetail			= ReconciliationDetail
			Instance Selection
				where (!related.ReconciliationPeriodDetail entered)

		ReconciliationDetailCommentAuditorRel is a ReconciliationDetailComment set
			Instance Selection
				where (!HasAuditorRole
				or    (HasAuditorRole
				and	   related.ReconCommentType.All))

		ReconciliationPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByDetailByPeriod
 				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = ReconciliationAccount
				related.ReconciliationDetail			         = ReconciliationDetail
				related.GeneralLedgerCloseConfiguration	         = GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = DetailPeriod.GeneralLedgerCalendarPeriod
			Instance Selection
				where (related.ReconciliationPeriodDetail != ReconciliationPeriodDetail)

		LocalElapsedPeriodsRel		
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
 				related.ReconciliationDetail			= ReconciliationDetail
 			Instance Selection
				where (related.ElapsedPeriods = LocalElapsedPeriods)

		HideForAuditorRel
			one-to-one relation to ActorRole
			Field Mapping uses symbolic key
				related.Actor			= actor
 				related.ActorRole.Role	= ReconciliationManagementGroup.AuditorRole
 		
 		GeneralLedgerClosePeriodRel
		    one-to-many relation to GeneralLedgerClosePeriod
		    Field Mapping uses ByEndDate
		        related.FinanceEnterpriseGroup			 = ReconciliationManagementGroup
		        related.GeneralLedgerCloseConfiguration	 = GeneralLedgerCloseConfiguration
		    Instance Selection
		        where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= LocalPostingDate)

		ReconciliationPeriodDetailAmortizationRel  
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByDetailByPeriod
				related.ReconciliationManagementGroup	         = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	         = ReconciliationAccountStructure
				related.ReconciliationAccount			         = ReconciliationAccount
				related.ReconciliationDetail			         = ReconciliationDetail
				related.GeneralLedgerCloseConfiguration	         = GeneralLedgerCloseConfiguration
				related.DetailPeriod.GeneralLedgerCalendarPeriod = LocalAmortizationPeriod.GeneralLedgerCalendarPeriod

		EndAmortizationRel  
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByDetailByPeriod
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
				related.ReconciliationDetail			= ReconciliationDetail
				related.GeneralLedgerCloseConfiguration	= GeneralLedgerCloseConfiguration
			Instance Selection
				where (related.DetailType.Amortization
				and   related.AccumulatedAmortizedAmount = ReconciliationDetail.DetailAmount
				and   related.DetailPeriod.GeneralLedgerCalendarPeriod  != EndPeriod.GeneralLedgerCalendarPeriod)
				
		ReconciliationPeriodDetailWithDistributionsRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
				related.ReconciliationDetail			= ReconciliationDetail
			Instance Selection
				where(related.DetailType.Amortization
				and   related.ReconciliationPeriodDetail >= ReconciliationPeriodDetail
				and   related.HasPeriodEndDistribution)
				
		EndAmortizationPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
		    Field Mapping uses symbolic key
		        related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
		        related.ReconciliationAccountStructure	= ReconciliationAccountStructure
		        related.ReconciliationAccount			= ReconciliationAccount
		        related.ReconciliationDetail			= ReconciliationDetail
		    Instance Selection
		        where (related.DetailType.Amortization
				and    related.ReconciliationPeriodDetail >= ReconciliationPeriodDetail
		        and    related.AccumulatedAmortizedAmount = ReconciliationDetail.DetailAmount
			    and    related.DetailPeriod.GeneralLedgerCalendarPeriod  != EndPeriod.GeneralLedgerCalendarPeriod)

		AccumulatedCatchupAmortizationRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByDetailByPeriod
		        related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
		        related.ReconciliationAccountStructure	= ReconciliationAccountStructure
		        related.ReconciliationAccount			= ReconciliationAccount
		        related.ReconciliationDetail			= ReconciliationDetail
		    Instance Selection
		        where (related.DetailType.Amortization
				and    related.DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
				and    related.DetailPeriod.GeneralLedgerCalendarPeriod <= CatchUpPeriod.GeneralLedgerCalendarPeriod
				and    !related.ExcludeAmortizationDetail)

		ReconciliationPeriodDetailCountRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup   = ReconciliationManagementGroup  
				related.ReconciliationAccountStructure  = ReconciliationAccountStructure
				related.ReconciliationAccount           = ReconciliationAccount
				related.ReconciliationDetail            = ReconciliationDetail
			Instance Selection
				where (related.DetailType.ReconcilingItem
				and related.DetailPeriod.GeneralLedgerCalendarPeriod <= DetailPeriod.GeneralLedgerCalendarPeriod)

		ReconciliationPriorPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
				related.ReconciliationDetail			= ReconciliationDetail
			Instance Selection
				where (related.DetailType.Amortization
				and    related.DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
				and    related.DetailPeriod.GeneralLedgerCalendarPeriod < LocalCurrentPeriod.GeneralLedgerCalendarPeriod)

		EndAmortizationAfterPeriodDetailRel
			one-to-many relation to ReconciliationPeriodDetail
		    Field Mapping uses symbolic key
		        related.ReconciliationManagementGroup	= ReconciliationManagementGroup  
		        related.ReconciliationAccountStructure	= ReconciliationAccountStructure
		        related.ReconciliationAccount			= ReconciliationAccount
		        related.ReconciliationDetail			= ReconciliationDetail
		    Instance Selection
		        where (related.DetailType.Amortization
				and    related.ReconciliationPeriodDetail < ReconciliationPeriodDetail
				and    related.EndDetailPeriodForAmortization)

		GeneralLedgerTransactionRel	
			one-to-one relation to GeneralLedgerTransaction
			Field Mapping uses symbolic key		 
				related.FinanceEnterpriseGroup									= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.FinanceEnterpriseGroup
				related.AccountingEntity										= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.AccountingEntity
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod 	= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				related.GeneralLedgerJournalControl								= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerJournalControl
				related.GeneralLedgerTransaction								= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerTransaction

 	Sets 
		ByPeriod
			Sort Order
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				ReconciliationAccount
				GeneralLedgerCloseConfiguration
				DetailPeriod
				ReconciliationDetail
				ReconciliationPeriodDetail
				
		ByDetailByPeriod
			Sort Order
				ReconciliationManagementGroup  
				ReconciliationAccountStructure
				ReconciliationAccount
				ReconciliationDetail
				GeneralLedgerCloseConfiguration
				DetailPeriod
				ReconciliationPeriodDetail
		
		ByReasonCode
			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				GeneralLedgerCloseConfiguration
				DetailPeriod
				ReconciliationReason
				ReconciliationAccount
				ReconciliationDetail
				ReconciliationPeriodDetail
				
    Conditions
    	HasAttachment
    		when (Attachment entered)

    	HasReportDocument
    		when (ReportDocument entered)

		PeriodEndReconciliationCanBeUpdated
			when (!DetailType.Amortization
			and  (first PeriodEndReconciliationRel.Status.InProcess
			or    first PeriodEndReconciliationRel.Status.Open))		

		PeriodDetailCanBeDeleted
			when (PeriodEndReconciliationCanBeUpdated
			and   !HasPeriodEndDistribution)
			
		CanDeleteAmortizationDistributions
			when (DetailType.Amortization
			and   HasPeriodEndDistribution
			and  (PeriodEndDistribution set exists
			and   all PeriodEndDistribution set.Status.Entered))

		CanUpdatePeriodAmount		
			restricted
			when (DetailType.Amortization
			and  !ReconciliationPeriodDetailWithDistributionsRel exists
			and  EndAmortizationPeriodDetail
			and  DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
			and  (DetailPeriod.GeneralLedgerCalendarPeriod != ReconciliationDetail.EndPeriod.GeneralLedgerCalendarPeriod
			or   (DetailPeriod.GeneralLedgerCalendarPeriod = ReconciliationDetail.EndPeriod.GeneralLedgerCalendarPeriod
			and  RemainingBalance entered))
			and  !ExcludeAmortizationDetail)

		CanEndAmortization
			restricted
			when (DetailType.Amortization
			and  !ReconciliationPeriodDetailWithDistributionsRel exists
			and  EndAmortizationPeriodDetail
			and  !EndDetailPeriodForAmortization
			and  DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
			and  DetailPeriod.GeneralLedgerCalendarPeriod != ReconciliationDetail.EndPeriod.GeneralLedgerCalendarPeriod
			and  !CanCatchUpPeriodDetail
			and  !ExcludeAmortizationDetail)

		CanExtendAmortization
			when (DetailType.Amortization
			and   !ReconciliationPeriodDetailWithDistributionsRel exists
			and   DetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
			and   !EndAmortizationAfterPeriodDetailRel exists
			and   !ExcludeAmortizationDetail)
		
		CanCatchUpPeriodDetail
			restricted
			when (DetailType.Amortization
			and   CatchUpPeriod entered
			and   DetailPeriod.GeneralLedgerCalendarPeriod < CatchUpPeriod.GeneralLedgerCalendarPeriod)
		
		AfterEndAmortizationPeriodDetail
			restricted
			when (DetailType.Amortization
			and   EndAmortizationPeriodDetailRel exists)
		
		BeforeEndAmortizationPeriodDetail
			restricted
			when (DetailType.Amortization
			and  !EndAmortizationPeriodDetailRel exists)
		
		EndDetailPeriodForAmortization  
			restricted
			when (DetailType.Amortization
			and   AccumulatedAmortizedAmount = ReconciliationDetail.DetailAmount
			and   DetailPeriod.GeneralLedgerCalendarPeriod  != ReconciliationDetail.EndPeriod.GeneralLedgerCalendarPeriod)
		
		LastPeriodHasRemainingBalance
			restricted
			when (DetailType.Amortization
			and   DetailPeriod.GeneralLedgerCalendarPeriod = ReconciliationDetail.EndPeriod.GeneralLedgerCalendarPeriod
			and   RemainingBalance entered)
			
		HasZeroPeriodAmount
			restricted 
			when (DetailType.Amortization
			and  !PeriodAmount entered)
			
		CatchUpPeriodDetail
			when (DetailType.Amortization
			and   CatchUpPeriod.GeneralLedgerCalendarPeriod = DetailPeriod.GeneralLedgerCalendarPeriod)

		ReconciliationPeriodDetailExists
			when (ReconciliationPeriodDetail exists)

		OnlyReconciliationDetailForHeader
			when (instance count of ReconciliationDetail.ReconciliationPeriodDetail set = 1)

		MultipleDetailsExistForHeader
			when (ReconciliationPeriodDetailExists
			and   instance count of ReconciliationDetail.ReconciliationPeriodDetail set > 1
			and   !HideForAuditorRel exists)

		HasDetailHeaderComments
			when (ReconciliationDetailCommentRel exists)

		HasDetailHeaderCommentsAndAttachments
			when (ReconciliationDetailCommentRel exists)
			
		APAccrualType
			when (ReconciliationAccount.ReconciliationAccountType.PayablesAccrual)
			
		CreateIsValid
			when (PeriodEndReconciliationCanBeUpdated)


		HasAuditorRole
			restricted
			when (HideForAuditorRel exists)
			
		ReconcilingItemReasonCodeRequired
			when (ReconciliationManagementGroup.ReconcilingItemReasonCodeRequired
			and DetailType.ReconcilingItem)

		CanExcludeAmortizationDetail
			when (!ExcludeAmortizationDetail
			and  !HasPeriodEndDistribution
			and  !EndAmortizationAfterPeriodDetailRel exists
			and  PeriodEndReconciliationRel.Status.Closed)
		
		CanIncludeAmortizationDetail
			when (ExcludeAmortizationDetail
			and  !HasPeriodEndDistribution)

		ReconcilingItemAlert
			when (DetailType.ReconcilingItem 
			and ReconciliationManagementGroup.ReconcilingItemAlertAmount entered 
			and PeriodAmount entered
			and DerivedAbsolutePeriodAmount >= ReconciliationManagementGroup.ReconcilingItemAlertAmount)

		GeneralLedgerTransactionExists
			when (GeneralLedgerTransactionRel exists)

	Create Rules  
		include IDM.CreateRules 
			replace AttachmentField with Attachment	
									
	Delete Rules
		include IDM.DeleteNoArchiveRules
			replace AttachmentField with Attachment

	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with Attachment
					
	Field Rules
		GeneralLedgerCloseConfiguration
			force default to ReconciliationAccount.CloseConfiguration
		
		Description
			default to ReferenceNumber
			
		TransactionDate
			initial value is DetailPeriod.GeneralLedgerCalendarPeriod.Date
			default to DetailPeriod.GeneralLedgerCalendarPeriod.Date

		StartPeriod
			required
			initial value is DetailPeriod
			default to DetailPeriod
			
		EndPeriod
			if (!Recurring
			and EndPeriod !entered)
				if (PeriodTerm entered)
					LocalPeriodCount = 1
					LocalAmortizationPeriod	= StartPeriod
					while (LocalPeriodCount < PeriodTerm)
						LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
						LocalPeriodCount += 1
					EndPeriod = LocalAmortizationPeriod
				else
					default to ReconciliationDetail.last ReconciliationPeriodDetailByPeriodRel.DetailPeriod
					default to StartPeriod
			
		PeriodTerm
			if (!Recurring
			and EndPeriod entered)
				if (PeriodTerm !entered)
					PeriodTerm = instance count of DetailPeriodRangeRel
				else
					constraint (PeriodTerm = instance count of DetailPeriodRangeRel)
						"PeriodTermDoesNotMatchNumberOfPeriodsInRange"

		Recurring
			if (Recurring)
				initialize EndPeriod
				initialize PeriodTerm
		
		ReconciliationReason
			if (ReconcilingItemReasonCodeRequired and initiating action != "ReconciliationDetail.SchedulePeriodDetails")
				required
					"ReasonCodeIsRequired"
					
	Actions
		CreateFromReconciliationDetail is a Create Action
			restricted
			
			Action Rules
				constraint (!ReconciliationPeriodDetailRel exists)
					"ReconciliationDetailAlreadyExistsForPeriod<DetailPeriod>:_<DetailPeriod.PeriodName>"	
				ReportDocument = PeriodEndReconciliationRel.ReportDocument
				
		CreatePeriodDetail is a Create Action
			valid when (CreateIsValid)
			
			Local Fields
				LocalReconciliationDetail is a ReconciliationDetail view
				
			Entrance Rules
				constraint (!ReconciliationPeriodDetailRel exists)
					"ReconciliationDetailAlreadyExistsForPeriod<DetailPeriod>:_<DetailPeriod.PeriodName>"	
				
				invoke CreateReconciliationDetail ReconciliationDetail
					assign result to LocalReconciliationDetail
					invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup 
					invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.ReconciliationAccount			= ReconciliationAccount
					invoked.ReferenceNumber					= ReferenceNumber
					invoked.Description						= Description	
					invoked.DetailAmount					= PeriodAmount
					invoked.TransactionDate					= TransactionDate
			    	invoked.StartPeriod						= StartPeriod
			    	invoked.EndPeriod						= EndPeriod
			    	invoked.PeriodTerm						= PeriodTerm
					invoked.Recurring						= Recurring
					invoked.Attachment.Title				= Attachment.Title 
					invoked.Attachment.File					= Attachment.File
					invoked.Attachment.MimeType				= Attachment.MimeType
					invoked.Active							= true
					invoked.CreatedFromPeriod				= DetailPeriod		

			Action Rules
				ReconciliationDetail	= LocalReconciliationDetail.ReconciliationDetail
				DetailType				= 1 
				if (first PeriodEndReconciliationRel.Status.Open
				and first PeriodEndReconciliationRel.FinanceTeam entered)
					invoke TransitionToInProcessStatus PeriodEndReconciliationRel
					




								

		CreateReconcilingItem is a Create Action
			valid when (PeriodEndReconciliationCanBeUpdated)
			Local Fields
				LocalReconciliationDetail is a ReconciliationDetail view
				
			Entrance Rules
				invoke CreateReconcilingItem ReconciliationDetail
					assign result to LocalReconciliationDetail
					invoked.ReconciliationManagementGroup	= ReconciliationManagementGroup 
					invoked.ReconciliationAccountStructure	= ReconciliationAccountStructure
					invoked.ReconciliationAccount			= ReconciliationAccount
					invoked.ReferenceNumber					= ReferenceNumber
					invoked.Description						= Description	
					invoked.DetailAmount					= PeriodAmount
					invoked.TransactionDate					= TransactionDate
			    	invoked.StartPeriod						= StartPeriod
			    	invoked.EndPeriod						= EndPeriod
			    	invoked.PeriodTerm						= PeriodTerm
					invoked.Recurring						= Recurring
					invoked.Attachment.Title				= Attachment.Title 
					invoked.Attachment.File					= Attachment.File
					invoked.Attachment.MimeType				= Attachment.MimeType
					invoked.Active							= true
					invoked.CreatedFromPeriod				= DetailPeriod		
					invoked.ReconciliationReason			= ReconciliationReason
					invoked.OriginatingTransaction			= OriginatingTransaction
					
			Action Rules
				ReconciliationDetail	= LocalReconciliationDetail.ReconciliationDetail
				DetailType				= 2 
				if (first PeriodEndReconciliationRel.Status.Open)
					invoke TransitionToInProcessStatus PeriodEndReconciliationRel
		
		Create is a Create Action
			restricted
									
		Update is an Update Action
			valid when (PeriodEndReconciliationCanBeUpdated)
			Action Rules
				if  (OriginatingTransaction.BusinessClassName != "ReconciliationSubsystemBalance"
				and  OriginatingTransaction.BusinessClassName != "GeneralLedgerTransaction")
					constraint (!OriginatingTransaction entered)
						"ReconcilingItemsCreatedFromADetailTransactionReconciliationCannotBeChanged"
							
			Exit Rules
				if (!DetailType.Amortization)
					invoke UpdateDetailValues ReconciliationDetail
						invoked.ReferenceNumber				= ReferenceNumber
						invoked.Description					= Description	
						invoked.DetailAmount				= PeriodAmount
				    	invoked.TransactionDate				= TransactionDate
				    	invoked.StartPeriod					= StartPeriod
				    	invoked.EndPeriod					= EndPeriod
				    	invoked.PeriodTerm					= PeriodTerm
						invoked.Recurring					= Recurring
						invoked.Attachment.Title			= Attachment.Title 
						invoked.Attachment.File				= Attachment.File
						invoked.Attachment.MimeType			= Attachment.MimeType
						invoked.ReconciliationReason		= ReconciliationReason

					invoke UpdatePeriodValues AllRelatedPeriodDetailsRel
				    	invoked.StartPeriod					= StartPeriod
				    	invoked.EndPeriod					= EndPeriod
				    	invoked.PeriodTerm					= PeriodTerm
						invoked.Recurring					= Recurring
						
				if(Recurring changed and Recurring)
					invoke CreateDetailsForExistingPeriodEndReconciliations ReconciliationDetail
					
		UpdatePeriodValues is an Update Action
			restricted

		FastUpdate is an Update Action		
			default label is untranslatable
			restricted
			bypass field rules

		UpdatePeriodAmount is an Instance Action		
			valid when (CanUpdatePeriodAmount)
			Parameters
				PrmPeriodAmount		is an InternationalAmount
					default label is "NewPeriodAmount"

			Parameter Rules
				PrmPeriodAmount
					if (!PrmPeriodAmount entered)
						confirmation required
							"NewPeriodAmountIsZero;WouldYouLikeToContinue"

			Local Fields
				LocalAccumulatedAmount	is an InternationalAmount
				LocalRemainingAmount	is an InternationalAmount
				LocalRemainingPeriods	is Numeric 3
				LocalPeriodAmount		is an InternationalAmount

			Action Rules
				PeriodAmount			= PrmPeriodAmount

				LocalAmortizationPeriod = this instance.DetailPeriod
				if (LocalAmortizationPeriod = ReconciliationDetail.EndPeriod)
					LocalElapsedPeriods			= (this instance.ElapsedPeriods - 1)
					AccumulatedAmortizedAmount	= (LocalElapsedPeriodsRel.AccumulatedAmortizedAmount + PeriodAmount)
					RemainingBalance			= (ReconciliationDetail.DetailAmount - AccumulatedAmortizedAmount)
				
		        else
		        if (EndAmortizationRel exists 
				and AccumulatedAmortizedAmount = ReconciliationDetail.DetailAmount)  
		            LocalElapsedPeriods			= (this instance.ElapsedPeriods -1)
		            LocalAccumulatedAmount		= (LocalElapsedPeriodsRel.AccumulatedAmortizedAmount + PeriodAmount)
		            LocalRemainingAmount		= (ReconciliationDetail.DetailAmount - LocalAccumulatedAmount)
		            LocalElapsedPeriods			= this instance.ElapsedPeriods
		            LocalRemainingPeriods		= this instance.RemainingPeriods
		            LocalCurrentPeriod          = DetailPeriod
		            while (LocalAmortizationPeriod entered
		            and    LocalAmortizationPeriod <= EndPeriod)
		                if (LocalAmortizationPeriod 	= LocalCurrentPeriod)
		                    LocalPeriodAmount      	    = PeriodAmount
		                    LocalAccumulatedAmount		= LocalAccumulatedAmount
		                    LocalRemainingAmount		= LocalRemainingAmount
		                else
		                if (LocalAmortizationPeriod > LocalCurrentPeriod)
		                    if (LocalRemainingAmount 	= 0)
		                        LocalPeriodAmount		= 0
		                        LocalAccumulatedAmount 	= 0
		                        LocalRemainingAmount 	= 0
		                    else
		                    if (LocalRemainingAmount < 0)
		                    	LocalPeriodAmount		= 0
		                        LocalAccumulatedAmount 	= LocalAccumulatedAmount
		                        LocalRemainingAmount	= LocalRemainingAmount
		                    else    
		                        LocalPeriodAmount      	= LocalRemainingAmount
		                        LocalAccumulatedAmount += LocalPeriodAmount
		                        LocalRemainingAmount   -= LocalPeriodAmount
		                
		                invoke Update ReconciliationPeriodDetailAmortizationRel
		                    invoked.DetailPeriod				= LocalAmortizationPeriod
		                    invoked.PeriodAmount				= LocalPeriodAmount
		                    invoked.AccumulatedAmortizedAmount	= LocalAccumulatedAmount
		                    invoked.RemainingBalance			= LocalRemainingAmount
		                    invoked.ElapsedPeriods				= LocalElapsedPeriods
		    
		                LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
		                if (LocalAmortizationPeriod >= StartPeriod)
		                    LocalElapsedPeriods += 1
				else
					LocalElapsedPeriods			= (this instance.ElapsedPeriods -1)
					LocalAccumulatedAmount		= (LocalElapsedPeriodsRel.AccumulatedAmortizedAmount + PeriodAmount)
					LocalRemainingAmount		= (ReconciliationDetail.DetailAmount - LocalAccumulatedAmount)
					LocalElapsedPeriods			= this instance.ElapsedPeriods
					LocalRemainingPeriods		= this instance.RemainingPeriods
					while (LocalRemainingPeriods entered)
						invoke FastUpdate LocalElapsedPeriodsRel
							invoked.AccumulatedAmortizedAmount	= LocalAccumulatedAmount
							invoked.RemainingBalance			= LocalRemainingAmount
						LocalElapsedPeriods		+= 1
						LocalAccumulatedAmount	+= LocalElapsedPeriodsRel.PeriodAmount
						LocalRemainingAmount	-= LocalElapsedPeriodsRel.PeriodAmount
						LocalRemainingPeriods	-= 1
						if (EndAmortizationRel exists
						and LocalElapsedPeriodsRel.PeriodAmount = 0  
						and LocalRemainingAmount = 0)
							LocalAccumulatedAmount = 0
						if (LocalRemainingPeriods !entered)
							invoke FastUpdate last LocalElapsedPeriodsRel
								invoked.AccumulatedAmortizedAmount	= LocalAccumulatedAmount
								invoked.RemainingBalance			= LocalRemainingAmount

		Delete is a Delete Action
			valid when (PeriodDetailCanBeDeleted)
			Local Fields
				LocalReconciliationDetail	is a ReconciliationDetail
				
			Entrance Rules
				if(OriginatingTransaction.BusinessClassName != "ReconciliationSubsystemBalance")
					constraint (!OriginatingTransaction entered)
						"ReconcilingItemsMustBeMaintainedFromTheDetailTransactionReconciliationQueue"
				
				LocalReconciliationDetail = ReconciliationDetail
				
			Exit Rules
				if (!LocalReconciliationDetail.ReconciliationPeriodDetail set exists)
					invoke Delete LocalReconciliationDetail
		
		DeleteFromDetailReconciliation is a Delete Action
			restricted
			Local Fields
				LocalReconciliationDetail	is a ReconciliationDetail
				
			Entrance Rules
				LocalReconciliationDetail = ReconciliationDetail

			Exit Rules
				if (!LocalReconciliationDetail.ReconciliationPeriodDetail set exists)
					invoke Delete LocalReconciliationDetail
					
		Purge is a Purge Action
			restricted

  		CreateAmortizationPeriodDistributions is a Set Action
  			restricted
			completion message is "CreatePeriodDistributionsHasBeenSubmittedToTheQueueForProcessing"
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				PrmGeneralLedgerCloseConfiguration	is a GeneralLedgerCloseConfiguration
				PrmGeneralLedgerClosePeriod			is a GeneralLedgerClosePeriod
				
			Parameter Rules
				PrmGeneralLedgerClosePeriod			required
					
			Local Fields
 				LocalDistributionAmount				is an InternationalAmount
				DistributionRunningTotal			is an InternationalAmount
 				LastPeriodEndDistribution			is a PeriodEndDistribution view
				BypassStructureRelationEdit
				
			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and    ReconciliationAccount = PrmReconciliationAccount
				and    DetailPeriod.GeneralLedgerCalendarPeriod = PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				and    DetailType.Amortization
				and    ReconciliationDetail.Active
				and    PeriodAmount entered		
				and    !HasPeriodEndDistribution
				and    CatchUpPeriod.GeneralLedgerCalendarPeriod <= PrmGeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod)

			Sort Order
				ReconciliationManagementGroup
				ReconciliationAccountStructure
				ReconciliationAccount
				DetailPeriod
				DetailType
				ReconciliationDetail
				ReconciliationPeriodDetail

			Action Rules							
				Instance Rules
					PostingPeriod = DetailPeriod
					RelatedPeriodReconciliation = first PeriodEndReconciliationRel.PeriodEndReconciliation
					initialize LocalDistributionAmount
					initialize DistributionRunningTotal
					
					if (CatchUpPeriod = DetailPeriod)
						LocalDistributionAmount = sum AccumulatedCatchupAmortizationRel.PeriodAmount

					else
						LocalDistributionAmount	= PeriodAmount
					
					BypassStructureRelationEdit = true
					
					if (ReconciliationDetail.AllocationCode entered)
						for each ReconciliationDetail.AllocationCode.CashAllocationCodeDetail set
							invoke Create PeriodEndDistribution
								assign result to LastPeriodEndDistribution
								invoked.ReconciliationManagementGroup							= PrmReconciliationManagementGroup
								invoked.ReconciliationAccountStructure							= PrmReconciliationAccountStructure
								invoked.PeriodEndReconciliation.ReconciliationAccount			= PrmReconciliationAccount	
								invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PrmGeneralLedgerCloseConfiguration
								invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= DetailPeriod
								invoked.PeriodEndReconciliation.SequenceNumber					= RelatedPeriodReconciliation.SequenceNumber
								invoked.GLFinanceCodeBlock										= each.AllocationAccount
								invoked.GLTransactionAmount										= (LocalDistributionAmount * each.AllocationPercent)
								invoked.Description												= ReconciliationDetail.DistributionDescription
								invoked.ReconciliationDetail									= ReconciliationDetail
								invoked.ReconciliationPeriodDetail								= ReconciliationPeriodDetail
								invoked.CreatedFromAmortization									= true
								invoked.Comment													= each.Comment
							
							DistributionRunningTotal += (LocalDistributionAmount * each.AllocationPercent)
						
						if ((LocalDistributionAmount - DistributionRunningTotal) != 0)
							invoke Update LastPeriodEndDistribution.PeriodEndDistribution
								invoked.DistributionAmount.CurrencyAmount += (LocalDistributionAmount - DistributionRunningTotal)
					else
						invoke Create PeriodEndDistribution
							invoked.ReconciliationManagementGroup							= PrmReconciliationManagementGroup
							invoked.ReconciliationAccountStructure							= PrmReconciliationAccountStructure
							invoked.PeriodEndReconciliation.ReconciliationAccount			= PrmReconciliationAccount
							invoked.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = PrmGeneralLedgerCloseConfiguration
							invoked.PeriodEndReconciliation.GeneralLedgerClosePeriod		= DetailPeriod
							invoked.PeriodEndReconciliation.SequenceNumber					= RelatedPeriodReconciliation.SequenceNumber
							invoked.GLFinanceCodeBlock										= ReconciliationDetail.AmortizationExpenseAccount
							invoked.GLTransactionAmount										= LocalDistributionAmount
							invoked.Description												= ReconciliationDetail.DistributionDescription
							invoked.ReconciliationDetail									= ReconciliationDetail
							invoked.ReconciliationPeriodDetail								= ReconciliationPeriodDetail
							invoked.CreatedFromAmortization									= true
	
					HasPeriodEndDistribution = true
	
					if (CatchUpPeriod = DetailPeriod)
						invoke Update CatchupPeriodDetailRel
							invoked.PostingPeriod				= DetailPeriod
							invoked.RelatedPeriodReconciliation	= RelatedPeriodReconciliation
							invoked.HasPeriodEndDistribution	= true	

  		DeleteAmortizationDistributions is an Instance Action
  			valid when (CanDeleteAmortizationDistributions)
  			Action Rules
				invoke DeleteAmortizationDistribution PeriodEndDistribution set
				
				HasPeriodEndDistribution = false
				if (CatchUpPeriod = DetailPeriod)
					invoke Update CatchupPeriodDetailRel
						initialize invoked.PostingPeriod
						initialize invoked.RelatedPeriodReconciliation
						initialize invoked.HasPeriodEndDistribution
						
		ExcludeAmortizationDetail is an Instance Action
			valid when (CanExcludeAmortizationDetail)
  			Action Rules
				ExcludeAmortizationDetail = true

		IncludeAmortizationDetail is an Instance Action
  			valid when (CanIncludeAmortizationDetail)
			Action Rules
				ExcludeAmortizationDetail = false

		UploadToIDM is an Instance Action  
			valid when (Attachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with Attachment	
													
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (Attachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with Attachment

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop
						
		EndAmortization is an Instance Action  
			valid when (CanEndAmortization)
		    Local Fields
		        LocalPeriodAmount						is an InternationalAmount
		        LocalAccumulatedAmount					is an InternationalAmount
		        LocalRemainingAmount					is an InternationalAmount
				
		    Action Rules
		        initialize LocalPeriodAmount
		        LocalCurrentPeriod 	= DetailPeriod
		        LocalPostingDate 	= ReconciliationDetail.TransactionDate
		        LocalPostingPeriod	= first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod
		        if (LocalPostingPeriod < StartPeriod)
		            LocalAmortizationPeriod = LocalPostingPeriod
		        else
		            LocalAmortizationPeriod	= StartPeriod

				EndPeriod                   = ReconciliationDetail.EndPeriod	
		        LocalRemainingAmount 		= ReconciliationDetail.DetailAmount
				PeriodTerm					= instance count of DetailPeriodRangeRel
		        while (LocalAmortizationPeriod entered
		        and    LocalAmortizationPeriod <= EndPeriod)
		            if (LocalAmortizationPeriod = StartPeriod)
		                LocalElapsedPeriods = 1
		                
		            if (LocalAmortizationPeriod >= StartPeriod 
					and LocalCurrentPeriod > LocalAmortizationPeriod)
		                LocalPeriodAmount		=  ReconciliationPeriodDetailAmortizationRel.PeriodAmount
		                LocalAccumulatedAmount 	+= LocalPeriodAmount
		                LocalRemainingAmount 	-= LocalPeriodAmount
		            else
		            if (LocalAmortizationPeriod = LocalCurrentPeriod)
		                LocalPeriodAmount      	= LocalRemainingAmount
		                LocalAccumulatedAmount += LocalRemainingAmount
		                LocalRemainingAmount    = 0
		            else
		            if (LocalAmortizationPeriod > LocalCurrentPeriod)
		                LocalPeriodAmount		= 0
		                LocalAccumulatedAmount 	= 0
		                LocalRemainingAmount 	= 0
		            
		            invoke Update ReconciliationPeriodDetailAmortizationRel
		                invoked.DetailPeriod					= LocalAmortizationPeriod
		                invoked.PeriodAmount					= LocalPeriodAmount
		                invoked.AccumulatedAmortizedAmount		= LocalAccumulatedAmount
		                invoked.RemainingBalance				= LocalRemainingAmount
		                invoked.ElapsedPeriods				  	= LocalElapsedPeriods
						if (LocalAmortizationPeriod > DetailPeriod)
							invoked.ExcludeAmortizationDetail 	= false
		
		            LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
		            if (LocalAmortizationPeriod >= StartPeriod)
		                LocalElapsedPeriods += 1

        ExtendAmortization is an Instance Action
			default label is "ExtendAmortization"
			valid when (CanExtendAmortization)
			Parameters
				PrmGeneralLedgerCloseConfiguration  is a GeneralLedgerCloseConfiguration
				PrmEndPeriod						is a GeneralLedgerClosePeriod

			Parameter Rules
				PrmGeneralLedgerCloseConfiguration
					initial value is GeneralLedgerCloseConfiguration
					default to GeneralLedgerCloseConfiguration
				
				PrmEndPeriod
					required
						"EndPeriodIsRequired"
					constraint (PrmEndPeriod > EndPeriod)
						"NewEndPeriodMustBeAfter<EndPeriod.PeriodName>"
			
			Local Fields
				LocalPeriodAmount					is an InternationalAmount
				LocalAccumulatedAmount				is an InternationalAmount
		        LocalRemainingAmount				is an InternationalAmount
				LocalRemainingBalance 				is an InternationalAmount
				LocalAmortizationPeriodBeginDate	is Date
				LocalPeriodDays						is Numeric 5
				LocalTotalDays						is Numeric 5
				LocalPeriodTerm						is Numeric 5
				
			Action Rules
				initialize LocalPeriodAmount
				initialize PeriodTerm
			    LocalCurrentPeriod					= DetailPeriod
				EndPeriod							= PrmEndPeriod
				PeriodTerm							= instance count of DetailPeriodRangeRel
				LocalAmortizationPeriod				= LocalCurrentPeriod
				LocalElapsedPeriods					= ReconciliationPeriodDetail.ElapsedPeriods

				if (ReconciliationPriorPeriodDetailRel exists)
					LocalRemainingBalance			= last ReconciliationPriorPeriodDetailRel.RemainingBalance
					LocalAccumulatedAmount			= last ReconciliationPriorPeriodDetailRel.AccumulatedAmortizedAmount
				else
					LocalRemainingBalance           = ReconciliationDetail.DetailAmount
				LocalRemainingAmount				= LocalRemainingBalance

				invoke UpdateDetailValues ReconciliationDetail
					invoked.EndPeriod  				= PrmEndPeriod
					invoked.PeriodTerm 				= PeriodTerm

				while (LocalAmortizationPeriod entered
 				and    LocalAmortizationPeriod <= PrmEndPeriod)

					if (LocalAmortizationPeriod = LocalCurrentPeriod
					and LocalCurrentPeriod > last ReconciliationPriorPeriodDetailRel.DetailPeriod)	
						LocalPeriodCount = LocalElapsedPeriods

					if (ReconciliationDetail.AmortizationSpread.ByPeriods
	 				and LocalAmortizationPeriod >= LocalCurrentPeriod)
						LocalPeriodTerm = PeriodTerm - (instance count of ReconciliationPriorPeriodDetailRel)
						LocalPeriodAmount = (LocalRemainingBalance / LocalPeriodTerm)

					if (ReconciliationDetail.AmortizationSpread.ByDays)
						LocalAmortizationPeriodBeginDate = LocalAmortizationPeriod.DerivedBeginGregorian
						if (LocalPeriodCount = LocalElapsedPeriods)
							LocalTotalDays = (EndPeriod.GeneralLedgerCalendarPeriod.Date - LocalAmortizationPeriodBeginDate + 1)
						LocalPeriodDays = (LocalAmortizationPeriod.GeneralLedgerCalendarPeriod.Date - LocalAmortizationPeriodBeginDate + 1)
						if (LocalAmortizationPeriod >= LocalCurrentPeriod)
							LocalPeriodAmount = (LocalRemainingBalance * (LocalPeriodDays / LocalTotalDays))
					
					if (LocalAmortizationPeriod = PrmEndPeriod)
						LocalPeriodAmount = LocalRemainingAmount
						
					if (LocalAmortizationPeriod >= LocalCurrentPeriod)	
						LocalAccumulatedAmount += LocalPeriodAmount
	 					LocalRemainingAmount -= LocalPeriodAmount
					
					round LocalPeriodAmount to nearest DerivedRoundTo
					round LocalAccumulatedAmount to nearest DerivedRoundTo
					round LocalRemainingAmount to nearest DerivedRoundTo

					if (ReconciliationPeriodDetailAmortizationRel exists)
						invoke Update ReconciliationPeriodDetailAmortizationRel
							invoked.DetailPeriod					= LocalAmortizationPeriod
							invoked.PeriodAmount					= LocalPeriodAmount
							invoked.AccumulatedAmortizedAmount		= LocalAccumulatedAmount
							invoked.RemainingBalance				= LocalRemainingAmount
							invoked.ElapsedPeriods					= LocalPeriodCount
							if (LocalAmortizationPeriod > DetailPeriod)
								invoked.ExcludeAmortizationDetail 	= false
					else
						invoke CreateFromReconciliationDetail ReconciliationPeriodDetail
							fill in fields from this instance
								except invoked.Attachment.FSMAttachmentIDM
							invoked.DetailPeriod				= LocalAmortizationPeriod
							invoked.PeriodAmount				= LocalPeriodAmount
							invoked.AccumulatedAmortizedAmount	= LocalAccumulatedAmount
							invoked.RemainingBalance			= LocalRemainingAmount
							invoked.ElapsedPeriods				= LocalPeriodCount
					
					LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
					if (LocalAmortizationPeriod >= LocalCurrentPeriod)	
						LocalPeriodCount += 1
