WorkApplicationCloseE is a BusinessClass
	owned by ar
	prefix is r190e

	Ontology
		symbolic key is WorkApplicationCloseE

	Patterns
		disable AuditIndex
		disable Auditing 
		disable EffectiveDated
		disable DataTranslations
		disable StaticTranslations

	Persistent Fields
		FinanceEnterpriseGroup	
		ApplicationCloseResult	is like ApplicationCloseResult
		RecKey					is a AR190War190eRecKeyGroup
		ProcessLevel			is like ReceivableProcessLevel	
		OrigCurrency			is like Currency
		OrigRate				is like OrigRate	
		CurrMudv				is like CurrencyMultiplicationOrDivision
		TranAmt					is like InternationalAmount
		GroupRate				is like CurrencyRateToCustomerGroupCurrency
		GroupMudv				is like CustomerGroupCurrencyMultiplicationOrDivision
		BaseAmt					is like InternationalAmount
		DocumentNbr				is like DocumentNumber
		Project					is like Project
		ProjectContract			is like ProjectContract
		ProjectFl				is Boolean
		CbDisputeCd				is like ReceivableInvoiceDisputeCode	
		CbDisputeFl				is Boolean
		DepositDate				is Date
		Sort1					is like Sort1 
		Sort2					is like Sort2 
		Sort3					is like Sort3 
		Sort4					is like Sort4 
		ProgramSequence
		DistributionAmount		is a FinanceCurrencyAmountGroup
		
	Transient Fields
		TransientFromEntity			 		is an AccountingEntity	
    		derive value from CompanyRel.Company.AccountingEntity
		TransientFromCurrency				is a FromCurrency
		TransientCurrencyTable				is a CurrencyTable


	Local Fields
		NewReceivableInvoice		is a ReceivableInvoice view
		NewInvoiceDetail			is a ReceivableInvoiceDetail view
		CurrencyDateWork			is a ReceivableExchange
		WsToCompanyBaseAmount		is like InternationalAmount

		NewCompany					is like Company
		NewInvoiceType				is like ReceivableInvoiceDetailType
		NewInvoice					is like Invoice
		NewSequence					is like Sequence



	Derived Fields
		Msg6 is a MessageField
			restricted
			"SummaryChargebackFrom_"
		Msg7 is a MessageField
			restricted
			"SummaryChargebackFrom_"

	Relations
		ReceivableProcessLevelRel
			one-to-one relation to ReceivableProcessLevel
			Field Mapping uses symbolic key
				related.Company					= RecKey.CrCompany
				related.ReceivableProcessLevel	= ProcessLevel

		CompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company					= RecKey.Company

		GLCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company					= RecKey.Company

		CrCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company					= RecKey.CrCompany

		CrCompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		 = RecKey.CrCompany
				related.Customer	 = RecKey.CrCustomer

		CloseDistributionRel
			one-to-many relation to ReceivableGLDistribution
			Field Mapping uses ByApplicationCloseResult
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ApplicationCloseResult			 = ApplicationCloseResult

		NewInvoiceDetailRel
			classic name is AROITEMS
			one-to-one relation to ReceivableInvoiceDetail
			Field Mapping uses symbolic key
				related.Company												 = NewCompany
				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = NewInvoiceType
				related.ReceivableInvoiceDetail.Invoice						 = NewInvoice
				related.ReceivableInvoiceDetail.PaymentSeq					 = NewSequence

		ApplicationCloseUseOldFundAccountingReallocationMethodRel
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= "ApplicationCloseUseOldFundAccountingReallocationMethod"

	Sets

		RecKey
			indexed
			no duplicates
			Sort Order
				FinanceEnterpriseGroup
				ApplicationCloseResult
				RecKey

	Actions

		Create is a Create Action
			restricted
			Action Rules
				display "WorkAppCloseECreatedTran=<TranAmt>Base=<BaseAmt>"

		Update is an Update Action
			restricted

		FastUpdate is an Update Action
			restricted
			bypass field rules

		Delete is a Delete Action
			restricted

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules

		Process is a Set Action
			restricted

			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmApplicationCloseResult		is a ApplicationCloseResult
				PrmCreateDate					is TimeStamp

			Instance Selection
				where (FinanceEnterpriseGroup	 = PrmFinanceEnterpriseGroup
				and	ApplicationCloseResult		 = PrmApplicationCloseResult)

			Local Fields

			Action Rules
				Empty Set Rules
					if (PrmFinanceEnterpriseGroup.FundAccounting)
						if (ApplicationCloseUseOldFundAccountingReallocationMethodRel exists)
							invoke UpdateStatusOnResult PrmApplicationCloseResult in background
								run after background group (PrmApplicationCloseResult.DerivedBackgroundGroup)  
					else
						invoke UpdateStatusOnResult PrmApplicationCloseResult

				Set Rules
					Entrance Rules
						display "AR190HBegin"

					Exit Rules
						if (PrmFinanceEnterpriseGroup.FundAccounting)
							if (ApplicationCloseUseOldFundAccountingReallocationMethodRel exists)
								invoke UpdateStatusOnResult PrmApplicationCloseResult in background
									run after background group (PrmApplicationCloseResult.DerivedBackgroundGroup)  
						else
							invoke UpdateStatusOnResult PrmApplicationCloseResult

				Instance Rules
					display "E(Disp)<RecKey.CrNbr>TranAmt<TranAmt>Comp<RecKey.Company>CrComp<RecKey.CrCompany>Curr<OrigCurrency>CrCurr<CrCompanyRel.Currency>GLDate<RecKey.GlDate>FEG<CrCompanyRel.CustomerGroupField.CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup>"

					if  (RecKey.CrCompany != RecKey.Company
					and  OrigCurrency = CrCompanyRel.Currency
					and  OrigCurrency entered
					and  CrCompanyRel.Currency entered
					and  RecKey.GlDate entered)
						CurrencyDateWork.FinanceEnterpriseGroup		= CrCompanyRel.CustomerGroupField.CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup
						CurrencyDateWork.ExchangeDate				= RecKey.GlDate
						CurrencyDateWork.FromCurrency				= OrigCurrency
						CurrencyDateWork.TransactionAmount			= TranAmt
						CurrencyDateWork.BaseAmount.ToCurrency		= CrCompanyRel.Currency
						WsToCompanyBaseAmount						= CurrencyDateWork.BaseAmount.OutputCurrencyAmount
					else
						WsToCompanyBaseAmount						= TranAmt

					invoke CreateFromApplicationClose ReceivableGLDistribution
						invoked.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
						invoked.ReceivableGLDistribution.ProgramSequence		= ProgramSequence
						invoked.LastDistributionSequence						= 1
						invoked.CreateDate										= PrmCreateDate

						invoked.ReceivableCompanyGroup.GlCompany				= RecKey.CrCompany
						invoked.ReceivableCompanyDataGroup.TransactionCompany	= RecKey.Company

						invoked.GeneralLedgerAccount							= ReceivableProcessLevelRel.ReceivableGeneralLedgerCode.DistributionAccount
						invoked.GeneralLedgerDate								= RecKey.GlDate
						invoked.TransactionDate									= RecKey.GlDate
						


						
						invoked.TransientCurrencyTable								= CompanyRel.Company.DerivedCurrencyTable
						invoked.DistributionAmount.ExchangeDate						= DistributionAmount.ExchangeDate
						
						invoked.DistributionAmount.FunctionalAmount.ToCurrency		= DistributionAmount.FunctionalAmount.ToCurrency
						invoked.DistributionAmount.AlternateAmount.ToCurrency		= DistributionAmount.AlternateAmount.ToCurrency
						invoked.DistributionAmount.AlternateAmount2.ToCurrency		= DistributionAmount.AlternateAmount2.ToCurrency
						invoked.DistributionAmount.AlternateAmount3.ToCurrency		= DistributionAmount.AlternateAmount3.ToCurrency
						invoked.DistributionAmount.ToFunctionalAmount.ToCurrency	= DistributionAmount.ToFunctionalAmount.ToCurrency
						invoked.DistributionAmount.ToAlternateAmount.ToCurrency		= DistributionAmount.ToAlternateAmount.ToCurrency
						invoked.DistributionAmount.ToAlternateAmount2.ToCurrency 	= DistributionAmount.ToAlternateAmount2.ToCurrency
						invoked.DistributionAmount.ToAlternateAmount3.ToCurrency 	= DistributionAmount.ToAlternateAmount3.ToCurrency
						invoked.DistributionAmount.ProjectAmount.ToCurrency			= DistributionAmount.ProjectAmount.ToCurrency
						invoked.DistributionAmount.ReportAmount1.ToCurrency			= DistributionAmount.ReportAmount1.ToCurrency
						invoked.DistributionAmount.ReportAmount2.ToCurrency			= DistributionAmount.ReportAmount2.ToCurrency
						invoked.DistributionAmount.ReportAmount3.ToCurrency			= DistributionAmount.ReportAmount3.ToCurrency
						invoked.DistributionAmount.ReportAmount4.ToCurrency			= DistributionAmount.ReportAmount4.ToCurrency
						invoked.DistributionAmount.ReportAmount5.ToCurrency			= DistributionAmount.ReportAmount5.ToCurrency
						
						invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyRate		= DistributionAmount.FunctionalAmount.EnteredCurrencyRate
						invoked.DistributionAmount.AlternateAmount.EnteredCurrencyRate		= DistributionAmount.AlternateAmount.EnteredCurrencyRate
						invoked.DistributionAmount.AlternateAmount2.EnteredCurrencyRate		= DistributionAmount.AlternateAmount2.EnteredCurrencyRate
						invoked.DistributionAmount.AlternateAmount3.EnteredCurrencyRate		= DistributionAmount.AlternateAmount3.EnteredCurrencyRate
						invoked.DistributionAmount.ToFunctionalAmount.EnteredCurrencyRate	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyRate
						invoked.DistributionAmount.ToAlternateAmount.EnteredCurrencyRate	= DistributionAmount.ToAlternateAmount.EnteredCurrencyRate
						invoked.DistributionAmount.ToAlternateAmount2.EnteredCurrencyRate 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyRate
						invoked.DistributionAmount.ToAlternateAmount3.EnteredCurrencyRate 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyRate
						invoked.DistributionAmount.ProjectAmount.EnteredCurrencyRate		= DistributionAmount.ProjectAmount.EnteredCurrencyRate
						invoked.DistributionAmount.ReportAmount1.EnteredCurrencyRate		= DistributionAmount.ReportAmount1.EnteredCurrencyRate
						invoked.DistributionAmount.ReportAmount2.EnteredCurrencyRate		= DistributionAmount.ReportAmount2.EnteredCurrencyRate
						invoked.DistributionAmount.ReportAmount3.EnteredCurrencyRate		= DistributionAmount.ReportAmount3.EnteredCurrencyRate
						invoked.DistributionAmount.ReportAmount4.EnteredCurrencyRate		= DistributionAmount.ReportAmount4.EnteredCurrencyRate
						invoked.DistributionAmount.ReportAmount5.EnteredCurrencyRate		= DistributionAmount.ReportAmount5.EnteredCurrencyRate
						
						invoked.DistributionAmount.CurrencyAmount		= DistributionAmount.CurrencyAmount
						invoked.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount		= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.DistributionAmount.AlternateAmount.EnteredCurrencyAmount		= DistributionAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.DistributionAmount.AlternateAmount2.EnteredCurrencyAmount		= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.DistributionAmount.AlternateAmount3.EnteredCurrencyAmount		= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
						invoked.DistributionAmount.ProjectAmount.EnteredCurrencyAmount		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.DistributionAmount.ReportAmount1.EnteredCurrencyAmount		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.DistributionAmount.ReportAmount2.EnteredCurrencyAmount		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.DistributionAmount.ReportAmount3.EnteredCurrencyAmount		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.DistributionAmount.ReportAmount4.EnteredCurrencyAmount		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.DistributionAmount.ReportAmount5.EnteredCurrencyAmount		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount
						
						invoked.DistributionAmount.KeepRateAndAmount = true
						


						invoked.ToCompanyBaseAmount								= DistributionAmount.FunctionalAmount.OutputCurrencyAmount


						invoked.TransType										= RecKey.CrType
						invoked.Invoice											= RecKey.CrNbr

						invoked.BatchNumber										= RecKey.CrBatch
						invoked.ReceivableCompanyDataGroup.Customer				= RecKey.CrCustomer
						invoked.ReceivableCompanyDataGroup.ReceivableProcessLevel	= ProcessLevel
						invoked.OriginalCurrency								= OrigCurrency


						invoked.Origin											= "RL"
						invoked.AccumulationType								= "S"
						invoked.DocumentNumber									= DocumentNbr
						invoked.Status											= 2

						invoked.Description										= Msg6 + RecKey.CrNbr
						invoked.AuditSummaryIndicator							= "02"	

						invoked.ApplicationCloseResult							= PrmApplicationCloseResult




					if  (TranAmt < 0)
						increment CrCompanyRel.LastCreditChargebackNumber by 1
					else
						increment CrCompanyRel.LastChargebackNumber by 1

					invoke Released.CreateFromApplicationClose ReceivableInvoice
						assign result to NewReceivableInvoice
						invoked.Company												= RecKey.CrCompany
						invoked.Customer											= RecKey.CrCustomer
						
						invoked.InvoiceAmount.FunctionalAmount.ToCurrency		= DistributionAmount.FunctionalAmount.ToCurrency
						invoked.InvoiceAmount.AlternateAmount.ToCurrency		= DistributionAmount.AlternateAmount.ToCurrency
						invoked.InvoiceAmount.AlternateAmount2.ToCurrency		= DistributionAmount.AlternateAmount2.ToCurrency
						invoked.InvoiceAmount.AlternateAmount3.ToCurrency		= DistributionAmount.AlternateAmount3.ToCurrency
						invoked.InvoiceAmount.ToFunctionalAmount.ToCurrency	= DistributionAmount.ToFunctionalAmount.ToCurrency
						invoked.InvoiceAmount.ToAlternateAmount.ToCurrency		= DistributionAmount.ToAlternateAmount.ToCurrency
						invoked.InvoiceAmount.ToAlternateAmount2.ToCurrency 	= DistributionAmount.ToAlternateAmount2.ToCurrency
						invoked.InvoiceAmount.ToAlternateAmount3.ToCurrency 	= DistributionAmount.ToAlternateAmount3.ToCurrency
						invoked.InvoiceAmount.ProjectAmount.ToCurrency			= DistributionAmount.ProjectAmount.ToCurrency
						invoked.InvoiceAmount.ReportAmount1.ToCurrency			= DistributionAmount.ReportAmount1.ToCurrency
						invoked.InvoiceAmount.ReportAmount2.ToCurrency			= DistributionAmount.ReportAmount2.ToCurrency
						invoked.InvoiceAmount.ReportAmount3.ToCurrency			= DistributionAmount.ReportAmount3.ToCurrency
						invoked.InvoiceAmount.ReportAmount4.ToCurrency			= DistributionAmount.ReportAmount4.ToCurrency
						invoked.InvoiceAmount.ReportAmount5.ToCurrency			= DistributionAmount.ReportAmount5.ToCurrency
						
						invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate		= DistributionAmount.FunctionalAmount.EnteredCurrencyRate
						invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyRate		= DistributionAmount.AlternateAmount.EnteredCurrencyRate
						invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyRate		= DistributionAmount.AlternateAmount2.EnteredCurrencyRate
						invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyRate		= DistributionAmount.AlternateAmount3.EnteredCurrencyRate
						invoked.InvoiceAmount.ToFunctionalAmount.EnteredCurrencyRate	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyRate
						invoked.InvoiceAmount.ToAlternateAmount.EnteredCurrencyRate		= DistributionAmount.ToAlternateAmount.EnteredCurrencyRate
						invoked.InvoiceAmount.ToAlternateAmount2.EnteredCurrencyRate 	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyRate
						invoked.InvoiceAmount.ToAlternateAmount3.EnteredCurrencyRate 	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyRate
						invoked.InvoiceAmount.ProjectAmount.EnteredCurrencyRate		= DistributionAmount.ProjectAmount.EnteredCurrencyRate
						invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyRate		= DistributionAmount.ReportAmount1.EnteredCurrencyRate
						invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyRate		= DistributionAmount.ReportAmount2.EnteredCurrencyRate
						invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyRate		= DistributionAmount.ReportAmount3.EnteredCurrencyRate
						invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyRate		= DistributionAmount.ReportAmount4.EnteredCurrencyRate
						invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyRate		= DistributionAmount.ReportAmount5.EnteredCurrencyRate
						
						if  (TranAmt < 0)
							invoked.ReceivableInvoiceType							= "C"
							invoked.AlternateReceivableInvoiceType					= "C"
							invoked.ReceivableInvoice								= CrCompanyRel.CreditChargebackPrefix + "-" + CrCompanyRel.ZeroFilledLastCreditChargeback
							invoked.InvoiceAmount.CurrencyAmount							= DistributionAmount.CurrencyAmount * -1 
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount * -1 
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount		= DistributionAmount.AlternateAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ToFunctionalAmount.EnteredCurrencyAmount	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ToAlternateAmount.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ToAlternateAmount2.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ToAlternateAmount3.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ProjectAmount.EnteredCurrencyAmount		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount * -1
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount * -1
						else
							invoked.ReceivableInvoiceType							= "D"
							invoked.AlternateReceivableInvoiceType					= "D"
							invoked.ReceivableInvoice								= "CB-" + CrCompanyRel.ZeroFilledLastChargeback
							invoked.InvoiceAmount.CurrencyAmount							= DistributionAmount.CurrencyAmount 
							invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount	= DistributionAmount.FunctionalAmount.EnteredCurrencyAmount 
							invoked.InvoiceAmount.AlternateAmount.EnteredCurrencyAmount		= DistributionAmount.AlternateAmount.EnteredCurrencyAmount
							invoked.InvoiceAmount.AlternateAmount2.EnteredCurrencyAmount	= DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
							invoked.InvoiceAmount.AlternateAmount3.EnteredCurrencyAmount	= DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
							invoked.InvoiceAmount.ToFunctionalAmount.EnteredCurrencyAmount	= DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
							invoked.InvoiceAmount.ToAlternateAmount.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
							invoked.InvoiceAmount.ToAlternateAmount2.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
							invoked.InvoiceAmount.ToAlternateAmount3.EnteredCurrencyAmount	= DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
							invoked.InvoiceAmount.ProjectAmount.EnteredCurrencyAmount		= DistributionAmount.ProjectAmount.EnteredCurrencyAmount
							invoked.InvoiceAmount.ReportAmount1.EnteredCurrencyAmount		= DistributionAmount.ReportAmount1.EnteredCurrencyAmount
							invoked.InvoiceAmount.ReportAmount2.EnteredCurrencyAmount		= DistributionAmount.ReportAmount2.EnteredCurrencyAmount
							invoked.InvoiceAmount.ReportAmount3.EnteredCurrencyAmount		= DistributionAmount.ReportAmount3.EnteredCurrencyAmount
							invoked.InvoiceAmount.ReportAmount4.EnteredCurrencyAmount		= DistributionAmount.ReportAmount4.EnteredCurrencyAmount
							invoked.InvoiceAmount.ReportAmount5.EnteredCurrencyAmount		= DistributionAmount.ReportAmount5.EnteredCurrencyAmount
	
	            		invoked.Status												= 1
						invoked.InvoiceAmount.KeepRateAndAmount = true                                   
						invoked.BatchNumber											= RecKey.CrBatch
						invoked.ReceivableProcessLevel								= ProcessLevel

						invoked.ReceivableGeneralLedgerCode							= ReceivableProcessLevelRel.ReceivableGeneralLedgerCode
						invoked.GeneralLedgerDate									= RecKey.GlDate
						invoked.TransactionDate										= RecKey.GlDate

						invoked.ReceivableCrossReference.ReceivableInvoiceType		= RecKey.CrType
						invoked.ReceivableCrossReference.ReceivableInvoice			= RecKey.CrNbr
						invoked.Origin												= "E"
						invoked.Description											= Msg7 + RecKey.CrCompany + " " + RecKey.CrType  + " " + RecKey.CrNbr

						invoked.SalesRepresentative									= CrCompanyCustomerRel.SalesRepresentative
						invoked.TermsCode											= CrCompanyCustomerRel.DebitCreditMemoTermsCode

						invoked.OriginalCurrency									= OrigCurrency
				        invoked.CurrencyRateToCustomerGroupCurrency					= GroupRate
	    				invoked.CustomerGroupCurrencyMultiplicationOrDivision		= GroupMudv

	    				invoked.CurrencyMultiplicationOrDivision					= CurrMudv
	
						invoked.ReceivableChargebackCompany							= RecKey.CrCompany
						invoked.BalancingDistributionAmountCompanyCurrency			= DistributionAmount.FunctionalAmount.OutputCurrencyAmount 
						invoked.BankTransactionCode									= CrCompanyCustomerRel.BankTransactionCode
						invoked.BankTransactionType									= CrCompanyCustomerRel.BankTransactionCode.BankTransactionType
						if  (OrigCurrency != CrCompanyRel.Currency)
							invoked.RevalueCurrencyTransactions						= true

						invoked.System												= "AR"

					display "NewInvoiceStatus=<NewReceivableInvoice.Status>"

					invoke Create ReceivableInvoiceDetail
						assign result to NewInvoiceDetail
						fill in fields from NewReceivableInvoice.ReceivableInvoice
							except invoked.Description

						invoked.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	= NewReceivableInvoice.ReceivableInvoiceType
						invoked.AlternateReceivableInvoiceType						= NewReceivableInvoice.ReceivableInvoiceType
						invoked.ReceivableInvoiceDetail.Invoice						= NewReceivableInvoice.ReceivableInvoice
						invoked.ReceivableInvoiceDetail.PaymentSeq					= 1

						invoked.DueDate												= RecKey.GlDate
						invoked.Status												= 1
						if  (ProjectFl)
							invoked.Project											= Project
							invoked.ProjectContract									= ProjectContract
			
	            		invoked.InvoiceAmount.CurrencyAmount						= NewReceivableInvoice.InvoiceAmount.CurrencyAmount
						invoked.Desc												= Msg7 + RecKey.CrCompany + " " + RecKey.CrType + " "  + RecKey.CrNbr
						invoked.SortAmount											= DistributionAmount.FunctionalAmount.OutputCurrencyAmount 
						invoked.Sort1												= Sort1
						invoked.Sort2												= Sort2
						invoked.Sort3												= Sort3
						invoked.Sort4												= Sort4
						invoked.ApplicationCloseResult								= PrmApplicationCloseResult

					NewCompany														= NewInvoiceDetail.Company
					NewInvoiceType													= NewInvoiceDetail.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
					NewInvoice														= NewInvoiceDetail.ReceivableInvoiceDetail.Invoice
					NewSequence														= NewInvoiceDetail.ReceivableInvoiceDetail.PaymentSeq

					if  (CbDisputeCd entered)
						display "2955SummaryCbDispute"
						invoke CreateDisputeFromReceivableInvoice NewInvoiceDetailRel.ReceivableInvoiceDetail
							invoked.PrmInvoiceDisputeAmount							= NewInvoiceDetailRel.InvoiceAmount.CurrencyAmount
							invoked.PrmDisputeCode									= CbDisputeCd
							invoked.PrmDisputeDate									= DepositDate
							invoked.PrmOriginalDisputeAmount						= NewInvoiceDetailRel.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount
							invoked.PrmApplicationCloseResult						= PrmApplicationCloseResult
							invoked.PrmSkipOpenDisputeCheck							= true

					invoke UpdateCurrentBalance CrCompanyCustomerRel 
						invoked.TransactionDate										= RecKey.GlDate
						invoked.ChangeAmount										= DistributionAmount.FunctionalAmount.OutputCurrencyAmount 
						invoked.PrmBalanceType			    						= 4
						invoked.PrmReference										= NewReceivableInvoice.Reference
						
					invoke UpdatePeriodTotals CrCompanyCustomerRel
						invoked.Type												= "C"
						if (NewInvoiceDetailRel.AlternateReceivableInvoiceType.CreditMemo)
							invoked.Amount											= DistributionAmount.FunctionalAmount.OutputCurrencyAmount * -1 
						else
							invoked.Amount											= DistributionAmount.FunctionalAmount.OutputCurrencyAmount 

						invoked.EffectiveDate										= RecKey.GlDate


					invoke FastDelete

