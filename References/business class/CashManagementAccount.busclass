CashManagementAccount is a BusinessClass
	owned by cashmgmt
	prefix is CMCMA
	representative text is "<FinancialInstitutionBranch>-<CashManagementAccount>"
	representative image is Image.File
		display as portrait image
		missing image is random background
			foreground text is "<XiFinancialInstitutionBranchNameAbbreviation>"

	Ontology
		symbolic key is CashManagementAccount

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields
		Title									is Alpha up to 250
		Description								is Alpha up to 250
		AccountType								is Numeric 2
			States
				Operating			value is 1
				Debt				value is 2
				Investment			value is 3
				Escrow				value is 4
				Restricted			value is 5
				PettyCash			value is 6
				Other				value is 7
				Concentration		value is 8		
				Depository			value is 9		
				ZeroBalance			value is 10		
		InternationalBankAccountNumber 
			holds pii
		ImportAccountNumber						is Alpha 35
			default label is "ImportAccount"
		ReconcileToCashLedger					is Numeric 1
			States
				NotReconciled	value is 0
				Primary			value is 1
				Secondary		value is 2





		ReconcileToOtherSystem					is Numeric 1
			States
				NotReconciled	value is 0
				Primary			value is 1
				Secondary		value is 2
		ReconcileToForecast						is Numeric 1
			States
				NotReconciled	value is 0
				Primary			value is 1
				Secondary		value is 2
		ReconciliationMethod					is Numeric 1
			States
				UseReconciliationTemplates	value is 1
				UseReconciliationMatchRules	value is 2
		BankReconciliationMatchRuleGroup
		StatementLineClassification				is Numeric 1
			States
				UseProcessingRules	value is 1
				DefaultFromAccount	value is 2
		CashTransactionProcessingRuleGroup
		DefaultCategory							is a CashTransactionCategory
		AutoReconcileStatementLines				is Boolean
		CashCode
			default label is "PostingCashCode"
		DebitTransactionCode					is a BankTransactionCode
		CreditTransactionCode					is a BankTransactionCode
		CashLedgerTransactionNumbering			is Numeric 10
			default label is "AutoCreatedCashLedgerTransactionNumbering"
			disable Auditing													
		AutoReleaseCashLedgerTransactions		is Boolean
		Currency
		ReconciliationTolerancePercent 			is Percent 3
			default label is "TolerancePercent"
		ReconciliationToleranceAmount			is an InternationalAmount
			default label is "ToleranceAmount"
		FinancialInstitution
		FinancialInstitutionBranch
			context of FinancialInstitution
		CashManagementLocation
		BankClientIdentifier					is AlphaUpper 50
		GLAccount								is a FinanceCodeBlockFull
			default label is "CashPostingAccount"
		LedgerBalanceGLAccount					is a FinanceCodeBlock 			
			default label is "LedgerBalanceAccount"
		LegalEntity								is a GeneralLedgerCompany
			default label is "LegalEntity"
			disable surrogates
		Duration								is a DateRange
		OpenDate								is Date
		CloseDate								is Date
		BackofficeIntegration					is Numeric 1
			States
				AccountsPayable		value is 1
				AccountsReceivable	value is 2
				CashLedger			value is 3
		CashPositionTarget						is an InternationalAmount
		AccountRestriction						is Numeric 2
			default label is "CollateralRestriction"
			States
				Restricted			value is 1
				PartiallyRestricted	value is 2
				Unrestricted		value is 3
		AccountRestrictionDescription			is Alpha up to 250
		FundingStructure 						is Numeric size 1
			States
				ZBAMaster  			value is 1
				ZBAChild   			value is 2
				Standalone 			value is 3
		BAIFundsTypeVOffset						is Numeric 1
		ImportNotification
		CurrentReconMatchNumber					is a BankStatementReconciliation
			delete ignored
			disable Auditing
		ListOverListManualReconView				is Boolean	
		ReconVariancePostingAccount				is a FinanceCodeBlockFull
		Active
		ChecksIssued										is Boolean
		ElectronicFileTransmission							is Boolean
		NoBankStatementsExpected							is Boolean
			default label is "DoesNotReceiveBankStatements"
		DefaultJournalDescription				is Alpha up to 60
			Text Variables
				CashAccount			value is CashManagementAccount
				Category			value is CashTransactionCategory
		Image									is an ImageAttachment
		ApprovalCode
		BeginningAccountBalance								is an InternationalAmount
		AllowOneSidedReconciliations						is Boolean
		AllowLineCreationOnImportedStatements				is Boolean
		ReportingBasis

		BankAccountValidationType
			default label is "ValidationType"
		SendingFinancialInstitution				is a FinancialInstitution
		SendingFinancialInstitutionBranch		is a FinancialInstitutionBranch
			context of SendingFinancialInstitution
		CurrencyNumberOfDecimals				is an AcctNd
		CompletedReconLoadProcesses				is Numeric 3
			disable Auditing
		BackgroundGroupAsyncId 					is an AsyncActionRequest
			delete ignored
		WriteCSVHeader										is Boolean
			default label is "IncludeCSVHeaderRow"
		ConsolidateDetailAndRemittance						is Boolean
			default label is "ConsolidateCSVDetailAndRemittance"
		FTPConfiguration
		FTPHeaderFile										is Boolean
		FTPDetailFile										is Boolean
		FTPRemittanceFile									is Boolean
		Sepa												is Boolean
			classic name is SEPA-FLAG
			default label is "SEPA"
		SwiftID
			default label is "BIC"
		AllowMultipleStatementsPerDay						is Boolean	

		ReceivableProcessLevel
			default label is "CAMT\053_-_ReceivableProcessLevel"
		CreateReceivablePaymentsFromCAMT053					is Boolean
		AutomateReceivablePaymentImportFromCAMT053			is Boolean

		CreateReceivablePaymentThirdPartyPaymentProcessing	is Boolean	
			default label is "CreateReceivablePaymentFromThirdPartyPaymentProcessing"
		ThirdPartyPaymentProcessingReceivableProcessLevel	is a ReceivableProcessLevel	
			default label is "ThirdPartyPaymentProcessing_-_ReceivableProcessLevel"
		DefaultTransactionDate								is Numeric 2
			default label is "DefaultTransactionDateOnBankStatementLinesTo"
			States
				StatementDate		value is 0
				ValueDate			value is 1
		EditDuplicatesByAccount								is Boolean				
			default label is "EditDuplicateTransactionNumberByAccount"
		SaveAllVersionsOfReconciliationBalancesReport		is Boolean	
		ParsingRuleGroupArray

	Transient Fields










		RIBKey



	Context Fields
		FinanceResource
		ContextFinancialInstitution				is a FinancialInstitution
		ContextFinancialInstitutionBranch		is a FinancialInstitutionBranch
		ContextCashForecast						is a CashForecast
		SkipCashAccountAttachRule
		CashTransactionCategory



	Local Fields
		LocalCashForecast						is a CashForecast
		FirstParentIteration					is Boolean
		LocalParentLocationStructure			is Alpha up to 500
		FirstFullIteration						is Boolean
		LocalFullLocationStructure				is Alpha up to 500
		LocalFinanceResource					is like FinanceResource
		LocalCalendarPeriod						is Numeric 2
		LocalPeriodEndDate						is Date
		LocalBankStatementDate					is Date
		LocalDateRange							is a DateRange
		LocalToCurrency							is a ToCurrency
		BackgroundGroup							is AlphaUpper up to 50
		VerifyRIBKey
		ValidateBankAccountNumber
		LocalParsingRuleGroup					is a StatementParsingRuleGroup
		LocalOuterCounter						is Numeric 10
		LocalInnerCounter						is Numeric 10


	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCashManagementAccount"

		ContextMessageText is a MessageField
			restricted
			"CashManagementAccount<CashManagementAccount>"

		JournalDescription is a MessageField
			restricted
			"CashAccount:<CashManagementAccount>"

		CashManagementLocationParent is a DerivedField
			type is AlphaUpper 50
			restricted
			return CashManagementLocation.ParentCashLocation

		ParentLocationStructure is a DerivedField
			type is Alpha up to 500
			FirstParentIteration = true

			for each CashManagementLocation ancestors
				if (FirstParentIteration = true)
					LocalParentLocationStructure = each.CashManagementLocation
					FirstParentIteration = false
				else
					LocalParentLocationStructure = each.CashManagementLocation + "-" + LocalParentLocationStructure

			return LocalParentLocationStructure

		FullLocationStructure is a DerivedField
			type is Alpha up to 500
			restricted
			FirstFullIteration = true

			for each CashManagementLocation and ancestors
				if (FirstFullIteration = true)
					LocalFullLocationStructure = each.CashManagementLocation
					FirstFullIteration = false
				else
					LocalFullLocationStructure = each.CashManagementLocation + "-" + LocalFullLocationStructure

			return LocalFullLocationStructure

		LastPreviousDayBankStatement is a DerivedField
			type is Numeric size 12
			restricted
			return first LastPreviousDayStatementRel.BankStatement

		LastBankStatement is a DerivedField
			type is Numeric size 12
			restricted
			return first LastBankStatementRel.BankStatement

		CurrentReconMatchNumberLabel is a LabelField
			"MatchNumber:<CurrentReconMatchNumber>"

		OpenBankStatementLineAmount is a DerivedField
			type is like InternationalAmount
			return (sum UnreconciledStatementLinesRel.LineAmount + sum PendingStatementLinesRel.LineAmount)

		ReconcileToCashLedgerCount is a DerivedField
			type is Numeric 3
			restricted
			if (ReconcileToCashLedger entered)
				return 2 








		ReconcileToOtherSystemCount is a DerivedField
			type is Numeric 3
			restricted
			if (ReconcileToOtherSystem entered)
				return 1

		ReconcileToForecastCount is a DerivedField
			type is Numeric 3
			restricted
			if (ReconcileToForecast entered
			and ActiveForecastExists)
				return instance count of UnreconciledBankStatementWithForecastRel

		TotalReconciliationProcesses is a ComputeField
			type is Numeric 3
			restricted
			(ReconcileToCashLedgerCount + ReconcileToOtherSystemCount + ReconcileToForecastCount + 3)  

		FTPConfigurationName is a DerivedField
			type is Alpha 100
			if (FTPConfiguration.System)
				return "system"
			else
			if (FTPConfiguration.System1)
				return "system1"
			else
			if (FTPConfiguration.System2)
				return "system2"
			else
			if (FTPConfiguration.System3)
				return "system3"
			else
			if (FTPConfiguration.System4)
				return "system4"

		XiFinancialInstitutionBranchNameAbbreviation is a DerivedField
			type is AlphaUpper 3
			return FinancialInstitutionBranch

		ActiveStatus is a DerivedField
			type is Alpha 10
			if (!Active)
				return InactiveMessage
			if (Active)
				return ActiveMessage

		ActiveMsgField is a DerivedField
			type is MessageField
			if (!Active)
				return InactiveMessage

		ActiveMessage is a MessageField
			restricted
			"Active"

		InactiveMessage is a MessageField
			restricted
			"Inactive"

		CurrentReconciledBalance is a DerivedField			
			type is like InternationalAmount
			return sum CashCodesByBankAccountRel.CurrentReconciledBalance

		UnreconciledBalance is a DerivedField				
			type is like InternationalAmount
			return sum CashCodesByBankAccountRel.UnreconciledBalance

		UnreconciledRecordCount is a DerivedField			
			type is Numeric 10
			return sum CashCodesByBankAccountRel.UnreconciledRecordCount

	Field Rules

		CashManagementAccount

			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber			= CashManagementAccount
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

		Title
			default to CashManagementAccount

		Description
			default to Title

		AccountType
			initial value is 1
			required

		InternationalBankAccountNumber
			if (BankAccountValidationType.Iban
			or  BankAccountValidationType.IbanAndBIC)

				initialize ValidateBankAccountNumber
				ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
				ValidateBankAccountNumber.BankAccountNumber			= InternationalBankAccountNumber
				constraint (ValidateBankAccountNumber.IsValidBankAccount)
					"<ValidateBankAccountNumber.ErrorMessage>"

		ImportAccountNumber
			default to CashManagementAccount
			constraint (!DuplicateImportAccountNumberRel exists)
				"ImportAccountNumberIsAlreadyDefinedOnAccount<first DuplicateImportAccountNumberRel.CashManagementAccount>"

			if (ImportAccountNumber not = CashManagementAccount)
				initialize ValidateBankAccountNumber
				ValidateBankAccountNumber.BankAccountValidationType = BankAccountValidationType
				ValidateBankAccountNumber.BankAccountNumber			= ImportAccountNumber
				constraint (ValidateBankAccountNumber.IsValidBankAccount)
					"<ValidateBankAccountNumber.ErrorMessage>"

		LegalEntity
			required

		Currency
			required
			constraint (CashManagementGroup.Currency entered)
				"CorporateCurrencyRequiredOnCashManagementGroup"

			if (Currency != CashManagementGroup.Currency)
				constraint (CashManagementGroup.FinanceEnterpriseGroup.CurrencyTable entered)
					"CorporateCurrencyTableRequiredWhenAccountCurrencyIsDifferentFromCorporateCurrency"
				constraint (CashManagementGroup.StatementCurrencyGainLossCategory entered)
					"StatementCurrencyGainLossCategoryRequiredOnCashManagementGroupWhenAccountCurrencyIsDifferentFromCorporateCurrency"
				LocalToCurrency = CashManagementGroup.Currency
				constraint (CurrencyRelationshipRel exists)
					"CurrencyRelationshipBetween<Currency>AndTheCorporateCurrency<CashManagementGroup.Currency>DoesNotExist"

		FinancialInstitution
			required

		FinancialInstitutionBranch
			required

		BankClientIdentifier
			initial value is FinancialInstitutionBranch.BankClientIdentifier
			default to FinancialInstitutionBranch.BankClientIdentifier

		SendingFinancialInstitution
			default to FinancialInstitution

		SendingFinancialInstitutionBranch
			default to FinancialInstitutionBranch

		CashManagementLocation
			required
			constraint (!CashManagementLocation.HasChild)
				"CannotAttachASummaryLocationToAnAccount"

			if (Currency != CashManagementLocation.Currency)
				constraint (CashManagementGroup.FinanceEnterpriseGroup.CurrencyTable entered)
					"CorporateCurrencyTableRequiredWhenAccountCurrencyIsDifferentFromLocationCurrency"
				constraint (CashManagementGroup.StatementCurrencyGainLossCategory entered)
					"StatementCurrencyGainLossCategoryRequiredOnCashManagementGroupWhenAccountCurrencyIsDifferentFromLocationCurrency"
				LocalToCurrency = CashManagementLocation.Currency
				constraint (CurrencyRelationshipRel exists)
					"CurrencyRelationshipBetween<Currency>AndTheLocationCurrency<CashManagementLocation.Currency>DoesNotExist"

		OpenDate
			initial value is create date

		CloseDate
			if (OpenDate entered)
				constraint (CloseDate >= OpenDate)
					"CloseDateCannotPrecedeOpenDate"

		ReconcileToCashLedger
			if (ReconcileToCashLedger.Secondary)
				constraint (ReconcileToOtherSystem.Primary or ReconcileToForecast.Primary)
					"AtLeastOneReconciliationMustBePrimary"






		ReconcileToOtherSystem
			if (ReconcileToOtherSystem.Secondary)
				constraint (ReconcileToCashLedger.Primary or ReconcileToForecast.Primary)
					"AtLeastOneReconciliationMustBePrimary"

		ReconcileToForecast
			if (ReconcileToForecast.Secondary)
				constraint (ReconcileToCashLedger.Primary or ReconcileToOtherSystem.Primary)
					"AtLeastOneReconciliationMustBePrimary"

		ReconciliationMethod
			if (ReconcileToCashLedger.Primary
			or  ReconcileToCashLedger.Secondary
			or	ReconcileToOtherSystem.Primary
			or	ReconcileToOtherSystem.Secondary
			or  ReconcileToForecast.Primary
			or	ReconcileToForecast.Secondary)
				required

			if (ReconcileToCashLedger.NotReconciled
			and	ReconcileToOtherSystem.NotReconciled
			and ReconcileToForecast.NotReconciled)
				initialize

		BankReconciliationMatchRuleGroup
			if (ReconciliationMethod.UseReconciliationMatchRules)
				required
			else
				initialize

		CashTransactionProcessingRuleGroup
			if (StatementLineClassification.UseProcessingRules)
				required
			else
				initialize

		GLAccount
			default to CompanyCashCodeRel.CashAccount
			if (ReconcileToOtherSystem.Primary)
				required

		LedgerBalanceGLAccount										
			default to GLAccount

		ReconVariancePostingAccount
			if (ReconcileToOtherSystem.Primary)
				required

		StatementLineClassification
			if (HasPrimaryReconciliations)
				required
					"StatementLineClassificationIsRequiredWhenAReconciliationOptionIsSelected"

		DefaultCategory
			if (StatementLineClassification.DefaultFromAccount)
				required

		AccountRestriction
			if (!AccountRestriction entered)
				initialize AccountRestrictionDescription

		BAIFundsTypeVOffset
			default to 2

		Active
			initial value is true

		ReconciliationTolerancePercent
			constraint (!ReconciliationToleranceAmount entered)
				"EnterEitherToleranceAmountOrTolerancePercent"

			constraint (ReconcileToOtherSystem.Primary
			or			ReconcileToForecast.Primary)
				"MustReconcileToOtherSystemOrForecastToDefineReconciliationTolerances"

		ReconciliationToleranceAmount
			constraint (ReconcileToOtherSystem.Primary
			or			ReconcileToForecast.Primary)
				"MustReconcileToOtherSystemOrForecastToDefineReconciliationTolerances"

		CurrencyNumberOfDecimals
			default to Currency.NumberOfDecimals

		ApprovalCode
			if (ApprovalCodeRequired)
				required
					"ApprovalCodeRequiredWhenBankStatementDistributionApprovalIsSetOnCashManagementGroup"

		CashCode
			constraint (CashCode.BankAccountNumber = CashManagementAccount)
				"CashCodeMustBeSetUpForAccount:<CashManagementAccount>"
			if (ReconcileToCashLedger entered)
				required
					"CashCodeRequireWhenReconcilingToCashLedger"

		DebitTransactionCode
			if (ReconcileToCashLedger entered)
				required
					"DebitTransactionCodeRequireWhenReconcilingToCashLedger"
			constraint (DebitTransactionCode.TransactionType.DebitTransaction)
				"MustEnterADebitTypeTransactionCode"

		CreditTransactionCode
			if (ReconcileToCashLedger entered)
				required
					"CreditTransactionCodeRequiredWhenReconcilingToCashLedger"
			constraint (CreditTransactionCode.TransactionType.CreditTransaction)
				"MustEnterACreditTypeTransactionCode"

		ReportingBasis
			default to CashManagementGroup.ReportingBasis

		RIBKey
			initialize VerifyRIBKey
			VerifyRIBKey.BankEntity				= FinancialInstitutionBranch
			VerifyRIBKey.BankAccountNumber		= CashManagementAccount
			VerifyRIBKey.RIBKey					= RIBKey
			constraint (VerifyRIBKey.PerformVerifyRIBKey)
				"R\I\B_\KeyInvalid,_\Bank_&_\Account#DoNotEqualCalculatedKey"  

		DefaultJournalDescription
			default to "Cash account: {CashAccount}"

		SwiftID 
			if (BankAccountValidationType.IbanAndBIC)	
				required
					"BICNumberRequiredForIBANAndBICValidationType"




		FTPConfiguration
			if (FTPHeaderFile
			or	FTPDetailFile
			or	FTPRemittanceFile)
				required

		ReceivableProcessLevel
			if (CreateReceivablePaymentsFromCAMT053)
				required
					"ReceivableProcessLevelRequiredWhenCreateReceivablePaymentsFromCAMT053IsSelected"

		CreateReceivablePaymentsFromCAMT053
			if (AutomateReceivablePaymentImportFromCAMT053)
				required
					"CreateReceivablePaymentsFromCAMT053RequiredWhenAutomateReceivablePaymentImportFromCAMT053IsSelected"

		AutomateReceivablePaymentImportFromCAMT053
			force default to false	

		CreateReceivablePaymentThirdPartyPaymentProcessing	
			if (CreateReceivablePaymentThirdPartyPaymentProcessing = true)
				constraint (ReceivableCompanyInCustomerGroupSetupForPortalPayments)
					"Legal_\Entity(\Receivable_\Company)IsNotInA_\Customer_\GroupThatIsDefinedFor_\Portal_\Payments."
			if (CreateReceivablePaymentThirdPartyPaymentProcessing = false
			and ThirdPartyPaymentProcessingReceivableProcessLevel entered)
				initialize ThirdPartyPaymentProcessingReceivableProcessLevel

		ThirdPartyPaymentProcessingReceivableProcessLevel	
			if (CreateReceivablePaymentThirdPartyPaymentProcessing)
				required
					"Third_\Party_\Payment_\Processing_\Receivable_\Process\LevelRequiredWhen_\Create_\Receivable_\Payment_\Third_\Party_\Payment_\ProcessingIsSelected"

		CashLedgerTransactionNumbering																		
			if (CashLedgerTransactionNumbering changed
			and CashLedgerTransactionNumbering < old CashLedgerTransactionNumbering)							
				confirmation required
					"ChangingTransactionNumberingToASmallerNumberCouldCauseDuplicateRecordErrors;Continue"
		
		ParsingRuleGroupArray       
            LocalOuterCounter = 1
            for each ParsingRuleGroupArray.ParsingMapping 
                if (each.ParsingRuleGroup entered)
                    LocalParsingRuleGroup = each.ParsingRuleGroup
                    LocalInnerCounter = 1
                    for each each
                        if (each.ParsingRuleGroup entered)
                            if (LocalInnerCounter != LocalOuterCounter
                            and LocalParsingRuleGroup = ParsingRuleGroupArray.ParsingMapping[LocalInnerCounter].ParsingRuleGroup)
                                constraint (false)
                                    "ParsingRuleGroup<LocalParsingRuleGroup>IsDefinedForMultipleParsedDataFields"
                                end for each
                            else    
                                LocalInnerCounter += 1
                    LocalOuterCounter += 1
                else
                    end for each

	Conditions
		IsOperatingAccount
			restricted
			when (AccountType.Operating)

		IsDebtAccount
			restricted
			when (AccountType.Debt)

		IsInvestmentAccount
			restricted
			when (AccountType.Investment)





		HasAnySecondaryReconciliations
			restricted
			when (ReconcileToCashLedger.Secondary
			or	  ReconcileToOtherSystem.Secondary
			or	  ReconcileToForecast.Secondary)

		NoReconciliationOptionDefined
			restricted
			when (ReconcileToCashLedger.NotReconciled
			and   ReconcileToOtherSystem.NotReconciled
			and   ReconcileToForecast.NotReconciled)
			
		HasResources
			restricted
			when (CashManagementAccountResourceRel exists)

		IsNotACashManagementAccountResource
			restricted
			when (!CashManagementAccountResourceContextRel exists)

		HasIntermediaryBank
			restricted
			when (FinancialInstitutionBranchIntBankRel exists)





		HasOnlineUsers
			restricted
			when (CashManagementAccountResourceOnlineUserRel exists)

		HasSigners
			restricted
			when (CashManagementAccountResourceSignersRel exists)

		HasApprovers
			restricted
			when (CashManagementAccountResourceApproverRel exists)

		HasInitiators
			restricted
			when (CashManagementAccountResourceIntiateTransferRel exists)

		AccountCurrencyDifferentFromBase
			restricted
			when (Currency	!= CashManagementGroup.Currency)

		AccountCurrencyDifferentFromCompany
			restricted
			when (Currency	!= LegalEntity.Currency)

		AccountCurrencyDifferentFromLocation
			restricted
			when (Currency	!= CashManagementLocation.Currency)

		HasDifferentBaseOrCompanyOrLocationCurrency
			restricted
			when (AccountCurrencyDifferentFromBase
			or	AccountCurrencyDifferentFromCompany
			or	AccountCurrencyDifferentFromLocation)

		HasPrimaryReconciliations
			restricted
			when (ReconcileToCashLedger.Primary
			or    ReconcileToOtherSystem.Primary
			or    ReconcileToForecast.Primary)
			
		OnlyReconcileToCashLedger
			restricted
			when (ReconcileToCashLedger.Primary

			and  !ReconcileToOtherSystem.Primary
			and  !ReconcileToForecast.Primary)







		OnlyReconcileToOtherSystem
			restricted
			when (ReconcileToOtherSystem.Primary

			and  !ReconcileToCashLedger.Primary
			and  !ReconcileToForecast.Primary)

		OnlyReconcileToForecast
			restricted
			when (ReconcileToForecast.Primary

			and  !ReconcileToOtherSystem.Primary
			and  !ReconcileToCashLedger.Primary)

		IsInactive
			restricted
			when (!Active)

		IsInactiveWithActiveCashCode		
			when (!Active
			and   ActiveCashCodesRel exists)

		SameInstitutionAsBankServiceStatement
			restricted
			when (FinancialInstitution = ContextFinancialInstitution)

		SameFinancialInstitutionBranch
			restricted
			when (FinancialInstitution = ContextFinancialInstitution
			and	  FinancialInstitutionBranch = ContextFinancialInstitutionBranch)

		AccountIsOnForecast
			restricted
			when (CashForecastAccountRel exists)

		HasCurrentReconciliationTransactions
			restricted
			when (CurrentReconMatchNumber	entered)

		CurrentReconciliationCanBeReconciled
			restricted
			when (CurrentReconMatchNumber.SummaryRecordCanBeReconciled)

		HasBankStatements
			restricted
			when (BankStatement set exists)

		HasUnreconciledStatements
			restricted
			when (UnreconciledBankStatementByDateRel exists)

		ActiveForecastExists
			restricted
			when (ActiveCashForecastAccountRel exists)

		HasCashCodes
			when (CashCodeRel exists)

		HasMatchedTransactions
			restricted
			when (MatchedReconciliationsForAccountRel exists)

		HasCashLedgerReconciledVariances
			restricted
			when (CashLedgerReconciledVariancesRel exists)

		HasNonCashLedgerDistributions
			restricted
			when (NonCashLedgerDistributionRel exists)

		HasNonFinishedTriggers
			restricted
			when (BackgroundGroupNonFinishedTriggersRel exists)

		ApprovalCodeRequired
			restricted
			when (CashManagementGroup.BankStatementDistribApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForBankStatementDist)

		SecurityGroupAllowsAccess
			restricted
			when ((CashCode entered
			and	CashCode.SecurityGroupAllowsAccess)
			or	 CashCode !entered)

		ReceivableCompanyInCustomerGroupSetupForPortalPayments	
			restricted
			when (ReceivableCompanyRel.CustomerGroupRel.ThirdPartyPaymentProcessingSetupsCompleteLessCashManagementAccount)


		UsesListOverListManualReconView
			restricted
			when (!CashManagementAccountReconciliationViewRel exists
			or	  CashManagementAccountReconciliationViewRel.UseListOverListView)
			
	Attach Rules
		if  (parentcontext.name != "BankStatementTotal"
		and	 parentcontext.name != "CashAccountCorrespondence"
		and	 parentcontext.name != "CashManagementAccount"
		and	 parentcontext.name != "CashCodeCashPosition"							
		and	 parentcontext.name != "CashLedgerBankUpdate"							
		and	 parentcontext.name != "CashLedgerBatchApproval"						
		and	 parentcontext.name != "CashLedgerElectronicFundsTransferTransaction"	
		and	 parentcontext.name != "CashLedgerPayablesPayment"						
		and	 parentcontext.name != "CashLedgerPayment"								
		and	 parentcontext.name != "CashLedgerReconciliationAdjustment"				
		and	 parentcontext.name != "CashLedgerReturnedPayment"						
		and	 parentcontext.name != "CashLedgerTransaction"							
		and	 parentcontext.name != "EFTExtractOutputFileHeader"						
		and	 parentcontext.name != "EFTExtractOutputFileDetail"						
		and	 parentcontext.name != "FlatFileOutput"									
		and	 parentcontext.name != "PaymentOutputFileHeader"						
		and	 parentcontext.name != "PaymentOutputFileDetail"						
		and	 parentcontext.name != "PaymentOutputFileRemittance"					
		and	 parentcontext.name != "BankStatementReconciliation"					
		and	 parentcontext.name != "DirectForecastDetail"							
		and	 parentcontext.name != "DirectForecastDetailImport"						
		and	 parentcontext.name != "DirectForecastSummary"							
		and	 parentcontext.name != "WireTransferOutputDetail"						
		and  !SkipCashAccountAttachRule)
			constraint (Active)
				"Account<CashManagementAccount>IsInactive"		



	Relations
		BankStatementByDateRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount

		BankStatementForDateRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			Instance Selection
				where (related.StatementDate	>= LocalBankStatementDate)

		LastPreviousDayStatementRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDescendDate
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			Instance Selection
				where (related.StatementType.PreviousDay)

		LastBankStatementRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDescendDate
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount

		UnpostedBankStatementRel
			one-to-many relation to BankStatement
			Field Mapping uses ByPostingStatus
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.PostingStatus				= "0"
			Instance Selection
				where (related.StatementStatus		= "1"
				or	 related.StatementStatus		= "2")

		ReleasedBankStatementRel	
			one-to-many relation to BankStatement
			Field Mapping uses ByPostingStatus
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.PostingStatus				= "4"	
			Instance Selection
				where (related.StatementStatus		= "1"
				or	 related.StatementStatus		= "2")

		UnreconciledBankStatementByDateRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.StatementType.PreviousDay
				and	related.StatementStatus.Unreconciled)

		BankStatementsThatCanBeReconciledRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.StatementType.PreviousDay
				and	related.StatementStatus.Unreconciled
				and	related.StatementCanBeReconciled)

		UnreconciledBankStatementWithForecastRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.StatementType.PreviousDay
				and	related.StatementStatus.Unreconciled
				and	related.ActiveForecastExists)

		MainContactRel is a CashManagementAccountResource set
			Instance Selection
				where (related.MainContact)

		CashManagementAccountResourceRel is a CashManagementAccountResource set

		UnmatchedReconciliationsForAccountRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByAccountSummaryRecord
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.SummaryRecord			= false
			Instance Selection
				where (!related.LineStatus.Reconciled
				and	related.ReconMatchNumber	!entered)

		MatchedReconciliationsForAccountRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByAccountSummaryRecord
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.SummaryRecord			= true

		ReconciliationsForAccountBySummaryRecordRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByAccountSummaryRecord
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.SummaryRecord			= true

		AllReconciliationsforAccountRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			Instance Selection
				where (!related.SummaryRecord)

		CurrentReconciliationLinesRel is a BankStatementReconciliation set
			Instance Selection
				where (CurrentReconMatchNumber entered
				and	related.ReconMatchNumber				= CurrentReconMatchNumber)

		UnreconciledStatementLinesRel
			one-to-many relation to BankStatementLine
			Field Mapping uses	ByReconciledStatusByAccount
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.LineStatus				= 0 

		PendingStatementLinesRel
			one-to-many relation to BankStatementLine
			Field Mapping uses	ByReconciledStatusByAccount
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.LineStatus				= 2 

		CurrentMatchedTransactionsRel is a BankStatementReconciliation set
			Instance Selection
				where (CurrentReconMatchNumber entered
				and   (related.BankStatementReconciliation	= CurrentReconMatchNumber
				or	 related.ReconMatchNumber				= CurrentReconMatchNumber))

		CashForecastAccountDateOverlapRel
			one-to-many relation to CashForecastAccount
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup 		  			  = CashManagementGroup
				related.CashForecastAccount.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.UniqueID != UniqueID
				and	LocalCashForecast.ForecastDateRange.Begin within related.CashForecast.ForecastDateRange
				or	 LocalCashForecast.ForecastDateRange.End within related.CashForecast.ForecastDateRange)

		FinanceResourceRel 
			one-to-many relation to FinanceResource
			Field Mapping uses symbolic key
				related.HROrganization = CashManagementGroup.HROrganization

		DuplicateImportAccountNumberRel
			one-to-many relation to CashManagementAccount
			Field Mapping uses ByImportAccountNumber
				related.ImportAccountNumber = ImportAccountNumber
				related.CashManagementGroup = CashManagementGroup
			Instance Selection
				where (related.UniqueID != UniqueID)

		CashManagementAccountResourceHelperRel
			one-to-one relation to CashManagementAccountResource
			Field Mapping uses symbolic key			
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
				related.FinanceResource 	  = LocalFinanceResource

		FinancialInstitutionBranchIntBankRel
			one-to-many relation to FinancialInstitutionBranchIntBank
			Field Mapping uses ByCurrency
				related.CashManagementGroup			= CashManagementGroup
				related.FinancialInstitution		= FinancialInstitution
				related.FinancialInstitutionBranch	= FinancialInstitutionBranch
				related.Currency					= Currency








		CashManagementAccountResourceContextRel
			one-to-one relation to CashManagementAccountResource
			Field Mapping uses symbolic key
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
				related.FinanceResource 	  = FinanceResource

		CashManagementAccountResourceSignersRel
			one-to-many relation to CashManagementAccountResource
			Field Mapping uses symbolic key			
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.ActiveSigner)

		CashManagementAccountResourceOnlineUserRel
			one-to-many relation to CashManagementAccountResource
			Field Mapping uses symbolic key			
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.ActiveOnlineUser)
				
		CashManagementAccountResourceApproverRel
			one-to-many relation to CashManagementAccountResource
			Field Mapping uses symbolic key
				related.CashManagementGroup	  = CashManagementGroup
				related.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.ActiveTransferApprover)

		CashManagementAccountResourceIntiateTransferRel
			one-to-many relation to CashManagementAccountResource
			Field Mapping uses symbolic key
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			Instance Selection
				where (related.ActiveTransferInitiator)

		IncomingBankStatementDetailRel
			one-to-many relation to IncomingBankStatementDetail
			delete cascades
			Field Mapping uses ByAccount
				related.EnterpriseGroup				= CashManagementGroup.EnterpriseGroup
				related.SystemCalendar 				= CashManagementGroup.CorporateCalendar
				related.IncomingBankStatementDetail	= CashManagementAccount

		CashCodeRel
			one-to-many relation to CashCode
			Field Mapping uses Set3
				related.CashManagementGroup			= CashManagementGroup
				related.FinancialInstitution		= FinancialInstitution
				related.FinancialInstitutionBranch	= FinancialInstitutionBranch
				related.BankAccountNumber			= CashManagementAccount

		CashCodesByBankAccountRel
			one-to-many relation to CashCode
			Field Mapping uses ByBankAccount
				related.CashManagementGroup			= CashManagementGroup
				related.BankAccountNumber			= CashManagementAccount

		ActiveCashCodesRel		
			one-to-many relation to CashCode
			Field Mapping uses ByBankAccount
				related.CashManagementGroup			= CashManagementGroup
				related.BankAccountNumber			= CashManagementAccount
			Instance Selection
				where (related.Active)

		CompanyCashCodeRel
			one-to-one relation to CompanyCashCode
			Field Mapping uses symbolic key
				related.Company  = LegalEntity
				related.CashCode = CashCode

		HasStatementsWithinRangeRel
			one-to-many relation to BankStatement
			Field Mapping uses ByAccountDate
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			Instance Selection
				where (related.StatementDate within LocalDateRange)

		CashForecastAccountRel
			one-to-one relation to CashForecastAccount
			Field Mapping uses symbolic key
				related.CashManagementGroup						  = CashManagementGroup
				related.CashForecast							  = ContextCashForecast
				related.CashForecastAccount.CashManagementAccount = CashManagementAccount

		ActiveCashForecastAccountRel
			one-to-many relation to CashForecastAccount
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup						  = CashManagementGroup
				related.CashForecastAccount.CashManagementAccount = CashManagementAccount
			Instance Selection
				where (related.CashForecast.Status.Active)

		CurrencyRelationshipRel
			one-to-one relation to CurrencyRelationship
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				 = CashManagementGroup
				related.CurrencyRelationship.FromCurrency	 = Currency
				related.CurrencyRelationship.ToCurrency		 = LocalToCurrency

		CashLedgerReconciledVariancesRel
			one-to-many relation to CashLedgerReconciliationAdjustment
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		 = CashManagementGroup
				related.CashManagementAccount	 = CashManagementAccount
				related.Status					 = "0"

		NonCashLedgerDistributionRel is a NonCashLedgerDistribution set
			Instance Selection
				where (!related.Status.Posted)

		BackgroundGroupNonFinishedTriggersRel
			one-to-many relation to AsyncActionRequest
			Field Mapping uses ByBackgroundGroup
				related.BackgroundGroup = BackgroundGroupAsyncId
			Instance Selection
				where (related.BackgroundGroup entered
				and	   related.NonFinishedTriggersExist)

		PfiConfigurationRel
			one-to-one relation to PfiConfiguration
			Field Mapping uses symbolic key
				related.PfiConfiguration = FTPConfigurationName

		ReceivableCompanyRel	
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company	= LegalEntity

		CashManagementAccountReconciliationViewRel
			one-to-one relation to CashManagementAccountReconciliationView
			Field Mapping uses symbolic key
				related.CashManagementGroup		 = CashManagementGroup
				related.CashManagementAccount	 = CashManagementAccount
				related.Actor					 = actor

		NonCashLedgerTransactionRel
			one-to-many relation to NonCashLedgerTransaction
			Field Mapping uses ByTransactionNumber
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
			
	Sets
		ByAccountType
			Sort Order
				CashManagementGroup
				AccountType
				CashManagementAccount

		ByCashManagementAccount
			Sort Order
				CashManagementAccount
				CashManagementGroup

		ByImportAccountNumber
			Sort Order
				ImportAccountNumber
				CashManagementGroup
				CashManagementAccount

		ByFinancialInstitution
			Sort Order
				CashManagementGroup
				FinancialInstitution
				FinancialInstitutionBranch
				CashManagementAccount

		ByLocation
			Sort Order
				CashManagementGroup
				CashManagementLocation
				LegalEntity
				FinancialInstitution
				FinancialInstitutionBranch
				CashManagementAccount

		ByParsingRuleGroupArray
			Sort Order
				CashManagementGroup
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[1]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[2]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[3]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[4]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[5]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[6]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[7]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[8]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[9]
				ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup[10]
				CashManagementAccount



	Rule Blocks
		UpdateCashCodes
			invoke Update CashCodesByBankAccountRel
				invoked.Sepa 								= Sepa
				invoked.SwiftID 							= SwiftID
				invoked.BankAccountValidationType 			= BankAccountValidationType
				invoked.FinancialInstitution 				= FinancialInstitution
				invoked.FinancialInstitutionBranch 			= FinancialInstitutionBranch
				invoked.SendingFinancialInstitution 		= SendingFinancialInstitution			
				invoked.SendingFinancialInstitutionBranch	= SendingFinancialInstitutionBranch
				invoked.Currency 							= Currency



	Actions
		Create is a Create Action
			Exit Rules
				if (CashCodesByBankAccountRel exist)
					include UpdateCashCodes

		SendCorrespondence is an Instance Action
			Parameters
				To								is Numeric 2
					States
						InternalContact		value is 1
						InstitutionContact	value is 2
						Email				value is 3
				ToCorrespondenceEmail
				FromEmail 						is an EmailAddress 
					holds pii
					default label is "From"
				Subject							is Alpha size up to 250
				Content							is Text
				Attachment
				SentTimeStamp					is TimeStamp
					default label is "Sent"
				Resolved						is Boolean



			Parameter Rules
				ToCorrespondenceEmail
					required
						"ToEmailAddressIsRequired"

				FromEmail
					initial value is actor.agent(Employee).EmployeeWorkEmailAddress
					required

				Subject
					required
						"EmailSubjectIsRequired"

				Content
					required
						"EmailContentIsRequired"

			Action Rules
				invoke SendCorrespondence CashAccountCorrespondence set


					invoked.ToCorrespondenceEmail		= ToCorrespondenceEmail
					invoked.FromEmail					= FromEmail
					invoked.Subject						= Subject
					invoked.Content						= Content
					invoked.Attachment					= Attachment
					invoked.Resolved					= Resolved



		Update is an Update Action
			Exit Rules
				if (CashCodesByBankAccountRel exist)
					if (Sepa changed
					or	SwiftID changed
					or  BankAccountValidationType changed
					or  FinancialInstitution changed
					or  FinancialInstitutionBranch changed
					or  SendingFinancialInstitution changed
					or  SendingFinancialInstitutionBranch changed
					or  Currency changed)
						include UpdateCashCodes


		UpdateCashLedgerTransactionNumbering is an Instance Action	
			default label is untranslatable
			restricted
			refresh and lock this instance
			Action Rules
				CashLedgerTransactionNumbering += 1


		Delete is a Delete Action



		CreateForecastAccount is an Instance Action 
			Parameters
				PrmCashManagementGroup	is a CashManagementGroup
				PrmCashForecast			is a CashForecast

			Parameter Rules
				PrmCashManagementGroup
					required

				PrmCashForecast
					required

			Action Rules
				constraint (PrmCashForecast.IsUpdatable)
					"CashForecast<PrmCashForecast>MustBeInANewOrActiveStatusToUpdate"
				if (PrmCashForecast.HaveBuiltForecast)
					invoke AddAccount CashForecastAccount
						invoked.CashManagementGroup 					  = PrmCashManagementGroup
						invoked.CashForecast 							  = PrmCashForecast
						invoked.CashForecastAccount.CashManagementAccount = CashManagementAccount
				else
					invoke Create CashForecastAccount
						invoked.CashManagementGroup 					  = PrmCashManagementGroup
						invoked.CashForecast 							  = PrmCashForecast
						invoked.CashForecastAccount.CashManagementAccount = CashManagementAccount


		ClearCurrentReconciliationList is an Instance Action
			valid when (HasCurrentReconciliationTransactions)
			Action Rules
				if (!CurrentReconMatchNumber descendants exist)
					invoke Purge CurrentReconMatchNumber
				initialize 	CurrentReconMatchNumber


		ReconcileSelectedTransactions is an Instance Action
			valid when (CurrentReconciliationCanBeReconciled)
			Action Rules
				invoke ReconcileSelectedMatchedTransactions CurrentReconMatchNumber


		UpdateCurrentReconMatchNumber is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmReconMatchNumber	is a BankStatementReconciliation
			Action Rules
				CurrentReconMatchNumber	= PrmReconMatchNumber


		UpdateStatementPostedStatus is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				invoke UpdatePostedStatus ReleasedBankStatementRel	
				if (UnpostedBankStatementRel exists)				
					invoke UpdatePostedStatus UnpostedBankStatementRel


		SwitchToCombinedListView is an Instance Action
			valid when (UsesListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView
					invoked.UseCombinedListView	= true

		SwitchToListOverListView is an Instance Action
			valid when (!UsesListOverListManualReconView)
			Action Rules
				invoke SwitchReconciliationListView
					invoked.UseListOverListView	= true

		SwitchReconciliationListView is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				UseListOverListView	is Boolean
				UseCombinedListView	is Boolean

			Action Rules
				invoke Update CashManagementAccountReconciliationViewRel
					if (UseListOverListView)
						invoked.UseListOverListView		= true
						invoked.UseCombinedListView 	= false
					else
						invoked.UseCombinedListView		= true
						invoked.UseListOverListView		= false
					invoked.Actor						= actor
						
		CreateAccountResource is an Instance Action 
			Parameters
				CashManagementGroup
				FinanceResource

			Parameter Rules
				CashManagementGroup		required
				FinanceResource			required

			Action Rules
				LocalFinanceResource = FinanceResource
				constraint (!CashManagementAccountResourceHelperRel exists)
					"<FinanceResource.SearchName>IsAlreadyAttachedToAccount<CashManagementAccount>"

				invoke Create CashManagementAccountResource
					invoked.CashManagementGroup 	= CashManagementGroup
					invoked.CashManagementAccount 	= CashManagementAccount
					invoked.FinanceResource		  	= FinanceResource
					invoked.Active				  	= true


		MassUpdateCurrencyRates is a Set Action
			restricted
			run in background
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmDateRange					is a DateRange
				PrmCashManagementAccount		is a CashManagementAccount
				PrmRevalueUsingPeriodEndRate	is Boolean

			Parameter Rules
				PrmDateRange					required

			Sort Order
				CashManagementGroup
				CashManagementAccount

			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and  ((PrmCashManagementAccount	entered
				and	CashManagementAccount	= PrmCashManagementAccount)
				or	 PrmCashManagementAccount	!entered))

			Action Rules
				Instance Rules
					invoke UpdateStatementCurrencyRates
						invoked.PrmDateRange					= PrmDateRange
						invoked.PrmRevalueUsingPeriodEndRate	= PrmRevalueUsingPeriodEndRate


		MassLoadAndReconcile is an Instance Action
			completion message is "MassLoadAndReconcileHasBeenSubmittedToTheQueueForProcessing"
			Action Rules
				invoke MassLoadAndReconcileSet
					invoked.PrmCashManagementGroup = CashManagementGroup


		MassLoadAndReconcileSet is a Set Action
			default label is untranslatable
			restricted
			run in background
			Parameters
				PrmCashManagementGroup	is a CashManagementGroup
					default label is "CashManagementGroup"

			Parameter Rules
				PrmCashManagementGroup
					initial value is actor.context.FinanceEnterpriseGroup
					force default to actor.context.FinanceEnterpriseGroup

			Sort Order
				CashManagementGroup
				AccountType
				CashManagementAccount

			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
				and    HasUnreconciledStatements)

			Action Rules
				Instance Rules
					if (!HasNonFinishedTriggers)
						BackgroundGroup = CashManagementGroup + current corporate date
						invoke InvokedLoadAndReconcile in background group(BackgroundGroup)
							assign async background group id to BackgroundGroupAsyncId
							invoked.PrmMassAccountLoad	   = true


		LoadAndReconcile is an Instance Action
			completion message is "LoadAndReconcileHasBeenSubmittedToTheQueueForProcessing"
			Action Rules
				constraint (!HasNonFinishedTriggers)
					"CannotLoadAndReconcile;OtherReconciliationProcessesRunning"
				BackgroundGroup = CashManagementGroup + CashManagementAccount + current corporate date
				invoke InvokedLoadAndReconcile in background group(BackgroundGroup)
					assign async background group id to BackgroundGroupAsyncId


		InvokedLoadAndReconcile is an Instance Action
			default label is untranslatable
			run in background
			restricted
			Parameters
				PrmMassAccountLoad	is Boolean

			Action Rules
				initialize CompletedReconLoadProcesses
				if (PrmMassAccountLoad)
					BackgroundGroup = CashManagementGroup + current corporate date
				else
					BackgroundGroup = CashManagementGroup + CashManagementAccount + current corporate date

				invoke LoadLinesIntoReconciliation BankStatementLine in background group(BackgroundGroup)
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount
					invoked.PrmMassAccountLoad			= PrmMassAccountLoad

				invoke LoadLineDetailsIntoReconciliation BankStatementLineDetail in background group(BackgroundGroup)
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount
					invoked.PrmMassAccountLoad			= PrmMassAccountLoad
							
				invoke ProcessMatchRulesForBlankLineMatchField BankStatementReconciliation in background group(BackgroundGroup)	
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount
					invoked.PrmMassAccountLoad			= PrmMassAccountLoad

				if (ReconcileToCashLedger entered)






					invoke LoadCBTransIntoReconciliation CashLedgerTransaction in background group(BackgroundGroup)
						invoked.PrmCashManagementGroup		= CashManagementGroup
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmMassAccountLoad			= PrmMassAccountLoad
					
					invoke LoadLineDetailsIntoReconciliation CashLedgerTransactionDetail in background group(BackgroundGroup)
						invoked.PrmCashManagementGroup		= CashManagementGroup
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmMassAccountLoad			= PrmMassAccountLoad

				if (ReconcileToOtherSystem entered)
					invoke LoadTransactionsIntoReconciliation NonCashLedgerTransaction in background group(BackgroundGroup)
						invoked.PrmCashManagementGroup		= CashManagementGroup
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmMassAccountLoad			= PrmMassAccountLoad

				if (ReconcileToForecast entered
				and ActiveForecastExists)
					invoke MassLoadCashForecast UnreconciledBankStatementWithForecastRel in background group(BackgroundGroup)
						invoked.PrmMassAccountLoad			= PrmMassAccountLoad


		ReconcileStatementLines	is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmMassAccountLoad	is Boolean

			Action Rules
				if (PrmMassAccountLoad)
					BackgroundGroup = CashManagementGroup + current corporate date
				else
					BackgroundGroup = CashManagementGroup + CashManagementAccount + current corporate date
				invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount
					invoked.PrmBankStatement			= first BankStatementsThatCanBeReconciledRel.BankStatement
					invoked.PrmMassReconcile			= true


		UpdateStatementCurrencyRates is an Instance Action
			valid when (HasDifferentBaseOrCompanyOrLocationCurrency)
			Parameters
				PrmOverrideBaseCurrencyRate     is a CurrencyExchangeRate
				PrmOverrideCompanyCurrencyRate	is a CurrencyExchangeRate
				PrmOverrideLocationCurrencyRate	is a CurrencyExchangeRate
				PrmRevalueUsingPeriodEndRate	is Boolean
				PrmDateRange					is a DateRange

 			Parameter Rules
		 		PrmDateRange
		 			required
		 				"StatementDateRangeIsRequired"

 				PrmRevalueUsingPeriodEndRate
 					constraint (PrmOverrideBaseCurrencyRate		!entered
 					and			PrmOverrideCompanyCurrencyRate	!entered
 					and			PrmOverrideLocationCurrencyRate	!entered)
 						"CannotEnterOverrideRatesAndSelectRevalueUsingPeriodEndRate"

			Action Rules
				if (HasDifferentBaseOrCompanyOrLocationCurrency)
					LocalDateRange = PrmDateRange
					if (HasStatementsWithinRangeRel exists)
						LocalBankStatementDate = PrmDateRange.Begin
						invoke UpdateCurrencyRate first BankStatementForDateRel
							invoked.PrmOverrideBaseCurrencyRate		= PrmOverrideBaseCurrencyRate
							invoked.PrmOverrideCompanyCurrencyRate	= PrmOverrideCompanyCurrencyRate
							invoked.PrmOverrideLocationCurrencyRate	= PrmOverrideLocationCurrencyRate
							invoked.PrmRevalueUsingPeriodEndRate	= PrmRevalueUsingPeriodEndRate
							invoked.PrmUpdateThroughDate			= PrmDateRange.End

		DeleteOpenReconciliationTransactions is an Instance Action
 			confirmation required
  			completion message is "DeleteOpenReconciliationTransactionsHasBeenSubmittedToTheQueueForProcessing"
			Action Rules
				constraint (!HasNonFinishedTriggers)
					"CannotDeleteOpenReconciliationTransactions;OtherReconciliationProcessesRunning"
				invoke DeleteOpenTransactionLines BankStatementReconciliation
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount


		DeleteStatementReconciliationDetails	is an Instance Action
			confirmation required
				"ThisWillDeleteReconciliationDetailForAllUnreconciledUnmatchedBankStatementsForAccount;DoYouWishToContinue?"
			completion message is "DeleteStatementReconciliationDetailsHasBeenSubmittedToTheQueueForProcessing"
			Action Rules
				constraint (!HasNonFinishedTriggers)
					"CannotDeleteStatementReconciliationDetails;OtherReconciliationProcessesRunning"
				invoke DeleteReconciliationDetailsForAccount BankStatement
					invoked.PrmCashManagementGroup		= CashManagementGroup
					invoked.PrmCashManagementAccount	= CashManagementAccount




		UpdateSendingFinancialInstitutions is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"

			Parameter Rules
				PrmCashManagementGroup
					required

			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and	(SendingFinancialInstitution not entered
				or	  SendingFinancialInstitutionBranch not entered))

			Sort Order

			Action Rules
				Instance Rules
					if (SendingFinancialInstitution not entered)
						SendingFinancialInstitution = FinancialInstitution
					if (SendingFinancialInstitutionBranch not entered)
						SendingFinancialInstitutionBranch = FinancialInstitutionBranch
					if (CashCodesByBankAccountRel exist)
						invoke Update CashCodesByBankAccountRel
							invoked.SendingFinancialInstitution 		= SendingFinancialInstitution			
							invoked.SendingFinancialInstitutionBranch	= SendingFinancialInstitutionBranch

































































































































































