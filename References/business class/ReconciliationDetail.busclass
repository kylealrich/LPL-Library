ReconciliationDetail  is a BusinessClass
	owned by reconciliation	
	prefix is REDR
	
	Ontology
		symbolic key is ReconciliationDetail
		
    Patterns
    	implements ContextualParent

	Persistent Fields
		ReferenceNumber					is AlphaUpper 50
		Description						is Alpha 100
		DistributionDescription			is Alpha 30
		VendorInvoice
		DetailType						is Numeric 2
			States
				ReconciliationDetail		value is 1
				ReconcilingItem				value is 2
				Amortization				value is 3
		DetailAmount					is an InternationalAmount
		TransactionDate
		PostingDate		
    	StartPeriod						is a GeneralLedgerClosePeriod
    		default label is "StartPeriod"
    	EndPeriod						is a GeneralLedgerClosePeriod
    		default label is "EndPeriod"
     	CatchUpPeriod					is a GeneralLedgerClosePeriod
     		default label is "CatchUpPeriod"
     	AmortizationExpenseAccount		is a FinanceCodeBlockFull
		AllocationCode					is a CashAllocationCode
    	PeriodTerm						is Numeric 3
    	AmortizationSpread				is Numeric 1
    		States
				ByPeriods					value is 0
				ByDays						value is 1
		Recurring						is Boolean
		Attachment						is an AlternateAttachment
		Active
		ReconciliationReason
		OriginatingTransaction			is BusinessObjectReference
		
	Context Fields
		GeneralLedgerCloseConfiguration
			default to ReconciliationAccount.CloseConfiguration		
		GeneralLedgerClosePeriod
		PeriodEndReconciliation		
		Currency
	
	Transient Fields
		SystemCode						is a GeneralLedgerSystemCode
		CreatedFromPeriod				is a GeneralLedgerClosePeriod	
		CreatedFromDetailReconciliation	is Boolean
		
	Local Fields
		LocalAmortizationPeriod			is a GeneralLedgerClosePeriod
		LocalPeriodCount				is Numeric 3
		LocalDetailPeriod				is a GeneralLedgerClosePeriod
		LocalPostingDate				is Date							
		LocalPostingPeriod				is a GeneralLedgerClosePeriod	
		LocalAttributeCtr   			is Numeric 2
		
	Derived Fields

		ReconciliationCodeBlock is a DerivedField
			type is Alpha 100
			return ReconciliationAccount.ReconciliationCodeBlock
			
		AccountingEntity is a DerivedField
			type is like AccountingEntity
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity 
		
		AccountingUnit is a DerivedField
			type is like AccountingUnit
			return ReconciliationAccount.ReconciliationCodeBlock.AccountingUnit
		
		GeneralLedgerChartAccount is a DerivedField
			type is like GeneralLedgerChartAccount
			default label is "GlobalLedgerChartAccount"
			return ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount
		
		Project is a DerivedField
			type is like Project
			return ReconciliationAccount.ReconciliationCodeBlock.Project
			
		FinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension1
		
		FinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension2
			
		FinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension3
			
		FinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension4
			
		FinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension5
			
		FinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension6
		
		FinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension7
			
		FinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension8
			
		FinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension9
			
		FinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			return ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension10

			
		InvoicePrepaidAmount is a DerivedField
			type is like InternationalAmount
			if (ReconciliationAccountStructure.ReconciliationCurrency.EntityFunctional)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount)
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Project)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ProjectAmount.EnteredCurrencyAmount)
			else









			if (ReconciliationAccountStructure.ReconciliationCurrency.Report1)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ReportAmount1.EnteredCurrencyAmount)
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report2)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ReportAmount2.EnteredCurrencyAmount)
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report3)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ReportAmount3.EnteredCurrencyAmount)
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report4)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ReportAmount4.EnteredCurrencyAmount)
			else
			if (ReconciliationAccountStructure.ReconciliationCurrency.Report5)
				return (sum PayablesInvoiceDistributionRel.DistributionAmount.ReportAmount5.EnteredCurrencyAmount)

		OutOfBalanceAmortizationAmount is a DerivedField		
			type is like InternationalAmount
			if (DetailType.Amortization)
				return (last ReconciliationPeriodDetail set.RemainingBalance)

		DistributionDescriptionMessage is a MessageField
			"<VendorInvoice.PayablesInvoice.Invoice>_<VendorInvoice.Vendor.VendorName>"

		AmortizationOutOfBalanceErrorMessage is a MessageField
			"RemainingBalance<OutOfBalanceAmortizationAmount>"
			
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforReconciliationDetail"

		ContextMessageText is a MessageField
			restricted
			"ReconciliationDetail<ReconciliationDetail>"

		DerivedRoundTo is a DerivedField
			type is Decimal 5.4
			restricted
			if (Currency.NumberOfDecimals = 2)
				return .01
			else
			if (Currency.NumberOfDecimals = 0)
				return 1
			else
			if (Currency.NumberOfDecimals = 3)
				return .001
			else
			if (Currency.NumberOfDecimals = 4)
				return .0001

	Relations
		DetailPeriodRangeRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	= GeneralLedgerCloseConfiguration 
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
				and    related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod <= EndPeriod.GeneralLedgerCalendarPeriod)

 		NextCalendarPeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	= ReconciliationAccount.CloseConfiguration	
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod > LocalAmortizationPeriod.GeneralLedgerCalendarPeriod)
				
		DuplicateVendorInvoiceRel
			one-to-many relation to ReconciliationDetail
			Field Mapping uses ByVendorInvoice
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.VendorInvoice					= VendorInvoice
				related.ReconciliationAccount			= ReconciliationAccount		
			Instance Selection
				where (related.ReconciliationDetail	!= ReconciliationDetail) 

		ReconciliationPeriodDetailRel is a ReconciliationPeriodDetail set
			Instance Selection
				where (related.DetailPeriod.GeneralLedgerCalendarPeriod	= LocalDetailPeriod.GeneralLedgerCalendarPeriod)

		ReconciliationPeriodDetailByPeriodRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses ByDetailByPeriod
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup 
				related.ReconciliationAccountStructure	= ReconciliationAccountStructure
				related.ReconciliationAccount			= ReconciliationAccount
				related.ReconciliationDetail			= ReconciliationDetail

		PeriodEndReconciliationForAccountRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByAccountPeriodDescending
				related.ReconciliationManagementGroup							= ReconciliationManagementGroup
				related.ReconciliationAccountStructure							= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount			= ReconciliationAccount
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration = GeneralLedgerCloseConfiguration
			Instance Selection
				where (related.ReconciliationCanBeUpdated 
				and    related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	>= StartPeriod.GeneralLedgerCalendarPeriod
				and   (related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod <= EndPeriod.GeneralLedgerCalendarPeriod
				or     Recurring)) 
				
		PeriodEndReconciliationRel
			one-to-many relation to PeriodEndReconciliation
			Field Mapping uses ByPeriod
				related.ReconciliationManagementGroup													= ReconciliationManagementGroup
				related.ReconciliationAccountStructure													= ReconciliationAccountStructure
				related.PeriodEndReconciliation.GeneralLedgerCloseConfiguration 						= GeneralLedgerCloseConfiguration
				related.PeriodEndReconciliation.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= LocalDetailPeriod.GeneralLedgerCalendarPeriod
				related.PeriodEndReconciliation.ReconciliationAccount									= ReconciliationAccount

		PayablesInvoiceDistributionRel
			one-to-many relation to PayablesInvoiceDistribution
			Field Mapping uses Set7
				related.Vendor				= VendorInvoice.Vendor
                related.Company				= VendorInvoice.PayablesCompany
                related.PayablesInvoice		= VendorInvoice.PayablesInvoice
			Instance Selection
				where (related.DistributionType.Distribution
				and	   related.DistributionAccount.ToAccountingEntity = ReconciliationAccount.ReconciliationCodeBlock.AccountingEntity
				and	   related.DistributionAccount.GeneralLedgerChartAccount = ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount
				and   (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingEntity
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.AccountingUnit
				and    related.DistributionAccount.AccountingUnit = ReconciliationAccount.ReconciliationCodeBlock.AccountingUnit)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Project
				and    related.DistributionAccount.Project = ReconciliationAccount.ReconciliationCodeBlock.Project)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension1
				and    related.DistributionAccount.FinanceDimension1 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension1)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension2
				and    related.DistributionAccount.FinanceDimension2 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension2)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension3
				and    related.DistributionAccount.FinanceDimension3 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension3)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension4
				and    related.DistributionAccount.FinanceDimension4 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension4)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension5
				and    related.DistributionAccount.FinanceDimension5 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension5)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension6
				and    related.DistributionAccount.FinanceDimension6 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension6)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension7
				and    related.DistributionAccount.FinanceDimension7 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension7)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension8
				and    related.DistributionAccount.FinanceDimension8 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension8)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension9
				and    related.DistributionAccount.FinanceDimension9 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension9)
				or    (ReconciliationAccountStructure.ReconciliationLevel.Type.Dimension10
				and    related.DistributionAccount.FinanceDimension10 = ReconciliationAccount.ReconciliationCodeBlock.FinanceDimension10)))
				
		PeriodEndDistributionRel
			one-to-many relation to PeriodEndDistribution
			Field Mapping uses ByReconciliationAccount
				related.ReconciliationManagementGroup					= ReconciliationManagementGroup 
				related.ReconciliationAccountStructure					= ReconciliationAccountStructure
				related.PeriodEndReconciliation.ReconciliationAccount	= ReconciliationAccount
				related.ReconciliationDetail							= ReconciliationDetail

		AmortizationDetailsWithDistributionsRel is a ReconciliationPeriodDetail set
			Instance Selection
				where (related.HasPeriodEndDistribution)

		CompleteReconciliationDetailRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.ReconciliationDetail		   = ReconciliationDetail
			Instance Selection
				where (related.DetailType.ReconciliationDetail
				and	   related.DetailPeriod.GeneralLedgerCalendarPeriod = EndPeriod.GeneralLedgerCalendarPeriod)
		
		CompleteReconcilingItemRel
			one-to-many relation to ReconciliationPeriodDetail
			Field Mapping uses symbolic key
				related.ReconciliationManagementGroup  = ReconciliationManagementGroup
				related.ReconciliationAccountStructure = ReconciliationAccountStructure
				related.ReconciliationAccount	  	   = ReconciliationAccount
				related.ReconciliationDetail		   = ReconciliationDetail
			Instance Selection
				where (related.DetailType.ReconcilingItem
				and	   related.DetailPeriod.GeneralLedgerCalendarPeriod = EndPeriod.GeneralLedgerCalendarPeriod)
		
		GeneralLedgerClosePeriodRel		
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup			 = ReconciliationManagementGroup
				related.GeneralLedgerCloseConfiguration	 = GeneralLedgerCloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date >= LocalPostingDate)

		GeneralLedgerTransactionRel	
			one-to-one relation to GeneralLedgerTransaction
			Field Mapping uses symbolic key		 
				related.FinanceEnterpriseGroup									= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.FinanceEnterpriseGroup
				related.AccountingEntity										= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.AccountingEntity
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod 	= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				related.GeneralLedgerJournalControl								= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerJournalControl
				related.GeneralLedgerTransaction								= OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerTransaction.GeneralLedgerTransaction
								
	Sets 
		ByReferenceNumber
			Sort Order
				ReconciliationManagementGroup 
				ReconciliationAccountStructure
				ReconciliationAccount
				ReferenceNumber
				ReconciliationDetail

		ByVendorInvoice
			Sort Order
				ReconciliationManagementGroup 
				ReconciliationAccountStructure
				VendorInvoice
				ReconciliationAccount
				ReconciliationDetail
			Instance Selection
				where (DetailType.Amortization)

    Conditions
		CanViewAmortizationDetails
			when (DetailType.Amortization
			and   ReconciliationPeriodDetail set exists)

		CanBuildAmortizationSchedule
			when (DetailType.Amortization
			and   !ReconciliationPeriodDetail set exists)

		CanDeleteAmortizationSchedule
			when (DetailType.Amortization
			and   ReconciliationPeriodDetail set exists
			and   !AmortizationPeriodEndDetailsExists)	

		AmortizationDetailsOutOfBalance		
			when (OutOfBalanceAmortizationAmount entered)

		AmortizationPeriodEndDetailsExists		
			when (AmortizationDetailsWithDistributionsRel exists)

		HasAttachment
			when (Attachment entered) 

		HasOpenScheduledReconciliationDetails
			when (!CompleteReconciliationDetailRel exists)
		
		HasOpenScheduledReconcilingItems
			when (!CompleteReconcilingItemRel exists)
		
		ReconcilingItemReasonCodeRequired
			when (ReconciliationManagementGroup.ReconcilingItemReasonCodeRequired
			and DetailType.ReconcilingItem)

		GeneralLedgerTransactionExists
			when (GeneralLedgerTransactionRel exists)
	
	Create Rules  
		include IDM.CreateRules 
			replace AttachmentField with Attachment	
									
	Delete Rules
		include IDM.DeleteNoArchiveRules
			replace AttachmentField with Attachment

	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with Attachment
						
	Field Rules
		TransactionDate
			initial value is VendorInvoice.PayablesInvoice.InvoiceDate
			initial value is StartPeriod.GeneralLedgerCalendarPeriod.Date	
			default to VendorInvoice.PayablesInvoice.InvoiceDate
			default to StartPeriod.GeneralLedgerCalendarPeriod.Date			
		
		PostingDate		
			initial value is TransactionDate
			default to TransactionDate
					
		VendorInvoice
			if (VendorInvoice.PayablesInvoice entered)
				constraint (!DuplicateVendorInvoiceRel exists)
					"InvoiceAlreadyEnteredOnReference<first DuplicateVendorInvoiceRel.ReferenceNumber>"
		
		StartPeriod
			required
				"StartPeriodIsRequired"
		
		EndPeriod
			if (!Recurring
			and EndPeriod !entered)
				if (PeriodTerm entered)
					LocalPeriodCount = 1
					LocalAmortizationPeriod	= StartPeriod
					while (LocalPeriodCount < PeriodTerm)
						LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
						LocalPeriodCount += 1
					EndPeriod = LocalAmortizationPeriod
				else
					default to last ReconciliationPeriodDetailByPeriodRel.DetailPeriod
					default to StartPeriod
					
			if (EndPeriod entered)
				constraint (EndPeriod >= StartPeriod)
					"EndPeriodCannotBeLessThanStartPeriod"
			
		CatchUpPeriod
			constraint (CatchUpPeriod > StartPeriod)
				"CatchUpPeriodMustBeAfterStartPeriod"
				
			constraint (CatchUpPeriod <= EndPeriod)
				"CatchUpPeriodMustBeOnOrBeforeEndPeriod"

		PeriodTerm
			if (!Recurring
			and EndPeriod entered)
				if (PeriodTerm !entered)
					PeriodTerm = instance count of DetailPeriodRangeRel
				else
					constraint (PeriodTerm = instance count of DetailPeriodRangeRel)
						"PeriodTermDoesNotMatchNumberOfPeriodsInRange"

		DetailAmount
			initial value is InvoicePrepaidAmount 
			default to InvoicePrepaidAmount 
			if (VendorInvoice entered)
				constraint (DetailAmount = InvoicePrepaidAmount)
					"DetailAmountMustBeEqualToTheInvoicePrepaidAmountOnInvoice<VendorInvoice.PayablesInvoice.Invoice>"
			if (DetailType.Amortization)
				required
					"DetailAmountIsRequiredForAmortization"
					
		Recurring
			if (Recurring)
				initialize EndPeriod
				initialize PeriodTerm
			constraint (!DetailType.Amortization)
				"CannotSelectRecurringForAmortizedDetail"

		AmortizationExpenseAccount
			if (DetailType.Amortization
			and AllocationCode !entered)
				required
					"AmortizationExpenseAccountOrAllocationCodeRequired"
			constraint (!ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)
				"CannotCreateAmortization;OffsetCannotPostTo<ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount>_<ReconciliationManagementGroup.FinanceEnterpriseGroup.AccountLabel>"

		AmortizationSpread
			if (ReconciliationPeriodDetail set exists)
				cannot be changed
					"CannotChangeAmortizationSpreadWhenAnAmortizationScheduleHasBeenCreated"
					
		AllocationCode
			if (AmortizationExpenseAccount entered)
				cannot be entered
					"CanEnterEitherAccountingInformationOrAnAllocationCode"
			constraint (AllocationCode.AllocationType.Percent)
				"AllocationCodeMustBePercentType"
			constraint (!ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)
				"CannotCreateAmortization;OffsetCannotPostTo<ReconciliationAccount.ReconciliationCodeBlock.GeneralLedgerChartAccount.SystemAccount>_<ReconciliationManagementGroup.FinanceEnterpriseGroup.AccountLabel>"
		
		ReferenceNumber
			required
			
		Description
			default to ReferenceNumber
			
		DistributionDescription
			if (VendorInvoice.PayablesInvoice entered)
				default to DistributionDescriptionMessage
			else
				default to Description
		
		ReconciliationReason
			if (ReconcilingItemReasonCodeRequired)
				required
					"ReasonCodeIsRequired"
					
	Attach Rules
		constraint (Active)
			"ReconciliationDetailIsInactive"

	Actions
		CreatePeriodDetail is an Instance Action
			Action Rules
				LocalDetailPeriod = PeriodEndReconciliation.GeneralLedgerClosePeriod	
				
				constraint (PeriodEndReconciliationRel.Status.Open 
				or 			PeriodEndReconciliationRel.Status.InProcess)
					"CannotAddPeriodDetailToClosedPeriodReconciliation"
					
				invoke CreateFromReconciliationDetail ReconciliationPeriodDetail
					fill in fields from this instance
						except invoked.TransactionDate
						except invoked.Attachment.FSMAttachmentIDM
  					invoked.GeneralLedgerCloseConfiguration	= PeriodEndReconciliation.GeneralLedgerCloseConfiguration	
  					invoked.DetailPeriod					= LocalDetailPeriod											
					invoked.PeriodAmount					= DetailAmount

		BuildAmortizationSchedule is an Instance Action
			valid when (CanBuildAmortizationSchedule)
			Local Fields
				LocalPeriodAmount					is an InternationalAmount
				LocalAccumulatedAmount				is an InternationalAmount
				LocalRemainingAmount				is an InternationalAmount
				LocalAmortizationPeriodBeginDate	is Date
				LocalPeriodDays						is Numeric 5
				LocalTotalDays						is Numeric 5
				
			Action Rules
				if (PayablesInvoiceDistributionRel exists)		
					constraint (all PayablesInvoiceDistributionRel.Status > 0)
						"RelatedPayablesDistributionMustBeReleasedToCreateAmortizationSchedule"
				
				initialize LocalPeriodAmount
				LocalPostingDate = PostingDate	
				LocalPostingPeriod = first GeneralLedgerClosePeriodRel.GeneralLedgerClosePeriod	
				if (LocalPostingPeriod < StartPeriod)	
					LocalAmortizationPeriod = LocalPostingPeriod
				else
					LocalAmortizationPeriod	= StartPeriod
				LocalRemainingAmount = DetailAmount
						
				while (LocalAmortizationPeriod entered
 				and    LocalAmortizationPeriod <= EndPeriod)
					if (LocalAmortizationPeriod = StartPeriod)	
						LocalPeriodCount = 1
					
					if (AmortizationSpread.ByPeriods
	 				and LocalAmortizationPeriod >= StartPeriod)	
						LocalPeriodAmount = (DetailAmount / PeriodTerm)
					
					if (AmortizationSpread.ByDays)
						LocalAmortizationPeriodBeginDate = LocalAmortizationPeriod.DerivedBeginGregorian
						if (LocalPeriodCount = 1)
							LocalTotalDays = (EndPeriod.GeneralLedgerCalendarPeriod.Date - LocalAmortizationPeriodBeginDate + 1)
						LocalPeriodDays = (LocalAmortizationPeriod.GeneralLedgerCalendarPeriod.Date - LocalAmortizationPeriodBeginDate + 1)
						if (LocalAmortizationPeriod >= StartPeriod)	
							LocalPeriodAmount = (DetailAmount * (LocalPeriodDays / LocalTotalDays))
 					
 					if (LocalAmortizationPeriod = EndPeriod)
						LocalPeriodAmount = LocalRemainingAmount
						
					if (LocalAmortizationPeriod >= StartPeriod)	
						LocalAccumulatedAmount += LocalPeriodAmount
	 					LocalRemainingAmount -= LocalPeriodAmount

					round LocalPeriodAmount to nearest DerivedRoundTo
					round LocalAccumulatedAmount to nearest DerivedRoundTo
					round LocalRemainingAmount to nearest DerivedRoundTo
					
 					invoke CreateFromReconciliationDetail ReconciliationPeriodDetail
						fill in fields from this instance
							except invoked.Attachment.FSMAttachmentIDM
						invoked.DetailPeriod				= LocalAmortizationPeriod
						invoked.PeriodAmount				= LocalPeriodAmount
						invoked.AccumulatedAmortizedAmount	= LocalAccumulatedAmount
						invoked.RemainingBalance			= LocalRemainingAmount
						invoked.ElapsedPeriods				= LocalPeriodCount
					
					LocalAmortizationPeriod	= first NextCalendarPeriodRel.GeneralLedgerClosePeriod
					if (LocalAmortizationPeriod >= StartPeriod)	
						LocalPeriodCount += 1
					
		DeleteAmortizationSchedule is an Instance Action
			valid when (CanDeleteAmortizationSchedule)
			Action Rules
				constraint (!AmortizationDetailsWithDistributionsRel exists)
					"DistributionsExistForDetailLines;CannotDeleteAmortizationSchedule"
				invoke Purge ReconciliationPeriodDetail set

		CreateDetailsForExistingPeriodEndReconciliations is an Instance Action
			restricted
			Action Rules
				if (PeriodEndReconciliationForAccountRel exists)	
					for each PeriodEndReconciliationForAccountRel
						LocalDetailPeriod = each.PeriodEndReconciliation.GeneralLedgerClosePeriod
						if (!ReconciliationPeriodDetailRel exists
						and !CreatedFromPeriod entered				
						or  (CreatedFromPeriod entered
						and  CreatedFromPeriod != LocalDetailPeriod))
							invoke CreateFromReconciliationDetail ReconciliationPeriodDetail
								fill in fields from this instance
									except invoked.Attachment.FSMAttachmentIDM
								invoked.DetailPeriod	= LocalDetailPeriod 
								invoked.PeriodAmount	= DetailAmount

		SchedulePeriodDetails is a Set Action
			restricted
			completion message is "SchedulePeriodDetails"
			Parameters
				PrmReconciliationManagementGroup	is a ReconciliationManagementGroup
				PrmReconciliationAccountStructure	is a ReconciliationAccountStructure
				PrmReconciliationAccount			is a ReconciliationAccount
				PrmGeneralLedgerCloseConfiguration  is a GeneralLedgerCloseConfiguration
				PrmDetailPeriod						is a GeneralLedgerClosePeriod
				PrmReportDocument					is a ReportDocument

			Parameter Rules
				PrmReconciliationManagementGroup	
					required
						"ReconciliationManagementGroupIsRequired"
				PrmReconciliationAccountStructure
					required
						"ReconciliationAccountStructureIsRequired"
				PrmDetailPeriod	
					required
						"PeriodRequired"

			Instance Selection
				where (ReconciliationManagementGroup = PrmReconciliationManagementGroup
				and	   ReconciliationAccountStructure = PrmReconciliationAccountStructure
				and   (!PrmReconciliationAccount entered
				or	   ReconciliationAccount = PrmReconciliationAccount)
				and	   ReconciliationAccount.CloseConfiguration = PrmGeneralLedgerCloseConfiguration 
				and   (PrmDetailPeriod.GeneralLedgerCalendarPeriod >= StartPeriod.GeneralLedgerCalendarPeriod
				and   (PrmDetailPeriod.GeneralLedgerCalendarPeriod <= EndPeriod.GeneralLedgerCalendarPeriod
				or     Recurring))
				and    !DetailType.Amortization
				and    Active)

			Local Fields
				LocalCloseConfiguration				is a GeneralLedgerCloseConfiguration
				
			Action Rules
				Empty Set Rules
					if (PrmReconciliationAccount entered)
						invoke EvaluateReconciliationPolicy PeriodEndReconciliation
							invoked.PrmReconciliationManagementGroup 	= PrmReconciliationManagementGroup
							invoked.PrmReconciliationAccountStructure	= PrmReconciliationAccountStructure
							invoked.PrmReconciliationAccount			= PrmReconciliationAccount
							invoked.PrmGeneralLedgerCloseConfiguration	= PrmGeneralLedgerCloseConfiguration
							invoked.PrmGeneralLedgerClosePeriod			= PrmDetailPeriod
				
				Set Rules
					Entrance Rules
						LocalCloseConfiguration = PrmGeneralLedgerCloseConfiguration
								
				Instance Rules
					LocalCloseConfiguration = PrmGeneralLedgerCloseConfiguration
					LocalDetailPeriod = PrmDetailPeriod
					if  (!ReconciliationPeriodDetailRel exists
					and  ReconciliationAccount.Active
					and ((PeriodEndReconciliationRel exists
					and  (first PeriodEndReconciliationRel.Status.InProcess
					or    first PeriodEndReconciliationRel.Status.Open))
					or    PeriodEndReconciliationRel !exists))		
						invoke CreateFromReconciliationDetail ReconciliationPeriodDetail
							fill in fields from this instance
								except invoked.Attachment.FSMAttachmentIDM
							invoked.ReconciliationManagementGroup 	= PrmReconciliationManagementGroup
							invoked.ReconciliationAccountStructure	= PrmReconciliationAccountStructure
							invoked.ReconciliationAccount			= ReconciliationAccount
							invoked.ReconciliationDetail			= ReconciliationDetail
							invoked.GeneralLedgerCloseConfiguration = LocalCloseConfiguration
							invoked.DetailPeriod					= LocalDetailPeriod 
							invoked.PeriodAmount					= DetailAmount
							invoked.ReportDocument					= PrmReportDocument
					
					if (PrmReconciliationAccount entered
					and PeriodEndReconciliationRel exists)
						invoke EvaluateReconciliationPolicy PeriodEndReconciliation
							invoked.PrmReconciliationManagementGroup 	= PrmReconciliationManagementGroup
							invoked.PrmReconciliationAccountStructure	= PrmReconciliationAccountStructure
							invoked.PrmReconciliationAccount			= ReconciliationAccount
							invoked.PrmGeneralLedgerCloseConfiguration	= LocalCloseConfiguration
							invoked.PrmGeneralLedgerClosePeriod			= LocalDetailPeriod
					
		CreateReconciliationDetail is a Create Action
			Action Rules
				DetailType = 1 
			Exit Rules
				invoke CreateDetailsForExistingPeriodEndReconciliations
		
		CreateReconcilingItem is a Create Action
			Action Rules
				DetailType = 2 
			Exit Rules
				if (!CreatedFromDetailReconciliation)
					invoke CreateDetailsForExistingPeriodEndReconciliations

		CreateAmortization is a Create Action
			Action Rules
				DetailType = 3 
		
		Update is an Update Action
			Field Rules
				StartPeriod
					if (DetailType.Amortization)
						if (AmortizationDetailsWithDistributionsRel exists)
							cannot be changed
								"DistributionsExistForDetailLinesCannotChangeStartPeriod"
						if (StartPeriod	changed
						and ReconciliationPeriodDetail set exists)
							confirmation required
								"ChangingStartPeriodWillDeleteAmortizationDetails"
							invoke Purge ReconciliationPeriodDetail set
				
				EndPeriod
					if (DetailType.Amortization)
						if (AmortizationDetailsWithDistributionsRel exists)
							cannot be changed
								"DistributionsExistForDetailLinesCannotChangeEndPeriod"
						if (EndPeriod changed
						and ReconciliationPeriodDetail set exists)
							confirmation required
								"ChangingEndPeriodWillDeleteAmortizationDetails"
							invoke Purge ReconciliationPeriodDetail set
					
				CatchUpPeriod
					if (DetailType.Amortization)
						if (AmortizationDetailsWithDistributionsRel exists)
							cannot be changed
								"DistributionsExistForDetailLinesCannotChangeCatchUpPeriod"
		
				PeriodTerm
					if (DetailType.Amortization)
						if (AmortizationDetailsWithDistributionsRel exists)
							cannot be changed
								"DistributionsExistForDetailLinesCannotChangePeriodTerm"
						if (PeriodTerm	changed
						and ReconciliationPeriodDetail set exists)
							confirmation required
								"ChangingPeriodTermWillDeleteAmortizationDetails"
							invoke Purge ReconciliationPeriodDetail set
		
				DetailAmount
					if (DetailType.Amortization)
						if (AmortizationDetailsWithDistributionsRel exists)
							cannot be changed
								"DistributionsExistForDetailLinesCannotChangeDetailAmount"
						if (DetailAmount	changed
						and ReconciliationPeriodDetail set exists)
							confirmation required
								"ChangingDetailWillDeleteAmortizationDetails"
							invoke Purge ReconciliationPeriodDetail set
			
			Exit Rules
				if (CatchUpPeriod changed)
					invoke Update ReconciliationPeriodDetail set
				invoke UpdatePeriodValues ReconciliationPeriodDetail set
					if (instance count of ReconciliationPeriodDetail set = 1)
						invoked.ReferenceNumber				= ReferenceNumber
						invoked.Description					= Description	
						invoked.PeriodAmount				= DetailAmount
				    	invoked.TransactionDate				= TransactionDate
			    	invoked.StartPeriod					= StartPeriod
			    	invoked.EndPeriod					= EndPeriod
			    	invoked.PeriodTerm					= PeriodTerm
					invoked.Recurring					= Recurring
					invoked.Attachment.Title			= Attachment.Title  
					invoked.Attachment.File				= Attachment.File
					invoked.Attachment.MimeType			= Attachment.MimeType
					invoked.ReconciliationReason		= ReconciliationReason
				
		UpdateDetailValues is an Update Action
			restricted		

		Delete is a Delete Action
		
		UploadToIDM is an Instance Action  
			valid when (Attachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with Attachment	
													
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (Attachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with Attachment

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop
