TermAndCondition is a BusinessClass
    owned by procurement
    prefix is TCND

	Patterns
		implements Resequence on TermDisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

    Ontology
    	symbolic key is TermAndCondition

    Persistent Fields
    	Title             		is a Description
        HeaderText        		is Alpha size 100
        Description				is Text
        	sql name is SRCHDES
			text searchable
        	Text Variables
        		ContractName
        		ContractNumber
        		ContractRebateFrequency
				ContractRebatePercent
        		ContractRebateType
				ContractReviewDate
  	     		Distributor 
          		DiversityCode
          		DiversityCodeDescription
          		EffectiveDate
          		EventBuyer
        		EventBuyerPhoneNumber
        		EventBuyerEmailAddress
				EventCloseDate
        		EventCommodities
				EventDescription
				EventName
				EventNumber				    
         		EventOpenDate		
	       		EventType		
        		EventReference
        		ExpirationDate        			     		      						
         		FirstHeaderRetainagePercent
        		FirstHeaderRetainageUpToPercent
           		FreightTerm
        		GroupPurchasingOrganization
        		Manufacturer 
        		PrimaryInternalContact
        		PrimaryInternalContactEmailAddress
        		PrimaryInternalContactPhoneNumber
 				ProjectNumber
 				ProjectName
 				ProposedTotalContractAmount
 				PurchaseOrderNumber
        		SecondHeaderRetainagePercent
        		SupplierBusinessType
        		SupplierContact
        		SupplierContactAddress
        		SupplierContactEmailAddress
        		SupplierContactFaxNumber
        		SupplierContactPhoneNumber
        		SupplierName
        		SupplierTaxId
        		TAndCAttachmentReference    value is TermAndConditionAttachment.AttachmentReference
        		WorkingContractID
        Category
        SubCategory
        TermLevel                   is Numeric size 1
        TermDisplayOrder			is a DisplayOrder
        ExhibitAttachment			is an Attachment
        AllowModification 			is Boolean
        	default label is "AllowModificationWhenAttachedToContractsOrEvents"
        Active            			is Boolean
		Status						is Numeric 2
			States
				NeedsApproval	value is 1
				PendingApproval	value is 2
				Approved		value is 3
		CreationApproved			is Boolean
		LastUpdateSeqNumber         is Numeric 6
			disable Auditing
		LastAttachmentDisplayOrder	is Numeric size 4
			disable Auditing
		LastChildTermAndConditionDisplayOrder is Numeric size 4
			disable Auditing
		DisplayString               is Alpha size 8    
		DisplayString12             is Alpha size 12
		
	Transient Fields
		NewDisplayOrder				is a DisplayOrder

	Local Fields
    	LocalCheckContract 
		LocalCompany					is like Company 
		LocalSourcingEvent				is Numeric size 8
     	LocalCheckQuestion
    	LocalCheckQuestionAnswer 
    	LocalArticleDisplayOrder		is a DisplayOrder
    	LocalTermDisplayOrder			is a DisplayOrder
    	LocalArticle					is like Article
    	LocalTAndCAttachmentNumber 		is Numeric 4
    	LocalAlphaTermDisplay           is Alpha size 2
    	LocalFullAlphaTermDisplay       is Alpha size 8
    	LocalTopLevelTermDisplay        is Alpha size 2
    	LocalSecondLevelTermDisplay     is Alpha size 2
    	LocalThirdLevelTermDisplay      is Alpha size 2
    	LocalFourthLevelTermDisplay     is Alpha size 2
    	LocalAlphaTermDisplay3          is Alpha size 3
    	LocalFullAlphaTermDisplay12     is Alpha size 12
    	LocalTopLevelTermDisplay3       is Alpha size 3
    	LocalSecondLevelTermDisplay3    is Alpha size 3
    	LocalThirdLevelTermDisplay3     is Alpha size 3
    	LocalFourthLevelTermDisplay3    is Alpha size 3

	Derived Fields
		DerivedComparedTitle is a NativeField
			type is RichText

		DerivedComparedHeaderText is a NativeField
			type is RichText

		DerivedComparedDescription is a NativeField
			type is RichText
			
		RepresentativeText is a StringField
			type is Text
			default label is "TermAndCondition"
			TermAndCondition " - " Title
			

		ArticleTitle is a DerivedField
			type is like Description
			restricted
			return Article.Title


		TermAndConditionTitle is a DerivedField
			type is like Description
			restricted
			return TermAndCondition.Title


		RequesterEmail is a DerivedField
			type is Alpha 100
			restricted
			return last TermAndConditionUpdateRel.RequestingActor.ContactInfo.EmailAddress

		DerivedRequestingActor is a DerivedField
			type is Alpha 100
			return last TermAndConditionUpdateRel.RequestingActor

		DerivedRequesterName is a DerivedField
			type is Alpha 100
			return last TermAndConditionUpdateRel.DerivedRequesterName

		DerivedRequesterPhoneNumber is a DerivedField
			type is Alpha 100
			return last TermAndConditionUpdateRel.DerivedRequesterPhoneNumber

		DerivedRequireTermCreationApproval is a DerivedField
			type is Boolean
			restricted
			if (SubCategory entered)
				return SubCategory.RequireTermCreationApproval
			else
			if (Category entered)
				return Category.RequireTermCreationApproval
			else
				return false

		DerivedRequireTermUpdateApproval is a DerivedField
			type is Boolean
			restricted
			if (SubCategory entered)
				return SubCategory.RequireTermUpdateApproval
			else
			if (Category entered)
				return Category.RequireTermUpdateApproval
			else
				return false

		DerivedOldRequireTermCreationApproval is a DerivedField
			type is Boolean
			restricted
			if (OldSubCategoryRel exists)
				return OldSubCategoryRel.RequireTermCreationApproval
			else
			if (OldCategoryRel exists)
				return OldCategoryRel.RequireTermCreationApproval
			else
				return false

		DerivedOldRequireTermUpdateApproval is a DerivedField
			type is Boolean
			restricted
			if (OldSubCategoryRel exists)
				return OldSubCategoryRel.RequireTermUpdateApproval
			else
			if (OldCategoryRel exists)
				return OldCategoryRel.RequireTermUpdateApproval
			else
				return false

		DerivedAutoApprove is a DerivedField
			type is Boolean
			restricted
			if (SubCategory entered)
				if (!SubCategory.RequireTermCreationApproval
				and	!SubCategory.RequireTermUpdateApproval)
					return true
			else
			if (Category entered)
				if (!Category.RequireTermCreationApproval
				and	!Category.RequireTermUpdateApproval)
					return true
			else
				return false

		DerivedDraftRequestedTitle is a DerivedField
			type is like Description
			restricted
			if (DraftTermAndConditionTextUpdateRel exists)
				return DraftTermAndConditionTextUpdateRel.RevisedTitle
			else
				return Title

		DerivedDraftRequestedHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (DraftTermAndConditionTextUpdateRel exists)
				return DraftTermAndConditionTextUpdateRel.RevisedHeaderText
			else
				return HeaderText

		DerivedDraftRequestedDescription is a DerivedField
			type is Text
			restricted
			if (DraftTermAndConditionTextUpdateRel exists)
				return DraftTermAndConditionTextUpdateRel.RevisedDescription
			else
				return Description

		DerivedRequestedTitle is a DerivedField
			type is like Description
			restricted
			if (UpdatesToTextExist)
				return PendingTermAndConditionTextUpdateRel.RevisedTitle
			else
				return DraftTermAndConditionTextUpdateRel.RevisedTitle

		DerivedRequestedHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (UpdatesToTextExist)
				return PendingTermAndConditionTextUpdateRel.RevisedHeaderText
			else
				return DraftTermAndConditionTextUpdateRel.RevisedHeaderText

		DerivedRequestedDescription is a DerivedField
			type is Text
			restricted
			if (UpdatesToTextExist)
				return PendingTermAndConditionTextUpdateRel.RevisedDescription
			else
				return DraftTermAndConditionTextUpdateRel.RevisedDescription

		NumberOfPendingUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of PendingTermAndConditionUpdateRel)

		NumberOfDraftUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of DraftTermAndConditionUpdateRel)

		CategoryAndSubCategory is a DerivedField
			type is Alpha 101
			restricted
			if (SubCategory entered)
				return (Category + "^" + SubCategory)
			else
				return Category

		NumberOfAttachmentsToBeAdded is a ComputeField
			type is Numeric 3
			restricted
			(instance count of TermAndConditionAddAttachmentDraftRel)

		NumberOfAttachmentsToBeDeleted is a ComputeField
			type is Numeric 3
			restricted
			(instance count of TermAndConditionDeleteAttachmentDraftRel)

		NumberOfExistingAttachments is a ComputeField
			type is Numeric 3
			restricted
			(instance count of TermAndConditionAttachmentRel)

		NumberOfLevels is a DerivedField
			type is Numeric 1
			restricted
			if (!HasChildren)
				return 1
			else 
			if (HasChildren
			and !HasGrandchildren)
				return 2
			else
			if (HasGrandchildren
			and !HasGreatGrandchildren)
				return 3
			else
				return 4
		
		SubCategoryMessage is a MessageField
			restricted
			"SubCategory"
		
		CategoryMessage is a MessageField
			restricted
			"Category"
			
		DerivedCategoryOrSubCategoryMessage is a DerivedField
			type is Alpha 12
			restricted
			if (SubCategory entered)
				return SubCategoryMessage
			else
				return CategoryMessage

		NeedsApprovalMessage is a MessageField
			restricted
			"NeedsApproval"
			
		PendingApprovalMessage is a MessageField
			restricted
			"PendingApproval"	
		
		DerivedApprovalRequestStatus is a DerivedField
			type is Alpha 25
			if (!CreationApproved)
				return ""
			else
			if (DraftTermAndConditionUpdateExists)
				return NeedsApprovalMessage
			else
			if (PendingTermAndConditionUpdateExists)
				return PendingApprovalMessage
			else
			if (CompletedTermAndConditionUpdateExists)
				return DerivedLastUpdateActionTaken
			else
				return ""

		ApprovedMessage is a MessageField
			restricted
			"Approved"
			
		RejectedMessage is a MessageField
			restricted
			"Rejected"
			
		WithdrawnMessage is a MessageField
			restricted
			"Withdrawn"
		
		DerivedLastUpdateActionTaken is a DerivedField
			type is Alpha 9
			restricted
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Approved)
				return ApprovedMessage
			else
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Rejected)
				return RejectedMessage
			else
			if (last CompletedTermAndConditionUpdateRel.ActionTaken.Withdrawn)
				return WithdrawnMessage
			else
				return ""

		DerivedCategoryChangedMessage is a MessageField
			restricted
			"New<DerivedCategoryOrSubCategoryMessage>RequiresApproval.CannotChangeTitle,HeaderText,OrDescriptionWhenChangingToA<DerivedCategoryOrSubCategoryMessage>ThatRequiresApproval"

	Conditions
		RequesterEmailAddressExists
			restricted
			when (RequesterEmail entered)

		DraftTermAndConditionUpdateExists
			restricted
			when (DraftTermAndConditionUpdateRel exists)

		PendingTermAndConditionUpdateExists
			restricted
			when (PendingTermAndConditionUpdateRel exists)

		DraftTermAndConditionUpdateDescendantsExists
			restricted
			when (DraftTermAndConditionUpdateDescendantsRel exists)

		PendingTermAndConditionUpdateDescendantsExists
			restricted
			when (PendingTermAndConditionUpdateDescendantsRel exists)
		
		PendingTermAndConditionUpdateExistsForLevelOne
			restricted
			when (PendingTermAndConditionUpdateRel exists
			and   TermLevel = 1)
			
		PendingTermAndConditionUpdateExistsSomewhere
			restricted
			when ((PendingTermAndConditionUpdateDescendantsExists
			or    PendingTermAndConditionUpdateRel exists)
			and   TermLevel = 1)
		
		CompletedTermAndConditionUpdateExists
			restricted
			when (CompletedTermAndConditionUpdateRel exists)

		SingleDraftUpdateExists
			restricted
			when (NumberOfDraftUpdates = 1)

		MultipleDraftUpdateExists
			restricted
			when (NumberOfDraftUpdates > 1)

		SinglePendingUpdateExists
			restricted
			when (Status.PendingApproval
			or	  NumberOfPendingUpdates = 1)

		MultiplePendingUpdateExists
			restricted
			when (NumberOfPendingUpdates > 1)

		ChildUpdatesExist
			restricted
			when (DraftTermAndConditionUpdateDescendantsRel exists
			and   TermLevel = 1)
		
		RequestApprovalValid
			restricted
			when (((Status.NeedsApproval
			and	   Description entered)
			or	  (CreationApproved
			and	   DerivedRequireTermUpdateApproval
			and	  (DraftTermAndConditionUpdateExists
			or     ChildUpdatesExist)))
			and    TermLevel = 1)

		RequestApprovalForChangeValid
			restricted
			when  (CreationApproved
			and	   DerivedRequireTermUpdateApproval
			and	  (DraftTermAndConditionUpdateExists
			or     ChildUpdatesExist)
			and    TermLevel = 1)
		
		UpdateDescriptionActionValid
			restricted
			when (CreationApproved
			and	  DerivedRequireTermUpdateApproval
			and	  !PendingTermAndConditionUpdateExists
			and   !TopLevelTermAndConditionRel.PendingApprovalExistsSomewhere
			and   !PendingTermAndConditionUpdateExistsSomewhere)

		UpdateDescriptionActionValidForButton
			restricted
			when (CreationApproved
			and	  DerivedRequireTermUpdateApproval
			and	  !PendingTermAndConditionUpdateExists)
		
		AllowDescriptionUpdate
			restricted
			when ((Status.NeedsApproval)
			or	  (CreationApproved and !DerivedRequireTermUpdateApproval))

		HasDescriptionUpdates
			restricted
			when (CreationApproved
			and	  DerivedRequireTermUpdateApproval
			and	  PendingTermAndConditionUpdateExists)
		
		RequiringApprovals
			restricted
			when (DerivedRequireTermCreationApproval
			or	  DerivedRequireTermUpdateApproval)

		OldRequiringApprovals
			restricted
			when (DerivedOldRequireTermCreationApproval
			or	  DerivedOldRequireTermUpdateApproval)

		CategoryUsingCreationApprovals
			restricted
			when (CategoryUsingCreationApprovalsRel exists)

		SubCategoryUsingCreationApprovals
			restricted
			when (any CategoryRel.SubCategoryUsingCreationApproval)

		CatOrSubcatUsingCreationApprovals
			restricted
			when (CategoryUsingCreationApprovals
			or	  SubCategoryUsingCreationApprovals)

		TermAndConditionAttachmentExists
			restricted
			when (TermAndConditionAttachmentRel exists)

		AttachmentsToBeAddedExist
			restricted
			when (TermAndConditionAddAttachmentRel exists)

		AttachmentsToBeDeletedExist
			restricted
			when (TermAndConditionDeleteAttachmentRel exists)

		DraftAttachmentsToBeAddedExist
			restricted
			when (TermAndConditionAddAttachmentDraftRel exists)

		DraftAttachmentsToBeDeletedExist
			restricted
			when (TermAndConditionDeleteAttachmentDraftRel exists)

		UpdatesToTextExist
			restricted
			when (PendingTermAndConditionTextUpdateRel exists)

		DraftUpdatesToTextExist
			restricted
			when (DraftTermAndConditionTextUpdateRel exists)

		UpdateAllowed
			restricted
			when (!Status.PendingApproval
			and   !UpdateDescriptionActionValid
			and   !TopLevelTermAndConditionRel.ActiveApprovalRequestExistsSomewhere
			and   !PendingTermAndConditionUpdateExistsSomewhere)
		
		CanMoveToNewParent
			restricted
			when (Active
			and   !Status.PendingApproval
			and   !ChildUpdatesExist
			and   NumberOfDraftUpdates = 0
			and   !TopLevelTermAndConditionRel.ActiveApprovalRequestExistsSomewhere
			and   !PendingTermAndConditionUpdateExistsSomewhere)
		
		DisplayButtons
			restricted
			when (CreationApproved
			and	  DerivedRequireTermUpdateApproval)

		DeleteAttachmentValid
			restricted
			when (TermAndConditionAttachmentExists
			and	  UpdateDescriptionActionValid
			and	  NumberOfAttachmentsToBeDeleted < NumberOfExistingAttachments)

		TermAndConditionUpdated
			restricted
			when (Title changed
			or	  HeaderText changed
			or	  Description changed)

		CategoryOrSubCategoryChanged
			restricted
			when (Category changed
			or	  SubCategory changed)
		
		ShowApprovalRequestsPanel
			restricted
			when (RequiringApprovals
			or	  TermAndConditionUpdateRel exists)

		ActiveApprovalRequestExists  
			restricted
			when ((DraftTermAndConditionUpdateExists
			or	  PendingTermAndConditionUpdateExists
			or    DraftTermAndConditionUpdateDescendantsExists
			or    PendingTermAndConditionUpdateDescendantsExists)
			and   LevelOne)

		ActiveApprovalRequestExistsSomewhere 
			restricted
			when (DraftTermAndConditionUpdateExists
			or	  PendingTermAndConditionUpdateExists
			or    DraftTermAndConditionUpdateDescendantsExists
			or    PendingTermAndConditionUpdateDescendantsExists)
			
		PendingApprovalExistsSomewhere
			restricted
			when (PendingTermAndConditionUpdateExists
			or    PendingTermAndConditionUpdateDescendantsExists)
		
		HasContractTermsWithUnapprovedChanges
			restricted
			when (ContractTermsWithUnapprovedChangesRel exists)
			
		ParentTermAndConditionExists
			restricted
			when (ParentTermAndCondition entered)
			
		LevelOne
			restricted
			when (TermLevel = 1)
			
		LevelTwo
			restricted
			when (TermLevel = 2)
			
		LevelThree
			restricted
			when (TermLevel = 3)
		
		LevelFour
			restricted
			when (TermLevel = 4)
		
		NotLevelFour
			restricted
			when (TermLevel != 4)
		
		TemplateTermAndConditionExists
			restricted
			when (ContractTemplateTermAndConditionToUpdateRel exists
			or EventTemplateTermAndConditionUpdateRel exists)

		ContractTemplateTermAndConditionExists
			restricted
			when (ContractTemplateTermAndConditionToUpdateRel exists)
		
		EventTemplateTermAndConditionExists
			restricted
			when (EventTemplateTermAndConditionUpdateRel exists)

		HasChildren
			restricted
			when (ChildTermAndConditionRel exists)
			
		HasGrandchildren
			restricted
			when (GrandchildTermAndConditionRel exists)
			
		HasGreatGrandchildren
			restricted
			when (GreatGrandchildTermAndConditionRel exists)

	Relations
		ContractTermAndConditionRel		
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByTermAndCondition
				related.ContractGroup 	 = ProcurementGroup
				related.Contract		 = LocalCheckContract.CheckContract
				related.TermAndCondition = TermAndCondition
				related.Article          = Article

		ParentTermAndConditionRel
			one-to-one relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = ParentTermAndCondition
		
		ChildTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
			Instance Selection
				where (related.ParentTermAndCondition = TermAndCondition)
		
		GrandchildTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition descendants.TermAndCondition
			Instance Selection
				where (related.TermLevel = TermLevel + 2)
		
		GreatGrandchildTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition descendants.TermAndCondition
			Instance Selection
				where (related.TermLevel = TermLevel + 3)
		
		DescendantTermAndConditionByStringRel           
			one-to-many relation to TermAndCondition
			Field Mapping uses ByDisplayString
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
			Instance Selection
				where (related.TermAndCondition = TermAndCondition descendants.TermAndCondition)
		
		DescendantTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition descendants.TermAndCondition
		
		TopLevelTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition ancestors.TermAndCondition
			Instance Selection
				where (related.TermLevel  = 1)
		
		SecondLevelTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition ancestors.TermAndCondition
			Instance Selection
				where (related.TermLevel  = 2)
		
		SourcingEventTermAndConditionRel		
			one-to-many relation to SourcingEventTermAndCondition
			Field Mapping uses ByTermAndCondition
				related.Company		 	 	   = LocalCompany
				related.SourcingEvent	 	   = LocalSourcingEvent
				related.TermAndConditionNumber = TermAndCondition
				related.Article          	   = Article

		SourcingEventArticleDisplayRel	
			one-to-one relation to SourcingEventArticle
			Field Mapping uses symbolic key
				related.Company       		  = LocalCompany
				related.SourcingEvent 		  = LocalSourcingEvent
				related.SourcingEventArticle  = LocalArticle	

		QuestionAnswerArticleRel
			one-to-one relation to QuestionAnswerArticle
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question		 = LocalCheckQuestion.CheckQuestion
				related.QuestionAnswer	 = LocalCheckQuestionAnswer.CheckQuestionAnswer
				related.Article			 = Article

		QuestionAnswerTermRel
			one-to-one relation to QuestionAnswerTerm
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question		 = LocalCheckQuestion.CheckQuestion
				related.QuestionAnswer	 = LocalCheckQuestionAnswer.CheckQuestionAnswer
				related.Article			 = Article
				related.TermAndCondition = TermAndCondition
		
		AnyQuestionAnswerTermRel
			one-to-many relation to QuestionAnswerTerm
			Field Mapping uses ByTermAndCondition
				related.ProcurementGroup = ProcurementGroup
				related.Article          = Article
				related.TermAndCondition = TermAndCondition
			Instance Selection
				where (related.Question.Active)	

    	EventTermDisplayOrderRel	
			one-to-many relation to SourcingEventTermAndCondition
			Field Mapping uses ByDisplayOrder
				related.Company			 	 = LocalCompany
				related.SourcingEvent	 	 = LocalSourcingEvent
				related.SourcingEventArticle = LocalArticle
			Instance Selection
				where (related.TermAndConditionNumber.TermDisplayOrder > TermDisplayOrder)

    	ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
				related.Contract        = LocalCheckContract.CheckContract

    	ContractTermDisplayOrderRel		
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayOrder
				related.ContractGroup   = ProcurementGroup
				related.Contract	    = LocalCheckContract.CheckContract
				related.ContractArticle	= LocalArticle
			Instance Selection
				where (related.TermAndCondition.TermDisplayOrder > TermDisplayOrder)

    	ContractArticleDisplayRel	
			one-to-one relation to ContractArticle
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
				related.Contract	    = LocalCheckContract.CheckContract
				related.ContractArticle	= LocalArticle

   		AnotherTermForArticleRel
   			one-to-many relation to TermAndCondition
   			Field Mapping uses symbolic key
				related.ProcurementGroup  	= ProcurementGroup
				related.Article				= Article
		
		TermAndConditionUpdateRel is a TermAndConditionUpdate set
		
		CurrentTermAndConditionUpdateRel
			one-to-one relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
				related.TermAndConditionUpdate	= LastUpdateSeqNumber

		PendingTermAndConditionUpdateRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Pending)

		CompletedTermAndConditionUpdateRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Complete
				and	   related.RequestType.Update)

		PendingTermAndConditionTextUpdateRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   related.SpecificRequestType.UpdateTermAndCondition)

		DraftTermAndConditionUpdateRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Draft)

		DraftTermAndConditionUpdateDescendantsRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition descendants.TermAndCondition
			Instance Selection
				where (related.Status.Draft)
		
		PendingTermAndConditionUpdateDescendantsRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition descendants.TermAndCondition
			Instance Selection
				where (related.Status.Pending)
		
		DraftTermAndConditionTextUpdateRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   related.SpecificRequestType.UpdateTermAndCondition)

		CategoryUsingCreationApprovalsRel
			one-to-many relation to Category
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Category                = Category
			Instance Selection
				where (related.RequireTermCreationApproval)

		CategoryRel
			one-to-many relation to Category
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Category                = Category

		TermAndConditionAttachmentRel is a TermAndConditionAttachment set
						

		TermAndConditionAddAttachmentRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   related.SpecificRequestType.AddAttachment)

		TermAndConditionDeleteAttachmentRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Pending
				and	   related.SpecificRequestType.DeleteAttachment)

		TermAndConditionAddAttachmentDraftRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   related.SpecificRequestType.AddAttachment)

		TermAndConditionDeleteAttachmentDraftRel
			one-to-many relation to TermAndConditionUpdate
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
				related.Article					= Article
				related.TermAndCondition		= TermAndCondition
			Instance Selection
				where (related.Status.Draft
				and	   related.SpecificRequestType.DeleteAttachment)

		OldCategoryRel
			one-to-one relation to Category
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ProcurementGroup
				related.Category			= old Category

		OldSubCategoryRel
			one-to-one relation to SubCategory
			Field Mapping uses symbolic key
				related.ProcurementGroup	= ProcurementGroup
				related.Category			= old Category
				related.SubCategory			= old SubCategory

		AddTermAndConditionAttachmentRel
			one-to-one relation to TermAndConditionAttachment
			Field Mapping uses symbolic key
				related.ProcurementGroup			= ProcurementGroup
				related.Article						= Article
				related.TermAndCondition			= TermAndCondition
				related.TermAndConditionAttachment	= LocalTAndCAttachmentNumber

		ContractTermsWithUnapprovedChangesRel is a ContractTermAndCondition set
			Instance Selection
				where (related.ContractGroup	= ProcurementGroup
				and	   related.Article			= Article
				and	   related.TermAndCondition	= TermAndCondition
				and	   related.Contract.InProgress
				and	   related.Contract.HasUnapprovedTermChanges)

		ContractTemplateTermAndConditionToUpdateRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
			Instance Selection
				where (related.Article          			= Article
				and    related.TermAndCondition             = TermAndCondition
				and    related.Contract.ContractTemplate 	= true
				and    related.Modified         			= false)
		
		EventTemplateTermAndConditionUpdateRel
			one-to-many relation to SourcingEventTermAndCondition
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Article						= Article
				and    related.TermAndConditionNumber 		= TermAndCondition
				and    related.SourcingEvent.Template 		= true
				and    related.RepositoryModified			= false)

	Sets

        ByDisplayOrder
			duplicates
        	Sort Order
   				ProcurementGroup
                Article
                TermLevel
                TermDisplayOrder
                TermAndCondition
                
        ByDisplayString
        	Sort Order
        		ProcurementGroup
        		Article
        		DisplayString12
        		TermAndCondition

	Context Fields
   		TermAndConditionAttachment

	Field Rules
        Title
    		required
		Description
            required
        Article
        	required
        Active
            default to true
		AllowModification
			if (AllowModification changed)
				constraint (!HasContractTermsWithUnapprovedChanges)
					"AllowModificationWhenAttachedToContractsOrEventsCannotBeChanged;ContractsUsingThisTermAndConditionExistThatAreInTheApprovalProcess"
	
	Rule Blocks
	
		MaintainDisplayString12
			initialize LocalAlphaTermDisplay3
			initialize LocalFullAlphaTermDisplay12
			initialize LocalTopLevelTermDisplay3
			initialize LocalSecondLevelTermDisplay3
			initialize LocalThirdLevelTermDisplay3
			initialize LocalFourthLevelTermDisplay3
			if (TermLevel = 1)
				LocalAlphaTermDisplay3 = TermDisplayOrder
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2] !entered)
					LocalTopLevelTermDisplay3 = "00" + TermDisplayOrder
				else	
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2] entered)
					LocalTopLevelTermDisplay3 = "0" + TermDisplayOrder
				else 
					LocalTopLevelTermDisplay3 = TermDisplayOrder
				LocalSecondLevelTermDisplay3 = "000"
				LocalThirdLevelTermDisplay3  = "000"
				LocalFourthLevelTermDisplay3 = "000"
			if (TermLevel = 2)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3 	    = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2] + LocalFullAlphaTermDisplay12[3]
				LocalAlphaTermDisplay3   		= TermDisplayOrder
				if (LocalAlphaTermDisplay3[2] !entered
				and LocalAlphaTermDisplay3[3] !entered) 
					LocalSecondLevelTermDisplay3 = "00" + TermDisplayOrder
				else
				if (LocalAlphaTermDisplay3[3] !entered
				and LocalAlphaTermDisplay3[2]  entered) 
					LocalSecondLevelTermDisplay3 = "0" + TermDisplayOrder 
				else 
					LocalSecondLevelTermDisplay3 = TermDisplayOrder
				LocalThirdLevelTermDisplay3  = "000"
				LocalFourthLevelTermDisplay3 = "000"	
			if (TermLevel = 3)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3 	    = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2]+ LocalFullAlphaTermDisplay12[3]
				LocalSecondLevelTermDisplay3    = LocalFullAlphaTermDisplay12[4] + LocalFullAlphaTermDisplay12[5]+ LocalFullAlphaTermDisplay12[6]
				LocalAlphaTermDisplay3 		    = TermDisplayOrder
				if (LocalAlphaTermDisplay3[2] !entered
				and LocalAlphaTermDisplay3[3] !entered) 
					LocalThirdLevelTermDisplay3 = "00" + TermDisplayOrder
				else 
				if (LocalAlphaTermDisplay3[2]  entered
				and LocalAlphaTermDisplay3[3] !entered)
					LocalThirdLevelTermDisplay3 = "0" = TermDisplayOrder 
				else 
					LocalThirdLevelTermDisplay3 = TermDisplayOrder
				LocalFourthLevelTermDisplay3 = "000"
			if (TermLevel = 4)
				LocalFullAlphaTermDisplay12 	= ParentTermAndConditionRel.DisplayString12
				LocalTopLevelTermDisplay3       = LocalFullAlphaTermDisplay12[1] + LocalFullAlphaTermDisplay12[2]+ LocalFullAlphaTermDisplay12[3]
				LocalSecondLevelTermDisplay3    = LocalFullAlphaTermDisplay12[4] + LocalFullAlphaTermDisplay12[5]+ LocalFullAlphaTermDisplay12[6]
				LocalThirdLevelTermDisplay3     = LocalFullAlphaTermDisplay12[7] + LocalFullAlphaTermDisplay12[8]+ LocalFullAlphaTermDisplay12[9]
				LocalAlphaTermDisplay3 		    = TermDisplayOrder
				if  (LocalAlphaTermDisplay3[2] !entered
				and  LocalAlphaTermDisplay3[3] !entered) 
					LocalFourthLevelTermDisplay3 = "00" + TermDisplayOrder
				else
				if (LocalAlphaTermDisplay3[2] entered
				and LocalAlphaTermDisplay3[3] !entered) 
					LocalFourthLevelTermDisplay3 = "0" + TermDisplayOrder
				else 
					LocalFourthLevelTermDisplay3 = TermDisplayOrder	
			DisplayString12 = LocalTopLevelTermDisplay3 + LocalSecondLevelTermDisplay3 + LocalThirdLevelTermDisplay3 + LocalFourthLevelTermDisplay3
		
		MaintainDisplayString      
			initialize LocalAlphaTermDisplay
			initialize LocalFullAlphaTermDisplay
			initialize LocalTopLevelTermDisplay
			initialize LocalSecondLevelTermDisplay
			initialize LocalThirdLevelTermDisplay
			initialize LocalFourthLevelTermDisplay
			if (TermLevel = 1)
				LocalAlphaTermDisplay = TermDisplayOrder
				if (LocalAlphaTermDisplay[2] !entered) 
					LocalTopLevelTermDisplay = "0" + TermDisplayOrder
				else 
					LocalTopLevelTermDisplay = TermDisplayOrder
				LocalSecondLevelTermDisplay = "00"
				LocalThirdLevelTermDisplay  = "00"
				LocalFourthLevelTermDisplay = "00"
			if (TermLevel = 2)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay 	= LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalAlphaTermDisplay 		= TermDisplayOrder
				if (LocalAlphaTermDisplay[2] !entered) 
					LocalSecondLevelTermDisplay = "0" + TermDisplayOrder
				else 
					LocalSecondLevelTermDisplay = TermDisplayOrder
				LocalThirdLevelTermDisplay  = "00"
				LocalFourthLevelTermDisplay = "00"	
			if (TermLevel = 3)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay 	= LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalSecondLevelTermDisplay = LocalFullAlphaTermDisplay[3] + LocalFullAlphaTermDisplay[4]
				LocalAlphaTermDisplay 		= TermDisplayOrder
				if (LocalAlphaTermDisplay[2] !entered) 
					LocalThirdLevelTermDisplay = "0" + TermDisplayOrder
				else 
					LocalThirdLevelTermDisplay = TermDisplayOrder
				LocalFourthLevelTermDisplay = "00"
			if (TermLevel = 4)
				LocalFullAlphaTermDisplay 	= ParentTermAndConditionRel.DisplayString
				LocalTopLevelTermDisplay    = LocalFullAlphaTermDisplay[1] + LocalFullAlphaTermDisplay[2]
				LocalSecondLevelTermDisplay = LocalFullAlphaTermDisplay[3] + LocalFullAlphaTermDisplay[4]
				LocalThirdLevelTermDisplay  = LocalFullAlphaTermDisplay[5] + LocalFullAlphaTermDisplay[6]
				LocalAlphaTermDisplay 		= TermDisplayOrder
				if (LocalAlphaTermDisplay[2] !entered) 
					LocalFourthLevelTermDisplay = "0" + TermDisplayOrder
				else 
					LocalFourthLevelTermDisplay = TermDisplayOrder	
			DisplayString = LocalTopLevelTermDisplay + LocalSecondLevelTermDisplay + LocalThirdLevelTermDisplay + LocalFourthLevelTermDisplay
	
	Attach Rules
		if (parentcontext.name != "TermAndConditionAttachment"
		and parentcontext.name != "TermAndConditionUpdate")
	        constraint (Active)
	            "TermAndCondition<TermDisplayOrder>-<Title>IsInactive"
	    	constraint (CreationApproved)
	    		"TermAndCondition<TermDisplayOrder>-<Title>NeedsApproval"

    Actions
		Create is a Create Action
			Field Rules
	 			TermLevel
					if (!ParentTermAndConditionExists)
						default to 1
					else
						default to ParentTermAndConditionRel.TermLevel + 1
					if (ParentTermAndConditionExists)
						constraint (ParentTermAndConditionRel.TermLevel < 4) 
							"CannotHaveMoreThanFourLevelsOfTermsAndConditions"
	 			TermDisplayOrder
	 				if (!ParentTermAndConditionExists)
	 					autosequence using Article.LastTAndCDisplayOrder
	 				else
	 					autosequence using ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder
				HeaderText
					if (!HeaderText entered)		
						default to Title
				Status
					if (TermLevel = 1)
						default to 1	
					else
						default to ParentTermAndConditionRel.Status
				Category
					if (TermLevel !=1)
						default to ParentTermAndConditionRel.Category
				SubCategory
					if (TermLevel !=1)
						default to ParentTermAndConditionRel.SubCategory	
				AllowModification
					if (TermLevel !=1)
						default to ParentTermAndConditionRel.AllowModification
					
				CreationApproved
					if (TermLevel !=1)
						default to ParentTermAndConditionRel.CreationApproved
		
			Exit Rules

				include MaintainDisplayString12
				
				if (ParentTermAndConditionExists)
					constraint (!TopLevelTermAndConditionRel.PendingApprovalExistsSomewhere)
						"CannotAddNewChildTermsWhenLevelOneTermIsPendingApproval"
				
				if ((DerivedAutoApprove
				or	!CatOrSubcatUsingCreationApprovals)
				and TermLevel = 1)
					CreationApproved = true
					Status = 3	
				if (TermLevel > 1
				and CreationApproved = true
				and DerivedRequireTermUpdateApproval)
					Status = 3  
					invoke Create TermAndConditionUpdate
						invoked.ProcurementGroup	= ProcurementGroup
						invoked.Article				= Article
						invoked.TermAndCondition	= TermAndCondition
						invoked.OriginalTitle		= blank 
						invoked.RevisedTitle		= Title
						invoked.OriginalHeaderText	= blank 
						invoked.RevisedHeaderText	= HeaderText
						invoked.OriginalDescription	= blank 
						invoked.RevisedDescription	= Description
						invoked.RequestingActor		= actor
						invoked.RequestType			= 2		
						invoked.Status				= 1		
						invoked.SpecificRequestType	= 2		
						invoked.RequestDateTime		= current timestamp

		Update is an Update Action
			valid when (UpdateAllowed)
			Local Fields
				LocalInvalidChange	is Boolean
			
			Action Rules
				if (!Active
				and old Active = true)
					constraint (!AnyQuestionAnswerTermRel exists)
						"CannotInactivateThisTermAndCondition;ItIsAssociatedWithActiveQuestionsOrAnswers"


				if (CreationApproved
				and	TermAndConditionUpdated
				and	CategoryOrSubCategoryChanged
				and	RequiringApprovals
				and !OldRequiringApprovals)
					LocalInvalidChange = true
				constraint (!LocalInvalidChange)
					"<DerivedCategoryChangedMessage>"

				if (CreationApproved
				and	CategoryOrSubCategoryChanged
				and !DerivedRequireTermUpdateApproval
				and (PendingTermAndConditionUpdateExists
				or	DraftTermAndConditionUpdateExists))
					LocalInvalidChange = true
				constraint (!LocalInvalidChange)
					"PendingApprovalRequestsExist.CannotChangeToACategoryOrSubCategoryThatDoesNotRequireApprovals"

				if (!CreationApproved
				and !old Category entered
				and DerivedAutoApprove)
					CreationApproved = true
					Status = 3

					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.CreationApproved = true
							invoked.Status           = 3
					
				if (Category changed
				and HasChildren)
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.Category  = Category
							
				if (SubCategory changed
				and HasChildren)
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.SubCategory = SubCategory
				
				if (Active changed
				and HasChildren)
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.Active = Active 

		UpdateTermAndConditionAndTemplates is an Instance Action
			valid when (TemplateTermAndConditionExists)
			Parameters
				NewHeaderText 	is Alpha 100
				NewDescription 	is Text
				UpdateTitle     is Boolean
			
			Action Rules
				constraint (NewHeaderText entered or NewDescription entered)
					"MustEnterEitherNewHeaderTextOrDescriptionOrBoth"
				if (NewHeaderText entered)
					HeaderText  = NewHeaderText
				if (NewHeaderText entered
				and UpdateTitle)
					Title       = NewHeaderText
				if (NewDescription entered)
					Description	= NewDescription
				
				for each ContractTemplateTermAndConditionToUpdateRel
					invoke UpdateDisplayOrderNegotiation each
						if (NewHeaderText entered)
							invoked.HeaderText 	= NewHeaderText
							if (UpdateTitle)
								invoked.Title   = NewHeaderText 
						if (NewDescription entered)
							invoked.Description	= NewDescription

				for each EventTemplateTermAndConditionUpdateRel
					invoke EventTermAndConditionUpdate each
						if (NewHeaderText entered)
							invoked.HeaderText 	= NewHeaderText
							if (UpdateTitle)
								invoked.Title   = NewHeaderText 
						if (NewDescription entered)
							invoked.Description	= NewDescription 

		Delete is a Delete Action
			Action Rules
				if (!AnotherTermForArticleRel exists)
					invoke Delete Article

				invoke CancelPendingProcesses
				
				if (TermLevel !=1)
					constraint (!Status.PendingApproval
					and !PendingTermAndConditionUpdateExists)
						"CannotDeleteTermsThatAreNotLevelOneWhenPendingApproval"

		UpdateDisplayStringValues is an Instance Action
			restricted
			Action Rules

				include MaintainDisplayString12
		
		CancelPendingProcesses is an Instance Action
			restricted
			Action Rules
				if (PendingTermAndConditionUpdateRel exists)
					if (CreationApproved)
						cancel UpdateLibraryTerm process
					else
						cancel CreateLibraryTerm process

		MoveToNewParent is an Instance Action
			valid when (CanMoveToNewParent)
			Parameters
				ProcurementGroup  
				Article
				TermAndCondition
				NewParentTermAndCondition  is a TermAndCondition
				
			Parameter Rules
				ProcurementGroup
					default to ProcurementGroup
					
				Article
					default to Article
					
				TermAndCondition
					default to TermAndCondition
				
				NewParentTermAndCondition
					required
					constraint (NewParentTermAndCondition.TermLevel != 4)
						"CannotMoveTermUnderParentThatIsTermLevelFour;OnlyFourTermLevelsAllowed"
					if (ParentTermAndCondition.TermLevel < NewParentTermAndCondition.TermLevel
					and HasChildren)
						constraint (NewParentTermAndCondition.TermLevel + NumberOfLevels !>4)
							"CannotMoveUnderParent;TermLevelForLowestLevelTermWouldBeGreaterThanFour;OnlyFourTermLevelsAllowed"
					constraint (NewParentTermAndCondition != ParentTermAndCondition)
						"NewParentTermAndConditionMustBeDifferentThanCurrent"
					constraint (NewParentTermAndCondition != TermAndCondition)
						"TermAndConditionCannotBeItsOwnParent"
					if (NewParentTermAndCondition.TermLevel = 1)
						constraint (TopLevelTermAndConditionRel.TermAndCondition = NewParentTermAndCondition)	
							"CannotMoveToParentTermAndConditionThatIsUnderADifferentLevelOneTermAndCondition"
					if (NewParentTermAndCondition.TermLevel !=1)
						constraint (TopLevelTermAndConditionRel.TermAndCondition = NewParentTermAndCondition.TopLevelTermAndConditionRel.TermAndCondition)	
							"CannotMoveToParentTermAndConditionThatIsUnderADifferentLevelOneTermAndCondition"
						
			Action Rules
				ParentTermAndCondition  	= NewParentTermAndCondition
	 		
	 		Exit Rules
	 			TermDisplayOrder        = ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder + 1
	 			TermLevel               = ParentTermAndConditionRel.TermLevel + 1
	 			Status                  = ParentTermAndConditionRel.Status
	 			CreationApproved        = ParentTermAndConditionRel.CreationApproved
	 			increment ParentTermAndConditionRel.LastChildTermAndConditionDisplayOrder            

				include MaintainDisplayString12
				for each DescendantTermAndConditionRel
					invoke Update each
			 			invoked.TermLevel               = each.ParentTermAndConditionRel.TermLevel + 1
			 			invoked.Status                  = each.ParentTermAndConditionRel.Status
			 			invoked.CreationApproved        = each.ParentTermAndConditionRel.CreationApproved
					invoke UpdateDisplayString each
						
		
		UpdateDisplayString is an Instance Action
			restricted
			
			Action Rules
			

				include MaintainDisplayString12
		
		AttachToEvent is an Instance Action
			valid when (LevelOne)
			Parameters
				Company 		is a SourcingCompany
				SourcingEvent
				SourcingEventArticle
				
			Local Fields
				NewTerm is a SourcingEventTermAndCondition view
				NewEventChildTerm is a SourcingEventTermAndCondition view

			Action Rules
				LocalCompany       = Company
				LocalSourcingEvent = SourcingEvent
				LocalArticle       = SourcingEventArticle

				constraint (Company.SourcingGroup = TermAndCondition.ProcurementGroup)
					"SourcingCompanyDoesNotBelongToProcurementGroup"
				constraint (!SourcingEventTermAndConditionRel exists)
					"TermAndConditionIsAlreadyAttachedToThisSourcingEvent"
				constraint (TermLevel = 1)
					"CanOnlyAttachTermsAtLevelOneToSourcingEvent"
				if (SourcingEvent.Status.Draft)
					invoke Update Draft SourcingEvent
						invoked.CreateFromLibrary = true
				if (EventTermDisplayOrderRel exists
				and !SourcingEventArticleDisplayRel.TermDisplayChange)
					LocalTermDisplayOrder = first EventTermDisplayOrderRel.DisplayOrder

				invoke CreateFromTerm SourcingEventTermAndCondition
					assign result to NewTerm
					invoked.Company						= Company
					invoked.SourcingEvent				= SourcingEvent
					invoked.SourcingEventArticle        = SourcingEventArticle
					invoked.TermAndConditionNumber		= TermAndCondition
					invoked.CMTerm	 					= true
					invoked.FromRepository              = true
					invoked.NewDisplayOrder				= LocalTermDisplayOrder
					fill in fields from TermAndCondition
						
				for each TermAndConditionAttachment set
					invoke CreateFromTerm SourcingEventTermAndConditionAttachment 
						invoked.Company					= Company
						invoked.SourcingEvent			= SourcingEvent
						invoked.SourcingEventArticle    = SourcingEventArticle
						invoked.SourcingEventTermAndCondition		= NewTerm.SourcingEventTermAndCondition
						invoked.SourcingEventTermAndConditionAttachment = each.TermAndConditionAttachment
						fill in fields from each
						
				for each DescendantTermAndConditionRel
					invoke CreateFromTerm SourcingEventTermAndCondition
						assign result to NewEventChildTerm
						invoked.Company						= Company
						invoked.SourcingEvent				= SourcingEvent
						invoked.TermAndConditionNumber      = each.TermAndCondition
						invoked.SourcingEventArticle        = SourcingEventArticle
						invoked.DisplayOrder                = TermDisplayOrder
						invoked.FromRepository              = true
						invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
						fill in fields from each
							except invoked.ParentTermAndCondition
					
					for each each.TermAndConditionAttachment set
						invoke CreateFromTerm SourcingEventTermAndConditionAttachment 
							invoked.Company									= Company
							invoked.SourcingEvent							= SourcingEvent
							invoked.SourcingEventArticle        			= SourcingEventArticle
							invoked.SourcingEventTermAndCondition 			= NewEventChildTerm.SourcingEventTermAndCondition
							invoked.SourcingEventTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each 

		AttachToContractInNegotiation is an Instance Action
			default label is "AttachToContract"
			restricted
			Parameters
				Contract
				ContractArticle

			Local Fields
				NewContractTerm is a ContractTermAndCondition view
				NewContractChildTerm is a ContractTermAndCondition view
			
			Action Rules
				LocalCheckContract.CheckContract = Contract
				LocalArticle					 = ContractArticle

				constraint (!ContractTermAndConditionRel exists)
					"TermAndConditionIsAlreadyAttachedToThisContract"
					
				constraint (TermLevel = 1)
					"CanOnlyAttachTermsAtLevelOneToContract"
				
				if (ContractTermDisplayOrderRel exists
				and !ContractArticleDisplayRel.TermDisplayChange)
					LocalTermDisplayOrder = first ContractTermDisplayOrderRel.DisplayOrder
				invoke AddTermDuringNegotiation ContractTermAndCondition
					assign result to NewContractTerm
					invoked.ContractGroup				= ProcurementGroup
					invoked.Contract					= Contract
					invoked.ContractArticle             = ContractArticle
					invoked.NewDisplayOrder				= LocalTermDisplayOrder
					invoked.ContractStatus				= 2
					invoked.FromRepository              = true
					fill in fields from TermAndCondition
				for each TermAndConditionAttachment set
					invoke AutoCreate ContractTermAndConditionAttachment 
						invoked.ContractGroup				= ProcurementGroup
						invoked.Contract					= Contract
						invoked.ContractArticle             = ContractArticle
						invoked.ContractTermAndCondition	= NewContractTerm.ContractTermAndCondition
						invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
						fill in fields from each
				for each DescendantTermAndConditionRel
					invoke Create Draft ContractTermAndCondition
						assign result to NewContractChildTerm
						invoked.ContractGroup				= ProcurementGroup
						invoked.Contract					= Contract
						invoked.TermAndCondition            = each.TermAndCondition
						invoked.ContractArticle             = ContractArticle
						invoked.ParentTermAndCondition      = NewContractTerm.ContractTermAndCondition
						invoked.DisplayOrder                = TermDisplayOrder
						invoked.FromRepository              = true
						invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
						fill in fields from each
							except invoked.ParentTermAndCondition
					
					for each each.TermAndConditionAttachment set
						invoke AutoCreate ContractTermAndConditionAttachment 
							invoked.ContractGroup				= ProcurementGroup
							invoked.Contract					= Contract
							invoked.ContractArticle             = ContractArticle
							invoked.ContractTermAndCondition	= NewContractChildTerm.ContractTermAndCondition
							invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each 

		AttachToContract is an Instance Action 
			valid when (LevelOne)
			Parameters
				Contract
				ContractArticle
	
			Local Fields
				NewContractTerm is a ContractTermAndCondition view
				NewContractChildTerm is a ContractTermAndCondition view
	
			Action Rules
				LocalCheckContract.CheckContract = Contract
				LocalArticle					 = ContractArticle

				constraint (Contract.AddAddendum)
					"CanNotAddTermToContract;ContractStatusMustBeDraftOrAddendum"

				constraint (!ContractArticle.Deleted)
					"CanNotAddTermToContract;ContractArticleHasBeenDisapproved"

				constraint (!ContractArticle.PendingRequestToDelete)
					"CanNotAddTermToContract;ContractArticleHasAPendingDeletionRequest"

				constraint (!ContractTermAndConditionRel exists)
					"TermAndConditionIsAlreadyAttachedToThisContract"
					
				constraint (TermLevel = 1)
					"CanOnlyAttachTermsAtLevelOneToContract"

				if (ContractTermDisplayOrderRel exists
				and !ContractArticleDisplayRel.TermDisplayChange)
					LocalTermDisplayOrder = first ContractTermDisplayOrderRel.DisplayOrder
				if (Contract.ContractStatus.Draft)
					invoke Update Draft Contract
						invoked.CreateFromLibrary = true
					invoke Create Draft ContractTermAndCondition
						assign result to NewContractTerm
						invoked.ContractGroup				= ProcurementGroup
						invoked.Contract					= Contract
						invoked.ContractArticle             = ContractArticle
						invoked.NewDisplayOrder				= LocalTermDisplayOrder
						invoked.FromRepository              = true
						fill in fields from TermAndCondition
						
					for each TermAndConditionAttachment set
						invoke AutoCreate ContractTermAndConditionAttachment 
							invoked.ContractGroup				= ProcurementGroup
							invoked.Contract					= Contract
							invoked.ContractArticle             = ContractArticle
							invoked.ContractTermAndCondition	= NewContractTerm.ContractTermAndCondition
							invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each
							
					for each DescendantTermAndConditionRel
						invoke Create Draft ContractTermAndCondition
							assign result to NewContractChildTerm
							invoked.ContractGroup				= ProcurementGroup
							invoked.Contract					= Contract
							invoked.TermAndCondition            = each.TermAndCondition
							invoked.ContractArticle             = ContractArticle
							invoked.ParentTermAndCondition      = NewContractTerm.ContractTermAndCondition
							invoked.DisplayOrder                = each.TermDisplayOrder
							invoked.FromRepository              = true
							invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
							fill in fields from each
								except invoked.ParentTermAndCondition
						
						for each each.TermAndConditionAttachment set
							invoke AutoCreate ContractTermAndConditionAttachment 
								invoked.ContractGroup				= ProcurementGroup
								invoked.Contract					= Contract
								invoked.ContractArticle             = ContractArticle
								invoked.ContractTermAndCondition	= NewContractChildTerm.ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
								fill in fields from each 
				
				else
				if (Contract.ContractStatus.Addendum)
					invoke Update Addendum Contract
						invoked.CreateFromLibrary = true
					invoke Create Addendum ContractTermAndCondition
						assign result to NewContractTerm
						invoked.ContractGroup				= ProcurementGroup
						invoked.Contract					= Contract
						invoked.ContractArticle             = ContractArticle
						invoked.NewDisplayOrder				= LocalTermDisplayOrder
						invoked.FromRepository              = true
						fill in fields from TermAndCondition
						invoked.CreationApproved			= false
						
					for each TermAndConditionAttachment set
						invoke AutoCreate ContractTermAndConditionAttachment 
							invoked.ContractGroup				= ProcurementGroup
							invoked.Contract					= Contract
							invoked.ContractArticle             = ContractArticle
							invoked.ContractTermAndCondition	= NewContractTerm.ContractTermAndCondition
							invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each
							
					for each DescendantTermAndConditionRel
						invoke Create Addendum ContractTermAndCondition
							assign result to NewContractChildTerm
							invoked.ContractGroup				= ProcurementGroup
							invoked.Contract					= Contract
							invoked.TermAndCondition            = each.TermAndCondition
							invoked.ContractArticle             = ContractArticle
							invoked.ParentTermAndCondition      = NewContractTerm.ContractTermAndCondition
							invoked.DisplayOrder                = TermDisplayOrder

							invoked.FromRepository              = true
							invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
							fill in fields from each
								except invoked.ParentTermAndCondition
						
						for each each.TermAndConditionAttachment set
							invoke AutoCreate ContractTermAndConditionAttachment 
								invoked.ContractGroup				= ProcurementGroup
								invoked.Contract					= Contract
								invoked.ContractArticle             = ContractArticle
								invoked.ContractTermAndCondition	= NewContractChildTerm.ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
								fill in fields from each 
					
		AttachToQuestionOrAnswer is an Instance Action
			valid when (LevelOne)
			Parameters
				Question
				QuestionAnswer
				
			Parameter Rules
				Question
					required
						
			Action Rules
				LocalCheckQuestion.CheckQuestion = Question	
				LocalCheckQuestionAnswer.CheckQuestionAnswer = QuestionAnswer
				
				constraint (!QuestionAnswerTermRel exists)
					"TermIsAlreadyAttachedToThisQuestionOrAnswer"
					
				constraint (TermLevel = 1)
					"CanOnlyAttachTermsAtLevelOneToThisQuestionOrAnswer"

				invoke Create QuestionAnswerTerm
					invoked.ProcurementGroup = ProcurementGroup
					invoked.Question		 = Question
					invoked.QuestionAnswer	 = QuestionAnswer
					invoked.Article          = Article		
					invoked.TermAndCondition = TermAndCondition

		RequestApproval is an Instance Action
			valid when (RequestApprovalValid)

			Action Rules
				if (!CreationApproved)	
					if (DerivedRequireTermCreationApproval)
						invoke Create TermAndConditionUpdate
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.RevisedTitle		= Title
							invoked.RevisedHeaderText	= HeaderText
							invoked.RevisedDescription	= Description
							invoked.RequestingActor		= actor
							invoked.RequestType			= 1		
							invoked.Status				= 2		
							invoked.SpecificRequestType	= 1		
							invoked.RequestDateTime		= current timestamp
	
						initiate CreateLibraryTerm process
							title is "ReviewNewTermAndCondition<TermAndCondition>-<Title>"								
							category filter is CategoryAndSubCategory
							Variables
								ProcurementGroup
								Article
								ArticleTitle
								TermAndCondition
								TermAndConditionTitle
								RequesterEmail
							URLs
								"<linkback(webapp is ContractManager navigation is TermAndConditionCreationApproval text is \"TermAndConditionApproval\")>"
	
						Status = 2	
						for each DescendantTermAndConditionRel
							invoke Create TermAndConditionUpdate
								invoked.ProcurementGroup	= ProcurementGroup
								invoked.Article				= Article
								invoked.TermAndCondition	= each.TermAndCondition
								invoked.RevisedTitle		= each.Title
								invoked.RevisedHeaderText	= each.HeaderText
								invoked.RevisedDescription	= each.Description
								invoked.RequestingActor		= actor
								invoked.RequestType			= 1		
								invoked.Status				= 2		
								invoked.SpecificRequestType	= 1		
								invoked.RequestDateTime		= current timestamp
							invoke Update each
								invoked.Status           = 2
					else
						Status = 3	
						CreationApproved = true
						for each DescendantTermAndConditionRel
							invoke Update each
								invoked.CreationApproved = true
								invoked.Status           = 3
				else
					for each DraftTermAndConditionUpdateRel
						invoke Update each
							invoked.RequestingActor		= actor
							invoked.Status				= 2		
							invoked.RequestDateTime		= current timestamp
							
					for each DraftTermAndConditionUpdateDescendantsRel
						invoke Update each
							invoked.RequestingActor		= actor
							invoked.Status				= 2		
							invoked.RequestDateTime		= current timestamp

					initiate UpdateLibraryTerm process
						title is "ReviewTermAndConditionUpdate<TermAndCondition>-<Title>"
						category filter is CategoryAndSubCategory								
						Variables
							ProcurementGroup
							Article
							ArticleTitle
							TermAndCondition
							TermAndConditionTitle
							RequesterEmail
						URLs
							"<linkback(webapp is ContractManager navigation is TermAndConditionUpdateApproval text is \"TermAndConditionApproval\")>"

		WithdrawApprovalRequest is an Instance Action
			valid when (ActiveApprovalRequestExists)

			Action Rules
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				for each PendingTermAndConditionUpdateDescendantsRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				for each DraftTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				for each DraftTermAndConditionUpdateDescendantsRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				if (CreationApproved)
					Status = 3	
					cancel UpdateLibraryTerm process
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.Status           = 3
				else
					cancel CreateLibraryTerm process
					Status = 1	
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.Status           = 1

		RejectCreate is an Instance Action
			restricted
			action comment required
			Action Rules
				Status = 1	
				invoke Update CurrentTermAndConditionUpdateRel
					invoked.ActionTaken			= 1		
					invoked.Status				= 3		
					invoked.RejectionComment	= action comment
				for each DescendantTermAndConditionRel
					invoke Update each.CurrentTermAndConditionUpdateRel
						invoked.ActionTaken			= 1		
						invoked.Status				= 3		
						invoked.RejectionComment	= action comment	
					invoke Update each
						invoked.Status           = 1

		ManualReject is an Instance Action
			valid when (PendingTermAndConditionUpdateExistsSomewhere)
			action comment required

			Action Rules
				if (CreationApproved)
					for each PendingTermAndConditionUpdateRel
						invoke Update each
							invoked.ActionTaken			= 1		
							invoked.Status				= 3		
							invoked.RejectionComment	= action comment
					for each PendingTermAndConditionUpdateDescendantsRel
						invoke Update each
							invoked.ActionTaken			= 1		
							invoked.Status				= 3		
					cancel UpdateLibraryTerm process
				else
					Status = 1	
					for each DescendantTermAndConditionRel
						invoke Update each
							invoked.Status           = 1
						invoke Update each.CurrentTermAndConditionUpdateRel
							invoked.ActionTaken	= 1		
							invoked.Status		= 3		
					invoke Update CurrentTermAndConditionUpdateRel
						invoked.ActionTaken			= 1		
						invoked.Status				= 3		
						invoked.RejectionComment	= action comment
					cancel CreateLibraryTerm process

		ApproveCreate is an Instance Action
			restricted
			Action Rules
				Status = 3	
				CreationApproved = true
				for each DescendantTermAndConditionRel
					invoke Update each
						invoked.Status           = 3
						invoked.CreationApproved = true
					invoke Update each.CurrentTermAndConditionUpdateRel
						invoked.ActionTaken	= 2		
						invoked.Status		= 3		
				invoke Update CurrentTermAndConditionUpdateRel
					invoked.ActionTaken	= 2		
					invoked.Status		= 3		

		ManualApprove is an Instance Action
			valid when (PendingTermAndConditionUpdateExistsSomewhere)

			Action Rules
				if (CreationApproved)
					invoke ApproveUpdate
					cancel UpdateLibraryTerm process
				else
					invoke ApproveCreate
					cancel CreateLibraryTerm process

		ApproveCreateWithComment is an Instance Action
			restricted
			action comment required
			Action Rules
				Status = 3	
				CreationApproved = true
				for each DescendantTermAndConditionRel
					invoke Update each
						invoked.Status           = 3
						invoked.CreationApproved = true
					invoke Update each.CurrentTermAndConditionUpdateRel
						invoked.ActionTaken	= 2		
						invoked.Status		= 3		
				invoke Update CurrentTermAndConditionUpdateRel
					invoked.ActionTaken		= 2		
					invoked.Status			= 3		
					invoked.ApprovalComment	= action comment

		RejectUpdate is an Instance Action
			restricted
			action comment required
			Action Rules
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken			= 1		
						invoked.Status				= 3		
						invoked.RejectionComment	= action comment
				for each PendingTermAndConditionUpdateDescendantsRel
					invoke Update each
						invoked.ActionTaken			= 1		
						invoked.Status				= 3		

		ApproveUpdate is an Instance Action
			restricted
			Local Fields
				LocalTermAndConditionAttachment is a TermAndConditionAttachment view

			Action Rules
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken		= 2		
						invoked.Status			= 3		
					if (each.SpecificRequestType.UpdateTermAndCondition)
						Title = each.RevisedTitle
						HeaderText = each.RevisedHeaderText
						Description = each.RevisedDescription
					else
					if (each.SpecificRequestType.AddAttachment)
						invoke Create TermAndConditionAttachment
							assign result to LocalTermAndConditionAttachment
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.Attachment			= each.NewAttachment
							invoked.AttachmentReference	= each.NewAttachmentReference
						LocalTAndCAttachmentNumber = LocalTermAndConditionAttachment.TermAndConditionAttachment
						if (each.NewAttachmentDisplayOrder > 0)
							invoke UpdateDisplayOrder AddTermAndConditionAttachmentRel
								invoked.NewDisplayOrder		= each.NewAttachmentDisplayOrder
					if (each.SpecificRequestType.DeleteAttachment)
						invoke DeleteFromRequest each.TermAndConditionAttachmentRel
				for each PendingTermAndConditionUpdateDescendantsRel
					invoke Update each
						invoked.ActionTaken		= 2		
						invoked.Status			= 3		
					if (each.SpecificRequestType.UpdateTermAndCondition)
						Title = each.RevisedTitle
						HeaderText = each.RevisedHeaderText
						Description = each.RevisedDescription
					else
					if (each.SpecificRequestType.AddAttachment)
						invoke Create TermAndConditionAttachment
							assign result to LocalTermAndConditionAttachment
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.Attachment			= each.NewAttachment
							invoked.AttachmentReference	= each.NewAttachmentReference
						LocalTAndCAttachmentNumber = LocalTermAndConditionAttachment.TermAndConditionAttachment
						if (each.NewAttachmentDisplayOrder > 0)
							invoke UpdateDisplayOrder AddTermAndConditionAttachmentRel
								invoked.NewDisplayOrder		= each.NewAttachmentDisplayOrder
					if (each.SpecificRequestType.DeleteAttachment)
						invoke DeleteFromRequest each.TermAndConditionAttachmentRel

		ApproveUpdateWithComment is an Instance Action
			restricted
			action comment required
			Local Fields
				LocalTermAndConditionAttachment is a TermAndConditionAttachment view

			Action Rules
				for each PendingTermAndConditionUpdateRel
					invoke Update each
						invoked.ActionTaken		= 2		
						invoked.Status			= 3		
						invoked.ApprovalComment	= action comment
					if (each.SpecificRequestType.UpdateTermAndCondition)
						Title = each.RevisedTitle
						HeaderText = each.RevisedHeaderText
						Description = each.RevisedDescription
					else
					if (each.SpecificRequestType.AddAttachment)
						invoke Create TermAndConditionAttachment
							assign result to LocalTermAndConditionAttachment
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.Attachment			= each.NewAttachment
							invoked.AttachmentReference	= each.NewAttachmentReference
						LocalTAndCAttachmentNumber = LocalTermAndConditionAttachment.TermAndConditionAttachment
						if (each.NewAttachmentDisplayOrder > 0)
							invoke UpdateDisplayOrder AddTermAndConditionAttachmentRel
								invoked.NewDisplayOrder		= each.NewAttachmentDisplayOrder
					if (each.SpecificRequestType.DeleteAttachment)
						invoke DeleteFromRequest each.TermAndConditionAttachmentRel
				for each PendingTermAndConditionUpdateDescendantsRel
					invoke Update each
						invoked.ActionTaken		= 2		
						invoked.Status			= 3		
						invoked.ApprovalComment	= action comment
					if (each.SpecificRequestType.UpdateTermAndCondition)
						Title = each.RevisedTitle
						HeaderText = each.RevisedHeaderText
						Description = each.RevisedDescription
					else
					if (each.SpecificRequestType.AddAttachment)
						invoke Create TermAndConditionAttachment
							assign result to LocalTermAndConditionAttachment
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.Attachment			= each.NewAttachment
							invoked.AttachmentReference	= each.NewAttachmentReference
						LocalTAndCAttachmentNumber = LocalTermAndConditionAttachment.TermAndConditionAttachment
						if (each.NewAttachmentDisplayOrder > 0)
							invoke UpdateDisplayOrder AddTermAndConditionAttachmentRel
								invoked.NewDisplayOrder		= each.NewAttachmentDisplayOrder
					if (each.SpecificRequestType.DeleteAttachment)
						invoke DeleteFromRequest each.TermAndConditionAttachmentRel

		UpdateDescription is an Instance Action
			default label is "UpdateTermAndCondition"
			valid when (UpdateDescriptionActionValid)

			Parameters
				PrmRequestedTitle				is a Description
				PrmRequestedHeaderText			is Alpha 100
				PrmRequestedDescription			is Text
		        	Text Variables
		        		ContractName
		        		ContractNumber
		        		ContractRebateFrequency
						ContractRebatePercent
		        		ContractRebateType
						ContractReviewDate
		  	     		Distributor 
		          		DiversityCode
		          		DiversityCodeDescription
		          		EffectiveDate
		          		EventBuyer
		        		EventBuyerPhoneNumber
		        		EventBuyerEmailAddress
						EventCloseDate
		        		EventCommodities
						EventDescription
						EventName
						EventNumber				    
		         		EventOpenDate		
			       		EventType		
		        		EventReference
		        		ExpirationDate        			     		      						
		         		FirstHeaderRetainagePercent
		        		FirstHeaderRetainageUpToPercent
		           		FreightTerm
		        		GroupPurchasingOrganization
		        		Manufacturer 
		        		PrimaryInternalContact
		        		PrimaryInternalContactEmailAddress
		        		PrimaryInternalContactPhoneNumber
		 				ProjectNumber
		 				ProjectName
		 				ProposedTotalContractAmount
		 				PurchaseOrderNumber
		        		SecondHeaderRetainagePercent
		        		SupplierBusinessType
		        		SupplierContact
		        		SupplierContactAddress
		        		SupplierContactEmailAddress
		        		SupplierContactFaxNumber
		        		SupplierContactPhoneNumber
		        		SupplierName
		        		SupplierTaxId
		        		TAndCAttachmentReference    value is TermAndConditionAttachment.AttachmentReference
		        		WorkingContractID

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedDraftRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedDraftRequestedHeaderText
					if (!PrmRequestedHeaderText entered)		
						default to PrmRequestedTitle
				PrmRequestedDescription
					required
						"NewDescriptionIsRequired"
					initial value is DerivedDraftRequestedDescription
			
			Action Rules
				if ((!CreationApproved
				and	 DerivedRequireTermCreationApproval)
				or	(CreationApproved
				and	 DerivedRequireTermUpdateApproval))
					if (DraftTermAndConditionTextUpdateRel exists)
						invoke Update DraftTermAndConditionTextUpdateRel
							invoked.RevisedTitle		= PrmRequestedTitle
							invoked.RevisedHeaderText	= PrmRequestedHeaderText
							invoked.RevisedDescription	= PrmRequestedDescription
					else
						invoke Create TermAndConditionUpdate
							invoked.ProcurementGroup	= ProcurementGroup
							invoked.Article				= Article
							invoked.TermAndCondition	= TermAndCondition
							invoked.OriginalTitle		= Title
							invoked.RevisedTitle		= PrmRequestedTitle
							invoked.OriginalHeaderText	= HeaderText
							invoked.RevisedHeaderText	= PrmRequestedHeaderText
							invoked.OriginalDescription	= Description
							invoked.RevisedDescription	= PrmRequestedDescription
							invoked.RequestingActor		= actor
							invoked.RequestType			= 2		
							invoked.Status				= 1		
							invoked.SpecificRequestType	= 2		
							invoked.RequestDateTime		= current timestamp
				else
					Title = PrmRequestedTitle
					HeaderText = PrmRequestedHeaderText
					Description = PrmRequestedDescription

		AddAttachment is an Instance Action
			valid when (UpdateDescriptionActionValid)

			Parameters
				PrmNewAttachment				is a Attachment
				PrmNewAttachmentReference 		is a Description
				PrmNewAttachmentDisplayOrder	is a DisplayOrder

			Parameter Rules
				PrmNewAttachment
					required
						"AttachmentIsRequired"
				PrmNewAttachmentDisplayOrder
					constraint (PrmNewAttachmentDisplayOrder <= (NumberOfExistingAttachments + 1 - NumberOfAttachmentsToBeDeleted + NumberOfAttachmentsToBeAdded))
						"InvalidAttachmentDisplayOrder"

			Action Rules
				invoke Create TermAndConditionUpdate
					invoked.ProcurementGroup			= ProcurementGroup
					invoked.Article						= Article
					invoked.TermAndCondition			= TermAndCondition
					invoked.NewAttachment				= PrmNewAttachment
					invoked.NewAttachmentReference		= PrmNewAttachmentReference
					invoked.NewAttachmentDisplayOrder	= PrmNewAttachmentDisplayOrder
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.Status						= 1		
					invoked.SpecificRequestType			= 3		
					invoked.RequestDateTime				= current timestamp

		UpdateDisplayStringAll is a Set Action
			restricted
			
			Action Rules
			
				Instance Rules
				
					include MaintainDisplayString12 

		DeleteAttachment is an Instance Action
			valid when (DeleteAttachmentValid)

			Parameters
				PrmAttachmentToDelete		is a TermAndConditionAttachment

			Parameter Rules
				PrmAttachmentToDelete
					required
						"AttachmentIsRequired"

			Action Rules
				invoke Create TermAndConditionUpdate
					invoked.ProcurementGroup		= ProcurementGroup
					invoked.Article					= Article
					invoked.TermAndCondition		= TermAndCondition
					invoked.RequestingActor			= actor
					invoked.AttachmentToDelete		= PrmAttachmentToDelete.TermAndConditionAttachment
					invoked.DeletedAttachment 		= PrmAttachmentToDelete.Attachment
					invoked.DeletedAttachmentRef 	= PrmAttachmentToDelete.AttachmentReference
					invoked.RequestType				= 2		
					invoked.Status					= 1		
					invoked.SpecificRequestType		= 4		
					invoked.RequestDateTime			= current timestamp

