CashLedgerCashReceiptHeader is a BusinessClass
    owned by cb
    prefix is CBP
    classic name is CBRECPTHDR

    Ontology
        symbolic key is CashLedgerCashReceiptHeader
            classic set name is CBPSET1
            classic name for CashLedgerCashReceiptHeader.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerCashReceiptHeader.TransactionNumber is TRANS-NBR

    Patterns
		implements InlineUserFields
			size is 1000	       
        implements StaticJava
        disable AuditIndex
        implements BODId

    Persistent Fields
		CommentText
        TransactionType                     is AlphaUpper size 1
            classic name is TRANS-TYPE
            States
                Manual       value is blank
                WireTransfer value is "1"
                Lockbox      value is "3"
                Rebate       value is "5"
		TransactionData1                    is a TransactionData
            classic name is USER-FIELD1
		TransactionData2                    is a TransactionData
            classic name is USER-FIELD2
		TransactionData3                    is a TransactionData
            classic name is USER-FIELD3
		TransactionData4                    is a TransactionData
            classic name is USER-FIELD4
        Company                             is a CompanyIsolated  		
        DepositDate                         is an ExchangeDate
        CurrencyTable													
        DepositAmount                       is a CurrencyAmount
        	precision is CashCode.BankAccountNumber.Currency.NumberOfDecimals
        BaseAmount                          is a FinanceCurrencyAmount  
        TransactionCurrencyNumberOfDecimals is an AcctNd
            sql name is TCurrencyNumberOfDecimals
            classic name is TRAN-ND
        BaseCurrencyNumberOfDecimals        is a BaseNumberOfDecimals
            classic name is BASE-ND

		CashProcessLevel  
            classic name is PROC-LEVEL
        PostDate                            is Date
        Currency							is a FromCurrency
            classic name is CURRENCY-CODE

        AppliedBankAmount       			is an InternationalAmount 
            classic name is DEP-APPL-AMT
        AppliedBaseAmount       			is a DocumentCurrencyTotals 
            classic name is BASE-APPL-AMT
        Description
        LastDistributionSequence            is a SequenceNumber
            classic name is LAST-DIST-SEQ
        	disable Auditing
        Status                              is Numeric size 1
            classic name is REC-STATUS
            States
                Unreleased		value is 0
                Released		value is 1
                PendingApproval	value is 2


        JournalBook
        	context of Company.OrigCompany
            classic name is JRNL-BOOK-NBR
            restricted
        CashLedgerStatement					is like CashLedgerStatement
            classic name is RECON-STMT-NBR
        JournalBookSequenceNumber           is a JbkSeqNbr
            classic name is JBK-SEQ-NBR
            restricted
        GeneralLedgerSourceCode				is a GeneralLedgerEvent
            classic name is SOURCE-CODE
            default label is "SourceCode"
		ApprovalCostCenter					is like AccountingUnit		
		ApprovalCategory					
		ApprovalCode
		ApprovalLevel						is Numeric 8
		ReassignToApprovalLevel				is an ApprovalCodeResource
		Approver							is a FinanceResource
		ApproverTeam						is a FinanceTeamField
        CompanyCashCode
			context of Company.OrigCompany
        NumberOfFinancialInstruments		is Numeric 5				
		CashCodeTransactionCode
			context of CashLedgerCashReceiptHeader.BankTransactionCode
		OriginatingImportRun				is a CashTransactionImportResult
			delete ignored
		ImportInProcess						is Boolean						
		CashLedgerBatchApproval
			default label is "ApprovalBatch"
		BudgetEditProcessing 				is Numeric size 1
			States
                NotInProcessing value is 0
                InProcess  		value is 1
                Failure    		value is 2
                Success    		value is 3			
		CashLedgerMassReleaseResult			is Numeric size 12
		ReceiptAttachment					is an AlternateAttachment		
		CreatedBy							is like Actor
		CreateDate							is TimeStamp
	Context Fields
		FSMInboundBODTracker	
	Rule Blocks
		SetCurrencyData
			TransientAccountingEntity	= Company.OrigCompany.AccountingEntity
        	Currency 					= CashCode.Currency

		CheckForRelatedChanges	
			if (DepositDate changed
			or  CurrencyTable changed)
				if (first CashLedgerCashReceiptDetailsRel exists)
					for each CashLedgerCashReceiptDetailsRel
						invoke RecalcCurrencyAmountsForAllDistributions each


		DistributionRoundingOffSet
			initialize LocalDistributionFinanceCurrAmt
			for each CashLedgerCashReceiptDetailsRel
				LocalDistributionFinanceCurrAmt.FunctionalAmount.EnteredCurrencyAmount		+= each.ReceiptBaseAmount.FunctionalAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount.EnteredCurrencyAmount		+= each.ReceiptBaseAmount.AlternateAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount2.EnteredCurrencyAmount		+= each.ReceiptBaseAmount.AlternateAmount2.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount3.EnteredCurrencyAmount		+= each.ReceiptBaseAmount.AlternateAmount3.EnteredCurrencyAmount





				LocalDistributionFinanceCurrAmt.ReportAmount1.EnteredCurrencyAmount			+= each.ReceiptBaseAmount.ReportAmount1.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount2.EnteredCurrencyAmount			+= each.ReceiptBaseAmount.ReportAmount2.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount3.EnteredCurrencyAmount			+= each.ReceiptBaseAmount.ReportAmount3.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount4.EnteredCurrencyAmount			+= each.ReceiptBaseAmount.ReportAmount4.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount5.EnteredCurrencyAmount			+= each.ReceiptBaseAmount.ReportAmount5.EnteredCurrencyAmount

			invoke AdjustDistributionCurrencyAmounts last CashLedgerCashReceiptDetailsRel
				invoked.PrmCurrencyAmountAdjustment.FunctionalTotal		= (BaseAmount.FunctionalAmount.EnteredCurrencyAmount	- LocalDistributionFinanceCurrAmt.FunctionalAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal		= (BaseAmount.AlternateAmount.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.AlternateAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal2		= (BaseAmount.AlternateAmount2.EnteredCurrencyAmount	- LocalDistributionFinanceCurrAmt.AlternateAmount2.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal3		= (BaseAmount.AlternateAmount3.EnteredCurrencyAmount	- LocalDistributionFinanceCurrAmt.AlternateAmount3.EnteredCurrencyAmount)





				invoked.PrmCurrencyAmountAdjustment.ReportTotal1		= (BaseAmount.ReportAmount1.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.ReportAmount1.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal2		= (BaseAmount.ReportAmount2.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.ReportAmount2.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal3		= (BaseAmount.ReportAmount3.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.ReportAmount3.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal4		= (BaseAmount.ReportAmount4.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.ReportAmount4.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal5		= (BaseAmount.ReportAmount5.EnteredCurrencyAmount		- LocalDistributionFinanceCurrAmt.ReportAmount5.EnteredCurrencyAmount)
					
		ReverseBaseAmounts
			LocalFinanceCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 		*= -1

		ReverseTaxBaseAmounts
			LocalFinanceCurrencyAmountGroup.FunctionalAmount.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount.EnteredCurrencyAmount		*= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount2.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmountGroup.AlternateAmount3.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmountGroup.ToFunctionalAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount.EnteredCurrencyAmount		*= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount2.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmountGroup.ToAlternateAmount3.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmountGroup.ProjectAmount.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount1.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount2.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount3.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount4.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmountGroup.ReportAmount5.EnteredCurrencyAmount 	 	*= -1

		ReverseNetReceiptBaseAmounts
			LocalFinanceCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount 	= ((each.ReceiptBaseAmount.FunctionalAmount.EnteredCurrencyAmount 	- each.TaxAmountData.FunctionalAmount.EnteredCurrencyAmount) 	* -1)
			LocalFinanceCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	= ((each.ReceiptBaseAmount.AlternateAmount.EnteredCurrencyAmount 	- each.TaxAmountData.AlternateAmount.EnteredCurrencyAmount) 	* -1)
			LocalFinanceCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount 	= ((each.ReceiptBaseAmount.AlternateAmount2.EnteredCurrencyAmount 	- each.TaxAmountData.AlternateAmount2.EnteredCurrencyAmount) 	* -1)
			LocalFinanceCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount 	= ((each.ReceiptBaseAmount.AlternateAmount3.EnteredCurrencyAmount 	- each.TaxAmountData.AlternateAmount3.EnteredCurrencyAmount) 	* -1)
			LocalFinanceCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = ((each.ReceiptBaseAmount.ToFunctionalAmount.EnteredCurrencyAmount - each.TaxAmountData.ToFunctionalAmount.EnteredCurrencyAmount)	* -1)
			LocalFinanceCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	= ((each.ReceiptBaseAmount.ToAlternateAmount.EnteredCurrencyAmount 	- each.TaxAmountData.ToAlternateAmount.EnteredCurrencyAmount) 	* -1)
			LocalFinanceCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount = ((each.ReceiptBaseAmount.ToAlternateAmount2.EnteredCurrencyAmount - each.TaxAmountData.ToAlternateAmount2.EnteredCurrencyAmount)	* -1)
			LocalFinanceCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount = ((each.ReceiptBaseAmount.ToAlternateAmount3.EnteredCurrencyAmount - each.TaxAmountData.ToAlternateAmount3.EnteredCurrencyAmount)	* -1)
			LocalFinanceCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 	 	= ((each.ReceiptBaseAmount.ProjectAmount.EnteredCurrencyAmount 		- each.TaxAmountData.ProjectAmount.EnteredCurrencyAmount) 		* -1)
			LocalFinanceCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 		= ((each.ReceiptBaseAmount.ReportAmount1.EnteredCurrencyAmount 		- each.TaxAmountData.ReportAmount1.EnteredCurrencyAmount) 		* -1)
			LocalFinanceCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 		= ((each.ReceiptBaseAmount.ReportAmount2.EnteredCurrencyAmount 		- each.TaxAmountData.ReportAmount2.EnteredCurrencyAmount) 		* -1)
			LocalFinanceCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 		= ((each.ReceiptBaseAmount.ReportAmount3.EnteredCurrencyAmount 		- each.TaxAmountData.ReportAmount3.EnteredCurrencyAmount) 		* -1)
			LocalFinanceCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 		= ((each.ReceiptBaseAmount.ReportAmount4.EnteredCurrencyAmount 		- each.TaxAmountData.ReportAmount4.EnteredCurrencyAmount) 		* -1)
			LocalFinanceCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 		= ((each.ReceiptBaseAmount.ReportAmount5.EnteredCurrencyAmount 		- each.TaxAmountData.ReportAmount5.EnteredCurrencyAmount) 		* -1)

		SetLocalFinanceCurrencyAmounts
			LocalFinanceCurrencyAmount.FunctionalAmount   	= LocalFinanceCurrencyAmountGroup.FunctionalAmount	 
			LocalFinanceCurrencyAmount.AlternateAmount    	= LocalFinanceCurrencyAmountGroup.AlternateAmount    	
			LocalFinanceCurrencyAmount.AlternateAmount2   	= LocalFinanceCurrencyAmountGroup.AlternateAmount2 
			LocalFinanceCurrencyAmount.AlternateAmount3   	= LocalFinanceCurrencyAmountGroup.AlternateAmount3   	
			LocalFinanceCurrencyAmount.ToFunctionalAmount 	= LocalFinanceCurrencyAmountGroup.ToFunctionalAmount 	
			LocalFinanceCurrencyAmount.ToAlternateAmount  	= LocalFinanceCurrencyAmountGroup.ToAlternateAmount  	
			LocalFinanceCurrencyAmount.ToAlternateAmount2 	= LocalFinanceCurrencyAmountGroup.ToAlternateAmount2
			LocalFinanceCurrencyAmount.ToAlternateAmount3 	= LocalFinanceCurrencyAmountGroup.ToAlternateAmount3  	
			LocalFinanceCurrencyAmount.ProjectAmount 	  	= LocalFinanceCurrencyAmountGroup.ProjectAmount 	 	
			LocalFinanceCurrencyAmount.ReportAmount1 	  	= LocalFinanceCurrencyAmountGroup.ReportAmount1 	 	
			LocalFinanceCurrencyAmount.ReportAmount2 	  	= LocalFinanceCurrencyAmountGroup.ReportAmount2 		 
			LocalFinanceCurrencyAmount.ReportAmount3 	  	= LocalFinanceCurrencyAmountGroup.ReportAmount3 		 
			LocalFinanceCurrencyAmount.ReportAmount4 	  	= LocalFinanceCurrencyAmountGroup.ReportAmount4 		 
			LocalFinanceCurrencyAmount.ReportAmount5 	  	= LocalFinanceCurrencyAmountGroup.ReportAmount5 		 
			 	 					 	 						
		CreateTaxTran
			initialize CalculateTax
            CalculateTax.Function                      	 	= "I"
            CalculateTax.TaxCode                       	 	= each.TaxCode
            CalculateTax.TaxEntity                     		= Company.OrigCompany.AccountingEntity	
            CalculateTax.System                         	= "CB"
            TaxOut                                      	= CalculateTax.ExecuteCalculateTax
			TaxTableOutput    						 		= CalculateTax.TaxTable.TaxTableOutput[1]
			initialize ProcessTaxHistory
			if (each.CashCategory entered)
				if (each.CashCategory exists)
					ProcessTaxHistory.VendorOrCustomerName 	= each.CashCategory.Description
				else
					ProcessTaxHistory.VendorOrCustomerName 	= Description
			ProcessTaxHistory.HistoryType                 	= "O"
			ProcessTaxHistory.InvoiceCompany               	= Company
			ProcessTaxHistory.TaxCode                     	= each.TaxCode
			ProcessTaxHistory.SystemCode                  	= "CB"
			ProcessTaxHistory.Invoice                     	= CashLedgerCashReceiptHeader.TransactionNumber
			ProcessTaxHistory.TaxEntity               		= each.ReceiptAccount.ToAccountingEntity 
			ProcessTaxHistory.TaxTransactionAccount       	= TaxTableOutput.TaxOutputAccount
			ProcessTaxHistory.VoucherNumber               	= each.CashLedgerCashReceiptHeader.TransactionNumber
			ProcessTaxHistory.TaxPointDate                	= DepositDate
			ProcessTaxHistory.InvoiceDate                 	= DepositDate
			ProcessTaxHistory.PostDate                    	= PostDate
			ProcessTaxHistory.TransactionCurrency         	= Currency
			ProcessTaxHistory.TransactionInvoiceAmount    	= each.ReceiptBankAmount * -1
			ProcessTaxHistory.TransactionTaxableAmount    	= each.TaxableData.CurrencyAmount * -1
			ProcessTaxHistory.TransactionTaxAmount        	= each.TaxAmountData.CurrencyAmount * -1
			ProcessTaxHistory.TransactionNumberOfDecimals 	= TransactionCurrencyNumberOfDecimals
			ProcessTaxHistory.TaxRate                     	= each.TaxRate
			ProcessTaxHistory.AccruedOrInvoiced           	= "I"
			ProcessTaxHistory.ProcessLevel                	= CashProcessLevel
			TaxOut 										  	= ProcessTaxHistory.TaxHistoryProcessed
			constraint (ProcessTaxHistory.OutputErrorMessage not entered)
				"<ProcessTaxHistory.OutputErrorMessage>"


		InitiateApprovalProcessFlow
			LocalCashManagementGroup		= CashManagementGroup
			LocalCashCode					= CashCode
			LocalBankTransactionCode		= CashLedgerCashReceiptHeader.BankTransactionCode
			LocalTransactionNumber			= CashLedgerCashReceiptHeader.TransactionNumber
			
			initiate CashLedgerReceiptApproval process
				title is "CashLedgerReceipt<CashLedgerCashReceiptHeader.TransactionNumber>WaitingForApproval" 
				Variables
					LocalCashManagementGroup
					LocalCashCode
					LocalBankTransactionCode
					LocalTransactionNumber
				URLs
					"<linkback(webapp is CashManager navigation is ProcessFlowForm text is \"ViewCashLedgerReceipt\")>"

		BuildTeamApproverActorList
			LocalApproverList = ""
			LocalFirstApproverAssigned = false
			for each FinanceTeamMembersFromCurrentApprovalLevelRel
				if (LocalFirstApproverAssigned)
					LocalApproverList = LocalApproverList + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverList = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssigned = true
		
		GetNextEscalationApprovalLevel
			LocalApprovalLevel		= ApprovalLevel
			if (first LocalApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalApprovalLevel	= ApprovalLevel + 1
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
			else
				LocalApprovalLevel	= first LocalApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam

		GetNextApprovalLevel
			if (ApprovalLevel < 1)
				LocalApprovalLevel	= first ApprovalCodeResourceRel.ApprovalLevel
				LocalApprover		= first ApprovalCodeResourceRel.Approver
				LocalApproverTeam	= first ApprovalCodeResourceRel.ApprovalTeam
			else
				LocalApprovalLevel		= ApprovalLevel + 1
				if (LocalApprovalCodeLevelRel exists)
					LocalApprovalLevel	= first LocalApprovalCodeLevelRel.ApprovalLevel
					LocalApprover		= first LocalApprovalCodeLevelRel.Approver
					LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
				else
					initialize LocalApprovalLevel
					initialize LocalApprover
					initialize LocalApproverTeam


		ReleaseExitRules

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or  GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
				invoke UpdateToReleased GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity



		PerformBudgetEditsForRelease






			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess                   
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    													= CashManagementGroup
					invoked.PrmBudgetEditGroup           													= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReceipt.CashCode						= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReceipt.CashLedgerCashReceiptHeader	= CashLedgerCashReceiptHeader
					invoked.PrmMode																			= BudgetEditMode.UpdateOnly
					invoked.PrmBusinessClassName  					              							= "CashLedgerCashReceiptHeader"	
					invoked.PrmEditContext  		                   										= "Release"						
					if (initiating action	= "CashLedgerReceiptImport.InterfaceCashReceipts")	
						invoked.PrmIsBatch	= true
			else
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				invoke FinalRelease


		PerformFundAmountEdit

			invoke Delete CashCodeFundEditRel
			for each CashLedgerGLDistributionsRel
				initialize LocalCalculateCashFinanceStructure
				LocalCalculateCashFinanceStructure.InputCashManagementGroup				= each.CashManagementGroup
				LocalCalculateCashFinanceStructure.InputCashCode						= each.CashCode
				LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord			= each.CashLedgerSourceRecord
				LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution		= each.CashLedgerGLDistribution
				LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock				= each.CashLedgerGLDistribution.GLFinanceCodeBlock
				LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType	= CashLedgerFinanceStructureType.CashCodeDistribution
				if (CashLedgerCashReceiptHeader.BankTransactionCode.AutomaticReconciliation 
				and CompanyCashCode.ReconcileGeneralLedgerEntry)
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.ReconciliationAccount
				else
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.CashAccount
				LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure

				LocalToAccountingEntity		= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.ToAccountingEntity
				if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
					LocalAccountingUnit			= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.AccountingUnit
				else
					LocalFinanceDimension1		= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.FinanceDimension1

				if (CashCode.EditAvailableFunds)
					invoke Update CashCodeFundEditByFundRel
						invoked.EditAmount += each.GLTransactionAmount
				else
					if (CashCodeFundRel !exists)
						invoke Update CashCodeFundEditByFundRel
								




		GetAutoNumberByLevel
			if (CashManagementGroup.AutoTranNumberByCompany)
				AutoNumberByCompany 				= Company
			else	 									 
			if (CashManagementGroup.AutoTranNumberByCashCode)
				AutoNumberByCashCode				= CashCode
			else	  					  
			if (CashManagementGroup.AutoTranNumberByBankTransactionCode)
				AutoNumberByBankTransactionCode		= CashLedgerCashReceiptHeader.BankTransactionCode
			else
			if (CashManagementGroup.AutoTranNumberByCashCodeBankTranCode)
				AutoNumberByCashCode				= CashCode
				AutoNumberByBankTransactionCode		= CashLedgerCashReceiptHeader.BankTransactionCode	

		StripLeadingSpaces	
			while (CashLedgerCashReceiptHeader.TransactionNumber[1:1] = blank)
				CashLedgerCashReceiptHeader.TransactionNumber = CashLedgerCashReceiptHeader.TransactionNumber[2:22]
				
		CheckForDuplicates
			constraint (CashLedgerTransactionsRel not exist)
				"TransactionNumberAlreadyInUseAsBankTransaction"        
			if (CashLedgerFundTransferHeaderRel exists)
				constraint (CashLedgerCashReceiptHeader.BankTransactionCode not = CashLedgerFundTransferHeaderRel.BankTransactionCode)
					"TransactionNumberAlreadyInUseAsBankFundsTransfer" 	
			constraint (CashLedgerFundTransferDetailsRel not exist)
				"TransactionNumberAlreadyInUseAsBankFundsTransfer"   	


		CashAllocationCodeEdits	
			if (TransientCashAllocationCode entered)
				if (TransientCashAllocationCode.AllocationType.Amount)
					constraint (TransientCashAllocationAmount not entered)
						"AllocationCodeIsAnAmountType;CannotEnterAnAmount"
				if (TransientCashAllocationCode.AllocationType.AccountOnly
				or  TransientCashAllocationCode.AllocationType.Percent)
					constraint (TransientCashAllocationAmount entered)
						"AllocationCodeRequiresAnAmount"
			else
				if (TransientCashAllocationAmount entered)
					constraint (TransientCashAllocationCode entered)
						"AllocationAmountRequiresAnAllocationCode"			
			
	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCashReceipt"

		ContextMessageText is a MessageField
			restricted
			"CashLedgerCashReceiptHeader<CashLedgerCashReceiptHeader>"
			
		OutOfBalanceMessage		is a MessageField
			restricted
			"UpdateComplete;CashReceiptIsOutOfBalance"    

		ActionCompleteMessage					is a MessageField
			restricted
			"ActionComplete"

		ReleaseCompleteMessage					is a MessageField
			restricted
			"ReleaseComplete"

        BalanceAmount is a DerivedField
            type is like InternationalAmount
            return  DepositAmount - AppliedBankAmount

		DerivedTransactionIdentifier is a DerivedField
			type is like CashLedgerTransactionIdentifier
			return first RelatedCashLedgerTransactionsRel.CashLedgerTransactionIdentifier

		DerivedCashLedgerTransaction is a DerivedField
			type is like CashLedgerTransactionIdentifier
			return first RelatedCashLedgerTransactionsRel.CashLedgerTransaction

        DerivedTransactionCount is a DerivedField
            type is Numeric 7
            return  1
            
		DerivedRoundTo is a DerivedField 
			type is Decimal 5.4
			restricted
			if (TransactionCurrencyNumberOfDecimals= 2)
				return .01
			else
			if (TransactionCurrencyNumberOfDecimals= 0)
				return 1
			else
			if (TransactionCurrencyNumberOfDecimals= 3)
				return .001
			else
			if (TransactionCurrencyNumberOfDecimals= 4)
				return .0001
		
		DerivedPlainTextComment   is a DerivedField  
		    type is Text
		    return CommentText plain text
            

		DerivedNextApprovalLevel is a DerivedField
			type is Numeric 8
			restricted
			LocalApprovalLevel = ApprovalLevel
			include GetNextApprovalLevel
			return LocalApprovalLevel
			
		DerivedCurrentApprovalResource is a DerivedField
			type is like FinanceResource
			restricted
			return first CurrentApprovalCodeLevelRel.Approver

		DerivedCurrentApprovalActor is a DerivedField
			type is Actor
			restricted
			return first CurrentApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeam is a DerivedField
			type is like FinanceTeam
			restricted
			return first CurrentApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorList is a DerivedField
			type is Alpha 250
			restricted
			include BuildTeamApproverActorList
			return LocalApproverList

		DerivedCurrentApproverEscalationDays is a DerivedField
			type is Numeric 6
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHours is a DerivedField
			type is Decimal 6.2
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99
				
		DisplayCurrentApproverDesc is a ConditionalField
			type is Alpha 100
			restricted
			if (Approver entered)
				Approver.PreferredSimplePresentationName
			else
				ApproverTeam.FinanceTeam.Description

		DerivedAppsValue	is a DerivedField
			type is like PfiAppsValue
			return "CashLedgerReceiptApproval" + UniqueID			

		UserActionRoutingAsHtml	is a DerivedField
			type is RichText
			return first PfiWorkunitRel.UserActionRoutingAsHtml
			
		MyPFIApprovals is a DerivedField
            type is Boolean
            restricted
            for each PfiWorkunitRel
                for each each.PfiMetricsRel
                    if (each.PfiMetrics.PfiUserProfile = actor)
                        return true 
		
		MassReleaseCompleteMessage is a MessageField
			restricted
			"MassReleaseComplete;SeeResultsRecord"
			
		DerivedCashReceiptErrorCount is a DerivedField	
			type is Alpha size up to 20
        	restricted
			if (CashLedgerTransactionError set exists)
				return "(" + instance count of CashLedgerTransactionError set + ")"
			else
				return ""


		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	

		BODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			BODCurrentTimeStamp = current timestamp
			return BODCurrentTimeStamp
		 		
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return BODCurrentTimeStamp[1:4] + "-" + BODCurrentTimeStamp[5:6] + "-" + BODCurrentTimeStamp[7:8] + "T" + BODCurrentTimeStamp[9:10] + ":" + BODCurrentTimeStamp[11:12] + ":" + BODCurrentTimeStamp[13:14] + "Z"
		
		DerivedBODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return  bod id.VariationID
			
		DerivedBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedBODAccountingEntity + ":" + ":" + DerivedDocumentID + "?CashReceipt&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 4
			restricted
			return Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup
		
		DerivedAccountingEntity is a DerivedField
			type is Alpha size 12
			restricted 
			return Company.OrigCompany.AccountingEntity
		
		DerivedBODAccountingEntity is a DerivedField
			type is Alpha size 100
			restricted
			return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedAccountingEntity
		
		DerivedCompany is a DerivedField
			type is Alpha size 4
			restricted
			return Company.OrigCompany using "%d"
			
		DerivedBankTransactionCode is a DerivedField
			type is Alpha size 10
			restricted
			return CashLedgerCashReceiptHeader.BankTransactionCode
		
		DerivedTransactionNumber is a DerivedField
			type is Alpha size 22
			restricted
			return CashLedgerCashReceiptHeader.TransactionNumber
			
		DerivedDocumentID is a DerivedField
			type is Alpha size 100
			restricted 	
			return DerivedCompany + DerivedDelimiter + CashCode + DerivedDelimiter + DerivedBankTransactionCode + DerivedDelimiter + DerivedTransactionNumber
			
		DerivedBODActionCode is a DerivedField
			type is Alpha size 20
			restricted
			if (ActionCode = "C" or ActionCode.Create)
				return "Add"
			else
				return "Replace"
				
		DerivedBODStatusCode is a DerivedField
			type is Alpha size 20
			restricted
			if (ActionCode.Create or action type.Create or ActionCode.Update or action type.Update)
				return "Open"
			if (ActionCode.Delete or action type.Delete)
				return "Deleted"
		
		DerivedDisplayID is a DerivedField
			type is Alpha size 100
			restricted
			return CashCode + "-" + DerivedBankTransactionCode + "-" + DerivedTransactionNumber
			
		DerivedDepositDate is a DerivedField
			type is Alpha size 25
			restricted
			DerivedDepositDate = DepositDate
			return DerivedDepositDate[1:4] + "-" + DerivedDepositDate[5:6] + "-" + DerivedDepositDate[7:8] + "T00:00:00"

		DerivedPaymentMethodCode is a DerivedField
			type is Alpha size 30
			restricted
			if (TransactionType.WireTransfer or TransactionType.Lockbox)
				return "ElectronicFundsTransfer"
			else
				return "Cash"
		
		DerivedHeaderBaseAmt is a DerivedField
			type is Decimal size 19.3
			restricted
			return BaseAmount.FunctionalAmount.EnteredCurrencyAmount
		
		DerivedBaseCurrency is a DerivedField
			type is Alpha size 5
			restricted
			return Company.OrigCompany.Currency 
		
		DerivedCashReceiptLine is a DerivedField
			type is XMLDocument
			restricted
			if (CashLedgerCashReceiptDetailsRel exists)
				for each CashLedgerCashReceiptDetailsRel
					each.LocalBaseCurrency = DerivedBaseCurrency
					DerivedCashReceiptLine += template.IONSyncCashReceipt_CashLedgerCashReceiptDetail_ST document for each
				return DerivedCashReceiptLine
			else
				return ""

		SyncCashReceiptXMLBOD is a DerivedField
			type is XMLDocument
			restricted
			SyncCashReceiptXMLBOD = template.IONSyncCashReceipt_CashLedgerCashReceiptHeader_ST document for this instance
			return SyncCashReceiptXMLBOD
				


		DerivedPeriodEndDate	is a DerivedField 
			type is Date
			restricted
			return CurrentGeneralLedgerCalendarPeriodRel.Date
				

	Transient Fields
		TransientAccountingEntity				is an AccountingEntity
			derive value from Company.OrigCompany.AccountingEntity
		CompletionMessage						is Alpha size 150



		ReleasedFromImport						is Boolean
		TransientErrorDescription				is Alpha size up to 200	
			derive value from first CashLedgerTransactionErrorMassReleaseRel.ErrorDescription
		TransientCashAllocationCode				is a  CashAllocationCode	
		TransientCashAllocationAmount			is an InternationalAmount	
		TransientApplyAllocationCode			is Boolean					
		BypassNegativeRateEdit                  is Boolean					
		
									
	Local Fields
		CalculateTax
		TaxOut                                  is Alpha 1
		TaxTableOutput
		ProcessTaxHistory
		GLFinanceCodeBlock						is a  TransactionCodeBlock
		GLBaseAmount			 				is a  FinanceCurrencyAmount
		LocalBaseAmount	 						is a  FinanceCurrencyAmount
		LocalFinanceCurrencyAmount				is a  FinanceCurrencyAmount	
		LocalDistributionFinanceCurrAmt			is a  FinanceCurrencyAmount
		LocalDocumentCurrencyTotals				is a  DocumentCurrencyTotals		
		LocalFunctionalAmountDiff				is an InternationalAmount
		LocalAlternateAmountDiff				is an InternationalAmount
		LocalAlternateAmount2Diff				is an InternationalAmount
		LocalAlternateAmount3Diff				is an InternationalAmount
		LocalReportAmount1Diff					is an InternationalAmount
		LocalReportAmount2Diff					is an InternationalAmount
		LocalReportAmount3Diff					is an InternationalAmount
		LocalReportAmount4Diff					is an InternationalAmount
		LocalReportAmount5Diff					is an InternationalAmount
		LocalRoundingAdjustment					is Boolean
		LocalTransactionIDNumber				is a TransactionIDNumber
		LocalCashManagementGroup				is like CashManagementGroup
		LocalCashCode							is like CashCode
		LocalBankTransactionCode				is like BankTransactionCode
		LocalTransactionNumber					is a TransactionNumber
		LocalApprovalLevel						is Numeric 8
		LocalApprover							is a FinanceResource
		LocalApproverTeam						is a FinanceTeamField		
		LocalApproverList						is Alpha 250
		LocalFirstApproverAssigned				is Boolean
		LocalRejectReason						is AlphaUpper 20
		LocalRejectComment						is Alpha size up to 500
		ActionCode
		LocalInterfaceAsPosted					is Boolean
		LocalBypassCashFundUpdate				is Boolean
		AutoNumberByCompany						is like GeneralLedgerCompany
		AutoNumberByCashCode					is like CashCode
		AutoNumberByBankTransactionCode			is like BankTransactionCode
		LocalCashLedgerAutoTranNumber			is a CashLedgerAutoTranNumber view
		DuplicateTranNumberFound				is Boolean
		AutoNumberingAction			 			is Numeric 1
			States
				OverrideNumberWithAnAutoGeneratedNumber	value is 1
				BypassAutoTransactionNumbering			value is 2
		LocalCashCodeGroup						is like CashCodeGroup
		LocalJournalizeGroup					is like JournalizeGroup

		LocalCalculateCashFinanceStructure		is a CalculateCashFinanceStructure
		LocalAnswer 							is Alpha size 1
		LocalToAccountingEntity					is like AccountingEntity
		LocalAccountingUnit						is like AccountingUnit
		LocalFinanceDimension1					is a FinanceDimension1

		LocalNativeLPLBODTrigger			    is Boolean
		NewBODTracker  							is a FSMInboundBODTracker view
		LocalFSMInboundBODTracker				is Numeric 15
		Error            						is Boolean
	    ErrorMessage     						is Alpha 300

		LastReceiptDetail						is a CashLedgerCashReceiptDetail view	
		DistributionRunningTotal		  		is an InternationalAmount				
		LocalCashAllocationCode					is a  CashAllocationCode				
		LocalAllocationAmount 					is an InternationalAmount				
		LocalCompany							is like Company
		LocalCashLedgerJobResult				is a CashLedgerJobResult
		LocalConfigurationParameter				is Alpha size up to 200	
		LocalTransactionCount           		is Numeric size 6
		LocalOriginatingTransaction				is BusinessObjectReference
		LocalAttributeCtr   is Numeric 2
								
	Conditions
        IsUnreleased
        	restricted
            classic name is RECPTHDR-UNREL
            when (Status.Unreleased)

        IsUnreleasedForPeriodClose	
        	restricted
            when (Status.Unreleased
            and   PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date) 


 
 		ReceiptDetailsExist	
			restricted
			when (CashLedgerCashReceiptDetailsRel exists)	

		IsPendingApprovalForPeriodClose	
			restricted
			when (Status.PendingApproval
			and   PostDate <= CurrentGeneralLedgerCalendarPeriodRel.Date 
			and   !IsBatchApproved)

		OutstandingCashReceiptsExist 
			restricted
			when (IsUnreleasedForPeriodClose
			or    IsPendingApprovalForPeriodClose)
							           
        IsReleased
        	restricted
            when (Status.Released)            

		IsUpdateable
			restricted
			when (IsUnreleased
			or    AllowUpdateOnApprove)

		CurrentActorApprovals
            restricted
            when (MyPFIApprovals = true)
		
		IsPendingApproval
			restricted
			when (Status.PendingApproval)

		IsCreated
			restricted
			when (CashLedgerCashReceiptHeader exists)





		CanReleaseReceipt
			restricted
			when (Status.Unreleased
			and   !ImportInProcess
			and   !BudgetEditInProgress			
			and   !CashManagementGroup.CashLedgerReceiptApprovalRequired)

		CanSubmitForApproval
			restricted
			when (Status.Unreleased
			and   !ImportInProcess
			and   !BudgetEditInProgress			
			and   CashManagementGroup.CashLedgerReceiptApprovalRequired)

 		RejectCashLedgerReceiptReasonCodeRequired
 			restricted
			when (CashManagementGroup.RejectCashLedgerReceiptReasonCodeRequired)

		CanManuallyApproveOrReject
			restricted
			when (Status.PendingApproval
			and   !BudgetEditInProgress			
			and   !IsBatchApproved)

		HasApprovalComments
			restricted
			when (CashLedgerReceiptReasonCodeUsage set exists)

		IsBatchApproved
			restricted
			when (CashLedgerBatchApproval	entered)	

		ApprovalCodeRequired
			restricted
			when (CashManagementGroup.CashLedgerReceiptApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForReceipts)
			
		CanBeRemovedFromBatch
			restricted
			when (IsBatchApproved
			and   !Status.Released)	

		BudgetEditInProgress
			restricted
        	when (BudgetEditProcessing.InProcess)
        
        BudgetEditFailure
        	restricted
    		when (BudgetEditProcessing.Failure)

		GLCommitRelExists
			restricted
			when (GLCommitRel exists)

		OpenGLCommitRelExists
			restricted
			when (OpenGLCommitDrillRel exists)
			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		HasWorkunit
			restricted
			when (PfiWorkunitRel exists)

		CurrentActorIsOnApproverTeam
        	restricted
			when (FinanceTeamMemberRel exists)

		CurrentActorIsApprover
        	restricted
			when (Approver	entered
			and	  CashManagementGroup.HROrganization = actor.agent(Employee).HROrganization
			and	  Approver = actor.agent(Employee).Employee)

		CurrentActorCanApprove
        	restricted
			when (CurrentActorIsApprover
			or	  CurrentActorIsOnApproverTeam)

		AllowUpdateOnApprove
        	restricted
			when (Status.PendingApproval
			and	 (CurrentActorCanApprove
			or    CashLedgerBatchApproval.CurrentActorCanApprove))

		CanUpdateDetails
			restricted
			when (Status.Unreleased
			or   (AllowUpdateOnApprove
			and   !IsBatchApproved))

		CanUpdateComments
			restricted
			when (!ImportInProcess
			and   Status >  0)

		HasAttachment		
			restricted
			when (ReceiptAttachment entered)

		HasDistributions
			restricted	
			when (CashLedgerGLDistributionsRel exist)

		AutoNumberingAllowed
			restricted
			when (CashManagementGroup.AutoTranNumberForReceiptForm
			and   ((CashManagementGroup.AutoTranNumberByCompany
			and     Company.OrigCompany.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByCashCode
			and     CashCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByBankTransactionCode
			and     CashLedgerCashReceiptHeader.BankTransactionCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoTranNumberByCashCodeBankTranCode
			and     CashLedgerCashReceiptHeader.BankTransactionCode.AutoTransactionNumbering
			and     CashCode.AutoTransactionNumbering)))

		OutOfBalance
			restricted
			when (Status.Unreleased
			and   BalanceAmount	entered)

		CashReceiptErrorsExist	
			when (CashLedgerTransactionErrorRel exists)

		MassReleaseErrorExists	
			when (CashLedgerTransactionErrorMassReleaseRel exists)

		ReturnedPaymentExists	
			restricted
			when (CashLedgerReturnedPaymentRel exists)

		UseReleaseSetAction	
			restricted
			when (instance count of CashLedgerCashReceiptDetailsRel > 100)
			
		FlagDepositAmountAppliedAmount
			restricted
			when(DepositAmount=AppliedBankAmount)	

		CanDeleteDetails					
			restricted
			when (CanUpdateDetails
			and   ReceiptDetailsExist)
			
 		SecurityGroupAllowsAccess
			when ((actor.context.CashCodeSecurityGroup = "")
			or   (actor.context.CashCodeSecurityGroup != ""
			and   CashCodeSecurityGroupDetailRel exists))

		CompanySecurityGroupAllowsAccess		
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)
			
		CanApplyAdditionalCashAllocations	
			restricted
			when (CanUpdateDetails
			and   ReceiptDetailsWithAnyCashAllocationCodesRel exists)	
		

		FrontEndSplitsEnabled
			restricted
			when (CashManagementGroup.FinanceEnterpriseGroup.FrontEndSplits)

		ExecuteReceiptDetailsFrontEndSplits
			restricted
			when (FrontEndSplitsEnabled)

		AllowReceiptDetailsFrontEndSplits
			restricted
			when (FrontEndSplitsEnabled
			and ReceiptDetailsExist
			and IsUpdateable)

		HasFrontEndSplitReceiptDetails
			restricted
			when (CashLedgerCashReceiptDetailsRel exists
			and CashLedgerCashReceiptDetailsFESRel exists
			and IsUpdateable)

    Relations
        ReceiptDetailsWithAnyCashAllocationCodesRel	
            one-to-many relation to CashLedgerCashReceiptDetail
            Field Mapping uses symbolic key
            	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashCode
                related.CashLedgerCashReceiptHeader.BankTransactionCode = CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerCashReceiptHeader.TransactionNumber 	= CashLedgerCashReceiptHeader.TransactionNumber
            Instance Selection
                where (related.CashAllocationCode entered)	  
    	
		CashCodeSecurityGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup         = actor.context.FinanceEnterpriseGroup
				related.CashCodeGroup				= actor.context.CashCodeSecurityGroup.FinanceDimensionStructure
				related.CashCode                    = CashCode

    	ReceiptDetailsByCashAllocationCodeRel	
            one-to-many relation to CashLedgerCashReceiptDetail
            Field Mapping uses symbolic key
            	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashCode
                related.CashLedgerCashReceiptHeader.BankTransactionCode = CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerCashReceiptHeader.TransactionNumber 	= CashLedgerCashReceiptHeader.TransactionNumber
            Instance Selection
                where (related.CashAllocationCode = LocalCashAllocationCode)	 
    	
        CashLedgerCashReceiptDetailsRel
            classic name is CBRECPTDTL
            one-to-many relation to CashLedgerCashReceiptDetail
            Field Mapping uses symbolic key
            	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashCode
                related.CashLedgerCashReceiptHeader.BankTransactionCode = CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerCashReceiptHeader.TransactionNumber 	= CashLedgerCashReceiptHeader.TransactionNumber

        FinancialInstitutionBranchRel
            classic name is CBBANKENT
            one-to-one relation to FinancialInstitutionBranch
            required
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	   = CashManagementGroup	
            	related.FinancialInstitution 	   = CashCode.FinancialInstitution
                related.FinancialInstitutionBranch = CashCode.FinancialInstitutionBranch

		CashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup				= CashManagementGroup	
				related.CashCode						= CashCode
				related.BankTransactionCode				= CashLedgerCashReceiptHeader.BankTransactionCode
				related.TransactionNumber	            = CashLedgerCashReceiptHeader.TransactionNumber

		RelatedCashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup				= CashManagementGroup	
				related.CashCode						= CashCode
				related.BankTransactionCode				= CashLedgerCashReceiptHeader.BankTransactionCode
				related.TransactionNumber	            = CashLedgerCashReceiptHeader.TransactionNumber
			Instance Selection
				where (related.Type.CashReceiptEntry)

		CashLedgerFundTransferHeaderRel
			one-to-one relation to CashLedgerFundTransferHeader
			Field Mapping uses symbolic key
				related.CashManagementGroup 			= CashManagementGroup	
				related.CashCode						= CashCode
				related.CashLedgerFundTransferHeader	= CashLedgerCashReceiptHeader.TransactionNumber

		CashLedgerFundTransferDetailsRel
			one-to-many relation to CashLedgerFundTransferDetail
			Field Mapping uses Set3
				related.CashLedgerFundTransferDetail.DetailCashCode				= CashCode
				related.CashLedgerFundTransferHeader							= CashLedgerCashReceiptHeader.TransactionNumber
			Instance Selection
				where (related.CashLedgerFundTransferDetail.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode)

		CashCodeTransactionCodeRel
			one-to-many relation to CashCodeTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= CashCode
			Instance Selection
				where (related.CashCodeTransactionCode.Active	= true)

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= Company
					        	
		CashCodeFundEditRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance

		CashCodeFundEditByFundRel
			one-to-one relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.CashCode				= CashCode
		 		related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
		 		related.FinanceDimension1		= LocalFinanceDimension1

		ExceedesCashCodeFundBalanceRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByExceedesFundBalance
		 		related.CashManagementGroup		= CashManagementGroup
		  		related.OriginatingTransaction	= reference to this instance
		 		related.ExceedesFundBalance		= true

		CashCodeFundRel
			one-to-one relation to CashCodeFund
			Field Mapping uses ByAccountingEntityFund
				related.CashManagementGroup		= CashManagementGroup
				related.CashCode				= CashCode
				related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
				related.FinanceDimension1		= LocalFinanceDimension1









		CurrentApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= ApprovalLevel

		ApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode

		LocalApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= LocalApprovalLevel
		
		FinanceTeamMembersFromCurrentApprovalLevelRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.FinanceTeam				= first CurrentApprovalCodeLevelRel.ApprovalTeam

		FinanceTeamMemberRel
			one-to-one relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.FinanceTeam						= ApproverTeam
				related.FinanceTeamMember.TeamMember	= actor.agent(Employee).Employee
				
		ApprovalCodeResourceByResourceRel					
			one-to-one relation to ApprovalCodeResource
			Field Mapping uses ByApprover
				related.FinanceEnterpriseGroup	= CashManagementGroup.FinanceEnterpriseGroup
				related.ApprovalCode			= ApprovalCode
				related.Approver				= LocalApprover



		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.GeneralLedgerSystemCode	= "CB"	

		GLCommitRel		
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID	
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID	= UniqueID



		OpenGLCommitDrillRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID			= UniqueID
			Instance Selection
				where (related.Status = 0
				or     related.Status = 2
				or     related.Status = 3)
				
		GLCommitDocumentsRel	
			one-to-one relation to GLCommitDocument
			Field Mapping uses ByHeaderObjectReference
				related.HeaderObjectReference = reference to this instance








		BudgetTemplateGroupTotalRel				
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup                    = CashManagementGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup  = UniqueID
														
		CashLedgerReceiptImportInErrorRel
			one-to-many relation to CashLedgerReceiptImport
			Field Mapping uses ByCashLedgerReceiptInError
	           	related.CashManagementGroup							= CashManagementGroup	
                related.CashLedgerReceiptImport.CashCode			= CashCode
                related.CashLedgerReceiptImport.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerReceiptImport.TransactionNumber	= CashLedgerCashReceiptHeader.TransactionNumber

        BankAccountBalancesRel
            one-to-many relation to BankAccountBalance
            Field Mapping uses Set2
            	related.CashManagementGroup 	= CashManagementGroup	
                related.CashCode  				= CashCode

		PfiWorkunitRel
			one-to-many relation to PfiWorkunit
			Field Mapping uses ByAppsKeyAppsValueWorkunit
				related.AppsKey		= "CASHLEDGERCASHRECEIPTHEADER"			
				related.AppsValue	= DerivedAppsValue

		CashLedgerGLDistributionsRel
			one-to-many relation to CashLedgerGLDistribution
			Field Mapping uses ByTransactionNumber
				related.CashManagementGroup 							= CashManagementGroup	
				related.CashCode                           				= CashCode
				related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
				related.TransactionNumber								= CashLedgerCashReceiptHeader.TransactionNumber
				related.CashLedgerSourceRecord							= "CBT"

 		ReleasedDistributionsRel
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses Alternate1 
            	related.CashManagementGroup 							= CashManagementGroup
            	related.CashCode										= CashCode
            	related.CashLedgerSourceRecord							= "CBT"
                related.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerGLDistribution.TransactionIDNumber	= LocalTransactionIDNumber
			Instance Selection
                where (related.Status.Released)
            	                            	                 










 		CashLedgerAutoTranNumbersRel
			one-to-many relation to CashLedgerAutoTranNumber
            Field Mapping uses symbolic key
            	related.CashManagementGroup 			= CashManagementGroup
                related.CashLedgerDocumentType			= CashLedgerDocumentType.CashReceipt
			Instance Selection
            	where (related.CashLedgerAutoTranNumber	= CashLedgerCashReceiptHeader.TransactionNumber
            	and    related.AutoNumberStatus.NumberAssignedToDocument)
 
 		CashCodeGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup			= CashManagementGroup
				related.CashCodeGroup				= LocalCashCodeGroup
				related.CashCode					= CashCode

		CashLedgerTransactionErrorRel is a CashLedgerTransactionError set 
		
		CashLedgerTransactionErrorMassReleaseRel	
			one-to-many relation to CashLedgerTransactionError
			Field Mapping uses ByMassReleaseCashReceiptsErrorSource
				related.CashManagementGroup								= CashManagementGroup
				related.ErrorSource										= 7	
				related.CashLedgerMassReleaseResult 					= CashLedgerMassReleaseResult
				related.CashCode										= CashCode
				related.CashLedgerCashReceiptHeader.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
				related.CashLedgerCashReceiptHeader.TransactionNumber	= CashLedgerCashReceiptHeader.TransactionNumber

		CashLedgerReturnedPaymentRel	
			one-to-many relation to CashLedgerReturnedPayment
			Field Mapping uses ByDepositReturn
				related.CashManagementGroup								= CashManagementGroup
	            related.CashCode                         			 	= CashCode
	            related.OriginalDepositBankTransactionCode				= CashLedgerCashReceiptHeader.BankTransactionCode
				related.DepositTransactionID 							= DerivedCashLedgerTransaction

		CurrentGeneralLedgerCalendarPeriodRel	
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= CashManagementGroup
				related.GeneralLedgerCalendarPeriod			= Company.OrigCompany.AccountingEntity.CurrentPeriod.GeneralLedgerCalendarPeriod	


		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter
		
		FSMBODConfigurationRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb		= 1
				related.FSMBODConfiguration.Noun		= "CashReceipt"
				related.FSMBODConfiguration.Direction	= 1

		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker



		CashLedgerCashReceiptDetailsFESRel
            one-to-many relation to CashLedgerCashReceiptDetail
            Field Mapping uses symbolic key
            	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashCode
                related.CashLedgerCashReceiptHeader.BankTransactionCode = CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerCashReceiptHeader.TransactionNumber 	= CashLedgerCashReceiptHeader.TransactionNumber
            Instance Selection
                where (related.CreatedByFES)

		UnreleasedCashReceiptsErrorRel
			one-to-many relation to CashLedgerJobResultError
            Field Mapping uses ByCompanyErrorType
            	related.CashManagementGroup 							= LocalCashManagementGroup
            	related.CashLedgerJobResult								= LocalCashLedgerJobResult
            	related.Company											= LocalCompany
            	related.ErrorType										= 10 
            	
		PendingApprovalCashReceiptsErrorRel
			one-to-many relation to CashLedgerJobResultError
            Field Mapping uses ByCompanyErrorType
            	related.CashManagementGroup 							= LocalCashManagementGroup
            	related.CashLedgerJobResult								= LocalCashLedgerJobResult
            	related.Company											= LocalCompany
            	related.ErrorType										= 11 

		CashLedgerCashReceiptDetailRequiringCustodialAccountRel		
            one-to-many relation to CashLedgerCashReceiptDetail
            Field Mapping uses symbolic key
            	related.CashManagementGroup								= CashManagementGroup	
                related.CashCode										= CashCode
                related.CashLedgerCashReceiptHeader.BankTransactionCode = CashLedgerCashReceiptHeader.BankTransactionCode
                related.CashLedgerCashReceiptHeader.TransactionNumber 	= CashLedgerCashReceiptHeader.TransactionNumber
			Instance Selection
                where (related.CustodialAccountRequiredForFund)

		CompanySecurityGroupMemberRel		
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company.OrigCompany

	Sets
		Set2
			indexed
			Instance Selection
				where (IsUnreleased)
			Sort Order
				CashManagementGroup
				CashCode
				CashLedgerCashReceiptHeader

		ByCompany	
			indexed
			Sort Order
				CashManagementGroup
				Company.OrigCompany
				Status
				CashLedgerCashReceiptHeader
				CashCode

		ByCashLedgerBatchApproval		
			Sort Order
				CashManagementGroup
				CashLedgerBatchApproval
				CashCode
				CashLedgerCashReceiptHeader

	Field Rules
		CashCode
			if (CashCodeTransactionCodeRel exists)
				constraint (CashCodeTransactionCode exists
				and CashCodeTransactionCode.Active)
					"TransactionCode<CashLedgerCashReceiptHeader.BankTransactionCode>NotAuthorizedForCashCode<CashCode>"

		Company
			required
			if (Company changed)
				if (AutoNumberingAllowed)
					constraint (!CashManagementGroup.AutoTranNumberByCompany)
						"CannotChangeCompany;AutoNumberingAtCompanyLevelIsSetup"
			TransientAccountingEntity 	= Company.OrigCompany.AccountingEntity

		DepositDate
			initial value is current corporate date
			default to current corporate date	


			if (CashCode.BankAccountBalance set exists)
				constraint (DepositDate > CashCode.last BankAccountBalance set.BankAccountBalance)
					"DepositDateIsForAClosedBankPeriod"           
			if (DepositDate changed)
				initialize BaseAmount

		CurrencyTable
			default to CompanySystemClosingControlRel.CurrencyTable
			default to Company.OrigCompany.CurrencyTable

			if (CurrencyTable changed)
				initialize BaseAmount

		DepositAmount

			if (DepositAmount < 0					
			and initiating action != "CashLedgerReceiptImport.InterfaceCashReceipts")	
				constraint (CashLedgerCashReceiptHeader.BankTransactionCode.AllowNegativeReceipts)	
					"DepositAmountCannotBeANegativeAmount"
			if (DepositAmount changed)
				initialize BaseAmount




		BaseAmount


			if (DepositAmount entered)	
				required

		TransactionCurrencyNumberOfDecimals
			default to CashCode.BankAccountNumber.Currency.NumberOfDecimals

		BaseCurrencyNumberOfDecimals
			default to Company.OrigCompany.CurrencyNumberOfDecimals

		Description
			required

		TransactionType
			if (TransactionType changed)
				constraint (!TransactionType.Rebate)
					"CannotChangeTransTypeFromNon-rebateTypeToARebate"        
				constraint (!old TransactionType.Rebate)
					"CannotChangeTransTypeFromRebateToANon-rebateType"        






		PostDate
			initial value is DepositDate
			default to DepositDate 
			if (CompanySystemClosingControlRel.Control)		
				constraint (PostDate within CompanySystemClosingControlRel.ValidEntryDate)
					"PostDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"
















		GeneralLedgerSourceCode
			default to "CL"

		Status
			default to 0

		CompanyCashCode
			required
			
		CreateDate
			force default to create stamp.timestamp			

			
		CreatedBy
			default to actor

	Create Rules  
		include IDM.CreateRules 
			replace AttachmentField with ReceiptAttachment
							
	Delete Rules
		include IDM.DeleteNoArchiveRules
			replace AttachmentField with ReceiptAttachment

	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with ReceiptAttachment

	
	Actions
		SendSyncCashReceiptNativeLPL is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				send ion bod
					bod is SyncCashReceiptXMLBOD
					bod type is "Sync.CashReceipt"
					document id is  DerivedDocumentID
					variation id is DerivedBODVariationID
					accounting entity is DerivedBODAccountingEntity
		
		TriggerSyncCashReceiptNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "CashReceipt"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "CashLedgerCashReceiptHeader"
					invoked.PrmFinanceEnterpriseGroup	= Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity
					invoked.PrmCompany					= Company
					invoked.PrmMainUserTemplate 		= "IONSyncCashReceipt_CashLedgerCashReceiptHeader_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationRel.NativeLPLBODTrigger
				if(Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "CashReceipt"					
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.Direction				= 1
							invoked.Reference1				= CashManagementGroup
							invoked.Reference2				= CashCode
							invoked.Reference3				= CashLedgerCashReceiptHeader.BankTransactionCode
							invoked.Reference4				= CashLedgerCashReceiptHeader.TransactionNumber
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= CashManagementGroup
							invoked.BODDocumentID			= DerivedDocumentID
							invoked.BODVariationID			= DerivedBODVariationID
							invoked.BODAccountingEntity		= DerivedBODAccountingEntity
							invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.Direction				= 1
							invoked.Reference1				= CashManagementGroup
							invoked.Reference2				= CashCode
							invoked.Reference3				= CashLedgerCashReceiptHeader.BankTransactionCode
							invoked.Reference4				= CashLedgerCashReceiptHeader.TransactionNumber
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					invoke SendSyncCashReceiptNativeLPL
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
							invoked.BODID								= DerivedBODID
							invoked.BODXML								= SyncCashReceiptXMLBOD
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status									= 3
							invoked.CloseDate								= system current timestamp
							invoked.BODID									= DerivedBODID
							invoked.BODXML									= SyncCashReceiptXMLBOD	
		
		Create is a Create Action
			completion message is "<CompletionMessage>"
			Entrance Rules
				if (CashLedgerCashReceiptHeader.TransactionNumber entered)
					if (AutoNumberingAllowed)			 
						constraint (AutoNumberingAction entered)
							"CannotEnterDepositNumber;AutoNumberingSetup"			            	
					include StripLeadingSpaces	
					include CheckForDuplicates
				else
					constraint (AutoNumberingAllowed)	
						"DepositNumberRequired"	
				include SetCurrencyData
				if (TransientApplyAllocationCode)	
					include CashAllocationCodeEdits	

			Action Rules
				if (AutoNumberingAllowed	
				and CashLedgerCashReceiptHeader.TransactionNumber not entered)
					include GetAutoNumberByLevel
					invoke AutoCreate CashLedgerAutoTranNumber
						assign result to LocalCashLedgerAutoTranNumber
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashLedgerDocumentType		= CashLedgerDocumentType.CashReceipt
						invoked.OriginatingTransaction		= reference to this instance
						invoked.CreateOperator				= actor
						invoked.CreateDate					= current timestamp
						invoked.Company 					= AutoNumberByCompany
						invoked.CashCode					= AutoNumberByCashCode
						invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
						invoked.DocumentCashCode			= CashCode
						invoked.DocumentBankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode

					LocalTransactionNumber			= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
					if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
						DuplicateTranNumberFound 	= true

					while (DuplicateTranNumberFound)
						invoke AutoCreate CashLedgerAutoTranNumber
							assign result to LocalCashLedgerAutoTranNumber
							invoked.CashManagementGroup			= CashManagementGroup
							invoked.CashLedgerDocumentType		= CashLedgerDocumentType.CashReceipt
							invoked.OriginatingTransaction		= reference to this instance
							invoked.CreateOperator				= actor
							invoked.CreateDate					= current timestamp
							invoked.Company 					= AutoNumberByCompany
							invoked.CashCode					= AutoNumberByCashCode
							invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
							invoked.DocumentCashCode			= CashCode
							invoked.DocumentBankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
						LocalTransactionNumber			= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
						DuplicateTranNumberFound		= false
						if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
							DuplicateTranNumberFound	= true
						
					CashLedgerCashReceiptHeader.TransactionNumber	= LocalTransactionNumber	

				CompletionMessage = ActionCompleteMessage
			Exit Rules
				if (TransientCashAllocationCode entered)	
					invoke AutoCreateReceiptDetail			
				initialize TransientCashAllocationCode		
				initialize TransientCashAllocationAmount	
				initialize TransientApplyAllocationCode		
				
		Update is an Update Action
			completion message is "<CompletionMessage>"
			valid when (IsUpdateable)
			Entrance Rules
				include SetCurrencyData
				if (TransientApplyAllocationCode)	
					include CashAllocationCodeEdits	
			Action Rules
				if (TransientCashAllocationCode entered)	
					invoke AutoCreateReceiptDetail			
			Exit Rules
				include CheckForRelatedChanges
				initialize TransientCashAllocationCode		
				initialize TransientCashAllocationAmount	
				initialize TransientApplyAllocationCode		
				if (DepositAmount = AppliedBankAmount) 
					CompletionMessage = ActionCompleteMessage
				else
					CompletionMessage = OutOfBalanceMessage

		Delete is a Delete Action
			completion message is "<CompletionMessage>"
			valid when (IsUnreleased)						
			Entrance Rules

				if (CashLedgerTransactionError set exists)
					invoke Delete CashLedgerTransactionError set
			Action Rules
				constraint (!BudgetEditInProgress)			
					"CannotDelete;BudgetEditInProgress"
				if (ImportInProcess)
					confirmation required
						"DeletingAPartiallyImportedRecordWillDeleteAllRelatedCashReceiptImportRecords"
					invoke DeleteAllRelatedRecords CashLedgerReceiptImportInErrorRel
				if (CashLedgerCashReceiptHeader.TransactionNumber is numeric)	
					if (CashLedgerAutoTranNumbersRel exists)
						invoke DocumentDeleteUpdate CashLedgerAutoTranNumbersRel
				CompletionMessage = ActionCompleteMessage
				
		UpdateDocumentTotals is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmDocumentCurrencyTotals		is a DocumentCurrencyTotals
			Action Rules
				AppliedBaseAmount = PrmDocumentCurrencyTotals

		UpdateBODIdFields is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location" 
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"	
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules	
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord
		
		ReleaseFromImport is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmTransactionIDNumber			is a TransactionIDNumber
				PrmInterfaceAsPosted			is Boolean
				PrmJournalizeGroup				is like JournalizeGroup
				PrmBypassCashFundUpdate			is Boolean	
			Local Fields
				LocalReleaseError			is Boolean
			Action Rules
				LocalTransactionIDNumber	= PrmTransactionIDNumber
				LocalInterfaceAsPosted		= PrmInterfaceAsPosted
				LocalBypassCashFundUpdate	= PrmBypassCashFundUpdate 	
				ReleasedFromImport			= true
				LocalJournalizeGroup		= PrmJournalizeGroup
				invoke Release
					resume on error
						LocalReleaseError 	= true
				if (LocalReleaseError)
					invoke DeleteReleaseErrorTransaction RelatedCashLedgerTransactionsRel
					
		ReleaseFromMassRelease	is an Instance Action
			default label is untranslatable
			restricted
			Action Rules

				invoke Release

		BatchApprovalRelease is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and    !BudgetEditInProgress						
				and    Status.Unreleased)
			Sort Order is ByCashLedgerBatchApproval
			Action Rules
				Instance Rules
					invoke Release

		Release is an Instance Action
			completion message is "<CompletionMessage>"
			valid when (CanReleaseReceipt)
			Local Fields
				NewCashLedgerTransaction		is a  CashLedgerTransaction view
				LocalDistribBankAmount			is an InternationalAmount
				LocalBaseDistribAmount			is a  FinanceCurrencyAmount
				LocalDistribBaseAmount			is an InternationalAmount
				LocalTaxableBankAmount			is an InternationalAmount
				LocalTaxBankAmount				is an InternationalAmount
				LocalFinanceCurrencyAmountGroup	is a  FinanceCurrencyAmountGroup
			Entrance Rules
				constraint (CashLedgerCashReceiptDetailsRel exists)	
					"CannotRelease;NoCashReceiptDetailsExists"
				if (AppliedBankAmount < 0)	
					constraint (CashLedgerCashReceiptHeader.BankTransactionCode.AllowNegativeReceipts)	
						"TotalDetailsMustBeAPositiveAmount"
				constraint (DepositAmount = AppliedBankAmount)
					"CannotRelease;CashReceiptIsOutOfBalance"                 
			Action Rules
				if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting
				and CashLedgerCashReceiptDetailRequiringCustodialAccountRel exists)		
					confirmation required
						"OneOrMoreReceiptDetailsMayRequireCustodialAccount;Continue?"

				if(ExecuteReceiptDetailsFrontEndSplits)
					invoke ExecuteFrontEndSplitCashReceiptDetails
				include DistributionRoundingOffSet
				if (DepositAmount < 0)	
					LocalDistribBankAmount		= DepositAmount * -1
					LocalFinanceCurrencyAmount	= BaseAmount
					include ReverseBaseAmounts
					LocalBaseDistribAmount		= LocalFinanceCurrencyAmount
				else					
					LocalDistribBankAmount		= DepositAmount
					LocalFinanceCurrencyAmount	= BaseAmount
					LocalBaseDistribAmount		= LocalFinanceCurrencyAmount
				invoke Unreleased.CreateFromCashLedgerWithoutEdits CashLedgerTransaction
					assign result to NewCashLedgerTransaction
					fill in fields from CashLedgerCashReceiptHeader
					invoked.CashCode								= CashCode
					invoked.BankTransactionCode						= CashLedgerCashReceiptHeader.BankTransactionCode
					invoked.CashLedgerTransaction					= LocalTransactionIDNumber
					invoked.TransactionNumber						= CashLedgerCashReceiptHeader.TransactionNumber



					invoked.TransactionNumberSuffix					= 0
					invoked.BankTransactionType						= CashLedgerCashReceiptHeader.BankTransactionCode.BankTransactionType 
					invoked.SourceCode								= "CB"
					invoked.Source									= "O"
					invoked.Company									= Company
					invoked.CashLedgerProcessLevel					= CashProcessLevel
					invoked.IssueDate								= DepositDate
					invoked.IssuedBankAmount						= LocalDistribBankAmount	
					invoked.IssuedBaseAmount						= LocalBaseDistribAmount	
					invoked.TransactionCurrencyNumberOfDecimals		= TransactionCurrencyNumberOfDecimals
					invoked.BaseCurrencyNumberOfDecimals			= BaseCurrencyNumberOfDecimals
					invoked.Description								= Description
					invoked.Reference								= "CashLedgerCashReceiptHeader"
					invoked.GeneralLedgerPostDate					= PostDate
					invoked.Type									= "R"
					invoked.LastDistributionSequence				= 0
					invoked.ReleasedFromImport						= ReleasedFromImport
					invoked.BypassBudgetEditing						= true
					if (DepositAmount < 0)
						invoked.BankTransactionSign					= "DR"	

				if (UseReleaseSetAction)	
					Status 										= Status.Released
					invoke ReleaseCashReceiptDetailsSetAction CashLedgerCashReceiptDetail
		            	invoked.PrmCashManagementGroup 			= CashManagementGroup	
		                invoked.PrmCashCode						= CashCode
		                invoked.PrmBankTransactionCode 			= CashLedgerCashReceiptHeader.BankTransactionCode
		                invoked.PrmTransactionNumber 			= CashLedgerCashReceiptHeader.TransactionNumber
		                invoked.PrmTransactionIDNumber			= NewCashLedgerTransaction.CashLedgerTransaction
		                invoked.PrmJournalizeGroup				= LocalJournalizeGroup
		                invoked.PrmCashLedgerCashReceiptHeader	= CashLedgerCashReceiptHeader
						invoked.PrmInterfaceAsPosted			= LocalInterfaceAsPosted	
				else
					for each CashLedgerCashReceiptDetailsRel
						LocalDistribBankAmount = ((each.ReceiptBankAmount - each.TaxAmountData.CurrencyAmount) * -1)
						LocalFinanceCurrencyAmount = each.ReceiptBaseAmount
						include ReverseNetReceiptBaseAmounts
						LocalBaseDistribAmount = LocalFinanceCurrencyAmount
						if (LocalDistribBankAmount	entered)		
							invoke Create CashLedgerGLDistribution
								fill in fields from CashLedgerCashReceiptHeader
								fill in fields from each
									except invoked.TaxCode
								invoked.CashCode										= CashCode
								invoked.CashLedgerSourceRecord							= "CBT"
								invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
								invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
								invoked.TransactionNumber								= CashLedgerCashReceiptHeader.TransactionNumber
								invoked.TransactionNumberSuffix							= 0
								invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
								invoked.Company											= Company
								invoked.CashLedgerGLDistribution.DistributionType		= "E"
								invoked.RecordType										= ""
								invoked.Status											= 1
								invoked.PostDate										= PostDate
								invoked.GLFinanceCodeBlock								= each.ReceiptAccount
								invoked.GLTransactionAmount								= LocalDistribBankAmount
								invoked.DistributionToBankAmount						= LocalDistribBankAmount
								invoked.GLBaseAmount									= LocalBaseDistribAmount
								invoked.Reference										= each.Reference	//"CashLedgerCashReceiptHeader"
								invoked.Description										= each.Description
								invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
								invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
								invoked.ToBaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
								invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
								invoked.BypassBudgetEditing								= true
								invoked.GLTJournalizeGroup								= LocalJournalizeGroup
								invoked.BypassStatusEdit								= true
								invoked.TransientUnitsAmount							= each.UnitsAmount
								if (LocalInterfaceAsPosted)
									invoked.InterfaceAsPosted 							= true	
	
						if (each.TaxCode entered)


							LocalTaxBankAmount = each.TaxAmountData.CurrencyAmount * -1
							LocalFinanceCurrencyAmountGroup = each.TaxAmountData
							include ReverseTaxBaseAmounts
							include SetLocalFinanceCurrencyAmounts
							LocalBaseDistribAmount = LocalFinanceCurrencyAmount
	
							LocalTaxableBankAmount = each.TaxableData.CurrencyAmount * -1
	
							include CreateTaxTran
							invoke Create CashLedgerGLDistribution
								fill in fields from CashLedgerCashReceiptHeader
								fill in fields from each
								invoked.CashCode										= each.CashCode
								invoked.CashLedgerSourceRecord							= "CBT"
								invoked.CashLedgerGLDistribution.BankTransactionCode	= each.CashLedgerCashReceiptHeader.BankTransactionCode
								invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
								invoked.TransactionNumber								= each.CashLedgerCashReceiptHeader.TransactionNumber
								invoked.TransactionNumberSuffix							= blank
								invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
								invoked.Company											= Company
								invoked.CashLedgerGLDistribution.DistributionType		= "E"
								invoked.RecordType										= ""
								invoked.Status											= 1
								invoked.PostDate										= PostDate
								invoked.GLFinanceCodeBlock								= TaxTableOutput.TaxOutputAccount
								invoked.Reference										= each.Reference	//"CashLedgerCashReceiptHeader"
								invoked.Description										= each.Description
								invoked.TaxCode											= each.TaxCode
								invoked.GLTransactionAmount								= LocalTaxBankAmount
								invoked.DistributionToBankAmount						= LocalTaxBankAmount
								invoked.GLBaseAmount									= LocalBaseDistribAmount
								invoked.TaxableBankAmount								= LocalTaxableBankAmount
								invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
								invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
								invoked.ToBaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
								invoked.BypassBudgetAndCommitmentProcessing				= true
								invoked.GLTJournalizeGroup								= LocalJournalizeGroup
								invoked.BypassStatusEdit								= true
								if (LocalInterfaceAsPosted)
									invoked.InterfaceAsPosted 							= true	
	
					if (CashLedgerCashReceiptHeader.BankTransactionCode.TransactionType.DebitTransaction)
						LocalDistribBankAmount		= DepositAmount * -1
						LocalFinanceCurrencyAmount	= BaseAmount
						include ReverseBaseAmounts
						LocalBaseDistribAmount		= LocalFinanceCurrencyAmount
					else
						LocalDistribBankAmount		= DepositAmount
						LocalFinanceCurrencyAmount	= BaseAmount
						LocalBaseDistribAmount		= LocalFinanceCurrencyAmount
	
					if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
						if (CashCode.EditAvailableFunds
						or  CashCode.RestrictedFunds)
							include PerformFundAmountEdit
							constraint (ExceedesCashCodeFundBalanceRel !exists)
								"<first ExceedesCashCodeFundBalanceRel.ErrorMessage>"
							invoke Delete CashCodeFundEditRel
	
						for each CashLedgerGLDistributionsRel
							initialize LocalCalculateCashFinanceStructure
							LocalCalculateCashFinanceStructure.InputCashManagementGroup				= each.CashManagementGroup
							LocalCalculateCashFinanceStructure.InputCashCode						= each.CashCode
							LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord			= each.CashLedgerSourceRecord
							LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution		= each.CashLedgerGLDistribution
							LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock				= each.CashLedgerGLDistribution.GLFinanceCodeBlock
							LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType	= CashLedgerFinanceStructureType.CashCodeDistribution
							if (CashLedgerCashReceiptHeader.BankTransactionCode.AutomaticReconciliation 
							and CompanyCashCode.ReconcileGeneralLedgerEntry)
								LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.ReconciliationAccount
							else
								LocalCalculateCashFinanceStructure.InputFinanceCodeBlock			= CompanyCashCode.CashAccount
							LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure
	
							LocalDistribBankAmount		= each.GLTransactionAmount * -1
							LocalFinanceCurrencyAmount	= each.GLBaseAmount
							include ReverseBaseAmounts
							LocalBaseDistribAmount		= LocalFinanceCurrencyAmount
	
							invoke Create CashLedgerGLDistribution	
								fill in fields from CashLedgerCashReceiptHeader
								invoked.CashCode										= CashCode
								invoked.CashLedgerSourceRecord							= CashLedgerSourceRecord.CashLedgerTransaction
								invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
								invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
								invoked.TransactionNumber								= CashLedgerCashReceiptHeader.TransactionNumber
								invoked.TransactionNumberSuffix							= 0
								invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
								invoked.Company											= Company
								invoked.CashLedgerGLDistribution.DistributionType		= "E"
								invoked.RecordType										= CashLedgerDistribRecordType.CashCodeDistribution
								invoked.Status 											= 1
								invoked.PostDate										= PostDate
								invoked.GLFinanceCodeBlock								= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock
								invoked.GLTransactionAmount								= LocalDistribBankAmount
								invoked.DistributionToBankAmount						= LocalDistribBankAmount
								invoked.GLBaseAmount									= LocalBaseDistribAmount
								invoked.Description										= Description
								invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
								invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
								invoked.ToBaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
								invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
								invoked.GLTJournalizeGroup								= LocalJournalizeGroup
								invoked.BypassStatusEdit								= true
								if (LocalDistribBankAmount entered)									
									invoked.BypassUnitAndAmountEdit						= false		
								else																
									invoked.BypassUnitAndAmountEdit						= true		
								invoked.BypassCashFundUpdate							= LocalBypassCashFundUpdate	
								if (LocalInterfaceAsPosted)
									invoked.InterfaceAsPosted 							= true		
					else
						invoke Create CashLedgerGLDistribution	
							fill in fields from CashLedgerCashReceiptHeader
							invoked.CashCode										= CashCode
							invoked.CashLedgerSourceRecord							= "CBT"
							invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerCashReceiptHeader.BankTransactionCode
							invoked.CashLedgerGLDistribution.TransactionIDNumber	= NewCashLedgerTransaction.CashLedgerTransaction
							invoked.TransactionNumber 								= CashLedgerCashReceiptHeader.TransactionNumber
							invoked.TransactionNumberSuffix							= 0
							invoked.GeneralLedgerSourceCode							= GeneralLedgerSourceCode
							invoked.Company											= Company
							invoked.CashLedgerGLDistribution.DistributionType		= "E"
							invoked.RecordType										= "C"
							invoked.Status 											= 1
							invoked.PostDate										= PostDate
							if (CashLedgerCashReceiptHeader.BankTransactionCode.AutomaticReconciliation 
							and CompanyCashCode.ReconcileGeneralLedgerEntry)
								invoked.GLFinanceCodeBlock							= CompanyCashCode.ReconciliationAccount
							else
								invoked.GLFinanceCodeBlock							= CompanyCashCode.CashAccount
							invoked.GLTransactionAmount								= LocalDistribBankAmount
							invoked.DistributionToBankAmount						= LocalDistribBankAmount
							invoked.GLBaseAmount									= LocalBaseDistribAmount
							invoked.Description										= Description
							invoked.ToTransactionCurrencyNumberOfDecimals			= TransactionCurrencyNumberOfDecimals
							invoked.TransactionCurrencyNumberOfDecimals				= TransactionCurrencyNumberOfDecimals
							invoked.ToBaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
							invoked.BaseCurrencyNumberOfDecimals					= BaseCurrencyNumberOfDecimals
							invoked.GLTJournalizeGroup								= LocalJournalizeGroup
							invoked.BypassStatusEdit								= true
							if (LocalDistribBankAmount entered)									
								invoked.BypassUnitAndAmountEdit						= false		
							else																
								invoked.BypassUnitAndAmountEdit						= true		
							if (LocalInterfaceAsPosted)
								invoked.InterfaceAsPosted 							= true	
	
					include PerformBudgetEditsForRelease


		FinalRelease is an Instance Action
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing

				if (CashLedgerTransactionError set exists)
					invoke Delete CashLedgerTransactionError set


				Status 					= Status.Released
				CompletionMessage 		= ReleaseCompleteMessage
			Exit Rules
				if (LocalInterfaceAsPosted)
					invoke InterfaceAsPosted ReleasedDistributionsRel
				include ReleaseExitRules

				if (Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup.BODTrigger)
					ActionCode = ActionCode.Update
					increment bod id.VariationID
					trigger PayablesService.CashLedgerCashReceiptHeaderService PA service
						resume on error
						title is "EG:<Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup>CO:<Company>CC:<CashCode>BTC:<CashLedgerCashReceiptHeader.BankTransactionCode>TN:<CashLedgerCashReceiptHeader.TransactionNumber>"
						Criteria
							Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup
							Company.OrigCompany.AccountingEntity
							Company
						Variables
							ActionCode
							include persistent fields from CashLedgerCashReceiptHeader
							Company.OrigCompany.Currency
								variable name is BaseCurrency
							Company.OrigCompany.AccountingEntity.FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup
							Company.OrigCompany.AccountingEntity
								variable name is AccountingEntity





		UpdateBudgetResults is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				ParmSuccess    	is Boolean
			Action Rules
				if (ParmSuccess)
					BudgetEditProcessing = BudgetEditProcessing.Success

				else
					BudgetEditProcessing = BudgetEditProcessing.Failure
				invoke FinalRelease	

		RebuildCommitmentTotals is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				IsBatch        is Boolean
				BudgetEditMode
				BudgetEditTotalsProcessing
				ActionCode

			Action Rules
				invoke Delete BudgetTemplateGroupTotalRel
				for each CashLedgerGLDistributionsRel
					invoke RecalculateCommitmentAmounts each
					increment LocalTransactionCount
					if (LocalTransactionCount > 50)
						commit transaction
						initialize LocalTransactionCount
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    													= CashManagementGroup
					invoked.PrmBudgetEditGroup           													= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReceipt.CashCode						= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBReceipt.CashLedgerCashReceiptHeader	= CashLedgerCashReceiptHeader
					invoked.PrmMode																			= BudgetEditMode.UpdateOnly
					invoked.PrmBusinessClassName  					              							= "CashLedgerCashReceiptHeader"
					invoked.PrmEditContext  		                   										= "Release"										
					if (initiating action	= "CashLedgerReceiptImport.InterfaceCashReceipts")	
						invoked.PrmIsBatch	= true
						









		CreateBatchApproval is a Set Action 
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashLedgerReceiptGroup	is a CashLedgerCashReceiptHeader group
				PrmCashCode					is a CashCode
				PrmBankTransactionCode		is a BankTransactionCode
				PrmGeneralLedgerSourceCode	is a GeneralLedgerEvent
				PrmApprovalCostCenter		is like AccountingUnit
				PrmApprovalCategory			is Alpha 20
				PrmDateRange				is a DateRange
				PrmSearchAmountRange		is a SearchAmountRange	
				PrmApprovalCode				is a ApprovalCode
				PrmCommentText				is a CommentText
				PrmAutoApprove				is Boolean
				PrmSubmitForApproval		is Boolean
				PrmCashLedgerBatchApproval	is a CashLedgerBatchApproval

			Parameter Rules
				PrmCashManagementGroup
					required
				PrmApprovalCode
					if (!PrmCashManagementGroup.CashLedgerReceiptApprovalRequired
					or  PrmCashManagementGroup.ApprovalCodesNotUsedForReceipts)
						cannot be entered
					if (PrmSubmitForApproval
					and !PrmCashManagementGroup.ApprovalCodesNotUsedForReceipts)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
				PrmAutoApprove
					if (PrmAutoApprove)
						constraint (!PrmSubmitForApproval)
							"CannotSelectBothAutoApproveAndSubmitForApproval"
				PrmSubmitForApproval
					if (!PrmCashManagementGroup.CashLedgerReceiptApprovalRequired)
						constraint (!PrmSubmitForApproval)
							"SubmitForApprovalValidOnlyWhenReceiptApprovalIsRequired"
							
			Local Fields
				LocalCashLedgerBatchApproval is a CashLedgerBatchApproval view						

			Instance Selection
				where  (PrmCashManagementGroup		= CashManagementGroup
				and   ((PrmCashLedgerReceiptGroup 	entered
	            and	    CashLedgerCashReceiptHeader	within PrmCashLedgerReceiptGroup)
	            or	    PrmCashLedgerReceiptGroup 	!entered)
				and   ((PrmCashCode					entered
	            and	    PrmCashCode					= CashCode)
	            or	    PrmCashCode 				!entered)
				and   ((PrmBankTransactionCode		entered
	            and	    PrmBankTransactionCode		= CashLedgerCashReceiptHeader.BankTransactionCode)
	            or	    PrmBankTransactionCode 		!entered)
				and   ((PrmGeneralLedgerSourceCode	entered
	            and	    PrmGeneralLedgerSourceCode	= GeneralLedgerSourceCode)
	            or	    PrmGeneralLedgerSourceCode 	!entered)
				and   ((PrmApprovalCostCenter		entered
	            and	    PrmApprovalCostCenter		= ApprovalCostCenter)
	            or	    PrmApprovalCostCenter	 	!entered)
				and   ((PrmApprovalCategory			entered
	            and	    PrmApprovalCategory			= ApprovalCategory)
	            or	    PrmApprovalCategory		 	!entered)
				and   ((PrmDateRange				entered
	            and	    DepositDate within PrmDateRange)
	            or	    PrmDateRange			 	!entered)
				and   ((PrmSearchAmountRange		entered
	            and	    DepositAmount within PrmSearchAmountRange)
	            or	    PrmSearchAmountRange	 	!entered)
	            and     Status.Unreleased
				and     !BudgetEditInProgress			
	            and     !ImportInProcess)


			Action Rules							
				Empty Set Rules

				Set Rules
					Entrance Rules
						initialize LocalCashLedgerBatchApproval
						if (PrmCashLedgerBatchApproval	entered)
							LocalCashLedgerBatchApproval	= PrmCashLedgerBatchApproval
						else
							invoke Create CashLedgerBatchApproval
								assign result to LocalCashLedgerBatchApproval
	    						invoked.CashManagementGroup		= PrmCashManagementGroup
	    						invoked.BatchApprovalType		= 2 
	    						invoked.CashLedgerReceiptGroup	= PrmCashLedgerReceiptGroup
								invoked.CashCode				= PrmCashCode
								invoked.BankTransactionCode		= PrmBankTransactionCode
	        					invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
								invoked.ApprovalCostCenter		= PrmApprovalCostCenter
								invoked.ApprovalCategory		= PrmApprovalCategory
								invoked.DateRange				= PrmDateRange
								invoked.SearchAmountRange		= PrmSearchAmountRange
								invoked.CommentText				= PrmCommentText
								invoked.ApprovalCode			= PrmApprovalCode
								invoked.AutoApprove				= PrmAutoApprove
					
					Exit Rules
						if (PrmSubmitForApproval)
							invoke Open.SubmitForApproval LocalCashLedgerBatchApproval.CashLedgerBatchApproval
								invoked.PrmApprovalCode	= PrmApprovalCode
						
				Instance Rules
			    	if (DepositAmount = AppliedBankAmount) 
			        	CashLedgerBatchApproval	= LocalCashLedgerBatchApproval.CashLedgerBatchApproval
						if (PrmAutoApprove)
							invoke Release
						else
							if (PrmCashManagementGroup.CashLedgerReceiptApprovalRequired)
			        			Status	= Status.PendingApproval

		RemoveFromBatch is an Instance Action
			valid when (CanBeRemovedFromBatch)
			Action Rules
				initialize CashLedgerBatchApproval
				Status	= Status.Unreleased

		BatchApprove is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup		
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval	
				PrmApprovalCode					is an ApprovalCode
			Instance Selection		
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and   !BudgetEditInProgress						
				and    Status.PendingApproval)
			Sort Order is ByCashLedgerBatchApproval		
			Action Rules
				Instance Rules
					ApprovalCode	= PrmApprovalCode
					invoke Approve


		UpdateApprovalLevel is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				ParmEscalate	is Boolean
				ParmReassign	is Boolean
			Action Rules

				if (ParmReassign)
					if (ReassignToApprovalLevel entered)
						ApprovalLevel = ReassignToApprovalLevel.ApprovalLevel
						initialize ReassignToApprovalLevel
				else
				if (ParmEscalate)
					include GetNextEscalationApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam
				else
					include GetNextApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam


		UpdateApprovalFields is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmCurrentApprover	is a FinanceResource
				PrmCurrentTeam		is a FinanceTeam
				PrmApprovalLevel	is Numeric 8
			Action Rules
				Approver		= PrmCurrentApprover
				ApproverTeam	= PrmCurrentTeam
				ApprovalLevel	= PrmApprovalLevel

		SubmitForApproval is an Instance Action
			completion message is "ApproveCashLedgerReceiptHasBeenSubmittedToTheQueueForProcessing"
	 		valid when (CanSubmitForApproval)
			Parameters
				PrmApprovalCode		is a ApprovalCode
					default label is "ApprovalCode"
				PrmCommentText		is a CommentText
					default label is "Comment"

			Parameter Rules
				PrmApprovalCode
					initial value is CashCode.ApprovalCode
					default to CashCode.ApprovalCode
					if (!CashManagementGroup.ApprovalCodesNotUsedForReceipts)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
					
		    Entrance Rules
				constraint (!BudgetEditInProgress)		
					"CannotSubmitForApproval;BudgetEditInProgress"
				constraint (DepositAmount = AppliedBankAmount) 
					"CannotSubmitForApproval;CashReceiptIsOutOfBalance"                 
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									

			Action Rules
				if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting
				and CashLedgerCashReceiptDetailRequiringCustodialAccountRel exists)		
					confirmation required
						"OneOrMoreReceiptDetailsMayRequireCustodialAccount;Continue?"				
				CommentText			+= PrmCommentText
				if (!CashManagementGroup.ApprovalCodesNotUsedForReceipts)
					ApprovalCode		= PrmApprovalCode
					constraint (ApprovalCode.HasApprovalLevels) 
						"CannotComplete;TheApprovalCodeHasNoApprovalLevels"
					constraint (!ApprovalCode.HasTeamWithNoMembers) 
						"CannotComplete;TheApprovalCodeHasATeamWithNoMembers"
					constraint (!ApprovalCode.HasInvalidEscalations)
						"CannotComplete:TheApprovalCodeHasInvalidEscalationSettings"
					constraint (!ApprovalCode.HasInactiveResources)
						"CannotComplete;TheApprovalCodeHasInactiveResources"
					if (CashManagementGroup.EnforceProcessorCannotBeApprover) 
						LocalApprover = actor.agent(Employee).Employee
						constraint (!ApprovalCodeResourceByResourceRel exists)
							"PersonSubmittingReceiptCannotBeTheApprover"
	
					initialize ApprovalLevel
					initialize Approver
					initialize ApproverTeam	
					include GetNextApprovalLevel
					ApprovalLevel	= LocalApprovalLevel
					Approver 		= LocalApprover
					ApproverTeam	= LocalApproverTeam
				include InitiateApprovalProcessFlow
			
				Status	= Status.PendingApproval

		BatchApprovalApprove is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and   !BudgetEditInProgress					
				and    Status.PendingApproval)
			Sort Order is ByCashLedgerBatchApproval
			Action Rules
				Instance Rules
					invoke Approve

		Approve is an Instance Action
			default label is untranslatable
			restricted
			Local Fields
				LocalReleaseError			is Boolean
				LocalReleaseErrorMessage	is Alpha 150
		    Entrance Rules
				constraint (DepositAmount = AppliedBankAmount) 
					"CannotApprove;CashReceiptIsOutOfBalance"
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
					resume on error
						LocalReleaseError 			= true
						LocalReleaseErrorMessage 	= error message
				if(LocalReleaseError)
					invoke DeleteReleaseErrorTransaction RelatedCashLedgerTransactionsRel		
					invoke Create CashLedgerTransactionError
						fill in fields from this instance
						invoked.CashLedgerCashReceiptHeader.TransactionNumber	= CashLedgerCashReceiptHeader.TransactionNumber
						invoked.BankTransactionCode			= CashLedgerCashReceiptHeader.BankTransactionCode
						invoked.CashLedgerSourceRecord		= "CBT"
						invoked.ErrorLevel					= 1		
						invoked.ErrorClass					= 3		
						invoked.ErrorType					= 14	
						invoked.ErrorSource					= 10	
						invoked.ErrorDescription			= LocalReleaseErrorMessage
					Status = Status.Unreleased
				
		Reject is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

		RejectWithReasonCode is an Instance Action
			default label is untranslatable
			restricted
			subject is RejectCashLedgerReceipt
			reason code required
			action comment required

			Action Rules
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

			Exit Rules
				invoke Create CashLedgerReceiptReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerCashReceiptHeader	= CashLedgerCashReceiptHeader
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= action comment	
				
		ManualApprove is an Instance Action
			valid when (CanManuallyApproveOrReject)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
		    Entrance Rules
				constraint (DepositAmount = AppliedBankAmount) 
					"CannotApprove;CashReceiptIsOutOfBalance"
				constraint (first BankAccountBalancesRel not exists
				or		    DepositDate > first BankAccountBalancesRel.BankAccountBalance)
					"TransactionDateIsForAClosedBankPeriod"									

			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
				cancel CashLedgerReceiptApproval process
						
		ManualReject is an Instance Action
			subject is RejectCashLedgerReceipt
			valid when (CanManuallyApproveOrReject)
			Parameters
				PrmComment		is Alpha size up to 500
			Action Rules
				if (CashManagementGroup.RejectCashLedgerReceiptReasonCodeRequired)
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingCashLedgerReceiptRequests"
				Status	= Status.Unreleased
			
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	
				
				cancel CashLedgerReceiptApproval process

			Exit Rules
				invoke Create CashLedgerReceiptReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerCashReceiptHeader	= CashLedgerCashReceiptHeader
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= PrmComment	

		ApplyComments is an Instance Action
			valid when (CanUpdateComments)
			Parameters
				PrmCommentText		is a CommentText
					default label is "Comment"
			Action Rules
				CommentText			+= PrmCommentText	
				
		CashLedgerCashReceiptHeaderPurge is a Set Action
			Parameters
				PrmCashManagementGroup         is a CashManagementGroup
				PrmCashCode                    is a CashCode
				PrmCashCodeGroup               is a CashCodeGroup
				PrmCashReceiptHeaderCutOffDate is Date
				
			Parameter Rules
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and  ((PrmCashCode				  entered	
				and    CashCode					= PrmCashCode)
				or     PrmCashCode				  not entered)
				and  ((PrmCashCodeGroup			  entered	
				and    CashCodeGroupDetailRel     exists)
				or     PrmCashCodeGroup			  not entered)
				and    PrmCashReceiptHeaderCutOffDate entered
				and    DepositDate <= PrmCashReceiptHeaderCutOffDate
				and    Status.Released)
			
			Action Rules
				Instance Rules
					invoke Purge CashLedgerCashReceiptDetailsRel 
					invoke Purge
					
		Purge is a Purge Action
			restricted				
														













		MassRelease is a Set Action	
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCashCode					is a CashCode
					default label is "CashCode"	
				PrmCashCodeGroup			is a CashCodeGroup
					default label is "CashCodeGroup"
				PrmUseSystemDate			is Boolean
					default label is "UseSystemDate"
				PrmEnterDate				is Date
					default label is "EnterDate"
				PrmDays						is Numeric 3
					default label is "Days"
				PrmBankTransactionCode		is a BankTransactionCode
					default label is "BankTransactionCode"
				PrmGeneralLedgerSourceCode	is a GeneralLedgerEvent
					default label is "EventCode"
										
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashCode
					if (PrmCashCode entered)
						constraint (PrmCashCodeGroup not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
				PrmUseSystemDate
					if (PrmUseSystemDate)
						constraint (PrmEnterDate not entered)
							"EnterDateMustBeBlankWhenSystemDateIsSelected"
						LocalDateRange.Begin = current corporate date	
				PrmEnterDate
					if (PrmEnterDate not entered)
						constraint (PrmUseSystemDate)
							"EnterDateRequiredWhenSystemDateIsNotSelected"
						LocalDateRange.Begin = current corporate date
					else
						LocalDateRange.Begin = PrmEnterDate
				PrmDays
					LocalDateRange.End = LocalDateRange.Begin + PrmDays as days
																										
			Local Fields
				RecordCount						is Numeric 10
				LocalDateRange					is a DateRange
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				CashLedgerMassReleaseResultView	is a CashLedgerMassReleaseResult view
				
			Instance Selection
				where (CashManagementGroup	 	= PrmCashManagementGroup
				and	   DepositDate				within LocalDateRange
				and    CanReleaseReceipt
				and    !CashLedgerMassReleaseResult entered	

				and  ((PrmCashCode				entered	
				and    CashCode					= PrmCashCode)
				or     PrmCashCode				not entered)

				and  ((PrmCashCodeGroup			entered	
				and    CashCodeGroupDetailRel exists)
				or     PrmCashCodeGroup			not entered)

				and  ((PrmBankTransactionCode	entered	
				and    CashLedgerCashReceiptHeader.BankTransactionCode	= PrmBankTransactionCode)
				or     PrmBankTransactionCode	not entered)

				and  ((PrmGeneralLedgerSourceCode	entered	
				and    GeneralLedgerSourceCode		= PrmGeneralLedgerSourceCode)
				or     PrmGeneralLedgerSourceCode	not entered))				
												
			Sort Order  
				CashManagementGroup
			    CashCode
			    CashLedgerCashReceiptHeader.BankTransactionCode
			    CashLedgerCashReceiptHeader.TransactionNumber
			    
				
			Action Rules
				Empty Set Rules
					invoke Create CashLedgerMassReleaseResult	
						invoked.CashManagementGroup		= PrmCashManagementGroup
						invoked.CashCode				= PrmCashCode
						invoked.CashCodeGroup			= PrmCashCodeGroup
				    	invoked.BankTransactionCode		= PrmBankTransactionCode
				    	invoked.UseSystemDate			= PrmUseSystemDate
				    	invoked.EnterDate				= PrmEnterDate
				    	invoked.Days					= PrmDays
				    	invoked.ReleaseDateRange		= LocalDateRange
				    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
						invoked.Status					= 2 
						invoked.ReleaseType				= 4 
					
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Create CashLedgerMassReleaseResult	
							assign result to CashLedgerMassReleaseResultView
							invoked.CashManagementGroup		= PrmCashManagementGroup
							invoked.CashCode				= PrmCashCode
							invoked.CashCodeGroup			= PrmCashCodeGroup
					    	invoked.BankTransactionCode		= PrmBankTransactionCode
					    	invoked.UseSystemDate			= PrmUseSystemDate
					    	invoked.EnterDate				= PrmEnterDate
					    	invoked.Days					= PrmDays
					    	invoked.ReleaseDateRange		= LocalDateRange
					    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
							invoked.Status					= 1 
							invoked.ReleaseType				= 4 
					Exit Rules
						invoke StatusUpdate CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult	
							
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError				= false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message
					if (MassReleaseError)	
						invoke DeleteReleaseErrorTransaction RelatedCashLedgerTransactionsRel		
						invoke Create CashLedgerTransactionError 
							fill in fields from this instance
							invoked.CashLedgerCashReceiptHeader.TransactionNumber	= CashLedgerCashReceiptHeader.TransactionNumber
							invoked.BankTransactionCode			= CashLedgerCashReceiptHeader.BankTransactionCode
							invoked.CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult
							invoked.CashLedgerSourceRecord		= "CBT"
							invoked.ErrorLevel					= 1		
							invoked.ErrorClass					= 3		
							invoked.ErrorType					= 9		
							invoked.ErrorSource					= 7		
							invoked.ErrorDescription			= MassReleaseErrorMessage
					CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult	
			
		RemoveCashLedgerMassReleaseResult is an Instance Action	
			default label is untranslatable
			restricted
			Entrance Rules					
			Action Rules
				initialize CashLedgerMassReleaseResult 

		MaintainReceiptAttachment is an Instance Action		
			valid when (!IsUnreleased)
			Parameters
				PrmReceiptAttachment	is an Attachment
					default label is "ReceiptAttachment"
			Action Rules
				include IDM.DeleteNoArchiveRules 
					replace AttachmentField with ReceiptAttachment
				ReceiptAttachment = PrmReceiptAttachment
				include IDM.CreateRules 
					replace AttachmentField with ReceiptAttachment

		RerunMassReleaseForErrors is a Set Action	
			default label is untranslatable
			restricted
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerMassReleaseResult 	is a CashLedgerMassReleaseResult
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashLedgerMassReleaseResult
					required									
			Local Fields
				RecordCount						is Numeric 10
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				
			Instance Selection
				where (CashManagementGroup	 		= PrmCashManagementGroup
				and    CanReleaseReceipt
				and    CashLedgerMassReleaseResult 	= PrmCashLedgerMassReleaseResult)
	
			Sort Order  
			    CashManagementGroup
				CashLedgerMassReleaseResult
				
				
			Action Rules
				Empty Set Rules
					invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
						invoked.Status	= 2 
						
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
							invoked.Status	= 1 
						
					Exit Rules
						invoke StatusUpdate PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult	
				
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError				= false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message
					if (MassReleaseError)	
						invoke DeleteReleaseErrorTransaction RelatedCashLedgerTransactionsRel		
						invoke Update CashLedgerTransactionError set
							fill in fields from this instance
							invoked.ErrorDescription	= MassReleaseErrorMessage
				
		CompanyPeriodClosePostDateUpdate	is a Set Action 
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is like CashManagementGroup
				PrmNewPostDate				is Date
				PrmCashLedgerJobResult		is a CashLedgerJobResult
				PrmCompany					is a GeneralLedgerCompany
				PrmCloseDetail				is a CashLedgerJobResultDetail
			
			Parameter Rules
				PrmCashManagementGroup		
					required
				PrmNewPostDate				
					required
				PrmCompany					
					required
				PrmCloseDetail
					required
						
			Sort Order is ByCompany
				
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    Company.OrigCompany		= PrmCompany
				and    OutstandingCashReceiptsExist)
				
			Action Rules
				Empty Set Rules
					if (PrmCloseDetail.CanClose)
						invoke CloseCompany PrmCloseDetail	
					
				Set Rules
					Entrance Rules
												
					Exit Rules
						if (PrmCloseDetail.CanClose)
							invoke CloseCompany PrmCloseDetail
			        	
				Instance Rules
					PostDate	= PrmNewPostDate

		CompanyPeriodClosePostDateUpdateUnreleased is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is like CashManagementGroup
				PrmNewPostDate				is Date
				PrmPeriodEndDate			is Date
				PrmCashLedgerJobResult		is a CashLedgerJobResult
				PrmCompany					is a GeneralLedgerCompany
				PrmCloseDetail				is a CashLedgerJobResultDetail
			
			Parameter Rules
				PrmCashManagementGroup		required		
				PrmNewPostDate				required
				PrmPeriodEndDate			required
				PrmCompany					required
				PrmCloseDetail				required
						
			Sort Order is ByCompany
				
			Instance Selection
				where (CashManagementGroup	= PrmCashManagementGroup
				and    Company.OrigCompany	= PrmCompany

				and    Status.Unreleased
            	and    PostDate <= PrmPeriodEndDate) 
            
			Action Rules
				Empty Set Rules
					if (PrmCloseDetail.CanClose)
						invoke CloseCompany PrmCloseDetail	
					
				Set Rules
					Exit Rules
						LocalCashManagementGroup = PrmCashManagementGroup
						LocalCashLedgerJobResult = PrmCashLedgerJobResult
						LocalCompany = PrmCompany
						invoke Delete UnreleasedCashReceiptsErrorRel
						
						if (PrmCloseDetail.CanClose)
							invoke CloseCompany PrmCloseDetail
			        	
				Instance Rules
					PostDate = PrmNewPostDate
					
		CompanyPeriodClosePostDateUpdatePendingApproval is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is like CashManagementGroup
				PrmNewPostDate				is Date
				PrmPeriodEndDate			is Date
				PrmCashLedgerJobResult		is a CashLedgerJobResult
				PrmCompany					is a GeneralLedgerCompany
				PrmCloseDetail				is a CashLedgerJobResultDetail
			
			Parameter Rules
				PrmCashManagementGroup		required		
				PrmNewPostDate				required
				PrmPeriodEndDate			required
				PrmCompany					required
				PrmCloseDetail				required
						
			Sort Order is ByCompany
				
			Instance Selection
				where (CashManagementGroup	= PrmCashManagementGroup
				and    Company.OrigCompany	= PrmCompany

				and    Status.PendingApproval
				and    PostDate <= PrmPeriodEndDate) 

			
			Action Rules
				Empty Set Rules
					if (PrmCloseDetail.CanClose)
						invoke CloseCompany PrmCloseDetail	
					
				Set Rules
					Exit Rules
						LocalCashManagementGroup = PrmCashManagementGroup
						LocalCashLedgerJobResult = PrmCashLedgerJobResult
						LocalCompany = PrmCompany
						invoke Delete PendingApprovalCashReceiptsErrorRel
						
						if (PrmCloseDetail.CanClose)
							invoke CloseCompany PrmCloseDetail
			        	
				Instance Rules
					PostDate = PrmNewPostDate
			
		ProcessBudgetEdits is an Instance Action	
			default label is untranslatable
			restricted
			Action Rules
				include PerformBudgetEditsForRelease
																							
		AutoCreateReceiptDetail is an Instance Action	
			default label is untranslatable
			restricted
			Action Rules
				initialize DistributionRunningTotal
				for each TransientCashAllocationCode.CashAllocationCodeDetail set
					invoke Create CashLedgerCashReceiptDetail
						assign result to LastReceiptDetail
						fill in user fields from LocalOriginatingTransaction(CashLedgerReceiptImport).CashLedgerReceiptImport
						invoked.CashManagementGroup	 			= CashManagementGroup
						invoked.CashCode						= CashCode
	                	invoked.CashLedgerCashReceiptHeader		= CashLedgerCashReceiptHeader
						invoked.ReceiptAccount					= each.AllocationAccount
						invoked.CashAllocationCode				= TransientCashAllocationCode
						invoked.BypassNegativeRateEdit			= BypassNegativeRateEdit
						if (TransientCashAllocationCode.AllocationType.AccountOnly)
							invoked.ReceiptBankAmount			= TransientCashAllocationAmount
						if (TransientCashAllocationCode.AllocationType.Amount)
							invoked.ReceiptBankAmount			= each.AllocationAmount
						if (TransientCashAllocationCode.AllocationType.Percent)
							LocalAllocationAmount				= (TransientCashAllocationAmount * each.AllocationPercent)
							round LocalAllocationAmount to nearest DerivedRoundTo
							invoked.ReceiptBankAmount			= LocalAllocationAmount

					if (TransientCashAllocationCode.AllocationType.Percent)
						DistributionRunningTotal += LocalAllocationAmount
				
				if  (TransientCashAllocationCode.AllocationType.Percent
				and (TransientCashAllocationAmount - DistributionRunningTotal) != 0)
					invoke Update LastReceiptDetail.CashLedgerCashReceiptDetail
						invoked.ReceiptBankAmount += (TransientCashAllocationAmount - DistributionRunningTotal)		
						
		CashAllocationCodeDetailDelete	is an Instance Action	
			valid when (CanDeleteDetails)	
			Parameters
				PrmCashAllocationCode	is a CashAllocationCode
					default label is "CashAllocationCode"
			Action Rules
				LocalCashAllocationCode	= PrmCashAllocationCode
				if (PrmCashAllocationCode entered)
					if (ReceiptDetailsByCashAllocationCodeRel exists)
						invoke Delete ReceiptDetailsByCashAllocationCodeRel
				else		
					if (ReceiptDetailsWithAnyCashAllocationCodesRel exists)
						invoke Delete ReceiptDetailsWithAnyCashAllocationCodesRel			

		ApplyAdditionalCashAllocations is an Instance Action	
			valid when (CanApplyAdditionalCashAllocations)	
			Parameters
				PrmCashAllocationCode		is a CashAllocationCode
					default label is "CashAllocationCode"
				PrmCashAllocationAmount		is an InternationalAmount
					default label is "CashAllocationAmount"	
				PrmCashLedgerReceiptImport	is BusinessObjectReference  
			Parameter Rules
				PrmCashAllocationCode
					required
			Action Rules
				LocalCashAllocationCode			= PrmCashAllocationCode
				TransientCashAllocationCode		= PrmCashAllocationCode
				TransientCashAllocationAmount	= PrmCashAllocationAmount
				LocalOriginatingTransaction		= PrmCashLedgerReceiptImport
				include CashAllocationCodeEdits	
				if (ReceiptDetailsByCashAllocationCodeRel exists)
					confirmation required
						"DetailsAlreadyExistForAllocationCode<PrmCashAllocationCode>;DoYouWantToContinue?"
				invoke AutoCreateReceiptDetail	
				initialize TransientCashAllocationCode		
				initialize TransientCashAllocationAmount

		ExecuteFrontEndSplitCashReceiptDetails is an Instance Action
			restricted
			Action Rules
				invoke FrontEndSplitCashReceiptDetails CashLedgerCashReceiptDetail in foreground
					invoked.PrmCashManagementGroup			= CashManagementGroup
					invoked.PrmCashCode						= CashCode
					invoked.PrmBankTransactionCode			= CashLedgerCashReceiptHeader.BankTransactionCode
					invoked.PrmTransactionNumber			= CashLedgerCashReceiptHeader.TransactionNumber

		FrontEndSplitCashReceiptDetails is an Instance Action
			valid when(AllowReceiptDetailsFrontEndSplits)
			Action Rules
				invoke ExecuteFrontEndSplitCashReceiptDetails

		DeleteFrontEndSplitCashReceiptDetails is an Instance Action
			valid when(HasFrontEndSplitReceiptDetails)
			Action Rules
				invoke DeleteFrontEndSplitCashReceiptDetails CashLedgerCashReceiptDetail
					invoked.PrmCashManagementGroup			= CashManagementGroup
					invoked.PrmCashCode						= CashCode
					invoked.PrmBankTransactionCode			= CashLedgerCashReceiptHeader.BankTransactionCode
					invoked.PrmTransactionNumber			= CashLedgerCashReceiptHeader.TransactionNumber

		UploadToIDM is an Instance Action  
			valid when (ReceiptAttachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with ReceiptAttachment	
						
									
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (ReceiptAttachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with ReceiptAttachment			

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop
