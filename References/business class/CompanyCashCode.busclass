CompanyCashCode is a BusinessClass
    owned by cb
    prefix is CBY
    classic name is CBCPYCASH

    Ontology
        symbolic key is CompanyCashCode
            classic set name is CBYSET1

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        CashAccount                       is a FinanceCodeBlockFull
        	default label is "CashPostingAccount"
        	classic name for CashAccount.ToAccountingEntity is CSH-COMPANY
    	    classic name for CashAccount.AccountingUnit is CSH-ACCT-UNIT
	        classic name for CashAccount.GeneralLedgerChartAccount is CSH-ACCOUNT


        ReconcileToleranceOverAmount      is an UnsignedInternationalAmount
            classic name is REC-OVER-TOL
        ReconcileToleranceUnderAmount     is an UnsignedInternationalAmount
            classic name is REC-UNDER-TOL
        VarianceAccount                   is a FinanceCodeBlockFull
	        classic name for VarianceAccount.ToAccountingEntity is VAR-COMPANY
    	    classic name for VarianceAccount.AccountingUnit is VAR-ACCT-UNIT
        	classic name for VarianceAccount.GeneralLedgerChartAccount is VAR-ACCOUNT

        ReconcileGeneralLedgerEntry       is Boolean
            classic name is REC-GL-ENTRY
            default label is "ReconcileGlobalLedgerEntry"
        ReconciliationAccount             is a FinanceCodeBlockFull
	        classic name for ReconciliationAccount.ToAccountingEntity is REC-COMPANY
	        classic name for ReconciliationAccount.AccountingUnit is REC-ACCT-UNIT
	        classic name for ReconciliationAccount.GeneralLedgerChartAccount is REC-ACCOUNT








        UsedFlag                          is Boolean
        JournalBook
            classic name is RECON-JRNL-BK
            restricted
        CustomerBankTransactionCode       is a BankTransactionCode
            classic name is DEP-INST-CODE
        VendorBankTransactionCode         is a BankTransactionCode
            classic name is CHK-INST-CODE
        BankTransactionCode
            classic name is BANK-INST-CODE
        ReconciliationBankTransactionCode is a BankTransactionCode
            sql name is RBankTransactionCode
            classic name is RECN-INST-CODE
        ObjectID                          is an ObjId
            classic name is OBJ-ID


        TransferClearingAccount           is a FinanceCodeBlockFull
	        classic name for TransferClearingAccount.AccountingUnit is CLR-ACCT-UNIT
	        classic name for TransferClearingAccount.GeneralLedgerChartAccount is CLR-ACCOUNT
        PaymentClearingAccount            is a FinanceCodeBlockFull
	        classic name for PaymentClearingAccount.AccountingUnit is PMT-ACCT-UNIT
    	    classic name for PaymentClearingAccount.GeneralLedgerChartAccount is PMT-ACCOUNT
        EncashedRemittanceAccount         is a FinanceCodeBlockFull
	        classic name for EncashedRemittanceAccount.AccountingUnit is ENCS-ACCT-UNIT
	        classic name for EncashedRemittanceAccount.GeneralLedgerChartAccount is ENCS-ACCOUNT
        DiscountedRemittanceAccount       is a FinanceCodeBlockFull
	        classic name for DiscountedRemittanceAccount.AccountingUnit is DISC-ACCT-UNIT
	        classic name for DiscountedRemittanceAccount.GeneralLedgerChartAccount is DISC-ACCOUNT
        BankRiskAccount                   is a FinanceCodeBlockFull
	        classic name for BankRiskAccount.AccountingUnit is RISK-ACCT-UNIT
	        classic name for BankRiskAccount.GeneralLedgerChartAccount is RISK-ACCOUNT
        BankExpenseAccount                is a FinanceCodeBlockFull
	        classic name for BankExpenseAccount.AccountingUnit is BEXP-ACCT-UNIT
	        classic name for BankExpenseAccount.GeneralLedgerChartAccount is BEXP-ACCOUNT
        AdministrationExpenseAccount      is a FinanceCodeBlockFull
	        classic name for AdministrationExpenseAccount.AccountingUnit is ADMN-ACCT-UNIT
	        classic name for AdministrationExpenseAccount.GeneralLedgerChartAccount is ADMN-ACCOUNT
        FinancialExpenseAccount           is a FinanceCodeBlockFull
        	classic name for FinancialExpenseAccount.AccountingUnit is FIN-ACCT-UNIT
        	classic name for FinancialExpenseAccount.GeneralLedgerChartAccount is FIN-ACCOUNT
        ElectronicPaymentAccount          is a FinanceCodeBlockFull
        	classic name for ElectronicPaymentAccount.AccountingUnit is EFT-ACCT-UNIT
        	classic name for ElectronicPaymentAccount.GeneralLedgerChartAccount is EFT-ACCOUNT
       	Active                            is Boolean
            classic name is ACTIVE-STATUS
        CreateAdjustmentsForInTolerance   is Boolean
			
    Attach Rules
		if (parentcontext.name != "CashCodeCashPosition"
        and parentcontext.name != "CashLedgerReconciliationAdjustment"
        and parentcontext.name != "PayablesBillOfExchange")
            constraint (Active)
                "CompanyCashCodeIsNotActive"

    Derived Fields
    	ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforFinancialAccount"

		ContextMessageText is a MessageField
			restricted
			"CompanyCashCode<CompanyCashCode>"
    	





	Transient Fields
		TransientFromCurrency		is a FromCurrency
			derive value from CashCode.Currency

	Local Fields
		LocalEscheatmentBankTransactionCode		is a BankTransactionCode
		LocalEscheatmentProcessLevel			is a ProcessLevel
		LocalEscheatmentDateRange				is a DateRange
		LocalEscheatmentCompany					is a Company
		LocalEscheatmentVendor					is a Vendor
		LocalEscheatmentHeader					is a EscheatmentNoticeIDMHeader

    Conditions

        IsCompanyCashCodeAtributeValueExist
        	restricted
            classic name is CBMXVAL-EXIST
            when (first CbmxvalueRel exists)





        IsObjectID
        	restricted
            classic name is OBJ-ID-EXISTS
            when (ObjectID entered)
            
        IsCreated
        	restricted
        	when (CompanyCashCode exists)

    Relations







        CbmxconvRel
            one-to-many relation to CompanyCashCodeAtributeImport
            Field Mapping uses symbolic key
                related.Company  			  = Company
                related.CashCode			 = CashCode

        CbmxvalueRel
            one-to-many relation to CompanyCashCodeAtributeValue
            delete cascades
            Field Mapping uses symbolic key
            Instance Selection
                where (related.CompanyCashCodeAtributeValue.ObjectID = ObjectID)

        FinancialInstitutionBranchRel
            classic name is CBBANKENT
            one-to-one relation to FinancialInstitutionBranch
            required
            Field Mapping uses symbolic key
            	related.CashManagementGroup			= CashCode.CashManagementGroup	
            	related.FinancialInstitution		= CashCode.FinancialInstitution
                related.FinancialInstitutionBranch	= CashCode.FinancialInstitutionBranch







		StaleDatingGLAccountRel
			one-to-many relation to StaleDatingGLAccount
			Field Mapping uses symbolic key
				related.Company					= Company					
				related.CashCode				= CashCode	

        CashLedgerFundTransferDetailsRel
            classic name is CBTRFDTL
            one-to-many relation to CashLedgerFundTransferDetail
            Field Mapping uses Set3
                related.CashLedgerFundTransferDetail.DetailCashCode = CashCode
            Instance Selection
                where (related.DetailCompany.OrigCompany = Company)                

		MultipleCashCodePerGLAccountRel				
			one-to-many relation to CompanyCashCode
			Field Mapping uses ByCashGLAccount
				related.CashAccount.GeneralLedgerChartAccount = CashAccount.GeneralLedgerChartAccount
			Instance Selection
				where (related.CashCode.CashManagementGroup	= CashCode.CashManagementGroup
				and    related.CashCode != CashCode)

		CashLedgerTransactionsWithVendorOpenRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup 					= CashCode.CashManagementGroup
				related.CashCode								= CashCode
			Instance Selection
				where (((LocalEscheatmentBankTransactionCode entered
				and related.BankTransactionCode = LocalEscheatmentBankTransactionCode)
				or (LocalEscheatmentBankTransactionCode not entered))
				and (related.IssueDate within LocalEscheatmentDateRange)
				and ((LocalEscheatmentProcessLevel entered
				and related.PayablesCompanyVendorProcLevel.PayablesProcessLevel = LocalEscheatmentProcessLevel)
				or LocalEscheatmentProcessLevel not entered)
				and (related.Company.OrigCompany = Company)
				and related.PayablesCompanyVendorProcLevel.Vendor entered
				and related.Status.Open
				and related.BankTransactionCode.BankTransactionType.CashPayment
				and related.BankTransactionCode.TransactionType.DebitTransaction
				and related.SummaryOption.NoSummary
				and (related.Type not entered or not related.Type.CashLedgerPayment))

		CashLedgerTransactionsNoVendorRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup 					= CashCode.CashManagementGroup
				related.CashCode								= CashCode
			Instance Selection
				where (((LocalEscheatmentBankTransactionCode entered
				and related.BankTransactionCode = LocalEscheatmentBankTransactionCode)
				or (LocalEscheatmentBankTransactionCode not entered))
				and (related.IssueDate within LocalEscheatmentDateRange)
				and ((LocalEscheatmentProcessLevel entered
				and related.PayablesCompanyVendorProcLevel.PayablesProcessLevel = LocalEscheatmentProcessLevel)
				or LocalEscheatmentProcessLevel not entered)
				and (related.Company.OrigCompany = Company)
				and (related.PayablesCompanyVendorProcLevel.Vendor not entered
				or related.Type.CashLedgerPayment)
				and (related.Status.Open or related.Status.StaleDated)
				and related.BankTransactionCode.BankTransactionType.CashPayment
				and related.BankTransactionCode.TransactionType.DebitTransaction
				and related.SummaryOption.NoSummary)
		
		CashLedgerTransactionsWithVendorStaleDatedRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup 					= CashCode.CashManagementGroup
				related.CashCode								= CashCode
			Instance Selection
				where (((LocalEscheatmentBankTransactionCode entered
				and related.BankTransactionCode = LocalEscheatmentBankTransactionCode)
				or (LocalEscheatmentBankTransactionCode not entered))
				and (related.IssueDate within LocalEscheatmentDateRange)
				and ((LocalEscheatmentProcessLevel entered
				and related.PayablesCompanyVendorProcLevel.PayablesProcessLevel = LocalEscheatmentProcessLevel)
				or LocalEscheatmentProcessLevel not entered)
				and related.PayablesCompanyVendorProcLevel.Vendor entered
				and (related.Company.OrigCompany = Company)
				and related.Status.StaleDated
				and (related.Type not entered or not related.Type.CashLedgerPayment))

    Sets

        Set2
            indexed
            Sort Order
                CashCode
                Company

        Set3
            indexed
            Instance Selection
                where (IsObjectID)
            Sort Order
                ObjectID

        ByCashGLAccount				
            indexed
            Sort Order
            	CashAccount.GeneralLedgerChartAccount
                CashCode
                Company

	Field Rules
	    CashAccount
	    	constraint (CashAccount.ToAccountingEntity = Company.AccountingEntity)
	    		"CashAccountAccountingEntityMustBeTheSameAsTheAccountingEntityOnTheGlobalLedgerCompany"
			if (CashAccount.GeneralLedgerChartAccount.Currency entered)
				constraint (CashAccount.GeneralLedgerChartAccount.Currency = CashCode.Currency)
					"IfCashPostingAccountCurrencyEntered,ItMustEqualCashCodeCurrency"	
	        if (CashCode.CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)				
	        	constraint (!MultipleCashCodePerGLAccountRel exists)
	        		"GlobalLedgerAccount<CashAccount.GeneralLedgerChartAccount>AlreadyAssignedToCashCode<first MultipleCashCodePerGLAccountRel.CashCode>"
	        required 

	    TransferClearingAccount
	    	if (TransferClearingAccount.ToAccountingEntity entered)
		    	constraint (TransferClearingAccount.ToAccountingEntity = Company.AccountingEntity)
		    		"TransferClearingAccountAccountingEntityMustBeTheSameAsTheAccountingEntityOnTheGlobalLedgerCompany"	    	
			if (TransferClearingAccount.GeneralLedgerChartAccount.Currency entered)
				constraint (TransferClearingAccount.GeneralLedgerChartAccount.Currency = CashCode.Currency)
					"IfTransferClearingAccountCurrencyEntered,ItMustEqualCashCodeCurrency"	

		PaymentClearingAccount
	    	if (PaymentClearingAccount.ToAccountingEntity entered)
		    	constraint (PaymentClearingAccount.ToAccountingEntity = Company.AccountingEntity)
		    		"PaymentClearingAccountAccountingEntityMustBeTheSameAsTheAccountingEntityOnTheGlobalLedgerCompany"		
			if (PaymentClearingAccount.GeneralLedgerChartAccount.Currency entered)
				constraint (PaymentClearingAccount.GeneralLedgerChartAccount.Currency = CashCode.Currency)
					"IfPaymentClearingAccountCurrencyEntered,ItMustEqualCashCodeCurrency"	

		ElectronicPaymentAccount
	    	if (ElectronicPaymentAccount.ToAccountingEntity entered)
		    	constraint (ElectronicPaymentAccount.ToAccountingEntity = Company.AccountingEntity)
		    		"ElectronicPaymentAccountAccountingEntityMustBeTheSameAsTheAccountingEntityOnTheGlobalLedgerCompany"			
			if (ElectronicPaymentAccount.GeneralLedgerChartAccount.Currency entered)
				constraint (ElectronicPaymentAccount.GeneralLedgerChartAccount.Currency = CashCode.Currency)
					"IfElectronicPaymentAccountCurrencyEntered,ItMustEqualCashCodeCurrency"	
			        
		VarianceAccount
			if (ReconcileToleranceOverAmount entered
			or  ReconcileToleranceUnderAmount entered)
				required
					"VarianceAccountRequiredWithToleranceAmount"	             

        ReconciliationAccount
			if (ReconcileGeneralLedgerEntry)
              	required
                    "ReconciliationAccountRequired;ReconcileEntry_=_\Yes"         
	    	if (ReconciliationAccount.ToAccountingEntity entered)
		    	constraint (ReconciliationAccount.ToAccountingEntity = Company.AccountingEntity)
		    		"ReconciliationAccountAccountingEntityMustBeTheSameAsTheAccountingEntityOnTheGlobalLedgerCompany"

		CustomerBankTransactionCode
			constraint (CustomerBankTransactionCode.BankTransactionType.BankService)
				"MustBeABankServicesTypePayCode"		                         

			constraint (CustomerBankTransactionCode.AutomaticReconciliation)
				"InvalidPayCode;MustBeSetForAutoReconcile"		               

		VendorBankTransactionCode
			constraint (VendorBankTransactionCode.BankTransactionType.CashPayment)
				"MustBeACashTypePayCode"		                                 

			constraint (VendorBankTransactionCode.AutomaticReconciliation)
				"InvalidPayCode;MustBeSetForAutoReconcile"                 

		BankTransactionCode
			constraint (BankTransactionCode.BankTransactionType.BankService)
				"MustBeABankServiceTypePayCode"		                          

			constraint (BankTransactionCode.AutomaticReconciliation)
				"InvalidPayCode;MustBeSetForAutoReconcile"                 

		ReconciliationBankTransactionCode
			constraint (!ReconciliationBankTransactionCode.AutomaticReconciliation)
				"InvalidPayCode;MustNotBeSetForAutoReconcile"   				 
		
		Active
            default to true
				
	Actions
		Create is a Create Action
			Action Rules

		Update is an Update Action
			Action Rules

		Delete is a Delete Action
	     	Entrance Rules
	     		constraint (!CashLedgerFundTransferDetailsRel exists)
	     			"CannotDelete;AtLeastOneCashLedgerFundTranferDetailExists"
	     		if (CashCode.DefaultPostCompany entered)
	     			constraint (CashCode.DefaultPostCompany	!= Company)
	     				"CannotDelete;Company:<Company>IsDefinedAsDefaultCompanyOnCashCode:<CashCode>"

		GenerateIDMEscheatmentNotice is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup 	is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCashCode				is a CashCode
					default label is "CashCode"
				PrmCashCodeGroup		is a CashCodeGroup
					default label is "CashCodeGroup"
				PrmBankTransactionCode	is a BankTransactionCode
					default label is "BankTransactionCode"
				PrmProcessLevel			is a ProcessLevel
					default label is "ProcessLevel"
				PrmTransactionStatus	is  AlphaUpper size 1
					default label is "Status"
					States
						Open			value is blank
						StaleDated		value is "S"
				PrmDateRange			is a DateRange
				PrmIDMPrinter			is a IDMPrinter
					default label is "IDMPrinter"
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashCode
					constraint (PrmCashCode.UseIDM)
						"<PrmCashCode>ShouldBeIDMEnabled"
					if (PrmCashCodeGroup not entered)
						required "CashCodeOrCashCodeGroupAreRequired"
					constraint (PrmCashCodeGroup not entered)
						"CannotEnterBothCashCodeAndCashCodeGroup"
				PrmDateRange
					required
					constraint (PrmDateRange.Begin entered and PrmDateRange.End entered)
						"BeginDateAndEndDateAreRequired"

				PrmBankTransactionCode
					if (PrmBankTransactionCode entered) 
						constraint (PrmBankTransactionCode.IsCashPayment)
							"<PrmBankTransactionCode>MustBeInCashPaymentType"
			Set Is
				CashCode
				Company
			Instance Selection
				where (CashCode.CashManagementGroup = PrmCashManagementGroup
				and ((PrmCashCode entered and CashCode = PrmCashCode)
				or (PrmCashCodeGroup entered and CashCode.CashCodeGroup = PrmCashCodeGroup and CashCode.CashCodeGroupDetailRelExists)) 
				and CashCode.UseIDM)
			
			Local Fields
				LocalAsyncID			is an AsyncActionRequest
				LocalBatchID			is an IDMPID
				LocalRunDate			is TimeStamp
				LocalActor				is an Actor
				LocalHeaderView			is a EscheatmentNoticeIDMHeader view
	
			Action Rules
				Empty Set Rules
					LocalActor = actor
					send notification
						to LocalActor
						description is "NoCashCodeToProcessForEscheatmentNotice"
						priority is high
						detail is "Parameters:CashManagementGroup:<PrmCashManagementGroup>;CashCode:<PrmCashCode>;CashCodeGroup:<PrmCashCodeGroup>"
				Set Rules
					Entrance Rules
						initialize LocalEscheatmentBankTransactionCode
						initialize LocalEscheatmentDateRange
						initialize LocalEscheatmentProcessLevel
						initialize LocalEscheatmentCompany
						initialize LocalEscheatmentVendor
						initialize LocalHeaderView

						LocalRunDate = current timestamp
						LocalAsyncID = current async action request id
						LocalActor	 = actor

						invoke Create EscheatmentNoticeIDMHeader
							assign result to LocalHeaderView
							invoked.RunDate							= LocalRunDate
							invoked.BatchID							= LocalRunDate
							invoked.ParameterCashManagementGroup	= PrmCashManagementGroup
							invoked.ParameterCashCode				= PrmCashCode
							invoked.ParameterCashCodeGroup 			= PrmCashCodeGroup
							invoked.ParameterBankTransactionCode	= PrmBankTransactionCode
							invoked.ParameterProcessLevel 			= PrmProcessLevel
							invoked.ParameterStatus					= PrmTransactionStatus
							invoked.ParameterDateRange				= PrmDateRange
							invoked.ParameterIDMPrinter				= PrmIDMPrinter
							invoked.Status							= "P"
					Exit Rules
						invoke CreateAndSendEscheatmentNoticeToIDM EscheatmentNoticeIDMLines
							run after LocalAsyncID
							invoked.PrmBatchID 				= LocalRunDate
							invoked.PrmEscheatmentHeader	= LocalHeaderView.EscheatmentNoticeIDMHeader
			
				Instance Rules
					LocalEscheatmentBankTransactionCode = PrmBankTransactionCode
					LocalEscheatmentDateRange			= PrmDateRange
					LocalEscheatmentProcessLevel		= PrmProcessLevel
					LocalEscheatmentCompany				= Company

					if (PrmTransactionStatus.Open and CashLedgerTransactionsWithVendorOpenRel exists)
						for each distinct PayablesCompanyVendorProcLevel.Vendor in CashLedgerTransactionsWithVendorOpenRel
							invoke Create EscheatmentNoticeIDMLines
								invoked.EscheatmentNoticeIDMHeader		= LocalHeaderView.EscheatmentNoticeIDMHeader
								invoked.CashCode						= CashCode
								invoked.Company							= Company
								invoked.PayablesVendor 					= each.PayablesCompanyVendorProcLevel.Vendor
								invoked.Status 							= "P"
								invoked.BatchID							= LocalRunDate
								
					else
					if (PrmTransactionStatus.StaleDated and CashLedgerTransactionsWithVendorStaleDatedRel exists)
						for each distinct PayablesCompanyVendorProcLevel.Vendor in CashLedgerTransactionsWithVendorStaleDatedRel
							invoke Create EscheatmentNoticeIDMLines
								invoked.EscheatmentNoticeIDMHeader		= LocalHeaderView.EscheatmentNoticeIDMHeader
								invoked.CashCode						= CashCode
								invoked.Company							= Company
								invoked.PayablesVendor 					= each.PayablesCompanyVendorProcLevel.Vendor
								invoked.Status 							= "P"
								invoked.BatchID							= LocalRunDate

					if (CashLedgerTransactionsNoVendorRel exists)
						invoke CreateEscheatmentNoticeIDMNoVendorLines CashLedgerTransaction
							assign async action request id to LocalAsyncID
							invoked.PrmEscheatmentHeader		= LocalHeaderView.EscheatmentNoticeIDMHeader
							invoked.PrmBatchID			 		= LocalRunDate
							invoked.PrmCashManagementGroup		= CashCode.CashManagementGroup
							invoked.PrmCashCode					= CashCode
							invoked.PrmCompany					= Company
							invoked.PrmDateRange				= PrmDateRange
							invoked.PrmBankTransactionCode		= PrmBankTransactionCode
							invoked.PrmProcessLevel				= PrmProcessLevel
							invoked.PrmStatus					= PrmTransactionStatus
	     			
