GeneralLedgerZoneTotal is a BusinessClass
	default label is "GlobalLedgerZoneTotal"
    owned by GeneralLedger
    prefix is GLZTT

    Ontology
    	symbolic key is GeneralLedgerZoneTotal

    Patterns
 		implements DynamicCreation
 		disable Auditing 
 		disable EffectiveDated
		disable AsOfDateProcessing

    Persistent Fields
		TransactionAmount				is an InternationalAmount 
 			precision is GeneralLedgerZoneTotal.Currency.NumberOfDecimals
        FunctionalAmount       			is an InternationalAmount
			precision is AccountingEntity.FunctionalCurrency.NumberOfDecimals
        AlternateAmount       			is an InternationalAmount
 			precision is AccountingEntity.AlternateCurrency.NumberOfDecimals
        AlternateAmount2       			is an InternationalAmount
			precision is AccountingEntity.AlternateCurrency2.NumberOfDecimals
        AlternateAmount3       			is an InternationalAmount
			precision is AccountingEntity.AlternateCurrency3.NumberOfDecimals
		ProjectAmount					is an InternationalAmount
		ReportAmount1      				is an InternationalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyOne.NumberOfDecimals
		ReportAmount2      				is an InternationalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyTwo.NumberOfDecimals
		ReportAmount3					is an InternationalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyThree.NumberOfDecimals
		ReportAmount4					is an InternationalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFour.NumberOfDecimals
		ReportAmount5					is an InternationalAmount
			precision is FinanceEnterpriseGroup.ReportCurrencyFive.NumberOfDecimals
        UnitsAmount
        AmountsExist					is Boolean
        BalanceUpdated					is Boolean

  	Field Groups
		AmountFields
			TransactionAmount
			FunctionalAmount
			AlternateAmount
			AlternateAmount2
			AlternateAmount3

			ReportAmount1
			ReportAmount2
			ReportAmount3
			ReportAmount4
			ReportAmount5
			UnitsAmount
	
	Local Fields
		LocalCurrencyCode				is a Currency
		BypassStructureRelationEdit
		LocalBaseAccountingUnit			is like AccountingUnit
		LocalBaseDimension1				is like FinanceDimension1
		LocalGLZoneBalance				is a GLZoneBalance
		LocalBaseZoneAccount			is like GeneralLedgerChartAccount
		LocalZoneAccount				is like GeneralLedgerChartAccount

		LocalTransactionAmount			is an InternationalAmount
		LocalFunctionalAmount   		is an InternationalAmount
		LocalAlternateAmount    		is an InternationalAmount
		LocalAlternateAmount2			is an InternationalAmount
		LocalAlternateAmount3			is an InternationalAmount

		LocalReportAmount1				is an InternationalAmount
		LocalReportAmount2				is an InternationalAmount
		LocalReportAmount3				is an InternationalAmount
		LocalReportAmount4				is an InternationalAmount
		LocalReportAmount5				is an InternationalAmount
		LocalUnitsAmount				is a UnitsAmount

    Derived Fields
    	DerivedAmountsExist 			is a ConditionalField
    		type is Boolean
    		restricted
			if (TransactionAmount entered
			or  FunctionalAmount  entered
			or  AlternateAmount   entered
			or  AlternateAmount2  entered
			or  AlternateAmount3  entered

			or  ReportAmount1     entered
			or  ReportAmount2     entered
			or  ReportAmount3     entered
			or  ReportAmount4     entered
			or  ReportAmount5     entered)
				true
			else
				false    		

	Relations
		GLCurrencyJournalControlRel
			one-to-one relation to GLCurrencyJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= AccountingEntity
				related.GeneralLedgerClosePeriod	= GeneralLedgerClosePeriod
				related.GeneralLedgerJournalControl	= GeneralLedgerJournalControl
				related.FromCurrency				= LocalCurrencyCode
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup   = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity        = AccountingEntity
				
	Conditions
		SecurityGroupAllowsAccess
			when (actor.context.AccountingEntitySecurityGroup = blank
			or   (AccountingEntitySecurityGroupMemberRel exists))

    Sets
    	ForZoneProcessing
    		Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				GeneralLedgerClosePeriod
				GeneralLedgerJournalControl
				AmountsExist
				GeneralLedgerZoneTotal.Currency
				GeneralLedgerZoneTotal.ZoneAccountingUnit
				GeneralLedgerZoneTotal.ZoneFinanceDimension
		ByBalanceUpdated
    		Sort Order
				FinanceEnterpriseGroup
				BalanceUpdated
				AccountingEntity
				GeneralLedgerClosePeriod
				GeneralLedgerJournalControl
				AmountsExist
				GeneralLedgerZoneTotal.Currency
				GeneralLedgerZoneTotal.ZoneAccountingUnit
				GeneralLedgerZoneTotal.ZoneFinanceDimension

	Field Rules

	Rule Blocks
		UpdateGLZoneBalance
			BalanceUpdated		= true
			if (TransactionAmount	< 0
			or  FunctionalAmount	< 0
			or  AlternateAmount		< 0
			or  AlternateAmount2	< 0
			or  AlternateAmount3	< 0

			or  ReportAmount1		< 0
			or  ReportAmount2		< 0
			or  ReportAmount3		< 0
			or  ReportAmount4		< 0
			or  ReportAmount5		< 0)
				LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
				LocalZoneAccount		= GeneralLedgerJournalControl.InterZoneReceivablesAccount
			else
				LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
				LocalZoneAccount		= GeneralLedgerJournalControl.InterZonePayablesAccount

			LocalGLZoneBalance.Ledger						= GeneralLedgerJournalControl.Ledger
			LocalGLZoneBalance.System						= GeneralLedgerJournalControl.System
			LocalGLZoneBalance.Currency						= GeneralLedgerZoneTotal.Currency
			LocalGLZoneBalance.EntityYearPeriod				= GeneralLedgerJournalControl.GeneralLedgerCalendarPeriod
			LocalGLZoneBalance.BaseZoneAccountingUnit		= GeneralLedgerJournalControl.BaseZoneAccountingUnit
			if (FinanceEnterpriseGroup.AccountingUnitRequired
			and !LocalGLZoneBalance.BaseZoneAccountingUnit entered)
				LocalGLZoneBalance.BaseZoneAccountingUnit		= GeneralLedgerZoneTotal.ZoneAccountingUnit

			LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerJournalControl.BaseZoneDimension1
			if (FinanceEnterpriseGroup.FinanceDimension1Required
			and !GeneralLedgerJournalControl.BaseZoneDimension1 entered)
				LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerZoneTotal.ZoneFinanceDimension
			LocalGLZoneBalance.ZoneAccountingUnit			= GeneralLedgerZoneTotal.ZoneAccountingUnit
			LocalGLZoneBalance.ZoneFinanceDimension			= GeneralLedgerZoneTotal.ZoneFinanceDimension
			LocalGLZoneBalance.BaseZoneAccount				= LocalBaseZoneAccount
			LocalGLZoneBalance.ZoneAccount					= LocalZoneAccount
			invoke Update LocalGLZoneBalance
				invoked.BaseTransactionAmount	+= TransactionAmount
				invoked.BaseFunctionalAmount	+= FunctionalAmount
				invoked.BaseAlternateAmount		+= AlternateAmount
				invoked.BaseAlternateAmount2	+= AlternateAmount2
				invoked.BaseAlternateAmount3	+= AlternateAmount3

				invoked.BaseReportAmount1		+= ReportAmount1
				invoked.BaseReportAmount2		+= ReportAmount2
				invoked.BaseReportAmount3		+= ReportAmount3
				invoked.BaseReportAmount4		+= ReportAmount4
				invoked.BaseReportAmount5		+= ReportAmount5
				invoked.BaseUnitsAmount			+= UnitsAmount
				invoked.ZoneTransactionAmount	-= TransactionAmount
				invoked.ZoneFunctionalAmount	-= FunctionalAmount
				invoked.ZoneAlternateAmount		-= AlternateAmount
				invoked.ZoneAlternateAmount2	-= AlternateAmount2
				invoked.ZoneAlternateAmount3	-= AlternateAmount3

				invoked.ZoneReportAmount1		-= ReportAmount1
				invoked.ZoneReportAmount2		-= ReportAmount2
				invoked.ZoneReportAmount3		-= ReportAmount3
				invoked.ZoneReportAmount4		-= ReportAmount4
				invoked.ZoneReportAmount5		-= ReportAmount5
				invoked.ZoneUnitsAmount			-= UnitsAmount
				
		UpdateRebuildGLZoneBalance
			initialize LocalTransactionAmount
     		initialize LocalFunctionalAmount
  			initialize LocalAlternateAmount
			initialize LocalAlternateAmount2
			initialize LocalAlternateAmount3

			initialize LocalReportAmount1
			initialize LocalReportAmount2
			initialize LocalReportAmount3
			initialize LocalReportAmount4
			initialize LocalReportAmount5
			initialize LocalUnitsAmount
			BalanceUpdated		= true
			if (TransactionAmount	< 0
			or  FunctionalAmount	< 0
			or  AlternateAmount		< 0
			or  AlternateAmount2	< 0
			or  AlternateAmount3	< 0

			or  ReportAmount1		< 0
			or  ReportAmount2		< 0
			or  ReportAmount3		< 0
			or  ReportAmount4		< 0
			or  ReportAmount5		< 0)
				LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
				LocalZoneAccount		= GeneralLedgerJournalControl.InterZoneReceivablesAccount
			else
				LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
				LocalZoneAccount		= GeneralLedgerJournalControl.InterZonePayablesAccount
			LocalGLZoneBalance.Ledger						= GeneralLedgerJournalControl.Ledger
			LocalGLZoneBalance.System						= GeneralLedgerJournalControl.System
			LocalGLZoneBalance.Currency						= GeneralLedgerZoneTotal.Currency
			LocalGLZoneBalance.EntityYearPeriod				= GeneralLedgerJournalControl.GeneralLedgerCalendarPeriod
			LocalGLZoneBalance.BaseZoneAccountingUnit		= GeneralLedgerJournalControl.BaseZoneAccountingUnit
			if (FinanceEnterpriseGroup.AccountingUnitRequired
			and !GeneralLedgerJournalControl.BaseZoneAccountingUnit entered)
				LocalGLZoneBalance.BaseZoneAccountingUnit		= GeneralLedgerZoneTotal.ZoneAccountingUnit
				
			LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerJournalControl.BaseZoneDimension1
			if (FinanceEnterpriseGroup.FinanceDimension1Required
			and !GeneralLedgerJournalControl.BaseZoneDimension1 entered)
				LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerZoneTotal.ZoneFinanceDimension

			LocalGLZoneBalance.ZoneAccountingUnit			= GeneralLedgerZoneTotal.ZoneAccountingUnit
			LocalGLZoneBalance.ZoneFinanceDimension			= GeneralLedgerZoneTotal.ZoneFinanceDimension
			LocalGLZoneBalance.BaseZoneAccount				= LocalBaseZoneAccount
			LocalGLZoneBalance.ZoneAccount					= LocalZoneAccount
			
			if ((AccountingEntity.AccountingUnitZoneBalancing
			and  LocalGLZoneBalance.BaseZoneAccountingUnit = GeneralLedgerJournalControl.DefaultZoneAccountingUnitRel.ZoneAccountingUnit)
			or 	(FinanceEnterpriseGroup.Dimension1ZoneBalancing
			and  LocalGLZoneBalance.BaseZoneFinanceDimension = GeneralLedgerJournalControl.DefaultZoneFinanceDimension1Rel.ZoneDimension))
				LocalTransactionAmount	= TransactionAmount
				LocalFunctionalAmount	= FunctionalAmount
				LocalAlternateAmount	= AlternateAmount
				LocalAlternateAmount2	= AlternateAmount2
				LocalAlternateAmount3	= AlternateAmount3
				LocalReportAmount1		= ReportAmount1
				LocalReportAmount2		= ReportAmount2
				LocalReportAmount3		= ReportAmount3
				LocalReportAmount4		= ReportAmount4
				LocalReportAmount5		= ReportAmount5
				LocalUnitsAmount		= UnitsAmount
			else
				LocalTransactionAmount	= (TransactionAmount * -1)
				LocalFunctionalAmount	= (FunctionalAmount * -1)
				LocalAlternateAmount	= (AlternateAmount * -1)
				LocalAlternateAmount2	= (AlternateAmount2 * -1)
				LocalAlternateAmount3	= (AlternateAmount3 * -1)
				LocalReportAmount1		= (ReportAmount1 * -1)
				LocalReportAmount2		= (ReportAmount2 * -1)
				LocalReportAmount3		= (ReportAmount3 * -1)
				LocalReportAmount4		= (ReportAmount4 * -1)
				LocalReportAmount5		= (ReportAmount5 * -1)
				LocalUnitsAmount		= (UnitsAmount * -1)
	
			invoke Update LocalGLZoneBalance
				invoked.BaseTransactionAmount	= LocalTransactionAmount
				invoked.BaseFunctionalAmount	= LocalFunctionalAmount
				invoked.BaseAlternateAmount		= LocalAlternateAmount
				invoked.BaseAlternateAmount2	= LocalAlternateAmount2
				invoked.BaseAlternateAmount3	= LocalAlternateAmount3

				invoked.BaseReportAmount1		= LocalReportAmount1
				invoked.BaseReportAmount2		= LocalReportAmount2
				invoked.BaseReportAmount3		= LocalReportAmount3
				invoked.BaseReportAmount4		= LocalReportAmount4
				invoked.BaseReportAmount5		= LocalReportAmount5
				invoked.BaseUnitsAmount			= LocalUnitsAmount
				invoked.ZoneTransactionAmount	= (LocalTransactionAmount * -1)
				invoked.ZoneFunctionalAmount	= (LocalFunctionalAmount * -1)
				invoked.ZoneAlternateAmount		= (LocalAlternateAmount * -1)
				invoked.ZoneAlternateAmount2	= (LocalAlternateAmount2 * -1)
				invoked.ZoneAlternateAmount3	= (LocalAlternateAmount3 * -1)

				invoked.ZoneReportAmount1		= (LocalReportAmount1 * -1)
				invoked.ZoneReportAmount2		= (LocalReportAmount2 * -1)
				invoked.ZoneReportAmount3		= (LocalReportAmount3 * -1)
				invoked.ZoneReportAmount4		= (LocalReportAmount4 * -1)
				invoked.ZoneReportAmount5		= (LocalReportAmount5 * -1)
				invoked.ZoneUnitsAmount			= (LocalUnitsAmount * -1)
				

	Actions
		Create is a Create Action
			restricted
			bypass field rules
			Action Rules
				AmountsExist	= DerivedAmountsExist

		Update is an Update Action
			restricted
			bypass field rules
			Action Rules
				AmountsExist	= DerivedAmountsExist

		Delete is a Delete Action
			restricted
			Entrance Rules
				if (TransactionAmount	< 0
				or  FunctionalAmount	< 0
				or  AlternateAmount		< 0
				or  AlternateAmount2	< 0
				or  AlternateAmount3	< 0

				or  ReportAmount1		< 0
				or  ReportAmount2		< 0
				or  ReportAmount3		< 0
				or  ReportAmount4		< 0
				or  ReportAmount5		< 0)
					LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
					LocalZoneAccount		= GeneralLedgerJournalControl.InterZoneReceivablesAccount
				else
					LocalBaseZoneAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
					LocalZoneAccount		= GeneralLedgerJournalControl.InterZonePayablesAccount
	
				LocalGLZoneBalance.Ledger						= GeneralLedgerJournalControl.Ledger
				LocalGLZoneBalance.System						= GeneralLedgerJournalControl.System
				LocalGLZoneBalance.Currency						= GeneralLedgerZoneTotal.Currency
				LocalGLZoneBalance.EntityYearPeriod				= GeneralLedgerJournalControl.GeneralLedgerCalendarPeriod
				LocalGLZoneBalance.BaseZoneAccountingUnit		= GeneralLedgerJournalControl.BaseZoneAccountingUnit
				LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerJournalControl.BaseZoneDimension1
				if (FinanceEnterpriseGroup.FinanceDimension1Required
				and !GeneralLedgerJournalControl.BaseZoneDimension1 entered)
					LocalGLZoneBalance.BaseZoneFinanceDimension		= GeneralLedgerZoneTotal.ZoneFinanceDimension

				LocalGLZoneBalance.ZoneAccountingUnit			= GeneralLedgerZoneTotal.ZoneAccountingUnit
				LocalGLZoneBalance.ZoneFinanceDimension			= GeneralLedgerZoneTotal.ZoneFinanceDimension
				LocalGLZoneBalance.BaseZoneAccount				= LocalBaseZoneAccount
				LocalGLZoneBalance.ZoneAccount					= LocalZoneAccount
				invoke Update LocalGLZoneBalance
					invoked.BaseTransactionAmount	-= TransactionAmount
					invoked.BaseFunctionalAmount	-= FunctionalAmount
					invoked.BaseAlternateAmount		-= AlternateAmount
					invoked.BaseAlternateAmount2	-= AlternateAmount2
					invoked.BaseAlternateAmount3	-= AlternateAmount3

					invoked.BaseReportAmount1		-= ReportAmount1
					invoked.BaseReportAmount2		-= ReportAmount2
					invoked.BaseReportAmount3		-= ReportAmount3
					invoked.BaseReportAmount4		-= ReportAmount4
					invoked.BaseReportAmount5		-= ReportAmount5
					invoked.BaseUnitsAmount			-= UnitsAmount
					invoked.ZoneTransactionAmount	+= TransactionAmount
					invoked.ZoneFunctionalAmount	+= FunctionalAmount
					invoked.ZoneAlternateAmount		+= AlternateAmount
					invoked.ZoneAlternateAmount2	+= AlternateAmount2
					invoked.ZoneAlternateAmount3	+= AlternateAmount3

					invoked.ZoneReportAmount1		+= ReportAmount1
					invoked.ZoneReportAmount2		+= ReportAmount2
					invoked.ZoneReportAmount3		+= ReportAmount3
					invoked.ZoneReportAmount4		+= ReportAmount4
					invoked.ZoneReportAmount5		+= ReportAmount5
					invoked.ZoneUnitsAmount			+= UnitsAmount

			Action Rules

		ProcessZoneBalancingTransactions is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity			is a AccountingEntity
					default label is "AccountingEntity"
				PrmGeneralLedgerClosePeriod	is a GeneralLedgerClosePeriod
					default label is "GlobalLedgerClosePeriod"
				PrmJournalControl			is a GeneralLedgerJournalControl
					default label is "JournalControl"
				PrmJournalizeGroup			is a JournalizeGroup
					default label is "JournalizeGroup"

				PrmEligibleForElimination	is Boolean
					default label is untranslatable:"EligibleForElimination"
				PrmEliminationLedger		is like Ledger
					default label is untranslatable:"EliminationLedger"


			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory

			Local Fields	
				LocalTransactionSequence		is Numeric 12
				LocalActionCurrencyCode			is a Currency

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and	   AccountingEntity				= PrmAccountingEntity
				and    GeneralLedgerClosePeriod		= PrmGeneralLedgerClosePeriod
				and    GeneralLedgerJournalControl	= PrmJournalControl
				and    AmountsExist					= true)

			Set Is
				PrmEnterpriseGroup
				PrmAccountingEntity
				PrmGeneralLedgerClosePeriod
				PrmJournalControl

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				GeneralLedgerClosePeriod
				GeneralLedgerJournalControl
				AmountsExist
				GeneralLedgerZoneTotal.Currency
				GeneralLedgerZoneTotal.ZoneAccountingUnit
				GeneralLedgerZoneTotal.ZoneFinanceDimension

			Accumulators
				TransactionDrAmount
				TransactionCrAmount
				FunctionalDrAmount
				FunctionalCrAmount
				AlternateDrAmount
				AlternateCrAmount
				AlternateDrAmount2
				AlternateCrAmount2
				AlternateDrAmount3
				AlternateCrAmount3
				Rpt1DrAmount
				Rpt1CrAmount
				Rpt2DrAmount
				Rpt2CrAmount
				Rpt3DrAmount
				Rpt3CrAmount
				Rpt4DrAmount
				Rpt4CrAmount
				Rpt5DrAmount
				Rpt5CrAmount

			Action Rules

				Set Rules
					Entrance Rules
						LocalTransactionSequence	= PrmJournalControl.DerivedGLTransaction

				FinanceEnterpriseGroup Set Rules
					Exit Rules
						invoke UpdateJournalTotals PrmJournalControl
							invoked.PrmFunctionalDrAmount			= FunctionalDrAmount
							invoked.PrmFunctionalCrAmount			= FunctionalCrAmount
							invoked.PrmAlternateDrAmount			= AlternateDrAmount
							invoked.PrmAlternateCrAmount			= AlternateCrAmount
							invoked.PrmAlternateDrAmount2			= AlternateDrAmount2
							invoked.PrmAlternateCrAmount2			= AlternateCrAmount2
							invoked.PrmAlternateDrAmount3			= AlternateDrAmount3
							invoked.PrmAlternateCrAmount3			= AlternateCrAmount3
							invoked.PrmRpt1DrAmount					= Rpt1DrAmount
							invoked.PrmRpt1CrAmount					= Rpt1CrAmount
							invoked.PrmRpt2DrAmount					= Rpt2DrAmount
							invoked.PrmRpt2CrAmount					= Rpt2CrAmount
							invoked.PrmRpt3DrAmount					= Rpt3DrAmount
							invoked.PrmRpt3CrAmount					= Rpt3CrAmount
							invoked.PrmRpt4DrAmount					= Rpt4DrAmount
							invoked.PrmRpt4CrAmount					= Rpt4CrAmount
							invoked.PrmRpt5DrAmount					= Rpt5DrAmount
							invoked.PrmRpt5CrAmount					= Rpt5CrAmount

						invoke UpdateJournalControlStatus PrmJournalControl
							invoked.PrmStatus			= 1

				GeneralLedgerZoneTotal.Currency Set Rules
					Entrance Rules
						LocalActionCurrencyCode			= GeneralLedgerZoneTotal.Currency

					Exit Rules
						if (PrmAccountingEntity.BalanceTransactionCurrency)
							LocalCurrencyCode			= LocalActionCurrencyCode
							invoke UpdateJournalCurrencyTotals GLCurrencyJournalControlRel in foreground
								invoked.PrmTransactionDrAmount			= TransactionDrAmount
								invoked.PrmTransactionCrAmount			= TransactionCrAmount
								invoked.PrmFunctionalDrAmount			= FunctionalDrAmount
								invoked.PrmFunctionalCrAmount			= FunctionalCrAmount
								invoked.PrmAlternateDrAmount			= AlternateDrAmount
								invoked.PrmAlternateCrAmount			= AlternateCrAmount
								invoked.PrmAlternateDrAmount2			= AlternateDrAmount2
								invoked.PrmAlternateCrAmount2			= AlternateCrAmount2
								invoked.PrmAlternateDrAmount3			= AlternateDrAmount3
								invoked.PrmAlternateCrAmount3			= AlternateCrAmount3
								invoked.PrmRpt1DrAmount					= Rpt1DrAmount
								invoked.PrmRpt1CrAmount					= Rpt1CrAmount
								invoked.PrmRpt2DrAmount					= Rpt2DrAmount
								invoked.PrmRpt2CrAmount					= Rpt2CrAmount
								invoked.PrmRpt3DrAmount					= Rpt3DrAmount
								invoked.PrmRpt3CrAmount					= Rpt3CrAmount
								invoked.PrmRpt4DrAmount					= Rpt4DrAmount
								invoked.PrmRpt4CrAmount					= Rpt4CrAmount
								invoked.PrmRpt5DrAmount					= Rpt5DrAmount
								invoked.PrmRpt5CrAmount					= Rpt5CrAmount

				Instance Rules
					BypassStructureRelationEdit = true

					if (AmountsExist)
						if (FinanceEnterpriseGroup.UpdateInterZoneBalance)
							include UpdateGLZoneBalance
						LocalTransactionSequence += 1
						invoke CreateReleasedGLSystemTransactionsNoRules Released GeneralLedgerTransaction

							invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
							invoked.AccountingEntity						= AccountingEntity
							invoked.GeneralLedgerClosePeriod				= GeneralLedgerClosePeriod
							invoked.GeneralLedgerJournalControl				= GeneralLedgerJournalControl
							invoked.GeneralLedgerTransaction				= LocalTransactionSequence
							invoked.FinanceCodeBlock.ToAccountingEntity		= AccountingEntity
							invoked.FinanceCodeBlock.Ledger					= GeneralLedgerJournalControl.Ledger
							if (TransactionAmount	< 0
							or  FunctionalAmount	< 0
							or  AlternateAmount		< 0
							or  AlternateAmount2	< 0
							or  AlternateAmount3	< 0

							or  ReportAmount1		< 0
							or  ReportAmount2		< 0
							or  ReportAmount3		< 0
							or  ReportAmount4		< 0
							or  ReportAmount5		< 0)
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
							else
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
			
							LocalBaseAccountingUnit			= GeneralLedgerJournalControl.BaseZoneAccountingUnit
							LocalBaseDimension1				= GeneralLedgerJournalControl.BaseZoneDimension1
							if (AccountingEntity.AccountingUnitZoneBalancing
							and !LocalBaseAccountingUnit entered)
								LocalBaseAccountingUnit		= GeneralLedgerJournalControl.DefaultZoneAccountingUnitRel.ZoneAccountingUnit
							if (FinanceEnterpriseGroup.Dimension1ZoneBalancing
							and !LocalBaseDimension1 entered)
								LocalBaseDimension1			= GeneralLedgerJournalControl.DefaultZoneFinanceDimension1Rel.ZoneDimension
							invoked.FinanceCodeBlock.AccountingUnit		 		= LocalBaseAccountingUnit
							invoked.FinanceCodeBlock.FinanceDimension1 			= LocalBaseDimension1
							invoked.CurrencyCode								= GeneralLedgerZoneTotal.Currency
							invoked.GeneralLedgerEvent							= "ZB"
							invoked.TransactionAmount												= TransactionAmount
							invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		= FunctionalAmount
							invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		= AlternateAmount
							invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		= AlternateAmount2
							invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount		= AlternateAmount3

							invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		= ReportAmount1
							invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		= ReportAmount2
							invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		= ReportAmount3
							invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		= ReportAmount4
							invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		= ReportAmount5
							invoked.Description														= GeneralLedgerJournalControl.FromZoneBalancingMessage
							invoked.DoNotUpdateZoneTotal											= true
							invoked.TransientJournalizeGroup										= PrmJournalizeGroup
							invoked.JournalizeSystemTransactions									= true

						if (PrmEligibleForElimination)
							LocalTransactionSequence += 1
							invoke CreateReleasedGLSystemTransactionsNoRules Released GeneralLedgerTransaction

								invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
								invoked.AccountingEntity						= AccountingEntity
								invoked.GeneralLedgerClosePeriod				= GeneralLedgerClosePeriod
								invoked.GeneralLedgerJournalControl				= GeneralLedgerJournalControl
								invoked.GeneralLedgerTransaction				= LocalTransactionSequence
								invoked.FinanceCodeBlock.ToAccountingEntity		= AccountingEntity
								invoked.FinanceCodeBlock.Ledger					= PrmEliminationLedger
								if (TransactionAmount	< 0
								or  FunctionalAmount	< 0
								or  AlternateAmount		< 0
								or  AlternateAmount2	< 0
								or  AlternateAmount3	< 0

								or  ReportAmount1		< 0
								or  ReportAmount2		< 0
								or  ReportAmount3		< 0
								or  ReportAmount4		< 0
								or  ReportAmount5		< 0)
									invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
								else
									invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
				
								LocalBaseAccountingUnit			= GeneralLedgerJournalControl.BaseZoneAccountingUnit
								LocalBaseDimension1				= GeneralLedgerJournalControl.BaseZoneDimension1
								if (AccountingEntity.AccountingUnitZoneBalancing
								and !LocalBaseAccountingUnit entered)
									LocalBaseAccountingUnit		= GeneralLedgerJournalControl.DefaultZoneAccountingUnitRel.ZoneAccountingUnit
								if (FinanceEnterpriseGroup.Dimension1ZoneBalancing
								and !LocalBaseDimension1 entered)
									LocalBaseDimension1			= GeneralLedgerJournalControl.DefaultZoneFinanceDimension1Rel.ZoneDimension
								invoked.FinanceCodeBlock.AccountingUnit		 		= LocalBaseAccountingUnit
								invoked.FinanceCodeBlock.FinanceDimension1 			= LocalBaseDimension1
								invoked.CurrencyCode								= GeneralLedgerZoneTotal.Currency
								invoked.GeneralLedgerEvent							= "ZB"
								invoked.TransactionAmount												= TransactionAmount * -1
								invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		= FunctionalAmount * -1
								invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		= AlternateAmount * -1
								invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		= AlternateAmount2 * -1
								invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount		= AlternateAmount3 * -1

								invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		= ReportAmount1 * -1
								invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		= ReportAmount2 * -1
								invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		= ReportAmount3 * -1
								invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		= ReportAmount4 * -1
								invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		= ReportAmount5 * -1
								invoked.Description														= GeneralLedgerJournalControl.FromZoneBalancingMessage
								invoked.DoNotUpdateZoneTotal											= true
								invoked.TransientJournalizeGroup										= PrmJournalizeGroup
								invoked.JournalizeSystemTransactions									= true
								invoked.PrimaryLedger								= PrmEliminationLedger


						LocalTransactionSequence += 1
						invoke CreateReleasedGLSystemTransactionsNoRules Released GeneralLedgerTransaction

							invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
							invoked.AccountingEntity						= AccountingEntity
							invoked.GeneralLedgerClosePeriod				= GeneralLedgerClosePeriod
							invoked.GeneralLedgerJournalControl				= GeneralLedgerJournalControl
							invoked.GeneralLedgerTransaction				= LocalTransactionSequence
							invoked.FinanceCodeBlock.ToAccountingEntity		= AccountingEntity
							invoked.FinanceCodeBlock.Ledger					= GeneralLedgerJournalControl.Ledger
							if (TransactionAmount	< 0
							or  FunctionalAmount	< 0
							or  AlternateAmount		< 0
							or  AlternateAmount2	< 0
							or  AlternateAmount3	< 0

							or  ReportAmount1		< 0
							or  ReportAmount2		< 0
							or  ReportAmount3		< 0
							or  ReportAmount4		< 0
							or  ReportAmount5		< 0)
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
							else
								invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
							invoked.FinanceCodeBlock.AccountingUnit			 	= GeneralLedgerZoneTotal.ZoneAccountingUnit
							invoked.FinanceCodeBlock.FinanceDimension1 			= GeneralLedgerZoneTotal.ZoneFinanceDimension
							invoked.CurrencyCode								= GeneralLedgerZoneTotal.Currency
							invoked.GeneralLedgerEvent							= "ZB"
							invoked.TransactionAmount												-= TransactionAmount
							invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		-= FunctionalAmount
							invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		-= AlternateAmount
							invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		-= AlternateAmount2
							invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount		-= AlternateAmount3

							invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		-= ReportAmount1
							invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		-= ReportAmount2
							invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		-= ReportAmount3
							invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		-= ReportAmount4
							invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		-= ReportAmount5
							invoked.Description														= GeneralLedgerJournalControl.ToZoneBalancingMessage
							invoked.DoNotUpdateZoneTotal											= true
							invoked.TransientJournalizeGroup										= PrmJournalizeGroup
							invoked.JournalizeSystemTransactions									= true

						if (PrmEligibleForElimination)
							LocalTransactionSequence += 1
							invoke CreateReleasedGLSystemTransactionsNoRules Released GeneralLedgerTransaction

								invoked.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
								invoked.AccountingEntity						= AccountingEntity
								invoked.GeneralLedgerClosePeriod				= GeneralLedgerClosePeriod
								invoked.GeneralLedgerJournalControl				= GeneralLedgerJournalControl
								invoked.GeneralLedgerTransaction				= LocalTransactionSequence
								invoked.FinanceCodeBlock.ToAccountingEntity		= AccountingEntity
								invoked.FinanceCodeBlock.Ledger					= PrmEliminationLedger
								invoked.PrimaryLedger							= PrmEliminationLedger
								if (TransactionAmount	< 0
								or  FunctionalAmount	< 0
								or  AlternateAmount		< 0
								or  AlternateAmount2	< 0
								or  AlternateAmount3	< 0

								or  ReportAmount1		< 0
								or  ReportAmount2		< 0
								or  ReportAmount3		< 0
								or  ReportAmount4		< 0
								or  ReportAmount5		< 0)
									invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZoneReceivablesAccount
								else
									invoked.FinanceCodeBlock.GeneralLedgerChartAccount	= GeneralLedgerJournalControl.InterZonePayablesAccount
								invoked.FinanceCodeBlock.AccountingUnit			 	= GeneralLedgerZoneTotal.ZoneAccountingUnit
								invoked.FinanceCodeBlock.FinanceDimension1 			= GeneralLedgerZoneTotal.ZoneFinanceDimension
								invoked.CurrencyCode								= GeneralLedgerZoneTotal.Currency
								invoked.GeneralLedgerEvent							= "ZB"
								invoked.TransactionAmount												-= TransactionAmount * -1
								invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount		-= FunctionalAmount * -1
								invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount		-= AlternateAmount * -1
								invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount		-= AlternateAmount2 * -1
								invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount		-= AlternateAmount3 * -1

								invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount		-= ReportAmount1 * -1
								invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount		-= ReportAmount2 * -1
								invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount		-= ReportAmount3 * -1
								invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount		-= ReportAmount4 * -1
								invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount		-= ReportAmount5 * -1
								invoked.Description														= GeneralLedgerJournalControl.ToZoneBalancingMessage
								invoked.DoNotUpdateZoneTotal											= true
								invoked.TransientJournalizeGroup										= PrmJournalizeGroup
								invoked.JournalizeSystemTransactions									= true

						if (TransactionAmount > 0 ) 
							TransactionDrAmount			+= TransactionAmount
							TransactionCrAmount			-= TransactionAmount
						else
							TransactionDrAmount			-= TransactionAmount
							TransactionCrAmount			+= TransactionAmount
						if (FunctionalAmount > 0 ) 
							FunctionalDrAmount			+= FunctionalAmount
							FunctionalCrAmount			-= FunctionalAmount
						else
							FunctionalDrAmount			-= FunctionalAmount
							FunctionalCrAmount			+= FunctionalAmount
						if (AlternateAmount > 0 ) 
							AlternateDrAmount			+= AlternateAmount
							AlternateCrAmount			-= AlternateAmount
						else
							AlternateDrAmount			-= AlternateAmount
							AlternateCrAmount			+= AlternateAmount
						if (AlternateAmount2 > 0 ) 
							AlternateDrAmount2			+= AlternateAmount2
							AlternateCrAmount2			-= AlternateAmount2
						else
							AlternateDrAmount2			-= AlternateAmount2
							AlternateCrAmount2			+= AlternateAmount2
						if (AlternateAmount3 > 0 ) 
							AlternateDrAmount3			+= AlternateAmount3
							AlternateCrAmount3			-= AlternateAmount3
						else
							AlternateDrAmount3			-= AlternateAmount3
							AlternateCrAmount3			+= AlternateAmount3				
						if (ReportAmount1 > 0 ) 
							Rpt1DrAmount				+= ReportAmount1
							Rpt1CrAmount				-= ReportAmount1
						else
							Rpt1DrAmount				-= ReportAmount1
							Rpt1CrAmount				+= ReportAmount1
						if (ReportAmount2 > 0 ) 
							Rpt2DrAmount				+= ReportAmount2
							Rpt2CrAmount				-= ReportAmount2
						else
							Rpt2DrAmount				-= ReportAmount2
							Rpt2CrAmount				+= ReportAmount2
						if (ReportAmount3 > 0 ) 
							Rpt3DrAmount				+= ReportAmount3
							Rpt3CrAmount				-= ReportAmount3
						else
							Rpt3DrAmount				-= ReportAmount3
							Rpt3CrAmount				+= ReportAmount3
						if (ReportAmount4 > 0 ) 
							Rpt4DrAmount				+= ReportAmount4
							Rpt4CrAmount				-= ReportAmount4
						else
							Rpt4DrAmount				-= ReportAmount4
							Rpt4CrAmount				+= ReportAmount4
						if (ReportAmount5 > 0 ) 
							Rpt5DrAmount				+= ReportAmount5
							Rpt5CrAmount				-= ReportAmount5
						else
							Rpt5DrAmount				-= ReportAmount5
							Rpt5CrAmount				+= ReportAmount5

		UpdateZoneBalanceAmount is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity			is a AccountingEntity
					default label is "AccountingEntity"
				PrmGeneralLedgerClosePeriod	is a GeneralLedgerClosePeriod
					default label is "GlobalLedgerClosePeriod"
				PrmRebuild					is Boolean
					default label is "Rebuild"
				PrmChangedTotalsOnly		is Boolean
					default label is "ChangedTotalsOnly"

			Parameter Rules
				PrmEnterpriseGroup
					required
				PrmAccountingEntity
					required

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Instance Selection
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and	   AccountingEntity				= PrmAccountingEntity
				and	   GeneralLedgerJournalControl.Status.Posted
				and   ((PrmGeneralLedgerClosePeriod	entered
				and     GeneralLedgerClosePeriod		= PrmGeneralLedgerClosePeriod)
				or     !PrmGeneralLedgerClosePeriod entered)
				and   ((PrmRebuild
				and    !PrmChangedTotalsOnly)
				or     (PrmRebuild
				and     PrmChangedTotalsOnly
				and     BalanceUpdated				= true)
				or     (!PrmRebuild
				and     BalanceUpdated				= false))
				and    AmountsExist					= true)

			Set Is
				PrmEnterpriseGroup
				PrmAccountingEntity
				PrmGeneralLedgerClosePeriod

			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				GeneralLedgerClosePeriod
				GeneralLedgerJournalControl
				AmountsExist
				GeneralLedgerZoneTotal.Currency
				GeneralLedgerZoneTotal.ZoneAccountingUnit
				GeneralLedgerZoneTotal.ZoneFinanceDimension

			Accumulators

			Action Rules

				Set Rules
					Entrance Rules

				Instance Rules
					if (AmountsExist)
						include UpdateRebuildGLZoneBalance
