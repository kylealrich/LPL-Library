PayablesCompany is a BusinessClass
	owned by ap
	prefix is CPY
	classic name is APCOMPANY

	Ontology
		symbolic key is PayablesCompany
			classic set name is CPYSET1

	Patterns
		implements InlineUserFields
			size is 1000
		implements StaticJava
		disable AuditIndex

	Persistent Fields
		Name
		DefaultReference               is AlphaUpper size 1
			classic name is DEFAULT-REF
			States
				Voucher 		value is "V"
				Invoice			value is "I"
				PurchaseOrder	value is "P"
		VendorGroup
			disable surrogates

		PayGroup











		VoucherPrefix				   is a Prefix
		LastVoucher                    is a Sequence10
			disable Auditing
		AllowConcurrentAPInvoiceInterface	is Boolean
			default label is "AllowConcurrentLoadOfInterfaceInvoices"
		PostingOption
			classic name is POST-OPTION
		AuditInvoiceChanges            is Boolean
			classic name is INVOICE-AUDIT
		AccrualCode                    is a PayablesAccrualCode
			classic name is ACCR-CODE
		CashCode


		EmployeeExpenseAdvanceOption   is AlphaUpper size 1
			classic name is ADV-EXP-OPT
			States
				OpenBalanceMatching value is "O"
				Matching            value is "M"
		PurgeStatus                    is AlphaUpper size 1
			classic name is PURGE-FL
			States
				Active value is "A"
				Delete value is "D"
		DiscountCode                   is a PayablesDiscountCode
		IncomeWithholdingCode
			classic name is INC-ACCR-CODE
		IncomeWithholdingPercent       is a Percent
			classic name is INC-WH-PCT




		TaxRecoveryOnDiscount          is Boolean
			classic name is DISC-TAX-RCV


		TermsCalculation
			classic name is DISC-CALC-DATE


		BestTerms                      is Boolean
		LastArchivedDate               is Date
			classic name is LAST-ARCH-DATE
		CreateTransitDistribution      is Boolean
			classic name is CREATE-TR-DIST
		DistributionCode               is a PayablesDistributionCode
			classic name is DIST-CODE





		FloatDays
		TaxCode


		TaxToleranceAmount             is an InternationalAmount
			classic name is TAX-TOL-AMT
		TaxTolerancePercent	   		   is Percent size 6.3			
			default label is "TaxTolerancePercent"
		AllowToleranceOverride		   is Boolean			
			default label is "AllowOverridingTaxToleranceOnPayables"
		HoldCode                       is a PayablesHoldCode
		ProcurementCardInvoice         is an Invoice
			classic name is PCARD-INVOICE
		RetainageAccrualCode           is a PayablesAccrualCode
			classic name is RET-ACCR-CODE
		VertexInvoiceTax               is Boolean
			classic name is VERTEX-INV-TAX
		AuditChanges                   is Boolean
			classic name is SETUP-AUD-FLAG
		InvoiceDateRange
			classic name for InvoiceDateRange.FromDate is INV-FROM-DATE
			classic name for InvoiceDateRange.ToDate is INV-TO-DATE
		SecondaryWithholding           is Boolean
			classic name is SEC-WITHHOLD
		SecondaryWithholdingCode1      is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE1
		SecondaryWithholdingCode2      is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE2
		SecondaryWithholdingCode3      is a PayablesSecondaryWithholdingCode
			classic name is SEC-WTH-CODE3
		TaxRoundingAccount             is a FinanceCodeBlock
			classic name for TaxRoundingAccount.AccountingUnit is TAX-ACCT-UNIT
			classic name for TaxRoundingAccount.GeneralLedgerChartAccount is TAX-ACCOUNT
		InvoiceItemDetailAccount	  is a FinanceCodeBlock
		InvoiceRoutingCategory
		PayablesDiscountCodeDetail
		IncomeWithholdingCodeDetail

		ICBillingDefaultProcessLevel		is a PayablesProcessLevel
		ICBillingDefaultVendor				is a Vendor
		ICBillingDefaultVendorLocation		is a VendorLocation
		ICBillingDefaultCashCode			is a CashCode
		ICBillingDefaultCompanyCashCode		is a CompanyCashCode
			context of ICBillingDefaultCashCode
		ICBillingDefaultBankTransactionCode	is a BankTransactionCode
		ICBillingDefaultBankFeeCode			is a BankTransactionCode
		ICBillingReverseBankFeeCode			is a BankTransactionCode		

		CustomerCreateAndInterfaceToAR 		is Boolean
		ARInterfaceInvoicePrefix			is AlphaUpper size 2
		ARInterfaceHoldCode					is a PayablesHoldCode
		LastARInterfaceInvoice				is Numeric size 8
			disable Auditing
		LastAPClearingMemo					is Numeric size 8
			disable Auditing
		ProrateGainLossToDistributions		is Boolean	
			default label is "ProrateGainLossAmountToDistributions"
		VoucherReference					is Boolean
			default label is "AssignVoucherReference"
		VoucherReferenceLastRunDate 		is Date
			protected
			default label is "LastRunDate"
		VoucherReferenceFormat				is AlphaUpper 50
			Text Variables
				YearYYYY
				YearYY
				MonthMM
				999999999999
				000000000009
				999999
				000009
		VoucherReferenceReportingBasis		is a ReportingBasis
		LeaseAdoptionDate					is Date 
		DetailReceivablesInterface			is Boolean
		ClaimsAndLiabilitiesReporting	    is Boolean
			default label is "ClaimsAndLiabilitiesReport"
		ThresholdAmount						is an InternationalAmount
			default label is "ReportThresholdAmount"
		ForeignTradePaymentReport			is Boolean
			default label is "ForeignTradeAndPaymentReport"
		ForeignTradePaymentAmount			is an InternationalAmount
			default label is "ReportThresholdAmount"
		MarkedAsPaidOffsetAccount			is a FinanceCodeBlockFull	
		AllowBankInstructionsOverride		is Boolean		
			default label is "AllowBankInstructionsOverrideOnInvoice"
		UseIDM								is Boolean
			default label is "UseIDMTemplate"
		PayablesChargebackTemplate			is an IDMTemplate
			default label is "Chargeback/CreditMemo"
		PrintPayablesChargeback					is Boolean
		EmailPayablesChargeback					is Boolean
		PayablesChargebackFromAndReplyToEmail	is an EmailAddress 
			holds pii
		PayablesChargebackEmailTemplate			is an IDMTemplate
		PayablesChargebackIDMEmailSubject 		is Alpha size 255
			Text Variables
				CompanyName
				VendorName
				AsOfDate
		TaxAccrualEntityOverride	is Boolean		
		DelayTaxProcessing			is Boolean  
		PayablesDebitMemoTemplate				is an IDMTemplate
			default label is "DebitMemo"
		PrintPayablesDebitMemo					is Boolean
		EmailPayablesDebitMemo					is Boolean
		PayablesDebitMemoFromAndReplyToEmail	is an EmailAddress 
			holds pii
		PayablesDebitMemoEmailTemplate			is an IDMTemplate
		PayablesDebitMemoIDMEmailSubject 		is Alpha size 255
			Text Variables
				CompanyName
				VendorName
				AsOfDate
		GlobalWithholding						is Boolean
		LetterOfRetentionTemplate			is an IDMTemplate
			default label is "LetterOfRetention"
		AllowShortPay							is Boolean					
		PayablesTaxTolerance					is Boolean					
		PayablesTaxToleranceOptions				is AlphaUpper size 1		
		TaxToleranceOverAmount					is like InternationalAmount	
		TaxToleranceUnderAmount					is like InternationalAmount	
		TaxToleranceOverPercent					is Percent size 3			
		TaxToleranceUnderPercent				is Percent size 3			
		TaxToleranceOverRate					is Decimal size 6.3			
			default label is "TaxToleranceOverRateVariance"
		TaxToleranceUnderRate					is Decimal size 6.3			
			default label is "TaxToleranceUnderRateVariance"
		PutOutOfToleranceOnHold					is Boolean					
		OutputXML								is Alpha size 1
			States
				NoXML						value is blank
				Germany					    value is "G"
				
		IntercompanyBillingInvoiceBillToEmailAddress	is an EmailAddressMulti
			default label is "BillToEmailAddress"
		RetainInvoiceToAR						is Boolean
		EnforceProcessorCannotBeApprover		is Boolean			
		EnforceExistenceOfApprovalCategory		is Boolean 			
		RequireRemitTo							is Boolean			
			default label is "RequireRemitToLocation"
		RequireReasonForInvoiceAssignment		is Boolean
			default label is "RequireReasonCodeAndCommentWhenAssigningInvoice"
		InterfaceUnreleasedInvoices						is Boolean		
		ApprovalCode	
		MatchPrepayAccrualCode           		is a PayablesAccrualCode		
			classic name is MAT-ACCR-CODE		
	Context Fields
		SupplierGroup
		FinanceResource

	Transient Fields
		



















			
		SampleVoucherReferenceNumber		   is AlphaUpper 50
			derive value from DerivedStructuredVoucherReferenceNumber

		BypassThirdPartyTaxCallWhenICNExclude is Boolean		
			derive value from DerivedBypassThirdPartyTaxCallWhenICNExcludeConfig

		ForceLandedTaxToBeLinked is Boolean		
			derive value from DerivedForceLandedTaxToBeLinkedConfig

		LeaseFiscalPeriod	is Numeric 2

		LeaseFiscalYear		is Numeric 4

	Field Rules
		AccrualCode
			if (!IncompleteAccrualCodeSetup)		
				constraint (PayablesAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<PayablesAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity>OnAccrualCodeDetail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"

		AllowToleranceOverride				



		DefaultReference
			initial value is DefaultReference.Voucher
			default to DefaultReference.Voucher





























































				

		VendorGroup
			initial value is Company.BusinessGroup
			required
			constraint (VendorGroup = Company.BusinessGroup)
				"VendorGroup<VendorGroup>MustBeSameAsVendorBusinessGroup<Company.BusinessGroup>OnGlobalLedgerCompany"
			
		PayGroup
			required



			constraint (VendorGroup = PayGroup.VendorGroup)
				"CompanyVendorGroupMust_=PayGroupVendorGroup"              

			if  (Company.AccountingEntity != PayGroup.PostCompany.AccountingEntity)
				constraint (GLInterEntityRelationRel exists)
					"RelationshipBetweenCompanyAccountingEntityAndPayGroupPostCompanyAccountingEntityDoesNotExist"  

		SecondaryWithholdingCode1
			if (!SecondaryWithholding)
				cannot be entered
					"CannotEnterASecondaryWithholdingCodeIfNotCheckingSecondaryWithholding"        





			if (SecondaryWithholding)
				required
					"SecondaryWithholdingCodeIsRequiredIfCheckingSecondaryWithholding"                      

			if (!DerivedSecondaryWithholdingDetailSetupIncomplete)		
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode1
				constraint (PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity>OnSecondaryWithholdingCode1Detail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"











		SecondaryWithholdingCode2
			if (!SecondaryWithholding)
				cannot be entered
					"CannotEnterASecondaryWithholdingCodeIfNotCheckingSecondaryWithholding"        





			constraint (SecondaryWithholdingCode1 != SecondaryWithholdingCode2)
				"SecondaryWithholdingCodeCannotBeDuplicated"               

			if (!DerivedSecondaryWithholdingDetailSetupIncomplete)		
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode2
				constraint (PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity>OnSecondaryWithholdingCode2Detail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"






		SecondaryWithholdingCode3
			if (!SecondaryWithholding)
				cannot be entered
					"CannotEnterASecondaryWithholdingCodeIfNotCheckingSecondaryWithholding"        





			constraint (SecondaryWithholdingCode1 != SecondaryWithholdingCode3)
				"SecondaryWithholdingCodeCannotBeDuplicated"               

			constraint (SecondaryWithholdingCode2 != SecondaryWithholdingCode3)
				"SecondaryWithholdingCodeCannotBeDuplicated"               

			if (!DerivedSecondaryWithholdingDetailSetupIncomplete)		
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode3
				constraint (PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<PayablesSecondaryWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity>OnSecondaryWithholdingCode3Detail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"






		DiscountCode
			if (!IncompleteDiscountCodeSetup)		
				constraint (PayablesDiscountCodeDetailRel.DiscountAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<PayablesDiscountCodeDetailRel.DiscountAccount.ToAccountingEntity>OnDiscountCodeDetail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"

		RetainageAccrualCode


			if (!IncompleteRetainageAccrualCodeSetup)		
				constraint (RetainageAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<RetainageAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity>OnRetainageAccrualCodeDetail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"

		TermsCalculation
			initial value is TermsCalculation.UseInvoiceDate
			default to TermsCalculation.UseInvoiceDate

			if (FloatDays not entered)
				constraint (TermsCalculation entered)
					"Terms_\CalculationRequiredWhenUsing_\Float_\Days"        

		DistributionCode
			if (CreateTransitDistribution)
				constraint (DistributionCode entered)
					"DistributionCodeRequiredIf_\Create_\Transit_\Distrib_=_\Y"       

			constraint (DistributionCode.PayablesDistributionCodeDetail set exists)
				"Distribution_\CodeNotDefined"                             

			if (CreateTransitDistribution
			and DistributionCode entered)
				constraint (DistributionCode.AccountEdit = "C")
					"MustUseAFullyEditedDistCode,EditAccts_=_\C"              






















		InvoiceDateRange.FromDate
			constraint (HoldCode.HoldOnInvoice = "P")
				"MustEnterPermanentHoldCode"                               

			constraint (InvoiceDateRange.FromDate <= InvoiceDateRange.ToDate)
				"FromDateCannotBeGreaterThanTheToDate"                     

		TaxCode
			if  (TaxCode entered
			and  TaxEntityRel.UseTaxCodeAccounts
			and  !CompanyUsesOneSourceTax)
				constraint (EntityTaxCodeRel exists)
					"EntityTaxCodeDoesNotExist"
				constraint (EntityTaxCodeRel.AccruedOrInvoiced.Invoiced)
					"CanOnlyAssignInvoicedTaxCodeAsItIsUsedForBalancingInvoicedTaxAmounts"

			if (TaxToleranceAmount entered
			or  TaxTolerancePercent entered)
				required
					"Tax_\Tolerance_\AmountOrPercentEntered;_\Tax_\CodeRequired"       

		AllowConcurrentAPInvoiceInterface
			initial value is true

		TaxRoundingAccount
			if (TaxToleranceAmount entered
			or  TaxTolerancePercent entered)
				required
					"Tax_\Tolerance_\AmountOrPercentEntered;_\Tax_\Rounding_\AccountRequired"  

		IncomeWithholdingPercent
			if (IncomeWithholdingCode not entered)
				initialize IncomeWithholdingPercent

		IncomeWithholdingCode
			if (!IncompleteIncomeWithholdingCodeSetup)		
				constraint (IncomeWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity = Company.AccountingEntity)
					"AccountingEntity<IncomeWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity>OnIncomeWithholdingCodeDetail;MustEqualAccountingEntity<Company.AccountingEntity>OnGlobalLedgerCompany"

		PurgeStatus
			initial value is PurgeStatus.Active
			default to PurgeStatus.Active

		EmployeeExpenseAdvanceOption
			initial value is EmployeeExpenseAdvanceOption.OpenBalanceMatching
			default to EmployeeExpenseAdvanceOption.OpenBalanceMatching

		PostingOption
			initial value is PostingOption.Summary
			default to PostingOption.Summary




		ICBillingDefaultProcessLevel
			constraint (Company.IntercompanyBilling)
				"GlobalLedgerCompanyNotSetForIntercompanyBilling"

			if (AnyIntercompanyBillingFieldEntered)
				required

		ICBillingDefaultVendor
			if (AnyIntercompanyBillingFieldEntered)
				required

			constraint (!PayablesCompanyICBVendorRel exists)
				"VendorAlreadyBeingUsedAsAnIntercompanyBillingVendorForCompany<first PayablesCompanyICBVendorRel.Company>"

			constraint (ICBillingDefaultVendor.PayablesOnHoldRel.HoldCode.HoldOnVendor.PermanentHold)
				"VendorMustBeOnPermanentHold"

			constraint (!ICBillingDefaultVendor.Customer exists)  
				"VendorCannotBeRelatedToACustomer"

		ICBillingDefaultCashCode
			if (AnyIntercompanyBillingFieldEntered)
				default to ICBillingDefaultProcessLevel.CashCode
				required

		ICBillingDefaultBankTransactionCode
			if (AnyIntercompanyBillingFieldEntered)
				default to PayGroup.BankTransactionCode
				required

			constraint (!ICBillingDefaultBankTransactionCode.ManualPaymentNumberReservation)
				"BankTransactionCodeCannotHaveManualPaymentReservationChecked"

			constraint (ICBillingDefaultBankTransactionCode.BankTransactionType.CashPayment)
				"BankTransactionCodeMustBeACashPaymentType"

		ICBillingDefaultBankFeeCode
			if (AnyIntercompanyBillingFieldEntered)
				required

			constraint (ICBillingDefaultBankFeeCode.BankTransactionType.BankService)
				"BankFeeCodeMustBeBankServiceType"
			constraint (ICBillingDefaultBankFeeCode.TransactionType.DebitTransaction)
				"BankFeeCodeMustBeDebitTransactionType"

		ICBillingReverseBankFeeCode		
			if (AnyIntercompanyBillingFieldEntered)
				required
					"IntercompanyBillingReverseBankFeeCodeRequiredWhenEnteringOtherIntercompanyBillingFields"
			constraint (ICBillingReverseBankFeeCode.BankTransactionType.BankService)
				"ReverseBankFeeCodeMustBeBankServiceType"
			constraint (ICBillingReverseBankFeeCode.TransactionType.CreditTransaction)
				"ReverseBankFeeCodeMustBeCreditTransactionType"

		ARInterfaceInvoicePrefix
			if (CustomerCreateAndInterfaceToAR)
				required
					"InvoicePrefixRequiredAsInterfaceToReceivablesIsSetToTrue"

				if (ARInterfaceInvoicePrefix changed
			   	and ARInterfaceInvoicePrefix not = old ARInterfaceInvoicePrefix)
				   	initialize ValidateReceivablePrefix
				   	ValidateReceivablePrefix.EditReceivableCompany 	  	= Company
			     	ValidateReceivablePrefix.EditSystem 				= "AP"
				   	ValidateReceivablePrefix.EditReceivablePrefix 	  	= ARInterfaceInvoicePrefix
			    	ValidateReceivablePrefix.EditReceivableInvoiceType	= "C"
				   	constraint (ValidateReceivablePrefix.ErrorNumber not entered)
			         	"<ValidateReceivablePrefix.ErrorMessage>"
			else
				cannot be entered
					"CannotEnterInvoicePrefixAsInterfaceToReceivablesIsNotSetToTrue"


		ARInterfaceHoldCode
			if (CustomerCreateAndInterfaceToAR)
				required
					"InterfaceHoldCodeRequiredAsInterfaceToReceivablesIsSetToTrue"

				constraint (ARInterfaceHoldCode.HoldOnInvoice ="P")
					"HoldOnInvoiceShouldBePermanentForHoldCode<ARInterfaceHoldCode>"

				constraint (ARInterfaceHoldCode.HoldOnVendor = "P")
					"HoldOnVendorShouldBePermanentForHoldCode<ARInterfaceHoldCode>"

			else
				cannot be entered
					"CannotEnterHoldCodeAsInterfaceToReceivablesIsNotSetToTrue"

		CustomerCreateAndInterfaceToAR
			if (CustomerCreateAndInterfaceToAR changed
			and !CustomerCreateAndInterfaceToAR)
				constraint (APToARInterfaceSelectedRecordsRel not exist)
					"CannotTurnOffNettingAsInterfaceSelectedRecordsExist"

		DetailReceivablesInterface
			if (DetailReceivablesInterface)
				constraint (CustomerCreateAndInterfaceToAR)
					"CannotCheckDetailReceivablesInterfaceAsInterfaceToReceivablesIsNotSetToTrue"
		
		RetainInvoiceToAR
			if (RetainInvoiceToAR)
				constraint (DetailReceivablesInterface)
					"CannotCheck_\Retain_\InvoiceTo_\ARAs_\Detail_\Receivables_\InterfaceIsNotSetToTrue" 			

		VoucherReferenceFormat
			if (VoucherReference)
				required

		VoucherReferenceReportingBasis
			if (VoucherReference)
				required

		ClaimsAndLiabilitiesReporting
			if (not ClaimsAndLiabilitiesReporting)
				initialize ThresholdAmount	
				initialize OutputXML
				
			constraint (Company.AccountingEntity.AddressCode entered)
				"AddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

			constraint (Company.AccountingEntity.AddressCode.PostalAddress.Country entered)
				"Country/\JurisdictionInAddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

		    if ((ClaimsAndLiabilitiesReporting changed
		    or  ThresholdAmount changed
		    or  OutputXML       changed)
			and ReceivableCompanyRel exists)
				invoke FastUpdate ReceivableCompanyRel
					invoked.ClaimsAndLiabilitiesReporting = ClaimsAndLiabilitiesReporting
					invoked.ThresholdAmount 			  =	ThresholdAmount
					invoked.OutputXML					  = OutputXML

		ThresholdAmount
			if (ClaimsAndLiabilitiesReporting)
				required
				constraint (ThresholdAmount > 0)
					"ThresholdAmountCannotBeNegative"



		ForeignTradePaymentReport
			constraint (Company.AccountingEntity.AddressCode entered)
				"AddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

			if (UnreportedForeignTradeAndPaymentRel exist)
				cannot be changed
					"UnprocessedRecordsInForeignTradeAndPaymentExist"

		ForeignTradePaymentAmount
			if (ForeignTradePaymentReport)
				required
			else
				initialize

		PayablesChargebackTemplate
			if (UseIDM)
				required
					"PayablesChargeback_\I\D\M_templateIsRequired"

				constraint (PayablesChargebackTemplate.IDMDocumentType.PayablesChargeback)
					"InvalidTemplate"
			else
				initialize

		PrintPayablesChargeback
			if (!UseIDM)
				initialize

		EmailPayablesChargeback
			if (!UseIDM)
				initialize
		
		PayablesChargebackFromAndReplyToEmail
			if (EmailPayablesChargeback)
				default to config.DefaultFromEmailAddress
				if (EmailPayablesChargeback changed)
					confirmation required
						"EnsureThatThereIsAnEmailAddressSpecifiedAtTheVendor"
			else
				initialize

		PayablesChargebackEmailTemplate
			constraint (PayablesChargebackEmailTemplate.IDMDocumentType.PayablesChargebackEmail)
				"InvalidTemplate"
			if (!UseIDM)
				initialize
	
		PayablesChargebackIDMEmailSubject
			if (!UseIDM)
				initialize

		PayablesDebitMemoFromAndReplyToEmail
			if (EmailPayablesDebitMemo)
				default to config.DefaultFromEmailAddress
				if (EmailPayablesDebitMemo changed)
					confirmation required
						"EnsureThatThePrimaryEmailAddressIsSpecifiedAtTheVendorSetup"
			else
				initialize

		PayablesDebitMemoEmailTemplate
			constraint (PayablesDebitMemoEmailTemplate.IDMDocumentType.PayablesDebitMemoEmail)
				"InvalidTemplate"
			
			if (!UseIDM)
				initialize
		
		PayablesDebitMemoIDMEmailSubject	
			if (!UseIDM)
				initialize
				
		PayablesDebitMemoTemplate
			if (UseIDM)
				required
					"DebitMemo_\I\D\M_templateIsRequired"

				constraint (PayablesDebitMemoTemplate.IDMDocumentType.PayablesDebitMemo)
					"InvalidTemplate"
			else
				initialize

		PrintPayablesDebitMemo
			if (!UseIDM)
				initialize

		EmailPayablesDebitMemo
			if (!UseIDM)
				initialize

		GlobalWithholding
			if (GlobalWithholding)
				constraint (VendorGroup.GlobalWithholding)
					"GlobalWithholdingMustBeEnabledOnVendorGroupForItToBeEnabledOnCompany"
					
		LetterOfRetentionTemplate


			constraint (LetterOfRetentionTemplate.IDMDocumentType.LetterOfRetention)
				"InvalidTemplate"
			if (!UseIDM)
				initialize

		BypassThirdPartyTaxCallWhenICNExclude		
			LocalConfigParamName		= DerivedBypassThirdPartyTaxCallWhenICNExclude
			if (LocalConfigParamRel.Value = true)
				if (BypassThirdPartyTaxCallWhenICNExclude changed)
					invoke Update LocalConfigParamRel
						invoked.Value		= false
					BypassThirdPartyTaxCallWhenICNExclude = LocalConfigParamRel.Value
			else
				if (BypassThirdPartyTaxCallWhenICNExclude changed)
					if (LocalConfigParamRel not exists)
						invoke Create LocalConfigParamRel
							invoked.Type		= 8233		
							invoked.Length		= 1
							invoked.Value		= true
					else
						invoke Update LocalConfigParamRel
							invoked.Value		= true

		ForceLandedTaxToBeLinked		
			LocalConfigParamName		= DerivedForceLandedTaxToBeLinked
			if (LocalConfigParamRel.Value = true)
				if (ForceLandedTaxToBeLinked changed)
					invoke Update LocalConfigParamRel
						invoked.Value		= false
					ForceLandedTaxToBeLinked = LocalConfigParamRel.Value
			else
				if (ForceLandedTaxToBeLinked changed)
					if (LocalConfigParamRel not exists)
						invoke Create LocalConfigParamRel
							invoked.Type		= 8233		
							invoked.Length		= 1
							invoked.Value		= true
					else
						invoke Update LocalConfigParamRel
							invoked.Value		= true

		InterfaceUnreleasedInvoices
			if(InterfaceUnreleasedInvoices
			and !AnyIntercompanyBillingFieldEntered)
				cannot be entered
					"InterfaceUnreleasedInvoicesShouldBeEnabledOnlyWhenOtherIntercompanyBillingFieldsAreEntered"
		
		ApprovalCode
			if(ApprovalCode entered
			and !AnyIntercompanyBillingFieldEntered)
				cannot be entered
					"ApprovalCodeShouldBeEnteredOnlyWhenOtherIntercompanyBillingFieldsAreEntered"

		TaxToleranceOverAmount
			constraint (TaxToleranceOverAmount > 0)
				"OverToleranceAmountMustBeAPositiveValue"

		TaxToleranceUnderAmount
			constraint (TaxToleranceUnderAmount > 0)
				"UnderToleranceAmountMustBeAPositiveValue"

		TaxToleranceOverRate
			constraint (TaxToleranceOverRate > 0)
				"OverToleranceRateMustBeAPositiveValue"

		TaxToleranceUnderRate
			constraint (TaxToleranceUnderRate > 0)
				"UnderToleranceRateMustBeAPositiveValue"

	Local Fields

		CalculateTax
		LocalCalculateTaxExecuted		is Alpha 1
		LocalSecondaryWithholdingCode	is like PayablesSecondaryWithholdingCode
		LocalICBillingDefaultVendor		is like Vendor
		ValidateReceivablePrefix
		LocalReceivableCompany			is like Company
		LocalCustomer					is like Customer
		LocalVendor						is like Vendor
		LocalVendorBalanceLocation		is Alpha size 4



		CopyPayablesInvoiceBackgroundGroup  is AlphaUpper up to 60
		LocalYear							is Year
		LocalPeriodStartDate				is Date
		LocalPeriodEndDate					is Date
		LocalSampleVoucherReference			is AlphaUpper 50
			Text Variables
				YearYYYY	  		  value is DerivedCurrentDate year
				YearYY		  		  value is DerivedYear[3:4]
				MonthMM		  		  value is DerivedPaddedMonth
				999999999999  		  value is MessageSequence12
				000000000009  		  value is MessageZeroPaddedSequenceNum12
				999999		  		  value is MessageSequence6
				000009		  		  value is MessageZeroPaddedSequenceNum6
		LocalPayablesInvoiceIDMEmailSubject			is Alpha size 255
			Text Variables
				CompanyName		value is Name
				VendorName		value is "Ace"
				AsOfDate		value is current corporate date
		LocalCompany						is like PayablesCompany
		LocalVendorGroup					is like VendorGroup
		CurrentBackgroundGroup	is AlphaUpper up to 200
		LastBackgroundGroup		is AlphaUpper up to 200
		LocalConfigParamName	is Alpha size up to 200		
		LocalPurgeCutOffDate 	is Date
		LocalFromVendorInv		is a Vendor
		LocalToVendorInv		is a Vendor
		LeaseInputDate			is Date		

	Derived Fields
		DerivedBypassThirdPartyTaxCallWhenICNExclude is a DerivedField		
			type is Alpha size up to 200
			return DerivedBypassThirdPartyTaxCallWhenICNExcludeString
		
		DerivedBypassThirdPartyTaxCallWhenICNExcludeString is a StringField		
			type is Text
			Company"-BypassThirdPartyTaxCallWhenICNExclude"

		DerivedBypassThirdPartyTaxCallWhenICNExcludeConfig is a DerivedField		
			type is Alpha size up to 200
			LocalConfigParamName = DerivedBypassThirdPartyTaxCallWhenICNExclude
			return LocalConfigParamRel.Value

		DerivedForceLandedTaxToBeLinked is a DerivedField		
			type is Alpha size up to 200
			return DerivedForceLandedTaxToBeLinkedString
		
		DerivedForceLandedTaxToBeLinkedString is a StringField		
			type is Text
			Company"-ForceLandedTaxToBeLinked"

		DerivedForceLandedTaxToBeLinkedConfig is a DerivedField		
			type is Alpha size up to 200
			LocalConfigParamName = DerivedForceLandedTaxToBeLinked
			return LocalConfigParamRel.Value

		AffiliateOwnershipRequiredMsg	is a MessageField
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,AffiliateOwnershipMustBeDefinedForEachVendorCompanyDefaultWhereAffiliateFlagIsEnabled"	

		CompanyEntityCountryRequiredMsg	is a MessageField
			"Warning:_ClaimsAndLiabilitiesReportIsEnabled,Country/\JurisdictionInAddressCodeUnderAccountingEntity<Company.AccountingEntity>IsRequired"

		ClaimsAndLiabilitiesRequireMsg is a DerivedField
			type is MessageField
			default label is untranslatable
			if (DisplayCompanyEntityCountryRequiredMsg)
				return CompanyEntityCountryRequiredMsg
			else
				return AffiliateOwnershipRequiredMsg	

		ActorSecurityGroup is a DerivedField
			type is like CompanySecurityGroup
			return actor.context.CompanySecurityGroup

		DerivedCurrencyTable is a DerivedField
			type is like CurrencyTable
			if  (CompanySystemClosingControlRel exists)
				return CompanySystemClosingControlRel.CurrencyTable
			else
				return Company.CurrencyTable















		DerivedSecondaryWithholdingRateSetupIncomplete is a DerivedField
			type is Boolean
			if (SecondaryWithholdingCode1 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode1
				if (PayablesSecondaryWithholdingRateRel not exists)
					return true
			if (SecondaryWithholdingCode2 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode2
				if (PayablesSecondaryWithholdingRateRel not exists)
					return true
			if (SecondaryWithholdingCode3 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode3
				if (PayablesSecondaryWithholdingRateRel not exists)
					return true
			return false

		DerivedSecondaryWithholdingDetailSetupIncomplete is a DerivedField
			type is Boolean
			if (SecondaryWithholdingCode1 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode1
				if (PayablesSecondaryWithholdingCodeDetailRel not exists)
					return true
			if (SecondaryWithholdingCode2 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode2
				if (PayablesSecondaryWithholdingCodeDetailRel not exists)
					return true
			if (SecondaryWithholdingCode3 entered)
				LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode3
				if (PayablesSecondaryWithholdingCodeDetailRel not exists)
					return true
			return false

		DerivedSecondaryWithholdingDetailInactive is a DerivedField
			type is Boolean
			if (!SecondaryWithholdingCodeInactive)
				if (SecondaryWithholdingCode1 entered)
					LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode1
					if (!PayablesSecondaryWithholdingCodeDetailRel.Active)
						return true
				if (SecondaryWithholdingCode2 entered)
					LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode2
					if (!PayablesSecondaryWithholdingCodeDetailRel.Active)
						return true
				if (SecondaryWithholdingCode3 entered)
					LocalSecondaryWithholdingCode 	= SecondaryWithholdingCode3
					if (!PayablesSecondaryWithholdingCodeDetailRel.Active)
						return true
			return false

		SecondaryWithholdingWarningMessage is a DerivedField
			type is MessageField
			if (SecondaryWithholdingCodeInactive)
				return "Secondary Withholding Code Is Not Active"
			if (DerivedSecondaryWithholdingRateSetupIncomplete)
				return "Secondary Withholding Rate Is Not Defined"
			if (DerivedSecondaryWithholdingDetailSetupIncomplete)
				return "Secondary Withholding Detail Is Not Defined"
			if (DerivedSecondaryWithholdingDetailInactive)
				return "Secondary Withholding Detail Is Not Active"





























			




		DerivedCurrentDate is a DerivedField
			type is Date
			restricted
			return current corporate date

		DerivedYear is a DerivedField
			type is AlphaUpper size 4
			restricted
			return current year

		DerivedMonth is a DerivedField
			type is Numeric size 2
			restricted
			return DerivedCurrentDate month

		MessageSequence6 is a MessageField
			restricted
			"123456"

		MessageSequence12 is a MessageField
			restricted
			"123456789012"

 		DerivedPaddedMonth is a DerivedField
			type is AlphaUpper 2
			restricted
			if (DerivedCurrentDate month < 10)
				DerivedPaddedMonth	= "0" + DerivedMonth
			else
				return DerivedCurrentDate month

 		MessageZeroPaddedSequenceNum12 is a MessageField
 			restricted
 			"000000000001"

		MessageZeroPaddedSequenceNum6 is a MessageField
  			restricted
 			"000001"

  		DerivedStructuredVoucherReferenceNumber is a DerivedField
 			type is AlphaUpper size 50
  			restricted
  			LocalSampleVoucherReference				= VoucherReferenceFormat
  			DerivedStructuredVoucherReferenceNumber = LocalSampleVoucherReference text

		DerivedLastARInterfaceInvoice is a DerivedField
			type is AlphaRight 8
			restricted
			return LastARInterfaceInvoice

		ZeroPaddedLastARInterfaceInvoice is a DerivedField
			type is AlphaUpper 8
			restricted
			return com.lawson.apps.procurement.base.StringUtils.leadingZeros(DerivedLastARInterfaceInvoice)

		DerivedPayablesChargebackIDMEmailSubject	is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalPayablesInvoiceIDMEmailSubject		=	PayablesChargebackIDMEmailSubject
			return	LocalPayablesInvoiceIDMEmailSubject text

		DerivedPayablesDebitMemoIDMEmailSubject		is a DerivedField
			type is AlphaUpper size 255
			restricted
			LocalPayablesInvoiceIDMEmailSubject		=	PayablesDebitMemoIDMEmailSubject
			return	LocalPayablesInvoiceIDMEmailSubject text
			
		DerivedVATRegistrationNumber is a DerivedField 
			type is like VATRegistrationNumber
			holds pii
			return TaxEntityRel.VATRegistrationNumber
			
		DerivedTaxID is a DerivedField 
			type is like TaxID
			holds pii
			return TaxEntityRel.TaxID

		CompanyAndName is a MessageField
			default label is "Company"
			"<Name>_(<Company>)"
			
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforPayablesCompany"

		ContextMessageText is a MessageField
			restricted
			"Company<Company>"		

		CompanyDisplay	   is a LabelField
			"<Company>_-_<Company.Name>"

		CreateMessage is a LabelField
			restricted
			"CreatePayablesCompany"
		
		FormLabel is a LabelField
			restricted
			"PayablesCompany:_"

		RepresentativeText is a StringField
			type is Text
			default label is "PayablesCompany"
			Company " - " Name
		
		DerivedPayablesCompanyTitle	is a DerivedField
			type is Alpha size up to 132
			default label is "PayablesCompany"
			return RepresentativeText

		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return FormLabel + DerivedPayablesCompanyTitle
			else
				return CreateMessage
				
		RequesterBaseURL is a DerivedField
			type is Alpha 300
			restricted
			return base url(webapp is Requester)

		DerivedICBVendorCashCode  is a DerivedField		
			type is AlphaUpper size 20
			if (ICBVendorRel.PayVendor.CashCode entered)
				return ICBVendorRel.PayVendor.CashCode
			else
			if  (ICBVendorRel.VendorClass.CashCode entered)
				return ICBVendorRel.VendorClass.CashCode
			else
			if (ICBillingDefaultProcessLevel.CashCode entered)
				return ICBillingDefaultProcessLevel.CashCode
			else
			if (CashCode entered)
				return CashCode
			else
				return PayGroup.CashCode

		DerivedICBVendorBankTransactionCode  is a DerivedField	 
			type is AlphaUpper size 10
			if (ICBVendorRel.PayVendor.BankTransactionCode entered)
				return ICBVendorRel.PayVendor.BankTransactionCode
			else
			if  (ICBVendorRel.VendorClass.BankTransactionCode entered)
				return ICBVendorRel.VendorClass.BankTransactionCode
			else
			if (ICBillingDefaultProcessLevel.PayGroup.BankTransactionCode entered)
				return ICBillingDefaultProcessLevel.PayGroup.BankTransactionCode
			else
			if (PayGroup.BankTransactionCode entered)
				return PayGroup.BankTransactionCode

    Conditions
    	RecordExists
			restricted
			when (Company exists)
		
		DisplayAffiliateOwnershipRequiredMsg
    		restricted
    		when (ClaimsAndLiabilitiesReporting
    		and Company.AccountingEntity.AddressCode.PostalAddress.Country entered
    		and VendorCompanyDefaultWithNoAffiliateOwnershipRel exists)

		DisplayCompanyEntityCountryRequiredMsg
			restricted
			when (ClaimsAndLiabilitiesReporting
			and Company.AccountingEntity.AddressCode.PostalAddress.Country not entered)

		DisplayClaimsAndLiabilitiesRequireMsg
			restricted
			when (DisplayAffiliateOwnershipRequiredMsg
			or DisplayCompanyEntityCountryRequiredMsg)

		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)
			
		SecondaryWithholdingCodeInactive
			restricted
			when ((SecondaryWithholdingCode1 entered
			and   !SecondaryWithholdingCode1.Active)
			or    (SecondaryWithholdingCode2 entered
			and   !SecondaryWithholdingCode2.Active)
			or    (SecondaryWithholdingCode3 entered
			and   !SecondaryWithholdingCode3.Active))

		DisplaySecondaryWithholdingWarning
			restricted
			when (SecondaryWithholdingCodeInactive
			or    DerivedSecondaryWithholdingRateSetupIncomplete
			or	  DerivedSecondaryWithholdingDetailSetupIncomplete
			or	  DerivedSecondaryWithholdingDetailInactive)

        AcceptedBillOfExchangeExists
            classic name is DRAFT-ACCEPTED
            restricted
            when (first DraftAcceptedPayablesBillOfExchangeRel exists)

        UnacceptedBillOfExchangeExists
            classic name is DRAFT-UNACCEPT
            restricted
            when (first DraftUnacceptedPayablesBillOfExchangeRel exists)

        UnreleasedBillOfExchangeExists
            classic name is DRAFT-UNREL
            restricted
            when (first DraftUnreleasedPayablesBillOfExchangeRel exists)

        HasLastVoucher
            classic name is HAS-LST-VOUCHR
            restricted
            when (LastVoucher entered)

        IncorrectAccrualCodeDetailAccountingEntity		
        	restricted
        	when (HasAccrualCodeDetail
        	and   PayablesAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity != Company.AccountingEntity)

        IncorrectMatchPrepayAccrualCodeDetailAccountingEntity		
        	when (HasMatchPrepayAccrualCodeDetail
        	and   PayablesMatchPrepayAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity != Company.AccountingEntity)

        IncorrectRetainageAccrualCodeDetailAccountingEntity		
        	restricted
        	when (HasRetainageAccrualCodeDetail
        	and   RetainageAccrualCodeDetailRel.DistributionAccount.ToAccountingEntity != Company.AccountingEntity)

        IncorrectDiscountCodeDetailAccountingEntity			
        	restricted
        	when (PayablesDiscountCodeDetailRel exists
        	and   PayablesDiscountCodeDetailRel.DiscountAccount.ToAccountingEntity != Company.AccountingEntity)

        IncorrectIncomeWithholdingCodeDetailAccountingEntity		
        	restricted
        	when (IncomeWithholdingCodeDetailRel exists
        	and   IncomeWithholdingCodeDetailRel.WithholdingAccount.ToAccountingEntity != Company.AccountingEntity)

        CompanyUsesInforTax
			restricted
			when (TaxEntityRel.ThirdParty.InforTax)
		
		CompanyUsesVertexTax
        	restricted
        	when (TaxEntityRel.ThirdParty.VertexOSeries)	

        CompanyUsesOneSourceTax
        	restricted
        	when (TaxEntityRel.ThirdParty.Sabrix)

		CompanyUsesTaxEngineTax
			restricted
			when (TaxEntityRel.ThirdParty.TaxEngine)

        CompanyUsesThirdPartyTax
        	restricted
        	when (CompanyUsesVertexTax
        	or    CompanyUsesOneSourceTax)

		DisplayAllowTaxToleranceHold
			restricted
			when (CompanyUsesInforTax
			or    CompanyUsesOneSourceTax)
		
		DisplayTaxTolerance
			restricted
			when (CompanyUsesInforTax
			or	  CompanyUsesOneSourceTax
			or    CompanyUsesVertexTax)
		
		ShortPayAllowed
			restricted
			when (AllowShortPay)	
		
        HasAccrualCode
        	restricted
        	when (AccrualCode entered)

		HasMatchPrepayAccrualCode		
			restricted
			when (MatchPrepayAccrualCode entered)			

        HasAccrualCodeDetail
        	restricted
        	when (AccrualCode entered
        	and   PayablesAccrualCodeDetailRel exists)

        HasMatchPrepayAccrualCodeDetail		
        	restricted
        	when (MatchPrepayAccrualCode entered
        	and   PayablesMatchPrepayAccrualCodeDetailRel exists)

        IncompleteAccrualCodeSetup
        	restricted
        	when (AccrualCode entered
        	and  (PayablesAccrualCodeDetailRel not exists
        	or   !PayablesAccrualCodeDetailRel.Active))

        IncompleteMatchPrepayAccrualCodeSetup		
        	restricted
        	when (AccrualCode entered
        	and  (PayablesMatchPrepayAccrualCodeDetailRel not exists
        	or   !PayablesMatchPrepayAccrualCodeDetailRel.Active))			

        HasRetainageAccrualCodeDetail
        	restricted
        	when (RetainageAccrualCode entered
        	and   RetainageAccrualCodeDetailRel exists)

        IncompleteRetainageAccrualCodeSetup
        	restricted
        	when (RetainageAccrualCode entered
        	and  (RetainageAccrualCodeDetailRel not exists
        	or   !RetainageAccrualCodeDetailRel.Active))

        IncompleteIncomeWithholdingCodeSetup
        	restricted
        	when (IncomeWithholdingCode entered
        	and  (IncomeWithholdingCodeDetailRel not exists
        	or   !IncomeWithholdingCodeDetailRel.Active))

        HasDiscountCode
        	restricted
        	when (DiscountCode entered)

        HasPayablesDiscountCodeDetail
        	restricted
        	when (PayablesDiscountCodeDetailRel exists)

        IncompleteDiscountCodeSetup
        	restricted
        	when (DiscountCode entered
        	and  (PayablesDiscountCodeDetailRel not exists
        	or   !PayablesDiscountCodeDetailRel.Active))

        IncompleteSetup
        	restricted
        	when (!HasAccrualCode
        	or    !HasDiscountCode
        	or    IncompleteAccrualCodeSetup
        	or    IncompleteRetainageAccrualCodeSetup
        	or	  IncompleteIncomeWithholdingCodeSetup
        	or	  IncompleteDiscountCodeSetup
        	or    DisplaySecondaryWithholdingWarning)

        ProcessingMonitorExists
            classic name is MONITOR-EXISTS
            restricted
            when (first PayablesProcessingMonitorRel exists)

        PortalVendorGroup
        	restricted
			when (VendorGroup	= actor.agent(SupplierSourceId).SupplierGroup)

		FinanceResourceInContext
			restricted
			when (FinanceResource in context)

		HasDefaultProcessLevel
			restricted
			when (DefaultPayablesProcessLevelRel exists)

		SelectVendorGroup
			restricted
			when (VendorGroup   = SupplierGroup)

		AnyIntercompanyBillingFieldEntered
			restricted
			when (ICBillingDefaultVendor entered
			or    ICBillingDefaultProcessLevel entered
			or    ICBillingDefaultCashCode entered
			or    ICBillingDefaultBankTransactionCode entered
			or    ICBillingDefaultBankFeeCode entered		
			or    ICBillingReverseBankFeeCode entered)		

		DefaultICBVendorEntered
			restricted
			when (ICBillingDefaultVendor entered)

		IsPayablesHoldCodeNotExists
			restricted
			when  (ARInterfaceHoldCode not exists)

        ReportedClaimsAndLiabilities
        	restricted
			when (ReportedClaimsAndLiabilitiesHeaderRel exists)

		UnreportedClaimsAndLiabilities
        	restricted
			when (UnreportedClaimsAndLiabilitiesHeaderRel exists)

		HasDefaultPrinter
			restricted
			when (UserDefaultPrinterRel exists)

		HasEmailFeatureInIDM
			restricted
			when (EmailPayablesChargeback)

		TaxCodeRequired                                         
			restricted
			when (TaxCode not entered
			and  (TaxToleranceAmount entered
			or    TaxTolerancePercent entered))

        SecondaryWithholdingCodeRequired                        
			restricted
            when (SecondaryWithholdingCode1 not entered
			and SecondaryWithholding entered)

		ICBillingDefaultProcessLevelRequired                    
			restricted
			when ((ICBillingDefaultVendor entered
			or ICBillingDefaultCashCode entered
			or ICBillingDefaultBankTransactionCode entered
			or ICBillingDefaultBankFeeCode entered
			or ICBillingReverseBankFeeCode entered)
			and ICBillingDefaultProcessLevel not entered)

		ICBillingDefaultVendorRequired                          
			restricted
			when ((ICBillingDefaultProcessLevel entered
			or ICBillingDefaultCashCode entered
			or ICBillingDefaultBankTransactionCode entered
			or ICBillingDefaultBankFeeCode entered
			or ICBillingReverseBankFeeCode entered)
			and ICBillingDefaultVendor not entered)

		ICBillingDefaultCashCodeRequired                        
			restricted
			when ((ICBillingDefaultVendor entered
			or ICBillingDefaultProcessLevel entered
			or ICBillingDefaultBankTransactionCode entered
			or ICBillingDefaultBankFeeCode entered
			or ICBillingReverseBankFeeCode entered)
			and ICBillingDefaultCashCode not entered)

		ICBillingDefaultBankTransactionCodeRequired             
			restricted
			when ((ICBillingDefaultVendor entered
			or ICBillingDefaultProcessLevel entered
			or ICBillingDefaultCashCode entered
			or ICBillingDefaultBankFeeCode entered
			or ICBillingReverseBankFeeCode entered)
			and ICBillingDefaultBankTransactionCode not entered)

		ICBillingDefaultBankFeeCodeRequired                     
			restricted
			when ((ICBillingDefaultVendor entered
			or ICBillingDefaultCashCode entered
			or ICBillingDefaultBankTransactionCode entered
			or ICBillingDefaultProcessLevel entered
			or ICBillingReverseBankFeeCode entered)
			and ICBillingDefaultBankFeeCode not entered)

		ICBillingReverseBankFeeCodeRequired                     
			restricted
			when ((ICBillingDefaultVendor entered
			or ICBillingDefaultCashCode entered
			or ICBillingDefaultBankTransactionCode entered
			or ICBillingDefaultBankFeeCode entered
			or ICBillingDefaultProcessLevel entered)
			and ICBillingReverseBankFeeCode not entered)
			
		PayablesChargebackTemplateRequired                      
			restricted
			when (UseIDM entered
			and PayablesChargebackTemplate not entered)

		PayablesDebitMemoTemplateRequired                       
			restricted
			when (UseIDM entered
			and PayablesDebitMemoTemplate not entered)

    Relations
		SecurityGroupRel
			one-to-one relation to FinanceDimensionSecurityGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		  = Company.FinanceEnterpriseGroup
				related.DimensionGroupType	   		  = 2
				related.FinanceDimensionSecurityGroup = ActorSecurityGroup

		SecurityGroupDetailRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses Set1
				related.Company						= Company
				related.GeneralLedgerCompanyGroup  	= SecurityGroupRel.GeneralLedgerCompanyGroup

		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company

        IncomeWithholdingCodeDetailRel
			one-to-one relation to IncomeWithholdingCodeDetail
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.IncomeWithholdingCode	= IncomeWithholdingCode
				related.Company					= Company


        ActorCompanyGroupRel
        	one-to-one relation to GeneralLedgerCompanyGroupMember
        	Field Mapping uses symbolic key
        		related.GeneralLedgerCompanyGroup 	= actor.context.GeneralLedgerCompanyGroup
        		related.Company      				= Company

        PayablesInvoiceHistoryRel
            one-to-many relation to PayablesInvoiceHistory
            Field Mapping uses symbolic key
                related.Company = Company
























		PayablesDiscountCodeRel
			one-to-one relation to PayablesDiscountCode
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.PayablesDiscountCode	= DiscountCode

















		PayablesBillOfExchangeAccrualCodeDetailRel
			one-to-many relation to PayablesBillOfExchangeAccrualCodeDetail
			Field Mapping uses Set2
				related.Company	= Company













		PayablesInvoiceVoucherRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses Set4
				related.Company = Company

        PayablesInvoiceHistoryVoucherRel
            one-to-many relation to PayablesInvoiceHistory
            Field Mapping uses Set4
                related.Company = Company









        PayablesAuthorityCodeRel
            classic name is APAUTHOR
            one-to-many relation to PayablesAuthorityCode
            Field Mapping uses symbolic key
                related.VendorGroup = Company.VendorGroup

        PayGroupCompanyRelationshipRel
			one-to-many relation to PayGroupCompanyRelationship
			Field Mapping uses symbolic key
                related.VendorGroup 		= VendorGroup
				related.PayGroup			= PayGroup
				related.Company 			= Company








        PayablesBatchRel
            classic name is APBATCH
            one-to-many relation to PayablesBatch
            Field Mapping uses symbolic key
                related.Company = Company







        PayablesDistributionCodeDetailRel
            classic name is APDISTCODE
            one-to-many relation to PayablesDistributionCodeDetail
            Field Mapping uses symbolic key
				related.VendorGroup	= Company.VendorGroup

        PayablesInvoiceRel
            classic name is APINVOICE
            one-to-many relation to PayablesInvoice
            Field Mapping uses symbolic key
                related.Company = Company

        PayablesProcessingMonitorRel
            classic name is APMONITOR
            one-to-many relation to PayablesProcessingMonitor
            Field Mapping uses Set2
                related.PayablesProcessingMonitor.Company = Company

        PayablesInvoicePaymentRel
            classic name is APPAYMENT
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses symbolic key
                related.Company = Company

        PayablesProcessLevelRel
            classic name is APPROCLEV
            one-to-many relation to PayablesProcessLevel
            Field Mapping uses symbolic key
                related.Company = Company

        DefaultPayablesProcessLevelRel
            one-to-many relation to PayablesProcessLevel
            Field Mapping uses symbolic key
                related.Company = Company
            Instance Selection
            	where (related.DefaultProcessLevel = true)

        PayablesProcessLevelPayGroupRel
            classic name is APPROCLEV
            one-to-many relation to PayablesProcessLevel
            Field Mapping uses symbolic key
                related.Company = Company
            Instance Selection
            	where (related.PayGroup 	= old PayGroup)

        VendorCommentsRel
            classic name is APVCOMMENTS
            one-to-many relation to Apcomments
            delete cascades
            Field Mapping uses symbolic key
                related.VendorCommentType = "V"
                related.Company           = Company

        VendorRel
            classic name is APVENMAST
            one-to-many relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup = VendorGroup

       	TaxEntityRel
            one-to-one relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
                related.TaxEntity 				= Company.AccountingEntity

        EntityTaxCodesRel
        	one-to-many relation to EntityTaxCode
        	Field Mapping uses symbolic key
        		related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
        		related.TaxEntity				= Company.AccountingEntity

        EntityTaxCodeRel
        	one-to-one relation to EntityTaxCode
        	Field Mapping uses symbolic key
        		related.FinanceEnterpriseGroup 	= Company.FinanceEnterpriseGroup
        		related.TaxEntity				= Company.AccountingEntity
				related.TaxCode 				= TaxCode

        CashLedgerPayablesPaymentRel
            classic name is CBCHECK
            one-to-many relation to CashLedgerPayablesPayment
            Field Mapping uses Set3
            	related.CashManagementGroup 	= Company.FinanceEnterpriseGroup
                related.PayGroup 				= PayGroup

        DraftAcceptedPayablesBillOfExchangeRel
            classic name is DRAFT-ACCEPTED
            one-to-many relation to PayablesBillOfExchange
            Field Mapping uses Set3
                related.PayGroup = PayGroup
                related.Status   = 2

        DraftUnacceptedPayablesBillOfExchangeRel
            classic name is DRAFT-UNACCEPT
            one-to-many relation to PayablesBillOfExchange
            Field Mapping uses Set3
                related.PayGroup = PayGroup
                related.Status   = 1

        DraftUnreleasedPayablesBillOfExchangeRel
            classic name is DRAFT-UNREL
            one-to-many relation to PayablesBillOfExchange
            Field Mapping uses Set3
                related.PayGroup = PayGroup
                related.Status   = blank

        MatchCompanyRel
            classic name is MACOMPANY
            one-to-one relation to MatchCompany
            Field Mapping uses symbolic key
                related.Company = Company

        OpenPayablesInvoicePaymentRel
            classic name is OPEN-PAYMENTS
            one-to-many relation to PayablesInvoicePayment
            Field Mapping uses Set4
                related.Company = Company

        PurchasingCompanyRel
            one-to-one relation to PurchasingCompany
            Field Mapping uses symbolic key
                related.Company = Company

		ExecutoryCostCodeRel	is a ExecutoryCostCode set





























		LocalConfigParamRel				
			one-to-one relation to ConfigurationParameter
			Field Mapping uses symbolic key
				related.ConfigurationParameter.ConfigurationID	= "config"
				related.ConfigurationParameter.Name				= LocalConfigParamName

		PayablesAccrualCodeDetailRel
			one-to-one relation to PayablesAccrualCodeDetail
			Field Mapping uses Set1
				related.VendorGroup			= VendorGroup
				related.Company				= Company
				related.PayablesAccrualCode	= AccrualCode

		PayablesMatchPrepayAccrualCodeDetailRel
			one-to-one relation to PayablesAccrualCodeDetail
			Field Mapping uses Set1
				related.VendorGroup			= VendorGroup
				related.Company				= Company
				related.PayablesAccrualCode	= MatchPrepayAccrualCode
		PayablesDiscountCodeDetailRel
			one-to-one relation to PayablesDiscountCodeDetail
			Field Mapping uses symbolic key
				related.VendorGroup				= VendorGroup
				related.PayablesDiscountCode	= DiscountCode
				related.Company					= Company

		RetainageAccrualCodeDetailRel
			one-to-one relation to PayablesAccrualCodeDetail
			Field Mapping uses Set1
				related.VendorGroup			= VendorGroup
				related.Company				= Company
				related.PayablesAccrualCode	= RetainageAccrualCode

		PayablesSecondaryWithholdingCodeDetailRel
			one-to-one relation to PayablesSecondaryWithholdingCodeDetail
			Field Mapping uses symbolic key
				related.VendorGroup							= VendorGroup
				related.PayablesSecondaryWithholdingCode	= LocalSecondaryWithholdingCode
				related.Company								= Company

		PayablesSecondaryWithholdingRateRel
			one-to-many relation to PayablesSecondaryWithholdingRate
			Field Mapping uses symbolic key
				related.VendorGroup							= VendorGroup
				related.PayablesSecondaryWithholdingCode	= LocalSecondaryWithholdingCode
				related.EffectiveDate					   <= current corporate date

		LMSystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses symbolic key
				related.Company						= Company
				related.GeneralLedgerSystemCode		= "LM"

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses symbolic key
				related.Company						= Company
				related.GeneralLedgerSystemCode		= "AP"

		PayablesCompanyICBVendorRel
			one-to-many relation to PayablesCompany
			Field Mapping uses ByICBVendorDefault
				related.VendorGroup				= VendorGroup
				related.ICBillingDefaultVendor	= ICBillingDefaultVendor
            Instance Selection
				where (related.UniqueID	!= UniqueID)

		OpenIntercompanyBillingDocumentRel	
			one-to-many relation to IntercompanyBillingDocumentHeader
			Field Mapping uses OpenDocumentsByVendor
				related.IntercompanyBillingGroup	= Company.BusinessGroup.FinanceEnterpriseGroup
				related.PayableEntity.Vendor		= LocalICBillingDefaultVendor
			Instance Selection	
				where (related.PayableEntity.Company.VendorGroup = VendorGroup)	

		IntercompanyBillingSettlementHeaderRel		
			one-to-many relation to IntercompanyBillingSettlementHeader
			Field Mapping uses symbolic key
				related.IntercompanyBillingGroup	= Company.BusinessGroup.FinanceEnterpriseGroup
			Instance Selection
				where (related.IntercompanyBillingSettlementHeader.PayablesCompany		= Company)

        VendorWithCusomersRel
            one-to-many relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup = VendorGroup
			Instance Selection
				where (related.Customer entered)

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		= LocalReceivableCompany
				related.Customer	= LocalCustomer

		VendorBalanceRel
			one-to-one relation to VendorBalance
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor 							= LocalVendor
				related.VendorLocation					= LocalVendorBalanceLocation
				related.Company 						= Company

		GLInterEntityRelationRel
			one-to-one relation to GLInterEntityRelation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.AccountingEntity		= Company.AccountingEntity
				related.ToAccountingEntity		= PayGroup.PostCompany.AccountingEntity

		APToARInterfaceSelectedRecordsRel
			one-to-many relation to APToARSelect
			Field Mapping uses symbolic key
			Instance Selection
				where (related.PayablesInvoice.Company	= Company)

		GeneralLedgerCalendarPeriodYearRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNode
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
				related.TopNode						= VoucherReferenceReportingBasis.GeneralLedgerCalendar.TopNode
			Instance Selection
				where (related.PeriodType.Year
				and    related.Year					= LocalYear)

		PayablesInvoiceForVoucherReferenceRel
			one-to-many relation to PayablesInvoice
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where ((related.Status.Released
				or      related.Status.Historical)
				and    (related.DistributionDate >= LocalPeriodStartDate
				and     related.DistributionDate <= LocalPeriodEndDate))

		PayablesInvoiceHistoryForVoucherReferenceRel
			one-to-many relation to PayablesInvoiceHistory
			Field Mapping uses Set4
				related.Company = Company
			Instance Selection
				where ((related.Status.Released
				or      related.Status.Historical)
				and    (related.DistributionDate >= LocalPeriodStartDate
				and     related.DistributionDate <= LocalPeriodEndDate))

		PayablesInvoiceVoucherRefRel
			one-to-many relation to PayablesInvoiceVoucherRef
			Field Mapping uses ByDistributionDate
				related.Company	= Company
			Instance Selection
				where (related.VoucherReferenceNumber entered)

		AllPayablesInvoiceVoucherRefRel
			one-to-many relation to PayablesInvoiceVoucherRef
			Field Mapping uses ByDistributionDate
				related.Company	= Company
			Instance Selection
				where (related.DistributionDate >= LocalPeriodStartDate
				and    related.DistributionDate <= LocalPeriodEndDate)

		ReportedClaimsAndLiabilitiesHeaderRel is a ClaimsAndLiabilitiesHeader set
			Instance Selection
				where (related.Reported)

		UnreportedClaimsAndLiabilitiesHeaderRel is a ClaimsAndLiabilitiesHeader set
			Instance Selection
				where (not related.Reported)

		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company	= Company

        UnreportedForeignTradeAndPaymentRel
            one-to-many relation to ForeignTradeAndPayments
            Field Mapping uses Set4
                related.Company		= Company
            Instance Selection
            	where ((related.System = "AP"
            	or      related.System = "CB")
				and    !related.Reported)

		UserDefaultPrinterRel
			one-to-one relation to UserDefaultPrinter
			Field Mapping uses symbolic key
				related.UserDefaultPrinter.Actor	= actor

		VendorCompanyDefaultWithNoAffiliateOwnershipRel
			one-to-many relation to VendorCompanyDefault
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
			Instance Selection
				where (related.Company = Company
				and related.IsForeignVendor
				and related.Affiliate
				and related.AffiliateOwnership not entered)

		ICBVendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup	= VendorGroup
				related.Vendor 		= ICBillingDefaultVendor

		GeneralLedgerCompanyRel			
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company
	
		FinanceEnterpriseGroupRel		
			one-to-one relation to FinanceEnterpriseGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup

		GLClosePeriodRel
			one-to-many relation to GeneralLedgerClosePeriod
			Field Mapping uses ByEndDate
				related.FinanceEnterpriseGroup			 = Company.FinanceEnterpriseGroup
				related.GeneralLedgerCloseConfiguration	 = Company.AccountingEntity.CloseConfiguration
			Instance Selection
				where (related.GeneralLedgerClosePeriod.DerivedPeriodMonth = LeaseInputDate month
				and    related.GeneralLedgerClosePeriod.DerivedPeriodYear = LeaseInputDate year)

    Sets
        Set2
            indexed
            Sort Order
                VendorGroup
                Company

        Set3
            indexed
            Sort Order
                PayGroup
                Company

		ByICBVendorDefault
			Instance Selection
				where (DefaultICBVendorEntered)
			Sort Order
				VendorGroup
				ICBillingDefaultVendor
				Company


	Rule Blocks
	
		PurgeInvoiceHistory
			CurrentBackgroundGroup = "DeletionOfPayablesInvoice1_" + Company
			invoke PurgeInvoices PayablesInvoice in background group(CurrentBackgroundGroup)
				invoked.PrmCompany			= Company
				invoked.PrmInvCutoffDate	= LocalPurgeCutOffDate
				invoked.PrmFromVendorInv	= LocalFromVendorInv
				invoked.PrmToVendorInv		= LocalToVendorInv
				
											
			LastBackgroundGroup = CurrentBackgroundGroup

			CurrentBackgroundGroup = "DeletionOfPayablesInvoiceHistory2_" + Company
			invoke PurgeInvoiceHistory PayablesInvoiceHistory in background group(CurrentBackgroundGroup)
				run after background group (LastBackgroundGroup)
				invoked.PrmCompany			= Company
				invoked.PrmInvCutoffDate	= LocalPurgeCutOffDate
				invoked.PrmFromVendorInv	= LocalFromVendorInv
				invoked.PrmToVendorInv		= LocalToVendorInv
					
			LastBackgroundGroup = CurrentBackgroundGroup
		
			

	Create Rules
		constraint (TaxEntityRel exists)
			"ATaxEntityMustExistForTheAccountingEntityDefinedOnTheGlobalLedgerCompany"

	Actions

		Create is a Create Action

			Action Rules
				if (ARInterfaceHoldCode entered
				and IsPayablesHoldCodeNotExists )
					invoke Create PayablesHoldCode
						invoked.VendorGroup 				= VendorGroup
						invoked.HoldCode  					= ARInterfaceHoldCode
						invoked.Description					= "Accounts Receivable Interface Hold Code"
						invoked.HoldOnInvoice				= "P"
						invoked.HoldOnVendor				= "P"
			Exit Rules


		T2VCreate is a Create Action
			restricted 
			default label is untranslatable
			bypass field rules

		Update is an Update Action
			Action Rules
				if (PayGroup entered
				and PayGroup changed)
					constraint (PayablesInvoiceRel not exists)
						"InvoicesEntered;UsePayGroupUpdateToChangePayGroup"   
					constraint (PayablesInvoiceHistoryRel not exists)
						"HistoricalInvoicesEntered;UsePayGroupUpdateToChangePayGroup"  
					invoke Update PayablesProcessLevelPayGroupRel
						invoked.PayGroup 	= PayGroup


				if (VendorGroup changed)
					constraint (PayablesInvoiceRel not exists)
						"CannotChangeVendorGroup;InvoicesExist"                  
					constraint (PayablesInvoiceHistoryRel not exists)
						"CannotChangeVendorGroup;InvoicesExist"                  
				if (LastVoucher changed
				and VoucherPrefix not changed)
					constraint (LastVoucher > old LastVoucher)
						"CannotDecreaseLastVoucherNumberWithoutChangingPrefix"	 

				if (ICBillingDefaultVendor changed)
					if (old ICBillingDefaultVendor entered)
						LocalICBillingDefaultVendor = old ICBillingDefaultVendor
						constraint (!OpenIntercompanyBillingDocumentRel exists)
							"IntercompanyBillingDefaultVendorCannotBeChangedOrRemoved;Open_(Unreleased,PendingApproval,OrReleased)BillingDocumentsExistForThisCompany"

				if (ARInterfaceHoldCode entered
				and IsPayablesHoldCodeNotExists)
					invoke Create PayablesHoldCode
						invoked.VendorGroup 				= VendorGroup
						invoked.HoldCode  					= ARInterfaceHoldCode
						invoked.Description					= "Accounts Receivable Interface Hold Code"
						invoked.HoldOnInvoice				= "P"
						invoked.HoldOnVendor				= "P"


		Delete is a Delete Action
			Entrance Rules
				constraint (PayablesInvoiceRel not exists) 
					"CannotDelete;InvoicesExist"                              
				constraint (PayablesInvoiceHistoryRel not exists) 
					"CannotDelete;InvoicesExist"                              
				invoke Delete PayablesAccrualCodeDetail set
				invoke Delete PayablesBillOfExchangeAccrualCodeDetailRel
				invoke Delete PayablesProcessLevel set
				invoke Delete PayGroupCompanyRelationshipRel


			Action Rules

        FastUpdate is an Update Action
        	restricted
        	default label is untranslatable
        	bypass field rules
			Exit Rules

        UpdateLeaseAdoptionDate is an Instance Action
			restricted
			Parameters
				PrmLeaseAdoptionDate		is Date
					default label is "LeaseAdoptionDate"
			Parameter Rules
				PrmLeaseAdoptionDate
			Action Rules
				LeaseAdoptionDate 	= PrmLeaseAdoptionDate

		IncrementLastVoucher is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				NumberOfVouchers	is Numeric size 10
			Action Rules
				if (NumberOfVouchers not entered)
					NumberOfVouchers = 1
				if (LastVoucher = 9999999999)
					initialize LastVoucher
				LastVoucher = LastVoucher + NumberOfVouchers

		UpdateVendorGroup is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				PrmVendorGroup		is a VendorGroup

			Parameter Rules
				PrmVendorGroup
					required

			Action Rules
				constraint (PayablesInvoiceRel not exists)
					"CannotChangeVendorGroupOnPayablesCompany;InvoicesExist"                  
				constraint (PayablesInvoiceHistoryRel not exists)
					"CannotChangeVendorGroupOnPayablesCompany;InvoicesExist"                  

				VendorGroup = PrmVendorGroup

		IncrementInvoiceDate is an Instance Action
			restricted
			Action Rules
				if (InvoiceDateRange entered)
					InvoiceDateRange.FromDate = InvoiceDateRange.FromDate + 1 month
					InvoiceDateRange.ToDate   = InvoiceDateRange.ToDate   + 1 month

		CloseLeaseSystemPeriod is an Instance Action
			restricted
			default label is untranslatable
			Parameters
				PrmCompany			is a PayablesCompany
					default label is "Company"

			Parameter Rules
				PrmCompany
					required

			Action Rules
				if (LMSystemClosingControlRel.Control 	= true
				and LMSystemClosingControlRel.CurrentPeriodNotClosed)
					invoke UpdateCompanySystemClosingControl LMSystemClosingControlRel
						invoked.PrmCompany		 		= Company
						invoked.PrmSystem				= "LM"

		CreateAPClerkSmartReconCompany is an Instance Action
			default label is "AddCompany"
			valid when (FinanceResourceInContext)
			Action Rules
				invoke Create APClerkSmartReconCompany
					invoked.HROrganization					= FinanceResource.HROrganization
					invoked.FinanceResource					= FinanceResource.FinanceResource
					invoked.Company							= Company



		CopyDelayTaxFlagFromTaxEntityToCompany is a Set Action	

			default label is untranslatable
			restricted
			Action Rules
				Instance Rules
					if (!CompanyUsesThirdPartyTax)
						DelayTaxProcessing = false
					else
					if (CompanyUsesOneSourceTax)
						DelayTaxProcessing = true
					else
					if (CompanyUsesVertexTax)
						DelayTaxProcessing = TaxEntityRel.DelayTaxProcessing


		Netting is a Set Action
			Parameters
		        PrmBalanceOption           					is AlphaUpper size 1
		            States
		                ARToAP 				value is "A"
		                	default label is "ReceivablesToPayables"
		                APToAR 				value is "B"
		                	default label is "PayablesToReceivables"
		                LesserToGreater 	value is "C"
		                GreaterToLesser 	value is "D"

				PrmFEG										is a FinanceEnterpriseGroup
				PrmGeneralLedgerCompany						is a GeneralLedgerCompany
				PrmReceivableCompany						is a ReceivableCompany
				PrmARPostDate								is Date
				PrmARProcessLevel							is a ReceivableProcessLevel
					context of PrmReceivableCompany
				PrmInvoiceDate								is Date
				PrmTermsCode								is a TermsCode
					context of PrmFEG
				PrmMemoReason								is a CreditDebitMemoReason
					context of PrmReceivableCompany
				PrmARAccrualCode							is a ReceivableGeneralLedgerCode
					context of PrmReceivableCompany
				PrmDueDate									is Date
				PrmDescription								is a Description

				PrmPayablesCompany							is a PayablesCompany
				PrmARAPPostDate								is Date
				PrmReasonType								is a ReceivableReasonType
				PrmReceivableReason							is a ReceivableReason
					context of PrmReceivableCompany
				PrmVendorGroup								is a VendorGroup
				PrmAuthorityCode							is a PayablesAuthorityCode
					context of PrmVendorGroup
				PrmOperator									is an Operator 
					holds pii
				PrmARAPDescription							is a Description
				PrmARAPProcessLevel							is a PayablesProcessLevel
					context of PrmPayablesCompany

				PrmAccrualCode								is a PayablesAccrualCode
					context of PrmVendorGroup
				PrmARAPTermsCode							is a TermsCode
					context of PrmFEG
				PrmARAPDueDate								is Date
				PrmAPInvoiceDate							is Date
				PrmDistributionClearingAccount				is a FinanceCodeBlock
				PrmDetailInterface							is Boolean
				PrmHSNSACCode								is a HSNSACCode
					context of PrmFEG

			Parameter Rules
				PrmFEG
					initial value is PrmGeneralLedgerCompany.FinanceEnterpriseGroup
					default to PrmGeneralLedgerCompany.FinanceEnterpriseGroup

				PrmBalanceOption
					required
						"BalanceOptionIsRequired"  
						
				PrmGeneralLedgerCompany
					required
					PrmReceivableCompany = PrmGeneralLedgerCompany
					PrmPayablesCompany = PrmGeneralLedgerCompany

				PrmReceivableCompany
					initial value is PrmGeneralLedgerCompany.Company
					required

				PrmPayablesCompany
					initial value is PrmGeneralLedgerCompany.Company
					required

					constraint (PrmPayablesCompany = PrmReceivableCompany)
						"ReceivableCompanyShouldBeEqualToPayablesCompany"

				PrmARPostDate
					initial value is current corporate date
					if (!PrmBalanceOption.ARToAP)
						default to current corporate date
						required
							"PostDateIsRequired"

				PrmARProcessLevel
					if (!PrmBalanceOption.ARToAP)
						required
							"ProcessLevelIsRequired"

				PrmARAPProcessLevel
					if (!PrmBalanceOption.APToAR)
						required
							"ProcessLevelIsRequired"

				PrmInvoiceDate
					default to PrmARPostDate

				PrmTermsCode
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterAPToARTermsCodeIfDetailInterfaceFlag=True"
							
					else
						if (!PrmBalanceOption.ARToAP)
							if (PrmTermsCode entered)
								constraint (PrmDueDate not entered)
									"DueDateEntered;CannotEnterTermsCode"
	
							if (PrmTermsCode not entered)
								constraint (PrmDueDate entered)
									"MustEnterTermsCodeOrDueDate"
				
				PrmDueDate
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterAPToARDueDateIfDetailInterfaceFlag=True"
							
					else
						if (!PrmBalanceOption.ARToAP)
							if (PrmDueDate entered)
								constraint (PrmTermsCode not entered)
									"TermsCodeEntered;CannotEnterDueDate"
	
							if (PrmDueDate not entered)
								constraint (PrmTermsCode entered)
									"MustEnterTermsCodeOrDueDate"
	
							if (PrmDueDate entered)
								constraint (PrmDueDate >= current corporate date)
									"DueDateCannotBeLessThanToday"

				PrmMemoReason
					if (!PrmBalanceOption.ARToAP)
						required
							"MemoReasonIsRequired"


				PrmVendorGroup
					PrmVendorGroup = PrmPayablesCompany.BusinessGroup

				PrmARAPPostDate
					initial value is current corporate date
					if (!PrmBalanceOption.APToAR)
						required
							"PostDateIsRequired"

				PrmAPInvoiceDate
					initial value is current corporate date
					if (!PrmBalanceOption.APToAR)
						default to current corporate date

				PrmReceivableReason
					if (!PrmBalanceOption.APToAR)
						required
							"ReceivableReasonIsRequired"

				PrmARAPTermsCode
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterARToAPTermsCodeIfDetailInterfaceFlag=True"
							
					else
						if (!PrmBalanceOption.APToAR)
							if (PrmARAPTermsCode entered)
								constraint (PrmARAPDueDate not entered)
									"DueDateEntered;CannotEnterTermsCode"
	
							if (PrmARAPTermsCode not entered)
								constraint (PrmARAPDueDate entered)
									"MustEnterTermsCodeOrDueDate"
				
				PrmARAPDueDate
					if (PrmDetailInterface)
						cannot be entered
							"CannotEnterARToAPDueDateIfDetailInterfaceFlag=True"
							
					else
						if (!PrmBalanceOption.APToAR)
							if (PrmARAPDueDate entered)
								constraint (PrmARAPTermsCode not entered)
									"TermsCodeEntered;CannotEnterDueDate"
	
							if (PrmARAPDueDate not entered)
								constraint (PrmARAPTermsCode entered)
									"MustEnterTermsCodeOrDueDate"
	
							if (PrmARAPDueDate entered)
								constraint (PrmARAPDueDate >= current corporate date)
									"DueDateCannotBeLessThanToday"

				PrmOperator
					if (!PrmBalanceOption.APToAR)
						if (PrmReceivableCompany.CashOperatorRequired)
							required
								"OperatorIsRequired"
						else
							force default to actor

				PrmReasonType
					default to "AD"
					initial value is "AD"

				PrmDistributionClearingAccount
					if (!PrmBalanceOption.ARToAP)
						required
							"ClearingAccountIsRequired"
							
				PrmHSNSACCode
					if (PrmGeneralLedgerCompany.RequireHSNSACCode)
						required
							"HSN/SACCodeIsRequired"
					else
						cannot be entered
							"CannotEnter,HSN_/SACCodeFlagIsNotSetAtGlobalLedgerCompany"

			Instance Selection
				where (Company = PrmPayablesCompany)

			Action Rules


				Instance Rules
					invoke Netting Vendor
						invoked.PrmVendorGroup						= VendorGroup
				        invoked.PrmBalanceOption					= PrmBalanceOption
						invoked.PrmReceivableCompany				= PrmReceivableCompany
						invoked.PrmFEG								= PrmFEG
						invoked.PrmARPostDate						= PrmARPostDate
						invoked.PrmARProcessLevel					= PrmARProcessLevel
						invoked.PrmInvoiceDate						= PrmInvoiceDate
						invoked.PrmTermsCode						= PrmTermsCode
						invoked.PrmMemoReason						= PrmMemoReason
						invoked.PrmARAccrualCode					= PrmARAccrualCode
						invoked.PrmDueDate							= PrmDueDate
						invoked.PrmAPInvoiceDate					= PrmAPInvoiceDate
						invoked.PrmDescription						= PrmDescription
						invoked.PrmPayablesCompany					= PrmPayablesCompany
						invoked.PrmARAPPostDate						= PrmARAPPostDate
						invoked.PrmReasonType						= PrmReasonType
						invoked.PrmReceivableReason					= PrmReceivableReason
						invoked.PrmVendorGroup						= PrmVendorGroup
						invoked.PrmAuthorityCode					= PrmAuthorityCode
						invoked.PrmOperator							= PrmOperator
						invoked.PrmARAPDescription					= PrmARAPDescription
						invoked.PrmARAPProcessLevel					= PrmARAPProcessLevel

						invoked.PrmAccrualCode						= PrmAccrualCode
						invoked.PrmARAPTermsCode					= PrmARAPTermsCode
						invoked.PrmARAPDueDate						= PrmARAPDueDate
						invoked.PrmDistributionClearingAccount		= PrmDistributionClearingAccount
						invoked.PrmDetailInterface					= PrmDetailInterface
						if (PrmGeneralLedgerCompany.RequireHSNSACCode)
							invoked.PrmHSNSACCode					= PrmHSNSACCode
						
		CopyPayablesInvoice is an Instance Action
			restricted
			default label is untranslatable
			run in background

			Parameters
				PrmYearOption				is Numeric 1
					States
						CurrentYear	  value is 1
						PreviousYear  value is 2

			Action Rules
				if (PrmYearOption.CurrentYear)
					LocalYear 			 = VoucherReferenceReportingBasis.BasisYear
					LocalPeriodStartDate = GeneralLedgerCalendarPeriodYearRel.DerivedStartDate
					LocalPeriodEndDate 	 = GeneralLedgerCalendarPeriodYearRel.DerivedEndDate

				if (PrmYearOption.PreviousYear)
					LocalYear = (VoucherReferenceReportingBasis.BasisYear - 1)
					LocalPeriodStartDate = GeneralLedgerCalendarPeriodYearRel.DerivedStartDate
					LocalPeriodEndDate 	 = GeneralLedgerCalendarPeriodYearRel.DerivedEndDate

				invoke Delete AllPayablesInvoiceVoucherRefRel

				if (PayablesInvoiceForVoucherReferenceRel exists)
					CopyPayablesInvoiceBackgroundGroup = "CopyPayablesInvoiceBackgroundGroup"
					invoke CreatePayablesInvoiceVoucherRef PayablesInvoice in background group (CopyPayablesInvoiceBackgroundGroup)
						invoked.PrmCompany 		   = Company
						invoked.PrmPeriodStartDate = LocalPeriodStartDate
						invoked.PrmPeriodEndDate   = LocalPeriodEndDate

				if (PayablesInvoiceHistoryForVoucherReferenceRel exists)
					CopyPayablesInvoiceBackgroundGroup = "CopyPayablesInvoiceBackgroundGroup"
					invoke CreatePayablesInvoiceVoucherRef PayablesInvoiceHistory in background group (CopyPayablesInvoiceBackgroundGroup)
						invoked.PrmCompany 		   = Company
						invoked.PrmPeriodStartDate = LocalPeriodStartDate
						invoked.PrmPeriodEndDate   = LocalPeriodEndDate

				if (CopyPayablesInvoiceBackgroundGroup entered)
					invoke AssignVoucherReferenceNumber PayablesInvoiceVoucherRef
						run after background group (CopyPayablesInvoiceBackgroundGroup)
						invoked.PrmCompany   	   = Company
						invoked.PrmPeriodStartDate = LocalPeriodStartDate
						invoked.PrmPeriodEndDate   = LocalPeriodEndDate

			Exit Rules
				invoke FastUpdate
					invoked.VoucherReferenceLastRunDate = current corporate date

		ClaimsAndLiabilities is an Instance Action	
			restricted
			default label is untranslatable
			
		SendNotificationNoRecordsForVendorStatement is an Instance Action
			restricted
			default label is untranslatable
			Local Fields
				LocalActor is an Actor
			Action Rules
				LocalActor = actor

				send notification
					to LocalActor
					description is "NoRecordsToProcessForVendorStatementPayablesCompany_<Company>"
					priority is high
					detail is "NoRecordsToProcessForVendorStatement.PleaseCheckTheInvoicesAndParametersToProcessAndRunTheBatchProgramAgain."
				
		PayablesHistoryPurge is a Set Action
			restricted
			Parameters
				PrmCompany					is a PayablesCompany
		        PrmPurgeInvoices			is AlphaUpper size 1
		            States
		                Yes value is "Y"
		                No  value is "N"
		        PrmFromVendorInv			is a Vendor
		        PrmToVendorInv				is a Vendor

		        PrmPurgeOnetimeVens			is AlphaUpper size 1
		            States
		                Yes value is "Y"
		                No  value is "N"
		        PrmVenCutoffDate           is Date
		        PrmPurgeNoActVens          is AlphaUpper size 1
		            States
		                Yes value is "Y"
		                No  value is "N"
		        PrmNoActBegCreateDte       is Date
		        PrmNoActEndCreateDte       is Date
		        PrmFromVendor              is a Vendor
		        PrmToVendor                is a Vendor
						
		    Parameter Rules
		        PrmCompany
		            required
		            if (PrmPurgeInvoices = "Y")


		            	constraint (PrmCompany.FinanceEnterpriseGroup.PurgeCutOffDate entered)
		            		"PurgeCutOffDateMustBeSetForFinanceEnterpriseGroup<PrmCompany.FinanceEnterpriseGroup>"
		            	
		        PrmPurgeInvoices
		        	initial value is "N"
		            default to "N"




		        
		        PrmFromVendorInv
		        	constraint (PrmFromVendorInv <= PrmToVendorInv)
		        		"ToVendorRangeMustBeGreaterThanFromVendor"
		          		
		        PrmPurgeOnetimeVens
		        	initial value is "N"
		            default to "N"
		            if (PrmPurgeOnetimeVens = "Y")
		            	constraint (PrmVenCutoffDate entered)
		            		"One-TimeVendorCutOffDateIsRequired"
		            else
		            	if (PrmPurgeOnetimeVens = "N")
		            		constraint (PrmVenCutoffDate not entered)
		            			"DateNotAllowed:OneTimeVendorsNotSelected"
		            
		        PrmPurgeNoActVens
		        	initial value is "N"
		            default to "N"
		            if (PrmPurgeNoActVens = "Y")
		            	constraint (PrmFromVendor entered and PrmToVendor entered)
		            		"VendorRangeIsRequired"	
		        
		        PrmFromVendor
		        	constraint (PrmFromVendor <= PrmToVendor)
		        		"FromVendorCannotBeGreaterThanToVendor"

								
				PrmNoActBegCreateDte
					constraint (PrmNoActBegCreateDte <= PrmNoActEndCreateDte)
						"EndCreateDateMustBeGreaterThanFromDate"
							
			Instance Selection
				where (Company = PrmCompany)
							

			Action Rules
				Set Rules
					Entrance Rules
						LocalPurgeCutOffDate = PrmCompany.FinanceEnterpriseGroup.PurgeCutOffDate
				Instance Rules
					if (PrmPurgeInvoices = "Y")
						LocalPurgeCutOffDate = PrmCompany.FinanceEnterpriseGroup.PurgeCutOffDate
						LocalFromVendorInv = PrmFromVendorInv
						LocalToVendorInv     = PrmToVendorInv
						include PurgeInvoiceHistory




















						
					if (LastBackgroundGroup not entered)
						LastBackgroundGroup = "PurgeVendors3_" + PrmCompany
						
					if (PrmPurgeNoActVens = "Y")
						CurrentBackgroundGroup = "DeletionOfNoActivityVendor3_" + Company
						invoke PurgeNoActVendor Vendor in background group(CurrentBackgroundGroup)
							run after background group (LastBackgroundGroup)
							invoked.PrmCompany				= Company
							invoked.PrmNoActBegCreateDte	= PrmNoActBegCreateDte						
							invoked.PrmNoActEndCreateDte	= PrmNoActEndCreateDte
							invoked.PrmVendorGroup			= PrmCompany.VendorGroup
							invoked.PrmFromVendor			= PrmFromVendor
							invoked.PrmToVendor				= PrmToVendor
					LastBackgroundGroup = CurrentBackgroundGroup
					
					if (PrmPurgeOnetimeVens = "Y")
						CurrentBackgroundGroup = "DeletionOfOneTimeVendor4_" + PrmCompany
						invoke PurgeOneTimeVendor Vendor in background group(CurrentBackgroundGroup)
							run after background group (LastBackgroundGroup)
							invoked.PrmCompany				= PrmCompany
							invoked.PrmVendorGroup			= PrmCompany.VendorGroup
							invoked.PrmVenCutoffDate		= PrmVenCutoffDate
							invoked.PrmBackgroundGroup		= CurrentBackgroundGroup		

		PayablesHistoryPurgeForAllCompanies is a Set Action
			restricted
			confirmation required
				"AreYouSureToPurgeInvoicesForAllCompanies"
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint PrmFinanceEnterpriseGroup.PurgeCutOffDate entered
						"PurgeCutOffDateMustBeSetForFinanceEnterpriseGroup"
			Instance Selection
				where (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
			Action Rules
				Set Rules
					Entrance Rules
						LocalPurgeCutOffDate = PrmFinanceEnterpriseGroup.PurgeCutOffDate
				Instance Rules
					LocalPurgeCutOffDate = PrmFinanceEnterpriseGroup.PurgeCutOffDate 
					include PurgeInvoiceHistory

		GetLeaseFiscalYearAndPeriod is an Instance Action
			restricted
			Parameters
				PrmInputDate		is Date

			Parameter Rules
				PrmInputDate
					required			
					LeaseInputDate	= PrmInputDate						

			Action Rules

				if (GLClosePeriodRel exists)
					LeaseFiscalPeriod		= first GLClosePeriodRel.PeriodNumber
					LeaseFiscalYear			= first GLClosePeriodRel.GeneralLedgerCloseYear
