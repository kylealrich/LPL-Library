CompanyCustomerPeriodTotals is a BusinessClass
	owned by ar
	prefix is ARP
	classic name is ARCUSTPER

	Ontology
		symbolic key is CompanyCustomerPeriodTotals
			classic set name is ARPSET1

	Patterns
		implements StaticJava
		implements CreateStamp		
		implements UpdateStamp		
		disable AuditIndex
		disable Auditing

	Persistent Fields

		PeriodBillings				is a PeriodBillX13InArcustper
			classic name is PERIOD-BILL
		PeriodCredits				is a PeriodCrdtsX13InArcustper
			classic name is PERIOD-CRDTS
		PeriodWriteOffs				is a PeriodWroffsX13InArcustper
			classic name is PERIOD-WROFFS
		PeriodPaid					is a PeriodPaidX13InArcustper
		PeriodChargebacks			is a PeriodChgbksX13InArcustper
			classic name is PERIOD-CHGBKS
		PeriodEarnedDiscounts		is a PeriodEaDiscX13InArcustper
			classic name is PERIOD-EA-DISC
		PeriodUnearnedDiscounts		is a PeriodUeDiscX13InArcustper
			classic name is PERIOD-UE-DISC
		
	Local Fields			
		LocalCompany			is like ReceivableCompany
		LocalCustomer			is like Customer

		WorkAmount				is an InternationalAmount
		CurrencyWork			is a ReceivableExchange
		CalculateReceivableYearPeriod			
		LastPeriodDate			is Date
		FirstPeriodDate			is Date
		LocalPeriod				is Numeric 2
		LocalPeriodAlpha		is Alpha 2
		LocalTrigger			is Alpha size 1
		LocalYear				is Alpha 4
		LocalDaysBetweenDates	is Numeric 3
		LastPeriod				is Numeric 3
				
	Context Fields
		ContextPeriod			is a Period
			
	Transient Fields
		TransientYear			is Year
	
	
	Derived Fields
		YearToYear  is a DerivedField
			type is Alpha 4
			restricted
			return (CompanyCustomerPeriodTotals.Year)
			
		YearToDateWriteOffs is a DerivedField
			type is like InternationalAmount
			return (PeriodWriteOffs.PeriodWriteOff[1] + PeriodWriteOffs.PeriodWriteOff[2] + PeriodWriteOffs.PeriodWriteOff[3] + PeriodWriteOffs.PeriodWriteOff[4] + PeriodWriteOffs.PeriodWriteOff[5] + PeriodWriteOffs.PeriodWriteOff[6] + PeriodWriteOffs.PeriodWriteOff[7] + PeriodWriteOffs.PeriodWriteOff[8] + PeriodWriteOffs.PeriodWriteOff[9] + PeriodWriteOffs.PeriodWriteOff[10] + PeriodWriteOffs.PeriodWriteOff[11] + PeriodWriteOffs.PeriodWriteOff[12] + PeriodWriteOffs.PeriodWriteOff[13])

		YearToDateChargebacks is a DerivedField
			type is like InternationalAmount
			return (PeriodChargebacks.PeriodChargeback[1] + PeriodChargebacks.PeriodChargeback[2] + PeriodChargebacks.PeriodChargeback[3] + PeriodChargebacks.PeriodChargeback[4] + PeriodChargebacks.PeriodChargeback[5] + PeriodChargebacks.PeriodChargeback[6] + PeriodChargebacks.PeriodChargeback[7] + PeriodChargebacks.PeriodChargeback[8] + PeriodChargebacks.PeriodChargeback[9] + PeriodChargebacks.PeriodChargeback[10] + PeriodChargebacks.PeriodChargeback[11] + PeriodChargebacks.PeriodChargeback[12] + PeriodChargebacks.PeriodChargeback[13])

		YearToDateCredits is a DerivedField
			type is like InternationalAmount
			return (PeriodCredits.PeriodCredit[1] + PeriodCredits.PeriodCredit[2] + PeriodCredits.PeriodCredit[3] + PeriodCredits.PeriodCredit[4] + PeriodCredits.PeriodCredit[5] + PeriodCredits.PeriodCredit[6] + PeriodCredits.PeriodCredit[7] + PeriodCredits.PeriodCredit[8] + PeriodCredits.PeriodCredit[9] + PeriodCredits.PeriodCredit[10] + PeriodCredits.PeriodCredit[11] + PeriodCredits.PeriodCredit[12] + PeriodCredits.PeriodCredit[13])

		YearToDatePaid is a DerivedField
			type is like InternationalAmount
			return (PeriodPaid.PeriodPaid[1] + PeriodPaid.PeriodPaid[2] + PeriodPaid.PeriodPaid[3] + PeriodPaid.PeriodPaid[4] + PeriodPaid.PeriodPaid[5] + PeriodPaid.PeriodPaid[6] + PeriodPaid.PeriodPaid[7] + PeriodPaid.PeriodPaid[8] + PeriodPaid.PeriodPaid[9] + PeriodPaid.PeriodPaid[10] + PeriodPaid.PeriodPaid[11] + PeriodPaid.PeriodPaid[12] + PeriodPaid.PeriodPaid[13])

		YearToDateSales is a DerivedField
			type is like InternationalAmount
			return (PeriodBillings.PeriodBilling[1] + PeriodBillings.PeriodBilling[2] + PeriodBillings.PeriodBilling[3] + PeriodBillings.PeriodBilling[4] + PeriodBillings.PeriodBilling[5] + PeriodBillings.PeriodBilling[6] + PeriodBillings.PeriodBilling[7] + PeriodBillings.PeriodBilling[8] + PeriodBillings.PeriodBilling[9] + PeriodBillings.PeriodBilling[10] + PeriodBillings.PeriodBilling[11] + PeriodBillings.PeriodBilling[12] + PeriodBillings.PeriodBilling[13])

		YearToDateEarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (PeriodEarnedDiscounts.PeriodEarnedDiscount[1] + PeriodEarnedDiscounts.PeriodEarnedDiscount[2] + PeriodEarnedDiscounts.PeriodEarnedDiscount[3] + PeriodEarnedDiscounts.PeriodEarnedDiscount[4] + PeriodEarnedDiscounts.PeriodEarnedDiscount[5] + PeriodEarnedDiscounts.PeriodEarnedDiscount[6] + PeriodEarnedDiscounts.PeriodEarnedDiscount[7] + PeriodEarnedDiscounts.PeriodEarnedDiscount[8] + PeriodEarnedDiscounts.PeriodEarnedDiscount[9] + PeriodEarnedDiscounts.PeriodEarnedDiscount[10] + PeriodEarnedDiscounts.PeriodEarnedDiscount[11] + PeriodEarnedDiscounts.PeriodEarnedDiscount[12] + PeriodEarnedDiscounts.PeriodEarnedDiscount[13])

		YearToDateUnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12] + PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13])



		NationalAccountPeriod1Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1Sales + NatNationalAccountPeriod1Sales)

		NationalAccountPeriod2Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2Sales + NatNationalAccountPeriod2Sales)

		NationalAccountPeriod3Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount
		SumNationalAccountPeriod3Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3Sales + NatNationalAccountPeriod3Sales)

		NationalAccountPeriod4Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4Sales + NatNationalAccountPeriod4Sales)

		NationalAccountPeriod5Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5Sales + NatNationalAccountPeriod5Sales)

		NationalAccountPeriod6Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6Sales + NatNationalAccountPeriod6Sales)

		NationalAccountPeriod7Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7Sales + NatNationalAccountPeriod7Sales)

		NationalAccountPeriod8Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8Sales + NatNationalAccountPeriod8Sales)

		NationalAccountPeriod9Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9Sales + NatNationalAccountPeriod9Sales)

		NationalAccountPeriod10Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10Sales + NatNationalAccountPeriod10Sales)

		NationalAccountPeriod11Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11Sales + NatNationalAccountPeriod11Sales)

		NationalAccountPeriod12Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12Sales + NatNationalAccountPeriod12Sales)

		NationalAccountPeriod13Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodBillings.PeriodBilling[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13Sales is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodBillings.PeriodBilling[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodBillings.PeriodBilling[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13Sales is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13Sales + NatNationalAccountPeriod13Sales)
			
			
		NationalAccountPeriod1Paid is a DerivedField
			type is like InternationalAmount
			restricted

			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1Paid is a DerivedField
			type is like InternationalAmount
			restricted

			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1Paid + NatNationalAccountPeriod1Paid)

		NationalAccountPeriod2Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2Paid + NatNationalAccountPeriod2Paid)

		NationalAccountPeriod3Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3Paid + NatNationalAccountPeriod3Paid)

		NationalAccountPeriod4Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4Paid + NatNationalAccountPeriod4Paid)

		NationalAccountPeriod5Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5Paid + NatNationalAccountPeriod5Paid)

		NationalAccountPeriod6Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6Paid + NatNationalAccountPeriod6Paid)

		NationalAccountPeriod7Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7Paid + NatNationalAccountPeriod7Paid)

		NationalAccountPeriod8Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8Paid + NatNationalAccountPeriod8Paid)

		NationalAccountPeriod9Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9Paid + NatNationalAccountPeriod9Paid)

		NationalAccountPeriod10Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10Paid + NatNationalAccountPeriod10Paid)

		NationalAccountPeriod11Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11Paid + NatNationalAccountPeriod11Paid)

		NationalAccountPeriod12Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12Paid + NatNationalAccountPeriod12Paid)

		NationalAccountPeriod13Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodPaid.PeriodPaid[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13Paid is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodPaid.PeriodPaid[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodPaid.PeriodPaid[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13Paid is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13Paid + NatNationalAccountPeriod13Paid)



		NationalAccountPeriod1Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1Credits + NatNationalAccountPeriod1Credits)

		NationalAccountPeriod2Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2Credits + NatNationalAccountPeriod2Credits)

		NationalAccountPeriod3Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3Credits + NatNationalAccountPeriod3Credits)

		NationalAccountPeriod4Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4Credits + NatNationalAccountPeriod4Credits)

		NationalAccountPeriod5Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5Credits + NatNationalAccountPeriod5Credits)

		NationalAccountPeriod6Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6Credits + NatNationalAccountPeriod6Credits)

		NationalAccountPeriod7Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7Credits + NatNationalAccountPeriod7Credits)

		NationalAccountPeriod8Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8Credits + NatNationalAccountPeriod8Credits)

		NationalAccountPeriod9Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9Credits + NatNationalAccountPeriod9Credits)

		NationalAccountPeriod10Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10Credits + NatNationalAccountPeriod10Credits)

		NationalAccountPeriod11Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11Credits + NatNationalAccountPeriod11Credits)

		NationalAccountPeriod12Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12Credits + NatNationalAccountPeriod12Credits)	

		NationalAccountPeriod13Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodCredits.PeriodCredit[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13Credits is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodCredits.PeriodCredit[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodCredits.PeriodCredit[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13Credits is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13Credits + NatNationalAccountPeriod13Credits)


		NationalAccountPeriod1WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1WriteOffs + NatNationalAccountPeriod1WriteOffs)

		NationalAccountPeriod2WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2WriteOffs + NatNationalAccountPeriod2WriteOffs)

		NationalAccountPeriod3WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3WriteOffs + NatNationalAccountPeriod3WriteOffs)

		NationalAccountPeriod4WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4WriteOffs + NatNationalAccountPeriod4WriteOffs)

		NationalAccountPeriod5WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5WriteOffs + NatNationalAccountPeriod5WriteOffs)

		NationalAccountPeriod6WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6WriteOffs + NatNationalAccountPeriod6WriteOffs)

		NationalAccountPeriod7WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7WriteOffs + NatNationalAccountPeriod7WriteOffs)

		NationalAccountPeriod8WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8WriteOffs + NatNationalAccountPeriod8WriteOffs)

		NationalAccountPeriod9WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9WriteOffs is a DerivedField
			type is like InternationalAmount
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9WriteOffs + NatNationalAccountPeriod9WriteOffs)

		NationalAccountPeriod10WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10WriteOffs + NatNationalAccountPeriod10WriteOffs)

		NationalAccountPeriod11WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11WriteOffs + NatNationalAccountPeriod11WriteOffs)

		NationalAccountPeriod12WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12WriteOffs + NatNationalAccountPeriod12WriteOffs)

		NationalAccountPeriod13WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodWriteOffs.PeriodWriteOff[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13WriteOffs is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodWriteOffs.PeriodWriteOff[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodWriteOffs.PeriodWriteOff[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13WriteOffs is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13WriteOffs + NatNationalAccountPeriod13WriteOffs)



		NationalAccountPeriod1Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1Chargebacks + NatNationalAccountPeriod1Chargebacks)

		NationalAccountPeriod2Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2Chargebacks + NatNationalAccountPeriod2Chargebacks)

		NationalAccountPeriod3Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3Chargebacks + NatNationalAccountPeriod3Chargebacks)

		NationalAccountPeriod4Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4Chargebacks + NatNationalAccountPeriod4Chargebacks)

		NationalAccountPeriod5Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5Chargebacks + NatNationalAccountPeriod5Chargebacks)

		NationalAccountPeriod6Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6Chargebacks + NatNationalAccountPeriod6Chargebacks)

		NationalAccountPeriod7Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7Chargebacks + NatNationalAccountPeriod7Chargebacks)

		NationalAccountPeriod8Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8Chargebacks + NatNationalAccountPeriod8Chargebacks)

		NationalAccountPeriod9Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9Chargebacks + NatNationalAccountPeriod9Chargebacks)

		NationalAccountPeriod10Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10Chargebacks + NatNationalAccountPeriod10Chargebacks)

		NationalAccountPeriod11Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11Chargebacks + NatNationalAccountPeriod11Chargebacks)

		NationalAccountPeriod12Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12Chargebacks + NatNationalAccountPeriod12Chargebacks)

		NationalAccountPeriod13Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodChargebacks.PeriodChargeback[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13Chargebacks is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodChargebacks.PeriodChargeback[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodChargebacks.PeriodChargeback[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13Chargebacks is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13Chargebacks + NatNationalAccountPeriod13Chargebacks)



		NationalAccountPeriod1EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1EarnedDiscounts + NatNationalAccountPeriod1EarnedDiscounts)

		NationalAccountPeriod2EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2EarnedDiscounts + NatNationalAccountPeriod2EarnedDiscounts)

		NationalAccountPeriod3EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3EarnedDiscounts + NatNationalAccountPeriod3EarnedDiscounts)

		NationalAccountPeriod4EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4EarnedDiscounts + NatNationalAccountPeriod4EarnedDiscounts)

		NationalAccountPeriod5EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5EarnedDiscounts + NatNationalAccountPeriod5EarnedDiscounts)

		NationalAccountPeriod6EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6EarnedDiscounts + NatNationalAccountPeriod6EarnedDiscounts)

		NationalAccountPeriod7EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7EarnedDiscounts + NatNationalAccountPeriod7EarnedDiscounts)

		NationalAccountPeriod8EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8EarnedDiscounts + NatNationalAccountPeriod8EarnedDiscounts)

		NationalAccountPeriod9EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9EarnedDiscounts + NatNationalAccountPeriod9EarnedDiscounts)

		NationalAccountPeriod10EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10EarnedDiscounts + NatNationalAccountPeriod10EarnedDiscounts)

		NationalAccountPeriod11EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11EarnedDiscounts + NatNationalAccountPeriod11EarnedDiscounts)

		NationalAccountPeriod12EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12EarnedDiscounts + NatNationalAccountPeriod12EarnedDiscounts)

		NationalAccountPeriod13EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodEarnedDiscounts.PeriodEarnedDiscount[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodEarnedDiscounts.PeriodEarnedDiscount[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodEarnedDiscounts.PeriodEarnedDiscount[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13EarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13EarnedDiscounts + NatNationalAccountPeriod13EarnedDiscounts)




		NationalAccountPeriod1UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod1UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod1UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod1UnearnedDiscounts + NatNationalAccountPeriod1UnearnedDiscounts)

		NationalAccountPeriod2UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod2UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod2UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod2UnearnedDiscounts + NatNationalAccountPeriod2UnearnedDiscounts)

		NationalAccountPeriod3UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod3UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod3UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod3UnearnedDiscounts + NatNationalAccountPeriod3UnearnedDiscounts)

		NationalAccountPeriod4UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod4UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod4UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod4UnearnedDiscounts + NatNationalAccountPeriod4UnearnedDiscounts)

		NationalAccountPeriod5UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod5UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod5UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod5UnearnedDiscounts + NatNationalAccountPeriod5UnearnedDiscounts)

		NationalAccountPeriod6UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod6UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod6UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod6UnearnedDiscounts + NatNationalAccountPeriod6UnearnedDiscounts)

		NationalAccountPeriod7UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod7UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod7UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod7UnearnedDiscounts + NatNationalAccountPeriod7UnearnedDiscounts)

		NationalAccountPeriod8UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod8UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod8UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod8UnearnedDiscounts + NatNationalAccountPeriod8UnearnedDiscounts)

		NationalAccountPeriod9UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod9UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod9UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod9UnearnedDiscounts + NatNationalAccountPeriod9UnearnedDiscounts)

		NationalAccountPeriod10UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod10UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod10UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod10UnearnedDiscounts + NatNationalAccountPeriod10UnearnedDiscounts)

		NationalAccountPeriod11UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod11UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod11UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod11UnearnedDiscounts + NatNationalAccountPeriod11UnearnedDiscounts)

		NationalAccountPeriod12UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod12UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod12UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod12UnearnedDiscounts + NatNationalAccountPeriod12UnearnedDiscounts)

		NationalAccountPeriod13UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			for each NationalAccountChildrenRel
				LocalCompany = each.NationalAccount.InvoiceAccountGroup.Company
				LocalCustomer = each.NationalAccount.InvoiceAccountGroup.Customer
				if (each.NationalAccount.InvoiceAccountGroup.Company.Currency = Company.CustomerGroupField.CustomerGroup.Currency)
					WorkAmount									+= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13]
				else
					CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
					CurrencyWork.ExchangeDate					= current corporate date
					CurrencyWork.TransactionAmount				= LocalChildPeriodTotalsRel.PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13]
					CurrencyWork.FromCurrency					= each.NationalAccount.InvoiceAccountGroup.Company.Currency 
					CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency 
					WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		NatNationalAccountPeriod13UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			restricted
			initialize WorkAmount
			if (Company = Company.CustomerGroupField.CustomerGroup.Currency)
				WorkAmount									= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13]
			else
				CurrencyWork.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				CurrencyWork.ExchangeDate					= current corporate date
				CurrencyWork.TransactionAmount				= PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13]
				CurrencyWork.FromCurrency					= Company.Currency 
				CurrencyWork.BaseAmount.ToCurrency			= Company.CustomerGroupField.CustomerGroup.Currency
				WorkAmount									+= CurrencyWork.BaseAmount.OutputCurrencyAmount
			return WorkAmount	
		SumNationalAccountPeriod13UnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (NationalAccountPeriod13UnearnedDiscounts + NatNationalAccountPeriod13UnearnedDiscounts)


		SumNationalAccountAllPeriodSales is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1Sales + SumNationalAccountPeriod2Sales + SumNationalAccountPeriod3Sales + SumNationalAccountPeriod4Sales + SumNationalAccountPeriod5Sales + SumNationalAccountPeriod6Sales + SumNationalAccountPeriod7Sales + SumNationalAccountPeriod8Sales + SumNationalAccountPeriod9Sales + SumNationalAccountPeriod10Sales + SumNationalAccountPeriod11Sales + SumNationalAccountPeriod12Sales + SumNationalAccountPeriod13Sales)

		SumNationalAccountAllPeriodPaid is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1Paid + SumNationalAccountPeriod2Paid + SumNationalAccountPeriod3Paid + SumNationalAccountPeriod4Paid + SumNationalAccountPeriod5Paid + SumNationalAccountPeriod6Paid + SumNationalAccountPeriod7Paid + SumNationalAccountPeriod8Paid + SumNationalAccountPeriod9Paid + SumNationalAccountPeriod10Paid + SumNationalAccountPeriod11Paid + SumNationalAccountPeriod12Paid + SumNationalAccountPeriod13Paid)

		SumNationalAccountAllPeriodCredits is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1Credits + SumNationalAccountPeriod2Credits + SumNationalAccountPeriod3Credits + SumNationalAccountPeriod4Credits + SumNationalAccountPeriod5Credits + SumNationalAccountPeriod6Credits + SumNationalAccountPeriod7Credits + SumNationalAccountPeriod8Credits + SumNationalAccountPeriod9Credits + SumNationalAccountPeriod10Credits + SumNationalAccountPeriod11Credits + SumNationalAccountPeriod12Credits + SumNationalAccountPeriod13Credits)

		SumNationalAccountAllPeriodWriteOffs is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1WriteOffs + SumNationalAccountPeriod2WriteOffs + SumNationalAccountPeriod3WriteOffs + SumNationalAccountPeriod4WriteOffs + SumNationalAccountPeriod5WriteOffs + SumNationalAccountPeriod6WriteOffs + SumNationalAccountPeriod7WriteOffs + SumNationalAccountPeriod8WriteOffs + SumNationalAccountPeriod9WriteOffs + SumNationalAccountPeriod10WriteOffs + SumNationalAccountPeriod11WriteOffs + SumNationalAccountPeriod12WriteOffs + SumNationalAccountPeriod13WriteOffs)

		SumNationalAccountAllPeriodChargebacks is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1Chargebacks + SumNationalAccountPeriod2Chargebacks + SumNationalAccountPeriod3Chargebacks + SumNationalAccountPeriod4Chargebacks + SumNationalAccountPeriod5Chargebacks + SumNationalAccountPeriod6Chargebacks + SumNationalAccountPeriod7Chargebacks + SumNationalAccountPeriod8Chargebacks + SumNationalAccountPeriod9Chargebacks + SumNationalAccountPeriod10Chargebacks + SumNationalAccountPeriod11Chargebacks + SumNationalAccountPeriod12Chargebacks + SumNationalAccountPeriod13Chargebacks)

		SumNationalAccountAllPeriodEarnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1EarnedDiscounts + SumNationalAccountPeriod2EarnedDiscounts + SumNationalAccountPeriod3EarnedDiscounts + SumNationalAccountPeriod4EarnedDiscounts + SumNationalAccountPeriod5EarnedDiscounts + SumNationalAccountPeriod6EarnedDiscounts + SumNationalAccountPeriod7EarnedDiscounts + SumNationalAccountPeriod8EarnedDiscounts + SumNationalAccountPeriod9EarnedDiscounts + SumNationalAccountPeriod10EarnedDiscounts + SumNationalAccountPeriod11EarnedDiscounts + SumNationalAccountPeriod12EarnedDiscounts + SumNationalAccountPeriod13EarnedDiscounts)

		SumNationalAccountAllPeriodUnearnedDiscounts is a DerivedField
			type is like InternationalAmount
			return (SumNationalAccountPeriod1UnearnedDiscounts + SumNationalAccountPeriod2UnearnedDiscounts + SumNationalAccountPeriod3UnearnedDiscounts + SumNationalAccountPeriod4UnearnedDiscounts + SumNationalAccountPeriod5UnearnedDiscounts + SumNationalAccountPeriod6UnearnedDiscounts + SumNationalAccountPeriod7UnearnedDiscounts + SumNationalAccountPeriod8UnearnedDiscounts + SumNationalAccountPeriod9UnearnedDiscounts + SumNationalAccountPeriod10UnearnedDiscounts + SumNationalAccountPeriod11UnearnedDiscounts + SumNationalAccountPeriod12UnearnedDiscounts + SumNationalAccountPeriod13UnearnedDiscounts)


		Period1OpeningAR is a DerivedField	
			type is like InternationalAmount
			restricted
			if (PYCompanyPeriodTotalsRel exists)
				if (Company.PeriodsPerYear.Twelve)	
					return (last PYCompanyPeriodTotalsRel.ClosingAR12)
				else
					return (last PYCompanyPeriodTotalsRel.ClosingAR13)
			else
				return 0
		
		ClosingAR1 is a DerivedField
			type is like InternationalAmount
			restricted
			return (Period1OpeningAR + PeriodBillings.PeriodBilling[1] - PeriodCredits.PeriodCredit[1] - PeriodWriteOffs.PeriodWriteOff[1] - PeriodPaid.PeriodPaid[1] + PeriodChargebacks.PeriodChargeback[1] - PeriodEarnedDiscounts.PeriodEarnedDiscount[1] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[1])
			
		AverageAR1 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR1)/2)

		ClosingAR2 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR1 + PeriodBillings.PeriodBilling[2] - PeriodCredits.PeriodCredit[2] - PeriodWriteOffs.PeriodWriteOff[2] - PeriodPaid.PeriodPaid[2] + PeriodChargebacks.PeriodChargeback[2] - PeriodEarnedDiscounts.PeriodEarnedDiscount[2] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[2])
		
		AverageAR2 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR2)/2)

		ClosingAR3 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR2 + PeriodBillings.PeriodBilling[3] - PeriodCredits.PeriodCredit[3] - PeriodWriteOffs.PeriodWriteOff[3] - PeriodPaid.PeriodPaid[3] + PeriodChargebacks.PeriodChargeback[3] - PeriodEarnedDiscounts.PeriodEarnedDiscount[3] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[3])
					
		AverageAR3 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR3)/2)

		ClosingAR4 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR3 + PeriodBillings.PeriodBilling[4] - PeriodCredits.PeriodCredit[4] - PeriodWriteOffs.PeriodWriteOff[4] - PeriodPaid.PeriodPaid[4] + PeriodChargebacks.PeriodChargeback[4] - PeriodEarnedDiscounts.PeriodEarnedDiscount[4] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[4])

		AverageAR4 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR4)/2)

		ClosingAR5 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR4 + PeriodBillings.PeriodBilling[5] - PeriodCredits.PeriodCredit[5] - PeriodWriteOffs.PeriodWriteOff[5] - PeriodPaid.PeriodPaid[5] + PeriodChargebacks.PeriodChargeback[5] - PeriodEarnedDiscounts.PeriodEarnedDiscount[5] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[5])
		
		AverageAR5 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR5)/2)

		ClosingAR6 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR5 + PeriodBillings.PeriodBilling[6] - PeriodCredits.PeriodCredit[6] - PeriodWriteOffs.PeriodWriteOff[6] - PeriodPaid.PeriodPaid[6] + PeriodChargebacks.PeriodChargeback[6] - PeriodEarnedDiscounts.PeriodEarnedDiscount[6] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[6])				
			
		AverageAR6 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR6)/2)

		ClosingAR7 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR6 + PeriodBillings.PeriodBilling[7] - PeriodCredits.PeriodCredit[7] - PeriodWriteOffs.PeriodWriteOff[7] - PeriodPaid.PeriodPaid[7] + PeriodChargebacks.PeriodChargeback[7] - PeriodEarnedDiscounts.PeriodEarnedDiscount[7] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[7])
		
		AverageAR7 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR7)/2)

		ClosingAR8 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR7 + PeriodBillings.PeriodBilling[8] - PeriodCredits.PeriodCredit[8] - PeriodWriteOffs.PeriodWriteOff[8] - PeriodPaid.PeriodPaid[8] + PeriodChargebacks.PeriodChargeback[8] - PeriodEarnedDiscounts.PeriodEarnedDiscount[8] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[8])
		
		AverageAR8 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR8)/2)												

		ClosingAR9 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR8 + PeriodBillings.PeriodBilling[9] - PeriodCredits.PeriodCredit[9] - PeriodWriteOffs.PeriodWriteOff[9] - PeriodPaid.PeriodPaid[9] + PeriodChargebacks.PeriodChargeback[9] - PeriodEarnedDiscounts.PeriodEarnedDiscount[9] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[9])			
		
		AverageAR9 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR9)/2)

		ClosingAR10 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR9 + PeriodBillings.PeriodBilling[10] - PeriodCredits.PeriodCredit[10] - PeriodWriteOffs.PeriodWriteOff[10] - PeriodPaid.PeriodPaid[10] + PeriodChargebacks.PeriodChargeback[10] - PeriodEarnedDiscounts.PeriodEarnedDiscount[10] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[10])
		
		AverageAR10 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR10)/2) 

		ClosingAR11 is a DerivedField
			type is like InternationalAmount
			restricted
			return (ClosingAR10 + PeriodBillings.PeriodBilling[11] - PeriodCredits.PeriodCredit[11] - PeriodWriteOffs.PeriodWriteOff[11] - PeriodPaid.PeriodPaid[11] + PeriodChargebacks.PeriodChargeback[11] - PeriodEarnedDiscounts.PeriodEarnedDiscount[11] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[11])
		
		AverageAR11 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR11)/2)								

		ClosingAR12 is a DerivedField
			type is like InternationalAmount
			restricted
			return ( ClosingAR11 + PeriodBillings.PeriodBilling[12] - PeriodCredits.PeriodCredit[12] - PeriodWriteOffs.PeriodWriteOff[12] - PeriodPaid.PeriodPaid[12] + PeriodChargebacks.PeriodChargeback[12] - PeriodEarnedDiscounts.PeriodEarnedDiscount[12] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[12])
		
		AverageAR12 is a DerivedField
			type is like InternationalAmount
			restricted
			return ((Period1OpeningAR + ClosingAR12)/2)

		ClosingAR13 is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.PeriodsPerYear.Twelve)
				return 0
			else			
				return (ClosingAR12 + PeriodBillings.PeriodBilling[13] - PeriodCredits.PeriodCredit[13] - PeriodWriteOffs.PeriodWriteOff[13] - PeriodPaid.PeriodPaid[13] + PeriodChargebacks.PeriodChargeback[13] - PeriodEarnedDiscounts.PeriodEarnedDiscount[13] - PeriodUnearnedDiscounts.PeriodUnearnedDiscount[13])
		
		AverageAR13 is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.PeriodsPerYear.Twelve)
				return 0
			else
				return ((Period1OpeningAR + ClosingAR13)/2)
			
		DerivedPeriodDate is a DerivedField
			type is Date
			restricted
			return DerivedDateAlpha		
					
		DerivedDateAlpha is a DerivedField
			type is Alpha 8
			restricted
			return LocalYear + LocalPeriodAlpha + "01" 
					
		SumofNoofDaysInPeriods	is a DerivedField
			type is Numeric 3
			restricted
			LocalYear			= CompanyCustomerPeriodTotals.Year
			LocalPeriodAlpha	= LocalPeriod using "%02d"
			LastPeriod			= LocalPeriod

			CalculateReceivableYearPeriod.Company			= Company
			CalculateReceivableYearPeriod.EffectiveDate		= DerivedPeriodDate
			LocalTrigger		= CalculateReceivableYearPeriod.CalculateYearPeriod
			LocalYear			= CalculateReceivableYearPeriod.CurrentYear
			LocalPeriod			= CalculateReceivableYearPeriod.CurrentPeriod
			LocalPeriodAlpha	= LocalPeriod using "%02d"
			LastPeriodDate		= DerivedPeriodDate last date in month
			
			LocalYear			= CompanyCustomerPeriodTotals.Year
			LocalPeriodAlpha	= "01"

			CalculateReceivableYearPeriod.Company			= Company
			CalculateReceivableYearPeriod.EffectiveDate		= DerivedPeriodDate
			LocalTrigger		= CalculateReceivableYearPeriod.CalculateYearPeriod
			LocalYear			= CalculateReceivableYearPeriod.CurrentYear
			LocalPeriod			= CalculateReceivableYearPeriod.CurrentPeriod
			LocalPeriodAlpha	= LocalPeriod using "%02d"
			FirstPeriodDate		= DerivedPeriodDate first date in month
			if (Company.PeriodsPerYear.Twelve)
				LocalDaysBetweenDates = ((LastPeriodDate - FirstPeriodDate) + 1)
			else
				LocalDaysBetweenDates = (LastPeriod * 28)
			return (LocalDaysBetweenDates)

		Period1Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 01
			return (SumofNoofDaysInPeriods)	
			
		Period2Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 02
			return (SumofNoofDaysInPeriods)
			
		Period3Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 03
			return (SumofNoofDaysInPeriods)
						
		Period4Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 04
			return (SumofNoofDaysInPeriods)
			
		Period5Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 05
			return (SumofNoofDaysInPeriods)
			
		Period6Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 06
			return (SumofNoofDaysInPeriods)
			
		Period7Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 07
			return (SumofNoofDaysInPeriods)	
			
		Period8Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 08
			return (SumofNoofDaysInPeriods)
			
		Period9Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 09
			return (SumofNoofDaysInPeriods)
						
		Period10Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 10
			return (SumofNoofDaysInPeriods)
			
		Period11Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 11
			return (SumofNoofDaysInPeriods)
			
		Period12Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 12
			return (SumofNoofDaysInPeriods)
			
		Period13Days	is a DerivedField
			type is Numeric 3
			restricted
			LocalPeriod			= 13
			if (Company.PeriodsPerYear.Twelve)
				return 0
			else			
				return (SumofNoofDaysInPeriods)																		

		DSO1 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR1 / sum NetSales1) * max Period1Days)
			
		DSO2 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR2 / sum NetSales2) * max Period2Days)
			
		DSO3 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR3 / sum NetSales3) * max Period3Days)
			
		DSO4 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR4 / sum NetSales4) * max Period4Days)
			
		DSO5 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR5 / sum NetSales5) * max Period5Days)
			
		DSO6 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR6 / sum NetSales6) * max Period6Days)
			
		DSO7 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR7 / sum NetSales7) * max Period7Days)
			
		DSO8 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR8 / sum NetSales8) * max Period8Days)
			
		DSO9 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR9 / sum NetSales9) * max Period9Days)
			
		DSO10 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR10 / sum NetSales10) * max Period10Days)

		DSO11 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR11 / sum NetSales11) * max Period11Days)
			
		DSO12 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR12 / sum NetSales12) * max Period12Days)
			
		DSO13 is a MeasureField
			type is like InternationalAmount
			((sum AverageAR13 / sum NetSales13) * max Period13Days)																	




		NetSales1 is a DerivedField
			type is like InternationalAmount
			restricted
			return PeriodBillings.PeriodBilling[1] - PeriodCredits.PeriodCredit[1]

		NetSales2 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales1 + PeriodBillings.PeriodBilling[2] - PeriodCredits.PeriodCredit[2]
			
		NetSales3 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales2 + PeriodBillings.PeriodBilling[3] - PeriodCredits.PeriodCredit[3]
			
		NetSales4 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales3 + PeriodBillings.PeriodBilling[4] - PeriodCredits.PeriodCredit[4]
			
		NetSales5 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales4 + PeriodBillings.PeriodBilling[5] - PeriodCredits.PeriodCredit[5]
			
		NetSales6 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales5 + PeriodBillings.PeriodBilling[6] - PeriodCredits.PeriodCredit[6]
			
		NetSales7 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales6 + PeriodBillings.PeriodBilling[7] - PeriodCredits.PeriodCredit[7]

		NetSales8 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales7 + PeriodBillings.PeriodBilling[8] - PeriodCredits.PeriodCredit[8]																					

		NetSales9 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales8 + PeriodBillings.PeriodBilling[9] - PeriodCredits.PeriodCredit[9]

		NetSales10 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales9 + PeriodBillings.PeriodBilling[10] - PeriodCredits.PeriodCredit[10]
			
		NetSales11 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales10 + PeriodBillings.PeriodBilling[11] - PeriodCredits.PeriodCredit[11]
			
		NetSales12 is a DerivedField
			type is like InternationalAmount
			restricted
			return NetSales11 + PeriodBillings.PeriodBilling[12] - PeriodCredits.PeriodCredit[12]
			
		NetSales13 is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.PeriodsPerYear.Twelve)
				return 0
			else			
				return NetSales12 + PeriodBillings.PeriodBilling[13] - PeriodCredits.PeriodCredit[13]

		

		DerivedPeriodWriteoff1 is a DerivedField
			type is like InternationalAmount
			restricted
			return PeriodWriteOffs.PeriodWriteOff[1]
				
		DerivedPeriodWriteoff2 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff1 + PeriodWriteOffs.PeriodWriteOff[2])
			
		DerivedPeriodWriteoff3 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff2 + PeriodWriteOffs.PeriodWriteOff[3])
				
		DerivedPeriodWriteoff4 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff3 + PeriodWriteOffs.PeriodWriteOff[4])
			
		DerivedPeriodWriteoff5 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff4 + PeriodWriteOffs.PeriodWriteOff[5])
				
		DerivedPeriodWriteoff6 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff5 + PeriodWriteOffs.PeriodWriteOff[6])

		DerivedPeriodWriteoff7 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff6 + PeriodWriteOffs.PeriodWriteOff[7])
				
		DerivedPeriodWriteoff8 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff7 + PeriodWriteOffs.PeriodWriteOff[8])
			
		DerivedPeriodWriteoff9 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff8 + PeriodWriteOffs.PeriodWriteOff[9])
				
		DerivedPeriodWriteoff10 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff9 + PeriodWriteOffs.PeriodWriteOff[10])
			
		DerivedPeriodWriteoff11 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff10 + PeriodWriteOffs.PeriodWriteOff[11])
				
		DerivedPeriodWriteoff12 is a DerivedField
			type is like InternationalAmount
			restricted
			return (DerivedPeriodWriteoff11 + PeriodWriteOffs.PeriodWriteOff[12])
			
		DerivedPeriodWriteoff13 is a DerivedField
			type is like InternationalAmount
			restricted
			if (Company.PeriodsPerYear.Twelve)
				return 0
			else			
				return (DerivedPeriodWriteoff12 + PeriodWriteOffs.PeriodWriteOff[13])			
					
		MeasureWOR1 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff1 / sum NetSales1)			
		
		MeasureWOR2 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff2 / sum NetSales2)		
			
		MeasureWOR3 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff3 / sum NetSales3)

		MeasureWOR4 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff4 / sum NetSales4)			

		MeasureWOR5 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff5 / sum NetSales5)

		MeasureWOR6 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff6 / sum NetSales6)									

		MeasureWOR7 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff7 / sum NetSales7)
			
		MeasureWOR8 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff8 / sum NetSales8)
				
		MeasureWOR9 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff9 / sum NetSales9)

		MeasureWOR10 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff10 / sum NetSales10)			

		MeasureWOR11 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff11 / sum NetSales11)

		MeasureWOR12 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff12 / sum NetSales12)									

		MeasureWOR13 is a MeasureField
			type is like Percent
			(sum DerivedPeriodWriteoff13 / sum NetSales13)									


	Relations
		CompanyPeriodTotalRel
			one-to-one relation to CompanyPeriodTotal
			Field Mapping uses symbolic key
				related.Company							= LocalCompany
				related.CompanyPeriodTotal.Year			= LocalYear

		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company							= LocalCompany
				
		NationalAccountChildrenRel
			one-to-many relation to NationalAccount
			Field Mapping uses Set5
				related.NationalAccount.NationalAccountGroup.NatCompany		= Company
				related.NationalAccount.NationalAccountGroup.NatCustomer	= CompanyCustomerPeriodTotals.Customer	
			
		LocalChildPeriodTotalsRel
			one-to-one relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company												= LocalCompany
				related.CompanyCustomerPeriodTotals.Customer				= LocalCustomer
				related.CompanyCustomerPeriodTotals.Year					= CompanyCustomerPeriodTotals.Year

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		CompanySecurityGroupMemberRel	
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

		CompanyCustomerRel		
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company				= Company
				related.Customer			= CompanyCustomerPeriodTotals.Customer
				
		PYCompanyPeriodTotalsRel
			one-to-many relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company									 = Company
			Instance Selection	
				where (related.CompanyCustomerPeriodTotals.Customer  = CompanyCustomerPeriodTotals.Customer
				and related.CompanyCustomerPeriodTotals.Year	< CompanyCustomerPeriodTotals.Year)

		CYCompanyPeriodTotalsRel
			one-to-many relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company									 = Company
			Instance Selection	
				where (related.CompanyCustomerPeriodTotals.Year		 = CompanyCustomerPeriodTotals.Year)

		CompanyCustomerPeriodTotalsRel
			one-to-one relation to CompanyCustomerPeriodTotals
			Field Mapping uses symbolic key
				related.Company									 = Company
				related.CompanyCustomerPeriodTotals.Customer	 = CompanyCustomerPeriodTotals.Customer
				related.CompanyCustomerPeriodTotals.Year		 = CompanyCustomerPeriodTotals.Year - 1		
					
		
	Conditions
		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		SecurityGroupAllowsAccess	
			when (actor.context.CompanySecurityGroup = blank
			or	   CompanySecurityGroupMemberRel exists)

		IsPeriod1		
			when (ContextPeriod = 1)
		IsPeriod2
			when (ContextPeriod = 2)
		IsPeriod3
			when (ContextPeriod = 3)
		IsPeriod4
			when (ContextPeriod = 4)
		IsPeriod5
			when (ContextPeriod = 5)
		IsPeriod6
			when (ContextPeriod = 6)
		IsPeriod7
			when (ContextPeriod = 7)
		IsPeriod8
			when (ContextPeriod = 8)
		IsPeriod9
			when (ContextPeriod = 9)
		IsPeriod10
			when (ContextPeriod = 10)
		IsPeriod11
			when (ContextPeriod = 11)
		IsPeriod12
			when (ContextPeriod = 12)										
		IsPeriod13
			when (ContextPeriod = 13)
			
	Actions
		Create is a Create Action
			restricted

		Update is an Update Action
			restricted

		AddToBuckets is an Instance Action
			restricted
			Parameters
				Type is Alpha 1
				Amount is like InternationalAmount
				Amount2 is like InternationalAmount
				Period is Numeric 3
			Action Rules
				if (Type = "P"
				or  Type = "R")
					PeriodPaid.PeriodPaid[Period]							+= Amount
				else
				if (Type = "B")
					PeriodBillings.PeriodBilling[Period]					+= Amount
				else
				if (Type = "M")
					PeriodCredits.PeriodCredit[Period]						+= Amount
				else
				if (Type = "W")
					PeriodWriteOffs.PeriodWriteOff[Period]					+= Amount
				else
				if (Type = "C")
					PeriodChargebacks.PeriodChargeback[Period]				+= Amount
				else
				if (Type = "D")
					PeriodEarnedDiscounts.PeriodEarnedDiscount[Period]		+= Amount
					PeriodUnearnedDiscounts.PeriodUnearnedDiscount[Period]	+= Amount2

				LocalCompany 	= Company
				LocalYear 		= CompanyCustomerPeriodTotals.Year

				invoke AddToBuckets CompanyPeriodTotalRel
					invoked.Type = Type
					invoked.Amount = Amount
					invoked.Amount2 = Amount2
					invoked.Period = Period



		Delete is a Delete Action
			restricted 

		Purge is a Purge Action
			restricted
											
		RefreshData is an Import Action	
			Local Fields
				RepSet is a ReplicationSet
			Action Rules
				RepSet = "FSM_COLUMNAR_AR_ST"
				invoke Replicate RepSet	

		UpdateCompanyPeriodTotals is a Set Action
			Local Fields
				LocalPeriodBillings				is a PeriodBillX13InArcustper
				LocalPeriodCredits				is a PeriodCrdtsX13InArcustper
				LocalPeriodWriteOffs			is a PeriodWroffsX13InArcustper
				LocalPeriodPaid					is a PeriodPaidX13InArcustper
				LocalPeriodChargebacks			is a PeriodChgbksX13InArcustper
				LocalPeriodEarnedDiscounts		is a PeriodEaDiscX13InArcustper
				LocalPeriodUnearnedDiscounts	is a PeriodUeDiscX13InArcustper


			Sort Order
				Company
				CompanyCustomerPeriodTotals.Year

			Action Rules
				CompanyCustomerPeriodTotals.Year Set Rules
					Exit Rules
						LocalCompany = Company
						LocalYear    = CompanyCustomerPeriodTotals.Year

						if (ReceivableCompanyRel exists)
							invoke Update CompanyPeriodTotalRel
								invoked.PeriodBillings 				 = LocalPeriodBillings
								invoked.PeriodCredits 				 = LocalPeriodCredits
								invoked.PeriodWriteOffs 			 = LocalPeriodWriteOffs
								invoked.PeriodPaid 					 = LocalPeriodPaid
								invoked.PeriodChargebacks			 = LocalPeriodChargebacks
								invoked.PeriodEarnedDiscounts 		 = LocalPeriodEarnedDiscounts
								invoked.PeriodUnearnedDiscounts	     = LocalPeriodUnearnedDiscounts

						initialize LocalPeriodBillings
						initialize LocalPeriodCredits
						initialize LocalPeriodWriteOffs
						initialize LocalPeriodPaid
						initialize LocalPeriodChargebacks
						initialize LocalPeriodEarnedDiscounts
						initialize LocalPeriodUnearnedDiscounts

				Instance Rules
					LocalPeriod = 1
					while (LocalPeriod <= 13)
						LocalPeriodPaid.PeriodPaid[LocalPeriod] 			+=  PeriodPaid.PeriodPaid[LocalPeriod]
						LocalPeriodBillings.PeriodBilling[LocalPeriod]		+=  PeriodBillings.PeriodBilling[LocalPeriod]
						LocalPeriodCredits.PeriodCredit[LocalPeriod]		+=  PeriodCredits.PeriodCredit[LocalPeriod]
						LocalPeriodWriteOffs.PeriodWriteOff[LocalPeriod]	+=  PeriodWriteOffs.PeriodWriteOff[LocalPeriod]
						LocalPeriodChargebacks.PeriodChargeback[LocalPeriod] += PeriodChargebacks.PeriodChargeback[LocalPeriod]
						LocalPeriodEarnedDiscounts.PeriodEarnedDiscount[LocalPeriod] += PeriodEarnedDiscounts.PeriodEarnedDiscount[LocalPeriod]
						LocalPeriodUnearnedDiscounts.PeriodUnearnedDiscount[LocalPeriod] += PeriodUnearnedDiscounts.PeriodUnearnedDiscount[LocalPeriod]
						LocalPeriod	 +=  1
					initialize LocalPeriod

			

