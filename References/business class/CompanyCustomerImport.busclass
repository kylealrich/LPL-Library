CompanyCustomerImport is a BusinessClass
	owned by ar
	prefix is CUS
	classic name is ARICST

	Ontology
		symbolic key is CompanyCustomerImport
			classic set name is CUSSET1

	Patterns
		disable AuditIndex
		disable Auditing 
		disable EffectiveDated
		disable DataTranslations
		implements InlineUserFields
			size is 1000

	Persistent Fields
		RunGroup
		ActionCd   // States: AddACustomer	value is "A" /  ChangeACustomer value is "C"
			default label is "ActionCode"
		NewCustomer										is like Customer
		Name											is a VendorName 
			holds pii
		SearchName
		SearchNameChangeIndicator						is an AutoChg
		LegalName
		LegalNameChangeIndicator						is an AutoChg
		PostalAddress									is a PostalAddressV2	
			holds pii
			classic name for PostalAddress.DeliveryAddress.AddressLine1 is ADDR1
			classic name for PostalAddress.DeliveryAddress.AddressLine2 is ADDR2
			classic name for PostalAddress.DeliveryAddress.AddressLine3 is ADDR3
			classic name for PostalAddress.DeliveryAddress.AddressLine4 is ADDR4
			classic name for PostalAddress.Municipality is CITY
			classic name for PostalAddress.StateProvince is STATE
			classic name for PostalAddress.PostalCode is ZIP
			classic name for PostalAddress.County  is COUNTY
			classic name for PostalAddress.Country is COUNTRY-CODE
			classic name for PostalAddress.Region  is REGION
		AddressLine1ChangeIndicator						is an AutoChg
			classic name is ADDR1-CHG
		AddressLine2ChangeIndicator						is an AutoChg
			classic name is ADDR2-CHG
		AddressLine3ChangeIndicator						is an AutoChg
			classic name is ADDR3-CHG
		AddressLine4ChangeIndicator						is an AutoChg
			classic name is ADDR4-CHG
		CityChangeIndicator								is an AutoChg
			classic name is CITY-CHG
		StateChangeIndicator							is an AutoChg
			classic name is STATE-CHG
		PostalCodeChangeIndicator						is an AutoChg
			classic name is ZIP-CHG
		CountyChangeIndicator							is an AutoChg
			classic name is COUNTY-CHG
		CountryCodeChangeIndicator						is an AutoChg
			classic name is COUNTRY-CD-CHG
		RegionCodeChangeIndicator						is an AutoChg
			classic name is REGION-CHG
		AddressTypeChangeIndicator						is an AutoChg
		CustomerContact									is AlphaUpper size 20
			classic name is CONTACT-GROUP
		CustomerContactChangeIndicator					is an AutoChg
			classic name is CONT-GROUP-CHG
		Title
		ContactTitleChangeIndicator						is an AutoChg
			classic name is TITLE-CHG
		PhoneNumber										is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber.InternationalPrefix is INT-PREFIX
			classic name for PhoneNumber.SubscriberNumber is PHONE-NMBR
			classic name for PhoneNumber.Extension is PHONE-EXT
		PhoneNumberChangeIndicator						is an AutoChg
			classic name is PHONE-NMBR-CHG
		CreditAgencyCode								is a DunnCd
			classic name is DUNN-CD
		DunningCodeChangeIndicator						is an AutoChg
			classic name is DUNN-CD-CHG
		CreditAgencyDate								is Date
			classic name is DUNN-DATE
		DunningDateChangeIndicator						is an AutoChg
			classic name is DUNN-DATE-CHG
		CreditAgencyNumber								is a DunnNumber
			classic name is DUNN-NUMBER
		DunningNumberChangeIndicator					is an AutoChg
			classic name is DUNN-NBR-CHG
		SearchName2										is a SearchName
			classic name is SEARCH-NAME2
		SearchName2ChangeIndicator						is an AutoChg
		CustomerHoldCode								is a ReceivableHoldCode

			classic name is HOLD-CODE-GRP
		CustomerHoldCodeChangeIndicator					is an AutoChg
			sql name is CHoldCodeChangeIndicator
			classic name is HC-GRP-CHG
		CustomerOrderLimit								is an OrderLim
			classic name is ORDER-LIM-GRP
		CustomerOrderLimitChangeIndicator				is an AutoChg
			sql name is COrderLimitChangeIndicator
			classic name is OL-GRP-CHG
		CustomerCreditLimitChange						is a CreditLim
			classic name is CREDIT-LIM-GRP
		CustomerCreditLimitChangeIndicator				is an AutoChg
			sql name is CCreditLimitChangeIndicator
			classic name is CL-GRP-CHG
		OverideAddress									is an OvrAddrFl
			classic name is OVR-ADDR-FL
		OverideAddressChangeIndicator					is an AutoChg
		TaxID 
			holds pii
		TaxIdChgChangeIndicator							is an AutoChg
			classic name is TAX-ID-CHG
		CheckDigitType									is a TaxIDCheckDigitType
			classic name is CHK-DIG-TYPE
		CheckDigitTypeChangeIndicator					is an AutoChg
			classic name is CU-DIG-TY-CHG
		ActiveStatus									is AlphaUpper size 1
			States
				Active				value is "A"
				Inactive			value is "I"
				SetForDeletion		value is "D"
		ActiveStatusChangeIndicator						is an AutoChg
		ReceivableHoldCode

			classic name is HOLD-CODE
		HoldCodeChangeIndicator							is an AutoChg
			classic name is HOLD-CODE-CHG
		Contact
		ContactChangeIndicator							is an AutoChg
			classic name is CONTACT-CHG
		PhoneNumber2									is a TelephoneNumber 
			holds pii
			classic name for PhoneNumber2.InternationalPrefix is INT-PREFIX2
			classic name for PhoneNumber2.SubscriberNumber is PHONE-NMBR2
			classic name for PhoneNumber2.Extension is PHONE-EXT2
		PhoneNumber2ChangeIndicator						is an AutoChg
			classic name is PHN-NMBR2-CHG
		TelexNumber 
			holds pii
			classic name is TELEX-NBR
		TelexNumberChangeIndicator						is an AutoChg
			classic name is TELEX-NBR-CHG
		EDINumber
			classic name is EDI-NBR
		EDINumberChangeIndicator 						is an AutoChg
		FaxNumberChangeIndicator						is an AutoChg
			classic name is FAX-NMBR-CHG
		FaxNumber 
			holds pii
			classic name for FaxNumber.SubscriberNumber is FAX-NMBR
			classic name for FaxNumber.Extension is FAX-EXT
		StartDate
		StartDateChangeIndicator						is an AutoChg
		CreditAnalyst
			context of Company
			classic name is CREDIT-ANLYST
		CreditAnalystChangeIndicator					is an AutoChg
		Currency
			classic name is CURRENCY-CD
		CurrencyChangeIndicator							is an AutoChg
		SalesRepresentative
			context of Company
			classic name is SALESMAN
		SalesRepresentativeChangeIndicator				is an AutoChg
		RiskIndicator									is a RiskCd
			classic name is RISK-CD
		RiskCodeChgChangeIndicator						is an AutoChg
			classic name is RISK-CD-CHG
		ReceivableDefaultCode
			context of Company
			classic name is DEFAULT-CODE
		DefaultCodeChangeIndicator						is an AutoChg
		NationalAccountCompany							is a ReceivableCompany
			disable surrogates 
			classic name is NAT-COMPANY
		NationalAccountCustomer							is a Customer

			classic name is NAT-CUSTOMER
		NationalAccountInterfacedCustomer				is like InterfacedCustomer
			default label is "ExternalNationalCustomer"
		NationalAccountChangeIndicator					is an AutoChg
		CustomerMajorClass

			classic name is MAJ-CLASS
		CustomerMajorClassChangeIndicator				is an AutoChg
		CustomerMinorClass

			classic name is MIN-CLASS
		CustomerMinorClassChangeIndicator				is an AutoChg
		OrderLimit										is an OrderLim
			classic name is ORDER-LIM
		OrderLimitChangeIndicator						is an AutoChg
			classic name is ORDER-LIM-CHG
		CreditLimit										is a CreditLim
			classic name is CREDIT-LIM
		CreditLimitChangeIndicator						is an AutoChg
			classic name is CREDIT-LIM-CHG
		CreditLimitDate									is Date
			classic name is CREDIT-LIM-DAT
		CreditLimitDateChangeIndicator					is an AutoChg
		CreditReviewDays								is a CreditRevdays
			classic name is CREDIT-REVDAYS
		CreditReviewDaysChangeIndicator					is an AutoChg
		AgeDisputesRule									is an AgeDisputes
			classic name is AGE-DISPUTES
		AgeDisputesRuleChangeIndicator					is an AutoChg
		DisputedTransFinanceCharged						is a DisputesFin
			classic name is DISPUTES-FIN
		DisputedTransFinanceChargedChangeIndicator		is an AutoChg
		AutomaticCashApplication						is an AutoAppFl
			classic name is AUTO-APP-FL
		AutomaticCashApplicationChangeIndicator			is an AutoChg
		AutomaticDunning								is Boolean
			classic name is AUTO-DUNN-FL
		AutomaticDunningChangeIndicator					is an AutoChg
		ApplicationDiscountGraceDays					is a DiscGracePd
			classic name is DISC-GRACE-PD
		AppDiscountGraceDaysChangeIndicator				is an AutoChg
		PercentOfBalanceToCreditLimit					is a CrVarPct
			classic name is CR-VAR-PCT
		PctOfBalanceToCreditLimitChangeIndicator		is an AutoChg
		DebitCreditMemoTermsCode						is a TermsCode

			classic name is MEMO-TERM
		DebitCreditMemoTermsCodeChangeIndicator			is an AutoChg
		PrintChargebacks								is a ChrgbkPrtFl
			classic name is CHRGBK-PRT-FL
		PrintChargebacksChangeIndicator					is an AutoChg
		ReceivableProcessingMethod						is AlphaUpper size 1
			classic name is OPEN-BAL-FWD
			States
				None		   value is blank
				BalanceForward value is "B"
				OpenItem	   value is "O"
		ReceivableProcessingMethodChangeIndicator		is an AutoChg
		DiscountAdjustmentReason						is an ApplicationAdjustmentReason
			context of Company
			classic name is DISC-REAS-CD
		DiscountAdjustmentReasonChangeIndicator			is an AutoChg
		StatementRequired								is a StatementReq
			classic name is STATEMENT-REQ
		StatementRequiredChangeIndicator				is an AutoChg
		ReceivableStatementCycle						is a StmntCycle
			classic name is STMNT-CYCLE
		ReceivableStatementCycleChangeIndicator			is an AutoChg
		ReceivableLockBox

			classic name is LOCK-BOX

			default label is "Lockbox"	
		LockBoxChangeIndicator							is an AutoChg
			classic name is LOCK-BOX-CHG
			default label is "LockboxChangeIndicator"	
		ZeroBalanceStatement							is a ZeroStmntFl
			classic name is ZERO-STMNT-FL
		ZeroBalanceStatementChangeIndicator				is an AutoChg
		CreditBalanceStatement							is a CredStmntFl
			classic name is CRED-STMNT-FL
		CreditBalanceStatementChangeIndicator			is an AutoChg
		PastDueOnlyStatement							is a PastStmntFl
			classic name is PAST-STMNT-FL
		PastDueOnlyStatementChangeIndicator				is an AutoChg
		OverCreditLimitStatement						is an OverStmntFl
			classic name is OVER-STMNT-FL
		OverCreditLimitStatementChangeIndicator			is an AutoChg
		MaximumAutoAdjustAmount							is a MaxAutoAmtX3InAricst
			classic name is MAX-AUTO-AMT
		MaxAutoPcts										is a MaxAutoPctX3InAricst
			classic name is MAX-AUTO-PCT
		MaximumShortReasonCode							is a AutoReasCdX3InAricst	
			context of Company
			classic name is AUTO-REAS-CD
		MaximumAutoAdjustReasonCodeChangeIndicator		is an AutoChg
			sql name is MAAReasonCodeChangeIndicator
			classic name is AUTO-CHG
		TermsCode

			classic name is TERMS-CD
		TermsCodeChangeIndicator						is an AutoChg
		LatePaymentAndFinanceCharges					is a LatePayFl
			classic name is LATE-PAY-FL
		LatePaymentAndFinChargesChangeIndicator			is an AutoChg
		FinanceChargeCalculationMethod					is a FinCalcType
			classic name is FIN-CALC-TYPE
		FinanceChargeCalcMethodChangeIndicator			is an AutoChg
		FinanceChargeCode

			classic name is FIN-CHRG-CD
		FinanceChargeCodeChangeIndicator				is an AutoChg
		FinanceChargeDueDateGraceDays					is a FinGracDays
			classic name is FIN-GRAC-DAYS
		FinanceChargeDueDateChangeIndicator				is an AutoChg
			sql name is FChargeDueDateChangeIndicator
			classic name is FIN-GRC-DY-CHG
		MinimumFinanceChargeAmount						is a FinMinChrg
			classic name is FIN-MIN-CHRG
		MinimumFinanceChargeAmountChangeIndicator		is an AutoChg
			sql name is MFChargeAmountChangeIndicator
			classic name is FIN-MIN-CG-CHG
		InvoiceMinimumFinanceCharge						is an IFinMinChrg
			classic name is I-FIN-MIN-CHRG
		InvoiceMinimumFinanceChargeChangeIndicator		is an AutoChg
			sql name is IMFinanceChargeChangeIndicator
			classic name is I-FIN-MIN-CHG
		PrintFinanceChargeDocument						is a FinDocPrnt
			classic name is FIN-DOC-PRNT
		PrintFinanceChargeDocumentChangeIndicator		is an AutoChg
		Territory
			context of Company
		TerritoryChangeIndicator						is an AutoChg
		AgingCode
			context of Company
		AgingCodeChangeIndicator						is an AutoChg
			classic name is AGING-CODE-CHG
		BankTransactionCode

			classic name is BANK-INST-CODE
		BankTransactionCodeChangeIndicator				is an AutoChg
		ReceivableGeneralLedgerCode
			classic name is AR-CODE
			default label is "ReceivableGlobalLedgerCode"
			context of Company
		GeneralLedgerCodeChangeIndicator				is an AutoChg
			default label is "GlobalLedgerCodeChangeIndicator"
		BillOfExchangeProcessing						is a DraftFlag
			classic name is DRAFT-FLAG
		BillOfExchangeProcessingChangeIndicator			is an AutoChg
		ChargeMinimumFinanceCharge						is Boolean
			classic name is MINIMUM
		ChargeMinimumFinanceChargeChangeIndicator		is an AutoChg
			sql name is CMFinanceChargeChangeIndicator
			classic name is MINIMUM-CHG
		FinanceChargeCycle
			context of Company
			classic name is FIN-CYCLE
		FinanceChargeCycleChangeIndicator				is an AutoChg
		DunningCycle
			context of Company
			classic name is DUN-CYCLE
		DunningCycleChangeIndicator						is an AutoChg
		AutomaticApplicationMethod						is AlphaUpper size 1
			classic name is AUTO-METHOD
			States
				Algorithm		value is "A"
				BalanceForward	value is "B"
				LastStatement	value is "L"
				Remittance		value is "R"
				UserDefined		value is "U"
		AutomaticApplicationMethodChangeIndicator		is an AutoChg
		ApplicationCode									is an AutomaticCashApplicationCode

		ApplicationCodeChangeIndicator					is an AutoChg
		AlternateEDINumber								is an AltEdiNbr
			classic name is ALT-EDI-NBR
		AlternateEDINumberChangeIndicator				is an AutoChg
		AlternateEDIType								is an AltEdiType
			classic name is ALT-EDI-TYPE
		AlternateEDITypeChangeIndicator					is an AutoChg
		TaxExempt										is Boolean
			classic name is TAX-EXEMPT-CD
			default label is "PreventTaxCodeDefaulting"
		TaxExemptChangeIndicator						is an AutoChg
		TaxCode

		TaxCodeChangeIndicator							is an AutoChg
		AutomaticTransactionRemoval						is an AutoRemove
			classic name is AUTO-REMOVE
		AutoTransactionRemovalChangeIndicator			is an AutoChg
		DetailChargebackDate							is a CbDtlDate
			classic name is CB-DTL-DATE
		DetailChargebackDateChangeIndicator				is an AutoChg
		VATRegistrationCountry							is a Country
			classic name is VAT-REG-CTRY
		VATRegistrationCountryChangeIndicator			is an AutoChg
			sql name is VATRCountryChangeIndicator
			classic name is VAT-R-CTRY-CHG
		VATRegistrationNumber
			classic name is VAT-REG-NBR
		VATRegistrationNumberChangeIndicator			is an AutoChg
			sql name is VATRNumberChangeIndicator
			classic name is VAT-R-NBR-CHG
		VATCustomerReportType
			classic name is VAT-CUST-TYPE
		VATCustomerReportTypeChangeIndicator			is an AutoChg
		BankEntity										is like BankEntity  

		BankEntityChangeIndicator						is an AutoChg
		BankAccountNumber
			classic name is BANK-ACCT-NBR
		BankAccountNumberChangeIndicator				is an AutoChg
		DunningLetterIndicator							is Boolean
			classic name is DUN-LTR-IND
		DunningLetterIndicatorChangeIndicator			is an AutoChg
			sql name is DLIndicatorChangeIndicator
			classic name is DUN-LTR-IND-CH
		DunningProcessCode
			classic name is DUN-PROCESS-CD

		DunningProcessCodeChangeIndicator				is an AutoChg
			sql name is DProcessCodeChangeIndicator
			classic name is DUN-PROC-CD-CH
		LanguageCode									is an IsoLocale
		LanguageCodeChangeIndicator						is an AutoChg
			classic name is LANG-CODE-CHG
		AssessDunningFee								is an AssessDunFee
			classic name is ASSESS-DUN-FEE
		AssessDunningFeeChangeIndicator					is an AutoChg
			sql name is ADunningFeeChangeIndicator
			classic name is DUN-FEE-CHG
		CreditAgencyName
			classic name is CU-NAME
		CreditAgencynameChangeIndicator					is an AutoChg
			sql name is CAgencynameChangeIndicator
			classic name is CU-NAME-CHG
		CreditAgencyPostalAddress						is a PostalAddressV2	
			holds pii
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine1 is CU-ADDR1
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine2 is CU-ADDR2
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine3 is CU-ADDR3
			classic name for CreditAgencyPostalAddress.DeliveryAddress.AddressLine4 is CU-ADDR4
			classic name for CreditAgencyPostalAddress.Municipality is CU-CITY
			classic name for CreditAgencyPostalAddress.StateProvince is CU-STATE
			classic name for CreditAgencyPostalAddress.PostalCode is CU-POSTAL-CODE
			classic name for CreditAgencyPostalAddress.County is CU-COUNTY
			classic name for CreditAgencyPostalAddress.Country is CU-COUNTRY-CD
		CreditAgencyAddressLine1ChangeIndicator			is an AutoChg
			sql name is CAAddressLine1ChangeIndicator
			classic name is CU-ADDR1-CHG
		CreditAgencyAddressLine2ChangeIndicator			is an AutoChg
			sql name is CAAddressLine2ChangeIndicator
			classic name is CU-ADDR2-CHG
		CreditAgencyAddressLine3ChangeIndicator			is an AutoChg
			sql name is CAAddressLine3ChangeIndicator
			classic name is CU-ADDR3-CHG
		CreditAgencyAddressLine4ChangeIndicator			is an AutoChg
			sql name is CAAddressLine4ChangeIndicator
			classic name is CU-ADDR4-CHG
		CreditAgencyCityChangeIndicator					is an AutoChg
			sql name is CAgencyCityChangeIndicator
			classic name is CU-CITY-CHG
		CreditAgencyStateProvinceChangeIndicator		is an AutoChg
			sql name is CAStateProvinceChangeIndicator
			classic name is CU-STATE-CHG
		CreditAgencyPostalCodeChangeIndicator			is an AutoChg
			sql name is CAPostalCodeChangeIndicator
			classic name is CU-POST-CD-CHG
		CreditAgencyCountryChangeIndicator				is an AutoChg
			sql name is CAgencyCountryChangeIndicator
			classic name is CU-CTRY-CD-CHG
		CreditAgencyCountyChangeIndicator				is an AutoChg
			sql name is CAgencyCountyChangeIndicator
			classic name is CU-COUNTY-CHG
		ThirdPartyPayer									is Boolean
		ThirdPartyChangeIndicator						is an AutoChg
		EmailAddress									is an EmailAddressMulti 
			holds pii
			classic name is E-MAIL-ADDRESS
		EmailAddessChangeIndicator						is an AutoChg
			classic name is E-MAIL-CHG
		URLAddress
			classic name is URL-ADDR
		URLAddressChangeIndicator						is an AutoChg
			classic name is URL-ADDR-CHG
		CustomerChangeAudit								is Boolean
			classic name is CUST-AUDIT
		ApplyMixedSignedLineItemsAutomatically
			sql name is AMSignedLineItemsAutomatically
			classic name is APPLY-MIXED
		AutoApplyMixedSignedChangeIndicator				is an AutoChg
		MaximumOverageChangeIndicator					is an AutoChg
		MaximumOverageAmount							is an InternationalAmount
			classic name is PAY-AUTO-AMT
		MaximumOveragePercent
			classic name is PAY-AUTO-PCT
		MaximumOverageReasonCode						is an ApplicationAdjustmentReason
			context of Company
			classic name is PAY-REAS-CD
		MultipleDunningLettersChangeIndicator			is an AutoChg
			sql name is MDunningLettersChangeIndicator
			classic name is MLT-DUN-LT-CH
		MultipleDunningLetters							is Boolean
			classic name is MULT-DUN-LTR
		ForeignEconomicRegulatoryCode

			classic name is FOR-ECON-CODE
		ForeignEconomicRegulatoryCodeChangeIndicator	is an AutoChg
		CarrierFlag										is Boolean
		CarrierFlagChangeIndicator 						is an AutoChg

		EFTBankEntity									is like BankEntity  
			classic name is EFT-BNK-ENTITY

		EFTBankAccountNumber							is a BankAccountNumber
			classic name is EFT-BNK-ACCT
		EFTRIBKey										is a RIBKey
			classic name is EFT-RIBKEY
		EFTBankAccountValidationType					is a BankAccountValidationType
			classic name is EFT-VBNK-IDENT
		EFTBankAccountStartDate							is a StartDate
			classic name is BNK-START-DATE
		EFTBankAccountEndDate							is Date
			classic name is BNK-END-DATE
		EFTBankAccountPrenoteDate						is Date
			classic name is BNK-PRENOTE
		EFTBankAccountType
			classic name is FT-TYPE
		EFTBankAccountPrenoteRequired					is a PrevNote
			classic name is BNK-PRE-NOTE
		EFTBankAccountPrenoteStatus						is a PrenoteStatus
			classic name is BNK-PRNT-STAT
		BankAccountType
			classic name is CUST-ACCT-TYPE
		RIBKey
			classic name is RIBKEY
		EFTCustomerPrenote								is a CustPreNote
			classic name is CUST-PRE-NOTE
		EFTCustomerPrenoteMethod						is a CustNoteMeth
			classic name is CUST-NOTE-METH
		EFTCustomerAdjustmentMethod						is an AdjNoteMeth
			classic name is ADJ-NOTE-METH
		User1Field
			classic name is USER1-FIELD
		User2Field
			classic name is USER2-FIELD
		PaymentFormat
		BankAccountValidationType
			classic name is VBANK-IDENT
		BankAccountTransactionCode
			classic name is BANK-TRAN-CD
		IBAN 				  							is Boolean
		BicID 				  							is AlphaUpper size 12
		MandateID			 							is AlphaUpper size 35
		MandateType			  							is AlphaUpper size 2
			States
				CORE 		value is 01
				B2B			value is 02
				COR1		value is 03
		ErrorOccurred									is Boolean
		ErrorLevel										is Numeric 2
			States
				Customer			value is 1
				CompanyCustomer		value is 2
				NationalAccount		value is 3
				EFT					value is 4
				OrderEntryCustomer	value is 5
				CustomerPeriod		value is 6
				BillTo				value is 7
				BankAccount			value is 8
				BankEntity			value is 9
		ErrorMessage									is Alpha 150
		SystemAssignedCustomer							is a Customer

		AdministrativeFee								is an InternationalAmount
		TaxRegistrationType								is Numeric size 1
			States
				Registered				value is 1
				Unregistered			value is 2
				SpecialEconomicZone		value is 3
		ElectronicGovernmentID	
		MobileNumber									is a MobilePhone 
			holds pii
		MobileNumberChangeIndicator						is an AutoChg
		TwitterID 
			holds pii
		TwitterIDChangeIndicator						is an AutoChg
		SocialNetworkID2 
			holds pii
		SocialNetworkID2ChangeIndicator					is an AutoChg
		SocialNetworkID3 
			holds pii
		SocialNetworkID3ChangeIndicator					is an AutoChg
		SocialNetworkID4 
			holds pii
		SocialNetworkID4ChangeIndicator					is an AutoChg
		SocialNetworkID5 
			holds pii
		SocialNetworkID5ChangeIndicator					is an AutoChg
		MobileNumber2									is a MobilePhone 
			holds pii
		MobileNumber2ChangeIndicator					is an AutoChg
		FaxNumber2ChangeIndicator						is an AutoChg
		FaxNumber2										is a FaxNumber 
			holds pii
		TwitterID2 										is a TwitterID 
			holds pii
		TwitterID2ChangeIndicator						is an AutoChg
		SocialNetwork2ID2 								is a SocialNetworkID2 
			holds pii
		SocialNetwork2ID2ChangeIndicator				is an AutoChg
		SocialNetwork2ID3								is a SocialNetworkID3 
			holds pii
		SocialNetwork2ID3ChangeIndicator				is an AutoChg
		SocialNetwork2ID4 								is a SocialNetworkID4 
			holds pii
		SocialNetwork2ID4ChangeIndicator				is an AutoChg
		SocialNetwork2ID5								is a SocialNetworkID5 
			holds pii
		SocialNetwork2ID5ChangeIndicator				is an AutoChg
		EmailAddress2									is an EmailAddressMulti 
			default label is "EmailAddress"
			holds pii
		EmailAddess2ChangeIndicator						is an AutoChg
		URLAddress2										is a URLAddress
		URLAddress2ChangeIndicator						is an AutoChg
		ReceivableInvoiceFromAndReplyToEmail			is an EmailAddress
			holds pii
		ReceivableInvoiceFromAndReplyToEmailChangeIndicator		 is an AutoChg
		EmailReceivableInvoice							is Boolean
		EmailReceivableInvoiceChangeIndicator			is an AutoChg
		PrintReceivableInvoice							is Boolean
		PrintReceivableInvoiceChangeIndicator			is an AutoChg
		ReceivablesStatementFromAndReplyToEmail			is an EmailAddress
			holds pii
		ReceivablesStatementFromAndReplyToEmailChangeIndicator	 is an AutoChg
		EmailReceivablesStatement						is Boolean
		EmailReceivablesStatementChangeIndicator		is an AutoChg
		PrintReceivablesStatement						is Boolean
		PrintReceivablesStatementChangeIndicator		is an AutoChg
		BasicDunningLetterFromAndReplyToEmail			is an EmailAddress
			holds pii
		BasicDunningLetterFromAndReplyToEmailChangeIndicator	 is an AutoChg
		EmailBasicDunningLetter							is Boolean
		EmailBasicDunningLetterChangeIndicator			is an AutoChg
		PrintBasicDunningLetter							is Boolean
		PrintBasicDunningLetterChangeIndicator			is an AutoChg
		AdvancedDunningLetterFromAndReplyToEmail		is an EmailAddress
			holds pii
		AdvancedDunningLetterFromAndReplyToEmailChangeIndicator	 is an AutoChg
		EmailAdvancedDunningLetter						is Boolean
		EmailAdvancedDunningLetterChangeIndicator		is an AutoChg
		PrintAdvancedDunningLetter						is Boolean
		PrintAdvancedDunningLetterChangeIndicator		is an AutoChg
		PaymentRequestNoticeFromAndReplyToEmail			is an EmailAddress
			holds pii
		PaymentRequestNoticeFromAndReplyToEmailChangeIndicator	 is an AutoChg
		EmailPaymentRequestNotice						is Boolean
		EmailPaymentRequestNoticeChangeIndicator		is an AutoChg
		PrintPaymentRequestNotice						is Boolean
		PrintPaymentRequestNoticeChangeIndicator		is an AutoChg
		EFTNotificationPrintFromAndReplyToEmail			is an EmailAddress
			holds pii
		EFTNotificationPrintFromAndReplyToEmailChangeIndicator	 is an AutoChg
		EmailEFTNotificationPrint						is Boolean
		EmailEFTNotificationPrintChangeIndicator		is an AutoChg
		PaymentReceiptFromAndReplyToEmail				is an EmailAddress 
			holds pii
		PaymentReceiptFromAndReplyToEmailChangeIndicator		is an AutoChg
		EmailPaymentReceipt								is Boolean
		EmailPaymentReceiptChangeIndicator				is an AutoChg
		PrintPaymentReceipt								is Boolean
		PrintPaymentReceiptChangeIndicator				is an AutoChg
		PrepaymentReceiptFromAndReplyToEmail			is an EmailAddress 
			sql name is PreReceiptFromAndReplyToEmail
			holds pii
		PrepaymentReceiptFromAndReplyToEmailChangeIndicator		is an AutoChg
			sql name is PreReceiptFARTEChangeIndicator
		EmailPrepaymentReceipt							is Boolean
		EmailPrepaymentReceiptChangeIndicator			is an AutoChg
			sql name is EPreReceiptChangeIndicator
		PrintPrepaymentReceipt							is Boolean
		PrintPrepaymentReceiptChangeIndicator			is an AutoChg
			sql name is PPreReceiptChangeIndicator
		SubleaseBillingInvoiceFromAndReplyToEmail		is an EmailAddress
			holds pii
		SubleaseBillingInvoiceFromAndReplyToEmailChangeIndicator is an AutoChg
		EmailSubleaseBillingInvoice						is Boolean
		EmailSubleaseBillingInvoiceChangeIndicator		is an AutoChg
		PrintSubleaseBillingInvoice						is Boolean
		PrintSubleaseBillingInvoiceChangeIndicator		is an AutoChg
		BillingInvoiceFromAndReplyToEmail				is an EmailAddress
			holds pii
		BillingInvoiceFromAndReplyToEmailChangeIndicator		 is an AutoChg
		EmailBillingInvoice								is Boolean
		EmailBillingInvoiceChangeIndicator 				is an AutoChg
		BillingInvoiceEmailOption						is Numeric size 1
			States
				CompanyCustomerAndContacts				value is 0

				BillToOnly								value is 2
				BillToAndContacts						value is 3
		BillingInvoiceEmailBillToOptionChangeIndicator 	is an AutoChg
		PrintBillingInvoice								is Boolean
		PrintBillingInvoiceChangeIndicator 				is an AutoChg

	Local Fields
		InterfacedCustomer								is a Customer view

		LocalCustomerConversionResult					is a CustomerInterfaceResult view
		LocalEFTCompany									is like ReceivableCompany

		LastCustomerRun									is like CustomerInterfaceResult
		LastRun											is like CustomerInterfaceResult
		SaveLastCustomerNumber							is like Customer

	Derived Fields
		CompanyNotFoundMsg is a MessageField
			restricted
			"CompanyNotFound"

		CompanyCustomerRecordAlreadyExistsMsg is a MessageField
			restricted
			"CompanyCustomerAlreadyExists"

		InterfaceCustomerAlreadyExistsMsg is a MessageField
			restricted
			"InterfaceCustomerAlreadyExists"

		InterfaceCustomerNotFoundMsg is a MessageField
			restricted
			"InterfaceCustomerNotFoundOnCrossReferenceTableOrInCustomerReferenceField"

		CannotUpdateNatAcctThroughInterfaceMsg is a MessageField
			restricted
			"CannotUpdateNationalAccountThroughInterface"

		CannotUpdateEFTThroughInterfaceMsg is a MessageField
			restricted
			"CannotUpdateEFTThroughInterface"

		OrderEntryCustomerCountForCCI is a DerivedField
			type is Numeric 10
			return instance count of OrderEntryCustomerImportRel	

		OrderEntryCustomerCount is a DerivedField
			type is Numeric 1 
			return instance count of OrderEntryCustomerImportRel 

		CompanyCustomerCCI is a DerivedField
			type is Numeric 10
			return instance count of LastCustomerRunRel	

	Field Groups
		EFTFields
			EFTBankEntity
			EFTBankAccountNumber
			EFTRIBKey
			EFTBankAccountValidationType
			EFTBankAccountStartDate
			EFTBankAccountEndDate
			EFTBankAccountPrenoteDate
			EFTBankAccountType
			EFTBankAccountPrenoteRequired
			EFTBankAccountPrenoteStatus
			EFTCustomerPrenote
			EFTCustomerPrenoteMethod
			EFTCustomerAdjustmentMethod
			User1Field
			User2Field
			PaymentFormat
			IBAN
			BicID
			MandateID
			MandateType

	Relations

		ReceivableCompanyRel
			one-to-one relation to ReceivableCompany
			Field Mapping uses symbolic key
				related.Company						= Company

		CustomerRel
			one-to-one relation to Customer
			Field Mapping uses symbolic key
				related.CustomerGroup				= Company.CustomerGroupField.CustomerGroup
				related.Customer 					= SystemAssignedCustomer

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer 					= SystemAssignedCustomer

		CompanyCustomerRel2
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Customer					= CustomerMappingTableInterfaceRel.Customer

		CustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup				= Company.CustomerGroupField.CustomerGroup
				related.InterfacedCustomer			= CompanyCustomerImport

		CustomerReferenceRel
			one-to-many relation to Customer
			Field Mapping uses ByCustomerReference
				related.CustomerReference			= CompanyCustomerImport
				related.CustomerGroup				= Company.CustomerGroupField.CustomerGroup

		NatAcctCustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup				= Company.CustomerGroupField.CustomerGroup
				related.InterfacedCustomer			= NationalAccountInterfacedCustomer

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company


		NationalAccountRel
			one-to-many relation to NationalAccount
			Field Mapping uses symbolic key
				related.CustomerGroup		= SystemAssignedCustomer.CustomerGroup
				related.NationalAccount.NationalAccountGroup.NatCompany		= NationalAccountCompany
				related.NationalAccount.NationalAccountGroup.NatCustomer	= NationalAccountCustomer
				related.NationalAccount.InvoiceAccountGroup.Company			= Company
				related.NationalAccount.InvoiceAccountGroup.Customer		= SystemAssignedCustomer

		OrderEntryCustomerImportRel
			one-to-one relation to OrderEntryCustomerImport
			Field Mapping uses symbolic key
				related.Company  								= Company
				related.CompanyCustomerImport					= CompanyCustomerImport


		CustomerDraftBankRel
			one-to-one relation to CustomerDraftBank
			Field Mapping uses symbolic key
				related.CustomerGroup			  				= Company.CustomerGroupField.CustomerGroup
				related.Company  								= LocalEFTCompany
				related.Customer 								= SystemAssignedCustomer
				related.CustomerDraftBank.BOEEFTBank			= BankEntity
				related.CustomerDraftBank.BOEEFTBankAccount		= BankAccountNumber

		EFTCustomerDraftBankRel
			one-to-one relation to CustomerDraftBank
			Field Mapping uses symbolic key
				related.CustomerGroup			  				= Company.CustomerGroupField.CustomerGroup
				related.Company  								= LocalEFTCompany
				related.Customer 								= SystemAssignedCustomer
				related.CustomerDraftBank.BOEEFTBank			= EFTBankEntity
				related.CustomerDraftBank.BOEEFTBankAccount		= EFTBankAccountNumber

		EFTReceivableElectronicFundsTransferNotifyRel
			one-to-one relation to ReceivableElectronicFundsTransferNotify
			Field Mapping uses symbolic key
				related.CustomerGroup			  				= Company.CustomerGroupField.CustomerGroup
				related.Company  								= LocalEFTCompany
				related.Customer 								= SystemAssignedCustomer

		LastCustomerRunRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses ByOriginatingInterfaceRun

		LastRunRel
			one-to-many relation to CustomerInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup

		BillingCompanyRel
			one-to-one relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company 					= Company

		ReceivableLockBoxRel
			one-to-many relation to ReceivableLockBox
			Field Mapping uses ByCompanyProcessLevel
				related.Company			= Company

		MaxOverageReasonRel
			one-to-one relation to ReceivableReason
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	MaximumOverageReasonCode

		ReceivableReasonRel
			classic name is ARREASON
			one-to-one relation to ReceivableReason
			valid when (IsAutoDeductReason)
			required
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	MaximumShortReasonCode.AutoReasCd

	Conditions
		InterfaceInProcess
			when (SystemAssignedCustomer entered)

		UpdateAllowed
			when (!InterfaceInProcess
			or	ErrorLevel.Customer
			or	ErrorLevel.CompanyCustomer)

		CustomerMappingTableInterfaceExists
			when (CustomerMappingTableInterfaceRel exists)










		HasBillingCompany
			restricted
			when (BillingCompanyRel exists)

		OrderEntryCustomerExists
			when (OrderEntryCustomerImportRel exists)

		AllowCreateOECustomer
			restricted
			when (HasBillingCompany
			and   !OrderEntryCustomerExists)

		IsAutoDeductReason
			classic name is ARREASON
			restricted
			when (MaximumShortReasonCode.AutoReasCd entered)

		IsValidForActorContext	
			restricted	
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		ShowIDMEmailDistribution
			restricted
			when (Company.UseIDM
			or	  BillingCompanyRel.UseIDM)

		IsIDMEmailDistributionChange
			restricted
			when ((EmailReceivablesStatement and EmailReceivablesStatementChangeIndicator.Change)
			or   (EmailBasicDunningLetter and EmailBasicDunningLetterChangeIndicator.Change)
			or   (EmailAdvancedDunningLetter and EmailAdvancedDunningLetterChangeIndicator.Change)
			or   (EmailPaymentRequestNotice and EmailPaymentRequestNoticeChangeIndicator.Change)
			or   (EmailBillingInvoice and EmailBillingInvoiceChangeIndicator.Change)
			or   (EmailEFTNotificationPrint and EmailEFTNotificationPrintChangeIndicator.Change)
			or   (EmailReceivableInvoice and EmailReceivableInvoiceChangeIndicator.Change)
			or	 (EmailSubleaseBillingInvoice and EmailSubleaseBillingInvoiceChangeIndicator.Change)
			or	 (EmailPaymentReceipt and EmailPaymentReceiptChangeIndicator.Change)
			or	 (EmailPrepaymentReceipt and EmailPrepaymentReceiptChangeIndicator.Change))

		IsIDMEmailDistributionEnabled
			restricted
			when (EmailReceivablesStatement
			or  EmailBasicDunningLetter
			or  EmailAdvancedDunningLetter
			or  EmailPaymentRequestNotice
			or  EmailBillingInvoice
			or  EmailEFTNotificationPrint
			or  EmailReceivableInvoice
			or	EmailSubleaseBillingInvoice
			or  EmailPaymentReceipt
			or  EmailPrepaymentReceipt)

	Sets
		ByRunGroup
			indexed
			Sort Order
				RunGroup
				Company
				CompanyCustomerImport


	Field Rules
		RunGroup
			required

		ActionCd
			required
				"ActionCodeIsRequired"

		NewCustomer
			if (ActionCd.ChangeACustomer)
				cannot be entered
					"NewCustomerCannotBeEnteredWhenActionIsChangeACustomer"




		IBAN
			if (PaymentFormat.SEPA)
				force default to true

		BicID
			if (PaymentFormat.SEPA)
				required

		DiscountAdjustmentReason
			constraint (DiscountAdjustmentReason != "CURR")
				"CURRIsAReservedReasonCode"

		MaximumOverageReasonCode
			constraint (MaximumOverageReasonCode != "CURR")
				"CURRIsAReservedReasonCode"

		MaximumShortReasonCode	
			constraint (MaximumShortReasonCode != "CURR")
				"CURRIsAReservedReasonCode"
			constraint (ReceivableReasonRel exists)
				"ReasonCodeDoesNotExist"
			constraint (ReceivableReasonRel.ReceivableAdjustmentReasonType.OverShort
			or ReceivableReasonRel.ReceivableAdjustmentReasonType.Chargeback)
				"ReasonCodeWithAReceivableAdjustmentReasonTypeOfOverShortOrChargebackIsRequired"
			constraint (!ReceivableReasonRel.ChargebackType.Memo)
				"ChargebackTypeCannotBeMemo"
				
		AutomaticApplicationMethod
			constraint (AutomaticCashApplication.YesSubjectToAutomaticApply)
				"AutomaticApplicationMethodCannotBeSelected;AutomaticCashApplicationHasNotBeenSetToYes"

			if (AutomaticApplicationMethod.BalanceForward)
				constraint (!ReceivableProcessingMethod.None)
					"ReceivableProcessingMethodIsRequired" 

		AutomaticCashApplication
			if (AutomaticCashApplication.YesSubjectToAutomaticApply)
				constraint (AutomaticApplicationMethod entered)
					"AutomaticCashApplicationCannotBeSetToYes;AutomaticApplicationMethodHasNotBeenDefined"

		ApplicationCode 
			if  (AutomaticApplicationMethod.UserDefined)
				required
					"ApplicationCodeRequiredIfCashApplicationMethodIsUserDefined"
			if  (ApplicationCode entered)
				constraint (AutomaticApplicationMethod.UserDefined)
					"CashApplicationMethodMustBeUserDefinedIfApplicationCodeIsEntered"

		EmailAddress2
			if (ActionCd.ChangeACustomer
			and IsIDMEmailDistributionChange)
				if (CompanyCustomerRel2.EmailAddress entered)
					if (EmailAddess2ChangeIndicator.Change)
						required
				else
					required
			else
				if (ActionCd.AddACustomer
				and	IsIDMEmailDistributionEnabled)
					required

		EmailAddess2ChangeIndicator.Change
			if (ActionCd.ChangeACustomer
			and CompanyCustomerRel2.EmailAddress not entered
			and IsIDMEmailDistributionChange)
				required
					"ChangeIsRequired"

		ReceivablesStatementFromAndReplyToEmail
			if (EmailReceivablesStatement)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		BasicDunningLetterFromAndReplyToEmail
			if (EmailBasicDunningLetter)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		AdvancedDunningLetterFromAndReplyToEmail
			if (EmailAdvancedDunningLetter)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		PaymentRequestNoticeFromAndReplyToEmail
			if (EmailPaymentRequestNotice)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		BillingInvoiceFromAndReplyToEmail
			if (EmailBillingInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize

		EFTNotificationPrintFromAndReplyToEmail
			if (EmailEFTNotificationPrint)
				default to config.DefaultFromEmailAddress
			else
				initialize
		
		ReceivableInvoiceFromAndReplyToEmail
			if (EmailReceivableInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize
				
		SubleaseBillingInvoiceFromAndReplyToEmail
			if (EmailSubleaseBillingInvoice)
				default to config.DefaultFromEmailAddress
			else
				initialize

		PaymentReceiptFromAndReplyToEmail
			if (EmailPaymentReceipt)
				default to config.DefaultFromEmailAddress
			else
				initialize

		PrepaymentReceiptFromAndReplyToEmail
			if (EmailPrepaymentReceipt)
				default to config.DefaultFromEmailAddress
			else
				initialize

	Rule Blocks


	Actions
		Create	is a Create Action

		Update	is an Update Action

		Delete	is a Delete Action
			Entrance Rules
				invoke Delete OrderEntryCustomerImportRel

		FastDelete	is a Delete Action
			restricted
			bypass relational integrity rules

		CreateOrderEntryCustomer	is an Instance Action
			valid when (AllowCreateOECustomer)
			Action Rules
				invoke Create OrderEntryCustomerImportRel
					invoked.CompanyCustomerImport = CompanyCustomerImport

		DeleteAllTransactionsForRunGroup	is a Set Action
			default label is "DeleteAllTransactionsForRunGroup"
			confirmation required

			Parameters
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"

			Instance Selection
				where (RunGroup	= PrmRunGroup
				and	GeneralLedgerCompanyRel.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup)

			Action Rules
				Instance Rules
					invoke Delete OrderEntryCustomerImportRel
					invoke FastDelete


		InterfaceCustomers is a Set Action
			default label is "InterfaceCustomers"
			run in background
			Parameters
				PrmRunGroup					is a RunGroup
					default label is "RunGroup"
				PrmCompany					is a ReceivableCompany
					default label is "Company"

			Parameter Rules
				PrmRunGroup
					required

			Local Fields
				LocalInstanceCount						is Numeric 10
				LocalOrderEntryCustomerInstanceCount	is Numeric 10
				LocalResultView							is a CustomerInterfaceResult view

			Instance Selection
				where (RunGroup		= PrmRunGroup
				and	Company.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
				and   (PrmCompany not entered
				or	 PrmCompany	= Company))

			Sort Order
				RunGroup
				Company
				CompanyCustomerImport

			Rule Blocks
				CustomerUpdate
					invoke Update SystemAssignedCustomer
						invoked.OriginatingInterfaceRun 						= LocalResultView.CustomerInterfaceResult
						if  (Name entered)
							invoked.Name										= Name
						if  (SearchNameChangeIndicator.Change)
							invoked.SearchName									= SearchName
						if  (LegalNameChangeIndicator.Change)
							invoked.LegalName									= LegalName
						if  (AddressLine1ChangeIndicator.Change)
							invoked.PostalAddress.DeliveryAddress.AddressLine1	= PostalAddress.DeliveryAddress.AddressLine1
						if  (AddressLine2ChangeIndicator.Change)
							invoked.PostalAddress.DeliveryAddress.AddressLine2  = PostalAddress.DeliveryAddress.AddressLine2
						if  (AddressLine3ChangeIndicator.Change)
							invoked.PostalAddress.DeliveryAddress.AddressLine3	= PostalAddress.DeliveryAddress.AddressLine3
						if  (AddressLine4ChangeIndicator.Change)
							invoked.PostalAddress.DeliveryAddress.AddressLine4	= PostalAddress.DeliveryAddress.AddressLine4
						if  (CityChangeIndicator.Change)
							invoked.PostalAddress.Municipality					= PostalAddress.Municipality
						if  (StateChangeIndicator.Change)
							invoked.PostalAddress.StateProvince					= PostalAddress.StateProvince
						if  (PostalCodeChangeIndicator.Change)
							invoked.PostalAddress.PostalCode					= PostalAddress.PostalCode
						if  (CountyChangeIndicator.Change)
							invoked.PostalAddress.County						= PostalAddress.County
						if  (CountryCodeChangeIndicator.Change)
							invoked.PostalAddress.Country						= PostalAddress.Country
						if  (RegionCodeChangeIndicator.Change)
							invoked.PostalAddress.Region						= PostalAddress.Region
						if  (AddressTypeChangeIndicator.Change)
							invoked.PostalAddress.Type							= PostalAddress.Type
						if  (CheckDigitTypeChangeIndicator.Change)
							invoked.CheckDigitType								= CheckDigitType
						if  (CustomerContactChangeIndicator.Change)
							invoked.Contact										= CustomerContact
						if  (ContactTitleChangeIndicator.Change)
							invoked.ContactTitle								= Title
						if  (PhoneNumberChangeIndicator.Change)
							invoked.PhoneNumber									= PhoneNumber
						if  (MobileNumberChangeIndicator.Change)
							invoked.MobileNumber								= MobileNumber
						if  (FaxNumberChangeIndicator.Change)
							invoked.FaxNumber									= FaxNumber
						if  (EmailAddessChangeIndicator.Change)
							invoked.EmailAddress								= EmailAddress
						if  (URLAddressChangeIndicator.Change)
							invoked.URLAddress									= URLAddress
						if  (TwitterIDChangeIndicator.Change)
							invoked.TwitterID									= TwitterID
						if  (SocialNetworkID2ChangeIndicator.Change)
							invoked.SocialNetworkID2							= SocialNetworkID2
						if  (SocialNetworkID3ChangeIndicator.Change)
							invoked.SocialNetworkID3							= SocialNetworkID3
						if  (SocialNetworkID4ChangeIndicator.Change)
							invoked.SocialNetworkID4							= SocialNetworkID4
						if  (SocialNetworkID5ChangeIndicator.Change)
							invoked.SocialNetworkID5							= SocialNetworkID5
						if  (DunningCodeChangeIndicator.Change)
							invoked.CreditAgencyCode							= CreditAgencyCode
						if  (DunningDateChangeIndicator.Change)
							invoked.CreditAgencyDate							= CreditAgencyDate
						if  (DunningNumberChangeIndicator.Change)
							invoked.CreditAgencyNumber							= CreditAgencyNumber
						if  (CustomerHoldCodeChangeIndicator.Change)
							invoked.ReceivableHoldCode							= CustomerHoldCode
						if  (CustomerOrderLimitChangeIndicator.Change)
							invoked.OrderLimit									= CustomerOrderLimit
						if  (CustomerCreditLimitChangeIndicator.Change)
							invoked.CreditLimit									= CustomerCreditLimitChange
						if  (OverideAddressChangeIndicator.Change)
							invoked.CustomerOrderAddressOverride				= OverideAddress
						if  (TaxIdChgChangeIndicator.Change)
							invoked.TaxID										= TaxID

				CompanyCustomerUpdate
					invoke Update CompanyCustomerRel
						invoked.OriginatingInterfaceRun 						= LocalResultView.CustomerInterfaceResult
						if  (SearchName2ChangeIndicator.Change)
							invoked.SearchName									= SearchName2

						if  (ActiveStatusChangeIndicator.Change)
							invoked.ActiveStatus								= ActiveStatus

						if  (HoldCodeChangeIndicator.Change)
							invoked.ReceivableHoldCode							= ReceivableHoldCode

						if  (PhoneNumber2ChangeIndicator.Change)
							invoked.PhoneNumber									= PhoneNumber2

						if  (MobileNumber2ChangeIndicator.Change)
							invoked.MobileNumber								= MobileNumber2

						if  (TelexNumberChangeIndicator.Change)
							invoked.TelexNbr									= TelexNumber

						if  (FaxNumber2ChangeIndicator.Change)
							invoked.FaxNumber									= FaxNumber2

						if  (TwitterID2ChangeIndicator.Change)
							invoked.TwitterID									= TwitterID2

						if  (SocialNetwork2ID2ChangeIndicator.Change)
							invoked.SocialNetworkID2							= SocialNetwork2ID2

						if  (SocialNetwork2ID3ChangeIndicator.Change)
							invoked.SocialNetworkID3							= SocialNetwork2ID3

						if  (SocialNetwork2ID4ChangeIndicator.Change)
							invoked.SocialNetworkID4							= SocialNetwork2ID4

						if  (SocialNetwork2ID5ChangeIndicator.Change)
							invoked.SocialNetworkID5							= SocialNetwork2ID5

						if  (RiskCodeChgChangeIndicator.Change)
							invoked.RiskIndicator								= RiskIndicator

						if  (OrderLimitChangeIndicator.Change)
							invoked.OrderLimit									= OrderLimit
						if  (CreditLimitChangeIndicator.Change)
							invoked.CreditLimit									= CreditLimit

						if  (LockBoxChangeIndicator.Change)
							invoked.ReceivableLockBox							= ReceivableLockBox

						if  (MaximumAutoAdjustReasonCodeChangeIndicator.Change)
							invoked.MaximumShortReasonCode						= MaximumShortReasonCode

						if  (FinanceChargeDueDateChangeIndicator.Change)
							invoked.FinanceChargeDueDateGraceDays				= FinanceChargeDueDateGraceDays

						if  (MinimumFinanceChargeAmountChangeIndicator.Change)
							invoked.MinimumFinanceChargeAmount					= MinimumFinanceChargeAmount

						if  (InvoiceMinimumFinanceChargeChangeIndicator.Change)
							invoked.InvoiceMinimumFinanceCharge					= InvoiceMinimumFinanceCharge

						if  (AgingCodeChangeIndicator.Change)
							invoked.AgingCode									= AgingCode

						if  (ChargeMinimumFinanceChargeChangeIndicator.Change)
							invoked.ChargeMinimumFinanceCharge					= ChargeMinimumFinanceCharge

						if  (VATRegistrationCountryChangeIndicator.Change)
							invoked.VATRegistrationCountry						= VATRegistrationCountry
						if  (VATRegistrationNumberChangeIndicator.Change)
							invoked.VATRegistrationNumber						= VATRegistrationNumber

						if  (DunningLetterIndicatorChangeIndicator.Change)
							invoked.DunningLetterIndicator						= DunningLetterIndicator
						if  (DunningProcessCodeChangeIndicator.Change)
							invoked.DunningProcessCode							= DunningProcessCode

						if  (RegionCodeChangeIndicator.Change)
							invoked.LanguageCode.IsoCountry						= LanguageCode.IsoCountry
						if  (LanguageCodeChangeIndicator.Change)
							invoked.LanguageCode.IsoLanguage					= LanguageCode.IsoLanguage
							invoked.LanguageCode.Variant						= LanguageCode.Variant

						if  (AssessDunningFeeChangeIndicator.Change)
							invoked.AssessDunningFee							= AssessDunningFee
						if  (CreditAgencynameChangeIndicator.Change)
							invoked.CreditAgencyName							= CreditAgencyName

						if  (CreditAgencyAddressLine1ChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.DeliveryAddress.AddressLine1 = CreditAgencyPostalAddress.DeliveryAddress.AddressLine1
						if  (CreditAgencyAddressLine2ChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.DeliveryAddress.AddressLine2 = CreditAgencyPostalAddress.DeliveryAddress.AddressLine2
						if  (CreditAgencyAddressLine3ChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.DeliveryAddress.AddressLine3 = CreditAgencyPostalAddress.DeliveryAddress.AddressLine3
						if  (CreditAgencyAddressLine4ChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.DeliveryAddress.AddressLine4 = CreditAgencyPostalAddress.DeliveryAddress.AddressLine4

						if  (CreditAgencyCityChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.Municipality		= CreditAgencyPostalAddress.Municipality
						if  (CreditAgencyStateProvinceChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.StateProvince		= CreditAgencyPostalAddress.StateProvince
						if  (CreditAgencyPostalCodeChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.PostalCode		= CreditAgencyPostalAddress.PostalCode

						if  (CreditAgencyCountryChangeIndicator.Change)
							invoked.CreditAgencyPostalAddress.Country			= CreditAgencyPostalAddress.Country

						if  (ContactChangeIndicator.Change)
							invoked.Contact										= Contact
						if  (EmailAddess2ChangeIndicator.Change)
							invoked.EmailAddress								= EmailAddress2
						if  (URLAddress2ChangeIndicator.Change)
							invoked.URLAddress									= URLAddress2

						if  (MultipleDunningLettersChangeIndicator.Change)
							invoked.MultipleDunningLetters						= MultipleDunningLetters
						if  (CreditAgencyCountyChangeIndicator.Change)
							invoked.ForeignEconomicRegulatoryCode				= ForeignEconomicRegulatoryCode

						if  (EDINumberChangeIndicator.Change)
							invoked.EDINumber									= EDINumber
						if  (StartDateChangeIndicator.Change)
							invoked.StartDate									= StartDate
						if  (CreditAnalystChangeIndicator.Change)
							invoked.CreditAnalyst								= CreditAnalyst
						if  (CurrencyChangeIndicator.Change)
							invoked.Currency									= Currency
						if  (SalesRepresentativeChangeIndicator.Change)
							invoked.SalesRepresentative							= SalesRepresentative
						if  (DefaultCodeChangeIndicator.Change)
							invoked.ReceivableDefaultCode						= ReceivableDefaultCode
						if  (CustomerMajorClassChangeIndicator.Change)
							invoked.CustomerMajorClass							= CustomerMajorClass
						if  (CustomerMinorClassChangeIndicator.Change)
							invoked.CustomerMinorClass							= CustomerMinorClass
						if  (CreditLimitDateChangeIndicator.Change)
							invoked.CreditLimitDate								= CreditLimitDate
						if  (CreditReviewDaysChangeIndicator.Change)
							invoked.CreditReviewDays							= CreditReviewDays
						if  (AgeDisputesRuleChangeIndicator.Change)
							invoked.AgeDisputesRule								= AgeDisputesRule
						if  (DisputedTransFinanceChargedChangeIndicator.Change)
							invoked.DisputedTransFinanceCharged					= DisputedTransFinanceCharged
						if  (AutomaticCashApplicationChangeIndicator.Change)
							invoked.AutomaticCashApplication					= AutomaticCashApplication
						if  (AutomaticDunningChangeIndicator.Change)
							invoked.AutomaticDunning							= AutomaticDunning
						if  (AppDiscountGraceDaysChangeIndicator.Change)
							invoked.ApplicationDiscountGraceDays				= ApplicationDiscountGraceDays
						if  (PctOfBalanceToCreditLimitChangeIndicator.Change)
							invoked.PercentOfBalanceToCreditLimit				= PercentOfBalanceToCreditLimit
						if  (DebitCreditMemoTermsCodeChangeIndicator.Change)
							invoked.DebitCreditMemoTermsCode					= DebitCreditMemoTermsCode
						if  (PrintChargebacksChangeIndicator.Change)
							invoked.PrintChargebacks							= PrintChargebacks
						if  (ReceivableProcessingMethodChangeIndicator.Change)
							invoked.ReceivableProcessingMethod					= ReceivableProcessingMethod
						if  (DiscountAdjustmentReasonChangeIndicator.Change)
							invoked.DiscountAdjustmentReason					= DiscountAdjustmentReason
						if  (StatementRequiredChangeIndicator.Change)
							invoked.StatementRequired							= StatementRequired
						if  (ReceivableStatementCycleChangeIndicator.Change)
							invoked.ReceivableStatementCycle					= ReceivableStatementCycle
						if  (ZeroBalanceStatementChangeIndicator.Change)
							invoked.ZeroBalanceStatement						= ZeroBalanceStatement
						if  (CreditBalanceStatementChangeIndicator.Change)
							invoked.CreditBalanceStatement						= CreditBalanceStatement
						if  (PastDueOnlyStatementChangeIndicator.Change)
							invoked.PastDueOnlyStatement						= PastDueOnlyStatement
						if  (OverCreditLimitStatementChangeIndicator.Change)
							invoked.OverCreditLimitStatement					= OverCreditLimitStatement
						if  (TermsCodeChangeIndicator.Change)
							invoked.TermsCode									= TermsCode
						if  (LatePaymentAndFinChargesChangeIndicator.Change)
							invoked.LatePaymentAndFinanceCharges				= LatePaymentAndFinanceCharges
						if  (FinanceChargeCalcMethodChangeIndicator.Change)
							invoked.FinanceChargeCalculationMethod				= FinanceChargeCalculationMethod
						if  (FinanceChargeCodeChangeIndicator.Change)
							invoked.FinanceChargeCode							= FinanceChargeCode
						if  (PrintFinanceChargeDocumentChangeIndicator.Change)
							invoked.PrintFinanceChargeDocument					= PrintFinanceChargeDocument
						if  (TerritoryChangeIndicator.Change)
							invoked.Territory									= Territory
						if  (BankTransactionCodeChangeIndicator.Change)
							invoked.BankTransactionCode							= BankTransactionCode
						if  (GeneralLedgerCodeChangeIndicator.Change)
							invoked.ReceivableGeneralLedgerCode					= ReceivableGeneralLedgerCode
						if  (BillOfExchangeProcessingChangeIndicator.Change)
							invoked.BillOfExchangeProcessing					= BillOfExchangeProcessing
						if  (FinanceChargeCycleChangeIndicator.Change)
							invoked.FinanceChargeCycle							= FinanceChargeCycle
						if  (DunningCycleChangeIndicator.Change)
							invoked.DunningCycle								= DunningCycle
						if  (AutomaticApplicationMethodChangeIndicator.Change)
							invoked.AutomaticApplicationMethod					= AutomaticApplicationMethod
						if  (ApplicationCodeChangeIndicator.Change)
							invoked.ApplicationCode								= ApplicationCode
						if  (AlternateEDINumberChangeIndicator.Change)
							invoked.AlternateEDINumber							= AlternateEDINumber
						if  (AlternateEDITypeChangeIndicator.Change)
							invoked.AlternateEDIType							= AlternateEDIType
						if  (TaxExemptChangeIndicator.Change)
							invoked.TaxExempt									= TaxExempt
						if  (TaxCodeChangeIndicator.Change)
							invoked.TaxCode										= TaxCode
						if  (AutoTransactionRemovalChangeIndicator.Change)
							invoked.AutomaticTransactionRemoval					= AutomaticTransactionRemoval
						if  (DetailChargebackDateChangeIndicator.Change)
							invoked.DetailChargebackDate						= DetailChargebackDate
						if  (VATCustomerReportTypeChangeIndicator.Change)
							invoked.VATCustomerReportType						= VATCustomerReportType
						if  (ThirdPartyChangeIndicator.Change)
							invoked.ThirdPartyPayer								= ThirdPartyPayer
						if  (AutoApplyMixedSignedChangeIndicator.Change)
							invoked.ApplyMixedSignedLineItemsAutomatically		= ApplyMixedSignedLineItemsAutomatically
						if  (MaximumOverageChangeIndicator.Change)
							invoked.MaximumOverageAmount						= MaximumOverageAmount
							invoked.MaximumOveragePercent						= MaximumOveragePercent
							invoked.MaximumOverageReasonCode					= MaximumOverageReasonCode
						if  (ForeignEconomicRegulatoryCodeChangeIndicator.Change)
							invoked.ForeignEconomicRegulatoryCode				= ForeignEconomicRegulatoryCode
						if  (CarrierFlagChangeIndicator.Change)
							invoked.CarrierFlag									= CarrierFlag
						if  (ReceivableInvoiceFromAndReplyToEmailChangeIndicator.Change)
							invoked.ReceivableInvoiceFromAndReplyToEmail		= ReceivableInvoiceFromAndReplyToEmail
						if  (EmailReceivableInvoiceChangeIndicator.Change)
							invoked.EmailReceivableInvoice						= EmailReceivableInvoice
						if  (PrintReceivableInvoiceChangeIndicator.Change)
							invoked.PrintReceivableInvoice						= PrintReceivableInvoice

						if  (ReceivablesStatementFromAndReplyToEmailChangeIndicator.Change)
							invoked.ReceivablesStatementFromAndReplyToEmail		= ReceivablesStatementFromAndReplyToEmail
						if  (EmailReceivablesStatementChangeIndicator.Change)
							invoked.EmailReceivablesStatement					= EmailReceivablesStatement
						if  (PrintReceivablesStatementChangeIndicator.Change)
							invoked.PrintReceivablesStatement					= PrintReceivablesStatement

						if  (BasicDunningLetterFromAndReplyToEmailChangeIndicator.Change)
							invoked.BasicDunningLetterFromAndReplyToEmail		= BasicDunningLetterFromAndReplyToEmail
						if  (EmailBasicDunningLetterChangeIndicator.Change)
							invoked.EmailBasicDunningLetter						= EmailBasicDunningLetter
						if  (PrintBasicDunningLetterChangeIndicator.Change)
							invoked.PrintBasicDunningLetter						= PrintBasicDunningLetter

						if  (AdvancedDunningLetterFromAndReplyToEmailChangeIndicator.Change)
							invoked.AdvancedDunningLetterFromAndReplyToEmail	= AdvancedDunningLetterFromAndReplyToEmail
						if  (EmailAdvancedDunningLetterChangeIndicator.Change)
							invoked.EmailAdvancedDunningLetter					= EmailAdvancedDunningLetter
						if  (PrintAdvancedDunningLetterChangeIndicator.Change)
							invoked.PrintAdvancedDunningLetter					= PrintAdvancedDunningLetter

						if  (PaymentRequestNoticeFromAndReplyToEmailChangeIndicator.Change)
							invoked.PaymentRequestNoticeFromAndReplyToEmail		= PaymentRequestNoticeFromAndReplyToEmail
						if  (EmailPaymentRequestNoticeChangeIndicator.Change)
							invoked.EmailPaymentRequestNotice					= EmailPaymentRequestNotice
						if  (PrintPaymentRequestNoticeChangeIndicator.Change)
							invoked.PrintPaymentRequestNotice					= PrintPaymentRequestNotice

						if  (EFTNotificationPrintFromAndReplyToEmailChangeIndicator.Change)
							invoked.EFTNotificationPrintFromAndReplyToEmail		= EFTNotificationPrintFromAndReplyToEmail
						if  (EmailEFTNotificationPrintChangeIndicator.Change)
							invoked.EmailEFTNotificationPrint					= EmailEFTNotificationPrint

						if  (PaymentReceiptFromAndReplyToEmailChangeIndicator.Change)
							invoked.PaymentReceiptFromAndReplyToEmail	= PaymentReceiptFromAndReplyToEmail
						if  (EmailPaymentReceiptChangeIndicator.Change)
							invoked.EmailPaymentReceipt					= EmailPaymentReceipt
						if  (PrintPaymentReceiptChangeIndicator.Change)
							invoked.PrintPaymentReceipt					= PrintPaymentReceipt

						if  (PrepaymentReceiptFromAndReplyToEmailChangeIndicator.Change)
							invoked.PrepaymentReceiptFromAndReplyToEmail	= PrepaymentReceiptFromAndReplyToEmail
						if  (EmailPrepaymentReceiptChangeIndicator.Change)
							invoked.EmailPrepaymentReceipt					= EmailPrepaymentReceipt
						if  (PrintPrepaymentReceiptChangeIndicator.Change)
							invoked.PrintPrepaymentReceipt					= PrintPrepaymentReceipt

						if  (SubleaseBillingInvoiceFromAndReplyToEmailChangeIndicator.Change)
							invoked.SubleaseBillingInvoiceFromAndReplyToEmail	= SubleaseBillingInvoiceFromAndReplyToEmail
						if  (EmailSubleaseBillingInvoiceChangeIndicator.Change)
							invoked.EmailSubleaseBillingInvoice					= EmailSubleaseBillingInvoice
						if  (PrintSubleaseBillingInvoiceChangeIndicator.Change)
							invoked.PrintSubleaseBillingInvoice					= PrintSubleaseBillingInvoice

						if  (BillingInvoiceFromAndReplyToEmailChangeIndicator.Change)
							invoked.BillingInvoiceFromAndReplyToEmail			= BillingInvoiceFromAndReplyToEmail
						if  (EmailBillingInvoiceChangeIndicator.Change)
							invoked.EmailBillingInvoice							= EmailBillingInvoice
						if  (PrintBillingInvoiceChangeIndicator.Change)
							invoked.PrintBillingInvoice							= PrintBillingInvoice
						if (BillingInvoiceEmailBillToOptionChangeIndicator.Change)
							invoked.BillingInvoiceEmailOption					= BillingInvoiceEmailOption
							

			Action Rules
				Empty Set Rules

					LastRun				= last LastRunRel.CustomerInterfaceResult
					LastCustomerRun		= last LastCustomerRunRel.OriginatingInterfaceRun












					invoke Create CustomerInterfaceResult
						assign result to LocalResultView
						invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup


						invoked.RunTime						= current timestamp
						invoked.RunType						= 2
						invoked.RunGroup					= PrmRunGroup
						invoked.Company						= PrmCompany
						invoked.Status						= 1 

				RunGroup Set Rules
					Entrance Rules
						LastRun				= last LastRunRel.CustomerInterfaceResult
						LastCustomerRun		= last LastCustomerRunRel.OriginatingInterfaceRun












						invoke Create CustomerInterfaceResult
							assign result to LocalResultView
							invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup


							invoked.RunTime						= current timestamp
							invoked.RunType						= 2
							invoked.RunGroup					= PrmRunGroup
							invoked.Company						= PrmCompany

					Exit Rules
						invoke Update LocalResultView.CustomerInterfaceResult
							invoked.RecordsProcessed						= LocalInstanceCount
							invoked.CustomerInterfaceCounts.OECustomerCount	= LocalOrderEntryCustomerInstanceCount  

							if  (LocalResultView.Status != 2)
								invoked.Status					= 1













				Instance Rules













					LocalCustomerConversionResult 	= LocalResultView.CustomerInterfaceResult
					LocalInstanceCount				+= 1
					if (OrderEntryCustomerExists)
						LocalOrderEntryCustomerInstanceCount	+= 1
					ErrorOccurred					= false
					ErrorMessage					= blank
					ErrorLevel						= blank

					if  (Company not entered
					or   !ReceivableCompanyRel exists)
						ErrorOccurred						= true
						ErrorMessage						= CompanyNotFoundMsg
						ErrorLevel							= 1

					if  (!ErrorOccurred)	














						if  (SystemAssignedCustomer not entered)
							SystemAssignedCustomer		= CustomerMappingTableInterfaceRel.Customer
							
						if  (SystemAssignedCustomer not entered)
							SystemAssignedCustomer		= first CustomerReferenceRel.Customer

						if  (ActionCd.ChangeACustomer)
							if  (SystemAssignedCustomer not entered)
								ErrorOccurred				= true
								ErrorMessage				= InterfaceCustomerNotFoundMsg
								ErrorLevel					= 1
							else
							if  (NationalAccountCompany entered
							or   NationalAccountCustomer entered)
								ErrorOccurred				= true
								ErrorMessage				= CannotUpdateNatAcctThroughInterfaceMsg
								ErrorLevel					= 1
							else
							if  (EFTFields entered)
								ErrorOccurred				= true
								ErrorMessage				= CannotUpdateEFTThroughInterfaceMsg
								ErrorLevel					= 1
						else
							if  (CompanyCustomerRel exists)
								ErrorOccurred				= true
								ErrorMessage				= CompanyCustomerRecordAlreadyExistsMsg
								ErrorLevel					= 2
















					if  (!ErrorOccurred)







						if  (ActionCd.AddACustomer
						and  SystemAssignedCustomer not entered)

							if  (NewCustomer not entered)	//IEFIN-116294-adding "not" since NewCustomer is not systematically entered at this point.  Plus this will bring Company Customer Import more in sync with Company Customer Conversion.
								SaveLastCustomerNumber = Company.CustomerGroupField.CustomerGroup.LastAutomaticCustomerNumber















							invoke Create Customer
								assign result to InterfacedCustomer
								resume on error
									ErrorOccurred						= true
									ErrorMessage						= error message
									ErrorLevel							= 1
								fill in fields from this instance
									except invoked.ReceivableHoldCode
								invoked.CustomerGroup					= Company.CustomerGroupField.CustomerGroup
								if (NewCustomer entered)
									invoked.Customer					= NewCustomer
								invoked.OriginatingInterfaceRun 		= LocalResultView.CustomerInterfaceResult
								invoked.CustomerReference				= CompanyCustomerImport

								invoked.Contact							= CustomerContact
								invoked.ContactTitle					= Title
								invoked.ReceivableHoldCode				= CustomerHoldCode
								invoked.OrderLimit						= CustomerOrderLimit
								invoked.CreditLimit						= CustomerCreditLimitChange
								invoked.CustomerOrderAddressOverride	= OverideAddress

							if  (!ErrorOccurred)				
								SystemAssignedCustomer 			= InterfacedCustomer.Customer

							else
							if  (SaveLastCustomerNumber entered)	
								invoke FastUpdate Company.CustomerGroupField.CustomerGroup
									invoked.LastAutomaticCustomerNumber	= SaveLastCustomerNumber

						else
						if  (ActionCd.ChangeACustomer)
							include CustomerUpdate
















					if (NewCustomer not entered
					and SystemAssignedCustomer entered)
						NewCustomer 									= SystemAssignedCustomer
















					if  (!ErrorOccurred)
						if  (ActionCd.AddACustomer
						or   !CompanyCustomerRel exists)














							invoke Create CompanyCustomer

								resume on error
									ErrorOccurred				= true
									ErrorMessage				= error message
									ErrorLevel					= 2
								fill in fields from this instance
									except invoked.ActiveStatus 
									except invoked.PhoneNumber
									except invoked.MobileNumber
									except invoked.FaxNumber
									except invoked.TwitterID
									except invoked.SocialNetworkID2
									except invoked.SocialNetworkID3
									except invoked.SocialNetworkID4
									except invoked.SocialNetworkID5
									except invoked.EmailAddress
									except invoked.URLAddress
								fill in user fields from this instance
								invoked.Customer				= SystemAssignedCustomer
								invoked.OriginatingInterfaceRun = LocalResultView.CustomerInterfaceResult
								invoked.InterfaceInProcess		= true
								invoked.ActiveStatus			= "I"  
								invoked.PhoneNumber				= PhoneNumber2
								invoked.MobileNumber			= MobileNumber2
								invoked.FaxNumber				= FaxNumber2
								invoked.EmailAddress			= EmailAddress2
								invoked.URLAddress				= URLAddress2
								invoked.TwitterID				= TwitterID2
								invoked.SocialNetworkID2		= SocialNetwork2ID2
								invoked.SocialNetworkID3		= SocialNetwork2ID3
								invoked.SocialNetworkID4		= SocialNetwork2ID4
								invoked.SocialNetworkID5		= SocialNetwork2ID5
								if (OrderEntryCustomerImportRel exists)
									invoked.ByPassOECustomerCreate	= true

						else
						if  (ActionCd.ChangeACustomer)
							include CompanyCustomerUpdate

					if  (!ErrorOccurred
					and (ActionCd.AddACustomer
					or   NationalAccountChangeIndicator.Change))
						if  ((NationalAccountCompany entered
						or	NationalAccountCustomer entered
						or	NationalAccountInterfacedCustomer entered)
						and  !NationalAccountRel exists)

							
							invoke Create NationalAccount
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 3
								invoked.CustomerGroup										= SystemAssignedCustomer.CustomerGroup
								invoked.NationalAccount.NationalAccountGroup.NatCompany		= NationalAccountCompany
								invoked.NationalAccount.InvoiceAccountGroup.Company			= Company
								invoked.NationalAccount.InvoiceAccountGroup.Customer		= SystemAssignedCustomer

								if  (NationalAccountCustomer entered)
									invoked.NationalAccount.NationalAccountGroup.NatCustomer	= NationalAccountCustomer
								else
								if  (NationalAccountInterfacedCustomer entered)
									invoked.NationalAccount.NationalAccountGroup.NatCustomer	= NatAcctCustomerMappingTableInterfaceRel.Customer

					if  (!ErrorOccurred)
						if ((BankEntity entered
						or   BankAccountNumber entered)
						and  !CustomerDraftBankRel exists)
							invoke Create CustomerDraftBank
								resume on error
									ErrorOccurred					= true
									ErrorMessage					= error message
									ErrorLevel						= 4
								invoked.CustomerGroup							= SystemAssignedCustomer.CustomerGroup
								invoked.Customer								= SystemAssignedCustomer
								invoked.CustomerDraftBank.BOEEFTBank			= BankEntity
								invoked.CustomerDraftBank.BOEEFTBankAccount		= BankAccountNumber
								invoked.BankAccountValidationType				= BankAccountValidationType
								invoked.DefaultBank								= false
								invoked.BankType								= "B" 

					if  (!ErrorOccurred)
						if  (SystemAssignedCustomer.CustomerGroup.EFTProcessingLevel.CompanyLevelProcessing)
							LocalEFTCompany									= Company
						else
							initialize LocalEFTCompany

						if  ((EFTBankEntity entered
						or	EFTBankAccountNumber entered)
						and  !EFTReceivableElectronicFundsTransferNotifyRel exists)

								
						   	invoke Create ReceivableElectronicFundsTransferNotify
								resume on error
									ErrorOccurred					= true
									ErrorMessage					= error message
									ErrorLevel						= 4
								invoked.CustomerGroup						= SystemAssignedCustomer.CustomerGroup
								invoked.Company								= LocalEFTCompany
								invoked.Customer							= SystemAssignedCustomer
								invoked.EFTPrenotification					= EFTCustomerPrenote
								invoked.EFTNotificationMethod				= EFTCustomerPrenoteMethod
								invoked.EFTAdjustmentNotificationMethod 	= EFTCustomerAdjustmentMethod
								invoked.User1Field							= User1Field
								invoked.User2Field							= User2Field
								invoked.PaymentFormat						= PaymentFormat
	

						if  ((EFTBankEntity entered
						or	EFTBankAccountNumber entered)
						and  !EFTCustomerDraftBankRel exists)

							invoke Create CustomerDraftBank
								resume on error
									ErrorOccurred			= true
									ErrorMessage			= error message
									ErrorLevel				= 9
								invoked.CustomerGroup			  				= Company.CustomerGroupField.CustomerGroup
								invoked.Company									= LocalEFTCompany
								invoked.Customer 								= SystemAssignedCustomer
								invoked.CustomerDraftBank.BOEEFTBank			= EFTBankEntity
								invoked.CustomerDraftBank.BOEEFTBankAccount		= EFTBankAccountNumber
								invoked.BankAccountValidationType				= EFTBankAccountValidationType
								invoked.BankDateRange.StartDate					= EFTBankAccountStartDate
								invoked.BankDateRange.EndDate					= EFTBankAccountEndDate
								invoked.PrenotificationDate						= EFTBankAccountPrenoteDate
								invoked.PrenotificationRequired 				= EFTBankAccountPrenoteRequired
								invoked.PrenoteStatus 							= EFTBankAccountPrenoteStatus
								invoked.RIBKey									= EFTRIBKey
								invoked.IBAN									= IBAN
								invoked.BicID									= BicID
								invoked.MandateID								= MandateID
								invoked.MandateType								= MandateType
								invoked.DefaultBank								= false
								invoked.BankType								= "E"  

	
					if  (!ErrorOccurred)
						if  (OrderEntryCustomerImportRel exists)

							if  (ActionCd.AddACustomer
							or   !CompanyCustomerRel.OrderEntryCustomer exists)
								invoke Create OrderEntryCustomer
									resume on error
										ErrorOccurred			= true
										ErrorMessage			= error message
										ErrorLevel				= 5
									fill in fields from OrderEntryCustomerImportRel
										except invoked.Customer
									invoked.Company				= Company
									invoked.Customer			= SystemAssignedCustomer
									invoked.OrderDiscountCode 	= OrderEntryCustomerImportRel.OrdDiscCode
							else
							if  (ActionCd.ChangeACustomer)
								invoke Update CompanyCustomerRel.OrderEntryCustomer
									if (OrderEntryCustomerImportRel.FrghtCodeChg.Change)
										invoked.BillingFreightCode					= OrderEntryCustomerImportRel.BillingFreightCode
									if (OrderEntryCustomerImportRel.PkPrirityChg.Change)
										invoked.PickingPriority						= OrderEntryCustomerImportRel.PickingPriority
									if (OrderEntryCustomerImportRel.CarrierChg.Change)
										invoked.Carrier								= OrderEntryCustomerImportRel.Carrier
									if (OrderEntryCustomerImportRel.CiaPctChg.Change)
										invoked.CashInAdvanceRequired					= OrderEntryCustomerImportRel.CashInAdvanceRequired
										invoked.CashInAdvanceRequiredPercent			= OrderEntryCustomerImportRel.CashInAdvanceRequiredPercent
									if (OrderEntryCustomerImportRel.ProformaPctChg.Change)
										invoked.ProformaCashInAdvanceRequired			= OrderEntryCustomerImportRel.ProformaCashInAdvanceRequired
										invoked.ProformaCashInAdvanceRequiredPercent	= OrderEntryCustomerImportRel.ProformaCashInAdvanceRequiredPercent
									if (OrderEntryCustomerImportRel.OrdDsCdChg.Change)
										invoked.OrderDiscountCode 					= OrderEntryCustomerImportRel.OrdDiscCode
									if (OrderEntryCustomerImportRel.CommSplitChg.Change)
										invoked.CommissionSplitPercentage			= OrderEntryCustomerImportRel.CommissionSplitPercentage
									if (OrderEntryCustomerImportRel.Salesman2Chg.Change)
										invoked.Salesman2							= OrderEntryCustomerImportRel.Salesman2
									if (OrderEntryCustomerImportRel.DefShpToChg.Change)
										invoked.DefaultCustomerShipTo				= OrderEntryCustomerImportRel.DefaultCustomerShipTo
									if (OrderEntryCustomerImportRel.DefLoctinChg.Change)
										invoked.DefaultShippingLocation				= OrderEntryCustomerImportRel.DefaultShippingLocation
									if (OrderEntryCustomerImportRel.DefMethodChg.Change)
										invoked.DefaultShippingMethod				= OrderEntryCustomerImportRel.DefaultShippingMethod
									if (OrderEntryCustomerImportRel.GracePerChg.Change)
										invoked.ProofOfDeliveryGracePeriod			= OrderEntryCustomerImportRel.ProofOfDeliveryGracePeriod
									if (OrderEntryCustomerImportRel.SglHoldChg.Change)
										invoked.SingleOrderHoldCode					= OrderEntryCustomerImportRel.SingleOrderHoldCode
									if (OrderEntryCustomerImportRel.SglOrdLmChg.Change)
										invoked.SingleOrderLimit					= OrderEntryCustomerImportRel.SingleOrderLimit
									if (OrderEntryCustomerImportRel.ComLimChg.Change)
										invoked.TotalCODOrderLimit					= OrderEntryCustomerImportRel.TotalCODOrderLimit
									if (OrderEntryCustomerImportRel.CodHoldChg.Change)
										invoked.CashOnDeliveryOrderHoldCode			= OrderEntryCustomerImportRel.CashOnDeliveryOrderHoldCode
									if (OrderEntryCustomerImportRel.AgeCredChg.Change)
										invoked.AgeCredPcts							= OrderEntryCustomerImportRel.AgeCredPcts
									if (OrderEntryCustomerImportRel.AgeHoldChg.Change)
										invoked.OrderAgingPriodLimitHoldCode		= OrderEntryCustomerImportRel.OrderAgingPriodLimitHoldCode


									if (OrderEntryCustomerImportRel.CrLimHldChg.Change)
										invoked.CreditLimitHoldCode					= OrderEntryCustomerImportRel.CreditLimitHoldCode
									if (OrderEntryCustomerImportRel.OrLimHldChg.Change)
										invoked.OrderLimitHoldCode					= OrderEntryCustomerImportRel.OrderLimitHoldCode

									if  (OrderEntryCustomerImportRel.PriceListChange.Change)
										invoked.PriceList							= OrderEntryCustomerImportRel.PriceList
									if  (OrderEntryCustomerImportRel.CustOrderAcknowledgeChange.Change)
										invoked.CustomeOrderAcknowledgments			= OrderEntryCustomerImportRel.CustomeOrderAcknowledgments
									if  (OrderEntryCustomerImportRel.BackorderAllowedChange.Change)
										invoked.BackorderAllowed					= OrderEntryCustomerImportRel.BackorderAllowed
									if  (OrderEntryCustomerImportRel.ShipCompleteFlagChange.Change)
										invoked.ShipCompleteFlag					= OrderEntryCustomerImportRel.ShipCompleteFlag
									if  (OrderEntryCustomerImportRel.POReqForCustomerOrderChange.Change)
										invoked.PORequiredForCustomerOrder			= OrderEntryCustomerImportRel.PORequiredForCustomerOrder
									if  (OrderEntryCustomerImportRel.SubstitutesAllowedChange.Change)
										invoked.SubstitutesAllowed					= OrderEntryCustomerImportRel.SubstitutesAllowed
									if  (OrderEntryCustomerImportRel.BillingCustomerCodeChange.Change)
										invoked.BillingCustomerCode					= OrderEntryCustomerImportRel.BillingCustomerCode
									if  (OrderEntryCustomerImportRel.CheckCreditOnOrderAddChange.Change)
										invoked.CheckCreditOnOrderAdd				= OrderEntryCustomerImportRel.CheckCreditOnOrderAdd
									if  (OrderEntryCustomerImportRel.CheckCredBeforePickListChange.Change)
										invoked.CheckCreditBeforePickingList		= OrderEntryCustomerImportRel.CheckCreditBeforePickingList
									if  (OrderEntryCustomerImportRel.BrokenCaseChargeChange.Change)
										invoked.BrokenCaseCharge					= OrderEntryCustomerImportRel.BrokenCaseCharge
									if  (OrderEntryCustomerImportRel.BillingLineItemReqChange.Change)
										invoked.BillingLineItemRequired				= OrderEntryCustomerImportRel.BillingLineItemRequired
									if  (OrderEntryCustomerImportRel.TaxCalcAndPrintingChange.Change)
										invoked.TaxCalulationAndPrinting			= OrderEntryCustomerImportRel.TaxCalulationAndPrinting
									if  (OrderEntryCustomerImportRel.AllowReturnsChange.Change)
										invoked.AllowReturns						= OrderEntryCustomerImportRel.AllowReturns
									if  (OrderEntryCustomerImportRel.LastReturnAuthDateChange.Change)
										invoked.LastReturnAuthorizationDate			= OrderEntryCustomerImportRel.LastReturnAuthorizationDate
									if  (OrderEntryCustomerImportRel.CarrierFlagChange.Change)
										invoked.CarrierFlag							= OrderEntryCustomerImportRel.CarrierFlag

							if (!ErrorOccurred)
								invoke FastDelete OrderEntryCustomerImportRel

					if  (ErrorOccurred)
						invoke Update LocalResultView.CustomerInterfaceResult
							invoked.Status = 2
					else
						invoke FastUpdate CompanyCustomerRel
							invoked.InterfaceInProcess		= false
							invoked.ActiveStatus			= ActiveStatus
							invoked.OriginatingInterfaceRun = LocalResultView.CustomerInterfaceResult

						invoke FastDelete




