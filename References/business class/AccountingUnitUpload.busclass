AccountingUnitUpload is a BusinessClass
	owned by GeneralLedger
	prefix is AUUPL   
    
    Ontology
    	symbolic key is AccountingUnitUpload

    Patterns
 		disable Auditing 
 		disable EffectiveDated
 		disable AsOfDateProcessing
		implements InlineUserFields
			size is 3000
			
    Persistent Fields
		AccountingEntity    
    	ParentAccountingUnit			is like AccountingUnit
    	AccountingUnit					is like AccountingUnit
		SequenceAccountingUnit			is like AccountingUnit
		ParentSequenceAccountingUnit	is like AccountingUnit
		RecordType						is Numeric 1
		    States	    
		    	Summary	value is 2
		    	Posting	value is 1		
		Description	
		Active
    	SystemAccountingUnit			is Boolean
    	IsAZoneAccountingUnit			is Boolean
    	ZoneAccountingUnit				is like AccountingUnit
    	EntityZoneAccountingUnit		is Boolean
    	DefaultZoneAccountingUnit		is Boolean
    	BudgetIdentifier
    	IncludeInBudgetEdit				is Boolean    	    	
    	InterEntityAccountingUnit		is Boolean
		ErrorMessage					is Alpha 150
		AddressCode
		FundType

   	Context Fields
   		
    Transient Fields

	Derived Fields
		SummaryPrefix			is a StringField
			type is AlphaUpper 15
			restricted
			AccountingUnitStructure.StructureSequence
			"_*"
				
		DerivedParentAccountingUnit is a DerivedField
			type is like AccountingUnit
			restricted
			if (ParentAccountingUnit entered)
				return DerivedParentAccountingUnitString
			else
				return EntityNodeString
		
		DerivedParentSequenceAccountingUnit is a DerivedField
			type is like AccountingUnit
			restricted
			if (ParentSequenceAccountingUnit entered)
				return ParentSequenceAccountingUnit
			else
				return DerivedParentAccountingUnit 

		DerivedTopNode				is a DerivedField
			type is like AccountingUnit
			restricted
			return AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode

		DerivedTopNodeEntity		is a DerivedField
			type is like AccountingEntity
			restricted
			return AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionEntity
							
		EntityNodeString			is a StringField
			type is AlphaUpper 25
			restricted
			AccountingUnitStructure.StructureSequence
			"_"
			AccountingEntity
			"_ENTITY"

		EntityNodeMinusPrefix		is a StringField
			type is AlphaUpper 25	
			restricted		
			AccountingEntity
			"_ENTITY"
										
		DerivedParentAccountingUnitString is a StringField
			type is AlphaUpper 25
			restricted
			AccountingUnitStructure.StructureSequence
			"_"
			ParentAccountingUnit
		
		DerivedSummaryAccountingUnit is a StringField
			type is AlphaUpper 25
			restricted
			AccountingUnitStructure.StructureSequence
			"_"
			AccountingUnit
	
		DerivedSummarySequenceAccountingUnit is a DerivedField
			type is like AccountingUnit
			restricted
			if (SequenceAccountingUnit entered)
				return SequenceAccountingUnit
			else 
				return DerivedSummaryAccountingUnit

	Local Fields
		LocalCodeBlockRelation						is a CodeBlockRelation			

					
	Conditions

 		ErrorTransaction
 			restricted
 			when (ErrorMessage entered)
		CanDefineZones
			restricted
			when (AccountingEntity.AccountingUnitZoneBalancing)
		FromOrToRelationExists
 			restricted
 			when (CodeBlockRelationFromRel exists
 			or    CodeBlockRelationToRel exists)
		SecurityGroupAllowsAccess
			when (actor.context.AccountingEntitySecurityGroup = blank
			or   (AccountingEntitySecurityGroupMemberRel exists))
		UsedForFundAccounting 
			when (FinanceEnterpriseGroup.FundAccounting = true
			and   FinanceEnterpriseGroup.FundDimension.AccountingUnit)
			 
 	Sets
		ByDimension
			Sort Order
				FinanceEnterpriseGroup
				AccountingUnitStructure
				AccountingEntity
				AccountingUnit
				AccountingUnitUpload.RunGroup
				AccountingUnitUpload.Sequence
				 	
	Relations
		AccountingUnitHierarchyRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.AccountingUnitStructure = AccountingUnitStructure
				related.AccountingEntity		= AccountingEntity
				related.AccountingUnit          = AccountingUnit

		EntityNodeRel
			one-to-many relation to AccountingUnit
			Field Mapping uses ByDimensionStructure
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.DimensionStructure     	= AccountingUnitStructure
				related.AccountingUnitType      = 4
				related.AccountingEntity        = AccountingEntity
		
		OtherRecordsInRunGroupRel
			one-to-many relation to AccountingUnitUpload
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.AccountingUnitStructure = AccountingUnitStructure
			Instance Selection
				where (related.AccountingUnitUpload.RunGroup = AccountingUnitUpload.RunGroup)
				
		CodeBlockRelationFromRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByFromTo
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FromField					= 2
		CodeBlockRelationToRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ToField						= 2
		CodeBlockRelationRuleDynamicRel
			one-to-many relation to CodeBlockRelationRule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.CodeBlockRelation				= LocalCodeBlockRelation
			Instance Selection
				where (related.Active
				and    related.DynamicCreate)				
				
		AccountingEntitySecurityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityGroup   = actor.context.AccountingEntitySecurityGroup.FinanceDimensionStructure
				related.AccountingEntity        = AccountingEntity
	
	Field Rules
		AccountingEntity
			required
    	AccountingUnit
    		required
		RecordType
		   	required	
		Description
			required
		BudgetIdentifier
			constraint (RecordType.Summary)
				"NotValidForPostingDimension"
		IncludeInBudgetEdit
			constraint (RecordType.Posting)
				"NotValidForSummaryDimension"
    	IsAZoneAccountingUnit
    		if (!CanDefineZones)
    			IsAZoneAccountingUnit = false
    	ZoneAccountingUnit
    		if (!CanDefineZones)
    			ZoneAccountingUnit = blank
    	EntityZoneAccountingUnit
    		if (!CanDefineZones)
    			EntityZoneAccountingUnit = false
    	DefaultZoneAccountingUnit
    		if (!CanDefineZones)
    			DefaultZoneAccountingUnit = false
    			    						
    Actions
		Create is a Create Action
			Entrance Rules
				if (!AccountingUnitUpload.Sequence entered)
					AccountingUnitUpload.Sequence = (last OtherRecordsInRunGroupRel.AccountingUnitUpload.Sequence + 1)

		Update is an Update Action
			Exit Rules

		Delete is a Delete Action
		
		Purge is a Purge Action
			restricted

		UploadHierarchy is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingUnitStructure			is an AccountingUnitStructure
					default label is "AccountingUnitStructure"
				PrmRunGroup							is AlphaUpper 30
					default label is "RunGroup"
				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmAccountingUnitStructure
					required
				PrmRunGroup
					required

			Set Is
				PrmFinanceEnterpriseGroup
				PrmAccountingUnitStructure
				PrmRunGroup

			Local Fields	
				LocalErrorMessage		is Alpha 150
				LocalAccountingEntity	is an AccountingEntity
				LocalAccountingUnit		is an AccountingUnit
				LocalRecordCreated		is Boolean
				LocalEntityNode			is like AccountingUnit
				DynamicRulesExist		is Boolean		
				
			Instance Selection
				where (FinanceEnterpriseGroup		 = PrmFinanceEnterpriseGroup
				and	   AccountingUnitStructure		 = PrmAccountingUnitStructure
				and    AccountingUnitUpload.RunGroup = PrmRunGroup)
				
			Sort Order
				FinanceEnterpriseGroup
				AccountingUnitStructure
				AccountingUnitUpload.RunGroup
				AccountingUnitUpload.Sequence

			Action Rules
				FinanceEnterpriseGroup Set Rules
					Entrance Rules
						DynamicRulesExist = false
						if (FromOrToRelationExists)
							if (CodeBlockRelationToRel exists)
								for each CodeBlockRelationToRel
									LocalCodeBlockRelation		= each.CodeBlockRelation
									if (CodeBlockRelationRuleDynamicRel exists)
										DynamicRulesExist = true
							if (!DynamicRulesExist
							and CodeBlockRelationFromRel exists)
								for each CodeBlockRelationFromRel
									LocalCodeBlockRelation		= each.CodeBlockRelation
									if (CodeBlockRelationRuleDynamicRel exists)
										DynamicRulesExist = true
					Exit Rules



								
				Instance Rules
					initialize LocalErrorMessage
					LocalAccountingEntity   = AccountingEntity
					if (RecordType.Posting)
						LocalAccountingUnit = AccountingUnit
					else
						LocalAccountingUnit	= DerivedSummarySequenceAccountingUnit
					
					if (LocalAccountingUnit exists)
						if  (RecordType.Posting
						and !AccountingUnitHierarchyRel exists)
							if (!EntityNodeRel exists)
								LocalEntityNode      = EntityNodeString	
								invoke CreateCopy AccountingUnit
									invoked.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
									invoked.DimensionStructure    	 	= AccountingUnitStructure
									invoked.AccountingUnitType     		= 4
									invoked.AccountingEntity      	 	= AccountingEntity						
									invoked.AccountingUnit				= LocalEntityNode
									invoked.Description					= "Entity Node" 
									invoked.DisplayAccountingUnit		= EntityNodeMinusPrefix
									invoked.ParentAccountingUnit 		= DerivedTopNode 
								invoke Create AccountingUnitHierarchy
									invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.AccountingUnitStructure		= AccountingUnitStructure
									invoked.AccountingEntity			= AccountingEntity
									invoked.AccountingUnit		    	= LocalEntityNode
									invoked.ParentNodeGroup.DimensionEntity	= DerivedTopNodeEntity							
									invoked.ParentNodeGroup.DimensionNode   = DerivedTopNode 
									invoked.DisplayAccountingUnit		= EntityNodeMinusPrefix	
							invoke AddPostingAccountingUnitToStructure LocalAccountingUnit
								resume on error
									LocalErrorMessage	  = error message
								invoked.PrmStructure      		= AccountingUnitStructure
								invoked.PrmParentAccountingUnit = DerivedParentSequenceAccountingUnit
						else
							if (DerivedParentSequenceAccountingUnit != LocalAccountingUnit.DerivedParentAccountingUnit)
								invoke Move LocalAccountingUnit
									resume on error
										LocalErrorMessage	= error message
									invoked.NewParent = DerivedParentAccountingUnit
							if (!LocalErrorMessage entered)
								invoke Update LocalAccountingUnit
									resume on error
										LocalErrorMessage	= error message
									fill in fields from this instance
										except invoked.AccountingUnit 
										except invoked.ParentAccountingUnit






					else
						LocalRecordCreated = true
						invoke Create AccountingUnit
							resume on error
								LocalErrorMessage		= error message
							fill in fields from this instance
							invoked.AccountingUnitType  		   = RecordType
							if (!DynamicRulesExist)
								invoked.BypassNewStructureNotification = true
							else
								invoked.BypassNewStructureNotification = false						
							if (ParentAccountingUnit entered)
								invoked.ParentAccountingUnit = DerivedParentAccountingUnit
					if (!LocalErrorMessage entered)
						invoke Purge
						if (DynamicRulesExist)
							commit transaction
					else
						ErrorMessage				= LocalErrorMessage

		ResetAllErrors is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingUnitStructure		    is an AccountingUnitStructure
					default label is "AccountingUnitStructure"
				PrmRunGroup							is AlphaUpper 30
					default label is "RunGroup"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmAccountingUnitStructure
					required
				PrmRunGroup
					required
														
			Instance Selection
				where (FinanceEnterpriseGroup		 = PrmFinanceEnterpriseGroup
				and	   AccountingUnitStructure	     = PrmAccountingUnitStructure
				and    AccountingUnitUpload.RunGroup = PrmRunGroup
				and    ErrorMessage entered)
				
			Action Rules
			
				Instance Rules
					initialize ErrorMessage

		DeleteAll is a Set Action
			restricted
		
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingUnitStructure  is an AccountingUnitStructure
					default label is "<FinanceEnterpriseGroup.AccountingUnitLabel>Structure"
				PrmRunGroup					is AlphaUpper 30
				
			Instance Selection
				where (FinanceEnterpriseGroup		 = PrmFinanceEnterpriseGroup
				and	   AccountingUnitStructure		 = PrmAccountingUnitStructure
				and    AccountingUnitUpload.RunGroup = PrmRunGroup)
				
			Action Rules
			
				Instance Rules
					invoke Purge							
