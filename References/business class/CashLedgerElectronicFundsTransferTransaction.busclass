CashLedgerElectronicFundsTransferTransaction is a BusinessClass
    owned by cb
    prefix is CFT
    sql name is CLEFundsTransferTransaction
    classic name is CBFTTRANS

    Ontology
        symbolic key is CashLedgerElectronicFundsTransferTransaction
            classic set name is CFTSET1
            classic name for CashLedgerElectronicFundsTransferTransaction.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber is TRANS-IDENT

    Patterns
		implements InlineUserFields
			size is 1000	       
        implements StaticJava
        disable AuditIndex

    Persistent Fields
    	CashManagementAccount
		TransactionIdentifierSequenceNumber
        CashLedgerTransactionIdentifier								
    	CommentText
        Company                             is a CompanyIsolated  	
        CurrencyTable											  	
        TransactionNumber	
            classic name is TRANS-NBR
        Reference                           is a TransactionNumber  
            classic name is REFERENCE-NO
        Status                              is Numeric size 1
            classic name is REC-STATUS
            States
                Unreleased                           value is 0
                Released                             value is 1
                ElectronicFundsCreated               value is 2
                    default label is "ElectronicFundsCreated"
                Voided                               value is 3
                StopPayment                          value is 4
                    default label is "StopPayment"
                ElectronicFundsRejectedNotReinstated value is 5
                    default label is "ElectronicFundsRejectedNotReinstated"
                ElectronicFundsRejectedReinstated    value is 6
                    default label is "ElectronicFundsRejectedReinstated"
                PendingApproval						 value is 7
                Canceled							 value is 8	
        TransactionDate                     is an ExchangeDate 
            classic name is TRANS-DATE
        ElectronicFundsTransferDepositDate  is Date
            sql name is EFundsTransferDepositDate
            classic name is EFT-DATE
        ReceiptAmount                       is a CurrencyAmount	
        BankAccountCurrencyNumberOfDecimals is an AcctNd
            sql name is BACurrencyNumberOfDecimals
            classic name is BANK-ND
        ReceiptBaseAmount                   is a FinanceCurrencyAmount 
            classic name is BASE-RECPT-AMT
        BaseCurrencyNumberOfDecimals        is an AcctNd
            classic name is BASE-ND
        ElectronicFundsTransferBaseAmount   is an InternationalAmount
            sql name is EFundsTransferBaseAmount
            classic name is BASE-EFT-AMT

        Currency							is a FromCurrency
            classic name is CURRENCY-CODE
        Description
        CustomerName                        is a SearchName
            classic name is CUST-NAME
        CustomerPostalAddress				is a PostalAddressV2	
        	holds pii
        BankEntity
            classic name is CUST-BANK
        BankAccountNumber
            classic name is CUST-ACCOUNT
        BankAccountValidationType
            classic name is VBANK-IDENT
        BankName												
        CrossBorderIdentifier                                   
        SwiftID													
        	default label is "SWIFT/BIC"
        BankPostalAddress					is a PostalAddressV2	
        	holds pii
        ElectronicPaymentCode									
		FirstPartyReference					is Alpha 12			
		SecondPartyReference				is Alpha 12			
        ACHPrenotification
            classic name is ACH-PRENOTE
        JournalBook
        	context of Company.OrigCompany
            classic name is JRNL-BOOK-NBR
            restricted
        JournalBookSequenceNumber           is a JbkSeqNbr
            classic name is JBK-SEQ-NBR
            restricted
		TransactionData1                    is a TransactionData
            classic name is USER-FIELD1
		TransactionData2                    is a TransactionData
            classic name is USER-FIELD2
		TransactionData3                    is a TransactionData
            classic name is USER-FIELD3
		TransactionData4                    is a TransactionData
            classic name is USER-FIELD4
        TaxInterfaced                       is AlphaUpper size 1
            classic name is TAX-FLAG
            States
                NotInterfaced value is blank
                Interfaced    value is "I"
        LastDistributionSequence            is a SequenceNumber
            classic name is LAST-DIST-SEQ
        	disable Auditing
        GeneralLedgerSourceCode				is a GeneralLedgerEvent
            classic name is SOURCE-CODE
            default label is "SourceCode"
        TransactionType                     is AlphaUpper size 1
            classic name is TRANS-TYPE
            States
                CreditCard value is "2"
                EftExtract value is "4"
                    default label is "EFTExtract"
        VoidDate                            is Date
		ApprovalCostCenter					is like AccountingUnit		
		ApprovalCategory					
		ApprovalCode
		ApprovalLevel						is Numeric 8
		ReassignToApprovalLevel				is an ApprovalCodeResource
		Approver							is a FinanceResource
		ApproverTeam						is a FinanceTeamField
        CompanyCashCode
        	context of Company.OrigCompany
		ConfirmationNumber					
		CashCodeTransactionCode
			context of CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
		OriginatingImportRun				is a CashTransactionImportResult
			delete ignored
		ImportInProcess						is Boolean						
		CashLedgerBatchApproval
			default label is "ApprovalBatch"
		BudgetEditProcessing 				is Numeric size 1
			States
                NotInProcessing value is 0
                InProcess  		value is 1
                Failure    		value is 2
                Success    		value is 3
        CashLedgerMassReleaseResult			is Numeric size 12
		EFTTransferAttachment				is an AlternateAttachment		
		EFTProcessingHold					is Boolean				
		BankAccountType												
		GlobalBankAccountType										
		CashLedgerProcessGroup										
		
	Transient Fields
		TransientAccountingEntity			is an AccountingEntity
			derive value from Company.OrigCompany.AccountingEntity
        RIBKey
 		ReceiptAmountUnsigned 				is an UnsignedInternationalAmount
			derive value from CashLedgerElectronicFundsTransferTransaction.ReceiptAmount
		TransientActionType					is Numeric 1
		TransientVoidDate					is Date
		TransientStaleDate					is Date
		TransientStaleDateAccount			is like FinanceCodeBlock
		CompletionMessage					is Alpha size 150
		TransientErrorDescription			is Alpha size up to 200	
			derive value from first CashLedgerTransactionErrorMassReleaseRel.ErrorDescription
		TransientEftExtractPostingDate		is Date
			
	Local Fields
        VerifyRIBKey
		ValidateBankAccountNumber
		NewTransactionIDNumber				is like TransactionIDNumber

		LocalCompanyGroup					is like GeneralLedgerCompanyGroup
		LocalCashCodeGroup					is like CashCodeGroup
		OriginalEftTransactionIDNumber		is like TransactionIDNumber
		OriginalLastDistributionSequence	is a SequenceNumber
		LocalActionType						is Numeric 1
			States
				VoidElectronicFundTransfer	value is 1
				VoidCashLedgerTransaction	value is 2
		LocalCashManagementGroup				is like CashManagementGroup
		LocalCashCode							is like CashCode
		LocalBankTransactionCode				is like BankTransactionCode
		LocalTransactionIDNumber				is a TransactionIDNumber
		LocalApprovalLevel						is Numeric 8
		LocalApprover							is a FinanceResource
		LocalApproverTeam						is a FinanceTeamField		
		LocalApproverList						is Alpha 250
		LocalFirstApproverAssigned				is Boolean
		LocalRejectReason						is AlphaUpper 20
		LocalRejectComment						is Alpha size up to 500
		LocalActionSubmitForApproval			is Boolean
		LocalActionUnreleaseToRelease			is Boolean
		LocalActionReleaseToCancel				is Boolean 
		BypassDuplicateEdit						is Boolean
		BypassClosingControlEdit				is Boolean	
		LocalDistributionFinanceCurrAmt			is a FinanceCurrencyAmount
		LocalInterfaceAsPosted					is Boolean
		AutoNumberByCompany						is like GeneralLedgerCompany
		AutoNumberByCashCode					is like CashCode
		AutoNumberByBankTransactionCode			is like BankTransactionCode
		LocalCashLedgerAutoTranNumber			is a CashLedgerAutoTranNumber view
		LocalReference							is a TransactionNumber
		DuplicateTranNumberFound				is Boolean
		AutoNumberingAction			 			is Numeric 1
			States
				OverrideNumberWithAnAutoGeneratedNumber	value is 1
				BypassAutoTransactionNumbering			value is 2
		LocalPrenoteAccepted					is Boolean
		LocalJournalizeGroup					is like JournalizeGroup

		LocalCompletionMessage					is Alpha 100
		LocalDistributionSequenceNumber			is like SequenceNumber	
		LocalFinanceCurrencyAmount				is a  FinanceCurrencyAmount
		LocalCalculateCashFinanceStructure		is a CalculateCashFinanceStructure
		LocalAnswer 							is Alpha size 1
		LocalRecordType							is a CashLedgerDistribRecordType
		LocalToAccountingEntity					is like AccountingEntity
		LocalAccountingUnit						is like AccountingUnit
		LocalFinanceDimension1					is a FinanceDimension1
		LocalTransactionCount           		is Numeric size 6
		LocalAttributeCtr   is Numeric 2
		
	Rule Blocks
		SetCurrencyData
			TransientAccountingEntity	= Company.OrigCompany.AccountingEntity
        	Currency 					= CashCode.Currency

		CreateOffsetDistribution

			include DistributionRoundingOffSet

			if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
				for each CashLedgerGLDistributionsEFTPaymentRel
					LocalFinanceCurrencyAmount								 			= each.GLBaseAmount
					include ReverseBaseDistributionAmounts

					initialize LocalCalculateCashFinanceStructure
					LocalCalculateCashFinanceStructure.InputCashManagementGroup				= each.CashManagementGroup
					LocalCalculateCashFinanceStructure.InputCashCode						= each.CashCode
					LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord			= each.CashLedgerSourceRecord
					LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution		= each.CashLedgerGLDistribution
					LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock				= each.CashLedgerGLDistribution.GLFinanceCodeBlock
					LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType	= CashLedgerFinanceStructureType.EftPaymentDistribution
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock				= CompanyCashCode.ElectronicPaymentAccount
					LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure

					invoke Create CashLedgerGLDistribution
						fill in fields from CashLedgerElectronicFundsTransferTransaction
						invoked.CashCode										= CashCode
						invoked.CashLedgerSourceRecord							= "CFT"
						invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
						invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
						invoked.TransactionNumberSuffix						 	= 0					
						invoked.TransactionNumber 	                            = Reference
						invoked.GeneralLedgerSourceCode                         = GeneralLedgerSourceCode
						invoked.Company                                         = Company
						invoked.CompanyAccountingEntity							= Company.OrigCompany.AccountingEntity
						invoked.GLFinanceCodeBlock                              = LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock
						invoked.RecordType                                      = CashLedgerDistribRecordType.OffsetEftPaymentDistribution
						invoked.CashLedgerGLDistribution.DistributionType       = DistType.Entry
						invoked.Status                                          = Status.Released
						invoked.PostDate                                        = TransactionDate
						invoked.Reference                                       = "EftCcExtractEntry"
						invoked.Description                                     = Description
						invoked.BaseCurrencyNumberOfDecimals                    = BaseCurrencyNumberOfDecimals
						invoked.ToBaseCurrencyNumberOfDecimals                  = BaseCurrencyNumberOfDecimals
						invoked.TransactionCurrencyNumberOfDecimals             = BankAccountCurrencyNumberOfDecimals
						invoked.ToTransactionCurrencyNumberOfDecimals           = BankAccountCurrencyNumberOfDecimals
						invoked.GLTransactionAmount    					     	= each.GLTransactionAmount * -1
						invoked.DistributionToBankAmount  				     	= each.GLTransactionAmount * -1
						invoked.GLBaseAmount					    			= LocalFinanceCurrencyAmount
						invoked.EftOffsetFlag									= true
						invoked.GLTJournalizeGroup								= LocalJournalizeGroup
						invoked.BypassStatusEdit								= true
			else
				invoke Create CashLedgerGLDistribution
					fill in fields from CashLedgerElectronicFundsTransferTransaction
					invoked.CashCode										= CashCode
					invoked.CashLedgerSourceRecord							= "CFT"
					invoked.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
					invoked.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
					invoked.TransactionNumberSuffix						 	= 0					
					invoked.TransactionNumber 	                            = Reference
					invoked.GeneralLedgerSourceCode                         = GeneralLedgerSourceCode
					invoked.Company                                         = Company
					invoked.CompanyAccountingEntity							= Company.OrigCompany.AccountingEntity
					invoked.GLFinanceCodeBlock                              = CompanyCashCode.ElectronicPaymentAccount
					invoked.RecordType                                      = CashLedgerDistribRecordType.EftPaymentDistribution
					invoked.CashLedgerGLDistribution.DistributionType       = DistType.Entry
					invoked.Status                                          = Status.Released
					invoked.PostDate                                        = TransactionDate
					invoked.Reference                                       = "EftCcExtractEntry"
					invoked.Description                                     = Description
					invoked.BaseCurrencyNumberOfDecimals                    = BaseCurrencyNumberOfDecimals
					invoked.ToBaseCurrencyNumberOfDecimals                  = BaseCurrencyNumberOfDecimals
					invoked.TransactionCurrencyNumberOfDecimals             = BankAccountCurrencyNumberOfDecimals
					invoked.ToTransactionCurrencyNumberOfDecimals           = BankAccountCurrencyNumberOfDecimals
					invoked.GLTransactionAmount       					    = ReceiptAmount
					invoked.DistributionToBankAmount     					= ReceiptAmount
					invoked.GLBaseAmount					    			= ReceiptBaseAmount
					invoked.EftOffsetFlag									= true
					invoked.GLTJournalizeGroup								= LocalJournalizeGroup
					invoked.BypassStatusEdit								= true

			invoke Release CashLedgerGLDistributionsUnReleasedRel

		DistributionRoundingOffSet
			initialize LocalDistributionFinanceCurrAmt
			for each CashLedgerGLDistributionsRel
				LocalDistributionFinanceCurrAmt.FunctionalAmount.EnteredCurrencyAmount		+= each.GLBaseAmount.FunctionalAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount.EnteredCurrencyAmount		+= each.GLBaseAmount.AlternateAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount2.EnteredCurrencyAmount		+= each.GLBaseAmount.AlternateAmount2.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.AlternateAmount3.EnteredCurrencyAmount		+= each.GLBaseAmount.AlternateAmount3.EnteredCurrencyAmount
	        	LocalDistributionFinanceCurrAmt.ToFunctionalAmount.EnteredCurrencyAmount	+= each.GLBaseAmount.ToFunctionalAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ToAlternateAmount.EnteredCurrencyAmount		+= each.GLBaseAmount.ToAlternateAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ToAlternateAmount2.EnteredCurrencyAmount	+= each.GLBaseAmount.ToAlternateAmount2.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ToAlternateAmount3.EnteredCurrencyAmount	+= each.GLBaseAmount.ToAlternateAmount3.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ProjectAmount.EnteredCurrencyAmount			+= each.GLBaseAmount.ProjectAmount.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount1.EnteredCurrencyAmount			+= each.GLBaseAmount.ReportAmount1.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount2.EnteredCurrencyAmount			+= each.GLBaseAmount.ReportAmount2.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount3.EnteredCurrencyAmount			+= each.GLBaseAmount.ReportAmount3.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount4.EnteredCurrencyAmount			+= each.GLBaseAmount.ReportAmount4.EnteredCurrencyAmount
				LocalDistributionFinanceCurrAmt.ReportAmount5.EnteredCurrencyAmount			+= each.GLBaseAmount.ReportAmount5.EnteredCurrencyAmount

			invoke AdjustDistributionCurrencyAmounts last CashLedgerGLDistributionsRel
				invoked.PrmCurrencyAmountAdjustment.FunctionalTotal		= ((ReceiptBaseAmount.FunctionalAmount.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.FunctionalAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal		= ((ReceiptBaseAmount.AlternateAmount.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.AlternateAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal2		= ((ReceiptBaseAmount.AlternateAmount2.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.AlternateAmount2.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.AlternateTotal3		= ((ReceiptBaseAmount.AlternateAmount3.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.AlternateAmount3.EnteredCurrencyAmount)
            	invoked.PrmCurrencyAmountAdjustment.ToFunctionalTotal	= ((ReceiptBaseAmount.ToFunctionalAmount.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.ToFunctionalAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ToAlternateTotal	= ((ReceiptBaseAmount.ToAlternateAmount.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.ToAlternateAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ToAlternateTotal2	= ((ReceiptBaseAmount.ToAlternateAmount2.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.ToAlternateAmount2.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ToAlternateTotal3	= ((ReceiptBaseAmount.ToAlternateAmount3.EnteredCurrencyAmount	* -1)	- LocalDistributionFinanceCurrAmt.ToAlternateAmount3.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ProjectTotal		= ((ReceiptBaseAmount.ProjectAmount.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ProjectAmount.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal1		= ((ReceiptBaseAmount.ReportAmount1.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ReportAmount1.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal2		= ((ReceiptBaseAmount.ReportAmount2.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ReportAmount2.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal3		= ((ReceiptBaseAmount.ReportAmount3.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ReportAmount3.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal4		= ((ReceiptBaseAmount.ReportAmount4.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ReportAmount4.EnteredCurrencyAmount)
				invoked.PrmCurrencyAmountAdjustment.ReportTotal5		= ((ReceiptBaseAmount.ReportAmount5.EnteredCurrencyAmount		* -1)	- LocalDistributionFinanceCurrAmt.ReportAmount5.EnteredCurrencyAmount)

		ReverseBaseDistributionAmounts
			LocalFinanceCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount 	*= -1
			LocalFinanceCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	*= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount *= -1
			LocalFinanceCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 	 	*= -1
			LocalFinanceCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 		*= -1
			LocalFinanceCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 		*= -1

		CheckForRelatedChanges	
			if (TransactionDate changed
			or  CurrencyTable changed
			or  Reference changed)	
				if (first CashLedgerGLDistributionsRel exists)
					for each CashLedgerGLDistributionsRel

						invoke UpdateAllDistributions each	
							if (Reference changed)
								invoked.PrmTransactionNumber		= Reference
								invoked.PrmTransactionNumberChanged	= true
							if (TransactionDate changed
							or  CurrencyTable changed)	
								invoked.PrmRecalcAmounts			= true
			

		InitiateApprovalProcessFlow
			LocalCashManagementGroup		= CashManagementGroup
			LocalCashCode					= CashCode
			LocalBankTransactionCode		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
			LocalTransactionIDNumber		= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
			
			initiate CashLedgerEFTExtractApproval process
				title is "CashLedgerEFTExtract<Reference>WaitingForApproval" 
				Variables
					LocalCashManagementGroup
					LocalCashCode
					LocalBankTransactionCode
					LocalTransactionIDNumber
				URLs
					"<linkback(webapp is CashManager navigation is ProcessFlowForm text is \"ViewCashLedgerEFTExtract\")>"

		BuildTeamApproverActorList
			LocalApproverList = ""
			LocalFirstApproverAssigned = false
			for each FinanceTeamMembersFromCurrentApprovalLevelRel
				if (LocalFirstApproverAssigned)
					LocalApproverList = LocalApproverList + "," + each.FinanceTeamMember.TeamMember.FinanceResourceActor
				else
					LocalApproverList = each.FinanceTeamMember.TeamMember.FinanceResourceActor
					LocalFirstApproverAssigned = true
		
		GetNextEscalationApprovalLevel
			LocalApprovalLevel		= ApprovalLevel
			if (first LocalApprovalCodeLevelRel.EscalateTo.NextApprovalLevel)
				LocalApprovalLevel	= ApprovalLevel + 1
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
			else
				LocalApprovalLevel	= first LocalApprovalCodeLevelRel.EscalationApprovalLevel.ApprovalLevel
				LocalApprover		= first LocalApprovalCodeLevelRel.Approver
				LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam

		GetNextApprovalLevel
			if (ApprovalLevel < 1)
				LocalApprovalLevel	= first ApprovalCodeResourceRel.ApprovalLevel
				LocalApprover		= first ApprovalCodeResourceRel.Approver
				LocalApproverTeam	= first ApprovalCodeResourceRel.ApprovalTeam
			else
				LocalApprovalLevel		= ApprovalLevel + 1
				if (LocalApprovalCodeLevelRel exists)
					LocalApprovalLevel	= first LocalApprovalCodeLevelRel.ApprovalLevel
					LocalApprover		= first LocalApprovalCodeLevelRel.Approver
					LocalApproverTeam	= first LocalApprovalCodeLevelRel.ApprovalTeam
				else
					initialize LocalApprovalLevel
					initialize LocalApprover
					initialize LocalApproverTeam


		ReleaseExitRules

			if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
				invoke UpdateToReleased GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity


		PerformBudgetEditsForApprovalOrReleaseOrCancel






			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess                   
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel  	
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    											= CashManagementGroup
					invoked.PrmBudgetEditGroup           											= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashCode 					= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
					invoked.PrmMode																	= BudgetEditMode.UpdateOnly	
					invoked.PrmBusinessClassName                									= "CashLedgerElectronicFundsTransferTransaction"	
					if (LocalActionUnreleaseToRelease)
						invoked.PrmActionCode														= "R"  
						invoked.PrmEditContext                      								= "Release"	
					else	 
					if (LocalActionSubmitForApproval)
						invoked.PrmActionCode														= "A" 	
						invoked.PrmEditContext          			            					= "SubmitForApproval"	
					else	
					if (LocalActionReleaseToCancel)
						invoked.PrmActionCode														= "N"	
						invoked.PrmEditContext      			                					= "Cancel"	
			else
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				if (LocalActionUnreleaseToRelease)
					invoke FinalRelease
				else	
				if (LocalActionSubmitForApproval)
					invoke FinalApproval
				else
				if (LocalActionReleaseToCancel)	
					invoke FinalCancel


		PerformBudgetEditsForVoids	

			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
        	and  GLCommitRelExists)
 				BudgetEditProcessing = BudgetEditProcessing.InProcess 
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel 
				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    											= CashManagementGroup
					invoked.PrmBudgetEditGroup           											= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashCode 					= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
					invoked.PrmActionCode															= "V"	
					invoked.PrmMode																	= BudgetEditMode.UpdateOnly
					invoked.PrmBusinessClassName                									= "CashLedgerElectronicFundsTransferTransaction"	
					invoked.PrmEditContext       					               					= "VoidOrStopPay"									//IEFIN-87517	"Void"	
				invoke UpdateToReleased GLCommit										
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup  
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity

		RejectBudgetCommitments		
			if ((GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			or   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
			and  GLCommitRelExists)
				invoke RejectInvoice GLCommit
					invoked.PrmFinanceEnterpriseGroup	= CashManagementGroup
					invoked.PrmUniqueID					= UniqueID
					invoked.PrmAccountingEntity			= Company.OrigCompany.AccountingEntity
					invoked.PrmEditContext				= "RejectEFTTransaction"
																		
		GetAutoNumberByLevel
			if (CashManagementGroup.AutoReferenceNumberByCompany)
				AutoNumberByCompany 				= Company
			else	 									 
			if (CashManagementGroup.AutoReferenceNumberByCashCode)
				AutoNumberByCashCode				= CashCode
			else	  					  
			if (CashManagementGroup.AutoReferenceNumberByBankTransactionCode)
				AutoNumberByBankTransactionCode		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
			else
			if (CashManagementGroup.AutoReferenceNumberByCashCodeBankTranCode)
				AutoNumberByCashCode				= CashCode
				AutoNumberByBankTransactionCode		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	

		StripLeadingSpaces	
			while (Reference[1:1] = blank)
				Reference = Reference[2:22]
				
		CheckForDuplicates
			if (!BypassDuplicateEdit)
				constraint (!DuplicateEFTTransactionsRel exists)
					"Reference<Reference>AlreadyExistsForCashCode<CashCode>AndBankTransactionCode<CashLedgerElectronicFundsTransferTransaction.BankTransactionCode>"	








		ResetLocalFieldsForRelease	
			LocalActionUnreleaseToRelease	= true
			LocalJournalizeGroup = first CashLedgerGLDistributionsRel.GLTransactionDetailRel.JournalizeGroup
				
		ResetLocalFieldsForApproval	
			LocalActionSubmitForApproval = true
			
		ResetLocalFieldsForCancel	
			LocalActionReleaseToCancel = true 		 	
						
	Derived Fields
		AppliedBankAmount 					is a DerivedField		
			type is like InternationalAmount
			return (sum CashLedgerGLDistributionsRel.GLTransactionAmount * -1) 

		BalanceAmount						is a DerivedField
			type is like InternationalAmount
			return  ReceiptAmount - AppliedBankAmount


		DerivedNextApprovalLevel is a DerivedField
			type is Numeric 8
			restricted
			LocalApprovalLevel = ApprovalLevel
			include GetNextApprovalLevel
			return LocalApprovalLevel
			
		DerivedCurrentApprovalResource is a DerivedField
			type is like FinanceResource
			restricted
			return first CurrentApprovalCodeLevelRel.Approver

		DerivedCurrentApprovalActor is a DerivedField
			type is Actor
			restricted
			return first CurrentApprovalCodeLevelRel.Approver.FinanceResourceActor

		DerivedCurrentApprovalTeam is a DerivedField
			type is like FinanceTeam
			restricted
			return first CurrentApprovalCodeLevelRel.ApprovalTeam

		DerivedCurrentTeamActorList is a DerivedField
			type is Alpha 250
			restricted
			include BuildTeamApproverActorList
			return LocalApproverList

		DerivedCurrentApproverEscalationDays is a DerivedField
			type is Numeric 6
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationDays > 0)
				return first CurrentApprovalCodeLevelRel.EscalationDays	
			else
				return 10000

		DerivedCurrentApproverEscalationHours is a DerivedField
			type is Decimal 6.2
			restricted
			if (first CurrentApprovalCodeLevelRel.EscalationHours > 0)
				return first CurrentApprovalCodeLevelRel.EscalationHours
			else
				return 9999.99
				
		DisplayCurrentApproverDesc is a ConditionalField
			type is Alpha 100
			restricted
			if (Approver entered)
				Approver.PreferredSimplePresentationName
			else
				ApproverTeam.FinanceTeam.Description

		DerivedHeaderBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (HeaderBudgetEditErrorExists)
				return "(" + instance count of HeaderBudgetEditErrorRel + ")"
			else
				return ""

		DerivedWarningBudgetErrorCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (DistributionBudgetEditErrorExists)
				return "(" + instance count of DistributionBudgetEditErrorRel + ")"
			else
				return ""
					
        DerivedTransactionCount is a DerivedField
            type is Numeric 7
            return  1

		DerivedAppsValue	is a DerivedField
			type is like PfiAppsValue
			return "CashLedgerEFTExtractApproval" + UniqueID			

		UserActionRoutingAsHtml	is a DerivedField
			type is RichText
			return first PfiWorkunitRel.UserActionRoutingAsHtml
			
		MyPFIApprovals is a DerivedField
            type is Boolean
            restricted
            for each PfiWorkunitRel
                for each each.PfiMetricsRel
                    if (each.PfiMetrics.PfiUserProfile = actor)
                        return true 

		DerivedFirstErrorMessage is a DerivedField
			type is Alpha size up to 200
        	restricted
        	if (HeaderBudgetEditErrorRel exists)
        		return MouseOverBudgetErrorMessage
			if (DistributionBudgetEditErrorRel exists)
				return MouseOverBudgetErrorMessage
			if (ImportInProcess)
				return MouseOverImportErrorMessage
			if (IsEFTProcessingOnHold)	
				return MouseOverOnHoldErrorMessage
		
		DerivedEFTFormTitle is a DerivedField
			type is Alpha size up to 80
			if (RecordExists)
				return CashLedgerEFTTitle
			else
				return CashLedgerEFTTitleNoRecord
		
		CashLedgerEFTTitleNoRecord is a LabelField
			restricted
			"ElectronicFundsTransfer_/CreditCardExtractEntry"
		
		CashLedgerEFTTitle is a LabelField
			restricted
			"ElectronicFundsTransfer_/CreditCardExtractEntry_-(<CashLedgerElectronicFundsTransferTransaction.Reference>)"
				
		MouseOverOnHoldErrorMessage is a MessageField	
			restricted
			"EFTIsOnHold;WillNotBeProcessedByEFTExtractFileCreationExceptForPrenotification"
				
		MouseOverBudgetErrorMessage is a MessageField
			restricted
			"BudgetErrorsExist;SeeBudgetErrorTabForDetails"

		MouseOverImportErrorMessage is a MessageField
			restricted
			"TransactionIsPartiallyAddedFromRunGroup:<OriginatingImportRun.RunGroup>RunTime:<OriginatingImportRun.RunTime>"

		MassReleaseCompleteMessage is a MessageField
			restricted
			"MassReleaseComplete;SeeResultsRecord"

		EFTsPutOnHoldMessage is a MessageField	
			restricted
			"EFT\sPutOnProcessingHold"
			
		EFTsTakenOffHoldMessage is a MessageField	
			restricted
			"EFT\sTakenOffProcessingHold"
		
		EFTsFoundToProcessMessage is a MessageField	
			restricted
			"EFT\sFoundToProcess"
			
		DerivedElectronicFundTransferErrorCount is a DerivedField	
			type is Alpha size up to 20
        	restricted
			if (CashLedgerTransactionError set exists)
				return "(" + instance count of CashLedgerTransactionError set + ")"
			else
				return ""
																			
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCashLedgerEFT"

		ContextMessageText is a MessageField
			restricted
			"CashLedgerElectronicFundsTransferTransaction<CashLedgerElectronicFundsTransferTransaction>"
		
		DerivedPlainTextComment   is a DerivedField  
		    type is Text
		    return CommentText plain text
																			
	Conditions
        IsReleasedACHPrenotification
        	restricted
            classic name is EFT-STATUS
            when ((Status.Released
			and   !IsEFTProcessingOnHold)	
            or   (ACHPrenotification.NotPrenotified
            and   !Status.Canceled))		

        CurrentActorApprovals
            restricted
            when (MyPFIApprovals = true)
        
        IsUnreleased
        	restricted
            when (Status.Unreleased)

		IsReleased
        	restricted
            when (!Status.Unreleased)

		IsUpdateable
			restricted
			when (IsUnreleased
			or    AllowUpdateOnApprove)

		IsPendingApproval
			restricted
			when (Status.PendingApproval)

		CanReleaseRecord
			restricted
			when (Status.Unreleased
			and   !ImportInProcess
			and   !BudgetEditInProgress			
			and   !CashManagementGroup.CashLedgerEFTApprovalRequired)

		CanSubmitForApproval
			restricted
			when (Status.Unreleased
			and   !ImportInProcess
			and   !BudgetEditInProgress			
			and   CashManagementGroup.CashLedgerEFTApprovalRequired)

        EFTExtractUpdateComplete	
        	restricted
            when (first CashLedgerTransactionsRel exists)

        IsBankService
        	restricted
            when (CashLedgerElectronicFundsTransferTransaction.BankTransactionCode.BankTransactionType.BankService)

		IsReturnedPaymentEftDeposit
			restricted
			when (DepositBankTransactionCode entered
			and   DepositBankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode)
			



		HasTransactionIdentifierSequenceNumber
			restricted
			when (TransactionIdentifierSequenceNumber entered)

 		RejectCashLedgerEFTReasonCodeRequired
 			restricted
			when (CashManagementGroup.RejectCashLedgerEFTReasonCodeRequired)

		CanManuallyApproveOrReject
			restricted
			when (Status.PendingApproval
			and   !BudgetEditInProgress			
			and   !IsBatchApproved)

		HasApprovalComments
			restricted
			when (CashLedgerEFTExtractReasonCodeUsage set exists)

		IsBatchApproved
			restricted
			when (CashLedgerBatchApproval	entered)
			
		ApprovalCodeRequired
			restricted
			when (CashManagementGroup.CashLedgerEFTApprovalRequired
			and   !CashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
			
		CanBeRemovedFromBatch
			restricted
			when (IsBatchApproved
			and   !Status.Released)	

		BudgetEditingInformationExists
			restricted
			when (BudgetTemplateGroupTotalRel exists)

		MultiRedAlertErrorsExist
			when (HeaderBudgetEditErrorRel exists
			or    DistributionBudgetEditErrorRel exists
			or    IsEFTProcessingOnHold	
			or    ImportInProcess)
					
		BudgetEditErrorExists
			when (HeaderBudgetEditErrorRel exists
			or    DistributionBudgetEditErrorRel exists)
					
		HeaderBudgetEditErrorExists
			restricted
			when (HeaderBudgetEditErrorRel exists)
			
		DistributionBudgetEditErrorExists
			restricted
			when (DistributionBudgetEditErrorRel exists)
		
		BudgetEditInProgress
			restricted
        	when (BudgetEditProcessing.InProcess)
        
        BudgetEditFailure
        	restricted
    		when (BudgetEditProcessing.Failure)

		GLCommitRelExists
			restricted
			when (GLCommitRel exists)

		OpenGLCommitRelExists
			restricted
			when (OpenGLCommitDrillRel exists)
			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		HasWorkunit
			restricted
			when (PfiWorkunitRel exists)
	
		TransactionNumberEntered
			restricted
			when (TransactionNumber entered)

		CurrentActorIsOnApproverTeam
        	restricted
			when (FinanceTeamMemberRel exists)

		CurrentActorIsApprover
        	restricted
			when (Approver	entered
			and	  CashManagementGroup.HROrganization = actor.agent(Employee).HROrganization
			and	  Approver = actor.agent(Employee).Employee)

		CurrentActorCanApprove
        	restricted
			when (CurrentActorIsApprover
			or	  CurrentActorIsOnApproverTeam)

		AllowUpdateOnApprove
        	restricted
			when (Status.PendingApproval
			and	 (CurrentActorCanApprove
			or    CashLedgerBatchApproval.CurrentActorCanApprove))

		CanUpdateDistributions
			restricted
			when (Status.Unreleased
			or   (AllowUpdateOnApprove
			and   !IsBatchApproved))

		CanUpdateComments
			restricted
			when (!ImportInProcess
			and   Status >  0)

		HasAttachment		
			restricted
			when (EFTTransferAttachment entered)

        IsUnreleasedOutOfbalance
        	restricted
            when (ReceiptAmount != AppliedBankAmount
            and   Status.Unreleased)

		AutoNumberingAllowed
			restricted
			when (CashManagementGroup.AutoReferenceNumberForEFTForm
			and   ((CashManagementGroup.AutoReferenceNumberByCompany
			and     Company.OrigCompany.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoReferenceNumberByCashCode
			and     CashCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoReferenceNumberByBankTransactionCode
			and     CashLedgerElectronicFundsTransferTransaction.BankTransactionCode.AutoTransactionNumbering)
			or     (CashManagementGroup.AutoReferenceNumberByCashCodeBankTranCode
			and     CashLedgerElectronicFundsTransferTransaction.BankTransactionCode.AutoTransactionNumbering
			and     CashCode.AutoTransactionNumbering)))

		CanReturnPayment
			restricted
			when (IsBankService
			and   IsReturnedPaymentEftDeposit
			and   !ImportInProcess
			and   Status.ElectronicFundsCreated)

		ElectronicFundTransferErrorsExist	
			when (CashLedgerTransactionErrorRel exists)

		MassReleaseErrorExists	
			when (CashLedgerTransactionErrorMassReleaseRel exists)

		IsEFTProcessingHoldable	
			restricted
			when (!ImportInProcess
			and   Status.Released
			and   !IsEFTProcessingOnHold)
			
		IsEFTProcessingOnHold	
			when (EFTProcessingHold)

		CanCancelUnreleasedRecord	
			restricted
			when (Status.Unreleased
			and   !ImportInProcess)

		CanCancelReleasedRecord	
			restricted
			when (Status.Released)

		ReturnedPaymentExists	
			restricted
			when (CashLedgerReturnedPaymentRel exists)
		
		RecordExists 
			restricted
			when (CashLedgerElectronicFundsTransferTransaction exists)
		
		UnreleasedRecordExists
			restricted
			when (RecordExists
			and  Status.Unreleased)
			
		SecurityGroupAllowsAccess
			when ((actor.context.CashCodeSecurityGroup = "")
			or   (actor.context.CashCodeSecurityGroup != ""
			and   CashCodeSecurityGroupDetailRel exists))

		CompanySecurityGroupAllowsAccess		
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)

		CanceledWithinDateRange        
			restricted
			when ((Status.Canceled
			and	   TransactionDate > ReportDate
			and    first CashLedgerGLDistributionsRel.PostDate <= ReportDate)
			or     !Status.Canceled)

		WithinTransactionDateRange     
			restricted
			when ((!Status.Canceled
			and TransactionDate <= ReportDate)
			or  Status.Canceled)

		WithinDepositDateRange         
			restricted
			when (ElectronicFundsTransferDepositDate not entered
			or	  ElectronicFundsTransferDepositDate > ReportDate)

		WithinRejectedDateRange        
			restricted
			when (VoidDate not entered
			or    VoidDate >= ReportDate)
																					
	Context Fields
		DepositBankTransactionCode
		ContextCashCode					is a CashCode
		ReportDate						is an AsOfDate     
				
	Relations

		CashCodeSecurityGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup         = actor.context.FinanceEnterpriseGroup
				related.CashCodeGroup				= actor.context.CashCodeSecurityGroup.FinanceDimensionStructure
				related.CashCode                    = CashCode

		CashLedgerTransactionsByReferenceRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup	
				related.CashCode 				= CashCode
                related.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                related.TransactionNumber 		= Reference
	
		CashLedgerTransactionsRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup	
				related.CashCode 				= CashCode
                related.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                related.TransactionNumber 		= TransactionNumber

		CashLedgerTransactionRel
			one-to-one relation to CashLedgerTransaction
			Field Mapping uses symbolic key
				related.CashManagementGroup 	= CashManagementGroup	
                related.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
        		related.CashLedgerSourceRecord	= "CFT"
                related.CashLedgerTransaction	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
                
        CashLedgerTransactionPurgeRel
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses symbolic key
				related.CashManagementGroup 	= CashManagementGroup	
                related.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
        		related.CashLedgerSourceRecord	= "CFT"
                related.CashLedgerTransaction	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
            Instance Selection
        		where (related.Status.Reconciled
        		or	   related.Status.Voided
        		or	   related.Status.StopPayment
        		or	   related.Status.WriteOff)		

        CashLedgerFundTransferHeaderRel
        	one-to-one relation to CashLedgerFundTransferHeader
        	Field Mapping uses symbolic key
        		related.CashManagementGroup 			= CashManagementGroup	
        		related.CashCode 						= CashCode
        		related.CashLedgerFundTransferHeader	= Reference
        		
        CashLedgerFundTransferDetailsRel
        	one-to-many relation to CashLedgerFundTransferDetail
        	Field Mapping uses Set3
        		related.CashLedgerFundTransferDetail.DetailCashCode 			= CashCode
        		related.CashLedgerFundTransferHeader							= Reference
        	Instance Selection
        		where (related.CashLedgerFundTransferDetail.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode)
        		
        CashLedgerGLDistributionsAllRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

        CashLedgerGLDistributionsRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType		= DistType.Entry
            	 
        CashLedgerGLDistributionsEFTPaymentRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode						 				= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType 	 	= DistType.Entry
        	Instance Selection
        		where (related.RecordType		= CashLedgerDistribRecordType.EftPaymentDistribution)

        CashLedgerGLDistributionsUnReleasedRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode						 				= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType 	 	= DistType.Entry
        	Instance Selection
        		where (related.Status.Unreleased)

        OriginalEftGLDistributionsExcludingOffsetRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode						 				= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= OriginalEftTransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType 	 	= DistType.Entry
        	Instance Selection
        		where (related.CashLedgerGLDistribution.SequenceNumber != OriginalLastDistributionSequence
				and    !related.Status.Unreleased)	

        OriginalEftGLDistributionsOffsetOnlyRel	
        	one-to-one relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode						 				= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= OriginalEftTransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType 	 	= DistType.Entry
        		related.CashLedgerGLDistribution.SequenceNumber  		= OriginalLastDistributionSequence
								
        OriginalEftGLDistributionsRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= OriginalEftTransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType		= DistType.Entry
  
        OriginalEftGLDistributionsReleasedRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= OriginalEftTransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType		= DistType.Entry
			Instance Selection
                where (related.Status.Released)
                
       	OriginalEftGLDistributionsPostedRel
        	one-to-many relation to CashLedgerGLDistribution
        	Field Mapping uses Alternate1
        		related.CashManagementGroup 							= CashManagementGroup
        		related.CashCode 										= CashCode
        		related.CashLedgerSourceRecord							= "CFT"
        		related.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
            	related.CashLedgerGLDistribution.TransactionIDNumber	= OriginalEftTransactionIDNumber
            	related.CashLedgerGLDistribution.DistributionType		= DistType.Entry
     		Instance Selection
                where (related.Status.Posted)
                
   		ReleasedDistributionsRel
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses Alternate1 
            	related.CashManagementGroup 							= CashManagementGroup
            	related.CashCode										= CashCode
            	related.CashLedgerSourceRecord							= "CFT"
                related.CashLedgerGLDistribution.BankTransactionCode 	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                related.CashLedgerGLDistribution.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
			Instance Selection
                where (related.Status.Released)
            	                            	                           	 
		CashLedgerGLDistributionByTypeRel
            one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 								= CashManagementGroup	
                related.CashCode											= CashCode
                related.CashLedgerSourceRecord								= "CFT"
            Instance Selection
                where (related.CashLedgerGLDistribution.BankTransactionCode = CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                and   related.CashLedgerGLDistribution.TransactionIDNumber 	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
				and   related.RecordType									= LocalRecordType)

		CashCodeTransactionCodeRel
			one-to-many relation to CashCodeTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup	= CashManagementGroup
				related.CashCode			= CashCode
			Instance Selection
				where (related.CashCodeTransactionCode.Active	 	= true)
				
		CompanyGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= LocalCompanyGroup
				related.Company						= Company.OrigCompany

		CashCodeGroupDetailRel
			one-to-one relation to CashCodeGroupDetail
			Field Mapping uses symbolic key
				related.CashManagementGroup			= CashManagementGroup
				related.CashCodeGroup				= LocalCashCodeGroup
				related.CashCode					= CashCode

		CashManagementGroupRel
			one-to-one relation to CashManagementGroup
			Field Mapping uses symbolic key
				related.CashManagementGroup			= CashManagementGroup

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= Company


		CurrentApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= ApprovalLevel

		ApprovalCodeResourceRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode

		LocalApprovalCodeLevelRel
			one-to-many relation to ApprovalCodeResource
			Field Mapping uses ByApprovalLevel
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.ApprovalCode			= ApprovalCode
				related.ApprovalLevel			= LocalApprovalLevel
		
		FinanceTeamMembersFromCurrentApprovalLevelRel
			one-to-many relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.FinanceTeam				= first CurrentApprovalCodeLevelRel.ApprovalTeam

		FinanceTeamMemberRel
			one-to-one relation to FinanceTeamMember
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.FinanceTeam						= ApproverTeam
				related.FinanceTeamMember.TeamMember	= actor.agent(Employee).Employee


		HeaderBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.BudgetEditError.BudgetEditGroup	= UniqueID

		DistributionBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByHeaderUniqueID
				related.FinanceEnterpriseGroup			= CashManagementGroup
				related.HeaderUniqueID                  = UniqueID

		GeneralLedgerSystemCodeRel		
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.GeneralLedgerSystemCode	= "CB"	

		GLCommitRel		
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID	
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID	= UniqueID



		OpenGLCommitDrillRel	
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup	= CashManagementGroup
				related.HeaderUniqueID			= UniqueID
			Instance Selection
				where (related.Status = 0
				or     related.Status = 2
				or     related.Status = 3)
				
		GLCommitDocumentsRel	
			one-to-one relation to GLCommitDocument
			Field Mapping uses ByHeaderObjectReference
				related.HeaderObjectReference = reference to this instance







				
		BudgetTemplateGroupTotalRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup                    = CashManagementGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup  = UniqueID

		CashLedgerReceiptImportInErrorRel
			one-to-many relation to CashLedgerReceiptImport
			Field Mapping uses ByCashLedgerTransferInError
	           	related.CashManagementGroup							= CashManagementGroup	
                related.CashLedgerReceiptImport.CashCode			= CashCode
                related.CashLedgerReceiptImport.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                related.CashLedgerEFTInError						= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		DuplicateEFTTransactionsRel
			one-to-many relation to CashLedgerElectronicFundsTransferTransaction
			Field Mapping uses Set2
                related.CashManagementGroup						= CashManagementGroup
                related.CashCode								= CashCode
                related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode = CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                related.Reference								= Reference
			Instance Selection
				where (related.UniqueID	!= UniqueID
				and    !related.Status.Voided
				and	   !related.Status.StopPayment
				and    !related.Status.Canceled	
				and    !related.Status.ElectronicFundsRejectedReinstated)

		PfiWorkunitRel
			one-to-many relation to PfiWorkunit
			Field Mapping uses ByAppsKeyAppsValueWorkunit
				related.AppsKey		= "CLEFUNDSTRANSFERTRANSACTION"			
				related.AppsValue	= DerivedAppsValue
																		










		CashLedgerAutoTranNumbersRel
			one-to-many relation to CashLedgerAutoTranNumber
            Field Mapping uses symbolic key
            	related.CashManagementGroup 				= CashManagementGroup
                related.CashLedgerDocumentType				= CashLedgerDocumentType.ElectronicFundTransfer
            Instance Selection
				where (related.CashLedgerAutoTranNumber		= Reference
				and    related.DocumentCashCode				= CashCode
            	and    related.DocumentBankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				and    related.AutoNumberStatus.NumberAssignedToDocument)

		CashLedgerTransactionErrorRel is a CashLedgerTransactionError set 
		
		CashLedgerTransactionErrorMassReleaseRel	
			one-to-many relation to CashLedgerTransactionError
			Field Mapping uses ByMassReleaseEFTExtractsErrorSource
				related.CashManagementGroup													= CashManagementGroup
				related.ErrorSource															= 9	
				related.CashLedgerMassReleaseResult 										= CashLedgerMassReleaseResult
				related.CashCode															= CashCode
				related.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				related.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		CashLedgerReturnedPaymentRel	
			one-to-many relation to CashLedgerReturnedPayment
			Field Mapping uses ByDepositReturn
				related.CashManagementGroup								= CashManagementGroup
				related.CashCode										= CashCode
				related.OriginalDepositBankTransactionCode				= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				related.DepositTransactionID							= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		GLTransactionDetailRel		
			one-to-one relation to GLTransactionDetail
			Field Mapping uses ByOriginatingTransaction
				related.OriginatingTransaction	= reference to first CashLedgerGLDistributionsRel

		CashCodeFundRel
			one-to-one relation to CashCodeFund
			Field Mapping uses ByAccountingEntityFund
				related.CashManagementGroup		= CashManagementGroup
				related.CashCode				= CashCode
				related.AccountingEntity		= LocalToAccountingEntity
		 		related.AccountingUnit			= LocalAccountingUnit
				related.FinanceDimension1		= LocalFinanceDimension1

		CompanySecurityGroupMemberRel		
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company.OrigCompany



	Sets
		Set2
			indexed
			Sort Order
				CashManagementGroup
				CashCode
				CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				Reference
				CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		Set3
			indexed
			Sort Order
				CashManagementGroup
				CashCode
				CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				TransactionNumber
				Reference
				CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		Set4
			indexed
			Instance Selection
				where (IsReleasedACHPrenotification)
			Sort Order
				CashManagementGroup
				Company.OrigCompany
				CashCode
				CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				Currency
				CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		ByCashLedgerTransactionIdentifier
			indexed


			Sort Order
				CashManagementGroup
				CashLedgerTransactionIdentifier
				Reference
				CashCode
				CashLedgerElectronicFundsTransferTransaction

		ByTransactionIdentifierSequenceNumber
			indexed
			Instance Selection
				where (HasTransactionIdentifierSequenceNumber)
			Sort Order
				CashManagementGroup
				TransactionIdentifierSequenceNumber

		ByBankTransactionCode
			indexed
			Sort Order
				CashManagementGroup
				CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber

		ByCashLedgerBatchApproval		
			Sort Order
				CashManagementGroup
				CashLedgerBatchApproval
				CashCode
				CashLedgerElectronicFundsTransferTransaction

		ByCashLedgerProcessGroup	
			indexed
			Instance Selection
				where (IsReleasedACHPrenotification)
			Sort Order
				CashManagementGroup
				CashLedgerProcessGroup				
				Company.OrigCompany
				CashCode
				CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
				Currency
				CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
				
		ByCustomerName		
			Sort Order
				CashManagementGroup
				CustomerName
				Reference
				CashCode
				CashLedgerElectronicFundsTransferTransaction

		ByTransactionDate
            Sort Order
                CashManagementGroup
                TransactionDate
                Status
                CashCode
                Company.OrigCompany
                CashLedgerElectronicFundsTransferTransaction

	Field Rules
		CashCode
			if (CashCodeTransactionCodeRel exists)
				constraint (CashCodeTransactionCode exists
				and CashCodeTransactionCode.Active)
					"TransactionCode<CashLedgerElectronicFundsTransferTransaction.BankTransactionCode>NotAuthorizedForCashCode<CashCode>"

		CashManagementAccount
			force default to CashCode.BankAccountNumber

		TransactionIdentifierSequenceNumber
			autosequence using ByTransactionIdentifierSequenceNumber
				minimize contention

		CashLedgerTransactionIdentifier
			CashLedgerTransactionIdentifier	= ("E" + TransactionIdentifierSequenceNumber)



		Company
			required
			if (Company changed)
				constraint (CashLedgerGLDistributionsRel not exist)
					"CannotChangeCompany;DistributionsExist"   
				if (AutoNumberingAllowed)
					constraint (!CashManagementGroup.AutoReferenceNumberByCompany)
						"CannotChangeCompany;AutoNumberingAtCompanyLevelIsSetup"
			constraint (CompanyCashCode.ElectronicPaymentAccount entered)
				"MustDefineElectronicPaymentAccountOnCompanyCashCode"      
			TransientAccountingEntity = Company.OrigCompany.AccountingEntity

		CurrencyTable
			default to CompanySystemClosingControlRel.CurrencyTable
			default to Company.OrigCompany.CurrencyTable

			if (CurrencyTable changed)
				initialize ReceiptBaseAmount





		TransactionDate
			required





			if (Status.Unreleased)
				if (CompanySystemClosingControlRel.Control		
				and !BypassClosingControlEdit)	
					constraint (TransactionDate within CompanySystemClosingControlRel.ValidEntryDate)
						"TransactionDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"
			if (TransactionDate changed)
				initialize ReceiptBaseAmount

		ReceiptAmount
			ReceiptAmount = ReceiptAmountUnsigned
			if (!ImportInProcess)
				required
			if (ReceiptAmount changed)
				initialize ReceiptBaseAmount

		BankAccountCurrencyNumberOfDecimals
			default to CashCode.BankAccountNumber.Currency.NumberOfDecimals

		ReceiptBaseAmount
			required

		BaseCurrencyNumberOfDecimals
			default to Company.OrigCompany.CurrencyNumberOfDecimals

		Description
			required

		CustomerName
			required

		BankEntity
			if (TransactionType.EftExtract)
				required
					"BankIDRequiredForEFTExtractTransaction"	//"Bank_\I\DRequiredForTransType_4"      

		BankName
			default to BankEntity.BankName

		BankAccountNumber
			required

			initialize ValidateBankAccountNumber
			ValidateBankAccountNumber.BankAccountValidationType	= BankAccountValidationType
			ValidateBankAccountNumber.BankAccountNumber			= BankAccountNumber
			constraint (ValidateBankAccountNumber.IsValidBankAccount)
				"<ValidateBankAccountNumber.ErrorMessage>"

		ACHPrenotification
			required






        GeneralLedgerSourceCode
            required
            default to "CL"
			if (CashLedgerGLDistributionsRel exists)
				cannot be changed
					"CannotChangeSourceCode;DistributionsExist"	               

        TransactionType
            required
			if (TransactionType.CreditCard)
				constraint (ACHPrenotification.Accepted)
					"PrenotificationStatusMustBe'Accepted'ForCreditCardTransaction"		//"PrenotificationStatusMustBeAn\_"\A\"ForTransType_2"   

		RIBKey
            initialize VerifyRIBKey

            VerifyRIBKey.BankEntity        	  = BankEntity
            VerifyRIBKey.BankAccountNumber	  = BankAccountNumber
            VerifyRIBKey.RIBKey           	  = RIBKey
            constraint (VerifyRIBKey.PerformVerifyRIBKey)
                "R\I\B_\KeyInvalid,_\Bank_&_\Account#DoNotEqualCalculatedKey"  

		CompanyCashCode
			required
			
	Create Rules  
		include IDM.CreateRules 
			replace AttachmentField with EFTTransferAttachment
							
	Delete Rules
		include IDM.DeleteNoArchiveRules
			replace AttachmentField with EFTTransferAttachment

	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with EFTTransferAttachment

	Actions
		Create is a Create Action
			Entrance Rules
				if (Reference entered)
					if (AutoNumberingAllowed)			 
						constraint (AutoNumberingAction entered)
							"CannotEnterReferenceNumber;AutoNumberingSetup"	
					include StripLeadingSpaces
					include CheckForDuplicates
				else
					constraint (AutoNumberingAllowed)
						"ReferenceNumberRequired"	
				include SetCurrencyData 
			Action Rules				




				if (AutoNumberingAllowed
				and Reference not entered)
					include GetAutoNumberByLevel
					invoke AutoCreate CashLedgerAutoTranNumber
						assign result to LocalCashLedgerAutoTranNumber
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashLedgerDocumentType		= CashLedgerDocumentType.ElectronicFundTransfer
						invoked.OriginatingTransaction		= reference to this instance
						invoked.CreateOperator				= actor
						invoked.CreateDate					= current timestamp
						invoked.Company 					= AutoNumberByCompany
						invoked.CashCode					= AutoNumberByCashCode
						invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
						invoked.DocumentCashCode			= CashCode
						invoked.DocumentBankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
						invoked.DocumentUniqueId			= UniqueID

					LocalReference					= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
					if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
						DuplicateTranNumberFound 	= true
					
					while (DuplicateTranNumberFound)
						invoke AutoCreate CashLedgerAutoTranNumber
							assign result to LocalCashLedgerAutoTranNumber
							invoked.CashManagementGroup			= CashManagementGroup
							invoked.CashLedgerDocumentType		= CashLedgerDocumentType.ElectronicFundTransfer
							invoked.OriginatingTransaction		= reference to this instance
							invoked.CreateOperator				= actor
							invoked.CreateDate					= current timestamp
							invoked.Company 					= AutoNumberByCompany
							invoked.CashCode					= AutoNumberByCashCode
							invoked.BankTransactionCode			= AutoNumberByBankTransactionCode
							invoked.DocumentCashCode			= CashCode
							invoked.DocumentBankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
							invoked.DocumentUniqueId			= UniqueID
						LocalReference					= LocalCashLedgerAutoTranNumber.CashLedgerAutoTranNumber
						DuplicateTranNumberFound		= false
						if (LocalCashLedgerAutoTranNumber.AutoNumberStatus.CannotBeAssignedAlreadyInUse)
							DuplicateTranNumberFound	= true

					Reference	= LocalReference


		Update is an Update Action
			valid when (IsUpdateable)	
			Action Rules
				if (Reference changed)
					constraint (Reference entered)
						"ReferenceNumberRequired"
					constraint (!AutoNumberingAllowed)
						"CannotChangeReferenceNumber;AutoNumberingSetup"
					if (!AutoNumberingAllowed)
						include StripLeadingSpaces	
						include CheckForDuplicates
				include SetCurrencyData
			Exit Rules
				include CheckForRelatedChanges

		EFTReject is an Instance Action
			valid when (EFTExtractUpdateComplete)
			Parameters
				PrmRejectDate is Date
					default label is "RejectDate"
			Parameter Rules
				PrmRejectDate
					initial value is current corporate date
					default to current corporate date
			Action Rules
				VoidDate	= PrmRejectDate
				if (CashCode.EnforceDateEditOnVoidStopPaid)		
					constraint (VoidDate >= first CashLedgerTransactionsRel.IssueDate)	
						"RejectDateCannotBeLessThanPaymentTransactionDate"		
				constraint (not Status.ElectronicFundsRejectedReinstated)
					"CannotMaintainPaymentRejectedAndReinstated"	
				constraint (not Status.ElectronicFundsRejectedNotReinstated)
					"CannotRejectPaymentAlreadyRejected"		
				if (CompanySystemClosingControlRel.Control)		
					constraint (VoidDate within CompanySystemClosingControlRel.ValidEntryDate)
						"RejectDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"	
				Status = Status.ElectronicFundsRejectedNotReinstated

		UndoEFTReject is an Instance Action
			valid when (EFTExtractUpdateComplete)
			Action Rules

				constraint (not Status.ElectronicFundsRejectedReinstated) 
					"CannotMaintainPaymentRejectedAndReinstated"	
				constraint (not Status.ElectronicFundsCreated)
					"CannotUndoPaymentNotRejected"	
				Status = Status.ElectronicFundsCreated
				initialize VoidDate

		Delete is a Delete Action
			valid when (IsUpdateable)
			Entrance Rules
				if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
				or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					invoke Delete HeaderBudgetEditErrorRel
					invoke Delete DistributionBudgetEditErrorRel
			Action Rules
				constraint (!BudgetEditInProgress)			
					"CannotDelete;BudgetEditInProgress"
				if (ImportInProcess)
					confirmation required
						"DeletingAPartiallyImportedRecordWillDeleteAllRelatedCashTransferImportRecords"
					invoke DeleteAllRelatedRecords CashLedgerReceiptImportInErrorRel
				invoke Delete CashLedgerGLDistributionsRel
				if (Reference is numeric)
					if (CashLedgerAutoTranNumbersRel exists)
						invoke DocumentDeleteUpdate CashLedgerAutoTranNumbersRel

		BatchApprovalRelease is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and   !BudgetEditInProgress					
				and    Status.Unreleased)
			Sort Order is ByCashLedgerBatchApproval
			Action Rules
				Instance Rules
					invoke Release

		Release is an Instance Action
			valid when (CanReleaseRecord)	 
			Entrance Rules
				constraint (ACHPrenotification.Accepted)
					"RecordCanNotBeReleasedIfPrenoteStatusIsNotAccepted"      
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"                 
				if (CompanySystemClosingControlRel.Control)	
					constraint (TransactionDate within CompanySystemClosingControlRel.ValidEntryDate)
						"TransactionDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"
			Action Rules
				LocalActionUnreleaseToRelease 	= true
				include PerformBudgetEditsForApprovalOrReleaseOrCancel


		ReleaseFromImport is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmInterfaceAsPosted	is Boolean
				PrmJournalizeGroup		is like JournalizeGroup
			Entrance Rules
				constraint (ACHPrenotification.Accepted)
					"RecordCanNotBeReleasedIfPrenoteStatusIsNotAccepted"      
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"                 
			Action Rules
				LocalInterfaceAsPosted			= PrmInterfaceAsPosted
				LocalActionUnreleaseToRelease	= true
				LocalJournalizeGroup			= PrmJournalizeGroup
				if (LocalInterfaceAsPosted)	
					invoke FinalRelease
				else	
					include PerformBudgetEditsForApprovalOrReleaseOrCancel


		ReleaseFromMassRelease is an Instance Action
			default label is untranslatable
			restricted


			Entrance Rules
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotRelease;TransactionIsOutOfBalance"
				if (CompanySystemClosingControlRel.Control)	
					constraint (TransactionDate within CompanySystemClosingControlRel.ValidEntryDate)
						"TransactionDateNotWithinValidEntryDatesForSystemCode;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"	                 
			Action Rules

				LocalActionUnreleaseToRelease	= true
				include PerformBudgetEditsForApprovalOrReleaseOrCancel


		FinalRelease is an Instance Action		//	"Unreleased" State
			default label is untranslatable
			restricted	
			Entrance Rules
			Action Rules
				BudgetEditProcessing = BudgetEditProcessing.NotInProcessing
				if (CashLedgerMassReleaseResult entered	
				and CashLedgerTransactionError set exists)
					invoke Delete CashLedgerTransactionError set


				include CreateOffsetDistribution


				Status = Status.Released
			Exit Rules
				if (LocalInterfaceAsPosted)
					invoke InterfaceAsPosted ReleasedDistributionsRel
				include ReleaseExitRules
						
		UpdateFromBankUpdateFile is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashLedgerUpdateAction	is a CashLedgerUpdateAction
				PrmActionDate				is Date
				PrmConfirmationNumber		is like ConfirmationNumber
				PrmUpdateComment			is Alpha up to 250	
			Action Rules
				if (PrmCashLedgerUpdateAction.Accepted)
					ConfirmationNumber	= PrmConfirmationNumber
					CommentText			+= PrmUpdateComment
				if (PrmCashLedgerUpdateAction.Rejected)
					invoke EFTReject
						invoked.PrmRejectDate	= PrmActionDate
					CommentText			+= PrmUpdateComment
					
		CreateFromBatch is a Create Action
			default label is untranslatable
			restricted
			Entrance Rules
				include SetCurrencyData			
			Exit Rules
				if (Status.Released)										
					include CreateOffsetDistribution									

			















		ReinstateEft is a Create Action 
			default label is untranslatable
			restricted
			Entrance Rules
				BypassDuplicateEdit			= true
				BypassClosingControlEdit 	= true	
			Action Rules

				invoke Create this instance
					invoked.AutoNumberingAction = AutoNumberingAction.BypassAutoTransactionNumbering
			Exit Rules

				NewTransactionIDNumber				= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
				invoke ReinstateEftDistributions OriginalEftGLDistributionsExcludingOffsetRel 	
					invoked.PrmTransactionIDNumber	= NewTransactionIDNumber

					
		BackoutOriginalEFTDistributions is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmOriginalEftTransactionIDNumber		is like TransactionIDNumber
				PrmOriginalLastDistributionSequence		is a SequenceNumber
				PrmActionType							is Numeric 1
				PrmVoidDate								is Date
				PrmStaleDate							is Date
				PrmStaleDateAccount						is like FinanceCodeBlock
				
			Action Rules
				OriginalEftTransactionIDNumber			= PrmOriginalEftTransactionIDNumber
				OriginalLastDistributionSequence		= PrmOriginalLastDistributionSequence

				if (!CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)		
					if (first OriginalEftGLDistributionsRel exists)
						if (first OriginalEftGLDistributionsRel.Status.Released)
							for each OriginalEftGLDistributionsReleasedRel	
								LocalDistributionSequenceNumber = each.CashLedgerGLDistribution.SequenceNumber	
								invoke VoidReleasedDistributions OriginalEftGLDistributionsReleasedRel	
									invoked.PrmActionType			= PrmActionType	
									if (LocalDistributionSequenceNumber = OriginalLastDistributionSequence) 
										invoked.PrmEftOffsetFlag	= true
						else
							if (first OriginalEftGLDistributionsRel.Status.Posted)
								for each OriginalEftGLDistributionsPostedRel	
									LocalDistributionSequenceNumber = each.CashLedgerGLDistribution.SequenceNumber	
									invoke VoidPostedDistributions OriginalEftGLDistributionsPostedRel	
										invoked.PrmActionType		= PrmActionType	
										invoked.PrmVoidDate			= PrmVoidDate	
										invoked.PrmStaleDate		= PrmStaleDate	
										invoked.PrmStaleDateAccount	= PrmStaleDateAccount	
										if (LocalDistributionSequenceNumber = OriginalLastDistributionSequence) 
											invoked.PrmEftOffsetFlag = true
				else
					for each CashLedgerGLDistributionsRel	
						invoke VoidPostedDistributions each
							invoked.PrmActionType		= PrmActionType
							invoked.PrmVoidDate			= PrmVoidDate
							invoked.PrmStaleDate		= PrmStaleDate
							invoked.PrmStaleDateAccount	= PrmStaleDateAccount					
							if (each.RecordType.OffsetEftPaymentDistribution)
								invoked.PrmEftOffsetFlag = true
				
		EFTRejectUpdate is a Set Action	
			completion message is "<CompletionMessage>"	
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCompany					is a GeneralLedgerCompany

					default label is "Company"	
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
					default label is "CompanyGroup"	
				PrmCashCode					is a CashCode
					default label is "CashCode"
					context of PrmCashManagementGroup	
				PrmCashCodeGroup			is a CashCodeGroup
					default label is "CashCodeGroup"
					context of PrmCashManagementGroup	
				PrmRejectCode				is a BankTransactionCode
					default label is "RejectCode"
					context of PrmCashManagementGroup	
					
			Parameter Rules
				PrmCashManagementGroup

					required
				PrmCompany
					if (PrmCompany entered)
						constraint (PrmCompanyGroup not entered)
							"CannotEnterBothCompanyAndCompanyGroup"
				PrmCompanyGroup
					if (PrmCompanyGroup entered)
						constraint (PrmCompany not entered)
							"CannotEnterBothCompanyAndCompanyGroup"
					LocalCompanyGroup	= PrmCompanyGroup
				PrmCashCode
					if (PrmCashCode entered)
						constraint (PrmCashCodeGroup not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
				PrmRejectCode
					required	
	   	    		constraint (PrmRejectCode.BankTransactionType.BankService)
						"TransactionCodeMustBeBankServiceType"                     
					constraint (PrmRejectCode.TransactionType.DebitTransaction)
						"TransactionCodeMustBeBankDebitTransType"                  

			Local Fields
				RecordCount						is Numeric 10
				LocalVoidDate					is Date	
				
			Instance Selection
				where (CashManagementGroup				= PrmCashManagementGroup
				and    Status.ElectronicFundsRejectedNotReinstated

    	    	and  ((PrmCompany						entered	
				and    Company.OrigCompany				= PrmCompany)
    	    	or     PrmCompany						not entered)

    	    	and  ((PrmCompanyGroup					entered	
				and    CompanyGroupMemberRel exists)
    	    	or     PrmCompanyGroup					not entered)

    	    	and  ((PrmCashCode						entered	
				and    CashCode							= PrmCashCode)
    	    	or     PrmCashCode						not entered)

    	    	and  ((PrmCashCodeGroup					entered	
				and    CashCodeGroupDetailRel exists)
    	    	or     PrmCashCodeGroup					not entered))
				
			Sort Order
				CashManagementGroup  
				Status
                CashCode
                CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
                TransactionNumber
                Reference
                CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
                
				
			Action Rules
				Empty Set Rules
					CompletionMessage = "EFTRejectUpdateCompleted...:<RecordCount>...RecordsProcessed"	
					
				Set Rules
					Entrance Rules
						initialize RecordCount
						
					Exit Rules
						CompletionMessage = "EFTRejectUpdateCompleted...:<RecordCount>...RecordsProcessed"	

												 					
				Instance Rules
					increment RecordCount
					LocalVoidDate = VoidDate	

					if (CashCode.NewEFTTransactionForVoid)	
						invoke ReinstateEft 
							fill in fields from this instance
							initialize invoked.CashLedgerTransactionIdentifier
	                		initialize invoked.LastDistributionSequence
	                		initialize invoked.TransactionNumber
	                		initialize invoked.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
	                		initialize invoked.ElectronicFundsTransferDepositDate
	                		initialize invoked.VoidDate
							initialize invoked.ReceiptBaseAmount	
		                	invoked.CashManagementGroup					= CashManagementGroup
							invoked.OriginalEftTransactionIDNumber		= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
							invoked.OriginalLastDistributionSequence	= CashLedgerElectronicFundsTransferTransaction.LastDistributionSequence  
							invoked.Status								= Status.Unreleased
							invoked.TransactionDate						= LocalVoidDate	





					invoke BackoutOriginalEFTDistributions	
						invoked.PrmOriginalEftTransactionIDNumber		= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
						invoked.PrmOriginalLastDistributionSequence		= CashLedgerElectronicFundsTransferTransaction.LastDistributionSequence  
						invoked.PrmVoidDate								= VoidDate
						invoked.PrmActionType							= 1	
						invoked.PrmStaleDate							= first CashLedgerTransactionsRel.StaleDate
						invoked.PrmStaleDateAccount						= first CashLedgerTransactionsRel.StaleDateAccount
								

	   	    		if (first CashLedgerTransactionsRel exists)
						invoke IncrementTransactionIDNumber PrmRejectCode  						
						NewTransactionIDNumber				= PrmRejectCode.TransactionIDNumber


					   	invoke ReinstateRejectedEftCashLedgerTransaction CashLedgerTransaction    			
	                		fill in fields from first CashLedgerTransactionsRel
	                			except invoked.ReconciliationData					
								except invoked.ReinstateStatus						
								except invoked.LastMaintenanceDate					
								except invoked.LastUpdateDate						
								except invoked.LastUpdateUser						
								except invoked.PeriodDate							
							initialize invoked.TransactionIdentifierSequenceNumber
	                		initialize invoked.LastDistributionSequence 
	                		invoked.CashManagementGroup								= CashManagementGroup  
							invoked.CashLedgerTransaction						 	= NewTransactionIDNumber
							invoked.BankTransactionCode 							= PrmRejectCode
	                		invoked.CashLedgerTransactionIdentifier					= CashLedgerTransactionIdentifier
							invoked.Status											= Status.Released
							invoked.Reference										= "CashManagementEftRejectUpdate"
							invoked.Description										= "PaymentRejectReinstate"
							invoked.BankTransactionSign								= first CashLedgerTransactionsRel.BankTransactionSign.BankDebit
							invoked.IssuedBankAmountUnsigned 						= ReceiptAmount
							invoked.IssueTranAmt									= ReceiptAmount
							invoked.IssuedBaseAmount								= ReceiptBaseAmount
							invoked.GeneralLedgerPostDate							= VoidDate	




					include PerformBudgetEditsForVoids	
							
					Status = Status.ElectronicFundsRejectedReinstated


		MassRelease is a Set Action	
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCashCode					is a CashCode
					default label is "CashCode"	
				PrmCashCodeGroup			is a CashCodeGroup
					default label is "CashCodeGroup"
				PrmUseSystemDate			is Boolean
					default label is "UseSystemDate"
				PrmEnterDate				is Date
					default label is "EnterDate"
				PrmDays						is Numeric 3
					default label is "Days"
				PrmBankTransactionCode		is a BankTransactionCode
					default label is "BankTransactionCode"
				PrmGeneralLedgerSourceCode	is a GeneralLedgerEvent
					default label is "EventCode"
				PrmPrenoteStatus	is AlphaUpper 1
					default label is "PrenoteStatus"
					States
						NotPrenotifiedToAccepted	value is "N"
						PrenotifiedToAccepted		value is "P"
						BothToAccepted				value is "B"
						NoChange					value is blank
						
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashCode
					if (PrmCashCode entered)
						constraint (PrmCashCodeGroup not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
				PrmUseSystemDate
					if (PrmUseSystemDate)
						constraint (PrmEnterDate not entered)
							"EnterDateMustBeBlankWhenSystemDateIsSelected"
						LocalDateRange.Begin = current corporate date	
				PrmEnterDate
					if (PrmEnterDate not entered)
						constraint (PrmUseSystemDate)
							"EnterDateRequiredWhenSystemDateIsNotSelected"
						LocalDateRange.Begin = current corporate date
					else
						LocalDateRange.Begin = PrmEnterDate
				PrmDays
					LocalDateRange.End = LocalDateRange.Begin + PrmDays as days
																										
			Local Fields
				RecordCount						is Numeric 10
				LocalDateRange					is a DateRange
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				CashLedgerMassReleaseResultView	is a CashLedgerMassReleaseResult view
				
			Instance Selection
				where (CashManagementGroup	 	= PrmCashManagementGroup
				and	   TransactionDate			within LocalDateRange
				and    CanReleaseRecord
				and    !CashLedgerMassReleaseResult entered	

				and  (ACHPrenotification.Accepted
				or   (ACHPrenotification.NotPrenotified
				and   (PrmPrenoteStatus.NotPrenotifiedToAccepted
				or	   PrmPrenoteStatus.BothToAccepted))
				or   (ACHPrenotification.Prenotified
				and   (PrmPrenoteStatus.PrenotifiedToAccepted
				or	   PrmPrenoteStatus.BothToAccepted)))

				and  ((PrmCashCode				entered	
				and    CashCode					= PrmCashCode)
				or     PrmCashCode				not entered)

				and  ((PrmCashCodeGroup			entered	
				and    CashCodeGroupDetailRel exists)
				or     PrmCashCodeGroup			not entered)

				and  ((PrmBankTransactionCode	entered	
				and    CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	= PrmBankTransactionCode)
				or     PrmBankTransactionCode	not entered)

				and  ((PrmGeneralLedgerSourceCode	entered	
				and    GeneralLedgerSourceCode		= PrmGeneralLedgerSourceCode)
				or     PrmGeneralLedgerSourceCode	not entered))				
												
			Sort Order  
				CashManagementGroup
			    CashCode
			    CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
			    Reference
			    CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
			    
				
			Action Rules
				Empty Set Rules
					invoke Create CashLedgerMassReleaseResult	
						invoked.CashManagementGroup		= PrmCashManagementGroup
						invoked.CashCode				= PrmCashCode
						invoked.CashCodeGroup			= PrmCashCodeGroup
				    	invoked.BankTransactionCode		= PrmBankTransactionCode
				    	invoked.UseSystemDate			= PrmUseSystemDate
				    	invoked.EnterDate				= PrmEnterDate
				    	invoked.Days					= PrmDays
				    	invoked.ReleaseDateRange		= LocalDateRange
				    	invoked.PrenoteStatus			= PrmPrenoteStatus
				    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
						invoked.Status					= 2 
						invoked.ReleaseType				= 6 
					
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Create CashLedgerMassReleaseResult	
							assign result to CashLedgerMassReleaseResultView
							invoked.CashManagementGroup		= PrmCashManagementGroup
							invoked.CashCode				= PrmCashCode
							invoked.CashCodeGroup			= PrmCashCodeGroup
					    	invoked.BankTransactionCode		= PrmBankTransactionCode
					    	invoked.UseSystemDate			= PrmUseSystemDate
					    	invoked.EnterDate				= PrmEnterDate
					    	invoked.Days					= PrmDays
					    	invoked.ReleaseDateRange		= LocalDateRange
					    	invoked.PrenoteStatus			= PrmPrenoteStatus
					    	invoked.GeneralLedgerSourceCode	= PrmGeneralLedgerSourceCode
							invoked.Status					= 1 
							invoked.ReleaseType				= 6 
					Exit Rules
						invoke StatusUpdate CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult	
							
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError				= false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message




					if (MassReleaseError)	
						invoke Create CashLedgerTransactionError 
							fill in fields from this instance
							invoked.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber = CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
							invoked.BankTransactionCode 		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
							invoked.CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult
							invoked.CashLedgerSourceRecord		= "CFT"
							invoked.ErrorLevel					= 1		
							invoked.ErrorClass					= 3		
							invoked.ErrorType					= 9		
							invoked.ErrorSource					= 9		
							invoked.ErrorDescription			= MassReleaseErrorMessage
				
					if  (ACHPrenotification.NotPrenotified				
					and  (PrmPrenoteStatus.NotPrenotifiedToAccepted		
					or	  PrmPrenoteStatus.BothToAccepted))				
						ACHPrenotification = "A"						
							
					CashLedgerMassReleaseResult	= CashLedgerMassReleaseResultView.CashLedgerMassReleaseResult			

		RemoveCashLedgerMassReleaseResult is an Instance Action	
			default label is untranslatable
			restricted
			Entrance Rules					
			Action Rules
				initialize CashLedgerMassReleaseResult 

		RerunMassReleaseForErrors is a Set Action	
			default label is untranslatable
			restricted
			completion message is "<MassReleaseCompleteMessage>"
			run in background		
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerMassReleaseResult 	is a CashLedgerMassReleaseResult
			Parameter Rules
				PrmCashManagementGroup
					required
				PrmCashLedgerMassReleaseResult
					required									
			Local Fields
				RecordCount						is Numeric 10
				MassReleaseError				is Boolean
				MassReleaseErrorMessage			is Alpha 150
				
			Instance Selection
				where (CashManagementGroup	 		= PrmCashManagementGroup
				and    CanReleaseRecord
				and    CashLedgerMassReleaseResult 	= PrmCashLedgerMassReleaseResult)
	
			Sort Order  
			    CashManagementGroup
				CashLedgerMassReleaseResult
				
				
			Action Rules
				Empty Set Rules
					invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
						invoked.Status	= 2 
						
				Set Rules
					Entrance Rules
						initialize RecordCount
						invoke Update PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult
							invoked.Status	= 1 
						
					Exit Rules
						invoke StatusUpdate PrmCashLedgerMassReleaseResult.CashLedgerMassReleaseResult	
				
				Instance Rules
					increment RecordCount
					initialize MassReleaseErrorMessage
					MassReleaseError				= false
					invoke ReleaseFromMassRelease	
						resume on error
							MassReleaseError		= true
							MassReleaseErrorMessage	= error message
					if (MassReleaseError)	
						invoke Update CashLedgerTransactionError set
							fill in fields from this instance
							invoked.ErrorDescription	= MassReleaseErrorMessage
								
		CreateBatchApproval is a Set Action 
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashLedgerEFTTransactionGroup	is a CashLedgerElectronicFundsTransferTransaction group
				PrmCashManagementAccount	is a CashManagementAccount
				PrmCashCode					is a CashCode
				PrmBankTransactionCode		is a BankTransactionCode
				PrmGeneralLedgerSourceCode	is a GeneralLedgerEvent
					default label is "SourceCode"
				PrmApprovalCostCenter		is like AccountingUnit
				PrmApprovalCategory			is Alpha 20
				PrmDateRange				is a DateRange
				PrmSearchAmountRange		is a SearchAmountRange	
				PrmApprovalCode				is a ApprovalCode
				PrmCommentText				is a CommentText
				PrmAutoApprove				is Boolean
				PrmSubmitForApproval		is Boolean
				PrmCashLedgerBatchApproval	is a CashLedgerBatchApproval

			Parameter Rules
				PrmCashManagementGroup
					required
				PrmApprovalCode
					if (!PrmCashManagementGroup.CashLedgerEFTApprovalRequired
					or  PrmCashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
						cannot be entered
					if (PrmSubmitForApproval
					and !PrmCashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
				PrmAutoApprove
					if (PrmAutoApprove)
						constraint (!PrmSubmitForApproval)
							"CannotSelectBothAutoApproveAndSubmitForApproval"
				PrmSubmitForApproval
					if (!PrmCashManagementGroup.CashLedgerEFTApprovalRequired)
						constraint (!PrmSubmitForApproval)
							"SubmitForApprovalValidOnlyWhenEFTApprovalIsRequired"
							
			Local Fields
				LocalCashLedgerBatchApproval is a CashLedgerBatchApproval view						

			Instance Selection
				where  (PrmCashManagementGroup		= CashManagementGroup
				and   ((PrmCashLedgerEFTTransactionGroup 	entered
	            and	    CashLedgerElectronicFundsTransferTransaction	within PrmCashLedgerEFTTransactionGroup)
	            or	    PrmCashLedgerEFTTransactionGroup 	!entered)
				and   ((PrmCashManagementAccount 	entered
	            and	    PrmCashManagementAccount	= CashManagementAccount)
	            or	    PrmCashManagementAccount 	!entered)
				and   ((PrmCashCode					entered
	            and	    PrmCashCode					= CashCode)
	            or	    PrmCashCode 				!entered)
				and   ((PrmBankTransactionCode		entered
	            and	    PrmBankTransactionCode		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode)
	            or	    PrmBankTransactionCode 		!entered)
				and   ((PrmGeneralLedgerSourceCode	entered
	            and	    PrmGeneralLedgerSourceCode	= GeneralLedgerSourceCode)
	            or	    PrmGeneralLedgerSourceCode 	!entered)
				and   ((PrmApprovalCostCenter		entered
	            and	    PrmApprovalCostCenter		= ApprovalCostCenter)
	            or	    PrmApprovalCostCenter	 	!entered)
				and   ((PrmApprovalCategory			entered
	            and	    PrmApprovalCategory			= ApprovalCategory)
	            or	    PrmApprovalCategory		 	!entered)
				and   ((PrmDateRange				entered
	            and	    TransactionDate within PrmDateRange)
	            or	    PrmDateRange			 	!entered)
				and   ((PrmSearchAmountRange		entered
	            and	    ReceiptAmount within PrmSearchAmountRange)
	            or	    PrmSearchAmountRange	 	!entered)
	            and     Status.Unreleased
				and   	!BudgetEditInProgress					
	            and     !ImportInProcess)


			Action Rules							
				Empty Set Rules

				Set Rules
					Entrance Rules
						initialize LocalCashLedgerBatchApproval
						if (PrmCashLedgerBatchApproval	entered)
							LocalCashLedgerBatchApproval	= PrmCashLedgerBatchApproval
						else
							invoke Create CashLedgerBatchApproval
								assign result to LocalCashLedgerBatchApproval
	    						invoked.CashManagementGroup				= PrmCashManagementGroup
	    						invoked.BatchApprovalType				= 3 
	    						invoked.CashLedgerEFTTransactionGroup	= PrmCashLedgerEFTTransactionGroup
	    						invoked.CashManagementAccount			= PrmCashManagementAccount
								invoked.CashCode						= PrmCashCode
								invoked.BankTransactionCode				= PrmBankTransactionCode
	        					invoked.GeneralLedgerSourceCode			= PrmGeneralLedgerSourceCode
								invoked.ApprovalCostCenter				= PrmApprovalCostCenter
								invoked.ApprovalCategory				= PrmApprovalCategory
								invoked.DateRange						= PrmDateRange
								invoked.SearchAmountRange				= PrmSearchAmountRange
								invoked.CommentText						= PrmCommentText
								invoked.ApprovalCode					= PrmApprovalCode
								invoked.AutoApprove						= PrmAutoApprove
					
					Exit Rules
						if (PrmSubmitForApproval)
							invoke Open.SubmitForApproval LocalCashLedgerBatchApproval.CashLedgerBatchApproval
								invoked.PrmApprovalCode	= PrmApprovalCode
						
				Instance Rules
			    	if  (ACHPrenotification.Accepted
					and  ReceiptAmount = AppliedBankAmount)
			        	CashLedgerBatchApproval	= LocalCashLedgerBatchApproval.CashLedgerBatchApproval
						if (PrmAutoApprove)
							invoke Release
						else
							if (PrmCashManagementGroup.CashLedgerEFTApprovalRequired)
			        			Status	= Status.PendingApproval

		RemoveFromBatch is an Instance Action
			valid when (CanBeRemovedFromBatch)
			Action Rules
				initialize CashLedgerBatchApproval
				Status	= Status.Unreleased

		BatchApprove is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup		
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval	
				PrmApprovalCode					is an ApprovalCode
			Instance Selection		
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and    !BudgetEditInProgress				
				and    Status.PendingApproval)
			Sort Order is ByCashLedgerBatchApproval		
			Action Rules
				Instance Rules
					ApprovalCode	= PrmApprovalCode
					invoke Approve


		UpdateApprovalLevel is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				ParmEscalate	is Boolean
				ParmReassign	is Boolean
			Action Rules

				if (ParmReassign)
					if (ReassignToApprovalLevel entered)
						ApprovalLevel = ReassignToApprovalLevel.ApprovalLevel
						initialize ReassignToApprovalLevel
				else
				if (ParmEscalate)
					include GetNextEscalationApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam
				else
					include GetNextApprovalLevel
					ApprovalLevel		= LocalApprovalLevel
					Approver			= LocalApprover
					ApproverTeam		= LocalApproverTeam


		UpdateApprovalFields is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmCurrentApprover	is a FinanceResource
				PrmCurrentTeam		is a FinanceTeam
				PrmApprovalLevel	is Numeric 8
			Action Rules
				Approver		= PrmCurrentApprover
				ApproverTeam	= PrmCurrentTeam
				ApprovalLevel	= PrmApprovalLevel

		SubmitForApproval is an Instance Action
			completion message is "ApproveEFTExtractHasBeenSubmittedToTheQueueForProcessing"
	 		valid when (CanSubmitForApproval)
			Parameters
				PrmApprovalCode		is a ApprovalCode
					default label is "ApprovalCode"
				PrmCommentText		is a CommentText
					default label is "Comment"

			Parameter Rules
				PrmApprovalCode
					initial value is CashCode.ApprovalCode
					default to CashCode.ApprovalCode
					if (!CashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
						required
							"ApprovalCodeIsRequired"
					constraint (!PrmApprovalCode.ApprovalCodeUsesMaximumAmounts)
						"CannotSelectApprovalCodesSetUpForNonBatchedCashLedgerPayments"
					
		    Entrance Rules
				constraint (ACHPrenotification.Accepted)
					"RecordCanNotBeSubmittedIfPrenoteStatusIsNotAccepted"
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotSubmitForApproval;TransactionIsOutOfBalance"
				constraint (!BudgetEditInProgress)		
					"CannotSubmitForApproval;BudgetEditInProgress"

			Action Rules
				CommentText			+= PrmCommentText
				if (!CashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
					ApprovalCode		 = PrmApprovalCode
					constraint (ApprovalCode.HasApprovalLevels) 
						"CannotComplete;TheApprovalCodeHasNoApprovalLevels"
					constraint (!ApprovalCode.HasTeamWithNoMembers) 
						"CannotComplete;TheApprovalCodeHasATeamWithNoMembers"
					constraint (!ApprovalCode.HasInvalidEscalations)
						"CannotComplete:TheApprovalCodeHasInvalidEscalationSettings"
					constraint (!ApprovalCode.HasInactiveResources)
						"CannotComplete;TheApprovalCodeHasInactiveResources"
	
				LocalActionSubmitForApproval = true
				include PerformBudgetEditsForApprovalOrReleaseOrCancel



		FinalApproval is an Instance Action
			default label is untranslatable
			restricted	
			Action Rules
				if (!CashManagementGroup.ApprovalCodesNotUsedForEFTTransactions)
					initialize ApprovalLevel
					initialize Approver
					initialize ApproverTeam	
					include GetNextApprovalLevel
					ApprovalLevel	= LocalApprovalLevel
					Approver		= LocalApprover
					ApproverTeam	= LocalApproverTeam
				include InitiateApprovalProcessFlow

				Status	= Status.PendingApproval

		BatchApprovalApprove is a Set Action		
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashLedgerBatchApproval		is a CashLedgerBatchApproval
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashLedgerBatchApproval	= PrmCashLedgerBatchApproval
				and    !BudgetEditInProgress					
				and    Status.PendingApproval)
			Sort Order is ByCashLedgerBatchApproval
			Action Rules
				Instance Rules
					invoke Approve

		Approve is an Instance Action
			default label is untranslatable
			restricted
		    Entrance Rules
				constraint (ACHPrenotification.Accepted)
					"RecordCanNotBeApprovedIfPrenoteStatusIsNotAccepted"
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotApprove;TransactionIsOutOfBalance"
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
				
		Reject is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				include RejectBudgetCommitments	
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

		RejectWithReasonCode is an Instance Action
			default label is untranslatable
			restricted
			subject is RejectCashLedgerEFTExtract
			reason code required
			action comment required

			Action Rules
				include RejectBudgetCommitments	
				Status	= Status.Unreleased
				
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

			Exit Rules
				invoke Create CashLedgerEFTExtractReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerElectronicFundsTransferTransaction	= CashLedgerElectronicFundsTransferTransaction
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= action comment	
				
		ManualApprove is an Instance Action
			valid when (CanManuallyApproveOrReject)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"
		    Entrance Rules
				constraint (ACHPrenotification.Accepted)
					"RecordCanNotBeApprovedIfPrenoteStatusIsNotAccepted"
				constraint (ReceiptAmount = AppliedBankAmount)
					"CannotApprove;TransactionIsOutOfBalance"
			Action Rules
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	

				invoke Release
				cancel CashLedgerEFTExtractApproval process
						
		ManualReject is an Instance Action
			subject is RejectCashLedgerEFTExtract
			valid when (CanManuallyApproveOrReject)
			Parameters
				PrmComment		is Alpha size up to 500
			Action Rules
				if (CashManagementGroup.RejectCashLedgerEFTReasonCodeRequired)			
					constraint (reason code entered)
						"ReasonCodeIsRequiredForRejectingCashLedgerEFTRequests"												
				include RejectBudgetCommitments	
				Status	= Status.Unreleased
			
				initialize ApprovalLevel
				initialize Approver
				initialize ApproverTeam	
				
				cancel CashLedgerEFTExtractApproval process

			Exit Rules
				invoke Create CashLedgerEFTExtractReasonCodeUsage
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashCode					= CashCode
					invoked.CashLedgerElectronicFundsTransferTransaction	= CashLedgerElectronicFundsTransferTransaction
					invoked.ReasonCode					= reason code
					invoked.Description					= reason code.Description
					invoked.Type						= 1 
					invoked.Comment						= PrmComment	

		UpdateBudgetResults is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				ParmSuccess    	is Boolean
				ParmActionCode	is an ActionCode
			Action Rules
				if (ParmSuccess)
					BudgetEditProcessing = BudgetEditProcessing.Success
					if (ParmActionCode.Release)
						include ResetLocalFieldsForRelease	
						invoke FinalRelease
					else
					if (ParmActionCode.Approve)
						include ResetLocalFieldsForApproval	
						invoke FinalApproval
					else
					if (ParmActionCode.Cancel)
						include ResetLocalFieldsForCancel	
						invoke FinalCancel
					else	
					if (ParmActionCode.Void) 
						invoke FinalVoid		
				else
					BudgetEditProcessing = BudgetEditProcessing.Failure

		RebuildCommitmentTotals is an Instance Action		
			default label is untranslatable
			restricted
			Parameters
				IsBatch        is Boolean
				BudgetEditMode
				BudgetEditTotalsProcessing
				ActionCode

			Action Rules
				invoke Delete HeaderBudgetEditErrorRel
				invoke Delete DistributionBudgetEditErrorRel
				invoke Delete BudgetTemplateGroupTotalRel
				for each CashLedgerGLDistributionsRel
					invoke RecalculateCommitmentAmounts each
					increment LocalTransactionCount
					if (LocalTransactionCount > 50)
						commit transaction
						initialize LocalTransactionCount

				invoke EditTotalsRoute BudgetTemplateGroupTotal 	
					invoked.PrmFinanceEnterpriseGroup    											= CashManagementGroup
					invoked.PrmBudgetEditGroup           											= UniqueID
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashCode 					= CashCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.BankTransactionCode	= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackCBEft.CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber	= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
					invoked.PrmMode																	= BudgetEditMode.UpdateOnly	
					invoked.PrmBusinessClassName                									= "CashLedgerElectronicFundsTransferTransaction"	
					if (ActionCode.Release)
						invoked.PrmActionCode														= "R"  
						invoked.PrmEditContext                      								= "Release"
					else	 
					if (ActionCode.Approve)
						invoked.PrmActionCode														= "A" 	
						invoked.PrmEditContext          			            					= "SubmitForApproval"
					else	
					if (ActionCode.Cancel)
						invoked.PrmActionCode														= "N"	
						invoked.PrmEditContext      			                					= "Cancel"

		ApplyComments is an Instance Action
			valid when (CanUpdateComments)
			Parameters
				PrmCommentText		is a CommentText
					default label is "Comment"
			Action Rules
				CommentText			+= PrmCommentText

		UpdateJournalizeGroup is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmJournalizeGroup		is like JournalizeGroup
			Action Rules 
				invoke UpdateJournalizeGroup CashLedgerGLDistributionsRel
					invoked.PrmJournalizeGroup		= PrmJournalizeGroup

		MaintainEFTTransferAttachment is an Instance Action		
			valid when (!IsUnreleased)
			Parameters
				PrmEFTTransferAttachment	is an Attachment
					default label is "EFTTransferAttachment"
			Action Rules
				include IDM.DeleteNoArchiveRules 
					replace AttachmentField with EFTTransferAttachment
				EFTTransferAttachment = PrmEFTTransferAttachment
				include IDM.CreateRules 
					replace AttachmentField with EFTTransferAttachment

		EFTProcessingHoldMassUpdate is a Set Action	
			completion message is "<EFTCount>_<LocalCompletionMessage>"

			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmCashCode						is a CashCode
					default label is "CashCode"	
				PrmBankTransactionCode			is a BankTransactionCode
					default label is "BankTransactionCode"	
				PrmGeneralLedgerSourceCode		is a GeneralLedgerEvent
					default label is "EventCode"	
				PrmDateRange					is a DateRange
					default label is "DateRange"
				PrmEFTGroup						is a CashLedgerElectronicFundsTransferTransaction group
					default label is "CustomGroup"	
				PrmHoldAction					is Numeric size 1
					default label is "HoldAction"
					States
						AddHold					value is "0"
						RemoveHold				value is "1"
			Parameter Rules
				PrmCashManagementGroup
					required
			
				PrmHoldAction
					if (PrmHoldAction.AddHold)
						LocalCompletionMessage = EFTsPutOnHoldMessage
					else
						LocalCompletionMessage = EFTsTakenOffHoldMessage
								
			Instance Selection
				where  (PrmCashManagementGroup		= CashManagementGroup

				and   ((PrmCashCode					entered
	            and	    PrmCashCode					= CashCode)
	            or	    PrmCashCode 				!entered)

				and   ((PrmBankTransactionCode		entered
	            and	    PrmBankTransactionCode		= CashLedgerElectronicFundsTransferTransaction.BankTransactionCode)
	            or	    PrmBankTransactionCode 		!entered)

				and   ((PrmGeneralLedgerSourceCode	entered
	            and	    PrmGeneralLedgerSourceCode	= GeneralLedgerSourceCode)
	            or	    PrmGeneralLedgerSourceCode 	!entered)

				and   ((PrmDateRange				entered
	            and	    TransactionDate within PrmDateRange)
	            or	    PrmDateRange			 	!entered)

				and    ((PrmEFTGroup entered
				and		 CashLedgerElectronicFundsTransferTransaction within PrmEFTGroup)
				or       PrmEFTGroup not entered)

				and    ((PrmHoldAction.AddHold
				and      IsEFTProcessingHoldable)
				or      (PrmHoldAction.RemoveHold
				and      IsEFTProcessingOnHold)))

			Sort Order	

			Local Fields
				EFTCount is Numeric 8
			
										
			Action Rules
				Empty Set Rules
					LocalCompletionMessage = EFTsFoundToProcessMessage
				
				Set Rules
					Entrance Rules
						initialize EFTCount
							
				Instance Rules
					increment EFTCount				
					if (PrmHoldAction.AddHold)
						EFTProcessingHold = true
					else
						EFTProcessingHold = false
						
		ChangeEFTProcessingHold is an Instance Action	
			valid when (Status.Released)
			confirmation required
				"TheEFTProcessingHoldStatusWillBeChangedForSelectedEFT\s;DoYouWantToContinue?"
			Action Rules
				if (EFTProcessingHold)
					EFTProcessingHold = false
				else	
					EFTProcessingHold = true
																							
		CancelUnreleasedEFT is an Instance Action	
			valid when (CanCancelUnreleasedRecord)
			default label is "Cancel"
			confirmation required
			Parameters
				PrmCommentText	is a CommentText
			Action Rules
				CommentText	= PrmCommentText
				if (GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
				or 	GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					invoke Delete HeaderBudgetEditErrorRel
					invoke Delete DistributionBudgetEditErrorRel 					
				invoke Delete CashLedgerGLDistributionsRel
				Status	= Status.Canceled
				
		CancelReleasedEFT is an Instance Action
			valid when (CanCancelReleasedRecord)
			default label is "Cancel"
			Parameters
				PrmTransactionDate 	is Date
				PrmCommentText		is a CommentText
			Parameter Rules
				PrmTransactionDate
					required
						"TransactionDateIsRequired"	
			Action Rules						
				CommentText							= PrmCommentText					
				TransactionDate						= PrmTransactionDate
				OriginalLastDistributionSequence	= CashLedgerElectronicFundsTransferTransaction.LastDistributionSequence
				OriginalEftTransactionIDNumber		= CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
				if (!CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
					invoke CancelEFTDistributions OriginalEftGLDistributionsExcludingOffsetRel
					invoke CancelEFTDistributions OriginalEftGLDistributionsOffsetOnlyRel
						invoked.PrmEftOffsetFlag = true								
				else
					for each CashLedgerGLDistributionsRel
						invoke CancelEFTDistributions each
							if (each.RecordType.OffsetEftPaymentDistribution)
								invoked.PrmEftOffsetFlag = true								
				LocalActionReleaseToCancel 	 = true
				include PerformBudgetEditsForApprovalOrReleaseOrCancel                                         

		FinalCancel is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing
				Status	= Status.Canceled
			Exit Rules
				include ReleaseExitRules
							
		FinalVoid is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				BudgetEditProcessing 	= BudgetEditProcessing.NotInProcessing
			Exit Rules
				include ReleaseExitRules				
				
		BudgetUpdates is an Instance Action	
			default label is untranslatable
			restricted	
			Action Rules
				include PerformBudgetEditsForVoids
				
		UpdateFromBatch is an Update Action 
			default label is untranslatable
			restricted
			bypass field rules
			Action Rules
				if (CashManagementGroup.FinanceEnterpriseGroup.FundAccounting)
					invoke CreateClosingDistribsFromBatch
						invoked.PrmPostingDate = TransientEftExtractPostingDate

		CreateClosingDistribsFromBatch is an Instance Action  
			default label is untranslatable
			restricted
			Parameters
				PrmPostingDate        		is Date

			Local Fields

			Action Rules
				LocalRecordType = CashLedgerDistribRecordType.OffsetEftPaymentDistribution
				for each CashLedgerGLDistributionByTypeRel

					LocalFinanceCurrencyAmount					= each.GLBaseAmount
					include ReverseBaseDistributionAmounts

					invoke Create CashLedgerGLDistribution
						fill in fields from each
						invoked.CashLedgerSourceRecord						 = "CFT"
						invoked.CashLedgerGLDistribution.BankTransactionCode = CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
						invoked.CashLedgerGLDistribution.TransactionIDNumber = CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
						invoked.CashLedgerGLDistribution.DistributionType    = DistType.Entry
						invoked.Company                                      = Company
						invoked.RecordType									 = CashLedgerDistribRecordType.EftExtractDistribution
						invoked.Status 	 									 = Status.Released
						invoked.Reference                                    = "EXTRACT"
						invoked.Description									 = "EFT PAYMENT"
						invoked.PostDate									 = PrmPostingDate
						invoked.GLFinanceCodeBlock							 = each.GLFinanceCodeBlock
						invoked.GLTransactionAmount    					     = each.GLTransactionAmount * -1
						invoked.DistributionToBankAmount  				     = each.GLTransactionAmount * -1
						invoked.GLBaseAmount					 		 	 = LocalFinanceCurrencyAmount
						invoked.TransientCreateFromBatchType				 = 11 
						invoked.LocalReference                               = "EXTRACT"
						invoked.LocalDescription							 = "EFT PAYMENT"
						invoked.LocalControlDocumentNumber					 = TransactionNumber
						invoked.LocalDocumentNumber							 = TransactionNumber
						invoked.LocalExchangeDate							 = PrmPostingDate
						invoked.LocalPostingDate							 = PrmPostingDate
						invoked.LocalCurrencyTable							 = CurrencyTable
						invoked.LocalGeneralLedgerEvent						 = "CL"
						invoked.BypassStatusEdit							 = true
						invoked.EftOffsetFlag								 = true

				LocalRecordType = CashLedgerDistribRecordType.EftPaymentDistribution
				for each CashLedgerGLDistributionByTypeRel

					LocalFinanceCurrencyAmount					= each.GLBaseAmount
					include ReverseBaseDistributionAmounts

					initialize LocalCalculateCashFinanceStructure
					LocalCalculateCashFinanceStructure.InputCashManagementGroup					= each.CashManagementGroup
					LocalCalculateCashFinanceStructure.InputCashCode							= each.CashCode
					LocalCalculateCashFinanceStructure.InputCashLedgerSourceRecord				= each.CashLedgerSourceRecord
					LocalCalculateCashFinanceStructure.InputCashLedgerGLDistribution			= each.CashLedgerGLDistribution
					LocalCalculateCashFinanceStructure.InputGLFinanceCodeBlock					= each.CashLedgerGLDistribution.GLFinanceCodeBlock
					LocalCalculateCashFinanceStructure.InputCashLedgerFinanceStructureType		= CashLedgerFinanceStructureType.CashCodeDistribution
					LocalCalculateCashFinanceStructure.InputFinanceCodeBlock					= CompanyCashCode.CashAccount
					LocalAnswer = LocalCalculateCashFinanceStructure.CalculateCashFinanceStructure

					invoke Create CashLedgerGLDistribution
						fill in fields from each
						invoked.CashLedgerSourceRecord						 = "CFT"
						invoked.CashLedgerGLDistribution.BankTransactionCode = CashLedgerElectronicFundsTransferTransaction.BankTransactionCode
						invoked.CashLedgerGLDistribution.TransactionIDNumber = CashLedgerElectronicFundsTransferTransaction.TransactionIDNumber
						invoked.CashLedgerGLDistribution.DistributionType    = DistType.Entry
						invoked.Company                                      = Company
						invoked.RecordType									 = CashLedgerDistribRecordType.EftExtractDistribution
						invoked.Status 	 									 = Status.Released
						invoked.Reference                                    = "EXTRACT"
						invoked.Description									 = "EFT PAYMENT"
						invoked.PostDate									 = PrmPostingDate
						invoked.GLFinanceCodeBlock							 = LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock
						invoked.GLTransactionAmount    					     = each.GLTransactionAmount * -1
						invoked.DistributionToBankAmount  				     = each.GLTransactionAmount * -1
						invoked.GLBaseAmount					 		 	 = LocalFinanceCurrencyAmount
						invoked.TransientCreateFromBatchType				 = 11 
						invoked.LocalReference                               = "EXTRACT"
						invoked.LocalDescription							 = "EFT PAYMENT"
						invoked.LocalControlDocumentNumber					 = TransactionNumber
						invoked.LocalDocumentNumber							 = TransactionNumber
						invoked.LocalExchangeDate							 = PrmPostingDate
						invoked.LocalPostingDate							 = PrmPostingDate
						invoked.LocalCurrencyTable							 = CurrencyTable
						invoked.LocalGeneralLedgerEvent						 = "CL"
						invoked.BypassStatusEdit							 = true
						invoked.EftOffsetFlag								 = true

					LocalToAccountingEntity	= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.ToAccountingEntity
					if (CashManagementGroup.FinanceEnterpriseGroup.FundDimension.AccountingUnit)
						LocalAccountingUnit			= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.AccountingUnit
					else
						LocalFinanceDimension1		= LocalCalculateCashFinanceStructure.OutputFinanceCodeBlock.FinanceDimension1
					if (CashCodeFundRel !exist)
						invoke Create CashCodeFundRel
							invoked.PostedAmount				= each.GLTransactionAmount * -1
					else
						invoke UpdatePostedAmount CashCodeFundRel
							invoked.PrmPostedAmount 				= each.GLTransactionAmount * -1

		CashLedgerElectronicFundsTransferTransactionPurge is a Set Action
			default label is "ElectronicFundsTransferTransactionPurge"
			Parameters
				PrmCashManagementGroup             is a CashManagementGroup
				PrmCashCode                        is a CashCode
				PrmCashCodeGroup                   is a CashCodeGroup
				PrmEFTransferTransactionCutOffDate is Date
			
			Parameter Rules
				PrmCashCodeGroup
					if (PrmCashCodeGroup entered)
						constraint (PrmCashCode not entered)
							"CannotEnterBothCashCodeAndCashCodeGroup"		
					LocalCashCodeGroup	= PrmCashCodeGroup
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and  ((PrmCashCode				  entered	
				and    CashCode					= PrmCashCode)
				or     PrmCashCode				  not entered)
				and  ((PrmCashCodeGroup			  entered	
				and    CashCodeGroupDetailRel     exists)
				or     PrmCashCodeGroup			  not entered)
				and    PrmEFTransferTransactionCutOffDate entered
				and    TransactionDate         <= PrmEFTransferTransactionCutOffDate
				and    Status.ElectronicFundsCreated)
			
			Action Rules
				Instance Rules
					invoke Purge CashLedgerGLDistributionsRel
					invoke Purge CashLedgerTransactionPurgeRel
					invoke Purge
					
		Purge is a Purge Action
			restricted

		UploadToIDM is an Instance Action  
			valid when (EFTTransferAttachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with EFTTransferAttachment	
						
									
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (EFTTransferAttachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with EFTTransferAttachment			

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop

							
