AssetItemDisposal is a BusinessClass
    owned by am
    prefix is ADS
    classic name is AMASTITDSP

    Ontology
        symbolic key is AssetItemDisposal
            classic set name is ADSSET2
            classic name for AssetItemDisposal.ProcessSequence is PROCESS-SEQ
            classic name for AssetItem is SEQ-NUMBER

    Patterns
    	implements ContextualParent
        implements StaticJava
        disable AuditIndex

		implements TemplateDriven by AssetItem
			create instance
				when (DisposalQuantity entered)

    Persistent Fields

        DisposalDate                is Date
            classic name is DSP-DATE
        DisposalMethod
            classic name is DSP-METHOD
        DisposalQuantity			is a TotalItemQuantity
            classic name is DSP-QUANTITY
        ItemNumber                  is an AssetItemNumber
            classic name is ITEM-NBR
        ItemQuantity				
        BaseItemCost                is an InternationalAmount
            classic name is ITEM-COST-BASE
                precision is Asset.BaseNumberOfDecimals
        BaseItemTax                 is an InternationalAmount
            classic name is ITEM-TAX-BASE
                precision is Asset.BaseNumberOfDecimals
        TransactionItemCost         is an InternationalAmount
            classic name is ITEM-COST-TRAN
                precision is Asset.TransactionNumberOfDecimals
        TransactionItemTax          is an InternationalAmount
            classic name is ITEM-TAX-TRAN
                precision is Asset.TransactionNumberOfDecimals
        BaseNumberOfDecimals
            classic name is BASE-ND
        TransactionNumberOfDecimals is a CurrencyNumberOfDecimals
            classic name is TRAN-ND
        BarCode                     is like AssetBarCode
        
    Transient Fields
    	SerialNumber
    		derive value from AssetItemRel.SerialNumber					 
        TransientDisposalDate		is Date
        	derive value from AssetDisposal.DisposalDate
        TransientItem				is like AssetItemNumber
			derive value from DerivedToAssetItem
        TransientItemDescription	is like Description
			derive value from DerivedToAssetItemDescription
		TransientAsset				is like Asset
			derive value from DerivedAsset
		TransientTagNumber			is like TagNumber	
			derive value from AssetRel.TagNumber
		OriginalItemQuantity		is an ItemQuantity
			derive value from AssetItem.ItemQuantity
		TransientDisposalQuantity	is an ItemQuantity	
			derive value from ThisRecordRel.DisposalQuantity
        OriginalTransactionItemCost is an InternationalAmount
			
			        	
 	Derived Fields
		AssetDisposalQuantity		is a DerivedField
			type is like DisposalQuantity
			restricted 
			return AssetDisposal.DisposalQuantity 
			
		TotalItemsDisposalQuantity	is a DerivedField
			type is like ItemQuantity
			restricted
			return AssetDisposal.TotalDisposalSelectedQuantity   
			
		DerivedToAssetItemDescription is a DerivedField
			type is like Description
			restricted
			if (ToAssetItemRel exists)
				return ToAssetItemRel.Description
			else
				return AssetItem.Description
		
		DerivedToAssetItem is a DerivedField
			type is like AssetItemNumber
			restricted
			if (ToAssetItemRel exists)
				return ToAssetItemRel.ItemNumber
			else
				return AssetItem.ItemNumber
				
		DerivedAsset is a DerivedField
			type is like Asset
			restricted
			if (AssetDisposal.FullOrPartial.Partial)
				return AssetDisposal.DisposalAsset
			else
				return Asset
	
    Sets

        Set1
            indexed
            Sort Order
                FinanceEnterpriseGroup
                Asset
                AssetItemDisposal.ProcessSequence
                AssetItem
                
	Local Fields
		LocalAsset							is like Asset
		LocalBook							is like Book
		LocalNewBaseCost					is an InternationalAmount
		LocalDelCstBase						is an InternationalAmount
	 	LocalNewTaxBase						is an InternationalAmount
	 	LocalDelTaxBase						is an InternationalAmount
	 	LocalNewCostTran					is an InternationalAmount
	 	LocalDelCstTran						is an InternationalAmount
	 	LocalNewTaxTran						is an InternationalAmount
	 	LocalDelCstTax						is an InternationalAmount
	 	LocalNewQty 						is like ItemQuantity
	 	LocalQuantityDifference				is like ItemQuantity
	 	LocalDelQty 						is like ItemQuantity
		LocalBaseCostDifference				is an InternationalAmount
		LocalBaseTaxDifference				is an InternationalAmount
		LocalTranCostDifference				is an InternationalAmount
		LocalTranTaxDifference				is an InternationalAmount
		NewAssetItem						is an AssetItem view
		LocalAssetItem						is an AssetItem
		NewAsset							is an Asset view
		LocalPerformCreateDisposalBook 		is Alpha 1				
		DisposalBook
		LocalQuantityChange					is like ItemQuantity	
		LocalBaseCostChange					is an InternationalAmount
		LocalBaseTaxChange					is an InternationalAmount
		LocalCostTranChange					is an InternationalAmount
		LocalTaxTranChange					is an InternationalAmount
		LocalTransactionItemCost			is an InternationalAmount
		LocalItemTotalTransactionCost		is an InternationalAmount

		LocalDisposalAsset					is like Asset
		LocalLastAssetSeq					is a Sequence
		UpdateFromBatch						is Boolean
		LocalFund 							is an AssetFundField
		LocalAccountingEntity				is like AccountingEntity
		LocalAccountingUnit					is like AccountingUnit
		LocalProject						is like Project
  		LocalFinanceDimension1				is like FinanceDimension1
  		LocalFinanceDimension2				is like FinanceDimension2
  		LocalFinanceDimension3				is like FinanceDimension3
  		LocalFinanceDimension4				is like FinanceDimension4
  		LocalFinanceDimension5				is like FinanceDimension5
   		LocalFinanceDimension6				is like FinanceDimension6
   		LocalFinanceDimension7				is like FinanceDimension7 		 		  		
  		LocalFinanceDimension8				is like FinanceDimension8
  		LocalFinanceDimension9				is like FinanceDimension9
  		LocalFinanceDimension10				is like FinanceDimension10
  		LocalTransactionAmount	 			is like InternationalAmount			
		LocalPercentContribution			is Percent size 9.6
  		BypassActiveCodeBlockEdit  	
		LocalDisposed						is Boolean	  		
	
	Field Rules
		
		ItemQuantity
			initial value is AssetItem.ItemQuantity
			default to AssetItem.ItemQuantity
		

		DisposalQuantity
			if ( AssetDisposal.FullOrPartial.Partial
			and Asset.NumberOfAssetItems = 1)
				constraint (DisposalQuantity = AssetDisposal.DisposalQuantity)
					"QuantityMustEqualDisposalQuantity<AssetDisposal.DisposalQuantity>"
					
		ItemNumber
			initial value is AssetItem.ItemNumber
			default to AssetItem.ItemNumber
			
		BaseNumberOfDecimals
			initial value is AssetItem.BaseNumberOfDecimals
			default to AssetItem.BaseNumberOfDecimals
			
		TransactionNumberOfDecimals
			initial value is AssetItem.TransactionNumberOfDecimals
			default to AssetItem.TransactionNumberOfDecimals
			
		TransactionItemCost
			default to AssetItem.TransactionItemCost
			
		TransactionItemTax
			default to AssetItem.TransactionItemTax	
			 
		BaseItemTax
			default to AssetItem.BaseItemTax
			
		BaseItemCost
			default to AssetItem.BaseItemCost
			
		DisposalDate
			default to AssetDisposal.DisposalDate
			
		DisposalMethod
			default to AssetDisposal.DisposalMethod   		
						
	Relations
		AssetTransactionRel
			one-to-many relation to AssetTransaction
			Field Mapping uses Set4
				related.ProcessAsset						= Asset
				related.ProcessSequence						= Asset.LastAssetSequence
		
		DisposalTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses Set4
				related.ProcessAsset						= LocalDisposalAsset
				related.ProcessSequence						= LocalLastAssetSeq
		
		DisposalBookTransactionsRel
            one-to-many relation to AssetBookTransaction
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Asset  					= LocalDisposalAsset		
				
 		AssetBookTransactionsRel
            one-to-many relation to AssetBookTransaction
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.Asset  					= Asset
		
		AssetControlTransactionRel
			one-to-one relation to AssetControlTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
			
		NewAssetControlTransactionRel
			one-to-one relation to AssetControlTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset.DisposedAsset
												
		AssetItemRel
			one-to-one relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.AssetItem				= AssetItem
		
		ToAssetItemRel
			one-to-one relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= AssetDisposal.DisposalAsset
				related.AssetItem				= AssetItem
				
		DisposalAssetItemRel
			one-to-one relation to AssetItem
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= TransientAsset
				related.AssetItem				= AssetItem
				
		NewAssetItemRel
			one-to-one relation to AssetItem
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.DisposedAsset
				related.AssetItem				= AssetItem	

		NewAssetItemsRel
			one-to-many relation to AssetItem
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.DisposedAsset

								
		AssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset
				
		NewAssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset.DisposedAsset	

		DisposedAssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= LocalAsset	
				related.Book						= LocalBook
				
				
		NewAssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.DisposedAsset
				
		AssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.Asset				
		
		ThisRecordRel
			one-to-one relation to AssetItemDisposal
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.DisposedAsset
				related.AssetDisposal			= Asset
				related.AssetItem				= AssetItem	
				related.AssetItemDisposal.ProcessSequence = AssetItemDisposal.ProcessSequence		
				
		AssetItemDisposalRel2
			one-to-many relation to AssetItemDisposal
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset.DisposedAsset
				related.AssetDisposal			= Asset
				related.AssetItem				= AssetItem	
				
		PartialAssetItemDisposalRel
			one-to-many relation to AssetItemDisposal
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset 					= Asset
				related.AssetDisposal			= Asset.DisposedAsset
				related.AssetItem				= AssetItem
				
		FullDisposalTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses Set2
				related.Company					= Asset.Company
				related.TransactionStatus		= "U"
				related.AssetProcess			= "DSP"	
				related.Asset					= Asset.DisposedAsset

		PartialDisposalTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses Set2
				related.Company					= Asset.Company
				related.TransactionStatus		= "U"
				related.AssetProcess			= "DSP"	
				related.Asset					= AssetDisposal.DisposalAsset
						        
		AssetDisposalRel
			one-to-many relation to AssetDisposal
            	Field Mapping uses symbolic key
            		related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                	related.Asset					= Asset.DisposedAsset	
                	
		RequiredCurrentBookCalendarsRel
			one-to-many relation to BookCalendar
			Field Mapping uses Set6
				related.Company	= Asset.Company
		
		AssetImpairmentBookRel
			one-to-one relation to AssetImpairmentBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset
				related.AssetImpairment				= Asset.LastAssetImpairment
				related.Book						= LocalBook
		
		ToAssetImpairmentRel
			one-to-one relation to AssetImpairment
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= LocalAsset
				related.AssetImpairment			= Asset.DisposedAsset.LastAssetImpairment
		
		ToAssetImpairmentBookRel
			one-to-one relation to AssetImpairmentBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= LocalAsset
				related.AssetImpairment				= Asset.DisposedAsset.LastAssetImpairment
				related.Book						= LocalBook
		
		ToAssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset.DisposedAsset
				related.Book						= DisposedAssetBookRel.Book      
		
		OriginalAssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset
				related.Book						= LocalBook    

		AssetFundsRel
			one-to-many relation to AssetFund
			Field Mapping uses ByAssetFund
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset	 					= Asset		
				related.RecordType					= 0		
		
		AssetItemFundsRel
			one-to-many relation to AssetItemFund
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset 
				related.AssetItem					= AssetItem	
		
		LocalAssetFundRel
			one-to-many relation to AssetFund
			Field Mapping uses ByAssetFund	
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset	 					= LocalAsset	
				related.RecordType					= 0
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit				= LocalAccountingUnit
				related.Project						= LocalProject
				related.FinanceDimension1			= LocalFinanceDimension1	
				related.FinanceDimension2			= LocalFinanceDimension2
				related.FinanceDimension3			= LocalFinanceDimension3
				related.FinanceDimension4			= LocalFinanceDimension4
				related.FinanceDimension5			= LocalFinanceDimension5				
				related.FinanceDimension6			= LocalFinanceDimension6					
				related.FinanceDimension7			= LocalFinanceDimension7
				related.FinanceDimension8			= LocalFinanceDimension8
				related.FinanceDimension9			= LocalFinanceDimension9				
				related.FinanceDimension10			= LocalFinanceDimension10
										
		LocalAssetItemFundRel
			one-to-many relation to AssetItemFund
			Field Mapping uses ByAssetFundItem
				related.Asset	 					= LocalAsset
				related.RecordType					= 0
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit				= LocalAccountingUnit
				related.Project						= LocalProject
				related.FinanceDimension1			= LocalFinanceDimension1
				related.FinanceDimension2			= LocalFinanceDimension2
				related.FinanceDimension3			= LocalFinanceDimension3
				related.FinanceDimension4			= LocalFinanceDimension4
				related.FinanceDimension5			= LocalFinanceDimension5				
				related.FinanceDimension6			= LocalFinanceDimension6					
				related.FinanceDimension7			= LocalFinanceDimension7
				related.FinanceDimension8			= LocalFinanceDimension8
				related.FinanceDimension9			= LocalFinanceDimension9				
				related.FinanceDimension10			= LocalFinanceDimension10
				related.AssetItem					= LocalAssetItem	
		
		ToAssetFundRel
			one-to-many relation to AssetFund
			Field Mapping uses ByAssetFund
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset	 					= Asset.DisposedAsset		
				related.RecordType					= 0		
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit				= LocalAccountingUnit
				related.Project						= LocalProject
				related.FinanceDimension1			= LocalFinanceDimension1
				related.FinanceDimension2			= LocalFinanceDimension2
				related.FinanceDimension3			= LocalFinanceDimension3
				related.FinanceDimension4			= LocalFinanceDimension4
				related.FinanceDimension5			= LocalFinanceDimension5				
				related.FinanceDimension6			= LocalFinanceDimension6					
				related.FinanceDimension7			= LocalFinanceDimension7
				related.FinanceDimension8			= LocalFinanceDimension8
				related.FinanceDimension9			= LocalFinanceDimension9				
				related.FinanceDimension10			= LocalFinanceDimension10					
					
		ToAssetItemFundRel 
			one-to-many relation to AssetItemFund
			Field Mapping uses ByAssetFundItem
				related.Asset	 					= Asset.DisposedAsset	
				related.RecordType					= 0	
				related.AccountingEntity			= LocalAccountingEntity
				related.AccountingUnit				= LocalAccountingUnit	
				related.Project						= LocalProject
				related.FinanceDimension1			= LocalFinanceDimension1
				related.FinanceDimension2			= LocalFinanceDimension2
				related.FinanceDimension3			= LocalFinanceDimension3
				related.FinanceDimension4			= LocalFinanceDimension4
				related.FinanceDimension5			= LocalFinanceDimension5				
				related.FinanceDimension6			= LocalFinanceDimension6					
				related.FinanceDimension7			= LocalFinanceDimension7
				related.FinanceDimension8			= LocalFinanceDimension8
				related.FinanceDimension9			= LocalFinanceDimension9				
				related.FinanceDimension10			= LocalFinanceDimension10				
				related.AssetItem					= AssetItem
				
				
	Conditions
		DisposalQuantityError
			when (AssetDisposalQuantity not = TotalItemsDisposalQuantity) 	        
	
		HasTagNumber
			when (TransientTagNumber entered)
			
		ThisRecordExists
			when (ThisRecordRel exists)
			
				
	Rule Blocks
		470CalcNewAssetItemValues  	

			LocalNewQty = DisposalQuantity
			initialize LocalNewBaseCost
			if (AssetItem.BaseItemCost entered
			and AssetItem.ItemQuantity entered)
				BaseItemCost = DisposalQuantity / AssetItem.ItemQuantity * AssetItem.BaseItemCost

			initialize LocalNewTaxBase
			if (AssetItem.BaseItemTax entered
			and AssetItem.ItemQuantity entered)
				BaseItemTax  = DisposalQuantity /AssetItem.ItemQuantity * AssetItem.BaseItemTax
				
			initialize LocalNewCostTran
			if (AssetItem.TransactionItemCost entered
			and AssetItem.ItemQuantity entered)
				TransactionItemCost = DisposalQuantity /AssetItem.ItemQuantity * AssetItem.TransactionItemCost
			else
				TransactionItemCost = DisposalQuantity /NewAssetItemRel.ItemQuantity * NewAssetItemRel.TransactionItemCost
				
			initialize LocalNewTaxTran
			if (AssetItem.TransactionItemTax entered
			and AssetItem.ItemQuantity entered)
				TransactionItemTax = DisposalQuantity /AssetItem.ItemQuantity * AssetItem.TransactionItemTax
			
			LocalQuantityChange	+= DisposalQuantity
			LocalBaseCostChange += BaseItemCost
			LocalBaseTaxChange	+= BaseItemTax
			LocalCostTranChange	+= TransactionItemCost
			LocalTaxTranChange	+= TransactionItemTax
			
			
	Actions
		Create is a Create Action

			Entrance Rules
				AssetItemDisposal.ProcessSequence = Asset.LastAssetSequence 
				if (AssetItem.AssetDisposal.PartialDisposal)
    				constraint (DisposalQuantity < Asset.EnteredQuantity)
    					"CanNotSelectAllOnPartialDisposal" 
    				constraint (DisposalQuantity <= AssetItem.ItemQuantity)
    					"ItemDisposalQuantityCannotExceedItemQuantity"
			
			Local Fields
				LocalDisposalPercent	is a Percent
				LocalFirstAndLastYear	is a FirstAndLastYear
			
			Action Rules
				BypassActiveCodeBlockEdit = true
				if (AssetDisposal.PartialDisposal)
					include 470CalcNewAssetItemValues
					LocalQuantityDifference	= AssetItem.ItemQuantity - DisposalQuantity
					LocalBaseCostDifference	= AssetItem.BaseItemCost - BaseItemCost
					LocalBaseTaxDifference = AssetItem.BaseItemTax - BaseItemTax
					LocalTranCostDifference	= AssetItem.TransactionItemCost - TransactionItemCost
					LocalTranTaxDifference = AssetItem.TransactionItemTax - TransactionItemTax
					LocalTransactionItemCost = TransactionItemCost
					LocalItemTotalTransactionCost = AssetDisposal.ItemTotalTransactionCost
					if (DisposalQuantity > 0)
						LocalDisposalPercent	= DisposalQuantity / AssetItemRel.ItemQuantity
						invoke CreateFromDisposal AssetItem 
							assign result to NewAssetItem
							fill in fields from AssetItem
								except invoked.BarCode
							invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup 
							invoked.Asset					= Asset.DisposedAsset
							invoked.AssetItem				= AssetItem
							invoked.AdjustmentDate			= AssetDisposal.DisposalDate
							invoked.ItemQuantity			= DisposalQuantity
							invoked.BaseItemCost			= BaseItemCost
							invoked.BaseItemTax				= BaseItemTax
							invoked.TransactionItemCost		= TransactionItemCost
							invoked.TransactionItemTax		= TransactionItemTax
						
						invoke UpdateFromDisposal AssetItemRel 
							invoked.PrmItemQuantity			= DisposalQuantity * -1
							invoked.PrmBaseItemCost			= BaseItemCost * -1
							invoked.PrmBaseItemTax			= BaseItemTax  * -1
							invoked.PrmTransactionItemCost	= TransactionItemCost * -1
							invoked.PrmTransactionItemTax	= TransactionItemTax * -1
							invoked.PrmDisposalQuantity		= DisposalQuantity

					if (Asset.FundAllocationRequired)
						if (Asset.FundOverride)
							for each AssetFundsRel
								LocalAsset 				= Asset.DisposedAsset
								LocalAccountingEntity	= each.AccountingEntity
								LocalAccountingUnit		= each.AccountingUnit
								LocalProject			= each.Project
								if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
									LocalFund			= each.AccountingUnit
								else	
									LocalFund			= each.FinanceDimension1
			  					LocalFinanceDimension1	= each.FinanceDimension1
								LocalFinanceDimension2	= each.FinanceDimension2
								LocalFinanceDimension3	= each.FinanceDimension3
								LocalFinanceDimension4	= each.FinanceDimension4
								LocalFinanceDimension5	= each.FinanceDimension5  	
								LocalFinanceDimension6	= each.FinanceDimension6 
								LocalFinanceDimension7	= each.FinanceDimension7
								LocalFinanceDimension8	= each.FinanceDimension8
								LocalFinanceDimension9	= each.FinanceDimension9 	
								LocalFinanceDimension10	= each.FinanceDimension10   										
										
								LocalPercentContribution = each.PercentContribution

								if (!LocalAssetFundRel exists)
									invoke Create AssetFund
										invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
										invoked.Asset 					= LocalAsset
										invoked.AccountingUnit			= LocalAccountingUnit
										invoked.AccountingEntity		= LocalAccountingEntity
										invoked.Project					= LocalProject
										invoked.Fund					= LocalFund
										invoked.FinanceDimension1		= LocalFinanceDimension1
										invoked.FinanceDimension2		= LocalFinanceDimension2
										invoked.FinanceDimension3		= LocalFinanceDimension3
										invoked.FinanceDimension4		= LocalFinanceDimension4												
										invoked.FinanceDimension5		= LocalFinanceDimension5
										invoked.FinanceDimension6		= LocalFinanceDimension6
										invoked.FinanceDimension7		= LocalFinanceDimension7
										invoked.FinanceDimension8		= LocalFinanceDimension8
										invoked.FinanceDimension9		= LocalFinanceDimension9											
										invoked.FinanceDimension10		= LocalFinanceDimension10												

										invoked.PercentContribution		= each.PercentContribution										

							for each AssetItemFundsRel 	
								LocalAsset 				= Asset.DisposedAsset
								LocalAssetItem			= AssetItem
								LocalAccountingEntity	= each.AccountingEntity
								LocalAccountingUnit		= each.AccountingUnit
								LocalProject			= each.Project
								if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
									LocalFund			= each.AccountingUnit
								else	
									LocalFund			= each.FinanceDimension1
								LocalFinanceDimension1	= each.FinanceDimension1
								LocalFinanceDimension2	= each.FinanceDimension2
								LocalFinanceDimension3	= each.FinanceDimension3
								LocalFinanceDimension4	= each.FinanceDimension4
								LocalFinanceDimension5	= each.FinanceDimension5
								LocalFinanceDimension6	= each.FinanceDimension6
								LocalFinanceDimension7	= each.FinanceDimension7
								LocalFinanceDimension8	= each.FinanceDimension8
								LocalFinanceDimension9	= each.FinanceDimension9
								LocalFinanceDimension10	= each.FinanceDimension10
								
								
								LocalPercentContribution = each.PercentContribution
								LocalTransactionAmount	= each.TransactionAmount
								if (!LocalAssetItemFundRel exists)
									invoke Create AssetItemFund
										invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
										invoked.Asset 					= LocalAsset
										invoked.AssetItem				= LocalAssetItem
										invoked.AccountingUnit			= LocalAccountingUnit
										invoked.AccountingEntity		= LocalAccountingEntity
										invoked.Fund 					= LocalFund
										invoked.FinanceDimension1		= LocalFinanceDimension1
										invoked.FinanceDimension2		= LocalFinanceDimension2
										invoked.FinanceDimension3		= LocalFinanceDimension3
										invoked.FinanceDimension4		= LocalFinanceDimension4
										invoked.FinanceDimension5		= LocalFinanceDimension5
										invoked.FinanceDimension6		= LocalFinanceDimension6												
										invoked.FinanceDimension7		= LocalFinanceDimension7
										invoked.FinanceDimension8		= LocalFinanceDimension8
										invoked.FinanceDimension9		= LocalFinanceDimension9
										invoked.FinanceDimension10		= LocalFinanceDimension10
										invoked.PercentContribution		= LocalPercentContribution	
										invoked.TransactionAmount		= (TransactionItemCost * LocalPercentContribution)		
						else	
							for each AssetItemFundsRel 	
								LocalAsset 				= Asset.DisposedAsset
								LocalAssetItem			= AssetItem
								LocalAccountingEntity	= each.AccountingEntity
								LocalAccountingUnit		= each.AccountingUnit
								LocalProject			= each.Project
								LocalFund				= each.Fund
								LocalFinanceDimension1	= each.FinanceDimension1
								LocalFinanceDimension2	= each.FinanceDimension2
								LocalFinanceDimension3	= each.FinanceDimension3
								LocalFinanceDimension4	= each.FinanceDimension4
								LocalFinanceDimension5	= each.FinanceDimension5
								LocalFinanceDimension6	= each.FinanceDimension6
								LocalFinanceDimension7	= each.FinanceDimension7
								LocalFinanceDimension8	= each.FinanceDimension8
								LocalFinanceDimension9	= each.FinanceDimension9
								LocalFinanceDimension10	= each.FinanceDimension10
								
								LocalPercentContribution = each.PercentContribution
								LocalTransactionAmount	= each.TransactionAmount
								invoke Create AssetItemFund
									invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.Asset 					= LocalAsset
									invoked.AssetItem				= LocalAssetItem
									invoked.AccountingUnit			= LocalAccountingUnit
									invoked.AccountingEntity		= LocalAccountingEntity
									invoked.Project					= LocalProject
									invoked.Fund					= LocalFund
									invoked.PercentContribution		= LocalPercentContribution
									invoked.FinanceDimension1		= LocalFinanceDimension1
									invoked.FinanceDimension2		= LocalFinanceDimension2
									invoked.FinanceDimension3		= LocalFinanceDimension3
									invoked.FinanceDimension4		= LocalFinanceDimension4
									invoked.FinanceDimension5		= LocalFinanceDimension5
									invoked.FinanceDimension6		= LocalFinanceDimension6												
									invoked.FinanceDimension7		= LocalFinanceDimension7
									invoked.FinanceDimension8		= LocalFinanceDimension8
									invoked.FinanceDimension9		= LocalFinanceDimension9
									invoked.FinanceDimension10		= LocalFinanceDimension10
									if (LocalPercentContribution not entered)
										invoked.TransactionAmount		= (TransactionItemCost * LocalPercentContribution)	
										 
					invoke DisposePartialReset NewAssetBookRel
											
					for each AssetBookRel
						LocalDisposalPercent = TransactionItemCost / LocalItemTotalTransactionCost
						LocalAsset				= Asset.DisposedAsset 
						LocalBook 				= each.Book
						LocalFirstAndLastYear	= each.FirstAndLastYear	
						if (!DisposedAssetBookRel exists)
							if (!each.Disposed)
								invoke CreateFromDisposal AssetBook 
									fill in fields from each
									invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup 
									invoked.Asset					= Asset.DisposedAsset
									invoked.Basis					= each.Basis
									invoked.FirstAndLastYear		= LocalFirstAndLastYear
						else
							invoke UpdateBookFromDisposal DisposedAssetBookRel.AssetBook
								if (!each.Book.Currency = Asset.Currency
								and each.Book.PostCurrency.Book)
									if(each.Book.Impairment)
										invoked.PrmBasis				= each.Basis * (TransactionItemCost / AssetDisposal.ItemTotalTransactionCost)
									else
										invoked.PrmDisposalPercent		= LocalDisposalPercent
								else
									if(each.Book.Impairment)
										invoked.PrmBasis				= each.Basis * (TransactionItemCost / AssetDisposal.ItemTotalTransactionCost)
									else
										invoked.PrmBasis				= TransactionItemCost
								invoked.PrmOriginalBasis					= each.Basis
								invoked.PrmOriginalYearToDateDepreciation	= each.YearToDateDepreciation
								invoked.PrmOriginalLifeToDateDepreciation	= each.LifeToDateDepreciation
								invoked.PrmSalvageValue						= each.SalvageValue
							







					if (AssetDisposal.FullOrPartial.Full)    
						for each FullDisposalTransactionsRel
							invoke Update FullDisposalTransactionsRel
								invoked.AssetGroup		= Asset.AssetGroup
					else
						for each PartialDisposalTransactionsRel
							invoke Update PartialDisposalTransactionsRel
								invoked.AssetGroup		= Asset.AssetGroup
		
			Exit Rules
				if (AssetDisposal.PartialDisposal)
					LocalAsset = Asset.DisposedAsset
				else
					LocalAsset = Asset
					

				if (UpdateFromBatch)
					DisposalBook.UpdateFromBatch		= true
				else 
					DisposalBook.UpdateFromBatch		= false
				DisposalBook.DisposalAsset 			= Asset.DisposedAsset
				DisposalBook.NewAsset 				= Asset
				DisposalBook.DisposalCost			= LocalTransactionItemCost
				DisposalBook.Cost	 				= LocalItemTotalTransactionCost
				DisposalBook.Company				= Asset.Company
				if (AssetDisposal.PartialDisposal)
					DisposalBook.PartialDsp			= true
				else
					DisposalBook.PartialDsp			= false
				DisposalBook.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				DisposalBook.DisposalDate			= AssetDisposal.DisposalDate
				LocalPerformCreateDisposalBook 		= DisposalBook.PerformCreateDisposalBook
					
						
				if (AssetDisposal.PartialDisposal)
					invoke Unreleased.ProcessDisposal AssetDisposal
						invoked.ProcessAsset		= LocalAsset
						invoked.PrmDisposalDate		= TransientDisposalDate	
					for each AssetBookRel
						LocalAsset				= Asset.DisposedAsset 
						LocalBook 				= each.Book
						if(AssetImpairmentBookRel exists)
							if(ToAssetImpairmentBookRel not exists)
								invoke Create ToAssetImpairmentBookRel
									fill in fields from AssetImpairmentBookRel
									invoked.AssetImpairment		= ToAssetImpairmentRel.AssetImpairment
									invoked.Asset				= Asset.DisposedAsset
									invoked.OriginalBasis		= DisposedAssetBookRel.Basis
									invoked.OriginalBookValue	= DisposedAssetBookRel.BookValue
									invoked.ImpairmentAmount	= each.ImpairmentAmount * (TransactionItemCost / Asset.ItemTotalTransactionCost)
							else
								invoke UpdateFromTransfer ToAssetImpairmentBookRel
									invoked.OriginalBasis		= DisposedAssetBookRel.Basis
									invoked.ImpairmentAmount	+= (each.ImpairmentAmount * (TransactionItemCost / Asset.ItemTotalTransactionCost))
									invoked.OriginalBookValue	= DisposedAssetBookRel.BookValue
							
							invoke UpdateFromTransfer AssetImpairmentBookRel
								invoked.OriginalBasis		= each.Basis - DisposedAssetBookRel.Basis
								invoked.ImpairmentAmount	-= (each.ImpairmentAmount * (TransactionItemCost / Asset.ItemTotalTransactionCost))
								invoked.OriginalBookValue	= each.BookValue - DisposedAssetBookRel.BookValue
					invoke UpdateFromAssetItemDisposal AssetRel
					invoke UpdateFromAssetItemDisposal Asset.DisposedAsset

		NoEditCreate is a Create Action
			restricted
			bypass field rules
			
		
		Update is an Update Action
			Local Fields
				LocalDisposalPercent	is a Percent
			Entrance Rules
				BypassActiveCodeBlockEdit = true			
				if (AssetItem.AssetDisposal.PartialDisposal)
					if(Asset.DisposedAsset.NumberOfAssetItems = 1)
						constraint (DisposalQuantity > 0)
							"DisposalItemQuantityCanNotBeZero"
	    			constraint (DisposalQuantity <= ItemQuantity)
	    				"DisposalQuantityCanNotBeGreaterThanItemQuantity"
					LocalDisposalAsset 	= Asset.DisposedAsset
					LocalLastAssetSeq 	= Asset.DisposedAsset.LastAssetSequence
				else 
					LocalDisposalAsset 	= Asset
					LocalLastAssetSeq 	= Asset.LastAssetSequence	
									
				if (AssetControlTransactionRel exists)
					invoke Update AssetControlTransactionRel
						initialize invoked.DebitBalance
						initialize invoked.CreditBalance	
				else
					invoke BalanceUpdate AssetBookRel
						initialize invoked.DebitBalance
						initialize invoked.CreditBalance	

				if (DisposalTransactionsRel exists)   
					invoke Delete DisposalTransactionsRel
					
				if (DisposalBookTransactionsRel exists)
					if ((AssetBookTransactionsRel.AssetProcess = "DSP"
					and AssetBookTransactionsRel.AssetBookTransaction.TransactionStatus = "U")
					or (AssetBookTransactionsRel.AssetBookTransaction.TransactionStatus = "M"))
						invoke Delete DisposalBookTransactionsRel		
							


				include 470CalcNewAssetItemValues
				LocalQuantityDifference	= NewAssetItemRel.ItemQuantity - DisposalQuantity
				LocalBaseCostDifference	= NewAssetItemRel.BaseItemCost - BaseItemCost
				LocalBaseTaxDifference	= NewAssetItemRel.BaseItemTax - BaseItemTax
				LocalTranCostDifference	= NewAssetItemRel.TransactionItemCost - TransactionItemCost
				LocalTranTaxDifference	= NewAssetItemRel.TransactionItemTax - TransactionItemTax
				LocalItemTotalTransactionCost	= AssetDisposal.ItemTotalTransactionCost
				invoke UpdateFromDisposal AssetItemRel
					invoked.PrmItemQuantity			= LocalQuantityDifference 	
					invoked.PrmBaseItemCost			= LocalBaseCostDifference 	
					invoked.PrmBaseItemTax			= LocalBaseTaxDifference 	
					invoked.PrmTransactionItemCost	= LocalTranCostDifference 	
					invoked.PrmTransactionItemTax	= LocalTranTaxDifference 	
 
 				invoke UpdateFromDisposal NewAssetItemRel
					invoked.PrmItemQuantity			= LocalQuantityDifference 	* -1
					invoked.PrmBaseItemCost			= LocalBaseCostDifference 	* -1
					invoked.PrmBaseItemTax			= LocalBaseTaxDifference 	* -1
					invoked.PrmTransactionItemCost	= LocalTranCostDifference 	* -1
					invoked.PrmTransactionItemTax	= LocalTranTaxDifference 	* -1				
							
				for each AssetBookRel


					DisposalBook.DisposalAsset 			= Asset.DisposedAsset
					DisposalBook.NewAsset 				= Asset
					DisposalBook.DisposalCost			= TransactionItemCost
					DisposalBook.Cost	 				= LocalItemTotalTransactionCost
					DisposalBook.Company				= Asset.Company
					if (AssetDisposal.PartialDisposal)
						DisposalBook.PartialDsp			= true
					else
						DisposalBook.PartialDsp			= false
					DisposalBook.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					DisposalBook.DisposalDate			= AssetDisposal.DisposalDate
					LocalPerformCreateDisposalBook 		= DisposalBook.PerformCreateDisposalBook
					invoke Unreleased.ProcessDisposal AssetDisposal
						invoked.ProcessAsset			= Asset	
						invoked.PrmDisposalDate			= TransientDisposalDate
				
				for each NewAssetBookRel								
					invoke UpdateBookFromDisposal each
						LocalDisposalPercent = LocalTranCostDifference/LocalItemTotalTransactionCost
						LocalBook	= each.Book
						if (!each.Book.Currency = Asset.Currency
						and each.Book.PostCurrency.Book)
							invoked.PrmDisposalPercent	= LocalDisposalPercent * -1
						else	
							invoked.PrmBasis			= LocalTranCostDifference * -1
						invoked.PrmOriginalBasis					= OriginalAssetBookRel.Basis 
						invoked.PrmOriginalYearToDateDepreciation	= OriginalAssetBookRel.YearToDateDepreciation
						invoked.PrmOriginalLifeToDateDepreciation	= OriginalAssetBookRel.LifeToDateDepreciation
						invoked.PrmSalvageValue						= OriginalAssetBookRel.SalvageValue
										
					DisposalBook.DisposalAsset 			= Asset.DisposedAsset
					DisposalBook.NewAsset 				= Asset
					DisposalBook.DisposalCost			= TransactionItemCost * -1
					DisposalBook.Cost	 				= LocalItemTotalTransactionCost * -1
					DisposalBook.Company				= Asset.Company
					if (AssetDisposal.PartialDisposal)
						DisposalBook.PartialDsp			= true
					else
						DisposalBook.PartialDsp			= false
					DisposalBook.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					DisposalBook.DisposalDate			= AssetDisposal.DisposalDate
					LocalPerformCreateDisposalBook 		= DisposalBook.PerformCreateDisposalBook
					invoke Unreleased.ProcessDisposal AssetDisposal
						invoked.ProcessAsset			= Asset	
						invoked.PrmDisposalDate			= TransientDisposalDate

			Action Rules
			
			Exit Rules
				invoke DisposePartialReset NewAssetBookRel
				invoke Unreleased.ProcessDisposal AssetDisposal
					invoked.ProcessAsset			= Asset.DisposedAsset
					invoked.PrmDisposalDate			= TransientDisposalDate

				if (AssetDisposal.PartialDisposal)	
					invoke UpdateFromAssetItemDisposal AssetRel
					invoke UpdateFromAssetItemDisposal Asset.DisposedAsset
					if(DisposalQuantity = 0)
						invoke Delete AssetItemDisposal
				invoke UpdateFundAllocation AssetDisposal.DisposalAsset

	
		DisposalDelete is a Delete Action
			restricted
			
		
		Delete is a Delete Action
			Entrance Rules
				BypassActiveCodeBlockEdit = true			
				if (NewAssetItemRel exists)
					LocalDelQty						= NewAssetItemRel.ItemQuantity
					LocalDelCstBase					= NewAssetItemRel.BaseItemCost
					LocalDelTaxBase					= NewAssetItemRel.BaseItemTax
					LocalDelCstTran					= NewAssetItemRel.TransactionItemCost
					LocalDelCstTax					= NewAssetItemRel.TransactionItemTax

				if (AssetItemRel exists
				and (LocalDelQty entered
				or  (LocalDelCstBase entered)
				or  (LocalDelTaxBase entered)
				or  (LocalDelCstTran entered)
				or  (LocalDelCstTax entered)))
					invoke AdjustmentUpdate AssetItemRel
						invoked.ItemQuantity		+= LocalDelQty
						invoked.BaseItemCost		+= LocalDelCstBase
						invoked.BaseItemTax			+= LocalDelTaxBase
						invoked.TransactionItemCost	+= LocalDelCstTran
						invoked.TransactionItemTax	+= LocalDelCstTax
				else
					if (NewAssetItemRel exists)
						if(LocalDelQty != 0)
							invoke Create AssetItem
								assign result to NewAssetItem
								fill in fields from NewAssetItemRel

							if (Asset.FundAllocationRequired)
								if (Asset.FundOverride)	
									for each AssetFundsRel
										LocalAccountingEntity 			= each.AccountingEntity
										LocalAccountingUnit				= each.AccountingUnit
										LocalProject					= each.Project
										if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
											LocalFund					= each.AccountingUnit
										else
											LocalFund 					= each.FinanceDimension1
						  				LocalFinanceDimension1			= each.FinanceDimension1
  										LocalFinanceDimension2			= each.FinanceDimension2
  										LocalFinanceDimension3			= each.FinanceDimension3
  										LocalFinanceDimension4			= each.FinanceDimension4
  										LocalFinanceDimension5			= each.FinanceDimension5  			
  										LocalFinanceDimension6			= each.FinanceDimension6
  										LocalFinanceDimension7			= each.FinanceDimension7
  										LocalFinanceDimension8			= each.FinanceDimension8
  										LocalFinanceDimension9			= each.FinanceDimension9  			
  										LocalFinanceDimension10			= each.FinanceDimension10  										
  										  		  																	
										if (!first ToAssetFundRel exists)
											invoke Create AssetFund
												invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
												invoked.Asset 					= Asset.DisposedAsset
												fill in fields from each												
											
								else	
									for each AssetItemFundsRel 	
										LocalAccountingEntity 			= each.AccountingEntity
										LocalAccountingUnit				= each.AccountingUnit
										LocalProject					= each.Project
										if (FinanceEnterpriseGroup.FundDimension.AccountingUnit)
											LocalFund					= each.AccountingUnit
										else
											LocalFund 					= each.FinanceDimension1
						  				LocalFinanceDimension1			= each.FinanceDimension1
  										LocalFinanceDimension2			= each.FinanceDimension2
  										LocalFinanceDimension3			= each.FinanceDimension3
  										LocalFinanceDimension4			= each.FinanceDimension4
  										LocalFinanceDimension5			= each.FinanceDimension5  			
  										LocalFinanceDimension6			= each.FinanceDimension6
  										LocalFinanceDimension7			= each.FinanceDimension7
  										LocalFinanceDimension8			= each.FinanceDimension8
  										LocalFinanceDimension9			= each.FinanceDimension9  			
  										LocalFinanceDimension10			= each.FinanceDimension10  	
										if (!first ToAssetItemFundRel exists)
											invoke Create AssetItemFund
												invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
												invoked.Asset 					= Asset.DisposedAsset
												invoked.AssetItem				= AssetItem	
												fill in fields from each

				if (NewAssetItemRel exists)
					invoke ForceDelete NewAssetItemRel
					
				if (AssetItemDisposalRel2 exists)
					invoke Delete AssetItemDisposalRel2	
					
				LocalDelQty							*= -1
				LocalDelCstBase						*= -1
				LocalDelTaxBase						*= -1
				LocalDelCstTran						*= -1
				LocalDelCstTax						*= -1
				
				LocalQuantityDifference				+= LocalDelQty 
				LocalBaseCostDifference	  			+= LocalDelCstBase
				LocalBaseTaxDifference	  			+= LocalDelTaxBase
				LocalTranCostDifference	 			+= LocalDelCstTran
				LocalTranTaxDifference	  			+= LocalDelCstTax	
			
			
		PartialItemDispose is a Create Action
			restricted
			Entrance Rules
			Action Rules
			Exit Rules

		ResetDisposal is an Instance Action
			restricted

			Action Rules
				invoke Delete

		Purge is a Purge Action
			restricted
			
