LegacyActransCodeblock is a BusinessClass 
    owned by glif
    prefix is ATN2

    Patterns
        disable EffectiveDated   
        disable Auditing
        disable AsOfDateProcessing  
 
    Persistent Fields

        ActivityGrp   is AlphaUpper 15 
        ControlGroup  is Numeric 8 
        SequenceNbr   is Numeric 4
        ObjId         is Numeric 12
        TransType     is AlphaUpper 1
        Company       is Numeric 4
        FromCompany   is Numeric 4
        TranDate      is Date
        Activity      is AlphaUpper 15
        VarLevels     is AlphaUpper 30
        Status        is Numeric 1
        AcctCategory  is AlphaUpper 5
        PostingDate   is Date
        System        is AlphaUpper 2
        AcctUnit      is AlphaUpper 15
        Account       is Numeric 6 
        SubAccount    is Numeric 4
        Description   is Alpha   30
        Reference     is Alpha 10 
        UnitsAmount   is Decimal 15.2
        TranCurrency  is AlphaUpper 5
        TranAmount    is Decimal 18.2
        TranNd        is Numeric 1
        ActCurrency   is AlphaUpper 5
        ActBaserate   is Decimal 14.7
        ActAmount     is Decimal 18.2
        ActNd         is Numeric 1
        AgCurrency    is AlphaUpper 5
        AgBaserate    is Decimal 14.7
        AgAmount      is Decimal 18.2
        AgNd          is Numeric 1
        BillDate      is Date
        RunDate       is TimeStamp
        SourceCode    is AlphaUpper 2
        BillRate      is Decimal 15.6
        Billable      is AlphaUpper 1 
        Billed        is AlphaUpper 1
            States
                Yes             value is "Y"
                No              value is "N"
                Hold            value is "H"
                ExceededCeiling value is "E"
                    default label is "Exceeded ceiling"
        BillableAmt   is Decimal 18.2
        BillableUnit  is Decimal 15.2
        OverrideFlag  is AlphaUpper 1
        RevenueFlag   is AlphaUpper 1
        CapitalizeFlg is AlphaUpper 1
            States
                Yes value is "Y"
                No  value is "N"
        MatrixCat     is AlphaUpper 12
        MxValue       is AlphaUpper 32
        ResourceType  is AlphaUpper 1
        ResourceCode  is AlphaUpper 10
        ResourceDesc  is Alpha 30
        UnitMeasure   is AlphaUpper 12
        GltObjId      is Numeric 12
        Period        is Numeric 2
        FiscalYear    is a Year
        Ac191Updated  is AlphaUpper 1
            classic name is AC191-UPDATED
        Reconciled    is AlphaUpper 1
        SegmentFlag   is AlphaUpper 1
        RptAmount1    is Decimal 18.2
        RptRate1      is Decimal 14.7
        RptNd1        is Numeric 1
        RptAmount2    is Decimal 18.2
        RptRate2      is Decimal 14.7
        RptNd2        is Numeric 1
        BrdnOrgObjid  is Numeric 12
        OrigObjId     is Numeric 12
        BilledAmt     is Decimal 18.2
        RevenueAmt    is Decimal 18.2
        ExpenseCode   is AlphaUpper 20
        ReasonCode    is AlphaUpper 4
        CommentCd     is Numeric 3
        ApPaid        is AlphaUpper 1
        QuickPostFl   is AlphaUpper 1
            States
                Yes value is "Y"
                No  value is "N"
        TransferFl    is AlphaUpper 1
            States
                Yes         value is "Y"
                No          value is "N"
                Transferred value is "T"
        TransferAmt   is Decimal 18.2
        BillMthd      is Numeric 1
        RevMthd       is AlphaUpper 1
        RevObjId      is Numeric 12
        SumAcctCat    is AlphaUpper 5
        HoldObjId     is Numeric 12
        Capitalizable is AlphaUpper 1
            States
                No   value is "N"
                Yes  value is "Y"
                Hold value is "H"
                No3  value is blank
                    default label is "No"
        CommentsFlag  is AlphaUpper 1
        CategoryType  is AlphaUpper 1
        Operator      is AlphaUpper 10
        Ledger                        is AlphaUpper 20
            classic name is LEDGER
        ToAccountingEntity            is AlphaUpper 12
            classic name is TO-ACCOUNTING-ENTITY
        AccountingUnit                is AlphaUpper 25
            classic name is ACCOUNTING-UNIT
        GeneralLedgerChartAccount     is AlphaUpper 26
        	default label is "GlobalLedgerChartAccount" 
            classic name is GENERAL-LEDGER-ACCOUNTING-UNIT
        Project                       is AlphaUpper 15
            classic name is PROJECT
        FinanceDimension1            is AlphaUpper 15
            classic name is FIN-DIM-01
        FinanceDimension2            is AlphaUpper 15
            classic name is FIN-DIM-02
        FinanceDimension3            is AlphaUpper 15
            classic name is FIN-DIM-03
        FinanceDimension4            is AlphaUpper 15
            classic name is FIN-DIM-04
        FinanceDimension5            is AlphaUpper 15
            classic name is FIN-DIM-05
        FinanceDimension6            is AlphaUpper 15
            classic name is FIN-DIM-06
        FinanceDimension7            is AlphaUpper 15
            classic name is FIN-DIM-07
        FinanceDimension8            is AlphaUpper 15
            classic name is FIN-DIM-08
        FinanceDimension9            is AlphaUpper 15
            classic name is FIN-DIM-09
        FinanceDimension10            is AlphaUpper 15
            classic name is FIN-DIM-10
        
    Local Fields

    Derived Fields

    Relations

        MigrationCompanyMappingRel
            one-to-one relation to MigrationCompanyMapping
            Field Mapping uses Set1
                related.S3company    = FromCompany
        
        AccountUnitDimensionMappingRel
            one-to-one relation to AccountUnitDimensionMapping
            Field Mapping uses Set1
                related.S3company    = FromCompany
                related.S3AcctUnit   = AcctUnit

        AccountStructureMappingRel
            one-to-one relation to AccountStructureMapping
            Field Mapping uses Set1
                related.S3company    = FromCompany
                related.Account      = Account
                related.SubAccount   = SubAccount

        MigrationProjectMappingRel
            one-to-one relation to MigrationProjectMapping
            Field Mapping uses Set1
                related.S3Activity  = Activity

        AccountCategoryMappingRel
            one-to-one relation to AccountCategoryMapping
            Field Mapping uses Set1
                related.S3AcctCat   = AcctCategory

    Sets

        Set1
            primary
            indexed
            Sort Order
                ActivityGrp
                Activity
                AcctCategory
                Company
                AcctUnit
                Account
                SubAccount
                ObjId
    
    Actions
        Create is a Create Action 
        Update is an Update Action
        Delete is a Delete Action

        ImportToAcCodeblock is a Set Action
            restricted

            Local Fields
                LocalMapSubAcct                             is Numeric 2
                LocalMapAcctCat                             is Numeric 2
                LocalMapAcctUnit                            is Numeric 2
                LocalMapInterEntityAccount                  is Numeric 2
                LocalFormatSubAcct                          is AlphaUpper 10

            Action Rules

                Instance Rules
                    LocalMapAcctCat            = MigrationCompanyMappingRel.MapAcctCat
                    LocalMapSubAcct            = MigrationCompanyMappingRel.MapSubAcct
                    LocalMapAcctUnit           = MigrationCompanyMappingRel.MapAcctUnit
                    LocalMapInterEntityAccount = MigrationCompanyMappingRel.MapInterEntityAccount
                    LocalFormatSubAcct         = AccountStructureMappingRel.FormatSubAccount

                    if (MigrationCompanyMappingRel.RenameActivity.Yes)
                        Project = MigrationProjectMappingRel.XiProject
                    else
                        Project = Activity

                    if (Account != blank)
                        GeneralLedgerChartAccount = AccountStructureMappingRel.FormatAccount
                    if (Account !=blank or AcctUnit != blank)
                        ToAccountingEntity = MigrationCompanyMappingRel.AcctingEntity
                        if (GltObjId = 0)
                            Ledger = MigrationCompanyMappingRel.ProjectLedger
                        else
                            Ledger = MigrationCompanyMappingRel.Ledger


                    if (MigrationCompanyMappingRel.UpgradeType = 1)
                        if (AcctUnit != blank)
                            AccountingUnit = AccountUnitDimensionMappingRel.XiAcctUnit 
                        if (AccountUnitDimensionMappingRel.FinDim01 != blank)
                            FinanceDimension1 = AccountUnitDimensionMappingRel.FinDim01
                        if (AccountUnitDimensionMappingRel.FinDim02 != blank)
                            FinanceDimension2 = AccountUnitDimensionMappingRel.FinDim02
                        if (AccountUnitDimensionMappingRel.FinDim03 != blank)
                            FinanceDimension3 = AccountUnitDimensionMappingRel.FinDim03
                        if (AccountUnitDimensionMappingRel.FinDim04 != blank)
                            FinanceDimension4 = AccountUnitDimensionMappingRel.FinDim04
                        if (AccountUnitDimensionMappingRel.FinDim05 != blank)
                            FinanceDimension5 = AccountUnitDimensionMappingRel.FinDim05
                        if (AccountUnitDimensionMappingRel.FinDim06 != blank)
                            FinanceDimension6 = AccountUnitDimensionMappingRel.FinDim06
                        if (AccountUnitDimensionMappingRel.FinDim07 != blank)
                            FinanceDimension7 = AccountUnitDimensionMappingRel.FinDim07
                        if (AccountUnitDimensionMappingRel.FinDim08 != blank)
                            FinanceDimension8 = AccountUnitDimensionMappingRel.FinDim08
                        if (AccountUnitDimensionMappingRel.FinDim09 != blank)
                            FinanceDimension9 = AccountUnitDimensionMappingRel.FinDim09
                        if (AccountUnitDimensionMappingRel.FinDim10 != blank)
                            FinanceDimension10 = AccountUnitDimensionMappingRel.FinDim10


                        if (LocalMapSubAcct = 1)
                            FinanceDimension1     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 2)
                            FinanceDimension2     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 3)
                            FinanceDimension3     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 4)
                            FinanceDimension4     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 5)
                            FinanceDimension5     = LocalFormatSubAcct
                        else
                        if (LocalMapSubAcct = 6)
                            FinanceDimension6     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 7)
                            FinanceDimension7     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 8)
                            FinanceDimension8     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 9)
                            FinanceDimension9     = LocalFormatSubAcct 
                        else
                        if (LocalMapSubAcct = 10)
                            FinanceDimension10    = LocalFormatSubAcct 


                        if (LocalMapInterEntityAccount = 1)
                            FinanceDimension1 = AccountStructureMappingRel.FinDim01 
                        else
                        if (LocalMapInterEntityAccount = 2)
                            FinanceDimension2 = AccountStructureMappingRel.FinDim02 
                        else
                        if (LocalMapInterEntityAccount = 3)
                            FinanceDimension3 = AccountStructureMappingRel.FinDim03 
                        else
                        if (LocalMapInterEntityAccount = 4)
                            FinanceDimension4 = AccountStructureMappingRel.FinDim04 
                        else
                        if (LocalMapInterEntityAccount = 5)
                            FinanceDimension5 = AccountStructureMappingRel.FinDim05
                        else
                        if (LocalMapInterEntityAccount = 6)
                            FinanceDimension6 = AccountStructureMappingRel.FinDim06 
                        else
                        if (LocalMapInterEntityAccount = 7)
                            FinanceDimension7 = AccountStructureMappingRel.FinDim07 
                        else
                        if (LocalMapInterEntityAccount = 8)
                            FinanceDimension8 = AccountStructureMappingRel.FinDim08 
                        else
                        if (LocalMapInterEntityAccount = 9)
                            FinanceDimension9 = AccountStructureMappingRel.FinDim09 
                        else
                        if (LocalMapInterEntityAccount = 10)
                            FinanceDimension10 = AccountStructureMappingRel.FinDim10


                        if (MigrationCompanyMappingRel.RenameAcctCat.Yes)
                            if (LocalMapAcctCat = 3)
                                FinanceDimension3 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 4)
                                FinanceDimension4 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 5)
                                FinanceDimension5 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 6)
                                FinanceDimension6 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 7)
                                FinanceDimension7 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 8)
                                FinanceDimension8 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 9)
                                FinanceDimension9 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 10)
                                FinanceDimension10 = AccountCategoryMappingRel.XiAcctCat
                        else
                            if (LocalMapAcctCat = 3)
                                FinanceDimension3 = AcctCategory
                            if (LocalMapAcctCat = 4)
                                FinanceDimension4 = AcctCategory
                            if (LocalMapAcctCat = 5)
                                FinanceDimension5 = AcctCategory
                            if (LocalMapAcctCat = 6)
                                FinanceDimension6 = AcctCategory
                            if (LocalMapAcctCat = 7)
                                FinanceDimension7 = AcctCategory
                            if (LocalMapAcctCat = 8)
                                FinanceDimension8 = AcctCategory
                            if (LocalMapAcctCat = 9)
                                FinanceDimension9 = AcctCategory
                            if (LocalMapAcctCat = 10)
                                FinanceDimension10 = AcctCategory

                    else
                        if (LocalMapAcctUnit = 0)
                            AccountingUnit = AcctUnit
                        else
                        if (LocalMapAcctUnit = 1)
                            FinanceDimension1 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 2)
                            FinanceDimension2 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 3)
                            FinanceDimension3 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 4)
                            FinanceDimension4 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 5)
                            FinanceDimension5 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 6)
                            FinanceDimension6 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 7)
                            FinanceDimension7 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 8)
                            FinanceDimension8 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 9)
                            FinanceDimension9 = AcctUnit
                        else
                        if (LocalMapAcctUnit = 10)
                            FinanceDimension10 = AcctUnit


                        if (MigrationCompanyMappingRel.RenameAcctCat.Yes)
                            if (LocalMapAcctCat = 3)
                                FinanceDimension3 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 4)
                                FinanceDimension4 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 5)
                                FinanceDimension5 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 6)
                                FinanceDimension6 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 7)
                                FinanceDimension7 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 8)
                                FinanceDimension8 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 9)
                                FinanceDimension9 = AccountCategoryMappingRel.XiAcctCat
                            if (LocalMapAcctCat = 10)
                                FinanceDimension10 = AccountCategoryMappingRel.XiAcctCat
                        else
                            if (LocalMapAcctCat = 3)
                                FinanceDimension3 = AcctCategory
                            if (LocalMapAcctCat = 4)
                                FinanceDimension4 = AcctCategory
                            if (LocalMapAcctCat = 5)
                                FinanceDimension5 = AcctCategory
                            if (LocalMapAcctCat = 6)
                                FinanceDimension6 = AcctCategory
                            if (LocalMapAcctCat = 7)
                                FinanceDimension7 = AcctCategory
                            if (LocalMapAcctCat = 8)
                                FinanceDimension8 = AcctCategory
                            if (LocalMapAcctCat = 9)
                                FinanceDimension9 = AcctCategory
                            if (LocalMapAcctCat = 10)
                                FinanceDimension10 = AcctCategory
