ProjectEmployee is a BusinessClass
    owned by Projects
    prefix is prjem
    representative text is "EffortCertification"
	representative image is ResourcePicture.File
		missing image is random background
			foreground text is "<Employee.Name.Initials>"

	Ontology
		symbolic key is ProjectEmployee
 
    Patterns
		implements InlineUserFields
			size is 3000
 
	Persistent Fields
		ProjectLaborSchedule
		Certifier						is an Employee
		BurdenCode						is a ProjectBurdenCode
		BurdenCodeBlock					is a FinanceCodeBlockNoProject 
			default label is "FringeBurdenFinanceStructure"
		Active
		Approver						is an Employee
		RedistributionApprover			is an Employee
		SalaryEncumbrance				is Boolean
		EncumbranceBasis				is Numeric size 1
        	States
        		PlannedPercent	value is 0
        		ActualPercent	value is 1
		FringeEncumbrance				is Boolean		
		EncumbranceSalaryAmount			is a CurrencyAmount
			precision is Currency.NumberOfDecimals		
		Currency						is a FromCurrency	
			default label is "SalaryEncumbranceCurrency"
		SalaryEncumbranceCodeBlock		is a FinanceCodeBlockFullNoProject
			default label is "SalaryEncumbranceFinanceStructure"
		FringeEncumbranceCodeBlock		is a FinanceCodeBlockFullNoProject
			default label is "FringeEncumbranceFinanceStructure"
		ResourcePicture					is an ImageAttachment
		ExcludeFromLabor				is Boolean
			default label is "ExcludeFromLaborDistribution"
		FinanceCodeBlock				is a FinanceCodeBlockNoProject
			default label is "LaborDistributionFinanceStructure"
		ExcludeFromCertification		is Boolean
			default label is "ExcludeFromEffortCertification"
		ProjectEffortSchedule
		LaborFTE						is Decimal size 4.3
		LaborDistributionEmailDate		is TimeStamp		

	Context Fields
		ProjectSchedulePeriod
		ProjectEffortPeriod

	Local Fields
		LocalPeriod		is like ProjectSchedulePeriod
		LocalAsOfDate	is Date
		LocalEffectiveDate	is Date
	

	Transient Fields
		StatusField is AlphaUpper size 1
			default label is "Status"
			derive value from DerivedStatus
			States
				Certified		 value is "C"
				NeedsCertification		 value is "U"


	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforProjectEmployee"

		ContextMessageText is a MessageField
			restricted
			"Employee<Employee>"

		CreateMessage is a LabelField
			restricted
			"Create<actor.context.FinanceEnterpriseGroup.ProjectLabel>Employee"
		ProjectEmployeeMessage is a LabelField
			restricted
			"<Employee.Name.PreferredFirstAndLastName>'s<actor.context.FinanceEnterpriseGroup.ProjectLabel>EmployeeProfile"

		DerivedFormTitle is a DerivedField
			type is MessageField
			if (ProjectEmployeeExists)
				return ProjectEmployeeMessage
			else
				return CreateMessage

		ActiveMessage is a MessageField
			restricted
			"ACTIVE"

		InactiveMessage is a MessageField
			restricted
			"INACTIVE"

		DerivedStatusDisplay is a DerivedField
			type is Alpha size 8
			default label is "Status"
			if (Active)
				return ActiveMessage
			else
				return InactiveMessage

		DerivedEmployeeActiveStatusDisplay is a DerivedField
			type is Alpha size 20
			default label is "Status"
			if (Employee.IsActive)
				return EmployeeActiveMessage
			else
				return EmployeeInactiveMessage

		EmployeeActiveMessage is a MessageField
			restricted
			"EmployeeIsActive"

		EmployeeInactiveMessage is a MessageField
			restricted
			"EmployeeIsInactive"

		PreviousPeriod is a DerivedField
			type is like ProjectSchedulePeriod
			restricted
			initialize LocalPeriod
			for each ProjectLaborSchedule.ProjectSchedulePeriod set
				if (current corporate date within each.DateRange)
					return LocalPeriod
				else
					LocalPeriod = each.ProjectSchedulePeriod
			return 1
				
		PreviousPeriodBeginDate is a DerivedField
			type is Date
			return PreviousPeriodRel.DateRange.Begin

		PreviousPeriodEndDate is a DerivedField
			type is Date
			return PreviousPeriodRel.DateRange.End

		PreviousEffortPeriod is a DerivedField
			type is like ProjectEffortPeriod
			restricted
			initialize LocalPeriod
			for each ProjectEffortSchedule.ProjectEffortPeriod set
				if (current corporate date within each.DateRange)
					return LocalPeriod
				else
					LocalPeriod = each.ProjectEffortPeriod
			return 1

		PreviousEffortPeriodEndDate is a DerivedField
			type is Date
			return PreviousEffortPeriodRel.DateRange.End

		AsOfDatePeriod is a DerivedField
			type is like ProjectSchedulePeriod
			restricted
			initialize LocalPeriod
			for each ProjectLaborSchedule.ProjectSchedulePeriod set
				if (LocalAsOfDate within each.DateRange)
					return LocalPeriod
				else
					LocalPeriod = each.ProjectSchedulePeriod
			return 1

		NameSearch is a DerivedField
			type is Alpha up to 230
			return Employee.PresentationNameSnapshot

		TotalActualPercent is a DerivedField  
			type is Percent size 6.3
			return sum ProjectAssignmentLaborForPeriodRel.ActualPercent
		TotalEffortPercent is a DerivedField
			type is Percent size 6.3
			return sum ProjectAssignmentEffortForPeriodRel.EffortPercent
		TotalAverageActualPercent is a DerivedField
			type is Percent size 6.3
			TotalAverageActualPercent = (sum ProjectAssignmentEffortForPeriodRel.AverageActualPercent)
			round TotalAverageActualPercent to nearest .001
			return TotalAverageActualPercent
		TotalAveragePlannedPercent is a DerivedField
			type is Percent size 6.3
			TotalAveragePlannedPercent = (sum ProjectAssignmentEffortForPeriodRel.AveragePlannedPercent)
			round TotalAveragePlannedPercent to nearest .001
			return TotalAveragePlannedPercent

		CertifiedMF is a MessageField
			restricted
			"CERTIFIED"

		NeedsCertificationMF is a MessageField
			restricted
			"NEEDS_CERTIFICATION"

		StatusMessage is a ConditionalField
			type is Alpha size 25
			if (Certified)
				CertifiedMF
			else
				NeedsCertificationMF
				
		EnteredMF is a MessageField
			restricted
			"ENTERED"

		ApprovedMF is a MessageField
			restricted
			"APPROVED"

		ProcessedMF is a MessageField
			restricted
			"PROCESSED"

		SubmittedForApprovalMF is a MessageField
			restricted
			"SUBMITTED_FOR_APPROVAL"
		

		MobileCertifiedMF is a MessageField
			restricted
			"Certified"
			
		UnCertifiedMF is a MessageField
			restricted
			"Uncertified"
			
		AdjustmentPendingMF is a MessageField
			restricted
			"ADJUSTMENT_PENDING"		
			
		MobileStatusMessage is a ConditionalField
			type is Alpha size 25
			if (Certified)
				MobileCertifiedMF
			else
				UnCertifiedMF
		
		DerivedStatus is a DerivedField
			type is AlphaUpper size 1
			if(Certified)
				return "C"
			else
				return "U"
		
		DerivedDateRangeBegin is a DerivedField
			type is Alpha size 50
			restricted
			DerivedDateRangeBegin = ProjectEffortPeriod.DateRange.Begin
			return DerivedDateRangeBegin[5:6] + "/" + DerivedDateRangeBegin[7:8] + "/" + DerivedDateRangeBegin[1:4]
		
		DerivedDateRangeEnd is a DerivedField
			type is Alpha size 50
			restricted
			DerivedDateRangeEnd = ProjectEffortPeriod.DateRange.End
			return DerivedDateRangeEnd[5:6] + "/" + DerivedDateRangeEnd[7:8] + "/" + DerivedDateRangeEnd[1:4]
			

		LaborStatusMessage is a ConditionalField  
			type is Alpha size 25
			if (ProjectAssignmentLaborForPeriodRel.Status.Entered)
				EnteredMF
			else
			if (ProjectAssignmentLaborForPeriodRel.Status.Approved)
				ApprovedMF
			else
			if (ProjectAssignmentLaborForPeriodRel.Status.Processed)
				ProcessedMF
			else
			if (ProjectAssignmentLaborForPeriodRel.Status.Certified)
				CertifiedMF
			else
			if (ProjectAssignmentLaborForPeriodRel.Status.PendingApproval)
				SubmittedForApprovalMF
			else
				blank
				
		AdjustmentPendingMessage is a ConditionalField 
			type is Alpha size 25
			if (ProcessedAdjustedLaborForPeriodRel.Adjusted)
				AdjustmentPendingMF
			else
				blank	
				
		DerivedLaborFTE is a DerivedField
			type is Decimal size 4.3
			if (CurrentLaborFTERel exists)
				return last CurrentLaborFTERel.LaborFTE
			else
				return LaborFTE

	Conditions
		ProcessedLaborExists  
			restricted
			when (ProcessedLaborRel exists)

		OpenPeriodWithLaborExists
			restricted
			when (!ExcludeFromLabor
			and   OpenPeriodWithLaborRel exists)

		ProjectAssignmentEffortExists
			restricted
			when (!ExcludeFromCertification
			and   ProjectAssignmentEffortRel exists)

		CertificationRequired
			when (any ProjectAssignmentEffortRel.Project.CertificationRequired)
			
		IncludeLaborOrCertification
			when (!ExcludeFromLabor
			or    !ExcludeFromCertification)
			
		OpenLaborExists  
			restricted
			when (!ExcludeFromLabor
			and   OpenLaborRel exists)

		ProjectAssignmentEffortForPeriodExists
			restricted
			when (ProjectAssignmentEffortForPeriodRel exists)
			
		VariancePeriodExists
			restricted
			when (TotalAverageActualPercent !=  TotalEffortPercent
			and   TotalEffortPercent entered)

		OpenLaborForPeriodExists  
			restricted
			when (OpenLaborForPeriodRel exists)

		OpenLaborForPeriodEmailExists 
			restricted
			when (OpenLaborForPeriodEmailRel exists)			

		ProcessedLaborForPeriodExists  
			restricted
			when (ProcessedLaborForPeriodRel exists)

		CertifiedLaborForPeriodExists  
			restricted
			when (CertifiedLaborForPeriodRel exists)

		ProcessedOrCertifiedLaborForPeriodExists  
			restricted
			when (ProcessedOrCertifiedLaborForPeriodRel exists)

		ProcessedLaborAdjustedForPeriodExists  
			restricted
			when (ProcessedAdjustedLaborForPeriodRel exists)			

		ApprovedLaborExists 
			restricted
			when (ApprovedLaborRel exists)			

		ActualLessThan100  
			restricted
			when (TotalActualPercent < 1
			and   TotalActualPercent > 0)

		EffortLessThan100
			restricted
			when (TotalEffortPercent < 1
			and   TotalEffortPercent > 0)
			
		ProjectAssignmentsExist
			restricted
			when (ProjectAssignmentRel exists
			and   !ExcludeFromLabor)
		
		IsValidForEncumbrance
			restricted	
			when (GeneralLedgerSystemCodeRel exists
			and   GeneralLedgerSystemCodeRel.EncumbranceOption.Track)
			
		Certified
			when (CertifiedEffortForPeriodRel exists)

		LaborRedistributed  
			when (any ProcessedLaborForPeriodRel.HasBeenRedistributed)
		
		FullyDistributed 
			when (ActualUndistributedForPeriodRel not exists)
			
		ProjectEmployeeExists
			when (Employee exists)
			
		IsBlueStatusTag  
			restricted
			when (ProjectAssignmentLaborForPeriodRel.Status.Entered)
			
		IsGreenStatusTag  
			restricted
			when (ProjectAssignmentLaborForPeriodRel.Status.Approved or ProjectAssignmentLaborForPeriodRel.Status.Processed or ProjectAssignmentLaborForPeriodRel.Status.Certified)

		IsYellowStatusTag  
			restricted
			when (ProjectAssignmentLaborForPeriodRel.Status.PendingApproval)

		AdjustmentPendingMFTrue  
			restricted
			when (AdjustmentPendingMF entered)	

		EmployeeIsInactive
			restricted	
			when (!Employee.IsActive)

		IsApproverOrRedistributionApprover
			restricted
			when (ProjectApproverOrRedistributionApproverRel exists)

	Relations
		ProjectAssignmentRel
			one-to-many relation to ProjectAssignment
			Field Mapping uses ByEmployee
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
				
		ActualOrApprovedLaborRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses symbolic key
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.ProjectLaborSchedule	= ProjectLaborSchedule
			Instance Selection
    			where ((related.Status.Entered
    			and     related.TotalActualPercent entered)
    			or      related.Status.Approved)

		ActualOrApprovedLaborAsOfDateRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses symbolic key
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.ProjectLaborSchedule	= ProjectLaborSchedule
				related.ProjectSchedulePeriod	>= AsOfDatePeriod
			Instance Selection
    			where ((related.Status.Entered
    			and     related.TotalActualPercent entered)
    			or      related.Status.Approved)

		ProjectAssignmentLaborForPeriodRel  
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.Employee				= Employee
				related.ProjectLaborSchedule	= ProjectLaborSchedule
				related.LaborPeriod.Period		= ProjectSchedulePeriod

		ProcessedLaborForPeriodRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (related.Status.Processed)

		CertifiedLaborForPeriodRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (related.Status.Certified)

		ProcessedOrCertifiedLaborForPeriodRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (related.Status.Processed
				or     related.Status.Certified)

		ProcessedAdjustedLaborForPeriodRel  
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
		        where (related.Status.Processed
		        and    related.Adjusted
		        and    !related.AdjustedUpdate)

		ActualUndistributedForPeriodRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (related.Status.Processed
				and    related.ActualPercent entered
				and    related.TotalTransactionAmount not entered)
				
		CertifiedEffortForPeriodRel
			one-to-many relation using ProjectAssignmentEffortForPeriodRel
			Instance Selection
				where (related.Certified)
				
		VariancePeriodRel
			one-to-many relation using ProjectAssignmentEffortForPeriodRel
			Instance Selection
				where (related.VarianceExists)

		OpenLaborForPeriodRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (!related.Status.Certified
				and    !related.Status.Processed)

		OpenLaborForPeriodEmailRel 
			one-to-many relation using ProjectAssignmentLaborForPeriodRel
			Instance Selection
				where (!related.Status.Certified
				and    !related.Status.Processed
				and    !related.Status.Approved)

		OpenPeriodWithLaborRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses symbolic key
				related.HROrganization	= HROrganization
				related.Employee		= Employee
			Instance Selection
				where (related.OpenPeriod)

		ProcessedLaborRel  
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
			Instance Selection
				where (related.Status.Processed
				and    related.OpenPeriod)

		ProjectAssignmentEffortRel
			one-to-many relation to ProjectAssignmentEffort
			Field Mapping uses ByEmployeeAndPeriod
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
		
		OpenLaborRel  
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
			Instance Selection
				where (!related.Status.Processed
				and    !related.Status.Certified)

		AllLaborScheduleRel 
			one-to-many relation to ProjectLaborSchedule
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
			Instance Selection
				where (related.Active)
				
		AllOpenProjectSchedulePeriodRel 
			one-to-many relation to ProjectSchedulePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.ProjectLaborSchedule	= AllLaborScheduleRel.ProjectLaborSchedule
			Instance Selection
				where (related.Status.Open)
				
		AllOpenLaborPeriodRel 
			one-to-many relation using AllOpenProjectSchedulePeriodRel			
			Instance Selection
				where (related.OpenAssignmentLaborExists)
						
		AllProcessedLaborPeriodRel 
			one-to-many relation using AllOpenProjectSchedulePeriodRel			
			Instance Selection
				where (related.ProcessedProjectAssignmentLaborExists)

		AllCertifiedLaborPeriodRel 
			one-to-many relation using AllOpenProjectSchedulePeriodRel			
			Instance Selection
				where (related.CertifiedProjectAssignmentLaborExists)

		UnfinishedLaborRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses symbolic key
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.ProjectLaborSchedule	= ProjectLaborSchedule
			Instance Selection
				where (related.Status.Approved
				or     related.Status.Processed
				or     related.Status.PendingApproval)
						
		EncumberedLaborRel
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
			Instance Selection
				where (related.EncumbrancesExist)
										
		ApprovedLaborRel 
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
				related.Employee			   = Employee
			Instance Selection
				where (related.Status.Approved)

		PreviousPeriodRel
			one-to-one relation to ProjectSchedulePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.ProjectLaborSchedule	= ProjectLaborSchedule
				related.ProjectSchedulePeriod	= PreviousPeriod

		PreviousEffortPeriodRel
			one-to-one relation to ProjectEffortPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.ProjectEffortSchedule	= ProjectEffortSchedule
				related.ProjectEffortPeriod		= PreviousEffortPeriod

		PeriodsWithProjectsRel 
			one-to-many relation to ProjectSchedulePeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup

			Instance Selection
				where (related.Status.Open
				and    related.OpenAssignmentLaborExists)
				
		CurrentProjectAssignmentLaborRel
			one-to-many relation to ProjectAssignmentLabor
			Field Mapping uses ByEmployeeAndSchedulePeriod
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.Employee				= Employee
			Instance Selection
				where (related.IsCurrentPeriod)

		ProjectAssignmentEffortForPeriodRel
			one-to-many relation to ProjectAssignmentEffort
			Field Mapping uses ByEmployeeAndPeriod
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.Employee				= Employee
    			related.ProjectEffortSchedule	= ProjectLaborSchedule.ProjectEffortSchedule
				related.ProjectEffortPeriod		= ProjectEffortPeriod

		OpenProjectEmployeeEffortPeriodRel is a ProjectEmployeeEffortPeriod set
			Instance Selection
				where (related.OpenPeriod)


		MobileProjectEffortPeriodRel is a ProjectEffortPeriod set

		
		ProjectEffortPeriodRel
			one-to-many relation to ProjectEffortPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
				related.ProjectEffortSchedule	= ProjectLaborSchedule.ProjectEffortSchedule
			Instance Selection
				where (ProjectSchedulePeriod.DateRange.End within related.DateRange)

		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = HROrganization.FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode = "GM"
				
    	EmployeeRel
    		one-to-one relation to Employee
    		Field Mapping uses symbolic key
    			related.HROrganization	= HROrganization
    			related.Employee		= Employee
    			
		ProjectAssignmentLaborPendingCostTransRel
		    one-to-many relation to ProjectAssignmentLabor
		    Field Mapping uses ByEmployeeAndSchedulePeriod
		        related.FinanceEnterpriseGroup = HROrganization.FinanceEnterpriseGroup
		        related.Employee               = Employee
		    Instance Selection
		        where (related.Status.Processed
		        and    related.Adjusted
		        and    !related.AdjustedUpdate)
    			
		ProjectApproverOrRedistributionApproverRel
		    one-to-many relation to ProjectEmployee
		    Field Mapping uses symbolic key
		        related.HROrganization = HROrganization
		    Instance Selection
		        where (related.Approver = Employee
		        or     related.RedistributionApprover = Employee)

		CurrentLaborFTERel
			one-to-many relation to ProjectEmployeeLaborFTE
			Field Mapping uses part of key
    			related.HROrganization	= HROrganization
    			related.Employee		= Employee
				related.EffectiveDate	<= current corporate date

		ProjectEmployeeLaborFTERel
			one-to-one relation to ProjectEmployeeLaborFTE
			Field Mapping uses part of key
    			related.HROrganization	= HROrganization
    			related.Employee		= Employee
				related.EffectiveDate	= LocalEffectiveDate

		OpenProjectEmployeeLaborPeriodRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses ByEmployeeAndDistributed
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.Distributed				= 0
			Instance Selection
				where (related.OpenPeriod)

		ProcessedProjectEmployeeLaborPeriodRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses ByEmployeeAndStatus
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.Status					= 3
			Instance Selection
				where (related.OpenPeriod)

		CertifiedProjectEmployeeLaborPeriodRel
			one-to-many relation to ProjectEmployeeLaborPeriod
			Field Mapping uses ByEmployeeAndStatus
				related.HROrganization			= HROrganization
				related.Employee				= Employee
				related.Status					= 4
			Instance Selection
				where (related.OpenPeriod)

	Sets
		ByProjectLaborSchedule
			Sort Order
				HROrganization
				ProjectLaborSchedule
				Employee

		ByProjectEffortSchedule
			Sort Order
				HROrganization
				ProjectEffortSchedule
				Employee

		ByEffortScheduleAndCertifier
			Sort Order
				HROrganization
				ProjectEffortSchedule
				Certifier
				Employee
				
	Attach Rules

	Field Rules
		ProjectLaborSchedule
			if (ProjectAssignmentRel exists)
				cannot be changed
					"PleaseUse_Change_Labor_ScheduleActionToChangeLaborSchedule"
			if (!ExcludeFromLabor)
				required
			if (ActualOrApprovedLaborRel exists)
				cannot be changed
					"CannotChangeLaborSchedule;ActualOrApprovedLaborDistributionRecordsExist"
			if (ExcludeFromLabor)
				cannot be changed
					"EmployeeExcludedFromLaborDistribution;_CannotChangeLaborSchedule"
			constraint (ProjectLaborSchedule.ProjectEffortSchedule entered)
				"EffortScheduleRequiredForLaborSchedule<ProjectLaborSchedule>"

		Approver
			constraint (Approver != Employee)
				"LaborDistributionApproverCannotBeTheSameAsEmployee"
				
		RedistributionApprover				
			constraint (RedistributionApprover != Employee)
				"RedistributionApproverCannotBeTheSameAsEmployee"

		SalaryEncumbrance	
			if (SalaryEncumbrance)
				constraint (IsValidForEncumbrance)
					"GlobalLedgerSystemCode_\G\MIsNotSetUpForEncumbranceProcessing"
							
		EncumbranceSalaryAmount	
			if (SalaryEncumbrance)
				required
					"EncumbranceSalaryAmountIsRequiredForSalaryEncumbrance"
			else
				initialize EncumbranceSalaryAmount
				cannot be entered
					"EncumbranceSalaryAmountIsOnlyValidForSalaryEncumbrance"
						
		Currency	
			if (SalaryEncumbrance)
				default to actor.context.FinanceEnterpriseGroup.EnterpriseProjectStructure.Currency						
				required
					"EncumbranceSalaryCurrencyCodeIsRequiredForSalaryEncumbrance"
			else
				initialize Currency
				cannot be entered
					"EncumbranceSalaryCurrencyCodeIsOnlyValidForSalaryEncumbrance"	
							
		EncumbranceBasis	
			if (SalaryEncumbrance)
				if (EncumberedLaborRel exists)
					cannot be changed
						"CannotChangeEncumbranceBasis;_EncumberedLaborDistributionRecordsExist"					

		SalaryEncumbranceCodeBlock
			if (SalaryEncumbrance)
				default to actor.context.FinanceEnterpriseGroup.EnterpriseProjectStructure.SalaryEncumbranceCodeBlock			
				required
					"SalaryEncumbranceFinanceStructureIsRequiredForSalaryEncumbrance"
			else
				initialize SalaryEncumbranceCodeBlock		
				cannot be entered
					"SalaryEncumbranceFinanceStructureIsOnlyValidForSalaryEncumbrance"	
					
		FringeEncumbranceCodeBlock
			if (FringeEncumbrance)
				default to actor.context.FinanceEnterpriseGroup.EnterpriseProjectStructure.FringeEncumbranceCodeBlock						
				required
					"FringeEncumbranceFinanceStructureIsRequiredForFringeEncumbrance"
			else
				initialize FringeEncumbranceCodeBlock
				cannot be entered
					"FringeEncumbranceFinanceStructureIsOnlyValidForFringeEncumbrance"

		FringeEncumbrance
			if (!SalaryEncumbrance)
				cannot be entered
					"FringeEncumbranceIsOnlyValidForSalaryEncumbrance"	
				
		ExcludeFromLabor
			constraint (UnfinishedLaborRel not exists)
				"CannotExcludeFromLabor;_NonFinalizedLaborDistributionRecordsExist"
			constraint (EncumberedLaborRel not exists)
				"CannotExcludeFromLabor;_EncumberedLaborDistributionRecordsExist"

		ProjectEffortSchedule
			ProjectEffortSchedule = ProjectLaborSchedule.ProjectEffortSchedule
			
		LaborFTE
			default to 1
			constraint (LaborFTE <= 1)
				"F\T\ECannotExceed1"
			
	Actions
		Create is a Create Action
			Action Rules
				constraint (Employee.IsActive)
					"CannotCreate;_EmployeeIsNotActive"

			Field Rules
				Active
					default to true
				ResourcePicture = EmployeeRel.ResourcePicture					
					
			Exit Rules
				if (!ExcludeFromLabor
				and LaborFTE entered)
					invoke UpdateFTE
						invoked.PrmLaborFTE = LaborFTE
						invoked.PrmEffectiveDate = current corporate date
					
		Update is an Update Action
			Action Rules
				if (ProjectAssignment set exists)
					if (BurdenCode changed
					or  BurdenCodeBlock changed)
						confirmation required
							"FringeBurdenChangeAffectsFutureAssignmentsOnly;_Run_\Update_\Assignment_\FringeActionToChangeExistingAssignments._\Continue?"
					if (FinanceCodeBlock changed)
						confirmation required
							"LaborDistributionFinanceStructureChangeAffectsFutureAssignmentsOnly;_Run_\Update_\Assignment_\LaborActionToChangeExistingAssignments._\Continue?"
					if (ExcludeFromLabor changed
					and !ExcludeFromLabor)
						confirmation required
							"EmployeeWasPreviouslyExcludedFromLaborDistribution;_LaborDistributionsWillNowBeCreated._Continue?"
			Exit Rules
				if ((ProjectLaborSchedule changed
				or   ExcludeFromLabor changed)
				and  !ExcludeFromLabor)
					invoke ChangeLaborSchedule ProjectAssignmentRel
						
		Delete is a Delete Action
			Action Rules
				constraint (ProjectAssignmentRel not exists)
					"CannotDelete;_ProjectAssignmentRecordsExist"

		UpdateEmployeeImage is an Instance Action
			Action Rules
				ResourcePicture = EmployeeRel.ResourcePicture  

		UpdateEmployeeImages is a Set Action
			Parameters
				Organization is an HROrganization
			Parameter Rules
				Organization
					required
			Instance Selection
				where (HROrganization = Organization)
			Action Rules
				Instance Rules
					ResourcePicture = EmployeeRel.ResourcePicture

		UpdateFTE is an Instance Action
			valid when (!ExcludeFromLabor)
			Parameters
				PrmLaborFTE			is Decimal size 4.3
					default label is "LaborF\T\E"
				PrmEffectiveDate	is Date
					default label is "EffectiveDate"
			Parameter Rules
				PrmLaborFTE
					initial value is DerivedLaborFTE
					required
				PrmEffectiveDate
					initial value is current corporate date
					required
			Action Rules
				LocalEffectiveDate = PrmEffectiveDate
				if (ProjectEmployeeLaborFTERel exists)
					invoke Update ProjectEmployeeLaborFTERel
						invoked.LaborFTE = PrmLaborFTE
				else
					invoke Create ProjectEmployeeLaborFTERel
						invoked.LaborFTE = PrmLaborFTE
				
		UpdateAssignmentFringe is an Instance Action
			valid when (!ExcludeFromLabor)
			Parameters
				OverrideCurrentValues	is Boolean
			Action Rules
				invoke UpdateFringeBurdens ProjectAssignment set
					invoked.OverrideCurrentValues = OverrideCurrentValues
					
		UpdateAssignmentLabor is an Instance Action
			valid when (!ExcludeFromLabor)
			Parameters
				OverrideCurrentValues	is Boolean
			Action Rules
				invoke UpdateFinanceCodeBlocks ProjectAssignment set
					invoked.OverrideCurrentValues = OverrideCurrentValues
							
		ChangeEffortSchedule is an Instance Action
			restricted
			Parameters
				NewEffortSchedule	is like ProjectEffortSchedule
			Action Rules
				ProjectEffortSchedule	= NewEffortSchedule
				
		ChangeLaborSchedule is an Instance Action
			valid when (!ExcludeFromLabor)
			Parameters
				NewLaborSchedule	is a ProjectLaborSchedule
				AsOfDate			is Date
					default label is "Beginning"
			Parameter Rules
				NewLaborSchedule
					required
					constraint (NewLaborSchedule != ProjectLaborSchedule)
						"PleaseEnterNewLaborSchedule"
					constraint (NewLaborSchedule.ProjectEffortSchedule entered)
						"EffortScheduleRequiredForLaborSchedule<NewLaborSchedule>"
					LocalAsOfDate = AsOfDate
					constraint (ActualOrApprovedLaborAsOfDateRel not exists)
						"CannotChangeSchedule;ActualOrApprovedLaborDistributionRecordsExist"
				AsOfDate
					initial value is current corporate date
					default to current corporate date
					constraint (AsOfDate <= current corporate date)
						"NewLaborScheduleBeginningDateCannotBeInTheFuture"
			Action Rules
				ProjectLaborSchedule  = NewLaborSchedule
				ProjectEffortSchedule = NewLaborSchedule.ProjectEffortSchedule				
			Exit Rules
				invoke ChangeLaborSchedule ProjectAssignmentRel
					invoked.AsOfDate = AsOfDate
					
		EndAllAssignments is an Instance Action
			Parameters
				AssignmentEndDate	is Date
			Parameter Rules
				AssignmentEndDate
					required
					initial value is current corporate date
			Action Rules
				for each ProjectAssignment set
					if (each.ProjectDateRange.EndDate >= AssignmentEndDate)
						invoke Update each
							invoked.ProjectDateRange.EndDate = AssignmentEndDate					
			
		UnapproveLabor is an Instance Action
			valid when (!ExcludeFromLabor)
        	Parameters
        		PrmProjectLaborSchedule		is a ProjectLaborSchedule
        		PrmProjectSchedulePeriod	is a ProjectSchedulePeriod
        			default label is "FromPeriod"
        		PrmThroughPeriod			is a ProjectSchedulePeriod
        			default label is "ThroughPeriod"
        	Parameter Rules
        		PrmProjectLaborSchedule
        			initial value is ProjectLaborSchedule
				PrmProjectSchedulePeriod
					required
				PrmThroughPeriod
					default to PrmProjectSchedulePeriod
					if (PrmThroughPeriod entered)
						constraint (PrmThroughPeriod >= PrmProjectSchedulePeriod)
							"ThroughPeriodMustBeAfterFromPeriod"
			Action Rules
				invoke UnapproveAllLabor ProjectEmployeeLaborPeriod
					invoked.PrmFinanceEnterpriseGroup	= HROrganization.FinanceEnterpriseGroup
					invoked.PrmProjectLaborSchedule		= ProjectLaborSchedule
					invoked.PrmProjectSchedulePeriod	= PrmProjectSchedulePeriod
					invoked.PrmThroughPeriod			= PrmThroughPeriod
					invoked.PrmEmployee					= Employee

		SetEmailDate is an Instance Action
			restricted
			Parameters
				PrmEmailDate is TimeStamp
			Action Rules
				LaborDistributionEmailDate = PrmEmailDate
				
		ConvertLaborFTE is a Set Action
			restricted
			Instance Selection
				where (ProjectEmployeeLaborFTE set not exists)
			Action Rules
				Instance Rules
					for each audit log records
						if (each.LaborFTE entered
						and each.LaborFTE != old each.LaborFTE)
							LocalEffectiveDate = each.effective date
							if (ProjectEmployeeLaborFTERel not exists)
								invoke Create ProjectEmployeeLaborFTERel
									invoked.LaborFTE = each.LaborFTE
					if (LaborFTE not entered)
						LocalEffectiveDate = create date
						if (ProjectEmployeeLaborFTERel not exists)
							invoke Create ProjectEmployeeLaborFTERel
								invoked.LaborFTE = 1

