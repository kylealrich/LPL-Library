DocumentInterfaceAddOnCharge is a BusinessClass
	owned by ma
	prefix is DIAOC

	Ontology
		symbolic key is DocumentInterfaceAddOnCharge

    Patterns
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated

	Persistent Fields
		PurchaseOrderLine		is like PurchaseOrderLine
        AddOnCharge				is like AddOnCharge
        AddOnChargeAmount       is an InternationalAmount
        Item					is like Item
        Quantity
        UnitCost                is an InternationalCost
		PurchaseOrder			is like PurchaseOrder
		InterfacedPurchaseOrder		  		is like PurchaseOrderImport
		InterfacedPOCode			  		is like POCode

	Local Fields
		ErrorMessage			is Alpha 150
		LocalPurchaseOrder		is like PurchaseOrder	
	Derived Fields

		AddOnChargeDoesNotExistMsg is a MessageField
			restricted
			"AddOnChargeDoesNotExist"
		
		PurchaseOrderNotFoundMsg is a MessageField
			restricted
			"PurchaseOrderNotFound"

		PurchaseOrderLineNotFoundMsg is a MessageField
			restricted
			"PurchaseOrderLineNotFoundOnPurchaseOrder"

		NoLinesFoundForSpread is a MessageField
			restricted
			"UnableToApplySpreadAddOnCharge;NoLinesFoundOnInvoice"

		DerivedPurchaseOrder is a DerivedField
			type is like PurchaseOrder

			if  (PurchaseOrder entered)
				return PurchaseOrder
			else
			if (InterfacedPurchaseOrder entered)
				return InterfacedPurchaseOrderRel.PurchaseOrder
			else
				return DocumentInterfaceInvoice.DerivedPurchaseOrder	
	 		

	Conditions
		MiscellaneousAddOnCharge
			when (PurchaseOrderLine not entered)
			
		LineAddOnCharge
			when (PurchaseOrderLine entered)

        ShowPurchaseOrderLineColumn
        	when (DocumentInterfaceInvoice.PurchaseOrder entered
        	or    DocumentInterfaceInvoice.InterfacedPurchaseOrder entered)
			
		RecordInError
			when (DocumentInterfaceErrorRel exists)

	Relations
		MatchCompanyRel
			one-to-one relation to MatchCompany
			Field Mapping uses symbolic key
				related.Company							= DocumentInterfaceInvoice.Company
				
		PayablesCompanyRel
			one-to-one relation to PayablesCompany
			Field Mapping uses symbolic key
				related.Company							= DocumentInterfaceInvoice.Company

		DocumentInterfaceErrorRel
			one-to-many relation to DocumentInterfaceError
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.DocumentInterfaceInvoice		= DocumentInterfaceInvoice
				related.DocumentInterfaceDetail			= blank
				related.DocumentInterfaceDistribution	= blank
				related.DocumentInterfaceAddOnCharge	= DocumentInterfaceAddOnCharge
				
		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= LocalPurchaseOrder

		InterfacedPurchaseOrderRel 
			one-to-many relation to InterfacedPurchaseOrder
            Field Mapping uses ByImport
                related.Company                     = DocumentInterfaceInvoice.Company
                related.PurchaseOrderImport 		= InterfacedPurchaseOrder
                related.POCode						= InterfacedPOCode

		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.PurchaseOrder			= LocalPurchaseOrder
				related.PurchaseOrderLine		= PurchaseOrderLine









		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup			= PayablesCompanyRel.VendorGroup
				related.Contract				= DocumentInterfaceInvoice.ServiceContract








		AddOnChargeRel
			one-to-one relation to AddOnCharge
			Field Mapping uses symbolic key
				related.Company					= DocumentInterfaceInvoice.Company
				related.AddOnCharge				= AddOnCharge

	Sets






				
	Actions
		Create is a Create Action

			Entrance Rules
				LocalPurchaseOrder = DerivedPurchaseOrder
			
		Update is an Update Action
			Entrance Rules
				LocalPurchaseOrder = DerivedPurchaseOrder

		FastUpdate is an Update Action
			restricted
			bypass field rules

		Delete is a Delete Action
			Entrance Rules
				invoke Delete DocumentInterfaceErrorRel

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
					
		InterfaceAddOnCharges is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
				PrmCompany					is like PayablesCompany
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add            value is "A"
		                MatchSubmitOrRelease value is "R"
				PrmProcessType				is AlphaUpper size 1
		            States
		                MatchInvoices    	value is "M"
		                ExpenseInvoices		value is "E"
		                Both				value is "B"
				PrmVendorClass				is like VendorClass		                
				PrmDocumentInterfaceInvoice is like DocumentInterfaceInvoice
				PrmInterfaceRun				is a PayablesInvoiceInterfaceResult
				
				ErrorOccurred					is Boolean

			Local Fields
				LocalInterfacedAddOnCostsCount			is Numeric 10
			
			Sort Order
				FinanceEnterpriseGroup
				DocumentInterfaceInvoice
				DocumentInterfaceAddOnCharge
				
			Instance Selection
				where (DocumentInterfaceInvoice.InterfaceRunID = PrmInterfaceRun
				and    DocumentInterfaceInvoice.SystemAssignedInvoice entered)

			Rule Blocks
				SetError
					invoke Create DocumentInterfaceError
						invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
						invoked.DocumentInterfaceInvoice 		= DocumentInterfaceInvoice
						invoked.DocumentInterfaceAddOnCharge 	= DocumentInterfaceAddOnCharge
						invoked.ErrorMessage					= ErrorMessage
					invoke Update PrmInterfaceRun
						invoked.Status 							= 2

			Action Rules
				Empty Set Rules
						
					invoke InterfaceComments DocumentInterfaceComment	
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmCompany					= PrmCompany
						invoked.InvoiceProcess				= InvoiceProcess
						invoked.PrmProcessType				= PrmProcessType
						invoked.PrmVendorClass				= PrmVendorClass
						invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
						invoked.PrmInterfaceRun				= PrmInterfaceRun

				Set Rules
						
					Exit Rules
						invoke Update PrmInterfaceRun
							invoked.InterfacedAddOnCostsCount		= LocalInterfacedAddOnCostsCount

						invoke InterfaceComments DocumentInterfaceComment	
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmCompany					= PrmCompany
							invoked.InvoiceProcess				= InvoiceProcess
							invoked.PrmProcessType				= PrmProcessType
							invoked.PrmVendorClass				= PrmVendorClass
							invoked.PrmDocumentInterfaceInvoice = PrmDocumentInterfaceInvoice
							invoked.PrmInterfaceRun				= PrmInterfaceRun

				DocumentInterfaceInvoice Set Rules
				
					Entrance Rules
						ErrorOccurred = false
						if (DocumentInterfaceInvoice.RecordInError)
							ErrorOccurred = true
						

				Instance Rules
					LocalInterfacedAddOnCostsCount				+= 1
					LocalPurchaseOrder 							= DerivedPurchaseOrder

					if  (!ErrorOccurred)
						initialize ErrorOccurred

						if  (!AddOnChargeRel exists)
							ErrorOccurred			= true
							ErrorMessage			= AddOnChargeDoesNotExistMsg
							include SetError
						else
						if (LocalPurchaseOrder entered
						and !PurchaseOrderRel exists
						and !InterfacedPurchaseOrderRel exists)
							ErrorOccurred					= true
							ErrorMessage					= PurchaseOrderNotFoundMsg
							include SetError
						else
						if (LocalPurchaseOrder entered
						and  PurchaseOrderLine entered
						and !PurchaseOrderLineRel exists)
							ErrorOccurred					= true
							ErrorMessage					= PurchaseOrderLineNotFoundMsg
							include SetError
						else	
						if (!AddOnChargeRel.SpreadMethod.NoSpread 
						and DocumentInterfaceInvoice.PayablesInvoiceRel.PayablesInvoiceDetailRel not exists)
							ErrorOccurred					= true
							ErrorMessage					= NoLinesFoundForSpread
							include SetError
						else	
							if (LineAddOnCharge)				
								invoke Create PayablesInvoiceAddOnCharge
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
	
									invoked.Company						= DocumentInterfaceInvoice.Company 
									invoked.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
									invoked.PurchaseOrder				= LocalPurchaseOrder
									invoked.PurchaseOrderLine			= PurchaseOrderLine
									invoked.Contract					= DocumentInterfaceInvoice.ServiceContract
									invoked.Item						= Item
	
									invoked.AddOnCharge					= AddOnCharge
									invoked.EnteredUnitCost				= UnitCost
									invoked.EnteredQuantity				= Quantity
									invoked.TotalAddOnChargeAmount		= AddOnChargeAmount
									invoked.BypassInvoiceErrorChecking	= true
									invoked.BypassAllowUpdate           = true
									invoked.CreateFromBatchSwitch		= true
							else
							if  (AddOnChargeRel.SpreadMethod.NoSpread)

								invoke CreateMiscellaneousAddOnCosts PayablesInvoiceAddOnCharge
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message

									invoked.Company						= DocumentInterfaceInvoice.Company 
									invoked.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
									invoked.PurchaseOrder				= LocalPurchaseOrder
									invoked.Contract					= DocumentInterfaceInvoice.ServiceContract
	
									invoked.AddOnCharge					= AddOnCharge
									invoked.EnteredUnitCost				= AddOnChargeAmount
									invoked.EnteredQuantity				= 1
									invoked.AddOnChargeAmount			= AddOnChargeAmount
									invoked.TotalDistributionAmount		= AddOnChargeAmount
									invoked.BypassInvoiceErrorChecking	= true
									invoked.BypassAllowUpdate           = true
									invoked.CreateFromBatchSwitch		= true
							else

								invoke Create PayablesInvoiceSpreadAddOnCharge
									resume on error
										ErrorOccurred		= true
										ErrorMessage		= error message
									invoked.Company						= DocumentInterfaceInvoice.Company 
									invoked.PayablesInvoice				= DocumentInterfaceInvoice.SystemAssignedInvoice
									invoked.PurchaseOrder				= LocalPurchaseOrder
									invoked.Vendor						= DocumentInterfaceInvoice.Vendor 
									invoked.AddOnCharge					= AddOnCharge
									invoked.SpreadAmount				= AddOnChargeAmount
									invoked.BypassAllowUpdate           = true
		
							if (ErrorOccurred)
								include SetError
							else
								invoke FastDelete
	
