OutboundCXMLInvoiceStatus is a BusinessClass
	owned by cxml

	prefix is OCIS

	Ontology
		symbolic key is OutboundCXMLInvoiceStatus

	Patterns
		implements CRUD

	Persistent Fields
		RunGroup
		ProcessStatus			is AlphaUpper size 10
			default label is "Status"
			States
				New				value is "0"
				Error			value is "1"
				Success			value is "2"
				Warning			value is "3"
		RequestXML				is XMLDocument
			default label is "Data"
		LastUpdatedTimeStamp	is TimeStamp
			default label is "LastUpdated"
		StatusMessage			is Text
			default label is "Message"
		DocumentNumber			is Alpha size 22

	Local Fields


		LocalFromNetworkID			is Alpha size 40
		LocalSystemID				is Alpha size 40
		LocalSenderNetworkID		is Alpha size 40
		LocalToNetworkID			is Alpha size 40
		LocalDeploymentMode			is Alpha size 10
		LocalSharedSecret			is Alpha size 100
		LocalVersionNumber			is Alpha size 15


		LocalVendorName				is Alpha size 100
		LocalVendorID				is Alpha size 30
		LocalStreet					is Alpha size 200
		LocalCity					is Alpha size 60
		LocalState					is Alpha size 2
		LocalPostalCode				is Alpha size 10
		LocalCountry				is Alpha size 30
		LocalCountryCode			is Alpha size 5
		LocalEmail					is Alpha size 50


		LocalWSIEndpoint			is Alpha size 1000
		

		LocalActor					is an Actor

	Derived Fields
		OutboundInvoiceStatusXML is a DerivedField
			type is XMLDocument
			restricted
			OutboundInvoiceStatusXML = template.AribaInvoiceStatusXML_ST document for this instance

		OutboundLightInvoiceStatusXML is a DerivedField
			type is XMLDocument
			restricted
			OutboundLightInvoiceStatusXML = template.AribaLightInvoiceStatusXML_ST document for this instance

		PayloadID is a StringField
			type is Alpha size 122
			restricted
			LastUpdatedTimeStamp
			"-"
			DocumentNumber
			"@"
			RunGroup

		CXMLTimeStamp is a ComputeField
			type is Alpha 30
			restricted
			(create stamp.timestamp using "%1$tY-%1$tm-%1$tdT%1$tH:%1$tM:%1$tS%1$tz")

		CXMLInvoiceDate is a DerivedField
			type is Alpha size 10
			restricted
			return InvoiceDate using "%1$tY-%1$tm-%1$td"	

	Transient Fields


		InvoiceID				is AlphaUpper 22
		InvoiceDate				is an ExchangeDate
		InvoiceStatus			is Alpha size 20
		InvoiceComments			is Text


		VendorGroup				is AlphaUpper 4
		Vendor					is Numeric 9
		PurchaseFromLocation	is AlphaUpper 15

	Field Rules
		LastUpdatedTimeStamp
            default to current timestamp
            initial value is current timestamp
		ProcessStatus
			initial value is ProcessStatus.New

	Sets
		ByLastUpdated
			duplicates
			Sort Order
				LastUpdatedTimeStamp
				RunGroup
				ProcessStatus

	Conditions
		UsesPurchaseFromLocation
			when (PurchaseFromLocation entered)
		LightLocation
			when (PurchaseFromLocationRel.AribaEnabled.Light)
		LightVendor
			when (PurchasingVendorRel.AribaEnabled.Light)
		LightAccount
			when (LightLocation or LightVendor)

		NotifyError
		    when ((CXMLConfigurationRel.NotificationLevel.Error
		    or CXMLConfigurationRel.NotificationLevel.Both)
		    and ProcessStatus.Error or ProcessStatus.Warning)
		NotifySuccess
		    when ((CXMLConfigurationRel.NotificationLevel.Success
		    or CXMLConfigurationRel.NotificationLevel.Both)
		    and ProcessStatus.Success)
		EmailNotification
		    when (CXMLConfigurationRel.NotificationType.Email
		    or CXMLConfigurationRel.NotificationType.Both)
		UserNotification
		    when (CXMLConfigurationRel.NotificationType.User
		    or CXMLConfigurationRel.NotificationType.Both)

	Relations

		PurchaseOrderDispatchVendorRel
            one-to-one relation to PurchaseOrderDispatchVendor
            Field Mapping uses Set1
                related.Vendor                          = Vendor
                related.PurchaseFromLocation            = PurchaseFromLocation

		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup 					= VendorGroup
				related.Vendor							= Vendor

		VendorLocationRel
			one-to-one relation to VendorLocation
				Field Mapping uses symbolic key
					related.VendorGroup					= VendorGroup
					related.Vendor						= Vendor
					related.VendorLocation				= PurchaseFromLocation

		PurchaseFromLocationRel
			one-to-one relation to PurchaseFromLocation
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor
				related.PurchaseFromLocation			= PurchaseFromLocation

		PurchasingVendorRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup						= VendorGroup
				related.Vendor							= Vendor

		CXMLConfigurationRel
			one-to-many relation to CXMLConfiguration
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.Default)


	Rule Blocks

		CXMLInvoiceStatusSub
			if (InvoiceStatus = "1")
				InvoiceStatus = "reconciled"
			else
			if (InvoiceStatus = "0"
			or InvoiceStatus = "3"
			or InvoiceStatus = "2"
			or InvoiceStatus = "5")
				InvoiceStatus = "processing"
			else
			if (InvoiceStatus = "4")
				InvoiceStatus = "rejected"
			else
			if (InvoiceStatus = "6")
				InvoiceStatus = "canceled"
			else
			if (InvoiceStatus = "8")
				InvoiceStatus = "paid"

		DispatchVendorSet
			LocalFromNetworkID			= PurchaseOrderDispatchVendorRel.FromNetworkID
			LocalSystemID				= PurchaseOrderDispatchVendorRel.SystemID
			LocalToNetworkID			= PurchaseOrderDispatchVendorRel.ToNetworkID
			LocalSenderNetworkID		= PurchaseOrderDispatchVendorRel.SenderNetworkID
			LocalDeploymentMode			= PurchaseOrderDispatchVendorRel.DeploymentMode
			LocalWSIEndpoint			= PurchaseOrderDispatchVendorRel.PostToServer
			LocalSharedSecret			= PurchaseOrderDispatchVendorRel.SharedSecret
			LocalVersionNumber			= PurchaseOrderDispatchVendorRel.CxmlVersion
			RunGroup					= LocalToNetworkID

		LightLocationSet
			if (UsesPurchaseFromLocation and LightLocation)

				LocalVendorID		= Vendor + "-" + PurchaseFromLocation

				LocalVendorName		= VendorLocationRel.ContactName

				LocalStreet			= (VendorLocationRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
									+ " "
									+ VendorLocationRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine2
									+ " "
									+ VendorLocationRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine3
									+ " "
									+ VendorLocationRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine4)

				LocalCity			= VendorLocationRel.CurrentAddressRel.PostalAddress.Municipality

				LocalState			= VendorLocationRel.CurrentAddressRel.PostalAddress.StateProvince

				LocalPostalCode		= VendorLocationRel.CurrentAddressRel.PostalAddress.PostalCode

				LocalCountry		= VendorLocationRel.CurrentAddressRel.PostalAddress.Country.Name

				LocalCountryCode	= VendorLocationRel.CurrentAddressRel.PostalAddress.Country.IsoCountryCode

				LocalEmail			= VendorLocationRel.EmailAddress

		LightVendorSet
			if (LightVendor)

				LocalVendorID		= Vendor

				LocalVendorName		= VendorRel.VendorName

				LocalStreet			= (VendorRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine1
									+ " "
									+ VendorRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine2
									+ " "
									+ VendorRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine3
									+ " "
									+ VendorRel.CurrentAddressRel.PostalAddress.DeliveryAddress.AddressLine4)

				LocalCity			= VendorRel.CurrentAddressRel.PostalAddress.Municipality

				LocalState			= VendorRel.CurrentAddressRel.PostalAddress.StateProvince

				LocalPostalCode		= VendorRel.CurrentAddressRel.PostalAddress.PostalCode

				LocalCountry		= VendorRel.CurrentAddressRel.PostalAddress.Country.Name

				LocalCountryCode	= VendorRel.CurrentAddressRel.PostalAddress.Country.IsoCountryCode

				LocalEmail			= VendorRel.EmailAddress
				
		SendNotification
		    if (EmailNotification)
		        send email
		            to CXMLConfigurationRel.ToNotificationEmail
		            from CXMLConfigurationRel.FromNotificationEmail
		            subject "CXML_Invoice_Status_<ProcessStatus>_-_Invoice:<InvoiceID>_|_Vendor:<VendorRel.VendorName>"
		            Contents
		                "Invoice:<InvoiceID>"
		                "InvoiceDate:<InvoiceDate>"
		                "InvoiceStatus:<InvoiceStatus>"
		                "InvoiceComments:<InvoiceComments>"
		                "Vendor:<VendorRel.VendorName>"
		                "Status:<ProcessStatus>_-_<StatusMessage>"
		    if (UserNotification and ProcessStatus.Success)
		        LocalActor = actor
		        send notification
		            to LocalActor
		            description is "CXML_Invoice_Status_<ProcessStatus>_-_Invoice:<InvoiceID>_|_Vendor:<VendorRel.VendorName>"
		            priority is low
		            detail is "Invoice:<InvoiceID>_|_InvoiceDate:<InvoiceDate>_|_InvoiceStatus:<InvoiceStatus>_|_InvoiceComments:<InvoiceComments>_|_Vendor:<VendorRel.VendorName>_|_Status:<ProcessStatus>_-_<StatusMessage>"
		    if (UserNotification and (ProcessStatus.Error or ProcessStatus.Warning))
		        LocalActor = actor
		        send notification
		            to LocalActor
		            description is "CXML_Invoice_Status_<ProcessStatus>_-_Invoice:<InvoiceID>_|_Vendor:<VendorRel.VendorName>"
		            priority is high
		            detail is "Invoice:<InvoiceID>_|_InvoiceDate:<InvoiceDate>_|_InvoiceStatus:<InvoiceStatus>_|_InvoiceComments:<InvoiceComments>_|_Vendor:<VendorRel.VendorName>_|_Status:<ProcessStatus>_-_<StatusMessage>"				            
	

	Actions
		Create is a Create Action
			Exit Rules
				LastUpdatedTimeStamp = current timestamp

		Delete is a Delete Action
		Update is an Update Action
			Action Rules
                LastUpdatedTimeStamp = current timestamp

		CreateCXMLInvoiceStatus is a Create Action
			restricted
			Exit Rules
				invoke InvoiceStatusUpdateXML

		InvoiceStatusUpdateXML is an Instance Action
			restricted
			Action Rules
				include CXMLInvoiceStatusSub
				if (PurchaseOrderDispatchVendorRel exists and VendorLocationRel exists)
					include DispatchVendorSet
					include LightLocationSet
				else
					PurchaseFromLocation = ""
					if (PurchaseOrderDispatchVendorRel exists and VendorRel exists)
						include DispatchVendorSet
						include LightVendorSet
					else
						ProcessStatus				= ProcessStatus.Error
						StatusMessage				= "Cannot populate Credentials for Vendor Group: " + VendorGroup + ", Vendor: " + Vendor + " and Purchase From Location: " + PurchaseFromLocation
						RunGroup					= "CONNECTION ERROR"
						if (NotifyError)
							include SendNotification
				RequestXML						= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
				RequestXML						+= "<!DOCTYPE cXML SYSTEM \"http://xml.cxml.org/schemas/cXML/1.2.021/cXML.dtd\">"
				if (LightAccount)
					RequestXML						+= OutboundLightInvoiceStatusXML
				else
					RequestXML						+= OutboundInvoiceStatusXML

				if (!ProcessStatus.Error)
					invoke OutboundCreate CXMLRouter
						invoked.Data					= RequestXML
						invoked.Status					= "Invoice Status Update Request: " + InvoiceID
						invoked.RunGroup				= RunGroup
						invoked.WSIEndpoint			 	= LocalWSIEndpoint
						invoked.SharedSecret			= LocalSharedSecret

						ProcessStatus				= ProcessStatus.Success
						StatusMessage				= "Outbound Invoice Status Successfully Created"
						if (NotifySuccess)
							include SendNotification















































