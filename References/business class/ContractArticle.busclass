ContractArticle is a BusinessClass
	owned by po
	prefix is CTAR

	Patterns
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

	Ontology
		symbolic key is ContractArticle

	Persistent Fields
		Title					is a Description
		HeaderText				is Alpha 100
		DisplayOrder
		Article
		ContractStatus			is Numeric size 2
			States
				Draft		value is 1
				Released	value is 2
				Active		value is 3
				Inactive	value is 4
				Addendum	value is 5
		Active					is Boolean
		TermDisplayChange		is Boolean
		Modified				is Boolean
		SSArticle				is Boolean
		OkToDeleteWhenAddendum	is Boolean
		TermChanged				is Boolean
		Deleted					is Boolean
		Status					is Numeric 2
			States
				NeedsApproval	value is 1
				PendingApproval	value is 2
				Approved		value is 3
		CreationApproved		is Boolean
		LastTermAndConditionDisplayOrder is Numeric size 8
			disable Auditing

	Transient Fields
		NewDisplayOrder	is a DisplayOrder
		FromSourcing	is Boolean

	Local Fields
		LocalDisplayOrder	is a DisplayOrder
		FirstLoop			is Boolean
		LocalUserTemplate	is like UserTemplate

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "ContractArticle"
			ContractArticle " - " Title

		TermsNeedApproval is a DerivedField
			type is Boolean
			if (TermsNeedingApprovalExist)
				return true
			else
				return false

		RebateFrequencyVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebateFrequencyVariable += " , "
				RebateFrequencyVariable += each.Frequency

		RebatePercentVariable is a DerivedField
			type is AlphaUpper 60
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebatePercentVariable += " , "
				RebatePercentVariable += each.RebatePercent

		RebateVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.ContractRebateRel
				if (FirstLoop)
					FirstLoop = false
				else
					RebateVariable += ", "
				RebateVariable += each.ContractRebateType

		SourcingEventBuyerVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerVariable += ", "
				SourcingEventBuyerVariable += each.SourcingEventRel.Buyer.Name

		SourcingEventBuyerPhoneVariable is a DerivedField
			type is AlphaUpper size 100
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerPhoneVariable += ", "
				SourcingEventBuyerPhoneVariable += each.SourcingEventRel.Buyer.EmployeeWorkTelephone

		SourcingEventBuyerEmailVariable is a DerivedField 
			type is EmailAddressField with multiple addresses
			holds pii
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventBuyerEmailVariable += ", "
				SourcingEventBuyerEmailVariable += each.SourcingEventRel.Buyer.EmailAddress

		SourcingEventDescriptionVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventDescriptionVariable += ", "
				SourcingEventDescriptionVariable += each.RelatedContractDescription

		SourcingEventNameVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventNameVariable += ", "
				SourcingEventNameVariable += each.SourcingEventRel.Name

		SourcingEventNumberVariable is a DerivedField
			type is AlphaUpper size 30
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventNumberVariable += ", "
				SourcingEventNumberVariable += each.RelatedContractID

		SourcingEventReferenceVariable is a DerivedField
			type is AlphaUpper size 50
			restricted
			FirstLoop = true
			for each Contract.EventRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					SourcingEventReferenceVariable += ", "
				SourcingEventReferenceVariable += each.SourcingEventRel.EventReference

		ProjectNameVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.ProjectRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					ProjectNameVariable += ", "
				ProjectNameVariable += each.RelatedContractDescription

		ProjectNumberVariable is a DerivedField
			type is AlphaUpper size 250
			restricted
			FirstLoop = true
			for each Contract.ProjectRelatedContractRel
				if (FirstLoop)
					FirstLoop = false
				else
					ProjectNumberVariable += ", "
				ProjectNumberVariable += each.RelatedContractID

		NeedsApprovalMessage is a MessageField
			restricted
			"NeedsApproval"

		PendingApprovalMessage is a MessageField
			restricted
			"PendingApproval"

		NotModifiedMessage is a MessageField
			restricted
			"NotModified"

		ApprovedMessage is a MessageField
			restricted
			"Approved"

		RejectedMessage is a MessageField
			restricted
			"Rejected"

		WithdrawnMessage is a MessageField
			restricted
			"Withdrawn"

		DisapprovedMessage is a MessageField
			restricted
			"Disapproved"

		DerivedApprovalRequestStatus is a DerivedField
			type is MessageField
			if (DraftArticleUpdateExists)
				return NeedsApprovalMessage
			else
			if (PendingArticleUpdateExists)
				return PendingApprovalMessage
			else
			if (CompletedArticleUpdateExists)
				return DerivedLastUpdateActionTaken
			else
			if (!CreationApproved)
				return NeedsApprovalMessage
			else
			if (!TermHasBeenUpdated)
				return NotModifiedMessage
			else
				return ""

		DerivedLastUpdateActionTaken is a DerivedField
			type is MessageField
			restricted
			if (last CompletedArticleUpdateRel.ActionTaken.Approved)
				return ApprovedMessage
			else
			if (last CompletedArticleUpdateRel.ActionTaken.Rejected)
				return RejectedMessage
			else
			if (last CompletedArticleUpdateRel.ActionTaken.Withdrawn)
				return WithdrawnMessage
			else
			if (last CompletedArticleUpdateRel.ActionTaken.Disapproved)
				return DisapprovedMessage
			else
				return ""

		NumberOfUpdates is a ComputeField
			type is Numeric 3
			restricted
			(instance count of ContractArticleUpdateRel)

		DerivedCompareCurrentPreviousHeaderText is a NativeField
			type is RichText

		DerivedPreviousTitle is a DerivedField
			type is like Description
			restricted
			if (PendingRequestToDelete)
				return DerivedLastTitleBeforeDeletionRequest
			else
				return last CompletedAndApprovedArticleUpdateRel.RevisedTitle

		DerivedPreviousHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (PendingRequestToDelete)
				return DerivedLastHeaderTextBeforeDeletionRequest
			else
				return last CompletedAndApprovedArticleUpdateRel.RevisedHeaderText


		DerivedLastHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (PendingRequestToDelete)
				return ""
			else
				return last ContractArticleUpdateRel.RevisedHeaderText

		DerivedLastHeaderTextBeforeDeletionRequest is a DerivedField
			type is Alpha 100
			restricted
			if (PendingArticleUpdatesNoDeletionsRel exists)
				return last PendingArticleUpdatesNoDeletionsRel.RevisedHeaderText
			else
				return HeaderText

		DerivedLastTitleBeforeDeletionRequest is a DerivedField
			type is like Description
			restricted
			if (PendingArticleUpdatesNoDeletionsRel exists)
				return last PendingArticleUpdatesNoDeletionsRel.RevisedTitle
			else
				return Title

		DerivedRequireUpdateApproval is a DerivedField
			type is Boolean
			restricted
			return Contract.RequireTermAndConditionApproval

		DerivedCurrentRequestedTitle is a DerivedField
			type is like Description
			restricted
			if (PendingArticleTextUpdateRel exists)
				return last PendingArticleTextUpdateRel.RevisedTitle
			else
			if (DraftArticleTextUpdateRel exists)
				return last DraftArticleTextUpdateRel.RevisedTitle
			else
				return Title

		DerivedCurrentRequestedHeaderText is a DerivedField
			type is Alpha 100
			restricted
			if (PendingArticleTextUpdateRel exists)
				return last PendingArticleTextUpdateRel.RevisedHeaderText
			else
			if (DraftArticleTextUpdateRel exists)
				return last DraftArticleTextUpdateRel.RevisedHeaderText
			else
				return HeaderText

		DerivedApprovalStage is a DerivedField
			type is Numeric 2
			restricted
			if (Contract.ContractStatus.Released)
				return 1	
			else
			if (Contract.ContractStatus.Negotiation)
				return 2	
			else
			if (Contract.ContractStatus.FinalApproval)
				return 3	
			else
			if (Contract.ContractStatus.Draft)
				if (Contract.DerivedRequireContractApproval)
					return 1	
				else
				if (Contract.DerivedRequireContractNegotiation)
					return 2	
				else
				if (Contract.DerivedRequireFinalApproval)
					return 3	
				else
					return ""
			if (Contract.ContractStatus.Addendum)
				if (Contract.DerivedRequireAddendumApproval)
					return 1	
				else
				if (Contract.DerivedRequireAddendumNegotiation)
					return 2	
				else
				if (Contract.DerivedRequireFinalAddendumApproval)
					return 3	
				else
					return ""
			else
				return ""

		DerivedPreviousVersionArticleHeaderText is a DerivedField
			type is Alpha 100
			restricted
			return last PreviousContractTermVersionArticleRel.HeaderText
		
		DerivedInvalidIDMAttachmentWarningMessage is a MessageField 
			"SomeAttachmentsAreNotOf_(.\docx)FileType."

        MissingTemplateMsg is a MessageField
            "TheTemplateCouldNotBeFound"
            
        ContractTermsAndConditionsTerms is a DerivedField
            type is XMLDocument
            default label is untranslatable
            restricted
            for each ContractTermsByDisplayRel
                ContractTermsAndConditionsTerms += each.TermsTemplate
            
        ArticleTemplate is a DerivedField
            type is XMLDocument
            default label is untranslatable
            restricted
            LocalUserTemplate = "ContractTermsAndConditionsArticles_ST"
            if (UserTemplateRel exists)
                ArticleTemplate = template.ContractTermsAndConditionsArticles_ST document for this instance
            else
                ArticleTemplate = MissingTemplateMsg 
            return ArticleTemplate
            
        DerivedHeaderText is a DerivedField
            type is Alpha size up to 100
            if (HeaderText entered)
                return HeaderText
            else
                return Title

	Conditions
		ContractArticleExists
			restricted
			when (ContractArticle exists)
		ArticleAddendum
			restricted
			when (Contract.ContractStatus.Addendum)
		CanCreateArticleAddendum
			restricted
			when (ArticleAddendum
			and  !Contract.ContractRedlineApprovals)
		RedlineAddendum
			restricted
			when (ArticleAddendum
			and   Contract.ContractRedlineApprovals)
		EligibleForSourcing
			restricted
			when (Contract.SourcingEligible)
		ArticleIsActive
			restricted
			when (!Article entered
			or	  Article.Active)
		IsActive
			restricted
			when (Active
			and	  ArticleIsActive)
		TermsNeedingApprovalExist
			restricted
			when (TermAndConditionNeedsApprovalRel exists)
		TermsUpdatedInThisVersion
			restricted
			when (TermsUpdatedInThisVersionRel exists)
		PendingTermAndConditionUpdateExists
			restricted
			when (PendingTermUpdatesRel exists)
		PendingTermAndConditionInternalUpdateExists
			restricted
			when (PendingTermInternalUpdatesRel exists)
		DraftTermAndConditionUpdateExists
			restricted
			when (DraftTermUpdatesRel exists)
		DraftTermAndConditionInternalUpdateExists
			restricted
			when (DraftTermInternalUpdatesRel exists)
		ShowApprovalColumn
			restricted
			when (Contract.RequireTermAndConditionApproval
			or	  Contract.UseSupplierPortalForNegotiation)
		DeletedTermsExist
			restricted
			when (DeletedContractTermAndConditionRel exists)
		AdhocArticle
			restricted
			when (!Article exists)
		DraftArticleUpdateExists
			restricted
			when (DraftArticleUpdateRel exists)
		PendingArticleUpdateExists
			restricted
			when (PendingArticleUpdateRel exists)
		DraftArticleInternalUpdateExists
			restricted
			when (DraftArticleInternalUpdateRel exists)
		PendingArticleInternalUpdateExists
			restricted
			when (PendingArticleInternalUpdateRel exists)
		CompletedArticleUpdateExists
			restricted
			when (CompletedArticleUpdateRel exists)
		TermHasBeenUpdated
			restricted
			when (NumberOfUpdates > 1)
		ActiveUpdatesToTextExist
			restricted
			when (DraftArticleTextUpdateExists
			or	  PendingArticleTextUpdateExists
			or	  PendingRequestToDelete)
		DraftArticleTextUpdateExists
			restricted
			when (DraftArticleTextUpdateRel exists)
		PendingArticleTextUpdateExists
			restricted
			when (PendingArticleTextUpdateRel exists)
		DisplayChanges
			restricted
			when (DraftArticleUpdateRel exists
			or    PendingArticleUpdateRel exists)
		DisplayDraftUpdatedMessage
			restricted
			when (CreationApproved
			and	  DraftArticleUpdateRel exists)
		DisplayPendingUpdateMessage
			restricted
			when (CreationApproved
			and	  PendingArticleUpdateRel exists)
		PendingRequestToDelete
			restricted
			when (PendingArticleDeleteRel exists)
		DisplayButtons
			restricted
			when   (CreationApproved
			and	    AllowUpdate
			and     Contract.NotContractTemplate
			and	  ((ContractStatus.Draft
			and     Contract.DerivedRequireTermAndConditionApproval)
			or     (AddendumState
			and     Contract.DerivedRequireAddendumTermAndConditionApproval)))
		AddendumState
			restricted
			when (ContractStatus.Addendum)
		FromContractUpdateArticleActionValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  CreationApproved
			and	  DerivedRequireUpdateApproval
			and	  !PendingArticleUpdateExists
			and	  AllowUpdate)
		InApprovalProcess
			restricted
			when (Contract.ContractStatus.Released
			or	  Contract.ContractStatus.Negotiation
			or	  Contract.ContractStatus.FinalApproval)
		UpdateRequiresApproval
			restricted
			when (InApprovalProcess
			or	  (Contract.ContractStatus.Draft
			and	  Contract.DerivedRequireTermAndConditionApproval)
			or	  (Contract.ContractStatus.Addendum
			and	  Contract.RequireTermAndConditionApproval))	
		AllowUpdate
			restricted
			when (Article.AllowModification
			or	  AdhocArticle)
		NoModification
			restricted
			when (Article exists
			and  !Article.AllowModification)
		BuyerAddendumDeleteTermButtonValid
			restricted
			when (AddendumState
			and	  !PendingRequestToDelete
			and	  !OkToDeleteWhenAddendum
			and   InternalApprovalOrPortalNegotiation)
		SupplierAddendumDeleteTermButtonValid
			restricted
			when (AddendumState
			and	  !PendingRequestToDelete
			and	  !OkToDeleteWhenAddendum
			and   Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation)
		AllowUpdateWithoutApproval
			restricted
			when (((Status.NeedsApproval
			and	    !CreationApproved)
			or	   (CreationApproved
			and	    !DerivedRequireUpdateApproval))
			and     AllowUpdate)
		BuyerEditArticleActionValid
			restricted
			when ((Contract.NegotiationStatus.NeedsInternalApproval
			or    AddendumState)
			and   AllowUpdate
			and   !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier
			and   (Contract.RedlineApprovals
			or     Contract.ContractRedlineApprovals))
		OkToDeleteWhenAddendumNotRedline
			restricted
			when (OkToDeleteWhenAddendum
			and  !Contract.ContractRedlineApprovals)
		ApproverEditArticleActionValid
			restricted
			when (ContractStatus.Released
			and   AllowUpdate
			and   !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier)
		SupplierEditArticleActionValid
			restricted
			when (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  Contract.UseSupplierPortalForNegotiation
			and	  AllowUpdate
			and	  !PendingRequestToDelete
			and   Contract.SupplierSameAsContractSupplier)
		BuyerDeleteArticleActionValid
			restricted
			when  (!PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier
			and   (Contract.NegotiationStatus.NeedsInternalApproval
			or     AddendumState)
			and   (Contract.RedlineApprovals
			or     Contract.ContractRedlineApprovals))
		SupplierDeleteArticleActionValid
			restricted
			when    (Contract.NegotiationStatus.NeedsSupplierApproval
			and	    !PendingRequestToDelete
			and      Contract.SupplierSameAsContractSupplier)
		BuyerRestoreArticleActionValid
			restricted
			when (PendingRequestToDelete
			and  !Contract.SupplierSameAsContractSupplier)
		SupplierRestoreArticleActionValid
			restricted
			when  (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  PendingRequestToDelete
			and   Contract.SupplierSameAsContractSupplier)
		BuyerAddTermActionValid
			restricted
			when ((AddendumState
			or     Contract.NegotiationStatus.NeedsInternalApproval)
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier
			and   (Contract.RedlineApprovals
			or     Contract.ContractRedlineApprovals))
		ApproverAddTermActionValid
			restricted
			when (ContractStatus.Released
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier)
		SupplierAddTermActionValid
			restricted
			when (Contract.NegotiationStatus.NeedsSupplierApproval
			and	  !PendingRequestToDelete
			and   Contract.SupplierSameAsContractSupplier)
		BuyerAddTermFromLibraryValid
			restricted
			when ((AddendumState
			or     Contract.NegotiationStatus.NeedsInternalApproval)
			and	  !AdhocArticle
			and	  !PendingRequestToDelete
			and   !Contract.SupplierSameAsContractSupplier)
		InternalApprovalOrPortalNegotiation
			restricted
			when (Contract.RequireTermAndConditionApproval
			or	  Contract.UseSupplierPortalForNegotiation)
		ArticlesUpdatedInThisVersion
			restricted
			when (PendingUpdateInCurrentVersionRel exists)
		RestoreDeletedArticleValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  Deleted = true)
		RequestToCreateArticlesInCurrentVersion
			restricted
			when (ArticleCreateRequestsInCurrentVersionRel exists)
		WithdrawProposedUpdatesValid
			restricted
			when ((Contract.ContractStatus.Draft
			or	   Contract.ContractStatus.Addendum)
			and	  ActiveApprovalRequestExists)
		ActiveApprovalRequestExists
			restricted
			when (DraftArticleUpdateExists
			or	  PendingArticleUpdateExists)
		HasTerms
			restricted
			when (TermsRel exists)
		HasTermsWithInvalidAttachment
			restricted
			when (NonDeletedContractTermsWithNonDocxAttachmentRel exists)
		InvalidIDMAttachment 
			restricted
			when (HasTermsWithInvalidAttachment
			and   Contract.IsUsingIDMTemplate)

	Relations
		ContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle

		Level1ContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByTermLevel
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
				related.ContractArticle	= ContractArticle
				related.TermLevel		= 1

		NonDeletedContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (!related.Deleted)

		DeletedContractTermsByDisplayRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.Deleted)

		RepositoryTermsByContractArticleRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByContractArticle
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle

		TermsByContractArticleRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.SSTerm)

		ActiveContractSSTermAndConditionRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.SSTerm
				and	   related.TermAndConditionIsActive)

		ActiveContractTermAndConditionRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.TermAndConditionIsActive
				and	   !related.Deleted)

		ArticleContractRel	
			one-to-many relation to ContractArticle
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.Contract      = Contract



		HelperListRel is a TermAndCondition set	
			Instance Selection
				where (related.ProcurementGroup = ContractGroup
				and    related.Article          = Article)

   		TermsRel
   			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle

   		ContractTermsAttachmentByDisplayRel
			one-to-many relation to ContractTermAndConditionAttachment
			delete cascades
			Field Mapping uses ByDisplayOrder
				related.ContractGroup  			 = ContractGroup
				related.Contract        		 = Contract
				related.ContractArticle 		 = ContractArticle

		TermAndConditionNeedsApprovalRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayString
   				related.ContractGroup  		= ContractGroup
   				related.Contract			= Contract
				related.ContractArticle		= ContractArticle
			Instance Selection
				where (related.ActiveApprovalRequestExists)

		TermsUpdatedInThisVersionRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayString
   				related.ContractGroup  		= ContractGroup
   				related.Contract			= Contract
				related.ContractArticle		= ContractArticle
			Instance Selection
				where (related.PendingUpdateInCurrentVersionExists)

		PendingUpdateInCurrentVersionRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				and	   related.TermNegotiationVersion > Contract.TermNegotiationVersion)

   		DistributorContractRel
   			one-to-one relation to Contract
   			Field Mapping uses ByDistributor
   				related.ContractGroup = ContractGroup
   				related.Contract      = Contract
   				related.ManufacturerOrDistributor.DistributorContract = true

   		ManufacturerContractRel
   			one-to-one relation to Contract
   			Field Mapping uses ByManufacturer
   				related.ContractGroup = ContractGroup
   				related.Contract      = Contract
   				related.ManufacturerOrDistributor.ManufacturerContract = true

		PendingTermUpdatesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.PendingTermAndConditionUpdateExists)

		PendingTermInternalUpdatesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.PendingTermAndConditionInternalUpdateExists)

		NoPendingTermUpdatesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (!related.PendingTermAndConditionUpdateExists)

		PendingTermDeletesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.PendingRequestToDelete)

		ContractTermAndConditionNoDeletesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (!related.PendingRequestToDelete)

		DraftTermUpdatesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.DraftTermAndConditionUpdateExists)

		DraftTermInternalUpdatesRel
			one-to-many relation to ContractTermAndCondition
			delete cascades
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (related.DraftTermAndConditionInternalUpdateExists)

		DeletedContractTermAndConditionRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Deleted = true)

		DraftArticleUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Draft)

		DraftArticleInternalUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Draft
				and	   !related.SupplierRequest)

		PendingArticleUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				or    (related.Status.Complete
				and    related.ActionTaken.Disapproved))

		PendingArticleInternalUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				and	   !related.SupplierRequest)

		CompletedArticleUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Complete
				and	   (related.RequestType.Update
				or		related.RequestType.Create))

		ContractArticleUpdateRel is a ContractArticleUpdate set

		DraftArticleTextUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Draft
				and	   (related.SpecificRequestType.UpdateArticle
				or		related.SpecificRequestType.DeleteArticle))

		PendingArticleTextUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				and	   (related.SpecificRequestType.UpdateArticle
				or		related.SpecificRequestType.DeleteArticle))

		PendingArticleDeleteRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				and	   related.SpecificRequestType.DeleteArticle)

		PendingArticleUpdatesNoDeletionsRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Pending
				and	   !related.RequestType.Delete)

		CompletedAndApprovedArticleUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.Status.Complete
				and	   related.ActionTaken.Approved)

		ExternalNegotiationArticleUpdateRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.ApprovalStage.SupplierNegotiation)

		PreviousContractTermVersionArticleRel
			one-to-many relation to ContractTermVersionArticle
			Field Mapping uses symbolic key
				related.ContractGroup 				= ContractGroup
				related.Contract 					= Contract
				related.ContractTermVersion 		= (Contract.TermNegotiationVersion - 1)
			Instance Selection
				where (related.ContractArticle	= ContractArticle)

		ArticleCreateRequestsInCurrentVersionRel
			one-to-many relation to ContractArticleUpdate
			Field Mapping uses symbolic key
				related.ContractGroup  				= ContractGroup
				related.Contract  					= Contract
				related.ContractArticle				= ContractArticle
			Instance Selection
				where (related.AddedDuringNegotiation
				and	   related.Status.Pending
				and	   related.SpecificRequestType.Create
				and	   related.TermNegotiationVersion > Contract.TermNegotiationVersion)
				
		NonDeletedContractTermsWithNonDocxAttachmentRel
			one-to-many relation to ContractTermAndCondition
			Field Mapping uses ByDisplayString
				related.ContractGroup   = ContractGroup
				related.Contract        = Contract
				related.ContractArticle = ContractArticle
			Instance Selection
				where (not related.Deleted
				and related.NonDocxAttachment)	

		UserTemplateRel
			one-to-one relation to UserTemplate
			Field Mapping uses symbolic key
				related.UserTemplate = LocalUserTemplate

	Sets
		ByArticle
			Sort Order
				ContractGroup
				Contract
				Article
				ContractArticle

		ByDisplayOrder
			duplicates
			Sort Order
				ContractGroup
				Contract
				DisplayOrder

	Field Rules
		Active
			default to true
		TermDisplayChange
			default to false
		Title
			required
		OkToDeleteWhenAddendum
			default to false
		Status
			initial value is 1	

	Action Exit Rules 

		if (Contract.FromMatrixApproval = true)
			invoke FastUpdate Contract 
				invoked.FromMatrixApproval = false 
	
	Actions
		AutoCreate is a Create Action
			restricted
			Action Rules
				Status = 3	
				CreationApproved = true

		SubmitDraftArticleUpdates is an Instance Action
			restricted
			Action Rules
				for each DraftArticleUpdateRel
					invoke Update each
						invoked.Status	= 2		

		CreateUnchangedApprovedArticleUpdateRecord is an Instance Action
			restricted
			Action Rules
				if (!PendingArticleUpdateRel exists)
					invoke Create ContractArticleUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.OriginalTitle				= Title
						invoked.RevisedTitle				= Title
						invoked.OriginalHeaderText			= HeaderText
						invoked.RevisedHeaderText			= HeaderText
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalStage				= DerivedApprovalStage
						invoked.Status						= 3		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						invoked.NoChangesMade				= true
						invoked.ActionTaken					= 2		

		CreateUnchangedApprovedUpdateRecord is an Instance Action
			restricted
			Action Rules
				for each NoPendingTermUpdatesRel
					invoke CreateUnchangedApprovedUpdateRecord each

		ApprovePendingTermAndConditionUpdates is an Instance Action
			restricted
			Action Rules
				for each PendingTermDeletesRel
					invoke ApproveDeleteRequest each
				for each PendingTermUpdatesRel
					invoke ApprovePendingTermAndConditionUpdates each

		ApproveAllPendingArticleUpdates is an Instance Action
			restricted
			Action Rules
				invoke ApprovePendingArticleUpdates

		DisapprovePendingArticleUpdates is an Instance Action
			restricted
			Action Rules
				if (!CreationApproved)
					Deleted	= true
				for each PendingArticleUpdateRel
					invoke Update each
						invoked.ActionTaken		= 4		
						invoked.Status			= 3		

		DisapprovePendingTermAndConditionUpdates is an Instance Action
			restricted
			Action Rules
				for each PendingTermUpdatesRel
					invoke DisapprovePendingTermAndConditionUpdates each

		RejectPendingArticleUpdates is an Instance Action
			restricted
			Action Rules
				if (!CreationApproved)
					Deleted			= true
				for each PendingArticleUpdateRel
					invoke Update each
						invoked.ActionTaken				= 1		
						invoked.Status					= 3		

		RejectPendingTermAndConditionUpdates is an Instance Action
			restricted
			Action Rules
				for each PendingTermUpdatesRel
					invoke RejectPendingTermAndConditionUpdates each

		SubmitDraftTermAndConditionUpdates is an Instance Action
			restricted
			Action Rules
				for each DraftTermUpdatesRel
					invoke SubmitDraftTermAndConditionUpdates each

		ApprovePendingArticleUpdates is an Instance Action
			restricted

			Action Rules
				if (PendingArticleUpdateRel exists)
					Title = last PendingArticleUpdateRel.RevisedTitle
					HeaderText = last PendingArticleUpdateRel.RevisedHeaderText
					if (last PendingArticleUpdateRel.RequestType.Update)
						Modified = true
				for each PendingArticleUpdateRel
					invoke Update each
						invoked.ActionTaken				= 2		
						invoked.Status					= 3		
					invoke TermChangedUpdate ContractArticle set
						invoked.TermChanged = true
				CreationApproved = true
				Status = 3	
				Deleted = false

		BuyerUpdateArticle is an Instance Action
			default label is "UpdateArticle"
			valid when (BuyerEditArticleActionValid)

			Parameters
				PrmRequestedTitle				is a Description
					default label is "RequestedTitle"
				PrmRequestedHeaderText			is Alpha 100
					default label is "RequestedHeaderText"
				PrmComment is Text
					default label is "Comment"

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText)
					LocalChangesMade = false
				else
					LocalChangesMade = true
				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractArticleUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Modified = true

		ApproverUpdateArticle is an Instance Action
			default label is "UpdateArticle"
			valid when (ApproverEditArticleActionValid)

			Parameters
				PrmRequestedTitle				is a Description
					default label is "RequestedTitle"
				PrmRequestedHeaderText			is Alpha 100
					default label is "RequestedHeaderText"
				PrmComment is Text
					default label is "Comment"

			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText)
					LocalChangesMade = false
				else
					LocalChangesMade = true
				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractArticleUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Modified = true

		SupplierUpdateArticle is an Instance Action
			default label is "UpdateArticle"
			valid when (SupplierEditArticleActionValid)

			Parameters
				PrmRequestedTitle				is a Description
					default label is "RequestedTitle"
				PrmRequestedHeaderText			is Alpha 100
					default label is "RequestedHeaderText"
				PrmComment is Text
					default label is "Comment"
					
			Parameter Rules
				PrmRequestedTitle
					required
						"NewTitleIsRequired"
					initial value is DerivedCurrentRequestedTitle
				PrmRequestedHeaderText
					initial value is DerivedCurrentRequestedHeaderText
					if (!PrmRequestedHeaderText entered)
						default to PrmRequestedTitle

			Local Fields
				LocalApprovalRequired	is Boolean
				LocalChangesMade		is Boolean

			Action Rules
				if (PrmRequestedTitle = DerivedCurrentRequestedTitle
				and PrmRequestedHeaderText = DerivedCurrentRequestedHeaderText)
					LocalChangesMade = false
				else
					LocalChangesMade = true
				if (LocalChangesMade)
					LocalApprovalRequired = UpdateRequiresApproval
					invoke Create ContractArticleUpdate
						invoked.ContractGroup				= ContractGroup
						invoked.Contract					= Contract
						invoked.ContractArticle				= ContractArticle
						invoked.OriginalTitle				= DerivedCurrentRequestedTitle
						invoked.RevisedTitle				= PrmRequestedTitle
						invoked.OriginalHeaderText			= DerivedCurrentRequestedHeaderText
						invoked.RevisedHeaderText			= PrmRequestedHeaderText
						invoked.RequestingActor				= actor
						invoked.RequestDateTime				= current timestamp
						invoked.RequestType					= 2		
						invoked.SpecificRequestType			= 2		
						invoked.ApprovalComment				= PrmComment
						invoked.ApprovalStage				= DerivedApprovalStage
						if (InApprovalProcess)
							invoked.Status				= 2		
						else
							if (LocalApprovalRequired)
								invoked.Status			= 1		
							else
								invoked.Status			= 3		
								invoked.ActionTaken		= 2		
						invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
						if (Contract.NegotiationStatus.NeedsSupplierApproval)
							invoked.SupplierRequest	= true

					if (!LocalApprovalRequired)
						Title = PrmRequestedTitle
						HeaderText = PrmRequestedHeaderText
						Modified = true

		BuyerCreateDeleteUpdateRecord is an Instance Action
			default label is "DeleteArticle"
			valid when (BuyerDeleteArticleActionValid)
			Action Rules
				if (RequestToCreateArticlesInCurrentVersion)
					if (Contract.ContractStatus.Addendum)
						invoke Addendum.Delete
					else
						invoke DeleteArticle
				else
					if (Contract.ContractStatus.Addendum
					and	!CreationApproved)
						invoke Addendum.Delete	
					else
						invoke Create ContractArticleUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.OriginalTitle				= Title
							invoked.RevisedTitle				= ""
							invoked.OriginalHeaderText			= HeaderText
							invoked.RevisedHeaderText			= ""
							invoked.RequestingActor				= actor
							invoked.RequestDateTime				= current timestamp
							invoked.RequestType					= 3		
							invoked.SpecificRequestType			= 5		
							invoked.ApprovalComment				= action comment
							invoked.ApprovalStage				= DerivedApprovalStage
							invoked.Status						= 2		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
							if (Contract.NegotiationStatus.NeedsSupplierApproval)
								invoked.SupplierRequest	= true
					for each ContractTermAndConditionNoDeletesRel
						invoke BuyerCreateDeleteUpdateRecord each

		SupplierCreateDeleteUpdateRecord is an Instance Action
			default label is "DeleteArticle"
			valid when (SupplierDeleteArticleActionValid)
			Action Rules
				if (RequestToCreateArticlesInCurrentVersion)
					if (Contract.ContractStatus.Addendum)
						invoke Addendum.Delete
					else
						invoke DeleteArticle
				else
					if (Contract.ContractStatus.Addendum
					and	!CreationApproved)
						invoke Addendum.Delete	
					else
						invoke Create ContractArticleUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.OriginalTitle				= Title
							invoked.RevisedTitle				= ""
							invoked.OriginalHeaderText			= HeaderText
							invoked.RevisedHeaderText			= ""
							invoked.RequestingActor				= actor
							invoked.RequestDateTime				= current timestamp
							invoked.RequestType					= 3		
							invoked.SpecificRequestType			= 5		
							invoked.ApprovalComment				= action comment
							invoked.ApprovalStage				= DerivedApprovalStage
							invoked.Status						= 2		
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
							if (Contract.NegotiationStatus.NeedsSupplierApproval)
								invoked.SupplierRequest	= true
					for each ContractTermAndConditionNoDeletesRel

		AddArticleDuringNegotiation is a Create Action
			restricted
			Field Rules
				SSArticle
					if (!Contract.CreateByCopy)
						default to true

				DisplayOrder
					if (!Contract.CreateByCopy
					and !Contract.UseDisplayOrder)
						autosequence using Contract.LastArticleDisplayOrder

				HeaderText
					if (!HeaderText entered)
						default to Title

			Action Rules
				LocalDisplayOrder = NewDisplayOrder

			Exit Rules
				if (LocalDisplayOrder entered)
					invoke UpdateDisplayOrderNegotiation
						invoked.ContractArticle = ContractArticle
						invoked.NewDisplayOrder = LocalDisplayOrder
				Active	= true
				invoke Create ContractArticleUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.RevisedTitle				= Title
					invoked.RevisedHeaderText			= HeaderText
					invoked.RequestingActor				= actor
					invoked.RequestType					= 1		
					invoked.SpecificRequestType			= 1		
					invoked.RequestDateTime				= current timestamp
					invoked.Status						= 2		
					invoked.AdhocArticle				= AdhocArticle
					invoked.AddedDuringNegotiation		= true
					if (Contract.AddendumExists)
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 4
						else
							invoked.ApprovalStage				= 5
					else
						if (Contract.ContractStatus.Released)
							invoked.ApprovalStage				= 1
						else
							invoked.ApprovalStage				= 2		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
				Status = 1	
				CreationApproved = false

		BuyerAddTerm is an Instance Action
			default label is "AddTerm"
			valid when (BuyerAddTermActionValid)
			Parameters
				PrmTitle				is a Description
				PrmHeaderText			is Alpha 100
				PrmDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.Contact.Name
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId

			Parameter Rules
				PrmTitle
					required
						"TitleIsRequired"
				PrmHeaderText
					if (!PrmHeaderText entered)
						default to PrmTitle
				PrmDescription
					required
						"DescriptionIsRequired"

			Action Rules
				invoke AddTermDuringNegotiation ContractTermAndCondition
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.Title			 			= PrmTitle
					invoked.HeaderText		 			= PrmHeaderText
					invoked.Description		 			= PrmDescription

		ApproverAddTerm is an Instance Action
			default label is "AddTerm"
			valid when (ApproverAddTermActionValid)
			Parameters
				PrmTitle				is a Description
				PrmHeaderText			is Alpha 100
				PrmDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.Contact.Name
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId

			Parameter Rules
				PrmTitle
					required
						"TitleIsRequired"
				PrmHeaderText
					if (!PrmHeaderText entered)
						default to PrmTitle
				PrmDescription
					required
						"DescriptionIsRequired"

			Action Rules
				invoke AddTermDuringNegotiation ContractTermAndCondition
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.Title			 			= PrmTitle
					invoked.HeaderText		 			= PrmHeaderText
					invoked.Description		 			= PrmDescription
					invoked.ContractStatus	 			= 2

		SupplierAddTerm is an Instance Action
			default label is "AddTerm"
			valid when (SupplierAddTermActionValid)
			Parameters
				PrmTitle				is a Description
				PrmHeaderText			is Alpha 100
				PrmDescription			is Text
					Text Variables
		 				ContractName				value is Contract.Name
		 				ContractNumber 				value is Contract
		 				ContractRebateFrequency		value is RebateFrequencyVariable
				 		ContractRebatePercent		value is RebatePercentVariable
		 				ContractRebateType			value is RebateVariable
				   		ContractReviewDate			value is Contract.ContractReviewDate
						Distributor					value is DistributorContractRel.Supplier.SupplierName
				 		EffectiveDate				value is Contract.EffectiveDate
						ExpirationDate				value is Contract.ExpirationDate
						EventBuyer					value is SourcingEventBuyerVariable
		 				EventBuyerPhoneNumber		value is SourcingEventBuyerPhoneVariable
		 				EventBuyerEmailAddress		value is SourcingEventBuyerEmailVariable
						EventDescription			value is SourcingEventDescriptionVariable
						EventName					value is SourcingEventNameVariable
						EventNumber					value is SourcingEventNumberVariable
						EventReference              value is SourcingEventReferenceVariable
						FirstHeaderRetainagePercent	value is Contract.RetainagePercent1
						FirstHeaderRetainageUpToPercent	value is Contract.RetainageUpToPercent
				   		FreightTerms				value is Contract.FreightTerm.Description
				   		GroupPurchasingOrganization value is Contract.GroupPurchasingOrganization.Vendor.VendorName
				   		Manufacturer				value is ManufacturerContractRel.Supplier.SupplierName
						PrimaryInternalContact 		value is Contract.PrimaryContactRel.Contact.Name
						PrimaryInternalContactEmailAddress value is Contract.PrimaryContactRel.DerivedEmail
						PrimaryInternalContactPhoneNumber	value is Contract.PrimaryContactRel.DerivedPhone
						ProjectName					value is ProjectNameVariable
						ProjectNumber 				value is ProjectNumberVariable
						ProposedTotalContractAmount	value is Contract.ProposedTotalContractAmount
						SecondHeaderRetainagePercent value is Contract.RetainagePercent2
						SupplierBusinessType		value is Contract.Supplier.BusinessType
						SupplierContact				value is Contract.SupplierSourceId.MainContact.FirstAndLastName
						SupplierContactAddress		value is Contract.SupplierSourceId.LocationAddress
						SupplierContactEmailAddress value is Contract.SupplierSourceId.EmailAddress
						SupplierContactFaxNumber	value is Contract.SupplierSourceId.FaxNumber.TelephoneDisplay
						SupplierContactPhoneNumber	value is Contract.SupplierSourceId.TelephoneNumber.TelephoneDisplay
						SupplierName				value is Contract.Supplier.SupplierName
				  		SupplierTaxId				value is Contract.Supplier.TaxIdGroup.TaxId

			Parameter Rules
				PrmTitle
					required
						"TitleIsRequired"
				PrmHeaderText
					if (!PrmHeaderText entered)
						default to PrmTitle
				PrmDescription
					required
						"DescriptionIsRequired"

			Action Rules
				invoke AddTermDuringNegotiation ContractTermAndCondition
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.Title			 			= PrmTitle
					invoked.HeaderText		 			= PrmHeaderText
					invoked.Description		 			= PrmDescription
					invoked.ContractStatus	 			= 2

		AddTermFromLibrary is an Instance Action
			valid when (BuyerAddTermFromLibraryValid)
			Parameters
				PrmArticle			is an Article
				PrmTerm				is a TermAndCondition

			Parameter Rules
				PrmArticle
					initial value is ContractArticle.Article
					default to ContractArticle.Article
				PrmTerm
					required
						"TermAndConditionIsRequired"

			Action Rules
				invoke AttachToContractInNegotiation PrmTerm
					invoked.Contract 		= Contract
					invoked.ContractArticle	= ContractArticle

		DeleteArticle is a Delete Action
			restricted

		TermChangedUpdate is an Update Action
			restricted

		BuyerRestoreArticle is an Instance Action
			valid when (BuyerRestoreArticleActionValid)
			Action Rules
				invoke Delete PendingArticleDeleteRel
				for each PendingTermDeletesRel
					invoke BuyerRestoreTerm each

		SupplierRestoreArticle is an Instance Action
			valid when (SupplierRestoreArticleActionValid)
			Action Rules
				invoke Delete PendingArticleDeleteRel
				for each PendingTermDeletesRel
					invoke SupplierRestoreTerm each

		UpdateDisplayOrderNegotiation is an Update Action
			restricted


		Restore is an Instance Action
			valid when (RestoreDeletedArticleValid)
			Action Rules
				Deleted = false

			Exit Rules
				invoke Create ContractArticleUpdate
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= Contract
					invoked.ContractArticle				= ContractArticle
					invoked.RevisedTitle				= Title
					invoked.RevisedHeaderText			= HeaderText
					invoked.RequestingActor				= actor
					invoked.RequestType					= 2		
					invoked.SpecificRequestType			= 2		
					invoked.RequestDateTime				= current timestamp
					if (Contract.ContractStatus.Addendum
					and	Contract.RequireTermAndConditionApproval)
						invoked.Status						= 1		
					else
					if (Contract.RequireTermAndConditionApproval
					and	AdhocArticle)
						invoked.Status						= 1		
						invoked.AdhocArticle				= true
					else
						invoked.OriginalTitle				= Title
						invoked.OriginalHeaderText			= HeaderText
						invoked.Status						= 3		
						invoked.ActionTaken					= 2		
					if (Contract.AddendumExists)
						invoked.ApprovalStage		= 4
					else
						invoked.ApprovalStage		= 1		
					invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1
				if (Contract.RequireTermAndConditionApproval
				and	Contract.ContractStatus.Addendum)
					Status = 1	
				else
				if (Contract.RequireTermAndConditionApproval
				and	AdhocArticle)
					Status = 1	
				else
					CreationApproved = true
					Status = 3	
				for each DeletedContractTermAndConditionRel
					invoke Restore each

		WithdrawProposedUpdates is an Instance Action
			valid when (WithdrawProposedUpdatesValid)
			Action Rules
				if (PendingRequestToDelete)
					for each ContractTermsByDisplayRel
						invoke WithdrawProposedUpdates each
				for each PendingArticleUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		
				for each DraftArticleUpdateRel
					invoke Update each
						invoked.ActionTaken	= 3		
						invoked.Status		= 3		

		SetToInactive is an Instance Action
			restricted
			Action Rules

				invoke SetToInactive ContractTermAndCondition set
				make transition to Inactive

		Purge is a Purge Action
			restricted

		ReleaseArticle is an Instance Action
			restricted
			Action Rules
				for each ContractTermsByDisplayRel
					invoke ReleaseTermAndCondition each
				make transition to Released

		TransitionToActive is an Instance Action
			restricted
			Action Rules
				OkToDeleteWhenAddendum = false
				TermChanged 		   = false
				invoke TransitionToActive ContractTermAndCondition set
				make transition to Active

	StateCycles
		ContractLifeCycle is a StateCycle
			state field is ContractStatus

			Draft is a State
				Create is a Create Action
					valid when (Contract.ContractStatus.Draft)

					Field Rules
						SSArticle
							if (!Contract.CreateByCopy)
								default to true

						DisplayOrder
							if (!Contract.CreateByCopy
							and !Contract.UseDisplayOrder)
								autosequence using Contract.LastArticleDisplayOrder

						HeaderText
							if (!HeaderText entered
							and !FromSourcing)
								default to Title

					Action Rules
						LocalDisplayOrder = NewDisplayOrder

					Exit Rules
						if (LocalDisplayOrder entered)
							invoke UpdateDisplayOrder
								invoked.ContractArticle = ContractArticle
								invoked.NewDisplayOrder = LocalDisplayOrder
						Active	= true

						invoke Create ContractArticleUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.RevisedTitle				= Title
							invoked.RevisedHeaderText			= HeaderText
							invoked.RequestingActor				= actor
							invoked.RequestType					= 1		
							invoked.SpecificRequestType			= 1		
							invoked.RequestDateTime				= current timestamp
							if (Contract.RequireTermAndConditionApproval
							and	AdhocArticle)
								invoked.Status						= 1		
								invoked.AdhocArticle				= true
							else
								invoked.OriginalTitle				= Title
								invoked.OriginalHeaderText			= HeaderText
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
							if (Contract.AddendumExists)
								invoked.ApprovalStage				= 4
							else
								invoked.ApprovalStage				= 1	
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

						if (Contract.RequireTermAndConditionApproval
						and	AdhocArticle)
							Status = 1	
						else
							CreationApproved = true
							Status = 3	

				WizardCreate is a Create Action
					valid when (Contract.ContractStatus.Draft)

					Field Rules
						SSArticle
							if (!Contract.CreateByCopy)
								default to true

						DisplayOrder
							if (!Contract.CreateByCopy
							and !Contract.UseDisplayOrder)
								autosequence using Contract.LastArticleDisplayOrder

						HeaderText
							if (!HeaderText entered
							and !FromSourcing)
								default to Title

					Exit Rules
						Active	= true

						invoke Create ContractArticleUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.RevisedTitle				= Title
							invoked.RevisedHeaderText			= HeaderText
							invoked.RequestingActor				= actor
							invoked.RequestType					= 1		
							invoked.SpecificRequestType			= 1		
							invoked.RequestDateTime				= current timestamp
							if (Contract.RequireTermAndConditionApproval
							and	AdhocArticle)
								invoked.Status						= 1		
								invoked.AdhocArticle				= true
							else
								invoked.OriginalTitle				= Title
								invoked.OriginalHeaderText			= HeaderText
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
							if (Contract.AddendumExists)
								invoked.ApprovalStage				= 4
							else
								invoked.ApprovalStage				= 1	
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

						if (Contract.RequireTermAndConditionApproval
						and	AdhocArticle)
							Status = 1	
						else
							CreationApproved = true
							Status = 3	


				UpdateDisplayOrder is an Update Action
					restricted
					valid when (Contract.ContractStatus.Draft)

				Update is an Update Action
					valid when (Contract.ContractStatus.Draft)

					Field Rules
						Modified
							if (HeaderText changed)
								default to true
					Action Rules
						if (SSArticle changed)
							if (SSArticle)
								for each RepositoryTermsByContractArticleRel
									invoke DraftUpdateWithoutEdits Draft each
										invoked.ChangeSSTermTrue = true
							else
								for each RepositoryTermsByContractArticleRel
									invoke DraftUpdateWithoutEdits Draft each
										invoked.ChangeSSTermFalse = true

						if (HeaderText changed)
							if (Article exists)
								constraint (Article.AllowModification)
									"CannotChangeHeaderText;TheArticleDoesNotAllowModifications"

						if (NewDisplayOrder entered)
							if (!Contract.ArticleDisplayChange)
								confirmation required
									"Warning;AllAdditionalArticlesWillBeAppendedToEndOfList;DoYouWantToContinue?"

							invoke Update Draft Contract
								invoked.ArticleDisplayChange = true

						if (DraftArticleUpdateRel exists)
							for each DraftArticleUpdateRel
								invoke Update each
									invoked.RevisedTitle				= Title
									invoked.RevisedHeaderText			= HeaderText
									invoked.RequestingActor				= actor
									invoked.RequestDateTime				= current timestamp
						else	
							invoke Create ContractArticleUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.RevisedTitle				= Title
								invoked.RevisedHeaderText			= HeaderText
								invoked.RequestingActor				= actor
								invoked.RequestType					= 2		
								invoked.SpecificRequestType			= 2		
								invoked.RequestDateTime				= current timestamp
								invoked.OriginalTitle				= DerivedPreviousTitle
								invoked.OriginalHeaderText			= DerivedPreviousHeaderText
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
								if (Contract.AddendumExists)
									invoked.ApprovalStage				= 4
								else
									invoked.ApprovalStage				= 1		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				UpdateArticleForDraft is an Update Action
					restricted
					Action Rules

						if (NewDisplayOrder entered)
							invoke Update Draft Contract
								invoked.ArticleDisplayChange = true

				Delete is a Delete Action
					valid when (Contract.ContractStatus.Draft)

					Action Rules
						if (!ArticleContractRel exists)
							invoke Update Draft Contract
								invoked.ArticleDisplayChange = false
								initialize invoked.LastArticleDisplayOrder

				Release is an Instance Action
					restricted
					Action Rules
						invoke Release ContractTermAndCondition set
						make transition to Released

			Released is a State
				TransitionToDraft is an Instance Action
					restricted
					Action Rules
						invoke TransitionToDraft Released ContractTermAndCondition set
						make transition to Draft

				TransitionToActive is an Instance Action
					restricted
					Action Rules
						OkToDeleteWhenAddendum = false
						TermChanged 		   = false
						invoke TransitionToActive Released ContractTermAndCondition set
						make transition to Active
				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						invoke TransitionToAddendum Released ContractTermAndCondition set
						make transition to Addendum
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						invoke TransitionToInactive Released ContractTermAndCondition set
						make transition to Inactive
			Active is a State
				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						invoke TransitionToAddendum Active ContractTermAndCondition set
						make transition to Addendum
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						invoke TransitionToInactive Active ContractTermAndCondition set
						make transition to Inactive
			Addendum is a State
				Entrance Rules
					OkToDeleteWhenAddendum = true

				Create is a Create Action
					valid when (CanCreateArticleAddendum)

					Field Rules
						HeaderText
							if (!HeaderText entered
							and !FromSourcing)
								default to Title

						SSArticle
							if (!Contract.CreateByCopy)
								default to true

						DisplayOrder
							if (!Contract.CreateByCopy)
								autosequence using Contract.LastArticleDisplayOrder

					Action Rules
						LocalDisplayOrder = NewDisplayOrder
						OkToDeleteWhenAddendum = true

					Exit Rules
						if (LocalDisplayOrder entered)
							invoke UpdateDisplay
								invoked.ContractArticle = ContractArticle
								invoked.NewDisplayOrder = LocalDisplayOrder
						Active	= true

						invoke Create ContractArticleUpdate
							invoked.ContractGroup				= ContractGroup
							invoked.Contract					= Contract
							invoked.ContractArticle				= ContractArticle
							invoked.RevisedTitle				= Title
							invoked.RevisedHeaderText			= HeaderText
							invoked.RequestingActor				= actor
							invoked.RequestType					= 1		
							invoked.SpecificRequestType			= 1		
							invoked.RequestDateTime				= current timestamp
							if (Contract.ContractStatus.Addendum
							and	Contract.RequireTermAndConditionApproval)
								invoked.Status						= 1		
							else
							if (Contract.RequireTermAndConditionApproval
							and	AdhocArticle)
								invoked.Status						= 1		
								invoked.AdhocArticle				= true
							else
								invoked.OriginalTitle				= Title
								invoked.OriginalHeaderText			= HeaderText
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
							if (Contract.AddendumExists)
								invoked.ApprovalStage				= 4
							else
								invoked.ApprovalStage				= 1	
							invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

						if (Contract.RequireTermAndConditionApproval
						and	Contract.ContractStatus.Addendum)
							Status = 1	
						else
						if (Contract.RequireTermAndConditionApproval
						and	AdhocArticle)
							Status = 1	
						else
							CreationApproved = true
							Status = 3	

				UpdateDisplay is an Update Action
					restricted
					valid when (ArticleAddendum)

				Update is an Update Action
					valid when (CanCreateArticleAddendum)

					Field Rules
						Modified
							if (HeaderText changed)
								default to true
					Action Rules
						if (SSArticle changed)
							if (SSArticle)
								for each RepositoryTermsByContractArticleRel
									invoke AddendumUpdateWithoutEdits Addendum each
										invoked.ChangeSSTermTrue = true
							else
								for each RepositoryTermsByContractArticleRel
									invoke AddendumUpdateWithoutEdits Addendum each
										invoked.ChangeSSTermFalse = true

						if (HeaderText changed)
							if (Article exists)
								constraint (Article.AllowModification)
									"CannotChangeHeaderText;TheArticleDoesNotAllowModifications"

						if (NewDisplayOrder entered)
							if (!Contract.ArticleDisplayChange)
								confirmation required
									"Warning;AllAdditionalArticlesWillBeAppendedToEndOfList;DoYouWantToContinue?"
							if (ContractStatus.Addendum)
								invoke Update Addendum Contract
									invoked.ArticleDisplayChange = true

						if (DraftArticleUpdateRel exists)
							for each DraftArticleUpdateRel
								invoke Update each
									invoked.RevisedTitle				= Title
									invoked.RevisedHeaderText			= HeaderText
									invoked.RequestingActor				= actor
									invoked.RequestDateTime				= current timestamp
						else	
							invoke Create ContractArticleUpdate
								invoked.ContractGroup				= ContractGroup
								invoked.Contract					= Contract
								invoked.ContractArticle				= ContractArticle
								invoked.RevisedTitle				= Title
								invoked.RevisedHeaderText			= HeaderText
								invoked.RequestingActor				= actor
								invoked.RequestType					= 2		
								invoked.SpecificRequestType			= 2		
								invoked.RequestDateTime				= current timestamp
								invoked.OriginalTitle				= DerivedPreviousTitle
								invoked.OriginalHeaderText			= DerivedPreviousHeaderText
								invoked.Status						= 3		
								invoked.ActionTaken					= 2		
								if (Contract.AddendumExists)
									invoked.ApprovalStage				= 4
								else
									invoked.ApprovalStage				= 1		
								invoked.TermNegotiationVersion		= Contract.TermNegotiationVersion + 1

				UpdateArticleForAddendum is an Update Action
					restricted
					Action Rules
						if (SSArticle)
							for each RepositoryTermsByContractArticleRel
								invoke Update Addendum each
									invoked.SSTerm = true
						else
							for each RepositoryTermsByContractArticleRel
								invoke Update Addendum each
									invoked.SSTerm = false
						if (NewDisplayOrder entered)
							invoke Update Addendum Contract
								invoked.ArticleDisplayChange = true

				Release is an Instance Action
					restricted
					Action Rules
						invoke Release Addendum ContractTermAndCondition set
						make transition to Released
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						invoke TransitionToInactive Addendum ContractTermAndCondition set
						make transition to Inactive

				Delete is a Delete Action
					valid when (OkToDeleteWhenAddendumNotRedline)


			Inactive is a State
				TransitionToDraft is an Instance Action
					restricted
					Action Rules
						invoke TransitionToDraft Inactive ContractTermAndCondition set
						make transition to Draft

				TransitionToAddendum is an Instance Action
					restricted
					Action Rules
						invoke TransitionToAddendum Inactive ContractTermAndCondition set
						make transition to Addendum
				TransitionToActive is an Instance Action
					restricted
					Action Rules
						OkToDeleteWhenAddendum = false
						invoke TransitionToActive Inactive ContractTermAndCondition set
						make transition to Active
				TransitionToInactive is an Instance Action
					restricted
					Action Rules
						make transition to Inactive

