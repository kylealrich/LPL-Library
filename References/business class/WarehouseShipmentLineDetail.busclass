WarehouseShipmentLineDetail is a BusinessClass
    owned by wh
    prefix is WHD
    classic name is WHSHLDTL

    Ontology
        symbolic key is WarehouseShipmentLineDetail
            classic set name is WHDSET1

			classic name for WarehouseShipmentLineComponent is COMPONENT-SEQ
            classic name for WarehouseShipmentLineDetail.UnitOfMeasure is UOM
            classic name for InventoryLocation is LOCATION
            classic name for WarehouseShipment is SHIPMENT-NBR
            classic name for WarehouseShipmentLine is LINE-NBR

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex
		implements Archivable

    Persistent Fields
        WarehouseDemand
            classic name for WarehouseDemand.DemandSystemCode is SYSTEM-CD
            classic name for WarehouseDemand.DemandDocument is DOC-NBR
			delete ignored
        UOMMultiplier
            classic name is UOM-MULT
        Quantity
        CatchWeightQuantity is a Quantity
            classic name is CATCH-WT-QTY
        UpdateDate          is TimeStamp

	
	Local Fields
		LocalInventoryTransaction  		is an InventoryTransaction
		LocalInventoryTransactionLine 	is an InventoryTransactionLine
		LocalTransactionSystemCode		is a TransactionSystemCode
		LocalLot						is an ItemLot
		LocalSublot						is a Sublot
		LocalItem						is like Item
		LocalTransactionUOM				is like UnitOfMeasure
		LocalInputQuantity				is like Quantity
  		UOMCalculation
		TempCounter1  					is Numeric 2
		LocalVariancePercent			is like CatchWeightVariancePercent
		LocalUOM						is like UnitOfMeasure
		LocalCatchWeightQuantity		is like Quantity
  		LocalCreateFromPicklist			is Boolean
		LocalSkipSOHUpdate				is Boolean
  	Transient Fields
		CopyDetails						is Boolean
		TransientQuantityInTransactionUOM		is like Quantity
			derive value from DerivedQuantityInTransactionUOM
			precision is WarehouseShipmentLine.Item.NumberOfDecimalsQuantity
			default label is "Quantity"
		TransientOnline							is Alpha size 1
			derive value from DeriveReturnYes
		TransientTrackingNumber			is like TrackingNumber
			derive value from DerivedTrackingNumber

	Derived Fields
		DerivedItem	is a DerivedField
			type is like Item
			if (WarehouseShipmentLineComponent entered)
				return WarehouseShipmentLineComponent.Item
			else
				return WarehouseShipmentLine.Item
		
		DerivedDetailQuantityInStockUOM		is a DerivedField
			type is like Quantity
			if (WarehouseShipmentLine.TransactionUOM not = WarehouseShipmentLine.Item.StockUOM
			and Quantity entered)
				return Quantity * WarehouseShipmentLine.TransactionUOMMultiplier
			else
				return Quantity

		DerivedDetailQuantity		is a DerivedField
			type is like Quantity
			if (HasItemLocationStockUOM)
				return Quantity * WarehouseShipmentLine.DerivedLocationStockUOMMultiplier
			else
				return Quantity

		DerivedUOMDisplay 			is a DerivedField
			type is like UnitOfMeasure
			default label is "UOM"
			if (HasItemLocationStockUOM)
				return WarehouseShipmentLine.TransactionUOM
			else
				return WarehouseShipmentLineDetail.UnitOfMeasure

		DerivedUOM is a DerivedField
			type is like UnitOfMeasure
			if (WarehouseShipmentLineDetail.UnitOfMeasure not = WarehouseShipmentLine.TransactionUOM 
			and WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.Item.StockUOM)
				return WarehouseShipmentLine.TransactionUOM
			else
				return WarehouseShipmentLineDetail.UnitOfMeasure
			
		DerivedQuantityInShipmentLineTransactionUOM is a DerivedField
			type is like Quantity
			if (WarehouseShipmentLineDetail.UnitOfMeasure not = WarehouseShipmentLine.TransactionUOM 
			and WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.Item.StockUOM)
				return Quantity / WarehouseShipmentLine.TransactionUOMMultiplier
			else
				return Quantity

		DerivedCatchWeightVariancePercent 		is a DerivedField
			type is Decimal size 5.2
			LocalVariancePercent = (((CatchWeightQuantity - DerivedDetailQuantityInStockUOM)/DerivedDetailQuantityInStockUOM) * 100)
			if (LocalVariancePercent < 0)
				LocalVariancePercent = LocalVariancePercent * -1
			return LocalVariancePercent		

		CatchWeightOutOfToleranceMessage 		is a MessageField
			"CatchWeightQuantityIsOutsideOfTolerance"

		DerivedDatePriorToExpiringLot is a DerivedField
			type is Date
			return (WarehouseShipmentLineDetail.Lot.LotExpirationDate - Company.DaysPriorToExpiringLots as days)

		DerivedComponentDetailUOM			is a DerivedField
			type is like UnitOfMeasure
			if (IsLineComponentCatchWeightItem)
				return WarehouseShipmentLine.CatchWeightUOM
			else

				return WarehouseShipmentLineDetail.UnitOfMeasure

		DerivedComponentDetailQuantity		is a DerivedField
			type is like Quantity
				precision is WarehouseShipmentLineComponent.Item.NumberOfDecimalsQuantity
			if (!IsLineComponentSerialTracked)
				return Quantity
			if (IsLineComponentCatchWeightItem)
				return CatchWeightQuantity

		DerivedLocationStockUOMMultiplier					is a DerivedField  
			type is like UOMMultiplier
			return WarehouseShipmentLine.DerivedLocationStockUOMMultiplier

		DerivedQuantityInTransactionUOM					is a DerivedField
			type is like Quantity
			if (action type.Update)
				return 0
			else
				return DerivedQuantityInShipmentLineTransactionUOM 

		QuantityInTransactionUOM							is a DerivedField
			type is like Quantity
			if (HasItemLocationStockUOM)
				return Quantity / WarehouseShipmentLine.TransactionUOMMultiplier
			else
				return Quantity

		DeriveReturnYes is a DerivedField
			type is Alpha size 1
			return "Y"
		
		DisplayWarehouseZone is a MessageField
			"<WarehouseZoneRel.WarehouseZone>_-_<WarehouseZoneRel.Description>"

		DisplayWarehouseZoneComponent is a MessageField
			"<WarehouseZoneComponentRel.WarehouseZoneComponent>_-_<WarehouseZoneComponentRel.Description>"

		DerivedTrackingNumber is a DerivedField
            type is like TrackingNumber
			if (MSCMShipmentLineDetailTrackingRel exists)
            	return first MSCMShipmentLineDetailTrackingRel.TrackingNumber
			else
				return blank



		DisplayLineDetailCardTitle is a MessageField
			restricted
			"Line<WarehouseShipmentLine>_Details"

		DerivedWarehouseShipmentZone is a DerivedField
			type is like WarehouseZone
			default label is "Zone"
			return WarehouseShipmentLine.WarehouseShipment.WarehouseZone

		DerivedStorageSystem is a DerivedField
			type is Text
			default label is "StorageSystem"
			return StorageSystemRel.WarehouseComponentType

		DerivedStorageSystemUnit is a DerivedField
			type is Text
			default label is "StorageSystemUnit"
			return WarehouseZoneComponentRel.WarehouseZoneComponent
		
		DerivedAisle is a DerivedField
			type is Text
			default label is "Aisle"
			return WarehouseZoneComponentRel.WarehouseAisle

		DerivedRow is a DerivedField
			type is Text
			default label is "Row"
			return WarehouseStorageLocationRel.Row


	Rule Blocks
		UpdateStockOnHandDetailAndLineComponent
			include AssignItemLotAndSublot
			
			if (StockOnHandDetailRel exists
			and not LocalSkipSOHUpdate)
				if (WarehouseShipmentLine.IsCatchWeightItem
				and not Company.AllowNegativeStockOnHand)
					if (CatchWeightQuantity changed)
						LocalCatchWeightQuantity = CatchWeightQuantity - old CatchWeightQuantity
					else
						LocalCatchWeightQuantity = CatchWeightQuantity

					constraint (LocalCatchWeightQuantity <= StockOnHandDetailRel.CatchWeightAvailableQuantity)
						"Item<DerivedItem>HasInsufficientStockOnHandQuantity"

				invoke UpdateFromWarehouse StockOnHandDetailRel
					if (action type.Create)
						invoked.PrmAllocatedQuantity = Quantity
						invoked.PrmAllocatedCatchWeightQuantity = CatchWeightQuantity
					else
					if (Quantity changed
					or  CatchWeightQuantity changed)
						invoked.PrmAllocatedQuantity = Quantity - old Quantity
						invoked.PrmAllocatedCatchWeightQuantity = CatchWeightQuantity - old CatchWeightQuantity
			
			invoke UpdateFromLineDetail WarehouseShipmentLine
				if (Quantity changed
				or  CatchWeightQuantity changed)
					invoked.PrmDetailQuantity 			   = Quantity - old Quantity
					invoked.PrmDetailCatchWeightQuantity   = CatchWeightQuantity - old CatchWeightQuantity
				else
					invoked.PrmDetailQuantity 			   = Quantity
					invoked.PrmDetailCatchWeightQuantity   = CatchWeightQuantity
					
			if (WarehouseShipmentLineComponent entered)
				invoke UpdateFromWarehouse WarehouseShipmentLineComponent
					if (Quantity changed)
						invoked.PrmDetailQuantity = Quantity - old Quantity
					else
						invoked.PrmDetailQuantity = Quantity		 		            
			
		AssignItemLotAndSublot
			if (WarehouseShipmentLineComponent entered)
				LocalItem 			= WarehouseShipmentLineComponent.Item
				LocalTransactionUOM = WarehouseShipmentLineComponent.Item.StockUOM
				if (WarehouseShipmentLineComponent.ItemLocation.LotTracked.LotRequiredAtIssue)
					initialize LocalLot
					initialize LocalSublot
				else
					LocalLot    = WarehouseShipmentLineDetail.Lot
					LocalSublot = WarehouseShipmentLineDetail.Sublot
				if (WarehouseShipmentLineComponent.Item.IsCatchWeightItem)
					LocalUOM = WarehouseShipmentLineComponent.Item.StockUOM
				else
					LocalUOM = WarehouseShipmentLineDetail.UnitOfMeasure		
			else
				LocalItem 			= WarehouseShipmentLine.Item
				if (WarehouseShipmentLine.IsMultipleUOMTracked)
					LocalTransactionUOM = WarehouseShipmentLineDetail.UnitOfMeasure	
				else
					LocalTransactionUOM = WarehouseShipmentLine.TransactionUOM
				if (WarehouseShipmentLine.ItemLocation.LotTracked.LotRequiredAtIssue)
					initialize LocalLot
					initialize LocalSublot	
				else
					LocalLot    = WarehouseShipmentLineDetail.Lot
					LocalSublot = WarehouseShipmentLineDetail.Sublot
				if (WarehouseShipmentLine.IsCatchWeightItem
				or  HasItemLocationStockUOM)
					LocalUOM	= WarehouseShipmentLine.Item.StockUOM
				else
					LocalUOM	= WarehouseShipmentLineDetail.UnitOfMeasure		 
		
		UOMConversionFromStockUOM
			initialize UOMCalculation
			include AssignItemLotAndSublot
			if (WarehouseShipmentLineComponent entered)
				UOMCalculation.InputUOM  = WarehouseShipmentLineComponent.Item.StockUOM
			else
				UOMCalculation.InputUOM	 = WarehouseShipmentLine.Item.StockUOM
			UOMCalculation.InputToUOM  	 = LocalTransactionUOM
			UOMCalculation.InputQuantity = LocalInputQuantity
			UOMCalculation.Method      	 = UOMCalculation.Method.ConvertToAlternate
  		
  		UOMConversionIntoStockUOM
  			initialize UOMCalculation
  			include AssignItemLotAndSublot
			UOMCalculation.InputUOM		 = LocalTransactionUOM
			UOMCalculation.InputQuantity = LocalInputQuantity
			UOMCalculation.Method		 = UOMCalculation.Method.ConvertToStock 	

		UpdateInventoryUDIDetail  	
			invoke Update InventoryUDIDetailRel	
				if (Quantity changed)
					invoked.Quantity		= WarehouseShipmentLineDetail.Quantity
					
				if (WarehouseShipmentLine.ItemLocation.IsLotTracked)
					invoked.Lot				= WarehouseShipmentLineDetail.Lot
				else
				if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
					invoked.SerialNumber	= WarehouseShipmentLineDetail.Serial

		InitializeInventoryUDIDetail  	
			invoke Update InventoryUDIDetailRel
				invoked.LocalUpdateFromWarehouseShipmentLineDetail	= true	
				if (WarehouseShipmentLine.ItemLocation.IsLotTracked)
					invoked.Lot				= blank
				else
				if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
					invoked.SerialNumber	= blank
		
		DeleteEntranceRules
			constraint (IsValidForUpdateOrDelete)
					"CannotDeleteDetailForLine<WarehouseShipmentLine>In<WarehouseShipment.Status>State"			
				
			if (invoking action not = "Merge")
				include AssignItemLotAndSublot	 
				invoke UpdateFromWarehouse StockOnHandDetailRel
					invoked.PrmAllocatedQuantity = Quantity	* -1
					invoked.PrmAllocatedCatchWeightQuantity = CatchWeightQuantity * -1
				
				if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
					if (ItemSerialNumberRel.Status.Allocated)
						invoke UpdateStatusBinLocation ItemSerialNumberRel
							invoked.PrmStatus = 0
					
			invoke UpdateFromLineDetail WarehouseShipmentLine
				invoked.PrmDetailQuantity				= Quantity * -1
				invoked.PrmDetailCatchWeightQuantity	= CatchWeightQuantity * -1

		UpdateOverrideTransientInTransactionUOM 
			if  (HasItemLocationStockUOM
			and (TransientOnline entered
			or   TransientQuantityInTransactionUOM not entered))
				if (TransientOnline not entered 
				and TransientQuantityInTransactionUOM not entered)
					TransientQuantityInTransactionUOM = Quantity
				if (TransientQuantityInTransactionUOM 	not = QuantityInTransactionUOM)
					if (TransientQuantityInTransactionUOM entered)
						Quantity = (TransientQuantityInTransactionUOM * WarehouseShipmentLine.TransactionUOMMultiplier)
					else
						Quantity = 0

    Relations
    	ItemLotsRel
    		one-to-many relation to ItemLot
    		Field Mapping uses symbolic key
    			related.Company				= Company
    			related.InventoryLocation	= InventoryLocation
    			related.Item				= DerivedItem
    		Instance Selection
    			where (related.HasStockOnHandDetail)
    
    	ItemLotRel
    		one-to-one relation to ItemLot
    		Field Mapping uses symbolic key
    			related.Company				= Company
    			related.InventoryLocation	= InventoryLocation
    			related.Item				= DerivedItem
    			related.ItemLot				= WarehouseShipmentLineDetail.Lot    
    
    	ItemSerialNumbersRel
    		one-to-many relation to ItemSerialNumber
    		Field Mapping uses Set2
    			related.Company				= Company
    			related.InventoryLocation	= InventoryLocation
    			related.Item				= DerivedItem
    
    	LineOrComponentItemSerialNumberRel
    		one-to-one relation to ItemSerialNumber
    		Field Mapping uses Set2
    			related.Company				= Company
    			related.InventoryLocation	= InventoryLocation
    			related.Item				= DerivedItem
    			related.ItemSerialNumber	= WarehouseShipmentLineDetail.Serial
    
    	StockOnHandForDetailRel
    		one-to-one relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company							 = Company
				related.InventoryLocation 				 = InventoryLocation
				related.Item							 = DerivedItem
				related.StockOnHandDetail.UnitOfMeasure  = WarehouseShipmentLineDetail.UnitOfMeasure
				related.StockOnHandDetail.Lot 			 = WarehouseShipmentLineDetail.Lot			
				related.StockOnHandDetail.Sublot 		 = WarehouseShipmentLineDetail.Sublot
				related.StockOnHandDetail.Bin 			 = WarehouseShipmentLineDetail.Bin
    
		StockOnHandDetailRel						
			one-to-one relation to StockOnHandDetail
			Field Mapping uses symbolic key
				related.Company							 = Company
				related.InventoryLocation 				 = InventoryLocation
				related.Item							 = LocalItem
				related.StockOnHandDetail.UnitOfMeasure  = LocalUOM
				related.StockOnHandDetail.Lot 			 = LocalLot			
				related.StockOnHandDetail.Sublot 		 = LocalSublot
				related.StockOnHandDetail.Bin 			 = WarehouseShipmentLineDetail.Bin

		OtherLinesDetailForMergeRel
			one-to-many relation to WarehouseShipmentLineDetail
			Field Mapping uses Set2
				related.Company 						 = Company
				related.InventoryLocation 		 		 = InventoryLocation
			Instance Selection
				where (related.WarehouseShipment				!= WarehouseShipment


				and    related.WarehouseShipment.WarehouseDemand = WarehouseShipment.WarehouseDemand
				and    related.WarehouseShipment.Status			 = WarehouseShipment.Status)

		
		ShipmentLinesDetailForMergeRel
			one-to-many relation to WarehouseShipmentLineDetail
			Field Mapping uses Set2
				related.Company 						 = Company
				related.InventoryLocation 		 		 = InventoryLocation
				related.WarehouseShipment				 = WarehouseShipment

		OtherWarehouseShipmentLineDetailAllocatedSerialRel
			one-to-many relation to WarehouseShipmentLineDetail
			Field Mapping uses symbolic key
				related.Company 						 = Company
				related.InventoryLocation 		 		 = InventoryLocation
			Instance Selection
				where (related.WarehouseShipment 				 != WarehouseShipment
				and    related.WarehouseShipmentLine.Item		  = WarehouseShipmentLine.Item
				and    related.WarehouseShipmentLineDetail.Serial = WarehouseShipmentLineDetail.Serial
				and    related.WarehouseShipmentLineDetail.Serial.Status.Allocated)
		
		OtherShipmentLineComponentDetailAllocatedSerialRel
			one-to-many relation to WarehouseShipmentLineDetail
			Field Mapping uses symbolic key
				related.Company 						 = Company
				related.InventoryLocation 		 		 = InventoryLocation
			Instance Selection
				where (related.WarehouseShipment 				 	!= WarehouseShipment
				and    related.WarehouseShipmentLineComponent.Item	 = WarehouseShipmentLineComponent.Item
				and    related.WarehouseShipmentLineDetail.Serial    = WarehouseShipmentLineDetail.Serial
				and    related.WarehouseShipmentLineDetail.Serial.Status.Allocated)					
						
		ItemSerialNumberRel
			one-to-one relation to ItemSerialNumber
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Item						= WarehouseShipmentLine.Item						    				
				related.ItemSerialNumber			= WarehouseShipmentLineDetail.Serial

		ComponentSerialNumberRel
			one-to-one relation to ItemSerialNumber
			Field Mapping uses symbolic key
				related.Company						= Company
				related.Item						= WarehouseShipmentLineComponent.Item						    				
				related.ItemSerialNumber			= WarehouseShipmentLineDetail.Serial

		RequisitionRel 
			one-to-one relation to Requisition
            Field Mapping uses symbolic key
                related.Company     = WarehouseDemand.Company
                related.Requisition = WarehouseDemand.DocumentNumberNumeric

		RequisitionLineRel 
			one-to-one relation to RequisitionLine
			Field Mapping uses symbolic key
				related.Company			= WarehouseShipment.WarehouseDemand.Company
				related.Requisition		= WarehouseShipment.WarehouseDemand.DemandDocument
				related.RequisitionLine = WarehouseShipmentLine

		InventoryUDIDetailRel 
			one-to-one relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company										= Company
				related.InventoryLocation							= RequisitionLineRel.FromCompanyLocationBin.FromLocation
				related.InventoryUDIDetail.InventoryTransactionType	= RequisitionLineRel.InventoryTransactionType
				related.InventoryUDIDetail.TransactionSystemCode	= "RQ"
				related.InventoryUDIDetail.DocumentNumberNumeric	= RequisitionLineRel.Requisition
				related.InventoryUDIDetail.WarehouseShipment		= blank
				related.InventoryUDIDetail.LineNumber				= RequisitionLineRel.RequisitionLine
				related.InventoryUDIDetail.TransactionSequence		= 1


		WarehouseStorageBinRel
			one-to-one relation to Bin
			Field Mapping uses symbolic key
				related.Company				= Company
				related.InventoryLocation	= InventoryLocation
				related.Bin					= WarehouseShipmentLineDetail.Bin

		WarehouseStorageLocationRel
			one-to-one relation to WarehouseStorageLocation
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= InventoryLocation
				related.WarehouseStorageLocation 	= WarehouseStorageBinRel.WarehouseStorageLocation

		WarehouseZoneRel
			one-to-one relation to WarehouseZone
			Field Mapping uses symbolic key
				related.Company						= Company
				related.InventoryLocation			= InventoryLocation
				related.WarehouseZone			 	= WarehouseStorageLocationRel.WarehouseZone				 

		WarehouseZoneComponentRel
			one-to-one relation to WarehouseZoneComponent
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= InventoryLocation
				related.WarehouseZone 			= WarehouseStorageLocationRel.WarehouseZone
				related.WarehouseZoneComponent 	= WarehouseStorageLocationRel.WarehouseZoneComponent
		
		BinHasItemStorageLocationRel
			one-to-many relation to Bin
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
			Instance Selection
				where (related.HasItemStorageLocation)

		StorageSystemRel 
			one-to-one relation to WarehouseComponentType
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.WarehouseComponentType			= WarehouseZoneComponentRel.WarehouseComponentType
		
		DistributionClerkRel
			one-to-one relation to DistributionClerk
			Field Mapping uses symbolic key
				related.HROrganization						= actor.agent(Employee).Employee.HROrganization
				related.DistributionClerk					= actor.agent(Employee).Employee

		DistributionClerkZoneRel
			one-to-one relation to DistributionClerkZone
			Field Mapping uses symbolic key
				related.Company						 		= Company
				related.InventoryLocation					= InventoryLocation
				related.DistributionClerk					= DistributionClerkRel.DistributionClerk
				related.WarehouseZone						= DerivedWarehouseShipmentZone

		DistributionClerkZoneForBlankZoneRel
			one-to-many relation to DistributionClerkZone
			Field Mapping uses symbolic key
				related.Company						 		= Company
				related.InventoryLocation					= InventoryLocation
				related.DistributionClerk					= DistributionClerkRel.DistributionClerk

		InventoryUDIDetailRel2 
			one-to-one relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company										= Company
				related.InventoryLocation							= RequisitionLineRel.FromCompanyLocationBin.FromLocation
				related.InventoryUDIDetail.InventoryTransactionType	= RequisitionLineRel.InventoryTransactionType
				related.InventoryUDIDetail.TransactionSystemCode	= "RQ"
				related.InventoryUDIDetail.DocumentNumberNumeric	= RequisitionLineRel.Requisition
				related.InventoryUDIDetail.WarehouseShipment		= WarehouseShipment
				related.InventoryUDIDetail.LineNumber				= RequisitionLineRel.RequisitionLine
				related.InventoryUDIDetail.TransactionSequence		= 1

		

		MSCMShipmentLineDetailTrackingRel is a MobileSupplyChainShipmentDetailTracking set

			
    Conditions
    	IsDetailTrackedAndPrintedPickedOrPacked
    		restricted
    		when ((IsLineDetailRequired
    		or     WarehouseShipmentLineComponent.IsDetailRequired)
    		and   (WarehouseShipment.Status.Printed
    		or     WarehouseShipment.Status.Picked
    		or     WarehouseShipment.Status.Packed))

		IsValidForUpdateOrDelete
			restricted
    		when ((IsLineDetailRequired
    		or     WarehouseShipmentLineComponent.IsDetailRequired)
			and   (WarehouseShipment.IsPrintedPickedOrPacked
			or    (WarehouseShipment.Status.ReleaseInProgress
			and    WarehouseShipmentLine.Status.Unreleased)))
   		
   		IsLineDetailRequired
   			restricted
   			when (WarehouseShipmentLine.IsDetailRequired
   			and   WarehouseShipmentLineComponent not entered)
   		
   		IsNotPlainCatchWeightOrOnlySerialItem
   			restricted
   			when (IsLineNotPlainCatchWeightOrOnlySerialItem
   			or    IsComponentNotCatchWeightOrOnlySerialItem)
		
		IsLineNotPlainCatchWeightOrOnlySerialItem
			restricted
			when (!WarehouseShipmentLine.IsOnlySerialTracked
			and   !WarehouseShipmentLine.IsPlainCatchWeightItem
			and    WarehouseShipmentLineComponent not entered)
		
		IsComponentNotCatchWeightOrOnlySerialItem
			restricted
			when (!WarehouseShipmentLineComponent.IsOnlySerialTracked
			and   !WarehouseShipmentLineComponent.IsPlainCatchWeightItem)
			
		HasComponentSequence
			restricted
			when (WarehouseShipmentLineComponent entered)
    	
    	IsLineOrComponentBinTracked
    		restricted
    		when  (WarehouseShipmentLine.ItemLocation.BinTracked
    		and    WarehouseShipmentLineComponent not entered)


    		
    	IsLineOrComponentLotTracked
    		restricted
    		when  (WarehouseShipmentLine.ItemLocation.IsLotTracked
    		and    WarehouseShipmentLineComponent not entered)


    	
    	IsLineOrComponentSerialTracked
    		restricted
    		when  (WarehouseShipmentLine.ItemLocation.IsSerialTracked
    		and    WarehouseShipmentLineComponent not entered)



    	ForLocationStockUOMQuantityDisplay
    		restricted
    		when  (not IsLineOrComponentSerialTracked
			and    HasItemLocationStockUOM)

    	ForQuantityDisplay
    		restricted
    		when  (not IsLineOrComponentSerialTracked
			and    not HasItemLocationStockUOM)

    	IsLineOrComponentMultipleUOMTracked
    		restricted
    		when  (WarehouseShipmentLine.IsMultipleUOMTracked
    		and    WarehouseShipmentLineComponent not entered)



	    ForMultipleUOMTracked
    		restricted
    		when  (WarehouseShipmentLine.IsMultipleUOMTracked
    		and    WarehouseShipmentLineComponent not entered
			and    not HasItemLocationStockUOM)

	    ForNonMultipleUOMTracked
    		restricted
    		when  (WarehouseShipmentLineComponent not entered
			and   (not WarehouseShipmentLine.IsMultipleUOMTracked
			or     HasItemLocationStockUOM)) 

		IsLineOrComponentCatchWeightItem
			restricted
			when  (WarehouseShipmentLine.IsCatchWeightItem
			and    WarehouseShipmentLineComponent not entered)


			
		IsLineUDITracked
			restricted
			when  (WarehouseShipmentLine.LineType.InventoriedItem
			and    WarehouseShipmentLine.ItemLocation.IsUDITracked
			and    WarehouseShipmentLineComponent not entered)

		IsLineFromRequisition
			restricted
			when (WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions
			and   RequisitionLineRel exists
			and   not RequisitionLineRel.CreatePurchaseOrder)

		IsLineComponentBinTracked
			restricted
			when (WarehouseShipmentLineComponent.ItemLocation.BinTracked)
			
		IsLineComponentLotTracked
			restricted
			when (WarehouseShipmentLineComponent entered
			and   WarehouseShipmentLineComponent.ItemLocation.IsLotTracked)
		
		IsLineComponentSerialTracked
			restricted
			when (WarehouseShipmentLineComponent entered
			and  WarehouseShipmentLineComponent.ItemLocation.IsSerialTracked)
		
		IsLineComponentMultipleUOMTracked
			restricted
			when (WarehouseShipmentLineComponent entered
			and   WarehouseShipmentLineComponent.IsMultipleUOMTracked)
		
		IsLineComponentCatchWeightItem		
			restricted
			when (WarehouseShipmentLineComponent entered
			and   WarehouseShipmentLineComponent.Item.IsCatchWeightItem)
		
		IsCatchWeightQuantityOutOfTolerance
			restricted
			when (CatchWeightQuantity entered
			and   DerivedCatchWeightVariancePercent > WarehouseShipmentLine.Item.CatchWeightVariancePercent)

		IsLotExpired
			restricted
			when  (WarehouseShipmentLineDetail.Lot entered
			and    WarehouseShipmentLineDetail.Lot.ExpiredItems)

		IsLotWithinExpiration
			restricted
			when (WarehouseShipmentLineDetail.Lot entered
			and   WarehouseShipmentLineDetail.Lot.LotExpirationDate entered
			and   Company.DaysPriorToExpiringLots entered
			and   current corporate date >= DerivedDatePriorToExpiringLot)


		HasItemLocationStockUOM
			when (WarehouseShipmentLine.HasItemLocationStockUOM)

		IsWarehouseStorageLocation								
			when (InventoryLocation.UseAsWarehouseLocation)		

		DisplayExpirationDetails
			restricted
			when (not IsLineUDITracked
			and   (WarehouseShipmentLine.ItemLocation.IsBinTrackedAndLotTrackedWarehouseItem
			or     WarehouseShipmentLine.ItemLocation.IsLotTracked))

		LotExpiredWarning
			when (ItemLotRel.ExpiredItems)

		LotNearExpiryWarning
			when (ItemLotRel.ItemsAboutToExpire)

	Field Rules
		WarehouseShipmentLineDetail	
			if (not LocalCreateFromPicklist)			
				constraint (WarehouseShipmentLine.LineType.InventoriedItem)
					"CannotAssignDetail;Item<WarehouseShipmentLine.Item>IsNotInventoriedItemForLine<WarehouseShipmentLine>"		
				
				if (WarehouseShipmentLineComponent entered)					
					if (WarehouseShipmentLineComponent.Item.IsCatchWeightItem)
						WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.TransactionUOM
					else
						WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLineComponent.Item.StockUOM
				else
					if (WarehouseShipmentLine.Item.IsCatchWeightItem)
						WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.TransactionUOM
					else
					if (HasItemLocationStockUOM)
						WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.Item.StockUOM
					else
						if (not WarehouseShipmentLine.IsMultipleUOMTracked)
							WarehouseShipmentLineDetail.UnitOfMeasure = WarehouseShipmentLine.TransactionUOM
				
				include AssignItemLotAndSublot

				if (IsNotPlainCatchWeightOrOnlySerialItem)

					
					if (!WarehouseShipmentLine.IsOnlyLotTrackedAtIssue)
						constraint (StockOnHandDetailRel exist)
							"StockOnHandDetailDoesNotExistForItem<WarehouseShipmentLine.Item>ForLine<WarehouseShipmentLine>"			
				
				if (WarehouseShipmentLineComponent entered)
					if (WarehouseShipmentLineComponent.ItemLocation.IsLotTracked)
						constraint (WarehouseShipmentLineDetail.Lot entered)
							"LotIsRequired;Item<WarehouseShipmentLine.Item>IsLotTracked"			
						
						if (WarehouseShipmentLineComponent.ItemLocation.LotTracked.LotRequiredAtReceipt)

							constraint (StockOnHandDetailRel exists)
								"LotDoesNotExistForLine<WarehouseShipmentLine>"
								
							constraint (not ItemLotRel.LotOnHold)
								"CannotAssignLotForLine<WarehouseShipmentLine>Component<WarehouseShipmentLineComponent>Item<WarehouseShipmentLineComponent.Item>;Lot<WarehouseShipmentLineDetail.Lot>IsOnHold"
								
					else
						constraint (WarehouseShipmentLineDetail.Lot not entered)
							"CannotEnterLot;Item<WarehouseShipmentLine.Item>IsNotLotTrackedForLine<WarehouseShipmentLine>"				
					
					if (WarehouseShipmentLineComponent.ItemLocation.IsSerialTracked)
						
						constraint (WarehouseShipmentLineDetail.Serial entered)
							"SerialNumberIsRequiredForLine<WarehouseShipmentLine>;Item<WarehouseShipmentLine.Item>IsSerialTracked"
						
						if (WarehouseShipmentLineComponent.ItemLocation.SerialTracked.SerialRequiredAtIssue)
							constraint (LineOrComponentItemSerialNumberRel not exist)
								"SerialAlreadyExistForItem<WarehouseShipmentLineComponent.Item>Line<WarehouseShipmentLine>Component<WarehouseShipmentLineComponent>"				
						else
							constraint (LineOrComponentItemSerialNumberRel exists)
								"SerialNumberDoesNotExistForItem<WarehouseShipmentLineComponent.Item>ForLine<WarehouseShipmentLine>Component<WarehouseShipmentLineComponent>"		
							
							if (!CopyDetails)	
								constraint (OtherShipmentLineComponentDetailAllocatedSerialRel not exists)
									"CannotAllocate;SerialNumberForItem<WarehouseShipmentLineComponent.Item>IsAlreadyAllocated"
					else
						constraint (WarehouseShipmentLineDetail.Serial not entered)
							"CannotEnterSerialNumber;Item<WarehouseShipmentLine.Item>IsNotSerialTrackedForLine<WarehouseShipmentLine>"	
				else
					if (WarehouseShipmentLine.ItemLocation.IsLotTracked)
						constraint (WarehouseShipmentLineDetail.Lot entered)
							"LotIsRequired;Item<WarehouseShipmentLine.Item>IsLotTracked"			
						
						if (WarehouseShipmentLine.ItemLocation.LotTracked.LotRequiredAtReceipt)
							constraint (StockOnHandDetailRel exists)
								"LotDoesNotExistForLine<WarehouseShipmentLine>"
							
							constraint (!WarehouseShipmentLineDetail.Lot.LotOnHold)
								"CannotAssignLotForLine<WarehouseShipmentLine>;Lot<WarehouseShipmentLineDetail.Lot>IsOnHold"								
					else
						constraint (WarehouseShipmentLineDetail.Lot not entered)
							"CannotEnterLot;Item<WarehouseShipmentLine.Item>IsNotLotTrackedForLine<WarehouseShipmentLine>"				
										
					if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
						constraint (WarehouseShipmentLineDetail.Serial entered)
							"SerialNumberIsRequiredForLine<WarehouseShipmentLine>;Item<WarehouseShipmentLine.Item>IsSerialTracked"
						
						if (WarehouseShipmentLine.ItemLocation.SerialTracked.SerialRequiredAtIssue)
							constraint (WarehouseShipmentLineDetail.Serial not exist)
								"SerialAlreadyExistForItem<WarehouseShipmentLine.Item>Line<WarehouseShipmentLine>"				
						else
							constraint (WarehouseShipmentLineDetail.Serial exists)
								"SerialNumberDoesNotExistForItem<WarehouseShipmentLine.Item>ForLine<WarehouseShipmentLine>"		
							
							if (!CopyDetails)
								constraint (OtherWarehouseShipmentLineDetailAllocatedSerialRel not exists)
									"CannotAllocate;SerialNumberForItem<WarehouseShipmentLine.Item>IsAlreadyAllocated"												
					else
						constraint (WarehouseShipmentLineDetail.Serial not entered)
							"CannotEnterSerialNumber;Item<WarehouseShipmentLine.Item>IsNotSerialTrackedForLine<WarehouseShipmentLine>"	
				
				if (WarehouseShipmentLineDetail.Bin.BinType entered)
					while (TempCounter1 < 9)
						TempCounter1 += 1
						if (Company.BinTypeArray.BinTypeGroup[TempCounter1].BinType = WarehouseShipmentLineDetail.Bin.BinType)
							constraint (Company.BinTypeArray.BinTypeGroup[TempCounter1].AllowsIssue)
								"Bin<WarehouseShipmentLineDetail.Bin>DoesNotAllowIssues"					
			
			
		WarehouseDemand
			default to WarehouseShipment.WarehouseDemand
				
		UOMMultiplier
			if (WarehouseShipmentLine.Item.IsCatchWeightItem)
				default to WarehouseShipmentLine.TransactionUOMMultiplier
			else
			if (HasItemLocationStockUOM)
				default to 1

		Quantity
			required
				"QuantityIsRequiredForLine<WarehouseShipmentLine>"						

			if (IsLineComponentSerialTracked	
			or  WarehouseShipmentLine.IsSerialTracked)
				force default to 1
			
		UpdateDate
			default to current timestamp
		
								
    Sets

        Set2
            indexed
            Sort Order
                Company
                InventoryLocation
                WarehouseShipment
                WarehouseShipmentLineDetail.Bin
                WarehouseShipmentLineDetail.Lot
                WarehouseShipmentLineDetail.Sublot
                WarehouseShipmentLineDetail.Serial
                WarehouseShipmentLineDetail.UnitOfMeasure
                WarehouseShipmentLine
				WarehouseShipmentLineComponent
				
		SOHSet
			duplicates
			Sort Order
				Company
				InventoryLocation
				WarehouseShipmentLineDetail.UnitOfMeasure
				WarehouseShipmentLineDetail.Bin
                WarehouseShipmentLineDetail.Lot
                WarehouseShipmentLineDetail.Sublot

	Actions
		Create is a Create Action		
			valid when (IsValidForUpdateOrDelete)
			Action Rules
				constraint (IsValidForUpdateOrDelete)
					"CannotCreateWarehouseShipmentLineDetailForLine<WarehouseShipmentLine>;ShipmentIn<WarehouseShipment.Status>State"		
				
				if (WarehouseShipmentLineComponent entered)			
					constraint (!WarehouseShipmentLineComponent.IsPlainCatchWeightItem)
						"CannotCreateDetailForItem<WarehouseShipmentLineComponent.Item>OnLine<WarehouseShipmentLine>Component<WarehouseShipmentLineComponent>;ItemIsOnlyCatchWeightItem"				
				else
					constraint (!WarehouseShipmentLine.IsPlainCatchWeightItem)
						"CannotCreateDetailForItem<WarehouseShipmentLine.Item>OnLine<WarehouseShipmentLine>;ItemIsOnlyCatchWeightItem"				
																
				constraint (WarehouseShipmentLine.WarehouseShipmentLineAuditRel not exist)
					"CannotCreateDetailsForLine<WarehouseShipmentLine>;LineIsBackordered/Voided" 
				
				constraint (WarehouseShipmentLine.LineType.InventoriedItem)
					"CannotAssignDetailForLine<WarehouseShipmentLine>;Item<WarehouseShipmentLine.Item>IsNotInventoried"			
				
				if (not LocalCreateFromPicklist)
					constraint (not IsLineUDITracked or not IsLineFromRequisition)
						"CannotCreateBecauseItemIsUDITracked;UseUDIDetails"
					
				include UpdateOverrideTransientInTransactionUOM


			Exit Rules				
				include UpdateStockOnHandDetailAndLineComponent
				
				if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
					invoke UpdateStatusBinLocation ItemSerialNumberRel
						invoked.PrmStatus = 1
						

				if (WarehouseShipmentLine.IsTrackedByContainer)

					invoke Create MobileSupplyChainShipmentDetailTracking
						invoked.Company                              = Company
						invoked.InventoryLocation                    = InventoryLocation
						invoked.WarehouseShipment                    = WarehouseShipment
						invoked.WarehouseShipmentLine                = WarehouseShipmentLine
						invoked.WarehouseShipmentLineComponent		 = WarehouseShipmentLineComponent
						invoked.WarehouseShipmentLineDetail			 = WarehouseShipmentLineDetail
						invoked.TrackingNumber						 = TransientTrackingNumber
						invoked.Quantity							 = Quantity
						invoked.UnitOfMeasure						 = WarehouseShipmentLineDetail.UnitOfMeasure


		SystemCreate is a Create Action
			restricted
			valid when (IsValidForUpdateOrDelete)
			Action Rules
				constraint (IsValidForUpdateOrDelete)
					"CannotCreateWarehouseShipmentLineDetailForLine<WarehouseShipmentLine>;ShipmentIn<WarehouseShipment.Status>State"		
				
				constraint (WarehouseShipmentLine.WarehouseShipmentLineAuditRel not exist)
					"CannotCreateDetailsForLine<WarehouseShipmentLine>;LineIsBackordered/Voided" 
				
				constraint (WarehouseShipmentLine.LineType.InventoriedItem)
					"CannotAssignDetailForLine<WarehouseShipmentLine>;Item<WarehouseShipmentLine.Item>IsNotInventoried"			
					
			Exit Rules				
				include UpdateStockOnHandDetailAndLineComponent
				
				if (WarehouseShipmentLine.ItemLocation.IsSerialTracked)
					invoke UpdateStatusBinLocation ItemSerialNumberRel
						invoked.PrmStatus = 1
				else
					if (WarehouseShipmentLineComponent.ItemLocation.IsSerialTracked)
						invoke UpdateStatusBinLocation ComponentSerialNumberRel
							invoked.PrmStatus = 1

				
		Update is an Update Action
			valid when (IsValidForUpdateOrDelete)

			Local Fields
				LocalTrackingNumber is a TrackingNumber

			Action Rules
				constraint (IsValidForUpdateOrDelete)
					"CannotUpdateWarehouseShipmentLineDetailForLine<WarehouseShipmentLine>;ShipmentIn<WarehouseShipment.Status>State"		
				
				constraint (WarehouseShipmentLine.WarehouseShipmentLineAuditRel not exist)
					"CannotUpdateDetailsForLine<WarehouseShipmentLine>;LineIsBackordered/Voided"		
				
				constraint (not IsLineUDITracked or not IsLineFromRequisition)
					"CannotUpdateBecauseItemIsUDITracked;UseUDIDetails"	

				include UpdateOverrideTransientInTransactionUOM
				
				if (WarehouseShipmentLine.IsTrackedByContainer)
					if (MSCMShipmentLineDetailTrackingRel exists)
						if (Quantity changed or TransientTrackingNumber changed)
							if (TransientTrackingNumber entered)
								LocalTrackingNumber = TransientTrackingNumber

							invoke Update first MSCMShipmentLineDetailTrackingRel
								invoked.Quantity       = Quantity
								invoked.TrackingNumber = LocalTrackingNumber

					else
						invoke Create MobileSupplyChainShipmentDetailTracking
							invoked.Company                              = Company
							invoked.InventoryLocation                    = InventoryLocation
							invoked.WarehouseShipment                    = WarehouseShipment
							invoked.WarehouseShipmentLine                = WarehouseShipmentLine
							invoked.WarehouseShipmentLineComponent		 = WarehouseShipmentLineComponent
							invoked.WarehouseShipmentLineDetail			 = WarehouseShipmentLineDetail
							invoked.TrackingNumber						 = TransientTrackingNumber
							invoked.Quantity							 = Quantity
							invoked.UnitOfMeasure						 = WarehouseShipmentLineDetail.UnitOfMeasure
			Exit Rules	
				if (Quantity changed
				or  CatchWeightQuantity changed)
					include UpdateStockOnHandDetailAndLineComponent
		

		SystemUpdate is an Update Action
			restricted
			valid when (IsValidForUpdateOrDelete)
			Action Rules
				constraint (IsValidForUpdateOrDelete)
					"CannotUpdateWarehouseShipmentLineDetailForLine<WarehouseShipmentLine>;ShipmentIn<WarehouseShipment.Status>State"		
				
				constraint (WarehouseShipmentLine.WarehouseShipmentLineAuditRel not exist)
					"CannotUpdateDetailsForLine<WarehouseShipmentLine>;LineIsBackordered/Voided"		
				
					
			Exit Rules	
				if (Quantity changed
				or  CatchWeightQuantity changed)
					include UpdateStockOnHandDetailAndLineComponent
						 
		Delete is a Delete Action
			valid when (IsValidForUpdateOrDelete)
			Entrance Rules
				include DeleteEntranceRules
				
				if (WarehouseShipmentLineComponent entered)
					invoke UpdateFromWarehouse WarehouseShipmentLineComponent
						invoked.PrmDetailQuantity = Quantity * -1
					
				constraint (not IsLineUDITracked or not IsLineFromRequisition)
					"CannotDeleteBecauseItemIsUDITracked;UseUDIDetails"	

			Exit Rules
		

		SystemDelete is a Delete Action
			restricted
			valid when (IsValidForUpdateOrDelete)
			Entrance Rules
				include DeleteEntranceRules
					
			Exit Rules		
						
		CreateInventoryTransactionLineDetail is an Instance Action 
			restricted
			Parameters
				PrmInventoryTransaction     is an InventoryTransaction
				PrmTransactionSystemCode	is a  TransactionSystemCode
				PrmInventoryTransactionLine is an InventoryTransactionLine
				
			Action Rules
				LocalInventoryTransaction 			 = PrmInventoryTransaction
				LocalInventoryTransactionLine 		 = PrmInventoryTransactionLine
				LocalTransactionSystemCode			 = PrmTransactionSystemCode
				
				invoke Unreleased.Create InventoryTransactionLineDetail
					fill in fields from this instance
					invoked.TransactionSystemCode	 = LocalTransactionSystemCode 
					invoked.InventoryTransaction	 = LocalInventoryTransaction
					invoked.InventoryTransactionLine = LocalInventoryTransactionLine
					invoked.Item					 = LocalInventoryTransactionLine.Item
					invoked.Bin						 = WarehouseShipmentLineDetail.Bin
					invoked.Lot						 = WarehouseShipmentLineDetail.Lot
					invoked.Sublot					 = WarehouseShipmentLineDetail.Sublot
					invoked.Serial					 = WarehouseShipmentLineDetail.Serial
					if (WarehouseShipmentLine.Item.IsCatchWeightItem)	
						invoked.Quantity				= CatchWeightQuantity
        				invoked.SecondaryQuantity		= Quantity
					if (HasItemLocationStockUOM)
						invoked.Quantity				= QuantityInTransactionUOM
						invoked.UnitOfMeasure			= WarehouseShipmentLine.TransactionUOM
						invoked.UOMMultiplier			= DerivedLocationStockUOMMultiplier
					else
						invoked.UnitOfMeasure			= WarehouseShipmentLineDetail.UnitOfMeasure
					
		Merge is an Instance Action
			restricted
			Action Rules
				for each OtherLinesDetailForMergeRel
					if (WarehouseShipmentLineComponent entered)
						if (WarehouseShipmentLineComponent.Item = each.WarehouseShipmentLineComponent.Item)
							if (WarehouseShipmentLineDetail = each.WarehouseShipmentLineDetail)
								Quantity 			+= each.Quantity
								CatchWeightQuantity	+= each.CatchWeightQuantity
							else
								invoke Create 
									fill in fields from each
									invoked.WarehouseShipment	  			= WarehouseShipment
									invoked.WarehouseShipmentLine 			= WarehouseShipmentLine
									invoked.WarehouseShipmentLineComponent	= each.WarehouseShipmentLineComponent
									invoked.WarehouseShipmentLineDetail		= each.WarehouseShipmentLineDetail
									invoked.CopyDetails						= true					
					else
						if (WarehouseShipmentLine.Item = each.WarehouseShipmentLine.Item)
							if (WarehouseShipmentLineDetail = each.WarehouseShipmentLineDetail)
								Quantity 			+= each.Quantity
								CatchWeightQuantity	+= each.CatchWeightQuantity
							else
								invoke Create 
									fill in fields from each
									invoked.WarehouseShipment	  		= WarehouseShipment
									invoked.WarehouseShipmentLine 		= WarehouseShipmentLine	
									invoked.WarehouseShipmentLineDetail	= each.WarehouseShipmentLineDetail
									invoked.CopyDetails					= true
						
					invoke Delete each 
		
		UpdateQuantities is an Instance Action
			restricted
			Parameters
				PrmQuantity				is a Quantity
				PrmCatchWeightQuantity	is a Quantity
			Action Rules
				Quantity			= PrmQuantity
				CatchWeightQuantity	= PrmCatchWeightQuantity
				include AssignItemLotAndSublot
				invoke UpdateFromWarehouse StockOnHandDetailRel
					invoked.PrmAllocatedQuantity = Quantity - old Quantity 
					invoked.PrmAllocatedCatchWeightQuantity = CatchWeightQuantity - old CatchWeightQuantity
					
		UpdateStockOnHandDetailAllocatedQuantity is an Instance Action
			restricted
			Action Rules
				include AssignItemLotAndSublot
			
				invoke UpdateFromWarehouse StockOnHandDetailRel	
					invoked.PrmAllocatedQuantity 			= Quantity * -1 
					invoked.PrmAllocatedCatchWeightQuantity = CatchWeightQuantity * -1

		DecreaseQuantity is an Instance Action
			restricted
			Parameters
				PrmQuantity			is a Quantity
			Action Rules
				Quantity -= PrmQuantity
				include AssignItemLotAndSublot
				invoke UpdateFromWarehouse StockOnHandDetailRel	
					invoked.PrmAllocatedQuantity = PrmQuantity * -1

		PopulateWarehouseDemandCompany is a Set Action 
			restricted
			run in background
			Instance Selection
				where (WarehouseDemand.DemandCompany not entered)
			Action Rules
				Instance Rules
					WarehouseDemand.DemandCompany = WarehouseShipment.WarehouseDemand.DemandCompany

		Purge is a Purge Action
			restricted
			
