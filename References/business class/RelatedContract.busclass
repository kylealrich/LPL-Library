RelatedContract is a BusinessClass
	owned by po
	prefix is CRCT

	Ontology
		symbolic key is RelatedContract

	Persistent Fields
		RelatedContractType				is Numeric size 2
			States
				ChildContract					value is 11
				ContractInterfaceCreate			value is 10
				ContractInterfaceDistributor	value is 15
				ContractInterfaceUpdate			value is 12
				CopiedToContract                value is 16
				Distributor						value is 3
	 			GroupPurchasingOrganization		value is 4
				Manufacturer					value is 2
				NationalContract                value is 18
				ParentContract					value is 9
				PreviousContract				value is 6
				Project 						value is 7
				RecallNotice					value is 14
				Requisition						value is 13
				S2Contract                      value is 19
				SourcingEvent					value is 5
				Supplier						value is 1
				Template                        value is 17
				VendorAgreement                 value is 8				
		RelatedContractID					is AlphaUpper size 30
		RelatedSupplierName 				is Alpha size 100
		RelatedContractDescription			is Text
		ManufacturerCodeDivision			is a Manufacturer
			default label is "ManufacturerCode_andDivision"
		Supplier
		Vendor
		WorkingContract 					is Boolean
		Company

	Transient Fields
		FromSupplierChange is Boolean

	Local Fields
		LocalWorkingSetToNo is Boolean

  	Field Groups
  		RelatedContractTypeChanges
  			RelatedContractType
  			RelatedContractID
  			RelatedSupplierName
  			RelatedContractDescription
  			ManufacturerCodeDivision
  			Supplier
  			Vendor

  	Conditions
  		IsWorkingContractNumber
  			restricted
  			when (WorkingContract)
  		NoWorkingContractNumber
  			restricted
  			when (!WorkingContract)
  		CannotDelete
  			restricted
  			when (RelatedContractType.SourcingEvent
			or    RelatedContractType.Template
  			or    RelatedContractType.ParentContract
			or    RelatedContractType.ChildContract
			or    RelatedContractType.ContractInterfaceCreate 
			or    IsWorkingContractNumber
  			or    RelatedContractType.ContractInterfaceUpdate
			or    RelatedContractType.S2Contract
			or    RelatedContractType.NationalContract)
  		DisplayOnly
  			restricted
  			when (RelatedContractType.ParentContract
			or    RelatedContractType.ChildContract
  			or    RelatedContractType.Template
			or    RelatedContractType.ContractInterfaceCreate
  			or    RelatedContractType.ContractInterfaceUpdate
			or    RelatedContractType.S2Contract
			or    RelatedContractType.NationalContract)
  		FromNotice
  			restricted
  			when (RelatedContractType.RecallNotice)
  		FromEvent
  			restricted
  			when (RelatedContractType.SourcingEvent)
		FromInterfaceDistributor
			restricted
			when (RelatedContractType.ContractInterfaceDistributor)
  		FromContractInterface
  			restricted
  			when (RelatedContractType.ContractInterfaceCreate
  			or    RelatedContractType.ContractInterfaceUpdate)
  		FromContractInterfaceWorkingContract
			restricted 
			when (RelatedContractType.GroupPurchasingOrganization)
		FromPreviousContract
  			restricted
  			when (RelatedContractType.PreviousContract)
  		FromCopiedContract
  			restricted
  			when (RelatedContractType.CopiedToContract)
  		FromRequisition
  			restricted
  			when (RelatedContractType.Requisition)
		FromChildContract
			restricted
			when (RelatedContractType.ChildContract)
		FromParentContract
			restricted
			when (RelatedContractType.ParentContract)
		FromTemplate 
			restricted 
			when (RelatedContractType.Template
			and  !ChildContractRel.ProposalTemplate)
		FromProposalTemplate 
			restricted 
			when (RelatedContractType.Template
			and   ChildContractRel.ProposalTemplate)
		FromNationalContract 
			restricted 
			when (RelatedContractType.NationalContract)
		FromS2Contract 
			restricted 
			when (RelatedContractType.S2Contract)
		ContractClosed
			when (Contract.ContractStatus.Closed)

  	Derived Fields

		ViewContracts is a MessageField
			"ViewContract"

		ImportCreateMessage is a MessageField
			restricted
			"Created"

		ImportUpdateMessage is a MessageField
			restricted
			"Updated"

		ImportMessage is a ConditionalField
			type is Alpha size 14
			if (RelatedContractType.ContractInterfaceCreate)
				ImportCreateMessage
			else
				ImportUpdateMessage

		NoticeCoordinatorEmail is a DerivedField
			type is Alpha size 100
			return NoticeRel.RecallCoordinator.RecallUser.EmployeeWorkEmailAddress

		DerivedGPOContractNumber is a DerivedField
			type is like GPOContractNumber
			return ContractImportRel.GPOContractNumber

  	Sets
  		ByRelatedID
  			duplicates
  			Sort Order
  				ContractGroup
  				Contract
  				RelatedContractID
				RelatedContractType

		ByContractType
			duplicates
			Sort Order
  				ContractGroup
  				Contract
				RelatedContractType

  		ByRelatedWorkingContract
  			duplicates
  			Sort Order
  				ContractGroup
  				Contract
  				WorkingContract
				RelatedContractType

		ByID
			duplicates
			Sort Order
				ContractGroup
				RelatedContractID
				RelatedContractType

  	Relations
  		HasAnotherWorkingContractRel
  			one-to-many relation to RelatedContract
  			Field Mapping uses symbolic key
  				related.ContractGroup  = ContractGroup
  				related.Contract       = Contract
  			Instance Selection
  				where (related.WorkingContract
  				and    related.RelatedContractID not = RelatedContractID)

  		SourcingEventRel
  			one-to-one relation to SourcingEvent
  			Field Mapping uses ByEvent
  				related.SourcingEvent = RelatedContractID
  				related.Company       = Company
  		NoticeRel
  			one-to-one relation to RecallNotice
  			Field Mapping uses symbolic key
  				related.RecallGroup    = ContractGroup
  				related.RecallNotice   = RelatedContractID
  		RequisitionRel
  			one-to-one relation to Requisition
  			Field Mapping uses symbolic key
  				related.Company              = Company
  				related.Requisition		     = RelatedContractID
  		ContractImportRel
  			one-to-one relation to ContractImport
  			Field Mapping uses ByContract
  				related.ContractGroup  = ContractGroup
  				related.ContractImport = RelatedContractID

		ContractImportWorkingContractRel 
			one-to-many relation to ContractImport 
			Field Mapping uses ByWorkingContract
  				related.ContractGroup  = ContractGroup
  				related.WorkingContractID = RelatedContractID				
		ChildContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract        = RelatedContractID

  		ContractImportDistributorRel
  			one-to-one relation to ContractImportDistributor
  			Field Mapping uses symbolic key
  				related.ContractGroup    			= ContractGroup
  				related.ContractImport   			= RelatedContractID
  				related.ContractImportDistributor 	= Supplier

  		PreviousContractRel
  			one-to-many relation to Contract
  			Field Mapping uses symbolic key
  				related.ContractGroup	= ContractGroup
  				related.Contract 		= RelatedContractID
			Instance Selection
				where (RelatedContractType.PreviousContract)
				
  		CopiedToContractRel
  			one-to-many relation to Contract
  			Field Mapping uses symbolic key
  				related.ContractGroup	= ContractGroup
  				related.Contract 		= RelatedContractID
			Instance Selection
				where (RelatedContractType.CopiedToContract)			

  	Field Rules
  		RelatedContractID
  			required

		Vendor
			if (Vendor entered and Supplier entered)
				constraint (Vendor = Supplier.Vendor)
					"Vendor<Vendor>IsNotAssignedToThisSupplier;TheCorrectVendorIs<Supplier.Vendor>"

		RelatedContractType
			if (RelatedContractType changed)
				if (old RelatedContractType.ContractInterfaceCreate or old RelatedContractType.ContractInterfaceUpdate)
					cannot be changed

	Actions
		Create is a Create Action
			valid when (Contract.NotClosed)
			Action Rules
				constraint (!RelatedContractType.ParentContract)
					"CannotCreateRelatedContractThatIsParentContractType"
				constraint (!RelatedContractType.ChildContract)
					"CannotCreateRelatedContractThatIsChildContractType"
				constraint (!RelatedContractType.ContractInterfaceCreate)
					"CannotCreateRelatedContractThatIsContractInterfaceType"
				constraint (!RelatedContractType.ContractInterfaceUpdate)
					"CannotCreateRelatedContractThatIsContractInterfaceType"
				if (!Contract.ContractSource.Event)
					constraint (!RelatedContractType.SourcingEvent)
						"SourcingEventRelatedContractTypeIsReservedForContractsCreatedFromStrategicSourcing"
				constraint (!RelatedContractType.SourcingEvent)
					"CannotCreateRelatedContractThatIsSourcingEventType"
				constraint (!RelatedContractType.Requisition)
					"CannotCreateRelatedContractThatIsRequisitionType"
				constraint (!RelatedContractType.Template)
					"CannotCreateRelatedContractThatIsTemplateType"
				if (IsWorkingContractNumber)
					if (!Contract.DraftOrAddendumOrAmendment)
						constraint (ContractGroup.AllowActiveUpdate)
							"CannotUpdateWorkingContract;ContractMustBeInDraft,Addendum,OrAmendmentState"
					if (HasAnotherWorkingContractRel exists)
						confirmation required
							"Warning;ExistingWorkingContractWillChange;DoYouWantToContinue?"
						invoke UpdateRelatedContract HasAnotherWorkingContractRel
			Exit Rules
				if (IsWorkingContractNumber)
					invoke FastUpdate Contract
						invoked.WorkingContractID   = RelatedContractID
						invoked.WorkingContractType = RelatedContractType

					invoke FastUpdateWithoutEdits Contract
						invoked.UpdateContractSearchDocument = true

		CreateRelatedContract is a Create Action
			restricted

		Update is an Update Action
			valid when (Contract.NotClosed)
			Action Rules
				if (RelatedContractType changed)
					constraint (!RelatedContractType.SourcingEvent)
						"SourcingEventRelatedContractTypeIsReservedForContractsCreatedFromStrategicSourcing"

				if (RelatedContractType changed)
					constraint (!RelatedContractType.ContractInterfaceCreate)
						"CannotChangeRelatedContractTypeToContractInterfaceCreate"
					constraint (!RelatedContractType.ContractInterfaceUpdate)
						"CannotChangeRelatedContractTypeToContractInterfaceUpdate"
					constraint (!RelatedContractType.ParentContract)
						"CannotChangeRelatedContractTypeToParentContract"
					constraint (!RelatedContractType.SourcingEvent)
						"CannotChangeRelatedContractTypeToSourcingEvent"
					constraint (!RelatedContractType.ChildContract)
						"CannotChangeRelatedContractTypeToChildContract"
					constraint (!RelatedContractType.Requisition)
						"CannotChangeRelatedContractTypeToRequisition"
					constraint (!RelatedContractType.Template)
						"CannotChangeRelatedContractTypeToTemplate"						

				if (old RelatedContractType.SourcingEvent)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForSourcingEventTypeRelatedContracts"

				if (RelatedContractType.ParentContract)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForParentContractTypeRelatedContracts"

				if (RelatedContractType.ChildContract)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForChildContractTypeRelatedContracts"

				if (RelatedContractType.ContractInterfaceCreate
				or  RelatedContractType.ContractInterfaceUpdate
				or  RelatedContractType.S2Contract
				or  RelatedContractType.NationalContract)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForContractInterfaceTypeRelatedContracts"

				if (RelatedContractType.Requisition)
					constraint (RelatedContractTypeChanges not changed)
						"OnlyTheWorkingContractOptionCanBeChangedForRequisitionTypeRelatedContracts"

				if (old RelatedContractType.ParentContract)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForParentContractTypeRelatedContracts"

				if (old RelatedContractType.ChildContract)
					if (!FromSupplierChange)
						constraint (RelatedContractTypeChanges not changed)
							"OnlyTheWorkingContractOptionCanBeChangedForChildContractTypeRelatedContracts"

				if (IsWorkingContractNumber)
					if (WorkingContract changed)
						if (!Contract.DraftOrAddendumOrAmendment)
							constraint (ContractGroup.AllowActiveUpdate)
								"CannotUpdateWorkingContract;ContractMustBeInDraft,Addendum,OrAmendmentState"					
					if (HasAnotherWorkingContractRel exists)
						confirmation required
							"Warning;ExistingWorkingContractWillChange;DoYouWantToContinue?"
						invoke UpdateRelatedContract HasAnotherWorkingContractRel

				if (WorkingContract changed
				and WorkingContract = false)
					LocalWorkingSetToNo = true

			Exit Rules
				if (IsWorkingContractNumber)
					invoke FastUpdate Contract
						invoked.WorkingContractID   = RelatedContractID
						invoked.WorkingContractType = RelatedContractType

				if (LocalWorkingSetToNo)
					invoke FastUpdate Contract
						invoked.WorkingContractID   = Contract
						invoked.WorkingContractType = blank

				invoke FastUpdateWithoutEdits Contract
					invoked.UpdateContractSearchDocument = true

		UpdateRelatedContract is an Instance Action
			restricted
			Action Rules
				WorkingContract = false

		DeleteParentFromContract is a Delete Action
			restricted

		Delete is a Delete Action
			valid when (!CannotDelete)

		Purge is a Purge Action
			restricted

