GLCommit is a BusinessClass
	owned by GeneralLedger
	prefix is GLGOT
	default label is "GlobalLedgerCommit"
    
    Ontology
    	symbolic key is GLCommit

    Patterns

    	
    Context Fields
    	SearchDateRange				is a DateRange    	
		SearchAccountingEntity
		SearchAccountingUnit
		SearchSystemCode
		SearchAccount
		SearchProject
		SearchFinanceDimension1
		SearchFinanceDimension2
		SearchFinanceDimension3
		SearchFinanceDimension4
		SearchFinanceDimension5
		SearchFinanceDimension6
		SearchFinanceDimension7
		SearchFinanceDimension8
		SearchFinanceDimension9
		SearchFinanceDimension10
		SearchGroup						is a GLCommit group
#ifdef module ap
		VendorGroup
		ItemGroup		




#endif		


    Persistent Fields
        FinanceEnterpriseGroup
    	AccountingEntity
    	LastCommitmentGroup			is AlphaUpper size 30				//populated with "TRUE" if CodeBlock of Released GLCommit was changed; set to spaces on re-release of PO
    	System						is a GeneralLedgerSystemCode
		EntityYearPeriod			is a GeneralLedgerCalendarPeriod	
    	FinanceCodeBlock
		DimensionCode
		CurrencyCode				is a FromCurrency
		TransactionAmount			is a CurrencyAmount
			precision is CurrencyCode.NumberOfDecimals
		UnitsAmount
		TransactionDate				
		ReportCurrencyAmount		is a FinanceCurrencyAmount
		Status						is Numeric 1
			States
				Unreleased	value is 0			
				History		value is 1
				Released    value is 3
		CreateDate					is Date
		CloseDate					is Date		

		OriginatingTransaction		is BusinessObjectReference
		IsContractManagement		is Boolean
		HeaderUniqueID				is like UniqueID
		LastCurrAmountDiff			is a CurrencyAmountsGroup
		LastTransactionAmount		is like CurrencyAmount	

		POCommitOrigPeriod			is a GeneralLedgerCalendarPeriod
		POCommitOrigID				is BusinessObjectReference		
		POCommitTransactionAmount	is an InternationalAmount
			precision is CurrencyCode.NumberOfDecimals
		POCommitUnitsAmount			is a UnitsAmount
		POCommitCurrencyAmount		is a FinanceCurrencyAmount
		POCommitOrigTranAmount		is an InternationalAmount
			precision is CurrencyCode.NumberOfDecimals
		POCommitOrigUnitsAmount		is a UnitsAmount
		POCommitOrigCurrencyAmount	is a FinanceCurrencyAmount
		HasPriorYearPOCommit		is Boolean
		GLEncumbranceReference		is AlphaUpper 60
		SkipBudgetRebuild			is Boolean
				    			
	Derived Fields
		DerivedEntityYearPeriod			is a DerivedField
			type is Year
			restricted
			return EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear		
	
		DerivedEntityCalendarPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			return first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
		
        SubsystemDerivedDifferenceAmount is a DerivedField
        	type is like InternationalAmount
        	restricted
#ifdef module po
        	if (GLCommit.System = "PO")
        		return OriginatingTransaction(PurchaseOrderLineDistribution).DerivedDifferenceAmount
#endif
#ifdef module ap
			else
        	if (GLCommit.System = "AP")
        		return OriginatingTransaction(PayablesInvoiceDistribution).DerivedPODifferenceAmount        	
#endif        
        DerivedCurrencyExchangeRate is a DerivedField
        	type is Decimal size 31.15
        	restricted
#ifdef module po
        	if (GLCommit.System = "PO")
        		return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrder.EnteredCurrencyConversionRate
#endif
#ifdef module ap
			else
        	if (GLCommit.System = "AP")
        		return OriginatingTransaction(PayablesInvoiceDistribution).PayablesInvoice.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate        	
#endif         	
        
        DerivedScenario                is a DerivedField
            type is like Scenario
			restricted
            if (GLCommit.System = "RQ")
                return FinanceEnterpriseGroup.CommitmentsScenario
            return FinanceEnterpriseGroup.EncumbrancesScenario
            
        DerivedDisplayPeriod is a DerivedField
        	type is Date
        	return GLCalendarRel.Date date
        	
        DerivedEmployee is a DerivedField
        	type is like Employee
        	if (System = "GM"
        	and OriginatingTransaction.BusinessClassName = "ProjectAssignmentLabor")
        		return OriginatingTransaction(ProjectAssignmentLabor).Employee
        	return blank

#ifdef module ap
		DerivedVendor					is a DerivedField
			type is like Vendor
			default label is "Vendor"
			if (GLCommit.System = "AP")
				return OriginatingTransaction(PayablesInvoiceDistribution).Vendor
			else
				if (GLCommit.System = "RQ")
					return OriginatingTransaction(RequisitionLineDistribution).RequisitionLine.Vendor
				else
					if (GLCommit.System = "PO"
					and !IsContractManagement)
						return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.Vendor
					else
						if (IsContractManagement
						and OriginatingTransaction.BusinessClassName = "ContractSpread")
							return OriginatingTransaction(ContractSpread).Contract.Vendor
						else
							if (IsContractManagement
							and OriginatingTransaction.BusinessClassName = "ContractLineDistributionSpread")
								return OriginatingTransaction(ContractLineDistributionSpread).Contract.Vendor
							else
								if (IsContractManagement
								and OriginatingTransaction.BusinessClassName = "ContractLineDistribution")
									return OriginatingTransaction(ContractLineDistribution).Contract.Vendor
								else
									if (IsContractManagement
									and OriginatingTransaction.BusinessClassName = "Contract")
										return OriginatingTransaction(Contract).Contract.Vendor
									return blank

		DerivedVendorName					is a DerivedField
			type is like VendorName
			default label is "VendorName"
			if (GLCommit.System = "RQ")
				return OriginatingTransaction(RequisitionLineDistribution).RequisitionLine.Vendor.VendorName
			else
				if (GLCommit.System = "PO"
				and !IsContractManagement)
					return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.Vendor.VendorName
				else
					if (IsContractManagement
					and OriginatingTransaction.BusinessClassName = "ContractSpread")
						return OriginatingTransaction(ContractSpread).Contract.Vendor.VendorName
					else
						if (IsContractManagement
						and OriginatingTransaction.BusinessClassName = "ContractLineDistributionSpread")
							return OriginatingTransaction(ContractLineDistributionSpread).Contract.Vendor.VendorName
						else
							if (IsContractManagement
							and OriginatingTransaction.BusinessClassName = "ContractLineDistribution")
								return OriginatingTransaction(ContractLineDistribution).Contract.Vendor.VendorName
							else
								if (IsContractManagement
								and OriginatingTransaction.BusinessClassName = "Contract")
									return OriginatingTransaction(Contract).Contract.Vendor.VendorName
								return blank

		DerivedItem					is a DerivedField
			type is like Item
			default label is "Item"
			if (GLCommit.System = "AP")
				return OriginatingTransaction(PayablesInvoiceDistribution).DerivedItem
			else
				if (GLCommit.System = "RQ")
					return OriginatingTransaction(RequisitionLineDistribution).RequisitionLine.Item
				else
					if (GLCommit.System = "PO"
					and !IsContractManagement)
						return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.Item
					else
						if (IsContractManagement
						and OriginatingTransaction.BusinessClassName = "ContractSpread")
							return blank
						else
							if (IsContractManagement
							and OriginatingTransaction.BusinessClassName = "ContractLineDistributionSpread")
								return OriginatingTransaction(ContractLineDistributionSpread).ContractLine.ItemNumber
							else
								if (IsContractManagement
								and OriginatingTransaction.BusinessClassName = "ContractLineDistribution")
									return OriginatingTransaction(ContractLineDistribution).ContractLine.ItemNumber




								return blank
			
		RejectInvoiceMessage			is a StringField
			type is AlphaUpper 40
			restricted
			"RejectInvoice"
			"_"
			DerivedDocumentNumber
				
		UpdateAmtServiceMessage			is a StringField
			type is AlphaUpper 40
			restricted
			"UpdAmtServ"
			"_"
			System
			"_"
			DerivedDocumentNumber
				
		DerivedDocumentNumber is a DerivedField
			type is Alpha 22
			default label is "DocumentNumber"
			if (GLCommit.System = "AP")
				return OriginatingTransaction(PayablesInvoiceDistribution).Invoice
			else
				if (GLCommit.System = "RQ")
					return OriginatingTransaction(RequisitionLineDistribution).Requisition
				else
					if (GLCommit.System = "RJ")
						return OriginatingTransaction(RecurringJournalEncumbrance).RecurringJournalControl						
					else
						if (GLCommit.System = "PO"
						and !IsContractManagement)
							return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrder
						else
							if (IsContractManagement
							and OriginatingTransaction.BusinessClassName = "ContractSpread")
								return OriginatingTransaction(ContractSpread).Contract
							else
								if (IsContractManagement
								and OriginatingTransaction.BusinessClassName = "ContractLineDistributionSpread")
									return OriginatingTransaction(ContractLineDistributionSpread).Contract
								else
									if (IsContractManagement
									and OriginatingTransaction.BusinessClassName = "ContractLineDistribution")
										return OriginatingTransaction(ContractLineDistribution).Contract
									else
										if (IsContractManagement
										and OriginatingTransaction.BusinessClassName = "Contract")
											return OriginatingTransaction(Contract).Contract
										else
											if (GLCommit.System = "GM")
												return "LaborDistribution"
											else
												if (GLCommit.System = "GL")
													return OriginatingTransaction(GeneralLedgerTransaction).GeneralLedgerJournalControl						
											
		DerivedLineNumber is a DerivedField
			type is like LineNumber
			default label is "LineNumber"
			if (GLCommit.System = "RQ")
				return OriginatingTransaction(RequisitionLineDistribution).RequisitionLine
			else
				if (GLCommit.System = "PO"
				and !IsContractManagement)
					return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine
				else
					if (IsContractManagement
					and OriginatingTransaction.BusinessClassName = "ContractLineDistributionSpread")
						return OriginatingTransaction(ContractLineDistributionSpread).ContractLine
					else
						if (IsContractManagement
						and OriginatingTransaction.BusinessClassName = "ContractLineDistribution")
							return OriginatingTransaction(ContractLineDistribution).ContractLine
						else
							if (GLCommit.System = "AP")
								return OriginatingTransaction(PayablesInvoiceDistribution).PurchaseOrderLine
							return blank

		MatchesAccountingEntitySearch	is a DerivedField
			type is Boolean
			if ((SearchAccountingEntity entered
			and  AccountingEntity within SearchAccountingEntity.AccountingEntityGroup)
			or   !SearchAccountingEntity entered)
				return true
				
		MatchesAccountingUnitSearch	is a DerivedField
			type is Boolean
			if (!SearchAccountingUnit entered)
				return true
			else



				if (FinanceCodeBlock.AccountingUnit within SearchAccountingUnit.AccountingUnitGroup)
					return true
					
		MatchesPOSearch				is a DerivedField
			type is Boolean
			if  (SearchSystemCode entered
			and  System = "PO"
			and  System within SearchSystemCode.SystemCodeGroup)
				return true
					
		MatchesSystemCodeSearch		is a DerivedField
			type is Boolean
			if ((SearchSystemCode entered
			and  System within SearchSystemCode.SystemCodeGroup)
			or   !SearchSystemCode entered)
				return true
				
		MatchesProjectSearch		is a DerivedField
			type is Boolean
			if ((SearchProject entered
			and  FinanceCodeBlock.Project within SearchProject.ProjectGroup)
			or   !SearchProject entered)
				return true
					
		MatchesFinDim1Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension1 entered
			and  FinanceCodeBlock.FinanceDimension1 within SearchFinanceDimension1.FinanceDimension1Group)
			or   !SearchFinanceDimension1 entered)
				return true
					
		MatchesFinDim2Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension2 entered
			and  FinanceCodeBlock.FinanceDimension2 within SearchFinanceDimension2.FinanceDimension2Group)
			or   !SearchFinanceDimension2 entered)
				return true
					
		MatchesFinDim3Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension3 entered
			and  FinanceCodeBlock.FinanceDimension3 within SearchFinanceDimension3.FinanceDimension3Group)
			or   !SearchFinanceDimension3 entered)
				return true
					
		MatchesFinDim4Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension4 entered
			and  FinanceCodeBlock.FinanceDimension4 within SearchFinanceDimension4.FinanceDimension4Group)
			or   !SearchFinanceDimension4 entered)
				return true
					
		MatchesFinDim5Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension5 entered
			and  FinanceCodeBlock.FinanceDimension5 within SearchFinanceDimension5.FinanceDimension5Group)
			or   !SearchFinanceDimension5 entered)
				return true
					
		MatchesFinDim6Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension6 entered
			and  FinanceCodeBlock.FinanceDimension6 within SearchFinanceDimension6.FinanceDimension6Group)
			or   !SearchFinanceDimension6 entered)
				return true
					
		MatchesFinDim7Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension7 entered
			and  FinanceCodeBlock.FinanceDimension7 within SearchFinanceDimension7.FinanceDimension7Group)
			or   !SearchFinanceDimension7 entered)
				return true
					
		MatchesFinDim8Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension8 entered
			and  FinanceCodeBlock.FinanceDimension8 within SearchFinanceDimension8.FinanceDimension8Group)
			or   !SearchFinanceDimension8 entered)
				return true
					
		MatchesFinDim9Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension9 entered
			and  FinanceCodeBlock.FinanceDimension9 within SearchFinanceDimension9.FinanceDimension9Group)
			or   !SearchFinanceDimension9 entered)
				return true
					
		MatchesFinDim10Search		is a DerivedField
			type is Boolean
			if ((SearchFinanceDimension10 entered
			and  FinanceCodeBlock.FinanceDimension10 within SearchFinanceDimension10.FinanceDimension10Group)
			or   !SearchFinanceDimension10 entered)
				return true
					
		MatchesAccountSearch		is a DerivedField
			type is Boolean
			if (!SearchAccount entered)
				return true
			else 



				if (FinanceCodeBlock.GeneralLedgerChartAccount within SearchAccount.AccountGroup)
					return true
					




















				
		TransactionWithinDateRange	is a DerivedField
			type is Boolean	
			if ((SearchDateRange entered
			and  TransactionDate within SearchDateRange)
			or   !SearchDateRange entered)
				return true


		DerivedAPInvoiceType is a DerivedField
			type is like MatchProcessType
			if (GLCommit.System = "AP")
				return OriginatingTransaction(PayablesInvoiceDistribution).DerivedInvoiceType

		DerivedAmountToCommit is a DerivedField
        	type is like InternationalCost
			if (GLCommit.System = "PO")
				return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.AmountToCommit
				
#endif

		DerivedDistributionAmount is a DerivedField
        	type is like InternationalCost
#ifdef module po
			if (GLCommit.System = "PO")
				return OriginatingTransaction(PurchaseOrderLineDistribution).DerivedDistributionAmount
#endif
#ifdef module ap

#endif
#ifndef module po
			return TransactionAmount 
#endif

		DerivedCurrencyTable 		is a DerivedField
        	type is like CurrencyTable
#ifdef module po
			if (GLCommit.System = "PO")
				return OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrder.CurrencyTable
#endif
#ifdef module ap

#endif
	Local Fields
		LocalPostingDate			is Date
		LocalEndDate				is a GeneralLedgerCalendarPeriod
		LocalSystem					is like GeneralLedgerSystemCode
		LocalTranAmount				is a CurrencyAmount
		LocalCurrAmount				is a CurrencyAmountsGroup	
		LocalGLTAmount				is a FinanceCurrencyAmount
		LocalUnitsAmount			is a UnitsAmount
		LocalBudgetEntity			is like AccountingEntity	
		LocalBudgetLedger			is like Ledger				
		LocalGLDate					is Date
		LocalHeaderUniqueID			is like UniqueID
		LocalDateChanged			is Boolean
		LocalUpdateGLTotal			is Boolean	
		LocalScenario				is a Scenario
		LocalGeneralLedgerTotal		is a GeneralLedgerTotal
		AsyncId						is a AsyncActionRequest
        TotalGroup					is a GLCommitGLTotalGroup
        LocalFinanceCodeBlock2		is a FinanceCodeBlock
		LocalEntityYearPeriod2      is a GeneralLedgerCalendarPeriod
		LocalSystem2				is like GeneralLedgerSystemCode
		LocalCurrencyCode2			is like Currency
		LocalDimensionCode2			is like DimensionCode
		LocalFinanceEnterpriseGroup is like FinanceEnterpriseGroup	
		LocalFESAmount				is like InternationalAmount
		LocalProjectContract		is like Project
		LocalPartialCancel          is Boolean
		LocalRolloverType			is Numeric 1
		LocalPriorYearPeriod		is like GeneralLedgerCalendarPeriod				

	Transient Fields
		TransientServiceAmount		 is a CurrencyAmount
		TransientServiceReportCurrencyAmount is a FinanceCurrencyAmount

		TransientUpdateGLTotOnCreate is Boolean
		TransientCodeBlock			 is a TransactionCodeBlock
		TransientTransactionDate	 is a ExchangeDate
		TransientDocumentCompany	 is like Company
		TransBusinessObjectRef	 	 is BusinessObjectReference
		TransientCurrencyAmount      is a CurrencyAmount
		TransientDistribCanceled	 is Boolean
		PrmAllowRebuild              is Boolean
		PrmSkipForceRebuild		 	 is Boolean
		TransientFromContract		 is Boolean		
		TransientMigrateAsReleased	 is Boolean		
		TransientSkipRebuild	     is Boolean     
		TransientEmployee			 is a Employee
			derive value from DerivedEmployee
			default label is "Employee"
		TransientFromJournalize		 is Boolean
		BypassActiveCodeBlockEdit					
#ifdef module ap
		TransientDocument			 is Alpha 22
			default label is "DocumentNumber"
			derive value from DerivedDocumentNumber
		TransientVendor				 is like Vendor
			derive value from DerivedVendor
			default label is "Vendor"
		TransientItem				 is like Item
			derive value from DerivedItem
			default label is "Item"
#endif
				
	Conditions

		NonPOOpenEncumbrances
			when (Status.Unreleased
			or    (Status.Released
			and   (!System			= "PO"
			and	   !System			= "RQ"))
			or   (LastCurrAmountDiff entered))
			
		ProcessedYearEndEncumbrances
			when (POCommitOrigPeriod entered)
			
		ProjectReportCurrencyOneExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount1")
		ProjectReportCurrencyTwoExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount2")					
		ProjectReportCurrencyThreeExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount3")					
		ProjectReportCurrencyFourExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount4")					
		ProjectReportCurrencyFiveExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetReportAmount5")
		ProjectReportCurrencyProjectExists
			restricted		
			when (ProjectRel.DynamicMeasure = "NetProjectAmount")
		IsManualEncumbrance
			restricted
			when (GLEncumbranceReference entered)
			
		ValidSystemsToReport
			restricted

			when ((!Status = Status.History)
			and	  (System	= "PO"
			or	   System	= "AP"
			or     System	= "RJ"
			or     System	= "GL"
			or	   System	= "RQ"))
								
        ProjectUsed
        	restricted
        	when (actor.context.FinanceEnterpriseGroup.ProjectLabel entered)
 		ReportCurrencyOneExists
			restricted
			when (actor.context.FinanceEnterpriseGroup.ReportCurrencyOneEntered)
		ReportCurrencyTwoExists
			restricted
			when (actor.context.FinanceEnterpriseGroup.ReportCurrencyTwoEntered)
		ReportCurrencyThreeExists
			restricted
			when (actor.context.FinanceEnterpriseGroup.ReportCurrencyThreeEntered)
		ReportCurrencyFourExists
			restricted
			when (actor.context.FinanceEnterpriseGroup.ReportCurrencyFourEntered)
		ReportCurrencyFiveExists		
			restricted
			when (FinanceEnterpriseGroup.ReportCurrencyFiveEntered)
        	
        PayrollEncumbrance
        	restricted
        	when (System = "PR")

		FESIncludedSystem
			restricted
			when (System = "RQ"
			or    System = "PO"
			or    System = "AP"
			or    System = "CB")
			
#ifdef module ap			
		POLineOpen
			restricted
			when (System = "PO"
			and   !IsContractManagement
			and  (OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.Closed.No))
				
		POLineClosed
			restricted
			when (System = "PO"
			and  (!IsContractManagement
			and  (!OriginatingTransaction(PurchaseOrderLineDistribution).PurchaseOrderLine.Closed.No)))

		AmountMismatch				
			when (TransactionAmount != OriginatingTransaction(PurchaseOrderLineDistribution).DerivedDistributionAmount)

		ValidForList				
			when (not Status.History
			and   System = "PO"
			and   AmountMismatch)

		IsValidForCommitmentReport
			restricted
			when (ValidSystemsToReport
			and	  MatchesAccountingEntitySearch
			and	  MatchesAccountingUnitSearch
			and	  MatchesSystemCodeSearch
			and	  MatchesProjectSearch
			and	  MatchesFinDim1Search
			and	  MatchesFinDim2Search
			and	  MatchesFinDim3Search
			and	  MatchesFinDim4Search
			and	  MatchesFinDim5Search
			and	  MatchesFinDim6Search
			and	  MatchesFinDim7Search
			and	  MatchesFinDim8Search
			and	  MatchesFinDim9Search
			and	  MatchesFinDim10Search
			and	  MatchesAccountSearch
			and	  TransactionWithinDateRange)


#endif			

 		WithinSearchGroup
 			restricted
 			when (SearchGroup not entered
 			or    this instance within SearchGroup)

		WithinTransactionDateRange			
			restricted
			when (SearchDateRange not entered
			or   (SearchDateRange entered
			and   TransactionDate within SearchDateRange))
		
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or (actor.context.FinanceEnterpriseGroup = ""))


		PendingFESGLCommitments
			when (FinanceCodeBlock.Project.ParentDisplayContract entered
			and	  FinanceCodeBlock.Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled	
			and   !FinanceCodeBlock.Project.ExcludeFromFES
			and   FinanceCodeBlock.FinanceDimension2 != blank
			and   Status.Released
			and   FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)


		AllowDocumentMaintenanceDuringBudgetTemplateProcessPending
			restricted
			when (config.AllowDocumentMaintenanceDuringProcessPending not= false)	

	Relations
				
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < LocalPostingDate		
				and	   related.PeriodType.EndDate)
				
		GLCalendarRel
			one-to-one relation to GeneralLedgerCalendarPeriod
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GeneralLedgerCalendarPeriod	= EntityYearPeriod
	
		EntityLedgerPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= FinanceCodeBlock.ToAccountingEntity
				related.Ledger						= FinanceCodeBlock.Ledger
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	not < LocalEndDate)
								
		EntityLedgerCurrentPeriodRel
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= FinanceCodeBlock.ToAccountingEntity
				related.Ledger						= FinanceCodeBlock.Ledger
				related.GeneralLedgerClosePeriod	= FinanceCodeBlock.ToAccountingEntity.CurrentPeriod

								
        GeneralLedgerTotalRel
            one-to-one relation to GeneralLedgerTotal
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
                related.Scenario										= DerivedScenario
                related.AccountingEntity								= FinanceCodeBlock.ToAccountingEntity
                related.GeneralLedgerTotal.Ledger						= FinanceCodeBlock.Ledger
                related.GeneralLedgerTotal.System						= System
                related.GeneralLedgerTotal.Currency						= CurrencyCode
                related.GeneralLedgerTotal.EntityYearPeriod				= LocalEndDate			
                related.GeneralLedgerTotal.AccountingUnit				= FinanceCodeBlock.AccountingUnit
                related.GeneralLedgerTotal.GeneralLedgerChartAccount	= FinanceCodeBlock.GeneralLedgerChartAccount
                related.GeneralLedgerTotal.Project						= FinanceCodeBlock.Project
                related.GeneralLedgerTotal.DimensionCode				= DimensionCode
                related.GeneralLedgerTotal.PrimaryLedger				= FinanceCodeBlock.Ledger
                
        GeneralLedgerTotalRel2
            one-to-one relation to GeneralLedgerTotal
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
                related.Scenario										= LocalScenario
                related.AccountingEntity								= LocalFinanceCodeBlock2.ToAccountingEntity
                related.GeneralLedgerTotal.Ledger						= LocalFinanceCodeBlock2.Ledger
                related.GeneralLedgerTotal.System						= LocalSystem2
                related.GeneralLedgerTotal.Currency						= LocalCurrencyCode2
                related.GeneralLedgerTotal.EntityYearPeriod				= LocalEntityYearPeriod2
                related.GeneralLedgerTotal.AccountingUnit				= LocalFinanceCodeBlock2.AccountingUnit
                related.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock2.GeneralLedgerChartAccount
                related.GeneralLedgerTotal.Project						= LocalFinanceCodeBlock2.Project
                related.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode2
                related.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock2.Ledger
                				
        GeneralLedgerTotalRel3
            one-to-one relation to GeneralLedgerTotal
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup							= FinanceEnterpriseGroup
                related.Scenario										= DerivedScenario
                related.AccountingEntity								= FinanceCodeBlock.ToAccountingEntity
                related.GeneralLedgerTotal.Ledger						= FinanceCodeBlock.Ledger
                related.GeneralLedgerTotal.System						= System
                related.GeneralLedgerTotal.Currency						= CurrencyCode
                related.GeneralLedgerTotal.EntityYearPeriod				= DerivedEntityCalendarPeriod
                related.GeneralLedgerTotal.AccountingUnit				= FinanceCodeBlock.AccountingUnit
                related.GeneralLedgerTotal.GeneralLedgerChartAccount	= FinanceCodeBlock.GeneralLedgerChartAccount
                related.GeneralLedgerTotal.Project						= FinanceCodeBlock.Project
                related.GeneralLedgerTotal.DimensionCode				= DimensionCode
                related.GeneralLedgerTotal.PrimaryLedger				= FinanceCodeBlock.Ledger

    	GLCommitDocumentRel
    		one-to-one relation to GLCommitDocument
    		Field Mapping uses ByHeaderObjectReference
    			related.HeaderObjectReference = TransBusinessObjectRef
    			
    	GLDocumentUniqueIDRel
    		one-to-one relation to GLCommitDocument
    		Field Mapping uses ByHeaderUniqueID
    			related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
    			related.HeaderUniqueID		   = LocalHeaderUniqueID
    			    								    			    								
    	GLCommitHistoryRel
    		one-to-many relation to GLCommitHistory
    		Field Mapping uses ByGLCommit
    			related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
    			related.GLCommit						= GLCommit
    			
        BudgetEntityLedgerRel
			one-to-one relation to BudgetEntityLedger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= LocalBudgetEntity
				related.Ledger						= LocalBudgetLedger
                   
    	PriorYearPoCommitmentRel
    		one-to-one relation to GLCommit
    		Field Mapping uses ByOriginatingTransaction
    			related.OriginatingTransaction			= POCommitOrigID
    							
		GLCommitAllActiveRel
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.HeaderUniqueID				= HeaderUniqueID
			Instance Selection
				where (related.Status.Unreleased
				or     related.Status.Released
				and   (!related.GLCommit				= GLCommit))
				
		GLCommitRecsExistRel
			one-to-many relation to GLCommit
			Field Mapping uses BySystemAndHeaderUniqueID
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.HeaderUniqueID				= HeaderUniqueID
			
		BudgetTemplateGroupTotalRel
			one-to-many relation to BudgetTemplateGroupTotal
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.BudgetTemplateGroupTotal.BudgetEditGroup 	= LocalHeaderUniqueID
			
		ProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Project			       				= FinanceCodeBlock.Project
			
		FixitGeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < TransactionDate		
				and	   related.PeriodType.EndDate)
				
		GLEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByGLEncumbranceReference
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GLEncumbranceReference		= GLEncumbranceReference
				related.System						= "GL"
			
		OldGLEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByGLEncumbranceReference
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.GLEncumbranceReference		= old GLEncumbranceReference
				related.System						= "GL"

		ProjectFundingSourceRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= FinanceCodeBlock.Project.ParentDisplayContractRel.Project
				related.FinanceDimension2		= FinanceCodeBlock.FinanceDimension2	

		ProjectFundingSourceFESRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= LocalProjectContract
				related.FinanceDimension2		= FinanceCodeBlock.FinanceDimension2

		GeneralLedgerTotalCubeRel
            one-to-one relation to AnalyticCube
            Field Mapping uses AnalyticCubeSet
                related.BusinessClass = "GeneralLedgerTotal"

	Sets
	
		ByFinanceEnterpriseGroup
			Sort Order
				FinanceEnterpriseGroup
				GLCommit
	
		ByOriginatingTransaction
			Sort Order
				OriginatingTransaction
				
		ByStatus
			Sort Order
				FinanceEnterpriseGroup
				Status
				LastCurrAmountDiff.FunctionalAmount
				GLCommit

		ByProjectAndSystemCurrent
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				FinanceCodeBlock.Project
				System 
			Instance Selection
				where (Status.Released)
				
		BySystemAndStatus				
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				System 
				Status

		BySystemAndHeaderUniqueID
			Sort Order
				FinanceEnterpriseGroup
				HeaderUniqueID
				GLCommit
				
		ByAccountingEntity
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				TransactionDate
							
		ByAccountingEntityAndSystem
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				System
			Instance Selection
				where (PayrollEncumbrance)
				
		ByGLEncumbranceReference
			duplicates
			Instance Selection
				where (IsManualEncumbrance)
			Sort Order
				FinanceEnterpriseGroup
				GLEncumbranceReference
				System
				GLCommit
	
		ByGeneralLedgerTotalOrder
			duplicates
			Sort Order
				FinanceEnterpriseGroup
				FinanceCodeBlock.ToAccountingEntity
				EntityYearPeriod				
				FinanceCodeBlock.Ledger
				System
				CurrencyCode
				FinanceCodeBlock.AccountingUnit
				FinanceCodeBlock.GeneralLedgerChartAccount
				FinanceCodeBlock.Project
				DimensionCode


	Rule Blocks
		FindGLYearPeriod
			LocalEndDate				= DerivedEntityCalendarPeriod
			if (DerivedEntityCalendarPeriod entered
			and !first EntityLedgerPeriodRel.BackPostPeriod)
				while (!first EntityLedgerPeriodRel.OpenPeriod)
					LocalPostingDate = first GeneralLedgerCalendarPeriodRel.Date + 1
					LocalEndDate	 = DerivedEntityCalendarPeriod
			if (!EntityLedgerPeriodRel exists
			or  !DerivedEntityCalendarPeriod entered)
				LocalEndDate	 = EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
				LocalPostingDate = EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date

			
		CreateGLCommitDocument
			if (!GLCommitDocumentRel exists)
				LocalSystem			 = System
				if (IsContractManagement)
		            LocalSystem		 = "CM"
		        if (LocalSystem		 = "PR")
		        	TransBusinessObjectRef.BusinessClassName	= "GLCommitRunGroup"
		        	TransBusinessObjectRef.BusinessObjectKey	= GLCommit.HeaderUniqueID
				invoke Create GLCommitDocument
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
	                invoked.HeaderObjectReference	= TransBusinessObjectRef
	                invoked.HeaderUniqueID			= GLCommit.HeaderUniqueID
	                invoked.OriginatingSystem		= LocalSystem
	                invoked.Status					= 0
						
		CreateCommitmentHistory
			invoke Create GLCommitHistory
				fill in fields from this instance
				invoked.GLCommit				 = GLCommit
				invoked.HeaderUniqueID			 = GLCommit.HeaderUniqueID
				invoked.Status					 = GLCommit.Status

		CreateBudgetTemplateGroupTotals

			initialize	LocalCurrAmount
			LocalCurrAmount.FunctionalAmount 	= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
			LocalBudgetEntity					= FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger					= FinanceCodeBlock.Ledger
			LocalHeaderUniqueID					= HeaderUniqueID
			if (BudgetEntityLedgerRel exists)
				if (LocalPartialCancel)
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.AlternateAmount  = (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.AlternateAmount2 = (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.AlternateAmount3 = (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount)					
						invoked.PrmReportAmounts.ProjectAmount    = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.ReportAmount1    = (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.ReportAmount2    = (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.ReportAmount3    = (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.ReportAmount4    = (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount)
						invoked.PrmReportAmounts.ReportAmount5    = (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount)
						invoked.PrmAllowRebuild                   = PrmAllowRebuild
						invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference
				else 
				if (LastCommitmentGroup entered)
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount + LastCurrAmountDiff.FunctionalAmount)
						invoked.PrmReportAmounts.AlternateAmount  = (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount)
						invoked.PrmReportAmounts.AlternateAmount2 = (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount2)
						invoked.PrmReportAmounts.AlternateAmount3 = (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount3)					
						invoked.PrmReportAmounts.ProjectAmount    = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount + LastCurrAmountDiff.ProjectAmount)
						invoked.PrmReportAmounts.ReportAmount1    = (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount1)
						invoked.PrmReportAmounts.ReportAmount2    = (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount2)
						invoked.PrmReportAmounts.ReportAmount3    = (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount3)
						invoked.PrmReportAmounts.ReportAmount4    = (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount4)
						invoked.PrmReportAmounts.ReportAmount5    = (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount5)
						invoked.PrmAllowRebuild                   = PrmAllowRebuild
						invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference
				else
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount  = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount2 = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount3 = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ProjectAmount    = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount1    = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount2    = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount3    = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount4    = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount5    = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						invoked.PrmAllowRebuild                   = PrmAllowRebuild
						invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID

		ReduceOldCodeBlockBudgetTemplate
			initialize	LocalCurrAmount
			LocalBudgetEntity					= FinanceCodeBlock.ToAccountingEntity	
			LocalBudgetLedger					= FinanceCodeBlock.Ledger 				
			LocalPostingDate	= TransactionDate
			LocalEndDate		= EntityYearPeriod		
			LocalHeaderUniqueID	= HeaderUniqueID
			if (POCommitOrigPeriod entered)				
				LocalEndDate	= POCommitOrigPeriod	

			if (BudgetEntityLedgerRel exists)
				LocalCurrAmount.FunctionalAmount = ((ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount + LastCurrAmountDiff.FunctionalAmount) * -1)
				LocalCurrAmount.AlternateAmount  = ((ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount) * -1)
				LocalCurrAmount.AlternateAmount2 = ((ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount2) * -1)
				LocalCurrAmount.AlternateAmount3 = ((ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount + LastCurrAmountDiff.AlternateAmount3) * -1)
				LocalCurrAmount.ProjectAmount    = ((ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount + LastCurrAmountDiff.ProjectAmount) * -1)
				LocalCurrAmount.ReportAmount1    = ((ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount1) * -1)
				LocalCurrAmount.ReportAmount2    = ((ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount2) * -1)
				LocalCurrAmount.ReportAmount3    = ((ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount3) * -1)
				LocalCurrAmount.ReportAmount4    = ((ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount4) * -1)
				LocalCurrAmount.ReportAmount5    = ((ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount + LastCurrAmountDiff.ReportAmount5) * -1)
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= FinanceCodeBlock	
					invoked.PrmEndDate					= LocalEndDate		
					invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
					invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
					invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
					invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)
					invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
					invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
					invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
					invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
					invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
					invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
					invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID
							
		ReduceOldCurrencyBudgetTemplate
			initialize	LocalCurrAmount
			LocalBudgetEntity					= FinanceCodeBlock.ToAccountingEntity	
			LocalBudgetLedger					= FinanceCodeBlock.Ledger 				
			LocalPostingDate	= TransactionDate
			LocalEndDate		= EntityYearPeriod		
			LocalHeaderUniqueID	= HeaderUniqueID
			if (POCommitOrigPeriod entered)				
				LocalEndDate	= POCommitOrigPeriod	

			if (BudgetEntityLedgerRel exists)
				LocalCurrAmount.FunctionalAmount = (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
				LocalCurrAmount.AlternateAmount  = (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
				LocalCurrAmount.AlternateAmount2 = (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
				LocalCurrAmount.AlternateAmount3 = (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ProjectAmount    = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ReportAmount1    = (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ReportAmount2    = (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ReportAmount3    = (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ReportAmount4    = (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ReportAmount5    = (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= FinanceCodeBlock	
					invoked.PrmEndDate					= LocalEndDate		
					invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
					invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
					invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
					invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)
					invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
					invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
					invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
					invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
					invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
					invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
					invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID

		ReduceBudgetTemplateGroupTotals

			initialize	LocalCurrAmount
			LocalBudgetEntity					= old FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger					= old FinanceCodeBlock.Ledger			
			LocalPostingDate		= TransactionDate		
			LocalEndDate			= EntityYearPeriod		
			LocalHeaderUniqueID	= HeaderUniqueID
			if (LocalDateChanged)					
				LocalPostingDate	= old TransactionDate	
				LocalEndDate		= old EntityYearPeriod	
			if (POCommitOrigPeriod entered)					
				LocalEndDate	= POCommitOrigPeriod		
			if (BudgetEntityLedgerRel exists)
				LocalCurrAmount.FunctionalAmount = (old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
				LocalCurrAmount.AlternateAmount  = (old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  * -1)
				LocalCurrAmount.AlternateAmount2 = (old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
				LocalCurrAmount.AlternateAmount3 = (old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)
				LocalCurrAmount.ProjectAmount    = (old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount    * -1)
				LocalCurrAmount.ReportAmount1    = (old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount    * -1)
				LocalCurrAmount.ReportAmount2    = (old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount    * -1)
				LocalCurrAmount.ReportAmount3    = (old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount    * -1)
				LocalCurrAmount.ReportAmount4    = (old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount    * -1)
				LocalCurrAmount.ReportAmount5    = (old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount    * -1)
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= old HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= old FinanceCodeBlock
					invoked.PrmEndDate					= LocalEndDate			
					invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
					invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
					invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
					invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)
					invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
					invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
					invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
					invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
					invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
					invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
					invoked.PrmAllowRebuild                   = PrmAllowRebuild	
					invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID

		BackoutOldDiffAmount
			initialize LocalCurrAmount
			LocalBudgetEntity					= FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger					= FinanceCodeBlock.Ledger
			LocalHeaderUniqueID					= HeaderUniqueID
			if (!LastTransactionAmount = 0)
				LocalCurrAmount.FunctionalAmount = (LastCurrAmountDiff.FunctionalAmount * -1)
				LocalCurrAmount.AlternateAmount  = (LastCurrAmountDiff.AlternateAmount  * -1)
				LocalCurrAmount.AlternateAmount2 = (LastCurrAmountDiff.AlternateAmount2 * -1)
				LocalCurrAmount.AlternateAmount3 = (LastCurrAmountDiff.AlternateAmount3 * -1)
				LocalCurrAmount.ToFunctionalAmount = (LastCurrAmountDiff.ToFunctionalAmount * -1)
				LocalCurrAmount.ToAlternateAmount  = (LastCurrAmountDiff.ToAlternateAmount  * -1)
				LocalCurrAmount.ToAlternateAmount2 = (LastCurrAmountDiff.ToAlternateAmount2 * -1)
				LocalCurrAmount.ToAlternateAmount3 = (LastCurrAmountDiff.ToAlternateAmount3 * -1)
				LocalCurrAmount.ProjectAmount    = (LastCurrAmountDiff.ProjectAmount    * -1)
				LocalCurrAmount.ReportAmount1    = (LastCurrAmountDiff.ReportAmount1    * -1)
				LocalCurrAmount.ReportAmount2    = (LastCurrAmountDiff.ReportAmount2    * -1)
				LocalCurrAmount.ReportAmount3    = (LastCurrAmountDiff.ReportAmount3    * -1)
				LocalCurrAmount.ReportAmount4    = (LastCurrAmountDiff.ReportAmount4    * -1)
				LocalCurrAmount.ReportAmount5    = (LastCurrAmountDiff.ReportAmount5    * -1)

				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
					invoked.PrmEndDate					= LocalEndDate		
					invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
					invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
					invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
					invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)
					invoked.PrmReportAmounts.ToFunctionalAmount = (LocalCurrAmount.ToFunctionalAmount)
					invoked.PrmReportAmounts.ToAlternateAmount  = (LocalCurrAmount.ToAlternateAmount)
					invoked.PrmReportAmounts.ToAlternateAmount2 = (LocalCurrAmount.ToAlternateAmount2)
					invoked.PrmReportAmounts.ToAlternateAmount3 = (LocalCurrAmount.ToAlternateAmount3)
					invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
					invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
					invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
					invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
					invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
					invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
					invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID
					
		ReturnBudgetedFunds

			initialize	LocalCurrAmount
			LocalBudgetEntity					= old FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger					= old FinanceCodeBlock.Ledger
			LocalPostingDate	= TransactionDate		
			LocalEndDate		= EntityYearPeriod		
			LocalHeaderUniqueID	= HeaderUniqueID
			if (POCommitOrigPeriod entered)				
				LocalEndDate	= POCommitOrigPeriod	
			if (BudgetEntityLedgerRel exists)
				LocalCurrAmount.FunctionalAmount = ((old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount + old LastCurrAmountDiff.FunctionalAmount) * -1)
				LocalCurrAmount.AlternateAmount  = ((old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  + old LastCurrAmountDiff.AlternateAmount) * -1)
				LocalCurrAmount.AlternateAmount2 = ((old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount + old LastCurrAmountDiff.AlternateAmount2) * -1)
				LocalCurrAmount.AlternateAmount3 = ((old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount + old LastCurrAmountDiff.AlternateAmount3) * -1)

				LocalCurrAmount.ToFunctionalAmount = ((old ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount + old LastCurrAmountDiff.ToFunctionalAmount) * -1)
				LocalCurrAmount.ToAlternateAmount  = ((old ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  + old LastCurrAmountDiff.ToAlternateAmount) * -1)
				LocalCurrAmount.ToAlternateAmount2 = ((old ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount + old LastCurrAmountDiff.ToAlternateAmount2) * -1)
				LocalCurrAmount.ToAlternateAmount3 = ((old ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount + old LastCurrAmountDiff.ToAlternateAmount3) * -1)

				LocalCurrAmount.ProjectAmount    = ((old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount + old LastCurrAmountDiff.ProjectAmount) * -1)
				LocalCurrAmount.ReportAmount1    = ((old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount + old LastCurrAmountDiff.ReportAmount1) * -1)
				LocalCurrAmount.ReportAmount2    = ((old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount + old LastCurrAmountDiff.ReportAmount2) * -1)
				LocalCurrAmount.ReportAmount3    = ((old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount + old LastCurrAmountDiff.ReportAmount3) * -1)
				LocalCurrAmount.ReportAmount4    = ((old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount + old LastCurrAmountDiff.ReportAmount4) * -1)
				LocalCurrAmount.ReportAmount5    = ((old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount + old LastCurrAmountDiff.ReportAmount5) * -1)
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= old HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= old FinanceCodeBlock
					invoked.PrmEndDate						= LocalEndDate		
					invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
					invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
					invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
					invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)

					invoked.PrmReportAmounts.ToFunctionalAmount = (LocalCurrAmount.ToFunctionalAmount)
					invoked.PrmReportAmounts.ToAlternateAmount  = (LocalCurrAmount.ToAlternateAmount)
					invoked.PrmReportAmounts.ToAlternateAmount2 = (LocalCurrAmount.ToAlternateAmount2)
					invoked.PrmReportAmounts.ToAlternateAmount3 = (LocalCurrAmount.ToAlternateAmount3)

					invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
					invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
					invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
					invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
					invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
					invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
					invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference
					
			initialize	LocalTranAmount
			initialize	LocalGLTAmount
			initialize	LocalUnitsAmount
			initialize	LocalHeaderUniqueID
		
			LocalTranAmount				 	= (old TransactionAmount * -1)
			LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount = (old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
			LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount  = (old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
			LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount = (old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
			LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount = (old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

			LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount = (old ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount  = (old ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount = (old ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount = (old ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

			LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
			LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount    = (old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
			LocalUnitsAmount				= (old UnitsAmount * -1)
            invoke PostTransactions GeneralLedgerTotalRel
                invoked.TransactionAmount	+= LocalTranAmount
                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
	                invoked.FunctionalAmount	+= LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount		+= LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount2	+= LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount
	                invoked.AlternateAmount3	+= LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount
	            else
	                invoked.FunctionalAmount	+= LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount		+= LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount2	+= LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount
	                invoked.AlternateAmount3	+= LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount
                invoked.ProjectAmount		+= LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount
                invoked.ReportAmount1		+= LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount
                invoked.ReportAmount2		+= LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount
                invoked.ReportAmount3		+= LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount
                invoked.ReportAmount4		+= LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount
                invoked.ReportAmount5		+= LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount
                invoked.UnitsAmount			+= LocalUnitsAmount
 				if (EntityYearPeriod.PeriodType.BeginningBalance)
					invoked.UpdateChangesOnly	= true
                
		CreateDiffCommitAmount



					
			LocalBudgetEntity					= old FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger					= old FinanceCodeBlock.Ledger
			LocalHeaderUniqueID					= HeaderUniqueID


			initialize LocalCurrAmount
			LocalCurrAmount.FunctionalAmount = (PrmChangedCurrAmount.FunctionalAmount - old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount)
			LocalCurrAmount.AlternateAmount  = (PrmChangedCurrAmount.AlternateAmount - old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount)
			LocalCurrAmount.AlternateAmount2 = (PrmChangedCurrAmount.AlternateAmount2 - old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount)
			LocalCurrAmount.AlternateAmount3 = (PrmChangedCurrAmount.AlternateAmount3 - old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount)

			LocalCurrAmount.ToFunctionalAmount = (PrmChangedCurrAmount.ToFunctionalAmount - old ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount)
			LocalCurrAmount.ToAlternateAmount  = (PrmChangedCurrAmount.ToAlternateAmount - old ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount)
			LocalCurrAmount.ToAlternateAmount2 = (PrmChangedCurrAmount.ToAlternateAmount2 - old ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount)
			LocalCurrAmount.ToAlternateAmount3 = (PrmChangedCurrAmount.ToAlternateAmount3 - old ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount)

			LocalCurrAmount.ProjectAmount    = (PrmChangedCurrAmount.ProjectAmount - old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount)
			LocalCurrAmount.ReportAmount1    = (PrmChangedCurrAmount.ReportAmount1 - old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount)
			LocalCurrAmount.ReportAmount2    = (PrmChangedCurrAmount.ReportAmount2 - old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount)
			LocalCurrAmount.ReportAmount3    = (PrmChangedCurrAmount.ReportAmount3 - old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount)
			LocalCurrAmount.ReportAmount4    = (PrmChangedCurrAmount.ReportAmount4 - old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount)
			LocalCurrAmount.ReportAmount5    = (PrmChangedCurrAmount.ReportAmount5 - old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount)
			if (BudgetEntityLedgerRel exists)
				if (!LocalCurrAmount.FunctionalAmount = 0
				and !PrmTransientFromContract)
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= old HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= old FinanceCodeBlock
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
						invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
						invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
						invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)

						invoked.PrmReportAmounts.ToFunctionalAmount = (LocalCurrAmount.ToFunctionalAmount)
						invoked.PrmReportAmounts.ToAlternateAmount  = (LocalCurrAmount.ToAlternateAmount)
						invoked.PrmReportAmounts.ToAlternateAmount2 = (LocalCurrAmount.ToAlternateAmount2)
						invoked.PrmReportAmounts.ToAlternateAmount3 = (LocalCurrAmount.ToAlternateAmount3)

						invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
						invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
						invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
						invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
						invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
						invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
						invoked.PrmAllowRebuild                   = PrmAllowRebuild
						invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference

			initialize	LocalHeaderUniqueID
				
		ReduceGLTotalByQuantity

			initialize	LocalTranAmount
			initialize	LocalGLTAmount
			initialize	LocalUnitsAmount
			LocalPostingDate	= TransactionDate		
			LocalEndDate	    = EntityYearPeriod		
			LocalTranAmount				 	= ((old TransactionAmount - TransactionAmount) * -1)
			LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount = ((old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount  = ((old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  - ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount = ((old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount = ((old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount) * -1)

			LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount = ((old ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount  = ((old ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  - ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount = ((old ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount = ((old ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount) * -1)

			LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount) * -1)
			LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount    = ((old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount) * -1)
			LocalUnitsAmount				= (UnitsAmount * -1)
	
            invoke PostTransactions GeneralLedgerTotalRel
                invoked.TransactionAmount	+= LocalTranAmount
                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
	                invoked.FunctionalAmount	+= LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount		+= LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount2	+= LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount
	                invoked.AlternateAmount3	+= LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount
	            else
	                invoked.FunctionalAmount	+= LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount		+= LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount
	                invoked.AlternateAmount2	+= LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount
	                invoked.AlternateAmount3	+= LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount
                invoked.ProjectAmount		+= LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount
                invoked.ReportAmount1		+= LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount
                invoked.ReportAmount2		+= LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount
                invoked.ReportAmount3		+= LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount
                invoked.ReportAmount4		+= LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount
                invoked.ReportAmount5		+= LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount
                invoked.UnitsAmount			+= LocalUnitsAmount

				invoked.FinanceDimension1	= FinanceCodeBlock.FinanceDimension1
				invoked.FinanceDimension2	= FinanceCodeBlock.FinanceDimension2
				invoked.FinanceDimension3	= FinanceCodeBlock.FinanceDimension3
				invoked.FinanceDimension4	= FinanceCodeBlock.FinanceDimension4
				invoked.FinanceDimension5	= FinanceCodeBlock.FinanceDimension5
				invoked.FinanceDimension6	= FinanceCodeBlock.FinanceDimension6
				invoked.FinanceDimension7	= FinanceCodeBlock.FinanceDimension7
				invoked.FinanceDimension8	= FinanceCodeBlock.FinanceDimension8
				invoked.FinanceDimension9	= FinanceCodeBlock.FinanceDimension9
				invoked.FinanceDimension10	= FinanceCodeBlock.FinanceDimension10
				invoked.PeriodEndingDate	= EntityYearPeriod.Date

				if (EntityYearPeriod.PeriodType.BeginningBalance)
					invoked.UpdateChangesOnly	= true
																									
		ReduceGLTotalAmount
			initialize	LocalTranAmount
			initialize	LocalGLTAmount
			initialize	LocalUnitsAmount
		

			LocalPostingDate	= TransactionDate		
			LocalEndDate	    = EntityYearPeriod		
			if (LocalDateChanged)
				LocalPostingDate	= old TransactionDate		
				LocalEndDate	    = old EntityYearPeriod		
			if (LastCommitmentGroup not entered)
				LocalTranAmount				 	= (TransactionAmount * -1)
				LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount = (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount  = (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount = (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount = (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

				LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount = (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount  = (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount = (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount = (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

				LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount    = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount    = (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount    = (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount    = (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount    = (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount    = (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
				LocalUnitsAmount				= (UnitsAmount * -1)
	            invoke PostTransactions GeneralLedgerTotalRel
	                invoked.TransactionAmount	+= LocalTranAmount
	                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
		                invoked.FunctionalAmount	+= LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount
		            else
		                invoked.FunctionalAmount	+= LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount
	                invoked.ProjectAmount		+= LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount
	                invoked.ReportAmount1		+= LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount
	                invoked.ReportAmount2		+= LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount
	                invoked.ReportAmount3		+= LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount
	                invoked.ReportAmount4		+= LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount
	                invoked.ReportAmount5		+= LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount
	                invoked.UnitsAmount			+= LocalUnitsAmount
					if (EntityYearPeriod.PeriodType.BeginningBalance)
						invoked.UpdateChangesOnly	= true
                
		ReduceByManualEncumbrance
			initialize	LocalTranAmount
			initialize	LocalGLTAmount
			initialize	LocalUnitsAmount
			initialize	LocalCurrAmount
			LocalBudgetEntity			= FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger			= FinanceCodeBlock.Ledger			
			LocalPostingDate			= TransactionDate
			LocalEndDate				= EntityYearPeriod
			if (BudgetEntityLedgerRel exists)
				if (first GLEncumbranceRel.TransactionAmount < TransactionAmount)
					LocalCurrAmount.FunctionalAmount = (first GLEncumbranceRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount  = (first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.AlternateAmount2 = (first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount3 = (first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ToFunctionalAmount = (first GLEncumbranceRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount  = (first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.ToAlternateAmount2 = (first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount3 = (first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ProjectAmount    = (first GLEncumbranceRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount1    = (first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount2    = (first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount3    = (first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount4    = (first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount5    = (first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount    * -1)
				else
					LocalCurrAmount.FunctionalAmount = (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount  = (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.AlternateAmount2 = (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount3 = (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ToFunctionalAmount = (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount  = (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.ToAlternateAmount2 = (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount3 = (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ProjectAmount    = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount1    = (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount2    = (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount3    = (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount4    = (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount    * -1)
					LocalCurrAmount.ReportAmount5    = (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount    * -1)
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
					invoked.PrmEndDate					= LocalEndDate
					invoked.PrmReportAmounts.FunctionalAmount = LocalCurrAmount.FunctionalAmount
					invoked.PrmReportAmounts.AlternateAmount  = LocalCurrAmount.AlternateAmount
					invoked.PrmReportAmounts.AlternateAmount2 = LocalCurrAmount.AlternateAmount2
					invoked.PrmReportAmounts.AlternateAmount3 = LocalCurrAmount.AlternateAmount3

					invoked.PrmReportAmounts.ToFunctionalAmount = LocalCurrAmount.ToFunctionalAmount
					invoked.PrmReportAmounts.ToAlternateAmount  = LocalCurrAmount.ToAlternateAmount
					invoked.PrmReportAmounts.ToAlternateAmount2 = LocalCurrAmount.ToAlternateAmount2
					invoked.PrmReportAmounts.ToAlternateAmount3 = LocalCurrAmount.ToAlternateAmount3

					invoked.PrmReportAmounts.ProjectAmount    = LocalCurrAmount.ProjectAmount
					invoked.PrmReportAmounts.ReportAmount1    = LocalCurrAmount.ReportAmount1
					invoked.PrmReportAmounts.ReportAmount2    = LocalCurrAmount.ReportAmount2
					invoked.PrmReportAmounts.ReportAmount3    = LocalCurrAmount.ReportAmount3
					invoked.PrmReportAmounts.ReportAmount4    = LocalCurrAmount.ReportAmount4
					invoked.PrmReportAmounts.ReportAmount5    = LocalCurrAmount.ReportAmount5

		UpdateGLTotalFromPOUnmatch
			initialize 											      TotalGroup
			LocalScenario										    = FinanceEnterpriseGroup.EncumbrancesScenario
			TotalGroup.AccountingEntity							    = FinanceCodeBlock.ToAccountingEntity
			TotalGroup.GeneralLedgerTotal.Ledger				    = FinanceCodeBlock.Ledger
			TotalGroup.GeneralLedgerTotal.System				    = System
			TotalGroup.GeneralLedgerTotal.Currency				    = CurrencyCode
			TotalGroup.GeneralLedgerTotal.EntityYearPeriod		    = EntityYearPeriod
			TotalGroup.GeneralLedgerTotal.AccountingUnit		    = FinanceCodeBlock.AccountingUnit
			TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= FinanceCodeBlock.GeneralLedgerChartAccount
			TotalGroup.GeneralLedgerTotal.Project				    = FinanceCodeBlock.Project
			TotalGroup.GeneralLedgerTotal.DimensionCode			    = DimensionCode
			TotalGroup.GeneralLedgerTotal.PrimaryLedger			    = FinanceCodeBlock.Ledger
			invoke PostTransactions TotalGroup.GeneralLedgerTotal
				if (LocalPartialCancel)
	                invoked.TransactionAmount		+= TransactionAmount - old TransactionAmount 
					if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
						invoked.FunctionalAmount	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.AlternateAmount		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.AlternateAmount2	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.AlternateAmount3	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount - old ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					else
						invoked.FunctionalAmount	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.AlternateAmount		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.AlternateAmount2	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount - old ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.AlternateAmount3	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount - old ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
					invoked.ProjectAmount			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.ReportAmount1			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.ReportAmount2			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.ReportAmount3			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.ReportAmount4			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.ReportAmount5			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount - old ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.UnitsAmount				+= ReportCurrencyAmount
				else 
    	            invoked.TransactionAmount		+= TransactionAmount

					if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
						invoked.FunctionalAmount	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.AlternateAmount		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.AlternateAmount2	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.AlternateAmount3	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					else
						invoked.FunctionalAmount	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
						invoked.AlternateAmount		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
						invoked.AlternateAmount2	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
						invoked.AlternateAmount3	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
					invoked.ProjectAmount			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.ReportAmount1			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.ReportAmount2			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.ReportAmount3			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.ReportAmount4			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.ReportAmount5			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.UnitsAmount				+= ReportCurrencyAmount

				invoked.FinanceDimension1	= FinanceCodeBlock.FinanceDimension1
				invoked.FinanceDimension2	= FinanceCodeBlock.FinanceDimension2
				invoked.FinanceDimension3	= FinanceCodeBlock.FinanceDimension3
				invoked.FinanceDimension4	= FinanceCodeBlock.FinanceDimension4
				invoked.FinanceDimension5	= FinanceCodeBlock.FinanceDimension5
				invoked.FinanceDimension6	= FinanceCodeBlock.FinanceDimension6
				invoked.FinanceDimension7	= FinanceCodeBlock.FinanceDimension7
				invoked.FinanceDimension8	= FinanceCodeBlock.FinanceDimension8
				invoked.FinanceDimension9	= FinanceCodeBlock.FinanceDimension9
				invoked.FinanceDimension10	= FinanceCodeBlock.FinanceDimension10
				invoked.PeriodEndingDate	= EntityYearPeriod.Date
		
		IncreaseByManualEncumbrance
			initialize	LocalTranAmount
			initialize	LocalGLTAmount
			initialize	LocalUnitsAmount
			initialize	LocalCurrAmount
			LocalBudgetEntity			= FinanceCodeBlock.ToAccountingEntity
			LocalBudgetLedger			= FinanceCodeBlock.Ledger			
			LocalPostingDate			= TransactionDate
			LocalEndDate				= EntityYearPeriod
			if (BudgetEntityLedgerRel exists)
				if (first OldGLEncumbranceRel.TransactionAmount < TransactionAmount)
					LocalCurrAmount.FunctionalAmount = first GLEncumbranceRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount  = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount2 = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount3 = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

					LocalCurrAmount.ToFunctionalAmount = first GLEncumbranceRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount  = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount2 = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount3 = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

					LocalCurrAmount.ProjectAmount    = first GLEncumbranceRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount1    = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount2    = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount3    = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount4    = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount5    = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
				else
					LocalCurrAmount.FunctionalAmount = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount  = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount2 = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					LocalCurrAmount.AlternateAmount3 = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

					LocalCurrAmount.ToFunctionalAmount = ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount  = ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount2 = ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					LocalCurrAmount.ToAlternateAmount3 = ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

					LocalCurrAmount.ProjectAmount    = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount1    = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount2    = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount3    = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount4    = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					LocalCurrAmount.ReportAmount5    = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
				invoke UpdateGroupTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= HeaderUniqueID
					invoked.PrmTransactionCodeBlock		= FinanceCodeBlock
					invoked.PrmEndDate					= LocalEndDate
					invoked.PrmReportAmounts.FunctionalAmount = LocalCurrAmount.FunctionalAmount
					invoked.PrmReportAmounts.AlternateAmount  = LocalCurrAmount.AlternateAmount
					invoked.PrmReportAmounts.AlternateAmount2 = LocalCurrAmount.AlternateAmount2
					invoked.PrmReportAmounts.AlternateAmount3 = LocalCurrAmount.AlternateAmount3

					invoked.PrmReportAmounts.ToFunctionalAmount = LocalCurrAmount.ToFunctionalAmount
					invoked.PrmReportAmounts.ToAlternateAmount  = LocalCurrAmount.ToAlternateAmount
					invoked.PrmReportAmounts.ToAlternateAmount2 = LocalCurrAmount.ToAlternateAmount2
					invoked.PrmReportAmounts.ToAlternateAmount3 = LocalCurrAmount.ToAlternateAmount3

					invoked.PrmReportAmounts.ProjectAmount    = LocalCurrAmount.ProjectAmount
					invoked.PrmReportAmounts.ReportAmount1    = LocalCurrAmount.ReportAmount1
					invoked.PrmReportAmounts.ReportAmount2    = LocalCurrAmount.ReportAmount2
					invoked.PrmReportAmounts.ReportAmount3    = LocalCurrAmount.ReportAmount3
					invoked.PrmReportAmounts.ReportAmount4    = LocalCurrAmount.ReportAmount4
					invoked.PrmReportAmounts.ReportAmount5    = LocalCurrAmount.ReportAmount5

		UpdateGLTotalFromMigratedCommit
			initialize TotalGroup
			LocalScenario										= FinanceEnterpriseGroup.EncumbrancesScenario
			if (System = "RQ")
				LocalScenario									= FinanceEnterpriseGroup.CommitmentsScenario
			TotalGroup.AccountingEntity							    = FinanceCodeBlock.ToAccountingEntity
			TotalGroup.GeneralLedgerTotal.Ledger				    = FinanceCodeBlock.Ledger
			TotalGroup.GeneralLedgerTotal.System				    = System
			TotalGroup.GeneralLedgerTotal.Currency				    = CurrencyCode
			TotalGroup.GeneralLedgerTotal.EntityYearPeriod		    = EntityYearPeriod
			TotalGroup.GeneralLedgerTotal.AccountingUnit		    = FinanceCodeBlock.AccountingUnit
			TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= FinanceCodeBlock.GeneralLedgerChartAccount
			TotalGroup.GeneralLedgerTotal.Project				    = FinanceCodeBlock.Project
			TotalGroup.GeneralLedgerTotal.DimensionCode			    = DimensionCode
			TotalGroup.GeneralLedgerTotal.PrimaryLedger			    = FinanceCodeBlock.Ledger
			invoke PostTransactions TotalGroup.GeneralLedgerTotal
				invoked.TransactionAmount		+= TransactionAmount
				if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
					invoked.FunctionalAmount	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.AlternateAmount		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.AlternateAmount2	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.AlternateAmount3	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
				else
					invoked.FunctionalAmount	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					invoked.AlternateAmount		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					invoked.AlternateAmount2	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					invoked.AlternateAmount3	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
				invoked.ProjectAmount			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
				invoked.ReportAmount1			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
				invoked.ReportAmount2			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
				invoked.ReportAmount3			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
				invoked.ReportAmount4			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
				invoked.ReportAmount5			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
				invoked.UnitsAmount				+= ReportCurrencyAmount
				invoked.FinanceDimension1		= FinanceCodeBlock.FinanceDimension1
				invoked.FinanceDimension2		= FinanceCodeBlock.FinanceDimension2
				invoked.FinanceDimension3		= FinanceCodeBlock.FinanceDimension3
				invoked.FinanceDimension4		= FinanceCodeBlock.FinanceDimension4
				invoked.FinanceDimension5		= FinanceCodeBlock.FinanceDimension5
				invoked.FinanceDimension6		= FinanceCodeBlock.FinanceDimension6
				invoked.FinanceDimension7		= FinanceCodeBlock.FinanceDimension7
				invoked.FinanceDimension8		= FinanceCodeBlock.FinanceDimension8
				invoked.FinanceDimension9		= FinanceCodeBlock.FinanceDimension9
				invoked.FinanceDimension10  	= FinanceCodeBlock.FinanceDimension10						
				invoked.PeriodEndingDate		= EntityYearPeriod.Date
				if (EntityYearPeriod.PeriodType.BeginningBalance)
					invoked.UpdateChangesOnly = true

		CreateRolloverResult
			invoke Create EncumbranceRolloverResult
				assign result to LocalRolloverResultView
				invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
				invoked.RunTime						= current timestamp
				invoked.BasisEndDate				= PrmBasisEndDate
				invoked.RollOverType				= LocalRolloverType

		CreateRolloverDetail
			invoke Create RolloverResultDetail
				invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
				invoked.EncumbranceRolloverResult	= LocalRolloverResultView.EncumbranceRolloverResult
				invoked.GLCommitID                  = reference to this instance
				invoked.PriorYearPeriod				= LocalPriorYearPeriod
				invoked.System						= System

	Action Exit Rules
		if  (FinanceCodeBlock.Project entered
		and  FinanceCodeBlock.FinanceDimension2 entered
		and  FESIncludedSystem
		and  FinanceEnterpriseGroup.FrontEndSplits
		and  FinanceEnterpriseGroup.UseFundedAmounts
		and !FinanceCodeBlock.Project.ExcludeFromFES
		and  FinanceCodeBlock.Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled
		and (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
		or   old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered))
			initialize LocalFESAmount
			if (action type.Create)
				if (Status.Unreleased)
					LocalFESAmount = blank
				else
					LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
			else
			if (action type.Update)
				if (Status.Released
				and old Status.Unreleased)
					LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
				else
				if (Status.Unreleased
				and Status changed)
					LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1
				else
				if (!Status.Unreleased
				and ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount changed)
					LocalFESAmount = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount)
			else
			if (action type.Delete)
				if (Status.Unreleased)
					LocalFESAmount = blank
				else
					LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1
			if (LocalFESAmount entered)
				invoke UpdateFESExpenditures ProjectFundingSourceRel
					invoked.Commitment = true
					invoked.TransactionDate = TransactionDate
					invoked.FinanceCodeBlock = FinanceCodeBlock
					invoked.Amount = LocalFESAmount

	Actions
	
		CreateCommitment is a Create Action
			restricted
			bypass field rules
			Entrance Rules


				if (PrmAllowRebuild = false)
					PrmAllowRebuild = AllowDocumentMaintenanceDuringBudgetTemplateProcessPending
				constraint (TransactionDate entered)
					"TransactionDateIsRequired"
				LocalPostingDate	= TransactionDate
				if (System = "RJ")
					LocalEndDate	= EntityYearPeriod
				else
					include FindGLYearPeriod
				constraint (TransBusinessObjectRef entered)
					"TransientBusinessObjectReferenceIsRequired"
				if (GLEncumbranceReference entered)
					constraint (first GLEncumbranceRel exists)
						"EncumbranceReferenceDoesNotExist"
					constraint (first GLEncumbranceRel.FinanceCodeBlock	= FinanceCodeBlock)
						"FinanceStructureShouldBeSameAsEncumbranceReferenceFinanceStructure"
					
			Action Rules
				DimensionCode 		= FinanceCodeBlock.DimensionCode
				constraint (DerivedEntityCalendarPeriod entered)
					"G\L_\Calendar_\PeriodNotFoundFor_\Commitment_\Date<TransactionDate>"
				if (!System = "RJ")
					EntityYearPeriod	 = DerivedEntityCalendarPeriod
				CreateDate = current corporate date
				LocalUpdateGLTotal	= false
				if (TransientMigrateAsReleased)
					Status = Status.Released		
					LocalUpdateGLTotal = true			
			Exit Rules
				include CreateGLCommitDocument

				if (!LocalUpdateGLTotal
				and !TransientSkipRebuild
				and !TransientFromContract)
					include CreateBudgetTemplateGroupTotals
				if (GLEncumbranceReference entered
				and GLEncumbranceRel exists)
					include ReduceByManualEncumbrance

				if (LocalUpdateGLTotal)
					include UpdateGLTotalFromMigratedCommit

		RecreateBudgetTemplateGroupTotals is an Instance Action 
			restricted 
			Entrance Rules 
				LocalPostingDate	= TransactionDate
				include FindGLYearPeriod

			Action Rules 
				include CreateBudgetTemplateGroupTotals	

		CreatePayrollEncumbrance is a Create Action
			restricted
			Entrance Rules
				constraint (TransactionDate entered)
					"TransactionDateIsRequired"
				LocalPostingDate	= TransactionDate
				LocalSystem			= "PR"
				
			Action Rules
				FinanceCodeBlock.Ledger					= TransientCodeBlock.Ledger
		        FinanceCodeBlock.ToAccountingEntity		= TransientCodeBlock.ToAccountingEntity
	        	FinanceCodeBlock.AccountingUnit			= TransientCodeBlock.AccountingUnit
	            FinanceCodeBlock.GeneralLedgerChartAccount	= TransientCodeBlock.GeneralLedgerChartAccount
	            FinanceCodeBlock.Project				= TransientCodeBlock.Project
				FinanceCodeBlock.FinanceDimension1		= TransientCodeBlock.FinanceDimension1
				FinanceCodeBlock.FinanceDimension2		= TransientCodeBlock.FinanceDimension2
				FinanceCodeBlock.FinanceDimension3		= TransientCodeBlock.FinanceDimension3
				FinanceCodeBlock.FinanceDimension4		= TransientCodeBlock.FinanceDimension4
				FinanceCodeBlock.FinanceDimension5		= TransientCodeBlock.FinanceDimension5
				FinanceCodeBlock.FinanceDimension6		= TransientCodeBlock.FinanceDimension6
				FinanceCodeBlock.FinanceDimension7		= TransientCodeBlock.FinanceDimension7
				FinanceCodeBlock.FinanceDimension8		= TransientCodeBlock.FinanceDimension8
				FinanceCodeBlock.FinanceDimension9		= TransientCodeBlock.FinanceDimension9
				FinanceCodeBlock.FinanceDimension10		= TransientCodeBlock.FinanceDimension10
				DimensionCode							= TransientCodeBlock.DimensionCode
				include FindGLYearPeriod
				EntityYearPeriod						= DerivedEntityCalendarPeriod
				OriginatingTransaction					= reference to this instance
				CreateDate								= current corporate date
				Status									= 0
			
			Exit Rules
				include CreateGLCommitDocument
				include CreateBudgetTemplateGroupTotals
						
		CreateProjectCommitment is a Create Action
			restricted
			bypass field rules
			Entrance Rules
				constraint (TransactionDate entered)
					"TransactionDateIsRequired"
				LocalPostingDate	= TransactionDate
				if (System = "RJ")
					LocalEndDate	= EntityYearPeriod
				else
					include FindGLYearPeriod
				constraint (TransBusinessObjectRef entered)
					"TransientBusinessObjectReferenceIsRequired"
				
			Action Rules
				DimensionCode 		= FinanceCodeBlock.DimensionCode
				if (!System = "RJ")
					EntityYearPeriod	 = DerivedEntityCalendarPeriod
				CreateDate = current corporate date
				Status = Status.Released		
			
			Exit Rules
			    include CreateCommitmentHistory			
				initialize 											      TotalGroup
				LocalScenario										    = FinanceEnterpriseGroup.EncumbrancesScenario
				TotalGroup.AccountingEntity							    = FinanceCodeBlock.ToAccountingEntity
				TotalGroup.GeneralLedgerTotal.Ledger				    = FinanceCodeBlock.Ledger
				TotalGroup.GeneralLedgerTotal.System				    = System
				TotalGroup.GeneralLedgerTotal.Currency				    = CurrencyCode
				TotalGroup.GeneralLedgerTotal.EntityYearPeriod		    = EntityYearPeriod
				TotalGroup.GeneralLedgerTotal.AccountingUnit		    = FinanceCodeBlock.AccountingUnit
				TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= FinanceCodeBlock.GeneralLedgerChartAccount
				TotalGroup.GeneralLedgerTotal.Project				    = FinanceCodeBlock.Project
				TotalGroup.GeneralLedgerTotal.DimensionCode			    = DimensionCode
				TotalGroup.GeneralLedgerTotal.PrimaryLedger			    = FinanceCodeBlock.Ledger
				invoke PostTransactions TotalGroup.GeneralLedgerTotal
	                invoked.TransactionAmount		+= TransactionAmount
	                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
		                invoked.FunctionalAmount	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
		            else
		                invoked.FunctionalAmount	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
	                invoked.ProjectAmount			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
	                invoked.ReportAmount1			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
	                invoked.ReportAmount2			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
	                invoked.ReportAmount3			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
	                invoked.ReportAmount4			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
	                invoked.ReportAmount5			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
	                invoked.UnitsAmount				+= ReportCurrencyAmount
					invoked.FinanceDimension1		= FinanceCodeBlock.FinanceDimension1
					invoked.FinanceDimension2		= FinanceCodeBlock.FinanceDimension2
					invoked.FinanceDimension3		= FinanceCodeBlock.FinanceDimension3
					invoked.FinanceDimension4		= FinanceCodeBlock.FinanceDimension4
					invoked.FinanceDimension5		= FinanceCodeBlock.FinanceDimension5
					invoked.FinanceDimension6		= FinanceCodeBlock.FinanceDimension6
					invoked.FinanceDimension7		= FinanceCodeBlock.FinanceDimension7
					invoked.FinanceDimension8		= FinanceCodeBlock.FinanceDimension8
					invoked.FinanceDimension9		= FinanceCodeBlock.FinanceDimension9
					invoked.FinanceDimension10  	= FinanceCodeBlock.FinanceDimension10
					invoked.PeriodEndingDate 		= EntityYearPeriod.Date						
	 				if (EntityYearPeriod.PeriodType.BeginningBalance)
						invoked.UpdateChangesOnly	= true
					
		MaintainUnreleasedCommitment is an Update Action	

			restricted
			bypass field rules
			Entrance Rules




				if (not PrmAllowRebuild
				and not PrmSkipForceRebuild)
					PrmAllowRebuild = AllowDocumentMaintenanceDuringBudgetTemplateProcessPending
				if (GLEncumbranceReference entered)
					constraint (first GLEncumbranceRel exists)
						"EncumbranceReferenceDoesNotExist"
					constraint (first GLEncumbranceRel.FinanceCodeBlock	= FinanceCodeBlock)
						"FinanceStructureShouldBeSameAsEncumbranceReferenceFinanceStructure"
				if (TransactionDate changed)
					LocalDateChanged	= true
				if (old GLEncumbranceReference entered
				and OldGLEncumbranceRel exists)
					include IncreaseByManualEncumbrance

				if (!TransientFromContract
				and !TransientSkipRebuild)
					include ReduceBudgetTemplateGroupTotals		
				LocalDateChanged		= false
			Action Rules
				DimensionCode 		= FinanceCodeBlock.DimensionCode
				if (TransactionAmount = 0)
					Status      = Status.History
					CloseDate   = current corporate date
				else
					if (!TransactionAmount = 0)						
						LocalPostingDate	= TransactionDate
						if (TransactionDate changed)
							EntityYearPeriod = DerivedEntityCalendarPeriod
						LocalEndDate		 = EntityYearPeriod		
						if (POCommitOrigPeriod entered)				
							LocalEndDate	 = POCommitOrigPeriod	
						if (!TransientFromContract
						and !TransientSkipRebuild)
							include CreateBudgetTemplateGroupTotals
						if (Status.History)				
							Status = Status.Unreleased
							initialize CloseDate

			Exit Rules
				if (!TransactionAmount = 0)
					if  (GLEncumbranceReference entered
					and  GLEncumbranceRel exists)
						include ReduceByManualEncumbrance
				LocalHeaderUniqueID	= HeaderUniqueID
				if (Status.History
				and !GLCommitAllActiveRel exists)
					invoke Update GLDocumentUniqueIDRel					
						invoked.Status			= 9
			


			
		UpdateReleasedCommitment is an Update Action		



			restricted
			bypass field rules
			Entrance Rules
				if (TransactionAmount changed)
					include CreateCommitmentHistory
				include ReduceGLTotalByQuantity
				if (TransientDistribCanceled				
				and !TransientFromContract					
				and System = "RQ")							
					include CreateBudgetTemplateGroupTotals	
													
			Action Rules
				DimensionCode 		= FinanceCodeBlock.DimensionCode
				if (POCommitOrigPeriod entered)	
					POCommitTransactionAmount	= TransactionAmount
					POCommitCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					POCommitCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					POCommitCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					POCommitCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

					POCommitCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					POCommitCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  = ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					POCommitCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					POCommitCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

					POCommitCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					POCommitCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					POCommitCurrencyAmount.ReportAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					POCommitCurrencyAmount.ReportAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					POCommitCurrencyAmount.ReportAmount4.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					POCommitCurrencyAmount.ReportAmount5.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					if (TransientDistribCanceled)	
						POCommitOrigTranAmount	= TransactionAmount
						POCommitOrigCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

						POCommitOrigCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  = ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

						POCommitOrigCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ReportAmount2.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ReportAmount3.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ReportAmount4.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						POCommitOrigCurrencyAmount.ReportAmount5.EnteredCurrencyAmount = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					
				if (TransactionAmount = 0)
					Status 			= Status.History
					CloseDate		= current corporate date

				if (TransactionAmount entered						
				and Status			= Status.History)				
					Status			= Status.Released				
					
			Exit Rules
				LocalHeaderUniqueID	= HeaderUniqueID
				if (Status.History
				and !System = "GM"
				and TransientFromJournalize)	
					invoke Update GLDocumentUniqueIDRel					
						invoked.Status			= 9
				else
				if (Status.History
				and !GLCommitAllActiveRel exists
				and !System = "GM")
					invoke Update GLDocumentUniqueIDRel					
						invoked.Status			= 9

		ModifyReleasedCommitment is an Instance Action
			restricted
			default label is untranslatable
			run in background
			Parameters
				PrmTransactionAmount 		is like CurrencyAmount
				PrmReportCurrencyAmount		is like FinanceCurrencyAmount
				PrmRQFromContract 			is Boolean
				PrmDistribCanceled 			is Boolean
				PrmFromContractUpdate		is Boolean
				PrmTransactionDate			is Date
				PrmAccountingEntity			is like AccountingEntity
				PrmFinanceCodeBlock			is like TransactionCodeBlock
				PrmCurrencyCode				is like Currency
			Action Rules
				invoke UpdateReleasedCommitment
					invoked.TransactionAmount			= PrmTransactionAmount
					invoked.ReportCurrencyAmount 		= PrmReportCurrencyAmount
					invoked.TransientFromContract 		= PrmRQFromContract
					invoked.TransientDistribCanceled 	= PrmDistribCanceled
					if (PrmFromContractUpdate)
						invoked.TransactionDate				= PrmTransactionDate		
						invoked.AccountingEntity			= PrmAccountingEntity		
						invoked.FinanceCodeBlock			= PrmFinanceCodeBlock		
						invoked.CurrencyCode				= PrmCurrencyCode

		ChangeReleasedCommitment is an Instance Action





			restricted
			Parameters
				PrmCurrencyCode			is a FromCurrency
				PrmLastTransAmount		is like CurrencyAmount
				PrmChangedCurrAmount	is a CurrencyAmountsGroup
				PrmTransDate			is Date
				PrmCodeBlock			is a FinanceCodeBlock
				PrmDimensionCode		is a DimensionCode				
				ParmIsCancelOrDelete 	is Boolean
				ParmAllowRebuild        is Boolean
				PrmPartialCancel 		is Boolean 
				PrmEntityChanged		is Boolean 
				PrmTransientFromContract is Boolean

			Entrance Rules
				LocalDateChanged	= false
				if (PrmTransDate entered
				and PrmTransDate = TransactionDate)
					initialize PrmTransDate
				if (!PrmCodeBlock entered
				and !Status = Status.History
				and !PrmCurrencyCode entered
				and !PrmTransDate entered)
					PrmAllowRebuild     = ParmAllowRebuild
				if (PrmTransDate entered)
					if (System = "PO"
					and !IsContractManagement)	
						constraint (!POCommitOrigPeriod entered)
							"CannotChangeTransactionDateOfRolledOverPOEncumbrance"
				if (!Status = Status.History)
					if (PrmCodeBlock entered)
						include ReduceOldCodeBlockBudgetTemplate
						include ReduceGLTotalAmount
					else
						if (PrmTransDate entered)
							LocalDateChanged	= true
							include ReduceBudgetTemplateGroupTotals		
							include ReduceGLTotalAmount
						else
							if (PrmCurrencyCode entered)
								include ReduceOldCurrencyBudgetTemplate  
								include ReduceGLTotalAmount		
							else
								LocalPostingDate	=  TransactionDate
								LocalEndDate		=  EntityYearPeriod		
								if (POCommitOrigPeriod entered)				
									LocalEndDate	= POCommitOrigPeriod	
								if (!PrmTransientFromContract)
									include BackoutOldDiffAmount
				
			Action Rules
				if (PrmCurrencyCode entered)
					CurrencyCode	= PrmCurrencyCode
				DimensionCode 		= FinanceCodeBlock.DimensionCode			
				if (Status = Status.History
				or  PrmPartialCancel)  
					TransactionAmount		= PrmLastTransAmount
				else

					if (!Status = Status.History
					and (PrmCodeBlock entered
					or   PrmTransDate entered
					or   !TransactionAmount = PrmLastTransAmount))
						LastTransactionAmount	= PrmLastTransAmount

				if ((PrmCodeBlock entered)
				or  (PrmCurrencyCode entered)
				or  (Status = Status.History)
				or  (PrmPartialCancel)
				or  (PrmTransDate entered))
					if (PrmCodeBlock entered
					or  PrmTransDate entered)
						LastCommitmentGroup = "TRUE"	// new code block has no GLTotal yet. "True" will prevent reversing GLTotal that hasn't been created yet
					if (PrmCodeBlock entered)
						if (!FinanceCodeBlock.Project entered
						and PrmCodeBlock.Project entered)
							ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = PrmChangedCurrAmount.ProjectAmount
						FinanceCodeBlock	= PrmCodeBlock
						if (!FinanceCodeBlock.Project entered)
							initialize ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						DimensionCode 		= PrmDimensionCode			

					if (PrmTransDate entered)
						TransactionDate		= PrmTransDate
						LocalPostingDate	= PrmTransDate
						EntityYearPeriod	= DerivedEntityCalendarPeriod
					LocalEndDate		= EntityYearPeriod		
					if (POCommitOrigPeriod entered)				
						LocalEndDate	= POCommitOrigPeriod	
						
					if (Status = Status.History
					or  PrmPartialCancel
					or  PrmCurrencyCode entered
					or  PrmEntityChanged) 
						ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = PrmChangedCurrAmount.FunctionalAmount 
						ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	= PrmChangedCurrAmount.AlternateAmount 
						ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount	= PrmChangedCurrAmount.AlternateAmount2
						ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount	= PrmChangedCurrAmount.AlternateAmount3

						ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = PrmChangedCurrAmount.ToFunctionalAmount 
						ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	= PrmChangedCurrAmount.ToAlternateAmount 
						ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount	= PrmChangedCurrAmount.ToAlternateAmount2
						ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount	= PrmChangedCurrAmount.ToAlternateAmount3

						ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount	= PrmChangedCurrAmount.ProjectAmount
						ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount	= PrmChangedCurrAmount.ReportAmount1
						ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount	= PrmChangedCurrAmount.ReportAmount2 
						ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount	= PrmChangedCurrAmount.ReportAmount3 
						ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount	= PrmChangedCurrAmount.ReportAmount4 
						ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount	= PrmChangedCurrAmount.ReportAmount5

					if  (PrmPartialCancel)					
						LocalPartialCancel = true 
						include CreateBudgetTemplateGroupTotals		
					else 
					if (!ParmIsCancelOrDelete
					and !PrmTransientFromContract)				
						include CreateBudgetTemplateGroupTotals		
					
				if (!PrmCodeBlock entered
				and !Status = Status.History
				and !PrmCurrencyCode entered
				and !PrmPartialCancel
				and !PrmTransDate entered)
					LocalPostingDate		= TransactionDate
					LocalEndDate			= EntityYearPeriod		


					include CreateDiffCommitAmount
					LastCurrAmountDiff.FunctionalAmount = LocalCurrAmount.FunctionalAmount
					LastCurrAmountDiff.AlternateAmount  = LocalCurrAmount.AlternateAmount 
					LastCurrAmountDiff.AlternateAmount2 = LocalCurrAmount.AlternateAmount2 
					LastCurrAmountDiff.AlternateAmount3 = LocalCurrAmount.AlternateAmount3 
					LastCurrAmountDiff.ToFunctionalAmount = LocalCurrAmount.ToFunctionalAmount
					LastCurrAmountDiff.ToAlternateAmount  = LocalCurrAmount.ToAlternateAmount 
					LastCurrAmountDiff.ToAlternateAmount2 = LocalCurrAmount.ToAlternateAmount2 
					LastCurrAmountDiff.ToAlternateAmount3 = LocalCurrAmount.ToAlternateAmount3 
					LastCurrAmountDiff.ProjectAmount = LocalCurrAmount.ProjectAmount 
					LastCurrAmountDiff.ReportAmount1 = LocalCurrAmount.ReportAmount1 
					LastCurrAmountDiff.ReportAmount2 = LocalCurrAmount.ReportAmount2 
					LastCurrAmountDiff.ReportAmount3 = LocalCurrAmount.ReportAmount3 
					LastCurrAmountDiff.ReportAmount4 = LocalCurrAmount.ReportAmount4 
					LastCurrAmountDiff.ReportAmount5 = LocalCurrAmount.ReportAmount5
					
				if  ((Status = Status.History
				or   PrmPartialCancel)
				and  TransactionAmount not = 0)
					if (ParmIsCancelOrDelete)				
						LocalPartialCancel = PrmPartialCancel
						Status = Status.Released
						include UpdateGLTotalFromPOUnmatch	
					else
						Status = Status.Unreleased
					include CreateCommitmentHistory



		ChangeReleasedAPCommitment is an Instance Action
			restricted
			Parameters
				PrmCurrencyCode			is a FromCurrency
				PrmLastTransAmount		is like CurrencyAmount
				PrmChangedCurrAmount	is a CurrencyAmountsGroup
				PrmTransDate			is Date
				PrmCodeBlock			is a FinanceCodeBlock
				PrmDimensionCode		is a DimensionCode				
				ParmIsCancelOrDelete 	is Boolean
				ParmAllowRebuild        is Boolean
								
			Entrance Rules
				constraint (System = "AP")
					"ThisActionIsOnlyForAPEncumbranceRecords"
				constraint (Status = Status.Released)
					"ThisActionIsOnlyForReleasedAPEncumbranceRecords"
				constraint (PrmTransDate entered)
					"NewTransactionDateIsRequired"
				constraint (PrmTransDate > TransactionDate)
					"NewDateCannotBeLessThanCurrentGLCommitTransactionDate"
				include ReduceGLTotalAmount		

				if (!POCommitOrigPeriod entered)	
					POCommitOrigPeriod			= EntityYearPeriod
					POCommitOrigID				= OriginatingTransaction
					POCommitTransactionAmount	= TransactionAmount
					POCommitUnitsAmount			= UnitsAmount
					POCommitCurrencyAmount		= ReportCurrencyAmount
					POCommitOrigTranAmount		= TransactionAmount
					POCommitOrigUnitsAmount		= UnitsAmount
					POCommitOrigCurrencyAmount	= ReportCurrencyAmount

			Action Rules
				TransactionDate		= PrmTransDate
				LocalPostingDate	= PrmTransDate
				EntityYearPeriod	= DerivedEntityCalendarPeriod
				LocalEndDate		= EntityYearPeriod



				
				include UpdateGLTotalFromPOUnmatch

		ClearLastCurrencyAmount is an Instance Action
			restricted
			Action Rules
				LastCurrAmountDiff = 0

		UpdateRNIEncumbrance is an Instance Action
			restricted
			Parameters
				PrmTransactionAmount	is like CurrencyAmount
				PrmCurrAmountGroup		is like CurrencyAmountsGroup
				PrmAutoReverse			is Boolean
				
			Action Rules
#ifdef module ap
				if (POLineOpen)
					if (Status = Status.History)
						Status = Status.Released
					TransactionAmount	+= PrmTransactionAmount
					ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount += PrmCurrAmountGroup.FunctionalAmount 
					ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	+= PrmCurrAmountGroup.AlternateAmount 
					ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount	+= PrmCurrAmountGroup.AlternateAmount2
					ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount	+= PrmCurrAmountGroup.AlternateAmount3

					ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount += PrmCurrAmountGroup.ToFunctionalAmount 
					ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  += PrmCurrAmountGroup.ToAlternateAmount 
					ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount += PrmCurrAmountGroup.ToAlternateAmount2
					ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount += PrmCurrAmountGroup.ToAlternateAmount3

					ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ProjectAmount
					ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ReportAmount1
					ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ReportAmount2 
					ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ReportAmount3 
					ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ReportAmount4 
					ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount	+= PrmCurrAmountGroup.ReportAmount5
					
					LocalEndDate						= EntityYearPeriod
					invoke PostTransactions GeneralLedgerTotalRel
						invoked.TransactionAmount		= PrmTransactionAmount
						if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
							invoked.FunctionalAmount	= PrmCurrAmountGroup.FunctionalAmount
							invoked.AlternateAmount		= PrmCurrAmountGroup.AlternateAmount
							invoked.AlternateAmount2	= PrmCurrAmountGroup.AlternateAmount2
							invoked.AlternateAmount3	= PrmCurrAmountGroup.AlternateAmount3
						else
							invoked.FunctionalAmount	= PrmCurrAmountGroup.ToFunctionalAmount
							invoked.AlternateAmount		= PrmCurrAmountGroup.ToAlternateAmount
							invoked.AlternateAmount2	= PrmCurrAmountGroup.ToAlternateAmount2
							invoked.AlternateAmount3	= PrmCurrAmountGroup.ToAlternateAmount3
						invoked.ProjectAmount			= PrmCurrAmountGroup.ProjectAmount
						invoked.ReportAmount1			= PrmCurrAmountGroup.ReportAmount1
						invoked.ReportAmount2			= PrmCurrAmountGroup.ReportAmount2
						invoked.ReportAmount3			= PrmCurrAmountGroup.ReportAmount3
						invoked.ReportAmount4			= PrmCurrAmountGroup.ReportAmount4
						invoked.ReportAmount5			= PrmCurrAmountGroup.ReportAmount5
						invoked.UnitsAmount				= 0
						if (EntityYearPeriod.PeriodType.BeginningBalance)
							invoked.UpdateChangesOnly	= true
#endif


		APFESUpdateOnly is an Instance Action
			restricted 
			Action Rules
				if  (FinanceCodeBlock.Project entered
				and  FinanceCodeBlock.FinanceDimension2 entered
				and  FESIncludedSystem
				and  FinanceEnterpriseGroup.FrontEndSplits
				and  FinanceEnterpriseGroup.UseFundedAmounts
				and !FinanceCodeBlock.Project.ExcludeFromFES
				and  FinanceCodeBlock.Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled)
					LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					if (LocalFESAmount entered)
						invoke UpdateFESExpenditures ProjectFundingSourceRel
							invoked.Commitment = true
							invoked.TransactionDate = TransactionDate
							invoked.FinanceCodeBlock = FinanceCodeBlock
							invoked.Amount = LocalFESAmount


		APUnmatchCancelTemplateReversal is an Instance Action		
			restricted
			default label is untranslatable
			Parameters
				PrmFEG					is a FinanceEnterpriseGroup
				PrmUniqueID				is UniqueID
				PrmCodeBlock			is a FinanceCodeBlock
				PrmGLDate				is Date
				PrmCurrencyAmounts		is a CurrencyAmountsGroup
				PrmSkipBudgetRebuild    is Boolean
				PrmHasPriorYearPOCommit is Boolean
				
			Action Rules
				LocalPostingDate					= TransactionDate
				include FindGLYearPeriod

				LocalGLDate				= PrmGLDate
				LocalBudgetLedger		= PrmCodeBlock.Ledger
				LocalBudgetEntity		= PrmCodeBlock.ToAccountingEntity
				
				if (BudgetEntityLedgerRel exists)
					LocalPostingDate			= TransactionDate
					LocalEndDate				= EntityYearPeriod
					LocalHeaderUniqueID = HeaderUniqueID
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= FinanceCodeBlock	
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (PrmCurrencyAmounts.FunctionalAmount)
						invoked.PrmReportAmounts.AlternateAmount  = (PrmCurrencyAmounts.AlternateAmount)
						invoked.PrmReportAmounts.AlternateAmount2 = (PrmCurrencyAmounts.AlternateAmount2)
						invoked.PrmReportAmounts.AlternateAmount3 = (PrmCurrencyAmounts.AlternateAmount3)
						invoked.PrmReportAmounts.ProjectAmount    = (PrmCurrencyAmounts.ProjectAmount)
						invoked.PrmReportAmounts.ReportAmount1    = (PrmCurrencyAmounts.ReportAmount1)
						invoked.PrmReportAmounts.ReportAmount2    = (PrmCurrencyAmounts.ReportAmount2)
						invoked.PrmReportAmounts.ReportAmount3    = (PrmCurrencyAmounts.ReportAmount3)
						invoked.PrmReportAmounts.ReportAmount4    = (PrmCurrencyAmounts.ReportAmount4)
						invoked.PrmReportAmounts.ReportAmount5    = (PrmCurrencyAmounts.ReportAmount5)
						invoked.PrmOriginatingDocument   	  	  = GLDocumentUniqueIDRel.HeaderObjectReference
					initialize LocalHeaderUniqueID

		CreateBudgetTemplateReversal is an Instance Action

			restricted
			
			Parameters
				PrmFEG					is a FinanceEnterpriseGroup
				PrmUniqueID				is UniqueID
				PrmCodeBlock			is a FinanceCodeBlock
				PrmGLDate				is Date
				PrmTransAmount			is a CurrencyAmount
				PrmCurrencyAmounts		is a CurrencyAmountsGroup
				PrmSkipBudgetRebuild    is Boolean
				PrmHasPriorYearPOCommit is Boolean
				
			Action Rules
				BypassActiveCodeBlockEdit	= true		
				if (PrmSkipBudgetRebuild = true)
					SkipBudgetRebuild = true
				if (PrmHasPriorYearPOCommit = true)
					HasPriorYearPOCommit = true
					SkipBudgetRebuild    = false
				
#ifdef module ap
				if (Status = Status.History
				and !TransactionAmount entered
				and POLineOpen)
					Status = Status.Released
#endif
				LocalGLDate				= PrmGLDate
				LocalBudgetLedger		= PrmCodeBlock.Ledger
				LocalBudgetEntity		= PrmCodeBlock.ToAccountingEntity
				
				if (BudgetEntityLedgerRel exists)
					
					LocalPostingDate			= TransactionDate
					LocalEndDate				= EntityYearPeriod


					LocalHeaderUniqueID			= HeaderUniqueID

					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= PrmFEG
						invoked.PrmBudgetEditGroup			= PrmUniqueID
						invoked.PrmTransactionCodeBlock		= PrmCodeBlock
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (PrmCurrencyAmounts.FunctionalAmount * -1)
						invoked.PrmReportAmounts.AlternateAmount  = (PrmCurrencyAmounts.AlternateAmount * -1)
						invoked.PrmReportAmounts.AlternateAmount2 = (PrmCurrencyAmounts.AlternateAmount2 * -1)
						invoked.PrmReportAmounts.AlternateAmount3 = (PrmCurrencyAmounts.AlternateAmount3 * -1)

						invoked.PrmReportAmounts.ToFunctionalAmount = (PrmCurrencyAmounts.ToFunctionalAmount * -1)
						invoked.PrmReportAmounts.ToAlternateAmount  = (PrmCurrencyAmounts.ToAlternateAmount * -1)
						invoked.PrmReportAmounts.ToAlternateAmount2 = (PrmCurrencyAmounts.ToAlternateAmount2 * -1)
						invoked.PrmReportAmounts.ToAlternateAmount3 = (PrmCurrencyAmounts.ToAlternateAmount3 * -1)

						invoked.PrmReportAmounts.ProjectAmount    = (PrmCurrencyAmounts.ProjectAmount * -1)
						invoked.PrmReportAmounts.ReportAmount1    = (PrmCurrencyAmounts.ReportAmount1 * -1)
						invoked.PrmReportAmounts.ReportAmount2    = (PrmCurrencyAmounts.ReportAmount2 * -1)
						invoked.PrmReportAmounts.ReportAmount3    = (PrmCurrencyAmounts.ReportAmount3 * -1)
						invoked.PrmReportAmounts.ReportAmount4    = (PrmCurrencyAmounts.ReportAmount4 * -1)
						invoked.PrmReportAmounts.ReportAmount5    = (PrmCurrencyAmounts.ReportAmount5 * -1)
						invoked.PrmOriginatingDocument   	  = GLDocumentUniqueIDRel.HeaderObjectReference
					initialize LocalHeaderUniqueID
						
		FreeUpAllocatedBudgetAmounts is an Instance Action
			restricted
			Entrance Rules
				if (Status = Status.Released)

					include ReturnBudgetedFunds		
	
			Action Rules
				if (Status = Status.Released)


					include CreateCommitmentHistory
					initialize LastCurrAmountDiff
					initialize LastTransactionAmount
					initialize TransactionAmount
					initialize ReportCurrencyAmount
					



				if (TransactionAmount = 0)
					Status = Status.History

			Exit Rules
				LocalHeaderUniqueID	= HeaderUniqueID
				if (Status.History
				and !GLCommitAllActiveRel exists)
					invoke Update GLDocumentUniqueIDRel					
						invoked.Status			= 9
			
		ResetRJStatus is an Update Action
			restricted
			bypass field rules
			Action Rules
				if (Status = Status.History)
					Status = Status.Released
				
			Exit Rules
			
				if (GeneralLedgerTotalRel exists)
		            invoke PostTransactions GeneralLedgerTotalRel
		                invoked.TransactionAmount		+= TransactionAmount
		                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
			                invoked.FunctionalAmount	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
			                invoked.AlternateAmount		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
			                invoked.AlternateAmount2	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
			                invoked.AlternateAmount3	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
			            else
			                invoked.FunctionalAmount	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
			                invoked.AlternateAmount		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
			                invoked.AlternateAmount2	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
			                invoked.AlternateAmount3	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
		                invoked.ProjectAmount			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
		                invoked.ReportAmount1			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
		                invoked.ReportAmount2			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
		                invoked.ReportAmount3			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
		                invoked.ReportAmount4			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
		                invoked.ReportAmount5			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
		                invoked.UnitsAmount				+= ReportCurrencyAmount
		 				if (EntityYearPeriod.PeriodType.BeginningBalance)
							invoked.UpdateChangesOnly	= true
	                			
		Purge is a Purge Action
			restricted
			Parameters
				PrmRelatedCommitment	is Boolean
				PrmPurgeReleased		is Boolean
				PrmPurgeRecalculate     is Boolean
				PrmChangeAPDistrib      is Boolean
				
			Entrance Rules
				if (!PrmRelatedCommitment
				and !System = "PR")			
					if (!Status = Status.History
					and !PrmPurgeReleased
					and !PrmPurgeRecalculate)
						LocalDateChanged	= false
						if (Status = Status.Unreleased)
							PrmAllowRebuild = true
							if (PrmChangeAPDistrib)
							    PrmAllowRebuild = false
						if (Status.Unreleased
						or  System = "RJ")
							include ReduceBudgetTemplateGroupTotals
					if (Status = Status.Released)
						LocalPostingDate	= TransactionDate
						LocalEndDate		= EntityYearPeriod			
						include ReduceGLTotalAmount
					
				if (GLCommitHistoryRel exists)
					invoke Purge GLCommitHistoryRel
					
				LocalFinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				LocalHeaderUniqueID			= HeaderUniqueID
					
			Action Rules
			
			Exit Rules
				if (instance count of GLCommitRecsExistRel < 1
				and !System = "GM")			
					invoke Purge GLDocumentUniqueIDRel
					if (!PrmPurgeRecalculate
					and !PrmChangeAPDistrib)
						invoke PurgeGroupTotalsForEditGroup BudgetTemplateGroupTotalRel
							invoked.PrmFinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup	
							invoked.PrmBudgetEditGroup			= LocalHeaderUniqueID			

		PurgeAPEncumbrance is a Purge Action
			restricted
			default label is untranslatable
			
			Entrance Rules
				include ReduceGLTotalAmount
				invoke UpdateTemplateTotals BudgetTemplate
					invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmTransactionCodeBlock				= FinanceCodeBlock
					invoked.PrmEndDate							= EntityYearPeriod
					invoked.PrmReportAmounts.FunctionalAmount	= (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.AlternateAmount	= (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.AlternateAmount2	= (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.AlternateAmount3	= (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ProjectAmount		= (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ReportAmount1		= (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ReportAmount2		= (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ReportAmount3		= (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ReportAmount4		= (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
					invoked.PrmReportAmounts.ReportAmount5		= (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
				if (GLCommitHistoryRel exists)
					invoke Purge GLCommitHistoryRel
						
			Action Rules
			
			Exit Rules
				if (instance count of GLCommitRecsExistRel < 1
				and !System = "GM")			
					invoke Purge GLDocumentUniqueIDRel
										
		RejectInvoice is a Set Action
			restricted			
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmUniqueID						is a UniqueID
					default label is "DocumentID"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmEditContext					is Alpha 50 
					default label is "EditContext"	
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmUniqueID
					required
				PrmAccountingEntity
					required
					
			Local Fields
                LocalDimensionCode               is a DimensionCode
                LocalSystem                      is a GeneralLedgerSystemCode
                LocalCurrencyCode                is a Currency
                LocalFinanceCodeBlock            is a FinanceCodeBlock
                LocalEntityYearPeriod            is a GeneralLedgerCalendarPeriod
                LocalToAccountingEntity			 is a AccountingEntity
				LocalUpdateTotalGroup			 is Boolean				
				
			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and     AccountingEntity	   = PrmAccountingEntity
				and	    HeaderUniqueID		   = PrmUniqueID
				and   ((System				   = "AP"	
				and		Status				   = Status.Released)
				or     (System				   = "CB")))	

					
			Set Is
				PrmFinanceEnterpriseGroup
				PrmAccountingEntity				
				PrmUniqueID
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				HeaderUniqueID
				FinanceCodeBlock.Ledger
				System
				CurrencyCode
				EntityYearPeriod
				FinanceCodeBlock.GeneralLedgerChartAccount	
				FinanceCodeBlock.ToAccountingEntity			
				FinanceCodeBlock.AccountingUnit
				FinanceCodeBlock.Project
				DimensionCode
			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules
				Set Rules
				
				HeaderUniqueID Set Rules
				
					Exit Rules
						LocalHeaderUniqueID			= PrmUniqueID
						invoke Update GLDocumentUniqueIDRel
							invoked.Status		 = 0
							
						invoke EditTotalsRoute BudgetTemplateGroupTotal
							invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmBudgetEditGroup					= LocalHeaderUniqueID
							invoked.PrmMode								= BudgetEditMode.UpdateOnly
							invoked.PrmTotalsProcessing					= BudgetEditTotalsProcessing.Reverse
							invoked.PrmBusinessClassName				= OriginatingTransaction.BusinessClassName
#ifdef module ap
							if (System	= "CB")	
								invoked.PrmEditContext					= PrmEditContext
							if (System	= "AP")		
								invoked.PrmEditContext					= RejectInvoiceMessage
#endif								
				DimensionCode Set Rules
				
					Entrance Rules
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalEntityYearPeriod		= EntityYearPeriod 		
						LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity

					Exit Rules
						if (LocalUpdateTotalGroup)			
							initialize TotalGroup
							LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
							TotalGroup.AccountingEntity							= LocalToAccountingEntity
							TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
							TotalGroup.GeneralLedgerTotal.System				= LocalSystem
							TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
							TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityYearPeriod
							TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
							TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
							TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
							TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
							TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
							invoke PostTransactions TotalGroup.GeneralLedgerTotal
								invoked.TransactionAmount	= TransactionAmountTotal
								invoked.FunctionalAmount	= FunctionalAmountTotal
								invoked.AlternateAmount		= AlternateAmountTotal
								invoked.AlternateAmount2	= AlternateAmount2Total
								invoked.AlternateAmount3	= AlternateAmount3Total
								invoked.ProjectAmount		= ProjectAmountTotal
								invoked.ReportAmount1		= ReportAmount1Total
								invoked.ReportAmount2		= ReportAmount2Total
								invoked.ReportAmount3		= ReportAmount3Total
								invoked.ReportAmount4		= ReportAmount4Total
								invoked.ReportAmount5		= ReportAmount5Total
								invoked.UnitsAmount			= UnitsAmountTotal
								invoked.FinanceDimension1	= LocalFinanceCodeBlock.FinanceDimension1
								invoked.FinanceDimension2	= LocalFinanceCodeBlock.FinanceDimension2
								invoked.FinanceDimension3	= LocalFinanceCodeBlock.FinanceDimension3
								invoked.FinanceDimension4	= LocalFinanceCodeBlock.FinanceDimension4
								invoked.FinanceDimension5	= LocalFinanceCodeBlock.FinanceDimension5
								invoked.FinanceDimension6	= LocalFinanceCodeBlock.FinanceDimension6
								invoked.FinanceDimension7	= LocalFinanceCodeBlock.FinanceDimension7
								invoked.FinanceDimension8	= LocalFinanceCodeBlock.FinanceDimension8
								invoked.FinanceDimension9	= LocalFinanceCodeBlock.FinanceDimension9
								invoked.FinanceDimension10  = LocalFinanceCodeBlock.FinanceDimension10						
								invoked.PeriodEndingDate	= EntityYearPeriod.Date
								if (LocalEntityYearPeriod.PeriodType.BeginningBalance)
									invoked.UpdateChangesOnly	= true
														
				Instance Rules
					if (Status.Released)			
						LocalUpdateTotalGroup		= true
					TransactionAmountTotal		    += (TransactionAmount * -1)
					if (AccountingEntity		     = FinanceCodeBlock.ToAccountingEntity)
						FunctionalAmountTotal		+= (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
						AlternateAmountTotal		+= (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
						AlternateAmount2Total		+= (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
						AlternateAmount3Total		+= (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)
					else
						FunctionalAmountTotal		+= (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
						AlternateAmountTotal		+= (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1)
						AlternateAmount2Total		+= (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
						AlternateAmount3Total		+= (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)
					ProjectAmountTotal			+= (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
					ReportAmount1Total			+= (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
					ReportAmount2Total			+= (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
					ReportAmount3Total			+= (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
					ReportAmount4Total			+= (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
					ReportAmount5Total			+= (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
					UnitsAmountTotal			+= (UnitsAmount * -1)
					LocalPostingDate			= TransactionDate
					LocalEndDate				= EntityYearPeriod			
					include ReduceOldCodeBlockBudgetTemplate
					if (System					= "AP")		
						include CreateCommitmentHistory
					Status						 = Status.Unreleased

					if  (FinanceCodeBlock.Project entered
					and  FinanceCodeBlock.FinanceDimension2 entered
					and  FESIncludedSystem
					and  FinanceEnterpriseGroup.FrontEndSplits
					and  FinanceEnterpriseGroup.UseFundedAmounts
					and !FinanceCodeBlock.Project.ExcludeFromFES
					and  FinanceCodeBlock.Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled)
						LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1
						if (LocalFESAmount entered)
							invoke UpdateFESExpenditures ProjectFundingSourceRel
								invoked.Commitment = true
								invoked.TransactionDate = TransactionDate
								invoked.FinanceCodeBlock = FinanceCodeBlock
								invoked.Amount = LocalFESAmount

		UpdateToReleased is a Set Action
			restricted			

			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmUniqueID						is a UniqueID
					default label is "DocumentID"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmFromPurchaseOrderInvoiceCancel is Boolean
				PrmDoNotUpdateFES 				is Boolean 
					
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmUniqueID
					required
				PrmAccountingEntity

					
			Local Fields	
                LocalDimensionCode               is a DimensionCode
                LocalSystem                      is a GeneralLedgerSystemCode
                LocalCurrencyCode                is a Currency
                LocalFinanceCodeBlock            is a FinanceCodeBlock
                LocalEntityYearPeriod            is a GeneralLedgerCalendarPeriod
                LocalToAccountingEntity			 is a AccountingEntity
				
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	   ((PrmAccountingEntity entered
				and      AccountingEntity	   = PrmAccountingEntity)
				or		!PrmAccountingEntity entered)
				and	    HeaderUniqueID		   = PrmUniqueID)
				and		((Status = Status.Unreleased)
				or		 (Status = Status.Released
				and		  LastCurrAmountDiff.FunctionalAmount entered)	
				or		 (Status = Status.Released
				and		  LastCommitmentGroup entered)
				or		 (Status = Status.Released
				and		  PrmFromPurchaseOrderInvoiceCancel)))
			Set Is
				PrmFinanceEnterpriseGroup
				PrmAccountingEntity				
				PrmUniqueID
				
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				HeaderUniqueID
				FinanceCodeBlock.Ledger
				System
				CurrencyCode
				FinanceCodeBlock.ToAccountingEntity			
				EntityYearPeriod
				FinanceCodeBlock.GeneralLedgerChartAccount	
				FinanceCodeBlock.AccountingUnit
				FinanceCodeBlock.Project
				DimensionCode
				
			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules	
				Set Rules
					Entrance Rules
						BypassActiveCodeBlockEdit = true	

				HeaderUniqueID Set Rules
				
					Exit Rules
						LocalHeaderUniqueID			= PrmUniqueID
						invoke Update GLDocumentUniqueIDRel
							invoked.Status		 = 1

																					
				DimensionCode Set Rules
				
					Entrance Rules
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalEntityYearPeriod		= EntityYearPeriod 		
						LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity

					Exit Rules
						initialize TotalGroup
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						if (LocalSystem = "RQ")
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit			= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal
							invoked.TransactionAmount	= TransactionAmountTotal
							invoked.FunctionalAmount	= FunctionalAmountTotal
							invoked.AlternateAmount		= AlternateAmountTotal
							invoked.AlternateAmount2	= AlternateAmount2Total
							invoked.AlternateAmount3	= AlternateAmount3Total
							invoked.ProjectAmount		= ProjectAmountTotal
							invoked.ReportAmount1		= ReportAmount1Total
							invoked.ReportAmount2		= ReportAmount2Total
							invoked.ReportAmount3		= ReportAmount3Total
							invoked.ReportAmount4		= ReportAmount4Total
							invoked.ReportAmount5		= ReportAmount5Total
							invoked.UnitsAmount			= UnitsAmountTotal
							invoked.FinanceDimension1	= LocalFinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	= LocalFinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	= LocalFinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	= LocalFinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	= LocalFinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	= LocalFinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	= LocalFinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	= LocalFinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	= LocalFinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  = LocalFinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	= EntityYearPeriod.Date
							if (LocalEntityYearPeriod.PeriodType.BeginningBalance)
								invoked.UpdateChangesOnly = true													
				Instance Rules

					if (Status = Status.Released
					and !PrmFromPurchaseOrderInvoiceCancel)
	                    ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount += LastCurrAmountDiff.FunctionalAmount
	                    ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount	+= LastCurrAmountDiff.AlternateAmount
	                    ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount	+= LastCurrAmountDiff.AlternateAmount2
	                    ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount	+= LastCurrAmountDiff.AlternateAmount3
	                    ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount	+= LastCurrAmountDiff.ToFunctionalAmount
	                    ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount	+= LastCurrAmountDiff.ToAlternateAmount
	                    ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount	+= LastCurrAmountDiff.ToAlternateAmount2
	                    ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount	+= LastCurrAmountDiff.ToAlternateAmount3
	                    ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount	+= LastCurrAmountDiff.ProjectAmount
	                    ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount	+= LastCurrAmountDiff.ReportAmount1
	                    ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount	+= LastCurrAmountDiff.ReportAmount2
	                    ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount	+= LastCurrAmountDiff.ReportAmount3
	                    ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount	+= LastCurrAmountDiff.ReportAmount4
	                    ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount	+= LastCurrAmountDiff.ReportAmount5
	                    
	                    if (!LastCommitmentGroup entered)
							if (TransactionAmount = LastTransactionAmount)
								TransactionAmountTotal  += TransactionAmount
							else
								TransactionAmountTotal	+= (LastTransactionAmount - TransactionAmount)
								
							if (AccountingEntity 		 = FinanceCodeBlock.ToAccountingEntity)
								FunctionalAmountTotal	+= LastCurrAmountDiff.FunctionalAmount
								AlternateAmountTotal	+= LastCurrAmountDiff.AlternateAmount
								AlternateAmount2Total	+= LastCurrAmountDiff.AlternateAmount2
								AlternateAmount3Total	+= LastCurrAmountDiff.AlternateAmount3
							else
								FunctionalAmountTotal	+= LastCurrAmountDiff.ToFunctionalAmount
								AlternateAmountTotal	+= LastCurrAmountDiff.ToAlternateAmount
								AlternateAmount2Total	+= LastCurrAmountDiff.ToAlternateAmount2
								AlternateAmount3Total	+= LastCurrAmountDiff.ToAlternateAmount3
							
							ProjectAmountTotal			+= LastCurrAmountDiff.ProjectAmount
							ReportAmount1Total			+= LastCurrAmountDiff.ReportAmount1
							ReportAmount2Total			+= LastCurrAmountDiff.ReportAmount2
							ReportAmount3Total			+= LastCurrAmountDiff.ReportAmount3
							ReportAmount4Total			+= LastCurrAmountDiff.ReportAmount4
							ReportAmount5Total			+= LastCurrAmountDiff.ReportAmount5
						else
							if (TransactionAmount 		 = LastTransactionAmount)
								TransactionAmountTotal  += TransactionAmount
							else
								TransactionAmountTotal	+= LastTransactionAmount
								
							if (AccountingEntity 		 = FinanceCodeBlock.ToAccountingEntity)
								FunctionalAmountTotal	+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
								AlternateAmountTotal	+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
								AlternateAmount2Total	+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
								AlternateAmount3Total	+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
							else
								FunctionalAmountTotal	+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
								AlternateAmountTotal	+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
								AlternateAmount2Total	+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
								AlternateAmount3Total	+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
							
							ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
							ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
							ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
							ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
							ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
							ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
													
						UnitsAmountTotal				+= UnitsAmount
	                    TransactionAmount				 = LastTransactionAmount
	                    						
						if (TransactionAmount = 0)
							Status 			= Status.History
							CloseDate		= current corporate date

	                    initialize LastTransactionAmount
	                    initialize LastCurrAmountDiff
	                    initialize LastCommitmentGroup
	                    						
					else
	                    initialize LastCommitmentGroup
						TransactionAmountTotal		    += TransactionAmount
						if (AccountingEntity		     = FinanceCodeBlock.ToAccountingEntity)
							FunctionalAmountTotal		+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
						else
							FunctionalAmountTotal		+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
						ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						UnitsAmountTotal			+= UnitsAmount
						include CreateCommitmentHistory
						Status						 = Status.Released
						HasPriorYearPOCommit         = false
						SkipBudgetRebuild            = false
						if  (GLEncumbranceReference entered
						and !System				= "GL")
							invoke UpdateReleasedCommitment GLEncumbranceRel
								if (first GLEncumbranceRel.TransactionAmount < TransactionAmount)
									initialize invoked.TransactionAmount
									initialize invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount 

									initialize invoked.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount 

									initialize invoked.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 
									initialize invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 
								else
									invoked.TransactionAmount											= first GLEncumbranceRel.TransactionAmount - TransactionAmount
									invoked.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

									invoked.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

									invoked.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
									invoked.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount = first GLEncumbranceRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount

					if  (FinanceCodeBlock.Project entered
					and  FinanceCodeBlock.FinanceDimension2 entered
					and  FESIncludedSystem
					and  !PrmDoNotUpdateFES
					and  FinanceEnterpriseGroup.FrontEndSplits
					and  FinanceEnterpriseGroup.UseFundedAmounts
					and !FinanceCodeBlock.Project.ExcludeFromFES
					and  FinanceCodeBlock.Project.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled)
						if (Status.Released
						and old Status.Unreleased)
							LocalFESAmount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						else
						if (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount changed)
							LocalFESAmount = (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - old ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount)
						if (LocalFESAmount entered)
							invoke UpdateFESExpenditures ProjectFundingSourceRel
								invoked.Commitment = true
								invoked.TransactionDate = TransactionDate
								invoked.FinanceCodeBlock = FinanceCodeBlock
								invoked.Amount = LocalFESAmount

		ClearPayrollEncumbrance is a Set Action
			restricted			
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmUniqueID						is a UniqueID
					default label is "DocumentID"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmUniqueID
					required
					
			Local Fields
                LocalDimensionCode               is a DimensionCode
                LocalSystem                      is a GeneralLedgerSystemCode
                LocalCurrencyCode                is a Currency
                LocalFinanceCodeBlock            is a FinanceCodeBlock
                LocalEntityYearPeriod            is a GeneralLedgerCalendarPeriod
                LocFinanceEnterpriseGroup		 is like FinanceEnterpriseGroup
                LocHeaderUniqueID				 is like UniqueID
                LocalToAccountingEntity			 is a AccountingEntity
				
			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	    HeaderUniqueID		   = PrmUniqueID)
				
			Set Is
				PrmFinanceEnterpriseGroup
				PrmUniqueID
				
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				HeaderUniqueID
				FinanceCodeBlock.Ledger
				System
				CurrencyCode
				FinanceCodeBlock.ToAccountingEntity			
				EntityYearPeriod
				FinanceCodeBlock.GeneralLedgerChartAccount	
				FinanceCodeBlock.AccountingUnit
				FinanceCodeBlock.Project
				DimensionCode
				
			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules	
				Set Rules
				
				HeaderUniqueID Set Rules
					Entrance Rules
						LocHeaderUniqueID			= PrmUniqueID
						LocFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						
					Exit Rules




						invoke EditTotalsRoute BudgetTemplateGroupTotal

							invoked.PrmFinanceEnterpriseGroup			= LocFinanceEnterpriseGroup
							invoked.PrmBudgetEditGroup					= LocHeaderUniqueID
							invoked.PrmMode								= BudgetEditMode.UpdateOnly

							invoked.PrmBusinessClassName				= OriginatingTransaction.BusinessClassName
							invoked.PrmEditContext						= "ClearPayrollEncumbrance"
							
						invoke PurgeGLCommitFull
							run after AsyncId
							invoked.PrmFinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
							invoked.PrmHeaderUniqueID					= PrmUniqueID
																				
				DimensionCode Set Rules
				
					Entrance Rules
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalEntityYearPeriod		= EntityYearPeriod 		
                		LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity

					Exit Rules
						initialize TotalGroup
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project				= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode			= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger			= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal
							invoked.TransactionAmount	+= TransactionAmountTotal
							invoked.FunctionalAmount	+= FunctionalAmountTotal
							invoked.AlternateAmount		+= AlternateAmountTotal
							invoked.AlternateAmount2	+= AlternateAmount2Total
							invoked.AlternateAmount3	+= AlternateAmount3Total
							invoked.ProjectAmount		+= ProjectAmountTotal
							invoked.ReportAmount1		+= ReportAmount1Total
							invoked.ReportAmount2		+= ReportAmount2Total
							invoked.ReportAmount3		+= ReportAmount3Total
							invoked.ReportAmount4		+= ReportAmount4Total
							invoked.ReportAmount5		+= ReportAmount5Total
							invoked.UnitsAmount			+= UnitsAmountTotal
							invoked.FinanceDimension1	+= LocalFinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	+= LocalFinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	+= LocalFinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	+= LocalFinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	+= LocalFinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	+= LocalFinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	+= LocalFinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	+= LocalFinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	+= LocalFinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  += LocalFinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	+= EntityYearPeriod.Date
			 				if (LocalEntityYearPeriod.PeriodType.BeginningBalance)
								invoked.UpdateChangesOnly	= true
														
				Instance Rules
					TransactionAmountTotal		    += (TransactionAmount * -1)
					if (AccountingEntity		     = FinanceCodeBlock.ToAccountingEntity)
						FunctionalAmountTotal		+= (ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
						AlternateAmountTotal		+= (ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
						AlternateAmount2Total		+= (ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
						AlternateAmount3Total		+= (ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)
					else
						FunctionalAmountTotal		+= (ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
						AlternateAmountTotal		+= (ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1)
						AlternateAmount2Total		+= (ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
						AlternateAmount3Total		+= (ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)
					ProjectAmountTotal			+= (ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
					ReportAmount1Total			+= (ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
					ReportAmount2Total			+= (ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
					ReportAmount3Total			+= (ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
					ReportAmount4Total			+= (ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
					ReportAmount5Total			+= (ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
					UnitsAmountTotal			+= (UnitsAmount * -1)
					LocalPostingDate			= TransactionDate
					LocalEndDate				= EntityYearPeriod			
					include ReduceOldCodeBlockBudgetTemplate

					
		PurgeGLCommitFull is a Set Action	
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmHeaderUniqueID			is UniqueID
					default label is "DocumentUniqueID"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    HeaderUniqueID 			= PrmHeaderUniqueID)
				
			Action Rules
				Instance Rules
					invoke Purge GLCommit
				
		ProcessYearEndEncumbrance is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmBasisEndDate					is Date
					default label is "BasisEndDate"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"
				PrmHeaderUniqueID			is UniqueID
					default label is "DocumentUniqueID"

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Set Is
				PrmEnterpriseGroup
				PrmAccountingEntity

			Local Fields	
				LocalDimensionCode				is a DimensionCode
				LocalSystem						is a GeneralLedgerSystemCode
				LocalCurrencyCode				is a Currency
				LocalFinanceCodeBlock			is a FinanceCodeBlock
				LocalOldCurrencyCode			is like Currency				
				NewEntityYearPeriod				is like GeneralLedgerCalendarPeriod
				LocalEntityLedgerPeriod			is like GeneralLedgerCalendarPeriod
				LocalRolloverResultView			is a EncumbranceRolloverResult view
				LocalToAccountingEntity			is a AccountingEntity
			Instance Selection
				where (FinanceEnterpriseGroup			= PrmEnterpriseGroup
				and    AccountingEntity					= PrmAccountingEntity
				and    TransactionDate	 				<= PrmBasisEndDate
#ifdef module po
				and    (!IsContractManagement
				or     (IsContractManagement
				and     FinanceEnterpriseGroup.ProcessYearEndEncumbranceForContractManagement)) 
#endif
				and    Status.Released)

			Sort Order
				FinanceEnterpriseGroup
				FinanceCodeBlock.Ledger
				AccountingEntity
				System
				CurrencyCode
    	    	FinanceCodeBlock.ToAccountingEntity		
    	    	FinanceCodeBlock.AccountingUnit
        	    FinanceCodeBlock.GeneralLedgerChartAccount
            	FinanceCodeBlock.Project
				DimensionCode
				EntityYearPeriod

			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules

				Set Rules	
				
				FinanceEnterpriseGroup Set Rules 
					Entrance Rules

						LocalRolloverType	= 1
						include CreateRolloverResult

					Exit Rules 

#ifdef module po
						if (FinanceEnterpriseGroup.ProcessYearEndEncumbranceForContractManagement
						and FinanceEnterpriseGroup.UpdateSpreadDatesForContractManagementRollover)
							for each FinanceEnterpriseGroup.ContractGroupRel 

								invoke RollSpreadDates each 
									invoked.PrmContractGroup		= each.ContractGroup 
									invoked.CurrentYearEndDate		= PrmBasisEndDate
									invoked.ProposedNewSpreadDate   = PrmNewYearDate 
									invoked.PrmHeaderUniqueID       = PrmHeaderUniqueID
#endif
						invoke SetAsCompleted LocalRolloverResultView.EncumbranceRolloverResult

				AccountingEntity Set Rules
					Entrance Rules
						LocalPostingDate	= PrmNewYearDate
						include FindGLYearPeriod
						NewEntityYearPeriod	 = DerivedEntityCalendarPeriod

				DimensionCode Set Rules
				
					Entrance Rules
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity

					Exit Rules
						initialize TotalGroup
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario	
						if (LocalSystem = "RQ")														
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario	
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= NewEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal

							invoked.TransactionAmount	= TransactionAmountTotal
							invoked.FunctionalAmount	= FunctionalAmountTotal
							invoked.AlternateAmount		= AlternateAmountTotal
							invoked.AlternateAmount2	= AlternateAmount2Total
							invoked.AlternateAmount3	= AlternateAmount3Total
							invoked.ProjectAmount		= ProjectAmountTotal
							invoked.ReportAmount1		= ReportAmount1Total
							invoked.ReportAmount2		= ReportAmount2Total
							invoked.ReportAmount3		= ReportAmount3Total
							invoked.ReportAmount4		= ReportAmount4Total
							invoked.ReportAmount5		= ReportAmount5Total
							invoked.UnitsAmount			= UnitsAmountTotal
							invoked.FinanceDimension1	= LocalFinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	= LocalFinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	= LocalFinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	= LocalFinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	= LocalFinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	= LocalFinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	= LocalFinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	= LocalFinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	= LocalFinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  = LocalFinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	= PrmNewYearDate

						invoke UpdateTemplateTotals BudgetTemplate
							invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmTransactionCodeBlock				= LocalFinanceCodeBlock
							invoked.PrmEndDate							= NewEntityYearPeriod
							invoked.PrmReportAmounts.FunctionalAmount	= FunctionalAmountTotal
							invoked.PrmReportAmounts.AlternateAmount	= AlternateAmountTotal
							invoked.PrmReportAmounts.AlternateAmount2	= AlternateAmount2Total
							invoked.PrmReportAmounts.AlternateAmount3	= AlternateAmount3Total
							invoked.PrmReportAmounts.ProjectAmount		= ProjectAmountTotal
							invoked.PrmReportAmounts.ReportAmount1		= ReportAmount1Total
							invoked.PrmReportAmounts.ReportAmount2		= ReportAmount2Total
							invoked.PrmReportAmounts.ReportAmount3		= ReportAmount3Total
							invoked.PrmReportAmounts.ReportAmount4		= ReportAmount4Total
							invoked.PrmReportAmounts.ReportAmount5		= ReportAmount5Total

				EntityYearPeriod Set Rules
				
					Entrance Rules
						LocalEntityLedgerPeriod					= EntityYearPeriod
						LocalOldCurrencyCode					= CurrencyCode

					Exit Rules
				
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						if (LocalSystem = "RQ")														
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario	
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalOldCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityLedgerPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal
							invoked.TransactionAmount	= TransactionAmountTotal * -1
							invoked.FunctionalAmount	= FunctionalAmountTotal * -1
							invoked.AlternateAmount		= AlternateAmountTotal * -1
							invoked.AlternateAmount2	= AlternateAmount2Total * -1
							invoked.AlternateAmount3	= AlternateAmount3Total * -1
							invoked.ProjectAmount		= ProjectAmountTotal * -1
							invoked.ReportAmount1		= ReportAmount1Total * -1
							invoked.ReportAmount2		= ReportAmount2Total * -1
							invoked.ReportAmount3		= ReportAmount3Total * -1
							invoked.ReportAmount4		= ReportAmount4Total * -1
							invoked.ReportAmount5		= ReportAmount5Total * -1
							invoked.UnitsAmount			= UnitsAmountTotal * -1

						invoke UpdateTemplateTotals BudgetTemplate
							invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmTransactionCodeBlock				= LocalFinanceCodeBlock
							invoked.PrmEndDate							= LocalEntityLedgerPeriod
							invoked.PrmReportAmounts.FunctionalAmount	= FunctionalAmountTotal * -1
							invoked.PrmReportAmounts.AlternateAmount	= AlternateAmountTotal * -1
							invoked.PrmReportAmounts.AlternateAmount2	= AlternateAmount2Total * -1
							invoked.PrmReportAmounts.AlternateAmount3	= AlternateAmount3Total * -1
							invoked.PrmReportAmounts.ProjectAmount		= ProjectAmountTotal * -1
							invoked.PrmReportAmounts.ReportAmount1		= ReportAmount1Total * -1
							invoked.PrmReportAmounts.ReportAmount2		= ReportAmount2Total * -1
							invoked.PrmReportAmounts.ReportAmount3		= ReportAmount3Total * -1
							invoked.PrmReportAmounts.ReportAmount4		= ReportAmount4Total * -1
							invoked.PrmReportAmounts.ReportAmount5		= ReportAmount5Total * -1

				Instance Rules
					if (!POCommitOrigPeriod entered)
						POCommitOrigPeriod			= EntityYearPeriod
						POCommitOrigID				= OriginatingTransaction
						POCommitTransactionAmount	= TransactionAmount
						POCommitUnitsAmount			= UnitsAmount
						POCommitCurrencyAmount		= ReportCurrencyAmount
						POCommitOrigTranAmount		= TransactionAmount
						POCommitOrigUnitsAmount		= UnitsAmount
						POCommitOrigCurrencyAmount	= ReportCurrencyAmount

					LocalPriorYearPeriod		= EntityYearPeriod
					EntityYearPeriod				= NewEntityYearPeriod
					TransactionAmountTotal		+= TransactionAmount
					FunctionalAmountTotal		+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					AlternateAmountTotal		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					AlternateAmount2Total		+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					AlternateAmount3Total		+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					UnitsAmountTotal			+= UnitsAmount
					
					include CreateRolloverDetail

		MovePriorYearPOEncumbranceToCurrentYear is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmBasisEndDate					is Date
					default label is "BasisEndDate"
				PrmBasisEndPeriod				is a GeneralLedgerCalendarPeriod
					default label is "BasisEndPeriod"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"

			Queue Mapping Fields
				PrmAccountingEntity.PostingCategory
				
			Set Is
				PrmEnterpriseGroup
				PrmAccountingEntity

			Local Fields	
				LocalDimensionCode				is a DimensionCode
				LocalSystem						is a GeneralLedgerSystemCode
				LocalCurrencyCode				is a Currency
				LocalFinanceCodeBlock			is a FinanceCodeBlock
				LocalEntityLedgerPeriod			is like GeneralLedgerCalendarPeriod
				LocalOldCurrencyCode			is like Currency				
				NewEntityYearPeriod				is like GeneralLedgerCalendarPeriod
				LocalRolloverResultView			is a EncumbranceRolloverResult view
				LocalToAccountingEntity			is a AccountingEntity
				
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and    AccountingEntity			= PrmAccountingEntity
				and	   System					= "PO"
				and EntityYearPeriod			<= PrmBasisEndPeriod
#ifdef module po
				and    (!IsContractManagement
				or     (IsContractManagement
				and     FinanceEnterpriseGroup.ProcessYearEndEncumbranceForContractManagement)) 
#endif
				and    Status.Released)

			Sort Order
				FinanceEnterpriseGroup
				FinanceCodeBlock.Ledger
				AccountingEntity
				System
				CurrencyCode
    	    	FinanceCodeBlock.ToAccountingEntity		
    	    	FinanceCodeBlock.AccountingUnit
        	    FinanceCodeBlock.GeneralLedgerChartAccount
            	FinanceCodeBlock.Project
				DimensionCode
				EntityYearPeriod

			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules	
				Set Rules

				FinanceEnterpriseGroup Set Rules
					Entrance Rules
						LocalRolloverType	= 2
						include CreateRolloverResult

					Exit Rules 
						invoke SetAsCompleted LocalRolloverResultView.EncumbranceRolloverResult

				AccountingEntity Set Rules
					Entrance Rules
						LocalPostingDate	= PrmNewYearDate
						include FindGLYearPeriod
						NewEntityYearPeriod	 = DerivedEntityCalendarPeriod

				DimensionCode Set Rules
				
					Entrance Rules
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity

					Exit Rules
						initialize TotalGroup
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario	
						if (LocalSystem = "RQ")														
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario	
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= NewEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal

							invoked.TransactionAmount	= TransactionAmountTotal
							invoked.FunctionalAmount	= FunctionalAmountTotal
							invoked.AlternateAmount		= AlternateAmountTotal
							invoked.AlternateAmount2	= AlternateAmount2Total
							invoked.AlternateAmount3	= AlternateAmount3Total
							invoked.ProjectAmount		= ProjectAmountTotal
							invoked.ReportAmount1		= ReportAmount1Total
							invoked.ReportAmount2		= ReportAmount2Total
							invoked.ReportAmount3		= ReportAmount3Total
							invoked.ReportAmount4		= ReportAmount4Total
							invoked.ReportAmount5		= ReportAmount5Total
							invoked.UnitsAmount			= UnitsAmountTotal
							invoked.FinanceDimension1	= LocalFinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	= LocalFinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	= LocalFinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	= LocalFinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	= LocalFinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	= LocalFinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	= LocalFinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	= LocalFinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	= LocalFinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  = LocalFinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	= PrmNewYearDate

						invoke UpdateTemplateTotals BudgetTemplate
							invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmTransactionCodeBlock				= LocalFinanceCodeBlock
							invoked.PrmEndDate							= NewEntityYearPeriod
							invoked.PrmReportAmounts.FunctionalAmount	= FunctionalAmountTotal
							invoked.PrmReportAmounts.AlternateAmount	= AlternateAmountTotal
							invoked.PrmReportAmounts.AlternateAmount2	= AlternateAmount2Total
							invoked.PrmReportAmounts.AlternateAmount3	= AlternateAmount3Total
							invoked.PrmReportAmounts.ProjectAmount		= ProjectAmountTotal
							invoked.PrmReportAmounts.ReportAmount1		= ReportAmount1Total
							invoked.PrmReportAmounts.ReportAmount2		= ReportAmount2Total
							invoked.PrmReportAmounts.ReportAmount3		= ReportAmount3Total
							invoked.PrmReportAmounts.ReportAmount4		= ReportAmount4Total
							invoked.PrmReportAmounts.ReportAmount5		= ReportAmount5Total

				EntityYearPeriod Set Rules
				
					Entrance Rules
						LocalEntityLedgerPeriod					= EntityYearPeriod
						LocalOldCurrencyCode					= CurrencyCode

					Exit Rules
				
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						if (LocalSystem = "RQ")														
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario	
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalOldCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityLedgerPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit		= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke PostTransactions TotalGroup.GeneralLedgerTotal
							invoked.TransactionAmount	= TransactionAmountTotal * -1
							invoked.FunctionalAmount	= FunctionalAmountTotal * -1
							invoked.AlternateAmount		= AlternateAmountTotal * -1
							invoked.AlternateAmount2	= AlternateAmount2Total * -1
							invoked.AlternateAmount3	= AlternateAmount3Total * -1
							invoked.ProjectAmount		= ProjectAmountTotal * -1
							invoked.ReportAmount1		= ReportAmount1Total * -1
							invoked.ReportAmount2		= ReportAmount2Total * -1
							invoked.ReportAmount3		= ReportAmount3Total * -1
							invoked.ReportAmount4		= ReportAmount4Total * -1
							invoked.ReportAmount5		= ReportAmount5Total * -1
							invoked.UnitsAmount			= UnitsAmountTotal * -1

						invoke UpdateTemplateTotals BudgetTemplate
							invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmTransactionCodeBlock				= LocalFinanceCodeBlock
							invoked.PrmEndDate							= LocalEntityLedgerPeriod
							invoked.PrmReportAmounts.FunctionalAmount	= FunctionalAmountTotal * -1
							invoked.PrmReportAmounts.AlternateAmount	= AlternateAmountTotal * -1
							invoked.PrmReportAmounts.AlternateAmount2	= AlternateAmount2Total * -1
							invoked.PrmReportAmounts.AlternateAmount3	= AlternateAmount3Total * -1
							invoked.PrmReportAmounts.ProjectAmount		= ProjectAmountTotal * -1
							invoked.PrmReportAmounts.ReportAmount1		= ReportAmount1Total * -1
							invoked.PrmReportAmounts.ReportAmount2		= ReportAmount2Total * -1
							invoked.PrmReportAmounts.ReportAmount3		= ReportAmount3Total * -1
							invoked.PrmReportAmounts.ReportAmount4		= ReportAmount4Total * -1
							invoked.PrmReportAmounts.ReportAmount5		= ReportAmount5Total * -1

				Instance Rules
					if (!POCommitOrigPeriod entered)
						POCommitOrigPeriod			= EntityYearPeriod
						POCommitOrigID				= OriginatingTransaction
						POCommitTransactionAmount	= TransactionAmount
						POCommitUnitsAmount			= UnitsAmount
						POCommitCurrencyAmount		= ReportCurrencyAmount
						POCommitOrigTranAmount		= TransactionAmount
						POCommitOrigUnitsAmount		= UnitsAmount
						POCommitOrigCurrencyAmount	= ReportCurrencyAmount

					LocalPriorYearPeriod		= EntityYearPeriod
					EntityYearPeriod				= NewEntityYearPeriod
					TransactionAmountTotal		+= TransactionAmount
					FunctionalAmountTotal		+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					AlternateAmountTotal		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					AlternateAmount2Total		+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					AlternateAmount3Total		+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					UnitsAmountTotal			+= UnitsAmount

					include CreateRolloverDetail

		PurgePriorPAEncumbranceRecords is a Set Action
			restricted
			
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmHeaderUniqueID			is UniqueID
					default label is "DocumentUniqueID"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    HeaderUniqueID 			= PrmHeaderUniqueID)
				
			Action Rules
				Instance Rules
					invoke Purge GLCommit

		RecalculateProjectFESCommitments is a Set Action
			restricted
			synchronized on "RecalculateProjectFESCommitments:<PrmFinanceEnterpriseGroup><PrmProjectContract><PrmProject>"
			Parameters
                PrmFinanceEnterpriseGroup	is like FinanceEnterpriseGroup
                PrmProjectContract			is like Project
                PrmProject					is like Project
			Local Fields
				LocalSkip					is Boolean
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    FinanceCodeBlock.Project	= PrmProject
				and    Status.Released
				and    FinanceCodeBlock.FinanceDimension2 entered
				and    ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
				and   (System = "PO"
				or     System = "RQ"
				or     System = "AP"
				or     System = "CB"))
			Sort Order is ByProjectAndSystemCurrent
			Action Rules
				Instance Rules
					LocalProjectContract = PrmProjectContract
					invoke UpdateFESExpenditures ProjectFundingSourceFESRel
						invoked.TransactionDate	= TransactionDate
						invoked.FinanceCodeBlock = FinanceCodeBlock
						invoked.Amount = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.Commitment = true

#ifdef module ap					
		FixGLCommit is a Set Action




			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"

			Queue Mapping Fields
				
			Set Is
				PrmFinanceEnterpriseGroup

			Local Fields	
				LocalPeriodChanged				is Boolean
				LocalEntityLedgerPeriod			is like GeneralLedgerCalendarPeriod
				NewEntityYearPeriod				is like GeneralLedgerCalendarPeriod
				LocalStatus						is like Status
				LocalSystem						is like GeneralLedgerSystemCode
				LocalCurrency					is like Currency
				LocalCodeBlock					is like FinanceCodeBlock
				LocalDimensionCode				is like DimensionCode
				
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and	   AccountingEntity entered
				and	   TransactionDate year		> 2016
				and   (Status.Released
				or	   Status.Unreleased)
				and   !EntityYearPeriod			= first FixitGeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod)
				
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				Status
				FinanceCodeBlock.Ledger
				System
				CurrencyCode
	        	FinanceCodeBlock.AccountingUnit
    	        FinanceCodeBlock.GeneralLedgerChartAccount
            	FinanceCodeBlock.Project
				DimensionCode
				TransactionDate

			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules	
				Set Rules
				
				TransactionDate Set Rules
					Entrance Rules
					
						LocalPeriodChanged				= false
						LocalEntityLedgerPeriod			= EntityYearPeriod
						LocalSystem						= System
						LocalCurrency					= CurrencyCode
						LocalCodeBlock					= FinanceCodeBlock
						LocalDimensionCode				= DimensionCode
						
						LocalPostingDate				= TransactionDate
						include FindGLYearPeriod
						NewEntityYearPeriod	 			= DerivedEntityCalendarPeriod

					Exit Rules
						if (LocalPeriodChanged)

							LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
							if (LocalSystem = "RQ")
								LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario
							LocalGeneralLedgerTotal.Ledger						= LocalCodeBlock.Ledger
							LocalGeneralLedgerTotal.System						= LocalSystem
							LocalGeneralLedgerTotal.Currency					= LocalCurrency
							LocalGeneralLedgerTotal.EntityYearPeriod			= LocalEntityLedgerPeriod
							LocalGeneralLedgerTotal.AccountingUnit				= LocalCodeBlock.AccountingUnit
							LocalGeneralLedgerTotal.GeneralLedgerChartAccount	= LocalCodeBlock.GeneralLedgerChartAccount
							LocalGeneralLedgerTotal.Project						= LocalCodeBlock.Project
							LocalGeneralLedgerTotal.DimensionCode				= LocalDimensionCode
							LocalGeneralLedgerTotal.PrimaryLedger				= LocalCodeBlock.Ledger
							invoke PostTransactions LocalGeneralLedgerTotal
								invoked.TransactionAmount	= TransactionAmountTotal * -1
								invoked.FunctionalAmount	= FunctionalAmountTotal * -1
								invoked.AlternateAmount		= AlternateAmountTotal * -1
								invoked.AlternateAmount2	= AlternateAmount2Total * -1
								invoked.AlternateAmount3	= AlternateAmount3Total * -1
								invoked.ProjectAmount		= ProjectAmountTotal * -1
								invoked.ReportAmount1		= ReportAmount1Total * -1
								invoked.ReportAmount2		= ReportAmount2Total * -1
								invoked.ReportAmount3		= ReportAmount3Total * -1
								invoked.ReportAmount4		= ReportAmount4Total * -1
								invoked.ReportAmount5		= ReportAmount5Total * -1
								invoked.UnitsAmount			= UnitsAmountTotal * -1
							

							LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
							if (LocalSystem = "RQ")
								LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario
							LocalGeneralLedgerTotal.Ledger						= LocalCodeBlock.Ledger
							LocalGeneralLedgerTotal.System						= LocalSystem
							LocalGeneralLedgerTotal.Currency					= LocalCurrency
							LocalGeneralLedgerTotal.EntityYearPeriod			= NewEntityYearPeriod
							LocalGeneralLedgerTotal.AccountingUnit				= LocalCodeBlock.AccountingUnit
							LocalGeneralLedgerTotal.GeneralLedgerChartAccount	= LocalCodeBlock.GeneralLedgerChartAccount
							LocalGeneralLedgerTotal.Project						= LocalCodeBlock.Project
							LocalGeneralLedgerTotal.DimensionCode				= LocalDimensionCode
							LocalGeneralLedgerTotal.PrimaryLedger				= LocalCodeBlock.Ledger
							invoke PostTransactions LocalGeneralLedgerTotal
								invoked.TransactionAmount	= TransactionAmountTotal
								invoked.FunctionalAmount	= FunctionalAmountTotal
								invoked.AlternateAmount		= AlternateAmountTotal
								invoked.AlternateAmount2	= AlternateAmount2Total
								invoked.AlternateAmount3	= AlternateAmount3Total
								invoked.ProjectAmount		= ProjectAmountTotal
								invoked.ReportAmount1		= ReportAmount1Total
								invoked.ReportAmount2		= ReportAmount2Total
								invoked.ReportAmount3		= ReportAmount3Total
								invoked.ReportAmount4		= ReportAmount4Total
								invoked.ReportAmount5		= ReportAmount5Total
								invoked.UnitsAmount			= UnitsAmountTotal

				Instance Rules
					if (!EntityYearPeriod		= NewEntityYearPeriod)
						LocalPeriodChanged		= true
						EntityYearPeriod		= NewEntityYearPeriod
						TransactionAmountTotal		+= TransactionAmount
		                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
							FunctionalAmountTotal		+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

						else
							FunctionalAmountTotal		+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

						ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						UnitsAmountTotal			+= UnitsAmount
					
		UpdateFromAmountServiceFix is an Update Action
			restricted
			bypass field rules
			Entrance Rules

				initialize	LocalCurrAmount
				LocalBudgetEntity					= FinanceCodeBlock.ToAccountingEntity	
				LocalBudgetLedger					= FinanceCodeBlock.Ledger 				
				LocalPostingDate	= TransactionDate
				LocalEndDate		= EntityYearPeriod		
				if (POCommitOrigPeriod entered)				
					LocalEndDate	= POCommitOrigPeriod	
				if (BudgetEntityLedgerRel exists)
					LocalCurrAmount.FunctionalAmount = (TransientServiceReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount  = (TransientServiceReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.AlternateAmount2 = (TransientServiceReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.AlternateAmount3 = (TransientServiceReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ToFunctionalAmount = (TransientServiceReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount  = (TransientServiceReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  * -1)
					LocalCurrAmount.ToAlternateAmount2 = (TransientServiceReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ToAlternateAmount3 = (TransientServiceReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

					LocalCurrAmount.ProjectAmount    = (TransientServiceReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ReportAmount1    = (TransientServiceReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ReportAmount2    = (TransientServiceReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ReportAmount3    = (TransientServiceReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ReportAmount4    = (TransientServiceReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
					LocalCurrAmount.ReportAmount5    = (TransientServiceReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= HeaderUniqueID
						invoked.PrmTransactionCodeBlock		= FinanceCodeBlock	
						invoked.PrmEndDate					= LocalEndDate		
						invoked.PrmReportAmounts.FunctionalAmount = (LocalCurrAmount.FunctionalAmount)
						invoked.PrmReportAmounts.AlternateAmount  = (LocalCurrAmount.AlternateAmount)
						invoked.PrmReportAmounts.AlternateAmount2 = (LocalCurrAmount.AlternateAmount2)
						invoked.PrmReportAmounts.AlternateAmount3 = (LocalCurrAmount.AlternateAmount3)

						invoked.PrmReportAmounts.ToFunctionalAmount = (LocalCurrAmount.ToFunctionalAmount)
						invoked.PrmReportAmounts.ToAlternateAmount  = (LocalCurrAmount.ToAlternateAmount)
						invoked.PrmReportAmounts.ToAlternateAmount2 = (LocalCurrAmount.ToAlternateAmount2)
						invoked.PrmReportAmounts.ToAlternateAmount3 = (LocalCurrAmount.ToAlternateAmount3)

						invoked.PrmReportAmounts.ProjectAmount    = (LocalCurrAmount.ProjectAmount)
						invoked.PrmReportAmounts.ReportAmount1    = (LocalCurrAmount.ReportAmount1)
						invoked.PrmReportAmounts.ReportAmount2    = (LocalCurrAmount.ReportAmount2)
						invoked.PrmReportAmounts.ReportAmount3    = (LocalCurrAmount.ReportAmount3)
						invoked.PrmReportAmounts.ReportAmount4    = (LocalCurrAmount.ReportAmount4)
						invoked.PrmReportAmounts.ReportAmount5    = (LocalCurrAmount.ReportAmount5)
				initialize	LocalTranAmount
				initialize	LocalGLTAmount
				initialize	LocalUnitsAmount
				LocalPostingDate	= TransactionDate		
				LocalEndDate	    = EntityYearPeriod		
				LocalTranAmount		= (TransientServiceAmount * -1)
				LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount  = (TransientServiceReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1)

				LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount  = (TransientServiceReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount = (TransientServiceReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1)

				LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1)
				LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount    = (TransientServiceReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1)
				LocalUnitsAmount				= (UnitsAmount * -1)
	            invoke PostTransactions GeneralLedgerTotalRel
	                invoked.TransactionAmount	+= LocalTranAmount
	                if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
		                invoked.FunctionalAmount	+= LocalGLTAmount.FunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= LocalGLTAmount.AlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= LocalGLTAmount.AlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= LocalGLTAmount.AlternateAmount3.EnteredCurrencyAmount
		            else
		                invoked.FunctionalAmount	+= LocalGLTAmount.ToFunctionalAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount		+= LocalGLTAmount.ToAlternateAmount.EnteredCurrencyAmount
		                invoked.AlternateAmount2	+= LocalGLTAmount.ToAlternateAmount2.EnteredCurrencyAmount
		                invoked.AlternateAmount3	+= LocalGLTAmount.ToAlternateAmount3.EnteredCurrencyAmount
	                invoked.ProjectAmount		+= LocalGLTAmount.ProjectAmount.EnteredCurrencyAmount
	                invoked.ReportAmount1		+= LocalGLTAmount.ReportAmount1.EnteredCurrencyAmount
	                invoked.ReportAmount2		+= LocalGLTAmount.ReportAmount2.EnteredCurrencyAmount
	                invoked.ReportAmount3		+= LocalGLTAmount.ReportAmount3.EnteredCurrencyAmount
	                invoked.ReportAmount4		+= LocalGLTAmount.ReportAmount4.EnteredCurrencyAmount
	                invoked.ReportAmount5		+= LocalGLTAmount.ReportAmount5.EnteredCurrencyAmount
	                invoked.UnitsAmount			+= LocalUnitsAmount
					if (EntityYearPeriod.PeriodType.BeginningBalance)
						invoked.UpdateChangesOnly	= true
				
			Action Rules
				TransactionAmount -= TransientServiceAmount
				if (TransactionAmount > 0)
					ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount  -= TransientServiceReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

					ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount  -= TransientServiceReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount -= TransientServiceReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

					ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount    -= TransientServiceReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					UnitsAmount				= (UnitsAmount * -1)
				else
					if (TransactionAmount <= 0)
						initialize TransactionAmount
						initialize ReportCurrencyAmount
						Status = Status.History
				
			Exit Rules
			
				LocalHeaderUniqueID	= HeaderUniqueID
				invoke EditTotalsRoute BudgetTemplateGroupTotal
					invoked.PrmFinanceEnterpriseGroup			= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup					= LocalHeaderUniqueID
					invoked.PrmMode								= BudgetEditMode.UpdateOnly
					invoked.PrmTotalsProcessing					= BudgetEditTotalsProcessing.Reverse
					invoked.PrmBusinessClassName				= OriginatingTransaction.BusinessClassName
					invoked.PrmEditContext						= UpdateAmtServiceMessage
								
					
				if (Status.History
				and !GLCommitAllActiveRel exists)
					invoke Update GLDocumentUniqueIDRel					
						invoked.Status			= 9




		FixCommitAmounts is an Instance Action
			restricted
#ifdef module po			
			valid when (AmountMismatch)
#endif			
			Parameters
				PrmTransactionAmount is Decimal size 19.3
					default label is untranslatable:"NewTransactionAmount"
					
			Action Rules
				constraint (PrmTransactionAmount >= 0)
					"NewTransactionAmountCannotBeLessThanZero"
				if (PrmTransactionAmount = 0)
					confirmation required
						"CommitmentWillBeUpdatedToHistory;Proceed?"
				TransactionAmount = PrmTransactionAmount
				ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = PrmTransactionAmount
				if (FinanceCodeBlock.Project entered)
					ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = PrmTransactionAmount
				else
					initialize ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
				ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = PrmTransactionAmount
				if (PrmTransactionAmount not entered)
					Status = 1
			Exit Rules
				LocalHeaderUniqueID = HeaderUniqueID
				if (Status.History
				and   first GLCommitAllActiveRel not exists)
					invoke Update GLDocumentUniqueIDRel
						invoked.Status = 9







		FixGLTotal is a Set Action
			restricted
			disable checkpoint
			Parameters
				PrmFinanceEnterpriseGroup		 is like FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmSystemCode					 is like GeneralLedgerSystemCode
					default label is "SystemCodeForRebuild"
				PrmProject						 is like Project
					default label is "Project (Optional)"
				PrmRefresh	is Boolean
					default label is "RefreshCubeOnCompletionOfRebuild"
				PrmRecalcObligations	is Boolean
					default label is "RecalculateLocalObligationsAfterCubeRefresh"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is actor.context.FinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
			Local Fields
				LocalFEG						 is a FinanceEnterpriseGroup	
                LocalDimensionCode               is a DimensionCode
				LocalSystem                      is a RebuildSystem
                LocalCurrencyCode                is a Currency
                LocalFinanceCodeBlock            is a FinanceCodeBlock
                LocalEntityYearPeriod            is a GeneralLedgerCalendarPeriod
                LocalToAccountingEntity			 is a AccountingEntity
				LocalProjectAmount				 is a Project
				
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    Status.Released
				and (!PrmProject entered
				or  (PrmProject entered
				and  FinanceCodeBlock.Project = PrmProject))
				and ((!PrmSystemCode entered
				and    (System = "PO"
				or    System = "AP"
				or	   System = "CB"
				or    System = "RQ"))	
				or  (PrmSystemCode entered
				and  System = PrmSystemCode)))
				
			Sort Order
				FinanceEnterpriseGroup
				FinanceCodeBlock.ToAccountingEntity
				System
				CurrencyCode
				EntityYearPeriod
				FinanceCodeBlock.AccountingUnit
				FinanceCodeBlock.GeneralLedgerChartAccount
				FinanceCodeBlock.Project
				DimensionCode

			Accumulators
				TransactionAmountTotal
				FunctionalAmountTotal
				AlternateAmountTotal
				AlternateAmount2Total
				AlternateAmount3Total
				ProjectAmountTotal
				ReportAmount1Total
				ReportAmount2Total
				ReportAmount3Total
				ReportAmount4Total
				ReportAmount5Total
				UnitsAmountTotal
				
			Action Rules
				Empty Set Rules	
				Set Rules
					Entrance Rules
					
					Exit Rules
                        if (PrmRefresh)
                            invoke Refresh GeneralLedgerTotalCubeRel in background
								assign async action request id to AsyncId
								run after AsyncId

				FinanceEnterpriseGroup Set Rules
					Entrance Rules

					Exit Rules

				DimensionCode Set Rules
					Entrance Rules
						initialize TotalGroup
						LocalFEG					= FinanceEnterpriseGroup
						LocalSystem					= System
						LocalDimensionCode			= DimensionCode
						LocalCurrencyCode			= CurrencyCode
						LocalFinanceCodeBlock		= FinanceCodeBlock
						LocalEntityYearPeriod		= EntityYearPeriod 		
						LocalToAccountingEntity		= FinanceCodeBlock.ToAccountingEntity
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						if (LocalSystem = "RQ")
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario

						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit			= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger
						invoke InitializeAmountsForCommitments TotalGroup.GeneralLedgerTotal
							invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.PrmSystem = LocalSystem

					
					Exit Rules
						LocalScenario				= FinanceEnterpriseGroup.EncumbrancesScenario
						if (LocalSystem = "RQ")
							LocalScenario			= FinanceEnterpriseGroup.CommitmentsScenario
						TotalGroup.AccountingEntity							= LocalToAccountingEntity
						TotalGroup.GeneralLedgerTotal.Ledger				= LocalFinanceCodeBlock.Ledger
						TotalGroup.GeneralLedgerTotal.System				= LocalSystem
						TotalGroup.GeneralLedgerTotal.Currency				= LocalCurrencyCode
						TotalGroup.GeneralLedgerTotal.EntityYearPeriod		= LocalEntityYearPeriod
						TotalGroup.GeneralLedgerTotal.AccountingUnit			= LocalFinanceCodeBlock.AccountingUnit
						TotalGroup.GeneralLedgerTotal.GeneralLedgerChartAccount	= LocalFinanceCodeBlock.GeneralLedgerChartAccount
						TotalGroup.GeneralLedgerTotal.Project					= LocalFinanceCodeBlock.Project
						TotalGroup.GeneralLedgerTotal.DimensionCode				= LocalDimensionCode
						TotalGroup.GeneralLedgerTotal.PrimaryLedger				= LocalFinanceCodeBlock.Ledger

						invoke PostTransactions TotalGroup.GeneralLedgerTotal
							invoked.TransactionAmount	= TransactionAmountTotal
							invoked.FunctionalAmount	= FunctionalAmountTotal
							invoked.AlternateAmount		= AlternateAmountTotal
							invoked.AlternateAmount2	= AlternateAmount2Total
							invoked.AlternateAmount3	= AlternateAmount3Total
							invoked.ProjectAmount		= ProjectAmountTotal
							invoked.ReportAmount1		= ReportAmount1Total
							invoked.ReportAmount2		= ReportAmount2Total
							invoked.ReportAmount3		= ReportAmount3Total
							invoked.ReportAmount4		= ReportAmount4Total
							invoked.ReportAmount5		= ReportAmount5Total
							invoked.UnitsAmount			= UnitsAmountTotal
							invoked.FinanceDimension1	= LocalFinanceCodeBlock.FinanceDimension1
							invoked.FinanceDimension2	= LocalFinanceCodeBlock.FinanceDimension2
							invoked.FinanceDimension3	= LocalFinanceCodeBlock.FinanceDimension3
							invoked.FinanceDimension4	= LocalFinanceCodeBlock.FinanceDimension4
							invoked.FinanceDimension5	= LocalFinanceCodeBlock.FinanceDimension5
							invoked.FinanceDimension6	= LocalFinanceCodeBlock.FinanceDimension6
							invoked.FinanceDimension7	= LocalFinanceCodeBlock.FinanceDimension7
							invoked.FinanceDimension8	= LocalFinanceCodeBlock.FinanceDimension8
							invoked.FinanceDimension9	= LocalFinanceCodeBlock.FinanceDimension9
							invoked.FinanceDimension10  = LocalFinanceCodeBlock.FinanceDimension10						
							invoked.PeriodEndingDate	= LocalEntityYearPeriod.Date

				Instance Rules
					if (CurrencyCode = AccountingEntity.FunctionalCurrency)
						if (FinanceCodeBlock.Project entered)
							ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount = TransactionAmount
							
						if (AccountingEntity = FinanceCodeBlock.ToAccountingEntity)
							ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount = TransactionAmount
							initialize ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
						else
							ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount = TransactionAmount
							initialize ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						if (FinanceEnterpriseGroup.ReportCurrencyOneEntered)
							ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount = TransactionAmount
						
					if (Status.Released
					or  Status.History)
						TransactionAmountTotal		+= TransactionAmount
						if (AccountingEntity		=  FinanceCodeBlock.ToAccountingEntity)
							FunctionalAmountTotal		+= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount

						else
							FunctionalAmountTotal		+= ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
							AlternateAmountTotal		+= ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
							AlternateAmount2Total		+= ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
							AlternateAmount3Total		+= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount

						ProjectAmountTotal			+= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						ReportAmount1Total			+= ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						ReportAmount2Total			+= ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						ReportAmount3Total			+= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						ReportAmount4Total			+= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						ReportAmount5Total			+= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						UnitsAmountTotal			+= UnitsAmount
#endif
