RecallProductTaskItem is a BusinessClass
    owned by recall
    prefix is RMPTI

    Ontology
    	symbolic key is RecallProductTaskItem
    
    Patterns
    	disable Auditing		
        disable EffectiveDated	
        implements DynamicCreation
					
    Persistent Fields
		QuantityIdentified 	is a Quantity
			precision is RecallProductItem.Item.NumberOfDecimalsQuantity
		Uom					is a UnitOfMeasure
		ZeroQuantityFound   is Boolean
		
   	Local Fields
   		LocalCompany		is like Company 
   		LocalIncrementQuantityIdentified is a Quantity
		LocalRecallGroup    is like RecallGroup
		LocalRecallNotice   is like RecallNotice
		LocalOwner          is like RecallUser
		LocalTask           is like RecallNoticeTask

   	Field Rules
		QuantityIdentified
			constraint (QuantityIdentified !< TotalActionQuantities)
				"CannotReduceQuantityToBeLessThanSumOfResolutionQuantities"
		
		Uom
			if  (HasResolutions
			or  (RecallProductItem.IsItemMaster
			and  Uom = RecallProductItem.Item.StockUOM))
				cannot be changed
			if (RecallProductItem.IsItemMaster)
				default to RecallProductItem.Item.StockUOM
				constraint (Uom = RecallProductItem.Item.StockUOM)
					"MustUseStockUom"
			if (QuantityIdentified > 0)
				required
				
		ZeroQuantityFound
			if (QuantityIdentified entered)
				ZeroQuantityFound = false
				     		
	Derived Fields

		RemainingQuantity is a DerivedField
			type is like Quantity
			restricted
			return (QuantityIdentified - TotalActionQuantities)
			
		TotalActionQuantities is a DerivedField		
			type is like Quantity
			return (sum RecallProductItemActionRel.DerivedQuantity)

		QuantityFoundUOMLabel is a LabelField
			"QuantityFound:<QuantityIdentified>_<Uom>"
			 
   	Conditions
   		AllowActions
   			restricted
   			when (RecallGroup.AllowResolutionsByResponders
   			and   RecallNotice.Status.Active
			and   RecallNoticeTask.Status.Completed
   			and   RemainingQuantity > 0
   			and   !RecallNotice.HasActionsByCoordinator)

		AllowIssues
			restricted
			when (AllowActions
			and   RecallProductItem.IsItemMaster
			and   RecallProductItem.HasActiveTrackingLocations
			and   RecallGroup.AllowIssueByResponder)
			
		AllowTransfers
			restricted
			when (AllowActions
			and   RecallProductItem.IsItemMaster
			and   RecallProductItem.HasActiveTrackingLocations
			and   RecallProductItem.Item.Consignment = false
			and   RecallGroup.AllowTransferByResponder)

		AllowAdjustments
			restricted
			when (AllowActions
			and   RecallProductItem.IsItemMaster
			and   RecallProductItem.HasActiveTrackingLocations
			and   RecallGroup.AllowAdjustmentByResponder)
			
		AllowReturns
			restricted
			when (AllowActions
			and   RecallGroup.AllowReturnByResponder) 
		
		HasVendorReturns
			restricted
			when (VendorReturnRel exists)
			
		HasInventoryResolutions
			restricted
			when (InventoryResolutionsRel exists)   	

		HasResolutions
			restricted
			when (RecallProductItemActionRel exists)   	

		AllowActionsCatchWeight
			restricted
			when (AllowActions
			and   RecallProductItem.CatchWeight)

		HasQuantities
			restricted
			when (QuantityIdentified != 0)
						
		CompanyEntered
			restricted
			when (Company entered)

		RecallProductHasNDCItems 
			restricted 
			when (RecallProduct.HasNDCItems)	
			
   	Sets
   							
		ByOrganization
			Sort Order
				RecallGroup
				Company
				InventoryLocation
				RequestingLocation
				RecallNotice
				RecallProduct
				RecallProductItem
				RecallNoticeTask

		ByProductItemTask
			indexed
			Sort Order
				RecallGroup
				RecallNotice
				RecallProduct
				RecallProductItem
				RecallNoticeTask
				Company
				InventoryLocation
				RequestingLocation
				
   	Relations
   				
   		PoCompanyByProcurementGroupRel
   			one-to-many relation to PurchasingCompany
   			Field Mapping uses Set2
   				related.ProcurementGroup = RecallGroup
   				
   		RecallProductItemActionRel
   			one-to-many relation to RecallProductItemAction
   			Field Mapping uses ByTaskProductItem
				related.RecallGroup					= RecallGroup
				related.RecallNotice				= RecallNotice
				related.RecallNoticeTask			= RecallNoticeTask
				related.RecallProduct				= RecallProduct
				related.RecallProductItem			= RecallProductItem
			Instance Selection 
				where (Company !entered
				or    (related.InventoryTransactionLineGroup.InventoryCompany 		= Company
				and    related.InventoryTransactionLineGroup.Location				= InventoryLocation)
				or    (related.InventoryLocationGroup.InventoryCompany				= Company
				and    related.InventoryLocationGroup.InventoryLocation				= InventoryLocation))
				
   		RecallNoticeTaskProductRel
   			one-to-one relation to RecallNoticeTaskProduct
   			Field Mapping uses symbolic key
				related.RecallGroup					= RecallGroup
				related.RecallNotice				= RecallNotice
				related.RecallNoticeTask			= RecallNoticeTask
				related.RecallProduct				= RecallProduct
				
   		VendorReturnRel
   			one-to-many relation to RecallProductItemAction
   			Field Mapping uses ByTaskProductItem
				related.RecallGroup					= RecallGroup
				related.RecallNotice				= RecallNotice
				related.RecallNoticeTask			= RecallNoticeTask
				related.RecallProduct				= RecallProduct
				related.RecallProductItem			= RecallProductItem
			Instance Selection
				where (related.ItemAction.VendorReturn)
				
   		InventoryResolutionsRel
   			one-to-many relation to RecallProductItemAction
   			Field Mapping uses ByTaskProductItem
				related.RecallGroup					= RecallGroup
				related.RecallNotice				= RecallNotice
				related.RecallNoticeTask			= RecallNoticeTask
				related.RecallProduct				= RecallProduct
				related.RecallProductItem			= RecallProductItem
			Instance Selection
				where (related.StockTransaction)

		RecallNoticeOrganizationRel
			one-to-many relation to RecallNoticeOrganization
			Field Mapping uses symbolic key
				related.RecallGroup             = LocalRecallGroup
				related.RecallNotice            = LocalRecallNotice
			Instance Selection
				where (related.AssignedUser     = LocalOwner) 

		SameRecallItemRel
			one-to-many relation to RecallProductTaskItem
			Field Mapping uses ByProductItemTask
				related.RecallGroup             = RecallGroup
				related.RecallNotice            = RecallNotice
				related.RecallProduct           = RecallProduct
				related.RecallProductItem       = RecallProductItem
			Instance Selection
				where (related.UniqueID        != UniqueID
				and    related.Uom             !entered)

		RecallNoticeTaskRel
			one-to-one relation to RecallNoticeTask
			Field Mapping uses symbolic key
				related.RecallGroup             = LocalRecallGroup
				related.RecallNotice            = LocalRecallNotice
				related.RecallNoticeTask 		= LocalTask				

		RecallUserRel
   			one-to-many relation to RecallUser
   			Field Mapping uses symbolic key
   				related.HROrganization           = actor.agent(Employee).HROrganization
   				related.RecallUser               = actor.agent(Employee).Employee
   				
	Rule Blocks
													 	
   	Actions
    	Create is a Create Action
			restricted
			Action Rules
				if (RecallProductItem.IsItemMaster)
					Uom = RecallProductItem.Item.StockUOM
					
		Update is an Update Action
			valid when (RecallNoticeTask.AllowQuantityUpdates)
			Action Rules
	     		increment RecallNoticeTaskProductRel.QuantityIdentified by (QuantityIdentified - old QuantityIdentified)
	     		increment RecallProduct.TotalQuantityIdentified by (QuantityIdentified - old QuantityIdentified)
	     		increment RecallProductItem.TotalQuantityIdentified by (QuantityIdentified - old QuantityIdentified)
	     		if (SameRecallItemRel exists)
	     			for each SameRecallItemRel
	     				invoke UpdateFast each
	     					invoked.Uom    = Uom
	     		
		UpdateFast is an Update Action
			restricted
			bypass field rules
			Action Rules
				QuantityIdentified += LocalIncrementQuantityIdentified

		MobileUpdate is an Update Action
			default label is "Update"
			valid when (RecallNoticeTask.AllowQuantityUpdates)
			Action Rules
	     		increment RecallNoticeTaskProductRel.QuantityIdentified by (QuantityIdentified - old QuantityIdentified)
	     		increment RecallProduct.TotalQuantityIdentified by (QuantityIdentified - old QuantityIdentified)
	     		increment RecallProductItem.TotalQuantityIdentified by (QuantityIdentified - old QuantityIdentified)
		
		Delete is a Delete Action
			restricted
				
		Purge is a Purge Action
			restricted
			


		VendorReturn is an Instance Action
			valid when (AllowReturns)
			default label is "VendorReturn"
			
			Parameters
		    	ActionType				is AlphaUpper size 1
		    		States
		    			Create				value is 1
		    			Append				value is 2
		    			Associate			value is 3
				Quantity 				is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				VendorReturnGroup
				PurchasingCompany
				VendorReturn  
				VendorReturnLine  
				CtwSecondaryQty			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity

			Parameter Rules
				ActionType
					required
					initial value is ActionType.Create
				Quantity
					required
					initial value is RemainingQuantity
					constraint (Quantity !> RemainingQuantity)
						"CannotExceedRemainingQuantity_(QuantityFoundLessQuantitiesForActionTaken)"
				PurchasingCompany
					initial value is RecallUserRel.RecallUser.DefaultCompany
			
			Action Rules
				if (VendorReturnGroup.InventoryCompany !entered
				and Company entered)
					VendorReturnGroup.InventoryCompany = Company
				if (ActionType.Create)
					invoke CreateVendorReturn RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						if (Company entered)
							invoked.InventoryLocationGroup.InventoryCompany	= Company
						else 
							invoked.InventoryLocationGroup.InventoryCompany = VendorReturnGroup.InventoryCompany 
						if (InventoryLocation entered)
							invoked.InventoryLocationGroup.InventoryLocation	= InventoryLocation 
						else
							invoked.InventoryLocationGroup.InventoryLocation 	= VendorReturnGroup.InventoryLocation
						invoked.Vendor										= VendorReturnGroup.Vendor
						invoked.ProcessLevel								= VendorReturnGroup.PayablesProcessLevel
						invoked.VendorLocation								= VendorReturnGroup.VendorLocation
						invoked.Buyer										= VendorReturnGroup.Buyer
						invoked.Quantity									= Quantity
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty

				else
				if (ActionType.Append)
					invoke AppendToVendorReturn RecallProductItemAction
						invoked.RecallGroup							= RecallGroup
						invoked.RecallNotice						= RecallNotice
						invoked.RecallProduct						= RecallProduct
						invoked.RecallNoticeTask					= RecallNoticeTask
						invoked.RecallProductItem					= RecallProductItem
						invoked.Quantity							= Quantity
						invoked.TranUom								= Uom
						invoked.VendorReturnLineGroup.PurchasingCompany	= PurchasingCompany
						invoked.VendorReturnLineGroup.ReturnNumber		= VendorReturn
						invoked.ActionType							= ActionType
						invoked.CtwSecondaryQty						= CtwSecondaryQty
				else
				if (ActionType.Associate)
					invoke AssociateToVendorReturn RecallProductItemAction
						invoked.RecallGroup							= RecallGroup
						invoked.RecallNotice						= RecallNotice
						invoked.RecallProduct						= RecallProduct
						invoked.RecallNoticeTask					= RecallNoticeTask
						invoked.RecallProductItem					= RecallProductItem
						invoked.VendorReturnLineGroup.PurchasingCompany			= PurchasingCompany
						invoked.VendorReturnLineGroup.ReturnNumber	= VendorReturn
						invoked.VendorReturnLineGroup.ReturnLine	= VendorReturnLine
						invoked.ActionType							= ActionType

		StockIssue is an Instance Action
			valid when (AllowIssues)
			default label is "StockIssue"
			
			Parameters
		    	ActionType				is AlphaUpper size 1
		    		States
		    			Create				value is 1
		    			Append				value is 2
				Quantity 				is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				CtwSecondaryQty			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				InventoryDocumentGroup
				TranDate				is Date		
				PostDate				is Date

			Parameter Rules
				ActionType
					required
					initial value is ActionType.Create
				Quantity
					initial value is RemainingQuantity
					required
					constraint (Quantity !> RemainingQuantity)
						"CannotExceedRemainingQuantity_(QuantityFoundLessQuantitiesForActionTaken)"
				TranDate
					initial value is current corporate date
					required
				PostDate
					initial value is current corporate date
					required

			Action Rules
				if (ActionType.Create)
					invoke CreateStockIssue RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						if (Company entered)
							invoked.InventoryTransactionLineGroup.InventoryCompany	= Company
						else 
							invoked.InventoryTransactionLineGroup.InventoryCompany = InventoryDocumentGroup.InventoryCompany 
						if (InventoryLocation entered)
							invoked.InventoryTransactionLineGroup.Location	= InventoryLocation 
						else
							invoked.InventoryTransactionLineGroup.Location 	= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction		= InventoryDocumentGroup.InventoryTransaction
						invoked.ToCompanyLocationGroup						= InventoryDocumentGroup.ToCompanyLocationGroup
						invoked.TranDate									= TranDate
						invoked.PostDate									= PostDate
						invoked.Quantity									= Quantity
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin
				else	
				if (ActionType.Append)
					invoke AppendStockIssue RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						invoked.InventoryTransactionLineGroup.InventoryCompany		= InventoryDocumentGroup.InventoryCompany
						invoked.InventoryTransactionLineGroup.Location	 			= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction	= InventoryDocumentGroup.InventoryTransaction
						invoked.Quantity									= Quantity
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin

		StockTransfer is an Instance Action
			valid when (AllowTransfers)
			default label is "StockTransfer"
			
			Parameters
		    	ActionType				is AlphaUpper size 1
		    		States
		    			Create				value is 1
		    			Append				value is 2
				Quantity 			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				InventoryDocumentGroup
				TranDate				is Date		
				PostDate				is Date
				CtwSecondaryQty			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				ToBin					is AlphaUpper size 7

			Parameter Rules
				ActionType
					required
					initial value is ActionType.Create
				Quantity
					required
					initial value is RemainingQuantity
					constraint (Quantity !> RemainingQuantity)
						"CannotExceedRemainingQuantity_(QuantityFoundLessQuantitiesForActionTaken)"
				TranDate
					initial value is current corporate date
					required
				PostDate
					initial value is current corporate date
					required
				InventoryDocumentGroup.ToCompanyLocationGroup.ToCompany
					initial value is InventoryDocumentGroup.InventoryCompany
					default to InventoryDocumentGroup.InventoryCompany
			Action Rules
				if (ActionType.Create)
					invoke CreateStockTransfer RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						if (Company entered)
							invoked.InventoryTransactionLineGroup.InventoryCompany	= Company
						else 
							invoked.InventoryTransactionLineGroup.InventoryCompany = InventoryDocumentGroup.InventoryCompany 
						if (InventoryLocation entered)
							invoked.InventoryTransactionLineGroup.Location	= InventoryLocation 
						else
							invoked.InventoryTransactionLineGroup.Location 	= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction		= InventoryDocumentGroup.InventoryTransaction
						invoked.ToCompanyLocationGroup						= InventoryDocumentGroup.ToCompanyLocationGroup
						invoked.TranDate									= TranDate
						invoked.PostDate									= PostDate
						invoked.Quantity									= Quantity
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin
						invoked.ToBin										= InventoryDocumentGroup.ToCompanyLocationGroup.Bin
				else	
				if (ActionType.Append)
					invoke AppendStockTransfer RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						invoked.InventoryTransactionLineGroup.InventoryCompany		= InventoryDocumentGroup.InventoryCompany
						invoked.InventoryTransactionLineGroup.Location	 			= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction	= InventoryDocumentGroup.InventoryTransaction
						invoked.Quantity									= Quantity
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin
						invoked.ToBin										= ToBin

		StockAdjustment is an Instance Action
			valid when (AllowAdjustments)
			default label is "StockAdjustment"
			
			Parameters
		    	ActionType				is AlphaUpper size 1
		    		States
		    			Create				value is 1
		    			Append				value is 2
				Quantity 			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity
				InventoryDocumentGroup
				TranDate				is Date		
				PostDate				is Date
				CtwSecondaryQty			is Decimal size 13.4
					precision is RecallProductItem.Item.NumberOfDecimalsQuantity

			Parameter Rules
				ActionType
					required
					initial value is ActionType.Create
				Quantity
					required
					initial value is RemainingQuantity * -1
					if (Quantity < 1)
						constraint ((Quantity * -1) !> RemainingQuantity)
							"CannotExceedRemainingQuantity_(QuantityFoundLessQuantitiesForActionTaken)"
					else
						constraint (Quantity !> RemainingQuantity)
							"CannotExceedRemainingQuantity_(QuantityFoundLessQuantitiesForActionTaken)"
				TranDate
					initial value is current corporate date
					required
				PostDate
					initial value is current corporate date
					required
				InventoryDocumentGroup.ToCompanyLocationGroup.ToCompany
					initial value is InventoryDocumentGroup.InventoryCompany
					default to InventoryDocumentGroup.InventoryCompany
			Action Rules
				if (ActionType.Create)
					invoke CreateStockAdjustment RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						if (Company entered)
							invoked.InventoryTransactionLineGroup.InventoryCompany	= Company
						else 
							invoked.InventoryTransactionLineGroup.InventoryCompany = InventoryDocumentGroup.InventoryCompany 
						if (InventoryLocation entered)
							invoked.InventoryTransactionLineGroup.Location	= InventoryLocation 
						else
							invoked.InventoryTransactionLineGroup.Location 	= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction	= InventoryDocumentGroup.InventoryTransaction
						invoked.TranDate									= TranDate
						invoked.PostDate									= PostDate
						if (Quantity < 1)
							invoked.Quantity									= Quantity
						else
							invoked.Quantity									= Quantity * -1
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin
				else	
				if (ActionType.Append)
					invoke AppendStockAdjustment RecallProductItemAction
						invoked.RecallGroup									= RecallGroup
						invoked.RecallNotice								= RecallNotice
						invoked.RecallProduct								= RecallProduct
						invoked.RecallNoticeTask							= RecallNoticeTask
						invoked.RecallProductItem							= RecallProductItem
						invoked.InventoryTransactionLineGroup.InventoryCompany		= InventoryDocumentGroup.InventoryCompany
						invoked.InventoryTransactionLineGroup.Location	 			= InventoryDocumentGroup.InventoryLocation
						invoked.InventoryTransactionLineGroup.InventoryTransaction	= InventoryDocumentGroup.InventoryTransaction
						if (Quantity < 1)
							invoked.Quantity									= Quantity
						else
							invoked.Quantity									= Quantity * -1
						invoked.TranUom										= Uom
						invoked.ActionType									= ActionType
						invoked.CtwSecondaryQty								= CtwSecondaryQty
						invoked.Bin											= InventoryDocumentGroup.Bin

		CreateVendorReturn is an Instance Action 
			restricted
		AppendToVendorReturn is an Instance Action 
			restricted
		AssociateToVendorReturn is an Instance Action 
			restricted
		CreateStockIssue is an Instance Action 
			restricted
		AppendStockIssue is an Instance Action 
			restricted
		CreateStockTransfer is an Instance Action 
			restricted

		AppendStockTransfer is an Instance Action 
			restricted

		CreateStockAdjustment is an Instance Action  
			restricted

		AppendStockAdjustment is an Instance Action  
			restricted
