AssetInterfaceOptions is a BusinessClass
	owned by am
	prefix is AIO

	Ontology
        symbolic key is AssetInterfaceOptions

    Persistent Fields
    	AssetCompany
    	Project									is a FinanceCodeBlockProjectOnly
     	TransactionQualifier               		is a GLTransactionDetail group
		AssetCurrency							is a Currency
        AssetTemplate
     	ItemQuantity
        Combine
        AssetDescription                   		is a Description
        TagNumber
        AssetGroup
        ItemNumber                         		is an AssetItemNumber
        Description
        PurchaseDate                       		is an ExchangeDate
        InServiceDate                      		is Date
        ItemTax                 				is a CurrencyAmount
        RepairAsset								is an Asset
        RepairTax								is a CurrencyAmount
        PurchaseOrder							is like PurchaseOrder
        ModelNumber
        SerialNumber
        HoldAsset                          		is Boolean
		Asset
        AssetAccountGroup
        AssetAccountingUnit			 			is a FinanceCodeBlockNoAccountFull
        	default label is "DefaultTransactionDimensions"
        AssetAccountingUnitGroup
        	default label is "AssetDimensionGroup"
		WorkInProcessAccount					is a FinanceCodeBlockFullOpenLedger
		AssetClearingAccount					is a FinanceCodeBlockFullOpenLedger
    	TotalCapitalAmount						is a CurrencyAmount
		AssetLocation
		AssetDivision
		AppendOption							is Boolean
		AppendToAsset							is an Asset
		AddToBasis								is Boolean
		ComputeDepreciation						is Boolean
		Active
		AppendToAssetItem    		            is an AssetItem
			context of AppendToAsset
		AddToItemQuantity                       is Boolean   					
		CapitalTransactionQualifier             is a AssetCapitalTransaction group
			default label is "TransactionQualifier"
		ErrorMessage							is Alpha up to 200
		InterfaceSequenceNumber  				is Numeric size 8

	Local Fields
		LocalThroughDate			is Date
		LocalPostingDate			is Date
		LocalAdjustmentDate			is Date
		LocalProject				is a Project
		LocalCompanyGroup			is a GeneralLedgerCompanyGroup
		LocalAssetCompany			is like AssetCompany
		LocalRunGroup				is like RunGroup
		LocalSequenceNumber			is a Sequence
		LocalDraftSequenceNumber		is a Sequence		

		LocalAppendToAsset			is an Asset

		RecordCount					is Numeric 8
		LocalSummaryCode			is AlphaUpper size 30
		LocalCode					is AlphaUpper size 30
		LocalGLTransactionDetail	is a GLTransactionDetail
		LocalInvoiceCompany 		is like PayablesCompany
		LocalVendor 				is like Vendor
		LocalInvoice 				is like PayablesInvoice
		LocalInvoiceDistribution 	is like PayablesInvoiceDistribution
		LocalPurchaseOrder 			is like PurchaseOrder
		LocalLineNumber				is like PurchaseOrderLine
		LocalAccountingEntity		is like AccountingEntity
		LocalTransactionAmount		is a CurrencyAmount

		LocalTotalAmount			is a CurrencyAmount
		LocalAssetItemAdjustmentImportView is an AssetItemAdjustmentImport view
		LocalAssetInterfaceView			   is an AssetInterface view
		LocalAssetRepairImportView		   is an AssetRepairImport view
		LocalAssetInterface			is like AssetInterface

		LocalObjectReference		is BusinessObjectReference
		Counter						is Numeric size 8
		Counter2					is Numeric size 8
		LastCounter					is Numeric size 8
		ProjectInterfaceCount		is Numeric size 8
		DraftImportTable
		LocalDraftSequence			is Numeric size 8
		LocalDraftSeqNumber			is Numeric size 8
		LocalDistributionCodeBlock	is a FinanceCodeBlock
		LocalDateType				is Numeric size 1
		LocalFromAmount				is a CurrencyAmount
		LocalProjectCurrency		is a Currency
		LocalRepairDate				is Date
		LocalCombine				is like Combine
		CurrencyWork				is a ReportCurrencyExchangeGroup
		LocalDateRange				is a DateRange
		LocalProjectGroup			is a Project group
		LocalFEG					is like FinanceEnterpriseGroup
		LocalAssetItem              is like AssetItem
		LocalProgram                is Boolean
		LocalJournalizeRunGroup		is like JournalizeGroup
		LocalAssetCapitalTransaction	is a AssetCapitalTransaction
		LocalPurchaseDate       		is Date
		LocalTransactionDate    		is Date
		LocalInterfaceSequenceNumber	is a Sequence
		LocalInterfaceAmount			is a CurrencyAmount
		LocalInterface					is like AssetInterface
		LocalImportRunGroup				is like RunGroup
		LocalImportSequenceNumber		is a Sequence
		LocalFinanceCodeBlock			is a FinanceCodeBlockFullOpenLedger

	Rule Blocks
		CreateInterfaceRecords
			if (AssetTemplate entered
			or  AddToBasis)
				if (AppendOption
				and AppendToAsset entered
				and AssetCompany.InterfacePath.ItemAdjustmentInterface)
					LocalSequenceNumber += 1
					invoke Create AssetItemAdjustmentImport
						assign result to LocalAssetItemAdjustmentImportView
						resume on error
							LocalErrorOccurred	= true
							LocalErrorMessage	= error message
						if(AssetCompany.CopyUserFields
						and LocalDraftSeqNumber entered)
							fill in user fields from LocalProjectAssetInterfaceRel
						invoked.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
						invoked.Asset										= LocalAppendToAsset
						invoked.AssetItemAdjustmentImport.SequenceNumber	= LocalSequenceNumber
						invoked.AssetItemAdjustmentImport.RunGroup			= LocalRunGroup
						if (AddToBasis)
							invoked.AddToBasis 				= "Y"
						else
						   	invoked.AddToBasis 				= "N"
						if (LocalPurchaseDate entered)
							invoked.PurchaseDate 		    = LocalPurchaseDate
						else
						if (LocalTransactionDate entered)
							invoked.PurchaseDate            = LocalTransactionDate
						else
							invoked.PurchaseDate			= current corporate date
						invoked.Description					= Description
						invoked.ItemNumber     				= ItemNumber
						invoked.ItemQuantity 				= ItemQuantity
						invoked.TransactionItemCost			= LocalTransactionAmount
	   					invoked.TransactionItemTax          = ItemTax
						invoked.BaseItemTax					= ItemTax
						invoked.BaseItemCost				= LocalTransactionAmount
						if (SummaryType)
							invoked.TransactionNumberOfDecimals = AssetCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals		= AssetCurrency.NumberOfDecimals
						else
							invoked.TransactionNumberOfDecimals = LocalProjectCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals		= LocalProjectCurrency.NumberOfDecimals
						if (ComputeDepreciation)
							invoked.Compute					= "Y"
						else
							invoked.Compute					= "N"
						invoked.ModelNumber					= ModelNumber
						invoked.SerialNumber				= SerialNumber
						invoked.Project						= LocalProject
						invoked.AssetLocation				= AppendToAsset.AssetLocation
						invoked.OriginatingAssetInterfaceOptions	= AssetInterfaceOptions
						invoked.DistributionCodeBlock		= LocalDistributionCodeBlock
						invoked.InterfaceSequenceNumber		= LocalInterfaceSequenceNumber
						invoked.PostWIPToProject			= PrmPostWIPToProject
						if (LocalSummaryCode not entered
						and ((UseOldCapitalization
						and LocalGLTransactionDetail.System = "AP")
						or (UseUpgradedCapitalization
						and LocalAssetCapitalTransaction.System = "AP")))
							invoked.OriginatingAssetCapitalTransaction	= LocalAssetCapitalTransaction
							if (GLTransactionDetailRel exists)
								invoked.OriginatingGLTransactionDetail	= LocalGLTransactionDetail
							invoked.InvoiceCompany       			= LocalInvoiceCompany
							invoked.Vendor							= LocalVendor
							invoked.PayablesInvoice				    = LocalInvoice
							invoked.PayablesInvoiceDistribution		= LocalInvoiceDistribution
							invoked.PurchaseOrder					= LocalPurchaseOrder
							if (ItemNumber not entered)
								if (UseUpgradedCapitalization)
									invoked.ItemNumber     				= LocalAssetCapitalTransaction.DerivedAPItem
								else
									invoked.ItemNumber     				= LocalGLTransactionDetail.DerivedAPItem
							if (Description not entered)
								if (UseUpgradedCapitalization)
									invoked.Description					= LocalAssetCapitalTransaction.DerivedAPItemDesc
								else
									invoked.Description					= LocalGLTransactionDetail.DerivedAPItemDesc
					LocalObjectReference = reference to LocalAssetItemAdjustmentImportView.AssetItemAdjustmentImport



					if(!FundAccounting
					and IsValidForPostWIPToProject
					and !NextDraftInterfacesWithOutSummaryCodeRel exists)
						for each AssetItemAdjustmentImportBySequenceRel
							each.TransientBypassStructureRelationEdit = true
							if(!PrmPostWIPToProject)
								each.TransientBypassProjectEdits = true
							LocalImportRunGroup 		= each.AssetItemAdjustmentImport.RunGroup
							LocalImportSequenceNumber 	= each.AssetItemAdjustmentImport.SequenceNumber
							if(LocalFinanceCodeBlock not entered)
								LocalFinanceCodeBlock = each.DistributionCodeBlock
							if (each.DistributionCodeBlock = LocalFinanceCodeBlock)
								LocalInterfaceAmount  += each.TransactionItemCost	
								if (!NextAssetItemAdjustmentImportByFinanceCodeBlockRel exists)
									include CreateWIPTransaction
							else
								LocalFinanceCodeBlock = each.DistributionCodeBlock
								LocalInterfaceAmount  = each.TransactionItemCost	
								if (!NextAssetItemAdjustmentImportByFinanceCodeBlockRel exists)
									include CreateWIPTransaction

				else
					invoke Create AssetInterface
						assign result to LocalAssetInterfaceView
						resume on error
							LocalErrorOccurred	= true
							LocalErrorMessage	= error message
						if(AssetCompany.CopyUserFields
						and LocalDraftSeqNumber entered)
							fill in user fields from LocalProjectAssetInterfaceRel
						if (LocalTransactionAmount < 0)
							invoked.BypassNegativeRateEdit = true
						invoked.Company							= AssetCompany
						invoked.InterfaceSystem					= "PS"
						invoked.AssetTemplate					= AssetTemplate
						invoked.AssetDescription 				= AssetDescription
						invoked.ItemNumber 						= ItemNumber
						invoked.Description						= Description
						invoked.TagNumber 						= TagNumber
						invoked.HoldAsset 						= HoldAsset
						invoked.InServiceDate 					= InServiceDate 
						if (LocalPurchaseDate entered)
							invoked.PurchaseDate 				= LocalPurchaseDate
						else
							invoked.PurchaseDate 				= LocalTransactionDate
						invoked.PostingDate						= LocalPostingDate
						invoked.SerialNumber 					= SerialNumber
						invoked.ModelNumber 					= ModelNumber
						invoked.ItemQuantity 					= ItemQuantity
						invoked.Combine		 					= Combine
						invoked.AssetGroup 						= AssetGroup
						invoked.AssetDivision					= AssetDivision
						invoked.AssetLocation					= AssetLocation
						if (AssetAccountGroup entered)
							invoked.AssetAccountGroup			= AssetAccountGroup
						if (AssetAccountingUnit entered)
							invoked.AssetAccountingUnit			= AssetAccountingUnit
						if (AssetAccountingUnitGroup entered)
							invoked.AssetAccountingUnitGroup	= AssetAccountingUnitGroup	
						invoked.TransactionItemCost				= LocalTransactionAmount
						invoked.TransactionItemTax              = ItemTax
						invoked.BaseItemTax						= ItemTax
						invoked.BaseItemCost					= LocalTransactionAmount
						if (SummaryType)
							invoked.Currency						= AssetCurrency
							invoked.TransactionNumberOfDecimals    	= AssetCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals			= AssetCurrency.NumberOfDecimals
						else
							invoked.Currency						= LocalProjectCurrency
							invoked.TransactionNumberOfDecimals    	= LocalProjectCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals			= LocalProjectCurrency.NumberOfDecimals
						invoked.AssetProject.Project				= LocalProject
						invoked.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
						invoked.DistributionCodeBlock				= LocalDistributionCodeBlock
						invoked.InterfaceSequenceNumber				= LocalInterfaceSequenceNumber
						invoked.PostWIPToProject					= PrmPostWIPToProject
						if (GLTransactionDetailRel exists)
							invoked.OriginatingGLTransactionDetail		= LocalGLTransactionDetail
						invoked.OriginatingAssetCapitalTransaction	= LocalAssetCapitalTransaction
						if (LocalSummaryCode not entered
						and ((UseOldCapitalization
						and LocalGLTransactionDetail.System = "AP")
						or (UseUpgradedCapitalization
						and LocalAssetCapitalTransaction.System = "AP")))
							invoked.InvoiceAndPurchaseOrderInformation.InvoiceCompany       = LocalInvoiceCompany
							invoked.InvoiceAndPurchaseOrderInformation.Vendor				= LocalVendor
							invoked.InvoiceAndPurchaseOrderInformation.PayablesInvoice		= LocalInvoice
							invoked.InvoiceAndPurchaseOrderInformation.DistributionSequence	= LocalInvoiceDistribution
							invoked.InvoiceAndPurchaseOrderInformation.PurchaseOrder		= LocalPurchaseOrder
							invoked.InvoiceAndPurchaseOrderInformation.PurchaseOrderLine	= LocalLineNumber
							if (ItemNumber not entered)
								if (UseUpgradedCapitalization)
									invoked.ItemNumber     				= LocalAssetCapitalTransaction.DerivedAPItem
								else
									invoked.ItemNumber     				= LocalGLTransactionDetail.DerivedAPItem
							if (Description not entered)
								if (UseUpgradedCapitalization)
									invoked.Description					= LocalAssetCapitalTransaction.DerivedAPItemDesc
								else
									invoked.Description					= LocalGLTransactionDetail.DerivedAPItemDesc
					LocalObjectReference = reference to LocalAssetInterfaceView.AssetInterface
					if(!FundAccounting
					and IsValidForPostWIPToProject
					and !NextDraftInterfacesWithOutSummaryCodeRel exists)
						for each AssetInterfaceBySequenceRel
							each.TransientBypassStructureRelationEdit = true
							if(!PrmPostWIPToProject)
								each.TransientBypassProjectEdits = true
							LocalInterface = each.AssetInterface
							if(LocalFinanceCodeBlock not entered)
								LocalFinanceCodeBlock = each.DistributionCodeBlock
							if (each.DistributionCodeBlock = LocalFinanceCodeBlock)
								LocalInterfaceAmount  += each.TransactionItemCost	
								if (!NextInterfaceByFinanceCodeBlockRel exists)
									include CreateWIPTransaction
							else
								LocalFinanceCodeBlock = each.DistributionCodeBlock
								LocalInterfaceAmount  = each.TransactionItemCost	
								if (!NextInterfaceByFinanceCodeBlockRel exists)
									include CreateWIPTransaction
				if (LocalErrorOccurred)
					initialize LocalTransactionAmount
   				LocalTotalAmount += LocalTransactionAmount
			else
				if (PrmIncludeRepairs
				and RepairAsset entered)
					invoke Create AssetRepairImport			
						assign result to LocalAssetRepairImportView
						resume on error
							LocalErrorOccurred	= true
							LocalErrorMessage	= error message
						if(AssetCompany.CopyUserFields
						and LocalDraftSeqNumber entered)
							fill in user fields from LocalProjectAssetInterfaceRel			
						invoked.Company							= AssetCompany
						invoked.Project							= LocalProject
						invoked.InterfaceSystem					= "PS"
						invoked.Asset							= RepairAsset
						invoked.Description 					= RepairAsset.Description
						invoked.RepairDate 						= PrmRepairDate
						invoked.TransactionRepairTax			= RepairTax
						invoked.TransactionRepairCost			= LocalTransactionAmount
						invoked.BaseRepairTax					= RepairTax
						invoked.BaseRepairCost					= LocalTransactionAmount
						invoked.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
						if (SummaryType)
							invoked.Currency 						= AssetCurrency
							invoked.TransactionNumberOfDecimals		= AssetCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals			= AssetCurrency.NumberOfDecimals
						else
							invoked.Currency 						= LocalProjectCurrency
							invoked.TransactionNumberOfDecimals		= LocalProjectCurrency.NumberOfDecimals
							invoked.BaseNumberOfDecimals			= LocalProjectCurrency.NumberOfDecimals
						if ((UseOldCapitalization
						and LocalGLTransactionDetail.System = "AP")
						or (UseUpgradedCapitalization
						and LocalAssetCapitalTransaction.System = "AP"))
							invoked.InvoiceAndPurchaseOrderInformation.InvoiceCompany       = LocalInvoiceCompany
							invoked.InvoiceAndPurchaseOrderInformation.Vendor				= LocalVendor
							invoked.InvoiceAndPurchaseOrderInformation.PayablesInvoice		= LocalInvoice
							invoked.InvoiceAndPurchaseOrderInformation.DistributionSequence	= LocalInvoiceDistribution
							invoked.InvoiceAndPurchaseOrderInformation.PurchaseOrder		= LocalPurchaseOrder
							invoked.InvoiceAndPurchaseOrderInformation.PurchaseOrderLine	= LocalLineNumber

					LocalObjectReference = reference to LocalAssetRepairImportView.AssetRepairImport
			if (LocalSummaryCode entered)
				if (LocalPurchaseDate entered)
					invoke UpdateNoRules DraftInterfacesBySummaryCodeRel
						if (LocalErrorOccurred)
							invoked.ErrorMessage = LocalErrorMessage
						else
							invoked.Status			= 1
							invoked.InterfaceRecord = LocalObjectReference
							invoked.ErrorMessage 	= blank
				else 
					invoke UpdateNoRules DraftInterfacesBySummaryCodeCapitalRel
						if (LocalErrorOccurred)
							invoked.ErrorMessage = LocalErrorMessage
						else
							invoked.Status			= 1
							invoked.InterfaceRecord = LocalObjectReference
							invoked.ErrorMessage 	= blank

		ValidateCurrency
			CurrencyWork.FromCurrency				= AssetCurrency
			CurrencyWork.ExchangeDate				= PurchaseDate
			CurrencyWork.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			CurrencyWork.CurrencyTable				= FinanceEnterpriseGroup.CurrencyTable
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.FinanceEnterpriseGroup.ReportCurrencyOne
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.FinanceEnterpriseGroup.ReportCurrencyTwo
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.FinanceEnterpriseGroup.ReportCurrencyThree
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.FinanceEnterpriseGroup.ReportCurrencyFour
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.FinanceEnterpriseGroup.ReportCurrencyFive
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.AccountingEntity.AlternateCurrency
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.AccountingEntity.AlternateCurrency2
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= AssetCompany.AccountingEntity.AlternateCurrency3
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"

		RepairValidateCurrency
			CurrencyWork.FromCurrency				= AssetCurrency
			CurrencyWork.ExchangeDate				= LocalRepairDate
			CurrencyWork.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			CurrencyWork.CurrencyTable				= FinanceEnterpriseGroup.CurrencyTable
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.FinanceEnterpriseGroup.ReportCurrencyOne
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.FinanceEnterpriseGroup.ReportCurrencyTwo
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.FinanceEnterpriseGroup.ReportCurrencyThree
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.FinanceEnterpriseGroup.ReportCurrencyFour
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.FinanceEnterpriseGroup.ReportCurrencyFive
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.AccountingEntity.AlternateCurrency
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.AccountingEntity.AlternateCurrency2
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"
			CurrencyWork.BaseAmount.ToCurrency		= RepairAsset.Company.AccountingEntity.AlternateCurrency3
				constraint (CurrencyWork.BaseAmount.IsRelationshipAndRateDefined)
					"CurrencyRelationshipOrRate<CurrencyWork.FromCurrency>To<CurrencyWork.BaseAmount.ToCurrency>DoesNotExist"

		CreateWIPTransaction
			if(LocalInterfaceAmount entered)
				constraint (LocalPostingDate entered)
					"WIPAndClearingTransactionsRequireThePostingDateToBeProvided"

				invoke Released.Create GLTransactionDetail
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.AccountingEntity		= LocalAccountingEntity
					invoked.System					= "AM"
					invoked.GeneralLedgerEvent		= "CP"
					invoked.Reference				= "ProjectAssetWorkInProcess"
					invoked.Capitalize				= 1
					invoked.Billed					= blank
					invoked.RevenueRecognized		= blank
					invoked.JournalizeGroup			= LocalJournalizeGroup
					invoked.PostingDate				= LocalPostingDate
					invoked.FinanceCodeBlock		= LocalFinanceCodeBlock
					if(!PrmPostWIPToProject)
						initialize invoked.FinanceCodeBlock.Project
					if (PurchaseDate entered)
						invoked.TransactionDate			= PurchaseDate
					else
						invoked.TransactionDate			= LocalPostingDate
					invoked.TransactionAmount		= (LocalInterfaceAmount * -1)
					if (PostingType)
						invoked.CurrencyCode		= LocalProject.Currency
					else
					if (SummaryType)
						invoked.CurrencyCode		= AssetCurrency
					invoked.BypassActiveCodeBlockEdit	= true

	Derived Fields
		DerivedAssetTag	is a DerivedField
			type is like TagNumber
			default label is "TagNumber"
			if (RepairAsset exists)
				return RepairAsset.TagNumber

		PostingDateValid is a DerivedField
			type is Boolean
			restricted
			if (LocalCompanyGroup entered)
				for each CompanyGroupMembersRel
					LocalAssetCompany	= each.Company
					if (LocalClosingControlRel.Control
					and LocalPostingDate not within LocalClosingControlRel.ValidEntryDate)
						return false
						end for each
					else
						return true
			else
				if (LocalAssetCompany entered)
					if (LocalClosingControlRel.Control
					and LocalPostingDate not within LocalClosingControlRel.ValidEntryDate)
						return false
					else
						return true

		DerivedSequenceNumber is a DerivedField
			type is like SequenceNumber
			restricted
			if (RunGroupAdjustmentImportsRel exists)
				return (first RunGroupAdjustmentImportsRel.AssetItemAdjustmentImport.SequenceNumber)
			else
				return 0

		DerivedSeqNumber is a DerivedField
			type is like SequenceNumber
			restricted
			if (RunGroupAssetAdjustmentRel exists)
				return (last RunGroupAssetAdjustmentRel.AssetItemAdjustmentImport.SequenceNumber)
			else
				return 0

		ProjectInterfaceCompletionMessage is a MessageField
			restricted
			"ProjectInterfaceComplete;<RecordCount>RecordsProcessed"

		DerivedTransactionAmount	is a DerivedField
			type is like CurrencyAmount
			restricted
			if (RepairAsset entered)
				CurrencyWork.ExchangeDate 				= LocalRepairDate
			if (LocalPurchaseDate entered)
				CurrencyWork.ExchangeDate               = LocalPurchaseDate
			else
				CurrencyWork.ExchangeDate               = LocalTransactionDate
			CurrencyWork.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
			CurrencyWork.CurrencyTable					= FinanceEnterpriseGroup.CurrencyTable
			CurrencyWork.FromCurrency           		= LocalProjectCurrency
			CurrencyWork.BaseAmount.ToCurrency			= AssetCurrency
			CurrencyWork.TransactionAmount  	 		= LocalFromAmount
			return CurrencyWork.BaseAmount.OutputCurrencyAmount
		
		DerivedAssetInterfaceAmount is a DerivedField		
			type is like InternationalAmount
			restricted
			return sum AssetInterfaceRel.TransactionItemCost
			
	Transient Fields
		AppendImage						is an ImageAttachment
			derive value from AppendToAsset.Picture
		RepairImage						is an ImageAttachment
			derive value from RepairAsset.Picture
		AssetImage						is an ImageAttachment
			derive value from Asset.Picture
		TransientFunctionalCurrency 	is a FromCurrency
			derive value from AssetCompany.GeneralLedgerCompany.AccountingEntity.FunctionalCurrency
		FundTestCodeBlock				is a FinanceCodeBlockFull

		TransientWIPCodeBlock			is a FinanceCodeBlockFullOpenLedger
		TransientClearingCodeBlock		is a FinanceCodeBlockFullOpenLedger


	Conditions
		RecordExists
			restricted
			when (AssetInterfaceOptions exists)

		Capitalize
			when (AssetTemplate entered)

		AssetEntered
			restricted
			when (Asset entered)

		Repair
			when (RepairAsset entered)

		RequirePostingDate
			when (!Repair
			and WorkInProcessAccount entered)

		Adjustment
			when (AppendToAsset entered)

		UncapitalizedTransactionsExist
			restricted
			when (UncapitalizedGLTransactionDetailRel exists)

		ProjectAssetInterfaceRelExists
			restricted
			when (ProjectAssetInterfaceRel exists)

		ProjectAssetInterfaceWithWip
			restricted
			when (ProjectAssetInterfaceRel exists
			and AssetClearingAccount entered
			and !CapitalizationUpgradeInProgress)

		AssetInterfaceWithWip
			restricted
			when (!AssetInterfaceRel exists
			and AssetClearingAccount entered)

		ProjectAssetInterfaceNoWip
			restricted
			when (ProjectAssetInterfaceRel exists
			and AssetClearingAccount not entered
			and !CapitalizationUpgradeInProgress)

		InterfaceRecordsExist
			restricted
			when (AssetInterfaceRel exists)

		AdjustmentRecordsExist
			restricted
			when (AssetItemAdjustmentImportsRel exists)

		PendingCapitalizationEntriesExist
			when (InterfaceRecordsExist
			or AdjustmentRecordsExist
			or SummaryAdjustmentRecordsExist)

		RepairRecordsExist
			restricted
			when (AssetRepairImportsRel exists)

		AssetIsElegible
			when ((RepairAsset not entered
			or !RepairAsset.Status.Disposed)
			or (AppendToAsset not entered
			or !AppendToAsset.Status.Disposed))

		DeleteIsValid
			when (!InterfaceRecordsExist
			and !AdjustmentRecordsExist
			and !ProjectAssetInterfaceRelExists)

		CreateWorkInProcessEntries
			when (WorkInProcessAccount entered)

		CreateAssetClearingEntries
			when (AssetClearingAccount entered)

		FundAccounting
			when (FinanceEnterpriseGroup.FundAccounting
			and not AssetTemplate.AssetType.AllocateDepreciationExpense)

		PostingType
			restricted
			when (Project.Project.ProjectType.Posting)	
		
		SummaryType
			restricted
			when (Project.Project.ProjectType.Summary)

		SummaryAdjustmentRecordsExist
			restricted
			when (SummaryType
			and SummaryAssetItemAdjustmentImportRel exists)

		AssetRepairRecordsExist
			restricted
			when (AssetRepairRecordsRel exists)

		SummaryDraftRecordsExists
			restricted
			when (ProjectAssetInterfaceRel exists
			and SummaryType)
		
		PostingDraftRecordsExists
			restricted
			when (ProjectAssetInterfaceRel exists
			and PostingType)

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		AssetItemAdjustmentImportExist
			restricted
			when (AssetItemAdjustmentImportRel exists)

		InterfaceOrAdjustmentRecordsExist
			restricted
			when (InterfaceRecordsExist
			or AssetItemAdjustmentImportExist)
		
		IsProjectActive		
			restricted
			when (Project.Project.Active)
		
		IsProjectAllowCapitalization
			restricted
			when (Project.Project.ProjectStatus.AllowCapitalization)

		CapitalizationUpgradeInProgress
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)

		UseOldCapitalization
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled)

		UseUpgradedCapitalization
			restricted
			when (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed)

		DisplayOldPostingTransactions
			restricted
			when (PostingType
			and UseOldCapitalization)
		
		DisplayOldSummaryTransactions
			restricted
			when (SummaryType
			and UseOldCapitalization)
		
		DisplayNewPostingTransactions
			restricted
			when (PostingType
			and UseUpgradedCapitalization)
		
		DisplayNewSummaryTransactions
			restricted
			when (SummaryType
			and UseUpgradedCapitalization)

		ErrorAssetTransactionExists
			restricted
			when (UncapitalizedErrorAssetCapitalTransactionsRel exists)
		
		ErrorSummaryAssetTransactionExists
			restricted
			when (SummaryUncapitalizedErrorAssetCapitalTransactionsRel exists)
		
		ErrorProjectAssetInterfaceExists
			restricted
			when (ErrorProjectAssetInterfaceRel exists)

		IsValidForPostWIPToProject
			restricted
			when(AssetClearingAccount entered
			and WorkInProcessAccount not entered)

		IsValidForPostWIPToProjectPurchaseDate
			restricted
			when(IsValidForPostWIPToProject
			or PurchaseDate entered)

		IsValidForPostWIPToProjectDate
			restricted
			when(IsValidForPostWIPToProject
			or PurchaseDate not entered)

		DisplayPurchaseDateNotEntered
			restricted
			when (PurchaseDate not entered
			and UseUpgradedCapitalization)

		DisplayPurchaseDate
			restricted
			when (PurchaseDate entered
			and UseUpgradedCapitalization)

	Field Groups
		AdditionFields
			AssetTemplate
		 	ItemQuantity
			Combine
			TagNumber
			AssetGroup
			ItemNumber
			Description
			PurchaseDate
			InServiceDate
			ItemTax
			ModelNumber
			SerialNumber
			HoldAsset
			Asset

		AdjustFields
			AppendOption
			AppendToAsset
			AddToBasis
			ComputeDepreciation

		RepairFields
			RepairAsset
			RepairTax


	Field Rules
		AssetCompany
			required
			if (PendingCapitalizationEntriesExist)
				cannot be changed
					"ThisFieldCannotBeChanged;AssetInterfaceOrItemAdjustmentRecordsMustBeAddressedPriorToPerformingThisUpdate"

		Project
			required
			constraint (Project.Project.ProjectType.Posting
			or Project.Project.ProjectType.Summary)
				"<FinanceEnterpriseGroup.ProjectLabel>MustBePostingTypeOrSummaryType"
			if (PostingType)
				constraint (Project.Project.Capital)
					"<FinanceEnterpriseGroup.ProjectLabel>MustAllowCapital"
				constraint (Project.Project.ProjectStatus.AllowCapitalization)
					"<FinanceEnterpriseGroup.ProjectLabel>StatusMustAllowCapitalization"
			else
				if (SummaryType)
					constraint (CapitalProjectContractShadowSummaryRel exists)
						"AtleastOneOfThePosting<FinanceEnterpriseGroup.ProjectLabel>MustsAllowCapital"
					constraint (AllowCapitalizationProjectContractShadowSummaryRel exists)
						"AtleastOneOfThePosting<FinanceEnterpriseGroup.ProjectLabel>StatusMustAllowCapitalization"
			if (ProjectAssetInterfaceRelExists)
				cannot be changed
					"DraftProjectInterfaceRecordsMustBeProcessedOrDeletedPriorToPerformingThisUpdate"
			if (InterfaceOrAdjustmentRecordsExist
			or AssetRepairRecordsExist)
				cannot be changed
					"AllAssetInterface,AssetItemAdjustmentRecordsAndAssetRepairRecordsMustBeInterfacedOrDeletedPriorToPerformingThisUpdate"
			if (Project changed)
				if (Project.Project.ProjectType.Posting
				and (old Project.Project.ProjectType.Posting
				or	old Project.Project.ProjectType.Summary))
					AssetCurrency = Project.Project.Currency

		TransactionQualifier
			if (UseOldCapitalization)
				required

		CapitalTransactionQualifier
			if (UseUpgradedCapitalization)
				required

		AssetCurrency
			if (Project.Project.ProjectType.Summary)
				required
					"AssetCurrencyIsRequiredForSummaryProject"
				if (InterfaceOrAdjustmentRecordsExist
				or AssetRepairRecordsExist)
					cannot be changed
						"AllAssetInterface,AssetItemAdjustmentRecordsAndAssetRepairRecordsMustBeInterfacedOrDeletedPriorToPerformingThisUpdate"
			else
				default to Project.Project.Currency

		AssetTemplate
			if (AssetTemplate not entered)
				constraint (RepairAsset entered)
					"TemplateOrRepairAssetIsRequired"
			constraint (AssetTemplate.Company = AssetCompany)
				"AssetTemplateCompanyMustBeTheSameAsAssetCompany"
			if (AssetTemplate entered)
				constraint (PurchaseDate entered 
				or UseUpgradedCapitalization)
					"PurchaseDateIsRequiredWithTemplate"

		WorkInProcessAccount
			if (PendingCapitalizationEntriesExist)
				cannot be changed
					"AssetInterfaceOrAssetItemAdjustmentRecordsMustBeInterfacedOrDeletedPriorToPerformingThisUpdate"
			if (ProjectAssetInterfaceRel exists)
				cannot be changed
					"ThisFieldCannotBeChanged;IfProjectAssetInterfaceRecordsExists"
			if (WorkInProcessAccount entered)
				constraint (AssetClearingAccount entered)
					"IfTheWorkInProcessAccountIsEnteredTheAssetClearingAccountMustAlsoBeProvided"
				if (WorkInProcessAccount.Ledger not entered)
					WorkInProcessAccount.Ledger = FinanceEnterpriseGroup.CoreLedger


		AssetClearingAccount
			if (PendingCapitalizationEntriesExist)
				cannot be changed
					"ThisFieldCannotBeChanged;AssetInterfaceOrItemAdjustmentRecordsMustBeAddressedPriorToPerformingThisUpdate"
			if (ProjectAssetInterfaceRel exists)
				cannot be changed
					"ThisFieldCannotBeChanged;IfProjectAssetInterfaceRecordsExists"
			if (AssetClearingAccount entered)
				if (AssetClearingAccount.Ledger not entered)
					AssetClearingAccount.Ledger = WorkInProcessAccount.Ledger
			if(WorkInProcessAccount entered)
				constraint (WorkInProcessAccount.Ledger = AssetClearingAccount.Ledger)
					"WorkInProcessAndAssetClearingLedgerMustPostToTheSameLedger"


		AssetDescription
			initial value is Asset.Description
			initial value is AppendToAsset.Description
			initial value is RepairAsset.Description
			default to Asset.Description
			default to AppendToAsset.Description
			default to RepairAsset.Description
			required

		InServiceDate
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterInServiceDateWithoutATemplate"
			else
				default to PurchaseDate

		SerialNumber
			if (AssetTemplate not entered)
				cannot be entered
					"SerialNumberUsedOnlyWithAssetTemplate"

		ModelNumber
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterModelNumberWithoutATemplate"

		TagNumber
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterTagNumberWithoutATemplate"
			if (AssetCompany.RequireUniqueTags = true)
				if (TagNumber entered)
					constraint (UniqueAssetsTagRel not exists)
						"TagNumber<TagNumber>IsInUse"

		ItemNumber
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterAnItemWithoutATemplate"

		PurchaseDate
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterPurchaseDateWithoutATemplate"
			if (PurchaseDate entered
			and SummaryType)
				include ValidateCurrency
			if (UseUpgradedCapitalization
			and PurchaseDate not entered)
				confirmation required
					"IfThePurchaseDateIsNotProvidedTheTransactionDateWillBeAssignedAsTheAssetPurchaseDate"	

		ItemQuantity
			if (AssetTemplate entered)
				required
					"MustEnterQuantityWithATemplate"

		AssetGroup
			if (AssetTemplate not entered)
				cannot be entered
					"CannotEnterAnAssetGroupWithoutATemplate"

		AssetLocation
			if (AssetTemplate not entered)
				cannot be entered
					"Location_\NameUsedOnlyWithAssetTemplate"
			if (AppendToAsset entered)
				cannot be entered
					"CannotAssignALocationWhenAppendingAnExistingAsset"
			if (RepairAsset entered)
				cannot be entered
					"CannotAssignALocationToARepairToAnExistingAsset"

		AssetDivision
			if (AssetTemplate not entered)
				cannot be entered
					"DivisionUsedOnlyWithAssetTemplate"
			if (AppendToAsset entered)
				cannot be entered
					"CannotAssignADivisionWhenAppendingAnExistingAsset"
			if (RepairAsset entered)
				cannot be entered
					"CannotAssignADivisionToARepairToAnExistingAsset"

		AppendOption
	   		if (AppendOption)
				constraint (AssetTemplate entered)
					"AppendOptionRequiresARepairAssetOrAssetTemplate"

		AppendToAsset
			if (AppendToAsset entered)
				constraint (AppendOption)
					"AppendOptionMustBeSelectedWhenProvidingAnAppendToAsset"
				if (AppendToAsset.AssetProject not = Project)
					confirmation required
						"TheAppendToAsset<AppendToAsset>IsAssignedToProject<AppendToAsset.AssetProject>,ThisWillNotBeChangedByThisAction"
			if (AssetRel exists)
				constraint (AssetRel.FundOverride = blank)
					"AppendToAssetCannotHaveTheFundOverrideOptionSelected"

		AddToBasis
			if (AddToBasis)
				constraint (AppendOption)
					"AppendOptionMustBeSelectedWhenAddingToBasis"

		ComputeDepreciation
			if (ComputeDepreciation)
				constraint (AddToBasis)
					"ComputeDepreciationRequiredAddToBasisOption"

 		RepairAsset
			if (RepairAsset entered)
				if (AssetClearingAccount entered)
					confirmation required
						"WIPAndClearingAccountsAreNotValidForRepairAsset,SelectOKToClearWipAndClearingAccountsAndProceed,OrCancelToRemoveRepairAsset"
					initialize AssetClearingAccount
					initialize WorkInProcessAccount

		AddToItemQuantity
			constraint (AppendToAssetItem entered)
				"AppendToAssetItemIsRequiredWhenAddToItemQuantityIsSelected"

	Relations
		GeneralLedgerTransactionByPostRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project	= Project.Project
				related.PostingDate 				<= LocalDateRange.End
			Instance Selection
				where (related.Status.Posted
				and	related.PostingDate >= LocalDateRange.Begin)

		GeneralLedgerTransactionByTransRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project	= Project.Project
			Instance Selection
				where (related.Status.Posted
				and    related.TransactionDate within LocalDateRange)

		SummaryGeneralLedgerTransactionByPostRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project	= ProjectContractShadowSummaryRel.Project
				related.PostingDate 				<= LocalDateRange.End
			Instance Selection
				where (related.Status.Posted
				and	related.PostingDate >= LocalDateRange.Begin)

		SummaryGeneralLedgerTransactionByTransRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project	= ProjectContractShadowSummaryRel.Project
			Instance Selection
				where (related.Status.Posted
				and    related.TransactionDate within LocalDateRange)

		GeneralLedgerTransactionRel
			if (LocalDateType = 0)
				GeneralLedgerTransactionByTransRel
			else
				GeneralLedgerTransactionByPostRel

		SummaryGeneralLedgerTransactionRel
			if (LocalDateType = 0)
				SummaryGeneralLedgerTransactionByTransRel
			else
				SummaryGeneralLedgerTransactionByPostRel

		UncapitalizedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where ((related.Capitalize.Unprocessed
				or      related.Capitalize.Hold)
				and     related.IsPosted
				and     related within TransactionQualifier)

		SummaryUncapitalizedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= ProjectContractShadowSummaryRel.Project
			Instance Selection
				where ((related.Capitalize.Unprocessed
				or      related.Capitalize.Hold)
				and     related.IsPosted
				and     related within TransactionQualifier)
		
		GLTransactionDetailRel
			one-to-one relation to GLTransactionDetail
			Field Mapping uses symbolic key
				related.GLTransactionDetail 		= LocalGLTransactionDetail

		UncapitalizedAssetCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
				related.Capitalized			 		= false
			Instance Selection
				where (related within CapitalTransactionQualifier)

		SummaryUncapitalizedAssetCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= ProjectContractShadowSummaryRel.Project
				related.Capitalized			 		= false
			Instance Selection
				where (related within CapitalTransactionQualifier)
		
		UnprocessedCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses ByCapitalizeTransactions
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
				related.Capitalize			 		= 0

		SummaryUnprocessedCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses ByCapitalizeTransactions
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= ProjectContractShadowSummaryRel.Project
				related.Capitalize			 		= 0
		
		UncapitalizedErrorAssetCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
				related.Capitalized			 		= false
			Instance Selection
				where (related within CapitalTransactionQualifier
				and related.ErrorMessage entered)

		SummaryUncapitalizedErrorAssetCapitalTransactionsRel
			one-to-many relation to AssetCapitalTransaction
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= ProjectContractShadowSummaryRel.Project
				related.Capitalized			 		= false
			Instance Selection
				where (related within CapitalTransactionQualifier
				and related.ErrorMessage entered)

		ProjectAssetInterfaceRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
			Instance Selection
				where (related.Status        	= 0)
		
		ErrorProjectAssetInterfaceRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
			Instance Selection
				where (related.Status        	= 0
				and related.ErrorMessage entered)

		DraftInterfaceRecordsProjectDateRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProjectDate
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
			Instance Selection
				where (related.Status        	= 0)

		DraftInterfaceRecordsProjectRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
			Instance Selection
				where (related.Status        	= 0)

		DraftInterfaceRecordsRel
			if (PurchaseDate entered
			or LocalPurchaseDate entered)
				DraftInterfaceRecordsProjectRel
			else
				DraftInterfaceRecordsProjectDateRel


		DraftInterfacesBySummaryCodeRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SummaryCode			    = LocalSummaryCode
				related.Project				    = LocalProject
			Instance Selection
				where (related.Status        	= 0)

		DraftInterfacesBySummaryCodeCapitalRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SummaryCode			    = LocalSummaryCode
				related.Project				    = LocalProject
			Instance Selection
				where (related.Status        	= 0
				and related.TransactionDate     = LocalTransactionDate)

		NextDraftInterfaceBySummaryCodeRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SummaryCode			    = LocalSummaryCode
				related.Project				    = LocalProject
			Instance Selection
				where (related.Status        	= 0
				and related.SequenceNumber		> LocalDraftSequenceNumber)

		NextDraftInterfaceBySummaryCodeCapitalRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SummaryCode			    = LocalSummaryCode
				related.Project				    = LocalProject
			Instance Selection
				where (related.Status        	= 0 
				and related.TransactionDate     = LocalTransactionDate 
				and related.SequenceNumber		> LocalDraftSequenceNumber)



		ProjectAssetInterfaceRunGroupRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses ByRunGroup
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
		ProjectAssetInterfaceOTORel
			one-to-one relation to ProjectAssetInterface
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SequenceNumber			= LocalDraftSequence
			
		LocalProjectAssetInterfaceRel
			one-to-one relation to ProjectAssetInterface
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
				related.SequenceNumber			= LocalDraftSeqNumber

		LocalAssetInterfaceRel
			one-to-one relation to AssetInterface
			Field Mapping uses symbolic key
				related.Company					= AssetCompany
				related.AssetInterface			= LocalAssetInterface

		LocalAssetInterfaceFundsRel
			one-to-many relation to AssetInterfaceFund
			Field Mapping uses symbolic key
				related.Company					= AssetCompany
				related.AssetInterface			= LocalAssetInterface

		LocalItemAdjustmentImportRel
			one-to-one relation to AssetItemAdjustmentImport
			Field Mapping uses Set1
				related.AssetItemAdjustmentImport.RunGroup	= LocalRunGroup
				related.Asset								= Asset
				related.AssetItemAdjustmentImport.SequenceNumber = LocalSequenceNumber

		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode     = "AM"

		AssetInterfaceRel
			one-to-many relation to AssetInterface
			Field Mapping uses ByOriginatingAssetInterface
				related.Company								= AssetCompany
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions		

		SelectedAssetInterfacesRel
			one-to-many relation to AssetInterface
			Field Mapping uses ByInterfaceOptions
				related.Company								= AssetCompany
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
				related.AssetTemplate						= AssetTemplate
				related.Combine								= LocalCombine

		UnallocatedFundInterfacesRel
			one-to-many relation to AssetInterface
			Field Mapping uses ByInterfaceOptions
				related.Company								= AssetCompany
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
			Instance Selection
				where (!related.FundAllocationExists)

		UnallocatedItemInterfacesRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByAssetInterfaceOptions
				related.Asset								= AppendToAsset
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
			Instance Selection
				where (!related.FundAllocationExists)

		AssetItemAdjustmentImportRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByAssetInterfaceOptions
				related.Asset								= AppendToAsset
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions

		AppendToAssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= AppendToAsset

		RepairAssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= RepairAsset

		JournalizeGroupResultsRel
			one-to-many relation to JournalizeGroupResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup	
				
		AssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= AppendToAsset

		AssetItemAdjustmentImportsRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByProjectAsset
				related.Project						= Project
				related.Asset						= AppendToAsset
			Instance Selection
				where (related.OriginatingAssetInterfaceOptions = AssetInterfaceOptions)

		SummaryAssetItemAdjustmentImportRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByProjectAsset
				related.Project						= ProjectContractShadowSummaryRel.Project
				related.Asset						= AppendToAsset
			Instance Selection
				where (related.OriginatingAssetInterfaceOptions = AssetInterfaceOptions)

		LocalClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "AM"
				related.Company						= LocalAssetCompany

		CompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup 	= LocalCompanyGroup
				related.Company						= AssetCompany

		CompanyGroupMembersRel
			one-to-many relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup 	= LocalCompanyGroup

		RunGroupAdjustmentImportsRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByProjectAsset
			 	related.Project.Project						= LocalProject
				related.Asset								= LocalAppendToAsset
				related.AssetItemAdjustmentImport.RunGroup	= LocalRunGroup

		RunGroupAssetAdjustmentRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByAssetInterfaceOptions
				related.Asset								= LocalAppendToAsset
				related.OriginatingAssetInterfaceOptions	= AssetInterfaceOptions
				related.AssetItemAdjustmentImport.RunGroup	= LocalRunGroup
				
		AssetRepairImportsRel
			one-to-many relation to AssetRepairImport
			Field Mapping uses Set3
				related.Company						= AssetCompany
				related.Project.Project				= Project.Project
				related.Asset						= RepairAsset

		AssetRepairRecordsRel
			one-to-many relation to AssetRepairImport
			Field Mapping uses symbolic key
				related.Company						= AssetCompany
			Instance Selection
				where ((related.Asset							= RepairAsset)
				and ((related.OriginatingAssetInterfaceOptions	= blank
				and	related.Project.Project						= Project.Project)
				or related.OriginatingAssetInterfaceOptions		= AssetInterfaceOptions))

		UniqueAssetsTagRel
			one-to-many relation to Asset
			Field Mapping uses ByCompanyTagAsset
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Company 				= AssetCompany
				related.TagNumber				= TagNumber


		ProjectContractShadowSummaryRel
    		one-to-many relation to ProjectShadow
    		Field Mapping uses BySummaryProject
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.SummaryProject			= Project.Project
			Instance Selection
				where (related.Project.Capital
				and related.Project.ProjectStatus.AllowCapitalization)

		CapitalProjectContractShadowSummaryRel
    		one-to-many relation to ProjectShadow
    		Field Mapping uses BySummaryProject
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.SummaryProject			= Project.Project
			Instance Selection
				where (related.Project.Capital)

		AllowCapitalizationProjectContractShadowSummaryRel
    		one-to-many relation to ProjectShadow
    		Field Mapping uses BySummaryProject
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.SummaryProject			= Project.Project
			Instance Selection
				where (related.Project.ProjectStatus.AllowCapitalization)

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
            Field Mapping uses symbolic key
            	related.Company = AssetCompany	

		SummaryProjectGroupRel
			one-to-many relation to Project
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup	= LocalFEG
			Instance Selection
				where (related.Project.ProjectType.Summary
				and related.Project within LocalProjectGroup)

		AssetInterfaceOptionsRel
			one-to-many relation to AssetInterfaceOptions
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
		
		LocalAssetInterfaceOptionsRel
			one-to-many relation to AssetInterfaceOptions
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFEG

		BusinessClassGroupRel
			one-to-one relation to BusinessClassGroup
			Field Mapping uses symbolic key
				related.BusinessClass = "AssetCapitalTransaction"
				related.BusinessClassGroup = TransactionQualifier

		GLTransactionDetailForRunGroupRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses ByJournalizeGroup
				related.FinanceEnterpriseGroup		= LocalFEG
				related.JournalizeGroup				= LocalJournalizeRunGroup

		
		NextDraftInterfacesWithOutSummaryCodeRel
			one-to-many relation to ProjectAssetInterface
			Field Mapping uses BySummaryCodeProject
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.AssetInterfaceOptions	= AssetInterfaceOptions
			Instance Selection
				where (related.Status        	= 0
				and related.SummaryCode not entered
				and related.Project				= LocalProject
				and related.SequenceNumber		> LocalDraftSeqNumber)
		
		AssetInterfaceBySequenceRel
			one-to-many relation to AssetInterface
			Field Mapping uses ByDistributionCodeBlock
				related.Company								= AssetCompany
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
				related.InterfaceSequenceNumber 			= LocalInterfaceSequenceNumber

		AssetItemAdjustmentImportBySequenceRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByDistributionCodeBlock
				related.Asset								= AppendToAsset
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
				related.InterfaceSequenceNumber 			= LocalInterfaceSequenceNumber

		NextInterfaceByFinanceCodeBlockRel
			one-to-many relation to AssetInterface
			Field Mapping uses ByDistributionCodeBlock
				related.Company								= AssetCompany
				related.OriginatingAssetInterfaceOptions 	= AssetInterfaceOptions
				related.InterfaceSequenceNumber 			= LocalInterfaceSequenceNumber
				related.DistributionCodeBlock 				= LocalFinanceCodeBlock
				related.AssetInterface 						> LocalInterface

		NextAssetItemAdjustmentImportByFinanceCodeBlockRel
			one-to-many relation to AssetItemAdjustmentImport
			Field Mapping uses ByDistributionCodeBlock
				related.Asset									 = AppendToAsset
				related.OriginatingAssetInterfaceOptions 		 = AssetInterfaceOptions
				related.InterfaceSequenceNumber 				 = LocalInterfaceSequenceNumber
				related.DistributionCodeBlock 					 = LocalFinanceCodeBlock
				related.AssetItemAdjustmentImport.RunGroup		 = LocalImportRunGroup
				related.AssetItemAdjustmentImport.SequenceNumber > LocalImportSequenceNumber

	Sets
		ByProject
			Sort Order
				FinanceEnterpriseGroup
				Project
				AssetInterfaceOptions

		ByProjectQualifier
			Sort Order
				FinanceEnterpriseGroup
				Project
				TransactionQualifier
				AssetInterfaceOptions

		ByCompany
			Sort Order
				FinanceEnterpriseGroup
				AssetCompany
				AssetInterfaceOptions
				Project

		ByAppendToAsset
			Sort Order
				FinanceEnterpriseGroup
				AssetCompany
				AppendToAsset
				AssetInterfaceOptions


	Actions
		Create is a Create Action
			valid when (!CapitalizationUpgradeInProgress)
			Action Rules
				if (AdjustFields entered)
					constraint (RepairFields not entered)
						"RepairDetailCannotBeUsedWithAssetDefaults,ItemOrAdjustmentDetail"
				if (AdditionFields entered)
					constraint (RepairFields not entered)
						"RepairDetailCannotBeUsedWithAssetDefaults,ItemOrAdjustmentDetail"
				if (RepairFields entered)
					constraint (RepairAsset entered)
						"RepairAssetIsRequired"


		Copy is an Instance Action
			valid when (!CapitalizationUpgradeInProgress)
			Parameters
				ToProject is a FinanceCodeBlockProjectOnly
				PrmAssetCurrency is a Currency
					default label is "AssetCurrency"

			Parameter Rules
				ToProject
					required
				PrmAssetCurrency
					if (SummaryType
					and ToProject.Project.ProjectType.Summary)
						default to AssetCurrency
					else
					if (PostingType
					and ToProject.Project.ProjectType.Summary)
						required
							"AssetCurrencyIsRequiredForSummaryProject"

			Action Rules
				invoke Create AssetInterfaceOptions
					fill in fields from this instance
						except invoked.ErrorMessage
					invoked.Project 				= ToProject
					invoked.AssetCurrency 			= PrmAssetCurrency

		Update is an Update Action
			valid when (!CapitalizationUpgradeInProgress)
			Action Rules
				if (AdjustFields entered)
					constraint (RepairFields not entered)
						"RepairDetailCannotBeUsedWithAssetDefaults,ItemOrAdjustmentDetail"
				if (AdditionFields entered)
					constraint (RepairFields not entered)
						"RepairDetailCannotBeUsedWithAssetDefaults,ItemOrAdjustmentDetail"
				if (RepairFields entered)
					constraint (RepairAsset entered)
						"RepairAssetIsRequired"

		EditUpdate is an Update Action
			restricted
			Action Rules
				if (CreateAssetClearingEntries)
					TransientWIPCodeBlock		= WorkInProcessAccount
					TransientClearingCodeBlock	= AssetClearingAccount
					if(WorkInProcessAccount entered)
						if (WorkInProcessAccount.Ledger entered)
							constraint (WorkInProcessAccount.Ledger.Active)
								"LedgerIsInactive"
						if (WorkInProcessAccount.ToAccountingEntity entered)
							constraint (WorkInProcessAccount.ToAccountingEntity.Status.Active)
								"CannotAttachAnInactive<WorkInProcessAccount.ToAccountingEntity>_<FinanceEnterpriseGroup.AccountingEntityLabel>"
						if (WorkInProcessAccount.AccountingUnit entered)
							constraint (WorkInProcessAccount.AccountingUnit.Active)
								"CannotAttachAnInactive<WorkInProcessAccount.AccountingUnit>_<FinanceEnterpriseGroup.AccountingUnitLabel>"
						if (WorkInProcessAccount.GeneralLedgerChartAccount entered)
							constraint (WorkInProcessAccount.GeneralLedgerChartAccount.Active)
								"CannotAttachAnInactive<WorkInProcessAccount.GeneralLedgerChartAccount>_<FinanceEnterpriseGroup.AccountLabel>"
						if (WorkInProcessAccount.Project entered)
							constraint (WorkInProcessAccount.Project.Active)
								"CannotAttachInactive<WorkInProcessAccount.Project>_<FinanceEnterpriseGroup.ProjectLabel>"
						if (WorkInProcessAccount.FinanceDimension1 entered)
							constraint (WorkInProcessAccount.FinanceDimension1.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension1>_<FinanceEnterpriseGroup.FinanceDimension1Label>"
						if (WorkInProcessAccount.FinanceDimension2 entered)
							constraint (WorkInProcessAccount.FinanceDimension2.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension2>_<FinanceEnterpriseGroup.FinanceDimension2Label>"
						if (WorkInProcessAccount.FinanceDimension3 entered)
							constraint (WorkInProcessAccount.FinanceDimension3.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension3>_<FinanceEnterpriseGroup.FinanceDimension3Label>"
						if (WorkInProcessAccount.FinanceDimension4 entered)
							constraint (WorkInProcessAccount.FinanceDimension4.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension4>_<FinanceEnterpriseGroup.FinanceDimension4Label>"
						if (WorkInProcessAccount.FinanceDimension5 entered)
							constraint (WorkInProcessAccount.FinanceDimension5.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension5>_<FinanceEnterpriseGroup.FinanceDimension5Label>"
						if (WorkInProcessAccount.FinanceDimension6 entered)
							constraint (WorkInProcessAccount.FinanceDimension6.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension6>_<FinanceEnterpriseGroup.FinanceDimension6Label>"
						if (WorkInProcessAccount.FinanceDimension7 entered)
							constraint (WorkInProcessAccount.FinanceDimension7.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension7>_<FinanceEnterpriseGroup.FinanceDimension7Label>"
						if (WorkInProcessAccount.FinanceDimension8 entered)
							constraint (WorkInProcessAccount.FinanceDimension8.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension8>_<FinanceEnterpriseGroup.FinanceDimension8Label>"
						if (WorkInProcessAccount.FinanceDimension9 entered)
							constraint (WorkInProcessAccount.FinanceDimension9.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension9>_<FinanceEnterpriseGroup.FinanceDimension9Label>"
						if (WorkInProcessAccount.FinanceDimension10 entered)
							constraint (WorkInProcessAccount.FinanceDimension10.Active)
								"CannotAttachInactive<WorkInProcessAccount.FinanceDimension10>_<FinanceEnterpriseGroup.FinanceDimension10Label>"
					
					if (AssetClearingAccount.Ledger entered)
						constraint (AssetClearingAccount.Ledger.Active)
							"LedgerIsInactive"
					if (AssetClearingAccount.ToAccountingEntity entered)
						constraint (AssetClearingAccount.ToAccountingEntity.Status.Active)
							"CannotAttachAnInactive<AssetClearingAccount.ToAccountingEntity>_<FinanceEnterpriseGroup.AccountingEntityLabel>"
					if (AssetClearingAccount.AccountingUnit entered)
						constraint (AssetClearingAccount.AccountingUnit.Active)
							"CannotAttachAnInactive<AssetClearingAccount.AccountingUnit>_<FinanceEnterpriseGroup.AccountingUnitLabel>"
					if (AssetClearingAccount.GeneralLedgerChartAccount entered)
						constraint (AssetClearingAccount.GeneralLedgerChartAccount.Active)
							"CannotAttachAnInactive<AssetClearingAccount.GeneralLedgerChartAccount>_<FinanceEnterpriseGroup.AccountLabel>"
					if (AssetClearingAccount.Project entered)
						constraint (AssetClearingAccount.Project.Active)
							"CannotAttachInactive<AssetClearingAccount.Project>_<FinanceEnterpriseGroup.ProjectLabel>"
					if (AssetClearingAccount.FinanceDimension1 entered)
						constraint (AssetClearingAccount.FinanceDimension1.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension1>_<FinanceEnterpriseGroup.FinanceDimension1Label>"
					if (AssetClearingAccount.FinanceDimension2 entered)
						constraint (AssetClearingAccount.FinanceDimension2.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension2>_<FinanceEnterpriseGroup.FinanceDimension2Label>"
					if (AssetClearingAccount.FinanceDimension3 entered)
						constraint (AssetClearingAccount.FinanceDimension3.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension3>_<FinanceEnterpriseGroup.FinanceDimension3Label>"
					if (AssetClearingAccount.FinanceDimension4 entered)
						constraint (AssetClearingAccount.FinanceDimension4.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension4>_<FinanceEnterpriseGroup.FinanceDimension4Label>"
					if (AssetClearingAccount.FinanceDimension5 entered)
						constraint (AssetClearingAccount.FinanceDimension5.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension5>_<FinanceEnterpriseGroup.FinanceDimension5Label>"
					if (AssetClearingAccount.FinanceDimension6 entered)
						constraint (AssetClearingAccount.FinanceDimension6.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension6>_<FinanceEnterpriseGroup.FinanceDimension6Label>"
					if (AssetClearingAccount.FinanceDimension7 entered)
						constraint (AssetClearingAccount.FinanceDimension7.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension7>_<FinanceEnterpriseGroup.FinanceDimension7Label>"
					if (AssetClearingAccount.FinanceDimension8 entered)
						constraint (AssetClearingAccount.FinanceDimension8.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension8>_<FinanceEnterpriseGroup.FinanceDimension8Label>"
					if (AssetClearingAccount.FinanceDimension9 entered)
						constraint (AssetClearingAccount.FinanceDimension9.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension9>_<FinanceEnterpriseGroup.FinanceDimension9Label>"
					if (AssetClearingAccount.FinanceDimension10 entered)
						constraint (AssetClearingAccount.FinanceDimension10.Active)
							"CannotAttachInactive<AssetClearingAccount.FinanceDimension10>_<FinanceEnterpriseGroup.FinanceDimension10Label>"

				if (RepairAsset entered)
					if (SummaryType)
						include RepairValidateCurrency

		CheckSummaryCode is an Update Action
			restricted
			Action Rules
				constraint(LocalCode not entered)
					"SummaryCodeCannotBeAssignedWhenWorkInProcessAccountNotEntered"
				
		UpdateFromAssetCreate is an Instance Action
			restricted
			Parameters
				AppendToAssetParameter is like Asset
			Action Rules
				if (AppendOption = true)
					AppendToAsset		= AppendToAssetParameter

		Delete is a Delete Action
			valid when (DeleteIsValid)
			Entrance Rules
				constraint (!InterfaceRecordsExist)
					"RelatedAssetInterfaceRecordsMustBeProcessedOrDeletedPriorToDeletingProjectInterfaceControlRecord"

				constraint (!AdjustmentRecordsExist)
					"RelatedAssetItemAdjustmentImportRecordsMustBeProcessedOrDeletedPriorToDeletingProjectInterfaceControlRecord"

				constraint (!ProjectAssetInterfaceRelExists)
					"DraftProjectInterfaceRecordsMustBeProcessedOrDeletedPriorToDeletingProjectInterfaceControlRecord"

		DraftProjectAssetInterface is an Instance Action
			default label is "DraftProjectInterface"
			completion message is "DraftProjectInterfaceSubmitted"
			valid when (!CapitalizationUpgradeInProgress)
			disable multiple instance selection
			Parameters
				PrmThroughDate				is Date
					default label is "SelectTransactionsThroughDate"
				PrmDateRange				is a DateRange
				PrmDateType					is Numeric size 1
					default label is "Date"
					States
						Transaction			value is 0
						Posting				value is 1
				PrmIncludeRepairs			is Boolean
					default label is "IncludeRepairs"
				PrmSummaryCode				is AlphaUpper size 30
					default label is "SummaryCode"
				PrmTransactionDate          is Date
					default label is "OverrideTransactionDate"
				PrmOverrideProject			is a Project
					default label is "OverrideProject"
				PrmToAccountingEntity		is a ToAccountingEntity
					default label is "<actor.context.FinanceEnterpriseGroup.AccountingEntityLabel>"	
				PrmAccountingUnit			is a AccountingUnit
					default label is "<actor.context.FinanceEnterpriseGroup.AccountingUnitLabel>"
				PrmGeneralLedgerChartAccount is a GeneralLedgerChartAccount
					default label is "<actor.context.FinanceEnterpriseGroup.AccountLabel>"		
				PrmFinanceDimension1		is a FinanceDimension1
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension1Label>"
				PrmFinanceDimension2		is a FinanceDimension2
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension2Label>"
				PrmFinanceDimension3		is a FinanceDimension3
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension3Label>"
				PrmFinanceDimension4		is a FinanceDimension4
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension4Label>"
				PrmFinanceDimension5		is a FinanceDimension5
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension5Label>"
				PrmFinanceDimension6		is a FinanceDimension6
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension6Label>"
				PrmFinanceDimension7		is a FinanceDimension7
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension7Label>"
				PrmFinanceDimension8		is a FinanceDimension8
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension8Label>"
				PrmFinanceDimension9		is a FinanceDimension9
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension9Label>"
				PrmFinanceDimension10		is a FinanceDimension10
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension10Label>"

			Parameter Rules
				PrmDateRange
					required

				PrmSummaryCode
					if(AssetInterfaceOptions.IsValidForPostWIPToProject)
						cannot be entered
							"SummaryCodeCannotBeAssignedWhenWorkInProcessAccountNotEntered"
					if (PrmOverrideProject entered)
						required
							"MustEnterSummaryCodeIfOverrideProjectIsEntered"

				PrmOverrideProject
					if (PostingType
					and PrmOverrideProject not entered
					and PrmSummaryCode entered)
						default to Project.Project
					if (PrmSummaryCode entered
					and SummaryType)
						required
							"MustEnterOverrideProjectIfSummaryCodeIsEnteredForSummaryLevelProject"
					constraint (PrmOverrideProject.ProjectType.Posting)
						"OverrideProjectMustBePostingTypeOnly"
					constraint (PrmOverrideProject.Capital)
						"MustBeACapital<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (PrmOverrideProject.ProjectStatus.AllowCapitalization)
						"<FinanceEnterpriseGroup.ProjectLabel>StatusMustAllowCapitalization"
				PrmTransactionDate
					if(PrmSummaryCode entered 
					and UseUpgradedCapitalization
					and PurchaseDate not entered)
						required
							"MustEnterTransactionDateWhenSummaryCodeIsEntered"


			Action Rules
				invoke DraftProjectAssetInterfaceSet
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmCompany					= AssetCompany
					invoked.PrmProject					= Project.Project
					invoked.PrmDateRange				= PrmDateRange
					invoked.PrmDateType					= PrmDateType
					if (RepairAsset entered)
						invoked.PrmIncludeRepairs		= true
					invoked.PrmSummaryCode				= PrmSummaryCode
					invoked.PrmAssetInterfaceOptions	= AssetInterfaceOptions
					invoked.PrmOverrideProject			= PrmOverrideProject
					invoked.PrmToAccountingEntity		= PrmToAccountingEntity
					invoked.PrmAccountingUnit			= PrmAccountingUnit
					invoked.PrmGeneralLedgerChartAccount = PrmGeneralLedgerChartAccount
					invoked.PrmFinanceDimension1		= PrmFinanceDimension1
					invoked.PrmFinanceDimension2		= PrmFinanceDimension2
					invoked.PrmFinanceDimension3		= PrmFinanceDimension3
					invoked.PrmFinanceDimension4		= PrmFinanceDimension4
					invoked.PrmFinanceDimension5		= PrmFinanceDimension5
					invoked.PrmFinanceDimension6		= PrmFinanceDimension6
					invoked.PrmFinanceDimension7		= PrmFinanceDimension7
					invoked.PrmFinanceDimension8		= PrmFinanceDimension8
					invoked.PrmFinanceDimension9		= PrmFinanceDimension9
					invoked.PrmFinanceDimension10		= PrmFinanceDimension10
					invoked.PrmTransactionDate          = PrmTransactionDate

		DraftProjectAssetInterfaceSet is a Set Action
			default label is "DraftProjectInterface"
			completion message is "DraftProjectInterfaceCompleted"
			restricted

			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCompany					is a Company
					default label is "Company"
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
					default label is "-or-_CompanyGroup"
				PrmProject					is a Project
					default label is "Project"
				PrmProjectGroup				is a Project group
					default label is "-or-_ProjectGroup"
				PrmThroughDate				is Date
					default label is "SelectTransactionsThroughDate"
				PrmDateRange				is a DateRange
				PrmDateType					is Numeric size 1
					default label is "Date"
					States
						Transaction			value is 0
						Posting				value is 1
				PrmIncludeRepairs			is Boolean
					default label is "IncludeRepairs"
				PrmSummaryCode				is AlphaUpper size 30
					default label is "SummaryCode"
				PrmAssetInterfaceOptions	is like AssetInterfaceOptions
				PrmOverrideProject			is a Project
					default label is "OverrideProject"
				PrmToAccountingEntity		is a ToAccountingEntity
					default label is "<actor.context.FinanceEnterpriseGroup.AccountingEntityLabel>"	
				PrmAccountingUnit			is a AccountingUnit
					default label is "<actor.context.FinanceEnterpriseGroup.AccountingUnitLabel>"
				PrmGeneralLedgerChartAccount is a GeneralLedgerChartAccount
					default label is "<actor.context.FinanceEnterpriseGroup.AccountLabel>"		
				PrmFinanceDimension1		is a FinanceDimension1
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension1Label>"
				PrmFinanceDimension2		is a FinanceDimension2
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension2Label>"
				PrmFinanceDimension3		is a FinanceDimension3
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension3Label>"
				PrmFinanceDimension4		is a FinanceDimension4
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension4Label>"
				PrmFinanceDimension5		is a FinanceDimension5
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension5Label>"
				PrmFinanceDimension6		is a FinanceDimension6
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension6Label>"
				PrmFinanceDimension7		is a FinanceDimension7
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension7Label>"
				PrmFinanceDimension8		is a FinanceDimension8
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension8Label>"
				PrmFinanceDimension9		is a FinanceDimension9
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension9Label>"
				PrmFinanceDimension10		is a FinanceDimension10
					default label is "<actor.context.FinanceEnterpriseGroup.FinanceDimension10Label>"
				PrmTransactionDate          is Date
					default label is "TransactionDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
					LocalFEG	= PrmFinanceEnterpriseGroup
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					if (PrmCompany entered)
						constraint (PrmCompanyGroup not entered)
							"CannotEnterBothCompanyGroupAndCompany"
						LocalAssetCompany = PrmCompany
				PrmCompanyGroup
					if (PrmCompany not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					if (PrmCompanyGroup entered)
						constraint (PrmCompany not entered)
							"CannotEnterBothCompanyGroupAndCompany"
					LocalCompanyGroup = PrmCompanyGroup
				PrmProject
					if (PrmProjectGroup not entered)
						required
							"MustEnterEitherProjectOrProjectGroup"
					if (PrmProject entered)
						constraint (PrmProjectGroup not entered)
							"CannotEnterBothProjectGroupAndProject"
				PrmProjectGroup
					if (PrmProject not entered)
						required
							"MustEnterEitherProjectOrProjectGroup"
					if (PrmProjectGroup entered)
						constraint (PrmProject not entered)
							"CannotEnterBothProjectGroupAndProject"
						LocalProjectGroup = PrmProjectGroup
						constraint(SummaryProjectGroupRel not exists)
							"ProjectGroupUsedForCapitalizationCannotContainSummaryProject"
				PrmDateRange
					required

				PrmSummaryCode
					if (PrmFinanceEnterpriseGroup.FundAccounting)
						cannot be entered
							"SummaryCodeCannotBeAssignedWhenUsingFundAccounting"
					if (PrmOverrideProject entered)
						required
							"MustEnterSummaryCodeIfOverrideProjectIsEntered"

				PrmOverrideProject
					if (PrmProject entered
					and	PrmProject.ProjectType.Posting
					and PrmOverrideProject not entered
					and PrmSummaryCode entered)
						default to PrmProject
					if (PrmSummaryCode entered
					and	(PrmProject.ProjectType.Summary
					or	SummaryProjectGroupRel exists))
						required
							"MustEnterOverrideProjectIfSummaryCodeIsEnteredForSummaryLevelProject"
					constraint (PrmOverrideProject.ProjectType.Posting)
						"OverrideProjectMustBePostingTypeOnly"
					constraint (PrmOverrideProject.Capital)
						"MustBeACapital<actor.context.FinanceEnterpriseGroup.ProjectLabel>"
					constraint (PrmOverrideProject.ProjectStatus.AllowCapitalization)
						"<actor.context.FinanceEnterpriseGroup.ProjectLabel>StatusMustAllowCapitalization"


			Local Fields
  				RecordCount					is Numeric 8
  				LocalDraftRunGroup			is Numeric size 8
				BackgroundGroup				is AlphaUpper up to 60
				LocalAsyncId       			is a AsyncActionRequest
				LocalSummaryInGroup			is Boolean
				LocalErrorOccurred			is Boolean

			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and 	AssetIsElegible
				and    (AssetCompany = PrmCompany
				or 		CompanyGroupRel exists)
				and		Active
				and    (Project.Project = PrmProject
		 		or      Project.Project within PrmProjectGroup)
		 		and 	((Project.Project.Capital
				and 	Project.Project.ProjectStatus.AllowCapitalization)
				or		(SummaryType
				and		ProjectContractShadowSummaryRel exists))
				and    (PrmIncludeRepairs
				or 		 RepairAsset not entered)
				and    (PrmAssetInterfaceOptions not entered
				or		AssetInterfaceOptions = PrmAssetInterfaceOptions))

			Sort Order is ByProject

			Action Rules
				Set Rules
					Entrance Rules
						BackgroundGroup = "DraftProjectAssetInterface"





					Exit Rules
						invoke UpdateStatusOnResult first LocalAssetInterfaceOptionsRel.AssetInterfaceOptions in background
							run after background group(BackgroundGroup)
								invoked.PrmAction = 0






				Instance Rules
					initialize LocalErrorOccurred
					initialize ErrorMessage
					if(IsValidForPostWIPToProject)
						LocalCode = PrmSummaryCode
						invoke CheckSummaryCode
							resume on error
								LocalErrorOccurred	= true
								ErrorMessage		= error message

					if(!LocalErrorOccurred)
						LocalDateRange	 			= PrmDateRange
						LocalDateType				= PrmDateType
						LocalDraftRunGroup			= last ProjectAssetInterfaceRunGroupRel.RunGroup + 1
						if (UseOldCapitalization)
							if (PostingType)
								for each GeneralLedgerTransactionRel
									for each each.GLTransactionDetailExistsRel
										if (each.Capitalize.Unprocessed
										and each.Status.History
										and each.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
										and	(PrmToAccountingEntity not entered
										or	(PrmToAccountingEntity entered
										and each.GLTransactionDetail.FinanceCodeBlock.ToAccountingEntity = PrmToAccountingEntity))
										and	(PrmAccountingUnit not entered
										or (PrmAccountingUnit entered
										and each.GLTransactionDetail.FinanceCodeBlock.AccountingUnit = PrmAccountingUnit))
										and	(PrmGeneralLedgerChartAccount not entered
										or (PrmGeneralLedgerChartAccount entered
										and each.GLTransactionDetail.FinanceCodeBlock.GeneralLedgerChartAccount = PrmGeneralLedgerChartAccount))
										and	(PrmFinanceDimension1 not entered
										or	(PrmFinanceDimension1 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension1 = PrmFinanceDimension1))
										and	(PrmFinanceDimension2 not entered
										or	(PrmFinanceDimension2 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension2 = PrmFinanceDimension2))
										and	(PrmFinanceDimension3 not entered
										or	(PrmFinanceDimension3 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension3 = PrmFinanceDimension3))
										and	(PrmFinanceDimension4 not entered
										or	(PrmFinanceDimension4 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension4 = PrmFinanceDimension4))
										and	(PrmFinanceDimension5 not entered
										or	(PrmFinanceDimension5 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension5 = PrmFinanceDimension5))
										and	(PrmFinanceDimension6 not entered
										or	(PrmFinanceDimension6 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension6 = PrmFinanceDimension6))
										and	(PrmFinanceDimension7 not entered
										or	(PrmFinanceDimension7 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension7 = PrmFinanceDimension7))
										and	(PrmFinanceDimension8 not entered
										or	(PrmFinanceDimension8 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension8 = PrmFinanceDimension8))
										and	(PrmFinanceDimension9 not entered
										or	(PrmFinanceDimension9 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension9 = PrmFinanceDimension9))
										and	(PrmFinanceDimension10 not entered
										or	(PrmFinanceDimension10 entered
										and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension10 = PrmFinanceDimension10)))
											LocalGLTransactionDetail = each.GLTransactionDetail
											if (LocalGLTransactionDetail within TransactionQualifier
											or  TransactionQualifier not entered)


												invoke Create ProjectAssetInterface
													fill in fields from this instance
														except invoked.ErrorMessage
													if(AssetCompany.CopyUserFields)
														fill in user fields from GLTransactionDetailRel
													invoked.GLTransactionDetail = each.GLTransactionDetail
													invoked.AccountingEntity	= each.GLTransactionDetail.FinanceCodeBlock.ToAccountingEntity
													invoked.AccountingUnit		= each.GLTransactionDetail.FinanceCodeBlock.AccountingUnit
													if (PrmOverrideProject entered)
														invoked.Project			 = PrmOverrideProject
													else
														invoked.Project			= each.GLTransactionDetail.FinanceCodeBlock.Project
													invoked.FinanceDimension1	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension1
													invoked.FinanceDimension2	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension2
													invoked.FinanceDimension3	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension3
													invoked.FinanceDimension4	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension4
													invoked.FinanceDimension5	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension5
													invoked.FinanceDimension6	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension6
													invoked.FinanceDimension7	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension7
													invoked.FinanceDimension8	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension8
													invoked.FinanceDimension9	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension9
													invoked.FinanceDimension10	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension10

													invoked.RunGroup			= LocalDraftRunGroup
													if (PrmSummaryCode entered)
														invoked.SummaryCode		= PrmSummaryCode
							else
								if (SummaryType)
									for each SummaryGeneralLedgerTransactionRel
										for each each.GLTransactionDetailExistsRel
											if (each.Capitalize.Unprocessed
											and each.Status.History
											and each.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount entered
											and	(PrmToAccountingEntity not entered
											or	(PrmToAccountingEntity entered
											and each.GLTransactionDetail.FinanceCodeBlock.ToAccountingEntity = PrmToAccountingEntity))
											and	(PrmAccountingUnit not entered
											or (PrmAccountingUnit entered
											and each.GLTransactionDetail.FinanceCodeBlock.AccountingUnit = PrmAccountingUnit))
											and	(PrmGeneralLedgerChartAccount not entered
											or (PrmGeneralLedgerChartAccount entered
											and each.GLTransactionDetail.FinanceCodeBlock.GeneralLedgerChartAccount = PrmGeneralLedgerChartAccount))
											and	(PrmFinanceDimension1 not entered
											or	(PrmFinanceDimension1 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension1 = PrmFinanceDimension1))
											and	(PrmFinanceDimension2 not entered
											or	(PrmFinanceDimension2 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension2 = PrmFinanceDimension2))
											and	(PrmFinanceDimension3 not entered
											or	(PrmFinanceDimension3 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension3 = PrmFinanceDimension3))
											and	(PrmFinanceDimension4 not entered
											or	(PrmFinanceDimension4 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension4 = PrmFinanceDimension4))
											and	(PrmFinanceDimension5 not entered
											or	(PrmFinanceDimension5 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension5 = PrmFinanceDimension5))
											and	(PrmFinanceDimension6 not entered
											or	(PrmFinanceDimension6 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension6 = PrmFinanceDimension6))
											and	(PrmFinanceDimension7 not entered
											or	(PrmFinanceDimension7 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension7 = PrmFinanceDimension7))
											and	(PrmFinanceDimension8 not entered
											or	(PrmFinanceDimension8 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension8 = PrmFinanceDimension8))
											and	(PrmFinanceDimension9 not entered
											or	(PrmFinanceDimension9 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension9 = PrmFinanceDimension9))
											and	(PrmFinanceDimension10 not entered
											or	(PrmFinanceDimension10 entered
											and each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension10 = PrmFinanceDimension10)))
												LocalGLTransactionDetail = each.GLTransactionDetail
												if (LocalGLTransactionDetail within TransactionQualifier
												or  TransactionQualifier not entered)


													invoke Create ProjectAssetInterface
														fill in fields from this instance
															except invoked.ErrorMessage
														if(AssetCompany.CopyUserFields)
															fill in user fields from GLTransactionDetailRel
														invoked.GLTransactionDetail = each.GLTransactionDetail
														invoked.AccountingEntity	= each.GLTransactionDetail.FinanceCodeBlock.ToAccountingEntity
														invoked.AccountingUnit		= each.GLTransactionDetail.FinanceCodeBlock.AccountingUnit
														if (PrmOverrideProject entered)
															invoked.Project			= PrmOverrideProject
														else
															invoked.Project			= each.GLTransactionDetail.FinanceCodeBlock.Project
														invoked.FinanceDimension1	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension1
														invoked.FinanceDimension2	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension2
														invoked.FinanceDimension3	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension3
														invoked.FinanceDimension4	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension4
														invoked.FinanceDimension5	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension5
														invoked.FinanceDimension6	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension6
														invoked.FinanceDimension7	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension7
														invoked.FinanceDimension8	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension8
														invoked.FinanceDimension9	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension9
														invoked.FinanceDimension10	= each.GLTransactionDetail.FinanceCodeBlock.FinanceDimension10
														invoked.RunGroup			= LocalDraftRunGroup
														invoked.SummaryCode			= PrmSummaryCode
						else
							if ((PostingType
							and UnprocessedCapitalTransactionsRel exists)
							or (SummaryType
							and SummaryUnprocessedCapitalTransactionsRel exists))
								invoke DraftProjectAssetInterfaceSet AssetCapitalTransaction in background group(BackgroundGroup)


									invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.PrmAssetInterfaceOptions	= AssetInterfaceOptions
									invoked.PrmProject					= Project.Project
									invoked.PrmOverrideProject			= PrmOverrideProject
									invoked.PrmDateRange				= PrmDateRange
									invoked.PrmDateType					= PrmDateType
									invoked.PrmCapitalTransactionQualifier	= CapitalTransactionQualifier
									invoked.PrmSummaryCode				= PrmSummaryCode
									invoked.PrmDraftRunGroup			= LocalDraftRunGroup
									invoked.PrmToAccountingEntity		= PrmToAccountingEntity
									invoked.PrmAccountingUnit			= PrmAccountingUnit
									invoked.PrmGeneralLedgerChartAccount = PrmGeneralLedgerChartAccount
									invoked.PrmFinanceDimension1		= PrmFinanceDimension1
									invoked.PrmFinanceDimension2		= PrmFinanceDimension2
									invoked.PrmFinanceDimension3		= PrmFinanceDimension3
									invoked.PrmFinanceDimension4		= PrmFinanceDimension4
									invoked.PrmFinanceDimension5		= PrmFinanceDimension5
									invoked.PrmFinanceDimension6		= PrmFinanceDimension6
									invoked.PrmFinanceDimension7		= PrmFinanceDimension7
									invoked.PrmFinanceDimension8		= PrmFinanceDimension8
									invoked.PrmFinanceDimension9		= PrmFinanceDimension9
									invoked.PrmFinanceDimension10		= PrmFinanceDimension10
									invoked.PrmTransactionDate          = PrmTransactionDate

		ProjectCapitalizationInterface is an Instance Action
			valid when (ProjectAssetInterfaceWithWip)
			default label is "ProjectAssetInterface"	
			completion message is "ProjectAssetInterfaceSubmitted" 
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanaceEnterpriseGroup"
				PrmPostingDate				is Date
					default label is "PostingDate"
				PrmIncludeRepairs			is Boolean
					default label is "IncludeRepairs"
				PrmRepairDate				is Date
					default label is "RepairDate"
				PrmPurchaseDate             is Date
					default label is "PurchaseDate"
				PrmPostWIPToProject         is Boolean

			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is FinanceEnterpriseGroup
					default to FinanceEnterpriseGroup
					required

				PrmIncludeRepairs
					if (RepairAsset entered)
						default to true

				PrmRepairDate
					if (RepairAsset entered)
						required
						LocalRepairDate = PrmRepairDate
						if (SummaryType)
							include RepairValidateCurrency

				PrmPostingDate
					if (AssetTemplate entered
					and ProjectAssetInterfaceNoWip)
						required
						LocalAssetCompany	= AssetCompany
						LocalPostingDate	= PrmPostingDate
				   		constraint (PostingDateValid)
							"PostingDateIsOutsideClosingControlEntryDates"

				PrmPostWIPToProject
					initial value is true

			Action Rules
				if (PrmPostingDate not entered)
					PrmPostingDate						= current date
				invoke ProjectCapitalizationAndAssetInterface
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmCompany					= AssetCompany
					invoked.PrmProject					= Project.Project
					invoked.PrmPostingDate				= PrmPostingDate
					invoked.PrmIncludeRepairs			= PrmIncludeRepairs
					invoked.PrmRepairDate				= PrmRepairDate
					invoked.PrmAssetInterfaceOptions	= AssetInterfaceOptions
					invoked.PrmPostWIPToProject			= PrmPostWIPToProject
					invoked.PrmPurchaseDate             = PrmPurchaseDate

		ProjectCapitalizationInterfaceNoWip is an Instance Action
			default label is "ProjectAssetInterface"
			valid when (ProjectAssetInterfaceNoWip)
			completion message is "ProjectAssetInterfaceSubmitted"
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanaceEnterpriseGroup"
				PrmIncludeRepairs			is Boolean
					default label is "IncludeRepairs"
				PrmRepairDate				is Date
					default label is "RepairDate"
				PrmPurchaseDate             is Date
					default label is "PurchaseDate"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is FinanceEnterpriseGroup
					default to FinanceEnterpriseGroup
					required

				PrmIncludeRepairs
					if (RepairAsset entered)
						default to true

				PrmRepairDate
					if (RepairAsset entered)
						required
						LocalRepairDate = PrmRepairDate
						if (SummaryType)
							include RepairValidateCurrency


			Action Rules
				invoke ProjectCapitalizationAndAssetInterface
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmCompany					= AssetCompany
					invoked.PrmProject					= Project.Project
					invoked.PrmIncludeRepairs			= PrmIncludeRepairs
					invoked.PrmRepairDate				= PrmRepairDate
					invoked.PrmAssetInterfaceOptions	= AssetInterfaceOptions
					invoked.PrmPostingDateNotRequired	= true
					invoked.PrmPurchaseDate             = PrmPurchaseDate


		ProjectCapitalizationAndAssetInterface is a Set Action
			completion message is "ProjectAssetInterfaceComplete<RecordCount>DraftProjectInterfaceRecord(s)Processed"
			restricted

			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmCompany					is a Company
					default label is "Company"
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
					default label is "-or-_CompanyGroup"
				PrmProject					is a Project
					default label is "Project"
				PrmProjectGroup				is a Project group
					default label is "-or-_ProjectGroup"
				PrmPostingDateNotRequired	is Boolean
				PrmPostingDate				is Date
					default label is "PostingDate"
				PrmIncludeRepairs			is Boolean
					default label is "IncludeRepairs"
				PrmRepairDate				is Date
					default label is "RepairDate"
				PrmAssetInterfaceOptions	is an AssetInterfaceOptions
				PrmPurchaseDate             is Date
					default label is "PurchaseDate"
				PrmPostWIPToProject         is Boolean

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
					LocalFEG	= PrmFinanceEnterpriseGroup
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					if (PrmCompany entered)
						constraint (PrmCompanyGroup not entered)
							"CannotEnterBothCompanyGroupAndCompany"
						LocalAssetCompany = PrmCompany
				PrmCompanyGroup
					if (PrmCompany not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					if (PrmCompanyGroup entered)
						constraint (PrmCompany not entered)
							"CannotEnterBothCompanyGroupAndCompany"
					LocalCompanyGroup = PrmCompanyGroup
				PrmProject
					if (PrmProjectGroup not entered)
						required
							"MustEnterEitherProjectOrProjectGroup"
					if (PrmProject entered)
						constraint (PrmProjectGroup not entered)
							"CannotEnterBothProjectGroupAndProject"
				PrmProjectGroup
					if (PrmProject not entered)
						required
							"MustEnterEitherProjectOrProjectGroup"
					if (PrmProjectGroup entered)
						constraint (PrmProject not entered)
							"CannotEnterBothProjectGroupAndProject"
				PrmRepairDate
					if (PrmIncludeRepairs)
						required
					else
						cannot be entered
				PrmPostingDate
					if (PrmPostingDateNotRequired )
						initialize PrmPostingDate
					else 
						required
						LocalPostingDate	= PrmPostingDate
						constraint (PostingDateValid)
							"PostingDateIsOutsideClosingControlEntryDates"

				PrmPostWIPToProject
					initial value is true

			Local Fields
				WIPTransactionsRequired		is Boolean
				LocalJournalizeGroup		is like JournalizeGroup
				LocalSequenceNumber 		is like SequenceNumber
  				RecordCount					is Numeric 8
				LocalErrorOccurred			is Boolean
				LocalErrorMessage			is Alpha 200

			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and 	AssetIsElegible
				and    (AssetCompany = PrmCompany
				or 		CompanyGroupRel exists)
				and		Active
				and    (Project.Project = PrmProject
		 		or      Project.Project within PrmProjectGroup)
		 		and 	((Project.Project.Capital
				and 	Project.Project.ProjectStatus.AllowCapitalization)
				or		(SummaryType
				and		ProjectContractShadowSummaryRel exists))
				and    (PrmIncludeRepairs
				or 		 RepairAsset not entered)
				and 	(PrmAssetInterfaceOptions not entered
				or 		AssetInterfaceOptions = PrmAssetInterfaceOptions))

			Action Rules
				Set Rules
					Entrance Rules

					Exit Rules
						LocalJournalizeRunGroup	= LocalJournalizeGroup
						if (LocalJournalizeGroup entered)
							if (GLTransactionDetailForRunGroupRel exists)
								invoke InitiateJournalizeForRunGroup PrmFinanceEnterpriseGroup in background
									invoked.PrmJournalizeGroup				= LocalJournalizeGroup
									invoked.PrmJournalizeGroupDescription	= "ProjectAssetInterface"
						
						invoke UpdateStatusOnResult first LocalAssetInterfaceOptionsRel.AssetInterfaceOptions
							invoked.PrmAction	= 1

				Instance Rules
					initialize LocalErrorOccurred
					initialize LocalErrorMessage
					initialize ErrorMessage
					LocalRepairDate		= PrmRepairDate
					invoke EditUpdate
						resume on error
							LocalErrorOccurred	= true
							LocalErrorMessage	= error message
							ErrorMessage		= LocalErrorMessage
					if (!LocalErrorOccurred)
						LocalPostingDate			= PrmPostingDate
						LocalAppendToAsset			= AppendToAsset
						LocalRunGroup				= "Import" + "_" + AssetInterfaceOptions
						LocalSequenceNumber			= DerivedSeqNumber
						initialize LocalSummaryCode
						initialize LocalTransactionAmount
						initialize LocalTotalAmount
						initialize Counter
						initialize DraftImportTable
						if (CreateAssetClearingEntries
						and RepairAsset not entered
						and LocalJournalizeGroup not entered)
							WIPTransactionsRequired			= true
							increment GeneralLedgerSystemCodeRel.LastJournalizeGroup
							LocalJournalizeGroup			= GeneralLedgerSystemCodeRel.DerivedJournalizeGroup
							if(IsValidForPostWIPToProject)
								increment InterfaceSequenceNumber
								LocalInterfaceSequenceNumber = InterfaceSequenceNumber
						LocalPurchaseDate = PrmPurchaseDate
						for each DraftInterfaceRecordsRel
							if (UseUpgradedCapitalization)
								LocalAccountingEntity    	= each.AssetCapitalTransaction.AccountingEntity
							else
								LocalAccountingEntity    	= each.GLTransactionDetail.AccountingEntity
							LocalDraftSeqNumber			= each.SequenceNumber
							initialize LocalErrorOccurred
							initialize LocalErrorMessage
							initialize LocalInvoiceCompany
							initialize LocalVendor
							initialize LocalInvoice
							initialize LocalInvoiceDistribution
							initialize LocalPurchaseOrder
							initialize LocalLineNumber
							initialize LocalDistributionCodeBlock
							initialize LocalGLTransactionDetail
							initialize LocalAssetCapitalTransaction

							if (each.SummaryCode not entered)
								LocalProject					= each.Project
								LocalGLTransactionDetail		= each.GLTransactionDetail
								LocalAssetCapitalTransaction	= each.AssetCapitalTransaction
								if(PurchaseDate entered)
									LocalPurchaseDate = PurchaseDate
								else
								if(PrmPurchaseDate entered)
									LocalPurchaseDate = PrmPurchaseDate
								else
									LocalTransactionDate = each.TransactionDate
									
								if (UseUpgradedCapitalization)
									LocalProjectCurrency			= each.AssetCapitalTransaction.FinanceCodeBlock.Project.Currency
									LocalFromAmount					= each.AssetCapitalTransaction.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
									LocalInvoice					= each.AssetCapitalTransaction.DerivedAPPayablesInvoice
									LocalDistributionCodeBlock 		= each.AssetCapitalTransaction.FinanceCodeBlock
									if (each.AssetCapitalTransaction.System = "AP")
										LocalInvoiceCompany       	= each.AssetCapitalTransaction.DerivedCompany
										if (LocalInvoiceCompany entered
										and each.AssetCapitalTransaction.DerivedVendorOnly entered
										and each.AssetCapitalTransaction.DerivedAPPayablesInvoice entered)
											LocalVendor				= each.AssetCapitalTransaction.DerivedVendorOnly
											LocalInvoice			= each.AssetCapitalTransaction.DerivedAPPayablesInvoice
											LocalInvoiceDistribution = each.AssetCapitalTransaction.OriginatingTransaction(PayablesInvoiceDistribution).PayablesInvoiceDistribution
										if (LocalInvoiceCompany entered)
											LocalPurchaseOrder		= each.AssetCapitalTransaction.DerivedAPPurchOrder
											LocalLineNumber			= each.AssetCapitalTransaction.DerivedPOLine
								else
									LocalProjectCurrency			= each.GLTransactionDetail.FinanceCodeBlock.Project.Currency
									LocalFromAmount					= each.GLTransactionDetail.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
									LocalInvoice					= each.GLTransactionDetail.DerivedAPPayablesInvoice
									LocalDistributionCodeBlock 		= each.GLTransactionDetail.FinanceCodeBlock
									if (each.GLTransactionDetail.System = "AP")
										LocalInvoiceCompany       	= each.GLTransactionDetail.DerivedCompany
										if (LocalInvoiceCompany entered
										and each.GLTransactionDetail.DerivedVendorOnly entered
										and each.GLTransactionDetail.DerivedAPPayablesInvoice entered)
											LocalVendor				= each.GLTransactionDetail.DerivedVendorOnly
											LocalInvoice			= each.GLTransactionDetail.DerivedAPPayablesInvoice
											LocalInvoiceDistribution = each.GLTransactionDetail.OriginatingTransaction(PayablesInvoiceDistribution).PayablesInvoiceDistribution
										if (LocalInvoiceCompany entered)
											LocalPurchaseOrder		= each.GLTransactionDetail.DerivedAPPurchOrder
											LocalLineNumber			= each.GLTransactionDetail.DerivedPOLine
								if (PostingType
								or (AssetCurrency = LocalProjectCurrency))
									LocalTransactionAmount 		= LocalFromAmount
								else
									LocalTransactionAmount		= DerivedTransactionAmount
								LastCounter 					= Counter
								include CreateInterfaceRecords
								invoke UpdateNoRules each
									if (LocalErrorOccurred)
										invoked.ErrorMessage = LocalErrorMessage
									else
										invoked.Status 			= 1
										invoked.InterfaceRecord = LocalObjectReference
										invoked.ErrorMessage 	= blank


								initialize LocalTransactionAmount
							else
								LocalDraftSequenceNumber = each.SequenceNumber
								if (LocalSummaryCode not entered)
									LocalSummaryCode 	= each.SummaryCode
									LocalProject		= each.Project
									if(PurchaseDate entered)
										LocalPurchaseDate = PurchaseDate
									else
									if(PrmPurchaseDate entered)
										LocalPurchaseDate = PrmPurchaseDate
									else
										LocalTransactionDate = each.TransactionDate

								if (each.SummaryCode = LocalSummaryCode
								and each.Project = LocalProject
								and (LocalPurchaseDate entered
								or each.TransactionDate = LocalTransactionDate))	
									if(each.SummaryCode = LocalCode)								
										initialize LocalDraftSeqNumber
									LocalCode		     	    = LocalSummaryCode
									if (UseUpgradedCapitalization)
										LocalFromAmount				= each.AssetCapitalTransaction.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
										LocalProjectCurrency		= each.AssetCapitalTransaction.FinanceCodeBlock.Project.Currency
									else
										LocalFromAmount				= each.GLTransactionDetail.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
										LocalProjectCurrency		= each.GLTransactionDetail.FinanceCodeBlock.Project.Currency
									if (PostingType
									or (AssetCurrency = LocalProjectCurrency))
										LocalTransactionAmount 		+= LocalFromAmount
									else
										LocalTransactionAmount		+= DerivedTransactionAmount
									if (LocalPurchaseDate entered)
										if(!NextDraftInterfaceBySummaryCodeRel exists)
											include CreateInterfaceRecords
									else 
										if (!NextDraftInterfaceBySummaryCodeCapitalRel exists)
											include CreateInterfaceRecords
								else
									LocalSummaryCode       	= each.SummaryCode
									LocalCode		        = LocalSummaryCode
									LocalProject		  	= each.Project
									LocalDraftSequenceNumber = each.SequenceNumber	
									if (PurchaseDate entered)
										LocalPurchaseDate = PurchaseDate
									else
									if(PrmPurchaseDate entered)
										LocalPurchaseDate = PrmPurchaseDate
									else
										LocalTransactionDate = each.TransactionDate
									if (UseUpgradedCapitalization)
										LocalProjectCurrency	= each.AssetCapitalTransaction.FinanceCodeBlock.Project.Currency
										LocalFromAmount			= each.AssetCapitalTransaction.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
									else
										LocalProjectCurrency	= each.GLTransactionDetail.FinanceCodeBlock.Project.Currency
										LocalFromAmount			= each.GLTransactionDetail.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
									if (PostingType
									or (AssetCurrency = LocalProjectCurrency))
										LocalTransactionAmount 		= LocalFromAmount
									else
										LocalTransactionAmount		= DerivedTransactionAmount
									if (LocalPurchaseDate entered)
										if(!NextDraftInterfaceBySummaryCodeRel exists)
											include CreateInterfaceRecords
									else 
										if (!NextDraftInterfaceBySummaryCodeCapitalRel exists)
											include CreateInterfaceRecords
							RecordCount += 1
						if (LocalTotalAmount entered
						and !FundAccounting)
							if(CreateAssetClearingEntries)
								if (WorkInProcessAccount entered)
									constraint (LocalPostingDate entered)
										"WIPAndClearingTransactionsRequireThePostingDateToBeProvided"

									invoke Released.Create GLTransactionDetail
										invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
										invoked.AccountingEntity		= LocalAccountingEntity
										invoked.System					= "AM"
										invoked.GeneralLedgerEvent		= "CP"
										invoked.Reference				= "ProjectAssetWorkInProcess"
										invoked.Capitalize				= 1
										invoked.Billed					= blank
										invoked.RevenueRecognized		= blank
										invoked.JournalizeGroup			= LocalJournalizeGroup
										invoked.PostingDate				= LocalPostingDate
										invoked.FinanceCodeBlock		= WorkInProcessAccount
										if (PurchaseDate entered)
											invoked.TransactionDate			= PurchaseDate
										else
											invoked.TransactionDate			= LocalPostingDate
										invoked.TransactionAmount		= (LocalTotalAmount * -1)
										if (PostingType)
											invoked.CurrencyCode		= LocalProject.Currency
										else
										if (SummaryType)
											invoked.CurrencyCode		= AssetCurrency
										invoked.BypassActiveCodeBlockEdit	= true
								invoke Released.Create GLTransactionDetail
									invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.AccountingEntity		= LocalAccountingEntity
									invoked.System					= "AM"
									invoked.GeneralLedgerEvent		= "CP"
									invoked.Reference				= "ProjectAssetClearing"
									invoked.Capitalize				= 1
									invoked.Billed					= blank
									invoked.RevenueRecognized		= blank
									invoked.JournalizeGroup			= LocalJournalizeGroup
									invoked.PostingDate				= LocalPostingDate
									invoked.FinanceCodeBlock		= AssetClearingAccount
									if (PurchaseDate entered)
										invoked.TransactionDate			= PurchaseDate
									else
										invoked.TransactionDate			= LocalPostingDate
									invoked.TransactionAmount		= LocalTotalAmount
									if (PostingType)
										invoked.CurrencyCode		= LocalProject.Currency
									else
									if (SummaryType)
										invoked.CurrencyCode		= AssetCurrency
									invoked.BypassActiveCodeBlockEdit	= true


						if (FundAccounting)
							if (AssetTemplate entered
							or  AddToBasis)
								if ((AppendOption
								and AppendToAsset not entered)
								or AppendOption not entered 
								or AssetCompany.InterfacePath.AssetInterface)
									invoke BuildInterfaceFundRecords UnallocatedFundInterfacesRel	
										invoked.PrmAccountingEntity	= LocalAccountingEntity
										if (PostingType)
											invoked.PrmProjectCurrency	= LocalProject.Currency
										else
										if (SummaryType)
											invoked.PrmProjectCurrency	= AssetCurrency
										invoked.PrmJournalizeGroup	= LocalJournalizeGroup
										invoked.PrmPostingDate		= LocalPostingDate
										invoked.PrmPostWIPToProject	= PrmPostWIPToProject
								if (AppendOption
									and AppendToAsset entered
									and AssetCompany.InterfacePath.ItemAdjustmentInterface)
									invoke BuildInterfaceFundRecords UnallocatedItemInterfacesRel  
										invoked.PrmAccountingEntity	= LocalAccountingEntity
										if (PostingType)
											invoked.PrmProjectCurrency	= LocalProject.Currency
										else
										if (SummaryType)
											invoked.PrmProjectCurrency	= AssetCurrency
										invoked.PrmJournalizeGroup	= LocalJournalizeGroup
										invoked.PrmPostingDate		= LocalPostingDate
										invoked.PrmPostWIPToProject	= PrmPostWIPToProject

		AssetInterfaceAppend is a Set Action
			completion message is "AppendComplete__<RecordCount>Record(s)Processed"
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmAppendToAsset			is an Asset
					default label is "AppendToAsset"	
				PrmCompany					is a Company
					default label is "Company"
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
					default label is "-or-_CompanyGroup"
				PrmProject					is a Project
					default label is "Project"
				PrmProjectGroup				is a Project group
					default label is "-or-_ProjectGroup"
				PrmAssetInterfaceOptions	is an AssetInterfaceOptions	
					default label is "AssetInterfaceOptions"
				PrmCombine					is a Combine	
					default label is "CombineCode"
				PrmAdjustmentDate			is Date	
					default label is "AdjustmentDate"
				PrmAssetItem                is an AssetItem
				PrmAddToItemQuantity        is Boolean
				PrmAddToBasis               is Boolean
				Compute                     is AlphaUpper size 1
					States
						No  value is "N"
						Yes value is "Y"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is actor.context.FinanceEnterpriseGroup
					required						
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					if (PrmCompany entered)
						constraint (PrmCompanyGroup not entered)
							"CannotEnterBothCompanyGroupAndCompany"
						LocalAssetCompany = PrmCompany
				PrmCompanyGroup
					LocalCompanyGroup = PrmCompanyGroup
				PrmProject
					if (PrmProjectGroup not entered)
						required
							"MustEnterEitherProjectOrProjectGroup"
					if (PrmProject entered)
						constraint (PrmProjectGroup not entered)
							"CannotEnterBothProjectGroupAndProject"
				PrmProjectGroup
					LocalProjectGroup = PrmProjectGroup
				
				PrmAppendToAsset
					LocalCompanyGroup = PrmCompanyGroup
					constraint (PrmCompanyGroup not entered or instance count of CompanyGroupMembersRel <= 1 )
						"AppendToAssetIsNotValidWithTheCompanyGroup"

					constraint (!PrmAppendToAsset.Status.Disposed)
						"CannotAddItemToDisposedAsset"
					constraint (PrmAppendToAsset.FundOverride = blank)
						"AppendToAssetCannotHaveTheFundOverrideOptionSelected"
						
				PrmAddToItemQuantity
					constraint(PrmAssetItem entered)
						"AppendToAssetItemIsRequiredWhenAddToItemQuantityIsSelected"
				PrmAddToBasis
					constraint(PrmAppendToAsset entered)
						"AppendToAssetIsRequiredWhenAddToBasisIsSelected"

				Compute
					constraint(PrmAppendToAsset entered)
						"AppendToAssetIsRequiredWhenComputeIsSelected"

					constraint(PrmAddToBasis)
						"AddToBasisIsRequiredWhenComputeIsSelected"

				PrmAdjustmentDate
					if(PrmAdjustmentDate not entered)
						required	
							"AdjustmentDateIsRequired"


			Local Fields
				WIPTransactionsRequired		is Boolean
				LocalJournalizeGroup		is like JournalizeGroup
				LocalSequenceNumber 		is like SequenceNumber
  				RecordCount					is Numeric 8
				LocalAction                 is Alpha size 20

			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    (AssetTemplate entered)
				and    (AssetCompany 	= PrmCompany
				or 		CompanyGroupRel exists)
				and		Active
				and 	AppendOption
				and    (Project.Project = PrmProject
		 		or      Project.Project within PrmProjectGroup)
		 		and 	((Project.Project.Capital
				and 	Project.Project.ProjectStatus.AllowCapitalization)
				or		(SummaryType
				and		ProjectContractShadowSummaryRel exists))
				and 	(PrmAssetInterfaceOptions not entered
				or 		AssetInterfaceOptions = PrmAssetInterfaceOptions))

			Sort Order
				FinanceEnterpriseGroup
				AppendToAsset
				AssetInterfaceOptions

			Action Rules
				Set Rules
					Entrance Rules

					Exit Rules
				AppendToAsset Set Rules
					Entrance Rules
						if(PrmAppendToAsset not entered)
							initialize LocalAction

				Instance Rules
					LocalAdjustmentDate				= PrmAdjustmentDate
					LocalCombine 					= PrmCombine
					if (PrmAppendToAsset entered)
						LocalAppendToAsset			= PrmAppendToAsset
						LocalAssetItem              = PrmAssetItem
						LocalProgram                = PrmAddToBasis
					else 
						LocalAppendToAsset			= AppendToAsset	
						LocalAssetItem              = AppendToAssetItem
						LocalProgram                = AddToBasis
						                  
						
						
					if (LocalAppendToAsset entered)
						if (LocalAppendToAsset.Status.Released
						or LocalAction = "AssetAppend")
							for each SelectedAssetInterfacesRel
								invoke AppendToReleasedAsset each
									invoked.PrmFromAppendSetAction 	= true
									invoked.PrmAppendToAsset 		= LocalAppendToAsset
									invoked.PrmAdjustmentDate 		= LocalAdjustmentDate
									invoked.PrmCombine				= LocalCombine	
									invoked.PrmAssetItem            = LocalAssetItem
									invoked.PrmAddToItemQuantity    = AddToItemQuantity
									invoked.PrmLocalProgram			= LocalProgram
									invoked.PrmCompute              = ComputeDepreciation
									if (PrmAssetItem entered)
										invoked.PrmAddToItemQuantity = PrmAddToItemQuantity	
																		
									if (PrmAppendToAsset entered)
										if (Compute="Y")
											invoked.PrmCompute = true
										else
											invoked.PrmCompute = false
								RecordCount += 1
							LocalAction = "AssetAppend"
								
						else 
							if (LocalAppendToAsset.Status.Unreleased)
								for each SelectedAssetInterfacesRel
									invoke AppendToUnreleasedAsset each	
										invoked.PrmFromAppendSetAction = true
										invoked.PrmAppendToAsset 	   = LocalAppendToAsset
										invoked.PrmCombine			   = LocalCombine	
										invoked.PrmAssetItem           = LocalAssetItem
										invoked.PrmAddToItemQuantity   = AddToItemQuantity
										invoked.PrmLocalProgram        = LocalProgram
										invoked.PrmCompute             = ComputeDepreciation
										if (PrmAssetItem entered)
											invoked.PrmAddToItemQuantity = PrmAddToItemQuantity

										if (PrmAppendToAsset entered)
											if (Compute="Y")
												invoked.PrmCompute = true
											else
												invoked.PrmCompute = false
									RecordCount += 1


		ProjectCapitalizationUpgrade is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is actor.context.FinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
					constraint (!PrmFinanceEnterpriseGroup.JournalNeedsFix)
						"JournalPostIsInProcess,PleaseWaitUntilPostComplete"
					confirmation required
						"ThisUpgradeProcessCauseTheAssetCapitalizationProcessToBeDrivenByNewBusinessClassAssetCapitalTransaction.ThisWillReplaceTheUseOfGLTransactionDetailBusinessClassImprovingThePerformanceOfThisProcess"

			Local Fields
				LocalAsyncId		is a AsyncActionRequest
			Instance Selection
				where (false)
			Action Rules
				Empty Set Rules
					invoke UpdateCapitalizationProgress PrmFinanceEnterpriseGroup in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmCapitalizationUpgradeProgress	= 1

					invoke CopyTransactionQualifier in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup

					invoke CreateAssetCapitalTransactions GLTransactionDetail in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup

					invoke UpdateCapitalizationProgress PrmFinanceEnterpriseGroup in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmCapitalizationUpgradeProgress	= 2

		CopyTransactionQualifier is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
			Instance Selection
				where (CapitalTransactionQualifier 	= blank
				and FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
			Action Rules
				Instance Rules
					if (BusinessClassGroupRel not exists)
						invoke Create BusinessClassGroup
							fill in fields from TransactionQualifier
								except invoked.BusinessClass
								except invoked.BusinessClassGroup
							invoked.BusinessClass         = "AssetCapitalTransaction"
							invoked.BusinessClassGroup    = TransactionQualifier
					CapitalTransactionQualifier	= TransactionQualifier

		UpdateStatusOnResult is an Instance Action
			restricted
			Parameters
				PrmAction					is Numeric 1
					States
						DraftProjectAssetInterface	value is 0
						ProjectAssetInterface 		value is 1
			Local Fields
				LocalActor			is Actor
			Action Rules
				LocalActor = actor
				send notification
					to LocalActor
					description is "<PrmAction>HasCompleted"
					priority is high
					detail is "ResultsAreAvailableInProjectInterfaceControl"

		ClearError is an Instance Action
			valid when (ErrorMessage entered)
			Action Rules
				initialize ErrorMessage

