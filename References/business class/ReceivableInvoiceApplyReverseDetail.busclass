ReceivableInvoiceApplyReverseDetail is a BusinessClass
    owned by ar
    prefix is VTD
    sql name is RInvoiceApplyReverseDetail
    classic name is ARTRNRVDTL

    Ontology
        symbolic key is ReceivableInvoiceApplyReverseDetail
            classic set name is VTDSET1
            sql name is RInvoiceApplyReverseDetail
            classic name is APP-SEQ
            classic name for ReceivableInvoiceDetail.ReceivableInvoiceDetailType is TRANS-TYPE

    Patterns
        implements StaticJava
        disable AuditIndex
		implements Archivable

    Persistent Fields

        CreditCompany             is a GeneralLedgerCompany
            classic name is CR-COMPANY
        CreditBatchNumber         is a CrBatchNbr
            classic name is CR-BATCH-NBR
        CreditTransactionType     is AlphaUpper size 1
            classic name is CR-TRANS-TYPE
        CreditTransactionNumber   is a CrTransNbr
            classic name is CR-TRANS-NBR
        CreditInvoice             is like ReceivableInvoice
            classic name is CR-INVOICE
        CreditPaymentSequence     is a CrPaymentSeq
            classic name is CR-PAYMENT-SEQ
        CreditApplicationSequence is a CrAppSeq
            classic name is CR-APP-SEQ
        BatchNumber
            classic name is BATCH-NBR

    Local Fields
		LocalInvoice							is like Invoice
		LocalInvoiceType						is like ReceivableInvoiceDetailType
		LocalUpdateRecords						is AlphaUpper size 1
		LocalReceivablesJobResult				is like ReceivablesJobResult
		LocalFinanceEnterpriseGroup				is like FinanceEnterpriseGroup
		LocalGeneralLedgerCompanyGroup			is a GeneralLedgerCompanyGroup

	Conditions
		IsReceivableInvoiceApplyReverseHeader
			restricted
			when (ReceivableInvoiceApplyReverseHeaderRel exists or ReceivableInvoiceApplyReverseHeaderCMRel exists)
			
		IsReceivablePayment
			restricted
			when (ReceivablePaymentRel exists)
		
		IsReceivableInvoiceDetail
			restricted
			when (ReceivableInvoiceDetailRel exists)
			
		IsReceivableApplication
			restricted
			when (ReceivableApplicationRel exists)

    Relations
        ReceivableInvoiceApplyReverseHeaderGenRel
            classic name is ARTRNRVHDR
            one-to-one relation to ReceivableInvoiceApplyReverseHeader
            required
            Field Mapping uses symbolic key
                related.Company                                                                                 = Company
                related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType = ReceivableInvoiceDetail.ReceivableInvoiceDetailType
                related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice                     = ReceivableInvoiceDetail.Invoice
                related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq                  = ReceivableInvoiceDetail.PaymentSeq

    	ReceivableInvoiceApplyReverseHeaderRel
    		classic name is ARTRNRVHDR
            one-to-one relation to ReceivableInvoiceApplyReverseHeader
            Field Mapping uses symbolic key
            	related.Company 																					= Company
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType 	= ReceivableInvoiceDetail.ReceivableInvoiceDetailType
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice 						= ReceivableInvoiceDetail.Invoice
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq 						= ReceivableInvoiceDetail.PaymentSeq
		
		
		ReceivableInvoiceApplyReverseHeaderCMRel		
			one-to-one relation to ReceivableInvoiceApplyReverseHeader
            Field Mapping uses symbolic key
           		related.Company 																					= Company
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType 	= CreditTransactionType
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice 						= CreditTransactionNumber
            	related.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq 						= CreditPaymentSequence
				
				
        ReceivablePaymentRel
            classic name is ARPAYMENT
            one-to-one relation to ReceivablePayment
            Field Mapping uses symbolic key
                related.Company 				= CreditCompany
                related.ReceivablePaymentHeader = CreditBatchNumber
                related.ReceivablePayment       = CreditPaymentSequence

        ReceivableInvoiceDetailRel
            classic name is AROITEMS
            one-to-one relation to ReceivableInvoiceDetail
            required
            Field Mapping uses symbolic key
                related.Company                									 = Company
                related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType   	 = ReceivableInvoiceDetail.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
                related.ReceivableInvoiceDetail.Invoice       		 			 = ReceivableInvoiceDetail.ReceivableInvoiceDetail.Invoice
                related.ReceivableInvoiceDetail.PaymentSeq		 		 		 = ReceivableInvoiceDetail.ReceivableInvoiceDetail.PaymentSeq	

		ReceivableApplicationRel
            classic name is ARAPPLIED
            one-to-many relation to ReceivableApplication
            Field Mapping uses SequenceDescending
                related.Company 			                      = Company
                related.ReceivableApplication.TransType           = ReceivableInvoiceDetail.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
                related.ReceivableApplication.Invoice             = ReceivableInvoiceDetail.ReceivableInvoiceDetail.Invoice
                related.ReceivableApplication.PaymentSeq          = ReceivableInvoiceDetail.ReceivableInvoiceDetail.PaymentSeq
		
		ReceivableApplicationCMRel
            classic name is ARAPPLIED
            one-to-one relation to ReceivableApplication
            Field Mapping uses SequenceDescending
                related.Company 			                    	= CreditCompany
                related.ReceivableApplication.TransType          	= CreditTransactionType
                related.ReceivableApplication.Invoice             	= CreditInvoice
                related.ReceivableApplication.PaymentSeq         	= CreditPaymentSequence
				related.ReceivableApplication.BatchNumber 			= CreditBatchNumber
				related.ReceivableApplication.ApplicationSequence 	= CreditApplicationSequence
				
		CreditBatchNumberRel
            one-to-one relation to ReceivableApplication
            Field Mapping uses SequenceDescending
                related.Company 			                        = Company
                related.ReceivableApplication.TransType             = ReceivableInvoiceDetail.ReceivableInvoiceDetailType
                related.ReceivableApplication.Invoice               = ReceivableInvoiceDetail.Invoice
                related.ReceivableApplication.PaymentSeq            = ReceivableInvoiceDetail.PaymentSeq
		        related.ReceivableApplication.BatchNumber 			= BatchNumber
		        related.ReceivableApplication.ApplicationSequence 	= ReceivableInvoiceApplyReverseDetail

		ReceivableApplicationInvoiceRel
            one-to-one relation to ReceivableApplication
            Field Mapping uses symbolic key
                related.Company 			                        = Company
                related.ReceivableApplication.TransType             = ReceivableInvoiceDetail.ReceivableInvoiceDetailType
                related.ReceivableApplication.Invoice               = ReceivableInvoiceDetail.Invoice
                related.ReceivableApplication.PaymentSeq            = ReceivableInvoiceDetail.PaymentSeq
		        related.ReceivableApplication.BatchNumber 			= BatchNumber
		        related.ReceivableApplication.ApplicationSequence 	= ReceivableInvoiceApplyReverseDetail

		ReceivableApplicationCreditRel
            one-to-one relation to ReceivableApplication
            Field Mapping uses symbolic key
                related.Company 			                    	= CreditCompany
                related.ReceivableApplication.TransType          	= CreditTransactionType
                related.ReceivableApplication.Invoice             	= CreditInvoice
                related.ReceivableApplication.PaymentSeq         	= CreditPaymentSequence
				related.ReceivableApplication.BatchNumber 			= CreditBatchNumber
				related.ReceivableApplication.ApplicationSequence 	= CreditApplicationSequence

		GeneralLedgerCompanyGroupRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= LocalGeneralLedgerCompanyGroup
				related.Company						= Company

		ReceivablesJobErrorResultRel
			one-to-many relation to ReceivablesJobErrorResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup								= LocalFinanceEnterpriseGroup
				related.ReceivablesJobResult		 						= LocalReceivablesJobResult
			Instance Selection
				where (related.ReceivableApplication.Company		 		= Company
				and    related.ReceivableApplication.TransType 				= ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and    related.ReceivableApplication.Invoice 				= ReceivableInvoiceDetail.Invoice
				and    related.ReceivableApplication.PaymentSeq 			= ReceivableInvoiceDetail.PaymentSeq)

		ReceivableInvoiceApplyReverseDetailRel
			one-to-many relation to ReceivableInvoiceApplyReverseDetail
			Field Mapping uses symbolic key
				related.Company													= Company
            	related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType 	= ReceivableInvoiceDetail.ReceivableInvoiceDetailType
            	related.ReceivableInvoiceDetail.Invoice 						= ReceivableInvoiceDetail.Invoice
            	related.ReceivableInvoiceDetail.PaymentSeq 						= ReceivableInvoiceDetail.PaymentSeq

		CompanySystemClosingControlRel
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode	 = "AR"
				related.Company					 = Company

		ReceivablesJobResultRel
			one-to-one relation to ReceivablesJobResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				related.ReceivablesJobResult	= LocalReceivablesJobResult

    Sets
        Set2
            indexed
            Sort Order
                CreditCompany
                CreditBatchNumber
                CreditTransactionType
                CreditTransactionNumber
                CreditInvoice
                CreditPaymentSequence
                CreditApplicationSequence
                Company
                ReceivableInvoiceDetail
                ReceivableInvoiceApplyReverseDetail
	
	Rule Blocks
		CommonEdits
			constraint (!CreditBatchNumberRel.ReceivablePaymentApplyReverseHeaderRel exists or ReceivableApplicationCMRel.ReceivablePaymentApplyReverseHeaderRel exists)
				"PaymentReversalHeaderAlreadyExistsForThisApplication"

		ReverseApplication
			if (CreditBatchNumberRel exists
			and ReceivableApplicationCMRel exists)
				invoke ApplicationPosted.Reverse CreditBatchNumberRel
					if (initiating action = "ReverseInvoice")
						invoked.PrmReceivablesJobResult 	= LocalReceivablesJobResult
						invoked.PrmUpdateRecords 			= LocalUpdateRecords
						invoked.PrmReversalSource			= "TR"
			else
			if (CreditBatchNumberRel exists)
				invoke ApplicationPosted.Reverse CreditBatchNumberRel
					if (initiating action = "ReverseInvoice")
						invoked.PrmReceivablesJobResult 	= LocalReceivablesJobResult
						invoked.PrmUpdateRecords 			= LocalUpdateRecords
						invoked.PrmReversalSource			= "TR"
			else
				invoke ApplicationPosted.Reverse ReceivableApplicationCMRel
					if (initiating action = "ReverseInvoice")
						invoked.PrmReceivablesJobResult 	= LocalReceivablesJobResult
						invoked.PrmUpdateRecords 			= LocalUpdateRecords
						invoked.PrmReversalSource			= "TR"

		ProcessReverseInvoiceDetail
			include ReverseApplication
			if  ((CreditTransactionType != "I"
			or    CreditTransactionType != "D")
			and  ReceivableInvoiceDetailRel.OpenAmount entered
			and  ReceivableInvoiceDetailRel.BankTransactionCode.BankTransactionType.CashPayment
			and  ReceivableInvoiceDetailRel.BankTransactionCode.TransactionOrigin.Receivable)
				invoke EFTUpdate ReceivableInvoiceDetailRel
					invoked.EftAction		= blank
					invoked.EftExtract		= 0
					invoked.EFTNotification	= 0


				invoke Delete ReceivableInvoiceDetailRel.ReverseDeletionFundsTransferRel

			if (initiating action = "ReverseInvoice")
				if (instance count of ReceivableInvoiceApplyReverseDetailRel != 1)
					invoke Delete
				else
					if (ReceivablesJobErrorResultRel not exists)
						invoke Delete ReceivableInvoiceApplyReverseHeaderGenRel
			else
				invoke Delete

    Actions
        Create is a Create Action
        	Action Rules
				include CommonEdits
				if (IsReceivablePayment)
					constraint (ReceivablePaymentRel.TransactionAmount entered)
						"MustReverseZeroPaymentAmountApplicationsInThePaymentReversalProcess"

        Update is an Update Action
        	Action Rules
				include CommonEdits

        Delete is a Delete Action
        
        Purge is a Purge Action
        	restricted
        
        Reverse is an Instance Action
        	restricted
        	Action Rules
        		constraint (ReceivableInvoiceApplyReverseHeaderRel exists or ReceivableInvoiceApplyReverseHeaderCMRel exists)
        			"ReversalHeaderRecordDoesNotExist"

				constraint (ReceivableApplicationRel exists or ReceivableApplicationCMRel exists)
					"ApplicationDoesNotExist"
	
				include ProcessReverseInvoiceDetail

        ReverseInvoice is a Set Action	
        	restricted
            Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmCompanyGroup				is a GeneralLedgerCompanyGroup
				PrmCompany					is a Company
				PrmReceivablesJobResult	    is a ReceivablesJobResult
				PrmIsCreate 				is Boolean
				PrmUpdateRecords			is AlphaUpper size 1
					States
						No		value is "N"
						Yes		value is "Y"

			Parameter Rules
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"CompanyOrGlobalLedgerCompanyGroupRequired"
				
				PrmCompanyGroup
					if (PrmCompany entered)
						cannot be entered
							"CannotEnterGlobalLedgerCompanyGroupIfCompanyEntered"
					LocalGeneralLedgerCompanyGroup = PrmCompanyGroup
				      		
			Instance Selection
				where ((PrmCompanyGroup not entered
				or	  GeneralLedgerCompanyGroupRel exists)
				and	  (PrmCompany not entered
				or	  Company = PrmCompany))

			Sort Order is Set2

			Local Fields
				LocalErrorOccured							is Boolean
				LocalReceivablesJobResultView				is a ReceivablesJobResult view

			Action Rules
				Empty Set Rules
					if (!PrmIsCreate)
						invoke Create ReceivablesJobResult
							assign result to LocalReceivablesJobResultView
							invoked.FinanceEnterpriseGroup			= actor.context.FinanceEnterpriseGroup
							invoked.PrmCompanyGroup					= PrmCompanyGroup
							invoked.PrmCompany						= PrmCompany
							invoked.RunTime							= current timestamp
							invoked.JobType							= 2

						invoke UpdateStatusOnResult LocalReceivablesJobResultView.ReceivablesJobResult
							initialize invoked.PrmRecordsExists
					else
						LocalReceivablesJobResult 		= PrmReceivablesJobResult
						LocalFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
						if (!ReceivablesJobResultRel.RecordsExist)
							invoke FastUpdate ReceivablesJobResultRel
								invoked.PrmRecordsExist = false

				Set Rules
					Entrance Rules
						if (!PrmIsCreate)
							invoke Create ReceivablesJobResult
								assign result to LocalReceivablesJobResultView
								invoked.FinanceEnterpriseGroup			= actor.context.FinanceEnterpriseGroup
								invoked.PrmCompanyGroup					= PrmCompanyGroup
								invoked.PrmCompany						= PrmCompany
								invoked.RunTime							= current timestamp
								invoked.JobType							= 2

                            PrmReceivablesJobResult 		= LocalReceivablesJobResultView.ReceivablesJobResult
							invoke UpdateStatusOnResult LocalReceivablesJobResultView.ReceivablesJobResult
								invoked.PrmRecordsExists 	= true
						else
							LocalReceivablesJobResult		= PrmReceivablesJobResult
							LocalFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
							invoke FastUpdate ReceivablesJobResultRel
								invoked.PrmRecordsExist 	= true

				Instance Rules
					initialize LocalErrorOccured
					if (ReceivableInvoiceApplyReverseHeaderCMRel not exists
					and ReceivableInvoiceApplyReverseHeaderRel not exists)
						LocalErrorOccured = true
						invoke Create ReceivablesJobErrorResult
							invoked.FinanceEnterpriseGroup								= PrmFinanceEnterpriseGroup
							invoked.ReceivablesJobResult								= PrmReceivablesJobResult
							invoked.Company												= ReceivableInvoiceApplyReverseDetail.CreditCompany
							invoked.Customer											= ReceivableInvoiceDetail.Customer
							invoked.TransactionBatch									= ReceivableInvoiceDetail.BatchNumber
							invoked.PostDate											= ReceivableInvoiceDetail.GeneralLedgerDate
							invoked.TransactionType										= ReceivableInvoiceApplyReverseDetail.CreditTransactionType
							invoked.Invoice												= ReceivableInvoiceDetail.Invoice
							invoked.TransactionAmount									= ReceivableInvoiceDetailRel.InvoiceAmount.CurrencyAmount
							if (CreditTransactionType != "P")
								invoked.TransactionDate									= ReceivableInvoiceDetail.TransactionDate
							else
								invoked.TransactionDate									= ReceivablePaymentRel.GeneralLedgerDate
							invoked.ErrorMessage										= "Reversal header record does not exist."
							invoked.UpdateRecords										= PrmUpdateRecords
							if (ReceivableInvoiceDetail.ReceivableInvoiceDetailType = "C")
								if (CreditTransactionType = "C"
								or CreditTransactionType = "P")
									invoked.ReceivableApplication						= ReceivableApplicationInvoiceRel.ReceivableApplication
								else
									invoked.ReceivableApplication						= ReceivableApplicationCreditRel.ReceivableApplication
							else
								invoked.ReceivableApplication							= ReceivableApplicationInvoiceRel.ReceivableApplication
							invoked.OriginalCurrency									= ReceivableInvoiceDetail.OriginalCurrency
					else
					if (ReceivableApplicationRel not exists
					and ReceivableApplicationCMRel not exists)
						LocalErrorOccured = true
						invoke Create ReceivablesJobErrorResult
							invoked.FinanceEnterpriseGroup								= PrmFinanceEnterpriseGroup
							invoked.ReceivablesJobResult								= PrmReceivablesJobResult
							if (ReceivableInvoiceApplyReverseHeaderRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderRel.ReceivableOperator
							else
							if (ReceivableInvoiceApplyReverseHeaderCMRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderCMRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderCMRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableOperator
							invoked.Customer											= ReceivableInvoiceDetail.Customer
							invoked.TransactionBatch									= ReceivableInvoiceDetail.BatchNumber
							if (CreditTransactionType != "P")
								invoked.TransactionDate									= ReceivableInvoiceDetail.TransactionDate
							else
								invoked.TransactionDate									= ReceivablePaymentRel.GeneralLedgerDate
							invoked.ErrorMessage										= "Application does not exist."
							invoked.UpdateRecords										= PrmUpdateRecords
							invoked.PostDate											= ReceivableInvoiceDetail.GeneralLedgerDate
							invoked.TransactionAmount									= ReceivableInvoiceDetailRel.InvoiceAmount.CurrencyAmount
							invoked.OriginalCurrency									= ReceivableInvoiceDetail.OriginalCurrency
					else
					if (ReceivableInvoiceDetail not exists)
						LocalErrorOccured = true
						invoke Create ReceivablesJobErrorResult
							invoked.FinanceEnterpriseGroup								= PrmFinanceEnterpriseGroup
							invoked.ReceivablesJobResult								= PrmReceivablesJobResult
							if (ReceivableInvoiceApplyReverseHeaderRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderRel.ReceivableOperator
								LocalInvoiceType										= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								LocalInvoice											= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
							else
							if (ReceivableInvoiceApplyReverseHeaderCMRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderCMRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderCMRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableOperator
								LocalInvoiceType										= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								LocalInvoice											= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
							invoked.Customer											= ReceivableInvoiceDetail.Customer
							if (CreditTransactionType != "P")
								invoked.TransactionDate									= ReceivableInvoiceDetail.GeneralLedgerDate
							else
								invoked.TransactionDate									= ReceivablePaymentRel.GeneralLedgerDate
							invoked.ErrorMessage										= "Transaction "+LocalInvoiceType+" "+LocalInvoice+" "+"does not exist - cannot process."
							invoked.UpdateRecords										= PrmUpdateRecords
							if (ReceivableInvoiceDetail.ReceivableInvoiceDetailType = "C")
								if (CreditTransactionType = "C"
								or CreditTransactionType = "P")
									invoked.ReceivableApplication						= ReceivableApplicationInvoiceRel.ReceivableApplication
								else
									invoked.ReceivableApplication						= ReceivableApplicationCreditRel.ReceivableApplication
							else
								invoked.ReceivableApplication							= ReceivableApplicationInvoiceRel.ReceivableApplication
					else
					if (CompanySystemClosingControlRel.Control
					and Company.VerifyGLDateWithinGLDateRange
					and ReceivableInvoiceApplyReverseHeaderRel.GeneralLedgerDate not within CompanySystemClosingControlRel.ValidEntryDate)
						LocalErrorOccured = true
						invoke Create ReceivablesJobErrorResult
							invoked.FinanceEnterpriseGroup								= PrmFinanceEnterpriseGroup
							invoked.ReceivablesJobResult								= PrmReceivablesJobResult
							if (ReceivableInvoiceApplyReverseHeaderRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderRel.ReceivableOperator
							else
							if (ReceivableInvoiceApplyReverseHeaderCMRel exists)
								invoked.Company											= ReceivableInvoiceApplyReverseHeaderCMRel.Company
								invoked.TransactionType									= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
								invoked.Invoice											= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
								invoked.ReverseHeaderGLDate								= ReceivableInvoiceApplyReverseHeaderCMRel.GeneralLedgerDate
								invoked.ReversalOperator								= ReceivableInvoiceApplyReverseHeaderCMRel.ReceivableOperator
							invoked.Customer											= ReceivableInvoiceDetail.Customer
							if (CreditTransactionType != "P")
								invoked.TransactionDate									= ReceivableInvoiceDetail.GeneralLedgerDate
							else
								invoked.TransactionDate									= ReceivablePaymentRel.GeneralLedgerDate
							invoked.ErrorMessage										= "Delete reversal header and re-create. Post date "+ReceivableInvoiceApplyReverseHeaderRel.GeneralLedgerDate+" "+"is not within valid entry dates for company "+Company+";"+"Valid date range is "+CompanySystemClosingControlRel.ValidEntryDate.Begin+"-"+CompanySystemClosingControlRel.ValidEntryDate.End
							invoked.UpdateRecords										= PrmUpdateRecords
							if (ReceivableInvoiceDetail.ReceivableInvoiceDetailType = "C")
								if (CreditTransactionType = "C"
								or CreditTransactionType = "P")
									invoked.ReceivableApplication						= ReceivableApplicationInvoiceRel.ReceivableApplication
								else
									invoked.ReceivableApplication						= ReceivableApplicationCreditRel.ReceivableApplication
							else
								invoked.ReceivableApplication							= ReceivableApplicationInvoiceRel.ReceivableApplication

					if (!LocalErrorOccured)
						if (PrmUpdateRecords = "Y")
							if (!PrmIsCreate)
								LocalReceivablesJobResult 		= LocalReceivablesJobResultView.ReceivablesJobResult
								LocalFinanceEnterpriseGroup		= LocalReceivablesJobResultView.ReceivablesJobResult.FinanceEnterpriseGroup
							else
								LocalReceivablesJobResult 		= PrmReceivablesJobResult
								LocalFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
							LocalUpdateRecords = "Y"
							include ProcessReverseInvoiceDetail
						else
							LocalUpdateRecords = "N"
							LocalReceivablesJobResult 		= PrmReceivablesJobResult
							include ReverseApplication
