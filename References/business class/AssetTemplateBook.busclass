AssetTemplateBook is a BusinessClass
    owned by am
    prefix is BKT
    classic name is AMBKTEMPLT

    Ontology
        symbolic key is AssetTemplateBook
            classic set name is BKTSET1

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        BookRegulation
		Method
        Life
        Convention
        PersonalUseCode
            classic name is PERSONAL-USE
        SalvagePercentage            is a BusinessPercent
            classic name is SALV-PERCENT
        BusinessPercent
            classic name is BUS-PERCENT
        AssetTaxCreditTable
            classic name is TC-TABLE
        Active                       is Boolean
            classic name is BOOK-STATUS
        LifeInYears
            classic name is LIFE-YEARS
        InsuranceCalculationMethod   is a Method
            classic name is INS-METHOD
        ReplacementCalculationMethod is a Method
            classic name is RPL-METHOD
		IndianReservation					is Boolean
		PropertyType						is Numeric 2
			States
				1245				value is 01
					default label is "1245"
				1250				value is 02	
					default label is "1250"
		QualifiedImprovement		is Numeric 2
			States
				NotQualified			value is 00
				LeaseholdImprovement	value is 01
				NotLeaseholdImprovement	value is 02
		ForeignProperty						is Boolean
		CostRecoverySystem					is Numeric 2
			States
				ACRS					value is 1
				MACRS					value is 2
		ClassificationOfProperty			is AlphaUpper 5
			States
				Blank					value is " "		
				3YearProperty			value is "03"
				5YearProperty			value is "05"
				7YearProperty			value is "07"
				10YearProperty			value is "10"
				12YearProperty			value is "12"
				15YearProperty			value is "15"
				RealProperty18			value is "18"
					default label is "Real Property (3/17/84 To 5/9/85)"
				RealProperty19 			value is "19"
					default label is "Real Property (3/10/85 To 12/31/86)"	
				20YearProperty			value is "20"
				25YearProperty			value is "25"
				ResidentialReal27		value is "27"	
					default label is "Residential Real 27.5"
			 	NonResidentialReal30	value is "31"	
			 		default label is "NonResidential Real 31.5 (1/1/87 To 5/12/93)"
				NonResidentialReal40 	value is "39"		
					default label is "NonResidential Real 39/40"				
		NonConforming						is Boolean
		Used								is Boolean
		Farming								is Boolean
		Section179							is Boolean
		Listed								is Boolean
		MineralReserves						is Boolean
		LowIncomeHousing					is Boolean 		
		DepreciableIntangible				is Numeric 1
			States
				Blank					value is 0
				DepreciableIntangible	value is 1
				AmortizedIntangible		value is 2	
		TransitionalRuleFlag				is Boolean
		FirstYearExpensePercent				is a BusinessPercent
		BonusAmount							is an InternationalAmount
		Section179Expense					is an InternationalAmount		

				
    Local Fields
		LocalBookRegulationChanged					is Boolean
		LocalPersonalUseCode						is like PersonalUseCode
		LocalCreateFromCopy							is Boolean
		LocalBookRegulation							is like BookRegulation
	
	Transient Fields
		TransientBookRegulation						is a BookRegulation
			derive value from BookRegulation
		TransientUpdateFromTemplate					is Boolean
		TransientRegulationUpdate 					is Boolean
		TransientUpdateUsedFromTemplate				is Boolean

	Derived Fields

        BookCurrency             is a StringField
            type is Alpha size 5
            restricted
            Book.Currency

        AssetTemplateDescription is a StringField
            type is Alpha size 30
            restricted
            classic name is ATM-DESC
            AssetTemplate.Description

	Conditions
        ClassTypeBook
        	restricted
        	when (Book.DepreciationType.ClassLevel)
		
		ClassRegulation
			when (GuidelineClassRegulationsRel exists)
		
		AllowsBookUpdateWithRegulation
			restricted
			when (BookRegulationsRel exists)
		
		BookEntered
        	restricted
            when (Book entered)

		AllowBookUpdateWithRegulation
			restricted
			when (!BookEntered
			and AllowsBookUpdateWithRegulation)	

		DisplayBookRegulation
			restricted
			when (BookEntered
			and AllowsBookUpdateWithRegulation)	

		BookRegulationsExist
			when (BookRegulationsRel exists)        	
	Relations
		BookCalendarRel
			one-to-one relation to BookCalendar			
			Field Mapping uses Set5
				related.Book	= Book
				related.Company	= AssetTemplate.Company

		BookCalendarsRel
			one-to-many relation to BookCalendar	
			Field Mapping uses Set5
				related.Book	= Book
		
		GuidelineClassRegulationsRel
			one-to-many relation to AssetGuidelineClassRegulation
			Field Mapping uses ByEffectiveDate
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				related.AssetGuidelineClass		= AssetTemplate.AssetGuidelineClass	
                related.BookRegulation          = BookRegulation      
			Instance Selection
				where (related.Active = true)				

		LocalRegulationGuidelineClassesRel  
			one-to-many relation to AssetGuidelineClassRegulation
			Field Mapping uses ByEffectiveDate
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				related.AssetGuidelineClass		= AssetTemplate.AssetGuidelineClass	
                related.BookRegulation          = LocalBookRegulation      
			Instance Selection
				where (related.Active = true)		
		RegulationPersonalUseCodeRel
			one-to-many relation to PersonalUseCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book						= Book
				related.PersonalUseCode				= LocalPersonalUseCode
			
		BookRegulationsRel
			one-to-many relation to BookRegulation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
	
	Rule Blocks
		CreateGuidelineClassRegulation
			if (BookRegulation entered
			and AssetTemplate.AssetGuidelineClass entered)	
				if (Method not entered)
					Method					= first GuidelineClassRegulationsRel.Method
				if (Life not entered)
					Life					= first GuidelineClassRegulationsRel.Life			
				if (GuidelineClassRegulationsRel.Convention entered)
					Convention				= first GuidelineClassRegulationsRel.Convention
				if (GuidelineClassRegulationsRel.PersonalUseCode entered)
					LocalPersonalUseCode	= first GuidelineClassRegulationsRel.PersonalUseCode   
					constraint (RegulationPersonalUseCodeRel exists)
						"PersonalUseCode<PersonalUseCode>ForBook<Book>DoesnotExists"
				if (PersonalUseCode not entered)
					PersonalUseCode			= first GuidelineClassRegulationsRel.PersonalUseCode
				else
					LocalPersonalUseCode	= PersonalUseCode
					constraint (RegulationPersonalUseCodeRel exists)
						"PersonalUseCode<PersonalUseCode>ForBook<Book>DoesnotExists"
				if (ClassificationOfProperty not entered)
					ClassificationOfProperty	= first GuidelineClassRegulationsRel.ClassificationOfProperty
				
				if (AssetTaxCreditTable not entered)
					AssetTaxCreditTable		= first GuidelineClassRegulationsRel.AssetTaxCreditTable
				if (FirstYearExpensePercent not entered)
					FirstYearExpensePercent	= GuidelineClassRegulationsRel.FirstYearExpensePercent
				if (BusinessPercent not entered)
					BusinessPercent			= first GuidelineClassRegulationsRel.BusinessPercent 
				if (SalvagePercentage not entered)
					SalvagePercentage			= first GuidelineClassRegulationsRel.SalvagePercent


				if (Used not entered)
					if (AssetTemplate.Used)
						Used = AssetTemplate.Used
					else
						if (!LocalCreateFromCopy)
							Used = first GuidelineClassRegulationsRel.Used
				if (IndianReservation not entered)
					IndianReservation			= first GuidelineClassRegulationsRel.IndianReservation
				if (PropertyType not entered)
					PropertyType				= first GuidelineClassRegulationsRel.PropertyType
				if (QualifiedImprovement not entered)
					QualifiedImprovement		= first GuidelineClassRegulationsRel.QualifiedImprovement
				if (ForeignProperty not entered)
					ForeignProperty				= first GuidelineClassRegulationsRel.ForeignProperty
				if (CostRecoverySystem not entered)
					CostRecoverySystem			= first GuidelineClassRegulationsRel.CostRecoverySystem
				if (NonConforming not entered)
					NonConforming				= first GuidelineClassRegulationsRel.NonConforming
				if (Farming not entered)
					Farming						= first GuidelineClassRegulationsRel.Farming
				if (MineralReserves not entered)
					MineralReserves				= first GuidelineClassRegulationsRel.MineralReserves
				if (LowIncomeHousing not entered)
					LowIncomeHousing			= first GuidelineClassRegulationsRel.LowIncomeHousing
				if (Section179 not entered)
					Section179					= first GuidelineClassRegulationsRel.Section179
				if (Listed not entered)
					Listed						= first GuidelineClassRegulationsRel.Listed
				if (DepreciableIntangible not entered)
					DepreciableIntangible		= first GuidelineClassRegulationsRel.DepreciableIntangible
				if (TransitionalRuleFlag not entered)
					TransitionalRuleFlag 		= first GuidelineClassRegulationsRel.TransitionalRuleFlag		


		
		InitializeValues
			initialize Method
			initialize Life
			initialize Convention
			initialize PersonalUseCode
			initialize ClassificationOfProperty
			initialize AssetTaxCreditTable	
			initialize FirstYearExpensePercent	
			initialize BusinessPercent	
			initialize SalvagePercentage		
			initialize Used 
			initialize IndianReservation	
			initialize PropertyType		
			initialize QualifiedImprovement	
			initialize ForeignProperty		
			initialize CostRecoverySystem	
			initialize NonConforming	
			initialize Farming		
			initialize MineralReserves	
			initialize LowIncomeHousing		
			initialize Section179		
			initialize Listed	
			initialize DepreciableIntangible
			initialize TransitionalRuleFlag
			initialize BonusAmount					
	Field Rules

        Active
            initial value is true
	
		Book


			if (AssetTemplate.Company entered)
				constraint (BookCalendarRel exists)
					"Book<Book>DoesNotHaveACalendarSetupForCompany<AssetTemplate.Company>"
			else
				constraint (BookCalendarsRel exists)
					"Book<Book>DoesNotHaveACalendarSetup"

		Method
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Method = first GuidelineClassRegulationsRel.Method
				else
					if (action type.Create)
						if (Method not entered)
							default to first GuidelineClassRegulationsRel.Method

			if (AssetTemplate.AssetCategory.Depreciable
			and Book.DepreciationType.AssetLevel)
				required
					"MethodIsRequiredForADepreciableAsset"
			else
			if (AssetTemplate.AssetCategory.NonDepreciable)
				cannot be entered
					"MethodCannotBeEnteredForNonDepreciableAsset"

			if (Book.DepreciationType.ClassLevel)
				cannot be entered
					"MethodCannotBeEnteredForClassLevelDepreciation"
			else
				constraint (Method != "ACCT-LEVEL")
					"MethodCannotBe'ACCT-LEVEL'ForAssetLevelDepreciationBook"

			constraint (Method.MethodType.Depreciation)
				"MethodTypeForMethodMustBeDepreciation"

		Life
			if (GuidelineClassRegulationsRel exists)	
				if (LocalBookRegulationChanged)
					Life = first GuidelineClassRegulationsRel.Life
				else
					if (action type.Create)
						if (Life not entered)
							default to first GuidelineClassRegulationsRel.Life

			if (AssetTemplate.AssetCategory.Depreciable
			and !Book.DepreciationType.ClassLevel)
				required
					"LifeIsRequiredForDepreciableAsset"

			if (AssetTemplate.AssetCategory.NonDepreciable)
				cannot be entered
					"LifeCannotBeEnteredForNonDepreciableAsset"

			if (Book.DepreciationType.ClassLevel)
				cannot be entered
					"LifeCannotBeEnteredForClassLevelDepreciation"

		Convention
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Convention = first GuidelineClassRegulationsRel.Convention

			else
				if (GuidelineClassRegulationsRel not exists)
					default to Book.Convention



			if (Book.DepreciationType.ClassLevel)
				cannot be entered
					"ConventionCannotBeEnteredForClassLevelDepreciation"

		SalvagePercentage
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					SalvagePercentage = first GuidelineClassRegulationsRel.SalvagePercent



			constraint (SalvagePercentage >= 0)
				"SalvagePercentageCannotBeNegative"
			constraint (SalvagePercentage <= 100)
				"SalvagePercentageCannotBeGreaterThan100%"

		BusinessPercent
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					BusinessPercent = first GuidelineClassRegulationsRel.BusinessPercent

			else
				default to 100


			constraint (BusinessPercent >= 0)
				"BusinessPercentageCannotBeNegative"
			constraint (BusinessPercent <= 100)
				"BusinessPercentageCannotBeGreaterThan100%"

		LifeInYears
			if (Life entered)
				LifeInYears = Life / 12
				
				if (AssetTemplate.AssetCategory.Depreciable
				and !Book.DepreciationType.ClassLevel)
					required
						"LifeInYearsIsRequiredForDepreciableAsset"
			else 
				initialize

			if (Book.DepreciationType.ClassLevel)
				cannot be entered
					"LifeInYearsCannotBeEnteredForClassLevelDepreciation"

		InsuranceCalculationMethod
			constraint (InsuranceCalculationMethod.MethodType = "I")
				"MethodTypeForInsuranceCalculationMethodMustBeInsurance"

		ReplacementCalculationMethod
			constraint (ReplacementCalculationMethod.MethodType = "R")
				"MethodTypeForReplacementCalculationMethodMustBeReplacement"
		
		BookRegulation
			initial value is Book.BookRegulation
		
		PersonalUseCode
			if (GuidelineClassRegulationsRel exists)
				LocalPersonalUseCode = first GuidelineClassRegulationsRel.PersonalUseCode
				if (RegulationPersonalUseCodeRel exists)
					if (LocalBookRegulationChanged)
						PersonalUseCode = first GuidelineClassRegulationsRel.PersonalUseCode



		
		AssetTaxCreditTable
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					AssetTaxCreditTable = first GuidelineClassRegulationsRel.AssetTaxCreditTable



		
		Used
			if (action type.Create
			and !LocalCreateFromCopy)
				default to AssetTemplate.Used
				default to first GuidelineClassRegulationsRel.Used
			else
				if (AssetTemplate.Used)
					constraint (Used)
						"AllBooksMustBeSetToUsedWhenAssetTemplateIsSetToUsed"
				if (GuidelineClassRegulationsRel  exists
				and !LocalCreateFromCopy)
					if (LocalBookRegulationChanged
					and !TransientUpdateUsedFromTemplate)
						Used = first GuidelineClassRegulationsRel.Used


		
		PropertyType
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					PropertyType = first GuidelineClassRegulationsRel.PropertyType





		IndianReservation
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					IndianReservation = first GuidelineClassRegulationsRel.IndianReservation





		QualifiedImprovement
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					QualifiedImprovement = first GuidelineClassRegulationsRel.QualifiedImprovement





		ForeignProperty
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					ForeignProperty = first GuidelineClassRegulationsRel.ForeignProperty





		CostRecoverySystem
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					CostRecoverySystem = first GuidelineClassRegulationsRel.CostRecoverySystem





		ClassificationOfProperty
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					ClassificationOfProperty = first GuidelineClassRegulationsRel.ClassificationOfProperty





		FirstYearExpensePercent
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					FirstYearExpensePercent = first GuidelineClassRegulationsRel.FirstYearExpensePercent

		NonConforming
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					NonConforming = first GuidelineClassRegulationsRel.NonConforming





		MineralReserves
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					MineralReserves = first GuidelineClassRegulationsRel.MineralReserves





		Farming	
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Farming = first GuidelineClassRegulationsRel.Farming





		LowIncomeHousing
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					LowIncomeHousing = first GuidelineClassRegulationsRel.LowIncomeHousing





		Section179	
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Section179 = first GuidelineClassRegulationsRel.Section179





		Listed		
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Listed = first GuidelineClassRegulationsRel.Listed





		DepreciableIntangible
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					DepreciableIntangible = first GuidelineClassRegulationsRel.DepreciableIntangible




		TransitionalRuleFlag
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					TransitionalRuleFlag = first GuidelineClassRegulationsRel.TransitionalRuleFlag 
	Sets
		ByTemplate
			Sort Order
				AssetTemplate
				Method
				Book
				
				
				
	Attach Rules
		constraint (Active)
			"AssetTemplateBookIsNotActive"

	Actions
		Create is a Create Action
			Entrance Rules	
				if (TransientBookRegulation entered)
					BookRegulation = TransientBookRegulation
				else
					if (BookRegulation not entered)
						BookRegulation = Book.BookRegulation
			Action Rules
				if (BookRegulation entered
				and AssetTemplate.AssetGuidelineClass entered)
					LocalBookRegulation = BookRegulation
					constraint (LocalRegulationGuidelineClassesRel exists)
						"GuidelineClassRegulationsDoNotExistForBookRegulation<LocalBookRegulation>"
			Exit Rules
				if (!LocalCreateFromCopy)
					include CreateGuidelineClassRegulation

		BookRegulationUpdate is an Instance Action
			valid when (AllowsBookUpdateWithRegulation)
			Parameters
				PrmBlankRegulation					is Boolean
				PrmBookRegulation 					is a BookRegulation
				PrmUpdateGuidelineClassDefaults 	is Boolean


			Parameter Rules	
				PrmBookRegulation
					if (PrmBookRegulation entered
					and AssetTemplate.AssetGuidelineClass entered)
						LocalBookRegulation = PrmBookRegulation
						constraint (LocalRegulationGuidelineClassesRel exists)
							"GuidelineClassRegulationsDoNotExistForBookRegulation<PrmBookRegulation>"
				PrmUpdateGuidelineClassDefaults
					if (PrmUpdateGuidelineClassDefaults)
						constraint (PrmBookRegulation entered)
							"UpdateGuidelineClassDefaultsCannotBeSelectedWhenBookRegulationIsBlank"	

			Action Rules	
				if (PrmBookRegulation not entered)
					constraint (!PrmUpdateGuidelineClassDefaults)
						"UpdateGuidelineClassDefaultsCannotBeSelectedWhenBookRegulationIsBlank"
				BookRegulation = PrmBookRegulation
				if (PrmUpdateGuidelineClassDefaults
				and BookRegulation entered)
					TransientRegulationUpdate = true
					invoke Update

		Update is an Update Action
			Entrance Rules	
				if (TransientRegulationUpdate
				or TransientUpdateFromTemplate)
					LocalBookRegulationChanged = true
				if (TransientUpdateUsedFromTemplate)
					Used = AssetTemplate.Used
			Action Rules
				if (BookRegulation entered
				and AssetTemplate.AssetGuidelineClass entered)
					constraint (GuidelineClassRegulationsRel exists)
						"GuidelineClassRegulationsDoNotExistForBookRegulation<BookRegulation>"


		Delete is a Delete Action
            

