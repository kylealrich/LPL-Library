RequisitionLineDistribution is a BusinessClass
    owned by rq
    prefix is RQMMD
    
    Ontology
    	symbolic key is RequisitionLineDistribution
    	
    Patterns
        implements StaticJava
        disable AuditIndex
		implements AnalyticCube
			disable continuous update
			dynamically calculate totals
			write to base level only 
			
	Persistent Fields
		DistributionAccount				is a TransactionCodeBlock
        DistributionPercent				is Percent size 6.3
        DistributionQuantity			is a Quantity
        DistributionAmount				is an InternationalAmount
		AssetInformation
        ReportCurrencyAmount            is a FinanceCurrencyAmount
		Contract                        is a snapshot of RequisitionLine.Contract
		GLEncumbranceReference          is AlphaUpper 60
		GltObjId						is an ObjId		
		AtnObjId						is an ObjId		
		CreatedByFES					is Boolean		
			protected
		FESManuallyUpdated				is Boolean
			protected
	Transient Fields
		BypassAccountEdit				is Boolean
		StructureDefaultCode
			derive value from DerivedStructureDefaultCode
		OverwriteDistributionCode		is Boolean
		TransientCurrencyTable              is a CurrencyTable
			derive value from Requisition.CurrencyTable
		TransientAccountingEntity           is an AccountingEntity  
			derive value from Company.AccountingEntity
		TransientExchangeDate               is an ExchangeDate
			derive value from DerivedEncumbranceDate
		TransientPostingDate                is a PostingDate
			derive value from DerivedEncumbranceDate
		TransientFromCurrency               is a FromCurrency
			derive value from DerivedCurrencyCode
		TransientCurrencyAmount             is a CurrencyAmount
			derive value from DerivedCommitmentAmount
		TransientReversalUpdateReportCurrencyAmount     is a FinanceCurrencyAmount
		TransientPartialReversalReportCurrencyAmount    is a FinanceCurrencyAmount
		TransientPartialBudgetEdit                      is a FinanceCurrencyAmount
		TransientBypassCommittedContractValidation		is Boolean
		TransientFromMassRQCreateAndRelease is Boolean
		TransientPartialCancel                          is a FinanceCurrencyAmount
		TransientGLCalendarPeriod 			is a GeneralLedgerCalendarPeriod	
			derive value from Requisition.GeneralLedgerCalendarPeriodXrefRel.GeneralLedgerCalendarPeriod
		UnitsAmount
			derive value from DerivedUnitsAmount	
		LocalForceCalculation       					is Boolean
		TransientRSSLPLScreenOnDisplay				is Alpha size 1
			derive value from DerivedReturnYes

	Local Fields
		LocalPostingDate                            is a PostingDate
		LocalGeneralLedgerSystemCode 				is a GeneralLedgerSystemCode
		LocalContractParticipantAccount				is a TransactionCodeBlock
		LocalReversalUpdateAmount                   is like InternationalAmount
		LocalPartialBudgetEdit                      is like InternationalAmount
		LocalDerivedCalculationsComplete            is Boolean
		LocalRequesterRestrictedAccount				is a FinanceCodeBlock
		LocalEndDate                    			is a GeneralLedgerCalendarPeriod
		LocalLedger                     			is a Ledger
		LocalCancelQuantity                         is a Quantity
		LocalCompany                                is like InventoryCompany
		LocalRequisition                            is like Requisition
		LocalRequisitionLine                        is like RequisitionLine
		LocalDistributionAccount					is like TransactionCodeBlock
        LocalDistributionPercent					is Percent size 6.3
        LocalDistributionQuantity					is a Quantity
        LocalDistributionAmount						is an InternationalAmount
		LocalAssetInformation                       is an AssetInformation
		LocalFromDeleteAndCreate                    is Boolean
		LocalFromJournalPosting                     is Boolean
		LocalFromPORelease							is Boolean

		LocalDerivedFESKey 							is a FrontEndSplitKey 
		LocalFEGtext								is like FinanceEnterpriseGroup

	Derived Fields

		DerivedDistributionBy is a DerivedField
			type is like DistributionBy
			restricted
			if (DistributionByQuantity)
				return DistributionBy.ByQuantity
			else
			if (DistributionByPercent)
				return DistributionBy.ByPercent
			else
				return DistributionBy.ByAmount
		
		DerivedEntityCalendarPeriod is a DerivedField
			type is like GeneralLedgerCalendarPeriod
			restricted
			return first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
		
		DerivedDistributionPercent is a DerivedField
			type is Percent size 6.3
			restricted
			if (DistributionAmount entered)
				return (DistributionAmount/RequisitionLine.ReqLineValue)
			else
			if (DistributionQuantity entered)
				return (DistributionQuantity/RequisitionLine.Quantity)
			else
				return (DistributionPercent) 

		DerivedOriginalDistributionAmount is a DerivedField   
	    	type is like InternationalAmount
	     	default label is "DistributionAmount"
			if (DistributionByAmount)
		   		return (DistributionAmount)
	   		if (DistributionByPercent)
	   			return (DistributionPercent * RequisitionLine.LineExtendedAmount)
	   		else
	    		return (DistributionQuantity * RequisitionLine.LineExtendedAmount)

	    UncommittedProjectAmount is a DerivedField
	    	type is like InternationalAmount
	    	restricted
			return DerivedOriginalDistributionAmount - GLCommitRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount

		DerivedDistributionAmount is a DerivedField
			type is like InternationalAmount
			if (DistributionByQuantity)
				return (DistributionQuantity * RequisitionLine.TransactionUnitCost)
			else
			if (DistributionByPercent)
				return (DistributionPercent * RequisitionLine.TransactionUnitCost * RequisitionLine.Quantity)
			else
				return (DistributionAmount) 
		
		CommitmentTaxAmount is a DerivedField 
			type is like InternationalAmount
			restricted
			if (RequisitionLine.InvoicedTaxAmount > 0
			and IsLandedTaxDistribution)
				return ((DistributionAmount/RequisitionLine.LineExtendedAmount) * RequisitionLine.InvoicedTaxAmount)
			else
			if (RequisitionLine.AccruedTaxAmount > 0
			and IsLandedTaxDistribution)
				return ((DistributionAmount/RequisitionLine.LineExtendedAmount) * RequisitionLine.AccruedTaxAmount)
		
		DerivedCommitmentAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (FromNonLandedAOC)
				return (first RequisitionLineAddOnChargeRel.DerivedTotalWithTax)
			if (not LocalFromPORelease)
				if (RequisitionLine.Closed
				or  RequisitionLine.Status.Rejected)
					return 0.00
				else




				if (DistributionByQuantity)
					return (DistributionQuantity * RequisitionLine.LandedUnitCost * RequisitionLine.PercentToShip)
				else
				if (DistributionByPercent)
					return (DistributionPercent * RequisitionLine.LandedUnitCost * RequisitionLine.QuantityToShip)
				else
					return ((DistributionAmount + CommitmentTaxAmount) * RequisitionLine.PercentToShip) 
			else
				if (RequisitionLine.Closed
				or  RequisitionLine.Status.Rejected)
					return 0.00
				else
				if (DistributionByQuantity)
					return (DistributionQuantity * RequisitionLine.LandedUnitCost * RequisitionLine.PercentToRelease)
				else
				if (DistributionByPercent)
					return (DistributionPercent * RequisitionLine.LandedUnitCost * RequisitionLine.QuantityToRelease)
				else
					return ((DistributionAmount + CommitmentTaxAmount) * RequisitionLine.PercentToRelease)
			
		DerivedCancelAmount is a DerivedField 
			type is like InternationalAmount
			restricted
			if (DistributionByQuantity)
				return (LocalCancelQuantity * RequisitionLine.LandedUnitCost)
			else
			if (DistributionByPercent)
				return (DistributionPercent * RequisitionLine.LandedUnitCost * LocalCancelQuantity)
			else
				return (DistributionAmount * LocalCancelQuantity/RequisitionLine.Quantity) 
			
		DerivedPartialCommitmentAmount is a DerivedField  
			type is like InternationalAmount
			restricted
			if (!ContractCommitmentsEditTax
			and  ContractCommitmentsEditAOC)
				return (DerivedCommitmentAmount - (DistributionPercent * RequisitionLine.DerivedLandedAddOnCharges))
			else 
			if (!ContractCommitmentsEditAOC
			and  ContractCommitmentsEditTax)
				return (DerivedCommitmentAmount - (DistributionPercent * RequisitionLine.InvoicedTaxAmount))
			else 
			if (!ContractCommitmentsEditAOC
			and !ContractCommitmentsEditTax)
				return (DerivedCommitmentAmount - (DistributionPercent * RequisitionLine.DerivedLandedAddOnCharges)- (DistributionPercent * RequisitionLine.InvoicedTaxAmount))	 
		
		DerivedPartialBudgetEditAmount is a DerivedField  
			type is like InternationalAmount
			restricted
			if (!ContractCommitmentsEditTax
			and  ContractCommitmentsEditAOC)
				return (DistributionPercent * RequisitionLine.DerivedLandedAddOnCharges)
			else 
			if (!ContractCommitmentsEditAOC
			and  ContractCommitmentsEditTax)
				return (DistributionPercent * RequisitionLine.InvoicedTaxAmount)
			else 
			if (!ContractCommitmentsEditAOC
			and !ContractCommitmentsEditTax)
				return ((DistributionPercent * RequisitionLine.DerivedLandedAddOnCharges)+ (DistributionPercent * RequisitionLine.InvoicedTaxAmount))	 
		
		DerivedCurrencyCode is a DerivedField
			type is like FromCurrency
			restricted
			if (!FromNonLandedAOC)
				return RequisitionLine.TransactionCurrencyCode
			else
			if (FromNonLandedAOC)
				if (first RequisitionLineAddOnChargeRel.Currency entered)
					return first RequisitionLineAddOnChargeRel.Currency
				else
				if (FromNonLandedLineAOC)
					return RequisitionLine.TransactionCurrencyCode
				else
					return Requisition.BaseCurrencyCode
		
		DerivedEncumbranceDate is a DerivedField
			type is Date
			restricted
			if (PurchasingCompanyRel.ProcurementGroup.RequisitionCommitmentDate.LineEarlyDeliveryDate
			and RequisitionLine.RequestedDeliveryDate entered)
				return RequisitionLine.RequestedDeliveryDate
			else
				return Requisition.CreationDate
				
		DerivedDistributionQuantity	is a DerivedField
			type is like Quantity
			restricted
			if (DistributionByPercent)
				return (DistributionPercent * RequisitionLine.Quantity)
			else
				if (DistributionByAmount)
					return (RequisitionLine.Quantity * (DistributionAmount / RequisitionLine.ApprovalValue))
				else 
					return (DistributionQuantity)

		DerivedDistributionQuantityInStock is a DerivedField
			type is like Quantity
			restricted
			return DistributionQuantity * RequisitionLine.EnteredUOMMultiplier
		
		DerivedRestrictedAccountString is a DerivedField
			type is AlphaUpper size 26
			restricted
			if (Company.ItemGroup.StructureRow.Type.AccountingEntity)
				return DistributionAccount.ToAccountingEntity

			if (Company.ItemGroup.StructureRow.Type.AccountingUnit)
				return DistributionAccount.AccountingUnit

			if (Company.ItemGroup.StructureRow.Type.Account)
				return DistributionAccount.GeneralLedgerChartAccount

			if (Company.ItemGroup.StructureRow.Type.Project)
				return DistributionAccount.Project

			if (Company.ItemGroup.StructureRow.Type.Dimension1)
				return DistributionAccount.FinanceDimension1

			if (Company.ItemGroup.StructureRow.Type.Dimension2)
				return DistributionAccount.FinanceDimension2

			if (Company.ItemGroup.StructureRow.Type.Dimension3)
				return DistributionAccount.FinanceDimension3

			if (Company.ItemGroup.StructureRow.Type.Dimension4)
				return DistributionAccount.FinanceDimension4

			if (Company.ItemGroup.StructureRow.Type.Dimension5)
				return DistributionAccount.FinanceDimension5

			if (Company.ItemGroup.StructureRow.Type.Dimension6)
				return DistributionAccount.FinanceDimension6

			if (Company.ItemGroup.StructureRow.Type.Dimension7)
				return DistributionAccount.FinanceDimension7

			if (Company.ItemGroup.StructureRow.Type.Dimension8)
				return DistributionAccount.FinanceDimension8

			if (Company.ItemGroup.StructureRow.Type.Dimension9)
				return DistributionAccount.FinanceDimension9

			if (Company.ItemGroup.StructureRow.Type.Dimension10)
				return DistributionAccount.FinanceDimension10	
		
		DerivedStructureDefaultCode is a DerivedField
			type is like StructureDefaultCode
			restricted
			if  (BypassAccountDefaultingForReplenishmentRequisitions)
				return blank			
			else
				return PurchasingCompanyFromCompanyRel.RequisitionStructureDefaultCode


		DerivedUnitsAmount is a DerivedField
			type is like UnitsAmount
			restricted
			if (not DistributionAccount.GeneralLedgerChartAccount.AllowUnits.No)
				return 1
			else
				return 0
		
		DerivedReturnYes is a DerivedField
			type is Alpha size 1
			restricted
			return "Y"


        DerivedLedger is a DerivedField
            type is like Ledger
            return DistributionAccount.Ledger
 
        DerivedToAccountingEntity is a DerivedField
            type is like ToAccountingEntity
            return DistributionAccount.ToAccountingEntity
 
        DerivedAccountingUnit is a DerivedField
            type is like AccountingUnit
            return DistributionAccount.AccountingUnit
 
        DerivedGeneralLedgerChartAccount is a DerivedField
            type is like GeneralLedgerChartAccount
            return DistributionAccount.GeneralLedgerChartAccount

        DerivedProject is a DerivedField
            type is like Project
            return DistributionAccount.Project

		DerivedFinanceDimension1 is a DerivedField
			type is like FinanceDimension1
			return DistributionAccount.FinanceDimension1
		
		DerivedFinanceDimension2 is a DerivedField
			type is like FinanceDimension2
			return DistributionAccount.FinanceDimension2

		DerivedFinanceDimension3 is a DerivedField
			type is like FinanceDimension3
			return DistributionAccount.FinanceDimension3		

		DerivedFinanceDimension4 is a DerivedField
			type is like FinanceDimension4
			return DistributionAccount.FinanceDimension4
		
		DerivedFinanceDimension5 is a DerivedField
			type is like FinanceDimension5
			return DistributionAccount.FinanceDimension5

		DerivedFinanceDimension6 is a DerivedField
			type is like FinanceDimension6
			return DistributionAccount.FinanceDimension6
			
		DerivedFinanceDimension7 is a DerivedField
			type is like FinanceDimension7
			return DistributionAccount.FinanceDimension7

		DerivedFinanceDimension8 is a DerivedField
			type is like FinanceDimension8
			return DistributionAccount.FinanceDimension8

		DerivedFinanceDimension9 is a DerivedField
			type is like FinanceDimension9
			return DistributionAccount.FinanceDimension9

		DerivedFinanceDimension10 is a DerivedField
			type is like FinanceDimension10
			return DistributionAccount.FinanceDimension10


	Dimensions
		GLAccountingUnitRel.AccountingUnit
			dimension name is AccountingUnit
			caption is representative text
			Attributes
				Description
				Level
				SequenceNumber

		TransientGLCalendarPeriod
			dimension name is Calendar
			caption is "<AlternateCaption>"
			Attributes
				YTDCrossReference
				SamePeriodLastYear
				YTDCrossRefSPLY
				PeriodType
				PeriodTypeName
				NumberOfDays

		RequisitionLine.Buyer
			dimension name is Buyer
		
		RequisitionLine.Contract
			dimension name is Contract

		RequisitionLine.Item
			dimension name is Item
						
		RequisitionLine.Manufacturer
			dimension name is Manufacturer
			
		Requisition	
			dimension name is RequisitionNumber

		Requisition.Requester
			dimension name is Requester

		RequisitionLine.Vendor
			dimension name is Vendor
			caption is representative text
			
	Measures
		ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount			
	    	measure name is DistributionAmount	










				
	Rule Blocks
		CheckRequesterRestrictedAccount
			if (HasRequesterRestrictionsAllow or HasRequesterRestrictionsDisallow)
				if (Company.ItemGroup.StructureRow.Type.AccountingEntity)
					LocalRequesterRestrictedAccount.Ledger				= Company.ItemGroup.FinanceEnterpriseGroup.CoreLedger
					LocalRequesterRestrictedAccount.ToAccountingEntity	= DistributionAccount.ToAccountingEntity

				if (Company.ItemGroup.StructureRow.Type.AccountingUnit)
					LocalRequesterRestrictedAccount.Ledger				= Company.ItemGroup.FinanceEnterpriseGroup.CoreLedger
					LocalRequesterRestrictedAccount.ToAccountingEntity	= DistributionAccount.ToAccountingEntity
					LocalRequesterRestrictedAccount.AccountingUnit		= DistributionAccount.AccountingUnit

				if (Company.ItemGroup.StructureRow.Type.Account)
					LocalRequesterRestrictedAccount.GeneralLedgerChartAccount = DistributionAccount.GeneralLedgerChartAccount

				if (Company.ItemGroup.StructureRow.Type.Project)
					LocalRequesterRestrictedAccount.Project				= DistributionAccount.Project

				if (Company.ItemGroup.StructureRow.Type.Dimension1)
					LocalRequesterRestrictedAccount.FinanceDimension1	= DistributionAccount.FinanceDimension1

				if (Company.ItemGroup.StructureRow.Type.Dimension2)
					LocalRequesterRestrictedAccount.FinanceDimension2	= DistributionAccount.FinanceDimension2

				if (Company.ItemGroup.StructureRow.Type.Dimension3)
					LocalRequesterRestrictedAccount.FinanceDimension3	= DistributionAccount.FinanceDimension3

				if (Company.ItemGroup.StructureRow.Type.Dimension4)
					LocalRequesterRestrictedAccount.FinanceDimension4	= DistributionAccount.FinanceDimension4

				if (Company.ItemGroup.StructureRow.Type.Dimension5)
					LocalRequesterRestrictedAccount.FinanceDimension5	= DistributionAccount.FinanceDimension5

				if (Company.ItemGroup.StructureRow.Type.Dimension6)
					LocalRequesterRestrictedAccount.FinanceDimension6	= DistributionAccount.FinanceDimension6

				if (Company.ItemGroup.StructureRow.Type.Dimension7)
					LocalRequesterRestrictedAccount.FinanceDimension7	= DistributionAccount.FinanceDimension7

				if (Company.ItemGroup.StructureRow.Type.Dimension8)
					LocalRequesterRestrictedAccount.FinanceDimension8	= DistributionAccount.FinanceDimension8

				if (Company.ItemGroup.StructureRow.Type.Dimension9)
					LocalRequesterRestrictedAccount.FinanceDimension9	= DistributionAccount.FinanceDimension9

				if (Company.ItemGroup.StructureRow.Type.Dimension10)
					LocalRequesterRestrictedAccount.FinanceDimension10	= DistributionAccount.FinanceDimension10

				if (not LocalFromJournalPosting 
				and LocalRequesterRestrictedAccount entered)
					if (HasRequesterRestrictionsAllow)
						constraint (RequesterFinanceStructuresRel exists)
							"RequesterIsNotAllowedToUse<Company.ItemGroup.StructureRow.DisplayLabel>_<DerivedRestrictedAccountString>ForLine<RequisitionLine>"
					
					if (HasRequesterRestrictionsDisallow)
						constraint (RequesterFinanceStructuresRel not exists)
							"RequesterIsNotAllowedToUse<Company.ItemGroup.StructureRow.DisplayLabel>_<DerivedRestrictedAccountString>ForLine<RequisitionLine>"
				
	Conditions
		IsLandedTaxDistribution
			restricted
			when  ((RequisitionLine.TaxEntityRel.UseTaxCodeAccounts
			and    RequisitionLine.EntityTaxCodeRel.LandedCost)
			or     (!RequisitionLine.TaxEntityRel.UseTaxCodeAccounts
			and    RequisitionLine.TaxEntityRel.LandedCost))

		IsValidForDistribution
			restricted
			when (!RequisitionLine.Contract.UseCommitments or TransientBypassCommittedContractValidation or FromNonLandedAOC)
		DistributionByQuantity
			restricted
			when (DistributionQuantity entered)
		DistributionByPercent
			restricted
			when (DistributionPercent entered)
		DistributionByAmount
			restricted
			when (DistributionAmount entered)
		UpdateableRequisitionLine
			restricted
			when (RequisitionLine.Status.Unreleased
			and   !Requisition.BudgetEditInProgress
			and   !Requisition.InterfaceInProcess)
		IsValidRequesterFinanceStructure
			restricted
			when (not Requisition.Requester.HasFinanceStructure
			or    RequesterFinanceStructuresRel exist)
		IsDistributionAllowed
			restricted
			when (RequisitionLine.Status.Unreleased
			and   RequisitionLine.IsDistributionAllowed
			and   !Requisition.BudgetEditInProgress
			and   !Requisition.InterfaceInProcess) 
		CurrentCommitmentExists
			restricted
			when (GLCommitRel exists)
		CurrentOpenCommitmentExists 
			restricted 
			when (CurrentCommitmentExists
			and  (GLCommitRel.Status = 0
			or    GLCommitRel.Status = 3))
		BudgetErrorExists
			restricted
			when (BudgetEditErrorsRel exists)
		ContractCommitments
			restricted
			when (CommittedContractLineDistributionsRel exists
			or    CommittedContractRel exists)
		ContractCommitmentsCompleteReversal
			restricted
			when (ContractCommitments
			and   !FromNonLandedAOC
			and   NoContractAOCMismatch
			and   NoContractTaxMismatch)
		ContractCommitmentsEditTax
			restricted
			when (ContractCommitments
			and  !FromNonLandedAOC
			and   RequisitionLine.DerivedTotalTax > 0
			and  !RequisitionLine.ContractAmountIncludesTax)
		ContractCommitmentsEditAOC
			restricted
			when (ContractCommitments
			and  !FromNonLandedAOC
			and   RequisitionLine.DerivedLandedAddOnCharges > 0
			and  !RequisitionLine.ContractAmountIncludesAddOnCharge)
		NoContractAOCMismatch
			restricted
			when (RequisitionLine.DerivedLandedAddOnCharges = 0
	  	    or    RequisitionLine.ContractAmountIncludesAddOnCharge)
	  	NoContractTaxMismatch
	    	restricted
			when (RequisitionLine.DerivedTotalTax = 0
			or    RequisitionLine.ContractAmountIncludesTax)
			
		FromNonLandedAOC
			restricted
			when (AddOnCharge entered)
		FromNonLandedLineAOC
			restricted
			when (AddOnCharge entered
			and   RequisitionLine entered)
		IsOpen			
			restricted
			when (!Requisition.Closed)
		HasRequesterRestrictionsAllow
			restricted
			when (Company.ItemGroup.StructureRow entered
			and   Company.ItemGroup.RequesterValidationOption.AllowValues
			and   RequesterFinanceStructuresExistRel exists)
		GLEncumbranceReferenceExists
			restricted
			when (GLCommitByManualEncumbranceRel exists)
		
		HasRequesterRestrictionsDisallow
			restricted
			when (Company.ItemGroup.StructureRow entered
			and   Company.ItemGroup.RequesterValidationOption.DisallowValues
			and   RequesterFinanceStructuresExistRel exists)					
	    CreatingCommitments
	    	restricted
			when (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
	        or    RQGeneralLedgerSystemCodeRel.EncumbranceOption.Track)
	    RQLineNotRejected
	    	restricted
	    	when (!RequisitionLine.Status.Rejected)

		RQValidForCommitment
			restricted
			when (!RequisitionLine.Closed
			and   RequisitionLine.NonInventoryItem
			and  (RequisitionLine.Status.Unreleased
			or    RequisitionLine.Status.Released
			or    RequisitionLine.Status.Processed))

		BypassAccountDefaultingForReplenishmentRequisitions
			restricted
			when (Company.BypassAccountDefaultingForReplenishmentRequisitions
			and  (RequisitionLine.RequisitionSource.ReplenishmentByRequisition
			or    RequisitionLine.RequisitionSource.LocationReplenishmentReport))
	    
	    AssetEntered
	    	restricted
	    	when (AssetInformation.Asset entered)

	    AssetTemplateEntered
	    	restricted
	    	when (AssetInformation.AssetTemplate entered)
	    
	    RequisitionLineContractEntered
	    	restricted
	    	when (RequisitionLine.Contract entered)
		
		DisplayGLEncumbranceReference
			restricted
			when (RequesterRel.DisplayGLEncumbranceReference)
	        
		DisplayAssetDisplayOption
			restricted
			when (RequesterRel.DisplayAssetDisplayOption)

		DisplayAssetTemplateDisplayOption
			restricted
			when (RequesterRel.DisplayAssetDisplayOption)
		
		RSSLPLValidateAsset
            restricted
            when (RequesterRel.RequireAsset
            and AssetInformation.Asset not entered)
 
        RSSLPLValidateAssetTemplate
            restricted
            when (RequesterRel.RequireAssetTemplate
            and AssetInformation.AssetTemplate not entered)
       
        RSSLPLValidateGLEncumbranceReference
            restricted
            when (RequesterRel.RequireGLEncumbranceReference
            and GLEncumbranceReference not entered)
	        
	Relations
		GLAccountingUnitRel
			one-to-one relation to AccountingUnit
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup 
				related.AccountingEntity			= DistributionAccount.ToAccountingEntity
				related.AccountingUnit				= DistributionAccount.AccountingUnit

		RequisitionLineDistributionErrorRel
			one-to-many relation to RequisitionLineError
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Requisition						= Requisition
				related.RequisitionLine					= RequisitionLine
			Instance Selection
				where (related.ErrorType.Distribution)
		
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < RequisitionLine.RequestedDeliveryDate
				and	   related.PeriodType.EndDate)
		
		EntityLedgerPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
				related.AccountingEntity			= DistributionAccount.ToAccountingEntity 
				related.Ledger						= LocalLedger
			Instance Selection
				where (related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	not < LocalEndDate)
		
		RequisitionLineDistributionDuplicateRel
            one-to-many relation to RequisitionLineDistribution
            Field Mapping uses symbolic key
                related.Company			 				= Company
                related.Requisition		 				= Requisition
                related.RequisitionLine  				= RequisitionLine
            Instance Selection
            	where (related.DistributionAccount 		= DistributionAccount
            	and related.UniqueID 					!= UniqueID)
		
		OtherRequisitionLineDistributionsRel
            one-to-many relation to RequisitionLineDistribution
            Field Mapping uses symbolic key
                related.Company			 				= Company
                related.Requisition		 				= Requisition
                related.RequisitionLine  				= RequisitionLine
            Instance Selection
            	where (related.UniqueID					!= UniqueID)
		
		PurchasingCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company = Company

		PurchasingCompanyFromCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
				related.Company = RequisitionLine.FromCompanyLocationBin.FromCompany
				
		ContractLineDistributionsRel
			one-to-many relation to ContractLineDistribution
			Field Mapping uses symbolic key
				related.ContractGroup 	= Company.ItemGroup
				related.Contract 		= RequisitionLine.Contract
				related.ContractLine 	= RequisitionLine.ContractLine				

		RequesterFinanceStructuresRel
			one-to-many relation to RequesterFinanceStructure
			Field Mapping uses symbolic key
				related.HROrganization					= Requisition.Requester.HROrganization
				related.Requester						= Requisition.Requester
			Instance Selection
				where (related.DistributionAccount		= LocalRequesterRestrictedAccount)

		RequesterFinanceStructuresExistRel
			one-to-many relation to RequesterFinanceStructure
			Field Mapping uses symbolic key
				related.HROrganization					= Requisition.Requester.HROrganization
				related.Requester						= Requisition.Requester
				
		GLCommitRel
			one-to-one relation to GLCommit
			Field Mapping uses ByOriginatingTransaction
				related.OriginatingTransaction  = reference to this instance 

		GLCommitByManualEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByGLEncumbranceReference
				related.FinanceEnterpriseGroup          = Company.ItemGroup.FinanceEnterpriseGroup
				related.GLEncumbranceReference          = GLEncumbranceReference
				related.System                          = "GL" 
		
		RQGeneralLedgerSystemCodeRel
        	one-to-one relation to GeneralLedgerSystemCode
        	Field Mapping uses symbolic key
        		related.FinanceEnterpriseGroup			= Company.ItemGroup.FinanceEnterpriseGroup
        		related.GeneralLedgerSystemCode			= "RQ"
        		
		BudgetEditErrorsRel
            one-to-many relation to BudgetEditError
            Field Mapping uses ByBudgetGroup
                related.FinanceEnterpriseGroup              = Company.ItemGroup.FinanceEnterpriseGroup
            	related.BudgetEditError.BudgetEditGroup     = UniqueID

       	HeaderBudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup              = Company.FinanceEnterpriseGroup
				related.BudgetEditError.BudgetEditGroup     = Requisition.UniqueID

		ContractParticipantByCompanyRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup										= PurchasingCompanyRel.ProcurementGroup
				related.Contract											= RequisitionLine.Contract
			Instance Selection
				where (related.ContractParticipant.ParticipantLocation.Company				= Company
				and    related.ContractParticipant.ParticipantLocation.Location 			= blank
				and    related.ContractParticipant.ParticipantLocation.RequestingLocation	= blank)
				
		RequisitionLineAddOnChargeRel
			one-to-many relation to RequisitionLineAddOnCharge
			Field Mapping uses symbolic key
				related.Company                           = Company
				related.Requisition                       = Requisition
				related.RequisitionLine                   = RequisitionLine
				related.AddOnCharge                       = AddOnCharge
			Instance Selection
				where (AddOnCharge entered)
		
		ContractParticipantByLocationRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup										= PurchasingCompanyRel.ProcurementGroup
				related.Contract											= RequisitionLine.Contract
			Instance Selection
				where (related.ContractParticipant.ParticipantLocation.Company				= Company
				and    related.ContractParticipant.ParticipantLocation.Location 			= Requisition.FromCompanyLocation.FromLocation
				and    related.ContractParticipant.ParticipantLocation.RequestingLocation	= blank)

		ContractParticipantByRequestingLocationRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup										= PurchasingCompanyRel.ProcurementGroup
				related.Contract											= RequisitionLine.Contract
			Instance Selection
				where (related.ContractParticipant.ParticipantLocation.Company				= Company
				and    related.ContractParticipant.ParticipantLocation.Location 			= blank
				and    related.ContractParticipant.ParticipantLocation.RequestingLocation	= Requisition.RequestingLocation)
		
		CommittedContractLineDistributionsRel
			one-to-many relation to ContractLineDistribution
			Field Mapping uses symbolic key
				related.ContractGroup 	= Company.ItemGroup
				related.Contract 		= RequisitionLine.Contract
				related.ContractLine 	= RequisitionLine.ContractLine		
			Instance Selection
				where (related.CommitmentsExist
				or     related.DistSpreadExists)
		
		CommittedContractRel
			one-to-many relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup 	= Company.ItemGroup
				related.Contract 		= RequisitionLine.Contract
			Instance Selection
				where (related.UseHeaderCommitments)
					
		GLCommitxRel
			one-to-one relation to GLCommitx
			Field Mapping uses symbolic key
				related.GLCommitx				= GltObjId        
				
		ACCommitxRel
			one-to-one relation to LegacyAccommitx
			Field Mapping uses symbolic key
				related.LegacyAccommitx			= AtnObjId        

		FESDistributionsByKeyLocalRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey
		
		FESDistByDistributionRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey
			    related.FrontEndSplitDistributions.Distribution		= RequisitionLineDistribution

		ProjectFundingSourceRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= Company.FinanceEnterpriseGroup
				related.ProjectContract			= DistributionAccount.Project.ParentDisplayContractRel.Project
				related.FinanceDimension2		= DistributionAccount.FinanceDimension2	

		RequesterRel
            one-to-one relation to Requester
            Field Mapping uses symbolic key
            	related.HROrganization = actor.agent(Employee).HROrganization
                related.Requester = actor.agent(Employee).Employee.Requester.Requester

	Sets
	
		ByProject	
            indexed
            Sort Order
				DistributionAccount.Project  
				Company
				Requisition
				RequisitionLine
				RequisitionLineDistribution
				AddOnCharge	
				
		ByContract
			Sort Order
				Contract
				Company
				Requisition descending
				RequisitionLine
				RequisitionLineDistribution
				AddOnCharge	
			
	Field Rules
		AssetInformation
			if (TransientRSSLPLScreenOnDisplay entered
			and AssetInformation.Asset not entered
			and RequesterRel.RequireAsset)
				required
					"Field_AssetIsRequired"
			
			if (TransientRSSLPLScreenOnDisplay entered
			and AssetInformation.AssetTemplate not entered
			and RequesterRel.RequireAssetTemplate)
				required
					"Field_Asset_TemplateIsRequired"
			
			if (AssetInformation.AssetTemplate entered)
				if  (DistributionAccount.ToAccountingEntity not = AssetInformation.AssetTemplate.Company.AccountingEntity
				and (action type.Create
				or   AssetInformation.AssetTemplate changed
				or   DistributionAccount.ToAccountingEntity changed))
					confirmation required
						"DistributionAccountingEntityNotEqualToAssetTemplateCompanyAccountingEntity-DoYouWantToContinue?"
						
				if (RequisitionLine.DistributionBy.ByPercent and DistributionPercent != 100%)
					cannot be entered
						"CannotUseAssetTemplateWhenUsingDistributionPercentage"
				
				if (RequisitionLine.DistributionBy.ByAmount)
					cannot be entered
						"CannotUseAssetTemplateWhenDistributingByAmounts"
						
		DistributionAccount




			if (GLEncumbranceReference !entered)
				required
				
			LocalGeneralLedgerSystemCode = RQGeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
			
			if (Company.AccountingEntity.ValidSystems entered) 
				constraint (LocalGeneralLedgerSystemCode within Company.AccountingEntity.ValidSystems) 
					"InvalidSystemFor<Company.ItemGroup.FinanceEnterpriseGroup.AccountingEntityLabel>" 
			if (DistributionAccount.ToAccountingEntity.ValidSystems entered) 
				constraint (LocalGeneralLedgerSystemCode within DistributionAccount.ToAccountingEntity.ValidSystems) 
					"InvalidSystemForPosting<Company.ItemGroup.FinanceEnterpriseGroup.AccountingEntityLabel>" 
			if (DistributionAccount.GeneralLedgerChartAccount.Account.SystemRestriction entered) 
				constraint (LocalGeneralLedgerSystemCode within DistributionAccount.GeneralLedgerChartAccount.Account.SystemRestriction) 
					"InvalidSystemForAccount"
			constraint (not DistributionAccount.GeneralLedgerChartAccount.AccountType.StatCumulative
			and			not DistributionAccount.GeneralLedgerChartAccount.AccountType.StatNonCumulative)
				"StatisticalAccount<DistributionAccount.GeneralLedgerChartAccount>DoesNotAllowAmounts"

			include CheckRequesterRestrictedAccount

			
		GLEncumbranceReference
			if (TransientRSSLPLScreenOnDisplay entered
			and GLEncumbranceReference not entered
			and RequesterRel.RequireGLEncumbranceReference)
				required
					"Field_GL_EncumbranceIsRequired"
		
			default to Requisition.DefaultGLEncumbranceReference
			
			if (GLEncumbranceReference entered)
			
				constraint (GLEncumbranceReferenceExists)
					"NotAValidGLEncumbranceReference"
					
				if (GLEncumbranceReferenceExists)
					DistributionAccount = first GLCommitByManualEncumbranceRel.FinanceCodeBlock
		
		DistributionPercent
			if (RequisitionLine.DistributionBy.ByPercent)
				default to RequisitionLine.RemainingPercentToBeDistributed
				required
			else
				cannot be entered
					"CanEitherEnterDistributionQuantityOrDistributionPercentOrDistributionAmount" 

			constraint (DistributionPercent > 0)
				"DistributionPercentMustBeGreaterThanZero"
			constraint (DistributionPercent <= 100%)
				"DistributionPercentCannotBeGreaterThan100%"

		DistributionQuantity
			if (RequisitionLine.DistributionBy.ByQuantity)
				default to RequisitionLine.RemainingQuantityToBeDistributed 
				required
			else 
				cannot be entered
					"CanEitherEnterDistributionQuantityOrDistributionPercentOrDistributionAmount"
			
			constraint (DistributionQuantity > 0)
				"DistributionQuantityMustBeGreaterThanZero"
			constraint (DistributionQuantity <= RequisitionLine.Quantity)
				"DistributionQuantityCannotExceedRequisitionLineQuantity"

		DistributionAmount
			if (RequisitionLine.DistributionBy.ByAmount)
				default to RequisitionLine.RemainingAmountToBeDistributed
				required
			else
				cannot be entered
					"CanEitherEnterDistributionQuantityOrDistributionPercentOrDistributionAmount"

			constraint (DistributionAmount > 0)
				"DistributionAmountMustBeGreaterThanZero"
			constraint (DistributionAmount <= RequisitionLine.ApprovalValue)
				"DistributionAmountCannotExceedRequisitionLineAmount"

			constraint (RequisitionLine.Company.Currency = RequisitionLine.TransactionCurrencyCode)
				"RequisitionMustBeInBaseCurrencyWhenDistributionsAreByAmount"
		
		TransientPartialReversalReportCurrencyAmount
			initialize
					
			TransientCurrencyTable     											= Requisition.CurrencyTable
			TransientAccountingEntity  											= Company.AccountingEntity
			TransientExchangeDate      											= DerivedEncumbranceDate
			TransientPostingDate                    							= DerivedEncumbranceDate
			TransientFromCurrency      											= DerivedCurrencyCode
			TransientCurrencyAmount    											= LocalReversalUpdateAmount
			TransientPartialReversalReportCurrencyAmount.UseDerivedCalculations	= true
			LocalDerivedCalculationsComplete                                    = TransientPartialReversalReportCurrencyAmount.DerivedCalculationsComplete
			
		TransientPartialBudgetEdit
			initialize
					
			TransientCurrencyTable     											= Requisition.CurrencyTable
			TransientAccountingEntity  											= Company.AccountingEntity
			TransientExchangeDate      											= DerivedEncumbranceDate
			TransientPostingDate                    							= DerivedEncumbranceDate
			TransientFromCurrency      											= DerivedCurrencyCode
			TransientCurrencyAmount    											= LocalPartialBudgetEdit
			TransientPartialBudgetEdit.UseDerivedCalculations 					= true
			LocalDerivedCalculationsComplete                                    = TransientPartialBudgetEdit.DerivedCalculationsComplete

		CreatedByFES
			if(CreatedByFES
			and	action type.Update
			and	(DistributionAccount.Ledger changed
			or	DistributionAccount.ToAccountingEntity changed
			or	DistributionAccount.AccountingUnit changed
			or	DistributionAccount.GeneralLedgerChartAccount changed
			or	DistributionAccount.Project changed
			or	DistributionAccount.FinanceDimension1 changed
			or	DistributionAccount.FinanceDimension2 changed
			or	DistributionAccount.FinanceDimension3 changed
			or	DistributionAccount.FinanceDimension4 changed
			or	DistributionAccount.FinanceDimension5 changed
			or	DistributionAccount.FinanceDimension6 changed
			or	DistributionAccount.FinanceDimension7 changed
			or	DistributionAccount.FinanceDimension8 changed
			or	DistributionAccount.FinanceDimension9 changed
			or	DistributionAccount.FinanceDimension10 changed
			or	DistributionPercent changed
        	or	DistributionQuantity changed
        	or	DistributionAmount changed))
				confirmation required
					"OverrideFrontEndSplit?"
				FESManuallyUpdated = true
	
	Create Exit Rules
	


		if ((RequisitionLine.CommitmentValue != 0
		and !FromNonLandedAOC)
		or  (FromNonLandedAOC
		and  RequisitionLineAddOnChargeRel.DerivedTotalWithTax != 0))
			invoke UpdateReportCurrencyAmountInstance
			
			if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
	        or  RQGeneralLedgerSystemCodeRel.EncumbranceOption.Track)
	           	invoke CreateGLCommitment
			if (!ContractCommitmentsCompleteReversal
			and !TransientFromMassRQCreateAndRelease)
				if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)
		           	invoke PerformBudgetEdit
	        else	
	        if (ContractCommitmentsCompleteReversal)
	        	invoke CreateBudgetTemplateReversal GLCommitRel
	  				invoked.PrmFEG              					= Company.FinanceEnterpriseGroup
	  				invoked.PrmUniqueID         					= Requisition.UniqueID
	  				invoked.PrmCodeBlock        					= DistributionAccount
	  				invoked.PrmGLDate           					= DerivedEncumbranceDate
	  				invoked.PrmTransAmount      					= DerivedCommitmentAmount
	  				invoked.PrmCurrencyAmounts.FunctionalAmount     = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ProjectAmount	    = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount1        = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount2        = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount3        = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount4        = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount5        = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount      = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount2     = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount3     = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					invoked.PrmSkipBudgetRebuild                    = true
			else
			if (ContractCommitmentsEditTax
			or  ContractCommitmentsEditAOC)
				initialize TransientPartialReversalReportCurrencyAmount
			    LocalReversalUpdateAmount           = DerivedPartialCommitmentAmount  
				invoke UpdateReportCurrencyAmount
				invoke CreateBudgetTemplateReversal GLCommitRel
					invoked.PrmFEG              					= Company.FinanceEnterpriseGroup
	  				invoked.PrmUniqueID         					= Requisition.UniqueID
	  				invoked.PrmCodeBlock        					= DistributionAccount
	  				invoked.PrmGLDate           					= DerivedEncumbranceDate
	  				invoked.PrmTransAmount      					= DerivedPartialCommitmentAmount
	  				invoked.PrmCurrencyAmounts.FunctionalAmount     = TransientPartialReversalReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ProjectAmount	    = TransientPartialReversalReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount1        = TransientPartialReversalReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount2        = TransientPartialReversalReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount3        = TransientPartialReversalReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount4        = TransientPartialReversalReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount5        = TransientPartialReversalReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount      = TransientPartialReversalReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount2     = TransientPartialReversalReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount3     = TransientPartialReversalReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
		
		if (RequisitionLineDistributionErrorRel exists)
			for each RequisitionLineDistributionErrorRel
				invoke Purge each
	
	Actions
		Create is a Create Action
			valid when (IsDistributionAllowed)
			Local Fields
				LocalOriginalDistributionAcount		is a TransactionCodeBlock
				LocalCheckIfMultipleDistribution 	is Boolean
				LocalContractGroup 					is a ContractGroup
				LocalContract	 					is a Contract
				LocalContractLine 					is a ContractLine
				LocalContractLineDistribution 		is a ContractLineDistribution
				LocalCounter						is Numeric size 2
												
			Entrance Rules
					
				if (not OverwriteDistributionCode)
					LocalContractGroup 				= Company.ItemGroup
					LocalContract 					= RequisitionLine.Contract
					LocalContractLine 				= RequisitionLine.ContractLineRel.ContractLine
					LocalContractLineDistribution 	= first ContractLineDistributionsRel.ContractLineDistribution
					
					DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.ContractLine] 	= LocalContractLineDistribution.DistributionAccount
				
				LocalOriginalDistributionAcount = DistributionAccount

				if (ContractParticipantByCompanyRel exists)
					LocalContractParticipantAccount = ContractParticipantByCompanyRel.AccountingUnit
				else
					if (ContractParticipantByLocationRel exists)
						LocalContractParticipantAccount = first ContractParticipantByLocationRel.AccountingUnit
					else
						if (ContractParticipantByRequestingLocationRel exists)
							LocalContractParticipantAccount = first ContractParticipantByRequestingLocationRel.AccountingUnit
				
				if (RequisitionLine.RequestingLocation.ParLocation)
					DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.ParLocation]			= RequisitionLine.RequestingItemLocationRel.GeneralLedgerCategory.IssueAccount
				DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.ProcurementTemplateLine] 	= RequisitionLine.TemplateAccount
				if (RequisitionLine.ItemType.Inventoried 
				or  RequisitionLine.ItemType.NonStock)
					DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.FromLocation] 			= RequisitionLine.ItemLocationRel.GeneralLedgerCategory.IssueAccount
				DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.RequisitionHeader]			= Requisition.DefaultDistributionAccount
				DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.RequestingLocation] 		= RequisitionLine.RequestingLocation.IssueAccount
				DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.ContractParticipant]		= LocalContractParticipantAccount
				DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.Item]						= RequisitionLine.Item.IssueAccount

				if (not OverwriteDistributionCode and instance count of ContractLineDistributionsRel > 1)
					DistributionAccount.CheckPositionInUse = AccountDefaultingComponentRQ.ContractLine
					LocalCheckIfMultipleDistribution = true

				
           		constraint (IsValidForDistribution)
					"CannotCreateDistributionsForRequisitionLinesWithCommittedContracts"

			Action Rules
				BypassAccountEdit		= true
				if (RQGeneralLedgerSystemCodeRel exists)
					LocalGeneralLedgerSystemCode = RQGeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
				if (DistributionAccount.Project entered)
					LocalPostingDate  		= RequisitionLine.RequestedDeliveryDate

				if (BypassAccountDefaultingForReplenishmentRequisitions)
					initialize StructureDefaultCode
					
			Exit Rules
				if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
        		or  RQGeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					if (DerivedDistributionAmount > 0
					and PurchasingCompanyRel.ProcurementGroup.RequisitionCommitmentDate.LineEarlyDeliveryDate)
						LocalLedger  = Company.FinanceEnterpriseGroup.CoreLedger
						LocalEndDate = DerivedEntityCalendarPeriod
						constraint (DerivedEntityCalendarPeriod entered
						and         EntityLedgerPeriodRel exists)
							"RequisitionUsesCommitments;CalendarYearNotProperlyDefinedForTheCommitmentDate_(LineRequestedDate)"

				if (LocalCheckIfMultipleDistribution 
				and DistributionAccount.IsUsedInFinanceCodeBlockArray
				and DistributionAccount !=  LocalOriginalDistributionAcount)
					LocalCounter = 1
					for each ContractLineDistributionsRel
						if (LocalCounter = 1)
							DistributionPercent = LocalContractLineDistribution.Percent
						else
							invoke Create RequisitionLineDistribution
								fill in fields from this instance
									except invoked.DistributionAccount
									except invoked.DistributionPercent
								invoked.OverwriteDistributionCode 	= true
								invoked.DistributionAccount			= LocalOriginalDistributionAcount
								invoked.DistributionPercent 		= each.Percent
								invoked.DistributionAccount.FinanceCodeBlockArray.Block[AccountDefaultingComponentRQ.ContractLine] = each.DistributionAccount
								invoked.TransientBypassCommittedContractValidation = true
						LocalCounter += 1

		CreateRestricted is a Create Action   
			restricted
			Action Rules
				
				if (RQGeneralLedgerSystemCodeRel exists)
					LocalGeneralLedgerSystemCode = RQGeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
				if (DistributionAccount.Project entered)
					LocalPostingDate  		= RequisitionLine.RequestedDeliveryDate
			
		Update is an Update Action
			valid when (UpdateableRequisitionLine)
			Action Rules
									
				if (RQGeneralLedgerSystemCodeRel exists)
					LocalGeneralLedgerSystemCode = RQGeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
				if (DistributionAccount.Project entered)
					LocalPostingDate  = RequisitionLine.RequestedDeliveryDate
																																		
				BypassAccountEdit		= true
				if (DistributionPercent changed or DistributionQuantity changed or DistributionAmount changed)
					if (RequisitionLine.Contract entered)
						constraint (IsValidForDistribution)
							"CannotUpdateDistributionsForRequisitionLinesWithCommittedContracts"

				if (DistributionAccount changed)
					if (RequisitionLine.Contract entered)
						if (CommittedContractLineDistributionsRel exists)
							constraint (DistributionAccount = any CommittedContractLineDistributionsRel.DistributionAccount)
								"CannotChangeAccountToAnAccountThatDoesNotExistOnAssociatedCommittedContractLine"
						else		
						if (CommittedContractRel exists)
							constraint (DistributionAccount = CommittedContractRel.CommitmentAccount)
								"CannotChangeAccountToAnAccountThatDoesNotExistOnAssociatedCommittedContract"	
						
			Exit Rules
				if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
        		or  RQGeneralLedgerSystemCodeRel.EncumbranceOption.Track)
					if (DerivedDistributionAmount > 0
					and PurchasingCompanyRel.ProcurementGroup.RequisitionCommitmentDate.LineEarlyDeliveryDate)
						LocalLedger  = Company.FinanceEnterpriseGroup.CoreLedger
						LocalEndDate = DerivedEntityCalendarPeriod
						constraint (DerivedEntityCalendarPeriod entered
						and         EntityLedgerPeriodRel exists)
							"RequisitionUsesCommitments;CalendarYearNotProperlyDefinedForTheCommitmentDate_(LineRequestedDate)"
			
				invoke UpdateReportCurrencyAmountInstance			
			
				if (CurrentCommitmentExists)
					if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)
						invoke Delete BudgetEditErrorsRel
						invoke Delete HeaderBudgetEditErrorRel
						invoke FastUpdate Requisition
							invoked.BudgetEditProcessing = 0
						invoke PerformBudgetEdit
					
					if (GLCommitRel.Status.Unreleased)
						if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
			            or  RQGeneralLedgerSystemCodeRel.EncumbranceOption.Track)

							invoke MaintainUnreleasedCommitment GLCommitRel
								invoked.TransactionAmount       = DerivedCommitmentAmount
								invoked.ReportCurrencyAmount    = ReportCurrencyAmount
								invoked.TransactionDate         = DerivedEncumbranceDate
								invoked.AccountingEntity		= Company.AccountingEntity
								invoked.FinanceCodeBlock		= DistributionAccount
								invoked.CurrencyCode			= DerivedCurrencyCode
								invoked.GLEncumbranceReference	= GLEncumbranceReference
								if (not Contract entered)
									invoked.PrmAllowRebuild			= true
					else 
					if (GLCommitRel.Status.Released)
						invoke ChangeReleasedCommitment
							if (DistributionAccount != old DistributionAccount)
								invoked.PrmCodeBlockChange = true
							
		UpdateGLCommitmentIndirect is an Instance Action
			restricted
			Parameters
				PerformBudgetEdit 		is Boolean
				RemoveContractReversal 	is Boolean
				AddContractReversal 	is Boolean
				ApprovalReject          is Boolean
				EventOutputChanged      is Boolean
				PrmUpdateLine           is Boolean
				KilledQuantity          is Boolean
				PrmCancelQuantity       is a Quantity
				PrmFromJournalPosting   is Boolean
				FromPORelease           is Boolean
				FromDateChange          is Boolean
				RequisitionDateChanged	is Boolean
				FromPOReleaseAndFullyInterfaced is Boolean
			Action Rules

				LocalFromPORelease = FromPORelease

				if (ContractCommitments
				and !RemoveContractReversal
				and !AddContractReversal)


		            LocalReversalUpdateAmount           = DerivedPartialCommitmentAmount - GLCommitRel.TransactionAmount 


					invoke UpdateTransientReversalReportCurrencyAmount					
				else
				if (RemoveContractReversal)
					LocalReversalUpdateAmount           = GLCommitRel.TransactionAmount * -1
					invoke UpdateReportCurrencyAmount
				else
				if (AddContractReversal)
					LocalReversalUpdateAmount           = DerivedPartialCommitmentAmount
					invoke UpdateReportCurrencyAmount

				LocalFromJournalPosting = PrmFromJournalPosting
				if (!FromDateChange)
					invoke UpdateReportCurrencyAmountInstance


			Exit Rules
				if (RQGeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit
				and DerivedCommitmentAmount > 0
				and !ContractCommitmentsCompleteReversal
				and PrmCancelQuantity = 0)
					if (PerformBudgetEdit) 
						invoke Delete BudgetEditErrorsRel
						invoke Delete HeaderBudgetEditErrorRel
						invoke FastUpdate Requisition
							invoked.BudgetEditProcessing = 0
						invoke PerformBudgetEdit

				if (PrmCancelQuantity > 0
				and !ContractCommitments)
					LocalCancelQuantity = PrmCancelQuantity
					initialize TransientPartialCancel
					TransientCurrencyTable     											= Requisition.CurrencyTable
					TransientAccountingEntity  											= Company.AccountingEntity
					TransientExchangeDate      											= DerivedEncumbranceDate
					TransientPostingDate                    							= DerivedEncumbranceDate
					TransientFromCurrency      											= DerivedCurrencyCode
					TransientCurrencyAmount    											= DerivedCancelAmount
					TransientPartialCancel.UseDerivedCalculations    					= true
					LocalDerivedCalculationsComplete                                    = TransientPartialCancel.DerivedCalculationsComplete
					LocalDerivedCalculationsComplete                                    = TransientPartialCancel.AssignToCurrency
					invoke UpdateTemplateTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate					    		= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount   = TransientPartialCancel.FunctionalAmount.EnteredCurrencyAmount * -1	     		
						invoked.PrmReportAmounts.AlternateAmount    = TransientPartialCancel.AlternateAmount.EnteredCurrencyAmount * -1   			
						invoked.PrmReportAmounts.AlternateAmount2   = TransientPartialCancel.AlternateAmount2.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.AlternateAmount3	= TransientPartialCancel.AlternateAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ToFunctionalAmount = TransientPartialCancel.ToFunctionalAmount.EnteredCurrencyAmount * -1      		
						invoked.PrmReportAmounts.ToAlternateAmount  = TransientPartialCancel.ToAlternateAmount.EnteredCurrencyAmount * -1     		
						invoked.PrmReportAmounts.ToAlternateAmount2 = TransientPartialCancel.ToAlternateAmount2.EnteredCurrencyAmount * -1      		
						invoked.PrmReportAmounts.ToAlternateAmount3	= TransientPartialCancel.ToAlternateAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ProjectAmount		= TransientPartialCancel.ProjectAmount.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount1      = TransientPartialCancel.ReportAmount1.EnteredCurrencyAmount * -1				
						invoked.PrmReportAmounts.ReportAmount2      = TransientPartialCancel.ReportAmount2.EnteredCurrencyAmount * -1				
						invoked.PrmReportAmounts.ReportAmount3		= TransientPartialCancel.ReportAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount4		= TransientPartialCancel.ReportAmount4.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount5		= TransientPartialCancel.ReportAmount5.EnteredCurrencyAmount * -1
						invoked.PrmBusinessClassName                = "Requisition"
						invoked.PrmEditContext                      = "Cancel"
				if ((ApprovalReject
				or   KilledQuantity
				or   EventOutputChanged)
				and !ContractCommitments)


					invoke UpdateTemplateTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate					    		= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount   = GLCommitRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1	     		
						invoked.PrmReportAmounts.AlternateAmount    = GLCommitRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1   			
						invoked.PrmReportAmounts.AlternateAmount2   = GLCommitRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.AlternateAmount3	= GLCommitRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ToFunctionalAmount = GLCommitRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1      		
						invoked.PrmReportAmounts.ToAlternateAmount  = GLCommitRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1     		
						invoked.PrmReportAmounts.ToAlternateAmount2 = GLCommitRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1      		
						invoked.PrmReportAmounts.ToAlternateAmount3	= GLCommitRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ProjectAmount		= GLCommitRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount1      = GLCommitRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1				
						invoked.PrmReportAmounts.ReportAmount2      = GLCommitRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1				
						invoked.PrmReportAmounts.ReportAmount3		= GLCommitRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount4		= GLCommitRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1			
						invoked.PrmReportAmounts.ReportAmount5		= GLCommitRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1
						invoked.PrmBusinessClassName                = "Requisition"
						invoked.PrmEditContext                      = "Adjustment"

				if (RequisitionLine.IsIntraLocation
				and RequisitionLine.IsInventoryType
				and FromPORelease)		
					invoke UpdateTemplateTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate					    		= DerivedEncumbranceDate















						invoked.PrmReportAmounts.FunctionalAmount   = ((GLCommitRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount) * -1)	     		
						invoked.PrmReportAmounts.AlternateAmount    = ((GLCommitRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount) * -1)   			
						invoked.PrmReportAmounts.AlternateAmount2   = ((GLCommitRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.AlternateAmount3	= ((GLCommitRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.ToFunctionalAmount = ((GLCommitRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount) * -1)      		
						invoked.PrmReportAmounts.ToAlternateAmount  = ((GLCommitRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount) * -1)     		
						invoked.PrmReportAmounts.ToAlternateAmount2 = ((GLCommitRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount) * -1)      		
						invoked.PrmReportAmounts.ToAlternateAmount3	= ((GLCommitRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.ProjectAmount		= ((GLCommitRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount - ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.ReportAmount1      = ((GLCommitRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount) * -1)				
						invoked.PrmReportAmounts.ReportAmount2      = ((GLCommitRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount) * -1)				
						invoked.PrmReportAmounts.ReportAmount3		= ((GLCommitRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.ReportAmount4		= ((GLCommitRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount) * -1)			
						invoked.PrmReportAmounts.ReportAmount5		= ((GLCommitRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount - ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount) * -1)
						invoked.PrmBusinessClassName                = "Requisition"
						invoked.PrmEditContext                      = "Relieve Replenishment"

				if (CurrentCommitmentExists
				and !AddContractReversal
				and !RemoveContractReversal)



					if (GLCommitRel.Status.Unreleased)


						if (RequisitionDateChanged)
							LocalLedger  = Company.FinanceEnterpriseGroup.CoreLedger
							LocalEndDate = DerivedEntityCalendarPeriod
							constraint (DerivedEntityCalendarPeriod entered
							and         EntityLedgerPeriodRel exists)
								"RequisitionUsesCommitments;CalendarYearNotProperlyDefinedForTheCommitmentDate_(LineRequestedDate)<DerivedEncumbranceDate>"
						invoke MaintainUnreleasedCommitment GLCommitRel
							invoked.TransactionAmount       = DerivedCommitmentAmount
							invoked.ReportCurrencyAmount    = ReportCurrencyAmount
							invoked.TransactionDate         = DerivedEncumbranceDate
							invoked.AccountingEntity		= Company.AccountingEntity
							invoked.FinanceCodeBlock		= DistributionAccount
							invoked.CurrencyCode			= DerivedCurrencyCode
							invoked.GLEncumbranceReference	= GLEncumbranceReference
							if (not Contract entered)
								invoked.PrmAllowRebuild         = true
					else 
					if (GLCommitRel.Status.Released
					and PrmUpdateLine)
						invoke ChangeReleasedCommitment 
					else
					if (GLCommitRel.Status.Released)    



						invoke ModifyReleasedCommitment GLCommitRel in background
							run outside of action background group
							invoked.PrmRQFromContract = false
							if (!FromNonLandedAOC)
								invoked.PrmTransactionAmount    = DerivedCommitmentAmount
								invoked.PrmReportCurrencyAmount = ReportCurrencyAmount
							else 
								invoked.PrmTransactionAmount   	= 0
								initialize ReportCurrencyAmount
								invoked.PrmReportCurrencyAmount    = ReportCurrencyAmount	
							if (ApprovalReject
							or  EventOutputChanged
							or  KilledQuantity)   
								invoked.PrmDistribCanceled = true
								if (ContractCommitments)
									invoked.PrmRQFromContract = true
					else 
					if (GLCommitRel.Status.History
					and not PrmFromJournalPosting)
						invoke ChangeReleasedCommitment
						
				else 
				if (!CurrentCommitmentExists)
					invoke CreateGLCommitment
				
				if ((ContractCommitments
				or  RemoveContractReversal)
				and GLCommitRel.Status.Unreleased)


	            	invoke CreateBudgetTemplateReversal GLCommitRel
	      				invoked.PrmFEG              					= Company.FinanceEnterpriseGroup
	      				invoked.PrmUniqueID         					= Requisition.UniqueID
	      				invoked.PrmCodeBlock        					= DistributionAccount
	      				invoked.PrmGLDate           					= DerivedEncumbranceDate
	      				invoked.PrmTransAmount      					= LocalReversalUpdateAmount
	      				invoked.PrmCurrencyAmounts.FunctionalAmount     = TransientReversalUpdateReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ProjectAmount	    = TransientReversalUpdateReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ReportAmount1        = TransientReversalUpdateReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ReportAmount2        = TransientReversalUpdateReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ReportAmount3        = TransientReversalUpdateReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ReportAmount4        = TransientReversalUpdateReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.ReportAmount5        = TransientReversalUpdateReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.AlternateAmount      = TransientReversalUpdateReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.AlternateAmount2     = TransientReversalUpdateReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmCurrencyAmounts.AlternateAmount3     = TransientReversalUpdateReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmSkipBudgetRebuild                    = true				
				
				AddContractReversal 	= false
				RemoveContractReversal 	= false
				
				if (KilledQuantity)   
					invoke UpdateTemplateTotals BudgetTemplate


						invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate					    		= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount   = GLCommitRel.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount    		
						invoked.PrmReportAmounts.AlternateAmount    = GLCommitRel.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount    			
						invoked.PrmReportAmounts.AlternateAmount2   = GLCommitRel.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount			
						invoked.PrmReportAmounts.AlternateAmount3	= GLCommitRel.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount			
						invoked.PrmReportAmounts.ToFunctionalAmount = GLCommitRel.ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount      		
						invoked.PrmReportAmounts.ToAlternateAmount  = GLCommitRel.ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount      		
						invoked.PrmReportAmounts.ToAlternateAmount2 = GLCommitRel.ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount      		
						invoked.PrmReportAmounts.ToAlternateAmount3	= GLCommitRel.ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount			
						invoked.PrmReportAmounts.ProjectAmount		= GLCommitRel.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount 			
						invoked.PrmReportAmounts.ReportAmount1      = GLCommitRel.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount 				
						invoked.PrmReportAmounts.ReportAmount2      = GLCommitRel.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount 				
						invoked.PrmReportAmounts.ReportAmount3		= GLCommitRel.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount 			
						invoked.PrmReportAmounts.ReportAmount4		= GLCommitRel.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount 			
						invoked.PrmReportAmounts.ReportAmount5		= GLCommitRel.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount 				
						invoked.PrmBusinessClassName                = "Requisition"
						invoked.PrmEditContext                      = "CancelBackorder"
		
		UpdateReportCurrencyAmount is an Update Action   
			restricted
			
			Action Rules
			
				if (DistributionAccount.Project entered)
					LocalPostingDate  		= RequisitionLine.RequestedDeliveryDate
			
		UpdateReportCurrencyAmountForMigrate is an Update Action   
			restricted
			
			Action Rules
			
				if (DistributionAccount.Project entered)
					LocalPostingDate  		= RequisitionLine.RequestedDeliveryDate
			
		UpdateFast is an Update Action
			restricted
			bypass field rules
			
		UpdateReportCurrencyAmountInstance is an Instance Action
			restricted
			
			Action Rules
				initialize ReportCurrencyAmount
				TransientCurrencyTable         						= Requisition.CurrencyTable
				TransientAccountingEntity      						= Company.AccountingEntity
				TransientExchangeDate          						= DerivedEncumbranceDate
				TransientFromCurrency          						= DerivedCurrencyCode
				TransientCurrencyAmount                         	= DerivedCommitmentAmount
				ReportCurrencyAmount.ReportAmount1.ToCurrency       = Company.FinanceEnterpriseGroup.ReportCurrencyOne
				ReportCurrencyAmount.ReportAmount2.ToCurrency       = Company.FinanceEnterpriseGroup.ReportCurrencyTwo
				ReportCurrencyAmount.ReportAmount3.ToCurrency       = Company.FinanceEnterpriseGroup.ReportCurrencyThree
				ReportCurrencyAmount.ReportAmount4.ToCurrency       = Company.FinanceEnterpriseGroup.ReportCurrencyFour
				ReportCurrencyAmount.ReportAmount5.ToCurrency       = Company.FinanceEnterpriseGroup.ReportCurrencyFive
				ReportCurrencyAmount.UseDerivedCalculations         = true
				LocalForceCalculation 	       						= ReportCurrencyAmount.DerivedCalculationsComplete				

		UpdateTransientReversalReportCurrencyAmount is an Instance Action
			restricted
			
			Action Rules
				initialize TransientReversalUpdateReportCurrencyAmount
				TransientCurrencyTable         												= Requisition.CurrencyTable
				TransientAccountingEntity      												= Company.AccountingEntity
				TransientExchangeDate          												= DerivedEncumbranceDate
				TransientPostingDate                                						= DerivedEncumbranceDate
				TransientFromCurrency          												= DerivedCurrencyCode
				TransientCurrencyAmount                         							= LocalReversalUpdateAmount
				TransientReversalUpdateReportCurrencyAmount.ReportAmount1.ToCurrency       	= Company.FinanceEnterpriseGroup.ReportCurrencyOne
				TransientReversalUpdateReportCurrencyAmount.ReportAmount2.ToCurrency       	= Company.FinanceEnterpriseGroup.ReportCurrencyTwo
				TransientReversalUpdateReportCurrencyAmount.ReportAmount3.ToCurrency       	= Company.FinanceEnterpriseGroup.ReportCurrencyThree
				TransientReversalUpdateReportCurrencyAmount.ReportAmount4.ToCurrency       	= Company.FinanceEnterpriseGroup.ReportCurrencyFour
				TransientReversalUpdateReportCurrencyAmount.ReportAmount5.ToCurrency      	= Company.FinanceEnterpriseGroup.ReportCurrencyFive
				TransientReversalUpdateReportCurrencyAmount.UseDerivedCalculations         	= true
				LocalForceCalculation 	       												= TransientReversalUpdateReportCurrencyAmount.DerivedCalculationsComplete		

		UpdateDuringRelease is an Update Action
			restricted
		
		ChangeReleasedCommitment is an Instance Action
			restricted
			
			Parameters
				PrmCodeBlockChange       is Boolean
				
			Exit Rules
				invoke ChangeReleasedCommitment GLCommitRel


					if (PrmCodeBlockChange)
               			invoked.PrmCodeBlock                        = DistributionAccount
               			invoked.PrmDimensionCode					= DistributionAccount.DimensionCode		
					invoked.PrmTransDate                            = DerivedEncumbranceDate
					invoked.PrmChangedCurrAmount.FunctionalAmount 	= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ProjectAmount		= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ReportAmount1      = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ReportAmount2      = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ReportAmount3      = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ReportAmount4      = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ReportAmount5      = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.AlternateAmount    = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.AlternateAmount2   = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.AlternateAmount3   = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					invoked.PrmLastTransAmount       				= DerivedCommitmentAmount
					invoked.PrmChangedCurrAmount.ToFunctionalAmount = ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ToAlternateAmount  = ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ToAlternateAmount2 = ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount
					invoked.PrmChangedCurrAmount.ToAlternateAmount3 = ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount
		
		Delete is a Delete Action
			valid when (UpdateableRequisitionLine)
			
			Entrance Rules
				if (!LocalFromDeleteAndCreate)
					constraint (IsValidForDistribution)
						"CannotDeleteDistributionsForRequisitionLinesWithCommittedContracts"
				invoke Purge GLCommitRel
					if (ContractCommitments)
						invoked.PrmRelatedCommitment = true
				invoke Delete BudgetEditErrorsRel
				










		PurgeGLCommitment is an Instance Action 
			restricted
			
			Action Rules

				invoke Delete BudgetEditErrorsRel
				
				if (GLCommitRel.Status.Released)
					
					invoke UpdateTemplateTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate					    		= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount   = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount * -1	     		
						invoked.PrmReportAmounts.AlternateAmount    = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount * -1    			
						invoked.PrmReportAmounts.AlternateAmount2   = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount * -1     			
						invoked.PrmReportAmounts.AlternateAmount3	= ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount * -1 			
						invoked.PrmReportAmounts.ToFunctionalAmount = ReportCurrencyAmount.ToFunctionalAmount.EnteredCurrencyAmount * -1       		
						invoked.PrmReportAmounts.ToAlternateAmount  = ReportCurrencyAmount.ToAlternateAmount.EnteredCurrencyAmount * -1      		
						invoked.PrmReportAmounts.ToAlternateAmount2 = ReportCurrencyAmount.ToAlternateAmount2.EnteredCurrencyAmount * -1       		
						invoked.PrmReportAmounts.ToAlternateAmount3	= ReportCurrencyAmount.ToAlternateAmount3.EnteredCurrencyAmount * -1 			
						invoked.PrmReportAmounts.ProjectAmount		= ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * -1 			
						invoked.PrmReportAmounts.ReportAmount1      = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount * -1 				
						invoked.PrmReportAmounts.ReportAmount2      = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount * -1 				
						invoked.PrmReportAmounts.ReportAmount3		= ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount * -1 			
						invoked.PrmReportAmounts.ReportAmount4		= ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount * -1 			
						invoked.PrmReportAmounts.ReportAmount5		= ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount * -1 								
						invoked.PrmBusinessClassName                = "Requisition"
						invoked.PrmEditContext                      = "Purge"		
			Exit Rules
				
				invoke Purge GLCommitRel
					if (ContractCommitments)
						invoked.PrmRelatedCommitment = true		
		
		CreateGLCommitment is an Instance Action
			restricted
			Parameters 
				FromBudgetRebuild is Boolean
			
			Exit Rules
				invoke CreateCommitment GLCommit

					invoked.HeaderUniqueID 					= Requisition.UniqueID
					invoked.AccountingEntity				= Company.AccountingEntity
					invoked.FinanceEnterpriseGroup			= Company.ItemGroup.FinanceEnterpriseGroup
					invoked.System							= "RQ"
					invoked.FinanceCodeBlock				= DistributionAccount
					invoked.CurrencyCode					= DerivedCurrencyCode
					invoked.TransactionAmount				= DerivedCommitmentAmount
					invoked.ReportCurrencyAmount			= ReportCurrencyAmount     
					invoked.TransactionDate					= DerivedEncumbranceDate
					invoked.OriginatingTransaction			= reference to this instance
					invoked.TransBusinessObjectRef			= reference to Requisition
					invoked.GLEncumbranceReference			= GLEncumbranceReference
					if (FromBudgetRebuild
					and ContractCommitmentsCompleteReversal)
						invoked.TransientSkipRebuild = true
					if (!FromBudgetRebuild)
						invoked.PrmAllowRebuild = true
		
		PerformBudgetEdit is an Instance Action
			restricted
			
			Action Rules
				
				if (!ContractCommitments)
					invoke CheckTransaction BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup   		= Company.ItemGroup.FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup					= UniqueID
						invoked.PrmHeaderUniqueID                   = Requisition.UniqueID
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate								= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount 	= ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ProjectAmount      = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount1      = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount2      = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount3      = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount4      = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount5      = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount    = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount2   = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount3   = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
						
				if (ContractCommitmentsEditTax
				or  ContractCommitmentsEditAOC)
		            LocalPartialBudgetEdit				           = DerivedPartialCommitmentAmount  
					invoke UpdateReportCurrencyAmount
					
    		Exit Rules	
    			
    			if (ContractCommitmentsEditTax
				or  ContractCommitmentsEditAOC)
    				invoke CheckTransaction BudgetTemplate
    					invoked.PrmFinanceEnterpriseGroup   		= Company.ItemGroup.FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup					= UniqueID
						invoked.PrmTransactionCodeBlock				= DistributionAccount
						invoked.PrmDate								= DerivedEncumbranceDate
						invoked.PrmReportAmounts.FunctionalAmount 	= TransientPartialBudgetEdit.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ProjectAmount      = TransientPartialBudgetEdit.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount1      = TransientPartialBudgetEdit.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount2      = TransientPartialBudgetEdit.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount3      = TransientPartialBudgetEdit.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount4      = TransientPartialBudgetEdit.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount5      = TransientPartialBudgetEdit.ReportAmount5.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount    = TransientPartialBudgetEdit.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount2   = TransientPartialBudgetEdit.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount3   = TransientPartialBudgetEdit.AlternateAmount3.EnteredCurrencyAmount
    			
    			if (BudgetErrorExists)
					confirmation required   
                    	"Warning:BudgetsHaveBeenExceeded;ViewDetailsInBudgetErrorsPanel;IfNotAddressed,ReleaseWillNotBeAllowed;Continue?"

		DeleteAndCreate is an Instance Action  
			restricted						

		CreateCommitmentOnly is an Instance Action
			Parameters
				FromBudgetRebuild is Boolean
			restricted
			
			Action Rules
			
				if (!FromBudgetRebuild)
					invoke UpdateReportCurrencyAmountInstance
				
				invoke CreateGLCommitment
					invoked.FromBudgetRebuild = FromBudgetRebuild
				
			Exit Rules	
				if (!ContractCommitmentsCompleteReversal
				and !FromBudgetRebuild)
					invoke PerformBudgetEdit 
				if  (ContractCommitmentsCompleteReversal
				and !FromBudgetRebuild)
					invoke ReverseBudgetTemplate 				

		ReverseBudgetTemplate is an Instance Action
			restricted
			
			Action Rules
		






				invoke CreateBudgetTemplateReversal GLCommitRel
	  				invoked.PrmFEG              					= Company.FinanceEnterpriseGroup
	  				invoked.PrmUniqueID         					= Requisition.UniqueID
	  				invoked.PrmCodeBlock        					= DistributionAccount
	  				invoked.PrmGLDate           					= DerivedEncumbranceDate
	  				invoked.PrmTransAmount      					= DerivedCommitmentAmount
	  				invoked.PrmCurrencyAmounts.FunctionalAmount     = ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ProjectAmount	    = ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount1        = ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount2        = ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount3        = ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount4        = ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.ReportAmount5        = ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount      = ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount2     = ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
					invoked.PrmCurrencyAmounts.AlternateAmount3     = ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
					invoked.PrmSkipBudgetRebuild                    = true		
					
		DeleteBudgetErrors is an Instance Action
			restricted
			
			Action Rules
				invoke Delete BudgetEditErrorsRel		
		
		MigrateRQCommitments is a Set Action
			restricted
			completion message is "<CompletionMessage>"
			run in background	 

			Parameters
				PrmRQCompany			is a InventoryCompany

			Parameter Rules
											
			Local Fields
				LocalTranDate				is a ExchangeDate
				LocalTranAmount				is a CurrencyAmount
				CompletionMessage			is Alpha 150
				LocalGLCommitView			is a GLCommit view
				LocalMigrationResultView	is a MigrationResult view
				LocalErrorMessage 			is Alpha 150
				LocalErrorOccurred			is Boolean
				LocalMigrationJobType		is a MigrationJobType

			Instance Selection
				where (((Company		= PrmRQCompany
				and		 PrmRQCompany entered)
				or	    (!PrmRQCompany entered))
				and	    (!GLCommitRel exists
				and      RQValidForCommitment))

			Sort Order
				Company
				GltObjId
				
			Action Rules								
				Empty Set Rules
					CompletionMessage = "RequisitionCommitmentMigration;NoRecordsFoundToProcess"

					LocalMigrationJobType = MigrationJobType.MigrateRequisitionCommitments
					include Migration.CreateMigrationResult
						replace POCompany with blank
						replace RQCompany with PrmRQCompany
						replace ContractGroup with blank
						replace Contract with blank
						replace CashManagementGroup with blank
						replace PayablesCompany with blank
					invoke SetAsCompleted LocalMigrationResultView.MigrationResult
				
				Set Rules
					Entrance Rules
						LocalMigrationJobType = MigrationJobType.MigrateRequisitionCommitments
						include Migration.CreateMigrationResult
							replace POCompany with blank
							replace RQCompany with PrmRQCompany
							replace ContractGroup with blank
							replace Contract with blank
							replace CashManagementGroup with blank
							replace PayablesCompany with blank

					Exit Rules
						invoke SetAsCompleted LocalMigrationResultView.MigrationResult
							
				Instance Rules
					initialize LocalTranAmount
					LocalTranDate			= DerivedEncumbranceDate
					LocalErrorOccurred			= false

					if (GLCommitxRel exists
					and GLCommitxRel.TransactionAmount > 0)
						LocalTranAmount			= GLCommitxRel.TransactionAmount
					else
						if (!GltObjId entered
						and ACCommitxRel exists
						and ACCommitxRel.TransactionAmount > 0)
							LocalTranAmount		= ACCommitxRel.TransactionAmount
						else
							if (Requisition.IsUnreleased)
								LocalTranAmount		= DerivedCommitmentAmount
					if (LocalTranDate entered
					and LocalTranAmount entered)
						invoke UpdateReportCurrencyAmountInstance	
						invoke CreateCommitment GLCommit
							assign result to LocalGLCommitView
							resume on error
								LocalErrorMessage 					= error message
								LocalErrorOccurred					= true
							invoked.HeaderUniqueID 					= Requisition.UniqueID
							invoked.AccountingEntity				= Company.AccountingEntity
							invoked.FinanceEnterpriseGroup			= Company.ItemGroup.FinanceEnterpriseGroup
							invoked.System							= "RQ"
							invoked.FinanceCodeBlock				= DistributionAccount
							invoked.CurrencyCode					= DerivedCurrencyCode
							invoked.TransactionAmount				= LocalTranAmount	
							invoked.ReportCurrencyAmount			= ReportCurrencyAmount     
							invoked.TransactionDate					= LocalTranDate		
							invoked.OriginatingTransaction			= reference to this instance
							invoked.TransBusinessObjectRef			= reference to Requisition
							invoked.GLEncumbranceReference			= GLEncumbranceReference
							if (GLCommitxRel exists
							or  ACCommitxRel exists)
								invoked.TransientMigrateAsReleased	= true
							else
								invoked.TransientMigrateAsReleased	= false
					
						include Migration.CreateMigrationResultDetail
	
		Purge is a Purge Action
			restricted

		SplitFESDistributions is a Set Action
			default label is "FrontEndSplitDistributions"
			restricted
			Parameters
				PrmCompany					is an InventoryCompany
					default label is "Company"
				PrmRequisition				is a Requisition
					default label is "Requisition"
				PrmRequisitionLine			is a RequisitionLine
					default label is "RequisitionLine"
			Parameter Rules
				PrmCompany
					required
				PrmRequisition
					required
				PrmRequisitionLine
					required
			Local Fields
				LocalRemainingAmount				is an InternationalAmount
				LocalRemainingPercent				is a Percent
				LocalRemainingQuantity				is like Quantity
					primitive decimal size is RequisitionLine.Item.NumberOfDecimalsQuantity
				LocalRQLineDistributionView			is a RequisitionLineDistribution view
			Instance Selection
				where (Company = PrmCompany
				and Requisition = PrmRequisition
				and RequisitionLine = PrmRequisitionLine
				and DerivedOriginalDistributionAmount != 0
				and DistributionAccount.Project entered
				and !DistributionAccount.Project.ExcludeFromFES
				and DistributionAccount.Project.first FESProjectShadowContractRel.SummaryProject.ProjectContract.FrontEndSplits
				and not FromNonLandedAOC
				and not CreatedByFES)
			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						LocalFEGtext		= PrmCompany.FinanceEnterpriseGroup
        				LocalDerivedFESKey	= "RQ-"+PrmCompany+"-"+PrmRequisition+"-"+PrmRequisitionLine
						invoke Purge FESDistributionsByKeyLocalRel
					Exit Rules
						LocalFEGtext		= PrmCompany.FinanceEnterpriseGroup
        				LocalDerivedFESKey	= "RQ-"+PrmCompany+"-"+PrmRequisition+"-"+PrmRequisitionLine
						invoke Purge FESDistributionsByKeyLocalRel
				Instance Rules
					LocalFEGtext		= PrmCompany.FinanceEnterpriseGroup
					LocalDerivedFESKey	= "RQ-"+PrmCompany+"-"+PrmRequisition+"-"+PrmRequisitionLine
					invoke SplitDistribution FrontEndSplitDistributions in foreground
						invoked.PrmFinanceEnterpriseGroup 		= Company.FinanceEnterpriseGroup
						invoked.PrmAccountingEntity				= Company.AccountingEntity
						invoked.PrmDistribution					= RequisitionLineDistribution
						invoked.PrmDerivedFESKey				= LocalDerivedFESKey
						invoked.PrmDistributionAmount			= DerivedOriginalDistributionAmount
						invoked.PrmDistributionQuantity			= DistributionQuantity
						invoked.PrmDistributionPercent			= DistributionPercent
						invoked.PrmDistributionAmountWithTax	= DerivedCommitmentAmount
						invoked.PrmTransactionDate				= DistributionAccount.TransactionDate
						invoked.PrmPostingDate					= DistributionAccount.PostingDate
						invoked.PrmTransactionCurrencyCode		= RequisitionLine.TransactionCurrencyCode
						invoked.PrmDistributionBy				= RequisitionLine.DistributionBy
						invoked.PrmNumberOfDecimalsQuantity		= RequisitionLine.Item.NumberOfDecimalsQuantity
						invoked.PrmGeneralLedgerSystemCode		= RQGeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
						invoked.PrmTransactionCodeBlock			= DistributionAccount
					if(FESDistByDistributionRel exists)
						initialize LocalRemainingPercent
						initialize LocalRemainingQuantity
						initialize LocalRemainingAmount
						for each FESDistByDistributionRel
							invoke Create RequisitionLineDistribution
								assign result to LocalRQLineDistributionView
								fill in fields from RequisitionLine
								invoked.DistributionAccount			= each.CodeBlock
								invoked.AssetInformation        	= RequisitionLineDistribution.AssetInformation
								invoked.CreatedByFES				= true
								if(last FESDistByDistributionRel.FrontEndSplitDistributions = each.FrontEndSplitDistributions)
									if (RequisitionLine.DistributionBy.ByAmount)
										LocalRemainingAmount 					= LocalRemainingAmount + each.FESAmount
										invoked.DistributionAmount				= each.FESAmount + (DistributionAmount - LocalRemainingAmount)
									else
										if(RequisitionLine.DistributionBy.ByPercent)
											LocalRemainingPercent 				= LocalRemainingPercent + each.FESPercent
											invoked.DistributionPercent			= each.FESPercent + (DistributionPercent - LocalRemainingPercent)
										else
											LocalRemainingQuantity				= LocalRemainingQuantity + each.FESQuantity
											invoked.DistributionQuantity		= each.FESQuantity + (DistributionQuantity - LocalRemainingQuantity)
								else
									if (RequisitionLine.DistributionBy.ByAmount)
										invoked.DistributionAmount				= each.FESAmount
										LocalRemainingAmount 					= LocalRemainingAmount + each.FESAmount
									else
										if(RequisitionLine.DistributionBy.ByPercent)
											invoked.DistributionPercent			= each.FESPercent
											LocalRemainingPercent 				= LocalRemainingPercent + each.FESPercent
										else
											invoked.DistributionQuantity		= each.FESQuantity
											LocalRemainingQuantity				= LocalRemainingQuantity + each.FESQuantity
						invoke Delete

		DeleteFrontEndSplitDistributions is a Set Action
			restricted
			Parameters
				PrmCompany					is an InventoryCompany
					default label is "Company"
				PrmRequisition				is a Requisition
					default label is "Requisition"
				PrmRequisitionLine			is a RequisitionLine
					default label is "RequisitionLine"
			Parameter Rules
				PrmCompany
					required
				PrmRequisition
					required
				PrmRequisitionLine
					required
			Instance Selection
				where (Company = PrmCompany
				and Requisition = PrmRequisition
				and RequisitionLine = PrmRequisitionLine
				and CreatedByFES)
			Action Rules
				Empty Set Rules

				Instance Rules
					invoke Delete
