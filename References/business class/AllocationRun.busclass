AllocationRun is a BusinessClass
    owned by Allocations
    prefix is ALLRN

    Ontology
    	symbolic key is AllocationRun

    Persistent Fields

		AllocationControl
		AllocationSourceSystem
		Allocation
        AllocationGroup
        PostingDate
        FromStep			is a AllocationStepNumber
        ToStep				is a AllocationStepNumber
        AllocationPeriod	is a GeneralLedgerCalendarPeriod
        	delete ignored
        
        LastTransaction		is Numeric 8
        	disable Auditing
        CurrentStepNumber	is a AllocationStepNumber
        	disable Auditing
        ErrorCount			is Numeric 6
        	disable Auditing
        Status				is Numeric 2
            States
                Started				value is 0
                Completed			value is 1
                Failed				value is 2
                JournalizeInProcess	value is 3
                Journalized			value is 4
                PreparingForEdit	value is 5
                EditInProgress		value is 6
                DeleteInProgress	value is 7
                Finalized			value is 8
                Canceled			value is 9
				InterfaceInProgress		value is 11
				Interfaced				value is 12
				InterfaceFailed			value is 13

                
        AsyncActionRequest
        	delete ignored 
        	
        Currency
        CurrencyTable
        GenerateListingData	is Boolean
        RetainSourceValues  is Boolean
        GenerateSourceValue is Boolean
        JournalizeIfComplete	is Boolean

#ifdef module truecost   
		TrueCostConfiguration
		UnitCostDriver						is a TrueCostDriver
		CostBehaviorSummaryStatusGenerated	is Boolean
#endif
#ifndef module truecost 
		TrueCostConfiguration	is like FinanceEnterpriseGroup  
		UnitCostDriver			is Alpha 25
#endif
        UseCapacityLedger				is Boolean	
      	PublishForBirstReport			is Boolean  
		CollectingReconciliationData	is Boolean
		TotalsCalculated				is Boolean
        CostsStatus				is Numeric 1
            States
                None				value is 0
 				Generating			value is 1
 				Deleting			value is 2
 				Ready				value is 3
 		IndirectCoreWithoutCostObjects	is a TotalAmount
		IndirectCoreWithCostObjects		is a TotalAmount
		DirectCoreWithoutCostObjects	is a TotalAmount
		DirectActualsWithCostObjects	is a TotalAmount 
		DirectActualsTotal				is a TotalAmount
		AutoReverseDate       			is Date
		RunName		 					is AlphaUpper 20
		RunDescription	  				is Alpha 60
		RunStartDate					is Date
		RunEndDate						is Date
		MultiMonthAllocation			is Boolean
		ReverseOriginalJournal			is Boolean
		ErrorMessage					is Text
		AllocationSnapshot

		ListingReport					is BinaryDocument
		CalculationReport				is BinaryDocument

		ReportGenerated					is Boolean
			restricted
			default label is untranslatable
		DisplayListingReportDetails		is Boolean
			restricted

		RunEndTimeStamp					is TimeStamp
			default label is "RunEndDate_/Time"
        ListingReportOnly               is Boolean
            protected
		NumberOfBatches					is Numeric size 3
			protected

    Context Fields
        AllocationListingReport

	Sets
		ByRunDescending
			Sort Order
				FinanceEnterpriseGroup
				AllocationRun descending
    	ByUniqueID
    		indexed
    		Sort Order
    			UniqueID

    Relations
		AllocationRunJobRel
			one-to-one relation to AllocationRunJob
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.AllocationRun				= AllocationRun
				related.AllocationRunJob			= LocalAllocationRunJob
		
		AllocationRunJobByTypeRel
			one-to-many relation to AllocationRunJob
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.AllocationSourceSystem		= AllocationSourceSystem
				related.AllocationControl		 	= AllocationControl
				related.AllocationRun				= AllocationRun
            Instance Selection
                where (related.JobType              = LocalAllocationRunJobType)

        AllocationListingReportRel
            one-to-one relation to AllocationListingReport
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup      = FinanceEnterpriseGroup
                related.AllocationSourceSystem      = AllocationSourceSystem
                related.AllocationControl           = AllocationControl
                related.AllocationListingReport     = AllocationListingReport
				
		AllocationLineSourceValueWithAmountsRel is a AllocationLineSourceValue set
			Instance Selection
				where (related.AllocableAmount entered or related.CurrencyAmountsEntered)

   		AllocationTransactionDetailRel is a AllocationTransactionDetail set
        AllocationRunJobErrorRel is a AllocationRunJob set
            Instance Selection
				where(not related.Status.Finished
				and  (not related.Status.NotStarted or not related.JobType.RunLine)
				and   related.HasError)

   		AutoReverseTransactionDetailRel is an AllocationTransactionDetail set
   			Instance Selection
   				where (related.AutoReverse)
   		AllocationLineSourceRel is a AllocationLineSource set
   		AllocationLineSourceValueRel is a AllocationLineSourceValue set
   		AllocationLineValueRel is a AllocationLineValue set
   		AllocationLineTempOverrideRel is a AllocationLineTempOverride  set
		AllocationsSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.GeneralLedgerSystemCode	= DerivedSystem	
		
		AllocationTransactionDetailsForReportRel 
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByAllocationAndStep)

		AllocationDetailByStepHeaderForReportRel
			one-to-many relation to AllocationDetailByStepHeader	
			Field Mapping uses ByAllocationRunAllocationAndStep
				related.FinanceEnterpriseGroup						= FinanceEnterpriseGroup
				related.AllocationDetailByStepHeader.AllocationRun 	= AllocationRun
		
		AllocationTransactionDetailsForReportCurrencyTotalRel 
			one-to-many relation to AllocationJournalizedDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByCurrencyReportTotal)		
		
		AllocationTransactionDetailsForReportCurrencyRel 
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByCurrencyReportTotal)

        AllocationDetailByCurrencyAndRunRel
            one-to-many relation to AllocationDetailByCurrency
            Field Mapping uses ByAllocationStepAndCurrency
				related.FinanceEnterpriseGroup					    = FinanceEnterpriseGroup
                related.AllocationDetailByCurrency.AllocationRun    = AllocationRun
			Instance Selection
				where (related.AllocationDetailByCurrency.Allocation not entered
                and    related.AllocationDetailByCurrency.AllocationStep not entered)       
		
		AllocationTransactionJournalizedDetailsForReportRel
			one-to-many relation to AllocationJournalizedDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByAllocationAndStep)
		
		AllocationTransactionJournalizedDetailsForReportCurrencyTotalRel 
			one-to-many relation to AllocationTransactionDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByCurrencyReportTotal)
				
		AllocationTransactionJournalizedDetailsForReportCurrencyRel
			one-to-many relation to AllocationJournalizedDetail
			Field Mapping uses ByAllocationAndStep
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun
			Instance Selection
				where (related.IsGroupByCurrencyReportTotal)		
		
		AllocationsForAllocationListingReportRel
			one-to-many relation to Allocation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AllocationSourceSystem	= AllocationSourceSystem
				related.AllocationControl		= AllocationControl
			Instance Selection
				where ((related.Allocation		= Allocation
				or	Allocation not entered)
				and (related.AllocationGroup	= AllocationGroup
				or AllocationGroup not entered))
		
		BudgetEditErrorRel
			one-to-many relation to BudgetEditError
			Field Mapping uses ByBudgetGroup
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.BudgetEditError.BudgetEditGroup		= UniqueID

		AllocationRunCurrencyRel is an AllocationRunCurrency set

		BudgetChangeOrderRel
			one-to-many relation to BudgetChangeOrder
			Field Mapping uses symbolic key
			Instance Selection
				where (related.UniqueID = any AllocationRunCurrencyRel.BudgetChangeOrder.UniqueID)				

#ifdef module truecost
		CostsRel
			one-to-many relation to TrueCostUnitCost
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= FinanceEnterpriseGroup
				related.TrueCostAllocationControl	= AllocationControl.TrueCostAllocationControl
				related.GeneralLedgerCalendarPeriod	= AllocationPeriod
				related.AllocationRun				= AllocationRun
		TrueCostPeriodRunRel
			one-to-one relation to TrueCostPeriodRun
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= FinanceEnterpriseGroup
				related.TrueCostAllocationControl	= AllocationControl.TrueCostAllocationControl
				related.GeneralLedgerCalendarPeriod	= AllocationPeriod
				related.AllocationRun				= AllocationRun
				related.TrueCostPeriodRun			= UseCapacityLedger+1
		OtherTrueCostPeriodRunRel
			one-to-many relation to TrueCostPeriodRun
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= FinanceEnterpriseGroup
				related.TrueCostAllocationControl	= AllocationControl.TrueCostAllocationControl
				related.GeneralLedgerCalendarPeriod	= AllocationPeriod
			Instance Selection						
				where (related.TrueCostPeriodRun	= UseCapacityLedger+1)
		TrueCostCapacityVolumesRel
			one-to-many relation to TrueCostCapacityVolumes
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= FinanceEnterpriseGroup
				related.TrueCostAllocationControl	= AllocationControl.TrueCostAllocationControl
				related.AllocationRun				= AllocationRun
		TrueCostCapacityVolumesUpdateRel
			one-to-many relation to TrueCostCapacityVolumes
			Field Mapping uses symbolic key
				related.TrueCostConfiguration		= FinanceEnterpriseGroup
				related.TrueCostAllocationControl	= AllocationControl.TrueCostAllocationControl
				related.AllocationRun				= AllocationRun
			Instance Selection
				where (related.Update				= true)
				
		TrueCostCostBehaviorSummaryRel
			one-to-many relation to TrueCostCostBehaviorSummary
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AllocationRun				= AllocationRun
				
#endif
								
		GeneralLedgerJournalControlRel
			one-to-many relation to GeneralLedgerJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
			Instance Selection
   				where  (related.JournalizeGroupResult	= AllocationRun
				and 	related.System					= AllocationSourceSystem)
		
		AllocationRunPublishedForBirstRel
			one-to-many relation to AllocationRun
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
			Instance Selection
				where(related.AllocationControl			= AllocationControl
				and   related.AllocationSourceSystem	= AllocationSourceSystem
				and   related.UseCapacityLedger			= UseCapacityLedger
				and   related.AllocationPeriod			= AllocationPeriod
				and	  (related.Status.Finalized
				or	  related.Status.Journalized)
				and   related.PublishForBirstReport		= true)				
#ifdef module cb			
		CashCodeFundEditRel
			one-to-many relation to CashCodeFundEdit
			Field Mapping uses ByOriginatingTransaction
		 		related.CashManagementGroup		= FinanceEnterpriseGroup
		  		related.OriginatingTransaction	= reference to this instance
#endif


		AllocationTransactionDetailByAllocationRunRel
			one-to-many relation to AllocationTransactionDetail
			delete cascades
			Field Mapping uses ByAllocationRun
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AllocationRun = AllocationRun	

		GeneralLedgerCalendarPeriodEndDateRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < LocalTransactionDetailPostingDate)		

	Local Fields
		AsyncId							is a AsyncActionRequest
		LocalAccountingEntity			is an AccountingEntity
		LocalAllocationRunJobView		is an AllocationRunJob view
		LocalAllocationRunJob			is an AllocationRunJob
		LocalAllocationRunJobType		is an AllocationRunJobType
		LocalTransactionCount             is Numeric 6
		LocalTransactionDetailPostingDate is a PostingDate
		
	Field Rules

	Conditions
		AllocationLoggingEnabled
			restricted
			when (AllocationControl.AllocationLoggingEnabled)

		NoTransactions
			when (Status.Failed
			and instance count of AllocationTransactionDetail set = 0)
		NoJournalizedTransactions
			when (!Status.Journalized 
			and  !(Status.Canceled and WithGLJournal))
		DisplayTransactionPanel
			restricted
			when (NoJournalizedTransactions and AllocationControl.Type.Actuals)
		DisplayBudgetTransactionPanel
			restricted
			when (AllocationControl.Type.Budget
			and   not Status.Interfaced)
		DisplayJournalizedTransactionPanel
			restricted
			when (not NoJournalizedTransactions and AllocationControl.Type.Actuals)
		ShowJournalizedCalculationReportDrill
			when (!NoJournalizedTransactions
			and GenerateListingData)
		ShowNonJournalizedCalculationReportDrill
			when (NoJournalizedTransactions
			and GenerateListingData)
		BudgetErrorsExist
			restricted
			when (BudgetEditErrorRel exists
			and   Status.Completed)
		IsTrueCost
			restricted
			when (AllocationSourceSystem = AllocationSourceSystem.TrueCost)
		Finished
			restricted
			when (Status >= Status.Completed)
		CanDeleteCompletedRun			
			when (!IsTrueCost
			or CostsStatus.Ready
			or CostsStatus.None)
		CanGetReconciliationData 
 			when (IsTrueCost
 			and (AllocationRun not entered)
			and (Status=Status.Completed or Status=Status.Finalized)
 			and !CollectingReconciliationData) 
		ShowReconciliation
			restricted
			when (IsTrueCost
 			and AllocationRun not entered
			and Finished)
		ShowCosts
			restricted
			when (IsTrueCost
			and !CostsStatus.None)
		CanGenerateCosts
			restricted
			when (IsTrueCost
			and (AllocationRun not entered)
			and (Status=Status.Completed or Status=Status.Finalized)
			and CostsStatus.None)
		CanRemoveCosts
			when (IsTrueCost
			and Status.Completed
			and AllocationRun not entered
			and (CostsStatus.Ready
			or CostsStatus.Generating))
		CanFinalize
			when (IsTrueCost
			and Status.Completed
			and CostsStatus.Ready)
		HasFinalized
			restricted
			when (Status > Status.Failed
			and !Status.DeleteInProgress)	
		ReverseJournalize
			restricted
			when (not IsTrueCost
			and   AllocationControl.Type.Actuals
			and   AutoReverseTransactionDetailRel exist)
		NonReverseJournalize
			restricted
			when (not IsTrueCost
			and   AllocationControl.Type.Actuals 	
			and   not AutoReverseTransactionDetailRel exist)
#ifdef module truecost
		Reconciled
			restricted
			when (TotalsCalculated
			and DirectActualsTotal = TotalCoreWithoutCostObjects)
		CanGenerateCostBehaviorSummary
			when (IsTrueCost
			and !CostBehaviorSummaryStatusGenerated
			and AllocationRun not entered
			and (Status.Completed 
			or Status.Journalized))
#endif
		WithGLJournal
			restricted
			when (GeneralLedgerJournalControlRel exists)
		NoGLJournal
			restricted
			when (CanDeleteCompletedRun
			and GeneralLedgerJournalControlRel not exists)
		CanceledOrJournalizedWithGLJournal
			restricted
			when (WithGLJournal
			and  (Status.Canceled or Status.Journalized))
		
		IsForBirstPublishing
			restricted
			when(IsTrueCost
			and AllocationRun not entered
			and (Status.Journalized 
			or   Status.Finalized)
			and not PublishForBirstReport)
		
		IsForBirstUnpublishing
			restricted
			when(IsTrueCost
			and AllocationRun not entered
			and (Status.Journalized 
			or   Status.Finalized)
			and PublishForBirstReport)
		WithAllocationSnapshot
			restricted
			when (AllocationSnapshot entered)
		CanGenerateReports
			restricted
			when (GenerateListingData
			and  (Status.Completed or Status.Journalized)
			and   not ReportGenerated 
			and   ListingReport not entered)
		HasReports
			restricted
			when (ListingReport entered)

		AccountingEntityEnabled
			restricted
			when (AllocationControl.AccountingEntityEnabled)			

		AccountingUnitEnabled
			restricted
			when (AllocationControl.AccountingUnitEnabled)

		AccountEnabled
			restricted
			when (AllocationControl.AccountEnabled)

		ProjectEnabled
			restricted
			when (AllocationControl.ProjectEnabled)

		Dimension1Enabled
			restricted
			when (AllocationControl.Dimension1Enabled)

		Dimension2Enabled
			restricted
			when (AllocationControl.Dimension2Enabled)

		Dimension3Enabled
			restricted
			when (AllocationControl.Dimension3Enabled)

		Dimension4Enabled
			restricted
			when (AllocationControl.Dimension4Enabled)

		Dimension5Enabled
			restricted
			when (AllocationControl.Dimension5Enabled)

		Dimension6Enabled
			restricted
			when (AllocationControl.Dimension6Enabled)

		Dimension7Enabled
			restricted
			when (AllocationControl.Dimension7Enabled)

		Dimension8Enabled
			restricted
			when (AllocationControl.Dimension8Enabled)

		Dimension9Enabled
			restricted
			when (AllocationControl.Dimension9Enabled)

		Dimension10Enabled
			restricted
			when (AllocationControl.Dimension10Enabled)
		
		IsStatusFailedOrHasError
			restricted
			when (HasAllocationRunJobError or Status.Failed or Status.InterfaceFailed or BudgetErrorsExist)
		AllowInterfaceToBudget
			restricted
			when (AllocationControl.Type.Budget and AllocationRunCurrencyRel exists) 
			
		AllowDeleteRun
			restricted
			when ((Status.InterfaceInProgress or Status.InterfaceFailed or Status.Interfaced)
			and   BudgetChangeOrderRel not exists)
		
		HasListingReportWithSourceValueDetail
			restricted
			when (DisplayListingReportDetails and GenerateSourceValue)

		HasListingReportWithSourceDetail
			restricted
			when (DisplayListingReportDetails and not GenerateSourceValue)
			
		IsListingReportInProgress
			restricted
			when (ReportGenerated and ListingReport not entered)
		
		IsCalculationReportInProgress
			restricted
			when (ReportGenerated and ListingReport entered and CalculationReport not entered)

        RunJobsExists
            restricted
            when (AllocationRunJob set exists)

        HasAllocationRunJobError
            restricted
            when ((Status.Started  or Status.JournalizeInProcess or Status.InterfaceInProgress or (Status.Completed and JournalizeIfComplete))
			and    AllocationRunJobErrorRel exists)
	Rule Blocks
		Journalizing
			invoke CreateJournalizedDetails AllocationTransactionDetail in background
				assign async action request id to AsyncId
				invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
				invoked.PrmAllocationRun	= AllocationRun
			
			if (AllocationLoggingEnabled)
				invoke Create AllocationRunJob
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem		= AllocationSourceSystem
					invoked.AllocationControl			= AllocationControl
					invoked.AllocationRun				= AllocationRun
					invoked.AsyncActionRequest			= AsyncId
					invoked.JobType						= AllocationRunJobType.CreateJournalizedDetails

			invoke CreateGLTransactionDetails AllocationJournalizedDetail in background
				run after AsyncId
				assign async action request id to AsyncId
				invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
				invoked.PrmAllocationRun	= AllocationRun

			if (AllocationLoggingEnabled)
				invoke Create AllocationRunJob
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem		= AllocationSourceSystem
					invoked.AllocationControl			= AllocationControl
					invoked.AllocationRun				= AllocationRun
					invoked.JobType						= AllocationRunJobType.CreateGLTransactionDetails
					invoked.AsyncActionRequest			= AsyncId

			invoke InitiateJournalizeForRunGroup FinanceEnterpriseGroup in background
				run after AsyncId
				assign async action request id to AsyncId
				invoked.PrmJournalizeGroup	= AllocationRun
				if (not (AllocationsSystemCodeRel.EncumbranceOption.Track or AllocationsSystemCodeRel.EncumbranceOption.TrackAndEdit))
					invoked.PrmAutoReverseDate	= AutoReverseDate
			
			if (AllocationLoggingEnabled)
				invoke Create AllocationRunJob
					assign result to LocalAllocationRunJobView
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem		= AllocationSourceSystem
					invoked.AllocationControl			= AllocationControl
					invoked.AllocationRun				= AllocationRun
					invoked.JobType						= AllocationRunJobType.InitiateJournalizeForRunGroup
					invoked.AsyncActionRequest			= AsyncId

				LocalAllocationRunJob = LocalAllocationRunJobView.AllocationRunJob

				invoke UpdateStatusToFinished AllocationRunJobRel in background
					run after AsyncId

			invoke JournalizeInProcess.SetJournalized in background
				run after AsyncId
				assign async action request id to AsyncId

			if (AllocationLoggingEnabled)
				invoke Create AllocationRunJob
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.AllocationSourceSystem		= AllocationSourceSystem
					invoked.AllocationControl			= AllocationControl
					invoked.AllocationRun				= AllocationRun
					invoked.JobType						= AllocationRunJobType.SetJournalized
					invoked.AsyncActionRequest			= AsyncId
		
		DeleteActions
			if (IsTrueCost)
				constraint (CostsStatus.Ready
				or CostsStatus.None)
					"CostProcessingInProgress"
			invoke Purge BudgetEditErrorRel
			invoke PurgeGroupTotalsForEditGroup BudgetTemplateGroupTotal
				invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
				invoked.PrmBudgetEditGroup				= UniqueID

#ifdef module cb			
			if (FinanceEnterpriseGroup.FundAccounting)
				invoke Delete CashCodeFundEditRel
#endif		      
			if (instance count of AllocationTransactionDetailRel < 10
			and instance count of AllocationLineSourceValueRel < 10
			and instance count of AllocationLineSourceRel < 10
			and instance count of AllocationLineValueRel < 10
			and instance count of AllocationLineTempOverrideRel < 10)
				for each AllocationTransactionDetailRel
					invoke Delete each
				invoke Delete
			else
				make transition to DeleteInProgress
				invoke DeleteAllForRun AllocationTransactionDetail in background
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
				invoke DeleteAllForRun AllocationJournalizedDetail in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
				invoke DeleteAllForRun AllocationLineSource in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
				invoke DeleteAllForRun AllocationLineSourceValue in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
				invoke DeleteAllForRun AllocationLineValue in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
				invoke PurgeAllForRun AllocationLineTempOverride in background
					run after AsyncId
					assign async action request id to AsyncId
					invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmAllocationRun	= AllocationRun
#ifdef module truecost








#endif
				invoke DeleteInProgress.DoDelete in background
					run after AsyncId

	Derived Fields

		DerivedSystem is a DerivedField
			type is AlphaUpper size 2
			restricted
			if (AllocationSourceSystem.TrueCost)
				return "TC"
			return "CA"
		NextTransaction is a DerivedField
			type is Numeric 8
			restricted
			LastTransaction += 1
			return LastTransaction
		NoTransactionsError is a DerivedField
			type is Alpha 150
			if (NoTransactions)
				return NoTransactionsErrorMessage
		NoTransactionsErrorMessage is a MessageField
			restricted
			"NoBalanceToProcess"
		BudgetErrorsMessage is a MessageField
			"BudgetEditErrorsExist"
		OverBudgetErrorMessage is a MessageField
			"BudgetsExceeded;CouldNotJournalize;SeeBudgetErrorsTab"
		TransactionErrorMessage is a MessageField
			"AtLeastOneTransactionHasFailed;CannotJournalize"
		
		CurrentDate is a DerivedField
			type is TimeStamp
			return current timestamp
			
#ifdef module truecost			
		TotalCoreWithoutCostObjects is a DerivedField
			type is Decimal size 21.3
			return IndirectCoreWithoutCostObjects + DirectCoreWithoutCostObjects
		CostsStatusTitle is a DerivedField
			type is Alpha 32
			if (CostsStatus.Generating)
				return "Costs (Generating)"
			if (CostsStatus.Deleting)
				return "Costs (Deleting)"
			if (CostsStatus.Ready)	
				return "Costs"
#endif
		ErrorCountAndMessage is a MessageField
			restricted
			"Error_Count:<ErrorCount>_<ErrorMessage>"
			
		HoverErrorMessage is a DerivedField
			type is Text
            if (HasAllocationRunJobError)
                return AllocationRunJobErrorMessage
			else
            if (ErrorMessage entered)
				return ErrorMessage
			else
			if (BudgetErrorsExist)
				return OverBudgetErrorMessage
			else
				return ErrorCountAndMessage

		ErrorMessageTag is a DerivedField
			type is Text
			if (HasAllocationRunJobError)
				return AllocationRunJobErrorMessage
			else
			if (ErrorMessage entered)
				return ErrorMessage
			else
			if (BudgetErrorsExist)
				return OverBudgetErrorMessage
			else
				return TransactionErrorMessage


        AllocationRunJobErrorMessage is a MessageField
            "At_least_One_Job_Failed"

		CurrencyForBudgetInterface is a DerivedField
			type is Alpha size 30
			default label is "Currency"
			if (instance count of AllocationRunCurrencyRel = 1)
				return first AllocationRunCurrencyRel.Currency
			else
				return MutipleCurrencyMessage

		MutipleCurrencyMessage is a MessageField
			restricted 
			"MultipleCurrency"
		
		ListingReportInProgressMessageField	is a MessageField
			"Listing_Report_In_Progress"

		CalculationReportInProgressMessageField	is a MessageField
			"Calculation_Report_In_Progress"

        CalculationReportStatus is a DerivedField
            type is MessageField
            default label is "Status"
            if (Status.Failed)
                return "Failed"
            return "Completed"

	Actions
 		Update is an Action
 			restricted
 		Delete is a Delete Action
 			restricted
 				

		RebuildCommitmentTotals is an Instance Action
			restricted
			Parameters
				IsBatch        is Boolean
			Local Fields
				LocalPeriodEndDate is a GeneralLedgerCalendarPeriod 
			Action Rules
				invoke Delete BudgetEditErrorRel

				initialize LocalTransactionCount

				LocalTransactionDetailPostingDate     = first AllocationTransactionDetailByAllocationRunRel.PostingDate
				LocalPeriodEndDate	                  = first GeneralLedgerCalendarPeriodEndDateRel.GeneralLedgerCalendarPeriod
				for each AllocationTransactionDetailByAllocationRunRel
					invoke UpdateGroupTotals BudgetTemplate
						invoked.PrmFinanceEnterpriseGroup	= each.FinanceEnterpriseGroup
						invoked.PrmBudgetEditGroup			= each.AllocationRun.UniqueID
						invoked.PrmEndDate					= LocalPeriodEndDate	
						invoked.PrmTransactionCodeBlock		= each.FinanceCodeBlock
						invoked.PrmReportAmounts.FunctionalAmount	= each.ReportCurrencyAmount.FunctionalAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount	= each.ReportCurrencyAmount.AlternateAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount2	= each.ReportCurrencyAmount.AlternateAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.AlternateAmount3	= each.ReportCurrencyAmount.AlternateAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ProjectAmount		= each.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount1		= each.ReportCurrencyAmount.ReportAmount1.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount2		= each.ReportCurrencyAmount.ReportAmount2.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount3		= each.ReportCurrencyAmount.ReportAmount3.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount4		= each.ReportCurrencyAmount.ReportAmount4.EnteredCurrencyAmount
						invoked.PrmReportAmounts.ReportAmount5		= each.ReportCurrencyAmount.ReportAmount5.EnteredCurrencyAmount	
						invoked.PrmAllowRebuild						= true

					LocalTransactionCount = LocalTransactionCount + 1
					if (LocalTransactionCount > 50)
						commit transaction
						initialize 	LocalTransactionCount

				invoke EditTotalsRoute BudgetTemplateGroupTotal
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmBudgetEditGroup			= UniqueID
					if (AllocationsSystemCodeRel.EncumbranceOption.TrackAndEdit) 
						invoked.PrmMode					= BudgetEditMode.Hard
					else
						invoked.PrmMode					= BudgetEditMode.UpdateOnly
					invoked.PrmBudgetEditCallBack.BudgetEditCallBackReference	= reference to this instance
					invoked.PrmBusinessClassName  		= "AllocationRun"
					invoked.PrmEditContext  		    = "Journalize"
					invoked.PrmIsBatch					= IsBatch

 		JournalizeIfComplete is an Instance Action
 			restricted
 			Action Rules
 				if (Status.Completed)
					if (AllocationLoggingEnabled)
						LocalAllocationRunJobType	= AllocationRunJobType.JournalizeInitiated
						invoke Start first AllocationRunJobByTypeRel

 					invoke Completed.Journalize
 										
 		ResetCollectingReconciliationData is an Instance Action
 			valid when (CollectingReconciliationData)
 			confirmation required
 				"ThisActionShouldOnlyRunIfPreviousGetReconciliationDataFailed"
 			Action Rules
 				CollectingReconciliationData	= false
 				
 		SetReconciliationData is an Instance Action
 			restricted
 			Parameters
				PrmIndirectCoreWithoutCostObjects	is a TotalAmount
				PrmDirectCoreWithoutCostObjects		is a TotalAmount
				PrmDirectActualsWithCostObjects		is a TotalAmount 
				PrmDirectActualsTotal				is a TotalAmount       				
 			Action Rules
 				CollectingReconciliationData	= false

 				IndirectCoreWithoutCostObjects	= PrmIndirectCoreWithoutCostObjects
 				DirectCoreWithoutCostObjects	= PrmDirectCoreWithoutCostObjects
 				DirectActualsWithCostObjects	= PrmDirectActualsWithCostObjects
 				DirectActualsTotal				= PrmDirectActualsTotal
 				TotalsCalculated				= true

 		CostsReady is an Instance Action
 			restricted
 			Action Rules





 				CostsStatus = CostsStatus.Ready
 			
 		CostsNone is an Instance Action
 			restricted
 			Action Rules





 				CostsStatus = CostsStatus.None
 			
		GetReconciliationData is an Instance Action
 			valid when (CanGetReconciliationData)
 			completion message is "CollectingReconciliationData"
 			Action Rules










					
 		GenerateCosts is an Instance Action
 			valid when (CanGenerateCosts)
 			confirmation required
 			completion message is "GeneratingCostData"
 			Action Rules














 		RemoveCosts is an Instance Action
 			restricted
 			valid when (CanRemoveCosts)
 			confirmation required
 			Action Rules				













						
		GenerateCostBehaviorSummary is an Instance Action
			restricted

			default label is untranslatable
			confirmation required
			completion message is "GeneratingCostBehaviorSummary"
			Action Rules










					
		CostBehaviorSummaryCompleted is an Instance Action
			restricted
			default label is untranslatable
			Action Rules





		PublishForBirstReport is an Instance Action
			default label is "Publish_for_BirstReport"
			valid when (IsForBirstPublishing)
			confirmation required
				"DoYouWantToProceed?"
			Entrance Rules
				constraint(AllocationRunPublishedForBirstRel not exists)
					"CannotPublishMultipleAllocationRunsFor_BirstReport."
			Action Rules


				
		UnpublishForBirstReport is an Instance Action
			default label is "Unpublish_for_BirstReport"
			valid when (IsForBirstUnpublishing)
			confirmation required
				"DoYouWantToProceed?"
			Action Rules



		GenerateReports is an Instance Action
			valid when (CanGenerateReports)
			Action Rules
				invoke GenerateReportsInternal

		GenerateReportsInternal is an Instance Action
            default label is untranslatable
			restricted
			Action Rules
				ReportGenerated = true
				
				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.GenerateListingReport
					invoke Start first AllocationRunJobByTypeRel

            	generate document ListingReport as pdf in landscape font offset is -2
                	set using action SetListingReport
					
		SetListingReport is an Instance Action
            default label is untranslatable
            restricted
            Parameters
                Report is BinaryDocument
            Action Rules
                ListingReport = Report
				DisplayListingReportDetails = true

				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.GenerateListingReport
                	invoke End first AllocationRunJobByTypeRel
                
                invoke GenerateCalculationReport

		GenerateCalculationReport is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.GenerateCalculationReport
                	invoke Start first AllocationRunJobByTypeRel

                generate document CalculationReport as pdf in landscape font offset is -2
                    set using action SetCalculationReport

		SetCalculationReport is an Instance Action
			default label is untranslatable
            restricted
            Parameters
                Report is BinaryDocument
            Action Rules
                CalculationReport = Report
				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.GenerateCalculationReport
                	invoke End first AllocationRunJobByTypeRel

		TransitionToInterfaced is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.TransitionToInterfaced
					invoke Start first AllocationRunJobByTypeRel
				if (ErrorCount > 0)
					Status = Status.InterfaceFailed
					for each AllocationRunCurrencyRel
						invoke DeleteBudgetChangeOrder each
				else
					Status = Status.Interfaced
			Exit Rules
				if (AllocationLoggingEnabled)
					LocalAllocationRunJobType	= AllocationRunJobType.TransitionToInterfaced
					invoke End first AllocationRunJobByTypeRel

		DeleteRun is an Instance Action
			valid when (AllowDeleteRun)
			confirmation required
			Action Rules
				include DeleteActions

	StateCycles
		AllocationRunLifeCycle is a StateCycle
			state field is Status
			
			Started	is a State
 				Create is an Action
 					restricted
				SetStep is an Instance Action
					restricted
					Parameters
						StepNumber	is a AllocationStepNumber
					Action Rules
						CurrentStepNumber = StepNumber

				SetCompleted is an Instance Action
					restricted
					Action Rules
						if (AllocationLoggingEnabled)
							LocalAllocationRunJobType	= AllocationRunJobType.SetCompleted
							invoke Start first AllocationRunJobByTypeRel
						initialize CurrentStepNumber
						if (instance count of AllocationTransactionDetail set > 0
						and ErrorCount not entered)
							make transition to Completed
						else
							make transition to Failed
							if (ErrorMessage not entered)
								if (NoTransactions)
									ErrorMessage = NoTransactionsErrorMessage
								else
								if (BudgetErrorsExist)
									ErrorMessage = BudgetErrorsMessage
						RunEndTimeStamp = current timestamp
					Exit Rules
						if (AllocationLoggingEnabled)
							LocalAllocationRunJobType	= AllocationRunJobType.SetCompleted
							invoke End first AllocationRunJobByTypeRel
						
		 		DeleteRun is an Instance Action
		 			confirmation required
					Action Rules
						include DeleteActions
						
            Completed  	is a State
		 		DeleteRun is an Instance Action

		 			confirmation required
					Action Rules

						include DeleteActions
							
		 		Finalize is an Instance Action		 			
		 			valid when (CanFinalize)
		 			Action Rules
						make transition to Finalized
												
				JournalizeWithReverse is an Instance Action
					valid when (ReverseJournalize)
					default label is "Journalize"
					completion message is "JournalizeInitiated"
					Parameters
						PrmAutoReverseDate	is Date
							default label is "AutoReverseDate"
					Local Fields
						LocalFailedValidation is Boolean
					Action Rules
						if (PrmAutoReverseDate entered and LastTransaction > 500)
							make transition to JournalizeInProcess
							invoke JournalizeInProcess.JournalizeValidateDate in background
								invoked.PrmAutoReverseDate = PrmAutoReverseDate
						else
							if (PrmAutoReverseDate entered)
								for each distinct AccountingEntity in AutoReverseTransactionDetailRel
									LocalAccountingEntity = each.AccountingEntity

									if (PrmAutoReverseDate <= LocalAccountingEntity.AccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date)
										LocalFailedValidation = true
										end for each

								constraint (not LocalFailedValidation)
									"AutoReverseDateMustBeGreaterThanEntity<LocalAccountingEntity>CurrentPeriodEndDate<LocalAccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date>"
									
								for each distinct FinanceCodeBlock.ToAccountingEntity in AutoReverseTransactionDetailRel
									LocalAccountingEntity = each.FinanceCodeBlock.ToAccountingEntity

									if  (PrmAutoReverseDate <= LocalAccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date)
										LocalFailedValidation = true
										end for each

								constraint (not LocalFailedValidation)
									"AutoReverseDateMustBeGreaterThanEntity<LocalAccountingEntity>CurrentPeriodEndDate<LocalAccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date>"
					
								AutoReverseDate = PrmAutoReverseDate
							
							make transition to Finalized 

							invoke Finalized.Journalize
				
				Journalize is an Instance Action
		 			valid when (NonReverseJournalize)
					completion message is "JournalizeInitiated"
					confirmation required
					Action Rules
						make transition to Finalized
						invoke Finalized.Journalize
						
				Cancel is an Instance Action		 			
		 			valid when (CanDeleteCompletedRun)
		 			Action Rules
						make transition to Canceled

				InterfaceAsChangeRequest is an Instance Action
					valid when (AllowInterfaceToBudget)
					Parameters
						PrmScenario 		is a Scenario
							default label is "Scenario"
						PrmDescription		is a Description
							default label is "Description"
				        PrmDefaultPeriod	is a GeneralLedgerCalendarPeriod
							default label is "DefaultPeriod"

					Parameter Rules
						PrmScenario
							required
							initial value is AllocationControl.Scenario 
							default to AllocationControl.Scenario

							constraint (PrmScenario.CommitmentType.Budget)
								"CommitmentTypeMustBeBudget"
							constraint (PrmScenario.Status.Ready)
								"BudgetScenarioMustBeInReadyStatus"
							


						PrmDescription
							required

						PrmDefaultPeriod
							initial value is AllocationPeriod
							default to AllocationPeriod
							constraint (PrmDefaultPeriod.TopNode = PrmScenario.Basis.GeneralLedgerCalendar.TopNode)
								"PeriodMustBeInScenarioBasisCalendar"
							constraint (PrmDefaultPeriod.PeriodType.Month)
								"PeriodMustBeOfTypeMonth"

					Action Rules
						AsyncId	= current async action request id
						for each AllocationRunCurrencyRel
							invoke InterfaceAsChangeRequest AllocationTransactionDetail
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
								invoked.PrmAllocationRun			= AllocationRun
								invoked.PrmCurrency					= each.Currency
								invoked.PrmScenario					= PrmScenario
								invoked.PrmDescription				= PrmDescription
								invoked.PrmPeriod					= PrmDefaultPeriod
							if (AllocationLoggingEnabled)
								invoke Create AllocationRunJob
									invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.AllocationSourceSystem		= AllocationSourceSystem
									invoked.AllocationControl			= AllocationControl
									invoked.AllocationRun				= AllocationRun
									invoked.Currency					= each.Currency
									invoked.AsyncActionRequest			= AsyncId
									invoked.JobType						= AllocationRunJobType.InterfaceAsChangeRequest

						invoke TransferToJournalizedDetail AllocationTransactionDetail
							run after AsyncId
							assign async action request id to AsyncId
							invoked.PrmEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.PrmAllocationRun			= AllocationRun								
						if (AllocationLoggingEnabled)
							invoke Create AllocationRunJob
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.AllocationSourceSystem		= AllocationSourceSystem
								invoked.AllocationControl			= AllocationControl
								invoked.AllocationRun				= AllocationRun
								invoked.JobType						= AllocationRunJobType.TransferToJournalizedDetail
								invoked.AsyncActionRequest			= AsyncId

						invoke TransitionToInterfaced in background
							run after AsyncId
							assign async action request id to AsyncId

						if (AllocationLoggingEnabled)
							invoke Create AllocationRunJob
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.AllocationSourceSystem		= AllocationSourceSystem
								invoked.AllocationControl			= AllocationControl
								invoked.AllocationRun				= AllocationRun
								invoked.JobType						= AllocationRunJobType.TransitionToInterfaced
								invoked.AsyncActionRequest			= AsyncId
							
						Status = Status.InterfaceInProgress


			Finalized 	is a State
										
		 		Unfinalize is an Instance Action		 			
		 			valid when (IsTrueCost)
		 			Action Rules
#ifdef module truecost
		 				invoke Delete TrueCostPeriodRunRel
#endif
						make transition to Completed 
																		
				Journalize is an Instance Action 
		 			valid when (IsTrueCost)
					completion message is "JournalizeInitiated"
					confirmation required
					Action Rules
						for each distinct AllocationFieldGroup in AllocationTransactionDetail set

							invoke Journalizing each.Allocation
								invoked.PrmAllocationPeriod = AllocationPeriod
								invoked.PrmJournalizeGroup	= AllocationRun
								if (UseCapacityLedger)
									invoked.PrmIsCapacity	= true	
						if (AllocationsSystemCodeRel.EncumbranceOption.Track
						or AllocationsSystemCodeRel.EncumbranceOption.TrackAndEdit)
							make transition to PreparingForEdit
						else
							make transition to JournalizeInProcess

						if (AllocationLoggingEnabled)
							LocalAllocationRunJobType	= AllocationRunJobType.JournalizeInitiated
							invoke End first AllocationRunJobByTypeRel
					Exit Rules
						if (AllocationsSystemCodeRel.EncumbranceOption.Track
						or AllocationsSystemCodeRel.EncumbranceOption.TrackAndEdit)
							invoke PurgeGroupTotalsForEditGroup BudgetTemplateGroupTotal in background
								assign async action request id to AsyncId
								invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.PrmBudgetEditGroup				= UniqueID
							invoke BuildTemplateGroupTotals AllocationTransactionDetail in background
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmAllocationRun	= AllocationRun
							invoke PreparingForEdit.EditTotals in background
								run after AsyncId
						else
							
							include Journalizing
							

			Failed 	is a State
		 		DeleteRun is an Instance Action
		 			confirmation required
					Action Rules
						include DeleteActions
				 					
            PreparingForEdit is a State
            	EditTotals is an Instance Action
            		restricted
            		Action Rules
            			make transition to EditInProgress
            			display "AllocationRunUnique<UniqueID>"
						invoke EditTotalsRoute BudgetTemplateGroupTotal in background
							invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.PrmBudgetEditGroup			= UniqueID
							if (AllocationsSystemCodeRel.EncumbranceOption.TrackAndEdit) 
								invoked.PrmMode					= BudgetEditMode.Hard
							else
								invoked.PrmMode					= BudgetEditMode.UpdateOnly
							invoked.PrmBudgetEditCallBack.BudgetEditCallBackReference	= reference to this instance
							invoked.PrmBusinessClassName  		= "AllocationRun"	
							invoked.PrmEditContext  		    = "Journalize"						
						

            EditInProgress is a State
            	Failure is an Instance Action
            		restricted
            		Action Rules
						for each distinct AllocationFieldGroup in AllocationTransactionDetail set
							display "FailedEdit<AllocationRun>"
							invoke RevertJournalize each.Allocation
								invoked.PrmAllocationPeriod = AllocationPeriod
								invoked.PrmJournalizeGroup	= AllocationRun
								if (UseCapacityLedger)
									invoked.PrmIsCapacity	= true	
            			make transition to Completed
            
            	Success is an Instance Action
            		restricted
            		Action Rules
						display "SuccessEdit<AllocationRun>"
						make transition to JournalizeInProcess
					Exit Rules
#ifdef module cb			
						if (FinanceEnterpriseGroup.FundAccounting)
							invoke Delete CashCodeFundEditRel
#endif		      
						include Journalizing
            			
            JournalizeInProcess	is a State
				JournalizeValidateDate is an Instance Action
					restricted
					Parameters
						PrmAutoReverseDate	is Date
							default label is "AutoReverseDate"
					Local Fields
						LocalFailedValidation is Boolean
					Action Rules
						for each distinct AccountingEntity in AutoReverseTransactionDetailRel
							LocalAccountingEntity = each.AccountingEntity

							if (PrmAutoReverseDate <= LocalAccountingEntity.AccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date)
								invoke SendNotificationJournalizeError
									invoked.PrmAccountingEntity = LocalAccountingEntity
									invoked.PrmAutoReverseDate  = PrmAutoReverseDate
								LocalFailedValidation = true
								end for each

							

						if (not LocalFailedValidation)
							for each distinct FinanceCodeBlock.ToAccountingEntity in AutoReverseTransactionDetailRel
								LocalAccountingEntity = each.FinanceCodeBlock.ToAccountingEntity

								if (PrmAutoReverseDate <= LocalAccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date)
									invoke SendNotificationJournalizeError
										invoked.PrmAccountingEntity = LocalAccountingEntity			
										invoked.PrmAutoReverseDate  = PrmAutoReverseDate						
									LocalFailedValidation = true
									end for each								



						if (LocalFailedValidation)
							make transition to Completed
						else
							AutoReverseDate = PrmAutoReverseDate
							
							make transition to Finalized 

							invoke Finalized.Journalize

				SendNotificationJournalizeError is an Instance Action
					restricted
					Parameters
						PrmAccountingEntity is an AccountingEntity
							default label is "AccountingEntity"
						PrmAutoReverseDate	is Date
							default label is "AutoReverseDate"									
					Local Fields
						LocalActor			is Actor
					Action Rules
						LocalActor = actor
						send notification
							to LocalActor
							description is "EncounteredErrorOnJournalize"
							priority is high
							detail is "AutoReverseDate<PrmAutoReverseDate>MustBeGreaterThanEntity<PrmAccountingEntity>CurrentPeriodEndDate<PrmAccountingEntity.CurrentPeriod.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date>"		

		 		SetJournalized is an Instance Action
		 			restricted
		 			Action Rules
						if (AllocationLoggingEnabled)
							LocalAllocationRunJobType	= AllocationRunJobType.SetJournalized
							invoke Start first AllocationRunJobByTypeRel
		 				make transition to Journalized
					Exit Rules
						if (AllocationLoggingEnabled)
							LocalAllocationRunJobType	= AllocationRunJobType.SetJournalized
							invoke End first AllocationRunJobByTypeRel

		 		
            Journalized	is a State


		 		Cancel is an Instance Action
		 			valid when (IsTrueCost)
		 			
		 			Parameters
		 				PrmReverseOriginalJournal	is Boolean
		 					default label is "ReverseOriginalJournal"
		 			Parameter Rules
		 				PrmReverseOriginalJournal
		 					initial value is true

		 			Action Rules


            Canceled is a State
            	DeleteRun is an Instance Action
		 			valid when (NoGLJournal)
		 			confirmation required
					Action Rules
						if (NoGLJournal)
							include DeleteActions

		 	DeleteInProgress is a State
		 		DoDelete is an Instance Action
		 			restricted
		 			Action Rules
		 				invoke Delete
