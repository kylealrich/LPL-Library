Project is a BusinessClass
    owned by Projects
    prefix is ACV
    representative text is "<DerivedRepresentativeText>"


    Ontology
        symbolic key is Project

    Patterns
    	implements StaticJava
        implements BODId    
		implements ChildHierarchy
			children are ProjectChildrenRel
			child set is ProjectHierarchyRel
				child is Project
			top node when (ProjectType.Node)
			descendants are DescendantsRel
		implements InlineUserFields
			size is 3000
						
   	Context Fields
		ContextProject			is a ProjectContextValue
		ContextStructure		is a ProjectStructure
		InvokedByUnusedStructure
		ContextProjectReportingSettings is a ProjectReportingSettings
		ContextProjectReportingSettingsAll is a ProjectReportingSettingsAll		
		Actor
		AllocationContext
		ContextProjectContract	is a ProjectContract
		BypassActiveCodeBlockEdit
		ProjectIndirectBurdenCode
		SearchProjectContract		is a ProjectContract
		SearchBillingMethod		
		SearchRevenueRecognition
		SearchRevenueMethod
		SearchDateRange	
		SuppressZeroVarianceRows
		ExpenseSelectionGroup	is a GeneralLedgerTotal group	
#ifdef module integration				
		FSMInboundBODTracker			
#endif
    Persistent Fields
        Description	     		
        ProjectType				is a DimensionType
        DisplayProject			is like Project
        	translatable
        Active
        SequenceNumber			is Numeric 7
			disable Auditing        
        BudgetIdentifier
		IsTopNode				is Boolean
		Level					is Numeric 3
		ParentProject			is like Project
		DimensionStructure		is like ProjectStructure        
        Currency
		ProjectDateRange
		Billable				is Boolean
		Watch					is Boolean		
		WatchedBy   			is an Employee		
		Capital					is Boolean		
		Contract				is Boolean
		PersonResponsible		is an Employee
        ProjectStatus
        HasPeriodOfPerformance	is Boolean
        SalaryCap				is a ProjectSalaryCap
        	version is DerivedSalaryCapVersionDate
        SalaryCapDate			is Numeric size 1
        	States
        		ProjectStartDate		value is 1
        		LaborPeriodEndingDate	value is 2
		OverageCodeBlock		is a FinanceCodeBlockOverage
			default label is "SalaryCapOverageFinanceStructure"
        BillingMethod			is a ProjectBillingMethod
		MarkupPercent			is Percent size 5.2
		BillingRateTable		is a ProjectBillingRateTable
		FinanceCodeBlock		is a FinanceCodeBlockNoProject 
			default label is "LaborDistributionFinanceStructure"
		BurdenCode				is a ProjectBurdenCode
		FringeBurden			is Numeric size 1
			States
				No					value is 0
				DefaultFromEmployee	value is 1
				DefaultFromProject	value is 2
		BurdenCodeBlock			is a FinanceCodeBlockNoProject 
			default label is "FringeBurdenFinanceStructure"			
		TaxExempt				is Boolean
#ifdef module tx
		TaxCode
			default label is "ServiceLocationTaxCode"		
		BuyerTaxCode			is a TaxCode
#endif
#ifndef module tx
		TaxCode 				is AlphaUpper size 15
			default label is "ServiceLocationTaxCode"		
		BuyerTaxCode	 		is AlphaUpper size 15
#endif
		ProjectServiceLocation
			default label is "ServiceLocation"
		BuyerTaxLocation		is a ProjectServiceLocation			
		RevenueAccountOnly		is a GeneralLedgerChartAccount	
		RevenueDimension		is a ProjectCodeBlock			
		RevenueCodeBlockOption
		RevenueFullAccount			is a FinanceCodeBlockFullNoProjectFD2
			default label is "FullRevenueFinanceStructure"
		RevenuePartialAccount		is a FinanceCodeBlockNoProjectFD2
			default label is "PartialRevenueFinanceStructure"
		AddressCode
		FeesExempt				is Boolean
			default label is "ExcludeFees"
		ProjectTeam
		ExpenseManagement				is Boolean		
		BudgetAmount is an InternationalAmount
			precision is Currency.NumberOfDecimals
		BillingMaximum			is a CurrencyAmount
			precision is Currency.NumberOfDecimals
		ParentDisplayContract	is like Project
		WorkType				is a ProjectWorkType
		ServiceType				is a ProjectServiceType
		UsageType				is a ProjectUsageType		
		CertificationRequired	is Boolean
    	PreAwardID 				is Alpha size 25
    		default label is "Pre-AwardID"
		ProgramIncome					is Boolean
		ProgramIncomeType				is Numeric size 1
			States
				Additive	    value is 1
				Deductive		value is 2
				CostShare		value is 3

		ExcludeFromFES			is Boolean
		DefaultCodeBlock		is a FinanceCodeBlockNoProject
			default label is "DefaultFinanceStructure"
		TotalBilled				is a CurrencyAmount
			precision is Currency.NumberOfDecimals
			disable Auditing			
		TotalRecognized			is a CurrencyAmount
			precision is Currency.NumberOfDecimals
			disable Auditing
		FinanceDimension2
		BurdensInProgress		is Boolean
			disable Auditing
		PreAwardAssignmentDays	is Numeric size 3

	Transient Fields
		TransientContextProject			is a ProjectContextValue
			derive value from Project
		ParentDimension					is a Project
			derive value from ProjectInContextStructureRel.ParentProject
		SystemProject					is Boolean
			derive value from DerivedSystemProject
    	IncludeInBudgetEdit				is Boolean
    		derive value from DerivedIncludeInBudgetEdit 			
 		SkipHierarchy					is Boolean
		NewProject			 			is like Project
		BypassNewStructureNotification 	is Boolean		
		BypassUpdateStructure			is Boolean		
		CreateProjectType				is Numeric 2
			States
	    		Summary	value is 2
	    		Posting	value is 1
	    	derive value from ProjectType
	    ProjectReportingSettings
	    	derive value from DerivedProjectReportingSettings
	    ProjectReportingSettingsAll
	    	derive value from DerivedProjectReportingSettingsAll

		RequesterActor					is an Actor
	 	RequestedBy						is Alpha 100
		RequesterPhone					is a Telephone 
			holds pii
	 	RequesterEmail					is an EmailAddress 
	 		holds pii
		RequestPriority					is Numeric 1
			States
				High				value is 1
				Medium				value is 2
				Low					value is 3
		NeededBy						is Date
		Notes							is Text
	    CreateWithinParentProject		is like Project
		LocalContextStructure			is like ProjectStructure
		ContractAmount					is an InternationalAmount
		ContractCurrency				is a Currency
		ContractBillingMethod			is Numeric size 1
			States
				CostReimbursement		value is 1
				CostPlus				value is 2
				TimeAndMaterials		value is 3
				Milestone				value is 4
				Installment				value is 5
				RateTable				value is 6
		ContractMarkupPercent			is Percent size 5.2
		ContractBillingRateTable		is a ProjectBillingRateTable
		ContractAllocateExpenditures	is Boolean
		ContractRevenueRecognition		is Numeric size 1
			States
				Combined				value is 1
				Separate				value is 2
		ContractRevenueMethod			is Numeric size 1
			States
				FullAccrual				value is 1
				Milestone				value is 2
				PercentageOfCompletion	value is 3
				Installment				value is 4
		BypassStructureRelationEdit
		ContractExcludeAP				is Boolean
		ContractMaximumFees				is an InternationalAmount
		ContractID			            is Alpha size up to 30
		ContractType					is a ProjectContractType
    	UpdateFromProjectUpload 		is Boolean
    	FrontEndSplits			        is Boolean
    		default label is "FrontEndSplit"
		ContractCurrencyTable			is like CurrencyTable
		ContractInvoiceFormat			is a ProjectInvoiceFormat
		ContractInvoiceReversalFormat	is a ProjectInvoiceReversalFormat
		ContractScenario				is like Scenario
		ContractSummarizedInvoices		is Boolean
		ContractSummarizeByProject		is Numeric size 1
		ContractSummarizeByDimension	is Numeric size 1
		ContractAlternateChart			is like ReportingChart
		ContractSummarizeByResource		is Boolean
		ContractSummarizeByRate			is Boolean
		ContractSummarizeByFeeCode		is Boolean
		ContractSellerTaxCode			is AlphaUpper size 15
		ContractSellerTaxLocation		is like ProjectServiceLocation
		ContractInvoiceTemplate			is Numeric size 10
		ContractInvoiceReversalTemplate	is Numeric size 10
		DeferAndHoldRemainder			is Boolean
		RemainderOption					is Numeric size 1
			default label is "DeferAndHoldRemainder"
		SingleProjectInvoice			is Boolean
			default label is "SingleProjectInvoices"
		SingleProjectRevenue			is Boolean
			default label is "SingleProjectRevenueRecognition"
		ViewTaxCodeOrTaxLocation is Numeric 1
			default label is "TaxCode_orTaxLocation"
			States
				TaxCode value is 0
				TaxLocation value is 1
		LikeProjectField				is a Project
	Local Fields
		LocalSecurityGroupAllowsMaintenance is Boolean	
		UseInputValue					is Boolean
		BudgetIdentifierArray
		I1								is Numeric 2
		I2								is Numeric 2		
		LocalProject					is a Project
		LocalPOPProject					is a Project		
		LocalNewProject					is a Project
		LocalAncestorContract			is a Project
		LocalParentProject				is a Project
		LocalChildProject				is a Project
		TopNodeFound					is Boolean
		LevelCalcProject				is a Project		
		LocalLevel						is Numeric 3
		LocalStructure					is like ProjectStructure
		LocalUpdateProject				is a Project
		SystemProjectDefined			is Boolean
		LocalSystem						is a GeneralLedgerSystemCode			
		LocalActionCode					is an ActionCode
		LocalBODCurrentTimeStamp		is a BODCurrentTimeStamp
		LocalInvokedByUnusedStructure	is Boolean
		LocalDateRange					is a ProjectDateRange
		LocalPercentCompleteDate		is Date
		LocalTopNode is Boolean
		CompletionMessage			  	is Alpha size 80
		LocalGLTransactionDetail		is a GLTransactionDetail
		LocalIndirectBurdenCode			is like ProjectIndirectBurdenCode
		LocalFinanceDimension2			is like FinanceDimension2
		LocalPriority					is Numeric size 2
		LocalEffectiveDate				is Date
		LocalFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
		LocalAccountingEntity			is like AccountingEntity
		LocalAccountingEntityGroup		is like AccountingEntityGroup
		LocalProjectBudgetAmount		is like TotalAmount
		LocalProjectOrignalBudgetAmount	is like TotalAmount 
		LocalProjectOriginalBudgetAmount is like TotalAmount			
		LocalProjectActualAmount		is like TotalAmount	
		LocalProjectPriorActualAmount		is like TotalAmount		
		LocalProjectEncumbranceAmount	is like TotalAmount		
		LocalProjectCommitmentAmount	is like TotalAmount
		LocalProjectBudgetCalculated	is Boolean	
		LocalProjectOriginalBudgetCalculated	is Boolean	
		LocalProjectActualCalculated	is Boolean
		LocalProjectPriorActualCalculated	is Boolean
		LocalProjectEncumbranceCalculated is Boolean		
		LocalProjectCommitmentCalculated  is Boolean	
		LocalEmployee					is an Employee
		LocalProjectRole				is a ProjectRole
		LocalProjectCodeBlock  			is a ProjectCodeBlock
 		LocalGeneralLedgerChartAccountURE is a GeneralLedgerChartAccount
		LocalCodeBlockRelation			is a CodeBlockRelation		
		LocalKeyFromValue				is Alpha 200				
		LocalKeyToValue					is Alpha 200				
		LocalCommitCounter				is Numeric size 3			
		LocalArrayCounter				is Numeric size 5			
		LocalStructureSequence			is Numeric 4

		LocalStructureDimension			is like GeneralLedgerChartAccount


		LocalNativeLPLBODTrigger				is Boolean
		LocalSequence							is Numeric 4
		LocalCrossReferenceValue 				is Alpha size 100
		ProjectMasterCleanDocIDBODXML			is XMLDocument
		LocalCrossAccountingEntity				is Alpha size 100
#ifdef module ap
		LocalDerivedFESKey 			is a FrontEndSplitKey
#endif
#ifdef module integration			
		NewBODTracker  				is a FSMInboundBODTracker view
#endif		
		LocalFSMInboundBODTracker	is Numeric 15
		Error            			is Boolean
	    ErrorMessage     			is Alpha 300
	    LocalConfigurationParameter	is Alpha size up to 200
	    LocalSourceValue			is Alpha 30


		LocalPulseAlertFrom				is Alpha size 100

		TemplatesWithIdentifierCount	is Numeric size 6
		LocalTriggerFrom				is Alpha 50		
	Attach Rules
		if (ProjectType.Posting)
			if (!parentcontext.name = "GeneralLedgerTotal"
			and !parentcontext.name = "ProjectHierarchy"
			and !parentcontext.name = "ProjectStructure"
			and !parentcontext.name = "Project"
			and !parentcontext.name = "ProjectComment"
			and !parentcontext.name = "AccountAnalysisSettings"				
			and !parentcontext.name = "BudgetGroup"
			and !parentcontext.name = "BudgetTemplate"
			and !parentcontext.name = "BudgetTemplateMember"
			and !parentcontext.name = "BudgetTemplatePending"
			and !parentcontext.name = "BudgetTemplateRemove"
			and !parentcontext.name = "BudgetChange"
			and !parentcontext.name = "BudgetImport"
			and !parentcontext.name = "ProjectShadow"
			and !parentcontext.name = "ReconciliationAccount"
			and !parentcontext.name = "ProjectAssignmentEffort"
			and !parentcontext.name = "ContractLineDistribution"
			and !parentcontext.name = "AllocationLineSourceValue"
			and !parentcontext.name = "AllocationLineValue"			
			and !parentcontext.name = "AllocationLineSingleOverride"
			and !parentcontext.name = "AllocationLineTempOverride"
			and !parentcontext.name = "AllocationRunWeightDetail"	
			and !parentcontext.name = "GLReport"
			and !parentcontext.name = "GLReportGrouping"
			and !parentcontext.name = "GLReportGroupingDetail"
			and !parentcontext.name = "GLReportFilterDimension"
			and !parentcontext.name = "GLColumnFilterDimension"		
#ifdef module am
			and !parentcontext.name = "AssetTransactionSummary"
			and !parentcontext.name = "AssetTransactionBeginningBalance"
			and !parentcontext.name = "ProjectAssetInterface"
			and !parentcontext.name = "AssetCapitalTransaction"
			and !parentcontext.name = "AssetInterface"
			and !parentcontext.name = "AssetItemAdjustmentImport"
			and !parentcontext.name = "AssetRepairImport"
			and !parentcontext.name = "Asset"
			and !parentcontext.name = "AssetItem"
#endif
			and !BypassActiveCodeBlockEdit)
				constraint (Active)
					"ThisIsNotActive;<Project>_<FinanceEnterpriseGroup.ProjectLabel>"


	Action Exit Rules

	Rule Blocks
		TriggerProjectRules
			trigger "ProjectService" PA service
				resume on error
				title is "EG:<FinanceEnterpriseGroup>PM:<Project>"
				Criteria
					FinanceEnterpriseGroup
					Project
				Variables
					LocalActionCode
						variable name is ActionCode
					include persistent fields from FinanceEnterpriseGroup
					include persistent fields from Project
					include persistent fields from ContextStructure
					DerivedParentProject
					DerivedParentDisplayProject
					DerivedParentDescription
					LocalBODCurrentTimeStamp.OutputBODCurrentTimeStamp
						variable name is CurrentTimeStamp
					DerivedTriggerFrom
						
		TriggerBODForCreateOrUpdate
			if (FinanceEnterpriseGroup.BODTrigger)
				if (action type.Create)
					LocalActionCode = LocalActionCode.Create
				else
					LocalActionCode = LocalActionCode.Update
	
				increment bod id.VariationID
				include TriggerProjectRules



								
		CheckValidDateRange
			LocalDateRange.BeginDate = ProjectDateRange.BeginDate
			LocalDateRange.EndDate = ProjectDateRange.EndDate				
		
		CheckValidContext	
			if (ContextStructure.UnusedDimensionStructure)
				constraint (InvokedByUnusedStructure
				or			LocalInvokedByUnusedStructure)
					"ActionNotValidForThisStructure"		
	
		CreateShadowForProject
			if (ContextStructure entered)
				LocalContextStructure = ContextStructure
			else
				LocalContextStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure
			LocalChildProject = LocalProject
			TopNodeFound  	  = false
			invoke Delete ProjectShadowRel2
			while (!TopNodeFound)
				invoke SetLocalContextStructure LocalProject
					invoked.PrmContextStructure = LocalContextStructure
				invoke Create ProjectShadow
					invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
					invoked.ProjectStructure 		= LocalContextStructure
					invoked.Project		   			= LocalChildProject
					invoked.ProjectType				= LocalChildProject.ProjectType
					invoked.SummaryProject   		= LocalProject.ProjectInLocalContextStructureRel.ParentProject

				if (LocalProject.ProjectType.Summary)
					invoke SetLevel LocalProject
				if (LocalProject.ProjectInLocalContextStructureRel.ParentProject.ProjectType.Node
				or  LocalProject not entered)
					TopNodeFound = true
				else
					LocalProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject			
				
		CheckSystemProject
			if (ContextStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure)
				if (EnterpriseSystemProjectRel exists)
					SystemProjectDefined	= true
				
				invoke SetSystemDimensionFlags FinanceEnterpriseGroup
					invoked.PrmDimension		= 11
					invoked.PrmSystemDimDefined	= SystemProjectDefined
			
		TriggerProjectCreatedAlert
			if (FinanceEnterpriseGroup.BODTrigger)
				trigger "ProjectAdditionService" PA service
					resume on error
					title is "EG:<FinanceEnterpriseGroup>Project:<Project>"
					Criteria
						FinanceEnterpriseGroup						
					Variables
						FinanceEnterpriseGroup
							variable name is FinanceEnterpriseGroup
						DisplayProject
							variable name is DisplayProject
						Project
							variable name is Project
						Description
							variable name is PDescription
						LocalContextStructure
							variable name is ProjStructure
						
		TriggerProjectStructureCreatedAlert
			if (FinanceEnterpriseGroup.BODTrigger)		
				trigger "ProjectStructureAdditionService" PA service
					resume on error
					title is "EG:<FinanceEnterpriseGroup>ProjectStructure:<ContextStructure>"
					Criteria
						FinanceEnterpriseGroup						
					Variables
						FinanceEnterpriseGroup
							variable name is FinanceEnterpriseGroup
						ContextStructure
							variable name is ProjStruct
						ContextStructure.Description
							variable name is PSDescription
						DisplayProject
							variable name is DisplayProject	
#ifdef module integration       	
	       		if(FSMBODConfigurationRel.Enable)
	       			LocalPulseAlertFrom = "FSM_ION_ProjectStructureAddAlert"
          			if(FSMBODConfigurationDetailRel.Enable)
			   			invoke ProjectStructureAddPulseAlert
#endif					
						
		DeleteRules
			if (FinanceEnterpriseGroup.BODTrigger)
				LocalActionCode = LocalActionCode.Delete
				increment bod id.VariationID
				include TriggerProjectRules



				trigger "ProjectDeletionService" PA service
					resume on error
					title is "EG:<FinanceEnterpriseGroup>Project:<Project>"
					Criteria
						FinanceEnterpriseGroup						
					Variables
						FinanceEnterpriseGroup
							variable name is FinanceEnterpriseGroup
						DisplayProject
							variable name is DisplayProject
						Project
							variable name is Project
						Description
							variable name is PDescription
						ContextStructure
							variable name is ProjStructure

#ifdef module integration
				invoke TriggerProjectDeleteAlert
					invoked.PrmPulseAlert = "FSM_ION_ProjectDeleteAlert"
#endif

		PeriodOfPerformanceBlock						
			for each PeriodOfPerformance.PeriodOfPerformanceSystem set
				LocalSystem = each.GeneralLedgerSystemCode
				if (ProjectPeriodOfPerformanceRel not exists)
					invoke Create ProjectPeriodOfPerformance
						fill in fields from each
						invoked.Project			        = LocalPOPProject

		SetParentContract
			LocalProject 	   = Project
			LocalParentProject = ProjectInEnterpriseStructureRel.ParentProject
			TopNodeFound = false
			while (!TopNodeFound)
				if (LocalParentProject.Contract
				or  LocalParentProject.ProjectType.Node
				or  LocalParentProject not entered)
					TopNodeFound	   = true
				else
					LocalProject 	   = LocalParentProject
					LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
			if (LocalParentProject.Contract)
				ParentDisplayContract = LocalParentProject.DisplayProject
			else
				initialize ParentDisplayContract
						


#ifdef module am						
		AssetDeleteEdits
			if (Capital)
				constraint (!AssetInterfaceOptionsRel exists)
					"CannotDelete;AssetInterfaceOptionsExistFor<FinanceEnterpriseGroup.ProjectLabel>"

		ProjectCapitalizationUpgrade
			if (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed)
				confirmation required
					"ThisWillRunCreateAssetCapitalTransactionsInBackground.CapitalizationProcessIsRestrictedUntilExtractProgramIsFinished"
				invoke ProjectCapitalizationUpgrade
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmProject					= Project
#endif
    Derived Fields  
			
		DerivedSecurityGroupAllowsAccess is a DerivedField
			type is Boolean
			if (ProjectType.Node)
				LocalSecurityGroupAllowsMaintenance = true
				return true
			if (ActorSecurityGroup not entered)
				LocalSecurityGroupAllowsMaintenance = true
				return true
			if (SecurityGroupDetailRel exists)
				if (parentcontext.name != "AccountAnalysisSettings")
					if (!SecurityGroupDetailRel.CreatedForHierarchyAccess)
						LocalSecurityGroupAllowsMaintenance = true
					return true
				else
					if (!SecurityGroupDetailRel.CreatedForHierarchyAccess)
						return true	
			return false
			    
		ActorSecurityGroup is a DerivedField
			type is like ProjectSecurityGroup
			return actor.context.ProjectSecurityGroup
			    
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforProjectMaster"
			
		ContextMessageText is a StringField
			type is Alpha 30
			restricted
			"Project<Project>"

  		DerivedRepresentativeText	is a DerivedField
			type is Alpha 120
			restricted
			if (IsTopNode)
				return Description
			else				
				return DerivedRepresentativeTextString
		DerivedRepresentativeTextString is a StringField	
			type is Alpha 120
			restricted
			DisplayProject
			" - "
			Description
		DerivedShadowCount 				is a DerivedField
			type is Numeric 8
			restricted
			return (instance count of ProjectShadow(SummaryProject) set)
    	DerivedSystemProject			is a DerivedField
    		type is Boolean
    		restricted
    		if (UseInputValue)
    			return false
   			else
   				return ProjectInContextStructureRel.SystemProject
		DerivedIncludeInBudgetEdit is a DerivedField
			type is Boolean
			restricted
    		if (UseInputValue)
    			return false
    		else
    			return ProjectInContextStructureRel.IncludeInBudgetEdit	      
		DerivedParentProject  is a DerivedField
			type is like Project
			restricted
			return ProjectInContextStructureRel.ParentProject
			
		DerivedSequenceNumber	is a DerivedField
			type is AlphaRight 7
			restricted
			return DerivedAlphaSequence[2:8]
		DerivedAlphaSequence	is a DerivedField
			type is AlphaRight 8
			restricted
			return (10000000 + SequenceNumber)
		StructureProjectExists 	 is a DerivedField
			type is Boolean
			restricted
			if (ProjectInContextStructureRel exists)
				return true
		DerivedTopNode	is a DerivedField
			type is like Project
			restricted
			return ContextStructure.ProjectNode				
		SummaryNodeString	    is a StringField
			type is AlphaUpper 25
			restricted
			LocalStructureSequence
			"_"
			NewProject
		ParentNodeString	    is a StringField
			type is AlphaUpper 25
			restricted
			ContextStructure.StructureSequence
			"_"
			NewProject			
		LikeSummaryPrefix		is a StringField
			type is AlphaUpper 15
			restricted
			ContextStructure.StructureSequence
			"_*"
		DerivedParentDisplayProject is a DerivedField
			type is like Project
			LocalParentProject = ProjectInContextStructureRel.ParentProject
			if (LocalParentProject != DerivedTopNode)
				return LocalParentProject.DisplayProject
		DerivedParentDescription is a DerivedField
			type is like Description
			LocalParentProject = ProjectInContextStructureRel.ParentProject
			if (LocalParentProject != DerivedTopNode)
				return LocalParentProject.Description
		DerivedEnterpriseParentDisplayProject is a DerivedField
			type is like Project
			LocalParentProject = ProjectInEnterpriseStructureRel.ParentProject
			if (LocalParentProject != DerivedTopNode)
				return LocalParentProject.DisplayProject
		DerivedNumberOfDecimals is a DerivedField
			type is Numeric size 1
			restricted
			if (ProjectReportingSettingsRel.ReportingCurrency.Project)
				if (Contract)
					return (Project.ProjectContract.Currency.NumberOfDecimals)
				else	
					return (Project.Currency.NumberOfDecimals)	
			else		
			if (ProjectReportingSettingsRel.ReportingCurrency.Report1)
				return FinanceEnterpriseGroup.ReportCurrencyOne.NumberOfDecimals			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report2)	
				return FinanceEnterpriseGroup.ReportCurrencyTwo.NumberOfDecimals			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report3)
				return FinanceEnterpriseGroup.ReportCurrencyThree.NumberOfDecimals			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report4)
				return FinanceEnterpriseGroup.ReportCurrencyFour.NumberOfDecimals			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report5)
				return FinanceEnterpriseGroup.ReportCurrencyFive.NumberOfDecimals			
		DerivedNumberOfDecimalsAll is a DerivedField
			type is Numeric size 1
			restricted
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Project)
				if (Contract)
					return (Project.ProjectContract.Currency.NumberOfDecimals)
				else	
					return (Project.Currency.NumberOfDecimals)	
			else		
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report1)
				return FinanceEnterpriseGroup.ReportCurrencyOne.NumberOfDecimals			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report2)	
				return FinanceEnterpriseGroup.ReportCurrencyTwo.NumberOfDecimals			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report3)
				return FinanceEnterpriseGroup.ReportCurrencyThree.NumberOfDecimals			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report4)
				return FinanceEnterpriseGroup.ReportCurrencyFour.NumberOfDecimals			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report5)
				return FinanceEnterpriseGroup.ReportCurrencyFive.NumberOfDecimals			

		DerivedProjectBudgetVariance is a DerivedField
			type is like TotalAmount

			return (ProjectBudgetAmount - ProjectActualAmount)
		DerivedProjectBudgetVarianceAll is a DerivedField
			type is like TotalAmount

			return (ProjectBudgetAmountAll - ProjectActualAmountAll)
		ProjectBudgetVariance is a DerivedField
			type is like TotalAmount

			if (ProjectBudgetAmount entered)
				return DerivedProjectBudgetVariance
			else
				return blank				
		ProjectBudgetVarianceAll is a DerivedField
			type is like TotalAmount

			if (ProjectBudgetAmountAll entered)
				return DerivedProjectBudgetVarianceAll
			else
				return blank				
		DerivedProjectBudgetVariancePercent is a DerivedField
			type is Percent 20.2
			return (ProjectBudgetVariance / ProjectBudgetAmount)
		DerivedProjectBudgetVariancePercentAll is a DerivedField
			type is Percent 20.2
			return (ProjectBudgetVarianceAll / ProjectBudgetAmountAll)
		ProjectBudgetVariancePercent is a DerivedField
			type is Percent 20.2
			if (ProjectBudgetAmount not entered)

				return blank	
			if (ProjectBudgetAmount entered	
			and ProjectActualAmount not entered)
				return 100%	
			else	
				return DerivedProjectBudgetVariancePercent
		ProjectBudgetVariancePercentAll is a DerivedField
			type is Percent 20.2
			if (ProjectBudgetAmountAll not entered)

				return blank	
			if (ProjectBudgetAmountAll entered	
			and ProjectActualAmountAll not entered)
				return 100%	
			else	
				return DerivedProjectBudgetVariancePercentAll
		PercentComplete is a DerivedField
			type is Percent 5.2
			return (ProjectActualAmount / ProjectBudgetAmount)
		PercentCompleteAll is a DerivedField
			type is Percent 5.2
			return (ProjectActualAmountAll / ProjectBudgetAmountAll)
		EstimatedRevenue	is a DerivedField	
			type is like TotalAmount			
				precision is DerivedNumberOfDecimals						
			return (PercentComplete * DerivedContractAmount)
		EstimatedRevenueAll	is a DerivedField	
			type is like TotalAmount			
				precision is DerivedNumberOfDecimals						
			return (PercentCompleteAll * DerivedContractAmount)
		CostToComplete	is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return (ProjectBudgetAmount - ProjectActualAmount)
		CostToCompleteAll	is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return (ProjectBudgetAmountAll - ProjectActualAmountAll)
		GrossMarginAmount is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return (DerivedContractAmount - ProjectActualAmount)
		GrossMarginAmountAll is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return (DerivedContractAmount - ProjectActualAmountAll)
		GrossMarginPercent is a DerivedField
			type is Percent 20.2
			return (GrossMarginAmount / DerivedContractAmount)
		GrossMarginPercentAll is a DerivedField
			type is Percent 20.2
			return (GrossMarginAmountAll / DerivedContractAmount)
		GrossMarginRevenue	is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return ((1 / (1-GrossMarginPercent)) * ProjectActualAmount)
		GrossMarginRevenueAll	is a DerivedField	
			type is like TotalAmount				
				precision is DerivedNumberOfDecimals					
			return ((1 / (1-GrossMarginPercentAll)) * ProjectActualAmountAll)
		DerivedContractAmount is a DerivedField
			type is like TotalAmount
				precision is DerivedNumberOfDecimals			
			if (Contract)
				return Project.ProjectContract.ContractAmount
			else
				if (ParentDisplayContract entered)	
					return ParentDisplayContractRel.ProjectContract.ContractAmount
		RevenuePreviouslyRecognized is a DerivedField
			type is like TotalAmount
				precision is DerivedNumberOfDecimals			
			if (Contract)
				return (Project.ProjectContract.TotalRecognizedAmount)
			else	
				return blank 
		RevenueRecognized is a DerivedField
			type is like TotalAmount
				precision is DerivedNumberOfDecimals			
			if (Contract)			
				return (EstimatedRevenue - RevenuePreviouslyRecognized)
			else
				return blank	
		RevenueRecognizedAll is a DerivedField
			type is like TotalAmount
				precision is DerivedNumberOfDecimals			
			if (Contract)			
				return (EstimatedRevenueAll - RevenuePreviouslyRecognized)
			else
				return blank	
		DerivedContractCurrency is a DerivedField
			type is like Currency
			if (Contract)
				return (Project.ProjectContract.Currency)
			else	
				return (Project.Currency)	
		TotalObligations is a DerivedField
			type is like CurrencyAmount

			return  (ProjectActualAmount + ProjectEncumbranceAmount + ProjectCommitmentAmount)				
		TotalObligationsAll is a DerivedField
			type is like CurrencyAmount

			return  (ProjectActualAmountAll + ProjectEncumbranceAmountAll + ProjectCommitmentAmountAll)				
		RemainingBudget is a DerivedField	
			type is like CurrencyAmount

			return (ProjectBudgetAmount - TotalObligations)			
		RemainingBudgetAll is a DerivedField	
			type is like CurrencyAmount

			return (ProjectBudgetAmountAll - TotalObligationsAll)			
		DerivedRedDueDateAlertOffset is a DerivedField
			type is Numeric 6
			restricted
			return 30
		RedDueDateAlert is a ComputeField
			type is Date
			restricted
			(ProjectDateRange.EndDate - DerivedRedDueDateAlertOffset as days)
		DerivedProjectReportingSettings is a DerivedField
			type is like ProjectReportingSettings
			restricted
			if (ContextProjectReportingSettings entered)
				return ContextProjectReportingSettings
			else	
				return actor.context.ProjectReportingSettings
		DerivedProjectReportingSettingsAll is a DerivedField
			type is like ProjectReportingSettingsAll
			restricted
			if (ContextProjectReportingSettingsAll entered)
				return ContextProjectReportingSettingsAll
			else	
				return actor.context.ProjectReportingSettingsAll

    	IsMyProject is a DerivedField
    		type is Boolean
    		restricted
    		LocalProject = Project
    		LocalContextStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure
    		for each ProjectShadowRel2
    			if (each.SummaryProject.PersonResponsible = actor.agent(Employee).Employee)
    				return true
    			else
    			if (each.SummaryProject.MyTeamRel exists)
    				return true
		PersonResponsibleEmail is a DerivedField
	    	type is Alpha 100
	    	restricted
	    	return EmployeeRel.EmployeeWorkEmailAddress
		PersonResponsiblePhone is a DerivedField
		   	type is Alpha 100
		   	restricted
		 	return EmployeeRel.EmployeeWorkTelephone
		PersonResponsibleName is a DerivedField
			type is Alpha 101
			restricted
		   	return EmployeeRel.FirstLastName
		WatchedByEmail is a DerivedField
	    	type is Alpha 100
	    	restricted
	    	return WatchedByEmployeeRel.EmployeeWorkEmailAddress
		WatchedByPhone is a DerivedField
		   	type is Alpha 100
		   	restricted
		 	return WatchedByEmployeeRel.EmployeeWorkTelephone
		WatchedByName is a DerivedField
			type is Alpha 101
			restricted
		   	return WatchedByEmployeeRel.FirstLastName
		DerivedRoundTo is a DerivedField
    		type is Decimal 5.4
    		restricted
    		if (Currency.NumberOfDecimals = 2)
    			return .01
    		else
    		if (Currency.NumberOfDecimals = 0)
    			return 1
    		else
    		if (Currency.NumberOfDecimals = 3)
    			return .001
    		else
    		if (Currency.NumberOfDecimals = 4)
    			return .0001
    			
    	DerivedRepresentativeTextWebWidget	is a DerivedField
			type is Alpha 120
			if (IsTopNode)
				return Description
			else				
				return DerivedRepresentativeTextString


#ifdef module integration 
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "releaseID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "logicalID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "VersionID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedappProdline is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "appProdline"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedAccountingEntity is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "CodeDefinition_FinanceDimension_AccountingEntity"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedConfigFEG is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IsMultipleFEG"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedConfigDocID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedTriggerCrossReference is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "TriggerBODBasedOnCrossReference"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
#endif				


		DerivedUpdatedBy is a DerivedField
			type is Alpha size 60
			restricted
			return update stamp.actor
					
		DerivedBODCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			DerivedBODCurrentTimeStamp = current timestamp
			return DerivedBODCurrentTimeStamp
		 		
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			restricted
			return DerivedBODCurrentTimeStamp[1:4] + "-" + DerivedBODCurrentTimeStamp[5:6] + "-" + DerivedBODCurrentTimeStamp[7:8] + "T" + DerivedBODCurrentTimeStamp[9:10] + ":" + DerivedBODCurrentTimeStamp[11:12] + ":" + DerivedBODCurrentTimeStamp[13:14] + "Z"

		DerivedBODFormattedBeginDate is a DerivedField
			type is Alpha size 25
			restricted	
			DerivedBODFormattedBeginDate = ProjectDateRange.BeginDate
			if (ProjectDateRange.BeginDate entered)
				return DerivedBODFormattedBeginDate[1:4]+ "-" + DerivedBODFormattedBeginDate[5:6] + "-" + DerivedBODFormattedBeginDate[7:8]
			else
				return ""
				
		DerivedBODFormattedEndDate is a DerivedField
			type is Alpha size 25
			restricted
			DerivedBODFormattedEndDate = ProjectDateRange.EndDate
			if (ProjectDateRange.EndDate entered)
				return DerivedBODFormattedEndDate[1:4]+ "-" + DerivedBODFormattedEndDate[5:6] + "-" + DerivedBODFormattedEndDate[7:8]
			else
				return ""
				
		DerivedBODVariationID is a DerivedField
			type is Alpha size 25
			restricted
			return  bod id.VariationID
		
		DerivedBODActionCode is a DerivedField
			type is Alpha size 10
			restricted
			if (LocalActionCode="C" or LocalActionCode.Create or action type.Create)
				return "Add"
			else
				return "Replace" 
				
#ifdef module integration									
		DerivedDocumentID is a DerivedField
			type is Alpha size 60
			restricted
			if (DerivedConfigDocID = "Y")
				return Project
			else
				return FinanceEnterpriseGroup + DerivedDelimiter + Project

		DerivedProjectMasterBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":::" +DerivedDocumentID + ":" +"?ProjectMaster&verb=Sync&TrackerID=" + LocalFSMInboundBODTracker
				
		DerivedProjectManagerPerson is a DerivedField
			type is Alpha size 60
			restricted
			if (PersonResponsible not entered)
				return ""
			else	
				return PersonResponsible
				
		DerivedPostingFlag is a DerivedField
			type is Boolean
			restricted
			if (ProjectType.Posting)
				return true
			else
				return false		
		
		DerivedBODStatusCode is a DerivedField
			type is Alpha size 60
			restricted	
			if (LocalActionCode = "D" or LocalActionCode.Delete )
				return "Deleted"
			else
			if (Active)
				return "Open"
			else	
				return "Closed"
	
		EmployeePropertyXML is a DerivedField
			type is XMLDocument
			restricted
			if (ProjectAssignmentsRel exists)
				initialize LocalSequence
				for each ProjectAssignmentsRel
					LocalSequence = LocalSequence + 1
					each.LocalSequenceNum =  LocalSequence
					EmployeePropertyXML += template.IONSyncProjectMaster_EmployeeProperty_ST document for each
				return EmployeePropertyXML
			else
				return ""
				
		DerivedProjectPersonnelEmployeeXML is a DerivedField
            type is XMLDocument
            restricted
            if (ProjectPersonnelRel exists)
				initialize LocalSequence
                for each ProjectPersonnelRel
                    LocalSequence = LocalSequence + 1
					each.LocalSequenceNumber =  LocalSequence
                    DerivedProjectPersonnelEmployeeXML += template.IONSyncProjectMaster_ProjectPersonnelEmployeeProperty_ST document for each
                return DerivedProjectPersonnelEmployeeXML
            else
                return ""

		DerivedApprover is a DerivedField
			type is Alpha size 30
			restricted
			if (ProjectPersonnelRel exists)
				for each ProjectPersonnelRel
					if (each.ProjectPersonnelRel exists)
						DerivedApprover = each.ProjectPersonnelRel.Employee
					else
						return ""
				return DerivedApprover
			else
				return ""
		
#endif



		SyncProjectMasterXMLBOD is a DerivedField 
	        type is XMLDocument
	        restricted 
			SyncProjectMasterXMLBOD = template.IONSyncProjectMaster_Project_ST document for this instance

		
		CommentsMF is a MessageField
			restricted
			"AddComments"

		CommentsExistMF is a MessageField
			restricted
			"CommentsExist"

		ChangeDateRangeCompletedMF is a MessageField
			restricted
			"ChangeDateRangeActionComplete"

		ChangeDateRangeSubmittedMF is a MessageField
			restricted
			"ChangeDateRangeActionHasBeenSubmitted"

		UpdateFringeCompletedMF is a MessageField
			restricted
			"UpdateAssignmentFringeActionComplete"

		UpdateFringeSubmittedMF is a MessageField
			restricted
			"UpdateAssignmentFringeActionHasBeenSubmitted"

		UpdateCodeBlocksCompletedMF is a MessageField
			restricted
			"UpdateAssignmentLaborActionComplete"

		UpdateCodeBlocksSubmittedMF is a MessageField
			restricted
			"UpdateAssignmentLaborActionHasBeenSubmitted"

		POPCommentsMessage is a ConditionalField
			type is Alpha size 20
			restricted
			if (IsPeriodOfPerformance)
				CommentsExistMF
			else
				CommentsMF

		PostingPOPMessage is a MessageField
			restricted
			"LoadPeriodOfPerformanceForThis<FinanceEnterpriseGroup.ProjectLabel>"
		SummaryPOPMessage is a MessageField
			restricted
			"LoadPeriodOfPerformanceForAllPostingsUnderThisSummaryLevel<FinanceEnterpriseGroup.ProjectLabel>"
		PeriodOfPerformanceMessage is a ConditionalField
			type is Alpha size 200
			restricted
			if (ProjectType.Posting)
				PostingPOPMessage
			else
				SummaryPOPMessage
			
		DerivedSalaryCapVersionDate is a DerivedField
			type is Date
			restricted
			if (SalaryCapDate.ProjectStartDate)
				return ProjectDateRange.BeginDate
			else
    			return current corporate date			

		AncestorContract is a DerivedField
			type is like Project
			LocalProject 	   = Project
			LocalParentProject = ProjectInContextStructureRel.ParentProject
			TopNodeFound = false
			while (!TopNodeFound)
				if (LocalParentProject.Contract
				or  LocalParentProject.ProjectType.Node
				or  LocalParentProject not entered)
					TopNodeFound	   = true
				else
					LocalProject 	   = LocalParentProject
					LocalParentProject = LocalProject.ProjectInContextStructureRel.ParentProject
			if (LocalParentProject.Contract)
				return LocalParentProject.Project

		DisplayEnterpriseAncestorContract is a DerivedField
			type is like Project
			return ParentDisplayContract
			
		AncestorPersonResponsible is a DerivedField
			type is like Employee

			LocalProject 	   		= Project
			LocalContextStructure	= FinanceEnterpriseGroup.EnterpriseProjectStructure			
			LocalParentProject		= ProjectInLocalContextStructureRel.ParentProject
			TopNodeFound = false
			while (!TopNodeFound)
				if (LocalParentProject.PersonResponsible entered
				or  LocalParentProject.ProjectType.Node
				or  LocalParentProject not entered)
					TopNodeFound	   = true
				else
					LocalProject 	   = LocalParentProject
					LocalParentProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject
			if (LocalParentProject.PersonResponsible entered)
				return LocalParentProject.PersonResponsible
				
		AncestorPersonResponsibleName is a DerivedField
			type is Alpha size 230

			LocalProject 	   		= Project
			LocalContextStructure	= FinanceEnterpriseGroup.EnterpriseProjectStructure			
			LocalParentProject		= ProjectInLocalContextStructureRel.ParentProject
			TopNodeFound = false
			while (!TopNodeFound)
				if (LocalParentProject.PersonResponsible entered
				or  LocalParentProject.ProjectType.Node
				or  LocalParentProject not entered)
					TopNodeFound	   = true
				else
					LocalProject 	   = LocalParentProject
					LocalParentProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject
			if (LocalParentProject.PersonResponsible entered)
				return LocalParentProject.PersonResponsible.PresentationNameSnapshot

		AncestorProjectTeam is a DerivedField
			type is like ProjectTeam

			LocalProject 	   		= Project
			LocalContextStructure	= FinanceEnterpriseGroup.EnterpriseProjectStructure			
			LocalParentProject		= ProjectInLocalContextStructureRel.ParentProject
			TopNodeFound = false
			while (!TopNodeFound)
				if (LocalParentProject.ProjectTeam entered
				or  LocalParentProject.ProjectType.Node
				or  LocalParentProject not entered)
					TopNodeFound	   = true
				else
					LocalProject 	   = LocalParentProject
					LocalParentProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject
			if (LocalParentProject.ProjectTeam entered)
				return LocalParentProject.ProjectTeam

		BlankField is a DerivedField
			type is Alpha 1
			return blank

		ProjectAssignmentCount is a DerivedField
			type is Numeric size 8
			return instance count of ProjectAssignment(Project) set

		DerivedProjectInvoiceBalance is a DerivedField
			type is like InternationalAmount
			return sum ProjectContractInvoiceBalancesRel.Amount	

		DerivedAllProjectInvoiceBalance is a DerivedField
			type is like InternationalAmount
			return OpenInvoiceAmount + DerivedProjectInvoiceBalance
						
		DerivedProjectBudgetRemaining is a DerivedField
			type is like InternationalAmount
			if (ContextProjectContract.Scenario entered)			
				return BudgetAmount - DerivedAllProjectInvoiceBalance	

		OpenInvoiceAmount is a DerivedField
			type is like InternationalAmount
			return sum OpenBillingInvoiceLineRel.Amount
			
		RemainingBillable is a DerivedField
			type is like InternationalAmount
			if (BillingMaximum > TotalBilledAmount)
				return BillingMaximum - TotalBilledAmount
			else
				return 0

		RemainingRevenue is a DerivedField
			type is like InternationalAmount
			if (BillingMaximum > TotalRecognizedAmount)
				return BillingMaximum - TotalRecognizedAmount
			else
				return 0

		TotalBilledAmount is a DerivedField
			type is like InternationalAmount
			return TotalBilled + sum ProjectContractInvoiceBalanceAdjustmentsRel.AdjustedAmount + sum HistoricalBillingMilestoneRel.Amount

		TotalRecognizedAmount is a DerivedField
			type is like InternationalAmount
			return TotalRecognized + sum ProjectContractInvoiceBalanceAdjustmentsRel.AdjustedRevenueAmount + sum HistoricalRevenueMilestoneRel.Amount

		DerivedReportingPeriodLabel is a DerivedField
			type is Alpha 30
			if (ProjectReportingSettingsRel.ReportingDate entered)
				return ProjectReportingSettingsRel.ReportingDate.DisplayPeriod 

		DerivedReportingPeriodAllLabel is a DerivedField
			type is Alpha 30
			if (ProjectReportingSettingsAllRel.ReportingDate entered)
				return ProjectReportingSettingsAllRel.ReportingDate.DisplayPeriod 

		DerivedPriorReportingPeriodLabel is a DerivedField
			type is Alpha 30
			if (ProjectReportingSettingsRel.ComparisonPeriodEndDate entered)
				return ProjectReportingSettingsRel.ComparisonPeriodEndDate.DisplayPeriod 

		DerivedPriorReportingPeriodAllLabel is a DerivedField
			type is Alpha 30
			if (ProjectReportingSettingsAllRel.ComparisonPeriodEndDate entered)
				return ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.DisplayPeriod 
			
		DisplayReportingCurrency is a DerivedField
			type is like Currency			
			if (ProjectReportingSettingsRel.ReportingCurrency.Project)
				if (Contract)
					return (Project.ProjectContract.Currency)
				else	
					return (Project.Currency)	
			if (ProjectReportingSettingsRel.ReportingCurrency.Report1)
				return FinanceEnterpriseGroup.ReportCurrencyOne			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report2)	
				return FinanceEnterpriseGroup.ReportCurrencyTwo			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report3)
				return FinanceEnterpriseGroup.ReportCurrencyThree			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report4)
				return FinanceEnterpriseGroup.ReportCurrencyFour			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report5)
				return FinanceEnterpriseGroup.ReportCurrencyFive			

		DisplayReportingCurrencyAll is a DerivedField
			type is like Currency			
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Project)
				if (Contract)
					return (Project.ProjectContract.Currency)
				else	
					return (Project.Currency)	
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report1)
				return FinanceEnterpriseGroup.ReportCurrencyOne			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report2)	
				return FinanceEnterpriseGroup.ReportCurrencyTwo			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report3)
				return FinanceEnterpriseGroup.ReportCurrencyThree			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report4)
				return FinanceEnterpriseGroup.ReportCurrencyFour			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report5)
				return FinanceEnterpriseGroup.ReportCurrencyFive			

		DerivedProjectExpenses is a DerivedField 
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			return (sum ProjectExpenseGeneralLedgerTotalsRel.NetProjectAmount)

		TempDerivedProjectRevenue is a DerivedField 
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			return (sum ProjectRevenueGeneralLedgerTotalsRel.NetProjectAmount)

		DerivedProjectRevenue is a DerivedField
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			if (TempDerivedProjectRevenue >=0)
				return TempDerivedProjectRevenue
			else
				return TempDerivedProjectRevenue *-1				

		TempDerivedProjectAsset is a DerivedField 
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			return (sum ProjectAssetGeneralLedgerTotalsRel.NetProjectAmount)

		DerivedProjectAsset  is a DerivedField
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			if (TempDerivedProjectAsset >=0)
				return TempDerivedProjectAsset
			else
				return TempDerivedProjectAsset *-1				

		TempDerivedProjectLiability is a DerivedField 
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			return (sum ProjectLiabilityGeneralLedgerTotalsRel.NetProjectAmount)

		DerivedProjectLiability  is a DerivedField
			type is like InternationalAmount
				precision is Currency.NumberOfDecimals
			if (TempDerivedProjectLiability >=0)
				return TempDerivedProjectLiability
			else
				return TempDerivedProjectLiability *-1				
			
		InactiveMF is a MessageField
			restricted
			"INACTIVE"

		ActiveMF is a MessageField
			restricted
			"ACTIVE"
						
		StatusMessage is a ConditionalField
			type is Alpha size 20
			if (Active)
				ActiveMF//""
			else
				InactiveMF

        BudgetTemplateChangesPendingMF is a DerivedField
            type is MessageField
            return "Budget Template Changes Pending"				

        CommentsExistsMF is a DerivedField
            type is MessageField
            return "Comments Exists"				
				
		BudgetCubeMap is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode entered)
				BudgetCubeMap += "related.AccountingEntity = ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				BudgetCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode entered)
				if (ProjectReportingSettingsRel.ReportingAccount entered)			
					BudgetCubeMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount\n"
				else
					BudgetCubeMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode\n"						
			if (ProjectReportingSettingsRel.Scenario.Basis.ProjectTopNode entered)
				if (ProjectReportingSettingsRel.Scenario.HasPostingProject = true)			
					BudgetCubeMap += "related.GeneralLedgerTotal.Project = Project\n"


			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1TopNode entered)
				BudgetCubeMap += "related.FinanceDimension1 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2TopNode entered)
				BudgetCubeMap += "related.FinanceDimension2 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3TopNode entered)
				BudgetCubeMap += "related.FinanceDimension3 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4TopNode entered)
				BudgetCubeMap += "related.FinanceDimension4 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5TopNode entered)
				BudgetCubeMap += "related.FinanceDimension5 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6TopNode entered)
				BudgetCubeMap += "related.FinanceDimension6 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7TopNode entered)
				BudgetCubeMap += "related.FinanceDimension7 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8TopNode entered)
				BudgetCubeMap += "related.FinanceDimension8 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9TopNode entered)
				BudgetCubeMap += "related.FinanceDimension9 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10TopNode entered)
				BudgetCubeMap += "related.FinanceDimension10 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

		BudgetCubeMapAll is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode entered)
				BudgetCubeMapAll += "related.AccountingEntity = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				BudgetCubeMapAll += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode entered)
				if (ProjectReportingSettingsAllRel.ReportingAccount entered)			
					BudgetCubeMapAll += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount\n"
				else
					BudgetCubeMapAll += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode\n"						
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ProjectTopNode entered)
				if (ProjectReportingSettingsAllRel.Scenario.HasPostingProject = true)			
					BudgetCubeMapAll += "related.GeneralLedgerTotal.Project = Project\n"


			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension1 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension2 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension3 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension4 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension5 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension6 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension7 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension8 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension9 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10TopNode entered)
				BudgetCubeMapAll += "related.FinanceDimension10 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"
			
		ActualCubeMap is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode entered)
				ActualCubeMap += "related.AccountingEntity = ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				ActualCubeMap += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode entered)
				if (ProjectReportingSettingsRel.ReportingAccount entered)	
					ActualCubeMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount\n"	
				else
					ActualCubeMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode\n"	
			if (ProjectReportingSettingsRel.Scenario.Basis.ProjectTopNode entered)
				ActualCubeMap += "related.GeneralLedgerTotal.Project = Project\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1TopNode entered)
				ActualCubeMap += "related.FinanceDimension1 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2TopNode entered)
				ActualCubeMap += "related.FinanceDimension2 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3TopNode entered)
				ActualCubeMap += "related.FinanceDimension3 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4TopNode entered)
				ActualCubeMap += "related.FinanceDimension4 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5TopNode entered)
				ActualCubeMap += "related.FinanceDimension5 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6TopNode entered)
				ActualCubeMap += "related.FinanceDimension6 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7TopNode entered)
				ActualCubeMap += "related.FinanceDimension7 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8TopNode entered)
				ActualCubeMap += "related.FinanceDimension8 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9TopNode entered)
				ActualCubeMap += "related.FinanceDimension9 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10TopNode entered)
				ActualCubeMap += "related.FinanceDimension10 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

		ActualCubeMapAll is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode entered)
				ActualCubeMapAll += "related.AccountingEntity = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				ActualCubeMapAll += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode entered)
				if (ProjectReportingSettingsAllRel.ReportingAccount entered)	
					ActualCubeMapAll += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount\n"	
				else
					ActualCubeMapAll += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode\n"	
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ProjectTopNode entered)
				ActualCubeMapAll += "related.GeneralLedgerTotal.Project = Project\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension1 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension2 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension3 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension4 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension5 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension6 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension7 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension8 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension9 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10TopNode entered)
				ActualCubeMapAll += "related.FinanceDimension10 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

		ActualCubeUREMap is a DerivedField
			type is LPLText
			restricted
			LocalGeneralLedgerChartAccountURE = first GeneralLedgerChartAccountURERel.GeneralLedgerChartAccount
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode entered)
				ActualCubeUREMap += "related.AccountingEntity = ProjectReportingSettingsRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				ActualCubeUREMap += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode entered)
				ActualCubeUREMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccountURE\n"	
			if (ProjectReportingSettingsRel.Scenario.Basis.ProjectTopNode entered)
				ActualCubeUREMap += "related.GeneralLedgerTotal.Project = Project\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension1 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension2 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension3 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension4 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension5 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension6 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension7 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension8 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension9 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10TopNode entered)
				ActualCubeUREMap += "related.FinanceDimension10 = ProjectReportingSettingsRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

		ActualCubeUREMapAll is a DerivedField
			type is LPLText
			restricted
			LocalGeneralLedgerChartAccountURE = first GeneralLedgerChartAccountURERel.GeneralLedgerChartAccount
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode entered)
				ActualCubeUREMapAll += "related.AccountingEntity = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingEntityTopNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode entered)
				ActualCubeUREMapAll += "related.GeneralLedgerTotal.AccountingUnit = ProjectReportingSettingsAllRel.Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode entered)
				ActualCubeUREMapAll += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalGeneralLedgerChartAccountURE\n"	
			if (ProjectReportingSettingsAllRel.Scenario.Basis.ProjectTopNode entered)
				ActualCubeUREMapAll += "related.GeneralLedgerTotal.Project = Project\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension1 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension2 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension3 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension4 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension5 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension6 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension7 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension8 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension9 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10TopNode entered)
				ActualCubeUREMapAll += "related.FinanceDimension10 = ProjectReportingSettingsAllRel.Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

		DynamicMeasure is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsRel.ReportingCurrency.Project)
				DynamicMeasure = "NetProjectAmount"	
			else			
			if (ProjectReportingSettingsRel.ReportingCurrency.Report1)
				DynamicMeasure = "NetReportAmount1"			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report2)	
				DynamicMeasure = "NetReportAmount2"					
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report3)
				DynamicMeasure = "NetReportAmount3"			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report4)
				DynamicMeasure = "NetReportAmount4"			
			else
			if (ProjectReportingSettingsRel.ReportingCurrency.Report5)
				DynamicMeasure = "NetReportAmount5"			

		DynamicMeasureAll is a DerivedField
			type is LPLText
			restricted
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Project)
				DynamicMeasureAll = "NetProjectAmount"	
			else			
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report1)
				DynamicMeasureAll = "NetReportAmount1"			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report2)	
				DynamicMeasureAll = "NetReportAmount2"					
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report3)
				DynamicMeasureAll = "NetReportAmount3"			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report4)
				DynamicMeasureAll = "NetReportAmount4"			
			else
			if (ProjectReportingSettingsAllRel.ReportingCurrency.Report5)
				DynamicMeasureAll = "NetReportAmount5"			
			
			
		ProjectBudgetAmount is a DerivedField
			type is like InternationalAmount
			if (LocalProjectBudgetCalculated)
				return LocalProjectBudgetAmount
			
			LocalProjectBudgetCalculated = true
			if (DynamicMeasure = "NetProjectAmount")
				LocalProjectBudgetAmount = ProjectBudgetRel.NetProjectAmount							
			else
			if (DynamicMeasure = "NetReportAmount1")
				LocalProjectBudgetAmount = ProjectBudgetRel.NetReportAmount1							
			else
			if (DynamicMeasure = "NetReportAmount2")
				LocalProjectBudgetAmount = ProjectBudgetRel.NetReportAmount2							
			else
			if (DynamicMeasure = "NetReportAmount3")
				LocalProjectBudgetAmount = ProjectBudgetRel.NetReportAmount3							
			else
			if (DynamicMeasure = "NetReportAmount4")	
				LocalProjectBudgetAmount = ProjectBudgetRel.NetReportAmount4							
			else
			if (DynamicMeasure = "NetReportAmount5")
				LocalProjectBudgetAmount = ProjectBudgetRel.NetReportAmount5							
				
			return LocalProjectBudgetAmount								

		ProjectBudgetAmountAll is a DerivedField
			type is like InternationalAmount
			if (LocalProjectBudgetCalculated)
				return LocalProjectBudgetAmount
			
			LocalProjectBudgetCalculated = true
			if (DynamicMeasureAll = "NetProjectAmount")
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetProjectAmount							
			else
			if (DynamicMeasureAll = "NetReportAmount1")
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetReportAmount1							
			else
			if (DynamicMeasureAll = "NetReportAmount2")
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetReportAmount2							
			else
			if (DynamicMeasureAll = "NetReportAmount3")
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetReportAmount3							
			else
			if (DynamicMeasureAll = "NetReportAmount4")	
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetReportAmount4							
			else
			if (DynamicMeasureAll = "NetReportAmount5")
				LocalProjectBudgetAmount = ProjectBudgetAllRel.NetReportAmount5							
				
			return LocalProjectBudgetAmount								

		ProjectOriginalBudgetAmount is a DerivedField
			type is like InternationalAmount
			if (LocalProjectOriginalBudgetCalculated)
				return LocalProjectOriginalBudgetAmount
			
			LocalProjectOriginalBudgetCalculated = true
			if (DynamicMeasure = "NetProjectAmount")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetProjectAmount							
			else
			if (DynamicMeasure = "NetReportAmount1")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetReportAmount1							
			else
			if (DynamicMeasure = "NetReportAmount2")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetReportAmount2							
			else
			if (DynamicMeasure = "NetReportAmount3")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetReportAmount3							
			else
			if (DynamicMeasure = "NetReportAmount4")	
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetReportAmount4							
			else
			if (DynamicMeasure = "NetReportAmount5")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetRel.NetReportAmount5							
				
			return LocalProjectOriginalBudgetAmount								

		ProjectOriginalBudgetAmountAll is a DerivedField
			type is like InternationalAmount
			if (LocalProjectOriginalBudgetCalculated)
				return LocalProjectOriginalBudgetAmount
			
			LocalProjectOriginalBudgetCalculated = true
			if (DynamicMeasureAll = "NetProjectAmount")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetProjectAmount							
			else
			if (DynamicMeasureAll = "NetReportAmount1")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetReportAmount1							
			else
			if (DynamicMeasureAll = "NetReportAmount2")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetReportAmount2							
			else
			if (DynamicMeasureAll = "NetReportAmount3")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetReportAmount3							
			else
			if (DynamicMeasureAll = "NetReportAmount4")	
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetReportAmount4							
			else
			if (DynamicMeasureAll = "NetReportAmount5")
				LocalProjectOriginalBudgetAmount = ProjectOrignalBudgetAllRel.NetReportAmount5							
				
			return LocalProjectOriginalBudgetAmount								
		
		ProjectOrignalBudgetAmount is a DerivedField 
			type is like InternationalAmount
			default label is "ProjectOriginalBudgetAmount"


			


















			LocalProjectOrignalBudgetAmount = 1				
			return LocalProjectOrignalBudgetAmount								

		ProjectActualAmount is a DerivedField
			type is like InternationalAmount
			if (LocalProjectActualCalculated)
				return LocalProjectActualAmount
			
			LocalProjectActualCalculated = true
			if (DynamicMeasure = "NetProjectAmount")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetProjectAmount - ProjectActualURERel.NetProjectAmount  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetProjectAmount							
			else
			if (DynamicMeasure = "NetReportAmount1")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount1 - ProjectActualURERel.NetReportAmount1  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount1							
			else
			if (DynamicMeasure = "NetReportAmount2")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount2 - ProjectActualURERel.NetReportAmount2  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount2							
			else
			if (DynamicMeasure = "NetReportAmount3")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount3 - ProjectActualURERel.NetReportAmount3  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount3							
			else
			if (DynamicMeasure = "NetReportAmount4")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount4 - ProjectActualURERel.NetReportAmount4  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount4							
			else
			if (DynamicMeasure = "NetReportAmount5")
				if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount5 - ProjectActualURERel.NetReportAmount5  
				else	 
					LocalProjectActualAmount = ProjectActualRel.NetReportAmount5							
					
			return LocalProjectActualAmount							

		ProjectActualAmountAll is a DerivedField
			type is like InternationalAmount
			if (LocalProjectActualCalculated)
				return LocalProjectActualAmount
			
			LocalProjectActualCalculated = true
			if (DynamicMeasureAll = "NetProjectAmount")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetProjectAmount - ProjectActualUREAllRel.NetProjectAmount  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetProjectAmount							
			else
			if (DynamicMeasureAll = "NetReportAmount1")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount1 - ProjectActualUREAllRel.NetReportAmount1  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount1							
			else
			if (DynamicMeasureAll = "NetReportAmount2")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount2 - ProjectActualUREAllRel.NetReportAmount2  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount2							
			else
			if (DynamicMeasureAll = "NetReportAmount3")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount3 - ProjectActualUREAllRel.NetReportAmount3  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount3							
			else
			if (DynamicMeasureAll = "NetReportAmount4")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount4 - ProjectActualUREAllRel.NetReportAmount4  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount4							
			else
			if (DynamicMeasureAll = "NetReportAmount5")
				if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount5 - ProjectActualUREAllRel.NetReportAmount5  
				else	 
					LocalProjectActualAmount = ProjectActualAllRel.NetReportAmount5							
					
			return LocalProjectActualAmount							

		ProjectPriorActualAmount is a DerivedField
			type is like InternationalAmount
			if (ProjectReportingSettingsRel.ComparisonPeriodEndDate entered)			
				if (LocalProjectPriorActualCalculated)
					return LocalProjectPriorActualAmount
				
				LocalProjectPriorActualCalculated = true
				if (DynamicMeasure = "NetProjectAmount")
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetProjectAmount - ProjectPriorActualURERel.NetProjectAmount  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetProjectAmount							
				else
				if (DynamicMeasure = "NetReportAmount1")
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount1 - ProjectPriorActualURERel.NetReportAmount1  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount1							
				else
				if (DynamicMeasure = "NetReportAmount2")
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount2 - ProjectPriorActualURERel.NetReportAmount2  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount2							
				else
				if (DynamicMeasure = "NetReportAmount3")
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount3 - ProjectPriorActualURERel.NetReportAmount3  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount3							
				else
				if (DynamicMeasure = "NetReportAmount4")	
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount4 - ProjectPriorActualURERel.NetReportAmount4  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount4							
				else
				if (DynamicMeasure = "NetReportAmount5")
					if (ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount5 - ProjectPriorActualURERel.NetReportAmount5  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount5							
						
				return LocalProjectPriorActualAmount							

		ProjectPriorActualAmountAll is a DerivedField
			type is like InternationalAmount
			if (ProjectReportingSettingsAllRel.ComparisonPeriodEndDate entered)	
				if (LocalProjectPriorActualCalculated)
					return LocalProjectPriorActualAmount
				
				LocalProjectPriorActualCalculated = true
				if (DynamicMeasureAll = "NetProjectAmount")
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetProjectAmount - ProjectPriorActualUREAllRel.NetProjectAmount  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetProjectAmount							
				else
				if (DynamicMeasureAll = "NetReportAmount1")
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount1 - ProjectPriorActualUREAllRel.NetReportAmount1  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount1							
				else
				if (DynamicMeasureAll = "NetReportAmount2")
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount2 - ProjectPriorActualUREAllRel.NetReportAmount2  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount2							
				else
				if (DynamicMeasureAll = "NetReportAmount3")
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount3 - ProjectPriorActualUREAllRel.NetReportAmount3  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount3							
				else
				if (DynamicMeasureAll = "NetReportAmount4")	
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount4 - ProjectPriorActualUREAllRel.NetReportAmount4  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualRel.NetReportAmount4							
				else
				if (DynamicMeasureAll = "NetReportAmount5")
					if (ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount5 - ProjectPriorActualUREAllRel.NetReportAmount5  
					else	 
						LocalProjectPriorActualAmount = ProjectPriorActualAllRel.NetReportAmount5							
						
				return LocalProjectPriorActualAmount							

		ProjectEncumbranceAmount is a DerivedField
			type is like InternationalAmount
			if (LocalProjectEncumbranceCalculated)
				return LocalProjectEncumbranceAmount
			
			LocalProjectEncumbranceCalculated = true
			if (DynamicMeasure = "NetProjectAmount")
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetProjectAmount							
			else
			if (DynamicMeasure = "NetReportAmount1")
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetReportAmount1							
			else
			if (DynamicMeasure = "NetReportAmount2")
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetReportAmount2							
			else
			if (DynamicMeasure = "NetReportAmount3")
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetReportAmount3							
			else
			if (DynamicMeasure = "NetReportAmount4")	
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetReportAmount4							
			else
			if (DynamicMeasure = "NetReportAmount5")
				LocalProjectEncumbranceAmount = ProjectEncumbranceRel.NetReportAmount5							
				
			return LocalProjectEncumbranceAmount				

		ProjectEncumbranceAmountAll is a DerivedField
			type is like InternationalAmount
			if (LocalProjectEncumbranceCalculated)
				return LocalProjectEncumbranceAmount
			
			LocalProjectEncumbranceCalculated = true
			if (DynamicMeasureAll = "NetProjectAmount")
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetProjectAmount							
			else
			if (DynamicMeasureAll = "NetReportAmount1")
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetReportAmount1							
			else
			if (DynamicMeasureAll = "NetReportAmount2")
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetReportAmount2							
			else
			if (DynamicMeasureAll = "NetReportAmount3")
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetReportAmount3							
			else
			if (DynamicMeasureAll = "NetReportAmount4")	
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetReportAmount4							
			else
			if (DynamicMeasureAll = "NetReportAmount5")
				LocalProjectEncumbranceAmount = ProjectEncumbranceAllRel.NetReportAmount5							
				
			return LocalProjectEncumbranceAmount				
								
		ProjectCommitmentAmount is a DerivedField
			type is like InternationalAmount
			if (LocalProjectCommitmentCalculated)
				return LocalProjectCommitmentAmount
			
			LocalProjectCommitmentCalculated = true
			if (DynamicMeasure = "NetProjectAmount")
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetProjectAmount							
			else
			if (DynamicMeasure = "NetReportAmount1")
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetReportAmount1							
			else
			if (DynamicMeasure = "NetReportAmount2")
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetReportAmount2							
			else
			if (DynamicMeasure = "NetReportAmount3")
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetReportAmount3							
			else
			if (DynamicMeasure = "NetReportAmount4")	
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetReportAmount4							
			else
			if (DynamicMeasure = "NetReportAmount5")
				LocalProjectCommitmentAmount = ProjectCommitmentRel.NetReportAmount5							
				
			return LocalProjectCommitmentAmount	

		ProjectCommitmentAmountAll is a DerivedField
			type is like InternationalAmount
			if (LocalProjectCommitmentCalculated)
				return LocalProjectCommitmentAmount
			
			LocalProjectCommitmentCalculated = true
			if (DynamicMeasureAll = "NetProjectAmount")
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetProjectAmount							
			else
			if (DynamicMeasureAll = "NetReportAmount1")
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetReportAmount1							
			else
			if (DynamicMeasureAll = "NetReportAmount2")
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetReportAmount2							
			else
			if (DynamicMeasureAll = "NetReportAmount3")
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetReportAmount3							
			else
			if (DynamicMeasureAll = "NetReportAmount4")	
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetReportAmount4							
			else
			if (DynamicMeasureAll = "NetReportAmount5")
				LocalProjectCommitmentAmount = ProjectCommitmentAllRel.NetReportAmount5							
				
			return LocalProjectCommitmentAmount	


#ifdef module integration	
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 9
			return FinanceEnterpriseGroup
		
		DerivedDisplayProject is a DerivedField
			type is Alpha size 25
			restricted
			return DisplayProject
		
		DerivedWatch is a DerivedField
			type is Alpha size 20
			restricted
			if(Watch = "true")
				return "activated"
			else
				if(Watch = "false")	
					return "inactivated"
		
		DerivedProjectType is a DerivedField
			type is Alpha size 20
			restricted
			if(ProjectType = 1)
				return "Posting"
			else
				if(ProjectType = 2)	
					return "Summary"
				else
					if(ProjectType = 3)
						return "Node"
		
		ProjectWatchAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return FinanceEnterpriseGroup.ProjectLabel + " " +DisplayProject + " watch has been " + DerivedWatch + "."
		
		
		DerivedProjectWatchAlertBODID is a DerivedField
			type is Alpha 100
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ Project +":"+ "?ProjectWatchAlert&verb=Process"
		
		
		ProjectWatchAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectWatchAlertXML = template.IONProjectWatch_Project_ST document for this instance								


		
		ProjectAddAlertDescription  is a DerivedField
			type is Alpha size 100
			restricted
			return "Project " + DerivedDisplayProject + " is added for ProjectStructure " + ContextStructure + "."
		
		DerivedProjectAddAlertBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ Project +":"+ "?ProjectAddAlert&verb=Process"
		
		ProjectAddAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectAddAlertXML = template.IONProjectAddAlert_Project_ST document for this instance
			return ProjectAddAlertXML 
			


		
		DerivedOldBeginDate is a DerivedField
			type is Alpha size 20
			restricted
			return old ProjectDateRange.BeginDate
			
		DerivedBeginDate is a DerivedField
			type is Alpha size 20
			restricted
			return ProjectDateRange.BeginDate
			
		DerivedOldEndDate is a DerivedField
			type is Alpha size 20
			restricted
			return old ProjectDateRange.EndDate
			
		DerivedEndDate is a DerivedField
			type is Alpha size 20
			restricted
			return ProjectDateRange.EndDate
		
		ProjectDateChangedAlertDescription is a DerivedField
			type is Alpha size 200
			restricted
			if (ProjectDateRange.BeginDate changed and ProjectDateRange.EndDate changed )
				return FinanceEnterpriseGroup.ProjectLabel + " " + DerivedDisplayProject + " begin date changed from " + DerivedOldBeginDate + " to " + DerivedBeginDate + " and end date changed from " + DerivedOldEndDate + " to " + DerivedEndDate + "."
			else
			if (ProjectDateRange.EndDate changed and ProjectDateRange.BeginDate not changed)
				return FinanceEnterpriseGroup.ProjectLabel + " " + DerivedDisplayProject + " end date changed from " + DerivedOldEndDate + " to " + DerivedEndDate + "."
			else
			if (ProjectDateRange.BeginDate changed and ProjectDateRange.EndDate not changed)
				return FinanceEnterpriseGroup.ProjectLabel + " " + DerivedDisplayProject + " begin date changed from " + DerivedOldBeginDate + " to " + DerivedBeginDate + "."
		
		DerivedProjectDateChangedAlertBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ Project +":"+ "?ProjectDateChangedAlert&verb=Process"
		
		ProjectDateChangedAlertXML is a DerivedField
			type is XMLDocument
			restricted
			if (ProjectDateRange.BeginDate changed and ProjectDateRange.EndDate changed )
				ProjectDateChangedAlertXML = template.IONProjectDateChangedAlert_Project_BeginAndEndDateChanged_ST document for this instance
				return ProjectDateChangedAlertXML
			else
			if (ProjectDateRange.EndDate changed and ProjectDateRange.BeginDate not changed )
				ProjectDateChangedAlertXML = template.IONProjectDateChangedAlert_Project_EndDateChanged_ST document for this instance
				return ProjectDateChangedAlertXML
			else
			if (ProjectDateRange.BeginDate changed and ProjectDateRange.EndDate not changed )
				ProjectDateChangedAlertXML = template.IONProjectDateChangedAlert_Project_BeginDateChanged_ST document for this instance
				return ProjectDateChangedAlertXML
						


	
		ProjectDeleteAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectDeleteAlertXML = template.IONProjectDeleteAlert_Project_ST document for this instance
			return ProjectDeleteAlertXML
		
		ProjectDeleteAlertDescription is a DerivedField
			type is Alpha size 100
			restricted
			return "Project " + DerivedDisplayProject + " is deleted from ProjectStructure " + ContextStructure + "."
		
		DerivedProjectDeleteAlertBODID is a DerivedField
			type is Alpha size 100
			restricted
			return "infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ Project +":"+ "?ProjectDeleteAlert&verb=Process"



		DerivedProjectLabel is a DerivedField
			type is Alpha 25
			restricted
			return FinanceEnterpriseGroup.ProjectLabel
		
		DerivedOldProjectStatus is a DerivedField
			type is Alpha 20
			restricted
			return old ProjectStatus
				
		ProjectStatusChangeAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return DerivedProjectLabel+" "+ Project+""+" status has changed from" +" "+ DerivedOldProjectStatus +" "+ "to"+" "+ProjectStatus +"."

		
		DerivedProjectStatusChangeBODID is a DerivedField
			type is Alpha 100
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ Project +":"+ "?ProjectStatusChange&verb=Process"
		
	
		ProjectStatusChangeAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectStatusChangeAlertXML = template.IONProjectStatusChange_Project_ST document for this instance


		DerivedProjectStructureDescription is a DerivedField
			type is Alpha 60
			restricted
			return ContextStructure.Description

		
		DerivedProjectStructureAddBODID is a DerivedField
			type is Alpha 100
			restricted 
			return	"infor-nid:" + DerivedTenantID +":"+ DerivedFinanceEnterpriseGroup +":"+ ContextStructure +":"+ "?ProjectStructureAdd&verb=Process"
			
		ProjectStructureAddAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return "ProjectStructure" +" "+ContextStructure+" "+ "has been added"
		
		ProjectStructureAddAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ProjectStructureAddAlertXML = template.IONProjectStructureAdd_Project_ST document for this instance	

#endif

		DerivedProjectExpenseAmount is a DerivedField
			type is like InternationalAmount
				precision is ParentDisplayContractRel.Project.ProjectContract.Currency.NumberOfDecimals		
			return (sum PostingProjectExpenseGeneralLedgerTotalsRel.NetProjectAmount)	

		DerivedTempProjectRevenueAmount is a DerivedField
			type is like InternationalAmount
				precision is ParentDisplayContractRel.Project.ProjectContract.Currency.NumberOfDecimals			
			return (sum PostingProjectRevenueGeneralLedgerTotalsRel.NetProjectAmount)

		DerivedProjectRevenueAmount is a DerivedField
			type is like InternationalAmount
				precision is ParentDisplayContractRel.Project.ProjectContract.Currency.NumberOfDecimals	
			if (DerivedTempProjectRevenueAmount >=0)
				return DerivedTempProjectRevenueAmount
			else
				return DerivedTempProjectRevenueAmount *-1				

		DerivedProjectVariance is a DerivedField
			type is like TotalAmount
				precision is ParentDisplayContractRel.Project.ProjectContract.Currency.NumberOfDecimals			
			return (DerivedProjectRevenueAmount - DerivedProjectExpenseAmount)
#ifdef module am		
		DerivedAssetInterfaceOptionsAmount is a MeasureField	
			type is like InternationalAmount
			restricted
			sum AssetInterfaceOptionsByProjectRel.DerivedAssetInterfaceAmount
		
		DerivedAssetsAmount is a MeasureField
			type is like InternationalAmount
			restricted
			sum AssetsStatusRel.ItemTotalTransactionCost

		HoldActionTitle is a DerivedField
			type is Alpha 80
			restricted
			if (actor.context.FinanceEnterpriseGroup.CapitalizationUpgradeNotEnabled)
				return "Hold Capitalizable Global Ledger Expense Transactions"
			else
				return "Hold Capitalizable Asset Capital Transactions"
		
		RemoveHoldActionTitle is a DerivedField
			type is Alpha 80
			restricted
			if (actor.context.FinanceEnterpriseGroup.CapitalizationUpgradeNotEnabled)
				return "Remove Hold From Capitalizable Global Ledger Expense Transactions"
			else
				return "Remove Hold From Capitalizable Asset Capital Transactions"

		HoldActionHeader is a DerivedField
			type is Alpha 80
			restricted
			if (actor.context.FinanceEnterpriseGroup.CapitalizationUpgradeNotEnabled)
				return "Select Global Ledger Transactions To Be Placed On Capitalization Hold"
			else
				return "Select Asset Capital Transactions To Be Placed On Capitalization Hold"
		
		RemoveHoldActionHeader is a DerivedField
			type is Alpha 80
			restricted
			if (actor.context.FinanceEnterpriseGroup.CapitalizationUpgradeNotEnabled)
				return "Select Global Ledger Transactions To Be Removed From Capitalization Hold"
			else
				return "Select Asset Capital Transactions To Be Removed From Capitalization Hold"
#endif		
		UncapitalizedAssetAmount is a MeasureField
			type is like InternationalAmount
			restricted
			sum GeneralLedgerTotalRel.NetProjectAmount
		
		DerivedTriggerFrom is a DerivedField
			type is Alpha 50
			restricted
			if (LocalTriggerFrom entered)
				return LocalTriggerFrom
			else
				return "Project"
					
    Conditions

		SecurityGroupAllowsAccess
			when ((FinanceEnterpriseGroup.ProjectEntry = false)
			or    (actor.context.ProjectSecurityGroup = "")      
			or    (actor.context.ProjectSecurityGroup != ""
			and   (ProjectType.Node
			or   ((SecurityGroupDetailRel exists)
			and   (parentcontext.name != "AccountAnalysisSettings"
			or    !SecurityGroupDetailRel.CreatedForHierarchyAccess)))))
		SecurityGroupAllowsMaintenance
			when (LocalSecurityGroupAllowsMaintenance)
        IsNotPosting
        	restricted
            when (not ProjectType.Posting)
		IsPostingProject
			restricted
			when (ProjectType.Posting)
		IsPostingProjectCertificationRequired
			restricted
			when (ProjectType.Posting
			and   CertificationRequired)
		IsPostingProjectSeperateRevenue			
			restricted
			when (ProjectType.Posting		
			and   ContextProjectContract.RevenueRecognition.Separate)			
		IsPostingProjectTemplate
			restricted
			when (IsActivePostingAndBillable)
		IsSummaryProject
			restricted
			when (ProjectType.Summary)
		IsSummaryOrPostingProject
			restricted
			when (!ProjectType.Node)
		SummaryOrPostingInStructure
			restricted
			when (IsSummaryOrPostingProject
			and   ProjectInContextStructureRel exists)			
		IsAchild
			restricted
			when (ProjectInContextStructureRel exists
			and   DerivedParentDisplayProject entered)
		ProjectDescendants 
			restricted
			when (ProjectType.Posting
			and  (Project = ContextProject
			or    DescendantOfContextProjectRel exists))
		EligibleParent
			restricted
			when (ProjectType.Summary
			and   DimensionStructure = ContextStructure
			and   Project 		    != ContextProject
			and   Project 		    != ContextProjectRel.ParentDimension)
		EligibleRequestParent
			restricted
			when (ProjectType.Summary
			and   DimensionStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure)
		RecordExists
			restricted
			when (Project exists)
		HasChildren
			restricted
			when (ProjectHierarchyRel exists)
		HasSummaryChildren
			restricted
			when (ProjectHierarchySummaryRel exists)			
		IsASystemProject
			restricted
			when (SystemProject)
		NodeProject
			restricted
			when (ProjectType.Node)
		SummaryProjectOrNodeInContextProjectStructure
			restricted
			when ((Project 		     != ContextProject)
			and   (DimensionStructure = ContextStructure
			and   (ProjectType.Node)
			or    (ProjectType.Summary
			and    HelperListProjectRel exists)))
		SummaryInStructure
			restricted
			when (Project != ContextProject
			and   ProjectType.Summary			
			and   ProjectInContextStructureRel exists
			and   HelperListProjectRel exists)
		HelperListProject
			restricted
			when (ProjectType.Posting
			and  !HelperListProjectRel exists)
		FundingSourceHelperListProject
			restricted
			when (ProjectInEnterpriseStructureRel exists
			and   IsActiveBillable)
		NotUsedInHierarchy
			restricted
			when (ProjectType.Posting
			and   !ProjectInContextStructureRel exists)
		NotUsedInAStructure
			restricted
			when (ProjectType.Posting
			and   !ProjectHierarchy(Project) set exists)
		SummaryWithinTopNode
			restricted
			when (!ProjectType.Posting
			and   DimensionStructure = ContextStructure)
		SummaryInEnterpriseStructure
			restricted
			when (ProjectType.Summary
			and   DimensionStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure)
		PostingInEnterpriseStructure
			restricted
			when (ProjectType.Posting
			and   InEnterpriseStructure)
		CapitalPostingInEnterpriseStructure
			restricted
			when (ProjectType.Posting
			and   InEnterpriseStructure
			and    IsCapital)
		PostingNotInEnterpriseStructure
			restricted
			when (ProjectType.Posting
			and   !InEnterpriseStructure)			
		InEnterpriseStructure
			restricted
			when (ContextStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure)
		EligibleToRemove
			restricted
			when ((!ProjectType.Posting)
			and   (!ProjectChildrenRel exists))		
		EligibleToDelete
			restricted
			when (ProjectType.Posting
			and   !UsedByATransaction
			and   InEnterpriseStructure)
		IsPeriodOfPerformance
			restricted
			when (ProjectPeriodOfPerformance set exists)
		HasProjectComments
			restricted
			when (ProjectComment set exists)
		HasProjectPersonnel
			restricted
			when (ProjectPersonnel set exists)
		HasProjectAssignments			
			restricted
			when (ProjectAssignment set exists)
		ProjectAssignmentsInEnterpriseStructure		
			restricted
			when (PostingInEnterpriseStructure
			and   HasProjectAssignments)
		HasProjectResourceAssignments			
			restricted
			when (ProjectAssignmentResourceRel exists)
		HasProjectDateRange
			restricted
			when (ProjectDateRange entered)
		HasPersonResponsible
			restricted
			when (PersonResponsible entered)
		HasStructureValidationRules
			when (ProjectStructureValidation set exists)
		HasAncestorStructureValidationRules
			when (ProjectType.Posting
			and   AncestorProjectStructureValidationRel exists)
		IsOverBudget
			restricted
			when (ProjectActualAmount>= ProjectBudgetAmount)
		IsUnderBudget
			restricted
			when (ProjectActualAmount<= ProjectBudgetAmount)
		YellowDueDateAlertCond
			restricted
			when (ProjectDateRange.EndDate  entered
			and   current corporate date >= RedDueDateAlert
			and   current corporate date <= ProjectDateRange.EndDate)
		ProjectToExpire
			restricted
			when (YellowDueDateAlertCond)
		ProjectHasExpired
			restricted
			when (ProjectDateRange.EndDate  entered
			and   current corporate date > ProjectDateRange.EndDate)
		ProjectContractExists
			restricted
			when (Project.ProjectContract exists)
		IsActivePosting
			restricted
			when (Active
			and   ProjectType.Posting)
		IsActiveBillable
			restricted
			when (Active
			and   Billable
			and   ProjectStatus.Billable)
		IsBillable
			restricted
			when (Billable
			and   ProjectStatus.Billable)
		IsActivePostingAndBillable
			restricted
			when (Active
			and   ProjectType.Posting
			and   Billable
			and   ProjectStatus.Billable)
		IsRevenueRecognition
			restricted
			when (Billable
			and   ProjectStatus.AllowRevenueRecognition)
		IsActivePostingAndRevenue
			restricted
			when (Active
			and   ProjectType.Posting
			and   Billable
			and   ProjectStatus.AllowRevenueRecognition)
		HasSalaryCap
			restricted
			when (SalaryCap entered)
		UnbilledGLTransactionsExist
			restricted
			when (UnbilledGLTransactionDetailRel exists)			
		UnrecognizedGLTransactionsExist
			restricted
			when (UnrecognizedGLTransactionDetailRel exists)			
		IsValidForActorContext
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))	
		ValidDateRange
			when (GeneralLedgerPeriodShadowStartDatesRel exists
			and   GeneralLedgerPeriodShadowEndDatesRel exists)
		IsCapital
			when (Capital)
		HasParentContract
			restricted
			when (ParentDisplayContract entered
			and   ProjectType.Posting)
		BillingOverridesValid
			restricted
    		when (ProjectType.Posting
    		and   IsBillable
    		and   HasParentContract)
		BillingOverridesExist
			restricted
			when (BillingOverridesRel exists)
		ScenarioEntered
			restricted
			when (ContextProjectContract.Scenario entered)			


		CurrencyMatches
			when (DisplayReportingCurrency = Project.ProjectContract.Currency)
		CurrencyMatchesAll
			when (DisplayReportingCurrencyAll = Project.ProjectContract.Currency)
    	HasFinanceDimension3
    		when (CodeBlockRelationDetailDimension3Rel exists)
    	HasFinanceDimension4
    		when (CodeBlockRelationDetailDimension4Rel exists)
		HasBudgetPendingManual
			restricted
			when (BudgetTemplateManualRel exists)
		HasBudgetPendingMembers
			restricted
			when (BudgetTemplatePendingRel exists)
		HasBudgetTemplateRemove
			restricted
			when (BudgetTemplateRemoveRel exists)
		HasBudgetRecalculate
			restricted
			when (BudgetTemplateRecalculateRel exists)
		HasBudgetChanges
			restricted
			when (HasBudgetPendingManual
			or	  HasBudgetPendingMembers
			or	  HasBudgetTemplateRemove
			or    HasBudgetRecalculate)
		HasReportingAccount			
			when (ProjectReportingSettingsRel.ReportingAccount entered)
		HasReportingAccountAll			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered)
		HasAccountOnScenario			
			when (!ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.Scenario.HasPostingAccount = true)
		HasAccountOnScenarioAll			
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.Scenario.HasPostingAccount = true)
		HasSummaryReportingAccount			
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Summary
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
		HasSummaryReportingAccountAll			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Summary
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
		HasSummaryReportingAccountNotActual			
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Summary)
		HasSummaryReportingAccountNotActualAll			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Summary)
		HasSummaryReportingAccountBudget	
			when (ProjectReportingSettingsRel.Scenario.HasPostingAccount = true		
			and   ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Summary)
		HasSummaryReportingAccountBudgetAll	
			when (ProjectReportingSettingsAllRel.Scenario.HasPostingAccount = true		
			and   ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Summary)
		HasPostingReportingAccount			
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Posting
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
		HasPostingReportingAccountAll			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Posting
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
		HasPostingReportingAccountNotActual			
			when (ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Posting)
		HasPostingReportingAccountNotActualAll			
			when (ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Posting)
		HasPostingReportingAccountBudget	
			when (ProjectReportingSettingsRel.Scenario.HasPostingAccount = true					
			and   ProjectReportingSettingsRel.ReportingAccount entered
			and   ProjectReportingSettingsRel.ReportingAccount.ChartType.Posting)
		HasPostingReportingAccountBudgetAll	
			when (ProjectReportingSettingsAllRel.Scenario.HasPostingAccount = true					
			and   ProjectReportingSettingsAllRel.ReportingAccount entered
			and   ProjectReportingSettingsAllRel.ReportingAccount.ChartType.Posting)
		NoReportingAccountHasURE			
			when (!ProjectReportingSettingsRel.ReportingAccount entered
			and	  !ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
		NoReportingAccountHasUREAll			
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered
			and	  !ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
		NoReportingAccountNoURE			
			when (!ProjectReportingSettingsRel.ReportingAccount entered
			and	  ProjectReportingSettingsRel.ExcludeUndistributedRetainedEarnings)
		NoReportingAccountNoUREAll			
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered
			and	  ProjectReportingSettingsAllRel.ExcludeUndistributedRetainedEarnings)
		NoAccountEnteredNotActual	
			when (!ProjectReportingSettingsRel.ReportingAccount entered)
		NoAccountEnteredNotActualAll	
			when (!ProjectReportingSettingsAllRel.ReportingAccount entered)
		NoAccountEnteredBudget	
			when (ProjectReportingSettingsRel.Scenario.HasPostingAccount = true				
			and   !ProjectReportingSettingsRel.ReportingAccount entered)
		NoAccountEnteredBudgetAll	
			when (ProjectReportingSettingsAllRel.Scenario.HasPostingAccount = true				
			and   !ProjectReportingSettingsAllRel.ReportingAccount entered)
		NoAccountOnScenario
			when (!ProjectReportingSettingsRel.Scenario.HasPostingAccount = true)

		NoAccountOnScenarioAll
			when (!ProjectReportingSettingsAllRel.Scenario.HasPostingAccount = true)


		HasApprovedLabor
			restricted
			when (ApprovedProjectAssignmentLaborRel exists)
		HasIndirectBurdens
			restricted
			when (ProjectIndirectBurden set exists)
		OverridesEntered
			restricted
			when (RevenueCodeBlockOption entered
			or    BuyerTaxCode entered
			or    BuyerTaxLocation entered)



		HasProjectBillingOverrides
			restricted
			when (ProjectBillingOverride set exists)	
		FrontEndSplitsEnabled
			restricted
			when (ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled
			or    Project.ProjectContract.FrontEndSplitsEnabled
			or   (ProjectType.Summary
			and   any DescendantsRel.ParentDisplayContractRel.Project.ProjectContract.FrontEndSplitsEnabled))
		FrontEndSplitsEntered
			restricted
			when (ContextProjectContract.FrontEndSplits)
#ifdef module am
		HasAssetInterfaceOptions

			when (AssetInterfaceOptionsRel exists)
		HasAssets

			when (AssetsRel exists)
#endif
		
		HasProjectAssets

			when (ProjectAssetRel exists)
			
#ifdef module po			
		HasPurchaseOrders
			restricted			
			when (PurchaseOrderLineDistributionsRel exists)
		HasPurchaseOrder
			restricted		
			when (PurchaseOrderLineDistributionsAllRel exists)		
#endif
		
#ifdef module rq			
		HasRequistions
			restricted		
			when (RequisitionLineDistributionsAllRel exists)
#endif
#ifdef module ap
		HasPayables
			restricted		
			when (PayablesInvoiceDistributionsAllRel exists)
#endif			
#ifdef module cb
		HasCashLedger
			restricted		
			when (CashLedgerGLDistributionsRel exists)
#endif

		IsLTDReporting
			when (ProjectReportingSettingsRel.ReportingPeriod.LifeToDate)
			
		HasManualEncumbrances
			when (GLManualEncumbranceRel exists)			
		HasSalaryEncumbrances
			when (GMSalaryEncumbranceRel exists)			
    	IsProjectReportingCurrency
    		restricted
    		when (DynamicMeasure = "NetProjectAmount")
    	IsProjectReportingCurrencyAll
    		restricted
    		when (DynamicMeasureAll = "NetProjectAmount")

		SkipZeroRowsObligationList
			restricted
			when (ProjectReportingSettingsRel.SuppressZeroRows

			and   ProjectCommitmentAmount = 0
			and   ProjectEncumbranceAmount = 0			
			and   ProjectActualAmount = 0
			and   TotalObligations = 0
			and   ProjectBudgetAmount = 0
			and   RemainingBudget = 0
			and   ProjectOriginalBudgetAmount = 0)															

		SkipZeroRowsObligationAllList
			restricted
			when (ProjectReportingSettingsAllRel.SuppressZeroRows

			and   ProjectCommitmentAmountAll = 0
			and   ProjectEncumbranceAmountAll = 0			
			and   ProjectActualAmountAll = 0
			and   TotalObligationsAll = 0
			and   ProjectBudgetAmountAll = 0
			and   RemainingBudgetAll = 0
			and   ProjectOriginalBudgetAmountAll = 0)															

		SkipZeroRowsVarianceList
			restricted
			when (ProjectReportingSettingsRel.SuppressZeroRows

			and   ProjectActualAmount = 0
			and   ProjectBudgetAmount = 0
			and   ProjectBudgetVariance = 0
			and   ProjectBudgetVariancePercent = 0
			and   ProjectOriginalBudgetAmount = 0)															

		SkipZeroRowsVarianceAllList
			restricted
			when (ProjectReportingSettingsAllRel.SuppressZeroRows

			and   ProjectActualAmountAll = 0
			and   ProjectBudgetAmountAll = 0
			and   ProjectBudgetVarianceAll = 0
			and   ProjectBudgetVariancePercentAll = 0
			and   ProjectOriginalBudgetAmountAll = 0)															

		SkipZeroRowsPeriodComparisonList
			restricted
			when (ProjectReportingSettingsRel.SuppressZeroRows

			and   ProjectActualAmount = 0
			and   ProjectPriorActualAmount = 0)

		SkipZeroRowsPeriodComparisonAllList
			restricted
			when (ProjectReportingSettingsAllRel.SuppressZeroRows

			and   ProjectActualAmountAll = 0
			and   ProjectPriorActualAmountAll = 0)
			
		SkipZeroRowsPercentCompleteList
			restricted
			when (ProjectReportingSettingsRel.SuppressZeroRows

			and   ProjectActualAmount = 0
			and   ProjectBudgetAmount = 0
			and   CostToComplete = 0
			and   EstimatedRevenue = 0
			and   ProjectOriginalBudgetAmount = 0															
			and   RevenuePreviouslyRecognized = 0
			and   RevenueRecognized = 0)

		SkipZeroRowsPercentCompleteAllList
			restricted
			when (ProjectReportingSettingsAllRel.SuppressZeroRows

			and   ProjectActualAmountAll = 0
			and   ProjectBudgetAmountAll = 0
			and   CostToCompleteAll = 0
			and   EstimatedRevenueAll = 0
			and   ProjectOriginalBudgetAmountAll = 0															
			and   RevenuePreviouslyRecognized = 0
			and   RevenueRecognizedAll = 0)

		SkipZeroRowsGrossMarginList
			restricted
			when (ProjectReportingSettingsRel.SuppressZeroRows

			and   ProjectActualAmount = 0
			and   GrossMarginAmount = 0
			and   GrossMarginPercent = 0)

		SkipZeroRowsGrossMarginAllList
			restricted
			when (ProjectReportingSettingsAllRel.SuppressZeroRows

			and   ProjectActualAmountAll = 0
			and   GrossMarginAmountAll = 0
			and   GrossMarginPercentAll = 0)

		SkipRevenueToExpenseVariance
			restricted
			when (SuppressZeroVarianceRows			
			and   DerivedProjectVariance = 0)
    
		MatchesContractSearch
			restricted
			when (!SearchProjectContract entered
			or	   ParentDisplayContractRel.ProjectContract.ProjectContract = SearchProjectContract)
			
		MatchesRevenueRecognitionSearch
			restricted	
			when (!SearchRevenueRecognition entered
			or     ParentDisplayContractRel.ProjectContract.RevenueRecognition = SearchRevenueRecognition)

		MatchesBillingMethodSearch
			restricted	
			when (!SearchBillingMethod entered
			or     ParentDisplayContractRel.ProjectContract.BillingMethod = SearchBillingMethod)

		MatchesRevenueMethodSearch
			restricted	
			when (!SearchRevenueMethod entered
			or     ParentDisplayContractRel.ProjectContract.RevenueMethod = SearchRevenueMethod)
    
		IsBillablePostingProjectContract
			restricted
			when (Active
			and   ProjectType.Posting
			and   Billable
			and   ParentDisplayContract entered)

		HasAccountVaidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailRel exists)

		HasAccountingEntityValidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailAccountingEntityRel exists)
			
		HasAccountingUnitValidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailAccountingUnitRel exists)

		HasDimension1ValidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailDimension1Rel exists)

		HasDimension3ValidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailDimension3Rel exists)

		HasDimension4ValidPairs
			restricted
			when (ProjectType.Posting
			and   CodeBlockRelationDetailDimension4Rel exists)
			
		PendingFESTransactionDetail
			when (ParentDisplayContract entered
			and	  ParentDisplayContractRel.ProjectContract.FrontEndSplitsEnabled	
			and   !Project.ExcludeFromFES)

    Relations
		SecurityGroupDetailRel
			one-to-one relation to FinanceDimensionSecurityGroupDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		    	= FinanceEnterpriseGroup
				related.DimensionGroupType					= 13
				related.FinanceDimensionSecurityGroup   	= ActorSecurityGroup
				related.FinanceDimensionSecurityGroupDetail = Project    
    
    	ProjectContractShadowRel
    		one-to-one relation to ProjectShadow
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
    			related.Project					= Project
    			related.SummaryProject			= ContextProjectContract
		CopyToSummaryProjectRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SummaryProject			= LocalParentProject
			Instance Selection
				where (related.ProjectType.Posting)	
    	ProjectBillingOverrideRel
    		one-to-many relation to ProjectBillingOverride
    		Field Mapping uses part of key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.Project					= LocalProject
    			related.ProjectCodeBlock		= LocalProjectCodeBlock
		ParentDisplayContractRel
			one-to-one relation to Project
			Field Mapping uses ByDisplayProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.DisplayProject			= ParentDisplayContract
				related.DimensionStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
		NewProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= LocalProject
		ContextProjectRel
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= ContextProject
		PostingProjectsRel
			one-to-many relation to Project
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.HelperListProject)	    
		ProjectChildrenRel
			one-to-many relation to Project
			disable subset select on dependent relation			
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= ProjectHierarchyRel.Project
		SummaryProjectChildrenRel
			one-to-many relation to Project
			disable subset select on dependent relation			
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= ProjectHierarchySummaryRel.Project
		PostingProjectExistRel 
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= LikeProjectField
		ProjectHierarchyRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses ByParentProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ParentProject			= Project	
		ProjectHierarchySummaryRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses ByParentProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ParentProject			= Project
			Instance Selection
				where (related.ProjectType.Summary)
		ProjectInContextStructureRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectStructure		= ContextStructure
				related.Project		   			= Project
			valid when (!NodeProject)
		ProjectInEnterpriseStructureRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
				related.Project		   			= Project
			valid when (!NodeProject)
		ProjectInLocalContextStructureRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectStructure		= LocalContextStructure
				related.Project		   			= Project
			valid when (!NodeProject)
		ParentProjectInLocalContextRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
				related.Project		   			= LikeProjectField
			valid when (!NodeProject)
		NewParentInContractRel
			one-to-one relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SummaryProject			= LocalAncestorContract
				related.Project					= LocalNewProject
		SystemProjectRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure  		= ContextStructure
			Instance Selection
				where (related.SystemProject
				and    related.Project != Project)			
		NotifyBudgetTemplateRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.NotifyOnProject
				and    related.ProjectStructure = ContextStructure)
		NotifyBudgetTemplateRemoveRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.NotifyOnProjectRemove
				and    related.ProjectStructure = ContextStructure)
		TemplatesWithIdentifierRel
			one-to-many relation to BudgetTemplate
			Field Mapping uses ByStatus
				related.FinanceEnterpriseGroup    	= FinanceEnterpriseGroup
				related.Status 						= 2 
			Instance Selection
				where (related.ProjectStructure		= ContextStructure 
				and related.ProjectIdentifier		= old BudgetIdentifier)
		BudgetTemplateManualRel
			one-to-many relation to BudgetTemplateManual
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.Project = Project
				and   related.Processed = false)
		BudgetTemplatePendingRel
			one-to-many relation to BudgetTemplatePending
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.Project = Project)
		BudgetTemplateRemoveRel
			one-to-many relation to BudgetTemplateRemove
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.Project = Project)			
		BudgetTemplateRecalculateRel
			one-to-many relation to BudgetTemplateRecalculate
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
			Instance Selection
				where (related.Project = Project)			
		DescendantOfContextProjectRel
			one-to-one relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup

				related.SummaryProject			= ContextProject
				related.Project					= Project
		HelperListProjectRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ContextStructure
				related.Project					= Project 
		FundingSourceHelperListProjectRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
				related.Project					= Project 

		SubordinateInLocalStructureRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= LocalStructure
				related.Project					= Project										
		ProjectHierarchyDefaultRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.ProjectStructure  		= ContextStructure
				related.Project 				= LocalProject 															
		NextLevelChildRecordsRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses ChildrenInStructure
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ContextStructure
				related.ParentProject 			= LocalProject
		IncludedInStructuresRel 
			one-to-many relation to ProjectStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ProjectHierarchy(Project) set.ProjectStructure
		BudgetStructuresRel 
			one-to-many relation to ProjectStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= DimensionStructure 								
		SiblingsRel
			one-to-many relation to ProjectHierarchy
			Field Mapping uses ChildrenInStructure
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ContextStructure
				related.ParentProject			= DerivedParentProject			
		ProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= ContextStructure
				related.Project					= LocalProject				
		ProjectShadowRel2
			one-to-many relation to ProjectShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectStructure		= LocalContextStructure
				related.Project					= LocalProject
		EnterpriseProjectShadowRel
    		one-to-many relation to ProjectShadow
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
    			related.Project					= Project
    	AncestorProjectStructureValidationRel
    		one-to-many relation to ProjectStructureValidation
    		Field Mapping uses ByStructureDimension
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.Project					= EnterpriseProjectShadowRel.SummaryProject
		UpdateProjectHierarchyRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.ProjectStructure 		= ContextStructure
				related.Project		   			= LocalUpdateProject
		EnterpriseSystemProjectRel
			one-to-one relation to ProjectHierarchy
			Field Mapping uses BySystemProjectInStructure
				related.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
				related.ProjectStructure 		= FinanceEnterpriseGroup.EnterpriseProjectStructure
		DescendantsRel
			one-to-many relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project				  	= ShadowDescendantsRel.Project
		DescendantContractRel
			one-to-many relation using DescendantsRel
			Instance Selection
				where (related.Contract)
		DescendantPostingRel
			one-to-many relation using DescendantsRel
			Instance Selection
				where (related.ProjectType.Posting)		
		ShadowDescendantsRel
			one-to-many relation to ProjectShadow
			delete cascades
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup

				related.SummaryProject   	 	= Project
		ShadowCommitmentsRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup

				related.SummaryProject   	 	= Project
			Instance Selection
				where (related.ProjectType.Posting)				
		ShadowPostingDescendantsRel
			one-to-many relation using ShadowDescendantsRel
			Instance Selection
				where (related.ProjectType.Posting)
		ActiveEmployeeRel
			one-to-many relation to Employee
			Field Mapping uses symbolic key
				related.HROrganization	= FinanceEnterpriseGroup.HROrganization
			Instance Selection
				where (related.Employee = any ProjectEmployeeRel.Employee
				and	   related.IsActive)


		ProjectEmployeeRel
			one-to-many relation to ProjectEmployee
			Field Mapping uses symbolic key
				related.HROrganization	= FinanceEnterpriseGroup.HROrganization
		ProjectPeriodOfPerformanceRel
			one-to-one relation to ProjectPeriodOfPerformance
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= LocalPOPProject
				related.GeneralLedgerSystemCode	= LocalSystem
		ProjectPeriodOfPerformancePSRel
			one-to-one relation to ProjectPeriodOfPerformance
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= Project
				related.GeneralLedgerSystemCode	= "PS"
		BudgetsScenarioRel
			one-to-one relation to Scenario		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Scenario			   = ProjectReportingSettingsRel.Scenario
		BudgetsScenarioAllRel
			one-to-one relation to Scenario		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Scenario			   = ProjectReportingSettingsAllRel.Scenario
		BudgetsOriginalScenarioRel
			one-to-one relation to Scenario		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Scenario			   = ProjectReportingSettingsRel.Scenario.OriginalScenario
		BudgetsOriginalScenarioAllRel
			one-to-one relation to Scenario		
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Scenario			   = ProjectReportingSettingsAllRel.Scenario.OriginalScenario
		GeneralLedgerTotalActualsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalEncumbrancesRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalEncumbrancesAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDEncumbrancesRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDEncumbrancesAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalCommitmentsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.CommitmentsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalCommitmentsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.CommitmentsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDCommitmentsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.CommitmentsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDCommitmentsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.CommitmentsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsForPriorRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsForPriorAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsForPriorPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsForPriorPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsByChartForPriorRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsByChartForPriorAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsByChartForPriorNoURERel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoURERel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalActualsByChartForPriorNoUREAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoUREAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsByChartRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsByChartAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsByChartNoURERel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoURERel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalPriorActualsByChartNoUREAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoUREAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ComparisonPeriodEndDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsByChartRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsByChartAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsByChartNoURERel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoURERel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDActualsByChartNoUREAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartNoUREAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GLChartAccountShadowRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup

				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
			Instance Selection
				where (related.ChartType.Posting)
		GLChartAccountShadowAllRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup

				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
			Instance Selection
				where (related.ChartType.Posting)
		GeneralLedgerTotalBudgetsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where  (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalBudgetsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where  (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	>= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = BudgetsOriginalScenarioRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = BudgetsOriginalScenarioAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsPostingRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = BudgetsOriginalScenarioRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsPostingAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection

				where (related.Scenario			   = BudgetsOriginalScenarioAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsByChartRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsByChartAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsByChartRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = BudgetsOriginalScenarioRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsByChartAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = BudgetsOriginalScenarioAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsByChartNoAccountRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsByChartNoAccountAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalLTDBudgetsByChartNoAccountNoURERel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    !related.IsUREChartAccount)
		GeneralLedgerTotalLTDBudgetsByChartNoAccountNoUREAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = any ScenarioChildrensAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    !related.IsUREChartAccount)
		GeneralLedgerTotalOriginalLTDBudgetsByChartNoAccountRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = BudgetsOriginalScenarioRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsRel.ReportingDate.EndDateJulian)
		GeneralLedgerTotalOriginalLTDBudgetsByChartNoAccountAllRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
			Instance Selection
				where (related.Scenario			   = BudgetsOriginalScenarioAllRel.Scenario
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount = blank
				and    related.GeneralLedgerTotal.Ledger             = any ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode.ChildrenNoCloseRel.Ledger
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian)
		ProjectReportingSettingsRel
			one-to-one relation to ProjectReportingSettings
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.Actor				     = actor
				related.ProjectReportingSettings = ContextProjectReportingSettings
		ProjectReportingSettingsAllRel
			one-to-one relation to ProjectReportingSettingsAll
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	 = FinanceEnterpriseGroup
				related.ProjectReportingSettingsAll = ContextProjectReportingSettingsAll
		ScenarioChildrensRel
			one-to-many relation to Scenario
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Parent = ProjectReportingSettingsRel.Scenario)
		ScenarioChildrensAllRel
			one-to-many relation to Scenario
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Parent = ProjectReportingSettingsAllRel.Scenario)
        ProjectSummaryAssignmentsRel
	        one-to-many relation to ProjectAssignment
            Field Mapping uses symbolic key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Project                = ShadowDescendantsRel.Project
        ProjectVendorContractSummaryRel
	        one-to-many relation to ProjectVendorContract
            Field Mapping uses part of key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Project                = ShadowDescendantsRel.Project	

		ProjectStructureValidationRel
			one-to-one relation to ProjectStructureValidation
			Field Mapping uses ByStructureDimension
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= LocalProject
				related.StructureDimension		= LocalStructureDimension

        DescendantProjectAssignmentRel
        	one-to-many relation to ProjectAssignment
        	Field Mapping uses symbolic key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
                related.Project                = ShadowPostingDescendantsRel.Project        	      
            Instance Selection
            	where (related.HasUncertifiedEffort)







        ProcessedProjectAssignmentRel  
        	one-to-many relation to ProjectAssignment
        	Field Mapping uses symbolic key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
                related.Project                = Project        	      
            Instance Selection
            	where (related.HasProcessedLabor)
    	ProcessedLaborOutsideRangeRel
    		one-to-many relation to ProjectAssignmentLabor
    		Field Mapping uses part of key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.Project					= Project
    		Instance Selection
    			where (related.Status.Processed
    			and    related.DateRange.Begin not within LocalDateRange
    			and    related.DateRange.End not within LocalDateRange)
    	ProcessedOrCertifiedProjectAssignmentLaborRel
    		one-to-many relation to ProjectAssignmentLabor
    		Field Mapping uses part of key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.Project					= Project
			Instance Selection
				where (related.Status.Processed
				or     related.Status.Certified)
    	ProjectAssignmentOutsideRangeRel is a ProjectAssignment(Project) set
    		Instance Selection
    			where (related.ProjectDateRange not within LocalDateRange)
    	ApprovedProjectAssignmentLaborRel
    		one-to-many relation to ProjectAssignmentLabor
    		Field Mapping uses part of key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.Project					= Project
    		Instance Selection
    			where (related.Status.Approved
    			or     related.Status.PendingApproval)
		GMSalaryEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "GM")

		GLCommitsRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")				
				and    (related.EntityYearPeriod >= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and     related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsRel.GeneralLedgerChartAccount))
		GLCommitsAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")				
				and    (related.EntityYearPeriod >= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and     related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsAllRel.GeneralLedgerChartAccount))
		GLCommitsLTDRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsRel.GeneralLedgerChartAccount))
		GLCommitsLTDAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsAllRel.GeneralLedgerChartAccount))
		GLCommitsLTDPostingRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount))
		GLCommitsLTDPostingAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount))
		GLCommitsLTDByChartRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsByChartRel.GeneralLedgerChartAccount))
		GLCommitsLTDByChartAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where ((related.System = "AP"
				or      related.System = "PO"
				or      related.System = "GL"				
				or      related.System = "GM")
				and    (related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and     related.FinanceCodeBlock.GeneralLedgerChartAccount = any GeneralLedgerChartAccountDescendantsByChartAllRel.GeneralLedgerChartAccount))
		GLCommitsRQRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod >= ProjectReportingSettingsRel.ReportingDate.StartDateJulian
				and    related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsRel.GeneralLedgerChartAccount)			
		GLCommitsRQAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod >= ProjectReportingSettingsAllRel.ReportingDate.StartDateJulian
				and    related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsAllRel.GeneralLedgerChartAccount)			
		GLCommitsRQLTDRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsRel.GeneralLedgerChartAccount)
		GLCommitsRQLTDAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsAllRel.GeneralLedgerChartAccount)
		GLCommitsRQLTDPostingRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	ProjectReportingSettingsRel.ReportingAccount)
		GLCommitsRQLTDPostingAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	ProjectReportingSettingsAllRel.ReportingAccount)
		GLCommitsRQLTDByChartRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsByChartRel.GeneralLedgerChartAccount)
		GLCommitsRQLTDByChartAllRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.System = "RQ"
				and    related.EntityYearPeriod <= ProjectReportingSettingsAllRel.ReportingDate.EndDateJulian
				and    related.FinanceCodeBlock.GeneralLedgerChartAccount =	any GeneralLedgerChartAccountDescendantsByChartAllRel.GeneralLedgerChartAccount)
		GLManualEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByProjectAndSystemCurrent
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.IsManualEncumbrance)
		GeneralLedgerChartAccountDescendantsRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	  = FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount = GLChartAccountShadowDescendantsRel.GeneralLedgerChartAccount
		GeneralLedgerChartAccountDescendantsAllRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	  = FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount = GLChartAccountShadowDescendantsAllRel.GeneralLedgerChartAccount
		GeneralLedgerChartAccountDescendantsByChartRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	  = FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount = GLChartAccountShadowDescendantsByChartRel.GeneralLedgerChartAccount
		GeneralLedgerChartAccountDescendantsByChartAllRel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	  = FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount = GLChartAccountShadowDescendantsByChartAllRel.GeneralLedgerChartAccount
		GeneralLedgerChartAccountURERel
			one-to-many relation to GeneralLedgerChartAccount
			Field Mapping uses BySystemAccount
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SystemAccount 			= 12
		GLChartAccountShadowDescendantsRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount 
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsRel.ReportingAccount
		GLChartAccountShadowDescendantsAllRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount 
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsAllRel.ReportingAccount
		GLChartAccountShadowDescendantsByChartRel 
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ReportingChart					 = ProjectReportingSettingsRel.Scenario.Basis.ReportingChart
			Instance Selection
				where (related.ChartType.Posting)
		GLChartAccountShadowDescendantsByChartAllRel 
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			 = FinanceEnterpriseGroup
				related.ReportingChart					 = ProjectReportingSettingsAllRel.Scenario.Basis.ReportingChart
			Instance Selection
				where (related.ChartType.Posting)
		GLChartAccountShadowDescendantsByChartNoURERel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsRel.Scenario.Basis.ChartAccountTopNode
			Instance Selection
				where (related.ChartType.Posting
				and   !related.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)
		GLChartAccountShadowDescendantsByChartNoUREAllRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = ProjectReportingSettingsAllRel.Scenario.Basis.ChartAccountTopNode
			Instance Selection
				where (related.ChartType.Posting
				and   !related.GeneralLedgerChartAccount.SystemAccount.UndistributedRetainedEarnings)
    	GeneralLedgerTransactionPostingRel
    		one-to-many relation to GeneralLedgerTransaction
    		Field Mapping uses ByProjectAndPostingDate
    			related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
    			related.FinanceCodeBlock.Project	= Project
    			related.PostingDate					<= LocalDateRange.EndDate
    		Instance Selection
				where (related.Status.Posted
				and    related.System != "PS"
    			and   !related.ExcludedProjectEvents				
    			and    related.PostingDate >= LocalDateRange.BeginDate)
		ProjectIndirectBurdenRel
			one-to-one relation to ProjectIndirectBurden
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	  = FinanceEnterpriseGroup
				related.Project					  = LocalProject
				related.ProjectIndirectBurdenCode = LocalIndirectBurdenCode
				related.EffectiveDate			  = blank
		ActiveProjectIndirectBurdenRel is a ProjectIndirectBurden set
			Instance Selection
				where (related.Active)
		ProjectIndirectBurdenCodeRel
			one-to-one relation to ProjectIndirectBurdenCode
			Field Mapping uses ByDateDescendingActive
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ProjectIndirectBurdenCode	= LocalIndirectBurdenCode
				related.EffectiveDate				<= LocalEffectiveDate
		ProjectIndirectBurdenSelectedSourceRel
			one-to-one relation to ProjectIndirectBurdenSelectedSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Project						= Project
				related.ProjectIndirectBurdenSelectedSource.FinanceDimension2		  = LocalFinanceDimension2
				related.ProjectIndirectBurdenSelectedSource.ProjectIndirectBurdenCode = LocalIndirectBurdenCode
		BurdenTransactionRunGroupRel
			one-to-many relation to ProjectIndirectBurdenTransaction
			Field Mapping uses ByRunGroup
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
		AccountingEntityGroupMemberRel
			one-to-many relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup          = LocalFinanceEnterpriseGroup
				related.AccountingEntityGroup			= LocalAccountingEntityGroup
		AccountingEntityGroupMemberOTOActiveRel
			one-to-many relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup          = LocalFinanceEnterpriseGroup
				related.AccountingEntityGroup			= LocalAccountingEntityGroup
				related.AccountingEntity				= LocalAccountingEntity
    		Instance Selection
    			where (related.AccountingEntity.Status.Active)
		SystemClosingControlRel
			one-to-one relation to SystemClosingControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.AccountingEntity				= LocalAccountingEntity
				related.GeneralLedgerSystemCode			= "PS"


		GeneralLedgerTransactionsRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.Status.Posted)
		GeneralLedgerTransactionsBeginDatesRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.Status.Posted
				and    related.PostingDate < ProjectDateRange.BeginDate)
		GeneralLedgerTransactionsEndDatesRel
			one-to-many relation to GeneralLedgerTransaction
			Field Mapping uses ByProjectAndPostingDate
				related.FinanceEnterpriseGroup   = FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project = Project
			Instance Selection
				where (related.Status.Posted			
				and    related.PostingDate > ProjectDateRange.EndDate)
		CodeBlockRelationRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 3
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 3)))
		CodeBlockRelationAccountingEntityRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 1
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 1)))
		CodeBlockRelationAccountingUnitRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 2
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 2)))
		CodeBlockRelationDimension1Rel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 6
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 6)))
		CodeBlockRelationDimension3Rel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 8
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 8)))
		CodeBlockRelationDimension4Rel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses ByToFrom
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Active
				and   ((related.ToField = 9
				and     related.FromField = 4)
				or	   (related.ToField = 4
				and     related.FromField = 9)))
		CodeBlockRelationAccountTotalsLTDRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationRel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		CodeBlockRelationDetailRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationRel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		CodeBlockRelationDetailAccountingEntityRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationAccountingEntityRel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		CodeBlockRelationDetailAccountingUnitRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationAccountingUnitRel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		CodeBlockRelationDetailDimension1Rel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationDimension1Rel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)

		CodeBlockRelationDetailFromToRel
			one-to-one relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.CodeBlockRelation					= LocalCodeBlockRelation
				related.KeyFromValue						= LocalKeyFromValue
				related.KeyToValue							= LocalKeyToValue

		CodeBlockRelationDetailDimension3Rel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationDimension3Rel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		CodeBlockRelationDetailDimension4Rel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.CodeBlockRelation	   = CodeBlockRelationDimension4Rel.CodeBlockRelation
			Instance Selection
				where (related.KeyToValue   = Project
				or     related.KeyFromValue = Project)
		GeneralLedgerAccountTotalsLTDRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup         				 = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project     				 = Project
				related.Scenario				       				 = FinanceEnterpriseGroup.ActualsScenario
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.SystemAccount.No)




		GeneralLedgerAccountTotalsLTDCoreRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup         				 = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project     				 = Project
				related.Scenario				       				 = FinanceEnterpriseGroup.ActualsScenario
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.SystemAccount.No
				and    related.GeneralLedgerTotal.Ledger             = FinanceEnterpriseGroup.LedgerRel.Ledger)




		GeneralLedgerFD3TotalsLTDRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup         				 = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project     				 = Project
				related.Scenario				       				 = FinanceEnterpriseGroup.ActualsScenario
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.SystemAccount.No

				and    related.GeneralLedgerTotal.FinanceDimension3 entered
				and    related.GeneralLedgerTotal.FinanceDimension3 = any CodeBlockRelationDetailDimension3Rel.Dimension3)
		GeneralLedgerFD4TotalsLTDRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup         				 = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project     				 = Project
				related.Scenario				       				 = FinanceEnterpriseGroup.ActualsScenario
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.SystemAccount.No

				and    related.GeneralLedgerTotal.FinanceDimension4 entered
				and    related.GeneralLedgerTotal.FinanceDimension4 = any CodeBlockRelationDetailDimension4Rel.Dimension4)
		ProjectExpenseGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartType.Posting
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartSection.IncomeStatement
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Expense)
		ProjectRevenueGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartType.Posting
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartSection.IncomeStatement
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Revenue)
		ProjectAssetGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartType.Posting
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartSection.BalanceSheet
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Asset)
		ProjectLiabilityGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartType.Posting
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.ChartSection.BalanceSheet
				and    related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Liability)
		PersonResponsibleTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where (related.IsPosted)
		UnbilledGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where ((related.Billed.Unprocessed
				or      related.Billed.Hold)
    			and    !related.ExcludedProjectEvents
				and     related.IsPosted)

		GLTransactionDetailLaborRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where (related.Resource entered
				and    related.System = "PR"
				and	   related.IsPosted)
		UnrecognizedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where ((related.RevenueRecognized.Unprocessed
				or      related.RevenueRecognized.Hold)
				and    !related.Billed.Distributed
    			and    !related.ExcludedProjectEvents
				and     related.IsPosted)
		UnburdenedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project	= Project
			Instance Selection
				where (related.IndirectBurden.Unprocessed
				and    related.System != "PS"
    			and   !related.ExcludedProjectEvents
				and    related.IsPosted)
		PostingInLocalSummaryRel
			one-to-one relation to ProjectShadow
			Field Mapping uses symbolic key				
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
    			related.Project					= Project
    			related.SummaryProject			= LocalProject
		UnprocessedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where ((related.Billed.Unprocessed
				or      related.Billed.Hold
				or      related.RevenueRecognized.Unprocessed
				or      related.RevenueRecognized.Hold)
    			and    !related.ExcludedProjectEvents
				and     related.IsPosted)
		UncapitalizedGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where (related.Capitalize.Unprocessed
				and    related.IsPosted)
		CapitalizeHeldGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where (related.Capitalize.Hold
				and    related.IsPosted)
		PendingFESGLTransactionDetailRel
			one-to-many relation to GLTransactionDetail
			Field Mapping uses TransactionsByProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.FinanceCodeBlock.Project   	= Project
			Instance Selection
				where ((related.Billed.Unprocessed
				or      related.Billed.Hold)
				and     related.FinanceCodeBlock.FinanceDimension2 = blank
    			and    !related.ExcludedProjectEvents
				and     related.IsPosted)
		DisplayProjectRel
			one-to-many relation to Project
			Field Mapping uses ByDisplayProject
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.DisplayProject   			= DisplayProject
			Instance Selection
				where ((related.DimensionStructure = LocalStructure
				or      related.DimensionStructure = blank)
				and    (related.UniqueID != UniqueID))
		ProjectAssignmentsRel
	        one-to-many relation to ProjectAssignment
            Field Mapping uses symbolic key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
                related.Project                = Project
        EmployeeProjectAssignmentRel
	        one-to-many relation to ProjectAssignment
            Field Mapping uses symbolic key
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
                related.Project                = Project
				related.Employee			   = LocalEmployee        
		EmployeeRel
			one-to-one relation to Employee
			Field Mapping uses symbolic key
				related.HROrganization = FinanceEnterpriseGroup.HROrganization
				related.Employee	   = PersonResponsible
		WatchedByEmployeeRel
			one-to-one relation to Employee
			Field Mapping uses symbolic key
				related.HROrganization = FinanceEnterpriseGroup.HROrganization
				related.Employee	   = WatchedBy
	    FinanceEnterpriseGroupAnalyticCubeRel
			one-to-one relation to AnalyticCube
	        Field Mapping uses AnalyticCubeSet
	        	related.BusinessClass = "FinanceEnterpriseGroup"
	    GeneralLedgerTotalAnalyticCubeRel
			one-to-one relation to AnalyticCube
	        Field Mapping uses AnalyticCubeSet
	        	related.BusinessClass = "GeneralLedgerTotal"
		GeneralLedgerCalendarPeriodStartDateRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.DerivedBeginDateGregorian not > LocalDateRange.BeginDate)			

		GeneralLedgerCalendarPeriodEndDateRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Date not < LocalDateRange.EndDate)
		GeneralLedgerPeriodShadowStartDatesRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			   = FinanceEnterpriseGroup
				related.GeneralLedgerCalendar			   = ContextStructure.GeneralLedgerCalendar
				related.GeneralLedgerCalendarPeriod        = any GeneralLedgerCalendarPeriodStartDateRel.GeneralLedgerCalendarPeriod
		GeneralLedgerPeriodShadowEndDatesRel
			one-to-many relation to GeneralLedgerPeriodShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			   = FinanceEnterpriseGroup
				related.GeneralLedgerCalendar			   = ContextStructure.GeneralLedgerCalendar
				related.GeneralLedgerCalendarPeriod        = any GeneralLedgerCalendarPeriodEndDateRel.GeneralLedgerCalendarPeriod				
		BillingOverridesRel is a ProjectBillingOverride set
			Instance Selection
				where (related.BillingMethod entered)
		ProjectContractInvoiceBalancesRel
			one-to-many relation to ProjectContractInvoiceBalance
			Field Mapping uses part of key
    			related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
    			related.ProjectContract        = ContextProjectContract
			Instance Selection				
				where (related.FinanceCodeBlock.Project = Project)
		ProjectContractInvoiceBalanceAdjustmentsRel
			one-to-many relation to ProjectContractInvoiceBalance
			Field Mapping uses part of key
    			related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
    			related.ProjectContract        = ContextProjectContract
			Instance Selection				
				where (related.FinanceCodeBlock.Project = Project
				and    related.AdjustmentsEntered)
		ProjectContractScenarioRel
			one-to-many relation to Scenario
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.Parent = ContextProjectContract.Scenario)
		ProjectGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup	   = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project				
				related.Scenario				   = ProjectContractScenarioRel.Scenario
			Instance Selection
				where (related.GeneralLedgerTotal.Ledger = FinanceEnterpriseGroup.LedgerRel.Ledger)				
		MyTeamRel
			one-to-one relation to ProjectTeamMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectTeam				= ProjectTeam
				related.TeamMember				= actor.agent(Employee).Employee
		ProjectContractPercentCompleteRel
			one-to-one relation to ProjectContractPercentComplete
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup         = FinanceEnterpriseGroup
				related.Project                        = Project
				related.ProjectContractPercentComplete = LocalPercentCompleteDate
		OpenInvoiceLineRel is a ProjectContractInvoiceLine set
			Instance Selection
				where (related.ProjectContractInvoice.Status.Created)

		OpenBillingInvoiceLineRel is a ProjectContractInvoiceLine set
			Instance Selection
				where (related.ProjectContractInvoice.Status.Created
				and    !related.ProjectContractInvoice.InvoiceType.RevenueRecognition)

		InvoiceLineRel is a ProjectContractInvoiceLine set
			Instance Selection
				where (related.IsBillingNotRetainer
				and   !related.LineType.PassThrough)

		LaborDistributionInvoiceLineRel is a ProjectContractInvoiceLine set
			Instance Selection
				where (related.ProjectContractInvoice.InvoiceType.Bill
				and    related.GLTransactionDetail.Resource entered
				and    related.LineType.Standard)

		RevenueLineRel is a ProjectContractInvoiceLine set
			Instance Selection
				where (related.IsRevenue
				and   !related.LineType.PassThrough)

		HistoricalBillingMilestoneRel is a ProjectContractMilestone set
			Instance Selection
				where (related.MilestoneType.Billing
				and    related.Status.Historical)

		HistoricalRevenueMilestoneRel is a ProjectContractMilestone set
			Instance Selection
				where (related.MilestoneType.Revenue
				and    related.Status.Historical)
								
		ProjectPersonnelResourceViewRel
			one-to-many relation to ProjectPersonnel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= Project
				related.Employee                = actor.agent(Employee).Employee				
			Instance Selection
				where (related.Active)
        ProjectAssignmentResourceRel
        	one-to-many relation to ProjectAssignment
        	Field Mapping uses ByEmployee
     	      	related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.Employee               = ProjectPersonnelResourceViewRel.Employee      	      
                related.Project                = Project 
		ProjectPersonnelRel
			one-to-many relation to ProjectPersonnel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= Project

    	ResourceProjectPersonnelRel
			one-to-many relation to ProjectPersonnel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup			
			Instance Selection
				where (related.Employee        = actor.agent(Employee).Employee
				and    related.Active)
		CopyToProjectPersonnelRel
			one-to-many relation to ProjectPersonnel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project 				= LocalProject
				related.Employee	   			= LocalEmployee
				related.ProjectRole  		    = LocalProjectRole				










		ProjectContractFundingSourceRel
			one-to-many relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract   	  	= ParentDisplayContractRel.Project

		ProjectContractFinanceDimension2Rel
			one-to-many relation to FinanceDimension2
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.FinanceDimension2		= ProjectContractFundingSourceRel.FinanceDimension2
				
		ProjectFundingSourceRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ParentDisplayContractRel.Project
				related.FinanceDimension2		= LocalFinanceDimension2
				
		NextProjectFundingSourceRel
			one-to-many relation to ProjectFundingSource
			Field Mapping uses ByPriority
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ParentDisplayContractRel.Project
				related.Priority				> LocalPriority
			Instance Selection
				where (related.Active
				and    related.FinanceDimension2.Active
				and    related.RemainingFESAmount > 0)

		FundingSourceSelectedProjectRel
			one-to-one relation to FundingSourceSelectedProject
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ParentDisplayContractRel.Project
				related.FinanceDimension2		= LocalFinanceDimension2
				related.Project					= Project
#ifdef module ap
		FESDistributionsByKeyLocalRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
			    related.FrontEndSplitDistributions.FundingKey 	= LocalDerivedFESKey
#endif
#ifdef module am
		AssetInterfaceOptionsRel
			one-to-many relation to AssetInterfaceOptions
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			 	related.Project						= Project  	
			 	
		AssetsRel
			one-to-many relation to Asset
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.AssetProject = Project)	
		
		AssetsStatusRel
			one-to-many relation to Asset
			Field Mapping uses Set7	
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.AssetProject.Project = Project
				and    related.Status < 9)
				
		AssetInterfaceOptionsByProjectRel
			one-to-many relation to AssetInterfaceOptions
			Field Mapping uses ByProject
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			 	related.Project.Project				= Project		
#endif
		GeneralLedgerTotalRel				
            one-to-many relation to GeneralLedgerTotal
            Field Mapping uses ByProjectAccount
                related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
                related.GeneralLedgerTotal.Project = Project
                related.Scenario                   = FinanceEnterpriseGroup.ActualsScenario
		
		ProjectAssetRel is a ProjectAsset set
		
		AllCompaniesInFEGRel
			one-to-many relation to GeneralLedgerCompany
			Field Mapping uses ByAccountingEntity
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup

#ifdef module po			
		PurchaseOrderLineDistributionsRel
            one-to-many relation to PurchaseOrderLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.PurchaseOrder.PurchaseOrderDate >= ProjectReportingSettingsRel.ReportingDate.DerivedStartDate
				and    related.PurchaseOrder.PurchaseOrderDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)

		PurchaseOrderLineDistributionsAllRel
            one-to-many relation to PurchaseOrderLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup)
				
		PurchaseOrderLineDistributionsLTDRel
            one-to-many relation to PurchaseOrderLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.PurchaseOrder.PurchaseOrderDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)
#endif
#ifdef module rq
		RequisitionLineDistributionsAllRel
            one-to-many relation to RequisitionLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup)
			
		RequisitionLineDistributionsLTDRel
            one-to-many relation to RequisitionLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.RequisitionLine.CreationDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)

		RequisitionLineDistributionsRel
            one-to-many relation to RequisitionLineDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.RequisitionLine.CreationDate >= ProjectReportingSettingsRel.ReportingDate.DerivedStartDate
				and    related.RequisitionLine.CreationDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)
#endif
#ifdef module ap
		PayablesInvoiceDistributionsAllRel
            one-to-many relation to PayablesInvoiceDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup)
			
		PayablesInvoiceDistributionsRel
            one-to-many relation to PayablesInvoiceDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.DistributionDate >= ProjectReportingSettingsRel.ReportingDate.DerivedStartDate
				and    related.DistributionDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)

		PayablesInvoiceDistributionsLTDRel
            one-to-many relation to PayablesInvoiceDistribution
            Field Mapping uses ByProject
                related.DistributionAccount.Project	= Project
			Instance Selection
				where (related.Company.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and    related.DistributionDate <= ProjectReportingSettingsRel.ReportingDate.DerivedEndDate)
#endif

#ifdef module cb
		CashLedgerGLDistributionsRel
			one-to-many relation to CashLedgerGLDistribution
            Field Mapping uses symbolic key
            	related.CashManagementGroup 	= FinanceEnterpriseGroup
            Instance Selection
				where (related.GLTransactionDetailRel.FinanceCodeBlock.Project = Project)

#endif

#ifdef module integration 		
		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1
        
        FSMBODConfigurationDetailRel
        	one-to-many relation to FSMBODConfigurationDetail
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 			= 2	
            	related.FSMBODConfiguration.Noun 			= "PulseAlert"
            	related.FSMBODConfiguration.Direction 		= 1
            Instance Selection
				where (related.Alert						= LocalPulseAlertFrom
				and	   related.Enable)
				

		FSMBODConfigurationProjectMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ProjectMaster"
            	related.FSMBODConfiguration.Direction 	= 1
				
		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFAE"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
            Instance Selection
				where (related.SourceValue	= LocalCrossReferenceValue ) 
		
		FSMCleanDocIDCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "CSFAE"
            	related.FSMBODCrossReference.DestinationField 	= "DESTAE"
        
        FSMCleanDocIDAccountingEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
    			related.AccountingEntity		= LocalAccountingEntity
    			   	
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
			
#endif					
		AccountingEntityRel
			one-to-many relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			= FinanceEnterpriseGroup



		FESProjectShadowContractRel
    		one-to-many relation to ProjectShadow
    		Field Mapping uses symbolic key
    			related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
    			related.ProjectStructure		= FinanceEnterpriseGroup.EnterpriseProjectStructure
    			related.Project					= Project
    		Instance Selection
    			where(!related.SummaryProject.ProjectType.Node
    			and related.SummaryProject.Contract)

		PostingProjectExpenseGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Expense
				and    related.PeriodEndingDate >= SearchDateRange.Begin
				and    related.PeriodEndingDate <= SearchDateRange.End
				and    (related.GeneralLedgerTotal within ExpenseSelectionGroup
				or     ExpenseSelectionGroup not entered))				

		PostingProjectRevenueGeneralLedgerTotalsRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount.AccountType.Revenue
				and    related.PeriodEndingDate >= SearchDateRange.Begin
				and    related.PeriodEndingDate <= SearchDateRange.End)
		DuplicateSequenceNumberRel
			one-to-many relation to Project
			Field Mapping uses symbolic key			
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
			Instance Selection
				where (related.SequenceNumber = SequenceNumber
				and    related.UniqueID      != UniqueID)
    Sets
		LeafRecords
			Sort Order
				FinanceEnterpriseGroup
				Project
			Instance Selection
				where (ProjectType.Posting)
		ByDimensionStructure
			Sort Order
				FinanceEnterpriseGroup
				DimensionStructure
				Project
		ByStructureAndPersonResponsible
			Sort Order
				FinanceEnterpriseGroup
				DimensionStructure
				PersonResponsible
				Project
		ByDisplayProject
			Sort Order
				FinanceEnterpriseGroup
				DisplayProject
				DimensionStructure	
		ByStructureAndProjectTeam
			Sort Order
				FinanceEnterpriseGroup
				DimensionStructure
				ProjectTeam
				Project
		ByParentDisplayContract
			Sort Order
				FinanceEnterpriseGroup
				ParentDisplayContract
				Project

    Field Rules
    	Project
    		if (action type.Create)
				if (FinanceEnterpriseGroup.ProjectRegularExpression entered
				and ProjectType.Posting)
					constraint (Project matches FinanceEnterpriseGroup.ProjectRegularExpression)
						"InvalidFormatFor<FinanceEnterpriseGroup.ProjectLabel>"		
		Description
			required
		ProjectType
	    	default to CreateProjectType		
			cannot be changed
				"CannotChangeProjectType"
			required
		ParentDimension
			default to DerivedTopNode	
		Active
			initial value is true
			if (SystemProject)
				Active = true
		SystemProject
			constraint (ProjectType.Posting)
				"SystemProjectMustBePostingType"		
			constraint (!SystemProjectRel exists)
				"<first SystemProjectRel.DisplayProject>IsAlreadyDesignatedAsSystem<FinanceEnterpriseGroup.ProjectLabel>"
		SequenceNumber
			autosequence using FinanceEnterpriseGroup.ProjectLastSeq
			if (old SequenceNumber entered)
				cannot be changed
					"SequenceNumberCannotBeChanged"
		BudgetIdentifier
			constraint (ProjectType.Summary)
				"BudgetIdentifierOnlyValidForSummaryProjects"
			if (BudgetIdentifier changed)
				if (BudgetIdentifier entered)
					if (CreateWithinParentProject entered)
						LocalProject = CreateWithinParentProject
					else
						LocalProject = Project.ProjectInContextStructureRel.ParentProject			
					TopNodeFound   				   = false
					while (!TopNodeFound)
						if (LocalProject.ProjectType.Node)
							TopNodeFound = true
						else
							constraint (BudgetIdentifier != LocalProject.BudgetIdentifier)
								"BudgetIdentifier<BudgetIdentifier>AlreadyInUseBy<LocalProject.DisplayProject>"
							if (LocalProject.ProjectType.Node
							or  LocalProject.ProjectInContextStructureRel.ParentProject.ProjectType.Node
							or !LocalProject.ProjectInContextStructureRel exists)
								TopNodeFound = true
							else								 
								LocalProject = LocalProject.ProjectInContextStructureRel.ParentProject	
					BudgetIdentifierArray.BudgetIdentifier[1] = BudgetIdentifier				
					invoke EditDescendantsBudgetIdentifier
						invoked.PrmBudgetIdentifierArray = BudgetIdentifierArray
						invoked.PrmBudgetIdentifierCount = 1					
				else
					TemplatesWithIdentifierCount		= instance count of TemplatesWithIdentifierRel
					if (TemplatesWithIdentifierCount	= 1)
						confirmation required
							"BudgetTemplate<first TemplatesWithIdentifierRel.BudgetTemplate>RefersToBudgetIdentifier<old BudgetIdentifier>.Proceed?"
					else
					if (TemplatesWithIdentifierCount > 1)
						TemplatesWithIdentifierCount -= 1
						if (TemplatesWithIdentifierCount = 1)
							confirmation required
								"BudgetTemplate<first TemplatesWithIdentifierRel.BudgetTemplate>And<last TemplatesWithIdentifierRel.BudgetTemplate>ReferToBudgetIdentifier<old BudgetIdentifier>.Proceed?"
						else
							confirmation required
								"BudgetTemplate<first TemplatesWithIdentifierRel.BudgetTemplate>And<TemplatesWithIdentifierCount>OtherTemplatesReferToBudgetIdentifier<old BudgetIdentifier>.Proceed?"
			
				invoke NotifyChangeIdentifierProject NotifyBudgetTemplateRel
					invoked.PrmProject				= Project
					invoked.PrmOldIdentifier		= old BudgetIdentifier
	



	
		Watch
	    	if (FinanceEnterpriseGroup.BODTrigger)
		    	if(Watch changed)
			   		trigger "ProjectWatchService" PA service
						resume on error
						title is "FEG:<FinanceEnterpriseGroup>Project:<Project>"
						Criteria
							FinanceEnterpriseGroup
							Project
						Variables
							FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup	
							Project
								variable name is Project
							Watch 
								variable name is Watch
							ProjectType
								variable name is ProjectType
							FinanceEnterpriseGroup.ProjectLabel
	                            variable name is FEGProjectLabel	
	                        DisplayProject 
	                        	variable name is DisplayProject	

#ifdef module integration	       	
			   		invoke TriggerProjectWatchAlert
			   			invoked.PrmPulseAlert = "FSM_ION_ProjectWatchAlert"
#endif			   						

	



		WatchedBy
			constraint (Watch)	
				"WatchIsRequiredWhenWatchedByIsEntered"

		DisplayProject
			default to Project
			if (DisplayProject != Project
			and DisplayProject changed)
				LocalStructure = ContextStructure
				constraint (!DisplayProjectRel exists)
					"DisplayValueAlreadyExistsFor<first DisplayProjectRel.Project>"
			
		IncludeInBudgetEdit
			constraint (ProjectType.Posting)
				"OnlyValidForExcludeFromBudgetEditPosting<FinanceEnterpriseGroup.ProjectLabel>"			

        ProjectStatus
        	if (ProjectType.Posting)
				if (ProjectStatus.AllowPurge)        	
					if (ParentDisplayContract entered)	
						constraint (!ParentDisplayContractRel.ProjectContract.HasUnprocesedInvoices)
							"ProjectStatusCannotHavePurgeSelected;UnprocessedInvoicesExists"
					constraint (!HasApprovedLabor)
						"ProjectStatusCannotHavePurgeSelected;ApprovedOrPendingApprovalLaborDistributionExists"	
#ifdef module am						
					if (Capital)
						constraint (!AssetInterfaceOptionsRel exists)
							"ProjectStatusCannotHavePurgeSelected;AssetInterfaceOptionsExist"
				if (ProjectStatus changed
				and ProjectStatus.AllowCapitalization
				and Capital)
					include ProjectCapitalizationUpgrade
#endif
				required
					"ProjectStatusRequiredForPosting<FinanceEnterpriseGroup.ProjectLabel>"				
			else
				cannot be entered
					"ProjectStatusValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"				

		ProjectDateRange
			include CheckValidDateRange
			if (SystemProject)
				initialize ProjectDateRange
			if (Contract)
				required
					"DateRangeRequiredWhenThisIsAContract<FinanceEnterpriseGroup.ProjectLabel>"
			else
				if (ProjectType.Posting
				and InEnterpriseStructure
				and !SystemProject
				and !ParentDimension.IsTopNode)
					required
						"DateRangeRequiredForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			if (!InEnterpriseStructure)
				cannot be changed
					"DateRangeCanOnlyBeChangedForProjectsWithinEnterpriseStructure"
			if (InEnterpriseStructure)	
				constraint (ValidDateRange)
					"DateRangeMustBeWithinProjectStructure<ContextStructure>CalendarDateRange"					
			if (CreateWithinParentProject entered)
				LocalParentProject = CreateWithinParentProject
			else
			if (ParentDimension entered)
				LocalParentProject = ParentDimension
			else
				LocalParentProject = ProjectInContextStructureRel.ParentProject		
			if (InEnterpriseStructure)							
				default to LocalParentProject.ProjectDateRange
			if (ProjectType.Posting)
				if (ProjectDateRange changed)
					constraint (ProjectDateRange within LocalParentProject.ProjectDateRange)
						"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>;_RunChangeDateRangeActionInstead"
				else
					constraint (ProjectDateRange within LocalParentProject.ProjectDateRange)
						"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>"
			else
				if (ProjectDateRange changed)
					constraint (ProjectDateRange within LocalParentProject.ProjectDateRange)
						"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>;ChangeDateRangeOnParent<LocalParentProject.DisplayProject>First"
				else
					constraint (ProjectDateRange within LocalParentProject.ProjectDateRange)
						"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>"
			if (ProjectType.Summary)
				if (ProjectDateRange.BeginDate > old ProjectDateRange.BeginDate
				or  ProjectDateRange.EndDate < old ProjectDateRange.EndDate)
					for each DescendantsRel
						if (each.ProjectDateRange entered)
							constraint (each.ProjectDateRange within ProjectDateRange)
								"DateRangeMustEncompass<each.ProjectDateRange.BeginDate>Through<each.ProjectDateRange.EndDate>"
			if (ProjectType.Posting)
				if ((ProjectDateRange.BeginDate > old ProjectDateRange.BeginDate
				or  ProjectDateRange.EndDate < old ProjectDateRange.EndDate)
				and old ProjectDateRange entered)




					LocalDateRange = ProjectDateRange
	    			constraint (ProcessedLaborOutsideRangeRel not exists)
    					"NewDateRangeInvalid;ProcessedLaborDistributionRecordsExist"
					constraint (ProjectAssignmentOutsideRangeRel not exists)
						"ProjectAssignmentsExistOutsideDesiredDateRange;_RunChangeDateRangeActionInstead"
			if (FinanceEnterpriseGroup.BODTrigger)
				if (ProjectDateRange.BeginDate changed 
				and ProjectDateRange.EndDate changed )
					LocalActionCode = "Z"
						invoke TriggerProjectDateChange
#ifdef module integration
						invoke TriggerProjectDateChangedAlert
							invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
				else
				if (ProjectDateRange.EndDate changed 
				and ProjectDateRange.BeginDate not changed)
					LocalActionCode = "E"
						invoke TriggerProjectDateChange
#ifdef module integration
						invoke TriggerProjectDateChangedAlert
							invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
				else
				if (ProjectDateRange.BeginDate changed 
				and ProjectDateRange.EndDate not changed)
					LocalActionCode = "B"	
						invoke TriggerProjectDateChange
#ifdef module integration
						invoke TriggerProjectDateChangedAlert
							invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
		PreAwardAssignmentDays
			constraint (ProjectType.Posting)
				"PreAwardAssignmentDaysValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"				
			if (SystemProject)
				initialize PreAwardAssignmentDays
			if (!InEnterpriseStructure)
				cannot be changed
					"PreAwardAssignmentDaysCanOnlyBeChangedForProjectsWithinEnterpriseStructure"

			if (ProjectType.Posting)
				if (PreAwardAssignmentDays < old PreAwardAssignmentDays
				and old PreAwardAssignmentDays entered)
					LocalDateRange = ProjectDateRange
					LocalDateRange.BeginDate -= PreAwardAssignmentDays
	    			constraint (ProcessedLaborOutsideRangeRel not exists)
    					"NewPreAwardAssignmentDaysInvalid;ProcessedLaborDistributionRecordsExist"
					constraint (ProjectAssignmentOutsideRangeRel not exists)
						"ProjectAssignmentsExistOutsidePreAwardAssignmentDays"

		Contract
			constraint (SummaryInEnterpriseStructure)
				"ContractValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.ProjectLabel>"
			if (Contract
			and not old Contract)
				initialize LocalProject
				for each DescendantsRel
					if (each.Contract)
						LocalProject = each.Project
						end for each
				constraint (LocalProject not entered)
					"ContractAlreadyDefinedInHierarchyFor<FinanceEnterpriseGroup.ProjectLabel>_<LocalProject.DisplayProject>"
				if (LocalProject not entered)
					LocalProject 	   = Project
					if (CreateWithinParentProject entered)
						LocalParentProject = CreateWithinParentProject
						LocalContextStructure = ContextStructure						
					else
						LocalContextStructure = DimensionStructure
						LocalParentProject = ProjectInLocalContextStructureRel.ParentProject
					TopNodeFound = false
					while (!TopNodeFound)
						if (LocalParentProject.Contract
						or  LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound 		   = true
						else
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject
					constraint (!LocalParentProject.Contract)
						"ContractAlreadyDefinedInHierarchyFor<FinanceEnterpriseGroup.ProjectLabel>_<LocalParentProject.DisplayProject>"
			if (Contract changed
			and old Contract)
				constraint (Project.ProjectContract.ProjectFundingSource set not exists)
					"ContractMustBeTrue;<FinanceEnterpriseGroup.FinanceDimension2Label>Exists"

		Currency
			if (ProjectType.Posting)
				default to FinanceEnterpriseGroup.EnterpriseProjectStructure.Currency
				required
					"CurrencyRequiredForPosting<FinanceEnterpriseGroup.ProjectLabel>"					
				LocalProject 		  = Project
				for each ProjectShadowRel
					if (each.SummaryProject.Contract)
						constraint (Currency = each.SummaryContractCurrency)
							"CurrencyMustMatchThatOfContainingContract"
			constraint (ProjectType.Posting)
				"CurrencyValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			if (Currency changed
			and old Currency entered)
				constraint (!UsedByATransaction)
					"CurrencyCannotBeChangedItIsUsedInATransaction"

		PersonResponsible
			constraint (SummaryInEnterpriseStructure)
				"PersonResponsibleValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.ProjectLabel>"

		ProjectTeam
			constraint (SummaryInEnterpriseStructure)
				"ResponsibleTeamValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.ProjectLabel>"

		SalaryCap
			constraint (ProjectType.Posting)
				"SalaryCapValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"				
			constraint (SalaryCap.Currency = Currency)
				"SalaryCapCurrencyMustMatchProjectCurrency"

		SalaryCapDate
			if (SalaryCap entered)
				default to SalaryCapDate.ProjectStartDate
			else
				cannot be entered
					"SalaryCapDateValidOnlyWhenSalaryCapEntered"

		OverageCodeBlock
			constraint (SalaryCap entered)
				"SalaryCapOverageFinanceStructureValidOnlyWhenSalaryCapEntered"
				
		BillingMethod
			constraint (ProjectType.Posting)
				"BillingMethodValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		MarkupPercent
			constraint (BillingMethod.CostPlus or BillingMethod.TimeAndMaterials or BillingMethod.RateTable)
				"MarkupPercentValidForBillingMethodsCostPlus,TimeAndMaterials,AndRateTableOnly"

		BillingRateTable
			constraint (BillingMethod.RateTable)
				"BillingRateTableOnlyValidWhenBillingMethodIsRateTable"
			constraint (BillingRateTable.Currency = Currency)
				"BillingRateTableCurrencyMustMatchContractCurrency"
			if (BillingMethod.RateTable)
				required
					"BillingRateTableRequired"

		BillingMaximum
			constraint (ProjectType.Posting)
				"BillingMaximumValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (BillingMaximum >= TotalBilledAmount)
				"BillingMaximumMustBeGreaterThanPreviouslyBilledAmountOf<TotalBilledAmount>"
			constraint (BillingMaximum >= TotalRecognizedAmount)
				"BillingMaximumMustBeGreaterThanPreviouslyRecognizedAmountOf<TotalRecognizedAmount>"
				
		FinanceCodeBlock
			constraint (ProjectType.Posting)
				"FinanceStructureValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				
		BurdenCode
			constraint (ProjectType.Posting)
				"FringeBurdenCodeValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			if (FringeBurden.DefaultFromProject)
				required
					"FringeBurdenCodeRequiredWhenFringeBurdenIsDefaultFromProject"				
			else
				cannot be entered
					"FringeBurdenCodeOnlyValidWhenBeingDefaultedFromProject"
				
		FringeBurden
			constraint (ProjectType.Posting)
				"FringeBurdenValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				
		BurdenCodeBlock
			constraint (ProjectType.Posting)
				"FringeBurdenFinanceStructureValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (FringeBurden.DefaultFromProject)
				"FringeBurdenFinanceStructureOnlyValidWhenBeingDefaultedFromProject"			
			if (FringeBurden.DefaultFromProject)
				required
					"FringeBurdenFinanceStructureRequiredWhenFringeBurdenIsDefaultFromProject"				






#ifdef module tx
		TaxExempt
			constraint (ProjectType.Posting)
				"TaxExemptStatusOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		TaxCode
			constraint (ProjectType.Posting)
				"TaxCodeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (!TaxExempt)
				"TaxCodeOnlyValidWhenTaxable"

		ProjectServiceLocation
			constraint (ProjectType.Posting)
				"ServiceLocationOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (!TaxExempt)
				"ServiceLocationOnlyValidWhenTaxable"
			constraint (TaxCode not entered)
				"CannotEnterBothTaxCodeAndServiceLocation"

		BuyerTaxCode
			constraint (ProjectType.Posting)
				"BuyerTaxCodeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (!TaxExempt)
				"BuyerTaxCodeOnlyValidWhenTaxable"

		BuyerTaxLocation
			constraint (ProjectType.Posting)
				"BuyerTaxLocationOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			constraint (!TaxExempt)
				"BuyerTaxLocationOnlyValidWhenTaxable"
			constraint (BuyerTaxCode not entered)
				"CannotEnterBothBuyerTaxCodeAndTaxLocation"
#endif
		RevenueCodeBlockOption
			constraint (ProjectType.Posting)
				"RevenueStructureOptionOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		RevenuePartialAccount
			if (RevenueCodeBlockOption.PartialStructure)
				required
					"PartialRevenueFinanceStructureRequired"
				constraint (RevenuePartialAccount.GeneralLedgerChartAccount entered)
					"Revenue<FinanceEnterpriseGroup.AccountLabel>Required"
			else
				cannot be entered
					"CannotEnterPartialRevenueFinanceStructureUnlessRevenueStructureOptionIs_Partial"

		RevenueFullAccount
			if (RevenueCodeBlockOption.FullStructure)
				required
					"FullRevenueFinanceStructureRequired"
			else
				cannot be entered
					"CannotEnterFullRevenueFinanceStructureUnlessRevenueStructureOptionIs_Full"

		FeesExempt
			constraint (ProjectType.Posting)
				"ExcludeFeesOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		ParentDisplayContract
			cannot be changed

		WorkType
			constraint (ProjectType.Posting)
				"WorkTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
		
		ServiceType
			constraint (ProjectType.Posting)
				"ServiceTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		UsageType
			constraint (ProjectType.Posting)
				"UsageTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
		
		CertificationRequired
			constraint (ProjectType.Posting)
				"CertificationRequiredOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		PreAwardID		
			constraint (ProjectType.Posting)
				"Pre-AwardIDOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		ExcludeFromFES
			constraint (ProjectType.Posting)
				"ExcludeFromFrontEndSplitsOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

		DefaultCodeBlock
			constraint (ProjectType.Posting)
				"DefaultFinanceStructureOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
			








#ifdef module am
		Capital
			if (Capital changed
			and old Capital)
				constraint (!HasAssetInterfaceOptions)
					"CannotChange;AssetInterfaceOptionsExistFor<FinanceEnterpriseGroup.ProjectLabel>"
			if (Capital changed
			and Capital
			and ProjectStatus.AllowCapitalization)
				include ProjectCapitalizationUpgrade
#endif
		
		FinanceDimension2		
			constraint (FinanceEnterpriseGroup.ProjectInvoicing)
				"RelatedFundingSourceIsOnlyValidForProjectInvoicing"		
			constraint (Project.ProjectType.Posting)
				"RelatedFundingSourceIsOnlyValidForPostingProject"
			constraint (FinanceDimension2.PostingDimension)
				"RelatedFundingSourceMustBePostingDimension"			
    Actions
    	
		Create is a Create Action
		
			Entrance Rules
				if (ContextStructure entered)
					LocalContextStructure = ContextStructure
				else
					LocalContextStructure = FinanceEnterpriseGroup.EnterpriseProjectStructure				

				if (!ProjectType.Node)
					include CheckValidContext			
				
				if (LocalContextStructure != FinanceEnterpriseGroup.EnterpriseProjectStructure)
					CreateProjectType = CreateProjectType.Summary
					
				if (!ProjectType entered)
					ProjectType = CreateProjectType
					constraint (ProjectType entered)
						"ProjectTypeIsRequired"

				constraint (Project entered)
					"Required<FinanceEnterpriseGroup.ProjectLabel>"
					
				if (!IsTopNode)
					if (ProjectType.Summary)
						if (ContextStructure entered)
							LocalStructureSequence = ContextStructure.StructureSequence
						else
							LocalStructureSequence = FinanceEnterpriseGroup.EnterpriseProjectStructure.StructureSequence					
						NewProject 		= Project
						Project			= SummaryNodeString				
						DisplayProject	= NewProject
				if (LocalContextStructure != FinanceEnterpriseGroup.EnterpriseProjectStructure)
					initialize Contract
					initialize ProjectDateRange
					
				BypassStructureRelationEdit = true

				if(LikeProjectField entered)
					constraint (ProjectType.Posting)
						"ProjectInStructureValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (PostingProjectExistRel exists and PostingProjectExistRel.ProjectType.Posting)
						"NotAValidPostingProject"
					
			Action Rules							 
				if (IsTopNode
				or  ProjectType.Summary)
					Active				= true
					DimensionStructure	= LocalContextStructure
					
			Exit Rules
				if (!SkipHierarchy)
					invoke Create ProjectHierarchy
						invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
						invoked.ProjectStructure		= LocalContextStructure
						invoked.ParentProject 			= ParentDimension 
						invoked.Project		    		= Project
						invoked.DisplayProject			= DisplayProject
						invoked.SystemProject			= SystemProject
			    		invoked.IncludeInBudgetEdit		= IncludeInBudgetEdit 							
			
				if (!IsTopNode)
					if (ProjectType.Summary)
						invoke SetLevel
					LocalProject = Project
					include CreateShadowForProject
					if (ProjectType.Posting)
						initialize ParentProject
				if(LikeProjectField entered)
						invoke AddProjectToStructures
							invoked.LikeProject 			= LikeProjectField



                
                if (Contract)
                	invoke Create Project.ProjectContract
						invoked.ContractAmount		= ContractAmount
						invoked.Currency			= ContractCurrency
						invoked.BillingMethod		= ContractBillingMethod
						invoked.RevenueRecognition	= ContractRevenueRecognition
						invoked.RevenueMethod		= ContractRevenueMethod
						invoked.AllocateExpenditures = ContractAllocateExpenditures
						invoked.Active				= Active
						invoked.ExcludeAP			= ContractExcludeAP
						invoked.MaximumFees			= ContractMaximumFees
						invoked.MarkupPercent		= ContractMarkupPercent
						invoked.BillingRateTable 	= ContractBillingRateTable
						invoked.ContractID			= ContractID		
						invoked.ContractType		= ContractType	
						invoked.FrontEndSplits      = FrontEndSplits
						invoked.ProgramIncome		= ProgramIncome
						invoked.ProgramIncomeType	= ProgramIncomeType
						invoked.CurrencyTable					= ContractCurrencyTable
						invoked.ProjectInvoiceFormat			= ContractInvoiceFormat
						invoked.ProjectInvoiceReversalFormat	= ContractInvoiceReversalFormat
						invoked.Scenario						= ContractScenario
						invoked.CreateSummarizedInvoices		= ContractSummarizedInvoices
						invoked.SummarizeByProject				= ContractSummarizeByProject
						invoked.SummarizeByDimension			= ContractSummarizeByDimension
						invoked.AlternateChart					= ContractAlternateChart
						invoked.SummarizeByResource				= ContractSummarizeByResource
						invoked.SummarizeByRate					= ContractSummarizeByRate
						invoked.SummarizeByFeeCode				= ContractSummarizeByFeeCode
						invoked.SellerTaxCode					= ContractSellerTaxCode
						invoked.SellerTaxLocation				= ContractSellerTaxLocation
						invoked.ProjectContractInvoiceTemplate	= ContractInvoiceTemplate
						invoked.ProjectContractInvoiceReversalTemplate	= ContractInvoiceReversalTemplate
						invoked.RemainderOption					= RemainderOption
						invoked.SingleProjectInvoice			= SingleProjectInvoice
						invoked.SingleProjectRevenue			= SingleProjectRevenue
								
                include CheckSystemProject
            	if(!LocalTopNode)
            		include TriggerProjectCreatedAlert

#ifdef module integration
            		invoke TriggerProjectAddAlert
            			invoked.PrmPulseAlert ="FSM_ION_ProjectAddAlert"
#endif

                else	
                	include TriggerProjectStructureCreatedAlert
				include TriggerBODForCreateOrUpdate
				
				if (ProjectType.Posting)
					if (!BypassNewStructureNotification)
						invoke NotifyNewStructureComponent FinanceEnterpriseGroup
							invoked.PrmNewProject = Project
				if (ProjectType.Posting)
					include SetParentContract

		CreateNoRules is a Create Action
			restricted
			bypass field rules
			
			Entrance Rules
				include CheckValidContext
			Exit Rules
				include TriggerBODForCreateOrUpdate
				if (ProjectType.Posting)				
					include SetParentContract
									
		T2VCreate is a Create Action
			restricted
			default label is untranslatable 
			bypass field rules
									
		Update is an Update Action
			Action Rules
				UseInputValue = true
				if (!BypassUpdateStructure)
					invoke UpdateStructure

				if(ProjectStatus changed)
					invoke TriggerProjectStatus
				if (ProjectAssignment set exists)
					if (FringeBurden changed
					or  BurdenCode changed
					or  BurdenCodeBlock changed)
						confirmation required
							"FringeBurdenChangeAffectsFutureAssignmentsOnly;_Run_\Update_\Assignment_\FringeActionToChangeExistingAssignments._\Continue?"
					if (FinanceCodeBlock changed)
						confirmation required
							"LaborDistributionFinanceStructureChangeAffectsFutureAssignmentsOnly;_Run_\Update_\Assignment_\LaborActionToChangeExistingAssignments._\Continue?"
			Exit Rules
				if (Contract
				and not old Contract)
					invoke Create Project.ProjectContract
						invoked.ContractAmount		= ContractAmount
						invoked.Currency			= ContractCurrency
						invoked.BillingMethod		= ContractBillingMethod
						invoked.RevenueRecognition	= ContractRevenueRecognition
						invoked.RevenueMethod		= ContractRevenueMethod
						invoked.AllocateExpenditures = ContractAllocateExpenditures
						invoked.Active				= Active
						invoked.ExcludeAP			= ContractExcludeAP
						invoked.MaximumFees			= ContractMaximumFees
						invoked.MarkupPercent		= ContractMarkupPercent
						invoked.BillingRateTable	= ContractBillingRateTable
						invoked.ContractID			= ContractID
						invoked.ContractType		= ContractType
						invoked.FrontEndSplits      = FrontEndSplits
						invoked.RemainderOption 	= RemainderOption
						invoked.SingleProjectInvoice = SingleProjectInvoice
						invoked.SingleProjectRevenue = SingleProjectRevenue

				if (not Contract
				and old Contract)
					invoke Delete Project.ProjectContract
				if (!UpdateFromProjectUpload					
				and (PersonResponsible changed
				or   ProjectTeam changed))
					if (Contract)
						invoke Update Project.ProjectContract















				include CheckSystemProject
				include TriggerBODForCreateOrUpdate
				if (ProjectType.Posting)				
					include SetParentContract

		IncludeSelectedProject is an Instance Action
			Parameters
				PrmProjectContract		is a ProjectContract
					default label is "ProjectContract" 
				PrmFinanceDimension2	is a FinanceDimension2
					default label is "FinanceDimension2"
			Action Rules
				invoke Create FundingSourceSelectedProject
					invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.ProjectContract			= PrmProjectContract
					invoked.FinanceDimension2		= PrmFinanceDimension2
					invoked.Project					= Project

		IncludeFundingSourceProject is an Instance Action
			Parameters
				PrmFinanceDimension2	is a FinanceDimension2
					default label is "FinanceDimension2"
			Action Rules
				invoke Create FundingSourceProject
					invoked.FinanceEnterpriseGroup  = FinanceEnterpriseGroup
					invoked.FinanceDimension2		= PrmFinanceDimension2
					invoked.Project					= Project

		UpdateFinancialCubes is a Set Action
			restricted
			Parameters
				UpdateFinanceEnterpriseGroup	is Boolean
				FinanceEnterpriseGroupOption	is a ProjectCubeUpdateOption
				UpdateGeneralLedgerTotal		is Boolean
					default label is "UpdateGlobalLedgerTotal"
				GeneralLedgerTotalOption    	is a ProjectCubeUpdateOption
					default label is "GlobalLedgerTotalOption"
			Parameter Rules
				UpdateFinanceEnterpriseGroup
					initial value is true
				FinanceEnterpriseGroupOption
					initial value is 1 
				UpdateGeneralLedgerTotal
					initial value is true
				GeneralLedgerTotalOption
					initial value is 1 
			Action Rules
				Set Rules
					Exit Rules
						if (UpdateFinanceEnterpriseGroup)
							if (FinanceEnterpriseGroupOption.Refresh)
								invoke Refresh FinanceEnterpriseGroupAnalyticCubeRel in background
							else
								invoke Reload FinanceEnterpriseGroupAnalyticCubeRel in background
						if (UpdateGeneralLedgerTotal)
							if (GeneralLedgerTotalOption.Refresh)
								invoke Refresh GeneralLedgerTotalAnalyticCubeRel in background
							else
								invoke Reload GeneralLedgerTotalAnalyticCubeRel in background

		ChangeDateRange is an Instance Action
			valid when (PostingInEnterpriseStructure)
			completion message is "<CompletionMessage>"			
			Parameters
				NewDateRange 		is a ProjectDateRange
				UpdateSummaryLevels is Boolean
			Parameter Rules
				NewDateRange
					initial value is ProjectDateRange
					required
					default to ProjectInContextStructureRel.ParentProject.ProjectDateRange
					if (NewDateRange.BeginDate > ProjectDateRange.BeginDate
					or  NewDateRange.EndDate < ProjectDateRange.EndDate)
						LocalDateRange = NewDateRange
		    			constraint (ProcessedLaborOutsideRangeRel not exists)
	    					"NewDateRangeInvalid;ProcessedLaborDistributionRecordsExist"
						for each distinct Employee in ProjectAssignment(Project) set
							LocalEmployee = each.Employee
							if (instance count of EmployeeProjectAssignmentRel > 1)
								for each EmployeeProjectAssignmentRel
									constraint (NewDateRange.BeginDate within each.ProjectDateRange
									or          NewDateRange.EndDate within each.ProjectDateRange
									or          each.ProjectDateRange within NewDateRange)
										"AssignmentForEmployee<each.Employee>IsOutsideNewDateRange"
					if (not UpdateSummaryLevels)	    					
						LocalParentProject = ProjectInContextStructureRel.ParentProject					
						constraint (NewDateRange within LocalParentProject.ProjectDateRange)
							"NewDateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>UnlessUpdateSummaryLevelsSelected"
					LocalDateRange.BeginDate = NewDateRange.BeginDate
					LocalDateRange.EndDate = NewDateRange.EndDate	
					if (InEnterpriseStructure)								
						constraint (ValidDateRange)
							"DateRangeMustBeWithinProjectStructure<ContextStructure>CalendarDateRange"
			Action Rules
				if (ProjectAssignmentCount > 20)
					CompletionMessage = ChangeDateRangeSubmittedMF
					invoke DoChangeDateRange in background
						invoked.NewDateRange		= NewDateRange
						invoked.UpdateSummaryLevels	= UpdateSummaryLevels
				else
					CompletionMessage = ChangeDateRangeCompletedMF
					invoke DoChangeDateRange in foreground
						invoked.NewDateRange		= NewDateRange
						invoked.UpdateSummaryLevels	= UpdateSummaryLevels
			
			Exit Rules
				include TriggerProjectRules

		DoChangeDateRange is an Instance Action
			restricted
			Parameters
				NewDateRange 		is a ProjectDateRange
				UpdateSummaryLevels is Boolean
			Local Fields
				RecordCount is Numeric size 2
			Action Rules





				if (UpdateSummaryLevels)
					LocalProject 	   = Project
					LocalParentProject = ProjectInContextStructureRel.ParentProject
					TopNodeFound = false
					while (!TopNodeFound)
						if (LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound 		   = true
						else
							if (NewDateRange.BeginDate < LocalParentProject.ProjectDateRange.BeginDate
							or  NewDateRange.EndDate   > LocalParentProject.ProjectDateRange.EndDate)
								LocalDateRange = LocalParentProject.ProjectDateRange
								if (NewDateRange.BeginDate < LocalParentProject.ProjectDateRange.BeginDate)
									LocalDateRange.BeginDate = NewDateRange.BeginDate
								if (NewDateRange.EndDate   > LocalParentProject.ProjectDateRange.EndDate)
									LocalDateRange.EndDate = NewDateRange.EndDate
								invoke UpdateNoRules LocalParentProject
									invoked.ProjectDateRange = LocalDateRange
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInContextStructureRel.ParentProject
				LocalDateRange = ProjectDateRange
				ProjectDateRange = NewDateRange				

			Exit Rules
				for each ProjectAssignment(Project) set
					initialize NewDateRange
					if (each.ProjectDateRange = LocalDateRange)
						NewDateRange = ProjectDateRange
					else
					if (each.ProjectDateRange not within ProjectDateRange)
						if (each.ProjectDateRange.BeginDate < ProjectDateRange.BeginDate)
							NewDateRange.BeginDate = ProjectDateRange.BeginDate
						else
						if (each.ProjectDateRange.BeginDate > ProjectDateRange.EndDate)
							NewDateRange.BeginDate = ProjectDateRange.EndDate
						else
							NewDateRange.BeginDate = each.ProjectDateRange.BeginDate
						if (each.ProjectDateRange.EndDate > ProjectDateRange.EndDate)
							NewDateRange.EndDate = ProjectDateRange.EndDate
						else
						if (each.ProjectDateRange.EndDate < ProjectDateRange.BeginDate)
							NewDateRange.EndDate = ProjectDateRange.BeginDate
						else
							NewDateRange.EndDate = each.ProjectDateRange.EndDate
					else
					if (each.ProjectDateRange.EndDate = LocalDateRange.EndDate)
						NewDateRange.BeginDate = each.ProjectDateRange.BeginDate
						NewDateRange.EndDate   = ProjectDateRange.EndDate
					if (NewDateRange entered
					and NewDateRange != each.ProjectDateRange)
						invoke Update each
							resume on error
							invoked.ProjectDateRange = NewDateRange
						if (RecordCount = 20)
							commit transaction
							initialize RecordCount
						RecordCount += 1			
			
				if (FinanceEnterpriseGroup.BODTrigger)
					if (ProjectDateRange.BeginDate changed 
					and ProjectDateRange.EndDate changed )
						LocalActionCode = "Z"
							invoke TriggerProjectDateChange
#ifdef module integration							
							invoke TriggerProjectDateChangedAlert
								invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
					else
					if (ProjectDateRange.EndDate changed 
					and ProjectDateRange.BeginDate not changed)
						LocalActionCode = "E"
							invoke TriggerProjectDateChange
#ifdef module integration
							invoke TriggerProjectDateChangedAlert
								invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
					else
					if (ProjectDateRange.BeginDate changed 
					and ProjectDateRange.EndDate not changed)
						LocalActionCode = "B"	
							invoke TriggerProjectDateChange
#ifdef module integration
							invoke TriggerProjectDateChangedAlert
								invoked.PrmPulseAlert = "FSM_ION_ProjectDateChangedAlert"
#endif
							
		TriggerProjectDateChange is an Instance Action
			restricted
			Action Rules
				if(FinanceEnterpriseGroup.BODTrigger)					
					trigger "ProjectDateChangeService" PA service
						resume on error
						title is "FEG:<FinanceEnterpriseGroup>Project:<Project>"
						Criteria
							FinanceEnterpriseGroup
							Project
						Variables
							FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup	
							Project
								variable name is Project
							ProjectDateRange.BeginDate				
								variable name is BeginDate
							ProjectDateRange.EndDate
								variable name is EndDate
							LocalActionCode
								variable name is ActionCode
							ProjectType
								variable name is ProjectType
							old ProjectDateRange.BeginDate				
								variable name is OldBeginDate
							old ProjectDateRange.EndDate
								variable name is OldEndDate
							FinanceEnterpriseGroup.ProjectLabel
								variable name is FEGProjectLabel
							DisplayProject
								variable name is DisplayProject							

		UpdateStructure is an Instance Action
			restricted
			Action Rules
				invoke UpdateProjectInfo ProjectInContextStructureRel
					invoked.PrmDisplayProject			= DisplayProject
					invoked.PrmSystemProject			= SystemProject
			    	invoked.PrmIncludeInBudgetEdit		= IncludeInBudgetEdit 		

		TriggerProjectStatus is an Instance Action
			restricted
			Action Rules
				if(FinanceEnterpriseGroup.BODTrigger)	  
					trigger "ProjectStatusChangedService" PA service
						resume on error  
						title is "FEG:<FinanceEnterpriseGroup>PM:<Project>"
						Criteria
							FinanceEnterpriseGroup
							Project
						Variables
							FinanceEnterpriseGroup
								variable name is FinanceEnterpriseGroup
							Project
								variable name is Project
							ProjectType
								variable name is ProjectType
							ProjectStatus
								variable name is ProjectStatus
							old ProjectStatus
								variable name is OldProjectStatus
							FinanceEnterpriseGroup.ProjectLabel
                                variable name is FEGProjectLabel
#ifdef module integration
					if (FSMBODConfigurationRel.Enable)
	          			LocalPulseAlertFrom = "FSM_ION_ProjectStatusChangeAlert"
	          			if(FSMBODConfigurationDetailRel.Enable)
			   				invoke ProjectStatusChangePulseAlert
#endif							


		Delete is a Delete Action
			valid when (EligibleToDelete)
			Entrance Rules
				include DeleteRules
			Action Rules
				constraint (ProjectAssignment set not exists)
					"CannotDelete;ProjectAssignmentRecordsExist"
#ifdef module am						
				include AssetDeleteEdits
#endif				
				invoke Delete ProjectHierarchy(Project) set	
















							
		DeleteAll is a Delete Action
			restricted
			Entrance Rules
#ifdef module am			
				include AssetDeleteEdits
#endif							
				include DeleteRules
			
		DeleteProjectStructure is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
				PrmProjectStructure			is like ProjectStructure
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    DimensionStructure = PrmProjectStructure)
			Action Rules
				Instance Rules
					invoke FastDelete
					
		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules

		AddPostingProjectToStructure is an Instance Action
			valid when (ProjectType.Posting)
			Parameters
				PrmStructure			is a ProjectStructure
					default label is "Structure"
				PrmParentProject		is a Project
					default label is "ParentProject"

			Parameter Rules
				PrmStructure
					required
					if (PrmStructure = FinanceEnterpriseGroup.UnusedProjectStructure)
						constraint (InvokedByUnusedStructure)
							"ActionNotValidForThisStructure"						
				PrmParentProject
					default to PrmStructure.ProjectNode
					constraint (PrmParentProject != Project)
						"CannotCreateWithinSelf"
					constraint (!PrmParentProject.ProjectType.Posting)	
						"CannotBePostingLevel"				

			Action Rules
				
				LocalStructure = PrmStructure
				constraint (!DisplayProjectRel exists)
					"DisplayValueAlreadyExistsFor<first DisplayProjectRel.Project>"				
				
				ParentDimension = PrmParentProject
				invoke Create ProjectHierarchy
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.ProjectStructure 		= PrmStructure
					invoked.ParentProject			= PrmParentProject
					invoked.Project					= Project
					invoked.DisplayProject			= Project


				invoke BuildShadowFileForProject PrmStructure
					invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.PrmProject			 	  = Project				

		AddPostingToSummary is an Instance Action
			Action Rules
				include CheckValidContext
				
				LocalStructure = ContextStructure
				constraint (!DisplayProjectRel exists)
					"DisplayValueAlreadyExistsFor<first DisplayProjectRel.Project>"					
				
				ParentDimension = ContextProject
				invoke Create ProjectHierarchy
					invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.ProjectStructure 		= ContextStructure
					invoked.ParentProject			= ContextProject
					invoked.Project					= Project
					invoked.DisplayProject			= Project
				LocalProject = Project
				include CreateShadowForProject
			Exit Rules
				if (ProjectType.Posting)
					include SetParentContract
	
		CopyPostingProject is an Instance Action

			valid when (PostingInEnterpriseStructure)
			Parameters
				NewParentDimension		is a Project
				NewProject				is like Project
				NewDescription			is like Description
				NewProjectDateRange		is a ProjectDateRange				
				NewProjectStatus		is a ProjectStatus
				CopyAssignments			is Boolean
				CopyOverrides			is Boolean
				CopyProjectPersonnel	is Boolean
				AddToStructure          is Boolean
			
			Local Fields 
				LocalProjectView		is a Project view

			Parameter Rules
				NewParentDimension
					required
					initial value is ParentDimension
					default to ParentDimension
        			constraint (NewParentDimension.SummaryInEnterpriseStructure)
        				"MustBeSummary<FinanceEnterpriseGroup.ProjectLabel>InEnterpriseStructure"	
				NewProject
					required
					LocalProject		= NewProject
					constraint (NewProjectRel not exists)
						"<FinanceEnterpriseGroup.ProjectLabel>AlreadyExists"
				NewDescription
					required
					initial value is Description + "_Copy"
				NewProjectDateRange
					initial value is ProjectDateRange
					default to ProjectDateRange	
					constraint (NewProjectDateRange within NewParentDimension.ProjectDateRange)
						"DateRangeMustBeBetween<NewParentDimension.ProjectDateRange.BeginDate>And<NewParentDimension.ProjectDateRange.EndDate>"
				NewProjectStatus
					initial value is ProjectStatus
					default to ProjectStatus
			Action Rules
				invoke Create
					assign result to LocalProjectView
					fill in fields from this instance
						except invoked.DisplayProject
					invoked.ParentDimension		= NewParentDimension
					invoked.Project				= NewProject
					invoked.Description			= NewDescription
					invoked.ProjectDateRange	= NewProjectDateRange
					invoked.ProjectStatus		= NewProjectStatus
					invoked.CreateWithinParentProject	= NewParentDimension
			Exit Rules
				if (CopyAssignments)	
					for each ProjectAssignment set
						invoke Create ProjectAssignment
							fill in fields from each
							invoked.Project 			= NewProject
							invoked.ProjectDateRange	= NewProjectDateRange
							invoked.BypassStructureRelationEdit = true
				if (CopyOverrides)
					for each ProjectBillingOverride set
						invoke Create ProjectBillingOverride
							fill in fields from each
							invoked.Project = NewProject
							invoked.BypassStructureRelationEdit = true
				if (CopyProjectPersonnel)	
					for each ProjectPersonnel set
						invoke Create ProjectPersonnel
							fill in fields from each
							invoked.Project 			= NewProject
							invoked.Active              = true
				if(AddToStructure)
					invoke AddProjectToStructures LocalProjectView.Project
						invoked.LikeProject				= Project	

		CopySummaryProject is an Instance Action
			valid when (ProjectType.Summary)
			Parameters
				NewProject				is AlphaUpper size 22
				NewDescription			is like Description
				NewProjectDateRange		is a ProjectDateRange
				CopyContract			is Boolean
			Parameter Rules
				NewProject
					required
				NewDescription
					required
					initial value is Description + "_Copy"
				NewProjectDateRange
					initial value is ProjectDateRange
					default to ProjectDateRange
					LocalParentProject = ParentProject
					constraint (NewProjectDateRange within LocalParentProject.ProjectDateRange)
						"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>"
				CopyContract
					constraint (Contract)
						"Summary<FinanceEnterpriseGroup.ProjectLabel>IsNotAContract"
			Action Rules
				invoke Create
					fill in fields from this instance
						except invoked.DisplayProject
						except invoked.Contract
					invoked.Project							= NewProject
					invoked.Description						= NewDescription
					invoked.ProjectDateRange				= NewProjectDateRange
					if (CopyContract)
						invoked.Contract					= true
						invoked.ContractAmount				= Project.ProjectContract.ContractAmount
						invoked.ContractCurrency			= Project.ProjectContract.Currency
						invoked.ContractBillingMethod		= Project.ProjectContract.BillingMethod
						invoked.ContractRevenueRecognition	= Project.ProjectContract.RevenueRecognition
						invoked.ContractRevenueMethod		= Project.ProjectContract.RevenueMethod
						invoked.ContractAllocateExpenditures = Project.ProjectContract.AllocateExpenditures
						invoked.ContractExcludeAP			= Project.ProjectContract.ExcludeAP
						invoked.ContractMaximumFees			= Project.ProjectContract.MaximumFees
						invoked.ContractMarkupPercent		= Project.ProjectContract.MarkupPercent
						invoked.ContractBillingRateTable 	= Project.ProjectContract.BillingRateTable

						invoked.ContractType				= Project.ProjectContract.ContractType	
						invoked.FrontEndSplits      		= Project.ProjectContract.FrontEndSplits
						invoked.ProgramIncome				= Project.ProjectContract.ProgramIncome
						invoked.ProgramIncomeType			= Project.ProjectContract.ProgramIncomeType						
						invoked.ContractCurrencyTable			= Project.ProjectContract.CurrencyTable
						invoked.ContractInvoiceFormat			= Project.ProjectContract.ProjectInvoiceFormat
						invoked.ContractInvoiceReversalFormat	= Project.ProjectContract.ProjectInvoiceReversalFormat
						invoked.ContractScenario				= Project.ProjectContract.Scenario
						invoked.ContractSummarizedInvoices		= Project.ProjectContract.CreateSummarizedInvoices
						invoked.ContractSummarizeByProject		= Project.ProjectContract.SummarizeByProject
						invoked.ContractSummarizeByDimension	= Project.ProjectContract.SummarizeByDimension
						invoked.ContractAlternateChart			= Project.ProjectContract.AlternateChart
						invoked.ContractSummarizeByResource		= Project.ProjectContract.SummarizeByResource
						invoked.ContractSummarizeByRate			= Project.ProjectContract.SummarizeByRate
						invoked.ContractSummarizeByFeeCode		= Project.ProjectContract.SummarizeByFeeCode
						invoked.ContractSellerTaxCode			= Project.ProjectContract.SellerTaxCode
						invoked.ContractSellerTaxLocation		= Project.ProjectContract.SellerTaxLocation
						invoked.ContractInvoiceTemplate			= Project.ProjectContract.ProjectContractInvoiceTemplate
						invoked.ContractInvoiceReversalTemplate	= Project.ProjectContract.ProjectContractInvoiceReversalTemplate
						invoked.RemainderOption					= Project.ProjectContract.RemainderOption
						invoked.SingleProjectInvoice			= Project.ProjectContract.SingleProjectInvoice
						invoked.SingleProjectRevenue			= Project.ProjectContract.SingleProjectRevenue

					invoked.CreateWithinParentProject		= ParentProject

		CopyProjectBillingOverrides is an Instance Action
			valid when (HasProjectBillingOverrides)
			Parameters
				NewSummaryProject				is a Project
			Parameter Rules
				NewSummaryProject
					required
			Action Rules
				LocalParentProject = NewSummaryProject
				for each CopyToSummaryProjectRel
					for each ProjectBillingOverride set
						LocalProject = CopyToSummaryProjectRel.Project
						LocalProjectCodeBlock = each.ProjectCodeBlock
						if (ProjectBillingOverrideRel not exists)
							invoke Create ProjectBillingOverride
								fill in fields from each
								invoked.Project = CopyToSummaryProjectRel.Project
								invoked.BypassStructureRelationEdit = true

		CreateChildWithin is an Instance Action
			default label is "CreateChildProject"		
			valid when (ProjectType.Summary)
			allow user fields as parameters
			Parameters
				NewProjectType					is Numeric 1
					States
						Summary	value is 2
						Posting	value is 1
				NewProject	 					is like Project 
				NewDisplayProject				is like Project
				NewDescription					is a Description
				NewFinanceDimension2            is a FinanceDimension2
				NewBudgetIdentifier				is a BudgetIdentifier
				NewContract						is Boolean
				NewActive						is Boolean
				NewProjectStatus				is a ProjectStatus
				NewBillable						is Boolean
				NewWatch						is Boolean		
				NewWatchedBy				    is an Employee
				NewCapital						is Boolean
				NewCurrency						is a Currency
				NewProjectDateRange				is a ProjectDateRange
				NewIncludeInBudgetEdit			is Boolean
				NewPersonResponsible			is an Employee
				NewProjectTeam					is a ProjectTeam
				NewContractAmount				is an InternationalAmount
				NewContractCurrency				is a Currency
				NewContractID					is Alpha size up to 30
				NewContractType					is a ProjectContractType
				NewContractBillingMethod		is Numeric size 1
					States
						CostReimbursement	value is 1
						CostPlus			value is 2
						TimeAndMaterials	value is 3
						Milestone			value is 4
						Installment			value is 5
						RateTable			value is 6
				NewContractMarkupPercent	is Percent size 5.2
				NewContractBillingRateTable	is a ProjectBillingRateTable
				NewContractAllocateExpenditures	is Boolean
				NewContractExcludeAP			is Boolean	
				NewContractRevenueRecognition	is Numeric size 1
					States
						Combined	value is 1
						Separate	value is 2
				NewContractRevenueMethod		is Numeric size 1
					States
						FullAccrual				value is 1
						Milestone				value is 2
						PercentageOfCompletion	value is 3
						Installment				value is 4
				NewContractMaximumFees			is an InternationalAmount
				NewSalaryCap					is a ProjectSalaryCap
				NewSalaryCapDate				is Numeric size 1
		        	States
		        		ProjectStartDate		value is 1
		        		LaborPeriodEndingDate	value is 2
		        NewBillingMethod				is a ProjectBillingMethod
		        NewMarkupPercent				is Percent size 5.2
				NewBillingMaximum				is an InternationalAmount		        
		        NewBillingRateTable				is a ProjectBillingRateTable
		        NewFinanceCodeBlock				is a FinanceCodeBlockNoProject 
		        NewBurdenCode					is a ProjectBurdenCode
				NewFringeBurden					is Numeric size 1
					States
						No					value is 0
						DefaultFromEmployee	value is 1
						DefaultFromProject	value is 2
				NewBurdenCodeBlock				is a FinanceCodeBlockNoProject 
#ifdef module tx
				NewTaxExempt					is Boolean


				NewViewTaxCodeOrTaxLocation is Numeric 1
					States
						TaxCode value is 0
						TaxLocation value is 1
				NewBuyerTaxCode					is a TaxCode
				NewBuyerTaxLocation				is a ProjectServiceLocation
#endif
				NewRevenueCodeBlockOption		is a RevenueCodeBlockOption
				NewRevenueFullAccount			is a FinanceCodeBlockFullNoProjectFD2
				NewRevenuePartialAccount		is a FinanceCodeBlockNoProjectFD2
				NewAddressCode					is an AddressCode
				NewFeesExempt					is Boolean
				NewOverageCodeBlock				is a FinanceCodeBlockOverage
				NewWorkType						is a ProjectWorkType
				NewServiceType					is a ProjectServiceType
				NewUsageType					is a ProjectUsageType
				NewCertificationRequired		is Boolean	
				NewPreAwardID					is Alpha size 25
				NewFrontEndSplits			    is Boolean
				NewExpenseManagement            is Boolean
				NewProgramIncome			    is Boolean
				NewProgramIncomeType		    is Numeric size 1
					States
						Additive	    value is 1
						Deductive		value is 2
						CostShare		value is 3

				NewExcludeFromFES				is Boolean
				NewRemainderOption		is Numeric size 1
					States
						DeferOnly		value is 1
						DeferAndHold	value is 2
				NewDefaultCodeBlock				is a FinanceCodeBlockNoProject
				NewSingleProjectInvoice			is Boolean
					default label is "SingleProjectInvoices"
				NewSingleProjectRevenue			is Boolean
					default label is "SingleProjectRevenueRecognition"
				NewPreAwardAssignmentDays		is Numeric size 3
					default label is "PreAwardAssignmentDays"

			Parameter Rules
				NewProjectType
					required
					initial value is NewProjectType.Summary
				NewProject
					required
				NewDescription
					required
				NewDisplayProject
					default to NewProject
				NewBudgetIdentifier
					if (NewProjectType.Posting)
						cannot be entered
							"BudgetIdentifierValidOnlyForSummary<FinanceEnterpriseGroup.ProjectLabel>"						
				NewContract				
					if (NewProjectType.Posting)
						cannot be entered
							"ContractValidOnlyForSummary<FinanceEnterpriseGroup.ProjectLabel>"	
				NewActive
					initial value is true
				NewProjectStatus
					if (NewProjectType.Summary)
						cannot be entered
							"ProjectStatusValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"				
				NewProjectDateRange
					default to ProjectDateRange		
				NewPreAwardAssignmentDays
					if (NewProjectType.Summary)
						cannot be entered
							"PreAwardAssignmentDaysValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"				
				NewCurrency	
					if (NewProjectType.Summary)
						cannot be entered
							"CurrencyValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"						
					else
						if (Project.Contract)
							NewCurrency = Project.ProjectContract.Currency	
							required
								"CurrencyRequiredForPosting<FinanceEnterpriseGroup.ProjectLabel>"
						else
							default to FinanceEnterpriseGroup.EnterpriseProjectStructure.Currency
							required
								"CurrencyRequiredForPosting<FinanceEnterpriseGroup.ProjectLabel>"					
						if (Project.Contract)
							constraint (NewCurrency = Project.ProjectContract.Currency)
								"CurrencyMustMatchThatOfContainingContract"
						else
							LocalProject = Project
							for each ProjectShadowRel
								if (each.SummaryProject.Contract)
									constraint (NewCurrency = each.SummaryContractCurrency)
										"CurrencyMustMatchThatOfContainingContract"
				NewWatchedBy			
					constraint (NewWatch)	
						"WatchIsRequiredWhenWatchedByIsEntered"
				NewFinanceDimension2
					constraint (FinanceEnterpriseGroup.ProjectInvoicing)
						"RelatedFundingSourceIsOnlyValidForProjectInvoicing"		
					constraint (NewProjectType.Posting)
						"RelatedFundingSourceOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (FinanceDimension2.PostingDimension)
						"RelatedFundingSourceMustBePostingDimension"			
				NewIncludeInBudgetEdit
					constraint (NewProjectType.Posting)
						"IncludeInBudgetEditValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				NewPersonResponsible
					constraint (NewProjectType.Summary)
						"PersonResponsibleValidOnlyForSummary<FinanceEnterpriseGroup.ProjectLabel>"
				NewProjectTeam
					constraint (NewProjectType.Summary)
						"ResponsibleTeamValidOnlyForSummary<FinanceEnterpriseGroup.ProjectLabel>"
				NewSalaryCap
					constraint (NewProjectType.Posting)
						"SalaryCapValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (NewSalaryCap.Currency = NewCurrency)
						"SalaryCapCurrencyMustMatchProjectCurrency"
				NewSalaryCapDate
					if (NewSalaryCap entered)
						default to NewSalaryCapDate.ProjectStartDate
					else
						cannot be entered
							"SalaryCapDateValidOnlyWhenSalaryCapEntered"
				NewOverageCodeBlock
					constraint (NewSalaryCap entered)
						"SalaryCapOverageFinanceStructureValidOnlyWhenSalaryCapEntered"
				NewBillingMethod
					constraint (NewProjectType.Posting)
						"BillingMethodValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				NewMarkupPercent
					constraint (NewBillingMethod.CostPlus or NewBillingMethod.TimeAndMaterials or NewBillingMethod.RateTable)
						"MarkupPercentValidForBillingMethodsCostPlus,TimeAndMaterials,AndRateTableOnly"
				NewBillingRateTable
					constraint (NewBillingMethod.RateTable)
						"BillingRateTableOnlyValidWhenBillingMethodIsRateTable"
					constraint (NewBillingRateTable.Currency = NewCurrency)
						"BillingRateTableCurrencyMustMatchContractCurrency"
					if (NewBillingMethod.RateTable)
						required
							"BillingRateTableRequired"
				NewBillingMaximum
					constraint (NewProjectType.Posting)
						"BillingMaximumValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				NewFinanceCodeBlock
					constraint (NewProjectType.Posting)
						"FinanceStructureValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
				NewBurdenCode
					constraint (NewProjectType.Posting)
						"FringeBurdenCodeValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					if (NewFringeBurden.DefaultFromProject)
						required
							"FringeBurdenCodeRequiredWhenFringeBurdenIsDefaultFromProject"
					else
						cannot be entered
							"FringeBurdenCodeOnlyValidWhenBeingDefaultedFromProject"
				NewFringeBurden
					constraint (NewProjectType.Posting)
						"FringeBurdenValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewBurdenCodeBlock
					constraint (NewProjectType.Posting)
						"FringeBurdenFinanceStructureValidOnlyForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					if (NewFringeBurden.DefaultFromProject)
						required
							"FringeBurdenFinanceStructureRequiredWhenFringeBurdenIsDefaultFromProject"				
					else
						cannot be entered
							"FringeBurdenFinanceStructureOnlyValidWhenBeingDefaultedFromProject"
#ifdef module tx
				NewTaxExempt
					constraint (NewProjectType.Posting)
						"TaxExemptStatusOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
		














				NewBuyerTaxCode
					constraint (NewProjectType.Posting)
						"BuyerTaxCodeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (!NewTaxExempt)
						"BuyerTaxCodeOnlyValidWhenTaxable"

				NewBuyerTaxLocation
					constraint (NewProjectType.Posting)
						"BuyerTaxLocationOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
					constraint (!NewTaxExempt)
						"BuyerTaxLocationOnlyValidWhenTaxable"
					constraint (NewBuyerTaxCode not entered)
						"CannotEnterBothBuyerTaxCodeAndTaxLocation"
#endif
				NewRevenueCodeBlockOption
					constraint (NewProjectType.Posting)
						"RevenueStructureOptionOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewRevenuePartialAccount
					if (NewRevenueCodeBlockOption.PartialStructure)
						required
							"PartialRevenueFinanceStructureRequired"
						constraint (NewRevenuePartialAccount.GeneralLedgerChartAccount entered)
							"Revenue<FinanceEnterpriseGroup.AccountLabel>Required"
					else
						cannot be entered
							"CannotEnterPartialRevenueFinanceStructureUnlessRevenueStructureOptionIs_Partial"
		
				NewRevenueFullAccount
					if (NewRevenueCodeBlockOption.FullStructure)
						required
							"FullRevenueFinanceStructureRequired"
					else
						cannot be entered
							"CannotEnterFullRevenueFinanceStructureUnlessRevenueStructureOptionIs_Full"
		
				NewFeesExempt
					constraint (NewProjectType.Posting)
						"ExcludeFeesOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewWorkType
					constraint (NewProjectType.Posting)
						"WorkTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewServiceType
					constraint (NewProjectType.Posting)
						"ServiceTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewUsageType
					constraint (NewProjectType.Posting)
						"UsageTypeOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewCertificationRequired
					constraint (NewProjectType.Posting)
						"CertificationRequiredOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"
						
				NewPreAwardID		
					constraint (NewProjectType.Posting)
						"Pre-AwardIDOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"

				NewExcludeFromFES
					constraint (NewProjectType.Posting)
						"ExcludeFromFrontEndSplitsOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"						
				NewDefaultCodeBlock
					constraint (NewProjectType.Posting)
						"DefaultFinanceStructureOnlyValidForPosting<FinanceEnterpriseGroup.ProjectLabel>"







			Action Rules
				include CheckValidContext
						
			Exit Rules
				invoke Create
					fill in user fields from parameters				
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.ProjectType					= NewProjectType
					invoked.Project						= NewProject
					invoked.Description   		  		= NewDescription
					invoked.DisplayProject	  			= NewDisplayProject
					invoked.ParentDimension				= Project
					invoked.FinanceDimension2			= NewFinanceDimension2
					invoked.BudgetIdentifier			= NewBudgetIdentifier
					invoked.Contract					= NewContract
					invoked.Active						= NewActive
					invoked.ProjectStatus				= NewProjectStatus
					invoked.Billable					= NewBillable
					invoked.Watch						= NewWatch			
					invoked.WatchedBy		            = NewWatchedBy
					invoked.Capital						= NewCapital					
					invoked.Currency					= NewCurrency
					invoked.ProjectDateRange			= NewProjectDateRange
					invoked.IncludeInBudgetEdit			= NewIncludeInBudgetEdit
					invoked.CreateWithinParentProject	= Project
					invoked.PersonResponsible			= NewPersonResponsible
					invoked.ProjectTeam					= NewProjectTeam
					invoked.ContractAmount				= NewContractAmount
					invoked.ContractID					= NewContractID
					invoked.ContractType				= NewContractType
					invoked.ContractCurrency			= NewContractCurrency
					invoked.ContractBillingMethod		= NewContractBillingMethod
					invoked.ContractMarkupPercent		= NewContractMarkupPercent
					invoked.ContractBillingRateTable	= NewContractBillingRateTable
					invoked.ContractAllocateExpenditures = NewContractAllocateExpenditures
					invoked.ContractExcludeAP           = NewContractExcludeAP
					invoked.ContractRevenueRecognition	= NewContractRevenueRecognition
					invoked.ContractRevenueMethod		= NewContractRevenueMethod
					invoked.ContractMaximumFees			= NewContractMaximumFees
					invoked.FrontEndSplits			    = NewFrontEndSplits
					invoked.SalaryCap					= NewSalaryCap
					invoked.SalaryCapDate				= NewSalaryCapDate
					invoked.OverageCodeBlock			= NewOverageCodeBlock
					invoked.BillingMethod				= NewBillingMethod
					invoked.MarkupPercent				= NewMarkupPercent
					invoked.BillingRateTable			= NewBillingRateTable
					invoked.BillingMaximum				= NewBillingMaximum
					invoked.FinanceCodeBlock			= NewFinanceCodeBlock
					invoked.BurdenCode					= NewBurdenCode
					invoked.FringeBurden				= NewFringeBurden
					invoked.BurdenCodeBlock				= NewBurdenCodeBlock
#ifdef module tx
					invoked.TaxExempt					= NewTaxExempt


					invoked.BuyerTaxCode				= NewBuyerTaxCode
					invoked.BuyerTaxLocation			= NewBuyerTaxLocation
					invoked.ViewTaxCodeOrTaxLocation    = NewViewTaxCodeOrTaxLocation
#endif
					invoked.RevenueCodeBlockOption		= NewRevenueCodeBlockOption
					invoked.RevenuePartialAccount		= NewRevenuePartialAccount
					invoked.RevenueFullAccount			= NewRevenueFullAccount
					invoked.AddressCode					= NewAddressCode
					invoked.FeesExempt					= NewFeesExempt
					invoked.WorkType					= NewWorkType
					invoked.ServiceType					= NewServiceType
					invoked.UsageType					= NewUsageType
					invoked.CertificationRequired		= NewCertificationRequired
					invoked.PreAwardID					= NewPreAwardID
					invoked.ProgramIncome				= NewProgramIncome
					invoked.ProgramIncomeType			= NewProgramIncomeType
					invoked.ExcludeFromFES				= NewExcludeFromFES
					invoked.ExpenseManagement           = NewExpenseManagement
					invoked.RemainderOption				= NewRemainderOption
					invoked.DefaultCodeBlock			= NewDefaultCodeBlock
					invoked.SingleProjectInvoice		= NewSingleProjectInvoice
					invoked.SingleProjectRevenue		= NewSingleProjectRevenue
					invoked.PreAwardAssignmentDays		= NewPreAwardAssignmentDays

		Move is an Instance Action
			valid when (IsSummaryOrPostingProject)
			
			Parameters
				PrmContextProject   is a ProjectContextValue
				NewParent 			is a Project
				NewProjectDateRange	is a ProjectDateRange
							
			Parameter Rules
				PrmContextProject
					initial value is Project
					
				NewParent
					default to DerivedTopNode
					required
					constraint (NewParent != Project)
						"CannotMoveToSelf"
					constraint (NewParent.ProjectType.Summary
					or			NewParent.ProjectType.Node)
						"ParentMustBeASummaryNode"
					constraint (NewParent.DimensionStructure = ContextStructure)
						"ParentDoesNotBelongToThisStructure"
					constraint (NewParent != DerivedParentProject)
						"ParentProjectIsAlready<NewParent.Description>"	
					TopNodeFound = false
					LocalProject = NewParent
					if (!NewParent.ProjectType.Node)					
						while (!TopNodeFound)
							constraint (Project != LocalProject.ProjectInContextStructureRel.ParentProject)
								"<NewParent>MayNotBeMovedToADescendantOfItsOwnBranch" 
							if (LocalProject.Contract
							and Currency entered)
								constraint (Currency = LocalProject.ProjectContract.Currency)
									"CannotMoveTo<NewParent.DisplayProject>;CurrencyDoesNotMatch"
							if (LocalProject.ProjectInContextStructureRel.ParentProject.ProjectType.Node
							or  LocalProject not entered)
								TopNodeFound = true
							else
								LocalProject = LocalProject.ProjectInContextStructureRel.ParentProject	

				NewProjectDateRange
					initial value is ProjectDateRange				
					if (ProjectType.Posting
					or  SummaryInEnterpriseStructure)				
						LocalParentProject = NewParent
						if (NewProjectDateRange not entered)
							NewProjectDateRange = LocalParentProject.ProjectDateRange
						if (InEnterpriseStructure)	
							if (ProjectType.Posting)	
								required				
							constraint (NewProjectDateRange within LocalParentProject.ProjectDateRange)
								"DateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>"
					
			Local Fields
				OldParent is like Project
																		
			Entrance Rules
				include CheckValidContext
				
				OldParent		= DerivedParentProject
				ParentDimension	= NewParent

			Action Rules
				if (PostingInEnterpriseStructure)
					LocalAncestorContract	= AncestorContract
					LocalNewProject			= NewParent
					if (NewParentInContractRel not exists
					and LocalAncestorContract != LocalNewProject)
						constraint (OpenInvoiceLineRel not exists)
							"CannotRemoveFromContract;_ProjectHasOpenBillingActivity"
						constraint (ProjectContractMilestone set not exists)
							"CannotRemoveFromContract;_ProjectHasBeenAssignedToAMilestone"
						constraint (ProjectFundingSource(PostingProject) set not exists)
							"CannotRemoveFromContract;_ProjectHasBeenAssignedToAFundingSource"
						constraint (ProjectFundingSource(ClearingProject) set not exists)
							"CannotRemoveFromContract;_ProjectHasBeenAssignedToAFundingSource"
						constraint (ProjectContractRetainer set not exists)
							"CannotRemoveFromContract;_ProjectHasBeenAssignedToARetainer"


				if (SummaryInEnterpriseStructure
				and !Contract)
					LocalNewProject = NewParent
					for each DescendantsRel
						LocalAncestorContract = each.AncestorContract
						if (NewParentInContractRel not exists
						and LocalAncestorContract != LocalNewProject)
							constraint (each.OpenInvoiceLineRel not exists)
								"CannotRemoveFromContract;_DescendantPostingProjectsHaveOpenBillingActivity"
							constraint (each.ProjectContractMilestone set not exists)
								"CannotRemoveFromContract;_DescendantPostingProjectHasBeenAssignedToAMilestone"
							constraint (each.ProjectFundingSource(PostingProject) set not exists)
								"CannotRemoveFromContract;_DescendantPostingProjectHasBeenAssignedToAFundingSource"
							constraint (each.ProjectFundingSource(ClearingProject) set not exists)
								"CannotRemoveFromContract;_DescendantPostingProjectHasBeenAssignedToAFundingSource"
							constraint (each.ProjectContractRetainer set not exists)
								"CannotRemoveFromContract;_DescendantPostingProjectHasBeenAssignedToARetainer"


						
				ParentDimension	 = NewParent
				if (InEnterpriseStructure)				
					ProjectDateRange = NewProjectDateRange
				if (Contract
				or  DescendantContractRel exists)
					LocalProject 	   = Project
					LocalParentProject = NewParent
					TopNodeFound = false
					while (!TopNodeFound)
						if (LocalParentProject.Contract
						or  LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound 		   = true
						else
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInContextStructureRel.ParentProject
					constraint (!LocalParentProject.Contract)
						"CannotMoveToThisBranch;ContractAlreadyDefinedForProject<LocalParentProject.DisplayProject>InHierarchy"

				invoke Update ProjectInContextStructureRel
					invoked.ParentProject = NewParent

			Exit Rules
 				LocalProject = Project
 							
				include CreateShadowForProject		
				if (ProjectType.Summary)
					TopNodeFound = false
					while (!TopNodeFound)
						if (LocalProject.ProjectInContextStructureRel.ParentProject.ProjectType.Summary)
							if (BudgetIdentifier entered)	
								constraint (BudgetIdentifier != LocalProject.ProjectInContextStructureRel.ParentProject.BudgetIdentifier)
									"BudgetIdentifier<BudgetIdentifier>AlreadyInUseBy<LocalProject.ProjectInContextStructureRel.ParentProject.DisplayProject>"  
							if (LocalProject.ProjectInContextStructureRel.ParentProject.BudgetIdentifier entered)
								I1 += 1
								BudgetIdentifierArray.BudgetIdentifier[I1] = LocalProject.ProjectInContextStructureRel.ParentProject.BudgetIdentifier				

						if (LocalProject.ProjectInContextStructureRel.ParentProject.ProjectType.Node
						or  LocalProject not entered)
							TopNodeFound = true
						else
							LocalProject = LocalProject.ProjectInContextStructureRel.ParentProject	
						
					invoke WalkDownHierarchy
						invoked.PrmBudgetIdentifierArray = BudgetIdentifierArray	
						invoked.PrmBudgetIdentifierCount = I1					
				
				invoke NotifyMoveProject NotifyBudgetTemplateRel
					invoked.PrmProject		= Project
					invoked.PrmNewParent	= NewParent
					invoked.PrmOldParent	= OldParent
				include TriggerBODForCreateOrUpdate
				if (ProjectType.Posting)
					include SetParentContract							

		WalkDownHierarchy is an Instance Action
			restricted
			
			Parameters
				PrmBudgetIdentifierArray	is a BudgetIdentifierArray
				PrmBudgetIdentifierCount	is Numeric 3
							
			Action Rules
				invoke SetLevel
				
				for each ProjectChildrenRel
 					LocalProject = each.Project
					include CreateShadowForProject							
					if (each.ProjectType.Summary)
						if (PrmBudgetIdentifierArray entered)
							if (each.BudgetIdentifier entered)
								I2 = 1
								while (I2 <= PrmBudgetIdentifierCount)
									constraint (PrmBudgetIdentifierArray.BudgetIdentifier[I2] != each.BudgetIdentifier)
										"BudgetIdentifier<each.BudgetIdentifier>AlreadyInUseBy<each.DisplayProject>" 
									I2 += 1 					
						invoke WalkDownHierarchy each.Project	
							invoked.PrmBudgetIdentifierArray = PrmBudgetIdentifierArray	
							invoked.PrmBudgetIdentifierCount = PrmBudgetIdentifierCount							
				
		EditDescendantsBudgetIdentifier is an Instance Action
			restricted
			
			Parameters
				PrmBudgetIdentifierArray	is a BudgetIdentifierArray
				PrmBudgetIdentifierCount	is Numeric 3
					
			Action Rules
				
				for each ProjectChildrenRel
					if (each.ProjectType.Summary)
						if (each.BudgetIdentifier entered)
							I2 = 1
							while (I2 <= PrmBudgetIdentifierCount)
								constraint (PrmBudgetIdentifierArray.BudgetIdentifier[I2] != each.BudgetIdentifier)
									"BudgetIdentifier<each.BudgetIdentifier>AlreadyInUseBy<each.DisplayProject>" 
								I2 += 1 					
						invoke EditDescendantsBudgetIdentifier each.Project
							invoked.PrmBudgetIdentifierArray = PrmBudgetIdentifierArray	
							invoked.PrmBudgetIdentifierCount = PrmBudgetIdentifierCount	

		RemoveBranch	is an Instance Action
			valid when (ProjectType.Summary)
			disable multiple instance selection
			confirmation required
				"ThisWillRemoveTheEntireBranchOfTheHierarchy"			
			
			Action Rules
				constraint (DerivedShadowCount < 1000)
					"BranchIsTooLargeToRemove"
							
				invoke RecursiveRemove
				
		RecursiveRemove is an Instance Action
			restricted
			
			Action Rules
				if (ProjectType.Summary)
					for each ProjectChildrenRel
						invoke RecursiveRemove each
					invoke RemoveSummaryFromStructure
				else
					invoke RemoveFromStructure	
													
		RemoveFromStructure is an Instance Action
			valid when (ProjectType.Posting)
			
			Local Fields
				OldParent is like Project
																		
			Entrance Rules
				include CheckValidContext
				
				if (PostingInEnterpriseStructure)
					constraint (ProjectContractInvoiceLine set not exists)
						"CannotRemoveFromStructure;ProjectHasBillingActivity"				
				OldParent = DerivedParentProject
				invoke NotifyRemoveProject NotifyBudgetTemplateRemoveRel
					invoked.PrmProject 		= Project
					invoked.PrmOldParent 	= OldParent
				LocalProject = Project
				invoke Delete ProjectShadowRel

			Action Rules
				invoke Delete ProjectInContextStructureRel
			Exit Rules
							
		RemoveSummaryFromStructure is an Instance Action
			valid when (EligibleToRemove)
			
			Local Fields
				OldParent is like Project
																		
			Entrance Rules
				include CheckValidContext
				
				constraint (!ProjectHierarchyRel exists)
					"CannotRemove,ChildrenExist"
				OldParent = DerivedParentProject
				invoke NotifyRemoveProject NotifyBudgetTemplateRemoveRel
					invoked.PrmProject 		= Project
					invoked.PrmOldParent 	= OldParent
				LocalProject = Project
				invoke Delete ProjectShadowRel		

			Action Rules
				invoke Delete ProjectInContextStructureRel
				if (ProjectType.Summary)
					invoke Delete
							
		AddProjectToStructures is an Instance Action
			valid when (ProjectType.Posting)
			
			Parameters
				LikeProject is a Project
				
			Parameter Rules
				LikeProject
					required
					constraint (LikeProject.ProjectType.Posting)
						"MustBePostingType"
						
			Action Rules
				for each LikeProject.ProjectHierarchy(Project) set
					LocalStructure = each.ProjectStructure
					if (!each.ProjectStructure.UnusedDimensionStructure)
						if (!SubordinateInLocalStructureRel exists)
							constraint (!DisplayProjectRel exists)
								"DisplayValueAlreadyExistsFor<first DisplayProjectRel.Project>"													
							invoke Create ProjectHierarchy
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.ProjectStructure		= each.ProjectStructure
								invoked.Project 				= Project
								invoked.ParentProject 			= each.ParentProject							
								invoked.DisplayProject			= Project
								invoked.ProjectType				= ProjectType
						invoke BuildShadowFileForProject each.ProjectStructure
							invoked.PrmFinanceEnterpriseGroup 	= FinanceEnterpriseGroup
							invoked.PrmProject			  		= Project		
			Exit Rules
				include SetParentContract

        FixupSequenceNumbers is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup              is a FinanceEnterpriseGroup
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
            Action Rules
                Instance Rules
                    if (SequenceNumber = 0 )
                        increment FinanceEnterpriseGroup.ProjectLastSeq                    
                        SequenceNumber = FinanceEnterpriseGroup.ProjectLastSeq

        ResetSequenceNumbers is a Set Action
			restricted
            Parameters
                PrmFinanceEnterpriseGroup              is a FinanceEnterpriseGroup
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup)
            Action Rules
                Instance Rules
                    if (SequenceNumber = 0 
		            or  DuplicateSequenceNumberRel exists)
                        increment FinanceEnterpriseGroup.ProjectLastSeq                    
                        SequenceNumber = FinanceEnterpriseGroup.ProjectLastSeq

		SetLevel is an Instance Action
			restricted
			
			Action Rules	
				if (!ProjectType.Posting)
					LevelCalcProject = Project
					LocalLevel		 = 0
					while (!LevelCalcProject = DerivedTopNode) 
						LevelCalcProject	 = LevelCalcProject.ProjectInContextStructureRel.ParentProject
						LocalLevel			+= 1
						if (LevelCalcProject.ProjectInContextStructureRel not exists)
							end while
					Level 					 = LocalLevel
					ParentProject    		 = DerivedParentProject	
					
		UpdateLevel is an Instance Action
			restricted
			
			Parameters
				PrmLevel				  is Numeric 3
				PrmParentProject		  is like Project
				
			Action Rules
				if (!ProjectType.Posting)	
					Level			= PrmLevel
					ParentProject	= PrmParentProject
			
		SetIncludeBudgetEditOnPostingDimensions is an Instance Action
			valid when (IsSummaryProject)
			run in background
			Parameters
				IncludeOrExclude	is Numeric 1
					States
						Include		value is 1
						Exclude		value is 2
			
			Parameter Rules
				IncludeOrExclude
					required
			Local Fields
				RecordCount			is Numeric size 2
					
			Action Rules
				for each ProjectShadow(SummaryProject) set
					if (each.ProjectType.Posting)
						invoke Update each.Project
							if (IncludeOrExclude.Include)
								invoked.IncludeInBudgetEdit = true
							else
								invoked.IncludeInBudgetEdit = false
						if (RecordCount = 20)
							commit transaction
							initialize RecordCount						
						RecordCount += 1							 
							 
		UpdateProjectStatus is an Instance Action
			valid when (SummaryInEnterpriseStructure)
			
			Parameters
		        PrmProjectStatus	is a ProjectStatus			
		        PrmActive			is an Active		
			
			Parameter Rules
				PrmActive
					initial value is Active
					
			Action Rules
				if (PrmProjectStatus.AllowPurge)
					if (Contract)
						constraint (!Project.ProjectContract.HasUnprocesedInvoices)
							"ProjectStatusCannotHavePurgeSelected;_UnprocessedInvoicesExistForContract<DisplayProject>"
				for each ShadowDescendantsRel 
					if (each.Project.Contract
					and PrmProjectStatus.AllowPurge)
						constraint (!each.Project.ProjectContract.HasUnprocesedInvoices)
							"ProjectStatusCannotHavePurgeSelected;_UnprocessedInvoicesExistForContract<each.Project.DisplayProject>"
					if (each.Project.ProjectType.Posting)
						if (PrmProjectStatus.AllowPurge)        	
							constraint (!each.Project.HasApprovedLabor)
								"ProjectStatusCannotHavePurgeSelected;_ApprovedOrPendingApprovalLaborDistributionExistsFor<FinanceEnterpriseGroup.ProjectLabel>_<each.Project>"
#ifdef module am						
							if (each.Project.Capital)
								constraint (!each.Project.AssetInterfaceOptionsRel exists)
									"ProjectStatusCannotHavePurgeSelected;_AssetInterfaceOptionsExistFor<FinanceEnterpriseGroup.ProjectLabel>_<each.Project>"
#endif
						invoke ChangeStatus each.Project
							if (PrmProjectStatus entered)
			    			    invoked.NewProjectStatus = PrmProjectStatus
							if (!each.Project.SystemProject)
						        invoked.NewActive		  = PrmActive
					if (each.Project.ProjectType.Summary)
						invoke ChangeStatus each.Project
							invoked.NewActive = PrmActive
				Active = PrmActive

		ChangeStatus is an Instance Action
			restricted
			Parameters
				NewProjectStatus	is like ProjectStatus
				NewActive			is Boolean
			Action Rules
				if (NewProjectStatus entered)
					ProjectStatus	= NewProjectStatus
				Active				= NewActive
			
		AssignIndirectBurdenCode is an Instance Action
			valid when (SummaryInEnterpriseStructure)
			Parameters
		        IndirectBurdenCode		is a ProjectIndirectBurdenCode
				SelectionGroup			is a GLTransactionDetail group
				SelectionGroupOption	is Numeric size 1
					States
						Include			value is 1
						Exclude			value is 2
				SelectedSourcesOnly		is Boolean
			Parameter Rules
		        IndirectBurdenCode
		        	required
		        		"IndirectBurdenCodeIsRequired"
				SelectionGroupOption
					if (SelectionGroup entered)
						required
							"SelectionGroupOptionRequiredForSelectionGroup"
					else
						cannot be entered
							"SelectionGroupOptionCannotBeEnteredWithoutSelectionGroup"
				SelectedSourcesOnly
					constraint (FrontEndSplitsEnabled)
						"SelectedFundingSourcesValidForFrontEndSplitContractsOnly"

			Action Rules
				LocalIndirectBurdenCode	= IndirectBurdenCode
				for each ProjectShadow(SummaryProject) set
					if (each.ProjectType.Posting)
						LocalProject = each.Project
						if (ProjectIndirectBurdenRel not exists)
							invoke Create ProjectIndirectBurden
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.Project						= LocalProject
								invoked.ProjectIndirectBurdenCode	= IndirectBurdenCode
								invoked.Active						= true
								invoked.SelectionGroup				= SelectionGroup
								invoked.SelectionGroupOption		= SelectionGroupOption
								invoked.SelectedSourcesOnly			= SelectedSourcesOnly
						else
							invoke Update ProjectIndirectBurdenRel	
								invoked.SelectionGroup				= SelectionGroup
								invoked.SelectionGroupOption		= SelectionGroupOption
								invoked.SelectedSourcesOnly			= SelectedSourcesOnly

		ExpandDescendantsDateRange is an Instance Action
			valid when (SummaryInEnterpriseStructure)
			completion message is "<CompletionMessage>"
			Parameters
				NewDateRange 		is a ProjectDateRange
				MatchingRecordsOnly	is Boolean
			Parameter Rules
				NewDateRange
					initial value is ProjectDateRange
					required
					default to ProjectInContextStructureRel.ParentProject.ProjectDateRange
					constraint (ProjectDateRange within NewDateRange)
						"DateRangeCanOnlyBeExpanded"
					LocalParentProject = ProjectInContextStructureRel.ParentProject					
					constraint (NewDateRange within LocalParentProject.ProjectDateRange)
						"NewDateRangeMustBeBetween<LocalParentProject.ProjectDateRange.BeginDate>And<LocalParentProject.ProjectDateRange.EndDate>"
					LocalDateRange.BeginDate = NewDateRange.BeginDate
					LocalDateRange.EndDate = NewDateRange.EndDate	
					constraint (ValidDateRange)
						"DateRangeMustBeWithinProjectStructure<ContextStructure>CalendarDateRange"
				MatchingRecordsOnly
					initial value is true
			Action Rules
				if (!MatchingRecordsOnly)
					confirmation required
						"AllDescendantSummaryAndPosting<FinanceEnterpriseGroup.ProjectLabel>RecordsWillBeChanged"
				else
					confirmation required
						"OnlyDescendantSummaryAndPosting<FinanceEnterpriseGroup.ProjectLabel>RecordsWithMatchingDateRangeWillBeChanged"
				CompletionMessage = ChangeDateRangeSubmittedMF
				invoke DoDescendantsDateRange in background
					invoked.NewDateRange = NewDateRange
					invoked.MatchingRecordsOnly = MatchingRecordsOnly
					
		DoDescendantsDateRange is an Instance Action
			restricted
			Parameters
				NewDateRange 		is a ProjectDateRange
				MatchingRecordsOnly	is Boolean
			Action Rules
				LocalDateRange = ProjectDateRange
				for each ProjectShadow(SummaryProject) set
					if ((MatchingRecordsOnly
					and each.Project.ProjectDateRange = LocalDateRange)
					or !MatchingRecordsOnly)
						if (each.Project.ProjectType.Summary)
							invoke UpdateNoRules each.Project
			    			    invoked.ProjectDateRange = NewDateRange
						else
							invoke DoChangeDateRange each.Project
								invoked.NewDateRange = NewDateRange
				ProjectDateRange = NewDateRange
				
		RenameSummaryNodes is a Set Action
			restricted
			
			Parameters	
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
				PrmDimensionStructure	  is a ProjectStructure
				
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Summary)
			
			Local Fields
				NewProjectValue			is like Project
				NewParentValue			is like Project
				NewDisplayProject		is like Project
				
			Action Rules
				
				Instance Rules
					if (!Project like LikeSummaryPrefix)
						if (ContextStructure entered)
							LocalStructureSequence = ContextStructure.StructureSequence
						else
							LocalStructureSequence = FinanceEnterpriseGroup.EnterpriseProjectStructure.StructureSequence					
						NewProject 	   	  = Project	
						NewDisplayProject = Project				
						NewProjectValue   = SummaryNodeString
						if (ParentProject entered)
							NewProject   	= ParentProject
							NewParentValue 	= ParentNodeString
						else
							initialize NewParentValue
						invoke Delete
						invoke CreateNoRules
							fill in fields from this instance
							invoked.Project				= NewProjectValue
							invoked.ParentProject 		= NewParentValue
							invoked.DisplayProject		= NewDisplayProject
							invoked.DimensionStructure	= PrmDimensionStructure

		ExportToUpload is an Instance Action
			restricted

			Parameters
				PrmFinanceEnterpriseGroup   is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmProjectStructure			is a ProjectStructure
					default label is "<FinanceEnterpriseGroup.ProjectLabel>Structure"
				PrmRunGroup				   	is AlphaUpper 30
					default label is "RunGroup"
				PrmSingleRecordOnly		   	is Boolean
				PrmBypassEdits	  is Boolean
					default label is "BypassEdits"					
			Local Fields
				RecordCount			is Numeric 4
												
			Action Rules
				if (!ProjectType.Node)
					invoke Create ProjectUpload
						fill in fields from this instance
						fill in fields from ProjectInContextStructureRel
						invoked.ProjectStructure 	   = ContextStructure
						invoked.ProjectUpload.RunGroup = PrmRunGroup
						invoked.RecordType		 	   = ProjectType
						invoked.BypassEdits			   = PrmBypassEdits						
						if (ParentDimension = DerivedTopNode)
							invoked.ParentProject = blank
							invoked.SequenceProject		= Project
						else
							invoked.ParentProject 		= DerivedParentDisplayProject
							invoked.ParentSequenceProject = DerivedParentProject
							invoked.SequenceProject		= Project
						if (ProjectType.Summary)
							invoked.Project       = DisplayProject
						if (Contract)
							invoked.ContractAmount					= Project.ProjectContract.ContractAmount
							invoked.ContractCurrency				= Project.ProjectContract.Currency
							invoked.ContractBillingMethod			= Project.ProjectContract.BillingMethod
							invoked.ContractMarkupPercent			= Project.ProjectContract.MarkupPercent
							invoked.ContractBillingRateTable		= Project.ProjectContract.BillingRateTable
							invoked.ContractAllocateExpenditures	= Project.ProjectContract.AllocateExpenditures
							invoked.ContractRevenueRecognition		= Project.ProjectContract.RevenueRecognition
							invoked.ContractRevenueMethod			= Project.ProjectContract.RevenueMethod
							invoked.ContractExcludeAP				= Project.ProjectContract.ExcludeAP
							invoked.ContractMaximumFees				= Project.ProjectContract.MaximumFees
							invoked.ContractID						= Project.ProjectContract.ContractID
							invoked.ContractType					= Project.ProjectContract.ContractType
							invoked.FrontEndSplits			        = Project.ProjectContract.FrontEndSplits
							invoked.ProgramIncome					= Project.ProjectContract.ProgramIncome
							invoked.ProgramIncomeType				= Project.ProjectContract.ProgramIncomeType
							invoked.RemainderOption					= Project.ProjectContract.RemainderOption
							invoked.SingleProjectInvoice			= Project.ProjectContract.SingleProjectInvoice
							invoked.SingleProjectRevenue			= Project.ProjectContract.SingleProjectRevenue

				if ((!PrmSingleRecordOnly)
				and (!ProjectType.Posting))
					for each ProjectChildrenRel
						invoke ExportToUpload each in foreground
							invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
							invoked.PrmProjectStructure	 			= PrmProjectStructure
							invoked.PrmRunGroup						= PrmRunGroup
							invoked.PrmBypassEdits				    = PrmBypassEdits							
						RecordCount += 1
						if (RecordCount = 100)
							commit transaction
							RecordCount = 0				
					commit transaction


        UpdateNoRules is an Update Action
        	restricted
        	bypass field rules
        	Exit Rules
        		if (ProjectType.Posting)
					include SetParentContract        	

		CreateContract is an Instance Action
			restricted
			Parameters
				ContractAmount					is an InternationalAmount
				ContractCurrency				is a Currency
				ContractBillingMethod			is Numeric size 1
					States
						CostReimbursement		value is 1
						CostPlus				value is 2
						TimeAndMaterials		value is 3
						Milestone				value is 4
						Installment				value is 5
						RateTable				value is 6
				ContractMarkupPercent			is Percent size 5.2
				ContractBillingRateTable		is a ProjectBillingRateTable
				ContractAllocateExpenditures	is Boolean
				ContractRevenueRecognition		is Numeric size 1
					States
						Combined				value is 1
						Separate				value is 2
				ContractRevenueMethod			is Numeric size 1
					States
						FullAccrual				value is 1
						Milestone				value is 2
						PercentageOfCompletion	value is 3
						Installment				value is 4
				ContractMaximumFees				is an InternationalAmount
				ContractExcludeAP				is Boolean
				ContractContractID				is Alpha size up to 30
				ContractContractType			is a ProjectContractType
				FrontEndSplits                  is Boolean
				RemainderOption					is Numeric size 1
					States
						DeferOnly				value is 1
						DeferAndHold			value is 2
				SingleProjectInvoice			is Boolean
					default label is "SingleProjectInvoices"
				SingleProjectRevenue			is Boolean
					default label is "SingleProjectRevenueRecognition"

			Action Rules
				constraint (SummaryInEnterpriseStructure)
					"ContractValidForSummaryWithinEnterpriseStructureOnly<FinanceEnterpriseGroup.ProjectLabel>"
				initialize LocalProject
				for each DescendantsRel
					if (each.Contract)
						LocalProject = each.Project
						end for each
				constraint (LocalProject not entered)
					"ContractAlreadyDefinedInHierarchyFor<FinanceEnterpriseGroup.ProjectLabel>_<LocalProject.DisplayProject>"
				if (LocalProject not entered)
					LocalProject 	   = Project
					if (CreateWithinParentProject entered)
						LocalParentProject = CreateWithinParentProject
						LocalContextStructure = ContextStructure						
					else
						LocalContextStructure = DimensionStructure
						LocalParentProject = ProjectInLocalContextStructureRel.ParentProject
					TopNodeFound = false
					while (!TopNodeFound)
						if (LocalParentProject.Contract
						or  LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound 		   = true
						else
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInLocalContextStructureRel.ParentProject
					constraint (!LocalParentProject.Contract)
						"ContractAlreadyDefinedInHierarchyFor<FinanceEnterpriseGroup.ProjectLabel>_<LocalParentProject.DisplayProject>"
				Contract = true			
            	invoke Create Project.ProjectContract
					invoked.ContractAmount		 = ContractAmount
					invoked.Currency			 = ContractCurrency
					invoked.BillingMethod		 = ContractBillingMethod
					invoked.MarkupPercent		 = ContractMarkupPercent
					invoked.BillingRateTable	 = ContractBillingRateTable
					invoked.RevenueRecognition	 = ContractRevenueRecognition
					invoked.RevenueMethod	     = ContractRevenueMethod
					invoked.AllocateExpenditures = ContractAllocateExpenditures
					invoked.Active				 = Active
					invoked.MaximumFees			 = ContractMaximumFees
					invoked.ExcludeAP			 = ContractExcludeAP
					invoked.ContractID			 = ContractContractID
					invoked.ContractType		 = ContractContractType
					invoked.FrontEndSplits		 = FrontEndSplits
					invoked.RemainderOption 	 = RemainderOption
					invoked.SingleProjectInvoice = SingleProjectInvoice
					invoked.SingleProjectRevenue = SingleProjectRevenue

				include TriggerBODForCreateOrUpdate
				
    	LoadProjectPeriodOfPerformanceFromTemplate is an Instance Action
    		valid when (InEnterpriseStructure)
    		Parameters
				PeriodOfPerformance
			Parameter Rules
				PeriodOfPerformance		
					required
				
			Action Rules
				include CheckValidContext
				
				if (Project.ProjectType.Posting)
					LocalPOPProject = Project
					include PeriodOfPerformanceBlock
				else
					for each ShadowPostingDescendantsRel
						LocalPOPProject = each.Project
						include PeriodOfPerformanceBlock

		UpdateBODIdFields is an Instance Action
			restricted
			Parameters
				PrmAccountingEntity  is Alpha size 22
					default label is "AccountingEntity"
				PrmLocation          is Alpha size 22
					default label is "Location" 
				PrmDocumentID        is Alpha size 100
					default label is "DocumentID"
				PrmRevision          is Alpha size 22
					default label is "Revision"	
				PrmSystemOfRecord    is Alpha size 1
					default label is "SystemOfRecord"
			Action Rules
				if (bod id.AccountingEntity != PrmAccountingEntity)
					bod id.AccountingEntity 	= PrmAccountingEntity
				if (bod id.Location != PrmLocation)
					bod id.Location				= PrmLocation
				if (bod id.DocumentID != PrmDocumentID)
					bod id.DocumentID			= PrmDocumentID
				if (bod id.Revision != PrmRevision)
					bod id.Revision				= PrmRevision
				if (bod id.SystemOfRecord != PrmSystemOfRecord)
					bod id.SystemOfRecord		= PrmSystemOfRecord

		CleanupUnusedProjects is a Set Action
			restricted
			
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    NotUsedInAStructure)

			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmProjectStructure		  is a ProjectStructure
					default label is "Structure"					
									
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmProjectStructure
					required
					constraint (PrmProjectStructure.UnusedDimensionStructure)
						"ActionNotValidForStructure<PrmProjectStructure>"
						
			Action Rules
				Instance Rules
					LocalInvokedByUnusedStructure = true
					invoke AddPostingProjectToStructure
						invoked.PrmStructure	 = PrmProjectStructure
						invoked.PrmParentProject = PrmProjectStructure.ProjectNode			

		SetLocalContextStructure is an Instance Action
			restricted
			Parameters
				PrmContextStructure is like ProjectStructure
			Action Rules
				LocalContextStructure = PrmContextStructure
				
		CreateComments is an Instance Action
			Parameters
				PrmSubject	 			is a CommentName
		    	PrmComment				is Text
				PrmFrom					is Alpha size 230
				PrmCommentDate			is TimeStamp
				PrmAttachment			is an Attachment
				PrmDocumentURL			is URL		    	
			Parameter Rules
				PrmSubject
					required
		    	PrmComment
		    		required
				PrmFrom	
					initial value is actor
					required
				PrmCommentDate
		    		default to current timestamp
			Action Rules
				invoke Create ProjectComment
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.Project				   = Project
					invoked.Subject				   = PrmSubject
			    	invoked.Comment                = PrmComment
					invoked.From                   = PrmFrom	
					invoked.CommentDate            = PrmCommentDate
			    	invoked.Attachment             = PrmAttachment
					invoked.DocumentURL			   = PrmDocumentURL			    	

		CreateProjectPersonnel is an Instance Action
			valid when (PostingInEnterpriseStructure)	
			Parameters
				PrmEmployee	 			is an Employee
		    	PrmProjectRole			is a ProjectRole
				PrmActive				is Boolean
			Parameter Rules
				PrmEmployee
					required
		    	PrmProjectRole
		    		required
			Action Rules
				invoke Create ProjectPersonnel
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.Project				   = Project
					invoked.Employee			   = PrmEmployee
			    	invoked.ProjectRole            = PrmProjectRole
					invoked.Active                 = PrmActive	

		CopyProjectPersonnel is an Instance Action
			valid when (HasProjectPersonnel)		
			Parameters
				ToProject				is a Project
			Parameter Rules
				ToProject
					required
					constraint (ToProject.ProjectType.Posting)
						"<FinanceEnterpriseGroup.ProjectLabel>MustBePosting"
			Action Rules
				for each ProjectPersonnelRel
					LocalProject       = ToProject
					LocalEmployee	   = each.Employee
					LocalProjectRole   = each.ProjectRole
					if (!CopyToProjectPersonnelRel exists)
						invoke Create ProjectPersonnel
							fill in fields from each
							invoked.Project	= ToProject

		CreateProjectContractPercentComplete is an Instance Action
			valid when (Contract)
			Parameters
				PrmDescription			is a Description
				PrmDate					is Date
			Parameter Rules
				PrmDescription
					required		
				PrmDate
					required
			Action Rules


				LocalPercentCompleteDate = PrmDate
				if (ProjectContractPercentCompleteRel exists)
					invoke Delete ProjectContractPercentCompleteRel
				invoke Create ProjectContractPercentComplete
					invoked.FinanceEnterpriseGroup         = FinanceEnterpriseGroup
					invoked.Project				           = Project
			    	invoked.ProjectContractPercentComplete = PrmDate					
					invoked.Description			           = PrmDescription
					invoked.ContractAmount				   = Project.ProjectContract.ContractAmount
					if (ContextProjectReportingSettingsAll entered)	
						invoked.ProjectReportingSettingsAll	   = ProjectReportingSettingsAllRel.ProjectReportingSettingsAll	
				   		invoked.BudgetAmount 				   = ProjectBudgetAmountAll			
				   		invoked.ActualAmount 				   = ProjectActualAmountAll
						invoked.CostsToComplete 			   = CostToCompleteAll
						invoked.PercentComplete 			   = PercentCompleteAll	
						invoked.EarnedRevenue 				   = EstimatedRevenueAll
						invoked.RevenueToBeRecognized		   = RevenueRecognizedAll
						invoked.GrossMarginPercent 			   = GrossMarginPercentAll
					if (ContextProjectReportingSettings entered)					
						invoked.ProjectReportingSettings	   = ProjectReportingSettingsRel.ProjectReportingSettings	
				   		invoked.BudgetAmount 				   = ProjectBudgetAmount			
				   		invoked.ActualAmount 				   = ProjectActualAmount
						invoked.CostsToComplete 			   = CostToComplete
						invoked.PercentComplete 			   = PercentComplete	
						invoked.EarnedRevenue 				   = EstimatedRevenue
						invoked.RevenueToBeRecognized		   = RevenueRecognized
						invoked.GrossMarginPercent 			   = GrossMarginPercent
					
		RequestNewPostingProject is an Instance RequestAction
			action comment required
			request action process is RequestNewPostingProject
			request action linkback webapp is ProjectAdministrator
			allow user fields as parameters
			valid when (SummaryInEnterpriseStructure)

			Parameters
				RequesterActor				is an Actor
			 	RequestedBy					is Alpha 100
	 			RequesterPhone				is a Telephone 
	 				holds pii
			 	RequesterEmail				is an EmailAddress 
			 		holds pii
				RequestPriority				is Numeric 1
					States
						High				value is 1
						Medium				value is 2
						Low					value is 3
				NeededBy					is Date
				Notes						is Text
				ParentProjectDescription	is a Description
				ParentProjectDateRange      is a ProjectDateRange
		        NewProject				is like Project
		        Description	     		
		        ProjectStatus
		        ProjectDateRange
				FinanceDimension2
		        Currency

		        Active
				Billable				is Boolean
				IncludeInBudgetEdit		is Boolean
				Watch					is Boolean		
				WatchedBy		        is an Employee
				Capital					is Boolean				
		        SalaryCap				is a ProjectSalaryCap
		        SalaryCapDate			is Numeric size 1
		        	States
		        		ProjectStartDate		value is 1
		        		LaborPeriodEndingDate	value is 2
		        OverageCodeBlock		is a FinanceCodeBlockOverage
		        BillingMethod			is a ProjectBillingMethod
		        MarkupPercent			is Percent size 5.2
		        BillingRateTable		is a ProjectBillingRateTable
				BillingMaximum			is a CurrencyAmount
					precision is Currency.NumberOfDecimals		
		        FinanceCodeBlock		is a FinanceCodeBlockNoProject 
		        BurdenCode				is a ProjectBurdenCode
		        	default label is "FringeBurdenCode"
				FringeBurden			is Numeric size 1
					States
						No					value is 0
						DefaultFromEmployee	value is 1
						DefaultFromProject	value is 2		        
#ifdef module tx
		        TaxExempt				is Boolean


				ViewTaxCodeOrTaxLocation is Numeric 1
					default label is "TaxCode_orTaxLocation"
					States
						TaxCode value is 0
						TaxLocation value is 1
		        BuyerTaxCode			is a TaxCode
		        BuyerTaxLocation		is a ProjectServiceLocation
#endif		        
				BurdenCodeBlock			is a FinanceCodeBlockNoProject 
				RevenueCodeBlockOption
				RevenueFullAccount		is a FinanceCodeBlockFullNoProjectFD2
					default label is "FullRevenueFinanceStructure"
				RevenuePartialAccount	is a FinanceCodeBlockNoProjectFD2
					default label is "PartialRevenueFinanceStructure"
				AddressCode
				FeesExempt				is Boolean
				WorkType				is a ProjectWorkType
				ServiceType				is a ProjectServiceType
				UsageType				is a ProjectUsageType
				CertificationRequired	is Boolean
				NewSubject	 			is a CommentName
		    	NewComment				is Text
				NewFrom					is Alpha size 230
				NewCommentDate			is TimeStamp
				NewAttachment			is an Attachment
    			NewDocumentURL			is URL	
    			PreAwardID	    	    is Alpha 25
				ProgramIncome			is Boolean
				ProgramIncomeType		is Numeric size 1
					States
						Additive	    value is 1
						Deductive		value is 2
						CostShare		value is 3

				ExcludeFromFES			is Boolean
				ExpenseManagement       is Boolean
				DefaultCodeBlock		is a FinanceCodeBlockNoProject
				PreAwardAssignmentDays	is Numeric size 3
			Parameter Rules
				RequestPriority
					required
				
				NeededBy
					required
					
				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ParentProjectDescription
					initial value is Project.Description
					default to Project.Description
					
				ParentProjectDateRange					
					initial value is Project.ProjectDateRange
					default to Project.ProjectDateRange
					
				NewProject
					if (actor.final approver)
						required
				



				Description
					if (actor.final approver)
						required


				ProjectStatus
					if (actor.final approver)
						required
					
				ProjectDateRange
					initial value is Project.ProjectDateRange
					default to Project.ProjectDateRange			
					constraint (ProjectDateRange within Project.ProjectDateRange)
						"DateRangeMustBeBetween<Project.ProjectDateRange.BeginDate>And<Project.ProjectDateRange.EndDate>"



				Currency
					initial value is FinanceEnterpriseGroup.EnterpriseProjectStructure.Currency
					default to FinanceEnterpriseGroup.EnterpriseProjectStructure.Currency								
					if (actor.final approver)
						required







				RevenuePartialAccount
					if (RevenueCodeBlockOption.PartialStructure)
						required
							"PartialRevenueFinanceStructureRequired"
						constraint (RevenuePartialAccount.GeneralLedgerChartAccount entered)
							"Revenue<FinanceEnterpriseGroup.AccountLabel>Required"

				RevenueFullAccount
					if (RevenueCodeBlockOption.FullStructure)
						required
							"FullRevenueFinanceStructureRequired"
					
				Active
					initial value is true
				FinanceDimension2		
					constraint (FinanceEnterpriseGroup.ProjectInvoicing)
						"RelatedFundingSourceIsOnlyValidForProjectInvoicing"	
					constraint (FinanceDimension2.PostingDimension)
						"RelatedFundingSourceMustBePostingDimension"			
			
				NewSubject
					if (NewComment entered)
						required
						
		    	NewComment
		    		if (NewSubject entered)
		    			required
				    if (NewDocumentURL entered)
				    	required
				    		
				NewFrom	
					initial value is actor
					default to actor	

				NewCommentDate
					if (NewComment entered)
		    			default to current timestamp

				WatchedBy
					constraint (Watch)	
						"WatchIsRequiredWhenWatchedByIsEntered"
			Action Rules
				invoke CreateChildWithin
					fill in user fields from parameters
					invoked.NewProjectType			= 1
					invoked.NewProject				= NewProject
					invoked.NewDescription			= Description
					invoked.NewActive				= Active
					invoked.NewProjectStatus		= ProjectStatus
					invoked.NewBillable				= Billable
					invoked.NewIncludeInBudgetEdit  = IncludeInBudgetEdit
					invoked.NewWatch				= Watch
					invoked.NewWatchedBy            = WatchedBy
					invoked.NewCapital				= Capital
					invoked.NewCurrency				= Currency
					invoked.NewProjectDateRange		= ProjectDateRange
					invoked.NewSalaryCap			= SalaryCap
					invoked.NewSalaryCapDate		= SalaryCapDate
					invoked.NewOverageCodeBlock		= OverageCodeBlock
					invoked.NewBillingMethod		= BillingMethod
					invoked.NewMarkupPercent		= MarkupPercent
					invoked.NewBillingMaximum		= BillingMaximum
					invoked.NewBillingRateTable		= BillingRateTable
					invoked.NewFinanceCodeBlock		= FinanceCodeBlock
					invoked.NewBurdenCode			= BurdenCode
					invoked.NewFringeBurden			= FringeBurden
					invoked.NewBurdenCodeBlock		= BurdenCodeBlock
#ifdef module tx
					invoked.NewTaxExempt			= TaxExempt


					invoked.NewViewTaxCodeOrTaxLocation = ViewTaxCodeOrTaxLocation
					invoked.NewBuyerTaxCode			= BuyerTaxCode
					invoked.NewBuyerTaxLocation		= BuyerTaxLocation
#endif					
					invoked.NewRevenueCodeBlockOption	= RevenueCodeBlockOption
					invoked.NewRevenuePartialAccount	= RevenuePartialAccount
					invoked.NewRevenueFullAccount	= RevenueFullAccount
					invoked.NewAddressCode			= AddressCode
					invoked.NewFeesExempt			= FeesExempt
					invoked.NewWorkType				= WorkType
					invoked.NewServiceType			= ServiceType
					invoked.NewUsageType			= UsageType
					invoked.NewCertificationRequired = CertificationRequired
					invoked.NewPreAwardID			= PreAwardID
					invoked.NewProgramIncome		= ProgramIncome
					invoked.NewProgramIncomeType	= ProgramIncomeType
					invoked.NewExcludeFromFES		= ExcludeFromFES
					invoked.NewExpenseManagement    = ExpenseManagement
					invoked.NewDefaultCodeBlock		= DefaultCodeBlock
					invoked.NewPreAwardAssignmentDays = PreAwardAssignmentDays
			Exit Rules	
				if (NewSubject entered)	
					invoke Create ProjectComment
						invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.Project				   = NewProject
						invoked.Subject				   = NewSubject
				    	invoked.Comment                = NewComment
						invoked.From                   = NewFrom	
						invoked.CommentDate            = NewCommentDate
				    	invoked.Attachment             = NewAttachment
    					invoked.DocumentURL			   = NewDocumentURL
						
		RequestProjectStatusChange is an Update RequestAction
			action comment required
			request action process is RequestProjectStatusChange
			request action linkback webapp is ProjectAdministrator
			allow user fields as parameters
			valid when (ProjectType.Posting)
			Parameters
				RequesterActor
			 	RequestedBy
	 			RequesterPhone
			 	RequesterEmail
				RequestPriority
				NeededBy
				Notes
					
				ProjectStatus

			Parameter Rules
				RequestPriority
					required
				
				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress
					
				ProjectStatus
					required
					if (ProjectStatus.AllowPurge)        	
						if (ParentDisplayContract entered)	
							constraint (!ParentDisplayContractRel.ProjectContract.HasUnprocesedInvoices)
								"ProjectStatusCannotHavePurgeSelected;UnprocessedInvoicesExists"
						constraint (!HasApprovedLabor)
							"ProjectStatusCannotHavePurgeSelected;ApprovedOrPendingApprovalLaborDistributionExists"	
#ifdef module am						
						if (Capital)
							constraint (!AssetInterfaceOptionsRel exists)
								"ProjectStatusCannotHavePurgeSelected;AssetInterfaceOptionsExist"
#endif
			Action Rules
				fill in user fields from parameters

		RequestEmployeeForProject is an Instance RequestAction
			action comment required
			request action process is RequestEmployeeForProject
			request action linkback webapp is ProjectAdministrator
			allow user fields as parameters
			valid when (ProjectType.Posting)
			Parameters
				RequesterActor		is an Actor
			 	RequestedBy			is Alpha 100
	 			RequesterPhone		is a Telephone 
	 				holds pii
			 	RequesterEmail		is an EmailAddress 
			 		holds pii
				RequestPriority		is Numeric 1
					States
						High	value is 1
						Medium	value is 2
						Low		value is 3
				NeededBy			is Date
				Notes				is Text

				ProjectEmployee
				ProjectRole
				AssignmentDateRange	is a ProjectDateRange
				BillableRate		is a CurrencyAmount
					precision is Project.Currency.NumberOfDecimals		
				CommittedEffort		is Percent size 6.3
				FinanceCodeBlock	is a FinanceCodeBlockNoProject 
					default label is "LaborDistributionFinanceStructure"
				BurdenCode			is a ProjectBurdenCode
				BurdenCodeBlock		is a FinanceCodeBlockNoProject 
					default label is "FringeBurdenFinanceStructure"
				FringeEncumbranceCodeBlock	is a FinanceCodeBlockFullBurden
					default label is "FringeEncumbranceFinanceStructure"
				NewSubject	 		is a CommentName
		    	NewComment			is Text
				NewFrom				is Alpha size 230
				NewCommentDate		is TimeStamp
				NewAttachment		is an Attachment	
    			NewDocumentURL		is URL	
    			ProjectDescription 	is Alpha size 200	
	   	
			Parameter Rules
				RequestPriority
					required

				NeededBy
					required

				RequesterActor
					initial value is actor
					default to actor

				RequestedBy
					initial value is RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName
					default to RequesterActor.PersonName.GivenName + " " + RequesterActor.PersonName.FamilyName

				RequesterPhone
					initial value is RequesterActor.ContactInfo.TelephoneNumber
					default to RequesterActor.ContactInfo.TelephoneNumber

				RequesterEmail
					initial value is RequesterActor.ContactInfo.EmailAddress
					default to RequesterActor.ContactInfo.EmailAddress

				ProjectEmployee
					required
					constraint (ProjectEmployee.Active)
						"EmployeeMustBeActive"

				AssignmentDateRange	
					initial value is ProjectDateRange
					required
					constraint (AssignmentDateRange within ProjectDateRange)
						"AssignmentDateRangeMustBeWithinProjectDateRangeOf<ProjectDateRange.BeginDate>Through<ProjectDateRange.EndDate>"
					default to ProjectDateRange

				CommittedEffort
					constraint (CommittedEffort <= 1)
						"CommittedEffortCannotExceed100%"
					
				FinanceCodeBlock
					default to Project.FinanceCodeBlock
						default individual fields
					default to ProjectEmployee.FinanceCodeBlock
						default individual fields
					
				BurdenCode
					if (BurdenCode not entered)
						if (Project.FringeBurden.DefaultFromEmployee)
							BurdenCode = ProjectEmployee.BurdenCode
						else
						if (Project.FringeBurden.DefaultFromProject)
							BurdenCode = Project.BurdenCode
					constraint (!Project.FringeBurden.No)
						"<FinanceEnterpriseGroup.ProjectLabel>DoesNotAllowBurden"
		
				BurdenCodeBlock
					if (Project.FringeBurden.DefaultFromEmployee)
						default to ProjectEmployee.BurdenCodeBlock
							default individual fields
					else
					if (Project.FringeBurden.DefaultFromProject)
						default to Project.BurdenCodeBlock
							default individual fields
					constraint (!Project.FringeBurden.No)
						"<FinanceEnterpriseGroup.ProjectLabel>DoesNotAllowBurden"				
		
				FringeEncumbranceCodeBlock
					default to ProjectEmployee.FringeEncumbranceCodeBlock
						default individual fields
					constraint (ProjectEmployee.FringeEncumbrance)
						"EmployeeNotSetUpForFringeBurdenEncumbrance"
					
				NewSubject
					if (NewComment entered)
						required
						
		    	NewComment
		    		if (NewSubject entered)
		    			required
				    if (NewDocumentURL entered)
				    	required
				    		
				NewFrom	
					initial value is actor
					default to actor	

				NewCommentDate
					if (NewComment entered)
		    			default to current timestamp
		    	
		    	ProjectDescription
		    		initial value is Project + "("+Project.Description+")"
		    		default to Project + "("+Project.Description+")"
		    		
									
			Local Fields	
				NewProjectAssignment	is a ProjectAssignment view		
			Action Rules
				invoke Create ProjectAssignment
					assign result to NewProjectAssignment
					fill in user fields from parameters
					invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
					invoked.Project						= Project
					invoked.Employee					= ProjectEmployee
					invoked.ProjectRole					= ProjectRole
					invoked.ProjectDateRange			= AssignmentDateRange
					invoked.BillableRate				= BillableRate
	 				invoked.CommittedEffort				= CommittedEffort
					invoked.FinanceCodeBlock			= FinanceCodeBlock
					invoked.BurdenCode					= BurdenCode
					invoked.BurdenCodeBlock				= BurdenCodeBlock
					invoked.FringeEncumbranceCodeBlock 	= FringeEncumbranceCodeBlock
			Exit Rules
				if (NewSubject entered)	
					invoke Create ProjectAssignmentComment
						invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.ProjectAssignment	   = NewProjectAssignment.ProjectAssignment
						invoked.Project				   = Project
						invoked.Employee			   = ProjectEmployee
						invoked.Subject				   = NewSubject
				    	invoked.Comment                = NewComment 
						invoked.From                   = NewFrom	
						invoked.CommentDate            = NewCommentDate
				    	invoked.Attachment             = NewAttachment		
	   					invoked.DocumentURL			   = NewDocumentURL			    				
					
		UpdateAssignmentFringe is an Instance Action
			valid when (PostingInEnterpriseStructure)
			completion message is "<CompletionMessage>"			
			Parameters
				OverrideCurrentValues	is Boolean
			Action Rules
				if (ProjectAssignmentCount > 20)
					CompletionMessage = UpdateFringeSubmittedMF
					invoke DoUpdateAssignmentFringe in background
						invoked.OverrideCurrentValues = OverrideCurrentValues
				else
					CompletionMessage = UpdateFringeCompletedMF
					invoke DoUpdateAssignmentFringe in foreground
						invoked.OverrideCurrentValues = OverrideCurrentValues

		DoUpdateAssignmentFringe is an Instance Action
			restricted
			Parameters
				OverrideCurrentValues	is Boolean
			Local Fields
				RecordCount is Numeric size 2
			Action Rules
				for each ProjectAssignment set
					invoke UpdateFringeBurdens each
						invoked.OverrideCurrentValues = OverrideCurrentValues
					if (RecordCount = 20)
						commit transaction
						initialize RecordCount
					RecordCount += 1

		UpdateAssignmentLabor is an Instance Action
			valid when (PostingInEnterpriseStructure)
			completion message is "<CompletionMessage>"			
			Parameters
				OverrideCurrentValues	is Boolean
			Action Rules
				if (ProjectAssignmentCount > 20)
					CompletionMessage = UpdateCodeBlocksSubmittedMF
					invoke DoUpdateAssignmentLabor in background
						invoked.OverrideCurrentValues = OverrideCurrentValues
				else
					CompletionMessage = UpdateCodeBlocksCompletedMF
					invoke DoUpdateAssignmentLabor in foreground
						invoked.OverrideCurrentValues = OverrideCurrentValues

		DoUpdateAssignmentLabor is an Instance Action
			restricted
			Parameters
				OverrideCurrentValues	is Boolean
			Local Fields
				RecordCount is Numeric size 2
			Action Rules
				for each ProjectAssignment set
					invoke UpdateFinanceCodeBlocks each
						invoked.OverrideCurrentValues = OverrideCurrentValues
					if (RecordCount = 20)
						commit transaction
						initialize RecordCount
					RecordCount += 1

		GenerateIndirectBurdenTransactions is a Set Action
			restricted
			synchronized on "Project:<PrmFinanceEnterpriseGroup><PrmProject>"
			Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		PrmAccountingEntity			is an AccountingEntity
        			default label is "AccountingEntity"
        		PrmAccountingEntityGroup	is an AccountingEntityGroup
        			default label is "AccountingEntityGroup"
				PostingDateRange			is a ProjectDateRange
				PrmProject					is a Project
				Journalize					is Boolean
				PostingDate					is Date
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (PrmFinanceEnterpriseGroup.ProjectBurdenDate entered)
						"ProjectBurdenDateRequiredOnFinanceEnterpriseGroupToGenerateIndirectBurdenTransactions"
        		PrmAccountingEntity
        			if (PrmAccountingEntityGroup entered)
	        			cannot be entered
	        				"MustEnterEitherAccountingEntityOrAccountingEntityGroup"
	        		else
	        			required
	        				"MustEnterEitherAccountingEntityOrAccountingEntityGroup"	        			
        		PrmAccountingEntityGroup
        			if (PrmAccountingEntity entered)
	        			cannot be entered
	        				"MustEnterEitherAccountingEntityOrAccountingEntityGroup"	        			
	        		else
	        			required
	        				"MustEnterEitherAccountingEntityOrAccountingEntityGroup"
				PostingDateRange
					required
				PrmProject
					constraint (PrmProject.ProjectType.Posting)
						"MustBePosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
					constraint (PrmProject.ProjectIndirectBurden set exists)
						"NoIndirectBurdensExistFor<PrmProject>"
					constraint (!PrmProject.BurdensInProgress)
						"IndirectBurdenGenerationAlreadyInProgressFor<PrmProject>"
				PostingDate
					if (Journalize)
						required
						LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						LocalAccountingEntityGroup	= PrmAccountingEntityGroup
						if (PrmAccountingEntity entered)
							LocalAccountingEntity		= PrmAccountingEntity
							if (SystemClosingControlRel exists
							and SystemClosingControlRel.Control)
								constraint (PostingDate within SystemClosingControlRel.ValidEntryDate)
									"PostingDateMustBeWithinSystemClosingControlValidDateRange"
						else
							for each AccountingEntityGroupMemberRel
								LocalAccountingEntity		= each.AccountingEntity
								if (each.AccountingEntity.Status.Active)							
									if (SystemClosingControlRel exists
									and SystemClosingControlRel.Control)
										constraint (PostingDate within SystemClosingControlRel.ValidEntryDate)
											"PostingDateMustBeWithinSystemClosingControlValidDateRange"
					else
						cannot be entered
			Local Fields
				LocalRunGroup						is a ProjectIndirectBurdenRunGroup
				NewProjectIndirectBurdenRunGroup	is a ProjectIndirectBurdenRunGroup view
				LocalAsyncId						is a AsyncActionRequest
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Posting
				and    Active
				and   !BurdensInProgress
				and    ProjectInEnterpriseStructureRel exists
				and    ProjectIndirectBurden set exists
				and   (Project = PrmProject
				or     PrmProject not entered))
			Sort Order is primary
			Action Rules
				Set Rules
					Entrance Rules
						LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						LocalAccountingEntityGroup	= PrmAccountingEntityGroup						
						invoke Create ProjectIndirectBurdenRunGroup
							assign result to NewProjectIndirectBurdenRunGroup
							invoked.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.ProjectDateRange		= PostingDateRange
							invoked.Project					= PrmProject
						LocalRunGroup = NewProjectIndirectBurdenRunGroup.ProjectIndirectBurdenRunGroup
					Exit Rules
						if (Journalize)
							invoke JournalizeIndirectBurdenTransactions ProjectIndirectBurdenTransaction
								run after LocalAsyncId
								invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
								invoked.PrmAccountingEntity			= PrmAccountingEntity
								invoked.PrmAccountingEntityGroup	= PrmAccountingEntityGroup
								invoked.PrmRunGroup					= LocalRunGroup
								invoked.PostingDate					= PostingDate
				Instance Rules
					if (Journalize)
						invoke CreateProjectBurdenRunGroupTransactions in background
							run after LocalAsyncId
							assign async action request id to LocalAsyncId
							invoked.PrmAccountingEntity		 = PrmAccountingEntity
							invoked.PrmAccountingEntityGroup = PrmAccountingEntityGroup
							invoked.PrmRunGroup				 = LocalRunGroup
							invoked.PostingDateRange		 = PostingDateRange
					else
						invoke CreateProjectBurdenRunGroupTransactions in background
							assign async action request id to LocalAsyncId
							invoked.PrmAccountingEntity		 = PrmAccountingEntity
							invoked.PrmAccountingEntityGroup = PrmAccountingEntityGroup
							invoked.PrmRunGroup				 = LocalRunGroup
							invoked.PostingDateRange		 = PostingDateRange
					invoke GenerateIndirectBurdenTransactions ProjectBurdenRunGroupTransaction in background
						run after LocalAsyncId
						assign async action request id to LocalAsyncId
						invoked.PrmFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
						invoked.PrmRunGroup				  = LocalRunGroup
						invoked.PrmProject				  = Project

		CreateProjectBurdenRunGroupTransactions is an Instance Action
			restricted
			Parameters
        		PrmAccountingEntity			is an AccountingEntity
        		PrmAccountingEntityGroup	is an AccountingEntityGroup
				PrmRunGroup					is a ProjectIndirectBurdenRunGroup
				PostingDateRange			is a ProjectDateRange
			Local Fields
				RecordCount					is Numeric size 3
				IndirectBurdenTable
					do not save in checkpoint
				BurdenCount					is Numeric size 3
				Counter						is Numeric size 3
				LocalAmount					is like InternationalAmount
				OkToCreate					is Boolean
				LocalEditDateRange			is a DateRange
				LocalSelectedSourcesOnly	is Boolean
				TransCounter				is Numeric size 8
				LocalSelectionGroup			is a GLTransactionDetail group
			Action Rules
				invoke SetBurdensInProgress
				LocalFinanceEnterpriseGroup	= FinanceEnterpriseGroup
				LocalAccountingEntityGroup	= PrmAccountingEntityGroup						
				LocalDateRange				= PostingDateRange
				for each ActiveProjectIndirectBurdenRel
					if (Counter < 999)
						Counter += 1
						IndirectBurdenTable.IndirectBurden[Counter].BurdenCode			 = each.ProjectIndirectBurdenCode
						IndirectBurdenTable.IndirectBurden[Counter].SelectionGroup		 = each.SelectionGroup
						IndirectBurdenTable.IndirectBurden[Counter].SelectionGroupOption = each.SelectionGroupOption
						IndirectBurdenTable.IndirectBurden[Counter].SelectedSourcesOnly	 = each.SelectedSourcesOnly
						IndirectBurdenTable.IndirectBurden[Counter].BurdenRateDate		 = each.BurdenRateDate
				BurdenCount = Counter
				for each GeneralLedgerTransactionPostingRel
					commit transaction
					for each each.GLTransactionDetailBurdenRel
	    				LocalAccountingEntity = each.FinanceCodeBlock.ToAccountingEntity
	    				if (LocalAccountingEntity = PrmAccountingEntity
						or  AccountingEntityGroupMemberOTOActiveRel exists)					
							LocalGLTransactionDetail = each.GLTransactionDetail
							LocalPOPProject			 = Project
							LocalSystem				 = LocalGLTransactionDetail.System
							initialize LocalEditDateRange
							if (ProjectPeriodOfPerformanceRel exists)
								LocalEditDateRange.Begin = ProjectPeriodOfPerformanceRel.ProjectBeginDate
								LocalEditDateRange.End	 = ProjectPeriodOfPerformanceRel.ProjectEndDate
							if (!LocalEditDateRange entered)
								LocalEditDateRange.Begin = Project.ProjectDateRange.BeginDate
								LocalEditDateRange.End	 = Project.ProjectDateRange.EndDate
							if ((FinanceEnterpriseGroup.ProjectDateEdit.TransactionDate
							and  LocalGLTransactionDetail.TransactionDate within LocalEditDateRange)
							or  (FinanceEnterpriseGroup.ProjectDateEdit.PostingDate
							and  LocalGLTransactionDetail.PostingDate within LocalEditDateRange))
								initialize Counter
								while (Counter < BurdenCount)
									Counter += 1
									LocalSelectionGroup = IndirectBurdenTable.IndirectBurden[Counter].SelectionGroup
									if (LocalSelectionGroup not entered
									or (IndirectBurdenTable.IndirectBurden[Counter].SelectionGroupOption.Include
									and LocalGLTransactionDetail within LocalSelectionGroup)
									or (IndirectBurdenTable.IndirectBurden[Counter].SelectionGroupOption.Exclude
									and LocalGLTransactionDetail not within LocalSelectionGroup))
										LocalIndirectBurdenCode	 = IndirectBurdenTable.IndirectBurden[Counter].BurdenCode
										LocalSelectedSourcesOnly = IndirectBurdenTable.IndirectBurden[Counter].SelectedSourcesOnly
										if (IndirectBurdenTable.IndirectBurden[Counter].BurdenRateDate.ProjectBegin)
											LocalEffectiveDate = ProjectDateRange.BeginDate
										else
										if (IndirectBurdenTable.IndirectBurden[Counter].BurdenRateDate.Transaction)
											LocalEffectiveDate = LocalGLTransactionDetail.TransactionDate
										else
										if (FinanceEnterpriseGroup.ProjectBurdenDate.TransactionDate)
											LocalEffectiveDate = LocalGLTransactionDetail.TransactionDate
										else
											LocalEffectiveDate = LocalGLTransactionDetail.PostingDate
										if (ProjectIndirectBurdenCodeRel exists)
											OkToCreate = true
											LocalFinanceDimension2 = LocalGLTransactionDetail.FinanceCodeBlock.FinanceDimension2
											if (FrontEndSplitsEnabled)
												if ((LocalSelectedSourcesOnly
												and  ProjectIndirectBurdenSelectedSourceRel not exists)
												or   LocalFinanceDimension2 not entered)
													OkToCreate = false
											if (OkToCreate)
												LocalAmount = LocalGLTransactionDetail.ReportCurrencyAmount.ProjectAmount.EnteredCurrencyAmount * ProjectIndirectBurdenCodeRel.Rate
												round LocalAmount to nearest DerivedRoundTo
												if (LocalAmount entered)
													RecordCount += 1
													if (RecordCount >= 20)
														commit transaction
														initialize RecordCount
													TransCounter += 1
													invoke Create ProjectBurdenRunGroupTransaction
														invoked.FinanceEnterpriseGroup		 	 = FinanceEnterpriseGroup
														invoked.ProjectIndirectBurdenRunGroup	 = PrmRunGroup
														invoked.Project						  	 = Project
														invoked.ProjectBurdenRunGroupTransaction = TransCounter
														invoked.GLTransactionDetail			 	 = LocalGLTransactionDetail
														invoked.Amount							 = LocalAmount
														invoked.IndirectBurdenCode			  	 = LocalIndirectBurdenCode
														invoked.BurdenEffectiveDate			  	 = ProjectIndirectBurdenCodeRel.EffectiveDate
														invoked.TransactionDate				  	 = LocalGLTransactionDetail.TransactionDate
														invoked.FinanceDimension2			  	 = LocalFinanceDimension2
														invoked.AccountingEntity			  	 = LocalGLTransactionDetail.FinanceCodeBlock.ToAccountingEntity
														invoked.FESEnabled					  	 = FrontEndSplitsEnabled
														invoked.SelectedSourcesOnly			  	 = LocalSelectedSourcesOnly
														if (LocalAmount > 0)
															invoked.Positive					 = true

		SetBurdensInProgress is an Instance Action
			restricted
			Action Rules
				BurdensInProgress = true

		SetBurdensComplete is an Instance Action
			restricted
			Action Rules
				BurdensInProgress = false

		HoldBillableTransactions is a Set Action
			restricted
			Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		SummaryProject				is a Project
        		PostingProject				is a Project
				SelectionGroup				is a GLTransactionDetail group
				DateSelection				is Numeric size 1
					States
						Transaction			value is 1
						Posting				value is 2
				DateRange
				BillingHold					is Boolean
				RevenueHold					is Boolean
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
        		SummaryProject
        			constraint (SummaryProject.SummaryInEnterpriseStructure)
        				"MustBeSummary<PrmFinanceEnterpriseGroup.ProjectLabel>InEnterpriseStructure"	
					if (PostingProject not entered
					and SelectionGroup not entered
					and DateRange not entered)
						required
							"MustEnterRecordSelectionParameters"
        		PostingProject
        			constraint (SummaryProject not entered)
        				"CannotEnterBothSummaryAndPosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
        			constraint (PostingProject.ProjectType.Posting)
        				"MustBePosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
				DateSelection
					if (DateRange entered)
						required
				DateRange
					if (DateSelection entered)
						required
							"MustEnterDateRange"
        		RevenueHold
        			if (!BillingHold)
        				required
        					"MustSelect_Hold_For_BillingOr_Hold_For_Revenue_RecognitionOr_Both"
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Posting
				and    Active
				and   (Project = PostingProject
				or     PostingProject not entered))
			Action Rules
				Instance Rules
					LocalProject = SummaryProject
					if (LocalProject not entered
					or	PostingInLocalSummaryRel exists)
						invoke HoldBillableTransactions GLTransactionDetail in background
			                invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
			                invoked.PrmProject					= Project
							invoked.SelectionGroup				= SelectionGroup
							invoked.DateSelection				= DateSelection
							invoked.DateRange					= DateRange
							invoked.BillingHold					= BillingHold
							invoked.RevenueHold					= RevenueHold

		RemoveHoldFromBillableTransactions is a Set Action
			restricted
			Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		SummaryProject				is a Project
        		PostingProject				is a Project
				SelectionGroup				is a GLTransactionDetail group
				DateSelection				is Numeric size 1
					States
						Transaction			value is 1
						Posting				value is 2
				DateRange
				RemoveBillingHold			is Boolean
				RemoveRevenueHold			is Boolean
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
        		SummaryProject
        			constraint (SummaryProject.SummaryInEnterpriseStructure)
        				"MustBeSummary<PrmFinanceEnterpriseGroup.ProjectLabel>InEnterpriseStructure"	
					if (PostingProject not entered
					and SelectionGroup not entered
					and DateRange not entered)
						required
							"MustEnterRecordSelectionParameters"
        		PostingProject
        			constraint (SummaryProject not entered)
        				"CannotEnterBothSummaryAndPosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
        			constraint (PostingProject.ProjectType.Posting)
        				"MustBePosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
				DateSelection
					if (DateRange entered)
						required
				DateRange
					if (DateSelection entered)
						required
							"MustEnterDateRange"
        		RemoveRevenueHold
        			if (!RemoveBillingHold)
        				required
        					"MustSelect_Remove_Hold_For_BillingOr_Remove_Hold_For_Revenue_RecognitionOr_Both"
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Posting
				and    Active
				and   (Project = PostingProject
				or     PostingProject not entered))
			Action Rules
				Instance Rules
					LocalProject = SummaryProject
					if (LocalProject not entered
					or	PostingInLocalSummaryRel exists)
						invoke RemoveHoldFromBillableTransactions GLTransactionDetail in background
			                invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
			                invoked.PrmProject					= Project
							invoked.SelectionGroup				= SelectionGroup
							invoked.DateSelection				= DateSelection
							invoked.DateRange					= DateRange
							invoked.RemoveBillingHold			= RemoveBillingHold
							invoked.RemoveRevenueHold			= RemoveRevenueHold

#ifdef module am
		HoldCapitalizableTransactions is a Set Action
			restricted
			Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		SummaryProject				is a Project
        		PostingProject				is a Project
				SelectionGroup				is a GLTransactionDetail group
				AssetSelectionGroup			is a AssetCapitalTransaction group
					default label is "SelectionGroup"
				DateSelection				is Numeric size 1
					States
						Transaction			value is 1
						Posting				value is 2
				DateRange
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
        		SummaryProject
        			constraint (SummaryProject.SummaryInEnterpriseStructure)
        				"MustBeSummary<PrmFinanceEnterpriseGroup.ProjectLabel>InEnterpriseStructure"	
					if (PostingProject not entered
					and ((PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled
					and SelectionGroup not entered)
					or (PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed
					and AssetSelectionGroup not entered))
					and DateRange not entered)
						required
							"MustEnterRecordSelectionParameters"
        		PostingProject
        			constraint (SummaryProject not entered)
        				"CannotEnterBothSummaryAndPosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
        			constraint (PostingProject.ProjectType.Posting)
        				"MustBePosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
				DateSelection
					if (DateRange entered)
						required
				DateRange
					if (DateSelection entered)
						required
							"MustEnterDateRange"
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Posting
				and    Active
				and   (Project = PostingProject
				or     PostingProject not entered))
			Action Rules
				Instance Rules
					LocalProject = SummaryProject
					if (LocalProject not entered
					or	PostingInLocalSummaryRel exists)
						if (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled)
							invoke HoldCapitalizableTransactions GLTransactionDetail in background
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmProject					= Project
								invoked.SelectionGroup				= SelectionGroup
								invoked.DateSelection				= DateSelection
								invoked.DateRange					= DateRange
						else
						if (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed)
							invoke HoldCapitalizableTransactions AssetCapitalTransaction in background
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmProject					= Project
								invoked.SelectionGroup				= AssetSelectionGroup
								invoked.DateSelection				= DateSelection
								invoked.DateRange					= DateRange

		RemoveHoldFromCapitalizableTransactions is a Set Action
			restricted
			Parameters
        		PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
        			default label is "FinanceEnterpriseGroup"
        		SummaryProject				is a Project
        		PostingProject				is a Project
				SelectionGroup				is a GLTransactionDetail group
				AssetSelectionGroup			is a AssetCapitalTransaction group
					default label is "SelectionGroup"
				DateSelection				is Numeric size 1
					States
						Transaction			value is 1
						Posting				value is 2
				DateRange
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.InProgress)
						"CapitalizationUpgradeInProgress,PleaseWaitUntilUpgradeComplete"
        		SummaryProject
        			constraint (SummaryProject.SummaryInEnterpriseStructure)
        				"MustBeSummary<PrmFinanceEnterpriseGroup.ProjectLabel>InEnterpriseStructure"	
					if (PostingProject not entered
					and ((PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled
					and SelectionGroup not entered)
					or (PrmFinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed
					and AssetSelectionGroup not entered))
					and DateRange not entered)
						required
							"MustEnterRecordSelectionParameters"
        		PostingProject
        			constraint (SummaryProject not entered)
        				"CannotEnterBothSummaryAndPosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
        			constraint (PostingProject.ProjectType.Posting)
        				"MustBePosting<PrmFinanceEnterpriseGroup.ProjectLabel>"
				DateSelection
					if (DateRange entered)
						required
				DateRange
					if (DateSelection entered)
						required
							"MustEnterDateRange"
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    ProjectType.Posting
				and    Active
				and   (Project = PostingProject
				or     PostingProject not entered))
			Action Rules
				Instance Rules
					LocalProject = SummaryProject
					if (LocalProject not entered
					or	PostingInLocalSummaryRel exists)
						if (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.NotEnabled)
							invoke RemoveHoldFromCapitalizableTransactions GLTransactionDetail in background
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmProject					= Project
								invoked.SelectionGroup				= SelectionGroup
								invoked.DateSelection				= DateSelection
								invoked.DateRange					= DateRange
						else
						if (FinanceEnterpriseGroup.CapitalizationUpgradeProgess.Completed)
							invoke RemoveHoldFromCapitalizableTransactions AssetCapitalTransaction in background
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmProject					= Project
								invoked.SelectionGroup				= AssetSelectionGroup
								invoked.DateSelection				= DateSelection
								invoked.DateRange					= DateRange
#endif

		SetRevenueFields is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				or      PrmFinanceEnterpriseGroup not entered)
				and     ProjectType.Posting
				and     RevenueCodeBlockOption not entered)
			Action Rules
				Instance Rules
					if (RevenueAccountOnly entered)
						RevenueCodeBlockOption = 2
						RevenuePartialAccount.GeneralLedgerChartAccount = RevenueAccountOnly
						RevenuePartialAccount.FinanceDimension1 = RevenueDimension.FinanceDimension1
						RevenuePartialAccount.FinanceDimension3 = RevenueDimension.FinanceDimension3
						RevenuePartialAccount.FinanceDimension4 = RevenueDimension.FinanceDimension4
						RevenuePartialAccount.FinanceDimension5 = RevenueDimension.FinanceDimension5
						RevenuePartialAccount.FinanceDimension6 = RevenueDimension.FinanceDimension6
						RevenuePartialAccount.FinanceDimension7 = RevenueDimension.FinanceDimension7
						RevenuePartialAccount.FinanceDimension8 = RevenueDimension.FinanceDimension8
						RevenuePartialAccount.FinanceDimension9 = RevenueDimension.FinanceDimension9
						RevenuePartialAccount.FinanceDimension10 = RevenueDimension.FinanceDimension10
					else
					if (RevenueFullAccount entered)
						RevenueCodeBlockOption = 1

		RecalculateBillingAndRevenueTotals is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup     is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
			Instance Selection
				where ((FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				or      PrmFinanceEnterpriseGroup not entered)
				and     ProjectType.Posting)
			Action Rules
				Instance Rules
					TotalBilled		= sum InvoiceLineRel.Amount
					TotalRecognized = sum RevenueLineRel.Amount 

		UpdateTotalBilled is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				BilledAmount		is like InternationalAmount
					precision is Currency.NumberOfDecimals
			Action Rules
				TotalBilled	+= BilledAmount

		UpdateTotalRecognized is an Instance Action
			restricted
			refresh and lock this instance
			Parameters
				RecognizedAmount		is like InternationalAmount
					precision is ProjectContract.Currency.NumberOfDecimals
			Action Rules
				TotalRecognized	+= RecognizedAmount




		CreateOrDeleteProjByGrpRelFromProjectToBlank is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmProjectRule         			is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
				PrmProjectRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalCommitCounter				is Numeric 3
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
                Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyFromValue			= Project
					LocalKeyToValue				= blank
					if(PrmDeleteFlag)
						invoke Delete CodeBlockRelationDetailFromToRel
					else
						invoke Update CodeBlockRelationDetailFromToRel
							invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
							invoked.CodeBlockRelation                   = PrmCodeBlockRelation
							invoked.Project		          				= Project
							invoked.DefaultToValue                      = PrmDefaultToValue
					increment LocalCommitCounter
					if (LocalCommitCounter > 50)
						commit transaction
						initialize LocalCommitCounter

		CreateOrDeleteProjectRelationFromProjectToEntity is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
				PrmCodeBlockRelation			is a CodeBlockRelation
				PrmAccountingEntityRule         is an AccountingEntity group
				PrmProjectRule                  is a Project group
				PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
				PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntityRule
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and	Project within PrmProjectRule
				and Project.ProjectType.Posting)
			Sort Order
				FinanceEnterpriseGroup
				Project
			Action Rules
				Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteEntityRelationFromProjectToEntity AccountingEntity
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
								invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
								invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray  			  	= LocalProjectArray
								invoked.PrmAccountingEntityRule			= PrmAccountingEntityRule
								invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
								invoked.PrmUniqueID						= PrmUniqueID
				Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteEntityRelationFromProjectToEntity AccountingEntity
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
							invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray			    	= LocalProjectArray
							invoked.PrmAccountingEntityRule			= PrmAccountingEntityRule
							invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
							invoked.PrmUniqueID						= PrmUniqueID
						initialize LocalProjectArray
						initialize LocalArrayCounter
						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToUnit is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmAccountingUnitRule    		is an AccountingUnit group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmAccountingUnitRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteUnitByGrpRelFromProjectToUnit AccountingUnit
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmAccountingUnitRule	        = PrmAccountingUnitRule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteUnitByGrpRelFromProjectToUnit AccountingUnit
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmAccountingUnitRule	        = PrmAccountingUnitRule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToAccount is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmAccountRule    				is a GeneralLedgerChartAccount group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmAccountRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteAccByGrpRelFromProjectToAccount GeneralLedgerChartAccount
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmAccountRule	   		        = PrmAccountRule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteAccByGrpRelFromProjectToAccount GeneralLedgerChartAccount
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmAccountRule	        	    = PrmAccountRule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

        CreateOrDeleteProjByGrpRelFromProjectToDimension1 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension1Rule    			is a FinanceDimension1 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension1Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim1ByGrpRelFromProjectToDimension1 FinanceDimension1
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension1Rule	            = PrmDimension1Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim1ByGrpRelFromProjectToDimension1 FinanceDimension1
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension1Rule	            = PrmDimension1Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

        CreateOrDeleteProjByGrpRelFromProjectToDimension2 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension2Rule    			is a FinanceDimension2 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension2Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim2ByGrpRelFromProjectToDimension2 FinanceDimension2
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension2Rule	            = PrmDimension2Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim2ByGrpRelFromProjectToDimension2 FinanceDimension2
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension2Rule	            = PrmDimension2Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

        CreateOrDeleteProjByGrpRelFromProjectToDimension3 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension3Rule    			is a FinanceDimension3 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension3Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim3ByGrpRelFromProjectToDimension3 FinanceDimension3
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension3Rule	            = PrmDimension3Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim3ByGrpRelFromProjectToDimension3 FinanceDimension3
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension3Rule	            = PrmDimension3Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension4 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension4Rule    			is a FinanceDimension4 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension4Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim4ByGrpRelFromProjectToDimension4 FinanceDimension4
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension4Rule	            = PrmDimension4Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim4ByGrpRelFromProjectToDimension4 FinanceDimension4
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension4Rule	            = PrmDimension4Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension5 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension5Rule    			is a FinanceDimension5 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension5Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim5ByGrpRelFromProjectToDimension5 FinanceDimension5
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension5Rule	            = PrmDimension5Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim5ByGrpRelFromProjectToDimension5 FinanceDimension5
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension5Rule	            = PrmDimension5Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension6 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension6Rule    			is a FinanceDimension6 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension6Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim6ByGrpRelFromProjectToDimension6 FinanceDimension6
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension6Rule	            = PrmDimension6Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim6ByGrpRelFromProjectToDimension6 FinanceDimension6
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension6Rule	            = PrmDimension6Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension7 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension7Rule    			is a FinanceDimension7 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension7Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim7ByGrpRelFromProjectToDimension7 FinanceDimension7
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension7Rule	            = PrmDimension7Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim7ByGrpRelFromProjectToDimension7 FinanceDimension7
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension7Rule	            = PrmDimension7Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension8 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension8Rule    			is a FinanceDimension8 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension8Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim8ByGrpRelFromProjectToDimension8 FinanceDimension8
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension8Rule	            = PrmDimension8Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim8ByGrpRelFromProjectToDimension8 FinanceDimension8
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension8Rule	            = PrmDimension8Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension9 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension9Rule    			is a FinanceDimension9 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension9Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim9ByGrpRelFromProjectToDimension9 FinanceDimension9
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension9Rule	            = PrmDimension9Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim9ByGrpRelFromProjectToDimension9 FinanceDimension9
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension9Rule	            = PrmDimension9Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project

		CreateOrDeleteProjByGrpRelFromProjectToDimension10 is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
				PrmProjectRule               	is a Project group
                PrmDimension10Rule    			is a FinanceDimension10 group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
                PrmProjectRule
                PrmDimension10Rule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
            	LocalArrayCounter				is Numeric 5
				LocalProjectArray				is a ProjectArray
			Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
					Exit Rules
						if (LocalArrayCounter > 0)
							invoke CreateOrDeleteDim10ByGrpRelFromProjectToDimension10 FinanceDimension10
								invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            	invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
                            	invoked.PrmProject						= LocalProjectArray.Project[1]
								invoked.PrmProjectArray    				= LocalProjectArray
                            	invoked.PrmDimension10Rule	            = PrmDimension10Rule
                            	invoked.PrmDefaultToValue               = PrmDefaultToValue
								invoked.PrmDeleteFlag					= PrmDeleteFlag
                            	invoked.PrmUniqueID						= PrmUniqueID	
                Instance Rules
					LocalArrayCounter += 1
					if (LocalArrayCounter < FinanceEnterpriseGroup.StructureRelationArraySize)
						LocalProjectArray.Project[LocalArrayCounter] = Project
					else
						invoke CreateOrDeleteDim10ByGrpRelFromProjectToDimension10 FinanceDimension10
							invoked.PrmFinanceEnterpriseGroup       = PrmFinanceEnterpriseGroup
                            invoked.PrmCodeBlockRelation            = PrmCodeBlockRelation
							invoked.PrmProject						= LocalProjectArray.Project[LocalArrayCounter-1]
							invoked.PrmProjectArray    				= LocalProjectArray
                            invoked.PrmDimension10Rule	            = PrmDimension10Rule
                            invoked.PrmDefaultToValue               = PrmDefaultToValue
							invoked.PrmDeleteFlag					= PrmDeleteFlag
                            invoked.PrmUniqueID						= PrmUniqueID	
						initialize LocalProjectArray
						initialize LocalArrayCounter

						LocalArrayCounter = 1
						LocalProjectArray.Project[LocalArrayCounter] = Project


		CreateOrDeleteProjByGrpRelFromBlankToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmProjectRule         			is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
            Set Is
                PrmFinanceEnterpriseGroup
                PrmCodeBlockRelation
				PrmProjectRule
				PrmDeleteFlag
                PrmUniqueID
            Local Fields
				LocalCommitCounter				is Numeric 3
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and Project.ProjectType.Posting)
            Sort Order
                FinanceEnterpriseGroup
                Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyFromValue			= blank
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						invoke Delete CodeBlockRelationDetailFromToRel
					else
						invoke Update CodeBlockRelationDetailFromToRel
							invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
							invoked.CodeBlockRelation                   = PrmCodeBlockRelation
							invoked.Project		          				= Project
							invoked.DefaultToValue                      = PrmDefaultToValue
					increment LocalCommitCounter
					if (LocalCommitCounter > 50)
						commit transaction
						initialize LocalCommitCounter

        CreateOrDeleteProjectRelationFromEntityToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntity    			is like AccountingEntity
                PrmAccountingEntityArray		is like AccountingEntityArray
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntity
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmAccountingEntityArray.AccountingEntity[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmAccountingEntityArray.AccountingEntity[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmAccountingEntityArray.AccountingEntity[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmAccountingEntityArray.AccountingEntity[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.AccountingEntity		          	= PrmAccountingEntityArray.AccountingEntity[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromUnitToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccountingEntity				is like AccountingEntity
                PrmAccountingUnit				is like AccountingUnit
                PrmAccountingUnitArray			is like AccountingUnitArray
                PrmProjectRule	            	is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccountingEntity
				PrmAccountingUnit
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
			Local Fields
				LocalArrayCounter				is Numeric 5
				LocalCommitCounter				is Numeric size 3
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter      
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].AccountingUnit entered)
							LocalKeyFromValue	= PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].DerivedEntityAccountingUnit
							invoke Delete CodeBlockRelationDetailFromToRel 
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].AccountingUnit entered)
							LocalKeyFromValue	= PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].DerivedEntityAccountingUnit
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.AccountingEntity           			= PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].AccountingEntity
								invoked.AccountingUnit						= PrmAccountingUnitArray.AccountingEntityAndUnit[LocalArrayCounter].AccountingUnit
								invoked.Project								= Project    
								invoked.DefaultToValue                      = PrmDefaultToValue
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter


        CreateCodeBlockRelationDetails is a Set Action
            restricted
            
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmGeneralLedgerChartAccount    is an GeneralLedgerChartAccount
                PrmProjectRule                  is a Project group
                PrmAccountArray					is an AccountArray
                PrmSequenceNumber				is Numeric 5
                PrmDefaultToValue               is Alpha 200
                PrmCreateBlankTo				is Boolean					
                PrmUniqueID						is a UniqueID

			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmGeneralLedgerChartAccount
				PrmProjectRule
				PrmUniqueID
				            
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and    Project within PrmProjectRule
                and    Project.ProjectType.Posting)
            
            Sort Order
				FinanceEnterpriseGroup
				Project
                    
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                        
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter

            		while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)

						if (PrmCreateBlankTo)
							LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    	LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
	                    	LocalKeyToValue				= blank
							invoke Update CodeBlockRelationDetailFromToRel
	                        	invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
	                        	invoked.CodeBlockRelation                   = PrmCodeBlockRelation
	                            invoked.DefaultToValue                      = PrmDefaultToValue
	                            invoked.GeneralLedgerChartAccount           = PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
	                            invoked.Project                             = blank

                    	LocalCodeBlockRelation 		= PrmCodeBlockRelation
                    	LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
                    	LocalKeyToValue				= Project
                        invoke Update CodeBlockRelationDetailFromToRel
                            invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
                            invoked.CodeBlockRelation                   = PrmCodeBlockRelation
                            invoked.DefaultToValue                      = PrmDefaultToValue
                            invoked.GeneralLedgerChartAccount           = PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
                            invoked.Project                             = Project
                    	LocalArrayCounter += 1
                    	increment LocalCommitCounter
						if (LocalCommitCounter > 50)
							commit transaction
							initialize LocalCommitCounter


		DeleteCodeBlockRelationDetails is a Set Action
            restricted
            
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmGeneralLedgerChartAccount    is an GeneralLedgerChartAccount
                PrmProjectRule                  is a Project group
                PrmAccountArray					is an AccountArray
                PrmSequenceNumber				is Numeric 5
                PrmDefaultToValue               is Alpha 200
                PrmCreateBlankTo				is Boolean
                PrmUniqueID						is a UniqueID

			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmGeneralLedgerChartAccount
				PrmProjectRule
				PrmUniqueID
				            
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and    Project within PrmProjectRule
                and    Project.ProjectType.Posting)
            
            Sort Order
				FinanceEnterpriseGroup
				Project
                    
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                        
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
               		while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)
               			if (PrmCreateBlankTo)
							LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    	LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
	                    	LocalKeyToValue				= blank
							invoke Delete CodeBlockRelationDetailFromToRel
				    	LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
	                    LocalKeyToValue				= Project
	                    invoke Delete CodeBlockRelationDetailFromToRel
	                    LocalArrayCounter += 1
	                    increment LocalCommitCounter
						if (LocalCommitCounter > 50)
							commit transaction
							initialize LocalCommitCounter
					
        CreateFinanceDimension1CodeBlockRelationDetails is a Set Action
            restricted
            
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmProjectRule                  is a Project group
                PrmFinanceDimension1Array		is a FinanceDimension1Array
                PrmSequenceNumber				is Numeric 5
                PrmDefaultToValue               is Alpha 200
                PrmUniqueID						is a UniqueID
                PrmCodeBlockRelationRule		is a CodeBlockRelationRule
                PrmDeleteFlag					is Boolean

			Set Is
				PrmFinanceEnterpriseGroup
				PrmFinanceDimension1Array
				PrmUniqueID
				PrmCodeBlockRelation
				PrmProjectRule

				            
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and    Project within PrmProjectRule
                and    Project.ProjectType.Posting)
            
            Sort Order
				FinanceEnterpriseGroup
				Project
                    
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                        
                Instance Rules
                	if(!PrmDeleteFlag)
						LocalArrayCounter = 1
                    	initialize LocalCommitCounter

            			while (PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter] entered)

							if (PrmCodeBlockRelationRule.CreateBlankTo)
								LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    		LocalKeyFromValue			= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
	                    		LocalKeyToValue				= blank
								invoke Update CodeBlockRelationDetailFromToRel
	                        		invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
	                        		invoked.CodeBlockRelation                   = PrmCodeBlockRelation
	                            	invoked.DefaultToValue                      = PrmDefaultToValue
	                            	invoked.Dimension1           				= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
	                            	invoked.Project                             = blank

                    		LocalCodeBlockRelation 		= PrmCodeBlockRelation
                    		LocalKeyFromValue			= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
                    		LocalKeyToValue				= Project
                        	invoke Update CodeBlockRelationDetailFromToRel
                            	invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
                            	invoked.CodeBlockRelation                   = PrmCodeBlockRelation
                            	invoked.DefaultToValue                      = PrmDefaultToValue
                            	invoked.Dimension1                   		= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
                            	invoked.Project                             = Project
                    		LocalArrayCounter += 1
                    		increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
						if (PrmCodeBlockRelationRule.CreateBlankFrom)
							LocalCodeBlockRelation 		= PrmCodeBlockRelation	
	                		LocalKeyFromValue			= blank					
	                		LocalKeyToValue				= Project				
                        	invoke Update CodeBlockRelationDetailFromToRel
                            	invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
                            	invoked.CodeBlockRelation                   = PrmCodeBlockRelation
                            	invoked.DefaultToValue                      = PrmDefaultToValue
                            	invoked.Dimension1			        		= blank
                            	invoked.Project                             = Project
                            	
					if(PrmDeleteFlag)
	                	LocalArrayCounter = 1
                    	initialize LocalCommitCounter

                		while (PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter] entered)
                			if (PrmCodeBlockRelationRule.CreateBlankTo)
								LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    		LocalKeyFromValue			= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
	                    		LocalKeyToValue				= blank
								invoke Delete CodeBlockRelationDetailFromToRel	                            	
	                    	LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    	LocalKeyFromValue			= PrmFinanceDimension1Array.FinanceDimension1[LocalArrayCounter]
	                    	LocalKeyToValue				= Project
	                        invoke Delete CodeBlockRelationDetailFromToRel
	                    	LocalArrayCounter += 1
	                    	increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
						if (PrmCodeBlockRelationRule.CreateBlankFrom)
							LocalCodeBlockRelation 		= PrmCodeBlockRelation
	                    	LocalKeyFromValue			= blank
	                    	LocalKeyToValue				= Project
	                       	invoke Delete CodeBlockRelationDetailFromToRel                            	


		CreateOrDeleteProjByGrpRelFromAccountToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmAccount    					is like GeneralLedgerChartAccount
                PrmAccountArray					is like AccountArray
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmAccount
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.GeneralLedgerChartAccount          	= PrmAccountArray.GeneralLedgerChartAccount[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension1ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension1    				is like FinanceDimension1
                PrmDimension1Array				is like FinanceDimension1Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension1
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension1Array.FinanceDimension1[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension1Array.FinanceDimension1[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension1				          	= PrmDimension1Array.FinanceDimension1[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

        CreateOrDeleteProjByGrpRelFromDimension2ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension2    				is like FinanceDimension2
                PrmDimension2Array				is like FinanceDimension2Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension2
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension2Array.FinanceDimension2[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension2Array.FinanceDimension2[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension2				          	= PrmDimension2Array.FinanceDimension2[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension3ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension3    				is like FinanceDimension3
                PrmDimension3Array				is like FinanceDimension3Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension3
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension3Array.FinanceDimension3[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension3Array.FinanceDimension3[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension3				          	= PrmDimension3Array.FinanceDimension3[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

        CreateOrDeleteProjByGrpRelFromDimension4ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension4    				is like FinanceDimension4
                PrmDimension4Array				is like FinanceDimension4Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension4
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension4Array.FinanceDimension4[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension4Array.FinanceDimension4[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension4				          	= PrmDimension4Array.FinanceDimension4[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension5ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension5    				is like FinanceDimension5
                PrmDimension5Array				is like FinanceDimension5Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension5
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension5Array.FinanceDimension5[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension5Array.FinanceDimension5[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension5				          	= PrmDimension5Array.FinanceDimension5[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
		
		CreateOrDeleteProjByGrpRelFromDimension6ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension6    				is like FinanceDimension6
                PrmDimension6Array				is like FinanceDimension6Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension6
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension6Array.FinanceDimension6[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension6Array.FinanceDimension6[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension6				          	= PrmDimension6Array.FinanceDimension6[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension7ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension7    				is like FinanceDimension7
                PrmDimension7Array				is like FinanceDimension7Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension7
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension7Array.FinanceDimension7[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension7Array.FinanceDimension7[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension7				          	= PrmDimension7Array.FinanceDimension7[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension8ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension8    				is like FinanceDimension8
                PrmDimension8Array				is like FinanceDimension8Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension8
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension8Array.FinanceDimension8[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension8Array.FinanceDimension8[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension8				          	= PrmDimension8Array.FinanceDimension8[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

		CreateOrDeleteProjByGrpRelFromDimension9ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension9    				is like FinanceDimension9
                PrmDimension9Array				is like FinanceDimension9Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension9
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension9Array.FinanceDimension9[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension9Array.FinanceDimension9[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension9				          	= PrmDimension9Array.FinanceDimension9[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter

 		CreateOrDeleteProjByGrpRelFromDimension10ToProject is a Set Action
            restricted
            Parameters
                PrmFinanceEnterpriseGroup       is a FinanceEnterpriseGroup
                PrmCodeBlockRelation			is a CodeBlockRelation
                PrmDimension10    				is like FinanceDimension10
                PrmDimension10Array				is like FinanceDimension10Array
                PrmProjectRule                  is a Project group
                PrmDefaultToValue               is Alpha 200
				PrmDeleteFlag					is Boolean
                PrmUniqueID						is a UniqueID
			Set Is
				PrmFinanceEnterpriseGroup
				PrmCodeBlockRelation
				PrmDimension10
				PrmProjectRule
				PrmDeleteFlag
				PrmUniqueID
            Instance Selection
                where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
                and	Project within PrmProjectRule
                and	Project.ProjectType.Posting)
            Sort Order
				FinanceEnterpriseGroup
				Project
            Action Rules
                Set Rules
                	Exit Rules
                		if (LocalCommitCounter > 0)
                			commit transaction
                Instance Rules
					LocalArrayCounter = 1
                    initialize LocalCommitCounter
					LocalCodeBlockRelation 		= PrmCodeBlockRelation
					LocalKeyToValue				= Project
					if(PrmDeleteFlag)
						while (PrmDimension10Array.FinanceDimension10[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
							invoke Delete CodeBlockRelationDetailFromToRel
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter
					else
						while (PrmDimension10Array.FinanceDimension10[LocalArrayCounter] entered)
							LocalKeyFromValue			= PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
							invoke Update CodeBlockRelationDetailFromToRel
								invoked.FinanceEnterpriseGroup              = PrmFinanceEnterpriseGroup
								invoked.CodeBlockRelation                   = PrmCodeBlockRelation
								invoked.DefaultToValue                      = PrmDefaultToValue
								invoked.Dimension10				          	= PrmDimension10Array.FinanceDimension10[LocalArrayCounter]
								invoked.Project                             = Project
							LocalArrayCounter += 1
							increment LocalCommitCounter
							if (LocalCommitCounter > 50)
								commit transaction
								initialize LocalCommitCounter



#ifdef module integration								


		TriggerProjectWatchAlert is an Instance Action	
			restricted
			Parameters
				PrmPulseAlert is Alpha size 100
			Action Rules
				LocalPulseAlertFrom = PrmPulseAlert	
				if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationRel.Enable)
          			if(FSMBODConfigurationDetailRel.Enable)
						invoke TriggerPulseAlert FSMBODConfigurationRel
							invoked.PrmActorGroup 	= "PROJECT" 
							invoked.PrmMainXML 		= ProjectWatchAlertXML	
							invoked.PrmDescription	= ProjectWatchAlertDescription
							invoked.PrmBODID		= DerivedProjectWatchAlertBODID
							
		ProjectStatusChangePulseAlert is an Instance Action
			restricted
			Parameters
			Action Rules	
				invoke TriggerPulseAlert FSMBODConfigurationRel
					invoked.PrmActorGroup 	= "PROJECT" 
					invoked.PrmMainXML 		= ProjectStatusChangeAlertXML	
					invoked.PrmDescription	= ProjectStatusChangeAlertDescription
					invoked.PrmBODID		= DerivedProjectStatusChangeBODID

		ProjectStructureAddPulseAlert is an Instance Action
			restricted
			Parameters
			Action Rules	
				invoke TriggerPulseAlert FSMBODConfigurationRel
					invoked.PrmActorGroup 	= "ACCT SUPERVISOR" 
					invoked.PrmMainXML 		= ProjectStructureAddAlertXML	
					invoked.PrmDescription	= ProjectStructureAddAlertDescription
					invoked.PrmBODID		= DerivedProjectStructureAddBODID
#endif	


		TriggerProjectMaster is an Instance Action
			restricted
			Parameters
			Action Rules
				if (FinanceEnterpriseGroup.BODTrigger)
					if (action type.Create)
						LocalActionCode = LocalActionCode.Create
					else
						LocalActionCode = LocalActionCode.Update
	
					increment bod id.VariationID
					include TriggerProjectRules
							
		BODDataInitialLoadProjectCriteria is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmFromProject					is a Project
				PrmToProject					is a Project
			Parameter Rules
			Instance Selection			
				where  (((PrmFinanceEnterpriseGroup entered
				and		  PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup)
				or		  PrmFinanceEnterpriseGroup not entered)	
				and    ((PrmFromProject entered
				and		 PrmFromProject <= Project)
				or		 PrmFromProject not entered)	
				and    ((PrmToProject entered
				and		 PrmToProject >= Project)
				or		 PrmToProject not entered))	
					
			Action Rules										
				Instance Rules	
					if (FinanceEnterpriseGroup.BODTrigger)
						LocalActionCode = LocalActionCode.Create
						increment bod id.VariationID
						include TriggerProjectRules






#ifdef module integration
		TriggerProjectAddAlert is an Instance Action	
			restricted
			Parameters
				PrmPulseAlert is Alpha size 100
			Action Rules
				LocalPulseAlertFrom = PrmPulseAlert	
				if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationRel.Enable)
          			if(FSMBODConfigurationDetailRel.Enable)
						invoke TriggerPulseAlert FSMBODConfigurationRel
							invoked.PrmActorGroup 	= "ACCTSUPERVISOR" 
							invoked.PrmMainXML 		= ProjectAddAlertXML	
							invoked.PrmDescription	= ProjectAddAlertDescription
							invoked.PrmBODID		= DerivedProjectAddAlertBODID
#endif



#ifdef module integration
		TriggerProjectDateChangedAlert is an Instance Action	
			restricted
			Parameters
				PrmPulseAlert is Alpha size 100
			Action Rules
				LocalPulseAlertFrom = PrmPulseAlert	
				if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationRel.Enable)
          			if(FSMBODConfigurationDetailRel.Enable)
						invoke TriggerPulseAlert FSMBODConfigurationRel
							invoked.PrmActorGroup 	= "PROJECT" 
							invoked.PrmMainXML 		= ProjectDateChangedAlertXML	
							invoked.PrmDescription	= ProjectDateChangedAlertDescription
							invoked.PrmBODID		= DerivedProjectDateChangedAlertBODID
#endif



#ifdef module integration
		TriggerProjectDeleteAlert is an Instance Action	
			restricted
			Parameters
				PrmPulseAlert is Alpha size 100
			Action Rules
				LocalPulseAlertFrom = PrmPulseAlert	
				if (FinanceEnterpriseGroup.BODTrigger and FSMBODConfigurationRel.Enable)
          			if(FSMBODConfigurationDetailRel.Enable)
			   			invoke TriggerPulseAlert FSMBODConfigurationRel
							invoked.PrmActorGroup 	= "ACCTSUPERVISOR" 
							invoked.PrmMainXML 		= ProjectDeleteAlertXML	
							invoked.PrmDescription	= ProjectDeleteAlertDescription
							invoked.PrmBODID		= DerivedProjectDeleteAlertBODID
#endif


#ifdef module integration 
		SendProjectMasterNativeLPLBOD is an Instance Action
			restricted
			Entrance Rules
			Parameters
			Action Rules
				if(DerivedConfigDocID = "Y")
					send ion bod
						bod is ProjectMasterCleanDocIDBODXML
						bod type is "Sync.ProjectMaster"
						document id is  DerivedDocumentID
						variation id is DerivedBODVariationID
						accounting entity is LocalCrossAccountingEntity
				else
					send ion bod
						bod is SyncProjectMasterXMLBOD
						bod type is "Sync.ProjectMaster"
						document id is  DerivedDocumentID
						variation id is DerivedBODVariationID
						accounting entity is DerivedAccountingEntity
		
		TriggerProjectMasterNativeLPLBOD is an Instance Action
			restricted
			Parameters
				RestartFlag is Boolean
			Action Rules
				invoke NativeLPLBODTriggerChecks FSMBODConfigurationProjectMasterRel
					invoked.PrmVerb 					= 1
					invoked.PrmNoun						= "ProjectMaster"
					invoked.PrmDirection				= 1
					invoked.PrmTriggerFrom				= "Project"
					invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
					invoked.PrmMainUserTemplate 		= "IONSyncProjectMaster_Project_ST"
				LocalNativeLPLBODTrigger = FSMBODConfigurationProjectMasterRel.NativeLPLBODTrigger
				if(FinanceEnterpriseGroup.BODTrigger and LocalNativeLPLBODTrigger)
					if (DerivedConfigDocID = "Y")
						if(RestartFlag)
							if (AccountingEntityRel exists)
								initialize LocalAccountingEntity
								initialize LocalCrossReferenceValue
								initialize ProjectMasterCleanDocIDBODXML
								initialize LocalCrossAccountingEntity
								LocalAccountingEntity = FSMInboundBODTracker.Reference2
								if (DerivedConfigFEG = "Y")
									LocalCrossReferenceValue = FinanceEnterpriseGroup + DerivedDelimiter + LocalAccountingEntity
								else
									LocalCrossReferenceValue = LocalAccountingEntity
								if(DerivedTriggerCrossReference = "Y")
									if (FSMBODCrossReferenceDetailRel.DestinationValue entered)
										LocalCrossAccountingEntity = FSMBODCrossReferenceDetailRel.DestinationValue
								else
									LocalCrossAccountingEntity = LocalCrossReferenceValue
								if (LocalCrossAccountingEntity entered)
									LocalFSMInboundBODTracker		= FSMInboundBODTracker
									invoke Update FSMInboundBODTrackerRel
										invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
										invoked.BODDocumentID			= DerivedDocumentID
										invoked.BODVariationID			= DerivedBODVariationID
										invoked.Status					= 1
										invoked.StartDate				= system current timestamp
										invoked.Direction				= 1
										invoked.Reference1				= Project
										invoked.BODAccountingEntity		= LocalCrossAccountingEntity
										initialize invoked.Error			
										initialize invoked.ErrorMessage
									ProjectMasterCleanDocIDBODXML	= template.IONSyncProjectMaster_Project_CleanDocID_ST document for this instance
									invoke SendProjectMasterNativeLPLBOD
										resume on error
					                   		Error            							= true
					                        ErrorMessage     							= error message
					                if(Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 								= Error
											invoked.ErrorMessage 						= ErrorMessage
											invoked.Status								= 2
											invoked.CloseDate							= system current timestamp
											invoked.BODID								= DerivedProjectMasterBODID
											invoked.BODXML								= ProjectMasterCleanDocIDBODXML		
									else
										invoke Update FSMInboundBODTrackerRel
											invoked.Status									= 3
											invoked.CloseDate								= system current timestamp
											invoked.BODID									= DerivedProjectMasterBODID
											invoked.BODXML									= ProjectMasterCleanDocIDBODXML
						else
						if(DerivedTriggerCrossReference = "Y")
							if(FSMCleanDocIDCrossReferenceDetailRel exists)
								for each FSMCleanDocIDCrossReferenceDetailRel
									initialize ProjectMasterCleanDocIDBODXML
									initialize LocalSourceValue
									initialize LocalAccountingEntity
									initialize LocalCrossAccountingEntity
									LocalSourceValue = each.SourceValue
									if (LocalSourceValue entered)
										for each LocalSourceValue split on "<DerivedDelimiter>"
											initialize LocalAccountingEntity
											LocalAccountingEntity = each
									if(FSMCleanDocIDAccountingEntityRel exists)
										LocalCrossAccountingEntity = each.DestinationValue
										if(LocalCrossAccountingEntity entered)
											if(FSMInboundBODTracker not entered)
												invoke Create FSMInboundBODTracker
													assign result to NewBODTracker
													invoked.Verb 					= 1
													invoked.Noun 					= "ProjectMaster"					
													invoked.BODDocumentID			= DerivedDocumentID
													invoked.BODVariationID			= DerivedBODVariationID
													invoked.Status					= 1
													invoked.StartDate				= system current timestamp
													invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
													invoked.Direction				= 1
													invoked.Reference1				= Project
													invoked.BODAccountingEntity		= LocalCrossAccountingEntity
													invoked.Reference2				= LocalAccountingEntity
													initialize invoked.Error			
													initialize invoked.ErrorMessage					
												LocalFSMInboundBODTracker		= NewBODTracker.FSMInboundBODTracker
												ProjectMasterCleanDocIDBODXML	= template.IONSyncProjectMaster_Project_CleanDocID_ST document for this instance
											invoke SendProjectMasterNativeLPLBOD
												resume on error
													Error            							= true
													ErrorMessage     							= error message
											if(Error)
												invoke Update FSMInboundBODTrackerRel
													invoked.Error 								= Error
													invoked.ErrorMessage 						= ErrorMessage
													invoked.Status								= 2
													invoked.CloseDate							= system current timestamp
													invoked.BODID								= DerivedProjectMasterBODID
													invoked.BODXML								= ProjectMasterCleanDocIDBODXML
											else
												invoke Update FSMInboundBODTrackerRel
													invoked.Status								= 3
													invoked.CloseDate							= system current timestamp
													invoked.BODID								= DerivedProjectMasterBODID
													invoked.BODXML								= ProjectMasterCleanDocIDBODXML
						else
						if(DerivedTriggerCrossReference = "N")
							if (AccountingEntityRel exists)
								for each AccountingEntityRel
									initialize LocalAccountingEntity
									initialize LocalCrossAccountingEntity
									initialize ProjectMasterCleanDocIDBODXML
									LocalAccountingEntity = each.AccountingEntity
									if (DerivedConfigFEG = "Y")
										LocalCrossAccountingEntity = FinanceEnterpriseGroup + DerivedDelimiter + LocalAccountingEntity
									else
										LocalCrossAccountingEntity = LocalAccountingEntity
									if (LocalCrossAccountingEntity entered)	
										if(FSMInboundBODTracker not entered)
											invoke Create FSMInboundBODTracker
												assign result to NewBODTracker
												invoked.Verb 					= 1
												invoked.Noun 					= "ProjectMaster"					
												invoked.BODDocumentID			= DerivedDocumentID
												invoked.BODVariationID			= DerivedBODVariationID
												invoked.Status					= 1
												invoked.StartDate				= system current timestamp
												invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
												invoked.Direction				= 1
												invoked.Reference1				= Project
												invoked.BODAccountingEntity		= LocalCrossAccountingEntity
												invoked.Reference2				= LocalAccountingEntity
												initialize invoked.Error			
												initialize invoked.ErrorMessage					
											LocalFSMInboundBODTracker		= NewBODTracker.FSMInboundBODTracker
											ProjectMasterCleanDocIDBODXML	= template.IONSyncProjectMaster_Project_CleanDocID_ST document for this instance
										invoke SendProjectMasterNativeLPLBOD
											resume on error
												Error            							= true
												ErrorMessage     							= error message
										if(Error)
											invoke Update FSMInboundBODTrackerRel
												invoked.Error 								= Error
												invoked.ErrorMessage 						= ErrorMessage
												invoked.Status								= 2
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= DerivedProjectMasterBODID
												invoked.BODXML								= ProjectMasterCleanDocIDBODXML
										else
											invoke Update FSMInboundBODTrackerRel
												invoked.Status								= 3
												invoked.CloseDate							= system current timestamp
												invoked.BODID								= DerivedProjectMasterBODID
												invoked.BODXML								= ProjectMasterCleanDocIDBODXML
					else
					if(DerivedConfigDocID != "Y")
						if(FSMInboundBODTracker not entered)
							invoke Create FSMInboundBODTracker
								assign result to NewBODTracker
								invoked.Verb 					= 1
								invoked.Noun 					= "ProjectMaster"					
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedBODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.Direction				= 1
								invoked.Reference1				= Project
								invoked.BODAccountingEntity		= DerivedAccountingEntity
								initialize invoked.Error			
								initialize invoked.ErrorMessage					
							LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
						else 
							LocalFSMInboundBODTracker		= FSMInboundBODTracker
							invoke Update FSMInboundBODTrackerRel
								invoked.FinanceEnterpriseGroup	= DerivedFinanceEnterpriseGroup
								invoked.BODDocumentID			= DerivedDocumentID
								invoked.BODVariationID			= DerivedBODVariationID
								invoked.Status					= 1
								invoked.StartDate				= system current timestamp
								invoked.Direction				= 1
								invoked.Reference1				= Project
								invoked.BODAccountingEntity		= DerivedAccountingEntity
								initialize invoked.Error			
								initialize invoked.ErrorMessage
						invoke SendProjectMasterNativeLPLBOD
							resume on error
								Error            							= true
								ErrorMessage     							= error message
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 								= Error
								invoked.ErrorMessage 						= ErrorMessage
								invoked.Status								= 2
								invoked.CloseDate							= system current timestamp
								invoked.BODID								= DerivedProjectMasterBODID
								invoked.BODXML								= SyncProjectMasterXMLBOD
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp
								invoked.BODID									= DerivedProjectMasterBODID
								invoked.BODXML									= SyncProjectMasterXMLBOD
							

#endif		

#ifdef module am 	
		CreateProjectAsset is an Instance Action
			valid when (CapitalPostingInEnterpriseStructure)	
			Parameters
				PrmAsset	is an Asset
			Parameter Rules
				PrmAsset
					required
						"AssetIsRequired"
			Action Rules
				invoke Create ProjectAsset
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.Project				   = Project
					invoked.Asset			 	   = PrmAsset

		ProjectCapitalizationUpgrade is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmProject					is a Project

			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
					constraint (!PrmFinanceEnterpriseGroup.JournalNeedsFix)
						"JournalPostIsInProcess,PleaseWaitUntilPostComplete"

			Local Fields
				LocalAsyncId		is a AsyncActionRequest
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and Project = PrmProject)
			Action Rules
				Set Rules
					Entrance Rules
						invoke UpdateCapitalizationProgress PrmFinanceEnterpriseGroup in background
							run after LocalAsyncId
							assign async action request id to LocalAsyncId
							invoked.PrmCapitalizationUpgradeProgress	= 1

						invoke CreateAssetCapitalTransactions GLTransactionDetail in background
							run after LocalAsyncId
							assign async action request id to LocalAsyncId
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmProject					= PrmProject

						invoke UpdateCapitalizationProgress PrmFinanceEnterpriseGroup in background
							run after LocalAsyncId
							assign async action request id to LocalAsyncId
							invoked.PrmCapitalizationUpgradeProgress	= 2
#endif

		ValidateProjectStructure is an Instance Action
			restricted
			Parameters
		    	FinanceCodeBlock		is a FinanceCodeBlockNoRules
			Local Fields
				LocalParentProject				is a Project
				TopNodeFound					is Boolean
				InCondition						is Boolean
				StructureRuleFound				is Boolean
				ProjectStructureValidationCodeBlockView is a ProjectStructureValidationCodeBlock view
				CodeBlockString					is Text
			Action Rules
				LocalProject	= Project
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension3)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension3
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension4)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension4
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension5)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension5
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension6)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension6
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension7)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension7
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension8)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension8
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension9)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension9
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Dimension10)
					LocalStructureDimension	= FinanceCodeBlock.FinanceDimension10
				else
				if (FinanceEnterpriseGroup.StructureValidationDimension.Account)
					LocalStructureDimension	= FinanceCodeBlock.GeneralLedgerChartAccount
	
				StructureRuleFound = false
				if (ProjectStructureValidationRel exists)
					StructureRuleFound = true
				else
				if (LocalStructureDimension entered)
					LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
					TopNodeFound = false
					while (!TopNodeFound)
						if (ProjectStructureValidationRel exists
						or  LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound	   = true
						else
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
					if (ProjectStructureValidationRel exists)
						StructureRuleFound = true
					else
						LocalProject = Project
						LocalStructureDimension = blank
						if (ProjectStructureValidationRel exists)
							StructureRuleFound = true
						else
							LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
							TopNodeFound = false
							while (!TopNodeFound)
								if (ProjectStructureValidationRel exists
								or  LocalParentProject.ProjectType.Node
								or  LocalParentProject not entered)
									TopNodeFound	   = true
								else
									LocalProject 	   = LocalParentProject
									LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
							if (ProjectStructureValidationRel exists)
								StructureRuleFound = true
				else
					LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
					TopNodeFound = false
					while (!TopNodeFound)
						if (ProjectStructureValidationRel exists
						or  LocalParentProject.ProjectType.Node
						or  LocalParentProject not entered)
							TopNodeFound	   = true
						else
							LocalProject 	   = LocalParentProject
							LocalParentProject = LocalProject.ProjectInEnterpriseStructureRel.ParentProject
					if (ProjectStructureValidationRel exists)
						StructureRuleFound = true
	
				constraint (StructureRuleFound)
					"NoProjectFinanceStructureValidationRulesFoundFor<FinanceEnterpriseGroup.ProjectLabel>_<Project>"
				constraint (ProjectStructureValidationRel.ValidationCondition entered)
					"ProjectFinanceStructureValidationConditionMissingFor<LocalProject>_<LocalStructureDimension>"
				invoke Create ProjectStructureValidationCodeBlock
					assign result to ProjectStructureValidationCodeBlockView
					invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
					invoked.FinanceCodeBlock	   = FinanceCodeBlock
				if (ProjectStructureValidationCodeBlockView.ProjectStructureValidationCodeBlock within ProjectStructureValidationRel.ValidationCondition)
					InCondition = true
				else
					InCondition = false
				invoke Purge ProjectStructureValidationCodeBlockView.ProjectStructureValidationCodeBlock
				CodeBlockString = (FinanceCodeBlock.Ledger + "|" + FinanceCodeBlock.ToAccountingEntity + "|" + FinanceCodeBlock.AccountingUnit + "|" + FinanceCodeBlock.GeneralLedgerChartAccount + "|" + FinanceCodeBlock.Project + "|" + FinanceCodeBlock.FinanceDimension1 + "|" + FinanceCodeBlock.FinanceDimension2 + "|" + FinanceCodeBlock.FinanceDimension3 + "|" + FinanceCodeBlock.FinanceDimension4 + "|" + FinanceCodeBlock.FinanceDimension5 + "|" + FinanceCodeBlock.FinanceDimension6 + "|" + FinanceCodeBlock.FinanceDimension7 + "|" + FinanceCodeBlock.FinanceDimension8 + "|" + FinanceCodeBlock.FinanceDimension9 + "|" + FinanceCodeBlock.FinanceDimension10)
				constraint (InCondition)
					"FinanceStructure<CodeBlockString>Invalid;_ProjectFinanceStructureValidationRulesFor<LocalProject>_<LocalStructureDimension>Applied"

		EndAllAssignments is an Instance Action
			valid when (ProjectAssignmentsInEnterpriseStructure)		
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				AssignmentEndDate	is Date
				ProjectLaborSchedule
					default label is "LaborSchedule"			
			Parameter Rules
				PrmFinanceEnterpriseGroup			
					required
				AssignmentEndDate
					required
					initial value is current corporate date
			Action Rules
				invoke EndAllProjectAssignments ProjectAssignment
					invoked.PrmFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
					invoked.PrmProject                = Project
					invoked.PrmAssignmentEndDate      = AssignmentEndDate
					invoked.PrmProjectLaborSchedule   = ProjectLaborSchedule

	Cube Relations
		ProjectBudgetRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is BudgetCubeMap
			Dimension Mapping
				related.Scenario	                        = BudgetsScenarioRel.Scenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod	= ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure				

		ProjectBudgetAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is BudgetCubeMapAll
			Dimension Mapping
				related.Scenario	                        = BudgetsScenarioAllRel.Scenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod	= ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll				

		ProjectOrignalBudgetRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is BudgetCubeMap
			Dimension Mapping
				related.Scenario	                        = BudgetsOriginalScenarioRel.Scenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod	= ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure				

		ProjectOrignalBudgetAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is BudgetCubeMapAll
			Dimension Mapping
				related.Scenario	                        = BudgetsOriginalScenarioAllRel.Scenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod	= ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll				

		ProjectActualRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure	

		ProjectActualAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMapAll
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll

		ProjectActualURERel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeUREMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure	

		ProjectActualUREAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeUREMapAll
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll	
			
		ProjectPriorActualRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ComparisonPeriodEndDate
			dynamic preload measures are DynamicMeasure				

		ProjectPriorActualAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMapAll
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ComparisonPeriodEndDate
			dynamic preload measures are DynamicMeasureAll				

		ProjectPriorActualURERel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeUREMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ComparisonPeriodEndDate
			dynamic preload measures are DynamicMeasure				

		ProjectPriorActualUREAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeUREMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.ActualsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ComparisonPeriodEndDate
			dynamic preload measures are DynamicMeasureAll				

		ProjectEncumbranceRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.EncumbrancesScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure				

		ProjectEncumbranceAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMapAll
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.EncumbrancesScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll				

		ProjectCommitmentRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMap
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.CommitmentsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsRel.ReportingDate
			dynamic preload measures are DynamicMeasure				

		ProjectCommitmentAllRel
			cell relation to GeneralLedgerTotal

			dynamic mapping is ActualCubeMapAll
			Dimension Mapping
				related.Scenario	                        = FinanceEnterpriseGroup.CommitmentsScenario
				related.GeneralLedgerTotal.Ledger	        = ProjectReportingSettingsAllRel.Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod = ProjectReportingSettingsAllRel.ReportingDate
			dynamic preload measures are DynamicMeasureAll				
			
