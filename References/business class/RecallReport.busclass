RecallReport is a BusinessClass
    owned by recall
    prefix is RMRep

    Ontology
    	symbolic key is RecallReport
    
    Patterns
    	disable Auditing		
        disable EffectiveDated	
    
    Persistent Fields
    	Name						is a Description
		Frequency					is Numeric size 2
    		States
    			Weekly					value is 7
    			BiWeekly				value is 14
    			Monthly					value is 1
    			BiMonthly				value is 2
    			Quarterly 				value is 3
		NumberOfPeriods				is Numeric size 2
		IncludeCurrent				is Boolean
		EndDate						is Date

	Local Fields
		LocalSequence				is Numeric 3
		CurrDate					is Date
		TempDate					is Date
		AdjustMonth					is Numeric 2
		NumberOfMonths				is Numeric 5
		NumberOfDays				is Numeric 5
		
	Derived Fields
			
		ReportFromDate is a DerivedField
			type is Date
			if (RecallReport = 0)
				return current corporate date
			else
			if (FrequencyInDays)
				if (EndDate entered)
					CurrDate = EndDate
				else
					CurrDate = current corporate date

				if (IncludeCurrent
				or  EndDate entered)
					NumberOfDays = ((NumberOfPeriods * Frequency) + CurrDate week day - 8)
				else
					NumberOfDays = ((NumberOfPeriods * Frequency) + CurrDate week day - 1)

				return (CurrDate - NumberOfDays as days)
			else
				if (EndDate entered)
					CurrDate = EndDate
				else
					CurrDate = current corporate date
				NumberOfDays = CurrDate day - 1

				if (Frequency.Monthly)
					AdjustMonth = 1
				else
					AdjustMonth = CurrDate month
					while (AdjustMonth > Frequency)
						AdjustMonth -= Frequency

				NumberOfMonths = NumberOfPeriods * Frequency + (AdjustMonth - 1)

				if (IncludeCurrent
				or  EndDate entered)
					NumberOfMonths -= Frequency
				
				return (CurrDate - NumberOfDays as days - NumberOfMonths as months)

		ReportThruDate is a DerivedField
			type is Date


			if (RecallReport = 0) 
				return current corporate date
			else
			if (FrequencyInDays)
				if (EndDate entered)
					CurrDate = EndDate
				else
					CurrDate = current corporate date

				if (IncludeCurrent
				or  EndDate entered)
					NumberOfDays = (7 - CurrDate week day)
					return CurrDate + NumberOfDays as days
				else
					NumberOfDays = CurrDate week day
					return CurrDate - NumberOfDays as days
			else
				if (EndDate entered)
					CurrDate = EndDate
				else
					CurrDate = current corporate date

				NumberOfMonths = 0
				
				if (Frequency.Monthly)
					NumberOfMonths += 1
				else
					AdjustMonth = CurrDate month
					while (AdjustMonth > Frequency)
						AdjustMonth -= Frequency
					NumberOfMonths += AdjustMonth

				if (IncludeCurrent
				or  EndDate entered)
					NumberOfMonths -= Frequency

				TempDate = CurrDate - NumberOfMonths as months
				NumberOfDays = TempDate days in month - TempDate day 

				return (TempDate + NumberOfDays as days)
							
		ReleaseDateNoticeCount is a DerivedField
			type is Numeric 5
			restricted
			default label is "NoticeCount"
			return (instance count of RecallNoticeReleasedDateRel)

	Conditions
		FrequencyInDays
			restricted
			when (Frequency.Weekly
			or    Frequency.BiWeekly)

		RecallReportExists
			restricted
			when (RecallReport exists)
			
		MoreThan3Periods
			restricted
			when (NumberOfPeriods > 3)

		MoreThan4Periods
			restricted
			when (NumberOfPeriods > 4)

		MoreThan5Periods
			restricted
			when (NumberOfPeriods > 5)

		MoreThan6Periods
			restricted
			when (NumberOfPeriods > 6)

		MoreThan7Periods
			restricted
			when (NumberOfPeriods > 7)

		MoreThan8Periods
			restricted
			when (NumberOfPeriods > 8)

		MoreThan9Periods
			restricted
			when (NumberOfPeriods > 9)

		MoreThan10Periods
			restricted
			when (NumberOfPeriods > 10)

		MoreThan11Periods
			restricted
			when (NumberOfPeriods > 11)

	Relations

		RecallNoticeReleasedDateRel is a RecallNotice set
    		Instance Selection
				where (related.ApplicableRecallNotice
				and    related.ReleasedTimestamp >= ReportFromDate
				and    related.ReleasedTimestamp <= ReportThruDate)

		RecallUserRel 					is a RecallUser set
		
		RecallCoordinatorRel			is a RecallUser set
			Instance Selection
				where (related.IsRecallCoordinator)
		
		ManufacturerRel					is a Manufacturer set

		OrganizationRel					is a RecallOrganization set
		
		RecallTypeRel					is a RecallType set
				
		Period1Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 1
				
		Period2Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 2

		Period3Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 3

		Period4Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 4

		Period5Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 5

		Period6Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 6

		Period7Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 7

		Period8Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 8

		Period9Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 9

		Period10Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 10

		Period11Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 11

		Period12Rel
			one-to-one relation to RecallReportPeriod
			Field Mapping uses symbolic key
				related.RecallGroup             = RecallGroup
				related.RecallReport			= RecallReport
				related.RecallReportPeriod		= 12

	Sets
		
		ByName
			indexed
			Sort Order
				Name
				RecallReport

	Rule Blocks
		
		CreateDetail
			invoke Purge RecallReportPeriod set 
	
			LocalSequence = NumberOfPeriods
				
			while (LocalSequence > 0)
				invoke Create RecallReportPeriod
					invoked.RecallGroup             = RecallGroup
					invoked.RecallReport			= RecallReport
				LocalSequence -=1
	
	Field Rules
		Name
			required
		Frequency
			required
		NumberOfPeriods
			required
			constraint (NumberOfPeriods !> 12)
				"MaximumOf12Periods"
			constraint (NumberOfPeriods >= 0)
				"MustEnterAPositiveValueForNumberOfPeriods"
		IncludeCurrent
			if (EndDate entered)
				constraint (!IncludeCurrent)
					"CannotSelectEndDateAndIncludeCurrentPeriodAtSameTime"
		EndDate
			if (EndDate entered)
				constraint (!IncludeCurrent)
					"CannotSelectEndDateAndIncludeCurrentPeriodAtSameTime"
				if (FrequencyInDays)
					constraint (EndDate week day = 7)
						"EndDateMustBeOnSaturdayForThisFrequency"
				else
					constraint (EndDate day = EndDate days in month)
						"MustSelectLastDayOfMonthForThisFrequency"
						
				if (Frequency.Quarterly)
					constraint (EndDate month = 3 
					    or EndDate month = 6 
					    or EndDate month = 9
					    or EndDate month = 12)
						"MustChoose_March,_June,_SeptemberOr_DecemberForThisFrequency"
				else
				if (Frequency.BiMonthly)
					constraint (EndDate month = 2 
						or EndDate month = 4 
					    or EndDate month = 6
					    or EndDate month = 8
					    or EndDate month = 10
					    or EndDate month = 12)
						"MustChooseEvenNumberedMonthForThisFrequency"

	Actions

		Create is an Action
			Exit Rules
				include CreateDetail
		
		Update is an Action
			Exit Rules
				include CreateDetail
		
		Delete is an Action 
			Action Rules
		
		Purge is a Purge Action
			restricted
			Action Rules

