PayablesInvoiceSpeedEntry is a BusinessClass
    owned by ap
    prefix is APSE

    Ontology
        symbolic key is PayablesInvoiceSpeedEntry

    Patterns
    	implements InlineUserFields
			size is 1000
        implements StaticJava
		enable explicit context override        
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
       	disable DataTranslations
		

    Persistent Fields


		InvoiceType					  	is a PayablesInvoiceType
		Company						  	is a PayablesCompany
		ProcessLevel                  	is a PayablesProcessLevel
		Vendor
		VendorSearchName              	is a VendorName 
			holds pii
		Invoice
			default label is "InvoiceNumber"
		Description
		InvoiceDate                   	is an ExchangeDate
		DueDate
		InvoiceCurrency               	is a FromCurrency
		InvoiceAmount                 	is an InternationalAmount
		    default label is "InvoiceAmount"
		TermsCode
		PayVendor
		RemitToCode						is a VendorLocation
            context of PayVendor
            default label is "RemitToLocation"
		Location						is an InventoryLocation       
			default label is "ShipToLocation"


		DistributionCode				is a PayablesDistributionCode
		RoutingCategory					is an InvoiceRoutingCategory
			default label is "InvoiceRoutingCategory"
		AccrualCode						is a PayablesAccrualCode
		ApprovalCostCenter				is like AccountingUnit
		ApprovalCategory				
		BypassMatch						is Boolean
			default label is "AllowItemDetail"
		ExternalPurchaseOrder			is Alpha size 22 
		DistributionDate				is a PostingDate  
			default label is "PostDate"
		ForIntercompanyBilling			is Boolean


		TaxableAmount					is an InternationalAmount
		TaxAmount						is an InternationalAmount
		TaxCode
		TransientLineTax				is Boolean
			default label is "LinkTaxOnDistributions"
		TaxAdjustment
		

		FirstPurchaseOrder				is a PurchaseOrder
        	default label is "PurchaseOrder"
		TransientAddOnChargeOnly		is Boolean
			default label is "AddOnChargeOnly"
		CostComponentMatch				is Boolean
		TransientCreateDetails			is Numeric 1
 			default label is "CreateDetails"
 			States

 				FromPurchaseOrder				value is 2
 				FromReceipt						value is 3
				FromReceiptThenFromPO			value is 4
		

		ServiceContract					is a Contract


		IncomeCode						is a PayablesIncomeCode
			default label is "DefaultIncomeCode"
		TransientReportableAmount		is an InternationalAmount
			default label is "ReportableIncomeAmount"
		DiversityCode					is a PayablesDiversityCode
		AuthorityCode					is a PayablesAuthorityCode
		RetainageAccrualCode			is a PayablesAccrualCode
		TransientTaxCategory			is a ProductTaxCategory
        	default label is "TaxCategory"
		InvoiceReference				is a PayablesReferenceType
		ReceiptOfInvoiceDate			is Date
		CurrencyTable
		FunctionalAmountOverride		is an InternationalAmount
		ForeignEconomicRegulatoryCode
		

		CashCode
		BankTransactionCode
        	default label is "PaymentCode"
		VendorPaymentAmount				is an InternationalAmount
		VendorPaymentCurrency			is a Currency
		TransientPaymentNumber			is a TransactionNumber
			default label is "PaymentNumber"
		TransientPaymentDate			is Date
			default label is "PaymentOrDueDate"
		TransientPaymentAmount			is an InternationalAmount
			default label is "PaymentAmount"
		TransientVendorPriority			is a PaymentPriority
			default label is "VendorPriority"
		InvoiceGroup					is a PayablesInvoiceGroup		
		TransientSeparateCheckFlag		is a BooleanOverride
			default label is "SeparatePayment"
		TransientPayImmediately			is a BooleanOverride
			default label is "PayImmediately"
		TransientEnclosure				is a BooleanOverride
 			default label is "Enclosure"
		SecondaryWithholding			is Boolean
		RecurringFrequency
		NumberOfRecurringInvoices		is Numeric size 3

        

		FinanceCodeBlock				is a TransactionCodeBlock
			default label is "FinanceStructure" 
		ExpenseAmount					is an InternationalAmount
			default label is "DistributionAmount"


		TaxAccountingEntity				is like ToAccountingEntity  
		TaxIndicator
		DistributionTaxCode				is a TaxCode
		DistributionTaxableAmount		is an InternationalAmount
		TaxUsageCode
		AddOnCharge
		ICNCode				


		DocumentID						is AlphaUpper 100
    	RelatedDocumentDescription		is Alpha size up to 500
    		default label is "Description"
		Attachment


		Status							is Numeric size 1
			restricted
			States
				Created		value is 0
				InProcess	value is 1
				Processed	value is 2
		ErrorMessage					is Text				
		UnitAmount 						is an InternationalAmount





	Local Fields
		AccountRequiresUnits		is Boolean		
		LocalContinue				is Boolean
		
	Transient Fields
		InvoiceTypeForExpense                is AlphaUpper size 1
			derive value from DerivedInvoiceType
            States
                Invoice             value is "I"	
                CreditMemo          value is "C"
                DebitMemo           value is "D"
                Prepayment       	value is "P"
		UnitsAmount									
			derive value from DerivedUnitsAmount
		BypassDefaultTaxIndicator	is Boolean		

	Field Rules
		Actor
			initial value is actor
			force default to actor
		
		InvoiceCurrency
			default to Vendor.InvoiceCurrency
			default to Vendor.VendorClass.Currency
			default to Company.Currency
		
		Vendor
			if (VendorSearchName entered)
				default to first VendorSearchNameRel.Vendor
			default to last PreviousEntryRel.Vendor
			if (Vendor changed)					
				PayVendor = Vendor.PayVendor
		
		VendorSearchName
			initial value is PreviousEntryRel.VendorSearchName
			default to Vendor.VendorSearchName
			if (Vendor entered
			and Vendor.VendorSearchName != VendorSearchName)
				VendorSearchName = Vendor.VendorSearchName
				
		InvoiceType
			initial value is PreviousEntryRel.InvoiceType
			default to InvoiceType.Invoice
			if (InvoiceTypeForExpense.Invoice)
				InvoiceType = blank
			else
				InvoiceType = InvoiceTypeForExpense		
		
		Company
			initial value is PreviousEntryRel.Company
			default to last PreviousEntryRel.Company
		
		ProcessLevel
			initial value is PreviousEntryRel.ProcessLevel
			default to last PreviousEntryRel.ProcessLevel
		
		Invoice
			initial value is PreviousEntryRel.Invoice
			default to last PreviousEntryRel.Invoice
		
		InvoiceDate
			initial value is PreviousEntryRel.InvoiceDate		
			default to last PreviousEntryRel.InvoiceDate		

		DistributionDate
			if (Company.VendorGroup.InvoicePostDateDefaultOption.CurrentDate)	
				default to current corporate date								
			default to InvoiceDate												

		InvoiceAmount	
			if (action type.Create)
				if (InvoiceType.CreditMemo
				and InvoiceAmount > 0)
					InvoiceAmount *= -1
				else
				if (!InvoiceType.CreditMemo
				and InvoiceAmount < 0)
					InvoiceAmount *= -1
			
			if (action type.Update)
				if (!old InvoiceType.CreditMemo
				and InvoiceTypeForExpense.CreditMemo
				and InvoiceAmount > 0)
					InvoiceAmount *= -1
				else
				if (old InvoiceType.CreditMemo
				and !InvoiceTypeForExpense.CreditMemo
				and InvoiceAmount < 0)
					InvoiceAmount *= -1
						
		TaxableAmount	
			if (InvoiceType.CreditMemo
			and TaxableAmount > 0)
				TaxableAmount *= -1

		TaxAmount	
			if (InvoiceType.CreditMemo
			and TaxAmount > 0)
				TaxAmount *= -1

		FunctionalAmountOverride
			if (InvoiceType.CreditMemo
			and FunctionalAmountOverride > 0)
				FunctionalAmountOverride *= -1

        FinanceCodeBlock
        	if  (InvoiceType.Prepayment
        	or   InvoiceTypeForExpense.Prepayment)
        		cannot be entered
        			"FinanceStructureCannotBeEnteredForPrepayment"
			if (FinanceCodeBlock.GeneralLedgerChartAccount.AllowUnits.Required)
				AccountRequiresUnits = true
        		
        ExpenseAmount
        	if  (InvoiceType.Prepayment
        	or   InvoiceTypeForExpense.Prepayment)
        		cannot be entered
        			"ExpenseAmountCannotBeEnteredForPrepayment"
		
		PayVendor
			initial value is Vendor.PayVendor
			default to Vendor.PayVendor

	Conditions
		IsCreated
			when (Status.Created)
			
		IsNotDone
			when (!Status.Processed)

		IsInError
			when (ErrorMessage entered)

		PayablesInvoiceRelExists
			when (PayablesInvoiceRel exists)
			
		ErrorExists
			when (ErrorMessage entered)
		
		VendorSearchNameRelExists
			when (VendorSearchNameRel exists)

		RecordExists
			restricted
			when (PayablesInvoiceSpeedEntry exists)

		ShowDistributionsPanel
			when (RecordExists
			and   !InvoiceType.Prepayment
			and   !InvoiceType.PrepaymentCredit)
		
		ShowMyCreatedRecords
			when (IsCreated
			and   Actor = actor)
		
		AttachmentExists
			restricted
			when (RecordExists
			and   Attachment.File entered)
		
		IsFirstEntry
			restricted
			when (PayablesInvoiceSpeedEntry = SpeedEntryDistributionsRel.PayablesInvoiceSpeedEntry)
		
		CanAttachDocument
			restricted
			when (IsFirstEntry
			and   !AttachmentExists)
			
		CanChangeAttachedDocument
			restricted
			when (IsFirstEntry
			and   AttachmentExists)
			
    Derived Fields
		VendorSearchNameWildcard is a DerivedField 
			type is like VendorName
			holds pii
			return "*" + VendorSearchName + "*"

		DistribErrorMessage is a MessageField
			restricted
			"InvoiceRecordMustBeProcessedBeforeDistribution"
			
		InvoiceIsReleasedMessage is a MessageField 
        	"SpeedEntryInvoiceNotProcessed._ThisInvoiceAlreadyExistsInReleasedStatus."	

		InvoiceExistsMessage is a MessageField 
        	"SpeedEntryInvoiceNotProcessed._ThisInvoiceAlreadyExists."	
		
		DerivedInvoiceType is a DerivedField	
			type is like PayablesInvoiceType
			restricted
			if (InvoiceType.Invoice)
				return "I"
			else
				return InvoiceType
		
		DerivedUnitsAmount is a DerivedField		
			type is like UnitsAmount
			restricted
			return UnitAmount

		DerivedPositiveTaxableAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (TaxableAmount < 0)
				return (TaxableAmount * -1)
			else
				return TaxableAmount

		DerivedPositiveDistributionAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (ExpenseAmount < 0)
				return (ExpenseAmount * -1)
			else
				return ExpenseAmount

	Relations
		VendorSearchNameRel
        	one-to-many relation to Vendor
        	Field Mapping uses Set5
        		related.VendorGroup				= Company.VendorGroup
        	Instance Selection
        		where (related.VendorSearchName	like VendorSearchNameWildcard
        		and    related.VendorStatus		= "A")
							
		PreviousEntryRel
        	one-to-many relation to PayablesInvoiceSpeedEntry
        	Field Mapping uses ByActor
        		related.Actor				= actor
        	Instance Selection
        		where (related.Status		= Status.Created
				and    related.UniqueID		!= UniqueID)
		
		PayablesInvoiceRel
			one-to-many relation to PayablesInvoice
        	Field Mapping uses ByCompanyVendorInvoice
        		related.Company				= Company
        		related.Vendor				= Vendor
        		related.Invoice				= Invoice
        	Instance Selection
        		where (related.Status	   != 6 
				and	   related.InvoiceDate = InvoiceDate)

		SpeedEntryDistributionsRel
        	one-to-many relation to PayablesInvoiceSpeedEntry
        	Field Mapping uses RelatedRecords
        		related.Actor				= actor
        		related.Company				= Company
        		related.Vendor				= Vendor
        		related.Invoice				= Invoice
		
	Sets
		ByActor
			Sort Order
				Actor
				Company
				PayablesInvoiceSpeedEntry
		
		RelatedRecords
			Sort Order
				Actor
				Company
				Vendor
				Invoice
				PayablesInvoiceSpeedEntry
		
		ByVendorInvoice
			Sort Order
				Company
				Vendor
				Invoice
				PayablesInvoiceSpeedEntry


	Rule Blocks
		TaxIndicatorDefaultProcess			
			if (!BypassDefaultTaxIndicator
			and TaxCode					entered)
				if   (TaxIndicator			!entered
				and ((TaxableAmount			 entered
				and   DerivedPositiveTaxableAmount	<= DerivedPositiveDistributionAmount)
				or   (TaxableAmount			!entered
				and  ExpenseAmount entered)))
					if  (DistributionCode entered
					and !TransientLineTax)
						LocalContinue = true
					else
						if (Vendor.DefaultTaxIndicator	entered)
							TaxIndicator = Vendor.DefaultTaxIndicator
						else
							if (Vendor.VendorClass.DefaultTaxIndicator	entered)
								TaxIndicator = Vendor.VendorClass.DefaultTaxIndicator
	Actions
		Create is a Create Action
			Entrance Rules
				include TaxIndicatorDefaultProcess		

		AttachDocument is an Instance Action
			valid when (CanAttachDocument)
			Parameters
				PrmDocumentID	is AlphaUpper 100
					default label is "DocumentID"
				PrmAttachment	is an Attachment
					default label is "Attachment"
		    	PrmDescription 	is Alpha size up to 500
					default label is "Description"
			Action Rules
				DocumentID					= PrmDocumentID
				Attachment					= PrmAttachment
				RelatedDocumentDescription	= PrmDescription
		
		RemoveAttachedDocument is an Instance Action
			valid when (AttachmentExists)
			Action Rules
				DocumentID					= blank
				Attachment					= blank
				RelatedDocumentDescription	= blank
		

		Process is a Set Action

			completion message is "SpeedEntryRecordsAreBeingProcessed"
			run in foreground
			
			Parameters
				ReleaseInvoices		is Boolean
					default label is "Submit_/ReleaseInvoiceWhenValid"

			Instance Selection
				where ((Status.Created
				or     Status.InProcess)
				and    Actor = actor)

			Sort Order
				Company
				Invoice
				PayablesInvoiceSpeedEntry
				
			Action Rules
				Set Rules
					Exit Rules
						invoke ProcessInBackground
							invoked.ReleaseInvoices = ReleaseInvoices
							invoked.PrmActor = actor

				Instance Rules
					Status			= Status.InProcess
					ErrorMessage	= blank


		ProcessByActor is a Set Action	

			completion message is "SpeedEntryRecordsAreBeingProcessed"
			run in foreground
			
			Parameters
				ReleaseInvoices		is Boolean
					default label is "Submit_/ReleaseInvoiceWhenValid"
				PrmActor			is an Actor
					default label is "Actor"

			Instance Selection
				where ((Status.Created
				or     Status.InProcess)
				and    Actor = PrmActor)

			Sort Order
				Company
				Invoice
				PayablesInvoiceSpeedEntry
				
			Action Rules
				Set Rules
					Exit Rules
						invoke ProcessInBackground
							invoked.ReleaseInvoices = ReleaseInvoices
							invoked.PrmActor        = PrmActor

				Instance Rules
					Status			= Status.InProcess
					ErrorMessage	= blank


		ProcessInBackground is a Set Action

			restricted
			run in background
			allow unlimited concurrency
			synchronized on "<actor>PayablesInvoiceSpeedEntry"
			
			Parameters
				ReleaseInvoices		is Boolean
				PrmActor			is an Actor	

			Instance Selection
				where (Status.InProcess
				and    Actor = PrmActor)	

			Sort Order
				Company
				Vendor
				Invoice
				PayablesInvoiceSpeedEntry
				
			Local Fields
				NewPayablesInvoice				is a PayablesInvoice view
				NewPayablesInvoiceDistribution	is a PayablesInvoiceDistribution view
				LocalActor						is an Actor		
				
			Action Rules
				Set Rules
					Exit Rules
						invoke PurgeProcessedRecords
							invoked.PrmActor = PrmActor	
						LocalActor	= PrmActor		
						send notification
							to LocalActor
							description is "SpeedEntryInvoicesHaveBeenProcessed."
							priority is high
							detail is "SpeedEntryInvoicesHaveBeenProcessed.SpeedEntryErrorsMayExist."
							
				Invoice Set Rules
					Exit Rules
						if (ReleaseInvoices
						and !NewPayablesInvoice.PayablesInvoice.ErrorsExists)
							if (NewPayablesInvoice.PayablesInvoice.ReleaseActionValid)
								invoke Unreleased.Release NewPayablesInvoice.PayablesInvoice
									resume on error
							else
								if (NewPayablesInvoice.PayablesInvoice.SubmitActionValid)
									invoke Unreleased.RestrictedSubmitForApproval NewPayablesInvoice.PayablesInvoice
										resume on error

				Instance Rules
					if (PayablesInvoiceRelExists)
						NewPayablesInvoice = first PayablesInvoiceRel.PayablesInvoice
						if (NewPayablesInvoice.Status.Unreleased)
							ErrorMessage = blank
						else
							if (NewPayablesInvoice.Status.Released)
								ErrorMessage = InvoiceIsReleasedMessage
							else
								ErrorMessage = InvoiceExistsMessage
					else
						if (InvoiceAmount entered)
							invoke Unreleased.CreateInvoice PayablesInvoice
								resume on error
									ErrorMessage	= error message
								assign result to NewPayablesInvoice
								fill in fields from this instance
									except invoked.InvoiceAmount
									except invoked.Status
									except invoked.MatchProcessType
									except invoked.FirstPurchaseOrder
									except invoked.InvoiceTypeForExpense	
								invoked.InvoiceAmount.CurrencyAmount							= InvoiceAmount
								invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyAmount 	= FunctionalAmountOverride
								if (InvoiceType.MatchPrepayment)
									invoked.FirstPurchaseOrder									= FirstPurchaseOrder
								else
									invoked.FirstPurchaseOrder									= blank
								invoked.OverrideSeparatePayment		= TransientSeparateCheckFlag
								invoked.OverridePayImmediately		= TransientPayImmediately
								invoked.OverrideEnclosure			= TransientEnclosure

						else
							ErrorMessage = DistribErrorMessage
					
					if (!IsInError)
						if (FinanceCodeBlock entered)
							invoke Create PayablesInvoiceDistribution
								resume on error
									ErrorMessage	= error message
								assign result to NewPayablesInvoiceDistribution
								fill in user fields from this instance
								invoked.Company					= Company
								invoked.Vendor					= Vendor
								invoked.PayablesInvoice			= NewPayablesInvoice.PayablesInvoice
								invoked.DistributionType 		= "D"
								invoked.GLTSystem				= "AP"
								invoked.TransactionDate			= InvoiceDate

								invoked.PostingOption			= Vendor.VendorClass.PostingOption
								invoked.InvoiceCurrency			= InvoiceCurrency
								invoked.GLTCurrencyCode			= InvoiceCurrency
								invoked.DistributionAccount		= FinanceCodeBlock
								invoked.GLFinanceCodeBlock		= FinanceCodeBlock
								invoked.GLTransactionAmount 	= ExpenseAmount
								invoked.TaxAccountingEntity		= TaxAccountingEntity
								invoked.TaxIndicator			= TaxIndicator
								invoked.TaxCode					= DistributionTaxCode
								invoked.TaxableAmount			= DistributionTaxableAmount
								invoked.TaxUsageCode			= TaxUsageCode
								invoked.AddOnCharge				= AddOnCharge
								invoked.ICNCode					= ICNCode		
								invoked.UnitAmount				= UnitAmount

					if (!IsInError)
						if (Attachment.File entered)
							invoke Create PayablesInvoiceDocument
								resume on error
									ErrorMessage	= error message
								fill in fields from NewPayablesInvoice.PayablesInvoice
								invoked.DocumentID				= DocumentID
								invoked.Description				= RelatedDocumentDescription
								invoked.DocumentType			= 1
								invoked.Attachment.File			= Attachment.File

					if (!IsInError)
						Status = Status.Processed
					else
						Status = Status.Created


		PurgeProcessedRecords is a Set Action

			restricted
			run in background
			allow unlimited concurrency
			synchronized on "<actor>PayablesInvoiceSpeedEntry"
			Parameters	
				PrmActor	is an Actor
			Instance Selection
				include deleted records
				where (Status.Processed
				and    Actor = PrmActor)	
			Sort Order
				Company
				Invoice
				PayablesInvoiceSpeedEntry
				
			Action Rules
				Instance Rules
					invoke Purge


		Update is an Update Action

		Delete is a Delete Action
		
		Purge is a Purge Action
			restricted
			
