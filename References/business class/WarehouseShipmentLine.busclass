WarehouseShipmentLine is a BusinessClass
    owned by wh
    prefix is WHL
    classic name is WHSHIPLINE

    Ontology
        symbolic key is WarehouseShipmentLine
            classic set name is WHLSET1
            classic name is LINE-NBR
            classic name for InventoryLocation is LOCATION
            classic name for WarehouseShipment is SHIPMENT-NBR

    Patterns
        implements ContextualParent
        implements StaticJava
        disable AuditIndex
		implements Archivable

    Persistent Fields

        LineType                        is AlphaUpper size 1
        	protected
            States
                InventoriedItem value is "I"
                NonstockItem    value is "N"
                SpecialItem     value is "X"
        Item
        Description

        PrintedQuantity                 is a Quantity
        	protected
            classic name is PRINTED-QTY
			precision is Item.NumberOfDecimalsQuantity
        TransactionUOM                  is a UnitOfMeasure
        	protected
            classic name is TRAN-UOM
        TransactionUOMMultiplier        is an UOMMultiplier
        	protected
            classic name is TRAN-UOM-MULT
        InProcessQuantity               is an  UnsignedQuantity
        	protected
            classic name is IN-PROCESS-QTY
			precision is Item.NumberOfDecimalsQuantity
        ShippedQuantity                 is a Quantity
        	protected
            classic name is SHIPPED-QTY
			precision is Item.NumberOfDecimalsQuantity
        DeliveredQuantity
        	protected
            classic name is DELIVERED-QTY
			precision is Item.NumberOfDecimalsQuantity
        CatchWeightQuantity             is a Quantity 
            classic name is CATCH-WT-QTY
			precision is Item.NumberOfDecimalsQuantity
        PreAssembledKitQuantity         is a Quantity
            classic name is PRE-ASMBLD-KIT
			precision is Item.NumberOfDecimalsQuantity
        KitComponentQuantity            is a Quantity
            classic name is KIT-COMP-QTY
			precision is Item.NumberOfDecimalsQuantity
        DetailQuantity                  is a Quantity
            classic name is DETAIL-QTY
			precision is Item.NumberOfDecimalsQuantity
        DetailCatchWeightQuantity       is a Quantity
            classic name is DTL-CTW-QTY
			precision is Item.NumberOfDecimalsQuantity
        DetailRequired                  is Boolean
        	protected
            classic name is DETAIL-REQ
        WalkThruRequired                is Boolean
            classic name is WALK-THRU-REQ
        UnitCost                        is an UnsignedUnitCost
        	precision is Item.NumberOfDecimalsCost
        StockWeight
            classic name is WEIGHT
        StockVolume
            classic name is CUBIC-FEET
        MSDSRequired                    is Boolean
            classic name is MSDS-REQ-FL
        MSDSDate                        is Date
            classic name is MSDS-DT
        MSDSDocument
        MSDSVersion
        OperatorID						is an Operator 
        	holds pii
            classic name is OPR-CODE
        UpdateDate                      is TimeStamp
        FullVoid                        is Boolean
            classic name is FULL-VOID-FL
        RequestingDocument
            classic name for RequestingDocument.RequestingCompany is REQ-COMPANY
            classic name for RequestingDocument.DemandSystemCode is SYSTEM-CD
            classic name for RequestingDocument.DocumentNumber is DOC-NBR
        SupplementaryUOM				is a UnitOfMeasure
        SupplementaryQuantity           is a Quantity
            classic name is SUPLMNTARY-QTY
			precision is Item.NumberOfDecimalsQuantity
        ICNCode
        RequisitionInterfaceInformation
            classic name for RequisitionInterfaceInformation.SurgerySystemSource is RQSRC-MACHINE
            classic name for RequisitionInterfaceInformation.SurgerySystemRequisitionReference is PAR-ORDER-ID
        GlobalLineType
            classic name is GLBL-LINE-TYPE
        ItemLocation
        HSNSACCode


        Status                        is Numeric size 1
        	protected
            States
                Unreleased                 value is 0
                Released                   value is 1
		

		ShortPickAction					is AlphaUpper size 1
			States
				Kill                        value is "K"
                BackOrderFill               value is "F"
		MobilePickQuantity				is a Quantity
		MobilePickQuantityUOM			is a UnitOfMeasure
		TrackingNumber


	Context Fields
		AuditDateRange					is a DateRange
		ShipmentLoadConsolidation

	Local Fields
		LocalActionUndo              	is Boolean
		LocalAudit						is like WarehouseShipmentLineAudit
		LocalBackorderedQuantity		is like Quantity
		LocalBackorderQuantity			is like Quantity
		LocalVoidedQuantity				is like Quantity
		LocalInputQuantity				is like Quantity
		LocalInProcessQuantity			is like Quantity
		LocalPrintedQuantity			is like Quantity
		LocalOpenQuantity				is like Quantity
		LocalStockOnHandQuantity		is like Quantity
		LocalComponentSequence 			is a WarehouseSequence
		LocalItem						is like Item
		LocalStockVolume				is a StockVolume
		LocalStockWeight				is a StockWeight
		LocalShipment					is like WarehouseShipment
		LocalShipmentLine				is like WarehouseShipmentLine
		LocalInventoryTransaction     	is an InventoryTransaction
		LocalInventoryTransactionLine 	is like InventoryTransactionLine
		NewInventoryTransactionLine		is an InventoryTransactionLine view
    	UOMCalculation
		LocalIntrastatProcessing		is an IntrastatProcessing
		LocalGLFinanceCodeBlock			is a TransactionCodeBlock
		LocalGLTranAmount               is an InternationalAmount
		LocalTotalTransactionAmount     is an InternationalAmount
		LocalOriginalShippedQuantity    is an InternationalAmount
		LocalTotalDistributionAmount    is an InternationalAmount
		LocalRemainingQuantityToBeDistributed is an InternationalAmount
		LocalGLUnitsAmount				is a UnitsAmount
		LocalTotalUnitsAmount			is a UnitsAmount
		LocalTotalDistributionUnitsAmount is a UnitsAmount
		LocalDistributionQuantity		is like Quantity
		LocalVariancePercent			is like CatchWeightVariancePercent
		LocalPostingType				is AlphaUpper size 2
            States
                Inventory           	value is "I1"
                Offset              	value is "O1"
		InventoryCostDefault
		LocalUDIDetailQuantity			is like Quantity


        LocalDelimiter					is Alpha size 5
        LocalAccountingEntity			is Alpha size 100
        LocalRefDocNumber				is Alpha size 10
        LocalFinanceEnterpriseGroup		is Alpha size 5
        LocalConfigurationParameter		is Alpha size up to 200


		LocalTrackingNumber								is a TrackingNumber
		LocalLot										is a ItemLot
		LocalSublot										is a Sublot
		LocalSerial										is a ItemSerialNumber
		LocalDeliveryQuantity							is a Quantity
		LocalUnitOfMeasure								is a UnitOfMeasure
		LocalMobileSupplyChainDeliveryTicket			is like MobileSupplyChainDeliveryTicket
		LocalMobileSupplyChainDeliveryUnit       		is like MobileSupplyChainDeliveryUnit
		LocalDeliveryLineCount							is Numeric size 6
		LocalLotExpirationDate							is Date
		LocalReportPrinter								is a MobileSupplyChainPrinter
		LocalLabelPrinter								is a MobileSupplyChainPrinter

    Transient Fields


    	TransientPreAssembledQuantity	is like Quantity
    		derive value from DerivedPreAssembledKitQuantity

    Rule Blocks
		AssignForShipmentLineAudit
			if (LocalActionUndo)
				if (WarehouseShipment.Status.Shipped)
					LocalAudit = 3
				else
				if (WarehouseShipment.Status.Packed)
					LocalAudit = 2
				else
					if (WarehouseShipment.Status.Picked)
						LocalAudit = 1
			else
				if (WarehouseShipment.Status.Printed)
					if (WarehouseShipment.RequirePickingFeedback)
						LocalAudit = 1
					else
					if (WarehouseShipment.IsOnlyPackingRequired)
						LocalAudit = 2
					else
						LocalAudit = 3
				else
				if (WarehouseShipment.Status.Picked)
					if (WarehouseShipment.RequirePackingFeedback)
						LocalAudit = 2
					else
						LocalAudit = 3
				else
					if (WarehouseShipment.Status.Packed)
						LocalAudit = 3

  		UOMConversionFromStockUOM
			initialize UOMCalculation
			UOMCalculation.InputUOM    	 = Item.StockUOM
			UOMCalculation.InputToUOM  	 = TransactionUOM
			UOMCalculation.InputQuantity = LocalInputQuantity
			UOMCalculation.Method      	 = UOMCalculation.Method.ConvertToAlternate

  		UOMConversionIntoStockUOM
  			initialize UOMCalculation
			UOMCalculation.InputUOM		 = TransactionUOM
			UOMCalculation.InputQuantity = LocalInputQuantity
			UOMCalculation.Method		 = UOMCalculation.Method.ConvertToStock

		UpdateItemLocation
			invoke UpdateFromWarehouse ItemLocation
				invoked.PrmAllocatedQuantity	 	 = InProcessQuantity * -1							 	
				invoked.PrmInProcessQuantity	 	 = InProcessQuantity									

		UpdateKitItemLocation
			invoke UpdateFromWarehouse KitItemLocationRel
				invoked.PrmAllocatedQuantity = LocalPrintedQuantity * -1							 	
				invoked.PrmInProcessQuantity = LocalInProcessQuantity									

		ValidateForNegativeSOH
			if (LineType.InventoriedItem
			and not Company.AllowNegativeStockOnHand)
				constraint (LocalStockOnHandQuantity >= 0)
					"CompanyDoesNotAllowNegativeStockOnHandForLine<WarehouseShipmentLine>"					

		UpdateWarehouseDemandLine
			invoke UpdateFromShipmentLine WarehouseDemandLineRel
				if (LocalFirstFinish)
					invoked.PrmInProcessQuantity				= LocalInProcessQuantity
					invoked.PrmItemLocationAllocatedQuantity	= ((LocalInProcessQuantity + LocalVoidedQuantity + LocalBackorderedQuantity) * -1)
				else
					invoked.PrmInProcessQuantity				= (((LocalVoidedQuantity + LocalBackorderedQuantity) * -1) + LocalOvershipQuantity)
				invoked.PrmVoidedQuantity						= LocalVoidedQuantity
				invoked.PrmBackorderedQuantity					= LocalBackorderedQuantity

			invoke UpdateFromShipmentLine SupplyRecordsRel
				if (LocalFirstFinish)
					invoked.PrmInProcessQuantity				= LocalInProcessQuantity
					invoked.PrmItemLocationAllocatedQuantity	= ((LocalInProcessQuantity + LocalVoidedQuantity + LocalBackorderedQuantity) * -1)
				else
					invoked.PrmInProcessQuantity				= (((LocalVoidedQuantity + LocalBackorderedQuantity) * -1) + LocalOvershipQuantity)
				invoked.PrmVoidedQuantity						= LocalVoidedQuantity
				invoked.PrmBackorderedQuantity					= LocalBackorderedQuantity

		CreateDistributions
			initialize LocalGLFinanceCodeBlock
			initialize LocalGLTranAmount
			initialize LocalGLUnitsAmount
			if (IsCatchWeightItem)
				LocalDistributionQuantity = CatchWeightQuantity
			else
				LocalDistributionQuantity = InProcessQuantity

			LocalGLFinanceCodeBlock     						= ItemLocation.GeneralLedgerCategory.InventoryAccount
			LocalGLTranAmount									= ((LocalDistributionQuantity * UnitCost) * -1)
			LocalGLUnitsAmount									= LocalDistributionQuantity * -1
			LocalPostingType									= InventoryTransactionLineDistribution.PostingType.Inventory
			include CreateInventoryTransactionLineDistribution

			LocalPostingType 									= InventoryTransactionLineDistribution.PostingType.Offset

			initialize LocalTotalDistributionAmount
			LocalTotalTransactionAmount = LocalGLTranAmount * -1
			LocalTotalUnitsAmount 		= LocalDistributionQuantity

			if (RequisitionLineRel.DistributionBy.ByQuantity)
				if (IsCatchWeightItem)
					LocalOriginalShippedQuantity = WarehouseDemandLineRel.ShippedQuantity * TransactionUOMMultiplier
				else
					LocalOriginalShippedQuantity = WarehouseDemandLineRel.ShippedQuantity

			LocalRemainingQuantityToBeDistributed = LocalDistributionQuantity 

			for each RequisitionLineRel.RequisitionLineDistributionsRel
				LocalGLFinanceCodeBlock							= each.DistributionAccount

				if (RequisitionLineRel.DistributionBy.ByQuantity)
					if (LocalOriginalShippedQuantity >= each.DerivedDistributionQuantityInStock)
						LocalOriginalShippedQuantity -= each.DerivedDistributionQuantityInStock
						initialize LocalGLTranAmount
						initialize LocalGLUnitsAmount
					else
						if (LocalOriginalShippedQuantity > 0)
							LocalDistributionQuantity		= (each.DerivedDistributionQuantityInStock - LocalOriginalShippedQuantity)
							initialize LocalOriginalShippedQuantity
						else
							LocalDistributionQuantity = each.DerivedDistributionQuantityInStock

						if (LocalDistributionQuantity > LocalRemainingQuantityToBeDistributed)
							LocalDistributionQuantity = LocalRemainingQuantityToBeDistributed
							initialize LocalRemainingQuantityToBeDistributed
						else
							LocalRemainingQuantityToBeDistributed -= LocalDistributionQuantity
						LocalGLTranAmount			= LocalDistributionQuantity * UnitCost
						LocalGLUnitsAmount			= LocalDistributionQuantity
				else
				if (RequisitionLineRel.DistributionBy.ByPercent)
					LocalGLTranAmount							= each.DistributionPercent * LocalTotalTransactionAmount
					LocalGLUnitsAmount							= each.DistributionPercent * LocalTotalUnitsAmount
				else 
					LocalGLTranAmount							= ((each.DistributionAmount / RequisitionLineRel.ApprovalValue ) * LocalTotalTransactionAmount)
					LocalGLUnitsAmount   						= ((each.DistributionAmount / RequisitionLineRel.ApprovalValue ) * LocalTotalUnitsAmount)

				LocalTotalDistributionAmount += LocalGLTranAmount
				LocalTotalDistributionUnitsAmount += LocalGLUnitsAmount
				include CreateInventoryTransactionLineDistribution


			if (LocalTotalTransactionAmount != LocalTotalDistributionAmount)
				invoke Update first InventoryTransactionLineDistributionRel
					invoked.GLTransactionAmount = (LocalTotalTransactionAmount - LocalTotalDistributionAmount)
					invoked.UnitsAmount			= (LocalTotalUnitsAmount - LocalTotalDistributionUnitsAmount)

		CreateInventoryTransactionLineDistribution
			invoke Create InventoryTransactionLineDistribution
				fill in fields from this instance
				invoked.InventoryTransaction								= PrmInventoryTransaction.InventoryTransaction
				invoked.InventoryTransactionLine							= NewInventoryTransactionLine.InventoryTransactionLine
				invoked.TransactionSystemCode								= NewInventoryTransactionLine.TransactionSystemCode
				invoked.System												= WarehouseShipment.WarehouseDemand.DemandSystemCode
				invoked.PostingType											= LocalPostingType
				invoked.PostingDate				    						= NewInventoryTransactionLine.GeneralLedgerDate
				invoked.GLFinanceCodeBlock									= LocalGLFinanceCodeBlock
				invoked.CurrencyCode										= Company.AccountingEntity.FunctionalCurrency
				invoked.GLTransactionAmount									= LocalGLTranAmount 
				if (not LocalGLFinanceCodeBlock.GeneralLedgerChartAccount.AllowUnits.No)
					invoked.UnitsAmount										= LocalGLUnitsAmount
				invoked.TransactionDate										= NewInventoryTransactionLine.TransactionDate
				invoked.GeneralLedgerEvent									= PrmInventoryTransaction.InventoryDocumentType
				invoked.DocumentNumber										= PrmInventoryTransaction
				invoked.AddOnCharge 										= NewInventoryTransactionLine.LocalAddOnCharge
				initialize invoked.Status


		UOMConversionFromHHToTransaction
			initialize UOMCalculation
			UOMCalculation.InputUOM		 = MobilePickQuantityUOM
			UOMCalculation.InputToUOM  	 = TransactionUOM
			UOMCalculation.InputQuantity = LocalInputQuantity
			UOMCalculation.Method		 = UOMCalculation.Method.ConvertToAlternate

		CreateMobileSupplyChainDeliveryTicket
			invoke Create MobileSupplyChainDeliveryTicket
				assign result to LocalMobileSupplyChainDeliveryTicketView
				invoked.Company                                             = Company
				invoked.MobileSupplyChainLocation                           = InventoryLocation
				invoked.DeliveryType                                        = DeliveryType.Shipment
				invoked.InforTrackingNumber                                 = LocalTrackingNumber
				invoked.DeliverToCompanyLocation.MobileSupplyChainCompany   = WarehouseShipment.CompanyAndLocation.RequestingCompany
				invoked.DeliverToCompanyLocation.MobileSupplyChainLocation  = WarehouseShipment.CompanyAndLocation.RequestingLocation
				invoked.OriginatingTransaction                              = reference to WarehouseShipment
				invoked.ReceivedBy                                      	= WarehouseShipment.DerivedPickedBy
				invoked.DocumentNumber										= WarehouseShipment
				invoked.DeliverTo										    = WarehouseShipment.DerivedBillToName

		CreateMobileSupplyChainDeliveryUnit
			invoke Create MobileSupplyChainDeliveryUnit
				assign result to LocalMobileSupplyChainDeliveryUnitView
				invoked.Company                             = Company
				invoked.MobileSupplyChainLocation           = InventoryLocation
				invoked.MobileSupplyChainDeliveryTicket     = LocalMobileSupplyChainDeliveryTicketView.MobileSupplyChainDeliveryTicket
				invoked.Status								= MobileSupplyChainDeliveryUnit.Status.Picked
		
		ProcessDeliveryExitRules
			initialize LocalReportPrinter
			initialize LocalLabelPrinter
			invoke Update MobileSupplyChainDeliveryTicketRel
				invoked.NumberOfLines			= LocalDeliveryLineCount
			
			if(LocalDeliveryLineCount > 0)
				invoke CreateEventForAllLines MobileSupplyChainDeliveryTicketRel
					invoked.PrmPerformedAction		= PerformedAction.Picked
					invoked.PrmTimeSubmitted		= WarehouseShipment.DerivedLastTimeSubmitted
				
				invoke Print MobileSupplyChainDeliveryTicketRel
					invoked.PrmReportPrinter 	= WarehouseShipment.MSCMReportPrinter
					invoked.PrmLabelPrinter		= WarehouseShipment.MSCMLabelPrinter
			
			invoke BuildRequisitionTextSearch MobileSupplyChainDeliveryUnitRel

		CreateDeliveryLine
			invoke Create MobileSupplyChainDeliveryLine
				invoked.Company                             = Company
				invoked.MobileSupplyChainLocation           = InventoryLocation
				invoked.MobileSupplyChainDeliveryTicket     = LocalDeliveryTicket
				invoked.MobileSupplyChainDeliveryUnit       = LocalDeliveryUnit
				invoked.OriginatingLineNumber				= WarehouseShipmentLine
				invoked.Quantity							= LocalDeliveryQuantity
				invoked.UnitOfMeasure						= LocalUnitOfMeasure
				invoked.Item								= Item
				invoked.Bin									= DerivedBinTo
				invoked.Lot									= LocalLot
				invoked.Sublot								= LocalSublot
				invoked.Serial								= LocalSerial
				invoked.ExpirationDate						= LocalLotExpirationDate
				invoked.OrderedQuantity						= PrintedQuantity
				invoked.OrderedUOM							= TransactionUOM
				invoked.BackorderedQuantity					= TotalBackorderQuantity
				invoked.Requisition							= WarehouseShipment.WarehouseDemand.DemandDocument
				invoked.Requester							= WarehouseShipment.DerivedRequester



    Derived Fields

		ShipmentLineDisplay is a LabelField
			"Line<WarehouseShipmentLine>"

		DerivedNumberOfDecimalsQuantity			is a DerivedField
			type is like NumberOfDecimalsQuantity
			restricted
			if (IsInventoriedOrNonstock)
				return Item.NumberOfDecimalsQuantity
			else
				return Company.NumberOfDecimalsQuantity

		DerivedInProcessQuantityInTransUOM 		is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "InProcessQuantity"
			if (IsCatchWeightItem)
				return InProcessQuantity							
			else
				return InProcessQuantity / TransactionUOMMultiplier 

		DerivedPrintedQuantityInTransUOM  		is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "PrintedQuantity"
			if (IsCatchWeightItem)
				return PrintedQuantity								
			else
				return PrintedQuantity / TransactionUOMMultiplier 	

		DerivedShippedQuantityInTransUOM		is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "ShippedQuantity"
			if (IsCatchWeightItem)
				return ShippedQuantity								
			else
				return ShippedQuantity / TransactionUOMMultiplier 	

		DerivedPreAssembledKitQuantity 	is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return PreAssembledKitQuantity / TransactionUOMMultiplier


        OpenQuantity 					is a DerivedField
            type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity
            default label is "OpenQuantity"
            if (WarehouseShipment.Status.Closed)
            	return blank
            else
            	LocalOpenQuantity = DerivedPrintedQuantityInTransUOM - DerivedInProcessQuantityInTransUOM - TotalBackorderQuantity - TotalVoidedQuantity - DerivedShippedQuantityInTransUOM
	            if (LocalOpenQuantity >= 0)
   		         	return LocalOpenQuantity
    	        else
       		     	return blank

		DerivedDescriptionForIDM is a DerivedField
			type is like Description
			if(Item.Description entered)
				return Item.Description
			else
				return Description


		DerivedOpenQuantity			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return (PrintedQuantity - TotalVoidedQuantity - TotalBackorderQuantity)


		TotalBackorderQuantity 			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "BackorderQuantity"
			initialize LocalBackorderQuantity
			for each WarehouseShipmentLineAuditForBackorderRel
				LocalBackorderQuantity += each.Quantity
			if (IsCatchWeightItem)
				return LocalBackorderQuantity 							 
			else
				return LocalBackorderQuantity / TransactionUOMMultiplier


		TotalVoidedQuantity 			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			default label is "VoidedQuantity"
			initialize LocalVoidedQuantity
			for each WarehouseShipmentLineAuditForVoidRel
				LocalVoidedQuantity += each.Quantity
			if (IsCatchWeightItem)
				return LocalVoidedQuantity 							 
			else
				return LocalVoidedQuantity / TransactionUOMMultiplier



		DerivedShippedQuantity			is a DerivedField
			type is like Quantity
			restricted
			return PrintedQuantity - TotalBackorderQuantity - TotalVoidedQuantity

		DerivedItemHazardCode			is a StringField
			type is Alpha 60
			Item.HazardCode

		DerivedItemHazardDescription	is a StringField
			type is Alpha 60
			Item.HazardCode.Description

		DerivedItemFreightClass			is a StringField
			type is Alpha 60
			Item.FreightClass.Description

		DerivedItemWeight				is a DerivedField
			type is Decimal 9.2
			if (WarehouseShipment.Status.Shipped)
				return (ShipmentLineItemUOMRel.PackingWeight * DerivedInProcessQuantityInTransUOM)
			else
			if (WarehouseShipment.Status.Released or WarehouseShipment.Status.Closed)
				return (ShipmentLineItemUOMRel.PackingWeight * DerivedShippedQuantityInTransUOM)

		CatchWeightUOM is a DerivedField
			type is like UnitOfMeasure
			if (IsCatchWeightItem)
				return Item.StockUOM
			else
				return blank

		DerivedHazardFL		is a DerivedField
			type is Alpha 3
			default label is "HazardFL"
			if (Item.HazardCode entered)
				return "YES"
			else
				return "NO"

		DerivedPackingWeightForIDM is a DerivedField
			type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity
            default label is "PackingWeightForIDM"
			return (OpenQuantity * ItemUOMRel.PackingWeight)

		DerivedPackingVolumeForIDM is a DerivedField
			type is like Quantity
            	precision is Item.NumberOfDecimalsQuantity
            default label is "PackingVolumeForIDM"
			return (OpenQuantity * ItemUOMRel.PackingVolume)

		DerivedCustomerItemCrossReference is a DerivedField
			type is like ItemDescription
			default label is "CustomerItemCrossReference"
			return first CustomerItemCrossReferenceRel.Description

		DerivedCustomerOrderLineReturnedQuantity is a DerivedField
			type is like Quantity
			restricted
			return CustomerOrderLineRel.ReturnedQuantity

		ShipmentLineDetailsIDM is a DerivedField
			type is Boolean
			if(WarehouseShipmentLineDetailsRel exists)
				return true
			else
				return false

		OrderAttachmentOrderEntryComment is a DerivedField
			type is Boolean
			if(OrderEntryOrderCommentAttachmentsRel.Comment entered)
				return true
			else
				return false

		DerivedWarehousePackingListQuantity is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			if (WarehouseShipment.Status.Released or WarehouseShipment.Status.Closed)
				return DerivedShippedQuantityInTransUOM
			else
			if (WarehouseShipment.Status < 4
			and InProcessQuantity = 0)
				if (WarehouseShipmentLineAuditsRel exists)
					return 0
				else
					return DerivedPrintedQuantityInTransUOM
			else
				return DerivedInProcessQuantityInTransUOM

		DerivedWarehousePackingListBackorderedQuantity is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			return WarehouseDemandLineRel.DisplayBackorderedQuantity

		DerivedHasItemComments is a DerivedField
			type is Alpha 3
			if (HasItemComments)
				return "Yes"
			return "No"

		DerivedHasPackingListShipmentLineDetails is a DerivedField
			type is Alpha 3
			if (HasPackingListShipmentLineDetails)
				return "Yes"
			return "No"

		DerivedQuantityToProcessStockUOM        is a DerivedField
            type is like Quantity
			if (ShippedQuantity entered)
				if (TransactionUOM not = Item.StockUOM)
					return (ShippedQuantity * TransactionUOMMultiplier)
				else
					return ShippedQuantity
			else
            if (InProcessQuantity entered)
                if (TransactionUOM not = Item.StockUOM)
                    return (InProcessQuantity * TransactionUOMMultiplier)
                else
                    return InProcessQuantity
            else
            if (PrintedQuantity entered)
                if (TransactionUOM not = Item.StockUOM)
                    return (PrintedQuantity * TransactionUOMMultiplier)
                else
                    return PrintedQuantity

        DerivedCatchWeightVariancePercent         is a DerivedField
            type is Decimal size 5.2
            LocalVariancePercent = (((CatchWeightQuantity - DerivedQuantityToProcessStockUOM)/DerivedQuantityToProcessStockUOM) * 100)
            if (LocalVariancePercent < 0)
                LocalVariancePercent = LocalVariancePercent * -1
            return LocalVariancePercent

		DerivedLocationStockUOM										is a DerivedField 
			type is like UnitOfMeasure
			return ItemLocation.ItemLocationStockUOM.UnitOfMeasure

		DerivedLocationStockUOMMultiplier							is a DerivedField  
			type is like UOMMultiplier
			return ItemLocation.ItemLocationStockUOM.ItemUOM.UOMConversion

        CatchWeightOutOfToleranceMessage         is a MessageField
            restricted
            "CatchWeightQuantityIsOutsideOfTolerance"

		BinDetailsLabel is a LabelField
			restricted
			"BinDetails"

		SerialDetailsLabel is a LabelField
			restricted
			"SerialDetails"

		LotDetailsLabel is a LabelField
			restricted
			"LotDetails"

		SerialAndBinDetailsLabel is a LabelField
			restricted
			"SerialAndBinDetails"

		LotAndBinDetailsLabel is a LabelField
			restricted
			"LotAndBinDetails"

		MultipleUOMDetailsLabel is a LabelField
			restricted
			"UOMDetails"

		FeedbackDetailLabel is a DerivedField
			type is Alpha size 25
			restricted
			if (IsBinTrackedFlagOnly and !IsSerialTracked and !IsLotTracked)
				return BinDetailsLabel
			if (IsSerialTracked and !IsBinTrackedFlagOnly)
				return SerialDetailsLabel
			if (IsLotTracked and !IsBinTrackedFlagOnly)
				return LotDetailsLabel
			if (IsSerialTracked and IsBinTrackedFlagOnly)
				return SerialAndBinDetailsLabel
			if (IsLotTracked and IsBinTrackedFlagOnly)
				return LotAndBinDetailsLabel
			if (IsMultipleUOMTracked)
				return MultipleUOMDetailsLabel


		DerivedItemID is a DerivedField
			type is Alpha size 60
			restricted
			if (DerivedConfigDocID = "Y")
				return Item
			else
				return DerivedFinanceEnterpriseGroup + DerivedDelimiter + DerivedBusinessGroup + DerivedDelimiter + Item
		
		DerivedDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter	= "Generic_Delimiter"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 5
			restricted
			return Company.FinanceEnterpriseGroup
					
		DerivedAE is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedIntegratingApplication = "EAM")
				return WarehouseShipment.DerivedAccountingEntity
			else
				return ""

		DerivedDocRefNumber is a DerivedField
			type is Alpha size 40
			restricted
			return WarehouseShipment.DerivedRefDocNumber 
			
		DerivedShipLocation is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedIntegratingApplication = "EAM")
				return WarehouseShipment.DerivedLocation
			else
				return ""
			
		DerivedRequisitionNum is a DerivedField
			type is Alpha size 100
			restricted
			if(DerivedIntegratingApplication = "EAM")
				return WarehouseShipment.DerivedRequisitionID
			else
				return ""
				
		DerivedRequisitionLineNum is a DerivedField
			type is Numeric size 6
			restricted
			if(DerivedIntegratingApplication = "EAM")
				return WarehouseShipmentLine
			else
				return ""
		
		DerivedCommodityCode is a DerivedField
			type is like CommCodes
			restricted
			if(DerivedIntegrationApplication = "Local.ly" and WarehouseShipment.WarehouseDemand.DemandSystemCode.CustomerOrder )
				return Item.DerivedCommodityCode
			else
				return ""
		
		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "IntegratingApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
					
		DerivedIntegrationApplication is a DerivedField
			type is Alpha size 200
			restricted
			LocalConfigurationParameter	= "IntegrationApplication"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedTransactionUOM is a DerivedField
			type is AlphaUpper size 4
			restricted
			if (DerivedIntegrationApplication = "Local.ly")
				return TransactionUOM
				
		DerivedBODShippedQuantity is a DerivedField
			type is Decimal size 13.4
			restricted
			if (DerivedIntegrationApplication = "Local.ly")
				return ShippedQuantity

		DerivedBusinessGroup is a DerivedField
			type is Alpha size 5
			restricted
			return Company.GeneralLedgerCompany.BusinessGroup

		DerivedRefDocLineNbr is a DerivedField
			type is Alpha size 6
			restricted
			return WarehouseShipmentLine

		DerivedOrderQuantity is a DerivedField
			type is Decimal size 13.7
			restricted
			return PrintedQuantity/TransactionUOMMultiplier

		DerivedAccountEntity is a DerivedField
			type is Alpha size 30
			restricted
			if (DerivedConfigDocID = "Y")
				return LocalAccountingEntity
			else
				if(WarehouseShipment.InventoryLocation.PostalAddress.Country = "PL" and DerivedIntegrationApplication = "Local.ly")
					return ""
				else
					if (DerivedItemID entered)
						return ""
					else
						return LocalAccountingEntity
			
		DerivedServiceIndicator is a DerivedField
			type is Alpha size 20
			restricted
			return "false"

		DerivedDocRefType is a DerivedField
			type is Alpha size 50
			restricted
			if (WarehouseShipment.WarehouseDemand.DemandSystemCode.CustomerOrder)
				return "Sales Order"
			else
				return ""



#ifdef module integration
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "tenantID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

		DerivedConfigDocID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter	= "RequiredCleanDocumentID"
			if(FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedShipmentBackordVoidBODID is a DerivedField
			type is Alpha 100
			restricted
			return	"infor-nid:" + DerivedTenantID +":"+ WarehouseShipment +"?ShipmentBackordVoid&verb=Process"
#endif
		DerivedLineAction is a DerivedField
			type is Alpha 10
			restricted
			return  action

		DerivedCustomerOrderNumber	is a DerivedField
			type is Numeric 20
			restricted
			return 	WarehouseDemandLineRel.DocumentNumberNumeric

		ShipmentBackordVoidAlertDescription is a DerivedField
			type is Alpha 200
			restricted
			return	"Shipment for CO "+ DerivedCustomerOrderNumber + ", line item" +" "+ Item + " for Qty" + " "+ PrintedQuantity + " has been" +" "+DerivedLineAction

		ShipmentBackordVoidPulseAlertXML is a DerivedField
			type is XMLDocument
			restricted
			ShipmentBackordVoidPulseAlertXML = template.IONShipmentBackordVoid_WarehouseShipmentLine_ST	document for this instance



		DerivedQuantityToShip			is a DerivedField
			type is like Quantity
			restricted
			if (InProcessQuantity entered)
				return WarehouseShipmentLine.InProcessQuantity 
			else
				return WarehouseShipmentLine.OpenQuantity 
		DerivedOpenQuantityInStockUOM			is a DerivedField
			type is like Quantity
				precision is Item.NumberOfDecimalsQuantity
			restricted
			return (PrintedQuantity - TotalVoidedQuantity - TotalBackorderQuantity)

		DerivedSpecialHandlingCode					is a DerivedField
			type is like SpecialHandlingCode
			return RequisitionLineRel.SpecialHandlingCode

		DerivedSpecialHandlingDescription			is a DerivedField
			type is like Description
			return RequisitionLineRel.SpecialHandlingCode.Description

		DerivedSpecialHandlingInstructions			is a DerivedField
			type is like Description4
			return RequisitionLineRel.SpecialHandlingInstructions
			
		DerivedTimeSensitive						is a DerivedField
			type is Boolean
			return RequisitionLineRel.SpecialHandlingCode.TimeSensitive

		DerivedHandlingTimeInMinutes				is a DerivedField
			type is Numeric 3
			return RequisitionLineRel.HandlingTimeInMinutes

		DerivedEmptyTitle is a DerivedField
			type is Alpha size 2
			return blank

		ItemRequiresSpecialHandling is a DerivedField
			type is Alpha 3
			if (HasSpecialHandling)
				return "Yes"
			return "No"

		DerivedHasItemComponentSpecialHandling is a DerivedField
			type is Alpha 3
			if (HasLineComponentSpecialHandling)
				return "Yes"
			return "No"
		

		DerivedBinTo is a DerivedField
			type is like Bin
			return ItemLocationUsingRequisitionLineRel.PreferredBin

		DerivedItemDescriptionForMSCM is a DerivedField
			type is like Description
			return Item.Description

		DerivedMSCMIsSave 				is a DerivedField
			type is Boolean
			restricted
			if (MobilePickQuantity changed)
				return true
			return false
		
		DerivedTrackingNumber			is a DerivedField
			type is AlphaUpper size 50
			if (TrackingNumber entered)
                return TrackingNumber

		DerivedSumLineTrackingQuantity is a ComputeField
            type is like Quantity
            (sum MobileSupplyChainShipmentDetailTrackingRel.DerivedLineUOMQuantity)


    Relations

		WarehouseDemandForIntransitTransferRel
        	one-to-many relation to WarehouseDemand
            Field Mapping uses symbolic key
                related.Company           									= WarehouseShipment.CompanyAndLocation.RequestingCompany
                related.WarehouseDemand.DemandSystemCode					= DemandSystemCode.Intransit
                related.WarehouseDemand.DemandDocument						= WarehouseShipment
                related.WarehouseDemand.DemandCompany						= Company

    	WarehouseDemandLinesForIntransitTransferRel
            one-to-many relation to WarehouseDemandLine
            Field Mapping uses Set5
                related.Company           									= WarehouseShipment.CompanyAndLocation.RequestingCompany
                related.InventoryLocation 									= WarehouseShipment.CompanyAndLocation.RequestingLocation
                related.Item              									= Item
                related.EstimatedTransactionDate							= WarehouseShipment.EstimatedDeliveryDate
                related.WarehouseDemandLine.DemandDocumentType				= DemandDocumentType.IntransitReceiving
                related.WarehouseDemand.DemandSystemCode					= DemandSystemCode.Intransit
                related.WarehouseDemand.DemandDocument						= WarehouseShipment
                related.WarehouseDemand.DemandCompany						= Company
                related.WarehouseDemandLine.LineNumber						= WarehouseShipmentLine
                related.WarehouseDemandLine.ComponentSequence				= blank


        WarehouseShipmentLineDetailsRel is a WarehouseShipmentLineDetail set
        	Instance Selection
        		where (related.WarehouseShipmentLineComponent not entered)

        WarehouseShipmentLineDetailsLotRel is a WarehouseShipmentLineDetail set
        	Instance Selection
        		where (related.WarehouseShipmentLineDetail.Lot not entered)

        WarehouseShipmentLineDetailNoCatchWeightRel is a WarehouseShipmentLineDetail set
        	Instance Selection
        		where (related.CatchWeightQuantity not entered)

		WarehouseShipmentLineDetailsForMergeRel
            one-to-many relation to WarehouseShipmentLineDetail
            Field Mapping uses symbolic key
            	related.Company 					 = Company
            	related.InventoryLocation 			 = InventoryLocation
            	related.WarehouseShipment 			 = LocalShipment
            	related.WarehouseShipmentLine	     = LocalShipmentLine



		WarehouseShipmentLineComponentsForMergeRel
            one-to-many relation to WarehouseShipmentLineComponent
            Field Mapping uses symbolic key
				related.Company 						= Company
				related.InventoryLocation 		 		= InventoryLocation
				related.WarehouseShipment				= LocalShipment
				related.WarehouseShipmentLine			= LocalShipmentLine

		WarehouseShipmentLineDetailsForComponentRel is a WarehouseShipmentLineDetail set
        	Instance Selection
        		where (related.WarehouseShipmentLineComponent = LocalComponentSequence)

		WarehouseShipmentLineDetailWithExpiredLotsRel is a WarehouseShipmentLineDetail set
			Instance Selection
				where (related.WarehouseShipmentLineDetail.Lot entered
				and    related.IsLotExpired)

		WarehouseShipmentLineDetailWithExpiringLotsRel is a WarehouseShipmentLineDetail set
			Instance Selection
				where (related.WarehouseShipmentLineDetail.Lot entered
				and    related.IsLotWithinExpiration)

		OtherWarehouseShipmentLineRel
            one-to-many relation to WarehouseShipmentLine
            Field Mapping uses symbolic key
            	related.Company 					 = Company
            	related.InventoryLocation 			 = InventoryLocation
            	related.WarehouseShipment 			 = WarehouseShipment
            Instance Selection
            	where (related.WarehouseShipmentLine != WarehouseShipmentLine)

		OtherWarehouseShipmentLineForAnItemRel
            one-to-many relation to WarehouseShipmentLine
            Field Mapping uses symbolic key
            	related.Company 					 = Company
            	related.InventoryLocation 			 = InventoryLocation
            	related.WarehouseShipment 			 = WarehouseShipment
            Instance Selection
            	where (related.WarehouseShipmentLine != WarehouseShipmentLine
            	and    related.Item					 = Item)

        StockOnHandDetailRel
            one-to-many relation to StockOnHandDetail
            Field Mapping uses symbolic key
                related.Company           			  = Company
                related.InventoryLocation 			  = InventoryLocation
                related.Item              			  = Item

       	AlternateUOMRel
       		one-to-many relation to ItemUOM
       		Field Mapping uses symbolic key
       			related.ItemGroup	 				  = Item.ItemGroup
       			related.Item						  = Item
       		Instance Selection
       			where (related.ItemUOM.UnitOfMeasure != Item.StockUOM)

        WarehouseDemandRel
            one-to-one relation to WarehouseDemand
            Field Mapping uses symbolic key
                related.Company                          = Company
                related.WarehouseDemand.DemandSystemCode = RequestingDocument.DemandSystemCode
                related.WarehouseDemand.DemandDocument   = RequestingDocument.DocumentNumber
                related.WarehouseDemand.DemandCompany	 = WarehouseShipment.WarehouseDemand.DemandCompany


        WarehouseDemandLineRel
            one-to-one relation to WarehouseDemandLine
            Field Mapping uses Set1
                related.Company                               = Company
                related.WarehouseDemand.DemandSystemCode      = WarehouseShipment.WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument        = WarehouseShipment.WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 	  = WarehouseShipment.WarehouseDemand.DemandCompany
                related.WarehouseDemandLine.LineNumber        = WarehouseShipmentLine
                related.WarehouseDemandLine.ComponentSequence = LocalComponentSequence
                related.InventoryLocation                     = InventoryLocation

		SupplyRecordsRel
			one-to-one relation to WarehouseDemandLine
			Field Mapping uses Set7
				related.Company									= WarehouseShipment.CompanyAndLocation.RequestingCompany
				related.InventoryLocation						= WarehouseShipment.CompanyAndLocation.RequestingLocation
                related.WarehouseDemand.DemandSystemCode      	= WarehouseShipment.WarehouseDemand.DemandSystemCode
                related.WarehouseDemand.DemandDocument        	= WarehouseShipment.WarehouseDemand.DemandDocument
				related.WarehouseDemand.DemandCompany	 		= WarehouseShipment.WarehouseDemand.DemandCompany
                related.WarehouseDemandLine.LineNumber			= WarehouseShipmentLine
                related.WarehouseDemandLine.ComponentSequence	= LocalComponentSequence

        WarehouseShipmentLineAuditsRel is a WarehouseShipmentLineAudit set

        WarehouseShipmentLineAuditRel is a WarehouseShipmentLineAudit set
        	Instance Selection
        		where (related.WarehouseShipmentLineAudit = LocalAudit)

		WarehouseShipmentLineAuditForBackorderRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.ActionCode.Backorder)

		WarehouseShipmentLineAuditForVoidRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.ActionCode.Void)

		AuditsForNextStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.NextStatus)

		BackorderAuditForNextStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.NextStatus
				and    related.ActionCode.Backorder)

		VoidAuditForNextStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.NextStatus
				and    related.ActionCode.Void)

		OvershipAuditForNextStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.NextStatus
				and    related.ActionCode.Overship)

		AuditsForCurrentStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.Status)

		BackorderAuditForCurrentStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.Status
				and    related.ActionCode.Backorder)

		VoidAuditForCurrentStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.Status
				and    related.ActionCode.Void)

		OvershipAuditForCurrentStateRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	= WarehouseShipment.Status
				and    related.ActionCode.Overship)

		BackorderAuditsForPastStatesRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	< WarehouseShipment.NextStatus
				and    related.ActionCode.Backorder)

		VoidAuditsForPastStatesRel is a WarehouseShipmentLineAudit set
			Instance Selection
				where (related.WarehouseShipmentLineAudit	< WarehouseShipment.NextStatus
				and    related.ActionCode.Void)

		OtherShipmentLinesForMergeRel
			one-to-many relation to WarehouseShipmentLine
			Field Mapping uses Set6
				related.Company 						 		 = Company
				related.InventoryLocation 		 		 		 = InventoryLocation
			Instance Selection
				where (related.WarehouseShipment				!= WarehouseShipment
				and    related.WarehouseShipment.WarehouseDemand = WarehouseShipment.WarehouseDemand
				and    related.WarehouseShipment.Status			 = WarehouseShipment.Status)

		DuplicateShipmentLineRel
			one-to-one relation to WarehouseShipmentLine
			Field Mapping uses symbolic key
				related.Company					    = Company
				related.InventoryLocation 			= InventoryLocation
				related.WarehouseShipment			= WarehouseShipment
				related.WarehouseShipmentLine		= LocalShipmentLine

		RequisitionLineWithPrefCardTranRel
            one-to-many relation to RequisitionLine
            Field Mapping uses symbolic key
                related.Company         			= WarehouseShipment.CompanyAndLocation.RequestingCompany
                related.Requisition                 = WarehouseShipment.WarehouseDemand.DemandDocument
                related.RequisitionLine 			= WarehouseShipmentLine
			Instance Selection
				where (related.PreferenceCardTransaction)

		RequisitionWithPrefCardTranRel													
			one-to-many relation to Requisition
			Field Mapping uses symbolic key
				related.Company         			= WarehouseShipment.CompanyAndLocation.RequestingCompany
				related.Requisition					= WarehouseShipment.WarehouseDemand.DemandDocument
			Instance Selection
				where (related.HasPreferenceCardTransaction)

		RequisitionLineRel
            one-to-one relation to RequisitionLine
            Field Mapping uses symbolic key
                related.Company         			= WarehouseShipment.CompanyAndLocation.RequestingCompany
                related.Requisition                 = WarehouseShipment.WarehouseDemand.DemandDocument
                related.RequisitionLine 			= WarehouseShipmentLine

		PatientProcedureRel
			one-to-one relation to PatientProcedure
			Field Mapping uses symbolic key
				related.Company         			= WarehouseShipment.CompanyAndLocation.RequestingCompany
				related.PatientProcedure			= RequisitionLineRel.PatientProcedure

		InventoryUDIDetailRel 
			one-to-one relation to InventoryUDIDetail
			Field Mapping uses symbolic key
				related.Company         							= Company
				related.InventoryLocation							= RequisitionLineRel.FromCompanyLocationBin.FromLocation
				related.InventoryUDIDetail.InventoryTransactionType	= RequisitionLineRel.InventoryTransactionType
				related.InventoryUDIDetail.TransactionSystemCode	= "RQ"
				related.InventoryUDIDetail.DocumentNumberNumeric	= RequisitionLineRel.Requisition
				related.InventoryUDIDetail.WarehouseShipment		= blank
				related.InventoryUDIDetail.LineNumber				= RequisitionLineRel.RequisitionLine
				related.InventoryUDIDetail.TransactionSequence		= 1
				
		InventoryUDIDetailsRel
			one-to-many relation to InventoryUDIDetail
			delete cascades
			Field Mapping uses symbolic key
				related.Company         									= Company
				related.InventoryLocation									= RequisitionLineRel.FromCompanyLocationBin.FromLocation
			Instance Selection	
				where (related.InventoryUDIDetail.InventoryTransactionType	= RequisitionLineRel.InventoryTransactionType
				and    related.InventoryUDIDetail.TransactionSystemCode		= WarehouseShipment.WarehouseDemand.DemandSystemCode
				and    related.InventoryUDIDetail.DocumentNumberNumeric		= RequisitionLineRel.Requisition
				and    related.InventoryUDIDetail.WarehouseShipment			= WarehouseShipment
				and    related.InventoryUDIDetail.LineNumber				= RequisitionLineRel.RequisitionLine)
				
                
    	WarehouseShipmentLineComponentsRel is a WarehouseShipmentLineComponent set

		LineComponentSpecialHandlingRel
			one-to-many relation to WarehouseShipmentLineComponent
			Field Mapping uses symbolic key
				related.Company					= Company
				related.InventoryLocation		= InventoryLocation
				related.WarehouseShipment		= WarehouseShipment
				related.WarehouseShipmentLine 	= WarehouseShipmentLine
			Instance Selection
				where (related.HasSpecialHandling)

    	KitComponentsRel
    		one-to-many relation to KitComponent
    		Field Mapping uses symbolic key
    			related.ItemGroup 					= Company.ItemGroup
    			related.KitItem.Company 			= Company
    			related.KitItem.InventoryLocation 	= InventoryLocation
    			related.KitItem.Item				= Item

		KitItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company					    = Company
				related.InventoryLocation			= InventoryLocation
				related.Item						= LocalItem

		KitItemRel
			one-to-one relation to KitItem
			Field Mapping uses symbolic key
				related.ItemGroup					= Company.ItemGroup
				related.KitItem.Company 	 		= Company
				related.KitItem.InventoryLocation	= InventoryLocation
				related.KitItem.Item				= Item

		FromToCompanyItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company						= WarehouseDemandLineRel.CompanyAndLocation.RequestingCompany
				related.InventoryLocation			= WarehouseDemandLineRel.CompanyAndLocation.RequestingLocation
				related.Item						= Item

		ToBinRel
			one-to-many relation to Bin
			Field Mapping uses symbolic key
				related.Company						= WarehouseDemandLineRel.CompanyAndLocation.RequestingCompany
				related.InventoryLocation			= WarehouseDemandLineRel.CompanyAndLocation.RequestingLocation

		CustomerOrderLineRel
        	one-to-one relation to CustomerOrderLine
            Field Mapping uses symbolic key
                related.Company           = Company
                related.CustomerOrder     = WarehouseShipment.WarehouseDemand.DemandDocument
                related.CustomerOrderLine = WarehouseShipmentLine

		IntrastatHeadersRel
			one-to-many relation to IntrastatHeader
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= Company.AccountingEntity.FinanceEnterpriseGroup
				related.TaxEntity						= Company.AccountingEntity
			Instance Selection
				where (related.RelatedObjectReference 	= reference to this instance)

		InventoryTransactionLinesRel
			one-to-many relation to InventoryTransactionLine
			Field Mapping uses ByOriginatingTransaction
				related.OriginatingTransaction 			= reference to this instance

		ItemLocationUsingRequisitionLineRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company						= RequisitionLineRel.Company
				related.InventoryLocation			= RequisitionLineRel.RequestingLocation
				related.Item						= Item

		OrderEntryOrderCommentAttachmentsRel is an OrderEntryOrderCommentAttachment set
			Instance Selection
				where (related.Company = Company
				and related.Customer = CustomerOrderLineRel.Customer
				and related.OrderEntryStandardOrder = blank
				and related.CustomerOrder = CustomerOrderLineRel.CustomerOrder
				and related.CustomerOrderLine = CustomerOrderLineRel.CustomerOrderLine)

		CustomerItemCrossReferenceRel
			one-to-many relation to CustomerItemCrossReference
			Field Mapping uses symbolic key
				related.Company	= Company
				related.Customer = CustomerOrderLineRel.Customer
			Instance Selection
				where (related.Item = Item)

		ItemUOMRel
        	one-to-one relation to ItemUOM
            Field Mapping uses symbolic key
            	related.ItemGroup = Item.ItemGroup
                related.Item = Item
                related.UnitOfMeasure = CustomerOrderLineRel.SellUOM

        InventoryTransactionLineDistributionRel
        	one-to-many relation to InventoryTransactionLineDistribution
        	Field Mapping uses symbolic key
        		related.Company						= LocalInventoryTransaction.Company
        		related.InventoryLocation			= LocalInventoryTransaction.InventoryLocation
        		related.InventoryTransaction		= LocalInventoryTransaction.InventoryTransaction
        		related.TransactionSystemCode		= NewInventoryTransactionLine.TransactionSystemCode
        		related.InventoryTransactionLine	= NewInventoryTransactionLine.InventoryTransactionLine

        ShipmentLineItemUOMRel
        	one-to-one relation to ItemUOM
            Field Mapping uses symbolic key
            	related.ItemGroup 		= Item.ItemGroup
                related.Item 			= Item
                related.UnitOfMeasure 	= TransactionUOM

        ShipmentLineItemCommentsRel
        	one-to-many relation to ItemComment
        	Field Mapping uses symbolic key
        		related.ItemGroup 	= Item.ItemGroup
        		related.Item 		= Item
			Instance Selection
				where (related.IsCommentNotExpired)


		PurgeWarehouseShipmentLineComponentRel is a WarehouseShipmentLineComponent set
			Instance Selection
				include deleted records

		PurgeWarehouseShipmentLineDetailRel is a WarehouseShipmentLineDetail set
			Instance Selection
				include deleted records


		WarehouseShipmentLineDetailRel is a WarehouseShipmentLineDetail set

		MobileSupplyChainShipmentDetailTrackingRel is a MobileSupplyChainShipmentDetailTracking set

		MobileSupplyChainConfigurationRel
            one-to-one relation to MobileSupplyChainConfiguration
            Field Mapping uses symbolic key
                related.MobileSupplyChainConfiguration  = Company.FinanceEnterpriseGroup
		
		MobileSupplyChainLocationRel
			one-to-one relation to MobileSupplyChainLocation
			Field Mapping uses symbolic key
				related.Company							= Company
				related.MobileSupplyChainLocation		= InventoryLocation
		
		MobileSupplyChainDeliveryTicketRel
			one-to-one relation to MobileSupplyChainDeliveryTicket
			Field Mapping uses symbolic key
				related.Company									= Company
				related.MobileSupplyChainLocation				= InventoryLocation
				related.MobileSupplyChainDeliveryTicket			= LocalMobileSupplyChainDeliveryTicket
		
		MobileSupplyChainDeliveryUnitRel
			one-to-one relation to MobileSupplyChainDeliveryUnit
			Field Mapping uses symbolic key
				related.Company									= Company
				related.MobileSupplyChainLocation				= InventoryLocation
				related.MobileSupplyChainDeliveryTicket			= LocalMobileSupplyChainDeliveryTicket
				related.MobileSupplyChainDeliveryUnit			= LocalMobileSupplyChainDeliveryUnit

		WarehouseShipmentLineDetailLotRel
			one-to-many relation to WarehouseShipmentLineDetail
			Field Mapping uses symbolic key
				related.Company							= Company
				related.InventoryLocation				= InventoryLocation
				related.WarehouseShipment				= WarehouseShipment
				related.WarehouseShipmentLine			= WarehouseShipmentLine
			Instance Selection
				where (related.WarehouseShipmentLineDetail.WarehouseShipmentLineDetail.Lot = LocalLot)
		
		MobileSupplyChainDeliveryLineLotRel
			one-to-many relation to MobileSupplyChainDeliveryLine
			Field Mapping uses ByLot
				related.Company									= Company
				related.MobileSupplyChainLocation				= InventoryLocation
				related.MobileSupplyChainDeliveryTicket			= LocalMobileSupplyChainDeliveryTicket
				related.OriginatingLineNumber					= WarehouseShipmentLine
				related.Lot										= LocalLot



#ifdef module integration
		FSMBODConfigurationParameterRel
    		one-to-one relation to FSMBODConfigurationParameter
    		Field Mapping uses symbolic key
    			related.FSMBODConfigurationParameter	= LocalConfigurationParameter

		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1

        FSMBODConfigurationDetailRel
        	one-to-many relation to FSMBODConfigurationDetail
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 			= 2
            	related.FSMBODConfiguration.Noun 			= "PulseAlert"
            	related.FSMBODConfiguration.Direction 		= 1
            Instance Selection
				where (related.Alert						= "FSM_ION_ShipmentBackordVoidAlert"
				and	   related.Enable)
#endif

		ShipmentLoadLineRel
			one-to-many relation to ShipmentLoadLine
			Field Mapping uses ByWarehouseShipmentLine
				related.Company               =  Company
				related.InventoryLocation     = InventoryLocation
				related.WarehouseShipment     = WarehouseShipment
				related.WarehouseShipmentLine = WarehouseShipmentLine
				
	Conditions
		RecordExists
			restricted
			when (WarehouseShipmentLine exists)

        IsBinTracked
        	restricted
            when (ItemLocation.LotTracked.NotLotTracked
            and   ItemLocation.BinTracked
            and   ItemLocation.SerialTracked.NotSerialTracked)
            
        IsUDITracked
        	restricted
        	when (ItemLocation.IsUDITracked)

		IsBinTrackedFlagOnly
			restricted
			when (ItemLocation.BinTracked)

		IsInventoriedOrNonstock
			restricted
			when (LineType.InventoriedItem or LineType.NonstockItem)

        IsCatchWeightItem
        	restricted
            classic name is CWT-ITEM
            when (IsInventoriedOrNonstock
            and   not Item.CatchWeightCode.NotCatchWeight)

		IsCatchWeightQuantityOutOfTolerance
			restricted
			when (CatchWeightQuantity entered
			and   DerivedCatchWeightVariancePercent > Item.CatchWeightVariancePercent)

        IsInProcess
        	restricted
            when (InProcessQuantity entered)

		CanUpdateCatchweight
        	restricted
            when (InProcessQuantity not entered
            or 	 (WarehouseShipment.Status.ReleaseInProgress
            and   Status.Unreleased))

		IsSerialTracked
			restricted
            when (!ItemLocation.SerialTracked.NotSerialTracked)

        IsSerialTrackedAtReceipt
        	restricted
            classic name is ITSERIAL
            when (ItemLocation.SerialTracked.SerialRequiredAtReceipt)

        IsSerialTrackedAtIssues
        	restricted
            classic name is SERIAL-TRACKED
            when (ItemLocation.SerialTracked.SerialRequiredAtIssue)

        IsKitItem
        	restricted
            when (KitItemRel exists
            and   KitItemRel.MakeCode.MakeToOrder)

        IsLotTracked
        	restricted
            when (not ItemLocation.LotTracked.NotLotTracked)

		IsLotTrackedAtReceipt
			restricted
			when (ItemLocation.LotTracked.LotRequiredAtReceipt)

        NoDetails
        	restricted
            when (not DetailRequired)

        IsMultipleUOMTracked
        	restricted
        	when (AlternateUOMRel exists
			and   not HasItemLocationStockUOM
        	and   first StockOnHandDetailRel exists)





        RequiresWalkthru
        	restricted
            classic name is WALKTHRU
            when (WalkThruRequired)

        IsBackOrderAllowed
        	restricted
        	when (WarehouseDemandLineRel.BackorderAllowed)


        IsDetailRequiredForBintracked
        	restricted
        	when (DetailRequired
        	and   IsBinTracked)

        IsDetailRequiredForCatchWeight
        	restricted
        	when (DetailRequired
        	and   IsCatchWeightItem)

        IsDetailRequiredForSerialTracked
        	restricted
        	when (DetailRequired
        	and   IsSerialTracked)

        IsDetailRequiredForSerialTrackedAtReceipt
        	restricted
        	when (DetailRequired
        	and   IsSerialTrackedAtReceipt)

		IsDetailRequiredForSerialTrackedAtIssues
			restricted
        	when (DetailRequired
        	and   IsSerialTrackedAtIssues)

        IsDetailRequiredForMultipleUOM
        	restricted
        	when (DetailRequired
        	and   IsMultipleUOMTracked)

        IsDetailRequiredForLocationStockUOM
        	restricted
        	when (DetailRequired
        	and   HasItemLocationStockUOM)

        IsDetailRequiredForKitItem
        	restricted
        	when (DetailRequired
        	and   IsKitItem)

        IsDetailRequiredForLotTracked
        	restricted
        	when (DetailRequired
        	and   IsLotTracked)

        IsDetailRequired
        	restricted								
        	when (ItemLocation.DetailTrackedOnIssue
        	and   LineType.InventoriedItem
        	and   not IsKitItem)
        
        ShowDetailPanel
        	when (IsDetailRequired
        	and   not IsUDIDetailRequired)

        IsUDIDetailRequired
        	restricted
        	when (IsUDITracked
        	and   LineType.InventoriedItem
        	and   not IsKitItem)
        	
        IsNotShipComplete
        	restricted
        	when (!WarehouseDemandRel.RequireCompleteShipment)

        IsInventoriedCatchWeightItem
        	restricted
        	when (LineType.InventoriedItem
        	and   Item.IsCatchWeightItem
        	and   CatchWeightQuantity not entered)

        CatchWeightAndDetailCatchWeightMismatch
        	restricted
        	when (DetailRequired
        	and   CatchWeightQuantity != DetailCatchWeightQuantity )

        ShippingFeedbackDoesNotExist
        	restricted
        	when (WarehouseShipment.Status.Printed)

        IsOnlySerialTracked
        	restricted
        	when (ItemLocation.IsSerialTracked
        	and  !ItemLocation.BinTracked)

        IsOnlyLotTrackedAtIssue
        	restricted
        	when (ItemLocation.LotTracked.LotRequiredAtIssue
        	and  !ItemLocation.BinTracked)

        IsPlainCatchWeightItem
        	restricted
        	when (Item.IsCatchWeightItem
        	and  !ItemLocation.BinTracked
        	and  !ItemLocation.IsLotTracked
        	and  !IsMultipleUOMTracked)

  		HasBackorder		
  			restricted
  			when (WarehouseShipmentLineAuditForBackorderRel exist)

  		HasVoid
  			restricted
  			when (WarehouseShipmentLineAuditForVoidRel exist)

  		MissingInventoryTransactionLines
  			restricted
  			when (LineType.InventoriedItem
  			and  (WarehouseShipment.Status.Closed
  			or    WarehouseShipment.Status.Released)
  			and   InventoryTransactionLinesRel not exists
  			and   DerivedShippedQuantity > 0)

		InventoryTransactionLineExists
			when (InventoryTransactionLinesRel exists)
			
  		WarehouseDemandLineExists
  			restricted
  			when (WarehouseDemandLineRel exists)

  		IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)

		HasAuditRecords
			restricted
			when (WarehouseShipmentLineAuditsRel exists)

		HasItemComments
			restricted
			when (ShipmentLineItemCommentsRel exists)

		HasPackingListShipmentLineDetails
			restricted
			when (WarehouseShipmentLineDetailsRel exists)

		HasOneDetailRecord
			restricted
			when (instance count of WarehouseShipmentLineDetailsRel = 1)

		DisplayCatchWeightEntryForBackorderVoid
			restricted
			when (IsCatchWeightItem
			and  ((!IsDetailRequired)
			or    (IsDetailRequired and HasOneDetailRecord)))
			
		IsValidForUpdate
			restricted
			when (WarehouseShipment.IsPrintedPickedOrPacked
			or   (WarehouseShipment.Status.ReleaseInProgress
			and   Status.Unreleased))
			
		HasPartialOrNoBackorder
			restricted
			when (TotalBackorderQuantity != PrintedQuantity)

		HasDetailWithExpiredLot
			restricted
			when (Company.DoNotAllowExpiredLotOnTransaction
			and   not WarehouseShipment.Status.Closed
			and   WarehouseShipmentLineDetailWithExpiredLotsRel exists)

		HasDetailWithExpiringLot
			restricted
			when (not Company.DoNotAllowExpiredLotOnTransaction
			and   not WarehouseShipment.Status.Closed
			and   WarehouseShipmentLineDetailWithExpiringLotsRel exists)

		HasItemLocationStockUOM
			when (IsInventoriedOrNonstock
			and   ItemLocation.HasItemLocationStockUOM)

		HasSpecialHandling
			restricted
			when (RequisitionLineRel.SpecialHandlingCode entered)

		HasLineComponentSpecialHandling
			when (LineComponentSpecialHandlingRel exists)

		HasLineComponent
			when (WarehouseShipmentLineComponentsRel exists)

		HasMobileSupplyChainTracking
			when (MobileSupplyChainShipmentDetailTrackingRel exists)

		IsValidForDelivery
			when (MobileSupplyChainConfigurationRel.MobileSupplyChainEnabled
			and   WarehouseShipment.InventoryLocation.MSCMDelivery
			and   WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions
			and   not WarehouseShipment.IsPickOrPack)

		IsTrackedByContainer
            when (IsValidForDelivery
			and   MobileSupplyChainLocationRel.ActualTrackDeliveryOption = MobileSupplyChainLocation.TrackDeliveryOption.Container)
		
		IsTrackedByShipmentLine
            when (IsValidForDelivery
			and	  MobileSupplyChainLocationRel.ActualTrackDeliveryOption = MobileSupplyChainLocation.TrackDeliveryOption.ShipmentLine)
		
		IsTrackedByShipment
            when (IsValidForDelivery
			and   MobileSupplyChainLocationRel.ActualTrackDeliveryOption = MobileSupplyChainLocation.TrackDeliveryOption.Shipment)
		
		IsTrackedByContainerOnly
            when (IsTrackedByContainer and not IsUDIDetailRequired and not IsDetailRequired)

		HasUDIDetail
			when (InventoryUDIDetailsRel exists)
			
		PrintDeliveryDocument
			when (MobileSupplyChainConfigurationRel.PrintPickingOptions.PrintDeliveryLabelAndDocument 
			or    MobileSupplyChainConfigurationRel.PrintPickingOptions.PrintDeliveryDocumentOnly)
		
		PrintDeliveryLabel
			when (MobileSupplyChainConfigurationRel.PrintPickingOptions.PrintDeliveryLabelOnly 
			or    MobileSupplyChainConfigurationRel.PrintPickingOptions.PrintDeliveryDocumentOnly)	
    Sets

        Set2
            indexed
            Sort Order
                Company
                RequestingDocument.DemandSystemCode
                RequestingDocument.DocumentNumber
                WarehouseShipmentLine
                WarehouseShipment

        Set3
            indexed
            Instance Selection
                where (RequiresWalkthru)
            Sort Order
                Company
                InventoryLocation
                WarehouseShipment
                WarehouseShipmentLine
                Item

        Set6
            indexed
            Sort Order
                Company
                InventoryLocation
                WarehouseShipmentLine
                WarehouseShipment


	Field Rules
		UpdateDate
			default to current timestamp

		CatchWeightQuantity
			if (not IsCatchWeightItem)
				cannot be entered
					"CannotEnterCatchWeightStockQuantity;Item<Item>NotSetUpForCatchWeight"

			if (IsCatchWeightItem
			and IsDetailRequired)  
				cannot be entered
					"CatchWeightStockQuantityMustBeEnteredAtTheDetailLevelForBin/LotTrackedItem"
				cannot be changed
					"CatchWeightStockQuantityComesFromDetails;CannotBeChanged"

	Actions
		Create is a Create Action
			restricted
		
		FastUpdate is an Update Action
			restricted
			bypass field rules

		Update is an Update Action
			valid when (IsValidForUpdate)
			Action Rules
				constraint (Status.Unreleased)
					"CannotUpdateLine<WarehouseShipmentLine>;ShipmentLineIsAlreadyReleased"	
				constraint (IsValidForUpdate)
					"CannotUpdateLine<WarehouseShipmentLine>;ShipmentIsIn<WarehouseShipment.Status>State"				



















				if (LineType.InventoriedItem)
					constraint (!ItemLocation.FrozenForPhysicalInventory)
						"ForLine<WarehouseShipmentLine>,Item<Item>IsFrozenOnLocation<InventoryLocation>"		

				if (IsKitItem)
					if (TransientPreAssembledQuantity entered)
						if (TransactionUOM != Item.StockUOM)
							initialize UOMCalculation
							LocalInputQuantity 		= TransientPreAssembledQuantity
							include UOMConversionIntoStockUOM
							PreAssembledKitQuantity = UOMCalculation.OutputQuantity
						else
							PreAssembledKitQuantity = TransientPreAssembledQuantity

						constraint (PreAssembledKitQuantity = PrintedQuantity)
							"PreAssembledKitQuantityShouldBeEqualToPrintedQuantityForLine<WarehouseShipmentLine>"			

						initialize LocalActionUndo
						include AssignForShipmentLineAudit
						if (PreAssembledKitQuantity changed)
							constraint (WarehouseShipmentLineAuditRel not exist)
								"CannotChangePreAssembledKitQuantity;AuditExists"

					if (PreAssembledKitQuantity entered)
						constraint (PreAssembledKitQuantity <= ItemLocation.StockOnHandQuantity)
							"KitQuantityCannotBeGreaterThanItemLocationStockOnHandQuantity"						

						invoke UpdateFromWarehouse WarehouseDemandLineRel
							invoked.PrmPreAssembledKitQuantity = PreAssembledKitQuantity

						if (WarehouseShipmentLineAuditRel not exist)
							invoke Create WarehouseShipmentLineAudit
								fill in fields from this instance
								if (WarehouseShipment.Status.Printed)
									if (WarehouseShipment.RequirePickingFeedback)
										invoked.WarehouseShipmentLineAudit = 1
									else
									if (WarehouseShipment.IsOnlyPackingRequired)
										invoked.WarehouseShipmentLineAudit = 2
									else
										invoked.WarehouseShipmentLineAudit = 3
								else
								if (WarehouseShipment.Status.Picked)
									if (WarehouseShipment.RequirePackingFeedback)
										invoked.WarehouseShipmentLineAudit = 2
									else
										invoked.WarehouseShipmentLineAudit = 3
								else
									if (WarehouseShipment.Status.Packed)
										invoked.WarehouseShipmentLineAudit = 3

				if (StockVolume changed
				or  StockWeight changed)
					invoke UpdateFromShipmentLine WarehouseShipment
						invoked.PrmStockVolume = StockVolume - old StockVolume
						invoked.PrmStockWeight = StockWeight - old StockWeight

		Delete is a Delete Action
			valid when (WarehouseShipment.Status.Printed)
			Entrance Rules
				constraint (WarehouseShipment.Status.Printed)
					"CannotDeleteLine<WarehouseShipmentLine>;ShipmentIsIn<WarehouseShipment.Status>"

				constraint (WarehouseShipmentLineAuditsRel not exists)
					"CannotDeleteFeedbackExistsForLine<WarehouseShipmentLine>;UndoAllFeedbackStepsBeforeDeletingShipmentLine"
				
				if (InventoryUDIDetailsRel exists)
					invoke Delete InventoryUDIDetailsRel
				else
					invoke Delete WarehouseShipmentLineDetailsRel
				
				invoke UpdateFromWarehouse WarehouseDemandLineRel
					invoked.PrmPrintedQuantity 				= PrintedQuantity * -1
					if (PreAssembledKitQuantity entered)
						invoked.PrmPreAssembledKitQuantity	= PreAssembledKitQuantity * -1

				if (IsKitItem
				and PreAssembledKitQuantity not entered)
					for each KitComponentsRel
						LocalComponentSequence = each.KitComponent.ComponentSequence
						LocalPrintedQuantity   = each.Quantity * PrintedQuantity
						invoke UpdateFromWarehouse WarehouseDemandLineRel
							invoked.PrmPrintedQuantity = LocalPrintedQuantity * -1

				if (OtherWarehouseShipmentLineRel not exist)
					invoke UpdateStatus WarehouseShipment

		QuickDelete is a Delete Action
			restricted
			Entrance Rules
				constraint (WarehouseShipment.IsPrintedPickedOrPacked)
					"CannotDeleteLine<WarehouseShipmentLine>;ShipmentIsIn<WarehouseShipment.Status>"

				constraint (WarehouseShipmentLineAuditsRel not exists)
					"CannotDeleteFeedbackExistsForLine<WarehouseShipmentLine>;UndoAllFeedbackStepsBeforeDeletingShipmentLine"
				
				if (InventoryUDIDetailsRel exists)
					invoke Delete InventoryUDIDetailsRel
				else
					invoke Delete WarehouseShipmentLineDetailsRel
						
		Merge is an Instance Action
			restricted
			Action Rules
				for each OtherShipmentLinesForMergeRel 
					LocalShipment 	  		= each.WarehouseShipment
					LocalShipmentLine 		= each.WarehouseShipmentLine


					if (WarehouseShipmentLine = LocalShipmentLine)
						PrintedQuantity			  += each.PrintedQuantity
						InProcessQuantity		  += each.InProcessQuantity
						ShippedQuantity			  += each.ShippedQuantity
						DeliveredQuantity		  += each.DeliveredQuantity
						CatchWeightQuantity		  += each.CatchWeightQuantity
						PreAssembledKitQuantity	  += each.PreAssembledKitQuantity
						KitComponentQuantity	  += each.KitComponentQuantity
						DetailQuantity 			  += each.DetailQuantity
						DetailCatchWeightQuantity += each.DetailCatchWeightQuantity
						LocalStockWeight		  += each.StockWeight
						LocalStockVolume		  += each.StockVolume
						SupplementaryQuantity	  += each.SupplementaryQuantity

						invoke Merge WarehouseShipmentLineDetailsRel

						invoke Merge WarehouseShipmentLineComponentsRel

						invoke QuickDelete each

					else
					if (DuplicateShipmentLineRel not exists)
						invoke Create WarehouseShipmentLine
							fill in fields from each
							invoked.WarehouseShipment 		= WarehouseShipment
							invoked.WarehouseShipmentLine	= LocalShipmentLine

						for each WarehouseShipmentLineComponentsForMergeRel
							invoke Create WarehouseShipmentLineComponent
								fill in fields from each
								invoked.WarehouseShipment				= WarehouseShipment
								invoked.WarehouseShipmentLine			= LocalShipmentLine

							invoke Delete each

						for each WarehouseShipmentLineDetailsForMergeRel
							invoke Create WarehouseShipmentLineDetail
								fill in fields from each
								invoked.WarehouseShipment 		= WarehouseShipment
								invoked.WarehouseShipmentLine	= LocalShipmentLine
								invoked.CopyDetails				= true

							invoke Delete each

						invoke QuickDelete each





				invoke UpdateFromShipmentLine WarehouseShipment
					invoked.PrmStockVolume = LocalStockVolume
					invoked.PrmStockWeight = LocalStockWeight

				StockVolume += LocalStockVolume
				StockWeight += LocalStockWeight


































































#ifdef module integration
		ShipmentBackordVoidAlert is an Instance Action
			restricted
			Parameters
			Action Rules
				invoke TriggerPulseAlert FSMBODConfigurationRel
					invoked.PrmActorGroup 	= "ORDERPROCESSINGMANAGER"
					invoked.PrmMainXML 		= ShipmentBackordVoidPulseAlertXML
					invoked.PrmDescription	= ShipmentBackordVoidAlertDescription
					invoked.PrmBODID		= DerivedShipmentBackordVoidBODID
#endif

		Backorder is an Instance Action
			valid when (WarehouseShipment.IsPrintedPickedOrPacked)
			Parameters
				PrmTransactionQuantity		is like UnsignedQuantity
					default label is "InProcessQuantity"
				PrmStockQuantity			is like UnsignedQuantity
					default label is "CatchWeightStockQuantity"
			Parameter Rules
				PrmTransactionQuantity
					constraint (PrmTransactionQuantity <= DerivedPrintedQuantityInTransUOM)
						"InProcessQuantityCannotBeGreaterThanPrintedQuantity"														
					constraint (PrmTransactionQuantity <= WarehouseDemandLineRel.AllocatedQuantityInTransactionUOM)
						"CannotProcessMoreThanAllocatedQuantity"
					if (PrmTransactionQuantity not entered
					and WarehouseShipmentLineAuditsRel exists)
						constraint (InProcessQuantity > 0)
							"NoMoreQuantityLeftToBackorder"
					if (PrmTransactionQuantity not entered
					and WarehouseShipmentLineAuditsRel not exists)
						confirmation required
							"InProcessQuantityHasNotBeenEntered;AFullBackorderWillBeDone.Continue?"
				PrmStockQuantity
					initial value is CatchWeightQuantity
					if (IsCatchWeightItem
					and PrmTransactionQuantity entered)
						required
			Local Fields
				LocalAuditQuantity			is like Quantity
			Action Rules
				constraint (WarehouseDemandLineRel exist)
					"WarehouseDemandRecordDoesNotExistForLine<WarehouseShipmentLine>"
				constraint (IsNotShipComplete)
					"DemandRequiresCompleteShipment;CannotBackorderForLine<WarehouseShipmentLine>"
				constraint (IsBackOrderAllowed)
					"BackorderNotAllowedForLine<WarehouseShipmentLine>"
				constraint (WarehouseDemandLineRel.FillOrKill.FillBackorders)
					"DemandForLine<WarehouseShipmentLine>MustBeSetAsFillBackorders"
				constraint (IsBackOrderAllowed)
					"BackorderNotAllowedForLine<WarehouseShipmentLine>"
				constraint (VoidAuditForNextStateRel not exists)
					"CannotPerformBackorder;Line<WarehouseShipmentLine>IsVoided"
				constraint (OvershipAuditForNextStateRel not exists)
					"CannotPerformBackorder.UnfinishedQuantitiesForOvershipExists"
				constraint (PreAssembledKitQuantity not entered)
					"PreAssembledKitQuantityShouldNotBeEnteredForLine<WarehouseShipmentLine>"

				if (IsCatchWeightItem)
					InProcessQuantity					= PrmTransactionQuantity 
					CatchWeightQuantity					= PrmStockQuantity
				else
					InProcessQuantity					= PrmTransactionQuantity * TransactionUOMMultiplier 

				invoke TriggerShipmentBackOrderedOrVoidedService

			Exit Rules
				if (InProcessQuantity = PrintedQuantity)
					invoke Delete BackorderAuditForNextStateRel
				else
					if (WarehouseShipmentLineAuditsRel not exists)
						LocalAuditQuantity							= PrintedQuantity - InProcessQuantity
					else
						LocalAuditQuantity							= old InProcessQuantity - InProcessQuantity

					if (BackorderAuditForNextStateRel exists)
						invoke Update BackorderAuditForNextStateRel
							invoked.Quantity					   += LocalAuditQuantity
					else
						invoke Create WarehouseShipmentLineAudit
							fill in fields from this instance
							invoked.WarehouseShipmentLineAudit  	= WarehouseShipment.NextStatus
							invoked.Quantity						= LocalAuditQuantity
							invoked.ActionCode						= "B"

				if (InProcessQuantity not entered)
					for each WarehouseShipmentLineDetailsRel
						invoke Delete each
				else
					if (ItemLocation.BinTracked
					or  ItemLocation.IsLotTracked)
						if (instance count of WarehouseShipmentLineDetailsRel = 1)
							invoke UpdateQuantities WarehouseShipmentLineDetailsRel
								invoked.PrmQuantity				= InProcessQuantity
								invoked.PrmCatchWeightQuantity	= CatchWeightQuantity

		Void is an Instance Action
			valid when (WarehouseShipment.IsPrintedPickedOrPacked)
			Parameters
				PrmTransactionQuantity		is like UnsignedQuantity
					default label is "InProcessQuantity"
				PrmStockQuantity			is like UnsignedQuantity
					default label is "CatchWeightStockQuantity"
			Parameter Rules
				PrmTransactionQuantity
					constraint (PrmTransactionQuantity <= DerivedPrintedQuantityInTransUOM)
						"InProcessQuantityCannotBeGreaterThanPrintedQuantity"													
					constraint (PrmTransactionQuantity <= WarehouseDemandLineRel.AllocatedQuantityInTransactionUOM)
						"CannotProcessMoreThanAllocatedQuantity"
					if (PrmTransactionQuantity not entered
					and WarehouseShipmentLineAuditsRel not exists)
						confirmation required
							"InProcessQuantityHasNotBeenEntered;AFullVoidWillBeDone.Continue?"
				PrmStockQuantity
					initial value is CatchWeightQuantity
					if (IsCatchWeightItem
					and PrmTransactionQuantity entered)
						required
			Local Fields
				LocalAuditQuantity			is like Quantity
			Action Rules
				constraint (WarehouseDemandLineRel exist)
					"DemandLineRecordDoesNotExistForLine<WarehouseShipmentLine>"
				constraint (BackorderAuditForNextStateRel not exists)
					"CannotPerformVoid;Line<WarehouseShipmentLine>IsBackordered"
				constraint (OvershipAuditForNextStateRel not exists)
					"CannotPerformVoid.UnfinishedQuantitiesForOvershipExists"
				constraint (WarehouseDemandLineRel.Quantity entered)
    				"DemandQuantityCannnotBeZeroIfDemandQuantityIsInprocess"													
				constraint (PreAssembledKitQuantity not entered)
					"PreAssembledKitQuantityShouldNotBeEnteredForLine<WarehouseShipmentLine>"

				if (IsCatchWeightItem)
					InProcessQuantity					= PrmTransactionQuantity 
					CatchWeightQuantity					= PrmStockQuantity
				else
					InProcessQuantity					= PrmTransactionQuantity * TransactionUOMMultiplier 

				invoke TriggerShipmentBackOrderedOrVoidedService

			Exit Rules
				if (InProcessQuantity = PrintedQuantity)
					invoke Delete VoidAuditForNextStateRel
				else
					if (WarehouseShipmentLineAuditsRel not exists)
						LocalAuditQuantity							= PrintedQuantity - InProcessQuantity
					else
						LocalAuditQuantity							= old InProcessQuantity - InProcessQuantity

					if (VoidAuditForNextStateRel exists)
						invoke Update VoidAuditForNextStateRel
							invoked.Quantity					    += LocalAuditQuantity
					else
						invoke Create WarehouseShipmentLineAudit
							fill in fields from this instance
							invoked.WarehouseShipmentLineAudit  	 = WarehouseShipment.NextStatus
							invoked.Quantity						 = LocalAuditQuantity
							invoked.ActionCode						 = "V"

				if (InProcessQuantity not entered)
					if (InventoryUDIDetailsRel exists)
						invoke Delete InventoryUDIDetailsRel
					else
						for each WarehouseShipmentLineDetailsRel
							invoke Delete each
				else	
					if (ItemLocation.BinTracked
					or  ItemLocation.IsLotTracked)
						if (instance count of WarehouseShipmentLineDetailsRel = 1)
							invoke UpdateQuantities WarehouseShipmentLineDetailsRel
								invoked.PrmQuantity				= InProcessQuantity
								invoked.PrmCatchWeightQuantity	= CatchWeightQuantity

		Overship is an Instance Action
			valid when (WarehouseShipment.IsPrintedPickedOrPacked)
			Parameters
				PrmTransactionQuantity		is like UnsignedQuantity
					default label is "InProcessQuantity"
				PrmStockQuantity			is like UnsignedQuantity
					default label is "CatchWeightStockQuantity"
			Parameter Rules
				PrmStockQuantity
					initial value is CatchWeightQuantity
					if (IsCatchWeightItem)
						required
			Local Fields
				LocalAuditQuantity			is a Quantity

			Action Rules
				if (IsCatchWeightItem)
					InProcessQuantity					= PrmTransactionQuantity 
					CatchWeightQuantity					= PrmStockQuantity
				else
					InProcessQuantity					= PrmTransactionQuantity * TransactionUOMMultiplier 

				constraint (InProcessQuantity <= WarehouseDemandLineRel.AllocatedQuantity)
					"CannotProcessMoreThanAllocatedQuantity"
				if (OvershipAuditForNextStateRel not exists)
					constraint (InProcessQuantity > DerivedOpenQuantity)
						"NoQuantitiesFoundForOvership"
				constraint (BackorderAuditForNextStateRel not exists)
					"CannotPerformOvership.UnfinishedQuantitiesForBackorderExists"
				constraint (VoidAuditForNextStateRel not exists)
					"CannotPerformOvership.UnfinishedQuantitiesForVoidExists"

			Exit Rules
				if (OvershipAuditForNextStateRel exists)
					LocalAuditQuantity						 		 = InProcessQuantity - old InProcessQuantity

					if (InProcessQuantity > DerivedOpenQuantity)
						invoke Update OvershipAuditForNextStateRel
							invoked.Quantity					    += LocalAuditQuantity
					else
						invoke Delete OvershipAuditForNextStateRel
				else
					LocalAuditQuantity						 		 = InProcessQuantity - DerivedOpenQuantity	

					invoke Create WarehouseShipmentLineAudit
						fill in fields from this instance
						invoked.WarehouseShipmentLineAudit  	 	 = WarehouseShipment.NextStatus
						invoked.Quantity						 	 = LocalAuditQuantity
						invoked.ActionCode							 = "O"

				for each WarehouseShipmentLineComponent set
					invoke AdjustQuantities each
						if (old InProcessQuantity entered)
							invoked.PrmQuantity = ((each.Quantity / old InProcessQuantity) * InProcessQuantity)
						else
							invoked.PrmQuantity = ((each.Quantity / PrintedQuantity) * InProcessQuantity)

				invoke UpdateFromShipmentLine WarehouseDemandLineRel
					invoked.PrmPrintedQuantity					 	 = LocalAuditQuantity

		ValidateLineOnFinish is an Instance Action
			restricted
			Local Fields
				LocalDetailQuantity				is a Quantity
				LocalFullVoidBackorder			is Boolean
				LocalTotalVoidBackorderQuantity	is a Quantity
			Action Rules
				LocalFullVoidBackorder = false
				if (InProcessQuantity not entered)
					LocalTotalVoidBackorderQuantity = (VoidAuditForNextStateRel.Quantity + BackorderAuditForNextStateRel.Quantity)
					if (LocalTotalVoidBackorderQuantity = PrintedQuantity)
						LocalFullVoidBackorder = true

				if (!LocalFullVoidBackorder)
					if (IsCatchWeightItem)
						if (!IsDetailRequired)
							constraint (CatchWeightQuantity entered)
								"CatchWeightQuantityIsRequiredForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
						else
							constraint (!WarehouseShipmentLineDetailNoCatchWeightRel exists)
								"CatchWeightQuantityIsRequiredOnTheDetailsForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"

				if (RequisitionLineRel.IsTransactionTypeTransfer
				and FromToCompanyItemLocationRel.BinTracked)
					constraint (FromToCompanyItemLocationRel.PreferredBin entered)
						"PreferredBinRequiredForToLocation<FromToCompanyItemLocationRel.InventoryLocation>"      

				if (IsUDIDetailRequired or IsDetailRequired)
					if (InProcessQuantity entered)

						if (IsUDIDetailRequired)
							constraint (InventoryUDIDetailsRel exists)
								"ShipmentLineUDIDetailDoesNotExistForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"

						if (IsDetailRequired)
							constraint (WarehouseShipmentLineDetailsRel exists)
								"ShipmentLineDetailDoesNotExistForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
							
					initialize LocalUDIDetailQuantity	
					initialize DetailQuantity
					initialize DetailCatchWeightQuantity
					if (WarehouseShipment.NextStatus = WarehouseShipment.Status.Shipped)	

						if (IsUDIDetailRequired)
							for each InventoryUDIDetailsRel
								if (IsTrackedByContainer)
                                    constraint (each.TransientTrackingNumber != blank)
                                        "UDIDetailHasNoTrackingNumberForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
								if (Item.StockUOM = each.UOM)
									LocalUDIDetailQuantity += each.Quantity
								else
									initialize UOMCalculation
									UOMCalculation.InputUOM      = each.UOM
									UOMCalculation.InputQuantity = each.Quantity
									UOMCalculation.Method        = UOMCalculation.Method.ConvertToStock
									LocalUDIDetailQuantity         += UOMCalculation.OutputQuantity
								
							if(InventoryUDIDetailsRel exists)
								if (WarehouseShipment.Status.Printed
								and WarehouseShipmentLineAuditsRel not exists
								and InProcessQuantity not entered)
									constraint (LocalUDIDetailQuantity = PrintedQuantity)
										"UDIDetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
								else
									constraint (LocalUDIDetailQuantity = InProcessQuantity)
										"UDIDetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"


						if (IsDetailRequired)
							if (IsDetailRequiredForLotTracked)
								constraint (WarehouseShipmentLineDetailsLotRel not exists)
									"ShipmentLineDetailHasNoLotForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"

							for each WarehouseShipmentLineDetailsRel
								if (IsTrackedByContainer and not IsUDIDetailRequired)
                                    constraint (each.TransientTrackingNumber  != blank)
                                        "ShipmentLineDetailHasNoTrackingNumberForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
								
								DetailQuantity 					+= each.Quantity
								if (Item.StockUOM                = each.WarehouseShipmentLineDetail.UnitOfMeasure
								or  IsCatchWeightItem)
									LocalDetailQuantity         += each.Quantity
								else
									initialize UOMCalculation
									UOMCalculation.InputUOM      = each.WarehouseShipmentLineDetail.UnitOfMeasure
									UOMCalculation.InputQuantity = each.Quantity
									UOMCalculation.Method        = UOMCalculation.Method.ConvertToStock
									LocalDetailQuantity         += UOMCalculation.OutputQuantity
								DetailCatchWeightQuantity		+= each.CatchWeightQuantity
	
							if (WarehouseShipment.Status.Printed
							and WarehouseShipmentLineAuditsRel not exists
							and InProcessQuantity not entered)
								constraint (LocalDetailQuantity 		= PrintedQuantity)
									"DetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
							else
								constraint (LocalDetailQuantity 		= InProcessQuantity)
									"DetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
	
							constraint (DetailCatchWeightQuantity 	= CatchWeightQuantity)
								"CatchWeightQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
	
							if (IsKitItem
							and PreAssembledKitQuantity not entered)
								for each WarehouseShipmentLineComponent set
									invoke ValidateFromWarehouse each

				if (IsTrackedByShipmentLine)
                    invoke GenerateTrackingNumber MobileSupplyChainConfigurationRel
                    LocalTrackingNumber = MobileSupplyChainConfigurationRel.DerivedTrackingNumber
                    TrackingNumber = LocalTrackingNumber
 
                if (IsTrackedByContainer)
					for each MobileSupplyChainShipmentDetailTrackingRel
						if (not IsDetailRequired)
							constraint (each.TrackingNumber entered)
								"ShipmentLineDetailHasNoTrackingNumberForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
							constraint (not each.HasDuplicateTrackingNumber)
								"Shipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>HasDuplicateTrackingNumbers"
							
					if (WarehouseShipment.Status.Printed
					and WarehouseShipmentLineAuditsRel not exists
					and InProcessQuantity not entered)
						constraint (DerivedSumLineTrackingQuantity         = DerivedPrintedQuantityInTransUOM)
							"DetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"
					else
						constraint (DerivedSumLineTrackingQuantity         = DerivedInProcessQuantityInTransUOM)
							"DetailQuantityIsOutOfBalanceForShipment<WarehouseShipment>Line<WarehouseShipmentLine>Item<Item>"

		ValidateCatchWeightLineOnRelease is an Instance Action
			restricted
			Local Fields
				LocalTotalCatchWeightQuantity	is a Quantity
			Action Rules
				LocalTotalCatchWeightQuantity = CatchWeightQuantity
				for each OtherWarehouseShipmentLineForAnItemRel
					LocalTotalCatchWeightQuantity += each.CatchWeightQuantity
				constraint (LocalTotalCatchWeightQuantity <= (ItemLocation.StockOnHandQuantity - ItemLocation.InspectionHoldQuantityInStockUOM))
					"TotalCatchweightQuantityExceedsAvailableQuantityOnLocationFor_Item<Item>"

		FinishLinesSet is a Set Action
			restricted
			Parameters
				PrmCompany				is an InventoryCompany
				PrmInventoryLocation	is an InventoryLocation
				PrmWarehouseShipment    is a  WarehouseShipment
				PrmFromPrinted			is Boolean
				PrmReleaseAfterShipped  is a ReleaseAfterShipped 
			Instance Selection
				where (Company				= PrmCompany
				and    InventoryLocation	= PrmInventoryLocation
				and    WarehouseShipment	= PrmWarehouseShipment)
			Action Rules
				Empty Set Rules
					display "WHSSetEmpty"
					invoke FinishCompletion	PrmWarehouseShipment
				Set Rules
					Exit Rules
						display "WHSSetExit"
						invoke FinishCompletion	PrmWarehouseShipment
				Instance Rules
					invoke Finish
						invoked.PrmFromPrinted	= PrmFromPrinted

		Finish is an Instance Action
			restricted
			Parameters
				PrmFromPrinted				is Boolean
			Local Fields
				LocalFirstFinish			is Boolean
				LocalVoidedQuantity			is a Quantity
				LocalBackorderedQuantity	is a Quantity
				LocalOvershipQuantity		is a Quantity
			Action Rules
				if (WarehouseShipment.Status.Printed
				or  PrmFromPrinted)
					LocalFirstFinish					= true
					if (WarehouseShipmentLineAuditsRel not exists)
						InProcessQuantity				= PrintedQuantity

				LocalVoidedQuantity 		= VoidAuditForNextStateRel.Quantity
				LocalBackorderedQuantity	= BackorderAuditForNextStateRel.Quantity
				LocalOvershipQuantity	    = OvershipAuditForNextStateRel.Quantity

			Exit Rules
				if (IsKitItem
				and PreAssembledKitQuantity not entered)
					if (LocalFirstFinish)
						invoke UpdateFromWarehouse WarehouseDemandLineRel
							invoked.PrmInProcessQuantity		= InProcessQuantity

					for each KitComponentsRel
						LocalInProcessQuantity 		= each.Quantity * InProcessQuantity
						LocalComponentSequence		= each.KitComponent.ComponentSequence

						include UpdateWarehouseDemandLine
				else
					initialize LocalComponentSequence
					LocalInProcessQuantity = InProcessQuantity
					include UpdateWarehouseDemandLine


		Undo is an Instance Action
			restricted
			Local Fields
				LocalFirstFinish				is Boolean
				LocalVoidedQuantity				is a Quantity
				LocalBackorderedQuantity		is a Quantity
				LocalOvershipQuantity			is a Quantity

			Action Rules
				constraint (AuditsForNextStateRel not exists)
					"ShipmentLine<WarehouseShipmentLine>HasPendingVoidOrBackorderQuantities<WarehouseShipment.DerivedStatus>"

				LocalVoidedQuantity 			= VoidAuditForCurrentStateRel.Quantity
				LocalBackorderedQuantity		= BackorderAuditForCurrentStateRel.Quantity
				LocalOvershipQuantity			= OvershipAuditForCurrentStateRel.Quantity

				if ((WarehouseShipment.Status.Packed and WarehouseShipment.IsOnlyPackingRequired)
				or  (WarehouseShipment.Status.Shipped and not WarehouseShipment.IsPickOrPack)
				or   WarehouseShipment.Status.Picked)
					LocalFirstFinish = true
					initialize InProcessQuantity
				else
					InProcessQuantity          += LocalVoidedQuantity + LocalBackorderedQuantity - LocalOvershipQuantity

			Exit Rules
				invoke UpdateFromShipmentLine WarehouseDemandLineRel
					if (LocalFirstFinish)
						invoked.PrmInProcessQuantity				= (old InProcessQuantity * -1)
						invoked.PrmItemLocationAllocatedQuantity	=  old InProcessQuantity + LocalVoidedQuantity + LocalBackorderedQuantity
					else
						invoked.PrmInProcessQuantity				= ((LocalVoidedQuantity + LocalBackorderedQuantity) - LocalOvershipQuantity)
					invoked.PrmVoidedQuantity					   	= LocalVoidedQuantity * -1
					invoked.PrmBackorderedQuantity				   	= LocalBackorderedQuantity * -1
					invoked.PrmPrintedQuantity						= LocalOvershipQuantity * -1

				if (RequisitionLineRel.InventoryTransactionType.IntransitTransfer
				or  RequisitionLineRel.InventoryTransactionType.DirectTransfer)
					invoke UpdateFromShipmentLine SupplyRecordsRel
						if (LocalFirstFinish)
							invoked.PrmInProcessQuantity				= (old InProcessQuantity * -1)
							invoked.PrmItemLocationAllocatedQuantity	=  old InProcessQuantity + LocalVoidedQuantity + LocalBackorderedQuantity
						else
							invoked.PrmInProcessQuantity				= ((LocalVoidedQuantity + LocalBackorderedQuantity) - LocalOvershipQuantity)
						invoked.PrmVoidedQuantity					   	= LocalVoidedQuantity * -1
						invoked.PrmBackorderedQuantity				   	= LocalBackorderedQuantity * -1
						invoked.PrmPrintedQuantity						= LocalOvershipQuantity * -1

				invoke Delete AuditsForCurrentStateRel

		BatchRelease is a Set Action
			restricted
			Parameters
				PrmInventoryCompany		is an InventoryCompany
				PrmInventoryLocation	is an InventoryLocation
				PrmInventoryTransaction is an InventoryTransaction
				PrmWarehouseShipment    is a  WarehouseShipment
			Local Fields
				LocalMainTrigger						 is Boolean
				LocalVarianceAmount						 is like InternationalAmount
				LocalReceivedQuantity					 is like Quantity
				LocalReceivedGrossAmount				 is like InternationalAmount
				LocalReceivingInventoryTransaction 		 is an InventoryTransaction view
			    LocalIntransitAndReceivingDocumentNumber is an InventoryTransaction
		        LocalIntransitAndReceivingDocumentType   is like InventoryDocumentType
		        LocalTransactionLinesCreated     		 is Boolean
		    Parameter Rules
		    	PrmInventoryCompany
		    		required
		    	PrmInventoryLocation
		    		required
		    	PrmWarehouseShipment
		    		required
		    	PrmInventoryTransaction
		    		required
			Sort Order
				Company
				InventoryLocation
				WarehouseShipment
			Instance Selection
				where (PrmInventoryCompany  = Company
				and    PrmInventoryLocation = InventoryLocation
				and    PrmWarehouseShipment = WarehouseShipment
				and    Status.Unreleased)
			Action Rules
				Set Rules
					Entrance Rules
						if (PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer
						or  PrmInventoryTransaction.InventoryDocumentType.DirectTransfer)
							invoke Unreleased.Create InventoryTransaction
								assign result to LocalReceivingInventoryTransaction
								invoked.Company											= PrmInventoryTransaction.FromToCompanyLocation.FromToCompany
								invoked.InventoryLocation								= PrmInventoryTransaction.FromToCompanyLocation.FromToLocation
								invoked.GeneralLedgerDate								= PrmWarehouseShipment.GeneralLedgerDate
								invoked.EstimatedDeliveryDate							= PrmWarehouseShipment.EstimatedDeliveryDate
								invoked.FromToCompanyLocation.FromToLocation			= InventoryLocation
								invoked.FromToCompanyLocation.FromToCompany				= Company
								invoked.NumberOfCartons									= PrmInventoryTransaction.NumberOfCartons
								invoked.IntransitTransfer								= PrmInventoryTransaction.IntransitTransfer
								initialize invoked.WarehouseShipment
								if (PrmInventoryTransaction.IntransitTransfer)
									invoked.InventoryDocumentType						= PrmInventoryTransaction.InventoryDocumentType.IntransitReceiving
									invoked.IntransitReceivingStatus					= 1
									LocalIntransitAndReceivingDocumentType              = PrmInventoryTransaction.InventoryDocumentType.IntransitReceiving
								else
									invoked.InventoryDocumentType  						= PrmInventoryTransaction.InventoryDocumentType.ReceivingTransfer
									invoked.IntransitReceivingStatus					= 0
									LocalIntransitAndReceivingDocumentType	            = PrmInventoryTransaction.InventoryDocumentType.ReceivingTransfer
								invoked.OriginatingTransaction							= reference to WarehouseShipment

							LocalIntransitAndReceivingDocumentNumber		            = LocalReceivingInventoryTransaction.InventoryTransaction
					Exit Rules
            			if (not LocalTransactionLinesCreated)
            				invoke SystemDelete PrmInventoryTransaction

            				if (LocalReceivingInventoryTransaction.InventoryTransaction exists)
            					invoke SystemDelete LocalReceivingInventoryTransaction.InventoryTransaction
						else
							invoke Unreleased.TransitionToReleased PrmInventoryTransaction

						if ((PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer
						or  PrmInventoryTransaction.InventoryDocumentType.DirectTransfer)
						and not PrmInventoryTransaction.IntransitTransfer)
							invoke BatchRelease InventoryTransactionLine in foreground
								invoked.PrmCompany									= LocalReceivingInventoryTransaction.Company
								invoked.PrmLocation	    							= LocalReceivingInventoryTransaction.InventoryLocation
								invoked.PrmTransaction 								= LocalIntransitAndReceivingDocumentNumber
								invoked.PrmIntransitTransferDocumentNumber			= PrmInventoryTransaction

						invoke FinalReleaseShipment PrmWarehouseShipment

				Instance Rules
					if (LineType.InventoriedItem)
						constraint (!ItemLocation.FrozenForPhysicalInventory)
							"ItemLocationForItem<Item>IsFrozen"

					if (InProcessQuantity entered)
						ShippedQuantity = InProcessQuantity
						if (IsKitItem
						and PreAssembledKitQuantity not entered)
							initialize UnitCost


							for each WarehouseShipmentLineComponent set
								invoke CreateComponentTransactionLine each
									invoked.PrmInventoryCompany     = PrmInventoryCompany
									invoked.PrmInventoryLocation    = PrmInventoryLocation
									invoked.PrmWarehouseShipment    = PrmWarehouseShipment
									invoked.PrmInventoryTransaction = PrmInventoryTransaction
									invoked.PrmOffsetAccount		= FromToCompanyItemLocationRel.GeneralLedgerCategory.IntransitAccount


								UnitCost += ((each.Quantity * each.UnitCost) / ShippedQuantity)

							LocalTransactionLinesCreated = true


							if (PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer
							or  PrmInventoryTransaction.InventoryDocumentType.DirectTransfer)
								increment ItemLocation.TransactionCounter




								invoke Unreleased.Create InventoryTransactionLine
									assign result to NewInventoryTransactionLine
									invoked.Company											= WarehouseShipment.CompanyAndLocation.RequestingCompany  
									invoked.InventoryLocation								= WarehouseShipment.CompanyAndLocation.RequestingLocation 
									invoked.InventoryTransaction							= LocalReceivingInventoryTransaction.InventoryTransaction
									invoked.FromToCompanyLocationBin.FromToCompany			= Company
									invoked.FromToCompanyLocationBin.FromToLocation 		= InventoryLocation
									invoked.TransactionCounter								= ItemLocation.TransactionCounter
									if (PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer)
										invoked.TransactionSystemCode						= InventoryTransactionLine.TransactionSystemCode.InventoryControl
										invoked.IntransitReceivingStatus					= 1
									else
										invoked.TransactionSystemCode						= WarehouseShipment.WarehouseDemand.DemandSystemCode
										invoked.Quantity									= DerivedInProcessQuantityInTransUOM
									invoked.OriginalQuantity								= ShippedQuantity
									invoked.OpenQuantity									= ShippedQuantity
									invoked.OriginatingTransaction							= reference to this instance

									invoked.InventoryTransactionLine.LineNumber		        = WarehouseShipmentLine
									invoked.Item											= Item
									invoked.ItemEntryMethod									= WarehouseDemandLineRel.ItemEntryMethod
									invoked.TransactionUOM							    	= TransactionUOM
									invoked.GeneralLedgerDate								= LocalReceivingInventoryTransaction.InventoryTransaction.GeneralLedgerDate
									invoked.ActualTime										= LocalReceivingInventoryTransaction.InventoryTransaction.TransactionDate
									invoked.UnitCost	 									= UnitCost
									invoked.OffsetAccount									= FromToCompanyItemLocationRel.GeneralLedgerCategory.IntransitAccount
									invoked.EAMWorkOrder									= WarehouseDemandLineRel.EAMWorkOrder
									invoked.EAMWorkOrderActivity							= WarehouseDemandLineRel.EAMWorkOrderActivity






								invoke UpdateFromWarehouse SupplyRecordsRel
									invoked.PrmQuantity						= ShippedQuantity * -1


								invoke UpdateQuantities FromToCompanyItemLocationRel
									invoked.PrmOnOrderQuantity				= ShippedQuantity * -1
									if (PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer
									and PrmInventoryTransaction.IntransitTransfer)
										invoked.PrmIntransitQuantity		= ShippedQuantity

								if (PrmInventoryTransaction.InventoryDocumentType.DirectTransfer)

									invoke Release NewInventoryTransactionLine.InventoryTransactionLine
										invoked.PrmSkipTransactionCreate		= true


									invoke Unreleased.TransitionToReleased LocalReceivingInventoryTransaction.InventoryTransaction

								if (PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer)

									if (WarehouseDemandForIntransitTransferRel not exists)
										invoke Create WarehouseDemand
											invoked.Company											= WarehouseShipment.CompanyAndLocation.RequestingCompany
											invoked.WarehouseDemand.DemandSystemCode				= DemandSystemCode.Intransit
											invoked.WarehouseDemand.DemandDocument					= WarehouseShipment
											invoked.WarehouseDemand.DemandCompany					= Company


									if (WarehouseDemandLinesForIntransitTransferRel not exists)
										invoke CreateSupply WarehouseDemandLine
											invoked.Company							    			= WarehouseShipment.CompanyAndLocation.RequestingCompany
											invoked.InventoryLocation                               = WarehouseShipment.CompanyAndLocation.RequestingLocation
											invoked.WarehouseDemand.DemandSystemCode				= DemandSystemCode.Intransit
											invoked.WarehouseDemand.DemandDocument					= WarehouseShipment
											invoked.WarehouseDemand.DemandCompany					= WarehouseShipment.CompanyAndLocation.RequestingCompany
											invoked.WarehouseDemandLine.DemandDocumentType          = DemandDocumentType.IntransitReceiving
											invoked.WarehouseDemandLine.LineNumber                  = WarehouseShipmentLine
											invoked.Item                                            = Item
											invoked.DemandRecordType                               	= WarehouseDemandLine.DemandRecordType.Supply
											invoked.EstimatedTransactionDate						= WarehouseShipment.EstimatedDeliveryDate
											invoked.LineType                                        = WarehouseDemandLine.LineType.Inventoried
											invoked.Status											= 1
											invoked.Quantity                                        = ShippedQuantity
											invoked.Allocatable                                     = true
											invoked.CompanyAndLocation.RequestingCompany   			= Company
											invoked.CompanyAndLocation.RequestingLocation			= InventoryLocation
											invoked.TransactionUOM                               	= TransactionUOM
											invoked.TransactionUOMMultiplier                     	= TransactionUOMMultiplier

							invoke UpdateFromWarehouse WarehouseDemandLineRel
								invoked.PrmShippedQuantity							= ShippedQuantity
						else
							ShippedQuantity = InProcessQuantity
							if (LineType.InventoriedItem)
								initialize InventoryCostDefault
								InventoryCostDefault.InCompany 				= Company
								InventoryCostDefault.InInventoryLocation 	= InventoryLocation
								InventoryCostDefault.InItem 				= Item
								if (IsCatchWeightItem)
									InventoryCostDefault.InQuantity 		= CatchWeightQuantity
								else
									InventoryCostDefault.InQuantity 		= InProcessQuantity

								UnitCost = InventoryCostDefault.DefaultInventoryCost

								invoke Unreleased.Create InventoryTransactionLine
									assign result to NewInventoryTransactionLine
									fill in fields from this instance
									LocalTransactionLinesCreated						= true
									invoked.TransactionSystemCode 						= WarehouseShipment.WarehouseDemand.DemandSystemCode
									invoked.InventoryTransaction						= PrmInventoryTransaction
									invoked.InventoryTransactionLine.WarehouseShipment	= WarehouseShipment
									invoked.InventoryTransactionLine.LineNumber			= WarehouseShipmentLine
									invoked.OriginatingTransaction						= reference to this instance
									if (PrmInventoryTransaction.InventoryDocumentType.InventoryIssue
									and InProcessQuantity > 0)
										initialize invoked.UnitCost																		
									if (IsCatchWeightItem)
				        				invoked.SecondaryUOM							= TransactionUOM
				        				invoked.SecondaryUOMMultiplier					= TransactionUOMMultiplier
				        				invoked.SecondaryQuantity						= ShippedQuantity
										invoked.Quantity								= CatchWeightQuantity
										invoked.TransactionUOM							= Item.StockUOM
										invoked.TransactionUOMMultiplier				= 1
										invoked.UnitPrice								= WarehouseDemandLineRel.UnitPrice
									else
										if (HasItemLocationStockUOM)
											invoked.Quantity							= InProcessQuantity / TransactionUOMMultiplier
										else
											invoked.Quantity							= InProcessQuantity
										if (IsInventoriedOrNonstock
										and not HasItemLocationStockUOM)
											invoked.TransactionUOM						= Item.StockUOM
											invoked.TransactionUOMMultiplier			= 1
										else
											invoked.TransactionUOM						= TransactionUOM
											invoked.TransactionUOMMultiplier			= TransactionUOMMultiplier
									invoked.StockOnHandQuantity							= ItemLocation.StockOnHandQuantity
									if (WarehouseShipment.DemandDocumentType.IntransitReceiving)
										invoked.OpenQuantity							= ShippedQuantity
									if (ItemLocation.BinTracked)
										invoked.MultipleBins							= true
									if (FromToCompanyItemLocationRel.BinTracked
									and PrmInventoryTransaction.IsDirectOrInventoryTransfer
									and !PrmInventoryTransaction.IntransitTransfer)
										invoked.FromToCompanyLocationBin.FromToCompany	= FromToCompanyItemLocationRel.Company
										invoked.FromToCompanyLocationBin.FromToLocation	= FromToCompanyItemLocationRel.InventoryLocation
										if (FromToCompanyItemLocationRel.PreferredBin entered)
											invoked.FromToCompanyLocationBin.FromToBin	= FromToCompanyItemLocationRel.PreferredBin
										else
											invoked.FromToCompanyLocationBin.FromToBin	= first ToBinRel.Bin
									invoked.KitType										= WarehouseDemandLineRel.KitType
									invoked.ItemEntryMethod								= WarehouseDemandLineRel.ItemEntryMethod
									invoked.EnteredItem									= WarehouseDemandLineRel.EnteredItem
									if (InventoryLocation.EAMLocation.EAMLocation)
										invoked.EAMWorkOrderNumber 						= RequisitionLineRel.EAMWorkOrderNumber
										invoked.EAMOperationNumber           			= RequisitionLineRel.EAMOperationNumber
										invoked.EAMSequenceNumber						= RequisitionLineRel.EAMSequenceNumber
									if (PrmInventoryTransaction.IsDirectTransfer)
										invoked.OffsetAccount							= FromToCompanyItemLocationRel.GeneralLedgerCategory.IntransitAccount
									else
									if (RequisitionLineRel exists)
										invoked.OffsetAccount							= RequisitionLineRel.RequisitionLineDistributionsRel.DistributionAccount
									invoked.EAMWorkOrder								= WarehouseDemandLineRel.EAMWorkOrder
									invoked.EAMWorkOrderActivity						= WarehouseDemandLineRel.EAMWorkOrderActivity
								LocalInventoryTransactionLine							= NewInventoryTransactionLine.InventoryTransactionLine	
								

								if (IsUDIDetailRequired)
									if (PrmInventoryTransaction.IsDirectTransfer)
										for each InventoryUDIDetailsRel
											invoke CreateTransferUDIDetailFromWarehouse InventoryUDIDetail
												fill in fields from each
												invoked.Company													= LocalReceivingInventoryTransaction.Company
												invoked.InventoryLocation										= LocalReceivingInventoryTransaction.InventoryLocation
												invoked.InventoryUDIDetail.InventoryTransactionType 			= InventoryDocumentType.ReceivingTransfer
												if (FromToCompanyItemLocationRel.PreferredBin entered) 
													invoked.Bin													= FromToCompanyItemLocationRel.PreferredBin
												else
													initialize invoked.Bin
												
									else
										if (PrmInventoryTransaction.IntransitTransfer)
											for each InventoryUDIDetailsRel
												invoke CreateTransferUDIDetailFromWarehouse InventoryUDIDetail
													fill in fields from each
													invoked.Company												= LocalReceivingInventoryTransaction.Company
													invoked.InventoryLocation									= LocalReceivingInventoryTransaction.InventoryLocation
													invoked.InventoryUDIDetail.InventoryTransactionType 		= InventoryDocumentType.IntransitReceiving
													initialize invoked.Quantity
													if (FromToCompanyItemLocationRel.PreferredBin entered) 
														invoked.Bin												= FromToCompanyItemLocationRel.PreferredBin
													else
														initialize invoked.Bin
										
								for each WarehouseShipmentLineDetailsRel
									invoke CreateInventoryTransactionLineDetail each
										invoked.PrmInventoryTransaction			    	= PrmInventoryTransaction
										invoked.PrmTransactionSystemCode				= WarehouseShipment.WarehouseDemand.DemandSystemCode
										invoked.PrmInventoryTransactionLine 			= LocalInventoryTransactionLine

								if (PrmInventoryTransaction.IsInventoryIssues)
									include CreateDistributions

							if ((PrmInventoryTransaction.InventoryDocumentType.InventoryTransfer
							and PrmInventoryTransaction.IntransitTransfer)
							or  PrmInventoryTransaction.IsDirectTransfer)
								invoke UpdateFromWarehouse SupplyRecordsRel
									invoked.PrmQuantity	= ShippedQuantity * -1
								invoke UpdateQuantities FromToCompanyItemLocationRel
									invoked.PrmOnOrderQuantity	= InProcessQuantity * -1				

							invoke UpdateQuantities ItemLocation
								invoked.PrmInProcessQuantity	= InProcessQuantity * -1				

							invoke UpdateFromWarehouse WarehouseDemandLineRel
								invoked.PrmShippedQuantity		= ShippedQuantity

					else
						invoke UpdateFromWarehouse WarehouseDemandLineRel
						invoke UpdateFromWarehouse SupplyRecordsRel

					if (ItemLocation.BinTracked
					or  ItemLocation.IsLotTracked
					or  IsDetailRequiredForMultipleUOM
					or  IsDetailRequiredForLocationStockUOM)
						for each WarehouseShipmentLineDetailsRel
							invoke UpdateStockOnHandDetailAllocatedQuantity each

					if (not IsKitItem or PreAssembledKitQuantity entered)
						invoke Release NewInventoryTransactionLine.InventoryTransactionLine
							invoked.PrmIntransitAndReceivingDocumentType  		= LocalIntransitAndReceivingDocumentType
							invoked.PrmIntransitAndReceivingDocumentNumber  	= LocalIntransitAndReceivingDocumentNumber
							invoked.PrmIntransitTransferDocumentNumber			= PrmInventoryTransaction
							if (not IsCatchWeightItem)
								invoked.PrmTransactionUOM						= TransactionUOM
								invoked.PrmTransactionUOMMultiplier				= TransactionUOMMultiplier
							if (PrmInventoryTransaction.InventoryDocumentType.InventoryIssue)
								invoked.PrmSkipDistributions					= true

					initialize InProcessQuantity

					UpdateDate = current timestamp

					Status = Status.Released

					if (ShippedQuantity entered)

						if (RequestingDocument.DemandSystemCode.Requisitions)

							invoke CreateRequisitionTransaction RequisitionLineRel
								if (IsCatchWeightItem)
									invoked.PrmStockQuantity			= CatchWeightQuantity
								else
									invoked.PrmStockQuantity			= ShippedQuantity
								if (WarehouseShipmentLineComponent set exists)
									invoked.PrmRequisitionDocumentType	= PrmInventoryTransaction.InventoryTransaction.InventoryDocumentType
									invoked.PrmTransactionDate			= PrmInventoryTransaction.InventoryTransaction.TransactionDate date
								else
									invoked.PrmRequisitionDocumentType	= NewInventoryTransactionLine.InventoryTransaction.InventoryDocumentType
									invoked.PrmTransactionDate			= NewInventoryTransactionLine.TransactionDate
								invoked.PrmDocumentNumberNumeric	= WarehouseShipment




						if (WarehouseShipment.IntrastatNumber not entered)
							if (WarehouseShipment.WarehouseDemand.CustomerOrderRel.DerivedIntrastatProcessing)

								initialize LocalIntrastatProcessing
								LocalIntrastatProcessing.HeaderFc					= LocalIntrastatProcessing.HeaderFc.Create
								LocalIntrastatProcessing.InFinanceEnterpriseGroup	= Company.GeneralLedgerCompany.AccountingEntity.FinanceEnterpriseGroup
								LocalIntrastatProcessing.TaxEntity					= Company.GeneralLedgerCompany.AccountingEntity
								LocalIntrastatProcessing.OriginCountry				= WarehouseShipment.InventoryLocation.PostalAddress.Country
								LocalIntrastatProcessing.DestinationCountry			= WarehouseShipment.WarehouseDemand.CustomerOrderRel.DerivedDestinationCountry
								LocalIntrastatProcessing.TransactionType			= LocalIntrastatProcessing.TransactionType.Sales
								LocalIntrastatProcessing.SystemCode					= "OE" //MOVE "OE" TO ININHWS-SYSTEM-CD.
								LocalIntrastatProcessing.NatureOfTransactionCode	= CustomerOrderLineRel.NatureOfTransactionCode
								LocalIntrastatProcessing.DocumentNumber				= WarehouseShipment.WarehouseDemand.DemandDocument
								LocalIntrastatProcessing.ShippedDate				= WarehouseShipment.ShipDate
								LocalIntrastatProcessing.InvoiceDate				= WarehouseShipment.ShipDate
								LocalIntrastatProcessing.CurrencyRate				= WarehouseShipment.WarehouseDemand.CustomerOrderRel.CurrencyRate
								LocalIntrastatProcessing.Customer					= WarehouseShipment.WarehouseDemand.CustomerOrderRel.Customer
								LocalIntrastatProcessing.CustomerGrp				= WarehouseShipment.WarehouseDemand.CustomerOrderRel.Customer.CustomerGroup
								LocalIntrastatProcessing.CustomerCurrency			= WarehouseShipment.WarehouseDemand.CustomerOrderRel.Currency
								LocalIntrastatProcessing.LoadingPort				= CustomerOrderLineRel.PortCode
								LocalIntrastatProcessing.CustomerVATRegNumber		= WarehouseShipment.WarehouseDemand.CustomerOrderRel.VATRegistrationNumber
								LocalIntrastatProcessing.OriginRegion				= WarehouseShipment.InventoryLocation.PostalAddress.Region
								LocalIntrastatProcessing.DestinationRegion			= WarehouseShipment.WarehouseDemand.CustomerOrderRel.DerivedDestinationRegion
								LocalIntrastatProcessing.TransportMode				= WarehouseShipment.ShippingMethod

								LocalIntrastatProcessing.StatisticalProcedure		= CustomerOrderLineRel.StatisticalProcedure
								LocalIntrastatProcessing.DeliveryDate				= WarehouseShipment.ShipDate
								LocalIntrastatProcessing.CustomerVATRegCountry		= WarehouseShipment.WarehouseDemand.CustomerOrderRel.CompanyCustomer.VATRegistrationCountry
								LocalIntrastatProcessing.RelatedObjectReference		= reference to this instance
								LocalMainTrigger									= LocalIntrastatProcessing.MainTrigger

								if (LocalIntrastatProcessing.OutputErrorNumber not entered)
									invoke UpdateIntrastatNumber WarehouseShipment
										invoked.PrmIntrastatNumber = first IntrastatHeadersRel.IntrastatHeader.IntrastatNumber

						if (CustomerOrderLineRel exists)
							initialize LocalIntrastatProcessing.HeaderFc
							LocalIntrastatProcessing.OriginCountry				= WarehouseShipment.InventoryLocation.PostalAddress.Country
							LocalIntrastatProcessing.DestinationCountry			= WarehouseShipment.WarehouseDemand.CustomerOrderRel.DerivedDestinationCountry
							LocalIntrastatProcessing.InFinanceEnterpriseGroup	= Company.GeneralLedgerCompany.AccountingEntity.FinanceEnterpriseGroup
							LocalIntrastatProcessing.TaxEntity					= Company.GeneralLedgerCompany.AccountingEntity
							LocalIntrastatProcessing.OriginRegion				= WarehouseShipment.InventoryLocation.PostalAddress.Region
							LocalIntrastatProcessing.DestinationRegion			= WarehouseShipment.WarehouseDemand.CustomerOrderRel.DerivedDestinationRegion
							if (TransactionUOM != Item.StockUOM)
								LocalReceivedQuantity = ShippedQuantity * TransactionUOMMultiplier
								LocalVarianceAmount = ((CustomerOrderLineRel.SellPriceCurrency * TransactionUOMMultiplier) * LocalReceivedQuantity)
							else
								LocalReceivedQuantity = ShippedQuantity
								LocalVarianceAmount = LocalReceivedQuantity * CustomerOrderLineRel.SellPriceCurrency
							LocalReceivedGrossAmount = LocalVarianceAmount
							LocalIntrastatProcessing.ICNCode = CustomerOrderLineRel.ICNCode
							if (LocalIntrastatProcessing.ICNCode not entered)
								LocalIntrastatProcessing.ICNCode = Item.ICNCode
							if (LocalIntrastatProcessing.ICNCode not entered)
								LocalIntrastatProcessing.ICNCode = ICNCode
							LocalIntrastatProcessing.DetailFc					= LocalIntrastatProcessing.DetailFc.Create
							LocalIntrastatProcessing.InFinanceEnterpriseGroup	= Company.GeneralLedgerCompany.AccountingEntity.FinanceEnterpriseGroup
							LocalIntrastatProcessing.TaxEntity					= Company.GeneralLedgerCompany.AccountingEntity
							LocalIntrastatProcessing.IntrastatNumber			= WarehouseShipment.IntrastatNumber
							LocalIntrastatProcessing.ShippedDate				= WarehouseShipment.ShipDate
							LocalIntrastatProcessing.InvoiceDate				= WarehouseShipment.ShipDate
							LocalIntrastatProcessing.LineNumber					= WarehouseShipmentLine
							LocalIntrastatProcessing.StockWeight				= StockWeight
							LocalIntrastatProcessing.SupplementaryQuantity		= SupplementaryQuantity
							LocalIntrastatProcessing.SupplementaryQuantity		= SupplementaryUOM
							LocalIntrastatProcessing.ReceivedAmount				= LocalReceivedGrossAmount
							LocalIntrastatProcessing.BaseAmount					= LocalReceivedGrossAmount
							LocalMainTrigger 									= LocalIntrastatProcessing.MainTrigger

						if (RequisitionInterfaceInformation entered
						and WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions)
							invoke Create RQSourceDeliveryFeedback
								invoked.Company								= Company
								invoked.InventoryLocation					= WarehouseShipment.InventoryLocation
								invoked.DocumentNumber						= WarehouseShipment
								invoked.DocumentLineNumber					= WarehouseShipmentLine
								invoked.RequisitionInterfaceInformation		= RequisitionInterfaceInformation
								invoked.Item								= Item
								invoked.Description							= Description
								invoked.Quantity							= DerivedShippedQuantityInTransUOM	
								invoked.TransactionUOM						= TransactionUOM
								invoked.TransactionType						= RQSourceDeliveryFeedback.TransactionType.Issue

					if (RequisitionLineRel exists)
						if (RequisitionLineRel.Status.Processed)
							invoke Processed.Close RequisitionLineRel
								invoked.PrmWarehouseShipment = PrmWarehouseShipment
						else
						if (RequisitionLineRel.Status.Rejected)
							invoke Rejected.Close RequisitionLineRel
								invoked.PrmWarehouseShipment = PrmWarehouseShipment

		UpdateCommitmentThroughWarehouseShipmentLineFromJournalPosting is an Instance Action
			restricted

			Action Rules
				invoke UpdateCommitmentFromJournalPosting RequisitionLineRel

		UpdateFromLineDetail is an Instance Action
			restricted
			Parameters
				PrmDetailQuantity 				is a Quantity
				PrmDetailCatchWeightQuantity	is a Quantity
			Action Rules
				if (PrmDetailQuantity entered)
					DetailQuantity += PrmDetailQuantity

				if (PrmDetailCatchWeightQuantity entered)
					DetailCatchWeightQuantity	+= PrmDetailCatchWeightQuantity
					CatchWeightQuantity			+= PrmDetailCatchWeightQuantity  
		
		RefreshLine is an Instance Action		
			restricted
			refresh and lock this instance





    	TriggerShipmentBackOrderedOrVoidedService is an Instance Action
	  		restricted
	  		Local Fields
	  			LinAction is Alpha size 10
	  			CustomerOrderNumber is Numeric size 20
			Action Rules
				if (Company.FinanceEnterpriseGroup.BODTrigger)
					LinAction = action
					CustomerOrderNumber = WarehouseDemandLineRel.DocumentNumberNumeric

					trigger "ShipmentBkordVoidService" PA service
						resume on error
						title is "EG:<Company.FinanceEnterpriseGroup>Company:<Company>"
						Criteria
							Company.FinanceEnterpriseGroup
							Company
						Variables
							Company
							CustomerOrderNumber
							WarehouseShipment
							WarehouseShipmentLine
							Item
							Description
							PrintedQuantity
							LinAction
#ifdef module integration
	       			if (FSMBODConfigurationRel.Enable)
          				if(FSMBODConfigurationDetailRel.Enable)
			   				invoke ShipmentBackordVoidAlert
#endif





		FixItemLocationBalances is an Instance Action
			valid when (MissingInventoryTransactionLines)
			restricted
			Local Fields
				NewInventoryTransaction			is an InventoryTransaction view
				LocalQuantity					is like Quantity
			Action Rules
				invoke Unreleased.Create InventoryTransaction
					assign result to NewInventoryTransaction
					fill in fields from this instance
					if (WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions)
						invoked.InventoryDocumentType 					 		= RequisitionLineRel.InventoryTransactionType
						invoked.FromToCompanyLocation.FromToCompany		 		= RequisitionLineRel.Company

						if (RequisitionLineRel.InventoryTransactionType.Issue)
							invoked.FromToCompanyLocation.RequestingLocation	= RequisitionLineRel.RequestingLocation
						else
						if (RequisitionLineRel.InventoryTransactionType.IntransitTransfer
						or  RequisitionLineRel.InventoryTransactionType.DirectTransfer)
							invoked.FromToCompanyLocation.FromToLocation		= RequisitionLineRel.RequestingLocation
							if (RequisitionLineRel.InventoryTransactionType.IntransitTransfer)
								invoked.IntransitTransfer						= true

					else
					if (WarehouseShipment.WarehouseDemand.DemandSystemCode.CustomerOrder)
						invoked.InventoryDocumentType 					 		= InventoryDocumentType.Shipment
					invoked.OriginatingTransaction								= reference to WarehouseShipment

				LocalInventoryTransaction = NewInventoryTransaction.InventoryTransaction

				LocalQuantity = DerivedShippedQuantity
				if (Item.StockUOM != TransactionUOM)
					LocalInputQuantity = LocalQuantity
					include UOMConversionFromStockUOM
					LocalQuantity = UOMCalculation.OutputQuantity
				if (IsKitItem
				and PreAssembledKitQuantity not entered)
					for each KitComponentsRel
						LocalComponentSequence = each.KitComponent.ComponentSequence
						invoke Unreleased.Create InventoryTransactionLine
							assign result to NewInventoryTransactionLine
							fill in fields from this instance
							invoked.TransactionSystemCode 						= WarehouseShipment.WarehouseDemand.DemandSystemCode
							invoked.InventoryTransaction						= LocalInventoryTransaction
							invoked.InventoryTransactionLine.WarehouseShipment	= WarehouseShipment
							invoked.InventoryTransactionLine.LineNumber			= WarehouseShipmentLine
							invoked.OriginatingTransaction						= reference to this instance
							invoked.Quantity									= each.Quantity * LocalQuantity
							invoked.TransactionUOM								= each.ComponentItem.StockUOM
							invoked.InventoryTransactionLine.ComponentSequence  = LocalComponentSequence
							invoked.Item										= Item
							invoked.StockOnHandQuantity							= ItemLocation.StockOnHandQuantity
							if (Item.IsCatchWeightItem)
								invoked.SecondaryQuantity						= each.Quantity * CatchWeightQuantity
							if (LocalInventoryTransaction.InventoryDocumentType.InventoryIssue
							and LocalQuantity > 0)
								initialize invoked.UnitCost
							if (ItemLocation.BinTracked)
								invoked.MultipleBins							= true

							if (WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions)
								if (InventoryLocation.EAMLocation.EAMLocation)
									invoked.EAMWorkOrderNumber 						= RequisitionLineRel.EAMWorkOrderNumber
									invoked.EAMOperationNumber           			= RequisitionLineRel.EAMOperationNumber
									invoked.EAMSequenceNumber						= RequisitionLineRel.EAMSequenceNumber
								invoked.OffsetAccount								= RequisitionLineRel.RequisitionLineDistributionsRel.DistributionAccount
								invoked.ItemEntryMethod								= RequisitionLineRel.ItemEntryMethod
								invoked.EnteredItem									= RequisitionLineRel.EnteredItem
							else
							if (WarehouseShipment.WarehouseDemand.DemandSystemCode.CustomerOrder)
								invoked.KitType										= CustomerOrderLineRel.KitType

						LocalInventoryTransactionLine							= NewInventoryTransactionLine.InventoryTransactionLine

						invoke UpdateQuantities KitItemLocationRel
							invoked.PrmInProcessQuantity						= LocalQuantity * each.Quantity * -1			





						for each WarehouseShipmentLineDetailsForComponentRel
							if (each.Quantity > LocalQuantity)
								invoke DecreaseQuantity each
									invoked.PrmQuantity		= each.Quantity - LocalQuantity
							invoke CreateInventoryTransactionLineDetail each
								invoked.PrmInventoryTransaction			    	= LocalInventoryTransaction
								invoked.PrmTransactionSystemCode				= WarehouseShipment.WarehouseDemand.DemandSystemCode
								invoked.PrmInventoryTransactionLine 			= LocalInventoryTransactionLine

				else
					ShippedQuantity = LocalQuantity
					if (LineType.InventoriedItem)
						invoke Unreleased.Create InventoryTransactionLine
							assign result to NewInventoryTransactionLine
							fill in fields from this instance
							invoked.TransactionSystemCode 						= WarehouseShipment.WarehouseDemand.DemandSystemCode
							invoked.InventoryTransaction						= LocalInventoryTransaction
							invoked.InventoryTransactionLine.WarehouseShipment	= WarehouseShipment
							invoked.InventoryTransactionLine.LineNumber			= WarehouseShipmentLine
							invoked.Quantity									= LocalQuantity
							invoked.TransactionUOMMultiplier					= TransactionUOMMultiplier
							invoked.OriginatingTransaction						= reference to this instance
							if (LocalInventoryTransaction.InventoryDocumentType.InventoryIssue
							and LocalQuantity > 0)
								initialize invoked.UnitCost																		
							if (Item.IsCatchWeightItem)
								invoked.SecondaryQuantity						= CatchWeightQuantity
							invoked.StockOnHandQuantity							= ItemLocation.StockOnHandQuantity
							if (WarehouseShipment.DemandDocumentType.IntransitReceiving)
								invoked.OpenQuantity							= LocalQuantity
							if (ItemLocation.BinTracked)
								invoked.MultipleBins							= true

							if (ItemLocationUsingRequisitionLineRel.BinTracked
							and LocalInventoryTransaction.IsDirectOrInventoryTransfer
							and !LocalInventoryTransaction.IntransitTransfer)
								if (ItemLocationUsingRequisitionLineRel.PreferredBin entered)
									invoked.FromToCompanyLocationBin.FromToBin	= ItemLocationUsingRequisitionLineRel.PreferredBin
								else
									invoked.FromToCompanyLocationBin.FromToBin	= first ToBinRel.Bin

							if (WarehouseShipment.WarehouseDemand.DemandSystemCode.Requisitions)
								if (InventoryLocation.EAMLocation.EAMLocation)
									invoked.EAMWorkOrderNumber 						= RequisitionLineRel.EAMWorkOrderNumber
									invoked.EAMOperationNumber           			= RequisitionLineRel.EAMOperationNumber
									invoked.EAMSequenceNumber						= RequisitionLineRel.EAMSequenceNumber
								invoked.OffsetAccount								= RequisitionLineRel.RequisitionLineDistributionsRel.DistributionAccount
								invoked.ItemEntryMethod								= RequisitionLineRel.ItemEntryMethod
								invoked.EnteredItem									= RequisitionLineRel.EnteredItem
							else
							if (WarehouseShipment.WarehouseDemand.DemandSystemCode.CustomerOrder)
								invoked.KitType										= CustomerOrderLineRel.KitType

						LocalInventoryTransactionLine		= NewInventoryTransactionLine.InventoryTransactionLine

						for each WarehouseShipmentLineDetailsRel
							if (each.Quantity > LocalQuantity)
								invoke DecreaseQuantity each
									invoked.PrmQuantity		= each.Quantity - LocalQuantity
							invoke CreateInventoryTransactionLineDetail each
								invoked.PrmInventoryTransaction			    	= LocalInventoryTransaction
								invoked.PrmTransactionSystemCode				= WarehouseShipment.WarehouseDemand.DemandSystemCode
								invoked.PrmInventoryTransactionLine 			= LocalInventoryTransactionLine





					if ((LocalInventoryTransaction.InventoryDocumentType.InventoryTransfer
					and LocalInventoryTransaction.IntransitTransfer)
					or  LocalInventoryTransaction.IsDirectTransfer)
						invoke UpdateQuantities ItemLocationUsingRequisitionLineRel
							invoked.PrmOnOrderQuantity	= LocalQuantity * -1				

					invoke UpdateQuantities ItemLocation
						invoked.PrmInProcessQuantity	= LocalQuantity * -1				

					invoke UpdateFromWarehouse WarehouseDemandLineRel
						invoked.PrmShippedQuantity		= ShippedQuantity

				UpdateDate = current timestamp

				invoke FinalRelease LocalInventoryTransaction

		Purge is a Purge Action
			restricted
			bypass relational integrity rules
			Entrance Rules
				invoke Purge PurgeWarehouseShipmentLineComponentRel
				invoke Purge PurgeWarehouseShipmentLineDetailRel
		

		MSCMUpdateSavedShipmentLine is an Instance Action
			restricted
			Parameters
				PrmShortPick		is AlphaUpper size 1
				PrmPickQuantity		is a Quantity
				PrmPickQuantityUOM	is a UnitOfMeasure
			Action Rules
				ShortPickAction			= PrmShortPick
				MobilePickQuantity		= PrmPickQuantity
				MobilePickQuantityUOM	= PrmPickQuantityUOM
		
		ReleaseAndPrint	is a Set Action
			restricted
			Parameters
				PrmCompany                  is an InventoryCompany
                    default label is "Company"
                PrmInventoryLocation        is an InventoryLocation
                    default label is "InventoryLocation"
				PrmWarehouseShipment		is an WarehouseShipment
					default label is "WarehouseShipment"
			
			Sort Order
                Company
				InventoryLocation
                WarehouseShipment
                WarehouseShipmentLine
			
			Instance Selection
                where (Company					= PrmCompany
                and    InventoryLocation        = PrmInventoryLocation
                and    WarehouseShipment        = PrmWarehouseShipment
				and    WarehouseShipment.Status.Printed)
			
			Local Fields
				LocalConvertedQuantity			is a Quantity
				ReleaseAfterShipped
			Action Rules
                WarehouseShipment Set Rules
					Exit Rules
						ReleaseAfterShipped = true
						invoke Printed.Finish WarehouseShipment

				Instance Rules
					initialize UOMCalculation
					initialize LocalConvertedQuantity
					

					LocalInputQuantity		= MobilePickQuantity
					include UOMConversionFromHHToTransaction
					LocalConvertedQuantity	= UOMCalculation.OutputQuantity
					
					if(LocalConvertedQuantity < DerivedPrintedQuantityInTransUOM)
						if (ShortPickAction.BackOrderFill)
							invoke Backorder WarehouseShipmentLine
								invoked.PrmTransactionQuantity  = LocalConvertedQuantity
						else
						if (ShortPickAction.Kill)
							invoke Void WarehouseShipmentLine
								invoked.PrmTransactionQuantity  = LocalConvertedQuantity
		
		ProcessDelivery is a Set Action 
			restricted
			Parameters
				PrmCompany                  is an InventoryCompany
                    default label is "Company"
                PrmInventoryLocation        is an InventoryLocation
                    default label is "InventoryLocation"
				PrmWarehouseShipment		is an WarehouseShipment
					default label is "WarehouseShipment"

			Sort Order is primary

			Instance Selection 				//UDI Detail not implemented need to remove "not IsUDIDetailRequired" once supported
                where (Company					= PrmCompany
                and    InventoryLocation        = PrmInventoryLocation
                and    WarehouseShipment        = PrmWarehouseShipment
				and    not IsUDIDetailRequired
				and	   ShippedQuantity entered)

			Local Fields
				LocalDeliveryTicket								is like MobileSupplyChainDeliveryTicket
				LocalMobileSupplyChainDeliveryTicketView        is a MobileSupplyChainDeliveryTicket view
				LocalDeliveryUnit								is like MobileSupplyChainDeliveryUnit
				LocalMobileSupplyChainDeliveryUnitView          is a MobileSupplyChainDeliveryUnit view
				LocalSetDeliveryLineCount						is Numeric size 6
			
			Action Rules
				WarehouseShipment Set Rules
					Entrance Rules
						initialize LocalSetDeliveryLineCount

						if (WarehouseShipment.IsTrackedByShipmentOnly)
							LocalTrackingNumber 		= WarehouseShipment.TrackingNumber
							
							include CreateMobileSupplyChainDeliveryTicket
							
							LocalDeliveryTicket						= LocalMobileSupplyChainDeliveryTicketView.MobileSupplyChainDeliveryTicket
							LocalMobileSupplyChainDeliveryTicket	= LocalMobileSupplyChainDeliveryTicketView.MobileSupplyChainDeliveryTicket

							include CreateMobileSupplyChainDeliveryUnit

							LocalDeliveryUnit = LocalMobileSupplyChainDeliveryUnitView.MobileSupplyChainDeliveryUnit
					Exit Rules
						if (WarehouseShipment.IsTrackedByShipmentOnly)
							LocalMobileSupplyChainDeliveryTicket 	= LocalDeliveryTicket
							LocalMobileSupplyChainDeliveryUnit		= LocalDeliveryUnit
							LocalDeliveryLineCount					= LocalSetDeliveryLineCount

							include ProcessDeliveryExitRules
				
				WarehouseShipmentLine Set Rules
					Exit Rules
						if (WarehouseShipment.IsTrackedByShipmentLineOnly)
							LocalDeliveryLineCount					= LocalSetDeliveryLineCount

							include ProcessDeliveryExitRules
				
				Instance Rules
					if (WarehouseShipment.IsTrackedByShipmentLineOnly)
						initialize LocalSetDeliveryLineCount
						initialize LocalDeliveryQuantity
						initialize LocalUnitOfMeasure

						LocalTrackingNumber = TrackingNumber	

						include CreateMobileSupplyChainDeliveryTicket
						
						LocalDeliveryTicket			  		    = LocalMobileSupplyChainDeliveryTicketView.MobileSupplyChainDeliveryTicket
						LocalMobileSupplyChainDeliveryTicket    = LocalMobileSupplyChainDeliveryTicketView.MobileSupplyChainDeliveryTicket

						include CreateMobileSupplyChainDeliveryUnit

						LocalDeliveryUnit 						= LocalMobileSupplyChainDeliveryUnitView.MobileSupplyChainDeliveryUnit
						LocalMobileSupplyChainDeliveryUnit		= LocalMobileSupplyChainDeliveryUnitView.MobileSupplyChainDeliveryUnit

					if (IsBinTracked or not IsDetailRequired) 
						LocalDeliveryQuantity	= ShippedQuantity
						LocalUnitOfMeasure		= TransactionUOM

						include CreateDeliveryLine
						
						LocalSetDeliveryLineCount += 1
					
					else 
						for each WarehouseShipmentLineDetailRel
							LocalLot 				= each.WarehouseShipmentLineDetail.Lot
							LocalSublot				= each.WarehouseShipmentLineDetail.Sublot
							LocalLotExpirationDate	= each.WarehouseShipmentLineDetail.Lot.LotExpirationDate
							LocalSerial				= each.WarehouseShipmentLineDetail.Serial
							LocalDeliveryQuantity	= each.Quantity
							LocalUnitOfMeasure		= each.WarehouseShipmentLineDetail.UnitOfMeasure

							if (IsLotTracked and MobileSupplyChainDeliveryLineLotRel exists) 
								invoke Update first MobileSupplyChainDeliveryLineLotRel
									invoked.Quantity							+= LocalDeliveryQuantity
							else 		
								include CreateDeliveryLine
								
								LocalSetDeliveryLineCount += 1


		CreateShipmentLineTemplate is a Set Action
			restricted
			Parameters
				PrmCompany                   is like Company
				PrmInventoryLocation         is like InventoryLocation
				PrmShipmentLoadConsolidation is like ShipmentLoadConsolidation
				PrmWarehouseShipment         is like WarehouseShipment

			Instance Selection
				where (Company           = PrmCompany
				and    InventoryLocation = PrmInventoryLocation
				and    WarehouseShipment = PrmWarehouseShipment)
			Action Rules
				Instance Rules
					if (not ShipmentLoadLineRel exists
					and Status.Released)
						invoke Create ShipmentLoadLineTemplate
							fill in fields from this instance
							invoked.InventoryLocation         = PrmInventoryLocation
