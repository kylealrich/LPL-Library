FSMAPInboundBODImport is a BusinessClass
	owned by integration
	prefix is FSMAP
		
	Ontology
		symbolic key is FSMAPInboundBODImport
		
	Patterns
		implements InlineUserFields
			size is 1000
        implements StaticJava
        disable AuditIndex
	
	Context Fields
		FSMInboundBODTracker
	
	Persistent Fields
    	
	
	Field Rules

				
	Local Fields

		NewPayablesInvoice  			is a PayablesInvoice view
		NewBODTracker  					is a FSMInboundBODTracker view
		NewMatchInvoiceImport			is a MatchInvoiceImport view
#ifdef module ap
        LikePayInvoice   				is like PayablesInvoice
#endif
        LikeInboundTracker				is like FSMInboundBODTracker
        LocalConfigurationParameter		is Alpha size up to 200
		LocalInvoice					is AlphaUpper size 22
		LocalProcessLevel				is AlphaUpper size 5
		LocalInvoiceCurrency			is AlphaUpper size 5
		LocalCashCode					is AlphaUpper size 20
		LocalRemitToCode				is AlphaUpper size 15
		LocalTermsCode					is AlphaUpper size 10
		LocalBankTransactionCode		is AlphaUpper size 10
		LocalDistributionCode			is AlphaUpper size 20
		LocalAccountingEntity			is AlphaUpper size 40
		LocalAccountingUnit				is AlphaUpper size 25
		LocalFinanceDimension1      	is AlphaUpper size 15		
		LocalFinanceDimension2      	is AlphaUpper size 15
		LocalFinanceDimension3      	is AlphaUpper size 15		
		LocalFinanceDimension4      	is AlphaUpper size 15
		LocalFinanceDimension5      	is AlphaUpper size 15		
		LocalFinanceDimension6      	is AlphaUpper size 15
		LocalFinanceDimension7      	is AlphaUpper size 15		
		LocalFinanceDimension8      	is AlphaUpper size 15
		LocalFinanceDimension9      	is AlphaUpper size 15		
		LocalFinanceDimension10     	is AlphaUpper size 15
		LocalCodeValue					is AlphaUpper size 25
		LocalProject					is AlphaUpper size 100
		LocalInvoiceHoldCode			is AlphaUpper size 4
		LocalCustomerGroup				is AlphaUpper size 5
		LocalReasonCode					is AlphaUpper size 20
		LocalICNCode					is like ICNCode
		LocalDescription				is Alpha size up to 60
		LocalAccount 					is AlphaUpper 26
		LocalAOC						is AlphaUpper 10
		LocalTaxCode					is AlphaUpper 15
		ActionCode						is Alpha 9
		LocalInvoiceType				is Alpha 5			
		LocalInvoiceDate				is Alpha 10
		LocalDueDate					is Alpha 10
		LocalDistributionDateAlpha      is Alpha 40
		LocalDistributionDate       	is Alpha 20
		LocalReceiptOfInvoiceDateAlpha  is Alpha 40
		LocalReceiptOfInvoiceDate   	is Alpha 20
		LocalNameValue					is Alpha 100
		LocalTaxNameValue				is Alpha 100
		LocalStatus						is Alpha 20
		LocalCancelStatus				is Alpha 20
		LocalHoldCode					is Alpha 4
		LocalInvoiceOnHold 				is Alpha 20
		LocalInvoiceCancelDate			is Alpha 20
		LocalInvoiceTypeAlpha			is Alpha 20
		LocalErrorMessage 				is Alpha 300
        ErrorMessage      				is Alpha 300
        LocalFromLogicalID				is Alpha 40
        LocalComponentID				is Alpha 40
        LocalCodeListID     			is Alpha 50
        LocalBODID						is Alpha 100
        LocalTaskID						is Alpha 100
        LocalReferenceID				is Alpha 100
        LocalConfirmationCode 			is Alpha 100
        LocalAuthorizationID 			is Alpha 100
		LocalLocation					is Alpha 20
		LocalConfirmBOD					is Alpha 20
		LocalIsOnHold					is Alpha 10
		LocalInvoiceDateAlpha			is Alpha 20
        LocalDueDateAlpha  				is Alpha 20
        LocalEnclosure	    			is Alpha 20
		LocalSeparatePayment			is Alpha 20
		LocalDistNameValue				is Alpha 20
		LocalConfiguration				is Alpha 20
		LocalComment					is Alpha 300
        LocalCommentTitle				is Alpha 50
        LocalCommentType				is Alpha 40 
        LocalPayImmediately				is Alpha 10
		LocalApprovalRequired			is Alpha 10
		LocalVendor						is Numeric size 9
		LocalPayVendor					is Numeric size 9
		LocalTaxIndicator				is Numeric size 1
		LocalVariationID				is Alpha 100
        LocalFSMInboundBODTracker		is Numeric 15
        LocalTrackerID					is Numeric 15
		LocalPayablesInvoice			is Numeric 18
		LocalCompany					is Numeric 4
		LocalUserAreaCount          	is Numeric 9
		LocalTaxUserAreaCount       	is Numeric 9
		LocalDistCount              	is Numeric 9
		LocalTaxDistCount				is Numeric 9
		LocalCommentCount				is Numeric 9
		LocalDistCodeCount  			is Numeric 9
        LocalTaxDistCodeCount  			is Numeric 9
        LocalDistUserAreaCount			is Numeric 9
		LocalLoop						is Numeric 9
		LocalIterator 					is Numeric 9
		LocalInvoiceAmount				is Decimal 19.3
		LocalTransactionAmount			is Decimal 19.3
		LocalAOCAmount					is Decimal 19.3
		LocalTaxableAmount				is Decimal 19.3
		LocalCurrencyRate				is Decimal 31.15
		Error             				is Boolean
        LocalPSupplierInvoiceXML 		is XMLDocument
        LocalSSupplierInvoiceXML 		is XMLDocument
        LocalBODXML						is XMLDocument
        LocalUserAreaRunGroup			is Alpha 30
        LocalAuthorityCode				is Alpha 15
        LocalSplitCompany				is Alpha 40
        LocalInvoiceSource				is Alpha 5

		LocalReference 					is Alpha 40
		LocalProcessType				is Alpha 2
		LocalRunGroup					is Alpha 30
		LocalItem						is Alpha 40
		LocalEAMProjectID				is Alpha 20
		LocalEAMProjectTaxCode			is AlphaUpper 5
		LocalEAMProjectType				is AlphaUpper 10
		LocalEAMTrade					is AlphaUpper 15
		LocalEAMWorkOrder				is AlphaUpper 30
		LocalEAMCommodityCode			is AlphaUpper 15
		LocalEAMManufacturing			is AlphaUpper 1
		LocalFinanceEnterpriseGroup		is AlphaUpper 4
		LocalEAMLineType				is AlphaUpper 1
		LocalEnteredUOM					is AlphaUpper 4
		LocalEAMWorkOrderActivity		is Numeric 8
		LocalPurchaseOrder				is Numeric 9
		LocalUnitCost					is Decimal size 21.8
		LocalEnteredQuantity			is Decimal size 13.4
		LocalTaxAmount					is Decimal size 19.3
		LocalBasisAmount				is Decimal size 19.3
		LocalValue						is Alpha 25
		LocalLineCount					is Numeric 9
		LocalLineNumber					is Numeric 9 
		LocalIntegrationApplication		is Alpha 40
		LocalBusinessGroup				is Alpha 5
		LocallyVendor					is Numeric 9
		LocallyCompany					is Alpha 20
		LocalTaxEntity					is AlphaUpper 12
		LocallyCompanyTaxID				is AlphaUpper 25		
		LocallyVendorTaxID				is AlphaUpper 25
		LocalEAMTool					is Alpha 12
		LocalDocumentID					is Alpha 50
		LocalMainUserTemplate			is Alpha size 250
		LocalDocumentReferenceType		is Alpha size 40
		LocalCreditMemoReferenceInvoice is Alpha size 25
		LocalMatchInvoiceImport			is Alpha 200
		LocalAddOnChargeLength			is Numeric 9
		LocalAddOnCharge				is Alpha 10
		LocalAmount						is Decimal 19.3
		LocalAOCIterator				is Numeric 9
		LocalLineChargeCount			is Numeric 9
		LocalTaxLength					is Numeric 9
		LocalsplitVendor				is Alpha 40
		LocalGenericDelimiter			is Alpha 9
		LocalAccountingEntityID			is Alpha 40


		LocalStatusCode					is Alpha 30
		LocalVendorMobilePrefix			is Alpha 6
		LocalVendorMobileNumber			is Alpha 15
		LocalVendorMobileExtension		is Alpha 10
		LocalVendorFaxPrefix			is Alpha 6
		LocalVendorFaxNumber			is Alpha 15
		LocalVendorFaxExtension			is Alpha 10
		LocalContactName				is Alpha 50
		LocalBankEntity					is Alpha 30
		LocalBankAccountNumber			is Alpha 35
		LocalTaxIDLength				is Numeric 10
		LocalTaxID 						is Alpha 30
		LocalTaxIDValue					is Alpha 30
		LocalVendorRelationExists		is Boolean
		LocalCodeLength					is Numeric 9
		LocallySupplierCompany			is Alpha 40


		LocalERStatus						is Alpha size 20
		LocalStagingHeader					is Alpha size 100
		LocalVendorGroup					is Alpha size 50
		LocalPurpose						is Alpha size 250
		LocalCurrency						is Alpha size 50	
		LocalDocID							is Alpha size 50
		LocalDateFrom						is Alpha size 50
		LocalDateTo							is Alpha size 100
		LocalERVendor						is Alpha size 9
		LocalERVendorGroup					is Alpha size 25
		LocalERFinanceEnterpriseGroup    	is Alpha size 25
		LocalBaseAmount						is Alpha size 30
		LocalVendorGroupRef					is Alpha size 25
		LocalERLineLength					is Numeric 50
		LocalnumExpAllocLines				is Numeric 50
		LocalAllocationIterator				is Numeric 50
		LocalERCount						is Numeric 50
		LocalBaseCurrency					is Alpha size 25
		LocalExchangeRate 					is Decimal size 50
		LocalSpecialCode					is Alpha size 25
		LocalCreditCardNum					is Numeric 50
		LocalTransactionCurrency			is Alpha size 25
		LocalPersonalIndicator				is Alpha size 25
		LocalItemizedIndicator				is Alpha size 25
		SendExpense							is Alpha size 25
		LocalLineID							is Numeric 100
		CCNumber							is Alpha 100
		LocalPaymentType					is Alpha 50
		LocalpayMethod						is Alpha 50
		LocalExpenseType					is Alpha 50
		LocalisCashAdvance					is Boolean
		LocalNameValueID					is Alpha 50
		LocalCurrencyValue					is Alpha 50
		LocalVATexpensetype					is Alpha 50
		LocalNetAmount						is Decimal size 19.3
		LocalNetAmountCurrencyID			is Alpha 50
		LocalCount							is Numeric 50
		LocalApprovedBaseAmount				is Decimal size 19.3
		LocalApprovedBaseCurrency			is Alpha 50
		LocalApprovedAmount					is Decimal size 19.3
		LocalBODCostCenter					is Numeric  2 
		LocalCostCenter						is Alpha size 50
		LocalCostCenterFinanceDimension1	is AlphaUpper size 15
		LocalCostCenterFinanceDimension2	is AlphaUpper size 15
		LocalCostCenterFinanceDimension3	is AlphaUpper size 15
		LocalCostCenterFinanceDimension4	is AlphaUpper size 15
		LocalCostCenterFinanceDimension5	is AlphaUpper size 15
		LocalCostCenterFinanceDimension6	is AlphaUpper size 15
		LocalCostCenterFinanceDimension7	is AlphaUpper size 15
		LocalCostCenterFinanceDimension8	is AlphaUpper size 15
		LocalCostCenterFinanceDimension9	is AlphaUpper size 15
		LocalCostCenterFinanceDimension10	is AlphaUpper size 15
		LocalCostCenterAccountingUnit		is AlphaUpper size 25
		LocalBillableIndicator				is Alpha size 25
		LocalBillable						is Boolean
		LocalOriginalBODID					is Alpha 100
		LocalNumberOfLinesadded				is Numeric 15
		LocalNumberofLines					is Numeric 15		
		LocalOrginalCreateDateTime			is Alpha size 100
		LocalToLogicalId					is Alpha size 100
		LocalERProject						is AlphaUpper size 25
		LocalERCompany						is Numeric 4
		LocalCrossRefValue					is Alpha size 100
		LocalERAllocationLineLength			is Numeric 50
		LocalAllocLoop							is Numeric 50
		LocalExpAllocPercent				is Decimal size 8.5
		LocalAllocBillableIndicator			is Alpha size 25
		LocalAllocBillable					is Boolean
		LocalExpAllocAmount					is Decimal size 19.3
		LocalExpAllocBaseAmount				is Decimal size 19.3
		LocalClassificationLength			is Numeric 50
		LocalCostCenterClassificationType 	is Alpha size 25
		LocalCostCenterClassificationlen 	is Numeric 50
		LocalMultipleAE						is Alpha size 50
		LocalToAccountingEntity				is Alpha size 50
		LocalListID							is Alpha 50
		LocalTDGLAccount					is Alpha 50
		LocalExpenseTypeGLCode				is Alpha 50
		GLChartAccount						is Alpha 50


		LocalEmployee					is Numeric 13
		LocalEmployeeName   			is Alpha 120
		LocalEmployeeCountryCode     	is Alpha 3
		LocalEmployeeAddressLine1 		is Alpha 40
		LocalEmployeeAddressLine2 		is Alpha 40
		LocalEmployeeAddressLine3		is Alpha 40
		LocalEmployeeAddressLine4		is Alpha 40
		LocalEmployeeStateProvinance	is Alpha 3
		LocalEmployeeCity				is Alpha 58
		LocalEmployeePostalCode			is Alpha 12
		LocalEmployeePhoneNumber		is Alpha 15
		LocalEmployeePhonePrefix		is Alpha 6
		LocalEmployeePhoneExtension		is Alpha 10
		LocalCommunicationLength		is Numeric 10
		LocalChannelCode				is Alpha 60
		LocalUseCode					is Alpha 60
		LocalDialNumber					is Alpha 60
		LocalURI						is Alpha 60
		LocalExtension 					is Alpha 10
		LocalCountryDialing				is Alpha 15
		LocalActive						is Alpha 1
		LocalVendorName   				is Alpha 120
		LocalVendorCountry     			is Alpha 3
		LocalVendorAddressLine1 		is Alpha 40
		LocalVendorAddressLine2 		is Alpha 40
		LocalVendorAddressLine3			is Alpha 40
		LocalVendorAddressLine4			is Alpha 40
		LocalVendorStateProvince		is Alpha 3
		LocalVendorMunicipality			is Alpha 58
		LocalVendorPostalCode			is Alpha 12
		LocalVendorPhoneNumber			is Alpha 15
		LocalVendorPhonePrefix			is Alpha 6
		LocalVendorPhoneExtension		is Alpha 10
		LocalVendorEmail 				is an EmailAddressMulti 
			holds pii
		LocalExpVendorCountry     		is Alpha 3
		LocalExpVendorAddressLine1 		is Alpha 40
		LocalExpVendorAddressLine2 		is Alpha 40
		LocalExpVendorAddressLine3		is Alpha 40
		LocalExpVendorAddressLine4		is Alpha 40
		LocalExpVendorStateProvince		is Alpha 3
		LocalExpVendorMunicipality		is Alpha 58
		LocalExpVendorPostalCode		is Alpha 12
		LocalEmployeeEmail 				is an EmailAddressMulti 
			holds pii
		LocalExpVendorGroup				is Alpha 5
		LocalExpVendorClass				is Alpha 5
		LocalExpUseDefaultAddressOnly	is Alpha 10
		LocalVendorClass				is Alpha 5
		LocalVendorAddressType			is Alpha 20
		LocalSPersonnelXML				is XMLDocument
		LocalOriginalCreateDateTime		is Alpha 25 
		LocalSupplierBODTrigger			is Boolean	
		LocalDepositLength 				is Numeric 10
		LocalAccountNumber				is AlphaUpper 35
		LocalBankEntityLength			is Numeric 9
		LocalRemaniningLength			is Numeric 9

		
	Derived Fields
#ifdef module ap
		ProcessSupplierInvoiceConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessSupplierInvoiceConfirmBODXML = template.IONProcessSupplierInvoice_ConfirmBOD_ST document for this instance
		
		ProcessSupplierInvoiceAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessSupplierInvoiceAcknowledgeBODXML = template.IONProcessSupplierInvoice_AcknowledgeBOD_ST document for this instance
		
		DerivedTrackerID is a DerivedField
			type is Numeric 15
			restricted
			return LocalTrackerID
		
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
			
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedGenericDelimiter is a DerivedField
			type is Alpha size 9
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedPSIErrorMessage is a DerivedField
			type is Alpha 300
			restricted
			return LocalErrorMessage
		
		DerivedCompany is a DerivedField
			type is Numeric 4
			restricted
			return LocalCompany
		
		DerivedLocation is a DerivedField
			type is Numeric 4
			restricted
			return LocalLocation
		
		DerivedPSIConfirmBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:"+DerivedTenantID+":"+DerivedCompany+":"+":"+":"+"?BOD&verb=Confirm&TrackerID="+ DerivedTrackerID
		
		DerivedPSIACKBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:"+DerivedTenantID+":"+DerivedCompany+":"+":"+":"+"?SupplierInvoice&verb=Ack&TrackerID="+ DerivedTrackerID
		
		DerivedPSIErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Failed message, " + "Message: "+ DerivedPSIErrorMessage
				
		DerivedFromLogicalID is a DerivedField
			type is Alpha 40
			restricted
			return LocalFromLogicalID		
		
		DerivedComponentID is a DerivedField
			type is Alpha 40
			restricted
			return LocalComponentID
		
		DerivedBODID is a DerivedField
			type is Alpha 100
			restricted
			return LocalBODID
		
		DerivedTaskID is a DerivedField
			type is Alpha 100
			restricted
			return LocalTaskID
		
		DerivedReferenceID is a DerivedField
			type is Alpha 100
			restricted
			return LocalReferenceID
		
		DerivedConfirmationCode is a DerivedField
			type is Alpha 100
			restricted
			return LocalConfirmationCode
		
		DerivedAuthorizationID is a DerivedField
			type is Alpha 100
			restricted
			return LocalAuthorizationID
		
		DerivedBODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp
		
		DerivedAlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			return DerivedBODCurrentTimeStamp			
		
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			return DerivedAlphaCurrentTimeStamp[1:4] + "-" + DerivedAlphaCurrentTimeStamp[5:6] + "-" + DerivedAlphaCurrentTimeStamp[7:8] + "T" + DerivedAlphaCurrentTimeStamp[9:10] + ":" + DerivedAlphaCurrentTimeStamp[11:12] + ":" + DerivedAlphaCurrentTimeStamp[13:14] + "Z"
		
		DerivedPSIOriginalBODMsg is a DerivedField
			type is XMLDocument
			restricted
			return LocalPSupplierInvoiceXML
		
		DerivedAckResponse is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Rejected"
			else
				return "Accepted"			
		
		DerivedReasonCode is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Application_Error"
			else
				return "Application_Success"
		
		DerivedInvoice is a DerivedField
			type is Alpha 22
			restricted
			return LocalInvoice
		
		DerivedListID is a DerivedField
			type is Alpha 22
			restricted
			if(LocalConfirmBOD = "true")
				return "Error"
			else
				return "Success"
		
		DerivedPSIReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing SupplierInvoice- " + DerivedPSIErrorMessage
			else
				return DerivedPSIErrorMessage	
		
		DerivedConfiguration is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "ProcessSupplierInvoice_Batch"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedDeletePIInterfaceRecord is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "DeletePayablesInvoiceInterfaceRecord"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedRunGroup is a DerivedField
			type is Alpha size 25
			return DerivedAlphaCurrentTimeStamp[7:8] + DerivedAlphaCurrentTimeStamp[5:6] + DerivedAlphaCurrentTimeStamp[1:4] + DerivedAlphaCurrentTimeStamp[9:10]


		DeriverdIntegrationApplication is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "IntegrationApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedLoadRunGroup is a DerivedField
			type is Alpha size 25
			return DerivedAlphaCurrentTimeStamp[1:4] + DerivedAlphaCurrentTimeStamp[5:6] + DerivedAlphaCurrentTimeStamp[7:8] + DerivedAlphaCurrentTimeStamp[9:10]
		
		DerivedFinanceEnterpriseGroup is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "LoadSupplierInvoice_In_Ephesoft_FEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedLocallyFEG is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "LoadSupplierInvoice_In_Locally_FEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value

	

		DerivedConfigDocID is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "RequiredCleanDocumentID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedConfigFEG is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "IsMultipleFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		NativeAccountingEntity	is a NativeField
			type is Alpha 60
			restricted
		
		NativeVendor	is a NativeField
			type is Alpha 80
			restricted	
		
		NativeCompany	is a NativeField
			type is Alpha 40
			restricted		
			
		DerivedSyncConfiguration is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "SyncSupplierInvoice_In_OnlineMethod"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
			
		DerivedAuthorityCode is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "SyncSupplierInvoice_In_AuthorityCode"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		SyncSupplierInvoiceConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncSupplierInvoiceConfirmBODXML = template.IONSyncSupplierInvoice_ConfirmBOD_ST document for this instance
		
		DerivedSSIConfirmBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:"+DerivedTenantID+":"+LocalCompany+":"+LocalProcessLevel+":"+LocalInvoice+":"+"?BOD&verb=Confirm&TrackerID="+ DerivedTrackerID
		
		DerivedSSIErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Failed message, " + "Message: "+ LocalErrorMessage	
		
		DerivedSSIReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing SupplierInvoice- " + LocalErrorMessage	



		SyncExpenseReportConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncExpenseReportConfirmBODXML = template.IONSyncExpenseReport_ConfirmBOD_ST document for this instance
								
		NativeVendorGroup is a NativeField
			type is Alpha 80
			restricted
			
		NativeProject is a NativeField
			type is Alpha 80
			restricted
			
		NativeERCompany	is a NativeField
			type is Alpha 40
			restricted	
			
		NativeERAccountingEntity is a NativeField
			type is Alpha 60
			restricted	
		
		NativeMultipleAccountingEntity is a NativeField
			type is Alpha 80
			restricted
			


		DerivedPersonnelFinanceEnterpriseGroup is a DerivedField
			type is Alpha 20
			restricted
			LocalConfigurationParameter = "PersonnelInboundFEG"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedSPersonnelConfirmBODID is a DerivedField
			type is Alpha 100
			restricted
			return "infor-nid:"+DerivedTenantID+":"+LocalAccountingEntity+":"+ LocalDocumentID +":"+":"+"?BOD&verb=Confirm&TrackerID="+ DerivedTrackerID
				
		DerivedSPersonnelReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing Personnel- " + LocalErrorMessage
			else
				return LocalErrorMessage
				
		DerivedSPersonnelErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Failed message, " + "Message: "+ LocalErrorMessage	
			
		SyncPersonnelConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncPersonnelConfirmBODXML = template.IONSyncPersonnel_ConfirmBOD_ST document for this instance


		
		SyncSupplierPartyMasterConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncSupplierPartyMasterConfirmBODXML = template.IONSyncSupplierPartyMaster_ConfirmBOD_ST document for this instance
		
		DerivedSupplierPartyMasterReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing SyncSupplierPartyMaster " + LocalErrorMessage
			else
				return LocalErrorMessage
				
		DerivedSupplierPartyErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Error processing SyncSupplierPartyMaster" + "Message: "+ LocalErrorMessage	
		
		DerivedIntegratingApplication is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "IntegratingApplication"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedIgnoreGenericDelimiterConcatenation is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "SyncSupplierPartyMaster_In_IgnoreGenericDelimiterConcatenation"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


	Relations

		PayablesInvoiceRel
            one-to-one relation to PayablesInvoice
            Field Mapping uses ByCompanyVendorInvoice
                related.Company       		= LocalCompany
                related.Vendor         		= LocalVendor
                related.Invoice        		= LocalInvoice
				related.Suffix				= blank
				related.CancelSequence		= blank
				related.InvoiceDate			= LocalInvoiceDate			
		
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker                
		
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter
		
		UserTemplateRel
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
			Instance Selection
				where (related.UserTemplate   = LocalMainUserTemplate)
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "SupplierInvoice"
            	related.FSMBODConfiguration.Direction 	= 2

		LoadFSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 3
            	related.FSMBODConfiguration.Noun 		= "SupplierInvoice"
            	related.FSMBODConfiguration.Direction 	= 2
		
		MatchInvoiceImportRel
            one-to-one relation to MatchInvoiceImport
            Field Mapping uses symbolic key
                related.MatchInvoiceImport	= LocalMatchInvoiceImport     
		
#ifdef module tx
#ifdef module glif
#ifdef module po		
		TaxEntityRel				 
            one-to-many relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
			Instance Selection			
				where (related.TaxID			= LocallyCompanyTaxID)	
		
		GeneralLedgerCompanyRel
			one-to-many relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
			Instance Selection			
				where (related.AccountingEntity	= LocalTaxEntity)
		
		GeneralLedgerCompanyLocallyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company					= LocallyCompany
		
		VendorRel
            one-to-many relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup 			= LocalBusinessGroup
         	Instance Selection			
				where (related.TaxID			= LocallyVendorTaxID)
       
        PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company					= LocalCompany
				related.PurchaseOrder			= LocalPurchaseOrder
#endif
#endif
#endif

	

		SyncFSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "SupplierInvoice"
            	related.FSMBODConfiguration.Direction 	= 2
				
		SyncSupplierInvoiceCleanDocIDRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "DESTAE"
            	related.FSMBODCrossReference.DestinationField 	= "CSFGLC"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
				
		SyncSIGeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company					= LocalCompany

			

		FSMBODConfigRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "SupplierPartyMaster"
            	related.FSMBODConfiguration.Direction 	= 2
		
		VendorsRel
            one-to-one relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup 			= LocalBusinessGroup
         		related.Vendor					= LocalVendor
        
        FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "SourceAccountingEntity"
            	related.FSMBODCrossReference.DestinationField 	= "DestinationBusinessGroup"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
		
		FindVendorRel
            one-to-many relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup 			= LocalBusinessGroup
         	Instance Selection			
				where (related.Reference1 		= LocalReference)
				
		FindVendorM3Rel
            one-to-many relation to Vendor
            Field Mapping uses symbolic key
                related.VendorGroup 			= LocalBusinessGroup
         	Instance Selection			
				where (related.LegacyVendor 	= LocalReference)
				
		VendorGroupRel
            one-to-one relation to VendorGroup
            Field Mapping uses symbolic key
                related.VendorGroup 			= LocalBusinessGroup



#ifdef module ap		
	
		FSMBODConfigurationExpenseReportRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ExpenseReport"
            	related.FSMBODConfiguration.Direction 	= 2
		
		ExpenseManagementInterfaceHeaderRel
			one-to-one relation to ExpenseManagementInterfaceHeader
			Field Mapping uses symbolic key
				related.VendorGroup							=	LocalERVendorGroup
				related.ExpenseManagementInterfaceHeader	=	LocalDocID  
				
		ExpenseManagementStagingHeaderRel
			one-to-one relation to ExpenseManagementStagingHeader
			Field Mapping uses symbolic key
				related.VendorGroup						=	LocalERVendorGroup
				related.ExpenseManagementStagingHeader	=	LocalDocumentID  
		
		ExpenseManagementStagingDetailRel 
			one-to-one relation to ExpenseManagementStagingDetail
			Field Mapping uses symbolic key
				related.VendorGroup						=	LocalERVendorGroup
				related.ExpenseManagementStagingHeader	=	LocalDocumentID  
				related.ExpenseManagementStagingDetail	=	LocalIterator
				
#ifdef module GeneralLedger		
		ExpenseManagementFEGRel
			one-to-one relation to FinanceEnterpriseGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			=	LocalERFinanceEnterpriseGroup
#endif
#endif

		DESTAEVSCSFGLCCleanDocIDRel    
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "DESTAE"
            	related.FSMBODCrossReference.DestinationField 	= "CSFGLC"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
		

		DESTAEVSCSFAECleanDocIDRel 	
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "DESTAE"
            	related.FSMBODCrossReference.DestinationField 	= "CSFAE"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity)
		
		GLCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company					= LocalERCompany				


		FSMBODConfigurationPersonnelRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "Personnel"
            	related.FSMBODConfiguration.Direction 	= 2
				
		ExpenseManagementInterfaceConfigurationRel
			one-to-one relation to ExpenseManagementInterfaceConfiguration
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.ExpenseManagementInterfaceConfiguration	= "1"
				
		ByEmployeeVendorRel
			one-to-many relation to Vendor
			Field Mapping uses ByEmployee
				related.VendorGroup	= LocalBusinessGroup
				related.Employee	= LocalEmployee
				
		VendorAddressRel
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup					 	= LocalBusinessGroup
				related.Vendor						  	= LocalVendor
				related.VendorLocation				  	= blank
				related.VendorContact.VendorContactCode = blank
				related.VendorContact.ContactLevel	  	= blank


		FSMBODConfigurationAckSupplierPartyMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 5
            	related.FSMBODConfiguration.Noun 		= "SupplierPartyMaster"
            	related.FSMBODConfiguration.Direction 	= 2


	Actions
		
		Create is a Create Action
			restricted
		
		Update is an Update Action
			restricted
		
		Delete is a Delete Action				
			restricted
			

		ProcessSupplierInvoiceBODImport is an Import Action
			restricted
			bod type is Process.SupplierInvoice			
			Parameters
				SupplierInvoiceBOD 			is XMLDocument
			Action Rules
				LocalCompany			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalVariationID		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@variationID"
				LocalBODID				= SupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalBODXML				= SupplierInvoiceBOD
				
				if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					ActionCode 			= SupplierInvoiceBOD select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
					LocalCancelStatus	= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/ReasonCode"
					LocalUserAreaCount 	= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"
					
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "SupplierInvoice"	
							invoked.Direction				= 2				
							invoked.Company					= LocalCompany
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalCompany
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker					
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Company					= LocalCompany
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalCompany
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage	
						
					LocalIterator = 1
					while (LocalUserAreaCount >= LocalIterator)					
						LocalNameValue = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
						if(LocalNameValue = "InvoiceOnHold")
							LocalInvoiceOnHold 	= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
						else 
						if(LocalNameValue = "HoldCode")
							LocalHoldCode = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						else
						if (LocalNameValue = "ApprovalRequired")
							LocalApprovalRequired = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						LocalIterator = LocalIterator + 1
					
					if(DerivedConfiguration = "online")
						if(ActionCode = "Add" and PayablesInvoiceRel not exists)
							invoke CreatePayablesInvoice	                
			                	invoked.SupplierInvoiceBOD  = SupplierInvoiceBOD
			                	invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
						else
							if((ActionCode = "Replace" and PayablesInvoiceRel exists) or (ActionCode = "Add" and PayablesInvoiceRel exists))
								LocalPayablesInvoice		= PayablesInvoiceRel.PayablesInvoice
								LocalStatus 				= PayablesInvoiceRel.Status
								LocalInvoiceHoldCode		= PayablesInvoiceRel.InvoiceHoldCode
								LocalIsOnHold				= PayablesInvoiceRel.IsOnHold
								
								if(ActionCode = "Add" and LocalStatus = 1) 
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 					= true
										invoked.ErrorMessage 			= "Invoice Already Exists"
										invoked.Status					= 2
										invoked.CloseDate				= system current timestamp
									invoke SendPSIConfirmBOD
										invoked.PrmErrorMessage 		= "Invoice Already Exists"
										invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
										invoked.PrmTrackerID			= LocalFSMInboundBODTracker
									invoke SendPSIACKBOD
		                        		invoked.PrmErrorMessage 		= "Invoice Already Exists"
		                        		invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
		                        		invoked.PrmTrackerID			= LocalFSMInboundBODTracker
								else
									if(ActionCode = "Replace" and LocalCancelStatus = "Cancel")
										invoke CancelPayablesInvoice
											invoked.SupplierInvoiceBOD	= SupplierInvoiceBOD
											invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
									else 
										if(ActionCode = "Replace")
											if(LocalInvoiceOnHold = "true" and LocalHoldCode entered and LocalIsOnHold = "false")
												invoke PutInvoiceOnHold
													invoked.SupplierInvoiceBOD	= SupplierInvoiceBOD
													invoked.PrmHoldCode			= LocalHoldCode
													invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
											else 
												if(LocalInvoiceOnHold = "false" and ActionCode = "Replace" and LocalIsOnHold = "true")
													invoke TakeInvoiceOffHold
														invoked.SupplierInvoiceBOD	= SupplierInvoiceBOD
														invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
												else
													if(ActionCode = "Replace" and LocalIsOnHold = "true" and (LocalInvoiceOnHold = "true" and LocalHoldCode != LocalInvoiceHoldCode))
														invoke TakeInvoiceOffHold
															invoked.SupplierInvoiceBOD	= SupplierInvoiceBOD
															invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
														invoke PutInvoiceOnHold
															invoked.SupplierInvoiceBOD	= SupplierInvoiceBOD
															invoked.PrmHoldCode			= LocalHoldCode
															invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
													else
														if (LocalStatus = 0 and LocalApprovalRequired= "N")
															invoke ReleasePayablesInvoice
																invoked.SupplierInvoiceBOD  = SupplierInvoiceBOD
																invoked.PrmLikePayInvoice 	= LocalPayablesInvoice
																invoked.PrmInboundTracker 	= LocalFSMInboundBODTracker
														else
															invoke Update FSMInboundBODTrackerRel
																invoked.Status					= 3
																invoked.CloseDate				= system current timestamp
															invoke SendPSIACKBOD
		                    									invoked.PrmErrorMessage 		= "Invoice Created Sucessfully"
		                    									invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
		                    									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					else
						if(DerivedConfiguration = "interface" and ActionCode = "Add")
							LocalFSMInboundBODTracker 			= LocalFSMInboundBODTracker
							invoke CreatePayablesInvoiceImport
								invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
			                	invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
				else
				if(FSMInboundBODTracker not entered) 
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "SupplierInvoice"
						invoked.Direction				= 2					
						invoked.Company					= LocalCompany
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalCompany
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true			
						invoked.ErrorMessage			= "Process Supplier Invoice Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Company					= LocalCompany
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalCompany
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true			
						invoked.ErrorMessage			= "Process Supplier Invoice Inbound BOD Service is not Enabled"
		
		CreatePayablesInvoice is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 			is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
			Local Fields
                LocalTAmount				is Numeric 9
                LocalBAmount				is Numeric 9
			Action Rules
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalCompany				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceTypeAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
				LocalInvoiceType			= LocalInvoiceTypeAlpha[0:1]
				LocalInvoiceDateAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalCashCode				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Classification/Codes/Code"
				LocalDescription			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Description"
				LocalPayVendor				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/PartyIDs/ID"
				LocalRemitToCode			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/Location/ID"
				LocalTermsCode				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/PaymentTermCode"
				LocalBankTransactionCode	= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentMethodCode"
				LocalInvoiceAmount			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalCurrencyRate			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/CurrencyExchangeRate/RateNumeric"
				LocalAOC					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/ID"
				LocalReasonCode 			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/ReasonCode"
				LocalUserAreaCount 			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"	
				LocalDistCount   			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalCommentCount			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note)"
				LocalTaxDistCount			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax)"
				
				if(LocalInvoiceType = "I")
					LocalInvoiceType = ""
				
				LocalIterator = 1
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					if (LocalNameValue = "DistributionCode")
						LocalDistributionCode 		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
					else 
					if (LocalNameValue = "DistributionDate")
						LocalDistributionDateAlpha  = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						LocalDistributionDate		= LocalDistributionDateAlpha[1:4] + LocalDistributionDateAlpha[6:7] + LocalDistributionDateAlpha[9:10]
					else
					if (LocalNameValue = "ReceiptOfInvoiceDate")
						LocalReceiptOfInvoiceDateAlpha  = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						LocalReceiptOfInvoiceDate		= LocalReceiptOfInvoiceDateAlpha[1:4] + LocalReceiptOfInvoiceDateAlpha[6:7] + LocalReceiptOfInvoiceDateAlpha[9:10]
					else
					if (LocalNameValue = "SeparatePayment")									
						LocalSeparatePayment = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else
					if (LocalNameValue = "Enclosure")
						LocalEnclosure = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else
					if (LocalNameValue = "PayImmediately")
						LocalPayImmediately = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else
					if (LocalNameValue = "gfc.sourceInvoiceSource")
						LocalInvoiceSource = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else
					if (LocalNameValue = "ApprovalRequired")
						LocalApprovalRequired = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					LocalIterator = LocalIterator + 1		
				
				if(LocalDistributionCode not entered)
					LocalIterator = 1
					while (LocalTaxDistCount >= LocalIterator)
						LocalBAmount			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax[<LocalIterator>]/BasisAmount"								
						LocalTAmount 			= LocalBAmount + LocalTAmount
						LocalIterator 			= LocalIterator + 1
				
				if (LocalEnclosure = "true")
					LocalEnclosure ="Y"
				else
					LocalEnclosure ="N"
				
				if (LocalSeparatePayment = "true")
					LocalSeparatePayment ="Y"
				else
					LocalSeparatePayment ="N"
				
				if(LocalPayImmediately ="true" or LocalPayImmediately ="YES" or LocalPayImmediately ="Y")
					LocalPayImmediately = "Y"
				else 
				if(LocalPayImmediately ="false" or LocalPayImmediately ="NO" or LocalPayImmediately ="N")
					LocalPayImmediately = "N"
				
				invoke CreateInvoice PayablesInvoice
					assign result to NewPayablesInvoice
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message
					invoked.Company         				= LocalCompany
	                invoked.Vendor 							= LocalVendor
					invoked.Invoice							= LocalInvoice
					invoked.ProcessLevel    				= LocalProcessLevel
					invoked.InvoiceType						= LocalInvoiceType
					invoked.InvoiceDate						= LocalInvoiceDate
					invoked.DueDate							= LocalDueDate
					invoked.InvoiceCurrency 				= LocalInvoiceCurrency
					invoked.CashCode 						= LocalCashCode
					invoked.Description						= LocalDescription
					invoked.PayVendor						= LocalPayVendor					
					invoked.RemitToCode						= LocalRemitToCode
					invoked.TermsCode						= LocalTermsCode
					invoked.DistributionCode				= LocalDistributionCode
					invoked.DistributionDate				= LocalDistributionDate					
					invoked.BankTransactionCode				= LocalBankTransactionCode
					invoked.InvoiceAmount.CurrencyAmount	= LocalInvoiceAmount
					invoked.TaxableAmount					= LocalTAmount
					invoked.ReceiptOfInvoiceDate			= LocalReceiptOfInvoiceDate
					invoked.OverrideSeparatePayment			= LocalSeparatePayment
					invoked.OverrideEnclosure				= LocalEnclosure
					invoked.OverridePayImmediately			= LocalPayImmediately
					invoked.ReasonCode						= LocalReasonCode
					invoked.InvoiceSource					= LocalInvoiceSource
					invoked.InvoiceAmount.FunctionalAmount.EnteredCurrencyRate = LocalCurrencyRate	
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.SupplierInvoiceBOD      	= SupplierInvoiceBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 			= ErrorMessage
                        invoked.SupplierInvoiceBOD      	= SupplierInvoiceBOD
                        invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
					LikePayInvoice 							= NewPayablesInvoice.PayablesInvoice	
					if(LocalDistributionCode not entered and LocalDistCount > 0)				
						invoke CreatePayablesInvoiceDistribution	                
	                		invoked.SupplierInvoiceBOD    	= SupplierInvoiceBOD
	                		invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
	                		invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
					
					if(LocalDistributionCode not entered and LocalTaxDistCount>0 and (!FSMInboundBODTrackerRel.Error))				
						invoke CreatePayablesInvoiceTaxDistribution	                
	                		invoked.SupplierInvoiceBOD    	= SupplierInvoiceBOD
	                		invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
	                		invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
					
					if(LocalAOC entered and (LocalDistCount>0 or LocalTaxDistCount>0) and (!FSMInboundBODTrackerRel.Error))
						invoke CreateAOCPayablesInvoice
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
					
					if(LocalCommentCount > 0 and (!FSMInboundBODTrackerRel.Error))
						invoke CreatePayablesInvoiceComment
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
					
					if(!FSMInboundBODTrackerRel.Error and (LocalApprovalRequired = "N" or LocalApprovalRequired not entered))
						invoke ReleasePayablesInvoice
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
						
		CreatePayablesInvoiceDistribution is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 				is XMLDocument
				PrmLikePayInvoice   			is like PayablesInvoice
				PrmInboundTracker   			is like FSMInboundBODTracker
			Local Fields
                LocalTaxCodeListID     			is Alpha 50
                LocalDistLine                   is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalCompany					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor						= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalDistCount   				= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalIterator = 1
				while (LocalDistCount >= LocalIterator)
					LocalDistLine               = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution[<LocalIterator>]"
					LocalAccountingEntity		= LocalDistLine select "/Distribution/LedgerID/@accountingEntity"
					LocalAccount				= LocalDistLine select "/Distribution/GLAccount/GLNominalAccount"
					LocalTransactionAmount		= LocalDistLine select "/Distribution/Amount"
					LocalProject				= LocalDistLine select "/Distribution/ProjectReference/ID"
					LocalDescription			= LocalDistLine select "/Distribution/Classification/Description"
					LocalDistCodeCount 			= LocalDistLine select "count (/Distribution/Classification/Codes/Code)"
					LocalDistUserAreaCount		= LocalDistLine select "count (/Distribution/UserArea/Property/NameValue)"
					initialize LocalICNCode
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1		
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3		
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5		
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7		
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9		
					initialize LocalFinanceDimension10
					initialize LocalReference
					LocalLoop = 1			
					while (LocalDistUserAreaCount >= LocalLoop)					
						LocalDistNameValue 	= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue/@name"
						if(LocalDistNameValue = "ICNCode")
							LocalICNCode 		= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						if(LocalDistNameValue = "Description" and LocalDescription not entered)
							LocalDescription 	= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"	
						if(LocalDistNameValue = "Reference")
							LocalReference	 	= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"															
						LocalLoop = LocalLoop + 1
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1
					
					invoke Create PayablesInvoiceDistribution
						resume on error
                   			Error            								= true
                        	ErrorMessage     								= error message
						invoked.PayablesInvoice								= PrmLikePayInvoice
						invoked.Company         							= LocalCompany
	                	invoked.Vendor 										= LocalVendor
						invoked.Invoice										= LocalInvoice				
						invoked.GLTransactionAmount 						= LocalTransactionAmount
						invoked.GLFinanceCodeBlock.ToAccountingEntity 		= LocalAccountingEntity
						invoked.GLFinanceCodeBlock.GeneralLedgerChartAccount= LocalAccount
						invoked.GLFinanceCodeBlock.AccountingUnit			= LocalAccountingUnit 
						invoked.GLFinanceCodeBlock.FinanceDimension1		= LocalFinanceDimension1
						invoked.GLFinanceCodeBlock.FinanceDimension2		= LocalFinanceDimension2
						invoked.GLFinanceCodeBlock.FinanceDimension3		= LocalFinanceDimension3
						invoked.GLFinanceCodeBlock.FinanceDimension4		= LocalFinanceDimension4
						invoked.GLFinanceCodeBlock.FinanceDimension5		= LocalFinanceDimension5
						invoked.GLFinanceCodeBlock.FinanceDimension6		= LocalFinanceDimension6
						invoked.GLFinanceCodeBlock.FinanceDimension7		= LocalFinanceDimension7
						invoked.GLFinanceCodeBlock.FinanceDimension8		= LocalFinanceDimension8
						invoked.GLFinanceCodeBlock.FinanceDimension9		= LocalFinanceDimension9
						invoked.GLFinanceCodeBlock.FinanceDimension10		= LocalFinanceDimension10
						invoked.GLFinanceCodeBlock.Project					= LocalProject
						invoked.Description									= LocalDescription
						invoked.ICNCode										= LocalICNCode
						invoked.DistributionReference						= LocalReference
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendPSIConfirmBOD
							invoked.PrmErrorMessage 		= ErrorMessage
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke SendPSIACKBOD
                        	invoked.PrmErrorMessage 		= ErrorMessage
                        	invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        	invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke DeleteInvoice PayablesInvoiceRel
						LocalIterator = LocalDistCount + 1
					else 
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
		
		CreatePayablesInvoiceTaxDistribution is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 				is XMLDocument
				PrmLikePayInvoice   			is like PayablesInvoice
				PrmInboundTracker   			is like FSMInboundBODTracker
			Local Fields
                LocalTaxCodeListID     			is Alpha 50
                LocalTaxLine                    is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalCompany					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor						= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalTaxDistCount				= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax)"
				LocalIterator = 1
				while (LocalTaxDistCount >= LocalIterator)
					LocalTaxLine                = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax[<LocalIterator>]"
					LocalTaxCode				= LocalTaxLine select "/Tax/ID"
					LocalTaxableAmount			= LocalTaxLine select "/Tax/BasisAmount"
					LocalAccountingEntity		= LocalTaxLine select "/Tax/Distribution/LedgerID/@accountingEntity"
					LocalAccount				= LocalTaxLine select "/Tax/Distribution/GLAccount/GLNominalAccount"
					LocalTransactionAmount		= LocalTaxLine select "/Tax/Distribution/Amount"
					LocalProject				= LocalTaxLine select "/Tax/Distribution/ProjectReference/ID"
					LocalDescription			= LocalTaxLine select "/Tax/Distribution/Classification/Description"
					LocalTaxDistCodeCount 		= LocalTaxLine select "count (/Tax/Distribution/Classification/Codes/Code)"
					LocalTaxUserAreaCount		= LocalTaxLine select "count (/Tax/Distribution/UserArea/Property/NameValue)"
					initialize LocalTaxIndicator
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1	
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3	
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5	
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7		
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9		
					initialize LocalFinanceDimension10
					initialize LocalReference
					LocalLoop = 1
					while (LocalTaxUserAreaCount >= LocalLoop)					
						LocalTaxNameValue 	= LocalTaxLine select "/Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue/@name"
						if(LocalTaxNameValue = "TaxIndicator")
							LocalTaxIndicator 		= LocalTaxLine select "/Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						if(LocalTaxNameValue = "Description" and LocalDescription not entered)
							LocalDescription 		= LocalTaxLine select "Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue"	
						if(LocalTaxNameValue = "Reference")
							LocalReference	 		= LocalTaxLine select "Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue"	
						LocalLoop = LocalLoop + 1
					
					if(LocalTaxIndicator = 1)
						LocalTaxCode 		= ""
						LocalTaxableAmount 	= ""
					
					LocalLoop = 1
					while (LocalTaxDistCodeCount >= LocalLoop) 			
						LocalTaxCodeListID	= LocalTaxLine select "/Tax/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue		= LocalTaxLine select "/Tax/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalTaxCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalTaxCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalTaxCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1
					
					invoke Create PayablesInvoiceDistribution
						resume on error
                   			Error            								= true
                        	ErrorMessage     								= error message
						invoked.PayablesInvoice								= PrmLikePayInvoice
						invoked.Company         							= LocalCompany
	                	invoked.Vendor 										= LocalVendor
						invoked.Invoice										= LocalInvoice	
						invoked.TaxCode										= LocalTaxCode			
						invoked.GLTransactionAmount 						= LocalTransactionAmount
						invoked.TaxIndicator								= LocalTaxIndicator
						invoked.TaxableAmount								= LocalTaxableAmount
						invoked.GLFinanceCodeBlock.ToAccountingEntity 		= LocalAccountingEntity
						invoked.GLFinanceCodeBlock.GeneralLedgerChartAccount= LocalAccount
						invoked.GLFinanceCodeBlock.AccountingUnit			= LocalAccountingUnit 
						invoked.GLFinanceCodeBlock.FinanceDimension1		= LocalFinanceDimension1
						invoked.GLFinanceCodeBlock.FinanceDimension2		= LocalFinanceDimension2
						invoked.GLFinanceCodeBlock.FinanceDimension3		= LocalFinanceDimension3
						invoked.GLFinanceCodeBlock.FinanceDimension4		= LocalFinanceDimension4
						invoked.GLFinanceCodeBlock.FinanceDimension5		= LocalFinanceDimension5
						invoked.GLFinanceCodeBlock.FinanceDimension6		= LocalFinanceDimension6
						invoked.GLFinanceCodeBlock.FinanceDimension7		= LocalFinanceDimension7
						invoked.GLFinanceCodeBlock.FinanceDimension8		= LocalFinanceDimension8
						invoked.GLFinanceCodeBlock.FinanceDimension9		= LocalFinanceDimension9
						invoked.GLFinanceCodeBlock.FinanceDimension10		= LocalFinanceDimension10
						invoked.GLFinanceCodeBlock.Project					= LocalProject
						invoked.Description									= LocalDescription
						invoked.ICNCode										= LocalICNCode
						invoked.DistributionReference						= LocalReference
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendPSIConfirmBOD
							invoked.PrmErrorMessage 		= ErrorMessage
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke SendPSIACKBOD
                        	invoked.PrmErrorMessage 		= ErrorMessage
                        	invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        	invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke DeleteInvoice PayablesInvoiceRel
						LocalIterator = LocalTaxDistCount + 1
					else 
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
								
		ReleasePayablesInvoice is an Instance Action
			restricted
			Parameters
        		PrmLikePayInvoice   					is like PayablesInvoice
        		SupplierInvoiceBOD 						is XMLDocument
        		PrmInboundTracker  						is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 				= PrmInboundTracker
				invoke Unreleased.Release NewPayablesInvoice.PayablesInvoice
					resume on error
                   		Error           				= true
                        ErrorMessage   	 				= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= ErrorMessage
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					invoke DeleteInvoice PayablesInvoiceRel
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= "Invoice Created Sucessfully"
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
		
		CreatePayablesInvoiceComment is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 			is XMLDocument
				PrmLikePayInvoice   		is like PayablesInvoice
			Action Rules
				LocalCompany				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalCommentCount			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note"
				LocalIterator = 1
				while (LocalCommentCount >= LocalIterator)
					LocalCommentTitle		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note[<LocalIterator>]/@noteID"
					LocalComment			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note[<LocalIterator>]"
					LocalCommentType 		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note[<LocalIterator>]/@type"
					
					if(LocalCommentType = "InvoiceNote")
						LocalCommentType = "N"
					else 
					if(LocalCommentType = "InvoiceReport")
						LocalCommentType = "D"
					else 
					if(LocalCommentType = "InvoiceCheck")
						LocalCommentType = "C"
					else 
					if(LocalCommentType = "InvoicePaymentAddendum")
						LocalCommentType = "H"
					else
						LocalCommentType = "A"
					
					if(LocalCommentTitle entered)
						invoke Create PayablesInvoiceComment
							invoked.PayablesInvoice					= PrmLikePayInvoice
							invoked.Company         				= LocalCompany
			            	invoked.Title 							= LocalCommentTitle
							invoked.Comment							= LocalComment
							invoked.Type							= LocalCommentType
					LocalIterator = LocalIterator + 1       
	                 
		CreateAOCPayablesInvoice is an Instance Action
			restricted
			Parameters
        		PrmLikePayInvoice   		is like PayablesInvoice
        		SupplierInvoiceBOD 			is XMLDocument
        		PrmInboundTracker  			is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalCompany				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceTypeAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
				LocalInvoiceType			= LocalInvoiceTypeAlpha[0:1]
				LocalInvoiceDateAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalPayVendor				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/PartyIDs/ID"
				LocalAOC					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/ID"
				LocalAOCAmount				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/Amount"
				LocalAccountingEntity		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/Distribution/LedgerID/@accountingEntity"
				LocalAccount				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/Distribution/GLAccount/GLNominalAccount"
				LocalAccountingUnit			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge/Distribution/Classification/Codes/Code"
				if(LocalInvoiceType = "I")
					LocalInvoiceType = ""
				
				invoke Unreleased.Update NewPayablesInvoice.PayablesInvoice
					resume on error
                   		Error             										= true
                    	ErrorMessage      										= error message
					invoked.Vendor 												= LocalVendor
					invoked.Invoice												= LocalInvoice
					invoked.Company												= LocalCompany
					invoked.ProcessLevel										= LocalProcessLevel
					invoked.InvoiceCurrency										= LocalInvoiceCurrency			
					invoked.InvoiceDate											= LocalInvoiceDate
					invoked.InvoiceType											= LocalInvoiceType
					invoked.DueDate												= LocalDueDate
					invoked.PayVendor											= LocalPayVendor
					invoked.PayablesInvoice										= PrmLikePayInvoice
					invoked.TransientAddOnCharge								= LocalAOC
					invoked.TransientProrateAmount								= LocalAOCAmount
					invoked.TransientProrateAccount.ToAccountingEntity			= LocalAccountingEntity
					invoked.TransientProrateAccount.AccountingUnit				= LocalAccountingUnit
					invoked.TransientProrateAccount.GeneralLedgerChartAccount	= LocalAccount
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= ErrorMessage
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
                    invoke DeleteInvoice PayablesInvoiceRel
		
		CancelPayablesInvoice is an Instance Action
			restricted			
			Parameters
				SupplierInvoiceBOD 						is XMLDocument
				PrmInboundTracker  						is like FSMInboundBODTracker
			Local Fields
                InvoiceCancelDateAlpha					is Alpha 20
			Action Rules
				LocalFSMInboundBODTracker 				= PrmInboundTracker
				InvoiceCancelDateAlpha					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceCancelDate 					= InvoiceCancelDateAlpha[1:4] + InvoiceCancelDateAlpha[6:7] + InvoiceCancelDateAlpha[9:10]	
				LocalReasonCode							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/ReasonCode/@listID"
				
				invoke Released.Cancel PayablesInvoiceRel
	                resume on error
	               		Error           				= true
	                    ErrorMessage   	 				= error message
	                invoked.InvoiceCancelDate 			= LocalInvoiceCancelDate
					invoked.reason code					= LocalReasonCode
					invoked.action comment  			= LocalReasonCode
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker	
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= ErrorMessage
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
                else 
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= "Invoice Created Sucessfully"
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker       
		
		PutInvoiceOnHold is an Instance Action
			restricted			
			Parameters
				SupplierInvoiceBOD 						is XMLDocument
				PrmHoldCode								is Alpha 10
                PrmInboundTracker  						is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 				= PrmInboundTracker
				invoke PutInvoiceOnHold PayablesInvoiceRel
					resume on error
                   		Error           				= true
                        ErrorMessage   	 				= error message
	                invoked.HoldCode 					= PrmHoldCode
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= ErrorMessage
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
                else 
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= "Invoice Created Sucessfully"
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker	      		
		
		TakeInvoiceOffHold is an Instance Action
			restricted			
			Parameters
				SupplierInvoiceBOD 						is XMLDocument
				PrmInboundTracker  						is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 				= PrmInboundTracker
				invoke TakeInvoiceOffHold PayablesInvoiceRel
					resume on error
	               		Error           				= true
	                    ErrorMessage   	 				= error message
				if(Error)
					LocalFSMInboundBODTracker 			= PrmInboundTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendPSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= ErrorMessage
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
					invoke SendPSIACKBOD
                        invoked.PrmErrorMessage 		= "Invoice Created Sucessfully"
                        invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
                        invoked.PrmTrackerID			= LocalFSMInboundBODTracker
		
		CreatePayablesInvoiceImport is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 			is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker	
				LocalCompany				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceTypeAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
				LocalInvoiceType			= LocalInvoiceTypeAlpha[0:1]
				LocalInvoiceDateAlpha		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalCashCode				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Classification/Codes/Code"
				LocalDescription			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Description"
				LocalPayVendor				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/PartyIDs/ID"
				LocalRemitToCode			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/Location/ID"
				LocalTermsCode				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/PaymentTermCode"
				LocalBankTransactionCode	= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentMethodCode"
				LocalInvoiceAmount			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalCurrencyRate			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/CurrencyExchangeRate/RateNumeric"
				LocalFromLogicalID			= SupplierInvoiceBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= SupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID					= SupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalUserAreaCount 			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"
				LocalDistCount   			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalCommentCount			= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note)"
				
				LocalIterator = 1
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					
					if (LocalNameValue = "DistributionCode")
						LocalDistributionCode 		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
					else 
					if (LocalNameValue = "DistributionDate")
						LocalDistributionDateAlpha  = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						LocalDistributionDate		= LocalDistributionDateAlpha[1:4] + LocalDistributionDateAlpha[6:7] + LocalDistributionDateAlpha[9:10]
					else
					if (LocalNameValue = "ReceiptOfInvoiceDate")
						LocalReceiptOfInvoiceDateAlpha = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
						LocalReceiptOfInvoiceDate		= LocalReceiptOfInvoiceDateAlpha[1:4] + LocalReceiptOfInvoiceDateAlpha[6:7] + LocalReceiptOfInvoiceDateAlpha[9:10]
					else
					if (LocalNameValue = "SeparatePayment")									
						LocalSeparatePayment = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else
					if (LocalNameValue = "Enclosure")
						LocalEnclosure = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else 
					if (LocalNameValue = "HoldCode")
						LocalHoldCode = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else 
					if (LocalNameValue = "RunGroup")
						LocalUserAreaRunGroup = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else 
					if (LocalNameValue = "PayImmediately")
						LocalPayImmediately = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					else 
					if (LocalNameValue = "gfc.sourceInvoiceSource")
						LocalInvoiceSource = SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					LocalIterator = LocalIterator + 1	
				
				if(LocalUserAreaRunGroup entered)
					LocalRunGroup = LocalUserAreaRunGroup
				else
					LocalRunGroup = DerivedRunGroup
				
				if(LocalInvoiceType = "I")
					LocalInvoiceType = ""
				if(LocalHoldCode != "true")
					LocalHoldCode = ""
				if (LocalEnclosure = "true")
					LocalEnclosure ="Y"
				else
					LocalEnclosure ="N"
				if (LocalSeparatePayment = "true")
					LocalSeparatePayment ="Y"
				else
					LocalSeparatePayment ="N"
				if(DerivedDeletePIInterfaceRecord = "No")
					LocalComponentID = "Payroll"
				
				if(LocalPayImmediately ="true" or LocalPayImmediately ="YES" or LocalPayImmediately ="Y")
					LocalPayImmediately = "Y"
				else 
				if(LocalPayImmediately ="false" or LocalPayImmediately ="NO" or LocalPayImmediately ="N")
					LocalPayImmediately = "N"
					
				invoke CreateBypassFieldRules PayablesInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.RunGroup					= LocalRunGroup
					invoked.Company         			= LocalCompany
                	invoked.Vendor 						= LocalVendor
					invoked.Invoice						= LocalInvoice				
					invoked.ProcessLevel 				= LocalProcessLevel
					invoked.InvoiceCurrency 			= LocalInvoiceCurrency
					invoked.InvoiceDate					= LocalInvoiceDate
					invoked.InvoiceAmount				= LocalInvoiceAmount
					invoked.DueDate         			= LocalDueDate
                	invoked.PayVendor 					= LocalPayVendor
					invoked.InvoiceType					= LocalInvoiceType				
					invoked.Status						= 1
					invoked.PostingStatus         		= 1
                	invoked.HoldCode 					= LocalHoldCode
					invoked.DistributionDate			= LocalDistributionDate				
					invoked.SeparatePayment 			= LocalSeparatePayment
					invoked.Enclosure 					= LocalEnclosure
					invoked.CashCode					= LocalCashCode
					invoked.BankTransactionCode         = LocalBankTransactionCode
                	invoked.CurrencyExchangeRate 		= LocalCurrencyRate
					invoked.ReceiptOfInvoiceDate		= LocalReceiptOfInvoiceDate				
					invoked.TermsCode 					= LocalTermsCode
					invoked.SenderLogicalID 			= LocalFromLogicalID
					invoked.SenderComponentID			= LocalComponentID
					invoked.SenderCreationDateTime      = DerivedBODFormattedCurrentTimeStamp
                	invoked.SenderBODID 				= LocalBODID
					invoked.SenderOriginalBOD			= "Interface"				
					invoked.RemitToCode 				= LocalRemitToCode
					invoked.DistributionCode 			= LocalDistributionCode
					invoked.Description					= LocalDescription
					invoked.PayImmediately				= LocalPayImmediately
					invoked.InvoiceSource				= LocalInvoiceSource
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
					if(LocalDistCount > 0 and LocalDistributionCode not entered)
						invoke CreatePayablesInvoiceDistributionImport
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
			                invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
			                invoked.PrmRunGroup				= LocalRunGroup
				
					if(LocalCommentCount > 0 and (!FSMInboundBODTrackerRel.Error))
						invoke CreatePayablesInvoiceCommentImport
							invoked.SupplierInvoiceBOD      = SupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmRunGroup				= LocalRunGroup
				if(!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
							
		CreatePayablesInvoiceDistributionImport is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 				is XMLDocument
				PrmInboundTracker   			is like FSMInboundBODTracker
				PrmRunGroup						is AlphaUpper 30
			Local Fields
				LocalDistLine					is XMLDocument 
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalRunGroup					= PrmRunGroup
				LocalCompany					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor						= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalDistCount   				= SupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalIterator = 1
				while (LocalDistCount >= LocalIterator)
					LocalDistLine				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution[<LocalIterator>]"
					
					LocalAccountingEntity		= LocalDistLine select "/Distribution/LedgerID/@accountingEntity"
					LocalAccount				= LocalDistLine select "/Distribution/GLAccount/GLNominalAccount"
					LocalTransactionAmount		= LocalDistLine select "/Distribution/Amount"
					LocalProject				= LocalDistLine select "/Distribution/ProjectReference/ID"
					LocalDescription			= LocalDistLine select "/Distribution/Classification/Description"
					LocalDistCodeCount 			= LocalDistLine select "count (/Distribution/Classification/Codes/Code)"
					LocalDistUserAreaCount		= LocalDistLine select "count (/Distribution/UserArea/Property/NameValue)"
					initialize LocalICNCode
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1	
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3	
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5		
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7	
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9		
					initialize LocalFinanceDimension10
					initialize LocalReference
					LocalLoop = 1			
					while (LocalDistUserAreaCount >= LocalLoop)	
						LocalDistNameValue 	= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue/@name"
						if(LocalDistNameValue = "ICNCode")
							LocalICNCode 		= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						if(LocalDistNameValue = "Description" and LocalDescription not entered)
							LocalDescription 		= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"	
						if(LocalDistNameValue = "Reference")
							LocalReference	 		= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						LocalLoop = LocalLoop + 1
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1				
					
					invoke CreateBypassFieldRules PayablesInvoiceDistributionImport
						resume on error
	               			Error            									= true
	                    	ErrorMessage     									= error message
						invoked.RunGroup										= LocalRunGroup
						invoked.Company         								= LocalCompany
	                	invoked.Vendor 											= LocalVendor
						invoked.Invoice											= LocalInvoice				
						invoked.DistributionAmount 								= LocalTransactionAmount
						invoked.DistributionAccount.ToAccountingEntity 			= LocalAccountingEntity
						invoked.DistributionAccount.AccountingUnit				= LocalAccountingUnit
						invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalAccount
						invoked.DistributionAccount.FinanceDimension1         	= LocalFinanceDimension1
	                	invoked.DistributionAccount.FinanceDimension2 			= LocalFinanceDimension2
						invoked.DistributionAccount.FinanceDimension3			= LocalFinanceDimension3				
						invoked.DistributionAccount.FinanceDimension4			= LocalFinanceDimension4
						invoked.DistributionAccount.FinanceDimension5         	= LocalFinanceDimension5
	                	invoked.DistributionAccount.FinanceDimension6 			= LocalFinanceDimension6
						invoked.DistributionAccount.FinanceDimension7			= LocalFinanceDimension7				
						invoked.DistributionAccount.FinanceDimension8 			= LocalFinanceDimension8
						invoked.DistributionAccount.FinanceDimension9 			= LocalFinanceDimension9
						invoked.DistributionAccount.FinanceDimension10			= LocalFinanceDimension10
						invoked.DistributionAccount.Project						= LocalProject
						invoked.Sequence         								= LocalIterator
	                	invoked.ICNCode 										= LocalICNCode
						invoked.Description										= LocalDescription
						invoked.DistributionReference							= LocalReference
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalDistCount + 1
					else
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction	
		
		CreatePayablesInvoiceCommentImport is an Import Action
			restricted			
			Parameters
				SupplierInvoiceBOD 			is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmRunGroup					is AlphaUpper 30
			Action Rules
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalRunGroup				= PrmRunGroup 
				LocalCompany				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalCommentCount			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note"
				LocalIterator = 1
				while (LocalCommentCount >= LocalIterator)
					LocalCommentTitle		= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note[<LocalIterator>]/@noteID"
					LocalComment			= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Note[<LocalIterator>]"
					if(LocalComment entered)
						invoke Create PayablesInvoiceImportComment
							resume on error
		               			Error            			= true
		                    	ErrorMessage     			= error message
							invoked.RunGroup				= LocalRunGroup
							invoked.Company         		= LocalCompany
		                	invoked.Vendor 					= LocalVendor
							invoked.Invoice					= LocalInvoice				
							invoked.Title 					= LocalCommentTitle
							invoked.Comment 				= LocalComment
							invoked.Type					= "A"
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= Error
								invoked.ErrorMessage 			= ErrorMessage
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp
							LocalIterator = LocalCommentCount + 1
						else
							LocalIterator = LocalIterator + 1
					else
						LocalIterator = LocalIterator + 1
		
		SendPSIConfirmBOD is an Instance Action
			restricted			
			Parameters
				SupplierInvoiceBOD 						is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalPSupplierInvoiceXML				= SupplierInvoiceBOD
				LocalErrorMessage						= PrmErrorMessage
				LocalTrackerID							= PrmTrackerID
				LocalCompany							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalFromLogicalID						= SupplierInvoiceBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID						= SupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID								= SupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalDocumentID							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalAccountingEntity					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalConfirmBOD							= "true"
				LocalMainUserTemplate					= "IONProcessSupplierInvoice_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessSupplierInvoiceConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID
					
		SendPSIACKBOD is an Instance Action
			restricted			
			Parameters
				SupplierInvoiceBOD 						is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalPSupplierInvoiceXML				= SupplierInvoiceBOD
				LocalErrorMessage						= PrmErrorMessage
				LocalTrackerID							= PrmTrackerID
				LocalInvoice							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalCompany							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalFromLogicalID						= SupplierInvoiceBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID						= SupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID								= SupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalTaskID								= SupplierInvoiceBOD select "//ApplicationArea/Sender/TaskID"
				LocalReferenceID						= SupplierInvoiceBOD select "//ApplicationArea/Sender/ReferenceID"
				LocalConfirmationCode					= SupplierInvoiceBOD select "//ApplicationArea/Sender/ConfirmationCode"
				LocalAuthorizationID					= SupplierInvoiceBOD select "//ApplicationArea/Sender/AuthorizationID"
				LocalDocumentID							= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalAccountingEntity					= SupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalMainUserTemplate					= "IONProcessSupplierInvoice_AcknowledgeBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessSupplierInvoiceAcknowledgeBODXML
						bod type is "Acknowledge.SupplierInvoice"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID
#endif				




		LoadSupplierInvoiceBODImport is an Import Action
			restricted
			bod type is Load.SupplierInvoice			
			Parameters
				LoadSupplierInvoiceBOD 	is XMLDocument
			Action Rules
				LocalCompany			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalVariationID		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@variationID"
				LocalBODID				= LoadSupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalBODXML				= LoadSupplierInvoiceBOD
								
				if(LoadFSMBODConfigurationRel exists and LoadFSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 3
							invoked.Noun 					= "SupplierInvoice"	
							invoked.Direction				= 2				
							invoked.Company					= LocalCompany
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalCompany
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker	= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Company					= LocalCompany
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalCompany
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						
					LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
					LocalIntegrationApplication = DeriverdIntegrationApplication
					
					LocalInvoiceTypeAlpha		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
					
					if(LocalInvoiceTypeAlpha = "Invoice")
						LocalInvoiceType = ""
					else
					if(LocalInvoiceTypeAlpha = "CreditMemo" or LocalInvoiceTypeAlpha = "CreditNotes")
						LocalInvoiceType = "C"
					else
					if(LocalInvoiceTypeAlpha = "DebitMemo")
						LocalInvoiceType = "D"
					else
					if(LocalInvoiceTypeAlpha = "MatchPrepayment")
						LocalInvoiceType = "R"
					else
						LocalInvoiceType = ""
					
					if(LocalIntegrationApplication = "Local.ly")
						LocallyCompany = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/CustomerParty/PartyIDs/ID"
						LocallyVendor  = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
						if (LocallyCompany not entered)
							LocallyCompanyTaxID = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/CustomerParty/PartyIDs/TaxID"
						if (LocallyVendor  not entered)	
							LocallyVendorTaxID  = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/TaxID"
					
					if(LocalIntegrationApplication 	= "Local.ly" and LocallyCompanyTaxID entered and LocallyCompany not entered)
						LocalFinanceEnterpriseGroup = DerivedLocallyFEG
						LocalTaxEntity				= TaxEntityRel.TaxEntity
						LocallyCompany 				= GeneralLedgerCompanyRel.Company	
					
					if(LocalIntegrationApplication 	= "Local.ly" and LocallyVendorTaxID entered and LocallyVendor not entered)
						LocalBusinessGroup 			= GeneralLedgerCompanyLocallyRel.BusinessGroup
						LocallyVendor				= VendorRel.Vendor
					
					if(LocalIntegrationApplication = "Local.ly")
						LocalCompany 		= LocallyCompany
						LocalVendor			= LocallyVendor
					
					if(LocalPurchaseOrder entered)
						if(LocalIntegrationApplication = "Local.ly")
							invoke CreateLoadMatchInvoiceImport
								invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
								invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
								invoked.PrmVendor				= LocalVendor
								invoked.PrmCompany				= LocalCompany
								invoked.PrmInvoiceType			= LocalInvoiceType
						else
							invoke CreateLoadMatchInvoice
								invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
								invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
								invoked.PrmInvoiceType			= LocalInvoiceType
					else
						invoke CreateLoadPayablesInvoiceImport
							invoked.LoadSupplierInvoiceBOD  	= LoadSupplierInvoiceBOD
			                invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
			                invoked.PrmVendor					= LocalVendor
							invoked.PrmCompany					= LocalCompany
							invoked.PrmInvoiceType				= LocalInvoiceType
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 3
						invoked.Noun 					= "SupplierInvoice"	
						invoked.Direction				= 2				
						invoked.Company					= LocalCompany
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalCompany
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true			
						invoked.ErrorMessage			= "Load Supplier Invoice Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Company					= LocalCompany
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalCompany
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true			
						invoked.ErrorMessage			= "Load Supplier Invoice Inbound BOD Service is not Enabled"
						
		CreateLoadMatchInvoiceImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmVendor					is Numeric 9
				PrmCompany					is Numeric 9
				PrmInvoiceType				is AlphaUpper 4
			Local Fields
                LocalTAmount				is Decimal 19.3
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalInvoiceType			= PrmInvoiceType
				LocalInvoiceDateAlpha		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalInvoiceAmount			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalVendor					= PurchaseOrderRel.Vendor
				LocalRunGroup 				= DerivedLoadRunGroup
				LocalFromLogicalID			= LoadSupplierInvoiceBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= LoadSupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID					= LoadSupplierInvoiceBOD select "//ApplicationArea/Sender/BODID"
				LocalReference				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/StructuredCreditorReference"
				LocalLineCount				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceLine)"
				LocalTaxLength				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax)"
				
				LocalIterator = 1	
				while (LocalTaxLength >= LocalIterator)					
					LocalTAmount = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax[<LocalIterator>]/Amount"
					LocalTaxAmount	= LocalTaxAmount + LocalTAmount
					LocalIterator = LocalIterator + 1
					
				if(DeriverdIntegrationApplication = "Local.ly")
					LocalCompany			= PrmCompany
					LocalVendor				= PrmVendor
				if (LocalPurchaseOrder entered)
					LocalProcessType = "M"
				else
					LocalProcessType = "B"
					
				invoke CreateNoRules MatchInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.RunGroup					= LocalRunGroup
					invoked.Company         			= LocalCompany
                	invoked.Vendor 						= LocalVendor
					invoked.Invoice						= LocalInvoice				
					invoked.InvoiceCurrency 			= LocalInvoiceCurrency
					invoked.InvoiceDate					= LocalInvoiceDate
					invoked.InvoiceTransactionAmount	= LocalInvoiceAmount
					invoked.DueDate         			= LocalDueDate
					invoked.PurchaseOrder				= LocalPurchaseOrder
					invoked.ProcessType					= LocalProcessType	
					invoked.SenderLogicalID				= LocalFromLogicalID	
					invoked.SenderComponentID			= LocalComponentID
					invoked.SenderCreationDateTime		= DerivedBODFormattedCurrentTimeStamp
					invoked.SenderBODID					= LocalBODID
					invoked.SenderOriginalBOD			= "FROM BOD"
					invoked.Reference					= LocalReference	
					invoked.InvoiceType					= LocalInvoiceType
					invoked.TotalTaxAmount				= LocalTaxAmount	
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
					if(LocalLineCount > 0)
						invoke CreateLoadPayablesInvoiceDetailImport
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmRunGroup				= LocalRunGroup
							invoked.PrmVendor				= LocalVendor
							invoked.PrmCompany				= LocalCompany
					if(LocalIntegrationApplication = "Local.ly")
						invoke InterfaceInvoices MatchInvoiceImport
							resume on error
								Error							= true
								ErrorMessage					= error message
							invoked.PrmFinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.PrmCompany					= LocalCompany
							invoked.PrmRunGroup					= LocalRunGroup
							invoked.InvoiceProcess				= "M"
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error						= Error
								invoked.ErrorMessage				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Status					= 3
							invoked.CloseDate				= system current timestamp
		
		CreateLoadPayablesInvoiceDetailImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmRunGroup					is Alpha 30
				PrmVendor					is Numeric 9
				PrmCompany					is Numeric 9
			Local Fields
				LocalLines					is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalRunGroup				= PrmRunGroup
				LocalCompany				= PrmCompany
				LocalVendor					= PrmVendor
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalLineCount				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceLine)"
				
				LocalIterator = 1
				while (LocalLineCount >= LocalIterator)
					LocalLines					= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceLine[<LocalIterator>]"
					LocalItem					= LocalLines select "/SupplierInvoiceLine/Item/ItemID"
					LocalEnteredQuantity        = LocalLines select "/SupplierInvoiceLine/Quantity" 
					LocalEnteredUOM       		= LocalLines select "/SupplierInvoiceLine/Quantity/@unitCode" 
					LocalUnitCost       		= LocalLines select "/SupplierInvoiceLine/UnitPrice/Amount" 
					LocalLineNumber				= LocalLines select "/SupplierInvoiceLine/LineNumber" 
					LocalLineChargeCount 		= LocalLines select "count (/SupplierInvoiceLine/InvoiceCharge)"

					invoke CreateNoRules PayablesInvoiceDetailImport
						resume on error
	               			Error            				= true
	                    	ErrorMessage     				= error message
						invoked.RunGroup					= LocalRunGroup
						invoked.Company         			= LocalCompany
	                	invoked.Vendor 						= LocalVendor
						invoked.Invoice						= LocalInvoice				
						invoked.Item 						= LocalItem
						invoked.EnteredQuantity 			= LocalEnteredQuantity
						invoked.EnteredUOM					= LocalEnteredUOM
						invoked.UnitCost					= LocalUnitCost
						invoked.VendorItem         			= LocalItem
						invoked.LineNumber					= LocalLineNumber
						invoked.Sequence					= 1
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalLineCount + 1
					else
						if(LocalLineChargeCount > 0)
							LocalAOCIterator = 1
							while (LocalLineChargeCount >= LocalAOCIterator)
								LocalAddOnCharge			= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/ID"
								LocalAmount        			= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Amount"
								LocalAccountingEntity		= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/LedgerID/@accountingEntity" 
								LocalAccount 				= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/GLAccount/GLNominalAccount" 
								LocalProject 				= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/ProjectReference/ID"
								LocalDistCodeCount 			= LocalLines select "count (/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/Classification/Codes/Code)"
								initialize LocalAccountingUnit
								initialize LocalFinanceDimension1	
								initialize LocalFinanceDimension2
								initialize LocalFinanceDimension3	
								initialize LocalFinanceDimension4
								initialize LocalFinanceDimension5	
								initialize LocalFinanceDimension6
								initialize LocalFinanceDimension7	
								initialize LocalFinanceDimension8
								initialize LocalFinanceDimension9		
								initialize LocalFinanceDimension10
								
								LocalLoop = 1
								while (LocalDistCodeCount >= LocalLoop) 			
									LocalCodeListID	= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
									LocalCodeValue	= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]"
									
									if(LocalCodeListID = "AccountingUnit")
										LocalAccountingUnit	= LocalCodeValue	
									else
									if(LocalCodeListID = "FinanceDimension1")
										LocalFinanceDimension1	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension2")
										LocalFinanceDimension2	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension3")
										LocalFinanceDimension3	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension4")
										LocalFinanceDimension4	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension5")
										LocalFinanceDimension5	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension6")
										LocalFinanceDimension6	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension7")
										LocalFinanceDimension7	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension8")
										LocalFinanceDimension8	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension9")
										LocalFinanceDimension9	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension10")
										LocalFinanceDimension10	= LocalCodeValue
									LocalLoop = LocalLoop + 1	
								
								invoke Create PayablesInvoiceAddOnChargeImport
									resume on error
				               			Error            								= true
				                    	ErrorMessage     								= error message
									invoked.RunGroup									= LocalRunGroup
									invoked.Company         							= LocalCompany
				                	invoked.Vendor 										= LocalVendor
									invoked.Invoice										= LocalInvoice				
									invoked.AddOnCharge 								= LocalAddOnCharge
									invoked.EnteredAddOnChargeAmount 					= LocalAmount
									invoked.PostingAccount.AccountingUnit				= LocalAccountingUnit
									invoked.PostingAccount.ToAccountingEntity			= LocalAccountingEntity
									invoked.PostingAccount.GeneralLedgerChartAccount	= LocalAccount
									invoked.PostingAccount.FinanceDimension1			= LocalFinanceDimension1
									invoked.PostingAccount.FinanceDimension2         	= LocalFinanceDimension2
									invoked.PostingAccount.FinanceDimension3			= LocalFinanceDimension3
									invoked.PostingAccount.FinanceDimension4			= LocalFinanceDimension4
									invoked.PostingAccount.FinanceDimension5			= LocalFinanceDimension5
									invoked.PostingAccount.FinanceDimension6			= LocalFinanceDimension6
									invoked.PostingAccount.FinanceDimension7			= LocalFinanceDimension7
									invoked.PostingAccount.FinanceDimension8			= LocalFinanceDimension8
									invoked.PostingAccount.FinanceDimension9			= LocalFinanceDimension9
									invoked.PostingAccount.FinanceDimension10			= LocalFinanceDimension10
									invoked.PostingAccount.Project						= LocalProject
									invoked.LineNumber									= LocalLineNumber
									invoked.Sequence									= 1
								if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 					= Error
										invoked.ErrorMessage 			= ErrorMessage
										invoked.Status					= 2
										invoked.CloseDate				= system current timestamp
									LocalIterator = LocalLineCount + 1
									LocalAOCIterator = LocalLineChargeCount + 1
								else
									LocalAOCIterator = LocalAOCIterator + 1	
							LocalIterator = LocalIterator + 1
						else
							LocalIterator = LocalIterator + 1
						
		CreateLoadMatchInvoice is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmInvoiceType				is AlphaUpper 4
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceType			= PrmInvoiceType
				LocalInvoiceDateAlpha		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalInvoiceAmount			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalDocumentReferenceType  = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentReference/@type"
				LocalUserAreaCount  		= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"
				LocalVendor					= PurchaseOrderRel.Vendor
				LocalLineCount				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceLine)"
				LocalAddOnChargeLength		= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge)"
				LocalRemitToCode			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/Location/ID"
				LocalTaxLength				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax)"
							
				if(LocalDocumentReferenceType = "SupplierInvoice")
					LocalCreditMemoReferenceInvoice = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentReference/DocumentID/ID"
				else
					LocalCreditMemoReferenceInvoice = ""
				
				LocalIterator = 1	
				while (LocalTaxLength >= LocalIterator)					
					LocalBasisAmount = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax[<LocalIterator>]/BasisAmount"
					LocalTaxableAmount	= LocalTaxableAmount + LocalBasisAmount
					LocalIterator = LocalIterator + 1
				
				LocalIterator = 1	
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					if(LocalNameValue = "fsm.RunGroup")
						LocalRunGroup 		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
					else
					if(LocalNameValue = "PayImmediately")
						LocalPayImmediately 		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					LocalIterator = LocalIterator + 1
				
				if(LocalPayImmediately ="true" or LocalPayImmediately ="YES" or LocalPayImmediately ="Y")
					LocalPayImmediately = "Y"
				else 
				if(LocalPayImmediately ="false" or LocalPayImmediately ="NO" or LocalPayImmediately ="N")
					LocalPayImmediately = "N"
				
				if(LocalRunGroup not entered)
					LocalRunGroup = "EP"+DerivedLoadRunGroup
				if (LocalPurchaseOrder entered)
					LocalProcessType = "M"
				else
					LocalProcessType = "B"
				
				invoke Create MatchInvoiceImport
					assign result to NewMatchInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.RunGroup					= LocalRunGroup
					invoked.Company         			= LocalCompany
                	invoked.Vendor 						= LocalVendor
					invoked.Invoice						= LocalInvoice				
					invoked.ProcessLevel 				= LocalProcessLevel
					invoked.InvoiceCurrency 			= LocalInvoiceCurrency
					invoked.InvoiceDate					= LocalInvoiceDate
					invoked.InvoiceTransactionAmount	= LocalInvoiceAmount
					invoked.DueDate         			= LocalDueDate
					invoked.PurchaseOrder				= LocalPurchaseOrder
					invoked.ProcessType					= LocalProcessType
					invoked.InvoiceType					= LocalInvoiceType
					invoked.CreditMemoReferenceInvoice  = LocalCreditMemoReferenceInvoice
					invoked.PayImmediately				= LocalPayImmediately
					invoked.RemitToCode					= LocalRemitToCode
					invoked.TaxableAmount				= LocalTaxableAmount
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
					LocalMatchInvoiceImport	= NewMatchInvoiceImport.MatchInvoiceImport
					if(LocalLineCount > 0)
						invoke CreateLoadPayablesInvoiceDetail
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmRunGroup				= LocalRunGroup					
							invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport
							
					if(LocalAddOnChargeLength > 0 and (!FSMInboundBODTrackerRel.Error))
						invoke CreatePayablesInvoiceAddOnChargeImport
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmRunGroup				= LocalRunGroup
							invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport
					
					if(LocalTaxLength > 0 and (!FSMInboundBODTrackerRel.Error))
						invoke CreateMatchInvoiceDistributionImport
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmRunGroup				= LocalRunGroup
							invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport	
					
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
							
		CreateLoadPayablesInvoiceDetail is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmRunGroup					is Alpha 30
				PrmMatchInvoiceImport		is Alpha 200
			Local Fields
				LocalLines					is XMLDocument	
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalRunGroup				= PrmRunGroup
				LocalMatchInvoiceImport		= PrmMatchInvoiceImport
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalVendor					= PurchaseOrderRel.Vendor
				LocalLineCount				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceLine)"
				LocalIterator = 1
				while (LocalLineCount >= LocalIterator)
					LocalLines					= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceLine[<LocalIterator>]"
					LocalItem					= LocalLines select "/SupplierInvoiceLine/Item/ItemID"
					LocalEnteredQuantity        = LocalLines select "/SupplierInvoiceLine/Quantity" 
					LocalEnteredUOM       		= LocalLines select "/SupplierInvoiceLine/Quantity/@unitCode" 
					LocalUnitCost       		= LocalLines select "/SupplierInvoiceLine/UnitPrice/Amount" 
					LocalLineNumber				= LocalLines select "/SupplierInvoiceLine/LineNumber"
					LocalUserAreaCount			= LocalLines select "count (/SupplierInvoiceLine/UserArea/Property)"
					LocalLineChargeCount		= LocalLines select "count (/SupplierInvoiceLine/InvoiceCharge)"
					initialize LocalEAMCommodityCode
					initialize LocalEAMManufacturing
					initialize LocalEAMProjectID
					initialize LocalEAMProjectTaxCode
					initialize LocalEAMProjectType
					initialize LocalEAMTrade
					initialize LocalEAMWorkOrder
					initialize LocalEAMWorkOrderActivity
					initialize LocalEAMLineType
					initialize LocalEAMTool
					LocalLoop = 1
					
					while (LocalUserAreaCount >= LocalLoop)					
						LocalNameValue = LocalLines select "/SupplierInvoiceLine/UserArea/Property[<LocalLoop>]/NameValue/@name"
						LocalValue	   = LocalLines select "/SupplierInvoiceLine/UserArea/Property[<LocalLoop>]/NameValue"
						
						if(LocalNameValue = "eam.EAMCommodityCode")
							LocalEAMCommodityCode 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMManufacturing")
							LocalEAMManufacturing 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMProjectID")
							LocalEAMProjectID 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMProjectTaxCode")
							LocalEAMProjectTaxCode 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMProjectType")
							LocalEAMProjectType 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMTrade")
							LocalEAMTrade 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMWorkOrder")
							LocalEAMWorkOrder 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMWorkOrderActivity")
							LocalEAMWorkOrderActivity 		= LocalValue
						else
						if(LocalNameValue = "eam.EAMLineType")
							LocalEAMLineType 		= LocalValue
						else
						if(LocalNameValue = "eam.ToolID")
							LocalEAMTool 		= LocalValue										
						LocalLoop = LocalLoop + 1
					
					invoke Create PayablesInvoiceDetailImport
						resume on error
	               			Error            				= true
	                    	ErrorMessage     				= error message
						invoked.RunGroup					= LocalRunGroup
						invoked.Company         			= LocalCompany
	                	invoked.Vendor 						= LocalVendor
						invoked.Invoice						= LocalInvoice				
						invoked.Item 						= LocalItem
						invoked.EnteredQuantity 			= LocalEnteredQuantity
						invoked.EnteredUOM					= LocalEnteredUOM
						invoked.UnitCost					= LocalUnitCost
						invoked.VendorItem         			= LocalItem
						invoked.EAMCommodityCode			= LocalEAMCommodityCode
						invoked.EAMManufacturing			= LocalEAMManufacturing
						invoked.EAMProjectID				= LocalEAMProjectID
						invoked.EAMProjectTaxCode			= LocalEAMProjectTaxCode
						invoked.EAMProjectType				= LocalEAMProjectType
						invoked.EAMTrade					= LocalEAMTrade
						invoked.EAMWorkOrder				= LocalEAMWorkOrder
						invoked.EAMWorkOrderActivity		= LocalEAMWorkOrderActivity
						invoked.EAMLineType					= LocalEAMLineType
						invoked.EAMTool						= LocalEAMTool
						invoked.LineNumber					= LocalLineNumber
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalLineCount + 1
					else
						if(LocalLineChargeCount > 0)
							LocalAOCIterator = 1
							while (LocalLineChargeCount >= LocalAOCIterator)
								LocalAddOnCharge			= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/ID"
								LocalAmount        			= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Amount"
								LocalAccountingEntity		= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/LedgerID/@accountingEntity" 
								LocalAccount 				= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/GLAccount/GLNominalAccount" 
								LocalProject 				= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/ProjectReference/ID"
								LocalDistCodeCount 			= LocalLines select "count (/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Distribution/Classification/Codes/Code)"
								initialize LocalAccountingUnit
								initialize LocalFinanceDimension1	
								initialize LocalFinanceDimension2
								initialize LocalFinanceDimension3		
								initialize LocalFinanceDimension4
								initialize LocalFinanceDimension5	
								initialize LocalFinanceDimension6
								initialize LocalFinanceDimension7		
								initialize LocalFinanceDimension8
								initialize LocalFinanceDimension9	
								initialize LocalFinanceDimension10
								
								LocalLoop = 1
								while (LocalDistCodeCount >= LocalLoop) 			
									LocalCodeListID	= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
									LocalCodeValue	= LocalLines select "/SupplierInvoiceLine/InvoiceCharge[<LocalAOCIterator>]/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]"
									
									if(LocalCodeListID = "AccountingUnit")
										LocalAccountingUnit	= LocalCodeValue	
									else
									if(LocalCodeListID = "FinanceDimension1")
										LocalFinanceDimension1	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension2")
										LocalFinanceDimension2	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension3")
										LocalFinanceDimension3	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension4")
										LocalFinanceDimension4	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension5")
										LocalFinanceDimension5	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension6")
										LocalFinanceDimension6	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension7")
										LocalFinanceDimension7	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension8")
										LocalFinanceDimension8	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension9")
										LocalFinanceDimension9	= LocalCodeValue
									else
									if(LocalCodeListID = "FinanceDimension10")
										LocalFinanceDimension10	= LocalCodeValue
									LocalLoop = LocalLoop + 1	
								
								invoke Create PayablesInvoiceAddOnChargeImport
									resume on error
				               			Error            								= true
				                    	ErrorMessage     								= error message
									invoked.RunGroup									= LocalRunGroup
									invoked.Company         							= LocalCompany
				                	invoked.Vendor 										= LocalVendor
									invoked.Invoice										= LocalInvoice				
									invoked.AddOnCharge 								= LocalAddOnCharge
									invoked.EnteredAddOnChargeAmount 					= LocalAmount
									invoked.PostingAccount.AccountingUnit				= LocalAccountingUnit
									invoked.PostingAccount.ToAccountingEntity			= LocalAccountingEntity
									invoked.PostingAccount.GeneralLedgerChartAccount	= LocalAccount
									invoked.PostingAccount.FinanceDimension1			= LocalFinanceDimension1
									invoked.PostingAccount.FinanceDimension2         	= LocalFinanceDimension2
									invoked.PostingAccount.FinanceDimension3			= LocalFinanceDimension3
									invoked.PostingAccount.FinanceDimension4			= LocalFinanceDimension4
									invoked.PostingAccount.FinanceDimension5			= LocalFinanceDimension5
									invoked.PostingAccount.FinanceDimension6			= LocalFinanceDimension6
									invoked.PostingAccount.FinanceDimension7			= LocalFinanceDimension7
									invoked.PostingAccount.FinanceDimension8			= LocalFinanceDimension8
									invoked.PostingAccount.FinanceDimension9			= LocalFinanceDimension9
									invoked.PostingAccount.FinanceDimension10			= LocalFinanceDimension10
									invoked.PostingAccount.Project						= LocalProject
									invoked.LineNumber									= LocalLineNumber
									invoked.Sequence									= 1
								if(Error)
									invoke DeleteMatchInvoiceImport
										invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
										invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 					= Error
										invoked.ErrorMessage 			= ErrorMessage
										invoked.Status					= 2
										invoked.CloseDate				= system current timestamp
									LocalIterator = LocalLineCount + 1
									LocalAOCIterator = LocalLineChargeCount + 1
								else
									LocalAOCIterator = LocalAOCIterator + 1	
							LocalIterator = LocalIterator + 1
						else
							LocalIterator = LocalIterator + 1
															
		CreatePayablesInvoiceAddOnChargeImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmRunGroup					is Alpha 30
				PrmMatchInvoiceImport		is Alpha 200
			Local Fields
				LocalCharge					is XMLDocument	
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalRunGroup				= PrmRunGroup
				LocalMatchInvoiceImport  	= PrmMatchInvoiceImport
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalVendor					= PurchaseOrderRel.Vendor
				LocalAddOnChargeLength		= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge)"
				
				LocalIterator = 1
				while (LocalAddOnChargeLength >= LocalIterator)
					LocalCharge					= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Charge[<LocalIterator>]"
					LocalAddOnCharge			= LocalCharge select "/Charge/ID"
					LocalAmount        			= LocalCharge select "/Charge/Amount" 
					LocalAccountingEntity		= LocalCharge select "/Charge/Distribution/LedgerID/@accountingEntity" 
					LocalAccount 				= LocalCharge select "/Charge/Distribution/GLAccount/GLNominalAccount" 
					LocalProject 				= LocalCharge select "/Charge/ProjectReference/ID"
					LocalDistCodeCount 			= LocalCharge select "count (/Charge/Distribution/Classification/Codes/Code)"
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1		
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3	
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5	
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7	
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9	
					initialize LocalFinanceDimension10
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalCharge select "/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalCharge select "/Charge/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1	
					
					invoke Create PayablesInvoiceAddOnChargeImport
						resume on error
	               			Error            								= true
	                    	ErrorMessage     								= error message
						invoked.RunGroup									= LocalRunGroup
						invoked.Company         							= LocalCompany
	                	invoked.Vendor 										= LocalVendor
						invoked.Invoice										= LocalInvoice				
						invoked.AddOnCharge 								= LocalAddOnCharge
						invoked.EnteredAddOnChargeAmount 					= LocalAmount
						invoked.PostingAccount.AccountingUnit				= LocalAccountingUnit
						invoked.PostingAccount.ToAccountingEntity			= LocalAccountingEntity
						invoked.PostingAccount.GeneralLedgerChartAccount	= LocalAccount
						invoked.PostingAccount.FinanceDimension1			= LocalFinanceDimension1
						invoked.PostingAccount.FinanceDimension2         	= LocalFinanceDimension2
						invoked.PostingAccount.FinanceDimension3			= LocalFinanceDimension3
						invoked.PostingAccount.FinanceDimension4			= LocalFinanceDimension4
						invoked.PostingAccount.FinanceDimension5			= LocalFinanceDimension5
						invoked.PostingAccount.FinanceDimension6			= LocalFinanceDimension6
						invoked.PostingAccount.FinanceDimension7			= LocalFinanceDimension7
						invoked.PostingAccount.FinanceDimension8			= LocalFinanceDimension8
						invoked.PostingAccount.FinanceDimension9			= LocalFinanceDimension9
						invoked.PostingAccount.FinanceDimension10			= LocalFinanceDimension10
						invoked.PostingAccount.Project						= LocalProject
					if(Error)
						invoke DeleteMatchInvoiceImport
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalAddOnChargeLength + 1
					else
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
		
		CreateMatchInvoiceDistributionImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmRunGroup					is Alpha 30
				PrmMatchInvoiceImport		is Alpha 200
			Local Fields
				LocalTax					is XMLDocument	
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalRunGroup				= PrmRunGroup
				LocalMatchInvoiceImport  	= PrmMatchInvoiceImport
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalVendor					= PurchaseOrderRel.Vendor
				LocalTaxLength				= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax)"
				
				LocalIterator = 1
				while (LocalTaxLength >= LocalIterator)
					LocalTax					= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Tax[<LocalIterator>]"
					LocalTaxCode				= LocalTax select "/Tax/ID"
					LocalAmount        			= LocalTax select "/Tax/Distribution/Amount" 
					LocalAccountingEntity		= LocalTax select "/Tax/Distribution/LedgerID/@accountingEntity" 
					LocalAccount 				= LocalTax select "/Tax/Distribution/GLAccount/GLNominalAccount" 
					LocalProject 				= LocalTax select "/Tax/ProjectReference/ID"
					LocalTaxableAmount			= LocalTax select "/Tax/BasisAmount"
					LocalDistCodeCount 			= LocalTax select "count (/Tax/Distribution/Classification/Codes/Code)"
					LocalTaxUserAreaCount		= LocalTax select "count (/Tax/Distribution/UserArea/Property/NameValue)"
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1	
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5	
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7	
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9	
					initialize LocalFinanceDimension10
					initialize LocalTaxIndicator
					
					LocalLoop = 1
					while (LocalTaxUserAreaCount >= LocalLoop)					
						LocalTaxNameValue 	= LocalTax select "/Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue/@name"
						if(LocalTaxNameValue = "TaxIndicator")
							LocalTaxIndicator 		= LocalTax select "/Tax/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						LocalLoop = LocalLoop + 1
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalTax select "/Tax/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalTax select "/Tax/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1	
					
					invoke Create MatchInvoiceDistributionImport
						resume on error
	               			Error            									= true
	                    	ErrorMessage     									= error message
						invoked.RunGroup										= LocalRunGroup
						invoked.Company         								= LocalCompany
	                	invoked.Vendor 											= LocalVendor
						invoked.Invoice											= LocalInvoice				
						invoked.TaxCode 										= LocalTaxCode
						invoked.OriginalTransactionAmount 						= LocalAmount
						invoked.TaxIndicator									= LocalTaxIndicator
						invoked.TaxableAmount									= LocalTaxableAmount	
						invoked.DistributionAccount.AccountingUnit				= LocalAccountingUnit
						invoked.DistributionAccount.ToAccountingEntity			= LocalAccountingEntity
						invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalAccount
						invoked.DistributionAccount.FinanceDimension1			= LocalFinanceDimension1
						invoked.DistributionAccount.FinanceDimension2         	= LocalFinanceDimension2
						invoked.DistributionAccount.FinanceDimension3			= LocalFinanceDimension3
						invoked.DistributionAccount.FinanceDimension4			= LocalFinanceDimension4
						invoked.DistributionAccount.FinanceDimension5			= LocalFinanceDimension5
						invoked.DistributionAccount.FinanceDimension6			= LocalFinanceDimension6
						invoked.DistributionAccount.FinanceDimension7			= LocalFinanceDimension7
						invoked.DistributionAccount.FinanceDimension8			= LocalFinanceDimension8
						invoked.DistributionAccount.FinanceDimension9			= LocalFinanceDimension9
						invoked.DistributionAccount.FinanceDimension10			= LocalFinanceDimension10
						invoked.DistributionAccount.Project						= LocalProject
					if(Error)
						invoke DeleteMatchInvoiceImport
							invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
							invoked.PrmMatchInvoiceImport	= LocalMatchInvoiceImport
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalTaxLength + 1
					else
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
		
		DeleteMatchInvoiceImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmMatchInvoiceImport		is Alpha 200
			Action Rules
				LocalMatchInvoiceImport  	= PrmMatchInvoiceImport
				invoke Delete MatchInvoiceImportRel
		
		CreateLoadPayablesInvoiceImport is an Import Action
			restricted			
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmVendor					is Numeric 9
				PrmCompany					is Numeric 9
				PrmInvoiceType				is AlphaUpper 4
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker		
				LocalPurchaseOrder 			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PurchaseOrderReference/DocumentID/ID"
				LocalCompany				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalVendor					= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceType			= PrmInvoiceType
				LocalInvoiceDateAlpha		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalPayVendor				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/PartyIDs/ID"
				LocalInvoiceAmount			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalReference				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/StructuredCreditorReference"
				LocalUserAreaCount  		= LoadSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"
				
				if(DeriverdIntegrationApplication = "Local.ly")
					LocalCompany = PrmCompany
					LocalVendor	 = PrmVendor
				
				LocalIterator = 1
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					
					if(LocalNameValue = "TaxAmount")
						LocalTaxAmount 		= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
					
					LocalIterator = LocalIterator + 1
				
				invoke CreateBypassFieldRules PayablesInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.RunGroup					= LocalInvoice
					invoked.Company         			= LocalCompany
                	invoked.Vendor 						= LocalVendor
					invoked.Invoice						= LocalInvoice				
					invoked.ProcessLevel 				= LocalProcessLevel
					invoked.InvoiceCurrency 			= LocalInvoiceCurrency
					invoked.InvoiceDate					= LocalInvoiceDate
					invoked.InvoiceAmount				= LocalInvoiceAmount
					invoked.DueDate         			= LocalDueDate
                	invoked.PayVendor 					= LocalVendor
					invoked.InvoiceType					= LocalInvoiceType				
					invoked.Reference					= LocalReference
					invoked.Status						= 1
					invoked.PostingStatus         		= 1
                	invoked.TaxableAmount 				= ""
					invoked.TaxAmount					= LocalTaxAmount				
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
					invoke LoadInterfaceInvoices
						invoked.LoadSupplierInvoiceBOD  = LoadSupplierInvoiceBOD
						invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
						invoked.PrmVendor				= LocalVendor
						invoked.PrmCompany				= LocalCompany
		
		LoadInterfaceInvoices is an Import Action
			restricted
			Parameters
				LoadSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmVendor					is Numeric 9
				PrmCompany					is Numeric 9
			Action Rules
				LocalCompany				= PrmCompany
				LocalVendor					= PrmVendor
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalInvoice				= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalComponentID			= LoadSupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalInvoiceAmount			= LoadSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				invoke InterfaceInvoices PayablesInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.PrmFinanceEnterpriseGroup 	= DerivedFinanceEnterpriseGroup
					invoked.PrmCompany					= LocalCompany
					invoked.PrmRunGroup         		= LocalInvoice	
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp					

									

		SyncSupplierInvoiceBODImport is an Import Action
			restricted
			bod type is Sync.SupplierInvoice			
			Parameters
				SyncSupplierInvoiceBOD 	is XMLDocument
			Action Rules
				LocalAccountingEntity	= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalsplitVendor		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalVariationID		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@variationID"
				LocalBODID				= SyncSupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalStatus				= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Status/Code"
				LocalAccountingEntityID	= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalBODXML				= SyncSupplierInvoiceBOD
				LocalGenericDelimiter	= DerivedGenericDelimiter
				
				if(LocalStatus = "Approved")
					LocalRunGroup			= "XM"+LocalInvoice
				else
					LocalRunGroup			= ""
				
				if(DerivedConfigDocID = "Y")
					if(SyncSupplierInvoiceCleanDocIDRel.DestinationValue entered)
						LocalAccountingEntity	= SyncSupplierInvoiceCleanDocIDRel.DestinationValue
					else
						LocalAccountingEntity	= LocalAccountingEntity
						
					if(DerivedConfigFEG != "Y")
						LocalCompany 				= LocalAccountingEntity
						LocalFinanceEnterpriseGroup = SyncSIGeneralLedgerCompanyRel.FinanceEnterpriseGroup
					else
					if(DerivedConfigFEG = "Y")	
						if(LocalAccountingEntity entered)
							LocalAccountingEntity = NativeAccountingEntity
						else
							LocalAccountingEntity = ""	
					LocalVendor 			= LocalsplitVendor
				else
					if(LocalAccountingEntity entered)
						LocalAccountingEntity = NativeAccountingEntity
					else
						LocalAccountingEntity = ""		
				
					if(DerivedSyncConfiguration = "Y")
						LocalVendor 			= LocalsplitVendor
					else
						LocalVendor 			= NativeVendor
					
				if(SyncFSMBODConfigurationRel exists and SyncFSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "SupplierInvoice"	
							invoked.Direction				= 2				
							invoked.Company					= LocalCompany
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.RunGroup				= LocalRunGroup
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalAccountingEntityID
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.BODXML					= LocalBODXML
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker					
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Company					= LocalCompany
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.RunGroup				= LocalRunGroup
							invoked.Vendor					= LocalVendor
							invoked.Invoice					= LocalInvoice
							invoked.BODAccountingEntity		= LocalAccountingEntityID
							invoked.BODDocumentID			= LocalInvoice
							invoked.BODVariationID			= LocalVariationID
							invoked.BODLocation				= LocalProcessLevel
							invoked.BODID					= LocalBODID
							invoked.BODXML					= LocalBODXML
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							initialize invoked.Error			
							initialize invoked.ErrorMessage	
															
					if(LocalStatus = "Approved")
						invoke SyncCreatePayablesInvoiceImport
							invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmVendor				= LocalVendor
							invoked.PrmCompany				= LocalCompany
					
						if(!FSMInboundBODTrackerRel.Error)
							invoke InterfaceInvoice
								invoked.SyncSupplierInvoiceBOD    = SyncSupplierInvoiceBOD
								invoked.PrmInboundTracker 		  = LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup = LocalFinanceEnterpriseGroup
								invoked.PrmCompany				  = LocalCompany
						
						if(!FSMInboundBODTrackerRel.Error)	
							invoke Update FSMInboundBODTrackerRel
								invoked.Status					= 3
								invoked.CloseDate				= system current timestamp
					else
					if(DerivedSyncConfiguration = "Y")
						invoke SyncCreatePayablesInvoice
							invoked.SyncSupplierInvoiceBOD    = SyncSupplierInvoiceBOD
							invoked.PrmInboundTracker 		  = LocalFSMInboundBODTracker
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status					= 3
							invoked.CloseDate				= system current timestamp
				else	
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "SupplierInvoice"	
						invoked.Direction				= 2				
						invoked.Company					= LocalCompany
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.RunGroup				= LocalRunGroup
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalAccountingEntityID
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODID					= LocalBODID
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync Supplier Invoice Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Company					= LocalCompany
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.RunGroup				= LocalRunGroup
						invoked.Vendor					= LocalVendor
						invoked.Invoice					= LocalInvoice
						invoked.BODAccountingEntity		= LocalAccountingEntityID
						invoked.BODDocumentID			= LocalInvoice
						invoked.BODVariationID			= LocalVariationID
						invoked.BODLocation				= LocalProcessLevel
						invoked.BODID					= LocalBODID
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync Supplier Invoice Inbound BOD Service is not Enabled"
						
		SyncCreatePayablesInvoiceImport is an Import Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmCompany 					is Numeric 4
				PrmVendor					is Numeric 9
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker
				LocalVendor					= PrmVendor
				LocalCompany 				= PrmCompany	
				LocalInvoice				= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceTypeAlpha		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
				LocalInvoiceDateAlpha		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceAmount			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalInvoiceCurrency		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalUserAreaCount  		= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"
				LocalDistCount   			= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalRunGroup				= "XM"+LocalInvoice
				
				if(LocalInvoiceTypeAlpha  = "Invoice")
					LocalInvoiceType = ""
				else 
				if(LocalInvoiceTypeAlpha  = "CreditMemo")
					LocalInvoiceType = "C"
				else
				if(LocalInvoiceTypeAlpha  = "DebitMemo")
					LocalInvoiceType = "D"
				else
					LocalInvoiceType = ""
					
				LocalIterator = 1
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					if (LocalNameValue = "TaxAmount")
						LocalTaxAmount 		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
					
					LocalIterator = LocalIterator + 1	
				
				invoke CreateBypassFieldRules PayablesInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.RunGroup					= LocalRunGroup
					invoked.Company         			= LocalCompany
                	invoked.Vendor 						= LocalVendor
					invoked.Invoice						= LocalInvoice				

					invoked.InvoiceCurrency 			= LocalInvoiceCurrency
					invoked.InvoiceDate					= LocalInvoiceDate
					invoked.InvoiceAmount				= LocalInvoiceAmount
					invoked.DueDate         			= LocalDueDate
                	invoked.PayVendor 					= LocalVendor
					invoked.InvoiceType					= LocalInvoiceType				
					invoked.TaxableAmount 				= LocalTaxableAmount
					invoked.TaxAmount					= LocalTaxAmount
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
				else
				if(LocalDistCount > 0)
					invoke CreateSyncPayablesInvoiceDistributionImport
						invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
		                invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
		                invoked.PrmRunGroup				= LocalRunGroup
		                invoked.PrmCompany 				= LocalCompany
		                invoked.PrmVendor				= LocalVendor	
		                
		CreateSyncPayablesInvoiceDistributionImport is an Import Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 			is XMLDocument
				PrmInboundTracker   			is like FSMInboundBODTracker
				PrmRunGroup						is AlphaUpper 30
				PrmCompany 						is Numeric 9
				PrmVendor						is Numeric 9
			Local Fields
				LocalDistLine					is XMLDocument 
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalRunGroup					= PrmRunGroup
				LocalCompany					= PrmCompany
				LocalVendor						= PrmVendor
				LocalInvoice					= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalDistCount   				= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalIterator = 1
				while (LocalDistCount >= LocalIterator)
					LocalDistLine				= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution[<LocalIterator>]"
					
					LocalAccountingEntity		= LocalDistLine select "/Distribution/LedgerID/@accountingEntity"
					LocalAccount				= LocalDistLine select "/Distribution/GLAccount/GLNominalAccount"
					LocalTransactionAmount		= LocalDistLine select "/Distribution/Amount"
					LocalProject				= LocalDistLine select "/Distribution/ProjectReference/ID"
					LocalDescription			= LocalDistLine select "/Distribution/Classification/Description"
					LocalDistCodeCount 			= LocalDistLine select "count (/Distribution/Classification/Codes/Code)"
					LocalDistUserAreaCount		= LocalDistLine select "count (/Distribution/UserArea/Property/NameValue)"
					initialize LocalICNCode
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1	
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3	
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5	
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7	
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9		
					initialize LocalFinanceDimension10
					
					LocalLoop = 1			
					while (LocalDistUserAreaCount >= LocalLoop)					
						LocalDistNameValue 	= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue/@name"
						if(LocalDistNameValue = "ICNCode")
							LocalICNCode 		= LocalDistLine select "/Distribution/UserArea/Property[<LocalLoop>]/NameValue"														
						LocalLoop = LocalLoop + 1
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1				
					
					invoke CreateBypassFieldRules PayablesInvoiceDistributionImport
						resume on error
	               			Error            									= true
	                    	ErrorMessage     									= error message
						invoked.RunGroup										= LocalRunGroup
						invoked.Company         								= LocalCompany
	                	invoked.Vendor 											= LocalVendor
						invoked.Invoice											= LocalInvoice				
						invoked.DistributionAmount 								= LocalTransactionAmount
						invoked.DistributionAccount.ToAccountingEntity 			= LocalAccountingEntity
						invoked.DistributionAccount.AccountingUnit				= LocalAccountingUnit
						invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalAccount
						invoked.DistributionAccount.FinanceDimension1         	= LocalFinanceDimension1
	                	invoked.DistributionAccount.FinanceDimension2 			= LocalFinanceDimension2
						invoked.DistributionAccount.FinanceDimension3			= LocalFinanceDimension3				
						invoked.DistributionAccount.FinanceDimension4			= LocalFinanceDimension4
						invoked.DistributionAccount.FinanceDimension5         	= LocalFinanceDimension5
	                	invoked.DistributionAccount.FinanceDimension6 			= LocalFinanceDimension6
						invoked.DistributionAccount.FinanceDimension7			= LocalFinanceDimension7				
						invoked.DistributionAccount.FinanceDimension8 			= LocalFinanceDimension8
						invoked.DistributionAccount.FinanceDimension9 			= LocalFinanceDimension9
						invoked.DistributionAccount.FinanceDimension10			= LocalFinanceDimension10
						invoked.DistributionAccount.Project						= LocalProject
						invoked.Sequence         								= LocalIterator
	                	invoked.ICNCode 										= LocalICNCode
						invoked.Description										= LocalDescription
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						LocalIterator = LocalDistCount + 1
					else
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction	
		
		InterfaceInvoice is an Import Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup 	is AlphaUpper 4
				PrmCompany					is Numeric 4
			Action Rules
				LocalFSMInboundBODTracker	= PrmInboundTracker
				LocalFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				LocalCompany 				= PrmCompany	
				LocalInvoice				= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalRunGroup				= "XM"+LocalInvoice
										
				invoke InterfaceInvoices PayablesInvoiceImport
					resume on error
               			Error            				= true
                    	ErrorMessage     				= error message
					invoked.PrmRunGroup					= LocalRunGroup
					invoked.PrmCompany         			= LocalCompany
                	invoked.PrmFinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup	
                if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp	
		
		SyncCreatePayablesInvoice is an Import Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalSplitCompany			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalGenericDelimiter		= DerivedGenericDelimiter
				LocalCompany 				= NativeCompany
				LocalVendor					= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice				= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalInvoiceTypeAlpha		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/@type"
				LocalInvoiceDateAlpha		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentDateTime"
				LocalInvoiceDate 			= LocalInvoiceDateAlpha[1:4] + LocalInvoiceDateAlpha[6:7] + LocalInvoiceDateAlpha[9:10]				
				LocalDueDateAlpha			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/PaymentTerm/Term/DueDateTime" 
				LocalDueDate				= LocalDueDateAlpha[1:4] + LocalDueDateAlpha[6:7] + LocalDueDateAlpha[9:10]
				LocalInvoiceCurrency		= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount/@currencyID"
				LocalDescription			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Description"
				LocalRemitToCode			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/RemitToParty/Location/@type"
				LocalInvoiceAmount			= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/TotalAmount"
				LocalUserAreaCount 			= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property)"	
				LocalDistCount   			= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				
				if(LocalInvoiceTypeAlpha = "Invoice")
					LocalInvoiceType = ""
				else
				if(LocalInvoiceTypeAlpha = "CreditMemo")
					LocalInvoiceType = "C"
				else
				if(LocalInvoiceTypeAlpha = "DebitMemo")
					LocalInvoiceType = "D"
				
				if(LocalRemitToCode = "001")
					LocalRemitToCode = ""
				
				LocalIterator = 1
				while (LocalUserAreaCount >= LocalIterator)					
					LocalNameValue = SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					if (LocalNameValue = "m3_AccountingDate")
						LocalDistributionDateAlpha	= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"														
						LocalDistributionDate		= LocalDistributionDateAlpha[1:4] + LocalDistributionDateAlpha[6:7] + LocalDistributionDateAlpha[9:10]
					else 
					if (LocalNameValue = "TaxAmount")
						LocalTaxAmount = SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/UserArea/Property[<LocalIterator>]/NameValue"
					LocalIterator = LocalIterator + 1		
				
				invoke CreateInvoice PayablesInvoice
					assign result to NewPayablesInvoice
					resume on error
                   		Error            					= true
                        ErrorMessage     					= error message
					invoked.Company         				= LocalCompany
	                invoked.Vendor 							= LocalVendor
					invoked.Invoice							= LocalInvoice
					invoked.ProcessLevel    				= LocalProcessLevel
					invoked.InvoiceType						= LocalInvoiceType
					invoked.InvoiceDate						= LocalInvoiceDate
					invoked.DueDate							= LocalDueDate
					invoked.InvoiceCurrency 				= LocalInvoiceCurrency
					invoked.Description						= LocalDescription
					invoked.RemitToCode						= LocalRemitToCode
					invoked.DistributionDate				= LocalDistributionDate					
					invoked.InvoiceAmount.CurrencyAmount	= LocalInvoiceAmount
					invoked.TaxAmount						= LocalTaxAmount
					invoked.AuthorityCode 					= DerivedAuthorityCode
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendSSIConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.SyncSupplierInvoiceBOD      = SyncSupplierInvoiceBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						invoked.PrmCompany 					= LocalCompany
				else
					LikePayInvoice 							= NewPayablesInvoice.PayablesInvoice	
					if(LocalDistCount > 0)				
						invoke SyncCreatePayablesInvoiceDistribution	                
	                		invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
	                		invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
	                		invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
	                		invoked.PrmCompany				= LocalCompany
					
					if(!FSMInboundBODTrackerRel.Error)
						invoke SyncReleasePayablesInvoice
							invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
							invoked.PrmLikePayInvoice 		= NewPayablesInvoice.PayablesInvoice
							invoked.PrmInboundTracker 		= LocalFSMInboundBODTracker
							invoked.PrmCompany 				= LocalCompany
							
		SyncCreatePayablesInvoiceDistribution is an Import Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 			is XMLDocument
				PrmLikePayInvoice   			is like PayablesInvoice
				PrmInboundTracker   			is like FSMInboundBODTracker
				PrmCompany 						is Numeric 9
			Local Fields
                LocalDistLine                   is XMLDocument
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalCompany					= PrmCompany
				LocalVendor						= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/SupplierParty/PartyIDs/ID"
				LocalInvoice					= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalDistCount   				= SyncSupplierInvoiceBOD select "count (//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution)"
				LocalIterator = 1
				while (LocalDistCount >= LocalIterator)
					LocalDistLine               = SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/Distribution[<LocalIterator>]"
					LocalAccountingEntity		= LocalDistLine select "/Distribution/LedgerID/@accountingEntity"
					LocalAccount				= LocalDistLine select "/Distribution/GLAccount/GLNominalAccount"
					LocalTransactionAmount		= LocalDistLine select "/Distribution/Amount"
					LocalProject				= LocalDistLine select "/Distribution/ProjectReference/ID"
					LocalDistCodeCount 			= LocalDistLine select "count (/Distribution/Classification/Codes/Code)"
					initialize LocalAccountingUnit
					initialize LocalFinanceDimension1		
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3	
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5	
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7		
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9		
					initialize LocalFinanceDimension10
					
					LocalLoop = 1
					while (LocalDistCodeCount >= LocalLoop) 			
						LocalCodeListID	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]/@listID"
						LocalCodeValue	= LocalDistLine select "/Distribution/Classification/Codes/Code[<LocalLoop>]"
						
						if(LocalCodeListID = "AccountingUnit")
							LocalAccountingUnit	= LocalCodeValue	
						else
						if(LocalCodeListID = "FinanceDimension1")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension2")
							LocalFinanceDimension2	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension3")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension4")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension5")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension6")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension7")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension8")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension9")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeListID = "FinanceDimension10")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1
					
					invoke Create PayablesInvoiceDistribution
						resume on error
                   			Error            								= true
                        	ErrorMessage     								= error message
						invoked.PayablesInvoice								= PrmLikePayInvoice
						invoked.Company         							= LocalCompany
	                	invoked.Vendor 										= LocalVendor
						invoked.Invoice										= LocalInvoice				
						invoked.GLTransactionAmount 						= LocalTransactionAmount
						invoked.GLFinanceCodeBlock.ToAccountingEntity 		= LocalAccountingEntity
						invoked.GLFinanceCodeBlock.GeneralLedgerChartAccount= LocalAccount
						invoked.GLFinanceCodeBlock.AccountingUnit			= LocalAccountingUnit 
						invoked.GLFinanceCodeBlock.FinanceDimension1		= LocalFinanceDimension1
						invoked.GLFinanceCodeBlock.FinanceDimension2		= LocalFinanceDimension2
						invoked.GLFinanceCodeBlock.FinanceDimension3		= LocalFinanceDimension3
						invoked.GLFinanceCodeBlock.FinanceDimension4		= LocalFinanceDimension4
						invoked.GLFinanceCodeBlock.FinanceDimension5		= LocalFinanceDimension5
						invoked.GLFinanceCodeBlock.FinanceDimension6		= LocalFinanceDimension6
						invoked.GLFinanceCodeBlock.FinanceDimension7		= LocalFinanceDimension7
						invoked.GLFinanceCodeBlock.FinanceDimension8		= LocalFinanceDimension8
						invoked.GLFinanceCodeBlock.FinanceDimension9		= LocalFinanceDimension9
						invoked.GLFinanceCodeBlock.FinanceDimension10		= LocalFinanceDimension10
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
						invoke SendSSIConfirmBOD
							invoked.PrmErrorMessage 		= ErrorMessage
							invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							invoked.PrmCompany 				= LocalCompany
						LocalIterator = LocalDistCount + 1
					else 
						LocalIterator = LocalIterator + 1
						if (LocalIterator%20 = 0)
							commit transaction
		
		SyncReleasePayablesInvoice is an Instance Action
			restricted
			Parameters
        		PrmLikePayInvoice   					is like PayablesInvoice
        		SyncSupplierInvoiceBOD 					is XMLDocument
        		PrmInboundTracker  						is like FSMInboundBODTracker
        		PrmCompany 								is Numeric 9
			Action Rules
				LocalFSMInboundBODTracker 				= PrmInboundTracker
				LocalCompany							= PrmCompany
				invoke Unreleased.Release NewPayablesInvoice.PayablesInvoice
					resume on error
                   		Error           				= true
                        ErrorMessage   	 				= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendSSIConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SyncSupplierInvoiceBOD  = SyncSupplierInvoiceBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoked.PrmCompany 				= LocalCompany
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
		
		SendSSIConfirmBOD is an Instance Action
			restricted			
			Parameters
				SyncSupplierInvoiceBOD 					is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmTrackerID							is Numeric 15
				PrmCompany								is Numeric 9
			Action Rules
				LocalSSupplierInvoiceXML				= SyncSupplierInvoiceBOD
				LocalErrorMessage						= PrmErrorMessage
				LocalTrackerID							= PrmTrackerID
				LocalCompany							= PrmCompany
				LocalInvoice							= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalProcessLevel						= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@location"
				LocalFromLogicalID						= SyncSupplierInvoiceBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID						= SyncSupplierInvoiceBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID								= SyncSupplierInvoiceBOD select "//ApplicationArea/BODID"
				LocalOriginalCreateDateTime				= SyncSupplierInvoiceBOD select "//ApplicationArea/CreationDateTime"
				LocalDocumentID							= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID"
				LocalAccountingEntity					= SyncSupplierInvoiceBOD select "//DataArea/SupplierInvoice/SupplierInvoiceHeader/DocumentID/ID/@accountingEntity"
				LocalConfirmBOD							= "true"
				LocalMainUserTemplate					= "IONSyncSupplierInvoice_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncSupplierInvoiceConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID

						

		SyncSupplierPartyMasterBODImport is an Import Action
			restricted
			bod type is Sync.SupplierPartyMaster			
			Parameters
				SupplierPartyMasterBOD 			is XMLDocument
			Action Rules
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalAccountingEntity 	        = SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
				LocalDocumentID					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID"
				LocalVariationID				= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@variationID"
				LocalBODID						= SupplierPartyMasterBOD select "//ApplicationArea/BODID"
				LocalStatusCode					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Status/Code"
				LocalBODXML						= SupplierPartyMasterBOD
				LocalCommunicationLength		= SupplierPartyMasterBOD select "count(//DataArea/SupplierPartyMaster/Contact/Communication)"
				LocalIterator					= 1
				LocalVendorName					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Name"
				LocalVendorAddressLine1			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/AddressLine[0]"
				LocalVendorAddressLine2			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/AddressLine[1]"
				LocalVendorAddressLine3			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/AddressLine[2]"
				LocalVendorAddressLine4			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/AddressLine[3]"
				LocalVendorStateProvince		= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/CountrySubDivisionCode"
				LocalVendorPostalCode			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/PostalCode"
				LocalVendorCountry				= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/CountryCode"
				LocalVendorAddressType			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/@type"
				LocalVendorMunicipality			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/CityName"
				LocalContactName				= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Location/Address/AttentionOfName"
				LocalBankTransactionCode		= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PaymentMethodCode"
				LocalBankEntity					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/FinancialParty/PartyIDs/ID"
				LocalReference					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID"
				LocalBankAccountNumber			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/FinancialParty/FinancialAccount/BBANID"
				LocalInvoiceCurrency			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/FinancialParty/FinancialAccount/CurrencyCode" 
				LocallyCompany					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
				ActionCode						= SupplierPartyMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalTaxIDLength				= SupplierPartyMasterBOD select "count(//DataArea/SupplierPartyMaster/PartyIDs/TaxID)"
				LocalVendor						= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID"
				LocalTermsCode 					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PaymentTermCode"
				LocalCodeLength					= SupplierPartyMasterBOD select "count(//DataArea/SupplierPartyMaster/Classification/Codes/Code)"
				LocallySupplierCompany			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
				LocalAccountingEntityID			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
				while(LocalTaxIDLength>=LocalIterator)
					LocalTaxIDValue		= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/TaxID[<LocalIterator>]"
					LocalNameValueID	= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/TaxID[<LocalIterator>]/@schemeName"
					if(DerivedIntegratingApplication = "M3" and LocalTaxIDValue entered and LocalNameValueID = "TaxIdentificationNumber")
						LocalTaxID 		= LocalTaxIDValue
					else 
					if(LocalTaxIDValue entered and DerivedIntegratingApplication != "M3")
						LocalTaxID 		= LocalTaxIDValue
					LocalIterator		= LocalIterator+1
				LocalIterator	= 1
				while(LocalCommunicationLength>=LocalIterator)
					LocalChannelCode	 			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/ChannelCode"
					LocalUseCode	     			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/UseCode"
					LocalCountryDialing	 			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/CountryDialing"
					LocalDialNumber  	 			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/DialNumber"
					LocalExtension  	 			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/Extension"
					LocalURI	         			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Contact/Communication[<LocalIterator>]/URI"			
					if (LocalChannelCode = "Phone" and LocalUseCode ="Office" ) 
						LocalVendorPhonePrefix		= LocalCountryDialing	
						LocalVendorPhoneNumber		= LocalDialNumber
						LocalVendorPhoneExtension 	= LocalExtension		
				    else
				    if(LocalChannelCode = "Phone" and LocalUseCode ="Mobile(Office)" )
						LocalVendorMobilePrefix		= LocalCountryDialing	
						LocalVendorMobileNumber		= LocalDialNumber
						LocalVendorMobileExtension	= LocalExtension							
				    else 
				    if (LocalChannelCode = "Phone" and LocalUseCode ="Fax" )
						LocalVendorFaxPrefix		= LocalCountryDialing	
						LocalVendorFaxNumber 		= LocalDialNumber
						LocalVendorFaxExtension		= LocalExtension						
				    else 
				    if (LocalChannelCode = "Email" and LocalUseCode ="Office")
						LocalVendorEmail= LocalURI
					LocalIterator= LocalIterator+1
				
				if(LocalStatusCode = "Open")
					LocalStatusCode= "A"
				else
				if(LocalStatusCode = "Pending")
					LocalStatusCode= "I"
				else
				if(LocalStatusCode = "Hold")
					LocalStatusCode= "D"
				else
				if(LocalStatusCode = "Deleted")
					LocalStatusCode= "R"
				else
					LocalStatusCode= ""	
				
				if(DerivedIntegratingApplication != "M3")
					LocalVendorClass = SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Classification/Codes/Code" 
				
				if(DerivedIntegratingApplication = "M3")
					if(DerivedIgnoreGenericDelimiterConcatenation = "N" or DerivedIgnoreGenericDelimiterConcatenation not entered)
						LocalSplitCompany 			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
						LocallySupplierCompany		= NativeCompany
					else
					if(DerivedIgnoreGenericDelimiterConcatenation = "Y")	
						LocallySupplierCompany 	    = SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
					LocallyCompany		  = LocallySupplierCompany
					if(DerivedConfigDocID = "Y")
						LocalAccountingEntity	= LocallySupplierCompany
						if(DESTAEVSCSFGLCCleanDocIDRel.DestinationValue entered)
							LocalCrossRefValue	= DESTAEVSCSFGLCCleanDocIDRel.DestinationValue
						else
							LocalCrossRefValue  = LocalAccountingEntity
						if(DerivedConfigFEG = "N")
							LocallySupplierCompany = LocalCrossRefValue
						else
						if(DerivedConfigFEG = "Y")	
							if(LocalCrossRefValue entered)
								LocallySupplierCompany = NativeERCompany
							else
								LocallySupplierCompany = ""
					LocallyCompany		  = LocallySupplierCompany	
				
				LocalIterator	= 1
				if(LocalVendorCountry not entered)
					while(LocalCodeLength>=LocalIterator)
						LocalNameValue 		= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Classification/Codes/Code[<LocalIterator>]/@listID"
						LocalValue			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/Classification/Codes/Code[<LocalIterator>]"
						if(LocalNameValue	= "Countries")
							LocalVendorCountry	= LocalValue
						LocalIterator	= LocalIterator+1

				if(FSMBODConfigRel exists and FSMBODConfigRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "SupplierPartyMaster"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntityID 
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker					
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntityID 
							initialize invoked.Error			
							initialize invoked.ErrorMessage	
					
					if(GeneralLedgerCompanyLocallyRel exists)	
						LocalBusinessGroup     = GeneralLedgerCompanyLocallyRel.BusinessGroup
						if(DerivedIntegratingApplication = "M3" and VendorGroupRel exists)
							LocalVendorClass  = VendorGroupRel.OneTimeVendorClass
								
						if(FindVendorRel not exists or FindVendorM3Rel not exists)
							invoke CreateVendorSupplierPartyMaster
								invoked.SupplierPartyMasterBOD 		= SupplierPartyMasterBOD 
								invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker	
								invoked.PrmVendorGroup				= LocalBusinessGroup								   
								invoked.PrmVendorStatus 			= LocalStatusCode                                 										
								invoked.PrmVendorMobileExtension   	= LocalVendorMobileExtension									
								invoked.PrmVendorMobilePrefix 		= LocalVendorMobilePrefix									
								invoked.PrmVendorMobileNumber 		= LocalVendorMobileNumber									
								invoked.PrmVendorPhoneExtension 	= LocalVendorPhoneExtension 											
								invoked.PrmVendorPhonePrefix		= LocalVendorPhonePrefix 									
								invoked.PrmVendorPhoneNumber		= LocalVendorPhoneNumber 									
								invoked.PrmVendorFaxExtension 		= LocalVendorFaxExtension 																	
								invoked.PrmVendorFaxPrefix 			= LocalVendorFaxPrefix 										
								invoked.PrmVendorFaxNumber			= LocalVendorFaxNumber 											
								invoked.PrmEmail					= LocalVendorEmail												
								invoked.PrmReference1				= LocalReference																			
								invoked.PrmVendorName				= LocalVendorName																
								invoked.PrmContactName				= LocalContactName													
								invoked.PrmVendorAddressLine1		= LocalVendorAddressLine1								
								invoked.PrmVendorAddressLine2		= LocalVendorAddressLine2
								invoked.PrmVendorAddressLine3		= LocalVendorAddressLine3
								invoked.PrmVendorAddressLine4		= LocalVendorAddressLine4
								invoked.PrmVendorStateProvince		= LocalVendorStateProvince									
								invoked.PrmVendorPostalCode			= LocalVendorPostalCode									
								invoked.PrmVendorAddressType		= LocalVendorAddressType												
								invoked.PrmBankTransactionCode		= LocalBankTransactionCode											
								invoked.PrmBankEntity				= LocalBankEntity														
								invoked.PrmVendorClass				= LocalVendorClass													
								invoked.PrmBankAccountNumber		= LocalBankAccountNumber												
								invoked.PrmInvoiceCurrency			= LocalInvoiceCurrency												
								invoked.PrmVendorMunicipality		= LocalVendorMunicipality										
								invoked.PrmVendorCountry			= LocalVendorCountry											
								invoked.PrmVendorSearchName			= LocalVendorName															
								invoked.PrmLegalName				= LocalVendorName
								invoked.PrmTaxID					= LocalTaxID
								invoked.PrmTermsCode				= LocalTermsCode
						else
							invoke FindVendorSupplierPartyMaster
								invoked.SupplierPartyMasterBOD 		= SupplierPartyMasterBOD 
								invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker	
								invoked.PrmVendorGroup				= LocalBusinessGroup								   
								invoked.PrmVendorStatus 			= LocalStatusCode                                 										
								invoked.PrmVendorMobileExtension   	= LocalVendorMobileExtension									
								invoked.PrmVendorMobilePrefix 		= LocalVendorMobilePrefix									
								invoked.PrmVendorMobileNumber 		= LocalVendorMobileNumber									
								invoked.PrmVendorPhoneExtension 	= LocalVendorPhoneExtension 											
								invoked.PrmVendorPhonePrefix		= LocalVendorPhonePrefix 									
								invoked.PrmVendorPhoneNumber		= LocalVendorPhoneNumber 									
								invoked.PrmVendorFaxExtension 		= LocalVendorFaxExtension 																	
								invoked.PrmVendorFaxPrefix 			= LocalVendorFaxPrefix 										
								invoked.PrmVendorFaxNumber			= LocalVendorFaxNumber 										
								invoked.PrmEmail					= LocalVendorEmail												
								invoked.PrmReference1				= LocalReference																			
								invoked.PrmVendorName				= LocalVendorName																
								invoked.PrmContactName				= LocalContactName													
								invoked.PrmVendorAddressLine1		= LocalVendorAddressLine1								
								invoked.PrmVendorAddressLine2		= LocalVendorAddressLine2
								invoked.PrmVendorAddressLine3		= LocalVendorAddressLine3
								invoked.PrmVendorAddressLine4		= LocalVendorAddressLine4
								invoked.PrmVendorStateProvince		= LocalVendorStateProvince									
								invoked.PrmVendorPostalCode			= LocalVendorPostalCode									
								invoked.PrmVendorAddressType		= LocalVendorAddressType												
								invoked.PrmBankTransactionCode		= LocalBankTransactionCode											
								invoked.PrmBankEntity				= LocalBankEntity														
								invoked.PrmVendorClass				= LocalVendorClass													
								invoked.PrmBankAccountNumber		= LocalBankAccountNumber												
								invoked.PrmInvoiceCurrency			= LocalInvoiceCurrency												
								invoked.PrmVendorMunicipality		= LocalVendorMunicipality										
								invoked.PrmVendorCountry			= LocalVendorCountry											
								invoked.PrmVendorSearchName			= LocalVendorName															
								invoked.PrmLegalName				= LocalVendorName
								invoked.PrmActionCode				= ActionCode
								invoked.PrmTaxID					= LocalTaxID
								invoked.PrmVendor					= LocalVendor
								invoked.PrmTermsCode				= LocalTermsCode
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= true
							invoked.ErrorMessage 				= "VendorGroup for company "+LocallyCompany+" does not exist"
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						invoke SupplierPartyMasterConfirmBOD
							invoked.PrmErrorMessage 			= "VendorGroup for company "+LocallyCompany+" does not exist"
							invoked.SupplierPartyMasterBOD      = SupplierPartyMasterBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker												
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "SupplierPartyMaster"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntityID 
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync Supplier Party Master Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntityID 
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync Supplier Party Master Inbound BOD Service is not Enabled"		
						
		CreateVendorSupplierPartyMaster 	is an Import Action
			restricted
			Parameters
				SupplierPartyMasterBOD 			is XMLDocument
				PrmInboundTracker   			is like FSMInboundBODTracker
				PrmVendorGroup					is Alpha 10
				PrmVendorStatus 				is Alpha 30
				PrmVendorMobileExtension   	    is Alpha 10		
				PrmVendorMobilePrefix 			is Alpha 6
				PrmVendorMobileNumber			is Alpha 15
				PrmVendorPhoneExtension 		is Alpha 10
				PrmVendorPhonePrefix			is Alpha 6
				PrmVendorPhoneNumber			is Alpha 15
				PrmVendorFaxExtension 			is Alpha 10
				PrmVendorFaxPrefix 				is Alpha 6
				PrmVendorFaxNumber				is Alpha 15
				PrmEmail 						is an EmailAddressMulti 
					holds pii
				PrmReference1					is Alpha 40						
				PrmVendorName					is Alpha 120
				PrmContactName					is Alpha 120
				PrmVendorAddressLine1			is Alpha 40	
				PrmVendorAddressLine2			is Alpha 40
				PrmVendorAddressLine3			is Alpha 40
				PrmVendorAddressLine4			is Alpha 40
				PrmVendorStateProvince			is Alpha 3
				PrmVendorPostalCode				is Alpha 20
				PrmVendorAddressType			is Numeric 2
				PrmBankTransactionCode			is Alpha 10
				PrmBankEntity					is Alpha 15
				PrmVendorClass					is Alpha 5
				PrmBankAccountNumber			is Alpha 35
				PrmInvoiceCurrency				is Alpha 5								
				PrmVendorMunicipality			is Alpha 60
				PrmVendorCountry				is Alpha 3
				PrmVendorSearchName				is Alpha 120
				PrmLegalName					is Alpha 120	
				PrmTaxID						is Alpha 30		
				PrmTermsCode					is AlphaUpper size 10			
			Action Rules
				LocalBusinessGroup				= PrmVendorGroup
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalStatusCode                 = PrmVendorStatus 										
				LocalVendorMobileExtension		= PrmVendorMobileExtension   			
				LocalVendorMobilePrefix			= PrmVendorMobilePrefix 	
				LocalVendorMobileNumber			= PrmVendorMobileNumber 	
				LocalVendorPhoneExtension 		= PrmVendorPhoneExtension 								
				LocalVendorPhonePrefix 			= PrmVendorPhonePrefix						
				LocalVendorPhoneNumber 			= PrmVendorPhoneNumber					
				LocalVendorFaxExtension 		= PrmVendorFaxExtension 								
				LocalVendorFaxPrefix 			= PrmVendorFaxPrefix 						
				LocalVendorFaxNumber 			= PrmVendorFaxNumber							
				LocalVendorEmail				= PrmEmail											
				LocalReference					= PrmReference1											
				LocalVendorName					= PrmVendorName											
				LocalContactName				= PrmContactName											
				LocalVendorAddressLine1			= PrmVendorAddressLine1	
				LocalVendorAddressLine2			= PrmVendorAddressLine2
				LocalVendorAddressLine3			= PrmVendorAddressLine3
				LocalVendorAddressLine4			= PrmVendorAddressLine4
				LocalVendorStateProvince		= PrmVendorStateProvince							
				LocalVendorPostalCode			= PrmVendorPostalCode							
			    LocalVendorAddressType			= PrmVendorAddressType									
				LocalBankTransactionCode		= PrmBankTransactionCode									
				LocalBankEntity					= PrmBankEntity											
				LocalVendorClass				= PrmVendorClass											
				LocalBankAccountNumber			= PrmBankAccountNumber									
			    LocalInvoiceCurrency			= PrmInvoiceCurrency										
				LocalVendorMunicipality			= PrmVendorMunicipality							
				LocalVendorCountry				= PrmVendorCountry								
				LocalVendorName					= PrmVendorSearchName									
				LocalVendorName					= PrmLegalName	
				LocalTaxID						= PrmTaxID	
				LocalTermsCode					= PrmTermsCode
				invoke Create Vendor
					resume on error
               			Error            		= true
                    	ErrorMessage     		= error message 
					invoked.VendorGroup											= LocalBusinessGroup
					invoked.VendorStatus 										= LocalStatusCode
					invoked.MobileNumber.MobilePhoneNumber.Extension   			= LocalVendorMobileExtension
					invoked.MobileNumber.MobilePhoneNumber.InternationalPrefix 	= LocalVendorMobilePrefix
					invoked.MobileNumber.MobilePhoneNumber.SubscriberNumber 	= LocalVendorMobileNumber
					invoked.PhoneNumber.Extension 								= LocalVendorPhoneExtension
					invoked.PhoneNumber.InternationalPrefix						= LocalVendorPhonePrefix
					invoked.PhoneNumber.SubscriberNumber						= LocalVendorPhoneNumber
					invoked.FaxNumber.Extension 								= LocalVendorFaxExtension
					invoked.FaxNumber.InternationalPrefix 						= LocalVendorFaxPrefix 
					invoked.FaxNumber.SubscriberNumber 							= LocalVendorFaxNumber
					invoked.EmailAddress 										= LocalVendorEmail
					invoked.Reference1											= LocalReference
					invoked.VendorName											= LocalVendorName
					invoked.ContactName											= LocalContactName
					invoked.VendorAddress.DeliveryAddress.AddressLine1			= LocalVendorAddressLine1	
					invoked.VendorAddress.DeliveryAddress.AddressLine2			= LocalVendorAddressLine2
					invoked.VendorAddress.DeliveryAddress.AddressLine3			= LocalVendorAddressLine3
					invoked.VendorAddress.DeliveryAddress.AddressLine4			= LocalVendorAddressLine4
					invoked.VendorAddress.StateProvince							= LocalVendorStateProvince
					invoked.VendorAddress.PostalCode							= LocalVendorPostalCode
					invoked.VendorAddress.Type									= LocalVendorAddressType
					invoked.BankTransactionCode									= LocalBankTransactionCode
					invoked.BankEntity											= LocalBankEntity
					invoked.VendorClass											= LocalVendorClass
					invoked.BankAccountNumber									= LocalBankAccountNumber
					invoked.InvoiceCurrency										= LocalInvoiceCurrency									
					invoked.VendorAddress.Municipality							= LocalVendorMunicipality	
					invoked.VendorAddress.Country								= LocalVendorCountry
					invoked.VendorSearchName									= LocalVendorName
					invoked.LegalName											= LocalVendorName
					invoked.TaxID												= LocalTaxID	
					invoked.LegacyVendor										= LocalReference
					invoked.TermsCode											= LocalTermsCode						
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 							= Error
						invoked.ErrorMessage 					= ErrorMessage
						invoked.Status							= 2
						invoked.CloseDate						= system current timestamp
					invoke SupplierPartyMasterConfirmBOD
						invoked.PrmErrorMessage 				= ErrorMessage
						invoked.SupplierPartyMasterBOD      	= SupplierPartyMasterBOD
						invoked.PrmTrackerID					= LocalFSMInboundBODTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status							= 3
						invoked.CloseDate						= system current timestamp
						
		FindVendorSupplierPartyMaster		is an Import Action
			restricted
			Parameters
				SupplierPartyMasterBOD 				is XMLDocument
				PrmInboundTracker   				is like FSMInboundBODTracker
				PrmVendorGroup						is Alpha 10
				PrmVendorStatus 					is Alpha 30
				PrmVendorMobileExtension   	     	is Alpha 10		
				PrmVendorMobilePrefix 				is Alpha 6
				PrmVendorMobileNumber				is Alpha 15
				PrmVendorPhoneExtension 			is Alpha 10
				PrmVendorPhonePrefix				is Alpha 6
				PrmVendorPhoneNumber				is Alpha 15
				PrmVendorFaxExtension 				is Alpha 10
				PrmVendorFaxPrefix 					is Alpha 6
				PrmVendorFaxNumber					is Alpha 15
				PrmEmail 							is an EmailAddressMulti 
					holds pii
				PrmReference1						is Alpha 40						
				PrmVendorName						is Alpha 120
				PrmContactName						is Alpha 120
				PrmVendorAddressLine1				is Alpha 40	
				PrmVendorAddressLine2				is Alpha 40
				PrmVendorAddressLine3				is Alpha 40
				PrmVendorAddressLine4				is Alpha 40
				PrmVendorStateProvince				is Alpha 3
				PrmVendorPostalCode					is Alpha 20
				PrmVendorAddressType				is Numeric 2
				PrmBankTransactionCode				is Alpha 10
				PrmBankEntity						is Alpha 15
				PrmVendorClass						is Alpha 5
				PrmBankAccountNumber				is Alpha 35
				PrmInvoiceCurrency					is Alpha 5								
				PrmVendorMunicipality				is Alpha 60
				PrmVendorCountry					is Alpha 3
				PrmVendorSearchName					is Alpha 120
				PrmLegalName						is Alpha 120
				PrmActionCode						is Alpha 9
				PrmTaxID							is Alpha 30
				PrmVendor							is Numeric 9
				PrmTermsCode						is AlphaUpper size 10
			Action Rules
				LocalBusinessGroup					= PrmVendorGroup
				LocalFSMInboundBODTracker 			= PrmInboundTracker
				LocalStatusCode                     = PrmVendorStatus 										
				LocalVendorMobileExtension			= PrmVendorMobileExtension   			
				LocalVendorMobilePrefix				= PrmVendorMobilePrefix 	
				LocalVendorMobileNumber				= PrmVendorMobileNumber 	
				LocalVendorPhoneExtension 			= PrmVendorPhoneExtension 								
				LocalVendorPhonePrefix 				= PrmVendorPhonePrefix						
				LocalVendorPhoneNumber 				= PrmVendorPhoneNumber					
				LocalVendorFaxExtension 			= PrmVendorFaxExtension 								
				LocalVendorFaxPrefix 				= PrmVendorFaxPrefix 						
				LocalVendorFaxNumber 				= PrmVendorFaxNumber						
				LocalVendorEmail					= PrmEmail										
				LocalReference						= PrmReference1											
				LocalVendorName						= PrmVendorName											
				LocalContactName					= PrmContactName											
				LocalVendorAddressLine1				= PrmVendorAddressLine1	
				LocalVendorAddressLine2				= PrmVendorAddressLine2
				LocalVendorAddressLine3				= PrmVendorAddressLine3
				LocalVendorAddressLine4				= PrmVendorAddressLine4
				LocalVendorStateProvince			= PrmVendorStateProvince							
				LocalVendorPostalCode				= PrmVendorPostalCode							
			    LocalVendorAddressType				= PrmVendorAddressType									
				LocalBankTransactionCode			= PrmBankTransactionCode									
				LocalBankEntity						= PrmBankEntity											
				LocalVendorClass					= PrmVendorClass											
				LocalBankAccountNumber				= PrmBankAccountNumber									
			    LocalInvoiceCurrency				= PrmInvoiceCurrency										
				LocalVendorMunicipality				= PrmVendorMunicipality							
				LocalVendorCountry					= PrmVendorCountry								
				LocalVendorName						= PrmVendorSearchName									
				LocalVendorName						= PrmLegalName	
				ActionCode							= PrmActionCode
				LocalTaxID							= PrmTaxID
				LocalVendor							= PrmVendor		
				LocalTermsCode						= PrmTermsCode
				
				if(FindVendorRel exists and DerivedIntegratingApplication != "M3")
					LocalVendor						= last FindVendorRel.Vendor
					LocalVendorRelationExists		= true
				if(FindVendorM3Rel exists and DerivedIntegratingApplication = "M3")
					LocalVendor						= last FindVendorM3Rel.Vendor
					LocalVendorRelationExists		= true
				
				if(LocalVendorRelationExists and (ActionCode= "Change" or ActionCode= "Replace"))
					invoke Update VendorsRel
						resume on error
	                   		Error            		= true
	                        ErrorMessage     		= error message
						invoked.VendorGroup											= LocalBusinessGroup
						invoked.Vendor												= LocalVendor
						invoked.VendorStatus 										= LocalStatusCode
						invoked.MobileNumber.MobilePhoneNumber.Extension   			= LocalVendorMobileExtension
						invoked.MobileNumber.MobilePhoneNumber.InternationalPrefix 	= LocalVendorMobilePrefix
						invoked.MobileNumber.MobilePhoneNumber.SubscriberNumber 	= LocalVendorMobileNumber
						invoked.PhoneNumber.Extension 								= LocalVendorPhoneExtension
						invoked.PhoneNumber.InternationalPrefix						= LocalVendorPhonePrefix
						invoked.PhoneNumber.SubscriberNumber						= LocalVendorPhoneNumber
						invoked.FaxNumber.Extension 								= LocalVendorFaxExtension
						invoked.FaxNumber.InternationalPrefix 						= LocalVendorFaxPrefix 
						invoked.FaxNumber.SubscriberNumber 							= LocalVendorFaxNumber
						invoked.EmailAddress 										= LocalVendorEmail
						invoked.Reference1											= LocalReference
						invoked.VendorName											= LocalVendorName
						invoked.ContactName											= LocalContactName
						invoked.BankTransactionCode									= LocalBankTransactionCode
						invoked.BankEntity											= LocalBankEntity
						invoked.VendorClass											= LocalVendorClass
						invoked.BankAccountNumber									= LocalBankAccountNumber
						invoked.InvoiceCurrency										= LocalInvoiceCurrency									
						invoked.VendorSearchName									= LocalVendorName
						invoked.LegalName											= LocalVendorName
						invoked.TaxID												= LocalTaxID
						invoked.LegacyVendor										= LocalReference	
						invoked.TermsCode											= LocalTermsCode					
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 							= Error
							invoked.ErrorMessage 					= ErrorMessage
							invoked.Status							= 2
							invoked.CloseDate						= system current timestamp
						invoke SupplierPartyMasterConfirmBOD
							invoked.PrmErrorMessage 				= ErrorMessage
							invoked.SupplierPartyMasterBOD      	= SupplierPartyMasterBOD
							invoked.PrmTrackerID					= LocalFSMInboundBODTracker					
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update VendorAddressRel
							resume on error
								Error            							   	= true
								ErrorMessage     							   	= error message 
							invoked.VendorGroup									= LocalBusinessGroup
							invoked.Vendor										= LocalVendor
							invoked.PostalAddress.Type							= LocalVendorAddressType
							invoked.PostalAddress.DeliveryAddress.AddressLine1 	= LocalVendorAddressLine1
							invoked.PostalAddress.DeliveryAddress.AddressLine2 	= LocalVendorAddressLine2
							invoked.PostalAddress.DeliveryAddress.AddressLine3 	= LocalVendorAddressLine3
							invoked.PostalAddress.DeliveryAddress.AddressLine4  = LocalVendorAddressLine4
							invoked.PostalAddress.Municipality 				   	= LocalVendorMunicipality
							invoked.PostalAddress.PostalCode 			   		= LocalVendorPostalCode
							invoked.PostalAddress.StateProvince 				= LocalVendorStateProvince
							invoked.PostalAddress.Country 			   			= LocalVendorCountry
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 									= Error
								invoked.ErrorMessage 							= ErrorMessage
								invoked.Status									= 2
								invoked.CloseDate								= system current timestamp
							invoke SupplierPartyMasterConfirmBOD
								invoked.PrmErrorMessage 						= ErrorMessage
								invoked.SupplierPartyMasterBOD      			= SupplierPartyMasterBOD
								invoked.PrmTrackerID							= LocalFSMInboundBODTracker
						if(!FSMInboundBODTrackerRel.Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp												
				else
				if(LocalVendorRelationExists and (ActionCode= "Delete"))
					invoke Delete VendorsRel
						resume on error
							Error            					= true
							ErrorMessage     					= error message						
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						invoke SupplierPartyMasterConfirmBOD
							invoked.PrmErrorMessage 			= ErrorMessage
							invoked.SupplierPartyMasterBOD      = SupplierPartyMasterBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker							
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp	
				else
				if(!LocalVendorRelationExists and (ActionCode = "Change" or ActionCode = "Replace" or ActionCode = "Delete"))
					invoke CreateVendorSupplierPartyMaster
						invoked.SupplierPartyMasterBOD 		= SupplierPartyMasterBOD 
						invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker	
						invoked.PrmVendorGroup				= LocalBusinessGroup								   
						invoked.PrmVendorStatus 			= LocalStatusCode                                 										
						invoked.PrmVendorMobileExtension   	= LocalVendorMobileExtension									
						invoked.PrmVendorMobilePrefix 		= LocalVendorMobilePrefix									
						invoked.PrmVendorMobileNumber 		= LocalVendorMobileNumber									
						invoked.PrmVendorPhoneExtension 	= LocalVendorPhoneExtension 											
						invoked.PrmVendorPhonePrefix		= LocalVendorPhonePrefix 									
						invoked.PrmVendorPhoneNumber		= LocalVendorPhoneNumber 									
						invoked.PrmVendorFaxExtension 		= LocalVendorFaxExtension 																	
						invoked.PrmVendorFaxPrefix 			= LocalVendorFaxPrefix 										
						invoked.PrmVendorFaxNumber			= LocalVendorFaxNumber 											
						invoked.PrmEmail					= LocalVendorEmail												
						invoked.PrmReference1				= LocalReference																			
						invoked.PrmVendorName				= LocalVendorName																
						invoked.PrmContactName				= LocalContactName													
						invoked.PrmVendorAddressLine1		= LocalVendorAddressLine1								
						invoked.PrmVendorAddressLine2		= LocalVendorAddressLine2
						invoked.PrmVendorAddressLine3		= LocalVendorAddressLine3
						invoked.PrmVendorAddressLine4		= LocalVendorAddressLine4
						invoked.PrmVendorStateProvince		= LocalVendorStateProvince									
						invoked.PrmVendorPostalCode			= LocalVendorPostalCode									
						invoked.PrmVendorAddressType		= LocalVendorAddressType												
						invoked.PrmBankTransactionCode		= LocalBankTransactionCode											
						invoked.PrmBankEntity				= LocalBankEntity														
						invoked.PrmVendorClass				= LocalVendorClass													
						invoked.PrmBankAccountNumber		= LocalBankAccountNumber												
						invoked.PrmInvoiceCurrency			= LocalInvoiceCurrency												
						invoked.PrmVendorMunicipality		= LocalVendorMunicipality										
						invoked.PrmVendorCountry			= LocalVendorCountry											
						invoked.PrmVendorSearchName			= LocalVendorName															
						invoked.PrmLegalName				= LocalVendorName
						invoked.PrmTaxID					= LocalTaxID
						invoked.PrmTermsCode				= LocalTermsCode															
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp	
					
		SupplierPartyMasterConfirmBOD is an Instance Action
			restricted			
			Parameters
				SupplierPartyMasterBOD 			is XMLDocument
				PrmErrorMessage 				is Alpha 300
				PrmTrackerID					is Numeric 15
			Action Rules
				LocalSPersonnelXML				= SupplierPartyMasterBOD
				LocalErrorMessage				= PrmErrorMessage
				LocalTrackerID					= PrmTrackerID
				LocalAccountingEntity			= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@accountingEntity"
				LocalFromLogicalID				= SupplierPartyMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID				= SupplierPartyMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID						= SupplierPartyMasterBOD select "//ApplicationArea/BODID"
				LocalDocumentID					= SupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID"
				LocalOriginalCreateDateTime		= SupplierPartyMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalConfirmBOD					= "true"
				LocalMainUserTemplate			= "IONSyncSupplierPartyMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncSupplierPartyMasterConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID	

							

		SyncExpenseReportBODImport is an Import Action
			restricted
			bod type is Sync.ExpenseReport		
			Parameters
				ExpenseReportBOD 				is XMLDocument
            Action Rules
				LocalBODXML								=	ExpenseReportBOD
				LocalDocID								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalAccountingEntity					=   ExpenseReportBOD select "//DataArea/Sync/AccountingEntityID"
				LocalBODID                 				=   ExpenseReportBOD select "//ApplicationArea/BODID"
				LocalERStatus							=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/Status/Code"
				LocalDocID								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalDocumentID							=   LocalDocID[3:10]
				LocalGenericDelimiter					=	DerivedGenericDelimiter
				LocalVendorGroup						=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/PersonnelReference/ID"		
				LocalAccountingEntityID					=   ExpenseReportBOD select "//DataArea/Sync/AccountingEntityID"
				if(LocalVendorGroup entered)
					LocalVendorGroup = NativeVendorGroup
				else
					LocalVendorGroup = ""	
#ifdef module ap				
#ifdef module GeneralLedger		

				if(DerivedConfigDocID = "Y")
					LocalERVendor 			= ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/PersonnelReference/ID"	
					LocalAccountingEntity	= ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID/@accountingEntity"
					
					if(DESTAEVSCSFGLCCleanDocIDRel.DestinationValue entered)
						LocalCrossRefValue	= DESTAEVSCSFGLCCleanDocIDRel.DestinationValue
					else
						LocalCrossRefValue  = LocalAccountingEntity
						
					if(DerivedConfigFEG != "Y")
						LocalERCompany = LocalCrossRefValue
					else
					if(DerivedConfigFEG = "Y")	
						if(LocalCrossRefValue entered)
							LocalERCompany = NativeERCompany
						else
							LocalERCompany = ""
							
					LocalERFinanceEnterpriseGroup 	= GLCompanyRel.FinanceEnterpriseGroup
					LocalERVendorGroup  			= GLCompanyRel.BusinessGroup
					LocalAccountingEntity			= GLCompanyRel.AccountingEntity	

			
				if(FSMBODConfigurationExpenseReportRel exists and FSMBODConfigurationExpenseReportRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ExpenseReport"
							invoked.Direction				= 2
							invoked.Vendor					= LocalERVendor	
							invoked.FinanceEnterpriseGroup	= LocalERFinanceEnterpriseGroup
							invoked.BODXML					= LocalBODXML
							invoked.BODDocumentID			= LocalDocID
							invoked.BODID					= LocalBODID
							invoked.BODAccountingEntity		= LocalAccountingEntityID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							initialize invoked.Error	
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 				= NewBODTracker.FSMInboundBODTracker
					else
		            	LocalFSMInboundBODTracker 			= FSMInboundBODTracker
		            	invoke Update FSMInboundBODTrackerRel
		            		invoked.Vendor					= LocalERVendor	
							invoked.FinanceEnterpriseGroup	= LocalERFinanceEnterpriseGroup
							invoked.BODXML					= LocalBODXML
							invoked.BODDocumentID			= LocalDocID
							invoked.BODID					= LocalBODID
							invoked.BODAccountingEntity		= LocalAccountingEntityID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							initialize invoked.Error	
							initialize invoked.ErrorMessage
							
					
					if(LocalERStatus = "Approved")
						if(ExpenseManagementInterfaceHeaderRel not exist)
							invoke CreateExpenseManagementStagingHeader
								invoked.ExpenseReportBOD    	 	=	ExpenseReportBOD
			                	invoked.PrmInboundTracker 		 	=	LocalFSMInboundBODTracker
			                	invoked.PrmVendorGroup			 	=	LocalERVendorGroup
			                	invoked.PrmVendor 					=	LocalERVendor
			                	invoked.PrmFinanceEnterpriseGroup 	=	LocalERFinanceEnterpriseGroup
			            else
							invoke SyncExpenseReportConfirmBOD
								invoked.PrmErrorMessage 			= "Expense Management Interface : Employee expense document already exists for this document"
								invoked.ExpenseReportBOD     		= ExpenseReportBOD
			                	invoked.PrmTrackerID 				= LocalFSMInboundBODTracker
			                	invoked.PrmLocalAccountingEntity 	= LocalAccountingEntity
			               
			                invoke Update FSMInboundBODTrackerRel
								invoked.Status						= 3
								invoked.CloseDate					= system current timestamp  	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp   		
				else 
				if(FSMInboundBODTracker not entered) 
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "ExpenseReport"
						invoked.Direction				= 2
						invoked.Vendor					= LocalERVendor	
						invoked.FinanceEnterpriseGroup	= LocalERFinanceEnterpriseGroup					
						invoked.BODXML					= LocalBODXML
						invoked.BODID					= LocalBODID
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ExpenseReport Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Vendor					= LocalERVendor	
						invoked.FinanceEnterpriseGroup	= LocalERFinanceEnterpriseGroup					
						invoked.BODXML					= LocalBODXML
						invoked.BODID					= LocalBODID
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ExpenseReport Inbound BOD Service is not Enabled"
						

		CreateExpenseManagementStagingHeader is an Import Action  	
			restricted			
			Parameters
				ExpenseReportBOD 						is XMLDocument
				PrmInboundTracker   					is like FSMInboundBODTracker
				PrmVendorGroup			 				is Alpha size 25 
			    PrmVendor 								is Alpha size 9			
			    PrmFinanceEnterpriseGroup 				is Alpha size 25
			Action Rules
				LocalFSMInboundBODTracker 				= 	PrmInboundTracker
				LocalGenericDelimiter					=	DerivedGenericDelimiter
				LocalERFinanceEnterpriseGroup			=	PrmFinanceEnterpriseGroup
				LocalERVendorGroup						=	PrmVendorGroup
				LocalERVendor							=	PrmVendor
				LocalDocID								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalDocumentID							=   LocalDocID[3:10]
				LocalCurrency							=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/TotalAmount/@currencyID"
				LocalPurpose							=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/Description"
				LocalDateFrom							=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/ExpenseReportTimePeriod/StartDateTime"
				LocalDateTo								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/ExpenseReportTimePeriod/EndDateTime"
				if(LocalDateFrom entered)
					LocalDateFrom = LocalDateFrom[1:4] + LocalDateFrom[6:7] + LocalDateFrom[9:10]
				else
					LocalDateFrom = ""
				
				if(LocalDateTo entered)
					LocalDateTo = LocalDateTo[1:4] + LocalDateTo[6:7] + LocalDateTo[9:10] 
				else
					LocalDateTo = ""
				
				if(ExpenseManagementStagingHeaderRel exist)
					invoke Update ExpenseManagementStagingHeaderRel
						resume on error
			            	Error            						= 	true
			                ErrorMessage     						= 	error message
			            invoked.VendorGroup							=	LocalERVendorGroup
			            invoked.ExpenseManagementStagingHeader		= 	LocalDocumentID
			            invoked.Vendor								=	LocalERVendor
			            invoked.Document							=	LocalDocID
			            invoked.Currency							=	LocalCurrency
			            invoked.Purpose								=	LocalPurpose
			            invoked.FromDate							=	LocalDateFrom
			            invoked.ToDate								=	LocalDateTo
			            invoked.Source								=	"V"
				else	
					invoke Create ExpenseManagementStagingHeader
						resume on error
	                   		Error            						= true
	                        ErrorMessage     						= error message
	                    invoked.VendorGroup							=	LocalERVendorGroup
	                    invoked.ExpenseManagementStagingHeader		=	LocalDocumentID
	                    invoked.Vendor								=	LocalERVendor
						invoked.Purpose								=	LocalPurpose		
						invoked.Document							=	LocalDocID
						invoked.Currency							=	LocalCurrency
						invoked.FromDate							=	LocalDateFrom
						invoked.ToDate								=	LocalDateTo
						invoked.Source								=	"V"							
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SyncExpenseReportConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ExpenseReportBOD     		= ExpenseReportBOD
	                	invoked.PrmTrackerID 				= LocalFSMInboundBODTracker	
	                	invoked.PrmLocalAccountingEntity 	= LocalAccountingEntity
				else
					invoke CreateExpenseManagementStagingDetail
						invoked.PrmInboundTracker 			=   LocalFSMInboundBODTracker
						invoked.ExpenseReportBOD    	 	=   ExpenseReportBOD
						invoked.PrmVendorGroup			 	=	LocalERVendorGroup
			            invoked.PrmVendor 					=	LocalERVendor
			            invoked.PrmFinanceEnterpriseGroup 	=	LocalERFinanceEnterpriseGroup
	
		CreateExpenseManagementStagingDetail is an Import Action  	
			restricted			
			Parameters
				ExpenseReportBOD 						is XMLDocument
				PrmInboundTracker   					is like FSMInboundBODTracker 
				PrmVendorGroup			 				is Alpha size 25 
			    PrmVendor 								is Alpha size 9			
			    PrmFinanceEnterpriseGroup 				is Alpha size 25
				PrmNumberofLines						is Numeric size 50
			Local Fields
				LocalExpenseReportLine					is XMLDocument
				LocalUserArea							is XMLDocument
			Action Rules			
				LocalFSMInboundBODTracker 					= 	PrmInboundTracker
				LocalGenericDelimiter						=	DerivedGenericDelimiter
				LocalERFinanceEnterpriseGroup				=	PrmFinanceEnterpriseGroup
				LocalERVendorGroup							=	PrmVendorGroup
				LocalERVendor								=	PrmVendor
				LocalDocID									=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalDocumentID								=   LocalDocID[3:10]
				LocalERLineLength							=	ExpenseReportBOD select "count (//DataArea/ExpenseReport/ExpenseReportLine)"	
				LocalNumberofLines							=	0
				LocalIterator = 1
				while(LocalERLineLength >= LocalIterator)
					LocalExpenseReportLine					=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportLine[<LocalIterator>]"
					LocalPersonalIndicator					=	LocalExpenseReportLine select "/ExpenseReportLine/PersonalIndicator"
					LocalItemizedIndicator					=	LocalExpenseReportLine select "/ExpenseReportLine/ItemizedIndicator"
					LocalBaseAmount							=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount"
					LocalBaseCurrency						=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount/@currencyID"
					LocalExchangeRate						=	LocalExpenseReportLine select "/ExpenseReportLine/ExchangeRate/RateNumeric"
					LocalStatus								=	LocalExpenseReportLine select "/ExpenseReportLine/Status/Code"
					LocalSpecialCode						=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseType/SpecialCode"
					LocalExpenseType						=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseType/ExpenseCode"
					LocalCreditCardNum						=	LocalExpenseReportLine select "/ExpenseReportLine/CreditCard/Number"
					LocalTransactionAmount					=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount"
					LocalTransactionCurrency				=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount/@currencyID"
					LocalApprovedBaseAmount					=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount"
					LocalApprovedBaseCurrency				=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BaseAmount/@currencyID"
					LocalApprovedAmount						=	LocalExpenseReportLine select "/ExpenseReportLine/ApprovedAmount"
					LocalDateTo 							=   LocalExpenseReportLine select "/ExpenseReportLine/DateTime"
					LocalAccountingEntity					=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseType/ExpenseCode/@accountingEntity"
					LocalPaymentType						=	LocalExpenseReportLine select "/ExpenseReportLine/PaymentType"
					CCNumber								=	LocalExpenseReportLine select "/ExpenseReportLine/CreditCard/Number"
					LocalCostCenter							=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation/CostCenterCode"
					LocalBillableIndicator 					= 	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/BillableIndicator"
					LocalProject							= 	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/ProjectReference/ID"
					initialize LocalMultipleAE 
					initialize LocalCostCenter
					initialize LocalToAccountingEntity	
					initialize LocalCostCenterFinanceDimension1
					initialize LocalCostCenterFinanceDimension2
					initialize LocalCostCenterFinanceDimension3
					initialize LocalCostCenterFinanceDimension4
					initialize LocalCostCenterFinanceDimension5
					initialize LocalCostCenterFinanceDimension6
					initialize LocalCostCenterFinanceDimension7
					initialize LocalCostCenterFinanceDimension8
					initialize LocalCostCenterFinanceDimension9
					initialize LocalCostCenterFinanceDimension10
					LocalClassificationLength				= LocalExpenseReportLine select "count(/ExpenseReportLine/Classification/Codes/Code)"
					LocalCostCenterClassificationType		= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/@type"					
					LocalCostCenterClassificationlen 		= LocalExpenseReportLine select "count(/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code)"					
					LocalnumExpAllocLines					= LocalExpenseReportLine select "count (/ExpenseReportLine/ExpenseAllocation)"
					

					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop) 
							LocalCodeListID	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]/@listID"
							LocalCodeValue	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]"
							if(LocalCodeListID = "Cost Center")
								LocalCostCenter	= LocalCodeValue		  	 
							LocalLoop = LocalLoop + 1
					else
						LocalCostCenter		= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/CostCenterCode"
						

					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop) 
							LocalListID	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]/@sequence"
							LocalCodeValue	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]"
        					if (LocalListID = "1")
       							LocalMultipleAE = LocalCodeValue
							LocalLoop = LocalLoop + 1
					

					if(LocalDateTo entered)
						LocalDateTo = LocalDateTo[1:4] + LocalDateTo[6:7] + LocalDateTo[9:10] 
					else
						LocalDateTo = ""
					
					if(LocalProject entered)
						LocalProject  = NativeProject  
					else
						LocalProject = ""
					LocalNumberofLines						=	LocalNumberofLines + 1
					
					if(LocalPaymentType = "1" or LocalPaymentType = "5")
						LocalpayMethod	=	20
					else 
					if(LocalPaymentType = "2")
						LocalpayMethod	=	30
					else 
					if(LocalPaymentType = "4")
						if(CCNumber != "")
							LocalpayMethod = 40
						else
							LocalpayMethod = 10
					else
					if(LocalPaymentType not entered)
						LocalpayMethod = 0	
					
					if(LocalItemizedIndicator != "true" and LocalPersonalIndicator != "true")
						SendExpense = true
					else
						SendExpense	= false
					

					if(LocalAccountingEntity entered)
						LocalAccountingEntity = NativeAccountingEntity
					else
						LocalAccountingEntity = ""
					
					LocalAccountingEntity = LocalCompany	
					

					if(LocalSpecialCode = "Cash Advance")
						LocalisCashAdvance=	true
					else
						LocalisCashAdvance = false
					
					if ( LocalBillableIndicator = "true")
   						LocalBillable = 1
					else
    					LocalBillable = 0
					

					LocalUserAreaCount		=	LocalExpenseReportLine select "count(/ExpenseReportLine/DistributedTax/UserArea/Property)"	
					LocalCount = 1
					while (LocalUserAreaCount >= LocalCount)
						LocalUserArea			= 	LocalExpenseReportLine select "/ExpenseReportLine/DistributedTax/UserArea/Property[<LocalCount>]"
						LocalNameValueID		=	LocalUserArea select "/Property/NameValue/@name"
						LocalNameValue			=	LocalUserArea select "/Property/NameValue"
						
						LocalCurrencyValue		=	LocalUserArea select "/Property/NameValue/@currencyID"	
						if(LocalNameValueID 	= "VATExpenseType")
							LocalVATexpensetype 	 	= LocalNameValue
						else
						if(LocalNameValueID 	= "NetBasisBaseAmount")
							LocalNetAmount 	    = LocalNameValue
							LocalNetAmountCurrencyID = LocalCurrencyValue
						else
						if(LocalNameValueID 	= "TDGLAccount")
							LocalTDGLAccount 	= LocalNameValue
						else
						if(LocalNameValueID 	= "ExpenseTypeGLCode")
							LocalExpenseTypeGLCode 	    	= LocalNameValue
						LocalCount = LocalCount+1

					if(LocalTDGLAccount entered)
						GLChartAccount	=	LocalTDGLAccount
					else	
						GLChartAccount	=	LocalExpenseTypeGLCode		
					
					if(ExpenseManagementFEGRel exist)
						LocalBODCostCenter = ExpenseManagementFEGRel.BODCostCenter
					else
						LocalBODCostCenter = ""
					
					if(LocalBODCostCenter = "1")
						LocalCostCenterFinanceDimension1 = LocalCostCenter
					else
					if(LocalBODCostCenter = "2")
						LocalCostCenterFinanceDimension2 = LocalCostCenter
					else
					if(LocalBODCostCenter = "3")
						LocalCostCenterFinanceDimension3 = LocalCostCenter
					else
					if(LocalBODCostCenter = "4")
						LocalCostCenterFinanceDimension4 = LocalCostCenter
					else
					if(LocalBODCostCenter = "5")
						LocalCostCenterFinanceDimension5 = LocalCostCenter
					else
					if(LocalBODCostCenter = "6")
						LocalCostCenterFinanceDimension6 = LocalCostCenter
					else
					if(LocalBODCostCenter = "7")
						LocalCostCenterFinanceDimension7 = LocalCostCenter
					else
					if(LocalBODCostCenter = "8")
						LocalCostCenterFinanceDimension8 = LocalCostCenter
					else
					if(LocalBODCostCenter = "9")
						LocalCostCenterFinanceDimension9 = LocalCostCenter
					else
					if(LocalBODCostCenter = "10")
						LocalCostCenterFinanceDimension10 = LocalCostCenter
					else
						LocalCostCenterAccountingUnit	  = LocalCostCenter
					

					if(LocalMultipleAE entered)
						LocalToAccountingEntity= NativeMultipleAccountingEntity
					else
						LocalToAccountingEntity= LocalAccountingEntity

					


					if(DerivedConfigDocID = "Y")  
						LocalProject 					=   LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/ProjectReference/ID"
						LocalAccountingEntity			=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseType/ExpenseCode/@accountingEntity"
						
						if(LocalCostCenterClassificationType = "CostCenterSegments")
							LocalAccountingEntity = LocalMultipleAE		
						
						if(DESTAEVSCSFAECleanDocIDRel.DestinationValue entered)
							LocalCrossRefValue	= DESTAEVSCSFAECleanDocIDRel.DestinationValue
						else
							LocalCrossRefValue  = LocalAccountingEntity
						
						if(DerivedConfigFEG != "Y")
							LocalToAccountingEntity = LocalCrossRefValue
						else
						if(DerivedConfigFEG = "Y")	
							if(LocalCrossRefValue entered)
								LocalToAccountingEntity = NativeERAccountingEntity
							else
								LocalToAccountingEntity = ""

						

					if(DerivedConfigDocID = "Y")  					
						LocalAccountingEntity			=	LocalExpenseReportLine select "/ExpenseReportLine/ExpenseType/ExpenseCode/@accountingEntity"										
						
						if(DESTAEVSCSFAECleanDocIDRel.DestinationValue entered)
							LocalCrossRefValue	= DESTAEVSCSFAECleanDocIDRel.DestinationValue							
						else
							LocalCrossRefValue  = LocalAccountingEntity							
						
						if(DerivedConfigFEG != "Y")
							LocalAccountingEntity = LocalCrossRefValue
						else
						if(DerivedConfigFEG = "Y")	
							if(LocalCrossRefValue entered)
								LocalAccountingEntity = NativeERAccountingEntity
							else
								LocalAccountingEntity = ""
						


					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop) 
							LocalCodeListID	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]/@listID"
							LocalCodeValue	= LocalExpenseReportLine select "/ExpenseReportLine/ExpenseAllocation[1]/Classification/Codes/Code[<LocalLoop>]"
							if(LocalCodeListID = "Finance 1 Dimensions")
								LocalCostCenterFinanceDimension1	= LocalCodeValue	
							if(LocalCodeListID = "Finance 2 Dimensions")
								LocalCostCenterFinanceDimension2	= LocalCodeValue	
							if(LocalCodeListID = "Finance 3 Dimensions")
								LocalCostCenterFinanceDimension3	= LocalCodeValue	
							if(LocalCodeListID = "Finance 4 Dimensions")
								LocalCostCenterFinanceDimension4	= LocalCodeValue	
							if(LocalCodeListID = "Finance 5 Dimensions")
								LocalCostCenterFinanceDimension5	= LocalCodeValue	
							if(LocalCodeListID = "Finance 6 Dimensions")
								LocalCostCenterFinanceDimension6	= LocalCodeValue	
							if(LocalCodeListID = "Finance 7 Dimensions")
								LocalCostCenterFinanceDimension7	= LocalCodeValue	
							if(LocalCodeListID = "Finance 8 Dimensions")
								LocalCostCenterFinanceDimension8	= LocalCodeValue	
							if(LocalCodeListID = "Finance 9 Dimensions")
								LocalCostCenterFinanceDimension9	= LocalCodeValue	
							if(LocalCodeListID = "Finance 10 Dimensions")
								LocalCostCenterFinanceDimension10	= LocalCodeValue	
							LocalLoop = LocalLoop + 1
					else
						LocalLoop = 1
						while (LocalClassificationLength >= LocalLoop) 
							LocalCodeListID	= LocalExpenseReportLine select "/ExpenseReportLine/Classification/Codes/Code[<LocalLoop>]/@listID"
							LocalCodeValue	= LocalExpenseReportLine select "/ExpenseReportLine/Classification/Codes/Code[<LocalLoop>]"
							if(LocalCodeListID = "Finance 1 Dimensions")
								LocalCostCenterFinanceDimension1	= LocalCodeValue	
							if(LocalCodeListID = "Finance 2 Dimensions")
								LocalCostCenterFinanceDimension2	= LocalCodeValue	
							if(LocalCodeListID = "Finance 3 Dimensions")
								LocalCostCenterFinanceDimension3	= LocalCodeValue	
							if(LocalCodeListID = "Finance 4 Dimensions")
								LocalCostCenterFinanceDimension4	= LocalCodeValue	
							if(LocalCodeListID = "Finance 5 Dimensions")
								LocalCostCenterFinanceDimension5	= LocalCodeValue	
							if(LocalCodeListID = "Finance 6 Dimensions")
								LocalCostCenterFinanceDimension6	= LocalCodeValue	
							if(LocalCodeListID = "Finance 7 Dimensions")
								LocalCostCenterFinanceDimension7	= LocalCodeValue	
							if(LocalCodeListID = "Finance 8 Dimensions")
								LocalCostCenterFinanceDimension8	= LocalCodeValue	
							if(LocalCodeListID = "Finance 9 Dimensions")
								LocalCostCenterFinanceDimension9	= LocalCodeValue	
							if(LocalCodeListID = "Finance 10 Dimensions")
								LocalCostCenterFinanceDimension10	= LocalCodeValue	
							LocalLoop = LocalLoop + 1

					if(SendExpense = "true")
						if(LocalApprovedAmount entered)
							if(ExpenseManagementStagingDetailRel exist)
								invoke Update ExpenseManagementStagingDetailRel
									resume on error
				                   		Error            							= true
				                        ErrorMessage     							= error message
				                    invoked.VendorGroup								=	LocalERVendorGroup
				                    invoked.ExpenseManagementStagingHeader			=	LocalDocumentID
				                    invoked.ExpenseManagementStagingDetail			=	LocalNumberofLines
				                    invoked.BaseAmount								=	LocalBaseAmount
				                    invoked.BaseCurrency							=	LocalBaseCurrency
				                    invoked.ExchangeRate							=	LocalExchangeRate
				                    invoked.TransactionAmount						= 	LocalTransactionAmount
				                    invoked.TransactionCurrency						=	LocalTransactionCurrency
					      			invoked.TransactionDate							=	LocalDateTo
									invoked.PayMethod								=	LocalpayMethod
									invoked.AccountingEntity						=	LocalAccountingEntity			
									invoked.ExpenseManagementInterfaceExpenseType	=	LocalExpenseType
									invoked.IsCashAdvance							=	LocalisCashAdvance
									invoked.ApprovedBaseAmount						=	LocalNetAmount
									invoked.ApprovedBaseCurrency					=   LocalNetAmountCurrencyID
									invoked.ApprovedTransactionAmount				=	LocalApprovedBaseAmount
									invoked.ApprovedTransactionCurrency				=	LocalApprovedBaseCurrency
									invoked.Billable								=	LocalBillable
									invoked.Status									=	LocalStatus	
									invoked.SpecialCode								=	LocalSpecialCode
									invoked.CreditCardNumber						=	LocalCreditCardNum	
									invoked.TaxCode									= 	LocalVATexpensetype
									invoked.FinanceStructure.ToAccountingEntity		=	LocalToAccountingEntity
									invoked.FinanceStructure.AccountingUnit			=	LocalCostCenterAccountingUnit
									invoked.FinanceStructure.Project				=	LocalProject
									invoked.FinanceStructure.FinanceDimension1		=	LocalCostCenterFinanceDimension1
									invoked.FinanceStructure.FinanceDimension2		=	LocalCostCenterFinanceDimension2
									invoked.FinanceStructure.FinanceDimension3		=	LocalCostCenterFinanceDimension3
									invoked.FinanceStructure.FinanceDimension4		=	LocalCostCenterFinanceDimension4
									invoked.FinanceStructure.FinanceDimension5		=	LocalCostCenterFinanceDimension5
									invoked.FinanceStructure.FinanceDimension6		=	LocalCostCenterFinanceDimension6
									invoked.FinanceStructure.FinanceDimension7		=	LocalCostCenterFinanceDimension7
									invoked.FinanceStructure.FinanceDimension8		=	LocalCostCenterFinanceDimension8
									invoked.FinanceStructure.FinanceDimension9		=	LocalCostCenterFinanceDimension9
									invoked.FinanceStructure.FinanceDimension10		=	LocalCostCenterFinanceDimension10
									invoked.FinanceStructure.GeneralLedgerChartAccount = GLChartAccount		
							else
								invoke Create ExpenseManagementStagingDetail
									resume on error
				                   		Error            									= true
				                        ErrorMessage     									= error message
				                    invoked.VendorGroup								=	LocalERVendorGroup
				                    invoked.ExpenseManagementStagingHeader			=	LocalDocumentID
				                    invoked.ExpenseManagementStagingDetail			=	LocalNumberofLines
				                    invoked.BaseAmount								=	LocalBaseAmount
				                    invoked.BaseCurrency							=	LocalBaseCurrency
				                    invoked.ExchangeRate							=	LocalExchangeRate
				                    invoked.TransactionAmount						= 	LocalTransactionAmount
				                    invoked.TransactionCurrency						=	LocalTransactionCurrency
					      			invoked.TransactionDate							=	LocalDateTo		
									invoked.PayMethod								=	LocalpayMethod
									invoked.AccountingEntity						=	LocalAccountingEntity			
									invoked.ExpenseManagementInterfaceExpenseType	=	LocalExpenseType
									invoked.IsCashAdvance							=	LocalisCashAdvance
									invoked.ApprovedBaseAmount						=	LocalNetAmount
									invoked.ApprovedBaseCurrency					=   LocalNetAmountCurrencyID
									invoked.ApprovedTransactionAmount				=	LocalApprovedBaseAmount
									invoked.ApprovedTransactionCurrency				=	LocalApprovedBaseCurrency
									invoked.Billable								=	LocalBillable
									invoked.Status									=	LocalStatus	
									invoked.SpecialCode								=	LocalSpecialCode
									invoked.CreditCardNumber						=	LocalCreditCardNum	
									invoked.TaxCode									= 	LocalVATexpensetype
									invoked.FinanceStructure.ToAccountingEntity		=	LocalToAccountingEntity
									invoked.FinanceStructure.AccountingUnit			=	LocalCostCenterAccountingUnit
									invoked.FinanceStructure.Project				=	LocalProject
									invoked.FinanceStructure.FinanceDimension1		=	LocalCostCenterFinanceDimension1
									invoked.FinanceStructure.FinanceDimension2		=	LocalCostCenterFinanceDimension2
									invoked.FinanceStructure.FinanceDimension3		=	LocalCostCenterFinanceDimension3
									invoked.FinanceStructure.FinanceDimension4		=	LocalCostCenterFinanceDimension4
									invoked.FinanceStructure.FinanceDimension5		=	LocalCostCenterFinanceDimension5
									invoked.FinanceStructure.FinanceDimension6		=	LocalCostCenterFinanceDimension6
									invoked.FinanceStructure.FinanceDimension7		=	LocalCostCenterFinanceDimension7
									invoked.FinanceStructure.FinanceDimension8		=	LocalCostCenterFinanceDimension8
									invoked.FinanceStructure.FinanceDimension9		=	LocalCostCenterFinanceDimension9
									invoked.FinanceStructure.FinanceDimension10		=	LocalCostCenterFinanceDimension10
									invoked.FinanceStructure.GeneralLedgerChartAccount = GLChartAccount

							if(LocalnumExpAllocLines > 1 and Error = false )
								invoke CreateExpenseManagementStagingAllocation
									invoked.PrmInboundTracker 			=   LocalFSMInboundBODTracker
									invoked.ExpenseReportBOD    	 	=   ExpenseReportBOD
									invoked.PrmVendorGroup			 	=	LocalERVendorGroup
									invoked.PrmVendor 					=	LocalERVendor
									invoked.PrmDocumentID				=	LocalDocumentID
									invoked.PrmFinanceEnterpriseGroup 	=	LocalERFinanceEnterpriseGroup
									invoked.PrmNumberofLines			=	LocalNumberofLines
									invoked.PrmLocalnumExpAllocLines	=	LocalnumExpAllocLines
									invoked.PrmLocalIterator			=	LocalIterator
									invoked.PrmGLChartAccount			=	GLChartAccount
									invoked.PrmLocalAccountingEntity 	= 	LocalAccountingEntity
									invoked.PrmLocalClassificationLength=	LocalClassificationLength
			                if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
								invoke SyncExpenseReportConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.ExpenseReportBOD     		= ExpenseReportBOD
				                	invoked.PrmTrackerID 				= LocalFSMInboundBODTracker 
				                	invoked.PrmLocalAccountingEntity 	= LocalAccountingEntity 
			                    LocalIterator = LocalERLineLength + 1
		                    else
		                    	LocalNumberOfLinesadded	=	LocalNumberOfLinesadded + 1
		                    	LocalIterator = LocalIterator + 1
		                else
		                	LocalIterator = LocalIterator + 1
		            else
		            	LocalIterator = LocalIterator + 1
		       		
		       	LocalERLineLength = LocalERLineLength+1		
		        if((!FSMInboundBODTrackerRel.Error) and (LocalNumberofLines = LocalNumberOfLinesadded))
			        invoke MoveExpenseManagementStagingDetail
						invoked.PrmInboundTracker 		 = LocalFSMInboundBODTracker
						invoked.ExpenseReportBOD    	 = ExpenseReportBOD
						invoked.PrmVendorGroup			 	=	LocalERVendorGroup
			            invoked.PrmVendor 					=	LocalERVendor

		CreateExpenseManagementStagingAllocation is an Import Action  	
			restricted			
			Parameters
				ExpenseReportBOD 						is XMLDocument
				PrmInboundTracker   					is like FSMInboundBODTracker 
				PrmVendorGroup			 				is Alpha size 25 
			    PrmVendor 								is Alpha size 9			
			    PrmFinanceEnterpriseGroup 				is Alpha size 25
				PrmNumberofLines						is Numeric size 50
				PrmLocalnumExpAllocLines				is Numeric size 50
				PrmLocalIterator						is Numeric size 50
				PrmDocumentID							is Alpha 50
				PrmGLChartAccount						is Alpha 50
				PrmLocalAccountingEntity				is AlphaUpper 50
				PrmLocalClassificationLength			is Numeric 50
			Local Fields
				LocalExpenseReportAllocLine				is XMLDocument	
				LocalUserArea							is XMLDocument
			Action Rules			
				LocalFSMInboundBODTracker 					= 	PrmInboundTracker
				LocalGenericDelimiter						=	DerivedGenericDelimiter				
				LocalERFinanceEnterpriseGroup				=	PrmFinanceEnterpriseGroup				
				LocalDocumentID								=	PrmDocumentID				
				LocalERVendorGroup							=	PrmVendorGroup				
				LocalERVendor								=	PrmVendor				
				LocalNumberofLines							=	PrmNumberofLines				
				LocalERAllocationLineLength					= 	PrmLocalnumExpAllocLines						
				LocalIterator 								= 	PrmLocalIterator				
				GLChartAccount 								= 	PrmGLChartAccount				
				LocalAccountingEntity   					= 	PrmLocalAccountingEntity				
				LocalClassificationLength					=	PrmLocalClassificationLength				
				LocalAllocLoop	=	1
				while(LocalERAllocationLineLength >= LocalAllocLoop)					
					LocalExpenseReportAllocLine				=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportLine[<LocalIterator>]/ExpenseAllocation[<LocalAllocLoop>]"				
					LocalExpAllocPercent					=	LocalExpenseReportAllocLine select "/ExpenseAllocation/Percent"					
					LocalExpAllocAmount 					= 	LocalExpenseReportAllocLine select "/ExpenseAllocation/Amount"					
					LocalExpAllocBaseAmount  				= 	LocalExpenseReportAllocLine select "/ExpenseAllocation/BaseAmount"					
					LocalAllocBillableIndicator 			= 	LocalExpenseReportAllocLine select "/ExpenseAllocation/BillableIndicator"					
					LocalProject 							=   LocalExpenseReportAllocLine select "/ExpenseAllocation/ProjectReference/ID"					
					LocalCostCenterClassificationType		=   LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/@type"					
					LocalCostCenterClassificationlen 		= 	LocalExpenseReportAllocLine select  "count(/ExpenseAllocation/Classification/Codes/Code)"					
					initialize LocalMultipleAE 					
					initialize LocalCostCenter
					initialize LocalToAccountingEntity
					initialize LocalCostCenterFinanceDimension1					
					initialize LocalCostCenterFinanceDimension2
					initialize LocalCostCenterFinanceDimension3
					initialize LocalCostCenterFinanceDimension4
					initialize LocalCostCenterFinanceDimension5
					initialize LocalCostCenterFinanceDimension6
					initialize LocalCostCenterFinanceDimension7
					initialize LocalCostCenterFinanceDimension8
					initialize LocalCostCenterFinanceDimension9
					initialize LocalCostCenterFinanceDimension10
					
					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop)							
							LocalCodeListID	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]/@listID"							
							LocalCodeValue	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]"							
							if(LocalCodeListID = "Cost Center")
								LocalCostCenter	= LocalCodeValue				  	 
							LocalLoop = LocalLoop + 1
					else
						LocalCostCenter							=	LocalExpenseReportAllocLine select "/ExpenseAllocation/CostCenterCode"
						

					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop) 							
							LocalListID	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]/@sequence"							
							LocalCodeValue	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]"							
        					if (LocalListID = "1")								
       							LocalMultipleAE = LocalCodeValue 					
							LocalLoop = LocalLoop + 1

					if(ExpenseManagementFEGRel exist)
						LocalBODCostCenter = ExpenseManagementFEGRel.BODCostCenter
					else
						LocalBODCostCenter = ""
					
					if(LocalBODCostCenter = "1")
						LocalCostCenterFinanceDimension1 = LocalCostCenter
					else
					if(LocalBODCostCenter = "2")
						LocalCostCenterFinanceDimension2 = LocalCostCenter
					else
					if(LocalBODCostCenter = "3")
						LocalCostCenterFinanceDimension3 = LocalCostCenter
					else
					if(LocalBODCostCenter = "4")
						LocalCostCenterFinanceDimension4 = LocalCostCenter
					else
					if(LocalBODCostCenter = "5")
						LocalCostCenterFinanceDimension5 = LocalCostCenter
					else
					if(LocalBODCostCenter = "6")
						LocalCostCenterFinanceDimension6 = LocalCostCenter
					else
					if(LocalBODCostCenter = "7")
						LocalCostCenterFinanceDimension7 = LocalCostCenter
					else
					if(LocalBODCostCenter = "8")
						LocalCostCenterFinanceDimension8 = LocalCostCenter
					else
					if(LocalBODCostCenter = "9")
						LocalCostCenterFinanceDimension9 = LocalCostCenter
					else
					if(LocalBODCostCenter = "10")
						LocalCostCenterFinanceDimension10 = LocalCostCenter
					else
						LocalCostCenterAccountingUnit	  = LocalCostCenter
					

					if(LocalMultipleAE entered)
						LocalToAccountingEntity= NativeMultipleAccountingEntity
					else
						LocalToAccountingEntity= LocalAccountingEntity
						

					if(LocalCostCenterClassificationType = "CostCenterSegments")
						LocalLoop = 1
						while (LocalCostCenterClassificationlen >= LocalLoop)							
							LocalCodeListID	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]/@listID"							
							LocalCodeValue	= LocalExpenseReportAllocLine select "/ExpenseAllocation/Classification/Codes/Code[<LocalLoop>]"
							
							if(LocalCodeListID = "Finance 1 Dimensions")
								LocalCostCenterFinanceDimension1	= LocalCodeValue		
							if(LocalCodeListID = "Finance 2 Dimensions")
								LocalCostCenterFinanceDimension2	= LocalCodeValue									
							if(LocalCodeListID = "Finance 3 Dimensions")
								LocalCostCenterFinanceDimension3	= LocalCodeValue									
							if(LocalCodeListID = "Finance 4 Dimensions")
								LocalCostCenterFinanceDimension4	= LocalCodeValue									
							if(LocalCodeListID = "Finance 5 Dimensions")
								LocalCostCenterFinanceDimension5	= LocalCodeValue									
							if(LocalCodeListID = "Finance 6 Dimensions")
								LocalCostCenterFinanceDimension6	= LocalCodeValue									
							if(LocalCodeListID = "Finance 7 Dimensions")
								LocalCostCenterFinanceDimension7	= LocalCodeValue									
							if(LocalCodeListID = "Finance 8 Dimensions")
								LocalCostCenterFinanceDimension8	= LocalCodeValue									
							if(LocalCodeListID = "Finance 9 Dimensions")
								LocalCostCenterFinanceDimension9	= LocalCodeValue									
							if(LocalCodeListID = "Finance 10 Dimensions")
								LocalCostCenterFinanceDimension10	= LocalCodeValue									
							LocalLoop = LocalLoop + 1
					else
						LocalLoop = 1
						while (LocalClassificationLength >= LocalLoop) 							
							LocalCodeListID	= ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportLine[<LocalIterator>]/Classification/Codes/Code[<LocalLoop>]/@listID"							
							LocalCodeListID	= ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportLine[<LocalIterator>]/Classification/Codes/Code[<LocalLoop>]"
							
							if(LocalCodeListID = "Finance 1 Dimensions")
								LocalCostCenterFinanceDimension1	= LocalCodeValue									
							if(LocalCodeListID = "Finance 2 Dimensions")
								LocalCostCenterFinanceDimension2	= LocalCodeValue									
							if(LocalCodeListID = "Finance 3 Dimensions")
								LocalCostCenterFinanceDimension3	= LocalCodeValue									
							if(LocalCodeListID = "Finance 4 Dimensions")
								LocalCostCenterFinanceDimension4	= LocalCodeValue									
							if(LocalCodeListID = "Finance 5 Dimensions")
								LocalCostCenterFinanceDimension5	= LocalCodeValue									
							if(LocalCodeListID = "Finance 6 Dimensions")
								LocalCostCenterFinanceDimension6	= LocalCodeValue									
							if(LocalCodeListID = "Finance 7 Dimensions")
								LocalCostCenterFinanceDimension7	= LocalCodeValue									
							if(LocalCodeListID = "Finance 8 Dimensions")
								LocalCostCenterFinanceDimension8	= LocalCodeValue									
							if(LocalCodeListID = "Finance 9 Dimensions")
								LocalCostCenterFinanceDimension9	= LocalCodeValue									
							if(LocalCodeListID = "Finance 10 Dimensions")
								LocalCostCenterFinanceDimension10	= LocalCodeValue									
							LocalLoop = LocalLoop + 1

					if ( LocalAllocBillableIndicator = "true")
   						LocalAllocBillable = 1						
					else
    					LocalAllocBillable = 0
						
					if(LocalProject entered)
						LocalProject  = NativeProject  
					else
						LocalProject = ""


					if(DerivedConfigDocID = "Y")  
						LocalProject 					=   LocalExpenseReportAllocLine select "/ExpenseAllocation/ProjectReference/ID"
						LocalAccountingEntityID			=	LocalAccountingEntity  
						LocalAccountingEntity			=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportLine[<LocalIterator>]/ExpenseType/ExpenseCode/@accountingEntity"

						if(LocalCostCenterClassificationType = "CostCenterSegments")
							LocalAccountingEntity = LocalMultipleAE

						if(DESTAEVSCSFAECleanDocIDRel.DestinationValue entered)
							LocalCrossRefValue	= DESTAEVSCSFAECleanDocIDRel.DestinationValue
						else
							LocalCrossRefValue  = LocalAccountingEntity
						
						if(DerivedConfigFEG != "Y")
							LocalToAccountingEntity = LocalCrossRefValue
						else
						if(DerivedConfigFEG = "Y")	
							if(LocalCrossRefValue entered)
								LocalToAccountingEntity = NativeERAccountingEntity
							else
								LocalToAccountingEntity = ""
						LocalAccountingEntity = LocalAccountingEntityID  

						
					invoke Create ExpenseManagementStagingAllocation
						resume on error
							Error            								= true
							ErrorMessage     								= error message
						invoked.VendorGroup									=	LocalERVendorGroup						
						invoked.ExpenseManagementStagingHeader				=	LocalDocumentID		
						invoked.ExpenseManagementStagingDetail				=	LocalNumberofLines						
						invoked.Percentage									=	LocalExpAllocPercent						
						invoked.BaseAmount 									= 	LocalExpAllocBaseAmount	
						invoked.Amount										=	LocalExpAllocAmount
						invoked.Billable 									= 	LocalAllocBillable
						invoked.FinanceStructure.ToAccountingEntity			=   LocalToAccountingEntity
						invoked.FinanceStructure.GeneralLedgerChartAccount	= 	GLChartAccount
						invoked.FinanceStructure.AccountingUnit				=	LocalCostCenterAccountingUnit
						invoked.FinanceStructure.Project					=	LocalProject			
						invoked.FinanceStructure.FinanceDimension1			=	LocalCostCenterFinanceDimension1
						invoked.FinanceStructure.FinanceDimension2			=	LocalCostCenterFinanceDimension2
						invoked.FinanceStructure.FinanceDimension3			=	LocalCostCenterFinanceDimension3
						invoked.FinanceStructure.FinanceDimension4			=	LocalCostCenterFinanceDimension4
						invoked.FinanceStructure.FinanceDimension5			=	LocalCostCenterFinanceDimension5
						invoked.FinanceStructure.FinanceDimension6			=	LocalCostCenterFinanceDimension6
						invoked.FinanceStructure.FinanceDimension7			=	LocalCostCenterFinanceDimension7
						invoked.FinanceStructure.FinanceDimension8			=	LocalCostCenterFinanceDimension8
						invoked.FinanceStructure.FinanceDimension9			=	LocalCostCenterFinanceDimension9
						invoked.FinanceStructure.FinanceDimension10			=	LocalCostCenterFinanceDimension10		
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp						
						invoke SyncExpenseReportConfirmBOD
							invoked.PrmErrorMessage 			= ErrorMessage
							invoked.ExpenseReportBOD     		= ExpenseReportBOD
							invoked.PrmTrackerID 				= LocalFSMInboundBODTracker 
							invoked.PrmLocalAccountingEntity 	= LocalAccountingEntity 							
							LocalAllocLoop = LocalERAllocationLineLength + 1
					else
						LocalAllocLoop = LocalAllocLoop + 1
						
		MoveExpenseManagementStagingDetail is an Import Action  	
			restricted			
			Parameters
				ExpenseReportBOD 						is XMLDocument
				PrmInboundTracker   					is like FSMInboundBODTracker 
				PrmVendorGroup			 				is Alpha size 25 
			    PrmVendor 								is Alpha size 9
			Action Rules			
				LocalFSMInboundBODTracker 				= 	PrmInboundTracker	
				LocalGenericDelimiter					=	DerivedGenericDelimiter
				LocalERVendorGroup						=	PrmVendorGroup
				LocalERVendor							=	PrmVendor
				LocalDocID								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalDocumentID							=   LocalDocID[3:10]
				invoke Move ExpenseManagementStagingHeaderRel
					resume on error
	               		Error            									= true
	                    ErrorMessage     									= error message
	            if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= ErrorMessage
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SyncExpenseReportConfirmBOD
						invoked.PrmErrorMessage 			= ErrorMessage
						invoked.ExpenseReportBOD     		= ExpenseReportBOD
	                	invoked.PrmTrackerID 				= LocalFSMInboundBODTracker 
	                	invoked.PrmLocalAccountingEntity 	= LocalAccountingEntity 
	            else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp          	
                    
        SyncExpenseReportConfirmBOD is an Instance Action
			restricted			
			Parameters
				ExpenseReportBOD 							is XMLDocument
				PrmErrorMessage 							is Alpha 300
				PrmTrackerID								is Numeric 15
				PrmLocalAccountingEntity					is AlphaUpper 15
				
			Action Rules       
				LocalComponentID						=	ExpenseReportBOD select "//ApplicationArea/Sender/ComponentID"
				LocalOrginalCreateDateTime				=	ExpenseReportBOD select "//ApplicationArea/CreationDateTime"
				LocalOriginalBODID						=	ExpenseReportBOD select "//ApplicationArea/BODID"
				LocalTrackerID							= 	PrmTrackerID
				LocalToLogicalId						=	ExpenseReportBOD select "//ApplicationArea/Sender/LogicalID"
				LocalDocID								=	ExpenseReportBOD select "//DataArea/ExpenseReport/ExpenseReportHeader/DocumentID/ID"
				LocalAccountingEntity					=	PrmLocalAccountingEntity
				LocalBODID							    =   "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + "location" + ":" + LocalDocID + ":" + "revision" +"?BOD&verb=Confirm&LocalTrackerID=" + LocalTrackerID
				LocalErrorMessage						=	PrmErrorMessage
				LocalMainUserTemplate					= 	"IONSyncExpenseReport_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncExpenseReportConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocID  
#endif
#endif																					


		SyncPersonnelBODImport is an Import Action
			restricted
			bod type is Sync.Personnel			
			Parameters
				PersonnelBOD 		 is XMLDocument	
			Action Rules
				LocalBODXML					 	  = PersonnelBOD
				LocalGenericDelimiter        	  = DerivedGenericDelimiter
				LocalDocumentID   	 	 	 	  = PersonnelBOD select "//DataArea/Personnel/ID[1]"
				LocalAccountingEntity   	 	  = PersonnelBOD select "//DataArea/Sync/AccountingEntityID"
				LocalBODID                   	  = PersonnelBOD select "//ApplicationArea/BODID"
				LocalVariationID			 	  = PersonnelBOD select "//DataArea/Personnel/ID[1]/@variationID"
				LocalFinanceEnterpriseGroup 	  = DerivedPersonnelFinanceEnterpriseGroup
				ActionCode					 	  = PersonnelBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				if(FSMBODConfigurationPersonnelRel exists and FSMBODConfigurationPersonnelRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "Personnel"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODVariationID			= LocalVariationID
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODVariationID			= LocalVariationID
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					if(ActionCode entered)
						invoke PersonnelBODReadingValues
							invoked.PersonnelBOD          		= PersonnelBOD
			                invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
		        else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "Personnel"
						invoked.Direction				= 2					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "SyncPersonnel Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "SyncPersonnel Inbound BOD Service is not Enabled"
								
		PersonnelBODReadingValues is an Import Action
			restricted
			Parameters
				PersonnelBOD 				is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
			Action Rules
				LocalFSMInboundBODTracker 		  = PrmInboundTracker
				LocalBODXML					 	  = PersonnelBOD
				LocalGenericDelimiter        	  = DerivedGenericDelimiter
				LocalEmployee					  = PersonnelBOD select "//DataArea/Personnel/ID[1]"
				ActionCode					 	  = PersonnelBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalEmployeeName			      = PersonnelBOD select "//DataArea/Personnel/Name"
				LocalEmployeeCountryCode	      = PersonnelBOD select "//DataArea/Personnel/Address[1]/CountryCode"
				LocalEmployeeAddressLine1 		  = PersonnelBOD select "//DataArea/Personnel/Address[1]/AddressLine[1]"
				LocalEmployeeAddressLine2		  = PersonnelBOD select "//DataArea/Personnel/Address[1]/AddressLine[2]"
				LocalEmployeeAddressLine3		  = PersonnelBOD select "//DataArea/Personnel/Address[1]/AddressLine[3]"
				LocalEmployeeAddressLine4 		  = PersonnelBOD select "//DataArea/Personnel/Address[1]/AddressLine[4]"
				LocalEmployeeStateProvinance	  = PersonnelBOD select "//DataArea/Personnel/Address[1]/CountrySubDivisionCode[1]"
				LocalEmployeeCity				  = PersonnelBOD select "//DataArea/Personnel/Address[1]/CityName"
				LocalEmployeePostalCode			  = PersonnelBOD select "//DataArea/Personnel/Address[1]/PostalCode"
				LocalCommunicationLength 		  = PersonnelBOD select "count(//DataArea/Personnel/Communication)"
				LocalStatusCode					  = PersonnelBOD select "//DataArea/Personnel/Status/Code"
				if(LocalStatusCode = "Open" or LocalStatusCode = "Working")
					LocalActive = "A"
				else
					LocalActive = "I"
				LocalFinanceEnterpriseGroup 	  = DerivedPersonnelFinanceEnterpriseGroup
				
				LocalIterator					  = 1
				while(LocalCommunicationLength >= LocalIterator)
					LocalChannelCode 	= PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/ChannelCode"
					LocalUseCode	    = PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/UseCode"
					LocalDialNumber	 	= PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/DialNumber"
					LocalURI		 	= PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/URI"
					LocalExtension	 	= PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/Extension"
					LocalCountryDialing	= PersonnelBOD select "//DataArea/Personnel/Communication[<LocalIterator>]/CountryDialing"
					if(LocalChannelCode = "Phone" and LocalUseCode = "Office")
						LocalEmployeePhoneNumber 	= LocalDialNumber
						LocalEmployeePhonePrefix 	= LocalCountryDialing
						LocalEmployeePhoneExtension	= LocalExtension
					if(LocalChannelCode = "EMail" and LocalUseCode = "Office")
						LocalEmployeeEmail = LocalURI
					LocalIterator = LocalIterator +1
			
				if(ExpenseManagementInterfaceConfigurationRel exists)
					LocalExpVendorGroup 			= ExpenseManagementInterfaceConfigurationRel.DefaultVendorGroup
					LocalExpVendorClass				= ExpenseManagementInterfaceConfigurationRel.DefaultVendorClass
					LocalExpVendorAddressLine1		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.DeliveryAddress.AddressLine1
					LocalExpVendorAddressLine2		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.DeliveryAddress.AddressLine2
					LocalExpVendorAddressLine3		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.DeliveryAddress.AddressLine3
					LocalExpVendorAddressLine4		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.DeliveryAddress.AddressLine4
					LocalExpVendorStateProvince		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.StateProvince
					LocalExpVendorMunicipality		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.Municipality
					LocalExpVendorCountry			= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.Country
					LocalExpVendorPostalCode		= ExpenseManagementInterfaceConfigurationRel.DefaultPostalAddress.PostalCode
					LocalExpUseDefaultAddressOnly 	= ExpenseManagementInterfaceConfigurationRel.UseDefaultPostalAddressOnly
					
				if(LocalExpUseDefaultAddressOnly = "true")
					LocalVendorAddressLine1	= LocalExpVendorAddressLine1
					LocalVendorAddressLine2	= LocalExpVendorAddressLine2
					LocalVendorAddressLine3	= LocalExpVendorAddressLine3
					LocalVendorAddressLine4	= LocalExpVendorAddressLine4
					LocalVendorStateProvince= LocalExpVendorStateProvince
					LocalVendorMunicipality	= LocalExpVendorMunicipality
					LocalVendorCountry		= LocalExpVendorCountry
					LocalVendorPostalCode	= LocalExpVendorPostalCode
				else
					LocalVendorAddressLine1	= LocalEmployeeAddressLine1
					LocalVendorAddressLine2	= LocalEmployeeAddressLine2
					LocalVendorAddressLine3	= LocalEmployeeAddressLine3
					LocalVendorAddressLine4	= LocalEmployeeAddressLine4
					LocalVendorStateProvince= LocalEmployeeStateProvinance
					LocalVendorMunicipality	= LocalEmployeeCity
					LocalVendorCountry		= LocalEmployeeCountryCode
					LocalVendorPostalCode	= LocalEmployeePostalCode
					
				if(LocalVendorPostalCode entered)
					LocalVendorAddressType = "1"
				else
					LocalVendorAddressType = "0"
				
				LocalDepositLength 		 = PersonnelBOD select "count(//DataArea/Personnel/DirectDepositInstruction)"
				if(LocalDepositLength > 0)
					LocalAccountNumber = PersonnelBOD select "//DataArea/Personnel/DirectDepositInstruction/FinancialParty/FinancialAccount/AccountIDs/ID"
					LocalTaxIDLength   = PersonnelBOD select "count(//DataArea/Personnel/DirectDepositInstruction/FinancialParty/PartyIDs/TaxID)"
					LocalIterator	   = 1
					while(LocalTaxIDLength >= LocalIterator)
						LocalNameValue = PersonnelBOD select "//DataArea/Personnel/DirectDepositInstruction/FinancialParty/PartyIDs/TaxID[<LocalIterator>]/@schemeName"
						if (LocalNameValue = "Routing Number")
       						LocalBankEntity = PersonnelBOD select "//DataArea/Personnel/DirectDepositInstruction/FinancialParty/PartyIDs/TaxID[<LocalIterator>]"
       					LocalIterator = LocalIterator +1
       			LocalBusinessGroup 	  = LocalExpVendorGroup
       			LocalBankEntityLength	  = LocalBankEntity	size
       			LocalIterator		  = 1
       			if(LocalVendorCountry	= "US" or LocalVendorCountry  ="CA")
       				if(LocalBankEntityLength > 0)
       					LocalRemaniningLength	= 9 - LocalBankEntityLength
       					while (LocalRemaniningLength >= LocalIterator)
       						LocalBankEntity		= "0" + LocalBankEntity
       					    LocalIterator = LocalIterator + 1
				if((ActionCode = "Add" or ActionCode = "Replace" or ActionCode = "Change") and ByEmployeeVendorRel not exists)
					invoke CreateVendor
						invoked.PersonnelBOD          		= PersonnelBOD
		                invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
		                invoked.PrmVendorName				= LocalEmployeeName
		                invoked.PrmVendorCountryCode		= LocalVendorCountry
		                invoked.PrmVendorAddressLine1		= LocalVendorAddressLine1
		                invoked.PrmVendorAddressLine2		= LocalVendorAddressLine2
		                invoked.PrmVendorAddressLine3		= LocalVendorAddressLine3
		                invoked.PrmVendorAddressLine4		= LocalVendorAddressLine4
		                invoked.PrmVendorStateProvinance	= LocalVendorStateProvince
		                invoked.PrmVendorCity				= LocalVendorMunicipality
		                invoked.PrmVendorPostalCode			= LocalVendorPostalCode
		                invoked.PrmVendorPhoneNumber		= LocalEmployeePhoneNumber
		                invoked.PrmVendorEmail				= LocalEmployeeEmail
		                invoked.PrmActive					= LocalActive
		                invoked.PrmVendorGroup				= LocalExpVendorGroup
		                invoked.PrmVendorClass				= LocalExpVendorClass
		                invoked.PrmVendorPhonePrefix 		= LocalEmployeePhonePrefix
						invoked.PrmVendorPhoneExtension		= LocalEmployeePhoneExtension
						invoked.PrmEmployee					= LocalEmployee
						invoked.PrmVendorAddressType		= LocalVendorAddressType
						invoked.PrmBankEntity				= LocalBankEntity
						invoked.PrmAccountNumber			= LocalAccountNumber
				else
				if(ActionCode = "Add" and ByEmployeeVendorRel exists)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= "Vendor Already Exists"
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendSPersonnelConfirmBOD
						invoked.PrmErrorMessage 			= "Vendor Already Exists"
						invoked.PersonnelBOD      			= PersonnelBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
					invoke FindVendor
						invoked.PersonnelBOD          		= PersonnelBOD
		                invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
		                invoked.PrmVendorName				= LocalEmployeeName
		                invoked.PrmVendorCountryCode		= LocalVendorCountry
		                invoked.PrmVendorAddressLine1		= LocalVendorAddressLine1
		                invoked.PrmVendorAddressLine2		= LocalVendorAddressLine2
		                invoked.PrmVendorAddressLine3		= LocalVendorAddressLine3
		                invoked.PrmVendorAddressLine4		= LocalVendorAddressLine4
		                invoked.PrmVendorStateProvinance	= LocalVendorStateProvince
		                invoked.PrmVendorCity				= LocalVendorMunicipality
		                invoked.PrmVendorPostalCode			= LocalVendorPostalCode
		                invoked.PrmVendorPhoneNumber		= LocalEmployeePhoneNumber
		                invoked.PrmVendorEmail				= LocalEmployeeEmail
		                invoked.PrmActive					= LocalActive
		                invoked.PrmVendorGroup				= LocalExpVendorGroup
		                invoked.PrmVendorClass				= LocalExpVendorClass
		                invoked.PrmVendorPhonePrefix 		= LocalEmployeePhonePrefix
						invoked.PrmVendorPhoneExtension		= LocalEmployeePhoneExtension
						invoked.PrmEmployee					= LocalEmployee
						invoked.PrmActionCode				= ActionCode
						invoked.PrmVendorAddressType		= LocalVendorAddressType
						invoked.PrmBankEntity				= LocalBankEntity
						invoked.PrmAccountNumber			= LocalAccountNumber
			
		CreateVendor 	is an Import Action
			restricted
			Parameters
				PersonnelBOD 				is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmVendorName   			is Alpha 120
				PrmVendorCountryCode     	is Alpha 3
				PrmVendorAddressLine1 		is Alpha 40
				PrmVendorAddressLine2 		is Alpha 40
				PrmVendorAddressLine3		is Alpha 40
				PrmVendorAddressLine4		is Alpha 40
				PrmVendorStateProvinance	is Alpha 3
				PrmVendorCity				is Alpha 58
				PrmVendorPostalCode			is Alpha 12
				PrmVendorPhoneNumber		is Alpha 15
				PrmVendorPhonePrefix		is Alpha 6
				PrmVendorPhoneExtension		is Alpha 10
				PrmEmployee					is Numeric 13
				PrmVendorEmail 				is an EmailAddressMulti 
					holds pii
				PrmActive					is Alpha 1
				PrmVendorGroup				is Alpha 5
				PrmVendorClass				is Alpha 5
				PrmVendorAddressType		is Alpha 20
				PrmBankEntity				is Alpha 30
				PrmAccountNumber			is AlphaUpper 35
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalVendorName					= PrmVendorName
				LocalVendorCountry				= PrmVendorCountryCode
				LocalVendorAddressLine1 		= PrmVendorAddressLine1
				LocalVendorAddressLine2 		= PrmVendorAddressLine2
				LocalVendorAddressLine3 		= PrmVendorAddressLine3
				LocalVendorAddressLine4 		= PrmVendorAddressLine4
				LocalVendorStateProvince	  	= PrmVendorStateProvinance
				LocalVendorMunicipality			= PrmVendorCity
				LocalVendorPostalCode			= PrmVendorPostalCode
				LocalVendorPhoneNumber 			= PrmVendorPhoneNumber
				LocalVendorPhonePrefix			= PrmVendorPhonePrefix
				LocalVendorPhoneExtension		= PrmVendorPhoneExtension
				LocalEmployee					= PrmEmployee
				LocalVendorEmail 				= PrmVendorEmail
				LocalActive 					= PrmActive
				LocalBusinessGroup 				= PrmVendorGroup
				LocalVendorClass 				= PrmVendorClass
				LocalVendorAddressType			= PrmVendorAddressType
				LocalBankEntity					= PrmBankEntity
				LocalAccountNumber				= PrmAccountNumber
				
				invoke Create Vendor
					resume on error
               			Error            							   	= true
                    	ErrorMessage     							   	= error message 
					invoked.VendorGroup 							   	= LocalBusinessGroup
					invoked.VendorStatus		   						= LocalActive
					invoked.VendorName      				  			= LocalVendorName
					invoked.VendorSearchName							= LocalVendorName
					invoked.LegalName									= LocalVendorName
					invoked.VendorClass 								= LocalVendorClass
					invoked.VendorAddress.DeliveryAddress.AddressLine1 	= LocalVendorAddressLine1
					invoked.VendorAddress.DeliveryAddress.AddressLine2 	= LocalVendorAddressLine2
					invoked.VendorAddress.DeliveryAddress.AddressLine3 	= LocalVendorAddressLine3
					invoked.VendorAddress.DeliveryAddress.AddressLine4  = LocalVendorAddressLine4
					invoked.VendorAddress.Municipality 				   	= LocalVendorMunicipality
					invoked.VendorAddress.PostalCode 			   		= LocalVendorPostalCode
					invoked.VendorAddress.StateProvince 				= LocalVendorStateProvince
					invoked.VendorAddress.Type							= LocalVendorAddressType
					invoked.Employee 								   	= LocalEmployee
					invoked.VendorAddress.Country 			   			= LocalVendorCountry
					invoked.EmailAddress								= LocalVendorEmail
					invoked.PhoneNumber.InternationalPrefix				= LocalVendorPhonePrefix
					invoked.PhoneNumber.Extension						= LocalVendorPhoneExtension
					invoked.PhoneNumber.SubscriberNumber				= LocalVendorPhoneNumber
					invoked.BankAccountNumber							= LocalAccountNumber
					invoked.BankEntity									= LocalBankEntity
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 									= Error
						invoked.ErrorMessage 							= ErrorMessage
						invoked.Status									= 2
						invoked.CloseDate								= system current timestamp
					invoke SendSPersonnelConfirmBOD
						invoked.PrmErrorMessage 						= ErrorMessage
						invoked.PersonnelBOD      						= PersonnelBOD
						invoked.PrmTrackerID							= LocalFSMInboundBODTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp
						
		FindVendor 	is an Import Action
			restricted
			Parameters
				PersonnelBOD 				is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmVendorName   			is Alpha 120
				PrmVendorCountryCode     	is Alpha 3
				PrmVendorAddressLine1 		is Alpha 40
				PrmVendorAddressLine2 		is Alpha 40
				PrmVendorAddressLine3		is Alpha 40
				PrmVendorAddressLine4		is Alpha 40
				PrmVendorStateProvinance	is Alpha 3
				PrmVendorCity				is Alpha 58
				PrmVendorPostalCode			is Alpha 12
				PrmVendorPhoneNumber		is Alpha 15
				PrmVendorPhonePrefix		is Alpha 6
				PrmVendorPhoneExtension		is Alpha 10
				PrmEmployee					is Numeric 13
				PrmVendorEmail 				is an EmailAddressMulti 
					holds pii
				PrmActive					is Alpha 1
				PrmVendorGroup				is Alpha 5
				PrmVendorClass				is Alpha 5
				PrmActionCode				is Alpha 9
				PrmVendorAddressType		is Alpha 20
				PrmBankEntity				is Alpha 30
				PrmAccountNumber			is AlphaUpper 35
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalVendorName					= PrmVendorName
				LocalVendorCountry				= PrmVendorCountryCode
				LocalVendorAddressLine1 		= PrmVendorAddressLine1
				LocalVendorAddressLine2 		= PrmVendorAddressLine2
				LocalVendorAddressLine3 		= PrmVendorAddressLine3
				LocalVendorAddressLine4 		= PrmVendorAddressLine4
				LocalVendorStateProvince	  	= PrmVendorStateProvinance
				LocalVendorMunicipality			= PrmVendorCity
				LocalVendorPostalCode			= PrmVendorPostalCode
				LocalVendorPhoneNumber 			= PrmVendorPhoneNumber
				LocalVendorPhonePrefix			= PrmVendorPhonePrefix
				LocalVendorPhoneExtension		= PrmVendorPhoneExtension
				LocalEmployee					= PrmEmployee
				LocalVendorEmail 				= PrmVendorEmail
				LocalActive 					= PrmActive
				LocalBusinessGroup 				= PrmVendorGroup
				LocalVendorClass 				= PrmVendorClass
				ActionCode						= PrmActionCode
				LocalVendorAddressType			= PrmVendorAddressType
				LocalBankEntity					= PrmBankEntity
				LocalAccountNumber				= PrmAccountNumber
				if(ByEmployeeVendorRel exists)
					LocalVendor	= last ByEmployeeVendorRel.Vendor
				if(ByEmployeeVendorRel exists and (ActionCode = "Replace" or ActionCode = "Change"))
					if(VendorAddressRel exists)	
						if(VendorAddressRel.PostalAddress.Type = LocalVendorAddressType and VendorAddressRel.PostalAddress.DeliveryAddress.AddressLine1 = LocalVendorAddressLine1
						 	and VendorAddressRel.PostalAddress.DeliveryAddress.AddressLine2 = LocalVendorAddressLine2 and VendorAddressRel.PostalAddress.DeliveryAddress.AddressLine3 = LocalVendorAddressLine3
							and VendorAddressRel.PostalAddress.DeliveryAddress.AddressLine4 = LocalVendorAddressLine4 and VendorAddressRel.PostalAddress.Municipality = LocalVendorMunicipality
							and VendorAddressRel.PostalAddress.PostalCode = LocalVendorPostalCode and VendorAddressRel.PostalAddress.StateProvince = LocalVendorStateProvince
							and VendorAddressRel.PostalAddress.Country = LocalVendorCountry)
							LocalSupplierBODTrigger = false
						else
							LocalSupplierBODTrigger = true
					else
						LocalSupplierBODTrigger = true
					invoke Update VendorsRel
						resume on error
	                   		Error            								= true
	                        ErrorMessage     								= error message 
	                    invoked.VendorGroup 							   	= LocalBusinessGroup
	                    invoked.Vendor										= LocalVendor
						invoked.VendorStatus		   						= LocalActive
						invoked.VendorName      				  			= LocalVendorName
						invoked.VendorSearchName							= LocalVendorName
						invoked.LegalName									= LocalVendorName
						invoked.VendorClass 								= LocalVendorClass
						invoked.Employee 								   	= LocalEmployee
						invoked.EmailAddress								= LocalVendorEmail
						invoked.PhoneNumber.InternationalPrefix				= LocalVendorPhonePrefix
						invoked.PhoneNumber.Extension						= LocalVendorPhoneExtension
						invoked.PhoneNumber.SubscriberNumber				= LocalVendorPhoneNumber
						invoked.BypassSupplierBODTrigger 					= LocalSupplierBODTrigger
						invoked.BankAccountNumber							= LocalAccountNumber
						invoked.BankEntity									= LocalBankEntity
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 									= Error
							invoked.ErrorMessage 							= ErrorMessage
							invoked.Status									= 2
							invoked.CloseDate								= system current timestamp
						invoke SendSPersonnelConfirmBOD
							invoked.PrmErrorMessage 						= ErrorMessage
							invoked.PersonnelBOD      						= PersonnelBOD
							invoked.PrmTrackerID							= LocalFSMInboundBODTracker
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update VendorAddressRel
							resume on error
		               			Error            							   	= true
		                    	ErrorMessage     							   	= error message 
							invoked.VendorGroup 							   	= LocalBusinessGroup
							invoked.Vendor										= LocalVendor
							invoked.PostalAddress.Type							= LocalVendorAddressType
							invoked.PostalAddress.DeliveryAddress.AddressLine1 	= LocalVendorAddressLine1
							invoked.PostalAddress.DeliveryAddress.AddressLine2 	= LocalVendorAddressLine2
							invoked.PostalAddress.DeliveryAddress.AddressLine3 	= LocalVendorAddressLine3
							invoked.PostalAddress.DeliveryAddress.AddressLine4  = LocalVendorAddressLine4
							invoked.PostalAddress.Municipality 				   	= LocalVendorMunicipality
							invoked.PostalAddress.PostalCode 			   		= LocalVendorPostalCode
							invoked.PostalAddress.StateProvince 				= LocalVendorStateProvince
							invoked.PostalAddress.Country 			   			= LocalVendorCountry
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 									= Error
								invoked.ErrorMessage 							= ErrorMessage
								invoked.Status									= 2
								invoked.CloseDate								= system current timestamp
							invoke SendSPersonnelConfirmBOD
								invoked.PrmErrorMessage 						= ErrorMessage
								invoked.PersonnelBOD      						= PersonnelBOD
								invoked.PrmTrackerID							= LocalFSMInboundBODTracker
						if(!FSMInboundBODTrackerRel.Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp	
		        else        
				if(ByEmployeeVendorRel exists and (ActionCode = "Delete"))
					invoke Delete VendorsRel
						resume on error
	                   		Error            					= true
	                        ErrorMessage     					= error message
	                         
	                if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
						invoke SendSPersonnelConfirmBOD
							invoked.PrmErrorMessage 			= ErrorMessage
							invoked.PersonnelBOD      			= PersonnelBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp	
				else        
				if(ByEmployeeVendorRel not exists and (ActionCode = "Delete"))			
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 						= Error
						invoked.ErrorMessage 				= "Unable to find Vendor"+" " +LocalVendor+" "+"to Delete"
						invoked.Status						= 2
						invoked.CloseDate					= system current timestamp
					invoke SendSPersonnelConfirmBOD
						invoked.PrmErrorMessage 			= "Unable to find Vendor"+" " +LocalVendor+" "+"to Delete"
						invoked.PersonnelBOD      			= PersonnelBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							
		SendSPersonnelConfirmBOD is an Instance Action
			restricted			
			Parameters
				PersonnelBOD 			is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
			Action Rules
				LocalSPersonnelXML					= PersonnelBOD
				LocalErrorMessage					= PrmErrorMessage
				LocalTrackerID						= PrmTrackerID
				LocalAccountingEntity				= PersonnelBOD select "//DataArea/Sync/AccountingEntityID"
				LocalFromLogicalID					= PersonnelBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID					= PersonnelBOD select "//ApplicationArea/Sender/ComponentID"
				LocalBODID							= PersonnelBOD select "//ApplicationArea/BODID"
				LocalDocumentID						= PersonnelBOD select "//DataArea/Personnel/ID[1]"
				LocalOriginalCreateDateTime			= PersonnelBOD select "//ApplicationArea/CreationDateTime"
				LocalConfirmBOD						= "true"
				LocalMainUserTemplate				= "IONSyncPersonnel_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncPersonnelConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID	


		AcknowledgeSupplierPartyMasterImport is an Import Action
			restricted
			bod type is Acknowledge.SupplierPartyMaster			
			Parameters
				AckSupplierPartyMasterBOD 		is XMLDocument
			Action Rules
				LocalBODXML 			= AckSupplierPartyMasterBOD
				LocalDocumentID			= AckSupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID"
				LocalAccountingEntity	= AckSupplierPartyMasterBOD select "//DataArea/Acknowledge/AccountingEntityID"
				LocalBODID				= AckSupplierPartyMasterBOD select "//ApplicationArea/BODID"
				LocalVariationID		= AckSupplierPartyMasterBOD select "//DataArea/SupplierPartyMaster/PartyIDs/ID/@variationID"
				LocalBusinessGroup 		= FSMBODCrossReferenceDetailRel.DestinationValue
				LocalVendor				= LocalDocumentID
				
				if(FSMBODConfigurationAckSupplierPartyMasterRel exists and FSMBODConfigurationAckSupplierPartyMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 5
							invoked.Noun 					= "SupplierPartyMaster"
							invoked.Direction				= 2					
							invoked.Vendor					= LocalVendor
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 3
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker					
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Vendor					= LocalVendor
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 3
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage	
					
					if(VendorsRel exists)
						invoke UpdateVendorReferenceField VendorsRel
							resume on error
	                   			Error            			= true
	                        	ErrorMessage     			= error message
							invoked.PrmReference1  			= LocalVendor
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 				= Error
								invoked.ErrorMessage 		= ErrorMessage
								invoked.Status				= 2
								invoked.CloseDate			= system current timestamp
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status				= 3
								invoked.CloseDate			= system current timestamp
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= true
							invoked.ErrorMessage 			= "Vendor does not exist"
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 5
						invoked.Noun 					= "SupplierPartyMaster"
						invoked.Direction				= 2					
						invoked.Vendor					= LocalVendor
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Acknowledge SupplierPartyMaster Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Vendor					= LocalVendor
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Acknowledge SupplierPartyMaster Inbound BOD Service is not Enabled"
					

