Question is a BusinessClass
	owned by procurement
	prefix is QUES

	Patterns
		implements Resequence on QuestionDisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

	Ontology
		symbolic key is Question

	Persistent Fields
		QuestionText 					is Text
			sql name is SRCHQUE
			text searchable
		ResponseType 					is Numeric size 2
	 		States
   				Text 	  	value is 1
   				Number 	  	value is 2
   				Date 	  	value is 3
   				List 	  	value is 4
   				YesNo 	  	value is 5
   				YesNoText 	value is 6
				Rebate	  	value is 7
		Category
		SubCategory
		ContractType
		ContractSubtype
		ContractClassification
		ContractSubclassification
		Attachment
		DefineCorrectAnswer				is Boolean
		UsedForContractInterview		is Boolean
		LastQuestionAnswerDisplayOrder	is Numeric size 6
		QuestionDisplayOrder			is a DisplayOrder
		Active							is Boolean
		ResponseRules            		is Numeric size 1
			States
				NotRequired                             value is 1
				ResponseRequired                        value is 2
				ResponseRequiredAndAttachmentRequired   value is 3
		YesNoResponseRules       is Numeric size 1
			default label is "ResponseRules"
			States
				NotRequired                                 value is 1
				ResponseRequired                            value is 2
				ResponseRequiredAndAttachmentRequired       value is 3
				ResponseRequiredAndAttachmentRequiredIfYes  value is 4
				ResponseRequiredAndAttachmentRequiredIfNo   value is 5
		YesNoTextResponseRules   is Numeric size 1
			default label is "ResponseRules"
			States
				NotRequired                                         value is 1
				ResponseRequiredAndTextResponseRequired             value is 2
				ResponseRequiredAndTextOrAttachmentRequired         value is 3
				ResponseRequiredAndTextOrAttachmentRequiredIfYes    value is 4
				ResponseRequiredAndTextOrAttachmentRequiredIfNo     value is 5
				ResponseRequiredAndTextAndAttachmentRequired        value is 6
				ResponseRequiredAndTextAndAttachmentRequiredIfYes   value is 7
				ResponseRequiredAndTextAndAttachmentRequiredIfNo    value is 8
		AllowResponseAttachment			is Boolean

	Transient Fields
		NewDisplayOrder					is a DisplayOrder

	Local Fields
		LocalCheckContract
		LocalCompany			is like Company 
		LocalSourcingEvent		is like SourcingEvent 
		LocalSourcingEventLine	is Numeric size 8
		LocalSupplierGroup      is like SupplierGroup
		IsConditionalQuestion   is Boolean
		LocalQuestion 			is like Question
		LocalSupplier			is like Supplier

	Field Groups
		UpdateGroup
			QuestionText
			ResponseType
			Attachment
			DefineCorrectAnswer
			ResponseRules
			YesNoResponseRules
			YesNoTextResponseRules

	Conditions
		Exists
			restricted
			when (Question exists)

		HasConditionalQuestions 
			when (ConditionalQuestionsRel exists)
		
		HasDirectConditionalQuestions 
			when (ConditionalQuestionsDirectRel exists)
		
		ReferencedAsConditional
			when (ThisQuestionConditionalRel exists)
		
		CanAttachTerms
			restricted
			when ((ResponseType.Text
			or 	   ResponseType.Number
			or 	   ResponseType.Date)
			and    UsedForContractInterview)

		AttachedToContracts
			restricted
			when (AllContractsRel exists)

		AttachedToSourcingEvents
			restricted
			when (AllSourcingEventsRel exists)

		AttachedToSourcingEventLines
			restricted
			when (AllSourcingEventLinesRel exists)

		AttachedToSupplierGroup
			restricted
			when (AllSupplierGroupQuestionsRel exists)

		AttachedToOpenEvents
			restricted
			when (AllOpenSourcingEventsRel exists
			or    AllOpenSourcingEventLinesRel exists)

		AttachedToEventsNotClosedOrCancelled
			restricted
			when (AllSourcingEventsNotClosedOrCancelledRel exists
			or    AllSourcingEventLinesNotClosedOrCancelledRel exists)

		AttachedToOpenContracts
			restricted
			when (AllOpenContractsRel exists)

		IsYesNoOrList 
			restricted 
			when (IsYesNo
			or    ResponseType.List)
		
		IsYesNo
			restricted
			when (ResponseType.YesNo
			or	  ResponseType.YesNoText)

		IsYesNoText 
			restricted 
			when (ResponseType.YesNoText)

		IsYesNoOnly 
			restricted 
			when (ResponseType.YesNo)
		
		IsListQuestionWithoutAnswers
			restricted
			when (ResponseType.List
			and  !QuestionAnswer(Question) set exists)

		IsRebateQuestionWithoutAnswers
			restricted
			when (ResponseType.Rebate
			and  !QuestionAnswer(Question) set exists)

		NoCorrectAnswerDefined
			restricted
			when (DefineCorrectAnswer
			and  !CorrectQuestionAnswerRel exists)

		HasAttachment
			restricted
			when (Attachment entered)

		EligibleForScoreAllocation
			restricted
			when (ResponseType.YesNo
			or	  ResponseType.YesNoText
			or 	  ResponseType.List)

		ResponseRequired
			restricted
			when (ResponseRules.ResponseRequiredAndAttachmentRequired
			or    ResponseRules.ResponseRequired
			or    YesNoResponseRules.ResponseRequired
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequired
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequiredIfNo
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequiredIfYes
			or    YesNoTextResponseRules.ResponseRequiredAndTextResponseRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequiredIfNo
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequiredIfYes
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequiredIfNo
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequiredIfYes)

		MayRequireResponseAttachment
			restricted
			when (ResponseRules.ResponseRequiredAndAttachmentRequired
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequired
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequiredIfNo
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequiredIfYes
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequiredIfNo
			or    YesNoTextResponseRules.ResponseRequiredAndTextOrAttachmentRequiredIfYes
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequiredIfNo
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequiredIfYes)

		AlwaysRequireResponseAttachment
			restricted
			when (ResponseRules.ResponseRequiredAndAttachmentRequired
			or    YesNoResponseRules.ResponseRequiredAndAttachmentRequired
			or    YesNoTextResponseRules.ResponseRequiredAndTextAndAttachmentRequired)

		NonYesNoResponseType
			restricted
			when (ResponseType.Date
			or    ResponseType.List
			or    ResponseType.Text
			or    ResponseType.Number)

		BypassRuleForTheseFiles
			when  ((parentcontext.name = "ContractRebateType")
			or     (parentcontext.name = "QuestionAnswer"))


	Relations
		TermAndConditionDisplayRel
			one-to-many relation to TermAndCondition
			Field Mapping uses ByDisplayOrder
				related.ProcurementGroup = ProcurementGroup

		ArticleDisplayRel
			one-to-many relation to Article
			Field Mapping uses ByDisplayOrder
				related.ProcurementGroup = ProcurementGroup

		AllContractsRel
			one-to-many relation to ContractQuestion
			Field Mapping uses ByQuestion
				related.ContractGroup = ProcurementGroup
				related.Question      = Question

		AllOpenContractsRel
			one-to-many relation to ContractQuestion
			Field Mapping uses ByQuestion
				related.ContractGroup = ProcurementGroup
				related.Question      = Question
			Instance Selection
				where (!related.Contract.ContractStatus.Closed)

		AllSourcingEventsRel
			one-to-many relation to SourcingEventQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question

		AllSourcingEventLinesRel
			one-to-many relation to SourcingEventLineQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question

		AllSourcingEventsNotClosedOrCancelledRel
			one-to-many relation to SourcingEventQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question
			Instance Selection
				where (!related.SourcingEvent.Status.Closed
				and    !related.SourcingEvent.Status.Cancelled)
		AllOpenSourcingEventsRel
			one-to-many relation to SourcingEventQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question
			Instance Selection
				where (!related.SourcingEvent.Status.Closed)

		AllSourcingEventLinesNotClosedOrCancelledRel
			one-to-many relation to SourcingEventLineQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question
			Instance Selection
				where (!related.SourcingEventLine.Status.Closed
				and    !related.SourcingEventLine.Status.Cancelled)

		AllOpenSourcingEventLinesRel
			one-to-many relation to SourcingEventLineQuestion
			Field Mapping uses ByQuestionFirst
				related.Question      = Question
			Instance Selection
				where (!related.SourcingEvent.Status.Closed)

		AllSupplierGroupQuestionsRel
			one-to-many relation to SupplierGroupQuestion
			Field Mapping uses ByQuestion
				related.SupplierGroup  = ProcurementGroup
				related.Question       = Question

		ContractRebateTypeRel
			one-to-many relation to ContractRebateType
			Field Mapping uses symbolic key
				related.ContractGroup = ProcurementGroup
			Instance Selection
				where (related.Active)

		QuestionAnswerArticleRel
			one-to-many relation to QuestionAnswerArticle
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question 		 = Question

		QuestionAnswerTermRel
			one-to-many relation to QuestionAnswerTerm
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question         = Question

		CorrectQuestionAnswerRel
			one-to-one relation to QuestionAnswer
			Field Mapping uses CorrectAnswerSet
				related.ProcurementGroup = ProcurementGroup
				related.Question         = Question

		ContractClassificationRel
			one-to-one relation to ContractClassification
			Field Mapping uses symbolic key
				related.ContractGroup		   = ProcurementGroup
				related.ContractClassification = ContractClassification

		ContractQuestionRel
			one-to-many relation to ContractQuestion
			Field Mapping uses ByQuestion
				related.ContractGroup = ProcurementGroup
				related.Question   	  = Question
				related.Contract	  = LocalCheckContract.CheckContract

		SameSupplierQuestionsRel 
			one-to-many relation to SupplierQuestions 
			Field Mapping uses ByQuestion
				related.SupplierGroup		= LocalSupplierGroup
				related.Question			= LocalQuestion
				related.Supplier			= LocalSupplier 

		SupplierGroupRel 
			one-to-one relation to SupplierGroup 
			Field Mapping uses symbolic key
				related.SupplierGroup		= ProcurementGroup

		QuestionListValueRel 
			one-to-many relation to QuestionListValue 
			Field Mapping uses symbolic key
				related.ProcurementGroup		= ProcurementGroup 
				related.Question				= LocalQuestion

		SourcingEventQuestionRel
			one-to-many relation to SourcingEventQuestion
			Field Mapping uses ByQuestion
				related.Company       = LocalCompany
				related.SourcingEvent = LocalSourcingEvent
				related.Question      = Question

		SourcingEventLineQuestionRel
			one-to-many relation to SourcingEventLineQuestion
			Field Mapping uses ByQuestion
				related.Company       	  = LocalCompany
				related.SourcingEvent 	  = LocalSourcingEvent
				related.SourcingEventLine = LocalSourcingEventLine
				related.Question      	  = Question

		SupplierGroupQuestionRel
			one-to-many relation to SupplierGroupQuestion
			Field Mapping uses ByQuestion
				related.SupplierGroup	= LocalSupplierGroup
				related.Question        = Question

		ConditionalQuestionsRel is a QuestionAnswer(Question) set 
			Instance Selection 
				where (related.HasConditionalQuestions)

		ConditionalQuestionsDirectRel 
			one-to-many relation to ConditionalQuestion 
			Field Mapping uses symbolic key 
				related.ProcurementGroup = ProcurementGroup 
				related.Question         = Question 		
		
		ThisQuestionConditionalRel
			one-to-many relation to ConditionalQuestion 
			Field Mapping uses ByConditionalQuestion
				related.ProcurementGroup 	= ProcurementGroup
				related.ConditionalQuestion	= Question
		
		ScoreAllocationEntered is a QuestionAnswer(Question) set
			Instance Selection
				where (related.ScoreAllocation entered)

	Sets

		ByTypeAndClass
			Sort Order
				ProcurementGroup
				ContractType
				ContractSubtype
				ContractClassification
				ContractSubclassification
				QuestionDisplayOrder
				Question

		ByDisplayOrder
			duplicates
			Sort Order
				ProcurementGroup
				ContractClassification
				ContractType
				QuestionDisplayOrder
				Question

	Field Rules
		QuestionText
			required
		ResponseType
			required

			if (ResponseType.Rebate)
				UsedForContractInterview = true
		ContractType
			if (UsedForContractInterview
			and !IsConditionalQuestion)
				required
		ContractClassification
			if (UsedForContractInterview
			and !IsConditionalQuestion)
				required
		Active
			default to true
		DefineCorrectAnswer
			constraint (ResponseType.YesNo
			or 			ResponseType.YesNoText
			or 			ResponseType.List)
				"YouCanOnlyDefineACorrectAnswerForYes/NoOrListTypeQuestions"
			constraint (ResponseRequired)
				"AQuestionCannotHaveACorrectAnswerDefinedIfTheQuestionIsNotRequiredToBeAnswered"
			if (ResponseType.Rebate)
				DefineCorrectAnswer = false
		ResponseRules
			if (NonYesNoResponseType)
				required
					"MustSelectAResponseRule"
				YesNoResponseRules = 0
				YesNoTextResponseRules = 0

		YesNoResponseRules
			if (ResponseType.YesNo)
				required
					"MustSelectAResponseRule"
				ResponseRules= 0
				YesNoTextResponseRules= 0

		YesNoTextResponseRules
			if (ResponseType.YesNoText)
				required
					"MustSelectAResponseRule"
				ResponseRules= 0
				YesNoResponseRules= 0
		AllowResponseAttachment
			if (MayRequireResponseAttachment)
				AllowResponseAttachment = true

	Attach Rules
		constraint (Active
				or  BypassRuleForTheseFiles)
			"QuestionIsInactive"

	Actions
		Create is a Create Action
			Field Rules
				QuestionDisplayOrder
					if (UsedForContractInterview)
						autosequence using ProcurementGroup.LastQuestionDisplayOrder

			Exit Rules
				if (ResponseType.YesNo)
					invoke InternalCreate QuestionAnswer
						fill in fields from Question
						invoked.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer = 1
					invoke InternalCreate QuestionAnswer
						fill in fields from Question
						invoked.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer = 2
				else
				if (ResponseType.YesNoText)
					invoke InternalCreate QuestionAnswer
						fill in fields from Question
						invoked.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo = 1
					invoke InternalCreate QuestionAnswer
						fill in fields from Question
						invoked.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo = 2
				else
				if (ResponseType.Rebate)
					for each ContractRebateTypeRel
						invoke InternalCreate QuestionAnswer
							fill in fields from Question
							invoked.QuestionAnswer.QuestionAnswerGroup.ContractRebateType = each.ContractRebateType

		Update is an Update Action
			Field Rules
				NewDisplayOrder
					constraint (UsedForContractInterview)
						"CannotChangeDisplayOrderOfQuestionWhichIsNotUsedInAnInterview"
				QuestionDisplayOrder
					if (UsedForContractInterview changed)
						if (old UsedForContractInterview = true)
							QuestionDisplayOrder = 0
						if (old UsedForContractInterview = false)
							if (ContractClassificationRel exists)
								autosequence using ProcurementGroup.LastQuestionDisplayOrder

					if (ContractClassification != old ContractClassification)
						if (ContractClassificationRel exists)
							autosequence using ProcurementGroup.LastQuestionDisplayOrder

			Action Rules
				if ((ResponseRules changed
				or  YesNoResponseRules changed
				or  YesNoTextResponseRules changed)
				and !ResponseRequired
				and ScoreAllocationEntered exists)
					constraint (ResponseRequired)
						"TheQuestionMustRequireAResponseWhenEventScoreAllocationIsDefined"
				if (UpdateGroup changed)
					constraint (!AttachedToContracts)
						"QuestionText,Type,Attachment,ResponseRulesOptionAndCorrectAnswerOptionCannotBeChanged.ContractsExistThatUseThisQuestion"
					if (SupplierGroupRel.UseConditionalQuestions)
						constraint (!AttachedToSupplierGroup)
							"QuestionText,Type,Attachment,ResponseRulesOptionAndCorrectAnswerOptionCannotBeChanged.SupplierGroupQuestionsExistThatUseThisQuestion"

				if (Active changed
				and Active = false)
					constraint (!AttachedToEventsNotClosedOrCancelled)
						"CannotInactivateQuestion;UsedOnAnOpenEvent"
					constraint (!ReferencedAsConditional)
						"CannotSetToInactive;UsedAsAConditionalQuestion"
				if (ResponseType != old ResponseType)

					constraint (!QuestionAnswerArticleRel exists
					and 		!QuestionAnswerTermRel exists)
						"CannotChangeTheResponseType;ArticlesOrTermsAreAssociatedWithThisQuestionOrItsAnswers"
					constraint (!AttachedToOpenContracts)
						"CannotChangeTheResponseType;ContractsExistThatUseThisQuestion"
					constraint (!AttachedToOpenEvents)
						"CannotChangeTheResponseType;EventsExistThatUseThisQuestion"
					constraint (!AttachedToSupplierGroup)
						"CannotChangeTheResponseType;QuestionIsUsedAsASupplierGroupQuestion"
					constraint (!QuestionAnswer(Question) set exists)
						"CannotChangeTheResponseTypeWhenAnswersExist;DeleteAndRecreate"
					if (ResponseType.YesNo)
						invoke InternalCreate QuestionAnswer
							fill in fields from Question
							invoked.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer = 1
						invoke InternalCreate QuestionAnswer
							fill in fields from Question
							invoked.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer = 2
					else
					if (ResponseType.YesNoText)
						invoke InternalCreate QuestionAnswer
							fill in fields from Question
							invoked.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo = 1
						invoke InternalCreate QuestionAnswer
							fill in fields from Question
							invoked.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo = 2
					else
					if (ResponseType.Rebate)
						for each ContractRebateTypeRel
							invoke InternalCreate QuestionAnswer
								invoked.ProcurementGroup = ProcurementGroup
								invoked.Question		 = Question
								invoked.QuestionAnswer.QuestionAnswerGroup.ContractRebateType = each.ContractRebateType

				if (DefineCorrectAnswer != old DefineCorrectAnswer)
					constraint (!AttachedToContracts)
						"CannotChangeTheCorrectAnswerOption;ContractsExistThatUseThisQuestion"

				if (old DefineCorrectAnswer
				and !DefineCorrectAnswer
				and CorrectQuestionAnswerRel exists)
					confirmation required
						"ACorrectAnswerExistsForThisQuestion;DoYouWantToContinue?"
					for each QuestionAnswer(Question) set
						invoke Update each.QuestionAnswer
							invoked.CorrectAnswer = false

				if (!ResponseType.List
				and QuestionListValue set exists)
					invoke Delete QuestionListValue set

				if ((UsedForContractInterview changed
				and  !UsedForContractInterview)
				and (QuestionAnswerArticleRel exists
				or   QuestionAnswerTermRel exists))
					confirmation required
						"QuestionIsNoLongerUsedForContractInterviewsSoAssociatedArticlesAndTermsWillBeDeleted;DoYouWantToContinue?"
					for each QuestionAnswerTermRel
						invoke Delete each
					for each QuestionAnswerArticleRel
						invoke Delete each

		Delete is a Delete Action
			Action Rules
				constraint (!AttachedToContracts)
					"CannotDelete;QuestionIsUsedOnContracts"

				constraint (!AttachedToSourcingEvents
				and         !AttachedToSourcingEventLines)
					"CannotDelete;QuestionIsUsedOnSourcingEvents"

				constraint (!AttachedToSupplierGroup)
					"CannotDelete;QuestionIsUsedOnSupplierGroup"

				constraint (!ReferencedAsConditional)
					"CannotDelete;UsedAsAConditionalQuestion"

			Exit Rules
				invoke Delete QuestionAnswerArticleRel

		AttachQuestionToContractIndirect is an Instance Action 
			restricted 
			Parameters
				Contract
				FromConditional 	is Boolean
				FromInterview   	is Boolean
				ParmFromQuestion	is like ContractQuestion
			Parameter Rules
				Contract

			Local Fields
				NewQuestion is a ContractQuestion view

			Action Rules

				LocalCheckContract.CheckContract = Contract

				if (!FromConditional
				and !FromInterview)
					constraint (ContractQuestionRel !exists)
						"QuestionIsAlreadyAttachedToThisContract"

				if (ContractQuestionRel !exists)
					invoke Create ContractQuestion
						assign result to NewQuestion
						invoked.ContractGroup  			= ProcurementGroup
						invoked.Contract       			= Contract
						if (FromConditional)
							invoked.QuestionSource      = 4
						else
						if (FromInterview)
							invoked.QuestionSource      = 1
						else
							invoked.QuestionSource		= 2
						invoked.CreatedFromQuestion     = ParmFromQuestion
						invoked.SSQuestion	   			= true
						invoked.FromRepository          = true
						fill in fields from Question
							except invoked.DisplayOrder

					if (ResponseType.List)
						for each QuestionListValue set
							invoke CreateDisplay ContractQuestionListValue
								invoked.ContractGroup             = ProcurementGroup
								invoked.Contract                  = Contract
								invoked.ContractQuestion          = NewQuestion.ContractQuestion
								invoked.ContractQuestionListValue = each.QuestionListValue
								fill in fields from each

					if (HasDirectConditionalQuestions) 
						for each ConditionalQuestionsDirectRel
							if (ResponseType.List) 		
								invoke Create ContractConditionalListQuestion
									invoked.ContractGroup					= ProcurementGroup 
									invoked.Contract                        = Contract
									invoked.ContractQuestion				= NewQuestion.ContractQuestion
									invoked.ContractQuestionListValue		= each.QuestionAnswer.QuestionAnswerGroup.QuestionListValue
									invoked.ContractConditionalListQuestion	= each.ConditionalQuestion 
							else 
							if (IsYesNo)
								invoke Create ContractConditionalYesNoQuestion 
									invoked.ContractGroup											= ProcurementGroup 
									invoked.Contract                    							= Contract 
									invoked.ContractQuestion            							= NewQuestion.ContractQuestion 
									if (IsYesNoOnly)
										invoked.ContractConditionalYesNoQuestion.YesOrNo            = each.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer  
									else 
									if (IsYesNoText)
										invoked.ContractConditionalYesNoQuestion.YesOrNo			= each.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo
									invoked.ContractConditionalYesNoQuestion.ConditionalQuestion    = each.ConditionalQuestion					

		AttachQuestionToContract is an Instance Action
			Parameters
				Contract
			Parameter Rules
				Contract

			Local Fields
				NewQuestion is a ContractQuestion view

			Action Rules

				LocalCheckContract.CheckContract = Contract

				constraint (ContractQuestionRel !exists)
					"QuestionIsAlreadyAttachedToThisContract"

				if (ContractQuestionRel !exists)
					invoke Create ContractQuestion
						assign result to NewQuestion
						invoked.ContractGroup  			= ProcurementGroup
						invoked.Contract       			= Contract
						invoked.QuestionSource		    = 2
						invoked.SSQuestion	   			= true
						invoked.FromRepository          = true
						fill in fields from Question
							except invoked.DisplayOrder

					if (ResponseType.List)
						for each QuestionListValue set
							invoke CreateDisplay ContractQuestionListValue
								invoked.ContractGroup             = ProcurementGroup
								invoked.Contract                  = Contract
								invoked.ContractQuestion          = NewQuestion.ContractQuestion
								invoked.ContractQuestionListValue = each.QuestionListValue
								fill in fields from each

					if (HasDirectConditionalQuestions) 
						for each ConditionalQuestionsDirectRel
							if (ResponseType.List) 		
								invoke Create ContractConditionalListQuestion
									invoked.ContractGroup					= ProcurementGroup 
									invoked.Contract                        = Contract
									invoked.ContractQuestion				= NewQuestion.ContractQuestion
									invoked.ContractQuestionListValue		= each.QuestionAnswer.QuestionAnswerGroup.QuestionListValue
									invoked.ContractConditionalListQuestion	= each.ConditionalQuestion 
							else 
							if (IsYesNo)
								invoke Create ContractConditionalYesNoQuestion 
									invoked.ContractGroup											= ProcurementGroup 
									invoked.Contract                    							= Contract 
									invoked.ContractQuestion            							= NewQuestion.ContractQuestion 
									if (IsYesNoOnly)
										invoked.ContractConditionalYesNoQuestion.YesOrNo            = each.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer  
									else 
									if (IsYesNoText)
										invoked.ContractConditionalYesNoQuestion.YesOrNo			= each.QuestionAnswer.QuestionAnswerGroup.YesNoText.YesNo
									invoked.ContractConditionalYesNoQuestion.ConditionalQuestion    = each.ConditionalQuestion						

		AttachToEvent is an Instance Action
			Parameters
				Company				is a SourcingCompany
				SourcingEvent

			Parameter Rules
				Company
					required
				SourcingEvent
					required

			Local Fields
				NewQuestion is a SourcingEventQuestion view

			Action Rules
				LocalSourcingEvent = SourcingEvent
				LocalCompany	   = Company

				constraint (!SourcingEventQuestionRel exists)
					"QuestionIsAlreadyAttachedToThisSourcingEvent"
				constraint (Company.SourcingGroup = Question.ProcurementGroup)
					"SourcingCompanyDoesNotBelongToTheSelectedQuestionsProcurementGroup"
				if (ResponseType.List)
					constraint (QuestionListValue set exists)
						"NoValuesAreDefinedForListQuestion"
				invoke Create SourcingEventQuestion
					assign result to NewQuestion
					invoked.Company						= Company
					invoked.SourcingEvent				= SourcingEvent
					invoked.CMQuestion					= true
					invoked.CreateFromRepository		= true
					fill in fields from Question
	   					except invoked.DisplayOrder

				if (ResponseType.List)
					for each QuestionListValue set
						invoke CreateDisplay SourcingEventQuestionValue
							invoked.Company							= Company
							invoked.SourcingEvent					= SourcingEvent
							invoked.SourcingEventQuestion			= NewQuestion.SourcingEventQuestion
							invoked.SourcingEventQuestionValue		= each.QuestionListValue
							fill in fields from each

				for each QuestionAnswer(Question) set
					invoke InternalCreate SourcingEventQuestionAllocation
						invoked.Company									 			   									= Company
						invoked.SourcingEvent							 			   									= SourcingEvent
						invoked.SourcingEventQuestion   				 			   									= NewQuestion.SourcingEventQuestion
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.TextValue 	 			  	= each.QuestionAnswer.QuestionAnswerGroup.TextAnswer
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.NumericValue 			  	= each.QuestionAnswer.QuestionAnswerGroup.NumericAnswer
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.DateValue 	 			  	= each.QuestionAnswer.QuestionAnswerGroup.DateAnswer
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.SourcingEventQuestionValue  = each.QuestionAnswer.QuestionAnswerGroup.QuestionListValue
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.YesNoValue 				  	= each.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer
						invoked.SourcingEventQuestionAllocation.SourcingEventQuestionAnswer.YesNoText 				  	= each.QuestionAnswer.QuestionAnswerGroup.YesNoText
						fill in fields from each

		AttachToEventLine is an Instance Action
			Parameters
				Company				is a SourcingCompany
				SourcingEvent
				SourcingEventLine

			Parameter Rules
				Company
					required
				SourcingEvent
					required
				SourcingEventLine
					required

			Local Fields
				NewQuestion is a SourcingEventLineQuestion view

			Action Rules
				LocalSourcingEvent 		= SourcingEvent
				LocalCompany	   		= Company
				LocalSourcingEventLine 	= SourcingEventLine

				constraint (!SourcingEventLineQuestionRel exists)
					"QuestionIsAlreadyAttachedToThisSourcingEventLine"
				constraint (Company.SourcingGroup = Question.ProcurementGroup)
					"SourcingCompanyDoesNotBelongToTheSelectedQuestionsProcurementGroup"
				if (ResponseType.List)
					constraint (QuestionListValue set exists)
						"NoValuesAreDefinedForListQuestion"
				invoke Create SourcingEventLineQuestion
					assign result to NewQuestion
					invoked.Company						= Company
					invoked.SourcingEvent				= SourcingEvent
					invoked.SourcingEventLine			= SourcingEventLine
					invoked.CMQuestion					= true
					invoked.CreateFromRepository		= true
					fill in fields from Question
	   					except invoked.DisplayOrder

				if (ResponseType.List)
					for each QuestionListValue set
						invoke CreateDisplay SourcingEventLineQuestionValue
							invoked.Company							= Company
							invoked.SourcingEvent					= SourcingEvent
							invoked.SourcingEventLine				= SourcingEventLine
							invoked.SourcingEventLineQuestion		= NewQuestion.SourcingEventLineQuestion
							invoked.SourcingEventLineQuestionValue	= each.QuestionListValue
							fill in fields from each

				for each QuestionAnswer(Question) set
					invoke InternalCreate SourcingEventLineQuestionAllocation
						invoked.Company									 			   	   										  	= Company
						invoked.SourcingEvent											   										  	= SourcingEvent
						invoked.SourcingEventLine									   	   										  	= SourcingEventLine
						invoked.SourcingEventLineQuestion   				 			   										  	= NewQuestion.SourcingEventLineQuestion
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.TextValue 	 			  	  	= each.QuestionAnswer.QuestionAnswerGroup.TextAnswer
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.NumericValue 			  	  	= each.QuestionAnswer.QuestionAnswerGroup.NumericAnswer
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.DateValue 	 			  	  	= each.QuestionAnswer.QuestionAnswerGroup.DateAnswer
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.SourcingEventLineQuestionValue 	= each.QuestionAnswer.QuestionAnswerGroup.QuestionListValue
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.YesNoValue 				  	  	= each.QuestionAnswer.QuestionAnswerGroup.YesNoAnswer
						invoked.SourcingEventLineQuestionAllocation.SourcingEventLineQuestionAnswer.YesNoText 				  	  	= each.QuestionAnswer.QuestionAnswerGroup.YesNoText
						fill in fields from each

		AttachToSupplierGroup is an Instance Action
			Parameters
				SupplierGroup

			Parameter Rules
				SupplierGroup
					required

			Local Fields
				NewQuestion is a SupplierGroupQuestion view

			Action Rules

				LocalSupplierGroup = SupplierGroup

				constraint (!SupplierGroupQuestionRel exists)
					"QuestionIsAlreadyAttachedToThisSupplierGroup"
				constraint (SupplierGroup = Question.ProcurementGroup)
					"SupplierGroupIsNotRelatedToTheSelectedQuestionsProcurementGroup"
				if (ResponseType.List)
					constraint (QuestionListValue set exists)
						"NoValuesAreDefinedForListQuestion"
				invoke Create SupplierGroupQuestion
					assign result to NewQuestion
					invoked.SupplierGroup				= SupplierGroup
					fill in fields from Question
	   					except invoked.DisplayOrder

				for each QuestionListValue set
					invoke CreateDisplayValue SupplierGroupQuestionValue
						invoked.SupplierGroup				= SupplierGroup
						invoked.SupplierGroupQuestion   	= NewQuestion.SupplierGroupQuestion
						invoked.SupplierGroupQuestionValue  = each.QuestionListValue
						invoked.LastDisplayOrder			= each.DisplayOrder
						fill in fields from each

		AttachToSupplierQuestionsIndirect is an Instance Action 
			restricted 
			Parameters
				SupplierGroup
				Supplier
				ParmFromQuestion	is like SupplierQuestions
				ParmCreatedFromQuestion is like SupplierQuestions
				ParmSupplierGroupQuestion is like SupplierGroupQuestion
			Parameter Rules
				SupplierGroup

			Local Fields
				NewQuestion is a SupplierQuestions view

			Action Rules

				LocalSupplierGroup	= SupplierGroup
				LocalSupplier		= Supplier
				LocalQuestion		= ParmFromQuestion

				if (SameSupplierQuestionsRel !exists)
					invoke Create SupplierQuestions
						assign result to NewQuestion
						invoked.SupplierGroup  			= Supplier.SupplierGroup
						invoked.Supplier				= Supplier
						invoked.CreatedFromQuestion		= ParmCreatedFromQuestion
						invoked.SupplierGroupQuestion	= ParmSupplierGroupQuestion
						fill in fields from Question
							except invoked.DisplayOrder

					if (ResponseType.List)
						for each QuestionListValueRel
							invoke CreateDisplay SupplierQuestionsListValue
								invoked.SupplierGroup				= SupplierGroup
								invoked.Supplier					= Supplier
								invoked.SupplierQuestions			= NewQuestion.SupplierQuestions
								invoked.SupplierQuestionsListValue	= each.QuestionListValue
								fill in fields from each

		AttachToSourcingEventSupplierQuestion is an Instance Action 
			restricted 
			Parameters
				ParmFromQuestion			is like SourcingEventSupplierQuestion
				ParmCreatedFromQuestion		is like SourcingEventSupplierQuestion
				ParmSupplierGroupQuestion	is like SupplierGroupQuestion
				ParmNotifiedSupplier		is like NotifiedSupplier
				ParmCompany					is a SourcingCompany
				ParmSourcingEvent			is a SourcingEvent
				ParmSourcingEventLine		is a SourcingEventLine
			Parameter Rules

			Local Fields
				NewSESupplierQuestion is a SourcingEventSupplierQuestion view

			Action Rules
				LocalQuestion			= ParmFromQuestion

				invoke Create SourcingEventSupplierQuestion
					assign result to NewSESupplierQuestion
					invoked.Company								= ParmCompany
					invoked.NotifiedSupplier					= ParmNotifiedSupplier
					invoked.SourcingEvent						= ParmSourcingEvent
					invoked.Question							= ParmFromQuestion
					invoked.CreatedFromQuestion					= ParmCreatedFromQuestion
					fill in fields from Question
						except invoked.DisplayOrder

		AttachToSELSupplierQuestion is an Instance Action 
			restricted 
			Parameters
				ParmFromQuestion			is like SELSupplierQuestion
				ParmCreatedFromQuestion		is like SELSupplierQuestion
				ParmSupplierGroupQuestion	is like SupplierGroupQuestion
				ParmNotifiedSupplier		is like NotifiedSupplier
				ParmCompany					is a SourcingCompany
				ParmSourcingEvent			is a SourcingEvent
				ParmSourcingEventLine		is a SourcingEventLine
			Parameter Rules

			Local Fields
				NewSELSupplierQuestion is a SELSupplierQuestion view

			Action Rules
				LocalQuestion			= ParmFromQuestion

				invoke Create SELSupplierQuestion
					assign result to NewSELSupplierQuestion
					invoked.Company								= ParmCompany
					invoked.NotifiedSupplier					= ParmNotifiedSupplier
					invoked.SourcingEvent						= ParmSourcingEvent
					invoked.SourcingEventLine					= ParmSourcingEventLine
					invoked.Question							= ParmFromQuestion
					invoked.SourcingEventLineQuestion			= NewSELSupplierQuestion.SourcingEventLineQuestion
					invoked.CreatedFromQuestion					= ParmCreatedFromQuestion
					fill in fields from Question
						except invoked.DisplayOrder
