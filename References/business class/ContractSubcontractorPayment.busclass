ContractSubcontractorPayment is a BusinessClass
    owned by po
    prefix is CSCP

    Ontology
    	symbolic key is ContractSubcontractorPayment
	Persistent Fields
		PaymentNumber  		is AlphaUpper size 30
		PaymentDate			is Date
		PaymentAmount		is an InternationalAmount
		Attachment			is an AlternateAttachment

	Local Fields
		LocalAttributeCtr	is Numeric 2	
	
	Derived Fields
		DerivedSupplierContactName is a StringField
		    type is Alpha size 101
		    restricted
		    actor.agent(SupplierSourceId).SupplierSourceId.MainContact.FirstAndLastName
		    
		DerivedSupplierName is a StringField
			type is Alpha size 30
			restricted
			actor.agent(SupplierSourceId).Supplier.SupplierName

	Conditions
		ClosedInactiveContract
			restricted
			when (Contract.ContractStatus.Closed
			or    Contract.ContractStatus.Inactive)
		HasAttachment
			restricted
			when (Attachment entered)

	Relations
	
		SupplierGroupExtensionRel
			one-to-one relation to SupplierGroupExtension
			Field Mapping uses symbolic key
				related.SupplierGroup	= ContractGroup
			
	
	Field Rules
		PaymentNumber
			required
		PaymentAmount
			required

	Create Rules  
		include IDM.CreateRules 
			replace AttachmentField with Attachment
							
	Delete Rules
		include IDM.DeleteRules
			replace AttachmentField with Attachment

	Commit Rules
		include IDM.CommitRules
			replace AttachmentField with Attachment		

	Actions 
		Create is a Create Action
			valid when (!ClosedInactiveContract)
			Action Rules
				if (((ContractSubcontractor.DerivedTotalAmountPaid + PaymentAmount) > ContractSubcontractor.DisplayCommittedAmount))
					confirmation required
						"Warning:TotalAmountPaidToSubcontractorIsGreaterThanTheAmountCommittedToTheSubcontractor;DoYouWantToContinue?"

		SupplierAdd is a Create Action
			valid when (!ClosedInactiveContract)
			default label is "Add"
			
			Field Rules
				Attachment
					if (ContractGroup.SupplierGroupRel.RequireSubcontractorPaymentAttachment)
						required
							"ProofOfPaymentIsRequired"
			
			Action Rules
				if (((ContractSubcontractor.DerivedTotalAmountPaid + PaymentAmount) > ContractSubcontractor.DisplayCommittedAmount))
					confirmation required
						"Warning:TotalAmountPaidToSubcontractorIsGreaterThanTheAmountCommittedToTheSubcontractor;DoYouWantToContinue?"

			Exit Rules
				if (ContractGroup.SupplierGroupRel.EmailOnContractSubcontractorUpdate)
					send email
						to Contract.PrimaryContactRel.DerivedEmail
						from Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						cc actor.agent(SupplierSourceId).SupplierSourceId.EmailAddress
						cc Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						subject "<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailSubject>"
						Attachments
							if (HasAttachment)
								attachment Attachment.File
									name is Attachment.Title
									mime type is Attachment.MimeType
						Contents 
							"<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailContent>"
							"<DerivedSupplierContactName>Of<DerivedSupplierName>AddedPayment<PaymentNumber>For<PaymentAmount>"
							if (PaymentDate entered)
								"PaymentDateIs<PaymentDate>"
							if (Attachment entered)
								"ProofOfPaymentHasBeenAttached"
			
		Update is an Update Action
			valid when (!ClosedInactiveContract)

		SupplierUpdate is an Update Action
			valid when (!ClosedInactiveContract)
			default label is "Update"

			Field Rules
				Attachment
					if (ContractGroup.SupplierGroupRel.RequireSubcontractorPaymentAttachment)
						required
							"ProofOfPaymentIsRequired"
			
			Exit Rules
				if (ContractGroup.SupplierGroupRel.EmailOnContractSubcontractorUpdate)
					send email
						to Contract.PrimaryContactRel.DerivedEmail
						from Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						cc actor.agent(SupplierSourceId).SupplierSourceId.EmailAddress
						cc Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						subject "<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailSubject>"
						Attachments
							if (Attachment changed
							and HasAttachment)
								attachment Attachment.File
									name is Attachment.Title
									mime type is Attachment.MimeType
						Contents 
							"<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailContent>"
							"MaintainedBy<DerivedSupplierContactName>Of<DerivedSupplierName>"
							if (PaymentNumber changed)
								"PaymentNumberHasBeenUpdatedFrom<old PaymentNumber>To<PaymentNumber>"
							if (PaymentAmount changed)
								"PaymentAmountHasBeenUpdatedFrom<old PaymentAmount>To<PaymentAmount>"
							if (PaymentDate changed
							and old PaymentDate !entered)
								"PaymentDateOf<PaymentDate>HasBeenAdded"
							else
							if (PaymentDate changed
							and PaymentDate !entered)
								"PaymentDateOf<old PaymentDate>HasBeenRemoved"
							else
							if (PaymentDate changed)
								"PaymentDateHasBeenUpdatedFrom<old PaymentDate>To<PaymentDate>"
							if (Attachment changed
							and old Attachment !entered)
								"ProofOfPaymentHasBeenAttached"
							else
							if (Attachment changed
							and Attachment !entered)
								"ProofOfPaymentAttachmentHasBeenRemoved"
							else
							if (Attachment changed)
								"ProofOfPaymentAttachmentHasBeenUpdatedFrom<old Attachment>To<Attachment>"
			
		Delete is a Delete Action
			valid when (!ClosedInactiveContract)

		SupplierDelete is a Delete Action
			valid when (!ClosedInactiveContract)
			default label is "Delete"

			Exit Rules
				if (ContractGroup.SupplierGroupRel.EmailOnContractSubcontractorUpdate)
					send email
						to Contract.PrimaryContactRel.DerivedEmail
						from Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						cc actor.agent(SupplierSourceId).SupplierSourceId.EmailAddress
						cc Contract.Supplier.SupplierGroup.NotificationEmailAddressOnSub
						subject "<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailSubject>"
						Contents 
							"<SupplierGroupExtensionRel.FinalMaintainContractSubcontractorEmailContent>"
							"<DerivedSupplierContactName>Of<DerivedSupplierName>DeletedPayment<PaymentNumber>For<PaymentAmount>"

		UploadToIDM is an Instance Action  
			valid when (Attachment.ValidForIDMUpload)
			Action Rules
				include IDM.MoveAttachmentsToIDM
					replace AttachmentField   with Attachment	
														
		MoveAttachmentsToIDM is a Set Action
			restricted
			Instance Selection
				where (Attachment.IsLocal)

			Accumulators
				InstanceCount

			Action Rules
				Instance Rules
					increment InstanceCount	

					include IDM.MoveAttachmentsToIDM
						replace AttachmentField   with Attachment			

					commit transaction

					if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
						end set action instance loop
