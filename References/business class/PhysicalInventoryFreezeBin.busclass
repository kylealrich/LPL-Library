PhysicalInventoryFreezeBin is a BusinessClass
    owned by ic
    prefix is ICFB

    Ontology
        symbolic key is PhysicalInventoryFreezeBin

    Patterns
        implements StaticJava
        disable AuditIndex
		implements ContextualParent
		
    Persistent Fields

        Bin
		PhysicalInventoryBin
        EnteredUOM				is a UnitOfMeasure
        EnteredCount			is an UnsignedQuantity
         	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        SecondaryEnteredUOM		is a UnitOfMeasure
        SecondaryEnteredCount	is an UnsignedQuantity
         	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
		InventoryLocation 		is a snapshot of PhysicalInventoryFreeze.InventoryLocation
			default label is "Location"

    Local Fields
    
        UOMCalculation
        LocalUpgradeQuantity                        is like Quantity
        LocalFreezePage								is Numeric size 4
        LocalFreezeLine								is like PhysicalInventoryFreezeLine 
		LocalMassFreeze								is Boolean
		LocalDeleteFreezeLine						is like PhysicalInventoryFreezeLine
		LocalLineCount								is Numeric size 4
        LocalVarianceQuantity                       is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        LocalEnteredCount							is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        LocalAltEnteredCount						is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        LocalOldAltEnteredCount						is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        LocalChangedFromCount						is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
        LocalSecondaryEnteredCount					is like Quantity
        	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity

	Context Fields
		
		InventoryControlResult
		    	    
    Relations

    	AlternateTrackedInItemUOMsRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup											= Company.ItemGroup
				related.Item												= PhysicalInventoryFreeze.Item
			Instance Selection
				where (related.TrackedIn)

		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company                         = Company
				related.InventoryLocation               = PhysicalInventoryFreeze.InventoryLocation
				related.Item                            = PhysicalInventoryFreeze.Item

		FreezeRecordForFreezePagesRel
			one-to-one relation to PhysicalInventoryFreeze
			Field Mapping uses symbolic key
				related.Company												= Company
				related.PhysicalInventorySelect								= PhysicalInventorySelect
				related.PhysicalInventoryFreeze.PhysicalInventoryFreezePage	= LocalFreezePage
				related.PhysicalInventoryFreeze.PhysicalInventoryFreezeLine	= LocalFreezeLine

    	ItemTransactionUnitOfMeasureRel
			one-to-one relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup											= Company.ItemGroup
				related.Item												= PhysicalInventoryFreeze.Item
				related.UnitOfMeasure										= EnteredUOM

		LocationItemUOMRel
			one-to-many relation to LocationItemUOM
			Field Mapping uses symbolic key
				related.Company  						= Company
				related.InventoryLocation 				= PhysicalInventoryFreeze.InventoryLocation
				related.Item							= PhysicalInventoryFreeze.Item
				related.UnitOfMeasure					= EnteredUOM

	Sets
		ByPhysicalInventoryBin
			Sort Order
				Company
				PhysicalInventorySelect
				InventoryLocation
				PhysicalInventoryBin
				PhysicalInventoryFreeze
				PhysicalInventoryFreezeBin


	Conditions
	
		IsTrackedInMultipleUOM
			restricted
			when (instance count of AlternateTrackedInItemUOMsRel > 1)
			
		NotEnteredInStockUOM
			restricted
			when (EnteredUOM != PhysicalInventoryFreeze.UnitOfMeasure)

		ItemIsCatchWeightItem
			restricted
			when (PhysicalInventoryFreeze.Item.IsCatchWeightItem)


		RecordExists
			restricted
			when (PhysicalInventoryFreeze exists)
			
		RecordNotExists
			restricted
			when (PhysicalInventoryFreeze not exists)	
			
		HasUnequalTransactionAndStockUOM
			restricted
			when (PhysicalInventoryFreeze.UnitOfMeasure != PhysicalInventoryFreeze.Item.StockUOM)

		CountInTransactionUOM
			restricted
			when (PhysicalInventorySelect.CountInTransactionUnitOfMeasure)
		
		PhysicalInventoryBinsOnly
			restricted
			when (PhysicalInventoryBin entered)
		
	Derived Fields
			
		DerivedItem is a DerivedField 
            type is Alpha size 179 
            DerivedItem = PhysicalInventoryFreeze.Item 
            if (PhysicalInventoryFreeze.Item.Description entered) 
                DerivedItem += (PhysicalInventoryFreeze.Item.ItemGroup.FinanceEnterpriseGroup.NewLine + PhysicalInventoryFreeze.Item.Description) 
            return DerivedItem 	

		DerivedManufacturerNumber is a DerivedField 
            type is Alpha size 50 
            DerivedManufacturerNumber = PhysicalInventoryFreeze.Item.ManufacturerNumber 
            return DerivedManufacturerNumber 	

		DerivedFiller1 is a DerivedField 
            type is Alpha size 20 
            DerivedFiller1 = blank 
            return DerivedFiller1 	

    	VarianceQuantity         				is a DerivedField
            type is like Quantity
            	precision is PhysicalInventoryFreeze.Item.NumberOfDecimalsQuantity
            return (EnteredCount  - PhysicalInventoryFreeze.FreezeQuantity) 
            
        DerivedVarianceQuantity                         is a DerivedField
        	type is Alpha size 20
        	default label is "Variance"
			if (EnteredCount entered)
	        	return CountedMessage
			else
        		return NotCountedMessage


		NotCountedMessage is a MessageField
			restricted
			"NotCounted"

		CountedMessage is a MessageField
			restricted
			"Counted"
		
		DerivedUnderscore												is a StringField
			type is Alpha size 11
			"___________"

		DerivedUnderscore2												is a StringField
			type is Alpha size 20
			"____________________"

		DerivedUnderscore3												is a StringField
			type is Alpha size 4
			"____"

		DerivedNoTitle													is a StringField
			type is Alpha size 5
			restricted
			"     "

		CountLabel is a LabelField
			"Count"

		UOMLabel is a LabelField
			"UOM"

    Field Rules
					
		EnteredUOM
			if (not PhysicalInventorySelect.RequireUnitOfMeasure)
				if (PhysicalInventorySelect.CountInTransactionUnitOfMeasure)
					if (PhysicalInventoryFreeze.ItemLocation.DefaultTransactionUOM entered)
						default to ItemLocationRel.DefaultTransactionUOM
					else 
						default to PhysicalInventoryFreeze.ItemLocation.LocationItemUOMDefaultForInventoryTransactionsRel.UnitOfMeasure
						default to PhysicalInventoryFreeze.Item.DefaultTransactionUOM
				else
					default to PhysicalInventoryFreeze.DerivedLocationStockUOM
					default to PhysicalInventoryFreeze.Item.StockUOM
			else
			if (action type.Update)	
				required
					"MustEnterUnitOfMeasure;SelectIDRequiresUnitOfMeasure"

			if (ItemLocationRel.HasItemLocationStockUOM)
				constraint (LocationItemUOMRel.OKForTransaction)
					"<EnteredUOM>IsNotAValidLocationTransactionUnitOfMeasureForThisItem"
			else
				constraint (ItemTransactionUnitOfMeasureRel.OKForTransaction)
					"<EnteredUOM>IsNotAValidTransactionUnitOfMeasureForThisItem"

	Actions

		Create is a Create Action
			restricted

		Update is an Update Action

			Exit Rules
				if (EnteredCount changed
				or  EnteredUOM changed)
					if (EnteredUOM = PhysicalInventoryFreeze.EnteredUOM)
						if (EnteredUOM not changed)
							LocalEnteredCount	= (PhysicalInventoryFreeze.EnteredCount + (EnteredCount - old EnteredCount))
							LocalSecondaryEnteredCount = (PhysicalInventoryFreeze.SecondaryCountQuantity + (SecondaryEnteredCount - old SecondaryEnteredCount))
						else
		        			initialize UOMCalculation
							UOMCalculation.InputUOM							= old EnteredUOM
							UOMCalculation.InputQuantity					= old EnteredCount
							UOMCalculation.InputToUOM						= PhysicalInventoryFreeze.EnteredUOM
							UOMCalculation.Method							= UOMCalculation.Method.ConvertToAlternate
							LocalChangedFromCount							= UOMCalculation.OutputQuantity	

		        			initialize UOMCalculation
							UOMCalculation.InputUOM							= EnteredUOM
							UOMCalculation.InputQuantity					= EnteredCount
							UOMCalculation.InputToUOM						= PhysicalInventoryFreeze.EnteredUOM
							UOMCalculation.Method							= UOMCalculation.Method.ConvertToAlternate
							LocalAltEnteredCount							= UOMCalculation.OutputQuantity	

							LocalEnteredCount	= (PhysicalInventoryFreeze.EnteredCount - LocalChangedFromCount + LocalAltEnteredCount)
					else
						if (EnteredUOM changed)
		        			initialize UOMCalculation
							UOMCalculation.InputUOM							= old EnteredUOM
							UOMCalculation.InputQuantity					= old EnteredCount
							UOMCalculation.InputToUOM						= PhysicalInventoryFreeze.EnteredUOM
							UOMCalculation.Method							= UOMCalculation.Method.ConvertToAlternate
							LocalChangedFromCount							= UOMCalculation.OutputQuantity	
						else
							initialize LocalChangedFromCount

	        			initialize UOMCalculation
						UOMCalculation.InputUOM								= EnteredUOM
						UOMCalculation.InputQuantity						= EnteredCount
						UOMCalculation.InputToUOM							= PhysicalInventoryFreeze.EnteredUOM
						UOMCalculation.Method								= UOMCalculation.Method.ConvertToAlternate
						LocalAltEnteredCount								= UOMCalculation.OutputQuantity	

	        			initialize UOMCalculation
						UOMCalculation.InputUOM								= EnteredUOM
						UOMCalculation.InputQuantity						= old EnteredCount
						UOMCalculation.InputToUOM							= PhysicalInventoryFreeze.EnteredUOM
						UOMCalculation.Method								= UOMCalculation.Method.ConvertToAlternate
						LocalOldAltEnteredCount								= UOMCalculation.OutputQuantity	

						if (EnteredUOM changed)
							LocalEnteredCount	= (PhysicalInventoryFreeze.EnteredCount - LocalChangedFromCount + LocalAltEnteredCount)
						else
							LocalEnteredCount	= (PhysicalInventoryFreeze.EnteredCount + (LocalAltEnteredCount - LocalOldAltEnteredCount))

					invoke Update PhysicalInventoryFreeze
						invoked.EnteredCount		= LocalEnteredCount
						if (invoked.EnteredUOM not entered)
							invoked.EnteredUOM		= PhysicalInventoryFreeze.Item.StockUOM
						invoked.LocalFromFreezeBin	= true
						if (ItemIsCatchWeightItem)
							invoked.SecondaryCountQuantity		= LocalSecondaryEnteredCount
							invoked.SecondaryUOM			= SecondaryEnteredUOM

		FastUpdate is an Update Action
			restricted
			bypass field rules
						
		CreateFromDelete is a Create Action
			restricted

		Delete is a Delete Action
			restricted

		Purge is a Purge Action
			restricted
							
