ContractParticipant is a BusinessClass
	owned by po
	prefix is COPT

	Ontology
		symbolic key is ContractParticipant

	Patterns
		implements StaticJava

	Persistent Fields
		Company			is Numeric size 4
		AccountingUnit	is a FinanceCodeBlockNoAccount

	Local Fields
		InstanceLocalNewCreateDate		is Date
		LocalCompany					is like InventoryCompany
		LocalContractGroup				is like ContractGroup
		LocalInventoryLocation			is like InventoryLocation
		LocalRequestingLocation			is like RequestingLocation
		LocalPurchaseFrom				is AlphaUpper size 15
		LocalProcessLevel				is like PayablesProcessLevel
		LocalItemNumber					is like Item
		LocalVendorItem					is like VendorItem
		OldLocalItemNumber				is like Item
		OldLocalVendorItem				is like VendorItem
		LocalParticipantGroup			is a ParticipantGroup
		LocalGeneralLedgerCompanyGroup 	is like GeneralLedgerCompanyGroup
		LocalPricingGroup               is like PricingGroup 

	Derived Fields
		CompanyName is a StringField 
	 		type is like Name
			holds pii
			ContractParticipant.ParticipantLocation.Company.Name
		LocationName is a StringField 
	 		type is like Name
			holds pii
			ContractParticipant.ParticipantLocation.Location.Name
		RequestingLocationName is a StringField 
	 		type is like Name
			holds pii
			ContractParticipant.ParticipantLocation.RequestingLocation.Name
 		PricingGroupDescription is a StringField
 			type is Alpha size 60
 			ContractParticipant.ParticipantLocation.PricingGroup.Description
		ContractCompanyName is a StringField 
			type is like Name
			holds pii
			ContractParticipant.ContractCompanyDepartment.ContractCompany.Name
		DepartmentName is a StringField
	 		type is Alpha size 60
			ContractParticipant.ContractCompanyDepartment.ContractDepartment.Description

	Conditions
		LocationCompanyOnly
			restricted
			when (ContractParticipant.ParticipantLocation.Location = blank
			and	  ContractParticipant.ParticipantLocation.RequestingLocation = blank
			and   ContractParticipant.ContractCompanyDepartment.ContractDepartment = blank
			and   ContractParticipant.ParticipantLocation.Company entered)
		HasLocOrReqLoc
			restricted
			when (ContractParticipant.ParticipantLocation.Location != blank
			or    ContractParticipant.ParticipantLocation.RequestingLocation != blank)
		CompanyOnly
			when (ContractParticipant.ParticipantLocation.Company != blank
			and   ContractParticipant.ParticipantLocation.Location = blank
			and   ContractParticipant.ParticipantLocation.RequestingLocation = blank)
		LocationType
			restricted
			when (HasLocOrReqLoc
			or    ContractParticipant.ParticipantLocation.PricingGroup.LocationPricingGroup)
		CompanyType
			restricted
			when (LocationCompanyOnly
			or    ContractParticipant.ParticipantLocation.PricingGroup.CompanyPricingGroup)
		NoDepartment
			restricted
			when (ContractParticipant.ContractCompanyDepartment.ContractCompany not entered)
		HasDeptInfo
			restricted
			when (ContractParticipant.ContractCompanyDepartment.ContractDepartment != blank)
		DeptCompanyOnly
			restricted
			when (ContractParticipant.ContractCompanyDepartment.ContractDepartment = blank)
		HasPreferredItems
			restricted
			when (PreferredManufByLocationRel exists)
		CanCreate  
			restricted
			when (!Contract.ContractStatus.Closed
			and  !Contract.IsManufacturerOrDistributorContract) 
		CanMaintain 
			restricted
			when (!Contract.ContractStatus.Closed
			and  !Contract.IsManufacturerOrDistributorContract)
		MixedCompanies
			restricted
			when (MixedCompanyRel exists)
		CompanyEntered
			when (ContractParticipant.ParticipantLocation.Company entered)
		InventoryLocationEntered
			when (ContractParticipant.ParticipantLocation.Location entered)
		RequestingLocationEntered
			when (ContractParticipant.ParticipantLocation.RequestingLocation entered)
		PricingGroupEntered
			when (ContractParticipant.ParticipantLocation.PricingGroup entered)
		CompanyForDepartmentEntered
			when (ContractParticipant.ContractCompanyDepartment.ContractCompany entered)
		DepartmentEntered
			when (ContractParticipant.ContractCompanyDepartment.ContractDepartment entered)
		StandingEligibleLinesExist
			restricted
			when (StandingEligibleLinesRel exists)
		AccountingUnitNotEntered
			restricted
			when (AccountingUnit.AccountingUnit !entered)
		AccountingEntityNotEntered
			restricted
			when (AccountingUnit.ToAccountingEntity !entered)
		ProjectNotEntered
			restricted
			when (AccountingUnit.Project !entered)
		FinanceDimension1NotEntered
			restricted
			when (AccountingUnit.FinanceDimension1 !entered)
		FinanceDimension2NotEntered
			restricted
			when (AccountingUnit.FinanceDimension2 !entered)
		FinanceDimension3NotEntered
			restricted
			when (AccountingUnit.FinanceDimension3 !entered)
		FinanceDimension4NotEntered
			restricted
			when (AccountingUnit.FinanceDimension4 !entered)
		FinanceDimension5NotEntered
			restricted
			when (AccountingUnit.FinanceDimension5 !entered)
		FinanceDimension6NotEntered
			restricted
			when (AccountingUnit.FinanceDimension6 !entered)
		FinanceDimension7NotEntered
			restricted
			when (AccountingUnit.FinanceDimension7 !entered)
		FinanceDimension8NotEntered
			restricted
			when (AccountingUnit.FinanceDimension8 !entered)
		FinanceDimension9NotEntered
			restricted
			when (AccountingUnit.FinanceDimension9 !entered)
		FinanceDimension10NotEntered
			restricted
			when (AccountingUnit.FinanceDimension10 !entered)


	Sets
		ByLocReqLocSet
			duplicates
			indexed
			Sort Order
				ContractGroup
				Contract
				ContractParticipant.ParticipantLocation.Company
				ContractParticipant.ParticipantLocation.Location
				ContractParticipant.ParticipantLocation.RequestingLocation
			Instance Selection
				where (HasLocOrReqLoc)

		ByDeptInfoSet
			duplicates
	 		indexed
	  		Sort Order
		   		ContractGroup
				Contract
				ContractParticipant.ParticipantLocation.Company
				ContractParticipant.ParticipantLocation.Location
				ContractParticipant.ParticipantLocation.RequestingLocation
				ContractParticipant.ParticipantLocation.PricingGroup
				ContractParticipant.ContractCompanyDepartment.ContractCompany
				ContractParticipant.ContractCompanyDepartment.ContractDepartment
			Instance Selection
				where (HasDeptInfo)

		ByReqLocLocation
	 		duplicates
	 		indexed
	  		Sort Order
		   		ContractGroup
				Contract
				ContractParticipant.ParticipantLocation.Company
				ContractParticipant.ParticipantLocation.RequestingLocation
				ContractParticipant.ParticipantLocation.Location

		ByPricingGroup
			Sort Order
				ContractGroup
				ContractParticipant.ParticipantLocation.PricingGroup
				Contract
			Instance Selection
				where (PricingGroupEntered)

		ByCompanyFirst 
			Sort Order 
				ContractGroup 		
				ContractParticipant.ParticipantLocation.Company
				ContractParticipant.ParticipantLocation.Location
				ContractParticipant.ParticipantLocation.RequestingLocation
				Contract 
				ContractParticipant.ParticipantLocation.PricingGroup
				ContractParticipant.ContractCompanyDepartment.ContractCompany
				ContractParticipant.ContractCompanyDepartment.ContractDepartment				
	Relations
		PricingGroupRel
			one-to-one relation to PricingGroup
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.PricingGroup  = ContractParticipant.ParticipantLocation.PricingGroup

		LocalPricingGroupRel 
			one-to-one relation to PricingGroup 
			Field Mapping uses symbolic key 
				related.ContractGroup   = ContractGroup
				related.PricingGroup    = LocalPricingGroup		

		ProcessLevelRel
			one-to-one relation to PayablesProcessLevel
			Field Mapping uses symbolic key
				related.Company 				= ContractParticipant.ParticipantLocation.Company
				related.PayablesProcessLevel    = LocalProcessLevel

		ContractParticipantRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.Contract      = Contract

		OtherContractParticipantRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
				related.ContractGroup = ContractGroup
				related.Contract      = Contract
			Instance Selection
				where (related.UniqueID  != UniqueID
				and    related.ContractParticipant.ParticipantLocation.Company = ContractParticipant.ParticipantLocation.Company)

		CreateContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses ByCanUseForCostDefaultingErrorsExist
		  		related.ContractGroup									   = ContractGroup
		   		related.Contract										   = Contract
			Instance Selection
				where (related.ErrorsExist = false)

		OpenContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup      = ContractGroup
				related.Contract           = Contract
			Instance Selection
				where (!related.ContractLineState.Closed)

		PreferredManufByLocationRel
			one-to-many relation to ContractPreferredManufacturer
			Field Mapping uses ByContractLocation
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractPreferredManufacturer.InventoryCompany	= ContractParticipant.ParticipantLocation.Company
				related.ContractPreferredManufacturer.Location 		= ContractParticipant.ParticipantLocation.Location
				related.ContractPreferredManufacturer.ReqLocation 	= ContractParticipant.ParticipantLocation.RequestingLocation
				related.ContractPreferredManufacturer.PricingGroup  = ContractParticipant.ParticipantLocation.PricingGroup

		LocalInventoryCompanyRel 
			one-to-one relation to InventoryCompany 
			Field Mapping uses symbolic key 
				related.Company 		= LocalCompany

		CompanyActiveLocationRel 
			one-to-many relation to InventoryLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ContractParticipant.ParticipantLocation.Company 
			Instance Selection 
				where (related.Status = 0)	

		CompanyActiveRequestingLocationRel 
			one-to-many relation to RequestingLocation 
			Field Mapping uses symbolic key 
				related.Company 									= ContractParticipant.ParticipantLocation.Company 
			Instance Selection 
				where (related.Active)	
		ContractAndLineLocationRel 
			one-to-many relation to ContractAndLineLocation
			Field Mapping uses ByContractOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractParticipant.ParticipantLocation.Company
				related.ContractAndLineLocation.Location 			= ContractParticipant.ParticipantLocation.Location
				related.ContractAndLineLocation.RequestingLocation 	= ContractParticipant.ParticipantLocation.RequestingLocation

		LocalContractLocationRel 
			one-to-one relation to ContractAndLineLocation
			Field Mapping uses ByLocationOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractParticipant.ParticipantLocation.Company
				related.ContractAndLineLocation.Location 			= LocalInventoryLocation
	
		LocalContractRequestingLocationRel 
			one-to-one relation to ContractAndLineLocation
			Field Mapping uses ByRequestingLocationOnly 
				related.ContractGroup                               = ContractGroup
				related.Contract                                    = Contract
				related.ContractAndLineLocation.Company				= ContractParticipant.ParticipantLocation.Company
				related.ContractAndLineLocation.RequestingLocation  = LocalRequestingLocation
		ParticipantGroupRel
			one-to-one relation to ParticipantGroup
			Field Mapping uses symbolic key
				related.ProcurementGroup 				= LocalContractGroup
				related.ParticipantGroup				= LocalParticipantGroup

		CompanyOnlyRel
			one-to-one relation to ContractParticipant
			Field Mapping uses symbolic key
		  		related.ContractGroup				 										= ContractGroup
		   		related.Contract					  										= Contract
		   		related.ContractParticipant.ParticipantLocation.Company  					= ContractParticipant.ParticipantLocation.Company
		   		related.ContractParticipant.ParticipantLocation.Location 					= blank
		   		related.ContractParticipant.ParticipantLocation.RequestingLocation	   		= blank
		   		related.ContractParticipant.ParticipantLocation.PricingGroup                = blank
		   		related.ContractParticipant.ContractCompanyDepartment.ContractCompany		= 0
		  		related.ContractParticipant.ContractCompanyDepartment.ContractDepartment	= blank

		DeptCompanyOnlyRel
			one-to-one relation to ContractParticipant
			Field Mapping uses symbolic key
		  		related.ContractGroup				 										= ContractGroup
		   		related.Contract					  										= Contract
		   		related.ContractParticipant.ParticipantLocation.Company  					= 0
		   		related.ContractParticipant.ParticipantLocation.Location 					= blank
		   		related.ContractParticipant.ParticipantLocation.RequestingLocation	   		= blank
		   		related.ContractParticipant.ParticipantLocation.PricingGroup                = blank
		   		related.ContractParticipant.ContractCompanyDepartment.ContractCompany		= ContractParticipant.ContractCompanyDepartment.ContractCompany
		  		related.ContractParticipant.ContractCompanyDepartment.ContractDepartment	= blank

		LocReqLocRel
			one-to-many relation to ContractParticipant
			Field Mapping uses ByLocReqLocSet
		  		related.ContractGroup				  						= ContractGroup
		   		related.Contract					  						= Contract
		   		related.ContractParticipant.ParticipantLocation.Company 	= ContractParticipant.ParticipantLocation.Company

		DeptInfoRel
			one-to-many relation to ContractParticipant
			Field Mapping uses ByDeptInfoSet
		  		related.ContractGroup				  						= ContractGroup
		   		related.Contract					  						= Contract
				related.ContractParticipant.ParticipantLocation.Company	= ContractParticipant.ParticipantLocation.Company
				related.ContractParticipant.ParticipantLocation.Location	= ContractParticipant.ParticipantLocation.Location
				related.ContractParticipant.ParticipantLocation.RequestingLocation		= ContractParticipant.ParticipantLocation.RequestingLocation
		   		related.ContractParticipant.ParticipantLocation.PricingGroup            = ContractParticipant.ParticipantLocation.PricingGroup
		   		related.ContractParticipant.ContractCompanyDepartment.ContractCompany	= ContractParticipant.ContractCompanyDepartment.ContractCompany

		MixedCompanyRel
			one-to-many relation to ContractParticipant
			Field Mapping uses symbolic key
		  		related.ContractGroup				 										= ContractGroup
		   		related.Contract					  										= Contract
		   	Instance Selection
		   		where (related.ContractParticipant.ParticipantLocation.Company  != ContractParticipant.ParticipantLocation.Company)

		PoCompanyRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses symbolic key
		  		related.Company							  = Company

		PoCompanyByProcGroupRel
			one-to-one relation to PurchasingCompany
			Field Mapping uses Set2
		  		related.ProcurementGroup				  = ContractGroup
		  		related.Company							  = Company

		DistOnlyContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses ByMfgContractLine
				related.ContractGroup        = ContractGroup
				related.Contract 			 = Contract
				related.ManufacturerContract = Contract

		StandingEligibleLinesRel
			one-to-many relation to ContractLine
			Field Mapping uses ByCanUseForCostDefaultingErrorsExist
				related.ContractGroup        = ContractGroup
				related.Contract 			 = Contract
				related.ErrorsExist          = false
			Instance Selection
				where (!related.OnHold
				and     related.HasBeenActivated
				and    !related.ContractLineState.Closed)

		BuyerLocationsCompanyRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set3
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer

		BuyerLocationCompanyRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set3
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer
				related.Company         = ContractParticipant.ParticipantLocation.Company

		BuyerLocationsRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set4
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer

		BuyerLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set4
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer
				related.Company         = ContractParticipant.ParticipantLocation.Company
				related.Location        = ContractParticipant.ParticipantLocation.Location

		BuyerRequestingLocationsRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set5
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer

		BuyerRequestingLocationRel
			one-to-many relation to BuyerLocation
			Field Mapping uses Set5
				related.HROrganization  = ContractGroup.BusinessGroup.FinanceEnterpriseGroup.HROrganization
				related.Buyer           = Contract.Buyer
				related.Company         = ContractParticipant.ParticipantLocation.Company
				related.RequestingLocation = ContractParticipant.ParticipantLocation.RequestingLocation

		DirectPurchaseFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses symbolic key
				related.ContractGroup 													= ContractGroup
				related.Contract														= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company  				= ContractParticipant.ParticipantLocation.Company
				related.ContractPurchaseFrom.ParticipantLocation.Location 				= ContractParticipant.ParticipantLocation.Location
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation		= ContractParticipant.ParticipantLocation.RequestingLocation
				related.ContractPurchaseFrom.ParticipantLocation.PricingGroup           = blank

		PurchaseFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses symbolic key
				related.ContractGroup 													= ContractGroup
				related.Contract														= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company  				= LocalCompany
				related.ContractPurchaseFrom.ParticipantLocation.Location 				= LocalInventoryLocation
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation		= LocalRequestingLocation
				related.ContractPurchaseFrom.ParticipantLocation.PricingGroup           = blank

		SupplierPurchaseFromRel
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses ByLocationRequestingLocation
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= ContractParticipant.ParticipantLocation.Company
				related.SupplierPurchaseFrom.ParticipantLocation.Location		= ContractParticipant.ParticipantLocation.Location
				related.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation	= ContractParticipant.ParticipantLocation.RequestingLocation
			Instance Selection
				where (related.PayablesVendorLocationActive)

		CompanySupplierPurchaseFromRels
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses ByCompanyOnly
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= LocalCompany
			Instance Selection
				where (related.PayablesVendorLocationActive)

 		ItemRel
 			one-to-one relation to Item
 			Field Mapping uses symbolic key
 				related.ItemGroup		= ContractGroup
 				related.Item            = LocalItemNumber

		SupplierPurchFromRel
			one-to-many relation to SupplierPurchaseFrom
			Field Mapping uses symbolic key
				related.SupplierGroup											= ContractGroup
				related.Supplier 												= Contract.Supplier
				related.SupplierPurchaseFrom.ParticipantLocation.Company		= LocalCompany
				related.SupplierPurchaseFrom.ParticipantLocation.Location		= LocalInventoryLocation
				related.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
				related.SupplierPurchaseFrom.ParticipantLocation.PricingGroup   = blank
			Instance Selection
				where (related.PayablesVendorLocationActive)

		DifferentPreferredContractRel
			one-to-many relation to ContractPreferredManufacturer
			Field Mapping uses ByItem
				related.ContractGroup             					   = ContractGroup
				related.ContractPreferredManufacturer.ItemNumber       = LocalItemNumber
				related.ContractPreferredManufacturer.InventoryCompany = ContractParticipant.ParticipantLocation.Company
				related.ContractPreferredManufacturer.Location         = ContractParticipant.ParticipantLocation.Location
				related.ContractPreferredManufacturer.ReqLocation      = ContractParticipant.ParticipantLocation.RequestingLocation
				related.ContractPreferredManufacturer.PricingGroup     = ContractParticipant.ParticipantLocation.PricingGroup

		OldSamePreferredContractRel
			one-to-many relation to ContractPreferredManufacturer
			Field Mapping uses symbolic key
				related.ContractGroup             					   = ContractGroup
				related.ContractPreferredManufacturer.ItemNumber       = OldLocalItemNumber
				related.ContractPreferredManufacturer.VendorItem       = OldLocalVendorItem
				related.ContractPreferredManufacturer.InventoryCompany = ContractParticipant.ParticipantLocation.Company
				related.ContractPreferredManufacturer.Location         = ContractParticipant.ParticipantLocation.Location
				related.ContractPreferredManufacturer.ReqLocation      = ContractParticipant.ParticipantLocation.RequestingLocation
				related.ContractPreferredManufacturer.PricingGroup     = ContractParticipant.ParticipantLocation.PricingGroup
			Instance Selection
				where (related.Contract                       = Contract)

		SamePreferredContractRel
			one-to-many relation to ContractPreferredManufacturer
			Field Mapping uses symbolic key
				related.ContractGroup             					   = ContractGroup
				related.ContractPreferredManufacturer.ItemNumber       = LocalItemNumber
				related.ContractPreferredManufacturer.VendorItem       = LocalVendorItem
				related.ContractPreferredManufacturer.InventoryCompany = ContractParticipant.ParticipantLocation.Company
				related.ContractPreferredManufacturer.Location         = ContractParticipant.ParticipantLocation.Location
				related.ContractPreferredManufacturer.ReqLocation      = ContractParticipant.ParticipantLocation.RequestingLocation
				related.ContractPreferredManufacturer.PricingGroup     = ContractParticipant.ParticipantLocation.PricingGroup
			Instance Selection
				where (related.Contract                       = Contract)

		ContractPurchFromRel
			one-to-one relation to ContractPurchaseFrom
			Field Mapping uses ByPurchaseFrom
				related.ContractGroup											= ContractGroup
				related.Contract												= Contract
				related.ContractPurchaseFrom.ParticipantLocation.Company 		= LocalCompany
				related.ContractPurchaseFrom.ParticipantLocation.Location		= LocalInventoryLocation
				related.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation

        LocalGLCompanyGroupMemberRel                                                    
            one-to-one relation to GeneralLedgerCompanyGroupMember
            Field Mapping uses symbolic key
                related.GeneralLedgerCompanyGroup    = LocalGeneralLedgerCompanyGroup
                related.Company                      = Company  

	Rule Blocks

		CreateContractPurchaseFrom
			if (PricingGroupEntered)
				if (PricingGroupRel.LocationPricingGroup)
					for each PricingGroupRel.PricingGroupRequestingLocationRel
						LocalCompany 			= each.Company
						LocalRequestingLocation	= each.RequestingLocation
						initialize LocalInventoryLocation
						LocalPurchaseFrom   	= first SupplierPurchFromRel.PurchaseFrom

						if (LocalPurchaseFrom entered
						and !PurchaseFromRel exists)
							invoke Create ContractPurchaseFrom
								invoked.AutoCreate													= true
								invoked.ContractGroup 												= ContractGroup
								invoked.Contract	  												= Contract
								invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
								invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
								invoked.SupplierVendor												= Contract.Vendor
								invoked.PurchaseFrom												= LocalPurchaseFrom
								invoked.AllItemTypes												= first SupplierPurchFromRel.AllItemTypes
					for each PricingGroupRel.PricingGroupLocationRel
						LocalCompany 			= each.Company
						LocalInventoryLocation	= each.InventoryLocation
						initialize LocalRequestingLocation
						LocalPurchaseFrom 		= first SupplierPurchFromRel.PurchaseFrom

						if (LocalPurchaseFrom entered
						and !PurchaseFromRel exists)
							invoke Create ContractPurchaseFrom
								invoked.AutoCreate													= true
								invoked.ContractGroup 												= ContractGroup
								invoked.Contract	  												= Contract
								invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
								invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
								invoked.SupplierVendor												= Contract.Vendor
								invoked.PurchaseFrom												= LocalPurchaseFrom
								invoked.AllItemTypes												= first SupplierPurchFromRel.AllItemTypes

				else
				if (PricingGroupRel.CompanyPricingGroup)
					for each PricingGroupRel.PricingGroupCompanyRel
						LocalCompany 	= each.Company
						for each CompanySupplierPurchaseFromRels
							LocalInventoryLocation	= each.SupplierPurchaseFrom.ParticipantLocation.Location
							LocalRequestingLocation	= each.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation
							LocalPurchaseFrom   	= each.PurchaseFrom

							if (LocalPurchaseFrom entered
							and !ContractPurchFromRel exists)
								invoke Create ContractPurchaseFrom
									invoked.AutoCreate													= true
									invoked.ContractGroup 												= ContractGroup
									invoked.Contract	  												= Contract
									invoked.ContractPurchaseFrom.ParticipantLocation.Company    	  	= LocalCompany
									invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
									invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
									invoked.SupplierVendor												= Contract.Vendor
									invoked.PurchaseFrom												= LocalPurchaseFrom
									invoked.AllItemTypes												= each.AllItemTypes
			else
			if (CompanyOnly)
				LocalCompany = ContractParticipant.ParticipantLocation.Company
				for each CompanySupplierPurchaseFromRels
					LocalInventoryLocation 		= each.SupplierPurchaseFrom.ParticipantLocation.Location
					LocalRequestingLocation		= each.SupplierPurchaseFrom.ParticipantLocation.RequestingLocation
					LocalPurchaseFrom 			= each.PurchaseFrom

					if (LocalPurchaseFrom entered
					and !ContractPurchFromRel exists)
						invoke Create ContractPurchaseFrom
							invoked.AutoCreate													= true
							invoked.ContractGroup 												= ContractGroup
							invoked.Contract	  												= Contract
							invoked.ContractPurchaseFrom.ParticipantLocation.Company  	  		= ContractParticipant.ParticipantLocation.Company
							invoked.ContractPurchaseFrom.ParticipantLocation.Location			= LocalInventoryLocation
							invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation	= LocalRequestingLocation
							invoked.SupplierVendor												= Contract.Vendor
							invoked.PurchaseFrom												= LocalPurchaseFrom
							invoked.AllItemTypes												= each.AllItemTypes

			else 
				LocalPurchaseFrom   	= SupplierPurchaseFromRel.PurchaseFrom
				if (!DirectPurchaseFromRel exists)
					if (SupplierPurchaseFromRel exists)
						invoke Create ContractPurchaseFrom
							invoked.AutoCreate													= true
							invoked.ContractGroup 												= ContractGroup
							invoked.Contract	  												= Contract
							invoked.ContractPurchaseFrom.ParticipantLocation.Company  	  	    = ContractParticipant.ParticipantLocation.Company
							invoked.ContractPurchaseFrom.ParticipantLocation.Location			= ContractParticipant.ParticipantLocation.Location
							invoked.ContractPurchaseFrom.ParticipantLocation.RequestingLocation = ContractParticipant.ParticipantLocation.RequestingLocation
							invoked.SupplierVendor												= Contract.Vendor
							invoked.PurchaseFrom												= LocalPurchaseFrom
							invoked.AllItemTypes												= SupplierPurchaseFromRel.AllItemTypes


	Field Rules
		Company
			default to  ContractParticipant.ParticipantLocation.Company
			if (Company entered)
				constraint(PoCompanyRel exists)
					"POCompanyDoesNotExist"
				constraint(PoCompanyByProcGroupRel exists)
					"CompanyProcurementGroupMustBeTheSameAsTheContractProcurementGroup"
				if (Contract.ServicePurchaseType
				and Contract.Vendor entered)
			        if (Contract.Vendor.VendorRestrictions.RestrictedCompany entered)                                   
			            constraint (Company = Contract.Vendor.VendorRestrictions.RestrictedCompany)
			                "VendorIsRestrictedToCompany<Contract.Vendor.VendorRestrictions.RestrictedCompany>"
			        if (Contract.Vendor.VendorRestrictions.RestrictedCompanyGroup entered)                                
			            LocalGeneralLedgerCompanyGroup = Contract.Vendor.VendorRestrictions.RestrictedCompanyGroup
			            constraint (LocalGLCompanyGroupMemberRel exists)
			                "VendorIsRestrictedToCompanyGroup<Contract.Vendor.VendorRestrictions.RestrictedCompanyGroup>;Company<Company>IsNotAMemberOfTheGroup"    					
					
	Create Exit Rules

		if (Contract.EnableClinicalSystemUseLocations)
			if (InventoryLocationEntered)
				LocalInventoryLocation = ContractParticipant.ParticipantLocation.Location 
				if (LocalContractLocationRel !exists)
					invoke Create ContractAndLineLocation 
						invoked.ContractGroup 						= ContractGroup 
						invoked.Contract                			= Contract 
						invoked.ContractAndLineLocation.Company 	= ContractParticipant.ParticipantLocation.Company
						invoked.ContractAndLineLocation.Location	= ContractParticipant.ParticipantLocation.Location 
						invoked.ClinicalSystemUse                   = true	

			if (LocationCompanyOnly)
				LocalCompany	= ContractParticipant.ParticipantLocation.Company
				invoke CreateLocationsForAContractInstance LocalInventoryCompanyRel 
					invoked.ParmContractGroup   		= ContractGroup
					invoked.ParmContract 				= Contract

			if (RequestingLocationEntered
			and ContractGroup.DoNotUseRequestingLocations = false)
				LocalRequestingLocation = ContractParticipant.ParticipantLocation.RequestingLocation
				if (LocalContractRequestingLocationRel !exists)
					invoke Create ContractAndLineLocation 
						invoked.ContractGroup 								= ContractGroup 
						invoked.Contract                					= Contract 
						invoked.ContractAndLineLocation.Company 			= ContractParticipant.ParticipantLocation.Company
						invoked.ContractAndLineLocation.RequestingLocation	= ContractParticipant.ParticipantLocation.RequestingLocation 
						invoked.ClinicalSystemUse                   		= true	

			if (PricingGroupEntered)
				LocalPricingGroup = ContractParticipant.ParticipantLocation.PricingGroup
				invoke CreateLocationsForAContractInstance LocalPricingGroupRel 
					invoked.ParmProcurementGroup	= ContractGroup
					invoked.ParmContract            = Contract
	
	Actions
		Create is a Create Action
			valid when (CanMaintain)
			Action Rules

				if (Contract.Buyer entered)


					if (CompanyEntered)
						if (BuyerLocationsCompanyRel exists)
							constraint (BuyerLocationCompanyRel exists)
								"Company<ContractParticipant.ParticipantLocation.Company>IsNotValidForBuyer"

					if (InventoryLocationEntered)
						if (BuyerLocationsRel exists)
							constraint (BuyerLocationRel exists)
								"Location<ContractParticipant.ParticipantLocation.Location>IsNotValidForBuyer"

					if (RequestingLocationEntered)
						if (BuyerRequestingLocationsRel exists)
							constraint (BuyerRequestingLocationRel exists)
								"RequestingLocation<ContractParticipant.ParticipantLocation.RequestingLocation>IsNotValidForBuyer"

				if (OtherContractParticipantRel exists)
					if (CompanyType)
						constraint (first OtherContractParticipantRel.CompanyType)
							"CannotAdd;ParticipantsExistByLocationOrRequestingLocation"
   					if (LocationType)
   						constraint (first OtherContractParticipantRel.LocationType)
   							"CannotAdd;ParticipantsExistForWholeCompany"

				if (Contract.ServicePurchaseType)
					if (!CompanyForDepartmentEntered)
						constraint (CompanyOnly)
							"MustEnterACompanyOnlyParticipantForServicePurchaseType"
				if (Contract.StandingPurchaseType)
					constraint (!LocationCompanyOnly)
						"CannotEnterACompanyOnlyParticipantForStandingPurchaseType"
					if (Contract.MaximumReleaseNumber > 0)
						constraint (!MixedCompanies)
							"DurationDefinedByNumberOfReleases,MultipleCompaniesCannotParticipate"
					constraint (!PricingGroupEntered)
						"CannotEnterPricingGroupForStandingPurchaseType"
				if (Contract.BlanketPurchaseType)
					constraint (!PricingGroupEntered)
						"CannotEnterPricingGroupForBlanketPurchaseType"
				if (Contract.Stockless)
					if (ContractParticipant.ParticipantLocation.RequestingLocation entered)
						constraint (ContractParticipant.ParticipantLocation.RequestingLocation.Stockless)
							"MustEnterAStocklessRequestingLocationForAStocklessContract"
					constraint (!PricingGroupEntered)
						"CannotEnterPricingGroupForStocklessContract"
				if (PricingGroupEntered)
					constraint (PricingGroupRel.HasDetails)
						"CannotEnter;PricingGroupHasNoCompaniesOrLocationsAttached"
			Exit Rules
				if (Contract.CanCreatePurchaseFroms)
					include CreateContractPurchaseFrom

		CreateFromGroup is a Create Action    
			restricted

		CreateParticipantPurchaseFrom is a Set Action
			restricted
			Parameters
				PrmContractGroup is a ContractGroup
				PrmContract		 is a Contract

			Instance Selection
				where (ContractGroup = PrmContractGroup
				and    Contract 	 = PrmContract)

			Action Rules
				Instance Rules
					include CreateContractPurchaseFrom

		Update is an Update Action
			valid when (CanMaintain)

		Delete is a Delete Action
			valid when (CanMaintain)
			Action Rules

			Entrance Rules
				invoke Delete DirectPurchaseFromRel

				if (HasPreferredItems)
					invoke DeleteFromParticipant ContractPreferredManufacturer
						invoked.ParmContractGroup  			= ContractGroup
						invoked.ParmContract                = Contract
						invoked.ParmInventoryCompany		= ContractParticipant.ParticipantLocation.Company
						invoked.ParmLocation 				= ContractParticipant.ParticipantLocation.Location
						invoked.ParmReqLocation 			= ContractParticipant.ParticipantLocation.RequestingLocation
						invoked.ParmPricingGroup  			= ContractParticipant.ParticipantLocation.PricingGroup

				if (Contract.EnableClinicalSystemUseLocations)
					if (InventoryLocationEntered
					or  RequestingLocationEntered)
						invoke DeleteClinical ContractAndLineLocationRel
					else
					if (PricingGroupEntered)
						invoke DeleteLocationsForAContract PricingGroup
							invoked.ParmProcurementGroup	= ContractGroup
							invoked.ParmContract            = Contract
							invoked.ParmPricingGroup        = ContractParticipant.ParticipantLocation.PricingGroup
					else 
					if (LocationCompanyOnly)
						for each CompanyActiveLocationRel
							LocalInventoryLocation = each.InventoryLocation
							if (LocalContractLocationRel exists) 
								invoke DeleteClinical LocalContractLocationRel
						for each CompanyActiveRequestingLocationRel 													
							LocalRequestingLocation = each.RequestingLocation
							if (LocalContractRequestingLocationRel exists) 
								invoke DeleteClinical LocalContractRequestingLocationRel

		CreateOrUpdatePreferredContract is an Instance Action
			restricted
			Parameters
				ParmOldItem         is like Item
				ParmOldVendorItem   is like VendorItem
				ParmItem            is like Item
				ParmVendorItem      is like VendorItem
				ParmFromUpdate      is Boolean
				ParmHasBeenActivated is Boolean

			Action Rules
				LocalItemNumber  	= ParmItem
				LocalVendorItem  	= ParmVendorItem
				OldLocalItemNumber  = ParmOldItem
				OldLocalVendorItem  = ParmOldVendorItem

				if (ParmHasBeenActivated = false
				or (ParmHasBeenActivated = true
				and SamePreferredContractRel !exists))

					if (DifferentPreferredContractRel exists)
	   					invoke FastUpdate first DifferentPreferredContractRel
	   						invoked.Contract 									= Contract
	   						invoked.Vendor      								= Contract.Vendor
	   						invoked.ContractPreferredManufacturer.VendorItem  	= ParmVendorItem
	   					if (ParmFromUpdate)
	   						invoke Delete OldSamePreferredContractRel
					else
					if (DifferentPreferredContractRel !exists)
						if (!ParmFromUpdate)
							invoke Create ContractPreferredManufacturer
								invoked.ContractGroup 									= ContractGroup
								invoked.ContractPreferredManufacturer.ItemNumber 		= ParmItem
								invoked.ContractPreferredManufacturer.VendorItem 		= ParmVendorItem
								invoked.ContractPreferredManufacturer.InventoryCompany 	= ContractParticipant.ParticipantLocation.Company
								invoked.ContractPreferredManufacturer.Location    	   	= ContractParticipant.ParticipantLocation.Location
								invoked.ContractPreferredManufacturer.ReqLocation 		= ContractParticipant.ParticipantLocation.RequestingLocation
								invoked.ContractPreferredManufacturer.PricingGroup 		= ContractParticipant.ParticipantLocation.PricingGroup
								invoked.Contract                                   		= Contract
								invoked.Vendor                                          = Contract.Vendor
						else
							invoke FastUpdate OldSamePreferredContractRel
								invoked.ContractPreferredManufacturer.VendorItem = ParmVendorItem
								invoked.ContractPreferredManufacturer.ItemNumber = ParmItem

		CreatePurchaseOrdersFromStandingContracts is a Set Action
			restricted

			Parameters
				PrmContractGroup is a ContractGroup
				PrmCompany       is an InventoryCompany
				PrmLocation      is an InventoryLocation
				FutureDays       is Numeric size 2

			Parameter Rules

				PrmContractGroup
					required
				PrmCompany
					if (PrmLocation entered)
						constraint (PrmCompany entered)
							"MustSelectCompanyIfLocationSelected"

			Local Fields
				LocalPurchaseOrder 		is like PurchaseOrder
				NewPurchaseOrder   		is a PurchaseOrder view
				LocalInterfaceResultView is a PurchaseOrderInterfaceResult view
				LocalMonthCount			is Numeric 2
				LocalNewCreateDate		is Date

			Instance Selection

				where (Contract.StandingPurchaseType
				and    Contract.OnHold = false
				and    Contract.EffectiveDate <= current corporate date
				and   (Contract.ContractStatus.Active
				or     Contract.ContractStatus.Amendment
				or     Contract.ContractStatus.Addendum)
				and   (PrmCompany !entered
				or     PrmCompany  = ContractParticipant.ParticipantLocation.Company)
				and   (PrmLocation !entered
				or     PrmLocation = ContractParticipant.ParticipantLocation.Location))

			Sort Order
				ContractGroup
				Contract
				ContractParticipant.ParticipantLocation.Company

			Action Rules

				Empty Set Rules


					invoke Create PurchaseOrderInterfaceResult
						assign result to LocalInterfaceResultView
						invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
						invoked.RunTime						= current timestamp
						invoked.ContractGroup				= ContractGroup
						invoked.Company						= PrmCompany
						invoked.Location                    = PrmLocation
						invoked.FutureDays                  = FutureDays
						invoked.Origin                      = 2 
						invoked.Status                      = 1 

				ContractGroup Set Rules

					Entrance Rules

						invoke Create PurchaseOrderInterfaceResult
							assign result to LocalInterfaceResultView
							invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
							invoked.RunTime						= current timestamp
							invoked.ContractGroup				= ContractGroup
							invoked.Company						= PrmCompany
							invoked.Location                    = PrmLocation
							invoked.FutureDays                  = FutureDays
							invoked.Origin                      = 2 
							invoked.Status                      = 1 

				Instance Rules

					if (Contract.ScheduleFrequency.Monthly)
						LocalMonthCount = 1
					if (Contract.ScheduleFrequency.Quarterly)
						LocalMonthCount = 3
					if (Contract.ScheduleFrequency.Weekly)
						LocalNewCreateDate = Contract.LastReleaseDate + 7
					else
					if (Contract.ScheduleFrequency.BiWeekly)
						LocalNewCreateDate = Contract.LastReleaseDate + 14
					else
						LocalNewCreateDate = Contract.LastReleaseDate + LocalMonthCount as months
					InstanceLocalNewCreateDate = LocalNewCreateDate

					if   ((current corporate date + FutureDays as days >= LocalNewCreateDate)
					and  ((Contract.MaximumReleaseNumber > 0
					and    Contract.MaximumReleaseNumber > Contract.LastPORelease)
					or    (Contract.ExpirationDate > 0
					and    current corporate date + FutureDays as days <= Contract.ExpirationDate)))
						if (StandingEligibleLinesExist)
							invoke Unreleased.Create PurchaseOrder
								assign result to NewPurchaseOrder
								invoked.Company    					= ContractParticipant.ParticipantLocation.Company
								invoked.ShipToLocation          	= ContractParticipant.ParticipantLocation.Location
								invoked.Vendor     					= Contract.Vendor
								if (Contract.ApPoPurchaseFrom.PurchaseFromLocation entered)
									invoked.PurchaseFromLocation 	= Contract.ApPoPurchaseFrom.PurchaseFromLocation
								else
								if (Contract.ApPoPurchaseFrom.VendorLocation entered)
									invoked.PurchaseFromLocation 	= Contract.ApPoPurchaseFrom.VendorLocation
								invoked.POCode     					= Contract.POCode
								invoked.PORelease  					= Contract.LastPORelease + 1
								invoked.Buyer      					= Contract.Buyer
								invoked.TermCode                	= Contract.TermsCode
								invoked.FreightTerm             	= Contract.FreightTerm
								LocalProcessLevel = Contract.ProcessLevelGroup.ProcessLevel
								if (ProcessLevelRel exists)
									invoked.ProcessLevel        	= Contract.ProcessLevelGroup.ProcessLevel
								invoked.ShipTerm                	= Contract.ShipTerm
								invoked.PurchaseOrderUserField1 	= Contract.PoUserField1
								invoked.PurchaseOrderUserField3 	= Contract.PoUserField3
								invoked.PurchaseOrderUserField5 	= Contract.PoUserField5
								invoked.BlanketOrStandingContract 	= Contract
								if (Contract.DoNotIssue)
									invoked.IssueMethod         = "D" 
								invoked.OriginatingInterfaceRun   	= LocalInterfaceResultView.PurchaseOrderInterfaceResult

							LocalPurchaseOrder = NewPurchaseOrder.PurchaseOrder

							invoke CreatePurchaseOrderLinesForStandingContract ContractLine
								invoked.ParmContractGroup  = ContractGroup
								invoked.ParmContract       = Contract
								invoked.ParmCompany        = ContractParticipant.ParticipantLocation.Company
								invoked.ParmLocation       = ContractParticipant.ParticipantLocation.Location
								invoked.ParmPurchaseOrder  = LocalPurchaseOrder
								invoked.ParmCreateDate     = InstanceLocalNewCreateDate
								invoked.ParmResult         = LocalInterfaceResultView.PurchaseOrderInterfaceResult

		Purge is a Purge Action
			restricted

