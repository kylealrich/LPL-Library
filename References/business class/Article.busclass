Article is a BusinessClass
    owned by procurement
    prefix is Arti

	Patterns
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

    Ontology
		symbolic key is Article
		
	Persistent Fields
		Title      				is a Description
		HeaderText 				is Alpha 100
		DisplayOrder
		LastTAndCDisplayOrder	is a DisplayOrder
			disable Auditing
		AllowModification 		is Boolean
		Active 					is Boolean
		
	Transient Fields
		NewDisplayOrder			is a DisplayOrder
		
	Local Fields
		LocalCheckQuestion 
		LocalCheckQuestionAnswer 
		LocalTermAndCondition
		LocalCheckContract 
		LocalCompany			is a SourcingCompany
		LocalSourcingEvent		is a SourcingEvent
		LocalRepositoryDisplayOrder is a DisplayOrder

	Derived Fields
		TermsNeedApproval is a DerivedField
			type is Boolean
			if (TermsNeedingApprovalExist)
				return true
			else
				return false
		
		RepresentativeText is a StringField
			type is Text
			default label is "Article"
			Article " - " Title
	Conditions
	
		ArticleExists
			when (Article entered)
		
		TermsExists
			when (ActiveTermAndCondition exists)

		HasTerms
			when (TermAndConditionRel exists)
		
		TermsNeedingApprovalExist
			restricted
			when (TermAndConditionNeedsApprovalRel exists)

		CategoryUsingCreationApprovals
			restricted
			when (CategoryUsingCreationApprovalsRel exists)

		SubCategoryUsingCreationApprovals
			restricted
			when (any CategoryRel.SubCategoryUsingCreationApproval)

		CatOrSubcatUsingCreationApprovals
			restricted
			when (CategoryUsingCreationApprovals
			or	  SubCategoryUsingCreationApprovals)

		HasContractArticlesWithUnapprovedChanges
			restricted
			when (ContractArticlesWithUnapprovedChangesRel exists)
		IsActive 
			when (Active)
		
		TemplateArticleExists
			restricted
			when (ContractTemplateArticleToUpdateRel exists
			or EventTemplateArticleToUpdateRel exists)
			
		ContractTemplateArticleExists
			restricted
			when (ContractTemplateArticleToUpdateRel exists)
		
		EventTemplateArticleExists
			restricted
			when (EventTemplateArticleToUpdateRel exists)

	Relations
		QuestionAnswerTermRel
			one-to-one relation to QuestionAnswerTerm
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question		 = LocalCheckQuestion.CheckQuestion
				related.QuestionAnswer 	 = LocalCheckQuestionAnswer.CheckQuestionAnswer
				related.Article			 = Article
				related.TermAndCondition = LocalTermAndCondition.CheckTermAndCondition		

		QuestionAnswerArticleRel
			one-to-one relation to QuestionAnswerArticle
			Field Mapping uses symbolic key
				related.ProcurementGroup = ProcurementGroup
				related.Question		 = LocalCheckQuestion.CheckQuestion
				related.QuestionAnswer 	 = LocalCheckQuestionAnswer.CheckQuestionAnswer
				related.Article			 = Article	
		
		ContractArticleRel		
			one-to-many relation to ContractArticle
			Field Mapping uses ByArticle
				related.ContractGroup = ProcurementGroup
				related.Contract	  = LocalCheckContract.CheckContract
				related.Article    	  = Article

		SourcingEventArticleRel		
			one-to-many relation to SourcingEventArticle
			Field Mapping uses ByArticle
				related.Company       = LocalCompany
				related.SourcingEvent = LocalSourcingEvent
				related.Article    	  = Article

		AnyQuestionAnswerArticleRel
			one-to-many relation to QuestionAnswerArticle
			Field Mapping uses ByArticle
				related.ProcurementGroup = ProcurementGroup
				related.Article		     = Article
			Instance Selection
				where (related.Question.Active)
								
    	ContractDisplayOrderRel		
			one-to-many relation to ContractArticle
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
				related.Contract        = LocalCheckContract.CheckContract
			Instance Selection
				where (related.Article.DisplayOrder > DisplayOrder)

    	EventDisplayOrderRel		
			one-to-many relation to SourcingEventArticle
			Field Mapping uses symbolic key
				related.Company			 = LocalCompany
				related.SourcingEvent	 = LocalSourcingEvent
			Instance Selection
				where (related.Article.DisplayOrder > DisplayOrder)

    	ContractRel		
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
				related.Contract        = LocalCheckContract.CheckContract

		ActiveTermAndCondition is a TermAndCondition set
			Instance Selection
				where (related.Active
				and	   related.CreationApproved)

		ActiveTermAndConditionRel
			one-to-many relation to TermAndCondition
			Field Mapping uses ByDisplayString
   				related.ProcurementGroup	= ProcurementGroup
                related.Article				= Article
			Instance Selection
                where (related.Active
                and	   related.CreationApproved)

		TermAndConditionRel is a TermAndCondition set

		TermAndConditionNeedsApprovalRel
			one-to-many relation to TermAndCondition
			Field Mapping uses ByDisplayOrder
   				related.ProcurementGroup	= ProcurementGroup
                related.Article				= Article
			Instance Selection
                where (related.Status.NeedsApproval)

		CategoryUsingCreationApprovalsRel
			one-to-many relation to Category
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup
			Instance Selection
				where (related.RequireTermCreationApproval)

		CategoryRel
			one-to-many relation to Category
			Field Mapping uses symbolic key
				related.ProcurementGroup  		= ProcurementGroup

		ContractTemplateArticleToUpdateRel
			one-to-many relation to ContractArticle
			Field Mapping uses symbolic key
				related.ContractGroup   = ProcurementGroup
			Instance Selection
				where (related.Article          			= Article
				and    related.Contract.ContractTemplate 	= true
				and    related.Modified         			= false)

		EventTemplateArticleToUpdateRel
			one-to-many relation to SourcingEventArticle
			Field Mapping uses symbolic key
			Instance Selection
				where (related.Article 					= Article
				and    related.SourcingEvent.Template	= true
				and    related.RepositoryModified		= false)
				
		ContractArticlesWithUnapprovedChangesRel is a ContractArticle set
			Instance Selection
				where (related.ContractGroup	= ProcurementGroup
				and	   related.Article			= Article
				and	   related.Contract.InProgress
				and	   related.Contract.HasUnapprovedArticleChanges)

 	Sets
 		ByDisplayOrder
 			duplicates
 			Sort Order
 				ProcurementGroup
 				DisplayOrder
 				Article
 				
 	Field Rules
 		Title 
 			required
 		Active 
 			default to true
		AllowModification
			if (AllowModification changed)
				constraint (!HasContractArticlesWithUnapprovedChanges)
					"AllowModificationWhenAttachedToContractsOrEventsCannotBeChanged;ContractsUsingThisArticleExistThatAreInTheApprovalProcess"

	Attach Rules
		constraint (Active)
			"ArticleIsInactive"	
			
	Actions
		Create is a Create Action

			Field Rules
	 			DisplayOrder
	 				autosequence using ProcurementGroup.LastArticleDisplayOrder 
				HeaderText
					if (!HeaderText entered)		
						default to Title
						
		Update is an Update Action
			Action Rules
				if (!Active
				and  old Active = true)
					constraint (!AnyQuestionAnswerArticleRel exists)
						"CannotInactivateThisArticle;ItIsAssociatedWithActiveQuestionsOrAnswers"
						
		UpdateArticleAndTemplates is an Instance Action
			default label is "UpdateArticleOnContractAndEventTemplates"
			valid when (TemplateArticleExists)
			Parameters
				NewHeaderText is Alpha 100
				UpdateTitle   is Boolean 
			
			Parameter Rules
				NewHeaderText
					required
			
			Action Rules
			
				HeaderText = NewHeaderText
				if (UpdateTitle)
					Title = NewHeaderText 			
				for each ContractTemplateArticleToUpdateRel
					invoke TermChangedUpdate each
						invoked.HeaderText 	= NewHeaderText	
						if (UpdateTitle)
							invoked.Title	= NewHeaderText
				for each EventTemplateArticleToUpdateRel
					invoke EventTermChangedUpdate each
						invoked.HeaderText = NewHeaderText
						if (UpdateTitle)
							invoked.Title = NewHeaderText


		Delete is a Delete Action
			Action Rules
				for each TermAndConditionRel
					invoke CancelPendingProcesses each

		UpdateDisplayStringForTerms is an Instance Action
			restricted
			
			Action Rules
				
				for each TermAndConditionRel
					invoke UpdateDisplayStringValues each
					
		AttachToContractWithTerms is an Instance Action
			default label is "AttachWithTerms"
			Parameters
				Contract 
			
			Local Fields
				NewArticle is a ContractArticle view
				NewContractTerm is a ContractTermAndCondition view
			
			Action Rules
				
				invoke UpdateDisplayStringForTerms
				
				LocalCheckContract.CheckContract = Contract
				
				constraint (Contract.AddAddendum)
					"CanNotAddArticleToContract;ContractStatusMustBeDraftOrAddendum"

				constraint (!ContractArticleRel exists)
					"ArticleIsAlreadyAttachedToThisContract"

				if (ContractDisplayOrderRel exists
				and !ContractRel.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first ContractDisplayOrderRel.DisplayOrder

				if (Contract.ContractStatus.Draft)
					invoke Update Draft Contract
						invoked.CreateFromLibrary = true
					invoke Create Draft ContractArticle
						assign result to NewArticle
						invoked.ContractGroup   = ProcurementGroup
						invoked.Contract	    = Contract
						invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
						fill in fields from Article
						
					for each ActiveTermAndConditionRel
						invoke Create Draft ContractTermAndCondition
							assign result to NewContractTerm
							invoked.ContractGroup 			= ProcurementGroup
							invoked.Contract				= Contract
							invoked.TermAndCondition		= each.TermAndCondition
							invoked.ContractArticle			= NewArticle.ContractArticle
							invoked.NewDisplayOrder			= each.TermDisplayOrder
							invoked.FromRepository          = true
							invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
							fill in fields from each
								except invoked.ParentTermAndCondition
						
						for each each.TermAndConditionAttachment set
							invoke AutoCreateFromRepository ContractTermAndConditionAttachment 
								invoked.ContractGroup					   = ProcurementGroup
								invoked.Contract						   = Contract
								invoked.ContractArticle             	   = NewArticle.ContractArticle
								invoked.ContractTermAndCondition		   = NewContractTerm.ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
								fill in fields from each
				
				else
				if (Contract.ContractStatus.Addendum)
					invoke Update Addendum Contract
						invoked.CreateFromLibrary = true
					invoke Create Addendum ContractArticle
						assign result to NewArticle
						invoked.ContractGroup   = ProcurementGroup
						invoked.Contract	    = Contract
						invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
						fill in fields from Article
					
					for each ActiveTermAndConditionRel
						invoke Create Addendum ContractTermAndCondition
							assign result to NewContractTerm
							invoked.ContractGroup 			= ProcurementGroup
							invoked.Contract				= Contract
							invoked.TermAndCondition		= each.TermAndCondition
							invoked.ContractArticle			= NewArticle.ContractArticle
							invoked.NewDisplayOrder			= each.TermDisplayOrder
							fill in fields from each
								except invoked.ParentTermAndCondition
							invoked.CreationApproved		= false
							invoked.FromRepository          = true
							invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
							
						for each each.TermAndConditionAttachment set
							invoke AutoCreateFromRepository ContractTermAndConditionAttachment 
								invoked.ContractGroup					   = ProcurementGroup
								invoked.Contract						   = Contract
								invoked.ContractArticle             	   = NewArticle.ContractArticle
								invoked.ContractTermAndCondition		   = NewContractTerm.ContractTermAndCondition
								invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
								fill in fields from each

		AttachToContractWithTermsInNegotiation is an Instance Action
			default label is "AttachWithTerms"
			restricted
			Parameters
				Contract 
			
			Local Fields
				NewArticle 		is a ContractArticle view
				NewContractTerm is a ContractTermAndCondition view
			
			Action Rules
				LocalCheckContract.CheckContract = Contract
				
				constraint (!ContractArticleRel exists)
					"ArticleIsAlreadyAttachedToThisContract"

				if (ContractDisplayOrderRel exists
				and !ContractRel.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first ContractDisplayOrderRel.DisplayOrder

				invoke FastUpdate Contract
					invoked.CreateFromLibrary = true
				invoke AddArticleDuringNegotiation ContractArticle
					assign result to NewArticle
					invoked.ContractGroup				= ProcurementGroup
					invoked.Contract					= Contract
					invoked.NewDisplayOrder 			= LocalRepositoryDisplayOrder
					fill in fields from Article
					if (Contract.ContractStatus.Released)
						invoked.ContractStatus	 			= 2
					else
					if (Contract.ContractStatus.Addendum)
						invoked.ContractStatus              = 5
				for each ActiveTermAndConditionRel
					invoke AddTermDuringNegotiation ContractTermAndCondition
						assign result to NewContractTerm
						invoked.ContractGroup				= ProcurementGroup
						invoked.Contract					= Contract
						invoked.TermAndCondition			= each.TermAndCondition
						invoked.ContractArticle				= NewArticle.ContractArticle
						invoked.NewDisplayOrder				= each.TermDisplayOrder
						fill in fields from each
						invoked.ContractStatus	 			= 2
					for each each.TermAndConditionAttachment set
						invoke AutoCreateFromRepository ContractTermAndConditionAttachment 
							invoked.ContractGroup					   = ProcurementGroup
							invoked.Contract						   = Contract
							invoked.ContractArticle             	   = NewArticle.ContractArticle
							invoked.ContractTermAndCondition		   = NewContractTerm.ContractTermAndCondition
							invoked.ContractTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each

		AttachToContractWithoutTerms is an Instance Action
			default label is "AttachWithoutTerms"
			Parameters
				Contract 
			
			Local Fields
				NewArticle is a ContractArticle view
			
			Action Rules
				LocalCheckContract.CheckContract = Contract
				
				constraint (Contract.AddAddendum)
					"CanNotAddArticleToContract;ContractStatusMustBeDraftOrAddendum"

				constraint (!ContractArticleRel exists)
					"ArticleIsAlreadyAttachedToThisContract"

				if (ContractDisplayOrderRel exists
				and !ContractRel.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first ContractDisplayOrderRel.DisplayOrder

				if (Contract.ContractStatus.Draft)
					invoke Create Draft ContractArticle
						invoked.ContractGroup   = ProcurementGroup
						invoked.Contract	    = Contract
						invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
						fill in fields from Article
				else
				if (Contract.ContractStatus.Addendum)
					invoke Create Addendum ContractArticle
						invoked.ContractGroup   = ProcurementGroup
						invoked.Contract	    = Contract
						invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
						fill in fields from Article

		AttachToContractWithoutTermsInNegotiation is an Instance Action
			default label is "AttachWithoutTerms"
			restricted
			Parameters
				Contract 
			
			Local Fields
				NewArticle is a ContractArticle view
			
			Action Rules
				LocalCheckContract.CheckContract = Contract

				constraint (!ContractArticleRel exists)
					"ArticleIsAlreadyAttachedToThisContract"

				if (ContractDisplayOrderRel exists
				and !ContractRel.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first ContractDisplayOrderRel.DisplayOrder

				invoke AddArticleDuringNegotiation ContractArticle
					assign result to NewArticle
					invoked.ContractGroup				= ProcurementGroup
					invoked.Contract					= Contract
					invoked.NewDisplayOrder 			= LocalRepositoryDisplayOrder
					fill in fields from Article
					invoked.ContractStatus	 			= 2

		AttachToQuestionOrAnswer is an Instance Action
			Parameters
				Question
				QuestionAnswer
				
			Parameter Rules
				Question
					required
				
			Action Rules
				LocalCheckQuestion.CheckQuestion = Question
				LocalCheckQuestionAnswer.CheckQuestionAnswer = QuestionAnswer

				constraint (!QuestionAnswerArticleRel exists)
					"ArticleIsAlreadyAttachedToThisQuestionOrAnswer"

				invoke Create QuestionAnswerArticle
					invoked.ProcurementGroup = ProcurementGroup
					invoked.Question         = Question
					invoked.QuestionAnswer   = QuestionAnswer
					invoked.Article          = Article

				for each ActiveTermAndCondition
					invoke Create QuestionAnswerTerm
						invoked.ProcurementGroup = ProcurementGroup
						invoked.Question		 = Question
						invoked.QuestionAnswer   = QuestionAnswer
						invoked.Article          = Article
						invoked.TermAndCondition = each.TermAndCondition


		AttachToEventWithTerms is an Instance Action
			default label is "AttachWithTerms"
			Parameters
				Company			is a SourcingCompany
				SourcingEvent
			
			Local Fields
				NewArticle is a SourcingEventArticle view
				NewTerm is a SourcingEventTermAndCondition view
			
			Action Rules
				
				LocalSourcingEvent = SourcingEvent
				LocalCompany	   = Company
				
				constraint (!SourcingEventArticleRel exists)
					"ArticleIsAlreadyAttachedToThisSourcingEvent"
				if (SourcingEvent.Status.Draft)
					invoke Update Draft SourcingEvent
						invoked.CreateFromLibrary = true
				if (EventDisplayOrderRel exists
				and !LocalSourcingEvent.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first EventDisplayOrderRel.DisplayOrder

				invoke Create SourcingEventArticle
					assign result to NewArticle
					invoked.Company         = Company
					invoked.SourcingEvent   = SourcingEvent
					invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
					fill in fields from Article
						
				for each ActiveTermAndConditionRel
					invoke CreateFromTerm SourcingEventTermAndCondition
						assign result to NewTerm
						invoked.Company		 			= Company
						invoked.SourcingEvent 			= SourcingEvent
						invoked.TermAndConditionNumber	= each.TermAndCondition
						invoked.CMTerm	 				= true
						invoked.SourcingEventArticle	= NewArticle.SourcingEventArticle
						invoked.FromRepository          = true
						invoked.LocalParentTermAndCondition = each.ParentTermAndCondition
						fill in fields from each
							except invoked.ParentTermAndCondition
							except invoked.LastChildTermAndConditionDisplayOrder
													
					for each each.TermAndConditionAttachment set 
						invoke CreateFromTerm SourcingEventTermAndConditionAttachment
							invoked.Company			 						= Company
							invoked.SourcingEvent							= SourcingEvent
							invoked.SourcingEventArticle       				= NewArticle.SourcingEventArticle
							invoked.SourcingEventTermAndCondition			= NewTerm.SourcingEventTermAndCondition
							invoked.SourcingEventTermAndConditionAttachment = each.TermAndConditionAttachment
							fill in fields from each

		AttachToEventWithoutTerms is an Instance Action
			default label is "AttachWithoutTerms"
			Parameters
				Company			is a SourcingCompany
				SourcingEvent
			
			Local Fields
				NewArticle is a SourcingEventArticle view
			
			Action Rules
				
				LocalSourcingEvent = SourcingEvent
				LocalCompany	   = Company
				
				constraint (!SourcingEventArticleRel exists)
					"ArticleIsAlreadyAttachedToThisSourcingEvent"

				if (EventDisplayOrderRel exists
				and !LocalSourcingEvent.ArticleDisplayChange)
					LocalRepositoryDisplayOrder = first EventDisplayOrderRel.DisplayOrder

				invoke Create SourcingEventArticle
					assign result to NewArticle
					invoked.Company         = Company
					invoked.SourcingEvent   = SourcingEvent
					invoked.NewDisplayOrder = LocalRepositoryDisplayOrder
					fill in fields from Article
