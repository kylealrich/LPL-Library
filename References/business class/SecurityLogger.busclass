SecurityLogger is a BusinessClass
    owned by security
    prefix is SLGR
    stored in environment
	contains environment data // TODO - This likely can be removed since "disable data area copy" has been added, once that pattern is fully implemented.
	disable data area copy

	Ontology
		symbolic key is SecurityLogger

	Patterns
		implements CRUD
		implements SecurityCache
		disable AuditIndex

	Persistent Fields
		Description	is Alpha size 50
		LogLevel	is Numeric size 2
			States
				DEBUG		value is 11
				TRACE		value is 7
				INFO		value is 4
					default label is "INFORMATION"
				WARNING		value is 3
				ERROR		value is 2
				FATAL		value is 1
		SessionDebugAllowed	is Boolean	
		ProducerFilter
		RefreshTimeOut is Numeric size 4
		Log 		is Text

	Field Rules
		ProducerFilter.IsEnabled
			default to false
		RefreshTimeOut
			default to 30	
		SessionDebugAllowed
			default to true
			
	Relations

        SecSessionDebugRel
            one-to-many relation to SecuritySessionDebug
            Field Mapping uses BySecurityLogger
                related.SecurityLogger = SecurityLogger
	Conditions
		IsAuthorization
			default label is "Authorization"
			when (SecurityLogger = "SecurityLogger")
					
	Actions	

        Create is an Action
 		Update is an Action
		Reset is an Instance Action
		Sync is an Instance Action
		
		ClearLog is an Instance Action
			Action Rules
				for each SecSessionDebugRel
					invoke Delete each 

		ViewLog is an Instance Action		
			Parameters
				SendVia					is Numeric size 1
					States
						FTP					value is 1


				SubDirectory			is Alpha 100	
				ZipFileName				is Alpha 100	

			Parameter Rules
				SendVia
					required
					initial value is "FTP"	
					default to "FTP"	
						
			Action Rules
				if (SendVia.FTP)
					invoke FTPSecurityLogger
						invoked.SubDirectory		=	SubDirectory
						invoked.ZipFileName			=	ZipFileName
								
		FTPSecurityLogger is an Instance Action	
			restricted	
			Parameters
				SubDirectory			is Alpha 100
				ZipFileName				is Alpha 100

		
