CurrencyRelationship is a BusinessClass
    owned by currency
    prefix is Curl

    Ontology
		symbolic key is CurrencyRelationship

    Patterns
        implements StaticJava
        disable AuditIndex
 		disable AsOfDateProcessing        

    Persistent Fields

		AutoGenerate 		is Boolean
		MultDiv 			is AlphaUpper size 1
			States		
				Multiply value is 0
				Divide   value is 1
		Triangulate 		is Boolean
		TriangulateVia 		is a Currency
		OverrideProtection 	is Boolean
		OverrideTolerance 	is Numeric size 3
		
	Transient Fields
		ReverseCurrRelationship is Boolean
		
	Field Rules
		MultDiv
			initial value is MultDiv.Multiply
			default to MultDiv.Multiply
		TriangulateVia
			constraint (Triangulate)
				"TheTriangulateViaMustBeBlankWhenTriangulateIsSetToNo"
			if (Triangulate)
				required
			constraint (TriangulateVia != CurrencyRelationship.FromCurrency
			and			TriangulateVia != CurrencyRelationship.ToCurrency)
				"MustTriangulateViaAThirdCurrency"
		OverrideTolerance
			constraint (!OverrideProtection)
				"OverrideToleranceMustBeBlankWhenOverrideProtectionIsSetToYes"
			constraint (OverrideTolerance >= 0
			and	  		OverrideTolerance <= 100)
				"ValidPercentageValuesAreFrom0Thru100Only"

	Relations
		CurrencyRelationshipRel
			one-to-one relation to CurrencyRelationship
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.CurrencyRelationship.FromCurrency	= CurrencyRelationship.ToCurrency
				related.CurrencyRelationship.ToCurrency		= CurrencyRelationship.FromCurrency

		CurrencyCodesFromRel
			one-to-many relation to Currency
			Field Mapping uses symbolic key
				related.Currency		= CurrencyRelationship.FromCurrency

		CurrencyCodesToRel
			one-to-many relation to Currency
			Field Mapping uses symbolic key
				related.Currency		= CurrencyRelationship.ToCurrency

	Sets
		ByToCurrency
			Sort Order 
				FinanceEnterpriseGroup
				CurrencyRelationship.ToCurrency
				CurrencyRelationship.FromCurrency

	Actions
		Create is an Action
			Action Rules 
			Exit Rules
				invoke AutoGenerateRelationship

		Update is an Action
			Action Rules
				invoke AutoGenerateRelationship
				if (AutoGenerate = false)
					if (ReverseCurrRelationship = false)
						if (CurrencyRelationshipRel exist)
							invoke Update CurrencyRelationshipRel
								if (invoked.AutoGenerate)
									invoked.AutoGenerate            = false
									invoked.ReverseCurrRelationship = true
								else
									invoked.ReverseCurrRelationship = true

		Delete is an Action
			Action Rules
				if (AutoGenerate)
					invoke Delete CurrencyRelationshipRel

		AutoGenerateRelationship is an Instance Action
			restricted
			Action Rules 
				if (AutoGenerate)
					if (ReverseCurrRelationship = false)
						if (CurrencyRelationshipRel exist)
							invoke Update CurrencyRelationshipRel
								invoked.AutoGenerate            = CurrencyRelationship.AutoGenerate
								invoked.Triangulate             = CurrencyRelationship.Triangulate
								invoked.TriangulateVia          = CurrencyRelationship.TriangulateVia
								invoked.OverrideProtection      = CurrencyRelationship.OverrideProtection
								invoked.OverrideTolerance       = CurrencyRelationship.OverrideTolerance
								invoked.ReverseCurrRelationship = true




								invoked.MultDiv = MultDiv.Multiply
						else						
							invoke Create
								invoked.FinanceEnterpriseGroup			  = FinanceEnterpriseGroup								
								invoked.CurrencyRelationship.FromCurrency = CurrencyRelationship.ToCurrency
								invoked.CurrencyRelationship.ToCurrency   = CurrencyRelationship.FromCurrency
								invoked.AutoGenerate            		  = CurrencyRelationship.AutoGenerate
								invoked.Triangulate             		  = CurrencyRelationship.Triangulate
								invoked.TriangulateVia          		  = CurrencyRelationship.TriangulateVia
								invoked.OverrideProtection      		  = CurrencyRelationship.OverrideProtection
								invoked.OverrideTolerance       		  = CurrencyRelationship.OverrideTolerance
								invoked.ReverseCurrRelationship 		  = true




								invoked.MultDiv = MultDiv.Multiply
