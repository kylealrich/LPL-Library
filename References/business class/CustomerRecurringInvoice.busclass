CustomerRecurringInvoice is a BusinessClass
    owned by bl
    prefix is BRC
    classic name is BLRICUST

    Ontology
        symbolic key is CustomerRecurringInvoice
            classic set name is BRCSET1
            classic name for RecurringInvoiceParameter is RECUR-INVOICE

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        CustomerShipTo
            classic name is SHIP-TO
        Contact
        PhoneNumber                     is Alpha size 10
            classic name is PHONE-NBR
        Currency
            classic name is CURRENCY-CODE
        HoldCode                        is a ReceivableHoldCode
        TermCode						is a TermsCode
            classic name is TERMS-CD
        Reference
        BillingProcessLevel
            classic name is PROCESS-LEVEL
        Location						is an InventoryLocation
        Territory
        SalesRepresentative
            classic name is SALESMAN
		SalesRepresentative2 		is a SalesRepresentative
		CommissionRate1                  is a ChrgRate
            classic name is COMM-RATE-1
		CommissionRate2                  is a ChrgRate
            classic name is COMM-RATE-2

		CommissionSplitPercentage
            classic name is COMM-SPLIT
        InvoiceCount
        Frequency				 		is AlphaUpper size 1
	        States
	            Weekly       value is "W"   
	            SemiMonthly  value is "S"    
	            Monthly      value is "M"
	            Quarterly    value is "Q"
	            Yearly       value is "Y"
	            UserDefined  value is "U"        										
        CycleCode                       is AlphaUpper size 3 
        StartDate
        StopDate                        is Date
        Project							is a FinanceCodeBlockProjectOnly
            classic name is ACTIVITY
        UserDefinedField1               is a TransUser1
            classic name is TRANS-USER1
        UserDefinedField2               is a S3Agent
            classic name is TRANS-USER2
        UserDefinedField3               is Date
            classic name is TRANS-USER3
        UserDefinedField4               is a TransUser4
            classic name is TRANS-USER4
        UserDefinedField5               is an InternationalAmount
            classic name is TRANS-USER5
        StandardCommentCode1            is a BillingStandardCommentHeader
            classic name is STD-COMM1
        StandardCommentCode2            is a BillingStandardCommentHeader
            classic name is STD-COMM2
        StandardCommentCode3            is a BillingStandardCommentHeader
            classic name is STD-COMM3
        LastLineNumber                  is a LineNumber
            classic name is LAST-LINE-NBR
        LastAddOnChargeSequence         is a Sequence3
            classic name is LAST-MISC-SEQ
        LastCommentSequence             is a Sequence3
            classic name is LAST-COMM-SEQ
        BillingElectronicPaymentType
            classic name is EP-TYPE
        ElectronicPaymentAccount        is a BillingCustomerCreditCard     
            classic name is EP-ACCOUNT
        ElectronicPaymentExpirationDate is Date
            sql name is EPaymentExpirationDate
            classic name is EP-EXP-DATE
        BillTo                          is a CustomerBillTo
        TaxCode
        TaxExemptCode
            classic name is TAX-EXEMPT-CD
        PurchaseOrderNumber             is a CustomerPurchaseOrder
            classic name is PO-NUMBER
        CompanyCustomer

	Local Fields
		LocalLineNumber					is like CustomerRecurringInvoiceLine
		CurrencyRelationship

	Derived Fields
		ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforCustomerInvoice"
			
		ContextMessageText is a MessageField
			restricted
			"CustomerRecurringInvoice<CustomerRecurringInvoice>"
	
    Conditions

        IsCurrencyEntered
        	restricted
            when (Currency entered)

        IsHoldCode
        	restricted
            when (HoldCode entered)

        IsLocationEntered
        	restricted
            when (Location entered)

        IsSalesmanEntered
        	restricted
            when (SalesRepresentative entered)

        IsSalesRepresentative2Entered
            classic name is SALESMAN2-ENTR
            restricted
            when (SalesRepresentative2 entered)

		IsValidElectronicPaymentAccount
			restricted 
			when ((BillingCustomerCreditCardListRel exists
			and    ElectronicPaymentAccount exists)
			or     BillingCustomerCreditCardListRel not exists)
		
		HasRecurringInvoiceParameter
            restricted
            when (RecurringInvoiceParameter exists)		

		SecurityGroupAllowsAccess
			when (actor.context.CompanySecurityGroup = blank
			or    CompanySecurityGroupMemberRel exists)

    Relations

		CompanySecurityGroupMemberRel
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company                     = Company

        CustomerRecurringInvoiceCommentsRel is a CustomerRecurringInvoiceComment set
            Instance Selection
                where (related.CustomerRecurringInvoiceLine not entered)

        CustomerRecurringInvoiceLinesRel is a CustomerRecurringInvoiceLine set

		CustomerRecurringInvoiceLinesForStartDateRel is a CustomerRecurringInvoiceLine set
			Instance Selection
				where (related.StartDate < StartDate)
		
		CustomerRecurringInvoiceLinesForStopDateRel is a CustomerRecurringInvoiceLine set
			Instance Selection
				where (related.StopDate > StopDate)						

        CustomerRecurringInvoiceAddOnChargesRel is a CustomerRecurringInvoiceAddOnCharge set
			Instance Selection
				where (related.CustomerRecurringInvoiceLine not entered)

		CustomerRecurringInvoiceAddOnChargeForStartDateRel is a CustomerRecurringInvoiceAddOnCharge set
			Instance Selection
				where (related.CustomerRecurringInvoiceLine not entered
				and    related.StartDate < StartDate)
		
		CustomerRecurringInvoiceAddOnChargeForStopDateRel is a CustomerRecurringInvoiceAddOnCharge set
			Instance Selection
				where (related.CustomerRecurringInvoiceLine not entered
				and    related.StopDate > StopDate)						
		
		AllCustomerRecurringInvoiceAddOnChargesRel is a CustomerRecurringInvoiceAddOnCharge set

		RecurringInvoiceAttachmentsRel is a RecurringInvoiceAttachment set

		BillingCustomerCreditCardListRel
			one-to-many relation to BillingCustomerCreditCard
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= Customer
				related.BillingElectronicPaymentType 	= BillingElectronicPaymentType				
		
	Field Rules
		
		Frequency
			initial value is RecurringInvoiceParameter.Frequency
			default to RecurringInvoiceParameter.Frequency
			
		CycleCode
			initial value is RecurringInvoiceParameter.CycleCode
			default to RecurringInvoiceParameter.CycleCode
			
		BillingProcessLevel
			initial value is RecurringInvoiceParameter.BillingProcessLevel
			default to RecurringInvoiceParameter.BillingProcessLevel
			required
			
		Location
			initial value is RecurringInvoiceParameter.Location
			default to RecurringInvoiceParameter.Location
			required																		
			cannot be changed																
		
		StartDate
			if (RecurringInvoiceParameter.CurrentBillDate not entered)
				default to RecurringInvoiceParameter.StartDate
			else
			if (current corporate date > RecurringInvoiceParameter.CurrentBillDate)
				default to RecurringInvoiceParameter.CurrentBillDate
			else
				default to current corporate date
				
			required																		
			
			constraint (StartDate >= RecurringInvoiceParameter.StartDate)
				"StartDateCannotBeLessThanRecurringInvoiceParameterStartDate"				

			if (action type.Create)
				if (StartDate < current corporate date)
					constraint (StartDate >= RecurringInvoiceParameter.CurrentBillDate)
						"StartDateCannotBeLessThanRecurringInvoiceParameterCurrentBillDate"		
					
			constraint (CustomerRecurringInvoiceLinesForStartDateRel not exist)
				"StartDateCannotBeGreaterThanCustomerRecurringInvoiceLineStartDate"
				
			constraint (CustomerRecurringInvoiceAddOnChargeForStartDateRel not exist)
				"StartDateCannotBeGreaterThanInvoiceAddOnChargeStartDate"
				

		StopDate
			initial value is RecurringInvoiceParameter.StopDate
			default to RecurringInvoiceParameter.StopDate
	
			if (RecurringInvoiceParameter.NumberOfInvoices not entered)
				required																		
			
			constraint (StopDate >= StartDate)
				"StopDateCannotBeLessThanStartDate"
				
			constraint (StopDate <= RecurringInvoiceParameter.StopDate)
				"StopDateCannotBeGreaterThanRecurringInvoiceParameterStopDate"

			constraint (CustomerRecurringInvoiceLinesForStopDateRel not exist)
				"StopDateCannotBeLessThanCustomerRecurringInvoiceLineStopDate"

			constraint (CustomerRecurringInvoiceAddOnChargeForStopDateRel not exist)
				"StopDateCannotBeLessThanInvoiceAddOnChargeStopDate"
			
		TaxExemptCode
			initial value is RecurringInvoiceParameter.TaxExemptCode
			default to RecurringInvoiceParameter.TaxExemptCode
		
		TaxCode
			if (TaxExemptCode.Taxable)
				default to RecurringInvoiceParameter.TaxCode
			
			constraint (TaxExemptCode.Taxable)
				"TaxCodeCannotBeEnteredWhenTaxExemptCodeIsExempt"							
		
		
		TermCode
			default to RecurringInvoiceParameter.TermCode
			default to CompanyCustomer.TermsCode
			
			if (!RecurringInvoiceParameter.BillingInvoiceType.Credit)
				if (ElectronicPaymentAccount not entered)
					required
						"EnterTermCodeOrElectronicPaymentAccountInformation"				
			
		Project
			initial value is RecurringInvoiceParameter.Project
			default to RecurringInvoiceParameter.Project
			























			
		StandardCommentCode1
			initial value is RecurringInvoiceParameter.StandardCommentCode1
			default to RecurringInvoiceParameter.StandardCommentCode1
			
		StandardCommentCode2
			initial value is RecurringInvoiceParameter.StandardCommentCode2
			default to RecurringInvoiceParameter.StandardCommentCode2
			
		StandardCommentCode3
			initial value is RecurringInvoiceParameter.StandardCommentCode3
			default to RecurringInvoiceParameter.StandardCommentCode3
			
		Territory
			initial value is RecurringInvoiceParameter.Territory
			default to RecurringInvoiceParameter.Territory
			
		SalesRepresentative
			initial value is RecurringInvoiceParameter.SalesRepresentative
			default to RecurringInvoiceParameter.SalesRepresentative
			
			if (SalesRepresentative2 entered)
				required
					"SalesRepresentativeRequiredWhenSalesRepresentative2Entered"						
		
		SalesRepresentative2
			initial value is RecurringInvoiceParameter.SalesRepresentative2
			default to RecurringInvoiceParameter.SalesRepresentative2
			
			constraint (SalesRepresentative2 != SalesRepresentative)
				"SalesRepresentative2CannotBeEqualToSalesRepresentative"								
				
		CommissionRate1
			if (SalesRepresentative entered)
				default to RecurringInvoiceParameter.CommissionRate1
				default to SalesRepresentative.CommisionPercent
			else
				cannot be entered
					"CannotEnterCommissionRateWithoutSalesRepresentative"						

			constraint (CommissionRate1 <= 100%)
				"CommisionRateForSalesRepresentativeShouldNotBeGreaterThan100%"  					


		CommissionRate2
			if (SalesRepresentative2 entered)
				default to RecurringInvoiceParameter.CommissionRate2
				default to SalesRepresentative2.CommisionPercent
			else
				cannot be entered
					"CannotEnterCommissionRateWithoutSalesRepresentative2"									

			constraint ((CommissionRate1 + CommissionRate2) <= 100%)
				"CommissionRatesForSalesrepresentative&SalesRepresentative2CannotBeGreaterThan100%"
			
		CommissionSplitPercentage
			if (SalesRepresentative2 entered)
				default to RecurringInvoiceParameter.CommissionSplitPercentage
				required
					"CommissionSplitRequiredWhenSalesRepresentative2Entered"							
			else
				cannot be entered		
					"CannotEnterCommissionSplitIfSalesRepresentative2NotEntered"							
				
		Currency
        	if (!Company.MultipleCurrency)
        		default to Company.Currency
        		constraint (Currency = Company.Currency)
        			"CurrencyCodeMustBeBaseCurrency"										
			else
				default to CompanyCustomer.Currency

				
        	if (Currency != Company.Currency)
        		CurrencyRelationship.FromCurrency	= Currency
        		CurrencyRelationship.ToCurrency		= Company.Currency
        		constraint (CurrencyRelationship exist)
        			"CurrencyRelationDoesNotExist"				

			cannot be changed																
			
		ElectronicPaymentAccount
			if (!RecurringInvoiceParameter.BillingInvoiceType.Credit)
				if (TermCode not entered)
					required
						"EnterTermCodeOrElectronicPaymentAccountInformation"				
						
			if (TermCode not entered)
				default to CompanyCustomer.BillingCustomerCreditCardForDefaultAccountRel.BillingCustomerCreditCard
					
			if (BillingElectronicPaymentType entered)
				constraint (IsValidElectronicPaymentAccount)
					"AccountDoesNotExist"
				required
					"ElectronicPaymentAccountRequired;BillingElectronicPaymentTypeEntered"	
				
		BillingElectronicPaymentType
			if (TermCode not entered)
				default to CompanyCustomer.BillingCustomerCreditCardForDefaultAccountRel.BillingElectronicPaymentType
						
			
			if (ElectronicPaymentAccount entered
			or  ElectronicPaymentExpirationDate entered)
				required
					"BillingElectronicPaymentTypeRequired;ElectronicPaymentAccountOrElectronicPaymentExpirationDateEntered"	
		
		ElectronicPaymentExpirationDate
			if (TermCode not entered)
				default to CompanyCustomer.BillingCustomerCreditCardForDefaultAccountRel.ExpirationDate
			
			if (BillingElectronicPaymentType entered)
				required
					"ElectronicPaymentExpirationDateRequired;BillingElectronicPaymentTypeEntered"	
					
			constraint (ElectronicPaymentExpirationDate >= current corporate date)
				"ElectronicPaymentHasExpired;ElectronicPaymentExpirationDateMustBeGreaterThanCurrentDate"	

		CustomerShipTo
			initial value is CompanyCustomer.OrderEntryCustomer.DefaultCustomerShipTo
			default to CompanyCustomer.OrderEntryCustomer.DefaultCustomerShipTo
		
		BillTo
			initial value is Customer.CustomerBillToWithDefaultBillToRel.CustomerBillTo
			default to Customer.CustomerBillToWithDefaultBillToRel.CustomerBillTo
			
	Actions
		Create is a Create Action
			Entrance Rules
				if (Customer entered)
					constraint (CompanyCustomer exists)
						"CompanyCustomerDoesNotExist"
			Exit Rules

				for each RecurringInvoiceParameter.RecurringInvoiceLinesRel
					invoke Create CustomerRecurringInvoiceLine
						fill in fields from each
						invoked.Customer				  			= Customer
		                invoked.RecurringInvoiceParameter 			= each.RecurringInvoiceParameter

						invoked.StartDate							= StartDate
						invoked.StopDate							= StopDate
						invoked.MasterLineNumber		  			= each.RecurringInvoiceLine
						invoked.LastAddOnChargeSequence	  			= blank
						invoked.LastCommentSequence		  			= blank

					LocalLineNumber = each.CustomerRecurringInvoiceLinesRel.CustomerRecurringInvoiceLine
					
					for each each.RecurringInvoiceAddOnChargesRel
						invoke Create CustomerRecurringInvoiceAddOnCharge
							fill in fields from each
								except invoked.StartDate
							invoked.Customer				  			= Customer
			                invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter
			                invoked.CustomerRecurringInvoiceLine		= LocalLineNumber

							invoked.MasterSequence						= each.RecurringInvoiceAddOnCharge
							invoked.MasterLineNumber					= each.RecurringInvoiceLine
					
					for each each.RecurringInvoiceCommentsRel
						invoke Create CustomerRecurringInvoiceComment
							fill in fields from each
								except invoked.StartDate
							invoked.Customer				  			= Customer
			                invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter
			                invoked.CustomerRecurringInvoiceLine		= LocalLineNumber							
					
					for each each.RecurringInvoiceLineAttachmentsRel
						invoke Create CustomerRecurringInvoiceLineAttachment
							fill in fields from each
							invoked.Customer				  			= Customer
							invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter
							invoked.CustomerRecurringInvoiceLine		= LocalLineNumber
			                		
				for each RecurringInvoiceParameter.RecurringInvoiceAddOnChargesRel
					invoke Create CustomerRecurringInvoiceAddOnCharge
						fill in fields from each
							except invoked.StartDate
						invoked.Customer				  			= Customer
		                invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter


						invoked.MasterSequence						= each.RecurringInvoiceAddOnCharge
						invoked.MasterLineNumber					= each.RecurringInvoiceLine
				
				for each RecurringInvoiceParameter.RecurringInvoiceCommentsRel
					invoke Create CustomerRecurringInvoiceComment
						fill in fields from each
							except invoked.StartDate
						invoked.Customer				  			= Customer
		                invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter

				for each RecurringInvoiceAttachmentsRel
					invoke Create CustomerRecurringInvoiceAttachment
						fill in fields from each
						invoked.Customer				  			= Customer
		                invoked.RecurringInvoiceParameter			= each.RecurringInvoiceParameter
														                		
		Update is an Update Action
			Entrance Rules
				if (Customer entered)
					constraint (CompanyCustomer exists)
						"CompanyCustomerDoesNotExist"
					
		Delete is a Delete Action
			Entrance Rules

				for each AllCustomerRecurringInvoiceAddOnChargesRel 
					invoke Delete each
					
			Action Rules
				constraint (InvoiceCount not entered)
					"CannotDelete;ProcessingHasBegun,InvoiceCountGreaterThanZero"						
