SourcingEventQuestionValue is a BusinessClass
    owned by ss
    prefix is SEQV

    Ontology
    	symbolic key is SourcingEventQuestionValue
    
    Patterns
		implements DynamicCreation
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

    Dynamic Creation Rules 
    	DynamicallyCreated = true
    	constraint (parentcontext.name = "SourcingEventQuestionAllocation")
    		"TheAnswer-<SourcingEventQuestionValue>-ForQuestion-<SourcingEventQuestion.QuestionText>-DoesNotExist"
    				
    Persistent Fields
    	DisplayOrder
		QuestionToCreate	is like Question

	Transient Fields
		NewDisplayOrder				is a DisplayOrder
		DynamicallyCreated			is Boolean
		FromTemplateOrCopy          is Boolean

	Local Fields
		LastDisplayOrder			is a DisplayOrder		
		LocalConditionalQuestion	is like Question 
		LocalNotifiedSupplier		is a NotifiedSupplier

	Conditions
    	ValidCreateAction
    		restricted
    		when (SourcingEventQuestion.ResponseType.List
    		and	  SourcingEvent.InActionableState)		

		RepositoryHasConditionalQuestions 
			restricted
			when (RepositoryConditionalQuestionRel exists)

		HasSourcingEventConditionalQuestions
			restricted
			when (ConditionalQuestionRel exists)
	
		SourcingEventResponseExists
			restricted
			when (SourcingEvent.AllowsConditionalQuestions
			and   SourcingEventResponseRel exists)

		SESupplierQuestionResponseExists
			restricted
			when (SESupplierQuestionResponseRel exists
			or    SourcingEventQuestionResponseRel exists)

	Relations



		ConditionalQuestionRel 
			one-to-many relation to ConditionalQuestion 
			Field Mapping uses symbolic key 
				related.ProcurementGroup			= Company.SourcingGroup 
				related.Question					= SourcingEventQuestion.Question 

		LocalConditionalQuestionRel 
			one-to-many relation to ConditionalQuestion
			Field Mapping uses symbolic key 
				related.ProcurementGroup			= Company.SourcingGroup 
				related.Question					= SourcingEventQuestion.Question 
				related.QuestionAnswer				= SourcingEventQuestionValue 


		SameRepositoryQuestionRel 
			one-to-many relation to SourcingEventQuestion 
			Field Mapping uses ByQuestion
				related.Company						= Company 
				related.SourcingEvent				= SourcingEvent 
				related.Question					= LocalConditionalQuestion 

		RepositoryConditionalQuestionRel 
			one-to-many relation to ConditionalQuestion 
			Field Mapping uses ByListAnswer
				related.ProcurementGroup										= Company.SourcingGroup 
				related.Question                        						= SourcingEventQuestion.Question 
				related.QuestionAnswer.QuestionAnswerGroup.QuestionListValue	= SourcingEventQuestionValue 		

		SourcingEventResponseRel
			one-to-many relation to SourcingEventResponse
			Field Mapping uses ByEvent
				related.Company						= Company
				related.SourcingEvent				= SourcingEvent

		SourcingEventSupplierQuestionRel 
			one-to-many relation to SourcingEventSupplierQuestion 
			Field Mapping uses symbolic key
				related.NotifiedSupplier.SupplierGroup		= LocalNotifiedSupplier.SupplierGroup
	 			related.NotifiedSupplier.Supplier			= LocalNotifiedSupplier.Supplier
	 			related.NotifiedSupplier.SupplierSourceId	= LocalNotifiedSupplier.SupplierSourceId
				related.Company								= Company 
				related.SourcingEvent						= SourcingEvent
			Instance Selection
				where (related.SourcingEventQuestion		= SourcingEventQuestion) 

		SESupplierQuestionValueRel 
			one-to-many relation to SESupplierQuestionValue 
			Field Mapping uses symbolic key
				related.NotifiedSupplier.SupplierGroup		= LocalNotifiedSupplier.SupplierGroup
	 			related.NotifiedSupplier.Supplier			= LocalNotifiedSupplier.Supplier
	 			related.NotifiedSupplier.SupplierSourceId	= LocalNotifiedSupplier.SupplierSourceId
				related.Company								= Company 
				related.SourcingEvent						= SourcingEvent
				related.SourcingEventSupplierQuestion		= SourcingEventSupplierQuestionRel.SourcingEventSupplierQuestion
			Instance Selection
				where (related.SESupplierQuestionValue		= SourcingEventQuestionValue) 

		SESupplierQuestionResponseRel
			one-to-many relation to SESupplierQuestionResponse
			Field Mapping uses ByQuestion
				related.Company								= Company
				related.SourcingEvent						= SourcingEvent
				related.SourcingEventSupplierQuestion		= SourcingEventSupplierQuestionByOrderRel.SourcingEventSupplierQuestion

		SourcingEventQuestionResponseRel
			one-to-many relation to SourcingEventQuestionResponse
			Field Mapping uses ByQuestion
				related.Company								= Company
				related.SourcingEvent						= SourcingEvent
				related.SourcingEventQuestion				= SourcingEventQuestion

		SourcingEventSupplierQuestionByOrderRel
			one-to-many relation to SourcingEventSupplierQuestion
			Field Mapping uses ByDisplayOrder
				related.Company								= Company
				related.SourcingEvent						= SourcingEvent
			Instance Selection
				where (related.SourcingEventQuestion		= SourcingEventQuestion) 

    Sets
    	ByDisplayOrder
    		duplicates
    		Sort Order
    			Company
    			SourcingEvent
    			SourcingEventQuestion
    			DisplayOrder
    
	Create Exit Rules

		if (SourcingEventResponseExists
		and SourcingEventQuestion.Question = 0)
			for each SourcingEventResponseRel
				LocalNotifiedSupplier.SupplierGroup				= each.NotifiedSupplier.SupplierGroup
				LocalNotifiedSupplier.Supplier					= each.NotifiedSupplier.Supplier
				LocalNotifiedSupplier.SupplierSourceId			= each.NotifiedSupplier.SupplierSourceId
				invoke Create SESupplierQuestionValue
					fill in fields from SourcingEventQuestion
					invoked.NotifiedSupplier.SupplierGroup		= each.NotifiedSupplier.SupplierGroup
					invoked.NotifiedSupplier.Supplier			= each.NotifiedSupplier.Supplier
					invoked.NotifiedSupplier.SupplierSourceId	= each.NotifiedSupplier.SupplierSourceId
					invoked.Company								= Company
					invoked.SourcingEvent						= SourcingEvent
					invoked.SourcingEventSupplierQuestion		= SourcingEventSupplierQuestionRel.SourcingEventSupplierQuestion
					invoked.SESupplierQuestionValue				= SourcingEventQuestionValue
					invoked.DisplayOrder						= DisplayOrder

    Actions
    	Create is a Create Action
			valid when (ValidCreateAction)
			Field Rules
				DisplayOrder
					if (!SourcingEvent.CreateByCopy)
						autosequence using SourcingEventQuestion.LastQuestionValueDisplayOrder

    		Action Rules
    			constraint (SourcingEventQuestion.ResponseType.List)
    				"CanOnlyAddValuesToListTypeQuestions"
				constraint (SourcingEvent.InActionableState)
					"CannotAddQuestionValueWhileEventIsPendingAward,Cancelled,OrClosed"

    			if (!DynamicallyCreated
    			and SourcingEventQuestion.Question entered)  
    				invoke Update SourcingEventQuestion
    					initialize invoked.Question				

				if (SourcingEvent.InInitiateAmendmentState
				and Company.AmendmentCriteria.AddQuestion)
					invoke Amend Open.Notified SourcingEvent
								
    	CreateDisplay is a Create Action
    		restricted
			valid when (ValidCreateAction)
			Field Rules
				DisplayOrder
					if (!SourcingEvent.CreateByCopy)
						autosequence using SourcingEventQuestion.LastQuestionValueDisplayOrder

    		Action Rules
    			constraint (SourcingEventQuestion.ResponseType.List)
    				"CanOnlyAddValuesToListTypeQuestions"
				constraint (SourcingEvent.InActionableState)
					"CannotAddQuestionValueWhileEventIsPendingAward,Cancelled,OrClosed"

				if (SourcingEvent.InInitiateAmendmentState
				and Company.AmendmentCriteria.AddQuestion)
					invoke Amend Open.Notified SourcingEvent

    	CreateDisplayValue is a Create Action
			restricted
			valid when (ValidCreateAction)
    		Action Rules
    			constraint (SourcingEventQuestion.ResponseType.List)
    				"CanOnlyAddValuesToListTypeQuestions"
				constraint (SourcingEvent.InActionableState)
					"CannotAddQuestionValueWhileEventIsPendingAward,Cancelled,OrClosed"
				if (SourcingEvent.InInitiateAmendmentState
				and Company.AmendmentCriteria.AddQuestion)
					invoke Amend Open.Notified SourcingEvent

			Exit Rules
				if (LastDisplayOrder entered)
					if (LastDisplayOrder > SourcingEventQuestion.LastQuestionValueDisplayOrder)
						invoke Update SourcingEventQuestion
							invoked.LastQuestionValueDisplayOrder = LastDisplayOrder

    	Update is an Update Action
    		valid when (SourcingEvent.InActionableState)
    		Action Rules
    			constraint (SourcingEvent.InActionableState)
					"CannotUpdateQuestionValueWhileEventIsPendingAward,Cancelled,OrClosed"
				if (SourcingEvent.InInitiateAmendmentState
				and Company.AmendmentCriteria.UpdateQuestion)
					invoke Amend Open.Notified SourcingEvent

		CreateConditionalQuestion is an Instance Action
			valid when (SourcingEventQuestion.CanCreateConditionalListQuestion)
			Parameters 
				ParmConditionalQuestion is a Question
					default label is "ConditionalQuestion"

			Parameter Rules 
				ParmConditionalQuestion 
					required
			Action Rules

				constraint (ParmConditionalQuestion.Active)
					"CannotUseAnInactiveQuestion"
				LocalConditionalQuestion	= ParmConditionalQuestion
				constraint (SameRepositoryQuestionRel !exists)
					"ConditionalQuestionAlreadyExistsAsASourcingEventQuestion"
				constraint (LocalConditionalQuestionRel !exists)
					"ConditionalQuestionAlreadyExists"
				if (SourcingEventQuestion.Question entered)
					constraint (ParmConditionalQuestion != SourcingEventQuestion.Question)
						"ConditionalQuestionCannotBeTheSameAsQuestion"








    	CopySourcingEventConditionalQuestions is an Instance Action 
			restricted 
			Parameters 
				NewSourcingEvent	is a SourcingEvent 
				NewQuestion			is a SourcingEventQuestion 

			Action Rules 








    	Delete is a Delete Action
			valid when (SourcingEvent.InActionableState)
			Action Rules
				constraint (SourcingEvent.InActionableState)
					"CannotDeleteQuestionValueWhileEventIsPendingAward,Cancelled,OrClosed"

				constraint (!SESupplierQuestionResponseExists)
					"CannotDeleteQuestionValue;QuestionHasBeenRespondedToByASupplier"

    			if (SourcingEventQuestion.Question entered) 
    				invoke Update SourcingEventQuestion
    					initialize invoked.Question				

				if (SourcingEvent.InInitiateAmendmentState
				and Company.AmendmentCriteria.DeleteQuestion)
					invoke Amend Open.Notified SourcingEvent

			Exit Rules
				if (SourcingEventResponseExists)
					for each SourcingEventResponseRel
						LocalNotifiedSupplier.SupplierGroup				= each.NotifiedSupplier.SupplierGroup
						LocalNotifiedSupplier.Supplier					= each.NotifiedSupplier.Supplier
						LocalNotifiedSupplier.SupplierSourceId			= each.NotifiedSupplier.SupplierSourceId
						for each SESupplierQuestionValueRel
							invoke Delete each
