ReceivableInvoiceApplyReverseHeader is a BusinessClass
	owned by ar
	prefix is TRV
	sql name is RInvoiceApplyReverseHeader
	classic name is ARTRNRVHDR

	Ontology
		symbolic key is ReceivableInvoiceApplyReverseHeader
			classic set name is TRVSET1
			classic name for ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType is TRANS-TYPE

	Patterns
		implements StaticJava
		disable AuditIndex
		implements Archivable

	Persistent Fields
		ReceivableOperator
			classic name is OPR-CODE
		GeneralLedgerDate  is Date
			classic name is GL-DATE
			default label is "GlobalLedgerDate"

	Transient Fields
		TransientReceivableOperator			is like ReceivableOperator
			derive value from ReceivableOperator
		TransientReceivableInvoiceDetail	is a ReceivableInvoiceDetail
			derive value from ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetailRel.ReceivableInvoiceDetail

	Local Fields
		NativeLPLRTBODTrigger			is Boolean 
		LocalTriggerFrom				is Alpha size 100
	Field Rules
		Company
			constraint (!CompanyCustomerRel.ReceivableProcessingMethod.BalanceForward)
				"CustomerIsBalanceForwardTransactionCannotBeReversed"

		GeneralLedgerDate
			required
			if (CompanySystemClosingControlRel.Control and Company.VerifyGLDateWithinGLDateRange)		
				constraint (GeneralLedgerDate within CompanySystemClosingControlRel.ValidEntryDate)
					"PostDate<GeneralLedgerDate>IsNotWithinValidEntryDatesForCompany<Company>;ValidDateRangeIs<CompanySystemClosingControlRel.ValidEntryDate.Begin>-<CompanySystemClosingControlRel.ValidEntryDate.End>"

		ReceivableOperator
			if (Company.TransactionOperatorRequired)
				constraint (ReceivableOperatorRel exists)
					"OperatorDoesNotExist"
				constraint (ReceivableOperatorRel.ActiveStatus.Active)
					"OperatorIsNotActive"

		TransientReceivableOperator
			ReceivableOperator = TransientReceivableOperator
			if (Company.TransactionOperatorRequired)
				constraint (TransientReceivableOperator entered)
					"OperatorRequired"	
				constraint (ReceivableOperatorRel exists)
					"OperatorDoesNotExist"
				constraint (ReceivableOperatorRel.ActiveStatus.Active)
					"OperatorIsNotActive"
			if (TransientReceivableOperator not entered)
				default to actor

	Conditions
		IsReceivablePaymentApplyReverse
			restricted
			when (ReceivablePaymentApplyReverseRel exists)

		IsCompanyCustomer
			restricted
			when (CompanyCustomerRel exists)







		IsReceivableInvoiceDetail
			restricted
			when (ReceivableInvoiceDetailRel exists)

		HasReceivableInvoiceApplyReverseDetail
			restricted
			when (ReceivableInvoiceApplyReverseDetailCMRel exists)

	Relations


		CompanySystemClosingControlRel	
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode	 = "AR"
				related.Company					 = Company

		ReceivableInvoiceApplyReverseDetailGenRel
			classic name is ARTRNRVDTL
			one-to-many relation to ReceivableInvoiceApplyReverseDetail
			delete cascades
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	= ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and   related.ReceivableInvoiceDetail.Invoice 						= ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				and   related.ReceivableInvoiceDetail.PaymentSeq 					= ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq)

		ReceivableInvoiceApplyReverseDetailCMRel
			one-to-many relation to ReceivableInvoiceApplyReverseDetail
			delete cascades
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where ((related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and related.ReceivableInvoiceDetail.Invoice							 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				and related.ReceivableInvoiceDetail.PaymentSeq						 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq)
				or (related.CreditTransactionType									 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and related.CreditTransactionNumber									 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				and related.CreditPaymentSequence									 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq))

		PaymentApplicationsRel
			one-to-many relation to ReceivableApplication
			Field Mapping uses symbolic key
				related.Company = Company
			Instance Selection
				where (related.ReceivableApplication.TransType	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and   related.ReceivableApplication.Invoice		 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				and   related.ReceivableApplication.PaymentSeq	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq
				and   related.CreditTransaction.CreditType		 = "P")


		ReceivablePaymentApplyReverseRel is a ReceivablePaymentApplyReverseHeader set

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		 = Company
				related.Customer	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetailRel.Customer

		ReceivableInvoiceDetailRel
			classic name is AROITEMS
			one-to-one relation to ReceivableInvoiceDetail
			required
			Field Mapping uses symbolic key
				related.Company												 = Company
				related.ReceivableInvoiceDetail.ReceivableInvoiceDetailType	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				related.ReceivableInvoiceDetail.Invoice						 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				related.ReceivableInvoiceDetail.PaymentSeq					 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq

		ReceivableOperatorRel
			one-to-one relation to ReceivableOperator
			Field Mapping uses symbolic key
				related.Company 			 = Company
				related.ReceivableOperator	 = ReceivableOperator

		ReceivablePaymentApplyReverseDetailRel
			one-to-many relation to ReceivablePaymentApplyReverseDetail
			Field Mapping uses symbolic key
			Instance Selection
				where	(related.Company			 = Company
				and		 related.BatchNumber		 = ReceivableInvoiceDetailRel.BatchNumber
				and		 related.TransactionType	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType
				and		 related.Invoice			 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice
				and	 related.PaymentSequence		 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq)

		ReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses symbolic key
				related.Company 				 = Company
				related.ReceivableInvoiceType	 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.AlternateReceivableInvoiceType
				related.ReceivableInvoice		 = ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice


	Rule Blocks

		CommonEdits
			constraint	(!ReceivableInvoiceRel.Origin.IntercompanyBilling) 
				"CannotReverseIntercompanyBillingInvoiceApplication;MustReverseRelatedSettlementInIntercompanyBillingSystem"

			constraint	(ReceivableInvoiceDetailRel.ReceivableApplicationsRel exists)
				"NoApplicationsAvailableToReverse"

			constraint (ReceivableInvoiceDetailRel.PostedApplicationsAvailableToInvoiceReverseRel exists)
				"InvoiceNotEligibleForReversalUnpostedApplicationExists"

			constraint	(ReceivablePaymentApplyReverseDetailRel not exists)
				"ReceivablePaymentReversalAlreadyPendingForThisInvoice"

			if (ReceivableInvoiceDetailRel.Status.HistoricalTransaction) 
				constraint (Company.AllowHistoricalApplicationReversal)
					"InvoiceIsHistorical_-InvoiceCompanyDoesNotAllowHistoricalApplicationReversal"					

			constraint (!ReceivableInvoiceDetailRel.ReceivableApplicationRel.ApplicationSource.ElectronicFundsTransfer) 
				"MustReverseTransactionThatHasAnEFTApplicationInThePaymentReversalProcess"				

	Actions
		Create is an Action
			Entrance Rules
				ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.ReceivableInvoiceDetailType = TransientReceivableInvoiceDetail.ReceivableInvoiceDetailType
				ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.Invoice = TransientReceivableInvoiceDetail.Invoice
				ReceivableInvoiceApplyReverseHeader.ReceivableInvoiceDetail.PaymentSeq = TransientReceivableInvoiceDetail.PaymentSeq
			Action Rules
				include CommonEdits

		Update is an Action
			Action Rules

		Delete is an Action
			Action Rules

		Purge is a Purge Action
			restricted
			Entrance Rules
				invoke Purge ReceivableInvoiceApplyReverseDetailGenRel
			
		Release is an Instance Action
			Action Rules
				constraint (ReceivableInvoiceApplyReverseDetailCMRel exists)
					"NoDetailsSelected-CannotRelease"

				invoke Reverse ReceivableInvoiceApplyReverseDetailCMRel

				invoke Delete
			Exit Rules
				invoke TriggerReceivableTransaction ReceivableInvoiceRel





		ReverseAll is an Instance Action
			Action Rules
				for each ReceivableInvoiceDetailRel.PostedApplicationsAvailableToInvoiceReverseRel
					if (!each.SelectedForInvoiceReversal)
						invoke ApplicationPosted.SelectForInvoiceReversal each

