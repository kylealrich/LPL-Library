ReceivableInvoiceCommentImport is a BusinessClass
	owned by ar
	prefix is AIM
	classic name is ARICOMMENT

	Ontology
		symbolic key is ReceivableInvoiceCommentImport
			classic set name is AIMSET1

	Patterns
		implements StaticJava
		disable AuditIndex
		disable Auditing 
		disable EffectiveDated
		disable DataTranslations

	Persistent Fields
		RunGroup
		Company					is a ReceivableCompany
		InvoiceType				is AlphaUpper size 1
			default label is "TransactionType"
			States
				Customer			value is " "
				CreditMemo			value is "C"
				DebitMemo			value is "D"
				MixedSignLines 		value is "M"
				Invoice				value is "I"
				CustomerPayment		value is "P"
				NonArPayment		value is "N"
		Invoice
			default label is "Transaction"
		PaymentSeq 				is a Sequence
		SeqNbr
  		Customer
  		InterfacedCustomer
			default label is "ExternalCustomer"
		Comment
		BeginDate				is Date
			classic name is BEG-DATE
		EndDate					is Date
		CurrentDate				is TimeStamp
			classic name is SYS-DATE
		PrintCode				is AlphaUpper size 1
			States
				BothDisplayAndPrint	value is "B"
				Print				value is "P"
				Display				value is "D"
				OrderEntryForms		value is "R"
		ErrorMessage			is Alpha 150
		InterfaceRun			is a ReceivablesInterfaceResult
			delete ignored
		CommentText		

	Local Fields
		ErrorOccurred						is Boolean
		LocalReceivablesInterfaceResult 	is a ReceivablesInterfaceResult
		LocalCustomer						is like Customer


	Transient Fields	
		TransientPrintCode				is AlphaUpper size 1
			default label is "PrintCode"
			States
				BothDisplayAndPrint		value is "B"
				Display					value is "D"
				Print					value is "P"
			derive value from PrintCode

	Derived Fields
		InvoiceDoesNotExistMsg is a MessageField
			restricted
			"ReceivableInvoiceDoesNotExist"

		PaymentDoesNotExistMsg is a MessageField
			restricted
			"PaymentDoesNotExist"

		NoCustomerForNonARMsg is a MessageField
			restricted
			"CannotEnterCustomerForNonARPaymentComment"

		CustomerDoesNotExistMsg is a MessageField
			restricted
			"CustomerDoesNotExist"

		CustomerDoesNotMatchInvoiceCustomerMsg is a MessageField
			restricted
			"CustomerDoesNotMatchInvoiceCustomer"

		InvoiceCannotBeEnteredMsg is a MessageField
			restricted
			"InvoiceCannotBeEnteredForCustomerComment"

		CommentRequiredMsg is a MessageField
			restricted
			"CommentIsRequired"

		CustomerRequiredForPaymentCommentMsg is a MessageField
			restricted
			"CustomerRequiredForPaymentComment"

		DerivedCustomer is a DerivedField
			type is like Customer
			if  (Customer not entered
			and  CustomerMappingTableInterfaceRel exists)
				return CustomerMappingTableInterfaceRel.Customer
			else
				return Customer

		DerivedErrorMessage				is a DerivedField
			type is Alpha 150
			default label is "ErrorMessage"
			return ErrorMessage

	Field Rules
		RunGroup
			required
			if  (Invoice entered)
				default to ReceivableInvoiceImportRel.RunGroup
			else
				default to CompanyCustomerConversionRel.RunGroup

		Company
			required










		Comment
			required

		SeqNbr
			autosequence using ByRunGroup

		PrintCode
			if (TransientPrintCode entered)
				PrintCode = TransientPrintCode

	Conditions

		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		InError
			when (ErrorMessage entered)

		RecordExists
			when (ReceivableInvoiceCommentImport exists)

		InvoiceComment
			when (InvoiceType.Invoice
			or	InvoiceType.DebitMemo
			or	InvoiceType.CreditMemo
			or  InvoiceType.MixedSignLines)

		PaymentComment
			when (InvoiceType.CustomerPayment
			or	InvoiceType.NonArPayment)


	Relations

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company








		ReceivableInvoiceImportRel
			one-to-many relation to ReceivableInvoiceImport
			Field Mapping uses ByCompanyInvoiceCustomer
				related.Company					= Company
				related.InvoiceType				= InvoiceType
				related.Invoice					= Invoice

		ReceivableInvoiceRel
			one-to-one relation to ReceivableInvoice
			Field Mapping uses symbolic key
				related.Company					= Company
				related.ReceivableInvoiceType	= InvoiceType
				related.ReceivableInvoice		= Invoice

		ReceivablePaymentRel
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set10
				related.Company				= Company
				related.Customer			= LocalCustomer
				related.TypeOfPayment		= InvoiceType
				related.PaymentNumber		= Invoice

		ReceivablePaymentNoCustomerRel
			one-to-many relation to ReceivablePayment
			Field Mapping uses Set10
				related.Company				= Company
				related.Customer			= blank
				related.TypeOfPayment		= InvoiceType
				related.PaymentNumber		= Invoice

		CompanyCustomerConversionRel
			one-to-one relation to CompanyCustomerConversion
			Field Mapping uses symbolic key
				related.Company						= Company
				related.CompanyCustomerConversion	= InterfacedCustomer

		LocalInterfaceResultsRel
			one-to-one relation to ReceivablesInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup 
				related.ReceivablesInterfaceResult		= LocalReceivablesInterfaceResult

		CustomerMappingTableInterfaceRel
			one-to-one relation to CustomerMappingTableInterface
			Field Mapping uses ByInterfacedCustomer
				related.CustomerGroup					= Company.CustomerGroupField.CustomerGroup
				related.InterfacedCustomer				= InterfacedCustomer

		LocalCompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company							= Company
				related.Customer						= LocalCustomer


	Sets

		Set2
			indexed
			Sort Order
				Company
				Customer
				InterfacedCustomer
				Invoice
				InvoiceType
				PaymentSeq
				SeqNbr

		ByRunGroup
			indexed
			Sort Order
				RunGroup
				Company
				Customer
				InterfacedCustomer
				Invoice
				InvoiceType
				PaymentSeq
				SeqNbr

		ByInterfaceRun
			indexed
			Sort Order
				InterfaceRun
				RunGroup
				Company
				Customer
				InterfacedCustomer
				Invoice
				InvoiceType
				PaymentSeq
				SeqNbr

		ByCompanyInvoice
			indexed
			Sort Order
				Company
				Customer
				InterfacedCustomer
				Invoice
				InvoiceType
				PaymentSeq
				SeqNbr

	Create Rules

	Actions
		Create is a Create Action

		Update is an Update Action
			Action Rules

		FastUpdate is an Update Action
			restricted
			bypass field rules

		Delete is a Delete Action

		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules

		DeleteAllTransactionsForRunGroup is a Set Action
			default label is "DeleteAllTransactionsForRunGroup"
			confirmation required

			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup				  is AlphaUpper 30
					default label is "RunGroup"

			Parameter Rules
				PrmFinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup

			Instance Selection
				where (RunGroup	= PrmRunGroup
				and	GeneralLedgerCompanyRel.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup)

			Action Rules
				Instance Rules
					invoke FastDelete


		ConvertComments is a Set Action
			default label is "ConvertComments"
			Parameters
				PrmRunGroup						is a RunGroup
					default label is "RunGroup"
				PrmCompany						is a ReceivableCompany

			Parameter Rules
				PrmRunGroup
					required
						"RunGroupIsRequired"

			Sort Order
				RunGroup
				Company

			Local Fields
				LocalConvertResultView			is a ReceivablesInterfaceResult view
				LocalInstanceCount				is Numeric 10
				LocalReceivableInvoiceCount		is Numeric 12
				LocalErrorCount					is Numeric 12

			Instance Selection
				where (RunGroup	= PrmRunGroup
				and	Company.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
				and	(PrmCompany not entered
				or	  Company	= PrmCompany))

			Action Rules

				Empty Set Rules
					invoke Create ReceivablesInterfaceResult
						invoked.FinanceEnterpriseGroup		= actor.context.FinanceEnterpriseGroup
						invoked.RunTime						= current timestamp
						invoked.RunGroup					= PrmRunGroup
						invoked.RunType						= 10
						invoked.Company						= PrmCompany
						invoked.Status						= 1

				RunGroup Set Rules
					Entrance Rules

						invoke Create ReceivablesInterfaceResult
							assign result to LocalConvertResultView
							invoked.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
							invoked.RunTime					= current timestamp
							invoked.RunGroup				= PrmRunGroup
							invoked.RunType					= 10
							invoked.Company					= PrmCompany

					Exit Rules
						invoke Update LocalConvertResultView.ReceivablesInterfaceResult
							invoked.RecordsProcessed		= LocalInstanceCount
							invoked.ReceivableInterfaceCounts.PassedHeaderCount		= LocalReceivableInvoiceCount
							if (LocalConvertResultView.Status != 2)
								invoked.Status					= 1

				Instance Rules

					LocalReceivablesInterfaceResult 		= LocalConvertResultView.ReceivablesInterfaceResult
					InterfaceRun							= LocalConvertResultView.ReceivablesInterfaceResult
					LocalInstanceCount						+= 1
					LocalCustomer							= DerivedCustomer

					initialize ErrorMessage
					initialize ErrorOccurred

					if  (Comment not entered)
						ErrorOccurred						= true
						ErrorMessage						= CommentRequiredMsg
					else
					if  (InvoiceType.Customer)
						if (Invoice entered
						or  InvoiceType entered)
							ErrorOccurred						= true
							ErrorMessage						= InvoiceCannotBeEnteredMsg
						else						
						if (!LocalCompanyCustomerRel exists)
							ErrorOccurred						= true
							ErrorMessage						= CustomerDoesNotExistMsg
					else
					if (PaymentComment)
						if  (InvoiceType.NonArPayment
						and (Customer entered
						or   InterfacedCustomer entered))
							ErrorOccurred						= true
							ErrorMessage						= NoCustomerForNonARMsg
						else
						if  (LocalCustomer entered)
							if  (!ReceivablePaymentRel exists)
								ErrorOccurred					= true
								ErrorMessage					= PaymentDoesNotExistMsg
						else
						if  (LocalCustomer not entered)
							if  (!ReceivablePaymentNoCustomerRel exists)
								ErrorOccurred					= true
								ErrorMessage					= PaymentDoesNotExistMsg
					else
						if  (!ReceivableInvoiceRel exists)
							ErrorOccurred						= true
							ErrorMessage						= InvoiceDoesNotExistMsg
						else
						if  (LocalCustomer entered
						and  ReceivableInvoiceRel.Customer != LocalCustomer)
							ErrorOccurred						= true
							ErrorMessage						= CustomerDoesNotMatchInvoiceCustomerMsg

					if  (ErrorOccurred)
						invoke Update LocalInterfaceResultsRel
								invoked.Status				= 2
						LocalErrorCount		=+1
					else
						invoke Create CompanyCustomerComment
							resume on error
								ErrorOccurred		= true
								ErrorMessage	= error message
							fill in fields from this instance
								except invoked.Customer

							if (PaymentComment)
								if  (ReceivablePaymentRel exists)
									invoked.Customer					= LocalCustomer
							else
							if  (InvoiceComment
							and  LocalCustomer not entered)
								invoked.Customer						= ReceivableInvoiceRel.Customer
							else
								invoked.Customer						= LocalCustomer

							if  (Invoice not entered
							and  InvoiceType not entered)
								if (PrintCode = "R")
									invoked.CommentType					= "O"
								else
									invoked.CommentType					= "C"
							else
								invoked.CommentType						= "T"
								invoked.TransactionType					= InvoiceType
								invoked.Transaction						= Invoice

							if (PrintCode not entered)
								invoked.PrintCode						= "D"

							invoked.OriginatingInterfaceRun	= LocalReceivablesInterfaceResult

						if (ErrorOccurred)
							invoke Update LocalInterfaceResultsRel
									invoked.Status 		= 2
						else
							invoke FastDelete
							LocalReceivableInvoiceCount				+= 1

