ReceivableDefaultCode is a BusinessClass
	owned by ar
	prefix is CDF
	classic name is CUSTDEFLTS

	Ontology
		symbolic key is ReceivableDefaultCode
			classic set name is CDFSET1
			classic name is DEFAULT-CODE

	Patterns
		implements ContextualParent
		implements StaticJava
		disable AuditIndex

	Persistent Fields
		Description
		ReceivableProcessingMethod				is AlphaUpper size 1
			classic name is OPEN-BAL-FWD
			States
				BalanceForward	value is "B"
				OpenItem		value is "O"
		AgeDisputesRule							is AlphaUpper size 1
			classic name is AGE-DISPUTES
			States
				AgedInCurrentColumn		value is "N"
				AgeByTransactionDate	value is "Y"
		DisputedTransFinanceCharged				is Boolean
			classic name is DISPUTES-FIN
		AutomaticCashApplication				is Boolean
			classic name is AUTO-APP-FL
		ApplicationDiscountGraceDays			is a DiscGracePd
			classic name is DISC-GRACE-PD
		DebitCreditMemoTermsCode				is a TermsCode
			classic name is MEMO-TERM
		PrintChargebacks						is Boolean
			classic name is CHRGBK-PRT-FL
		StatementRequired						is Boolean
			classic name is STATEMENT-REQ

		OpenItemStatementCycle
			classic name is STMNT-CYCLE


		ReceivableLockBox
			classic name is LOCK-BOX
			default label is "Lockbox"	
		ZeroBalanceStatement					is Boolean
			classic name is ZERO-STMNT-FL
		CreditBalanceStatement					is Boolean
			classic name is CRED-STMNT-FL
		PastDueOnlyStatement					is Boolean
			classic name is PAST-STMNT-FL
		OverCreditLimitStatement				is Boolean
			classic name is OVER-STMNT-FL
		MaximumAutoAdjustAmount					is a MaxAutoAmtX3InCustdeflts
			classic name is MAX-AUTO-AMT
		MaxAutoPcts								is a MaxAutoPctX3InCustdeflts
			classic name is MAX-AUTO-PCT
		MaximumShortReasonCode					is a ShortReasonCodes
			classic name is AUTO-REAS-CD
		DiscountAdjustmentReason				is an ApplicationAdjustmentReason
			classic name is DISC-REAS-CD
		LatePaymentAndFinanceCharges			is AlphaUpper size 1
			classic name is LATE-PAY-FL
			States
				None				value is blank
				Both				value is "B"
				FinanceCharges		value is "F"
				LatePaymentCharges	value is "L"
		FinanceChargeCalculationMethod			is AlphaUpper size 1
			classic name is FIN-CALC-TYPE
			States
				CalculatePerTransaction	value is "D"
				NetBalanceCalculation	value is "N"
		FinanceChargeCode
			classic name is FIN-CHRG-CD
		FinanceChargeDueDateGraceDays			is a FinGracDays
			classic name is FIN-GRAC-DAYS
		MinimumFinanceChargeAmount				is a FinMinChrg
			classic name is FIN-MIN-CHRG
		PrintFinanceChargeDocument				is Boolean
			classic name is FIN-DOC-PRNT
		AutomaticDunning						is Boolean
			classic name is AUTO-DUNN-FL
		TermsCode
			classic name is TERMS-CD
		PercentOfBalanceToCreditLimit			is a CrVarPct
			classic name is CR-VAR-PCT
		UsedFlag								is Boolean
			classic name is USED-FL
		AgingCode
		ProofOfDeliveryRequired					is Boolean
			classic name is POD-REQ-FL
		ProofOfDeliveryGracePeriod
			classic name is GRACE-PER
		SingleOrderLimit						is a TotalCODOrderLimit
			classic name is SGL-ORD-LIM
		SingleOrderHoldCode						is a ReceivableHoldCode
			classic name is SGL-HOLD-CODE
		TotalCODOrderLimit
			classic name is COD-LIM
		CashOnDeliveryOrderHoldCode				is a ReceivableHoldCode
			classic name is COD-HOLD-CODE
		CheckCreditOnOrderAdd					is Boolean
			classic name is ENT-CHECK-FL
		CheckCreditBeforePickingList			is Boolean
			classic name is PRT-CHECK-FL
		CheckCreditBeforeShipping				is Boolean
			classic name is SHP-CHECK-FL
		AgeCredPcts								is an AgeCredPctX5InCustdeflts
			classic name is AGE-CRED-PCT
		OrderAgingPriodLimitHoldCode			is an AgeHoldCdX5InCustdeflts
			classic name is AGE-HOLD-CD
		TaxExempt								is Boolean
			classic name is TAX-EXEMPT-CD
			default label is "PreventTaxCodeDefaulting"
		TaxCode
		BillingFreightCode
			classic name is FREIGHT-CODE
		Carrier									is a Vendor
		CashInAdvanceRequired					is Boolean
			classic name is CIA-FL
		CashInAdvanceRequiredPercent
			classic name is CIA-PCT
		ProformaCashInAdvanceRequired			is Boolean
		ProformaCashInAdvanceRequiredPercent
		OrderDiscountCode
			classic name is ORD-DISC-CODE
		Territory
		PriceList								is a PriceListContractPromotion
			classic name is PRICE-LST
		BackorderAllowed						is Boolean
			classic name is BACK-ORD-FL
		ShipCompleteFlag						is AlphaUpper size 1
			classic name is SHIP-COMP-FL
			States
				AcceptsPartialShipments	value is "N"
				DoesNotAcceptPartials	value is "Y"
				DeterminedByLine		value is blank
		SubstitutesAllowed						is Boolean
			classic name is SUBSTITUTES-FL
		DefaultShippingMethod					is a ShippingMethod
			classic name is DEF-METHOD
		BrokenCaseCharge						is Boolean
			classic name is BRKN-CS-CHRG
		ReceivableGeneralLedgerCode
			classic name is AR-CODE
			default label is "ReceivableGlobalLedgerCode"
		BankTransactionCode
			classic name is BANK-INST-CODE
		BillOfExchangeProcessing				is a DraftFlag
			classic name is DRAFT-FLAG
		CustomerMajorClass
			classic name is MAJOR-CLASS
		CustomerMinorClass
			classic name is MINOR-CLASS
		CreditAnalyst
			classic name is CREDIT-ANLYST
		SalesRepresentative
			classic name is SALESMAN
		RevalueCurrencyTransactions				is Boolean
			classic name is REVALUE-FL
		CreditLimitHoldCode						is a ReceivableHoldCode
			classic name is CR-LIMIT-HOLD
		OrderLimitHoldCode						is a ReceivableHoldCode
			classic name is OR-LIMIT-HOLD
		PickingPriority
			classic name is PK-PRIORITY
		SalesRepresentative2					is a SalesRepresentative
			classic name is SALESMAN-2

		CommissionSplitPercentage
			classic name is COMM-SPLIT
		CustomeOrderAcknowledgments				is Boolean
			classic name is ACKNOW-FL
		PORequiredForCustomerOrder				is Boolean
			classic name is PO-REQ-FL
		DefaultShippingLocation					is an InventoryLocation
			classic name is DEF-LOCATION
		BillingCustomerCode
			classic name is CUSTOMER-CODE
		ChargeMinimumFinanceCharge				is Boolean
			classic name is MINIMUM
		FinanceChargeCycle
			classic name is FIN-CYCLE
		DunningCycle
			classic name is DUN-CYCLE
		AutomaticApplicationMethod				is AlphaUpper size 1
			classic name is AUTO-METHOD
			States
				None			value is blank
				Algorithm		value is "A"
				BalanceForward	value is "B"
				LastStatetment	value is "L"
				Remittance		value is "R"
				UserDefined		value is "U"
		ApplicationCode							is an AutomaticCashApplicationCode
		BillingLineItemRequired					is Boolean
			classic name is LINE-ITEM-REQ
		AutomaticTransactionRemoval				is Boolean
			classic name is AUTO-REMOVE
		DetailChargebackDate					is a CbDtlDate
			classic name is CB-DTL-DATE
		InvoiceMinimumFinanceCharge				is an IFinMinChrg
			classic name is I-FIN-MIN-CHRG
		DunningLetterIndicator					is Boolean
			classic name is DUN-LTR-IND
		DunningProcessCode
			classic name is DUN-PROCESS-CD
		LanguageCode							is an IsoLocale
		AssessDunningFee						is Boolean
			classic name is ASSESS-DUN-FEE
		TaxCalulationAndPrinting
			classic name is TAX-PRINT-CD
		CustomerChangeAudit						is Boolean
			classic name is CUST-AUDIT
		ApplyMixedSignedLineItemsAutomatically	is Boolean
			sql name is AMSignedLineItemsAutomatically
			classic name is APPLY-MIXED
		MaximumOverageAmount					is an InternationalAmount
			classic name is PAY-AUTO-AMT
		MaximumOveragePercent
			classic name is PAY-AUTO-PCT
		MaximumOverageReasonCode				is an ApplicationAdjustmentReason
			classic name is PAY-REAS-CD
		AllowReturns							is Boolean
		LastReturnAuthorizationDate				is Date
			classic name is ALLOW-RTN-DATE
		MultipleDunningLetters					is Boolean
			classic name is MULT-DUN-LTR

















































































	Context Fields


	Local Fields

		CalculateTax
		LocalCalculateTaxExecuted		is Alpha 1
		I1 								is Numeric 3
		LocalAutoReasCd					is like ReceivableReason


	Field Rules
		ProformaCashInAdvanceRequired
			if (CashInAdvanceRequired)
				cannot be entered
					"CannotEnterBothCashInAdvanceAndProformaCashInAdvance"

		CashInAdvanceRequired
			if (ProformaCashInAdvanceRequired)
				cannot be entered
					"CannotEnterBothCashInAdvanceAndProformaCashInAdvance"

		ProformaCashInAdvanceRequiredPercent
			if (ProformaCashInAdvanceRequired)
				required
				constraint (ProformaCashInAdvanceRequiredPercent <= 1 and   ProformaCashInAdvanceRequiredPercent > 0)
					"ProformaCashInAdvancePercentCannotBeLessThanZeroOrGreaterThan100"	

		ReceivableProcessingMethod
			default to "O"

		PercentOfBalanceToCreditLimit
			required
			default to 100

		CreditAnalyst
			required
			if (!TaxExempt)
				constraint (TaxCode entered)
					"PreventTaxCodeDefaultingIsNotSelected;TaxCodeIsRequired"

		CustomerMajorClass
			required

		CustomerMinorClass
			required

		SalesRepresentative
			required

		DetailChargebackDate
			default to "I"

		ChargeMinimumFinanceCharge
			default to false

		TaxExempt
			default to true
			if (TaxExempt)
				constraint (!TaxCode entered)
					"TaxCodeCannotBeEnteredIfPreventTaxCodeDefaultingIsSelected"

		TermsCode
			required





		BankTransactionCode  	
			required
			if (BankTransactionCodeRel.BankTransactionType.BankService)
				constraint (!CustomerGroupRel.BillOfExchangeProcessing)
					"CashOrBillOfExchangeTypePaymentCodeIsRequired;CustomerGroupIsUsingBillOfExchangeProcessing"
			if (!BankTransactionCodeRel.BankTransactionType.CashPayment)
				constraint (CustomerGroupRel.BillOfExchangeProcessing)
					"CashTypePaymentCodeIsRequired;CustomerGroupIsNotUsingBillOfExchangeProcessing"

		DebitCreditMemoTermsCode
			default to TermsCode






		StatementRequired
			if (ReceivableProcessingMethod.OpenItem)
				constraint (OpenItemStatementCycle entered)
					"CannotRequireStatement;AStatementCycleCodeHasNotBeenEntered"

			if 	(StatementRequired
			and  ReceivableProcessingMethod.BalanceForward)
				constraint (CreditBalanceStatement)	
					"CreditBalanceMustBeCheckedForApplicationMethodBalanceForward"

			if 	(StatementRequired
			and  ReceivableProcessingMethod.BalanceForward)
				constraint (ZeroBalanceStatement)
					"ZeroBalanceMustBeCheckedForApplicationMethodBalanceForward"


		OpenItemStatementCycle	
			constraint (ReceivableProcessingMethod.OpenItem)
				"CycleCodeNotAllowed,ApplicationMethodIsBalanceFoward"

			constraint (ReceivableProcessingMethod.OpenItem)
				"InvalidStatementCycleForReceivableProcessingMethod;CycleTypeMustBeOpenItem" 

			if (OpenItemStatementCycle entered)
				constraint (StatementRequired)
					"AStatementCycleCodeHasBeenEntered:MustRequireStatements"


















		PastDueOnlyStatement
			if 	(StatementRequired
			and  PastDueOnlyStatement)
				constraint (ReceivableProcessingMethod.OpenItem)
					"PastDueOnlyMustNotBeCheckedForApplicationMethodBalanceForward"

			constraint (!ZeroBalanceStatement)
				"CannotSelectPastDueOnly;ZeroBalanceStatementIsSelected"

			constraint (!OverCreditLimitStatement)
				"CannotSelectPastDueOnly;OverCreditLimitStatementIsSelected"

			constraint (!CreditBalanceStatement)
				"CannotSelectPastDueOnly;CreditBalanceStatementIsSelected"


		OverCreditLimitStatement
			if 	(StatementRequired
			and  OverCreditLimitStatement)
				constraint (ReceivableProcessingMethod.OpenItem)
					"OverCreditLimitOnlyMustNotBeCheckedForApplicationMethodBalanceForward"

			constraint (!ZeroBalanceStatement)
				"CannotSelectOverCreditLimitStatement;ZeroBalanceStatementIsSelected"

			constraint (!CreditBalanceStatement)
				"CannotSelectCreditBalanceStatement;OverCreditLimitBalanceStatementIsSelected"







		LatePaymentAndFinanceCharges		
			initial value is  Company.LatePaymentAndFinanceCharges
			if (LatePaymentAndFinanceCharges.FinanceCharges)
				constraint (Company.FinanceChargeInterestRatesByDate.CalculateFinanceChargesByFixedInterestRateOverDateRange)
					"CannotSelectFinanceChargesOpotionWhenTheReceivableCompanyFinanceChargeInterestRateByDateOptionIsSetToCalculateUsingFixedInterestOverDateRange"

			if (LatePaymentAndFinanceCharges entered)				
				constraint (FinanceChargeCode entered)
					"FinanceChargeCodeIsRequired"					
				constraint (FinanceChargeCycle entered)
					"FinanceChargeCycleIsRequired"					


			if  (ReceivableProcessingMethod.BalanceForward)
				constraint (FinanceChargeCalculationMethod.NetBalanceCalculation)
					"CalculationMethodMustBeSetToNetForBalanceForwardProcessingMethod"

		FinanceChargeCode  				
			if (FinanceChargeCode entered)
				constraint (!LatePaymentAndFinanceCharges.None)	
					"ChargeTypeIsRequired"	
				if (LatePaymentAndFinanceCharges.Both
				or LatePaymentAndFinanceCharges.LatePaymentCharges)
					constraint (FinanceChargeCalculationMethod.CalculatePerTransaction)
						"FinanceChargecalculationMethodMustBeSetToCalculatePerTransaction"


		FinanceChargeCycle				
			initial value is Company.FinanceChargeCycle
			if (FinanceChargeCycle entered)
				constraint (FinanceChargeCode entered)
					"FinanceChargeCycleCannotBeEntered;FinanceChargeCodeHasNotBeenAssigned"

				constraint (!LatePaymentAndFinanceCharges.None)
					"ChargeTypeIsRequired"

		FinanceChargeCalculationMethod	
			default to Company.FinanceChargeCalculationMethod

		FinanceChargeDueDateGraceDays	
			initial value is Company.FinanceChargeDueDateGraceDays

		MinimumFinanceChargeAmount	  
			if (MinimumFinanceChargeAmount entered)
				constraint (!LatePaymentAndFinanceCharges.None)
					"ChargeTypeIsRequired"	   

		InvoiceMinimumFinanceCharge	
			if (InvoiceMinimumFinanceCharge entered)
				constraint (!LatePaymentAndFinanceCharges.None)
					"ChargeTypeIsRequired"				

			if (Company.FinanceChargeInterestRatesByDate.YesCalculateFinanceChargesByInterestRatesByDate)
				cannot be entered
					"MinimumFinanceChargeCannotBeEntered;CompanyDoesNotCalculateFinanceChargeInterestRatesByDate"

			constraint (FinanceChargeCode entered)
				"FinanceChargeCodeIsRequired"


		AgeDisputesRule					
			default to Company.AgeDisputesRule


		PrintFinanceChargeDocument		
			initial value is Company.PrintFinanceChargeDocument	
			if (PrintFinanceChargeDocument)
				constraint (FinanceChargeCode entered)
					"FinanceChargeCodeIsRequired"

				constraint (!LatePaymentAndFinanceCharges.None)
					"ChargeTypeIsRequired"

		DiscountAdjustmentReason
			constraint (DiscountAdjustmentReason != "CURR")
				"CURRIsAReservedReasonCode"
			constraint (DiscountAdjustmentReason.ReceivableAdjustmentReasonType.Discount)
				"TheAssignedReceivableReasonMustHaveAReceivableAdjustmentReasonTypeOfDiscount"

		AutomaticApplicationMethod  
			constraint (AutomaticCashApplication)
				"AutomaticApplicationMethodCannotBeSelected;AutomaticCashApplicationHasNotBeenSelected"


		AutomaticCashApplication		
			constraint (!AutomaticApplicationMethod.None) 
				"AutomaticCashApplicationCannotBeSelected;AutomaticApplicationMethodHasNotBeenDefined"

		ApplicationCode
			if  (AutomaticApplicationMethod.UserDefined)
				required
					"ApplicationCodeRequiredIfCashApplicationMethodIsUserDefined"
			else
				cannot be entered
					"ApplicationCodeAllowedOnlyIfCashApplicationMethodIsUserDefined" 

		TaxCode
			constraint (!TaxExempt)
				"ThisRecordHasPreventTaxCodeDefaultingSelected,TaxCodeCannotBeEntered"

			constraint (TaxEntityRel exists)
				"TaxEntityDoesNotExist"










		Territory
			if (HasBillingCompany)
				required
					"TerritoryIsRequired"

		PriceList
			if (HasBillingCompany)
				required
					"Price_\ListIsRequired"

		AutomaticDunning
			constraint (DunningCycle entered)
				"DunningCycleIsRequiredForAutomaticDunning"


		DunningCycle
			constraint (AutomaticDunning)
				"WhenDunningCycleIsEnteredAutomaticDunningMustBeSelected"


		DunningLetterIndicator
			constraint (DunningProcessCode entered)
				"DunningProcessCodeMustBeSpecified"


		DunningProcessCode
			constraint (DunningLetterIndicator)
				"WhenProcesscodeIsEnteredAutomaticDunningLetterMustBeSelected"


		RevalueCurrencyTransactions
			constraint (Company.MultiCurrencyProcessing)
				"CannotRevalueIfCompanyDoesNotAccomodateMultiCurrencyProcessing"


		BillingCustomerCode
			if (HasBillingCompany)
				required
					"Billing_\Customer_\CodeIsRequired"

		MaximumOverageReasonCode
			constraint (MaximumOverageReasonCode != "CURR")
				"CURRIsAReservedReasonCode"
			constraint (MaximumOveragePercent entered or MaximumOverageAmount entered)
				"OverageAmountOrPercentMustBeProvidedWhenAOverageReasonCodeIsAssigned"

		ApplyMixedSignedLineItemsAutomatically   
			if (action type.Create)
				default to true

	SubType ReceivableProcessingMethod.BalanceForward Field Rules
		AutomaticCashApplication
			constraint (AutomaticCashApplication)
				"AutoApplyFlagMustBeSetToYesIfUsingBalanceForwardProcessing"

			constraint (!MaximumOverageAmount entered)
				"OverToleranceAmountsAreNotAllowedIfUsingBalanceForwardProcessing"

			constraint (!MaximumOveragePercent entered)
				"OverTolerancePercentsAreNotAllowedIfUsingBalanceForwardProcessing"

			constraint (!MaximumOverageReasonCode entered)
				"OverToleranceAmountsAreNotAllowedIfUsingBalanceForwardProcessing"

			constraint (!OpenItemStatementCycle entered)
				"WhenUsingBalanceForwardProcessingAStatementCycleCannotBeEntered"

			if (StatementRequired)
				constraint (ZeroBalanceStatement)
					"ZeroBalanceStatementIsRequiredOnABalanceForwardCustomerWhereAStatementIsRequired"

				constraint (CreditBalanceStatement)
					"CreditBalanceStatementIsRequiredOnABalanceForwardCustomerWhereAStatementIsRequired"

				constraint (!PastDueOnlyStatement)
					"BalanceForwardCustomerRequiringAStatementDoesNotAllowTheDueOnlyStatementOption"

				constraint (!OverCreditLimitStatement)
					"BalanceForwardCustomerRequiringAStatementDoesNotAllowOverCreditLimitStatementOption"


		ApplicationCode
			if  (AutomaticApplicationMethod.UserDefined)
				required
					"ApplicationCodeRequiredIfCashApplicationMethodIsUserDefined"






























		MaximumOverageAmount  
			constraint (!MaximumOveragePercent entered)
				"CannotEnterBothMaxAmountsAndMaxPercents"

			constraint (!ReceivableProcessingMethod.BalanceForward)
				"CannotEnterOverageWhenReceivableProcessingMethodIsSetToBalanceForwardProcessing"

			constraint (MaximumOverageReasonCode entered)
				"ReasonCodeIsRequiredwhenOverageAmountOrPercentIsDefined"


		MaximumOveragePercent
			constraint (!ReceivableProcessingMethod.BalanceForward)
				"CannotEnterOverageWhenReceivableProcessingMethodIsSetToBalanceForwardProcessing"

			constraint (MaximumOverageReasonCode entered)
				"OveragePercentRequiresAReasonCode"




	Conditions





		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		SecurityGroupAllowsAccess	
			when (actor.context.CompanySecurityGroup = blank
			or	  CompanySecurityGroupMemberRel exists)

		IsReceivableReason
			classic name is ARREASON
			restricted
			when (MaximumShortReasonCode.AutoReasCd entered)

		IsCashOnDeliveryOrderHoldCode
			classic name is CODHOLDCODE
			restricted
			when (CashOnDeliveryOrderHoldCode entered)

		IsSingleOrderHoldCode
			classic name is SGLHOLDCODE
			restricted
			when (SingleOrderHoldCode entered)

		HasBillingCompany
			restricted
			when (BillingCompanyRel exists)

		ReceivableDefaultCodeExists							
			restricted
			when (ReceivableDefaultCode exists)

	Derived Fields
		
		RepresentativeText is a StringField					
			type is Text
			default label is "Company"
			Company " - " Company.Name
					
		CustomerDefaultsTitle is a DerivedField				
			type is Alpha size up to 80
			if (ReceivableDefaultCodeExists)
				return CustomerDefaultsTitleWithRecord
			else
				return CustomerDefaultsTitleNoRecord
		
		CustomerDefaultsTitleNoRecord is a LabelField		
			restricted
			"CustomerDefaults"
		
		CustomerDefaultsTitleWithRecord is a LabelField		
			restricted
			"CustomerDefaults_<ReceivableDefaultCode>_forCompany_<RepresentativeText>"

	Relations

		ArreasonRel
			one-to-one relation to ReceivableReason
			valid when (IsReceivableReason)
			required
			Field Mapping uses symbolic key
				related.Company					 = Company
				related.ReceivableReasonType	 = "AD"
				related.ReceivableReason		 = MaximumShortReasonCode.AutoReasCd

		ReceivableLocalAutoReasonCdRel
			one-to-one relation to ReceivableReason
			valid when (IsReceivableReason)
			required
			Field Mapping uses symbolic key
				related.Company					 = Company
				related.ReceivableReasonType	 = "AD"
				related.ReceivableReason		 = LocalAutoReasCd

		GeneralLedgerCompanyRel	
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		CompanySecurityGroupMemberRel	
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

		AgingholdcodeRel
			one-to-one relation to ReceivableHoldCode
			required
			Field Mapping uses symbolic key
				related.CustomerGroup		 = Company.CustomerGroupField.CustomerGroup
				related.ReceivableHoldCode	 = OrderAgingPriodLimitHoldCode.AgeHoldCd

		CodholdcodeRel
			one-to-one relation to ReceivableHoldCode
			valid when (IsCashOnDeliveryOrderHoldCode)
			required
			Field Mapping uses symbolic key
				related.CustomerGroup		 = Company.CustomerGroupField.CustomerGroup
				related.ReceivableHoldCode	 = CashOnDeliveryOrderHoldCode

		SglholdcodeRel
			one-to-one relation to ReceivableHoldCode
			valid when (IsSingleOrderHoldCode)
			required
			Field Mapping uses symbolic key
				related.CustomerGroup		 = Company.CustomerGroupField.CustomerGroup
				related.ReceivableHoldCode	 = SingleOrderHoldCode

		ReceivableLockBoxRel
			one-to-many relation to ReceivableLockBox
			Field Mapping uses ByCompanyProcessLevel
				related.Company			= Company

		KeyReceivableLockBoxRel	
			one-to-one relation to ReceivableLockBox
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.ReceivableLockBox				= ReceivableLockBox






		TaxEntityRel
			one-to-one relation to TaxEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= GeneralLedgerCompanyRel.FinanceEnterpriseGroup
				related.TaxEntity 				= GeneralLedgerCompanyRel.AccountingEntity















		CustomerGroupRel
			one-to-one relation to CustomerGroup
			Field Mapping uses symbolic key
				related.CustomerGroup			= Company.CustomerGroupField.CustomerGroup

		BankTransactionCodeRel
			one-to-one relation to BankTransactionCode
			Field Mapping uses symbolic key
				related.CashManagementGroup		= GeneralLedgerCompanyRel.FinanceEnterpriseGroup	
				related.BankTransactionCode		= BankTransactionCode

		BillingCompanyRel
			one-to-many relation to BillingCompany
			Field Mapping uses symbolic key
				related.Company = Company



	Rule Blocks
		ValidateApplicationTolerances
			I1 = 1
			while (I1 <= 3)
				if ( MaximumAutoAdjustAmount.MaxAutoAmt[I1] not entered
				and  MaxAutoPcts.MaxAutoPct[I1] not entered
				and  MaximumShortReasonCode.AutoReasCd[I1] not entered)
					I1 += 1

				else
					if (I1 > 1)
						constraint (MaximumShortReasonCode.AutoReasCd[I1 - 1] entered) 
							"CannotEnterFieldOutOfSequence"
							
						if (MaximumAutoAdjustAmount.MaxAutoAmt[I1] entered)		   
							constraint (MaxAutoPcts.MaxAutoPct[I1 - 1] not entered) 
								"EnterAllAmountsOrAllPercents"

							constraint (MaximumAutoAdjustAmount.MaxAutoAmt[I1] >  MaximumAutoAdjustAmount.MaxAutoAmt[I1 - 1])
								"ArrayMustBeInIncreasingSequence"

						if (MaxAutoPcts.MaxAutoPct[I1] entered)					   
							constraint (MaximumAutoAdjustAmount.MaxAutoAmt[I1 - 1] not entered)
								"EnterAllAmountsOrAllPercents"

							constraint (MaxAutoPcts.MaxAutoPct[I1] > MaxAutoPcts.MaxAutoPct[I1 - 1])
								"ArrayMustBeInIncreasingSequence"

					constraint (MaximumShortReasonCode.AutoReasCd[I1] entered)
						"ReasonCodeShouldBeEnteredIfAmountOrPercentEntered"

					if (MaximumShortReasonCode.AutoReasCd[I1] entered)
						LocalAutoReasCd =  MaximumShortReasonCode.AutoReasCd[I1]
						constraint (ReceivableLocalAutoReasonCdRel.IsOverShortAndChargebackDetailAndChargebackSummary)
							"ReasonCodeShouldBeOverShortOrChargebackDetailOrChargebackSummary"

						if (MaximumAutoAdjustAmount.MaxAutoAmt[I1] not entered)
							constraint (MaxAutoPcts.MaxAutoPct[I1] entered)
								"MaximumAmountOrPercentRequired"

						if (MaxAutoPcts.MaxAutoPct[I1] not entered)
							constraint (MaximumAutoAdjustAmount.MaxAutoAmt[I1] entered)
								"MaximumAmountOrPercentRequired"

						if (MaximumAutoAdjustAmount.MaxAutoAmt[I1] entered)
							constraint (MaxAutoPcts.MaxAutoPct[I1] not entered)
								"YouCannotEnterBothAmountAndPercent"

						if (MaxAutoPcts.MaxAutoPct[I1] entered)
							constraint (MaximumAutoAdjustAmount.MaxAutoAmt[I1] not entered)
								"YouCannotEnterBothAmountAndPercent"

					if (MaximumAutoAdjustAmount.MaxAutoAmt[I1] entered)
						constraint (MaximumAutoAdjustAmount.MaxAutoAmt[I1] >= 0)
							"MaxAutoAmtCannotBeANegativeValue"

					if (MaxAutoPcts.MaxAutoPct[I1] entered)
						constraint (MaxAutoPcts.MaxAutoPct[I1] >= 0)
							"PercentCannotBeANegativeValue"

					I1 += 1


	Actions
		Create is a Create Action
			Entrance Rules




			Action Rules
				if (MaximumAutoAdjustAmount entered
				or  MaxAutoPcts entered
				or  MaximumShortReasonCode entered)
					include ValidateApplicationTolerances

		T2VCreate is a Create Action				
			restricted 
			default label is untranslatable 
			bypass field rules 
			
		Update is an Update Action
			Entrance Rules




			Action Rules
				if (MaximumAutoAdjustAmount entered
				or  MaxAutoPcts entered
				or  MaximumShortReasonCode entered)
					include ValidateApplicationTolerances

			Field Rules
				AgeDisputesRule					
					default to (AgeDisputesRule.AgeByTransactionDate)

		Delete is a Delete Action








