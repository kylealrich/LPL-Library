StudentActivityAccount is a BusinessClass
    owned by studentactivities
    prefix is SAAC

    Ontology
    	symbolic key is StudentActivityAccount


    Persistent Fields
		Description			is Alpha 60
		ActivityLevel		is Numeric 2
			States
				Detail			value is 0
				Group			value is 1
		StudentActivityType
		GLAccount				is a FinanceCodeBlockFull
		FeeAmount				is an InternationalAmount
		CurrentReceipts			is an InternationalAmount
		CurrentDisbursements	is an InternationalAmount
		CurrentTransfers		is an InternationalAmount
		Active
		ReportingPeriods		is a StudentActivityPeriodRange

	Transient Fields
		TransactionCurrencyCode			is a Currency
			derive value from DerivedCurrency

	Local Fields
		LocalStudentActivitySchool				is a StudentActivitySchool
		LocalStudentActivityAccount				is a StudentActivityAccount
		LocalSchoolGroup						is a StudentActivitySchool group
		LocalLatestPeriodEndingBalanceByType	is an InternationalAmount
		LocalCurrentReceiptsByType				is an InternationalAmount
		LocalCurrentDisbursementsByType			is an InternationalAmount
		LocalCurrentTransfersByType				is an InternationalAmount
		CalculationByTypeComplete				is Boolean
		LocalDerivedLatestEndingBalanceByType	is an InternationalAmount
		LocalDerivedCurrentReceiptsByType		is an InternationalAmount
		LocalDerivedCurrentDisbursementsByType	is an InternationalAmount
		LocalDerivedCurrentTransfersByType		is an InternationalAmount
		DerivedCurrentCalcByTypeComplete		is Boolean
		LocalDerivedLatestPeriodEndingBalance	is an InternationalAmount
		LocalDerivedCurrentReceipts				is an InternationalAmount
		LocalDerivedCurrentDisbursements		is an InternationalAmount
		LocalDerivedCurrentTransfers			is an InternationalAmount
		CalculationByGroupComplete				is Boolean
		LocalDerivedBeginningBalance			is an InternationalAmount
		LocalDerivedReceipts					is an InternationalAmount
		LocalDerivedDisbursements				is an InternationalAmount
		LocalDerivedTransfers					is an InternationalAmount
		DerivedCalculationComplete				is Boolean
		LocalDerivedBeginningBalanceByType		is an InternationalAmount
		LocalDerivedReceiptsByType				is an InternationalAmount
		LocalDerivedDisbursementsByType			is an InternationalAmount
		LocalDerivedTransfersByType				is an InternationalAmount
		DerivedCalculationByTypeComplete		is Boolean

	Derived Fields
		DerivedCurrency is a DerivedField
			type is like Currency
			return StudentActivityDistrict.AccountingEntity.FunctionalCurrency
				
		NumberOfDescendants is a ComputeField								
			type is Numeric 4
			(instance count of StudentActivityAccount descendants)

		LatestClosePeriodEndingBalance is a DerivedField
			type is like InternationalAmount
			return (first StudentActivityBalanceRel.PeriodEndingBalance)

		CurrentBalance is a DerivedField
			type is like InternationalAmount
			return (LatestClosePeriodEndingBalance + CurrentReceipts - CurrentDisbursements + CurrentTransfers)

		LatestClosePeriodEndingBalanceByType is a DerivedField
			type is like InternationalAmount
			if (CalculationByTypeComplete)
				return LocalLatestPeriodEndingBalanceByType
			initialize LocalLatestPeriodEndingBalanceByType	
			initialize LocalCurrentReceiptsByType	
			initialize LocalCurrentDisbursementsByType	
			initialize LocalCurrentTransfersByType	
			for each SchoolActivityAccountBySchoolTypeRel
				LocalLatestPeriodEndingBalanceByType	+= each.LatestClosePeriodEndingBalance
				LocalCurrentReceiptsByType				+= each.CurrentReceipts
				LocalCurrentDisbursementsByType			+= each.CurrentDisbursements
				LocalCurrentTransfersByType				+= each.CurrentTransfers
			CalculationByTypeComplete	= true
			return LocalLatestPeriodEndingBalanceByType

		CurrentReceiptsByType is a DerivedField
			type is like InternationalAmount
			if (CalculationByTypeComplete)
				return LocalCurrentReceiptsByType
			initialize LocalLatestPeriodEndingBalanceByType	
			initialize LocalCurrentReceiptsByType	
			initialize LocalCurrentDisbursementsByType	
			initialize LocalCurrentTransfersByType	
			for each SchoolActivityAccountBySchoolTypeRel
				LocalLatestPeriodEndingBalanceByType	+= each.LatestClosePeriodEndingBalance
				LocalCurrentReceiptsByType				+= each.CurrentReceipts
				LocalCurrentDisbursementsByType			+= each.CurrentDisbursements
				LocalCurrentTransfersByType				+= each.CurrentTransfers
			CalculationByTypeComplete	= true
			return LocalCurrentReceiptsByType

		CurrentDisbursementsByType is a DerivedField
			type is like InternationalAmount
			if (CalculationByTypeComplete)
				return LocalCurrentDisbursementsByType
			initialize LocalLatestPeriodEndingBalanceByType	
			initialize LocalCurrentReceiptsByType	
			initialize LocalCurrentDisbursementsByType	
			initialize LocalCurrentTransfersByType	
			for each SchoolActivityAccountBySchoolTypeRel
				LocalLatestPeriodEndingBalanceByType	+= each.LatestClosePeriodEndingBalance
				LocalCurrentReceiptsByType				+= each.CurrentReceipts
				LocalCurrentDisbursementsByType			+= each.CurrentDisbursements
				LocalCurrentTransfersByType				+= each.CurrentTransfers
			CalculationByTypeComplete	= true
			return LocalCurrentDisbursementsByType

		CurrentTransfersByType is a DerivedField
			type is like InternationalAmount
			if (CalculationByTypeComplete)
				return LocalCurrentTransfersByType
			initialize LocalLatestPeriodEndingBalanceByType	
			initialize LocalCurrentReceiptsByType	
			initialize LocalCurrentDisbursementsByType	
			initialize LocalCurrentTransfersByType	
			for each SchoolActivityAccountBySchoolTypeRel
				LocalLatestPeriodEndingBalanceByType	+= each.LatestClosePeriodEndingBalance
				LocalCurrentReceiptsByType				+= each.CurrentReceipts
				LocalCurrentDisbursementsByType			+= each.CurrentDisbursements
				LocalCurrentTransfersByType				+= each.CurrentTransfers
			CalculationByTypeComplete	= true
			return LocalCurrentTransfersByType

		CurrentBalanceByType is a DerivedField
			type is like InternationalAmount
			return (LatestClosePeriodEndingBalanceByType + CurrentReceiptsByType - CurrentDisbursementsByType + CurrentTransfersByType)

		DerivedLatestCloseEndingBalanceByType is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return LatestClosePeriodEndingBalanceByType
			if (DerivedCurrentCalcByTypeComplete)
				return LocalDerivedLatestEndingBalanceByType
			initialize LocalDerivedLatestEndingBalanceByType	
			initialize LocalDerivedCurrentReceiptsByType
			initialize LocalDerivedCurrentDisbursementsByType	
			initialize LocalDerivedCurrentTransfersByType
			for each StudentActivityAccount descendants
				LocalDerivedLatestEndingBalanceByType	+= each.LatestClosePeriodEndingBalanceByType
				LocalDerivedCurrentReceiptsByType		+= each.CurrentReceiptsByType
				LocalDerivedCurrentDisbursementsByType	+= each.CurrentDisbursementsByType
				LocalDerivedCurrentTransfersByType		+= each.CurrentTransfersByType
			DerivedCurrentCalcByTypeComplete	= true
			return LocalDerivedLatestEndingBalanceByType
		
		DerivedCurrentReceiptsByType is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentReceiptsByType
			if (DerivedCurrentCalcByTypeComplete)
				return LocalDerivedCurrentReceiptsByType
			initialize LocalDerivedLatestEndingBalanceByType	
			initialize LocalDerivedCurrentReceiptsByType
			initialize LocalDerivedCurrentDisbursementsByType	
			initialize LocalDerivedCurrentTransfersByType
			for each StudentActivityAccount descendants
				LocalDerivedLatestEndingBalanceByType	+= each.LatestClosePeriodEndingBalanceByType
				LocalDerivedCurrentReceiptsByType		+= each.CurrentReceiptsByType
				LocalDerivedCurrentDisbursementsByType	+= each.CurrentDisbursementsByType
				LocalDerivedCurrentTransfersByType		+= each.CurrentTransfersByType
			DerivedCurrentCalcByTypeComplete	= true
			return LocalDerivedCurrentReceiptsByType
		
		DerivedCurrentDisbursementsByType is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentDisbursementsByType
			if (DerivedCurrentCalcByTypeComplete)
				return LocalDerivedCurrentDisbursementsByType
			initialize LocalDerivedLatestEndingBalanceByType	
			initialize LocalDerivedCurrentReceiptsByType
			initialize LocalDerivedCurrentDisbursementsByType	
			initialize LocalDerivedCurrentTransfersByType
			for each StudentActivityAccount descendants
				LocalDerivedLatestEndingBalanceByType	+= each.LatestClosePeriodEndingBalanceByType
				LocalDerivedCurrentReceiptsByType		+= each.CurrentReceiptsByType
				LocalDerivedCurrentDisbursementsByType	+= each.CurrentDisbursementsByType
				LocalDerivedCurrentTransfersByType		+= each.CurrentTransfersByType
			DerivedCurrentCalcByTypeComplete	= true
			return LocalDerivedCurrentDisbursementsByType
		
		DerivedCurrentTransfersByType is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentTransfersByType
			if (DerivedCurrentCalcByTypeComplete)
				return LocalDerivedCurrentTransfersByType
			initialize LocalDerivedLatestEndingBalanceByType	
			initialize LocalDerivedCurrentReceiptsByType
			initialize LocalDerivedCurrentDisbursementsByType	
			initialize LocalDerivedCurrentTransfersByType
			for each StudentActivityAccount descendants
				LocalDerivedLatestEndingBalanceByType	+= each.LatestClosePeriodEndingBalanceByType
				LocalDerivedCurrentReceiptsByType		+= each.CurrentReceiptsByType
				LocalDerivedCurrentDisbursementsByType	+= each.CurrentDisbursementsByType
				LocalDerivedCurrentTransfersByType		+= each.CurrentTransfersByType
			DerivedCurrentCalcByTypeComplete	= true
			return LocalDerivedCurrentTransfersByType
		
		DerivedCurrentBalanceByType is a DerivedField
			type is like InternationalAmount
			return (DerivedLatestCloseEndingBalanceByType + DerivedCurrentReceiptsByType - DerivedCurrentDisbursementsByType + DerivedCurrentTransfersByType)

		DerivedLatestClosePeriodEndingBalance is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return LatestClosePeriodEndingBalance
			if (CalculationByGroupComplete)
				return LocalDerivedLatestPeriodEndingBalance
			initialize LocalDerivedLatestPeriodEndingBalance	
			initialize LocalDerivedCurrentReceipts
			initialize LocalDerivedCurrentDisbursements	
			initialize LocalDerivedCurrentTransfers
			for each StudentActivityAccount descendants
				LocalDerivedLatestPeriodEndingBalance	+= each.LatestClosePeriodEndingBalance
				LocalDerivedCurrentReceipts				+= each.CurrentReceipts
				LocalDerivedCurrentDisbursements		+= each.CurrentDisbursements
				LocalDerivedCurrentTransfers			+= each.CurrentTransfers
			CalculationByGroupComplete	= true
			return LocalDerivedLatestPeriodEndingBalance
		
		DerivedCurrentReceipts is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentReceipts
			if (CalculationByGroupComplete)
				return LocalDerivedCurrentReceipts
			initialize LocalDerivedLatestPeriodEndingBalance	
			initialize LocalDerivedCurrentReceipts
			initialize LocalDerivedCurrentDisbursements	
			initialize LocalDerivedCurrentTransfers
			for each StudentActivityAccount descendants
				LocalDerivedLatestPeriodEndingBalance	+= each.LatestClosePeriodEndingBalance
				LocalDerivedCurrentReceipts				+= each.CurrentReceipts
				LocalDerivedCurrentDisbursements		+= each.CurrentDisbursements
				LocalDerivedCurrentTransfers			+= each.CurrentTransfers
			CalculationByGroupComplete	= true
			return LocalDerivedCurrentReceipts
		
		DerivedCurrentDisbursements is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentDisbursements
			if (CalculationByGroupComplete)
				return LocalDerivedCurrentDisbursements
			initialize LocalDerivedLatestPeriodEndingBalance	
			initialize LocalDerivedCurrentReceipts
			initialize LocalDerivedCurrentDisbursements	
			initialize LocalDerivedCurrentTransfers
			for each StudentActivityAccount descendants
				LocalDerivedLatestPeriodEndingBalance	+= each.LatestClosePeriodEndingBalance
				LocalDerivedCurrentReceipts				+= each.CurrentReceipts
				LocalDerivedCurrentDisbursements		+= each.CurrentDisbursements
				LocalDerivedCurrentTransfers			+= each.CurrentTransfers
			CalculationByGroupComplete	= true
			return LocalDerivedCurrentDisbursements
		
		DerivedCurrentTransfers is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return CurrentTransfers
			if (CalculationByGroupComplete)
				return LocalDerivedCurrentTransfers
			initialize LocalDerivedLatestPeriodEndingBalance	
			initialize LocalDerivedCurrentReceipts
			initialize LocalDerivedCurrentDisbursements	
			initialize LocalDerivedCurrentTransfers
			for each StudentActivityAccount descendants
				LocalDerivedLatestPeriodEndingBalance	+= each.LatestClosePeriodEndingBalance
				LocalDerivedCurrentReceipts				+= each.CurrentReceipts
				LocalDerivedCurrentDisbursements		+= each.CurrentDisbursements
				LocalDerivedCurrentTransfers			+= each.CurrentTransfers
			CalculationByGroupComplete	= true
			return LocalDerivedCurrentTransfers
		
		DerivedCurrentBalance is a DerivedField
			type is like InternationalAmount
			return (DerivedLatestClosePeriodEndingBalance + DerivedCurrentReceipts - DerivedCurrentDisbursements + DerivedCurrentTransfers)

		DerivedBeginningBalance is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return PeriodStudentActivityBalanceRel.BeginningBalance
			if (DerivedCalculationComplete)
				return LocalDerivedBeginningBalance
			initialize LocalDerivedBeginningBalance
			initialize LocalDerivedReceipts
			initialize LocalDerivedDisbursements
			initialize LocalDerivedTransfers
			for each ParentStudentActivityBalanceRel
				LocalDerivedBeginningBalance	+= each.BeginningBalance
				LocalDerivedReceipts			+= each.PeriodReceipts
				LocalDerivedDisbursements		+= each.PeriodDisbursements
				LocalDerivedTransfers			+= each.PeriodTransfers
			DerivedCalculationComplete	= true
			return LocalDerivedBeginningBalance

		DerivedPeriodReceipts is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return PeriodStudentActivityBalanceRel.PeriodReceipts
			if (DerivedCalculationComplete)
				return LocalDerivedReceipts
			initialize LocalDerivedBeginningBalance
			initialize LocalDerivedReceipts
			initialize LocalDerivedDisbursements
			initialize LocalDerivedTransfers
			for each ParentStudentActivityBalanceRel
				LocalDerivedBeginningBalance	+= each.BeginningBalance
				LocalDerivedReceipts			+= each.PeriodReceipts
				LocalDerivedDisbursements		+= each.PeriodDisbursements
				LocalDerivedTransfers			+= each.PeriodTransfers
			DerivedCalculationComplete	= true
			return LocalDerivedReceipts
		
		DerivedPeriodDisbursements is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return PeriodStudentActivityBalanceRel.PeriodDisbursements
			if (DerivedCalculationComplete)
				return LocalDerivedDisbursements
			initialize LocalDerivedBeginningBalance
			initialize LocalDerivedReceipts
			initialize LocalDerivedDisbursements
			initialize LocalDerivedTransfers
			for each ParentStudentActivityBalanceRel
				LocalDerivedBeginningBalance	+= each.BeginningBalance
				LocalDerivedReceipts			+= each.PeriodReceipts
				LocalDerivedDisbursements		+= each.PeriodDisbursements
				LocalDerivedTransfers			+= each.PeriodTransfers
			DerivedCalculationComplete	= true
			return LocalDerivedDisbursements
		
		DerivedPeriodTransfers is a DerivedField
			type is like InternationalAmount
			if (ActivityLevel.Detail)
				return PeriodStudentActivityBalanceRel.PeriodTransfers
			if (DerivedCalculationComplete)
				return LocalDerivedTransfers
			initialize LocalDerivedBeginningBalance
			initialize LocalDerivedReceipts
			initialize LocalDerivedDisbursements
			initialize LocalDerivedTransfers
			for each ParentStudentActivityBalanceRel
				LocalDerivedBeginningBalance	+= each.BeginningBalance
				LocalDerivedReceipts			+= each.PeriodReceipts
				LocalDerivedDisbursements		+= each.PeriodDisbursements
				LocalDerivedTransfers			+= each.PeriodTransfers
			DerivedCalculationComplete	= true
			return LocalDerivedTransfers
		
		DerivedPeriodEndingBalance is a DerivedField
			type is like InternationalAmount
			return (DerivedBeginningBalance + DerivedPeriodReceipts - DerivedPeriodDisbursements + DerivedPeriodTransfers)

		DerivedBeginningBalanceByType is a DerivedField
			type is like InternationalAmount
			if (DerivedCalculationByTypeComplete)
				return LocalDerivedBeginningBalanceByType
			initialize LocalDerivedBeginningBalanceByType
			initialize LocalDerivedReceiptsByType
			initialize LocalDerivedDisbursementsByType
			initialize LocalDerivedTransfersByType
			if (ActivityLevel.Detail)
				for each SchoolTypeActivityBalanceDetailRel
					LocalDerivedBeginningBalanceByType	+= each.BeginningBalance
					LocalDerivedReceiptsByType			+= each.PeriodReceipts
					LocalDerivedDisbursementsByType		+= each.PeriodDisbursements
					LocalDerivedTransfersByType			+= each.PeriodTransfers
				DerivedCalculationByTypeComplete	= true
				return LocalDerivedBeginningBalanceByType
			for each SchoolTypeParentActivityBalanceDetailRel
				LocalDerivedBeginningBalanceByType	+= each.BeginningBalance
				LocalDerivedReceiptsByType			+= each.PeriodReceipts
				LocalDerivedDisbursementsByType		+= each.PeriodDisbursements
				LocalDerivedTransfersByType			+= each.PeriodTransfers
			DerivedCalculationByTypeComplete	= true
			return LocalDerivedBeginningBalanceByType

		DerivedPeriodReceiptsByType is a DerivedField
			type is like InternationalAmount
			if (DerivedCalculationByTypeComplete)
				return LocalDerivedReceiptsByType
			initialize LocalDerivedBeginningBalanceByType
			initialize LocalDerivedReceiptsByType
			initialize LocalDerivedDisbursementsByType
			initialize LocalDerivedTransfersByType
			if (ActivityLevel.Detail)
				for each SchoolTypeActivityBalanceDetailRel
					LocalDerivedBeginningBalanceByType	+= each.BeginningBalance
					LocalDerivedReceiptsByType			+= each.PeriodReceipts
					LocalDerivedDisbursementsByType		+= each.PeriodDisbursements
					LocalDerivedTransfersByType			+= each.PeriodTransfers
				DerivedCalculationByTypeComplete	= true
				return LocalDerivedReceiptsByType
			DerivedCalculationByTypeComplete	= true
			return LocalDerivedReceiptsByType
		
		DerivedPeriodDisbursementsByType is a DerivedField
			type is like InternationalAmount
			if (DerivedCalculationByTypeComplete)
				return LocalDerivedDisbursementsByType
			initialize LocalDerivedBeginningBalanceByType
			initialize LocalDerivedReceiptsByType
			initialize LocalDerivedDisbursementsByType
			initialize LocalDerivedTransfersByType
			if (ActivityLevel.Detail)
				for each SchoolTypeActivityBalanceDetailRel
					LocalDerivedBeginningBalanceByType	+= each.BeginningBalance
					LocalDerivedReceiptsByType			+= each.PeriodReceipts
					LocalDerivedDisbursementsByType		+= each.PeriodDisbursements
					LocalDerivedTransfersByType			+= each.PeriodTransfers
				DerivedCalculationByTypeComplete	= true
				return LocalDerivedDisbursementsByType
			DerivedCalculationByTypeComplete	= true
			return LocalDerivedDisbursementsByType
		
		DerivedPeriodTransfersByType is a DerivedField
			type is like InternationalAmount
			if (DerivedCalculationByTypeComplete)
				return LocalDerivedTransfersByType
			initialize LocalDerivedBeginningBalanceByType
			initialize LocalDerivedReceiptsByType
			initialize LocalDerivedDisbursementsByType
			initialize LocalDerivedTransfersByType
			if (ActivityLevel.Detail)
				for each SchoolTypeActivityBalanceDetailRel
					LocalDerivedBeginningBalanceByType	+= each.BeginningBalance
					LocalDerivedReceiptsByType			+= each.PeriodReceipts
					LocalDerivedDisbursementsByType		+= each.PeriodDisbursements
					LocalDerivedTransfersByType			+= each.PeriodTransfers
				DerivedCalculationByTypeComplete	= true
				return LocalDerivedTransfersByType
			DerivedCalculationByTypeComplete	= true
			return LocalDerivedTransfersByType
		
		DerivedPeriodEndingBalanceByType is a DerivedField
			type is like InternationalAmount
			return (DerivedBeginningBalanceByType + DerivedPeriodReceiptsByType - DerivedPeriodDisbursementsByType + DerivedPeriodTransfersByType)
					
	Context Fields
		StudentActivitySchoolType
		StudentActivitySchool
		StudentActivityClosedPeriod

	Sets

	Relations
		StudentActivityBalanceRel
			one-to-many relation to StudentActivityBalance
			Field Mapping uses ByDescendingDate
				related.StudentActivityDistrict	= StudentActivityDistrict
				related.StudentActivityAccount	= StudentActivityAccount

		StudentActivityBalanceDetailRel
			one-to-many relation to StudentActivityBalanceDetail
			Field Mapping uses ByDistrictDescendingDate
				related.StudentActivityDistrict			= StudentActivityDistrict
				related.StudentActivityAccount			= StudentActivityAccount

		SchoolActivityAccountBalanceDetailRel
			one-to-many relation to SchoolActivityAccountBalance
			Field Mapping uses ByDistrictStudentActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount

		StudentActivityReceiptDetailRel
			one-to-many relation to StudentActivityReceiptDetail
			Field Mapping uses ByDistrictActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection	
				where (related.Status	= 1
				or     related.Status	= 2)

		StudentActivityBankCreditsRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByDistrictActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
				related.Status											= 1
			Instance Selection
				where (!related.BankTransactionType.Transfer
				and     related.StudentActivityBankTransaction.AmountType.BankCredit)
		
		StudentActivityDisbursementRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByDistrictActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
				related.Status											= 1
			Instance Selection
				where (!related.BankTransactionType.Transfer
				and     related.StudentActivityBankTransaction.AmountType.BankDebit)
				
		StudentActivityTransferDetailRel is a StudentActivityTransferDetail set
			Instance Selection
				where (related.Status	= 1)

		StudentActivityBankTransferRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByDistrictActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
				related.Status											= 1
			Instance Selection
				where (related.BankTransactionType.Transfer)

		StudentActivitySchoolRel
			one-to-many relation to StudentActivitySchool
			Field Mapping uses symbolic key
				related.StudentActivityDistrict		= StudentActivityDistrict
			Instance Selection
				where (related.StudentActivitySchool within LocalSchoolGroup)

		SchoolActivityAccountRel
			one-to-one relation to SchoolActivityAccount
			Field Mapping uses symbolic key
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.StudentActivitySchool							= LocalStudentActivitySchool
				related.SchoolActivityAccount.StudentActivityAccount	= LocalStudentActivityAccount
				related.SchoolActivityAccount.SubActivity				= blank

		SchoolStudentActivityAccountRel
			one-to-many relation to SchoolActivityAccount
			Field Mapping uses ByStudentActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount

		SchoolsForTypeRel
			one-to-many relation to StudentActivitySchool
			Field Mapping uses BySchoolType
				related.StudentActivityDistrict		= StudentActivityDistrict
				related.StudentActivitySchoolType	= StudentActivitySchoolType
				
		SchoolActivityAccountBySchoolTypeRel
			one-to-many relation to SchoolActivityAccount
			Field Mapping uses ByStudentActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.StudentActivitySchool					= any SchoolsForTypeRel.StudentActivitySchool)
		
		SchoolActivityBySchoolTypeBalanceFormRel
			one-to-many relation to SchoolActivityAccount
			Field Mapping uses ByStudentActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.StudentActivitySchool					= any SchoolsForTypeRel.StudentActivitySchool)
		
		SchoolTypeActivityBalanceDetailRel
			one-to-many relation to StudentActivityBalanceDetail
			Field Mapping uses ByActivityType
				related.StudentActivityDistrict			= StudentActivityDistrict
				related.StudentActivityClosedPeriod		= StudentActivityClosedPeriod
				related.StudentActivityType				= StudentActivityType
				related.StudentActivityAccount			= StudentActivityAccount
			Instance Selection
				where (related.StudentActivitySchool	= any SchoolsForTypeRel.StudentActivitySchool)

		SchoolTypeParentActivityBalanceDetailRel
			one-to-many relation to StudentActivityBalanceDetail
			Field Mapping uses ByParentActivity
				related.StudentActivityDistrict			= StudentActivityDistrict
				related.StudentActivityClosedPeriod		= StudentActivityClosedPeriod
				related.ParentStudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.StudentActivitySchool	= any SchoolsForTypeRel.StudentActivitySchool)


		SchoolStudentActivityAccountByTypeRel
			one-to-many relation to SchoolActivityAccount
			Field Mapping uses ByStudentActivityAccount
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.StudentActivitySchool					= any SchoolsForTypeRel.StudentActivitySchool)
				
		PeriodStudentActivityBalanceRel
			one-to-one relation to StudentActivityBalance
			Field Mapping uses symbolic key
				related.StudentActivityDistrict			= StudentActivityDistrict


    			related.StudentActivityClosedPeriod		= StudentActivityClosedPeriod
				related.StudentActivityAccount			= StudentActivityAccount

		ParentStudentActivityBalanceRel
			one-to-many relation to StudentActivityBalance
			Field Mapping uses ByParentActivity
				related.StudentActivityDistrict			= StudentActivityDistrict

    			related.StudentActivityClosedPeriod		= StudentActivityClosedPeriod
				related.ParentStudentActivityAccount	= StudentActivityAccount

		ClosedReceiptDetailRel
			one-to-many relation to StudentActivityReceiptDetail
			Field Mapping uses ByClosedPeriod		
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.ClosedPeriod									= StudentActivityClosedPeriod
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			
		ClosedBankReceiptDetailRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByClosedPeriod		
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.ClosedPeriod									= StudentActivityClosedPeriod
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (!related.BankTransactionType.Transfer
				and     related.StudentActivityBankTransaction.AmountType.BankCredit)

		ClosedDisbursementDetailRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByClosedPeriod		
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.ClosedPeriod									= StudentActivityClosedPeriod
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (!related.BankTransactionType.Transfer
				and     related.StudentActivityBankTransaction.AmountType.BankDebit)
			
		ClosedTransferDetailRel
			one-to-many relation to StudentActivityTransferDetail
			Field Mapping uses ByClosedPeriod		
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.ClosedPeriod									= StudentActivityClosedPeriod
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			
		ClosedBankTransferDetailRel
			one-to-many relation to StudentActivityBankTransDetail
			Field Mapping uses ByClosedPeriod		
				related.StudentActivityDistrict							= StudentActivityDistrict
				related.ClosedPeriod									= StudentActivityClosedPeriod
				related.SchoolActivityAccount.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.BankTransactionType.Transfer)

		MultiPeriodStudentActivityBalanceRel
			one-to-many relation to StudentActivityBalance
			Field Mapping uses ByAscendingDate
				related.StudentActivityDistrict	= StudentActivityDistrict
				related.StudentActivityAccount	= StudentActivityAccount
			Instance Selection
				where (related.StudentActivityClosedPeriod 	>= ReportingPeriods.FromPeriod
				and    related.StudentActivityClosedPeriod	<= ReportingPeriods.ToPeriod)

	Conditions
	
		ActivityRecordExists
			when (StudentActivityAccount exists)

		TransactionsExist
			when (StudentActivityBalanceRel			exists
			or    StudentActivityReceiptDetailRel	exists
			or    StudentActivityDisbursementRel	exists
			or    StudentActivityTransferDetailRel	exists)
	
		ActivityBalancesExist
			when (StudentActivityBalanceRel exists)
			
		HasParent
			when (ParentStudentActivityAccount entered)

		HasChildren
			when (any StudentActivityAccount descendants exist)

    	HasActivityDetail
    		restricted
    		when (StudentActivityAccount children exist)

		HasCurrentBalances
			when (LatestClosePeriodEndingBalance	entered
			or    CurrentReceipts					entered
			or    CurrentDisbursements				entered
			or    CurrentTransfers					entered)

		HasDerivedCurrentBalances
			when (DerivedLatestClosePeriodEndingBalance	entered
			or    DerivedCurrentReceipts				entered
			or    DerivedCurrentDisbursements			entered
			or    DerivedCurrentTransfers				entered)

		HasCurrentBalancesByType
			when (LatestClosePeriodEndingBalanceByType	entered
			or    CurrentReceiptsByType					entered
			or    CurrentDisbursementsByType			entered
			or    CurrentTransfersByType				entered)

		HasDerivedCurrentBalancesByType
			when (DerivedLatestCloseEndingBalanceByType	entered
			or    DerivedCurrentReceiptsByType			entered
			or    DerivedCurrentDisbursementsByType		entered
			or    DerivedCurrentTransfersByType			entered)
		HasDerivedBalances
			when (DerivedBeginningBalance				entered
			or    DerivedPeriodReceipts					entered
			or    DerivedPeriodDisbursements			entered
			or    DerivedPeriodTransfers				entered)

		HasDerivedBalancesByType
			when (DerivedBeginningBalanceByType			entered
			or    DerivedPeriodReceiptsByType			entered
			or    DerivedPeriodDisbursementsByType		entered
			or    DerivedPeriodTransfersByType			entered)

		HasReceiptDetails
			when (StudentActivityReceiptDetailRel exists)
			
		HasBankReceiptDetails	
			when (StudentActivityBankCreditsRel exists)

		HasDisbursementDetails
			when (StudentActivityDisbursementRel exists)
			
		HasTransferDetails
			when (StudentActivityTransferDetailRel exists)
		
		HasBankTransferDetails
			when (StudentActivityBankTransferRel exists)

		HasTransactionDetails
			when (ActivityLevel.Detail
			and  (HasReceiptDetails
			or    HasBankReceiptDetails
			or    HasDisbursementDetails
			or    HasTransferDetails
			or    HasBankTransferDetails))
			
		HasClosedReceiptDetails
			when (ClosedReceiptDetailRel exists)
			
		HasClosedBankReceiptDetails	
			when (ClosedBankReceiptDetailRel exists)

		HasClosedDisbursementDetails
			when (ClosedDisbursementDetailRel exists)
			
		HasClosedTransferDetails
			when (ClosedTransferDetailRel exists)
		
		HasClosedBankTransferDetails
			when (ClosedBankTransferDetailRel exists)

		HasClosedTransactionDetails
			when (ActivityLevel.Detail
			and  (HasClosedReceiptDetails
			or    HasClosedBankReceiptDetails
			or    HasClosedDisbursementDetails
			or    HasClosedTransferDetails
			or    HasClosedBankTransferDetails))
			
		ReportPeriodRangeEntered
			when (ReportingPeriods.FromPeriod entered
			and   ReportingPeriods.ToPeriod entered)

	Field Rules
		ParentStudentActivityAccount
				constraint (ParentStudentActivityAccount.ActivityLevel.Group)
					"ParentActivityMustBeGroupLevel" 
				
		Description
			required

		ActivityLevel
			if (any StudentActivityAccount descendants exist
			or  TransactionsExist)
				cannot be changed
					"TransactionsExistCannotChangeActivityLevel" 

		StudentActivityType
			default to ParentStudentActivityAccount.StudentActivityType
			default to StudentActivityType.Liability
			if (ParentStudentActivityAccount entered)
				constraint (StudentActivityType	= ParentStudentActivityAccount.StudentActivityType)
					"ActivityTypeMustBeSameTypeAsParentActivityType"
			if (ActivityLevel.Detail
			and TransactionsExist)
				cannot be changed
					"TransactionsExistCannotChangeActivityType" 
							
		GLAccount
			constraint (ActivityLevel.Detail)
				"GLAccountNotAllowedForGrouplActivities"

		FeeAmount
			constraint (ActivityLevel.Detail)
				"FeeAmountNotAllowedForGroupActivities"
			constraint (!StudentActivityType.Asset)
				"FeeAmountNotAllowedForAssetTypeActivities"
			
 		CurrentReceipts
			cannot be changed
		
		CurrentDisbursements
			cannot be changed
			
		CurrentTransfers
			cannot be changed
			
 
  	Attach Rules
 		if (parentcontext.name	!= "StudentActivityBalance"
 		and parentcontext.name	!= "StudentActivityBalanceDetail"
 		and parentcontext.name	!= "SchoolActivityAccountBalance"
 		and parentcontext.name	!= "StudentActivityJournalDetail")
			constraint (Active)
				"ActivityIsInactive"

	Actions
		AddActivityToSchool is an Instance Action
			valid when (Active)
			Parameters
				School		is a StudentActivitySchool
				SchoolGroup	is a StudentActivitySchool group

			Parameter Rules
				School
					constraint (!SchoolGroup entered)
						"CannotEnterBothSchoolAndSchoolGroup"			

				SchoolGroup
					constraint (!School entered)
						"CannotEnterBothSchoolAndSchoolGroup"			

			Action Rules
				if (School entered)
					if (any StudentActivityAccount descendants exist)
						LocalStudentActivitySchool	= School
						for each StudentActivityAccount descendants
							LocalStudentActivityAccount	= each.StudentActivityAccount
							if (!SchoolActivityAccountRel exists)
								invoke Create SchoolActivityAccount
									invoked.StudentActivityDistrict	= StudentActivityDistrict
									invoked.StudentActivitySchool	= LocalStudentActivitySchool
									invoked.SchoolActivityAccount	= LocalStudentActivityAccount
									invoked.Active					= true
					else									
						invoke Create SchoolActivityAccount
							invoked.StudentActivityDistrict	= StudentActivityDistrict
							invoked.StudentActivitySchool	= School
							invoked.SchoolActivityAccount	= StudentActivityAccount
							invoked.Active					= true
				else
					LocalSchoolGroup	= SchoolGroup
					for each StudentActivitySchoolRel
						LocalStudentActivitySchool	= each.StudentActivitySchool
						if (any StudentActivityAccount descendants exist)
							for each StudentActivityAccount descendants
								LocalStudentActivityAccount	= each.StudentActivityAccount
								if (!SchoolActivityAccountRel exists)
									invoke Create SchoolActivityAccount
										invoked.StudentActivityDistrict	= StudentActivityDistrict
										invoked.StudentActivitySchool	= LocalStudentActivitySchool
										invoked.SchoolActivityAccount	= LocalStudentActivityAccount
										invoked.Active					= true
						else									
							LocalStudentActivityAccount	= StudentActivityAccount
							if (!SchoolActivityAccountRel exists)
								invoke Create SchoolActivityAccount
									invoked.StudentActivityDistrict	= StudentActivityDistrict
									invoked.StudentActivitySchool	= LocalStudentActivitySchool
									invoked.SchoolActivityAccount	= LocalStudentActivityAccount
									invoked.Active					= true
						

		UpdateGLAccountOnSchoolActivity is an Instance Action
			valid when (ActivityLevel.Detail)
			Parameters
				UpdateCompany			is Boolean		
				UpdateAccountingUnit	is Boolean		
				UpdateAccount			is Boolean
				ClearAllGLInformation	is Boolean
				ResetFromDefaults		is Boolean

			Parameter Rules
				UpdateCompany
					constraint (!ClearAllGLInformation)
						"ClearAllGLInformationCannotBeSelectedWithAnyOtherOption"
					constraint (!ResetFromDefaults)
						"ResetFromDefaultsCannotBeSelectedWithAnyOtherOption"
				UpdateAccountingUnit	
					constraint (!ClearAllGLInformation)
						"ClearAllGLInformationCannotBeSelectedWithAnyOtherOption"
					constraint (!ResetFromDefaults)
						"ResetFromDefaultsCannotBeSelectedWithAnyOtherOption"
				UpdateAccount
					constraint (!ClearAllGLInformation)
						"ClearAllGLInformationCannotBeSelectedWithAnyOtherOption"
					constraint (!ResetFromDefaults)
						"ResetFromDefaultsCannotBeSelectedWithAnyOtherOption"
				ClearAllGLInformation
					constraint (!ResetFromDefaults)
						"ResetFromDefaultsCannotBeSelectedWithAnyOtherOption"
				ResetFromDefaults
					constraint (!ClearAllGLInformation)
						"ClearAllGLInformationCannotBeSelectedWithAnyOtherOption"

			Action Rules
				if (ClearAllGLInformation
				or ResetFromDefaults)
					if (ClearAllGLInformation)
						initialize GLAccount
					invoke Update SchoolStudentActivityAccountRel
						initialize invoked.GLAccount
				else
					invoke Update SchoolStudentActivityAccountRel
						if (UpdateAccount)
							invoked.GLAccount		= GLAccount


		UpdateCurrentBalances is an Instance Action
			restricted
			Parameters
				PrmCurrentReceipts		is an InternationalAmount		
				PrmCurrentDisbursements	is an InternationalAmount		
				PrmCurrentTransfers		is an InternationalAmount		

			Action Rules
				CurrentReceipts			= (CurrentReceipts + PrmCurrentReceipts)
				CurrentDisbursements	= (CurrentDisbursements + PrmCurrentDisbursements)
				CurrentTransfers		= (CurrentTransfers + PrmCurrentTransfers)


		RebuildCurrentBalances is an Instance Action
			restricted
			Action Rules
				if (ActivityLevel.Detail)
					CurrentReceipts			= (sum StudentActivityReceiptDetailRel.DetailAmount + sum StudentActivityBankCreditsRel.BankTransDetailAmount)
					CurrentDisbursements	= (sum StudentActivityDisbursementRel.BankTransDetailAmount)
					CurrentTransfers 		= (sum StudentActivityTransferDetailRel.TransferDetailAmount + sum StudentActivityBankTransferRel.SignedTransactionDetailAmount)


		Create is a Create Action
			Field Rules
				CurrentReceipts
					cannot be entered
				
				CurrentDisbursements
					cannot be entered
					
				CurrentTransfers
					cannot be entered
					
		CreateActivityAccountDetail is an Instance Action
			valid when (ActivityLevel.Group)
			Parameters
				PrmStudentActivityAccount	is like StudentActivityAccount
				PrmActivityLevel			is Numeric 2
					States
						Detail			value is 0
						Group			value is 1
				PrmDescription				is a Description
				PrmFeeAmount				is an InternationalAmount
				PrmGLAccount				is a FinanceCodeBlockFull
				PrmActive					is an Active
				
			Parameter Rules
				PrmStudentActivityAccount
					required
				PrmActivityLevel
					initial value is 0
				PrmActive
					initial value is true
			Action Rules
				invoke Create StudentActivityAccount
					fill in fields from this instance
						except invoked.StudentActivityAccount
						except invoked.ActivityLevel
						except invoked.Description
						except invoked.FeeAmount
						except invoked.GLAccount
						except invoked.Active
						except invoked.ParentStudentActivityAccount
					invoked.StudentActivityAccount			= PrmStudentActivityAccount
					invoked.ActivityLevel					= PrmActivityLevel
					invoked.Description						= PrmDescription
					invoked.FeeAmount						= PrmFeeAmount
					invoked.GLAccount						= PrmGLAccount
					invoked.Active							= PrmActive
					invoked.ParentStudentActivityAccount	= StudentActivityAccount
		
		Update is an Update Action
			Action Rules




			Exit Rules
				if (Description changed)
					invoke UpdateDescription SchoolStudentActivityAccountRel
						invoked.OldDescription	= old Description
						invoked.NewDescription	= Description	
			
				if (Active changed)
					invoke Update SchoolStudentActivityAccountRel
						invoked.Active	= Active

				if (ParentStudentActivityAccount changed)
					invoke Update SchoolStudentActivityAccountRel
						invoked.ParentSchoolActivityAccount	= ParentStudentActivityAccount

					invoke Update StudentActivityBalanceRel
						invoked.ParentStudentActivityAccount	= ParentStudentActivityAccount
					
					invoke Update StudentActivityBalanceDetailRel
						invoked.ParentStudentActivityAccount	= ParentStudentActivityAccount
					
					invoke Update SchoolActivityAccountBalanceDetailRel
						invoked.ParentStudentActivityAccount	= ParentStudentActivityAccount

				if (ActivityLevel.Group
				and StudentActivityType changed)
					invoke Update StudentActivityAccount descendants
						invoked.StudentActivityType	= StudentActivityType
												
			
		Delete is a Delete Action
