BankStatementReconciliation is a BusinessClass
	owned by cashmgmt
	prefix is CBSR

	Ontology
		symbolic key is BankStatementReconciliation

	Patterns
		implements Archivable
		
	Persistent Fields								
		LineType						is Numeric 1
			States
				Summary			value is 0
				Statement		value is 1
				CashLedger		value is 2
				OtherSystem		value is 3

				Forecast		value is 5
		BankStatement
			delete ignored
		BankStatementLine
			context of BankStatement
			delete ignored
		BankStatementLineDetail
			delete ignored
		BankStatementInterfaceHeader
			delete ignored
		NonCashLedgerTransaction
			delete ignored
		RelatedCashForecastDetail		is BusinessObjectReference
		CashCode
		BankTransactionCode	
		CashLedgerSourceRecord
		CashLedgerTransaction
			delete ignored
		CashLedgerTransactionDetail
		CashTransactionCategory
		BankReconciliationTemplate
		BankReconciliationMatchRule
		TransactionType					is a BankTransactionTypeCode
		TransactionDate					is Date
		TransactionAmount				is an InternationalAmount
		TransactionNumber				is Alpha up to 35 		
		CashLedgerTransactionIdentifier					  		
		TransactionDataOne				is a TransactionData	
		TransactionDataTwo				is a TransactionData	
		TransactionDataThree			is a TransactionData	
		TransactionDataFour				is a TransactionData	
		DebitCreditIndicator
		LineMatchField					is AlphaUpper 200
		SignedAmount					is an InternationalAmount
		ReconciledAmount				is an InternationalAmount
			disable Auditing
		SecondaryReconciledAmount		is an InternationalAmount
			disable Auditing
		Function						is Numeric 2
			States
				Void			value is 1
				Reconcile		value is 9
		Description						is Alpha up to 1000
		PostingYear						is Year
		PostingPeriod					is Numeric 2
		SystemCode						is a GeneralLedgerSystemCode

		Reference						






		SummaryRecord					is Boolean
    	SelectedForReconciliation		is Boolean
    	Comment							is Text
		LineStatus						is Numeric 1
			default label is "Status"
			States
				Unreconciled	value is 0
				Reconciled		value is 1
				Pending			value is 2
		PostStatementLine				is Boolean
		SummaryIncludesReconDiff		is Boolean
		SecondaryReconTransaction		is Boolean
		PendingStatementLine			is Boolean
		CreatedFromBankStatement		is like BankStatement
		CreatedFromBankStatementLine	is like BankStatementLine
		CreatedFromBankStatementLineDetail	is like BankStatementLineDetail
		Type                            is a CashLedgerTranRecordType
		NumberOfMatchedStatementLines	is Numeric 4
			disable Auditing
		NumberOfMatchedSystemLines		is Numeric 4
			disable Auditing
		RelatedReference				is a BankStatementLineReference 
		BankReference					is a BankStatementLineReference
		TextReference					is a BankStatementLineReference	
		MatchedDate						is TimeStamp
		MatchedActor					is an Actor
			default label is "MatchedBy"
		MatchedManually					is Boolean
		ReconcileByAmount				is Boolean
		ParsedData1						is a ParsedDataField
		ParsedData2						is a ParsedDataField
		ParsedData3						is a ParsedDataField
		ParsedData4						is a ParsedDataField
		ParsedData5						is a ParsedDataField
		ParsedData6						is a ParsedDataField
		ParsedData7						is a ParsedDataField
		ParsedData8						is a ParsedDataField
		ParsedData9						is a ParsedDataField
		ParsedData10					is a ParsedDataField
		
	Local Fields
		LocalFieldCount					is Numeric 3
		LocalCounter					is Numeric 3
		LocalAnalysisValue				is AlphaUpper 103
		LocalValueCount					is Numeric 3
		TrimmingZerosComplete			is Boolean
		TrimmedLeadingZeroField			is AlphaUpper 200
		RemovedAlphaCharactersField		is AlphaUpper 200
		LocalMatchRuleDateRange			is a DateRange
		BankStatementBeingReconciled	is a BankStatement
		TotalsAccumulated				is Boolean
		LocalTransactionDebitAmount		is like InternationalAmount
		LocalTransactionCreditAmount	is like InternationalAmount
		LocalStatementDebitAmount		is like InternationalAmount
		LocalStatementCreditAmount		is like InternationalAmount
		LocalSecondaryTransDebitAmount	is like InternationalAmount
		LocalSecondaryTransCreditAmount	is like InternationalAmount
		LocalFromTransactionDate		is Date
		LocalToTransactionDate			is Date
		LocalNegativeAdjustment			is Boolean		
		TempLineMatchField				is AlphaUpper 200
		LocalMatchRule					is a BankReconciliationMatchRule
		
	Transient Fields
		TransientFromCurrency			is a FromCurrency
			derive value from CashManagementAccount.Currency

		TemplateMatchField				is Alpha 200	
			Text Variables
				TransactionNumber				value is TransactionNumber
				TransactionDate					value is TransactionDate
				TransactionCode					value is BankTransactionCode
				TransactionAmount				value is TransactionAmount

				CashTransactionCategory			value is CashTransactionCategory
				CashLedgerTransactionIdentifier	value is CashLedgerTransactionIdentifier
				TransactionDataOne				value is TransactionDataOne
				TransactionDataTwo				value is TransactionDataTwo
				TransactionDataThree			value is TransactionDataThree
				TransactionDataFour				value is TransactionDataFour
				SystemCode						value is SystemCode
				Reference						value is Reference
				ParsedData1						value is ParsedData1
				ParsedData2						value is ParsedData2
				ParsedData3						value is ParsedData3
				ParsedData4						value is ParsedData4
				ParsedData5						value is ParsedData5
				ParsedData6						value is ParsedData6
				ParsedData7						value is ParsedData7
				ParsedData8						value is ParsedData8
				ParsedData9						value is ParsedData9
				ParsedData10					value is ParsedData10


	Rule Blocks
		CheckForNegativeRate		
			if (last RelatedCashTransactionDetailRel.DebitCreditIndicator.Credit)
				if  (ReconciledAmount < 0
				and (ReconciledAmount *-1) > last RelatedCashTransactionDetailRel.TransactionAmount)
					LocalNegativeAdjustment = true
			else
				if (ReconciledAmount > 0
				and ReconciledAmount > last RelatedCashTransactionDetailRel.TransactionAmount)
					LocalNegativeAdjustment = true

		AbsoluteValueOfReconciledAmount
			if (ReconciledAmount < 0)
				LocalReconciledAmount	= (ReconciledAmount * -1)
			else
				LocalReconciledAmount	= ReconciledAmount
				
			if (NetTransactionAmount	< 0)
				LocalActualAmount	= (NetTransactionAmount * -1)
			else
				LocalActualAmount	= NetTransactionAmount

		ReconciliationMatchRules
			if (!SummaryRecord
			and !PostStatementLine
			and !LineType.Forecast)
				if (CashManagementAccount.ReconciliationMethod.UseReconciliationMatchRules)
					if (LineType.Statement)
						if (BankStatementLineDetail.CreatedCashLedgerTransaction entered)
							LineMatchField	= BankStatementLineDetail.CreatedCashLedgerTransactionLineMatchField
						else
						if (BankStatementLine.CreatedCashLedgerTransaction entered)
							LineMatchField	= BankStatementLine.CreatedCashLedgerTransactionLineMatchField
						else
							for each BankReconciliationMatchRuleGroupDetailRel
								if (each.BankReconciliationMatchRule.UsesTransactionNumberVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										TransactionNumber = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										TransactionNumber = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										TransactionNumber = RelatedReference
								else
								if (each.BankReconciliationMatchRule.UsesCashLedgerTransactionIdentifierVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										CashLedgerTransactionIdentifier = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										CashLedgerTransactionIdentifier = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										CashLedgerTransactionIdentifier = RelatedReference
								else
								if (each.BankReconciliationMatchRule.UsesTransactionDataOneVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										TransactionDataOne = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										TransactionDataOne = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										TransactionDataOne = RelatedReference
								else
								if (each.BankReconciliationMatchRule.UsesTransactionDataTwoVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										TransactionDataTwo = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										TransactionDataTwo = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										TransactionDataTwo = RelatedReference
								else
								if (each.BankReconciliationMatchRule.UsesTransactionDataThreeVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										TransactionDataThree = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										TransactionDataThree = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										TransactionDataThree = RelatedReference
								else
								if (each.BankReconciliationMatchRule.UsesTransactionDataFourVariable)
									if (each.BankReconciliationMatchRule.TransactionNumberSource.TextReference)
										TransactionDataFour = TextReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.BankReference)
										TransactionDataFour = BankReference
									else
									if (each.BankReconciliationMatchRule.TransactionNumberSource.RelatedReference)
										TransactionDataFour = RelatedReference

								if (BankStatementReconciliation within each.BankReconciliationMatchRule.StatementRule)	
									if (!DisableApplyingModificationOptionsToVariablesOnly)		
										LocalMatchRule = each.BankReconciliationMatchRule
										if (!LocalMatchRule.LineMatchFieldArray entered)
											invoke Update LocalMatchRule
										for each LocalMatchRule.LineMatchFieldArray.LineMatchFieldSegment
											if (each.Segment entered)
												if (each.Variable = false)
													LineMatchField += each.Segment
													BankReconciliationMatchRule = LocalMatchRule	
												else
													TemplateMatchField = each.Segment
													TempLineMatchField = TemplateMatchField text
													TempLineMatchField -= " "


													if (LocalMatchRule.RemoveCharacterString)
														TempLineMatchField -= LocalMatchRule.DerivedRemoveString
														
													if (LocalMatchRule.RemoveCharactersBefore)
														TempLineMatchField -= LocalMatchRule.DerivedRemoveBefore
													
													if (LocalMatchRule.RemoveCharactersAfter)
														TempLineMatchField -= LocalMatchRule.DerivedRemoveAfter

													if (LocalMatchRule.RemoveAlphaCharacters)
														initialize RemovedAlphaCharactersField
														LocalCounter = 1 	
														while (LocalCounter <= 200)
															if (TempLineMatchField[LocalCounter] entered)
																if (TempLineMatchField[LocalCounter] is numeric)
																	RemovedAlphaCharactersField += TempLineMatchField[LocalCounter]
																	LocalCounter += 1
																else
																	LocalCounter += 1
															else
																end while
														TempLineMatchField = RemovedAlphaCharactersField
														
													if (LocalMatchRule.RemoveLeadingZeros)
														initialize TrimmedLeadingZeroField
														LocalFieldCount			= 1
														TrimmingZerosComplete	= false
														while (LocalFieldCount <= 200)
															if (TempLineMatchField[LocalFieldCount] entered)
																if (TrimmingZerosComplete)
																	TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																else
																	if (TempLineMatchField[LocalFieldCount] != 0)
																		TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																		TrimmingZerosComplete	= true
																LocalFieldCount	+= 1
															else
																end while
														TempLineMatchField = TrimmedLeadingZeroField

													LineMatchField += TempLineMatchField
													BankReconciliationMatchRule = LocalMatchRule
													LineMatchField -= " "
											else
												end for each
									else
										TemplateMatchField = each.BankReconciliationMatchRule.LineMatchField
										LineMatchField = TemplateMatchField text
										BankReconciliationMatchRule = each.BankReconciliationMatchRule
										LineMatchField -= " "
										
										if (each.BankReconciliationMatchRule.RemoveCharacterString)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedRemoveString
											
										if (each.BankReconciliationMatchRule.RemoveCharactersBefore)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedRemoveBefore
										
										if (each.BankReconciliationMatchRule.RemoveCharactersAfter)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedRemoveAfter
											
										if (each.BankReconciliationMatchRule.RemoveAlphaCharacters)
											initialize RemovedAlphaCharactersField
											LocalCounter = 1 	
											while (LocalCounter <= 200)
												if (LineMatchField[LocalCounter] entered)
													if (LineMatchField[LocalCounter] is numeric)
														RemovedAlphaCharactersField += LineMatchField[LocalCounter]
														LocalCounter += 1
													else
														LocalCounter += 1
												else
													end while
											LineMatchField = RemovedAlphaCharactersField
											
										if (each.BankReconciliationMatchRule.RemoveLeadingZeros)
											initialize TrimmedLeadingZeroField
											LocalFieldCount			= 1
											TrimmingZerosComplete	= false
											while (LocalFieldCount <= 200)
												if (LineMatchField[LocalFieldCount] entered)
													if (TrimmingZerosComplete)
														TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
													else
														if (LineMatchField[LocalFieldCount] != 0)
															TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
															TrimmingZerosComplete	= true
													LocalFieldCount	+= 1
												else
													end while
											LineMatchField = TrimmedLeadingZeroField
										
									end for each
									
							if (LineMatchField not entered
                        	and CashTransactionCategory.AlwaysReconcile)
                            	LineMatchField = CashTransactionCategory
					else
						if (CreatedFromBankStatementLine entered)
							LineMatchField = (BankTransactionCode + TransactionNumber)
						else
							for each BankReconciliationMatchRuleGroupDetailRel
								if (BankStatementReconciliation within each.BankReconciliationMatchRule.SystemRule)
									if (!DisableApplyingModificationOptionsToVariablesOnly)		
										LocalMatchRule = each.BankReconciliationMatchRule
										if (!LocalMatchRule.SystemLineMatchFieldArray entered)
											invoke Update LocalMatchRule
										for each LocalMatchRule.SystemLineMatchFieldArray.LineMatchFieldSegment
											if (each.Segment entered)
												if (each.Variable = false)
													LineMatchField += each.Segment
													BankReconciliationMatchRule = LocalMatchRule	
												else
													TemplateMatchField = each.Segment
													TempLineMatchField = TemplateMatchField text
													TempLineMatchField -= " "


													if (LocalMatchRule.SystemRemoveCharacterString)
														TempLineMatchField -= LocalMatchRule.DerivedSystemRemoveString
														
													if (LocalMatchRule.SystemRemoveCharactersBefore)
														TempLineMatchField -= LocalMatchRule.DerivedSystemRemoveBefore
													
													if (LocalMatchRule.SystemRemoveCharactersAfter)
														TempLineMatchField -= LocalMatchRule.DerivedSystemRemoveAfter
														
													if (LocalMatchRule.SystemRemoveAlphaCharacters)
														initialize RemovedAlphaCharactersField
														LocalCounter = 1 	
														while (LocalCounter <= 200)
															if (TempLineMatchField[LocalCounter] entered)
																if (TempLineMatchField[LocalCounter] is numeric)
																	RemovedAlphaCharactersField += TempLineMatchField[LocalCounter]
																	LocalCounter += 1
																else
																	LocalCounter += 1
															else
																end while
														TempLineMatchField = RemovedAlphaCharactersField
														
													if (LocalMatchRule.SystemRemoveLeadingZeros)
														initialize TrimmedLeadingZeroField
														LocalFieldCount			= 1
														TrimmingZerosComplete	= false
														while (LocalFieldCount <= 200)
															if (TempLineMatchField[LocalFieldCount] entered)
																if (TrimmingZerosComplete)
																	TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																else
																	if (TempLineMatchField[LocalFieldCount] != 0)
																		TrimmedLeadingZeroField	+= TempLineMatchField[LocalFieldCount]
																		TrimmingZerosComplete	= true
																LocalFieldCount	+= 1
															else
																end while
														TempLineMatchField = TrimmedLeadingZeroField

													LineMatchField += TempLineMatchField
													BankReconciliationMatchRule = LocalMatchRule
													LineMatchField -= " "
											else
												end for each
									else
										TemplateMatchField = each.BankReconciliationMatchRule.SystemLineMatchField
										LineMatchField = TemplateMatchField text
										BankReconciliationMatchRule = each.BankReconciliationMatchRule
										LineMatchField -= " "
										
										if (each.BankReconciliationMatchRule.SystemRemoveCharacterString)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedSystemRemoveString
											
										if (each.BankReconciliationMatchRule.SystemRemoveCharactersBefore)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedSystemRemoveBefore
										
										if (each.BankReconciliationMatchRule.SystemRemoveCharactersAfter)
											LineMatchField -= each.BankReconciliationMatchRule.DerivedSystemRemoveAfter
											
										if (each.BankReconciliationMatchRule.SystemRemoveAlphaCharacters)
											initialize RemovedAlphaCharactersField
											LocalCounter = 1 	
											while (LocalCounter <= 200)
												if (LineMatchField[LocalCounter] entered)
													if (LineMatchField[LocalCounter] is numeric)
														RemovedAlphaCharactersField += LineMatchField[LocalCounter]
														LocalCounter += 1
													else
														LocalCounter += 1
												else
													end while
											LineMatchField = RemovedAlphaCharactersField
											
										if (each.BankReconciliationMatchRule.SystemRemoveLeadingZeros)
											initialize TrimmedLeadingZeroField
											LocalFieldCount			= 1
											TrimmingZerosComplete	= false
											while (LocalFieldCount <= 200)
												if (LineMatchField[LocalFieldCount] entered)
													if (TrimmingZerosComplete)
														TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
													else
														if (LineMatchField[LocalFieldCount] != 0)
															TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
															TrimmingZerosComplete	= true
													LocalFieldCount	+= 1
												else
													end while
											LineMatchField = TrimmedLeadingZeroField
										
									end for each
								
					ReconcileByAmount = BankReconciliationMatchRule.ReconcileByAmount

		AccumulateChildrenTotals
			if(!TotalsAccumulated)
				for each BankStatementReconciliation children
					LocalTransactionDebitAmount		+= each.TransactionDebitAmount
					LocalTransactionCreditAmount	+= each.TransactionCreditAmount
					LocalStatementDebitAmount		+= each.StatementLineDebitAmount
					LocalStatementCreditAmount		+= each.StatementLineCreditAmount
					LocalSecondaryTransDebitAmount	+= each.SecondaryReconTransDebitAmount
					LocalSecondaryTransCreditAmount	+= each.SecondaryReconTransDebitAmount
				TotalsAccumulated	= true
											
		LineMatchFieldDefaulting
			if (!SummaryRecord)
				if (LineType.Forecast
				or  PostStatementLine
				and LineMatchField !entered)
					LineMatchField	= CashTransactionCategory
				else
				if (CreatedFromBankStatementLine entered)
					LineMatchField	= (BankTransactionCode + TransactionNumber)
				else
				if (BankStatementLineDetail.CreatedCashLedgerTransaction entered)
					LineMatchField	= BankStatementLineDetail.CreatedCashLedgerTransactionLineMatchField
				else
				if (BankStatementLine.CreatedCashLedgerTransaction entered)
					LineMatchField	= BankStatementLine.CreatedCashLedgerTransactionLineMatchField
				else
				if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
					TemplateMatchField	= BankReconciliationTemplate.LineMatchField
					if (LineMatchField !entered)
						LineMatchField = TemplateMatchField text
					
					LineMatchField -= " "
					if (BankReconciliationTemplate.RemoveAlphaCharacters)
						initialize RemovedAlphaCharactersField
						LocalCounter = 1 	
						while (LocalCounter <= 200)
							if (LineMatchField[LocalCounter] entered)
								if (LineMatchField[LocalCounter] is numeric)
									RemovedAlphaCharactersField += LineMatchField[LocalCounter]
									LocalCounter += 1
								else
									LocalCounter += 1
							else
								end while
						LineMatchField = RemovedAlphaCharactersField
					
					if (BankReconciliationTemplate.RemoveLeadingZeros)
						initialize TrimmedLeadingZeroField
						LocalFieldCount			= 1
						TrimmingZerosComplete	= false
						while (LocalFieldCount <= 200)
							if (LineMatchField[LocalFieldCount] entered)
								if (TrimmingZerosComplete)
									TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
								else
									if (LineMatchField[LocalFieldCount] != 0)
										TrimmedLeadingZeroField	+= LineMatchField[LocalFieldCount]
										TrimmingZerosComplete	= true
								LocalFieldCount	+= 1
							else
								end while
						LineMatchField = TrimmedLeadingZeroField

	Derived Fields
		TransactionDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalTransactionDebitAmount
			if (!BankStatementLine entered
			and !SecondaryReconTransaction
			and DebitCreditIndicator.Debit)
				if (Function.Void)
					return (ReconciledAmount * -1)
				return ReconciledAmount
		
		TransactionCreditAmount is a DerivedField		
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalTransactionCreditAmount
			if (!BankStatementLine entered
			and !SecondaryReconTransaction
			and DebitCreditIndicator.Credit)
				if (Function.Void)
					return (ReconciledAmount * -1)
				return ReconciledAmount

		StatementLineDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalStatementDebitAmount
			if (BankStatementLine entered
			and DebitCreditIndicator.Debit)
				return ReconciledAmount
		
		StatementLineCreditAmount is a DerivedField		
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalStatementCreditAmount
			if (BankStatementLine entered
			and DebitCreditIndicator.Credit)
				return ReconciledAmount

		SecondaryReconTransDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalSecondaryTransDebitAmount
			if (!BankStatementLine entered
			and SecondaryReconTransaction
			and DebitCreditIndicator.Debit)
				if (Function.Void)
					return (ReconciledAmount * -1)
				return ReconciledAmount
		
		SecondaryReconTransCreditAmount is a DerivedField		
			type is like InternationalAmount
			if (SummaryRecord)

				include AccumulateChildrenTotals
				return LocalSecondaryTransCreditAmount
			if (!BankStatementLine entered
			and SecondaryReconTransaction
			and DebitCreditIndicator.Credit)
				if (Function.Void)
					return (ReconciledAmount * -1)
				return ReconciledAmount

		NetReconciledDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)
				return (StatementLineDebitAmount - TransactionDebitAmount)

		NetReconciledCreditAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)
				return (StatementLineCreditAmount - TransactionCreditAmount)

		NetTransactionAmount is a DerivedField
			type is like InternationalAmount
			return (TransactionCreditAmount - TransactionDebitAmount)

		NetSecondaryReconciledDebitAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)
				return (StatementLineDebitAmount - SecondaryReconTransDebitAmount)

		NetSecondaryReconciledCreditAmount is a DerivedField
			type is like InternationalAmount
			if (SummaryRecord)
				return (StatementLineCreditAmount - SecondaryReconTransCreditAmount)

		NetSecondaryTransactionAmount is a DerivedField
			type is like InternationalAmount
			return (SecondaryReconTransCreditAmount - SecondaryReconTransDebitAmount)

		NetBankLineAmount is a DerivedField
			type is like InternationalAmount
			return (StatementLineCreditAmount - StatementLineDebitAmount)

		ReconciledDifference is a DerivedField
			type is like InternationalAmount
			if (Function.Void)
				if (DebitCreditIndicator.Credit)
					return (ReconciledAmount + SignedAmount)
				else
					return (ReconciledAmount - SignedAmount)
			else
				if (DebitCreditIndicator.Credit)
					return (ReconciledAmount - SignedAmount)
				else
					return (ReconciledAmount + SignedAmount)

		MatchedReconciledDifference is a DerivedField			
			type is like InternationalAmount
			if (SummaryRecord)
				return sum RelatedCashLedgerTransactionsRel.ReconciledDifference

		NetIssuedTransactionAmount is a DerivedField			
			type is like InternationalAmount
			if (SummaryRecord
			and SummaryIncludesReconDiff)
				return sum RelatedCashLedgerTransactionsRel.SignedAmount

		SignedStatementAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (LineType.Statement)
				return SignedAmount


		CashLedgerTransactionMessage is a LabelField
			restricted
			"CashLedger"
			


			
		OtherSystemTransactionMessage is a LabelField
			restricted
			"OtherSystem"
			
		ForecastDetailMessage	is a LabelField
			restricted
			"Forecast"
			
		DerivedTransactionTypeLabel	is a DerivedField
			type is Alpha 15
			if (CashManagementAccount.OnlyReconcileToCashLedger)
				return CashLedgerTransactionMessage


			if (CashManagementAccount.OnlyReconcileToOtherSystem)
				return OtherSystemTransactionMessage
			if (CashManagementAccount.OnlyReconcileToForecast)
				return ForecastDetailMessage
			
		DerivedCommentLinkName is a DerivedField
			type is Alpha 12
			restricted
			if (Comment entered)
				return ViewCommentMessage
			else
				return AddCommentMessage

		AddCommentMessage is a LabelField
			restricted
			"AddComment"		

		ViewCommentMessage is a LabelField
			restricted
			"ViewComment"

		CurrentDate is a DerivedField
			type is Alpha 10
			restricted
			return current corporate date

		ManuallyReconciledMatchField is a LabelField
			restricted
			"<CurrentDate>-MatchNumber:<BankStatementReconciliation>"

		MatchedManuallyMessage is a LabelField
			restricted
			"ManuallyMatched"

		AutoMatchedMessage is a LabelField
			restricted
			"AutoMatched"

		DerivedMatchedMessage is a DerivedField
			type is Alpha 20
			if (ReconMatchNumber entered)
				if (MatchedManually)
					return MatchedManuallyMessage
				else
					return AutoMatchedMessage

		SelectedForReconciliationByAccount is a DerivedField
			type is Boolean
        	restricted
			if (ReconMatchNumber								entered
			and CashManagementAccount.CurrentReconMatchNumber 	= ReconMatchNumber)
				return true
			return false

		DisableApplyingModificationOptionsToVariablesOnly is a DerivedField		
			type is Boolean
			restricted
			return config.DisableApplyingModificationOptionsToVariablesOnly
			
	Context Fields
		ReconSummaryRecord
		ReconciliationIdentifier
		ContextBankStatement
		TransactionDateRange		is a DateRange
		SearchAmountRange

	Relations
		UnreconciledMatchedTransactionsRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByLineMatchField
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.SummaryRecord			= false
				related.LineMatchField			= LineMatchField
			Instance Selection
				where (!related.LineStatus.Reconciled
				and     related.ReconMatchNumber entered
				and   ((related.ReconMatchNumber.BankStatement	entered
				and     BankStatement							entered
				and     related.ReconMatchNumber.BankStatement	= BankStatement)
				or	    related.ReconMatchNumber.BankStatement	!entered
				or      BankStatement							!entered))

		LineMatchFieldRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByLineMatchField
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.SummaryRecord			= false
				related.LineMatchField			= LineMatchField
			Instance Selection
				where (!related.LineStatus.Reconciled
				and     related.ReconMatchNumber	!entered
				and   ((related.BankStatement		entered
				and     related.BankStatement		= BankStatement)
				or      related.BankStatement		!entered))

		RelatedReconciledTransactionsRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.ReconMatchNumber			= ReconMatchNumber
			Instance Selection
				where (related.ReconMatchNumber entered
				and    related.BankStatementReconciliation != BankStatementReconciliation)

		RelatedCashTransactionDetailRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.ReconMatchNumber			= BankStatementReconciliation
			Instance Selection
				where (!related.LineType.Statement)

		RelatedCashLedgerTransactionsRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.ReconMatchNumber			= BankStatementReconciliation
			Instance Selection
				where (related.LineType.CashLedger)

		ContextBankStatementRel
			one-to-one relation to BankStatement
			Field Mapping uses symbolic key
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.BankStatement				= ContextBankStatement
				
		MultipleStatementReconciliationRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.ReconMatchNumber			= BankStatementReconciliation
			Instance Selection
				where (related.LineType.Statement
				and    related.BankStatement != BankStatement)

		CreatedFromBankStatementLineRel
			if(CreatedFromBankStatementLineDetail entered)
				CreatedFromBankStatementLineDetailRel
			else
				CreatedFromBankStatementLine2Rel

		CreatedFromBankStatementLine2Rel
			one-to-one relation to BankStatementReconciliation
			Field Mapping uses ByBankStatementLine
				related.CashManagementGroup				= CashManagementGroup
				related.CashManagementAccount			= CashManagementAccount
				related.BankStatement					= CreatedFromBankStatement
				related.BankStatementLine				= CreatedFromBankStatementLine
				related.BankStatementLineDetail			= 0 
						
		CreatedFromBankStatementLineDetailRel
			one-to-one relation to BankStatementReconciliation
			Field Mapping uses ByBankStatementLine
				related.CashManagementGroup				= CashManagementGroup
				related.CashManagementAccount			= CashManagementAccount
				related.BankStatement					= CreatedFromBankStatement
				related.BankStatementLine				= CreatedFromBankStatementLine
				related.BankStatementLineDetail			= CreatedFromBankStatementLineDetail

		BankStatementMatchesDescendantRel
			one-to-many relation to BankStatementReconciliation 
			Field Mapping uses ParentKey
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.ReconMatchNumber		= BankStatementReconciliation
			Instance Selection
				where (related.BankStatement = ContextBankStatementRel.BankStatement)

		BankReconciliationMatchRuleGroupDetailRel
			one-to-many relation to BankReconciliationMatchRuleGroupDetail
			Field Mapping uses ByPriority
				related.CashManagementGroup				 = CashManagementGroup
				related.BankReconciliationMatchRuleGroup = CashManagementAccount.BankReconciliationMatchRuleGroup

		OpenReconciliationDetailsByAccountRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ParentKey
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashManagementAccount
				related.ReconMatchNumber		= blank
			Instance Selection
				where (!related.SummaryRecord)

		RelatedStatementLinesByDateRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByParentKeyByDate
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.ReconMatchNumber			= BankStatementReconciliation
			Instance Selection
				where (related.LineType.Statement)

        CashLedgerReconciliationAdjustmentRel
            one-to-one relation to CashLedgerReconciliationAdjustment
            Field Mapping uses symbolic key
            	related.CashManagementGroup 			   = CashManagementGroup	
                related.BankTransactionCode                = BankTransactionCode
                related.CashLedgerSourceRecord			   = CashLedgerSourceRecord
                related.CashLedgerReconciliationAdjustment = CashLedgerTransaction

		UnreconciledMatchedTransactionRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses BySummaryRecordBankStatement
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.SummaryRecord				= true
				related.BankStatement				= BankStatement
			Instance Selection
				where (related.LineStatus.Unreconciled)

		ReconcileByAmountByTransactionRel
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByReconcileByAmount
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.LineStatus					= 0 
				related.ReconcileByAmount			= true
				related.BankReconciliationMatchRule	= BankReconciliationMatchRule
			Instance Selection
				where ((related.LineType.CashLedger
				or      related.LineType.OtherSystem)
				and     related.ReconMatchNumber	!entered
				and     related.TransactionDate		>= LocalFromTransactionDate
				and     related.TransactionDate		<= LocalToTransactionDate
				and    !related.SummaryRecord)

		ReconcileByAmountByTransaction2Rel		
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByReconcileByAmount2
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.LineStatus					= 0 
				related.ReconcileByAmount			= true
				related.BankReconciliationMatchRule	= BankReconciliationMatchRule
			Instance Selection
				where ((related.LineType.CashLedger
				or      related.LineType.OtherSystem)
				and     related.ReconMatchNumber	!entered
				and     related.TransactionDate		>= LocalFromTransactionDate
				and     related.TransactionDate		<= LocalToTransactionDate
				and    !related.SummaryRecord)

		ReconcileByAmountByStatementRel		
			one-to-many relation to BankStatementReconciliation
			Field Mapping uses ByReconcileByAmount
				related.CashManagementGroup			= CashManagementGroup
				related.CashManagementAccount		= CashManagementAccount
				related.LineStatus					= 0 
				related.ReconcileByAmount			= true
				related.BankReconciliationMatchRule	= BankReconciliationMatchRule
			Instance Selection
				where  (related.LineType.Statement
				and     related.BankStatement		= BankStatement
				and     related.ReconMatchNumber	!entered
				and    !related.CashTransactionCategory.UncategorizedCategory
				and    !related.SummaryRecord)

		CashCodeRel
            one-to-many relation to CashCode
			Field Mapping uses Set3
				related.CashManagementGroup			= CashManagementGroup
                related.FinancialInstitution		= CashManagementAccount.FinancialInstitution
                related.FinancialInstitutionBranch	= CashManagementAccount.FinancialInstitutionBranch
				related.BankAccountNumber			= CashManagementAccount

	Sets
		ByTransactionNumber
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SelectedForReconciliation	descending
				TransactionNumber
				DebitCreditIndicator
				BankStatementReconciliation

		ByTransactionDate
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SelectedForReconciliation	descending
				TransactionDate
				BankStatementReconciliation

		ByTransactionAmount
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SelectedForReconciliation	descending
				TransactionAmount
				DebitCreditIndicator
				BankStatementReconciliation

 		ByLineMatchField
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SummaryRecord	descending
				LineMatchField
				DebitCreditIndicator
				BankStatementReconciliation
 







 		ByRelatedCashForecastDetail
 			Sort Order
 				CashManagementGroup
 				CashManagementAccount
 				RelatedCashForecastDetail
 				BankStatementReconciliation

		ByLineStatus
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus
				PostStatementLine
				LineMatchField
				LineType
				Function
				BankStatementReconciliation

		ByBankStatement
			Sort Order
				CashManagementGroup
				CashManagementAccount
				BankStatement
				BankStatementReconciliation

		BySummaryRecordBankStatement
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SummaryRecord
				BankStatement
				LineMatchField
				BankStatementReconciliation

		ByAccountSummaryRecord
			Sort Order
				CashManagementGroup
				CashManagementAccount
				SummaryRecord
				LineStatus
				ReconMatchNumber
				BankStatementReconciliation

 		ByPendingStatementLine
			Sort Order
				CashManagementGroup
				CashManagementAccount
				PendingStatementLine
				BankStatement
				BankStatementReconciliation

		ParentKey
			Sort Order
				CashManagementGroup
				CashManagementAccount
				ReconMatchNumber
				BankStatementReconciliation
				
		ByBankStatementLine
			Instance Selection
				where (LineType.Statement)
			Sort Order
				CashManagementGroup
				CashManagementAccount
				BankStatement
				BankStatementLine
				BankStatementLineDetail

		ByReconcileByAmount
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus
				ReconcileByAmount
				BankReconciliationMatchRule
				TransactionAmount				descending
				BankStatementReconciliation

		ByReconcileByAmount2		
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus
				ReconcileByAmount
				BankReconciliationMatchRule
				TransactionAmount
				BankStatementReconciliation

		ByParentKeyByDate
			Sort Order
				CashManagementGroup
				CashManagementAccount
				ReconMatchNumber
				TransactionDate
				BankStatementReconciliation

		ByDefaultSearchOrder
			Sort Order
				CashManagementGroup
				CashManagementAccount
				TransactionDate
				BankStatement
				CashTransactionCategory
				DebitCreditIndicator
				LineStatus
				TransactionAmount
				BankStatementReconciliation

		ByBankReconciliationMatchRule
			Sort Order
				CashManagementGroup
				BankReconciliationMatchRule
				ReconcileByAmount
				LineStatus
				ReconMatchNumber
				CashManagementAccount
				BankStatementReconciliation

		ByCashLedgerTransactionDetail
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineType
				CashLedgerTransaction
				CashLedgerTransactionDetail
				BankStatementReconciliation


    Conditions
		MatchedWithBalance
			restricted
			when (SummaryRecord
			and   ReconciledAmount entered
			and   RelatedCashTransactionDetailRel exists)
		
		CanBeViewed
			restricted
			when (SummaryRecord
			and   !SelectedForReconciliation)

		HelperListTransactions
			restricted
			when (!SelectedForReconciliation
			and  (BankStatement entered
			or   (BankStatement !entered
			and   LineStatus.Pending
			or	  BankStatementMatchesDescendantRel exists)))
			
		CanViewPendingTransactions
			restricted
			when (LineStatus.Pending
			or	  BankStatementMatchesDescendantRel exists)
			
		NonCashLedgerTransactionRecord
			restricted
			when (NonCashLedgerTransaction entered)
			
		CashForecastDetailRecord
			restricted
			when (RelatedCashForecastDetail entered)
		
		CashLedgerRecord
			restricted
			when (CashLedgerTransaction entered)



		
		SummaryRecordCanBeReconciled
			restricted
			when (SummaryRecord
			and   !LineStatus.Reconciled
			and   !BankStatement.StatementStatus.Closed)

		SummaryRecordCanBeUnreconciled
			restricted
			when (SummaryRecord
			and   LineStatus.Reconciled
			and   !BankStatement.StatementStatus.Closed)

		CanMatchAdditionalTransactions
			restricted
			when (!BankStatement.StatementStatus.Closed
			and   ReconciliationIdentifier 	entered
			and   ReconMatchNumber			!entered)
			
		CanBeSelectedToReconcile
		    restricted
			when (!SelectedForReconciliation
			and   ReconMatchNumber			!entered)
			
		CanBeMatchedToGroup
			restricted
			when (!BankStatement.StatementStatus.Closed
			and   !SelectedForReconciliation
			and   !SummaryRecord
			and   ReconMatchNumber			!entered)
			
		CanBeMarkedAsReconciled
			restricted
			when (!BankStatement.StatementStatus.Closed
			and   !SelectedForReconciliation
			and   ReconMatchNumber !entered
			and   LineType.Statement
			and   !SummaryRecord
			and   !CashTransactionCategory.UncategorizedCategory
			and   CashManagementAccount.AllowOneSidedReconciliations)
		
		CanBeFlaggedAsPending
			restricted
			when (!PostStatementLine
			and   !BankStatement.StatementStatus.Closed
			and   !SelectedForReconciliation
			and   ReconMatchNumber !entered
			and   LineType.Statement
			and   !SummaryRecord
			and   !CashTransactionCategory.UncategorizedCategory)

		CanUnmatchSelectedTransactions
			restricted
			when (SummaryRecord
			and   !PendingStatementLine)

		CanUnmatchPendingTransactions
			restricted
			when (SummaryRecord
			and   LineStatus.Pending)

		SummaryRecordCanBeFlaggedAsPending
			restricted
			when (SummaryRecord
			and   !PostStatementLine
			and   LineStatus.Unreconciled)

		CanBeUnmatched
			restricted
			when (!BankStatement.StatementStatus.Closed
			and   ReconMatchNumber entered)
			
		FromPendingStatementLines
			restricted
			when (LineType.Statement
			and   ReconMatchNumber					entered
			and   ReconMatchNumber.BankStatement	!entered)
		
		HasReconciledDifference
			restricted
			when ((LineType.CashLedger

			or     LineType.OtherSystem)
			and    ReconciledDifference entered)

		NonCashLedgerWithReconDifference
			restricted
			when (LineType.OtherSystem
			and   ReconciledDifference entered)






		HasSecondaryReconciliationTransactions
			restricted
			when (any BankStatementReconciliation descendants.SecondaryReconTransaction)

		IsMatchTypeCompliant
			restricted
			when ((BankReconciliationMatchRule.MatchType.OneToOne
			and	   NumberOfMatchedStatementLines = 1
			and    NumberOfMatchedSystemLines = 1)
			or    (BankReconciliationMatchRule.MatchType.OneToMany
			and	   NumberOfMatchedStatementLines = 1
			and	   NumberOfMatchedSystemLines > 1)
			or	  (BankReconciliationMatchRule.MatchType.ManyToOne
			and	   NumberOfMatchedStatementLines > 1
			and	   NumberOfMatchedSystemLines = 1)
			or	  (BankReconciliationMatchRule.MatchType.ManyToMany
			and	   NumberOfMatchedStatementLines > 1
			and	   NumberOfMatchedSystemLines > 1))
		
		ShowMatchTypeAlert
			restricted
			when (SummaryRecord
			and   BankReconciliationMatchRule entered
			and	  !IsMatchTypeCompliant)

		TransactionSearchCondition
			restricted
			when (!SummaryRecord
			and  (!TransactionDateRange entered
            or	   TransactionDateRange entered
            and    TransactionDate within TransactionDateRange)
            and	  (!SearchAmountRange entered
            or	   SearchAmountRange entered
            and    TransactionAmount within SearchAmountRange))
		
		OneSidedReconciliation
			restricted
			when (LineStatus.Reconciled
			and	  SummaryRecord
			and   all BankStatementReconciliation children.LineType.Statement)

		HasUnreleasedVarianceAdjustment
			restricted
			when (CashLedgerReconciliationAdjustmentRel	exists
			and   CashLedgerReconciliationAdjustmentRel.Status.UnreleasedUnreconciled)
		
		DisplayReconciliationMatchRuleLink
			restricted
			when (CashManagementAccount.ReconciliationMethod.UseReconciliationMatchRules
			and	  BankReconciliationMatchRule entered)
		

		ParsedDataUsed
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping.ParsingRuleGroup entered
			and LineType.Statement)	
		ParsedData1Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[1].ParsingRuleGroup entered)
		ParsedData2Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[2].ParsingRuleGroup entered)
		ParsedData3Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[3].ParsingRuleGroup entered)
		ParsedData4Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[4].ParsingRuleGroup entered)
		ParsedData5Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[5].ParsingRuleGroup entered)
		ParsedData6Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[6].ParsingRuleGroup entered)
		ParsedData7Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[7].ParsingRuleGroup entered)
		ParsedData8Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[8].ParsingRuleGroup entered)
		ParsedData9Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[9].ParsingRuleGroup entered)
		ParsedData10Used
			restricted
			when (CashManagementAccount.ParsingRuleGroupArray.ParsingMapping[10].ParsingRuleGroup entered)

		BankStatementLineDetailExists
			restricted
			when (LineType.Statement and BankStatementLineDetail entered)
			
		CashLedgerTransactionDetailExists
			restricted
			when (LineType.CashLedger and CashLedgerTransactionDetail entered)
											  	
	Field Rules
		LineType
			if (!SummaryRecord)
				required			

		PostStatementLine
			if (!SummaryRecord)
				if (CashTransactionCategory.StatementLinePostingOption.PostToGeneralLedger
				or  LineType.Forecast)
					PostStatementLine	= true
				else
					PostStatementLine	= false

		TransactionNumber
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesTransactionNumberVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						TransactionNumber = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						TransactionNumber = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						TransactionNumber = RelatedReference
			
		CashLedgerTransactionIdentifier
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesCashLedgerTransactionIdentifierVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						CashLedgerTransactionIdentifier = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						CashLedgerTransactionIdentifier = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						CashLedgerTransactionIdentifier = RelatedReference
			
		TransactionDataOne
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesTransactionDataOneVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						TransactionDataOne = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						TransactionDataOne = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						TransactionDataOne = RelatedReference
						
		TransactionDataTwo
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesTransactionDataTwoVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						TransactionDataTwo = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						TransactionDataTwo = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						TransactionDataTwo = RelatedReference
						
		TransactionDataThree
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesTransactionDataThreeVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						TransactionDataThree = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						TransactionDataThree = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						TransactionDataThree = RelatedReference
						
		TransactionDataFour
			if (CashManagementAccount.ReconciliationMethod.UseReconciliationTemplates)
				if (LineType.Statement
				and BankReconciliationTemplate.UsesTransactionDataFourVariable)
					if (BankReconciliationTemplate.TransactionNumberSource.TextReference)
						TransactionDataFour = TextReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.BankReference)
						TransactionDataFour = BankReference
					else
					if (BankReconciliationTemplate.TransactionNumberSource.RelatedReference)
						TransactionDataFour = RelatedReference
					
		LineMatchField
			include LineMatchFieldDefaulting














































					
		Function
			default to "9"				

		TransactionAmount
			if (SummaryRecord)
				cannot be changed
			else
				if (Function.Void)
					if (DebitCreditIndicator.Credit)
						SignedAmount	= (TransactionAmount	* -1)
					else
						SignedAmount	= TransactionAmount
				else
					if (DebitCreditIndicator.Debit)
						SignedAmount	= (TransactionAmount	* -1)
					else
						SignedAmount	= TransactionAmount

		ReconciledAmount
			if (SummaryRecord)
				if (!OneSidedReconciliation) 
					ReconciledAmount = (NetBankLineAmount - NetTransactionAmount) 
					if (CashManagementAccount.HasAnySecondaryReconciliations) 
						SecondaryReconciledAmount = (NetBankLineAmount - NetSecondaryTransactionAmount)
				else 
					initialize ReconciledAmount
					initialize SecondaryReconciledAmount
				
			if (!SummaryRecord) 
				default to TransactionAmount 
				if (ReconciledAmount changed) 
					invoke UpdateSummaryRecordAmount ReconMatchNumber
					
		ReconMatchNumber
            constraint (ReconMatchNumber != BankStatementReconciliation)
                "ReconMatchNumberCannotBeSameAsBankStatementReconciliation"

  	Actions
		ClearSelectedList is an Instance Action
			valid when (SelectedForReconciliation)
			Action Rules
				invoke ClearCurrentReconciliationList ContextBankStatementRel.BankStatement

		MarkTransactionAsSelected is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				SelectedForReconciliation	= true
				invoke MarkTransactionAsSelected BankStatementReconciliation descendants

		MarkTransactionAsUnselected is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				SelectedForReconciliation	= false
				invoke MarkTransactionAsUnselected BankStatementReconciliation descendants

		SelectTransaction is an Instance Action
			valid when (CanBeSelectedToReconcile)
			Local Fields
				LocalReconMatchNumber 	is a BankStatementReconciliation view
				LocalBankStatement		is a BankStatement
				
			Action Rules
				if (LineType.Statement)
					if (BankStatementLineDetail.CreatedCashLedgerTransaction entered)
						constraint (!BankStatementLineDetail.CreatedCashLedgerTransaction.Status.Unreleased)
							"CashLedgerTransaction<BankStatementLineDetail.CreatedCashLedgerTransaction.TransactionNumber>WillBeMatchedToStatementLineDetailWhenReleased"
					else
					if (BankStatementLine.CreatedCashLedgerTransaction entered)
						constraint (!BankStatementLine.CreatedCashLedgerTransaction.Status.Unreleased)
							"CashLedgerTransaction<BankStatementLine.CreatedCashLedgerTransaction.TransactionNumber>WillBeMatchedToStatementLineWhenReleased"					
					
				constraint (!CashTransactionCategory.UncategorizedCategory)
					"CannotSelectUncategorizedLinesToBeMatched"

				LocalBankStatement				= ContextBankStatementRel.BankStatement
				if (SummaryRecord)
					invoke ClearCurrentReconciliationList LocalBankStatement
					invoke UpdateCurrentReconMatchNumber LocalBankStatement
						invoked.PrmReconMatchNumber	= BankStatementReconciliation
				else					
					if (LocalBankStatement.CurrentReconMatchNumber entered)
						constraint (PostStatementLine	= LocalBankStatement.CurrentReconMatchNumber.PostStatementLine)
							"CannotMatchPostingTransactionsToNonPostingTransactions"
						if (LineType.Forecast)
							if (LocalBankStatement.CurrentReconMatchNumber.CashTransactionCategory entered)
								constraint (CashTransactionCategory = LocalBankStatement.CurrentReconMatchNumber.CashTransactionCategory)
									"CannotSelectForecastTransactionsWithDifferentCategories"
							else
								invoke UpdateLineMatchField LocalBankStatement.CurrentReconMatchNumber
									invoked.PrmLineMatchField			= LineMatchField
									invoked.PrmCashTransactionCategory	= CashTransactionCategory
						if (BankStatement entered
						and !LocalBankStatement.CurrentReconMatchNumber.LineStatus.Pending
						and LocalBankStatement.CurrentReconMatchNumber.BankStatement !entered)
							invoke UpdateBankStatement LocalBankStatement.CurrentReconMatchNumber
								invoked.PrmBankStatement	= BankStatement
						ReconMatchNumber		= LocalBankStatement.CurrentReconMatchNumber
						LineStatus				= LocalBankStatement.CurrentReconMatchNumber.LineStatus
						if (LineStatus.Pending)
							PendingStatementLine	= true
						else
							PendingStatementLine	= false
					else
						invoke Create
							assign result to LocalReconMatchNumber
							invoked.CashManagementGroup			= CashManagementGroup
							invoked.CashManagementAccount		= CashManagementAccount
							invoked.LineMatchField				= LineMatchField
							invoked.BankStatement				= LocalBankStatement
							invoked.CashCode					= CashCode
							invoked.SelectedForReconciliation	= true
							invoked.SummaryRecord				= true
							invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
							invoked.PostStatementLine			= PostStatementLine
							if (LineType.Forecast)
								invoked.CashTransactionCategory	= CashTransactionCategory
						ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation		
						invoke UpdateCurrentReconMatchNumber LocalBankStatement
							invoked.PrmReconMatchNumber	= ReconMatchNumber
				MatchedDate					= current timestamp
				MatchedActor				= actor
				MatchedManually				= true
				SelectedForReconciliation	= true
				
			Exit Rules
				if (!SummaryRecord)
					invoke UpdateSummaryRecordAmount LocalBankStatement.CurrentReconMatchNumber
						invoked.PrmNetBankLineAmount	= NetBankLineAmount
						invoked.PrmNetTransactionAmount	= NetTransactionAmount
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmLineStatus			 	= LineStatus
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmReconSummaryRecord	 	= ReconMatchNumber
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus			= LineStatus
					invoked.PrmReconSummaryRecord	= ReconMatchNumber

		UnselectTransaction is an Instance Action
			valid when (CanBeUnmatched)
			Local Fields
				LocalReconMatchNumber	is a BankStatementReconciliation
				LocalBankStatement		is a BankStatement

			Action Rules
				LocalReconMatchNumber			= ReconMatchNumber
				LocalBankStatement				= ContextBankStatementRel.BankStatement 
				initialize ReconMatchNumber
				initialize MatchedDate
				initialize MatchedActor
				initialize MatchedManually
				ReconciledAmount	= TransactionAmount
				SelectedForReconciliation	= false
				if (PendingStatementLine 
				and BankStatement.StatementStatus.Reconciled)
					invoke UnreconcileStatement Reconciled BankStatement
				LineStatus					= 0 
				PendingStatementLine		= false
				if (!SummaryRecord
				and !LineType.Forecast)
					invoke Update
						initialize invoked.LineMatchField
			Exit Rules
				invoke ReconcileDetailTransaction RelatedCashForecastDetail(CashForecastDetail)
					invoked.PrmReconciled	= false
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmCashManagementAccount 		= CashManagementAccount
						invoked.PrmLineStatus					= 0 
						invoked.PrmInitializeReconSummaryRecord	= true
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus					= 0 
					invoked.PrmInitializeReconSummaryRecord	= true
				invoke UnreconcileTransaction NonCashLedgerTransaction
				if (LineType.CashLedger)
					if(CashLedgerTransactionDetail entered)
						invoke UpdateLineDetailStatus CashLedgerTransactionDetail
							invoked.PrmLineStatus				= 0 
					if (CashLedgerTransaction.Status.Reconciled)
						invoke Reconciled.ReopenFromCTMBankStatement CashLedgerTransaction
					else
						if (CashLedgerReconciliationAdjustmentRel exists)
							invoke Delete CashLedgerReconciliationAdjustmentRel					        


				if (!SummaryRecord)
					if (!LocalReconMatchNumber descendants exist)
						invoke Purge LocalReconMatchNumber
						if (LocalReconMatchNumber	= ContextBankStatementRel.BankStatement.CurrentReconMatchNumber) 
							invoke Update ContextBankStatementRel.BankStatement 
								initialize invoked.CurrentReconMatchNumber
						if (LocalReconMatchNumber	= CashManagementAccount.CurrentReconMatchNumber)
							invoke Update CashManagementAccount
								initialize invoked.CurrentReconMatchNumber
					else
						invoke UpdateSummaryRecordAmount LocalReconMatchNumber
							invoked.PrmNetBankLineAmount	-= NetBankLineAmount
							invoked.PrmNetTransactionAmount	-= NetTransactionAmount

		MatchTransaction is an Instance Action 
			default label is "SelectTransaction"
			valid when (CanBeSelectedToReconcile)
			Local Fields
				LocalReconMatchNumber 	is a BankStatementReconciliation view
				
			Action Rules
				if (LineType.Statement)
					if(BankStatementLineDetail.CreatedCashLedgerTransaction entered)
						constraint (!BankStatementLineDetail.CreatedCashLedgerTransaction.Status.Unreleased)
							"CashLedgerTransaction<BankStatementLineDetail.CreatedCashLedgerTransaction.TransactionNumber>WillBeMatchedToStatementLineDetailWhenReleased"
					else
					if(BankStatementLine.CreatedCashLedgerTransaction entered)
						constraint (!BankStatementLine.CreatedCashLedgerTransaction.Status.Unreleased)
							"CashLedgerTransaction<BankStatementLine.CreatedCashLedgerTransaction.TransactionNumber>WillBeMatchedToStatementLineWhenReleased"
												
				constraint (!CashTransactionCategory.UncategorizedCategory)
					"CannotSelectUncategorizedLinesToBeMatched"
				if (SummaryRecord)
					invoke ClearCurrentReconciliationList CashManagementAccount
					invoke UpdateCurrentReconMatchNumber CashManagementAccount
						invoked.PrmReconMatchNumber	= BankStatementReconciliation
				else
					if (CashManagementAccount.CurrentReconMatchNumber entered)
						constraint (PostStatementLine	= CashManagementAccount.CurrentReconMatchNumber.PostStatementLine)
							"CannotMatchPostingTransactionsToNonPostingTransactions"
						if (LineType.Forecast)
							if (CashManagementAccount.CurrentReconMatchNumber.CashTransactionCategory entered)
								constraint (CashTransactionCategory = CashManagementAccount.CurrentReconMatchNumber.CashTransactionCategory)
									"CannotSelectForecastTransactionsWithDifferentCategories"
							else
								invoke UpdateLineMatchField CashManagementAccount.CurrentReconMatchNumber
									invoked.PrmLineMatchField			= LineMatchField
									invoked.PrmCashTransactionCategory	= CashTransactionCategory
						if (BankStatement entered
						and !CashManagementAccount.CurrentReconMatchNumber.LineStatus.Pending
						and CashManagementAccount.CurrentReconMatchNumber.BankStatement !entered)
							invoke UpdateBankStatement CashManagementAccount.CurrentReconMatchNumber
								invoked.PrmBankStatement	= BankStatement
						ReconMatchNumber		= CashManagementAccount.CurrentReconMatchNumber
						LineStatus				= CashManagementAccount.CurrentReconMatchNumber.LineStatus
						if (LineStatus.Pending)
							PendingStatementLine	= true
						else
							PendingStatementLine	= false
					else
						invoke Create
							assign result to LocalReconMatchNumber
							invoked.CashManagementGroup			= CashManagementGroup
							invoked.CashManagementAccount		= CashManagementAccount
							invoked.LineMatchField				= LineMatchField
							invoked.BankStatement				= BankStatement
							invoked.CashCode					= CashCode
							invoked.SummaryRecord				= true
							invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
							invoked.PostStatementLine			= PostStatementLine
							if (LineType.Forecast)
								invoked.CashTransactionCategory	= CashTransactionCategory
						ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation		
						invoke UpdateCurrentReconMatchNumber CashManagementAccount
							invoked.PrmReconMatchNumber	= ReconMatchNumber
				MatchedDate			= current timestamp
				MatchedActor		= actor
				MatchedManually		= true
				
			Exit Rules
				if (!SummaryRecord)
					invoke UpdateSummaryRecordAmount CashManagementAccount.CurrentReconMatchNumber
						invoked.PrmNetBankLineAmount	= NetBankLineAmount
						invoked.PrmNetTransactionAmount	= NetTransactionAmount
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmLineStatus				= LineStatus
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmReconSummaryRecord		= ReconMatchNumber
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus			= LineStatus
					invoked.PrmReconSummaryRecord	= ReconMatchNumber
				
		MatchAdditionalTransactions is an Instance Action
			valid when (CanMatchAdditionalTransactions)
				
			Local Fields
				LocalReconMatchNumber is a BankStatementReconciliation view
				
			Action Rules
				if (ReconSummaryRecord entered)
					if (LineType.Forecast)
						if (ReconSummaryRecord.BankStatementReconciliation.CashTransactionCategory entered)
							constraint (CashTransactionCategory = ReconSummaryRecord.BankStatementReconciliation.CashTransactionCategory)
								"CannotSelectForecastTransactionsWithDifferentCategories"
						else
							invoke Update ReconSummaryRecord.BankStatementReconciliation
								invoked.CashTransactionCategory	= CashTransactionCategory
								invoked.LineMatchField			= LineMatchField
					if (ReconSummaryRecord.BankStatementReconciliation.BankStatement !entered)
						invoke UpdateBankStatement ReconSummaryRecord.BankStatementReconciliation
							invoked.PrmBankStatement	= BankStatement
					ReconMatchNumber		= ReconSummaryRecord
				else
					invoke Create
						assign result to LocalReconMatchNumber
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashManagementAccount		= CashManagementAccount
						invoked.LineMatchField				= LineMatchField
						invoked.BankStatement				= ReconciliationIdentifier.BankStatementReconciliation.BankStatement
						invoked.CashCode					= CashCode
						invoked.SummaryRecord				= true
						invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
						invoked.PostStatementLine			= PostStatementLine
						if (LineType.Forecast)
							invoked.CashTransactionCategory	= CashTransactionCategory
					ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation
					invoke UpdateReconMatchNumber ReconciliationIdentifier.BankStatementReconciliation
						invoked.PrmReconMatchNumber	= ReconMatchNumber		
				MatchedDate			= current timestamp
				MatchedActor		= actor
				MatchedManually		= true
			Exit Rules
				invoke UpdateSummaryRecordAmount ReconMatchNumber
					invoked.PrmNetBankLineAmount	= NetBankLineAmount
					invoked.PrmNetTransactionAmount	= NetTransactionAmount

		AddToMatchNumber is an Instance Action
			valid when (CanBeMatchedToGroup)
			Parameters
				PrmReconMatchNumber is a BankStatementReconciliation
			Parameter Rules
				PrmReconMatchNumber
					constraint (PrmReconMatchNumber.SummaryRecord)
						"MustSelectSummaryRecord"
					constraint (PostStatementLine	= PrmReconMatchNumber.PostStatementLine)
						"CannotMatchPostingTransactionsToNonPostingTransactions"
					if (LineType.Forecast)
						if (PrmReconMatchNumber.CashTransactionCategory entered)
							constraint (CashTransactionCategory = PrmReconMatchNumber.CashTransactionCategory)
								"CannotSelectForecastTransactionsWithDifferentCategories"
						else
							invoke UpdateLineMatchField PrmReconMatchNumber
								invoked.PrmLineMatchField			= LineMatchField
								invoked.PrmCashTransactionCategory	= CashTransactionCategory

			Action Rules
				if (BankStatement entered
				and !PrmReconMatchNumber.LineStatus.Pending
				and PrmReconMatchNumber.BankStatement !entered)
					invoke UpdateBankStatement PrmReconMatchNumber
						invoked.PrmBankStatement	= BankStatement
				ReconMatchNumber		= PrmReconMatchNumber
				LineStatus				= PrmReconMatchNumber.LineStatus
				MatchedDate				= current timestamp
				MatchedActor			= actor
				MatchedManually			= true
				if (LineStatus.Pending)
					PendingStatementLine	= true
				else
					PendingStatementLine	= false
							
			Exit Rules
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmLineStatus				= LineStatus
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmReconSummaryRecord		= ReconMatchNumber
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus			= LineStatus
					invoked.PrmReconSummaryRecord	= ReconMatchNumber
				invoke UpdateSummaryRecordAmount PrmReconMatchNumber
					invoked.PrmNetBankLineAmount	= NetBankLineAmount
					invoked.PrmNetTransactionAmount	= NetTransactionAmount


		AddToOtherMatchNumber is an Instance Action
			valid when (CanBeUnmatched)
			Parameters
				PrmReconMatchNumber is a BankStatementReconciliation
			Parameter Rules
				PrmReconMatchNumber
					constraint (PrmReconMatchNumber	!= ReconMatchNumber)
						"RecordAlreadyMatchedToGroup<PrmReconMatchNumber>"
					constraint (PrmReconMatchNumber.SummaryRecord)
						"MustSelectSummaryRecord"
					constraint (PostStatementLine	= PrmReconMatchNumber.PostStatementLine)
						"CannotMatchPostingTransactionsToNonPostingTransactions"
					if (LineType.Forecast)
						if (PrmReconMatchNumber.CashTransactionCategory entered)
							constraint (CashTransactionCategory = PrmReconMatchNumber.CashTransactionCategory)
								"CannotSelectForecastTransactionsWithDifferentCategories"
						else
							invoke UpdateLineMatchField PrmReconMatchNumber
								invoked.PrmLineMatchField			= LineMatchField
								invoked.PrmCashTransactionCategory	= CashTransactionCategory
			
			Action Rules
				invoke UnselectTransaction
				invoke AddToMatchNumber
					invoked.PrmReconMatchNumber	= PrmReconMatchNumber

		MarkAsReconciled is an Instance Action
			valid when (CanBeMarkedAsReconciled)
			Local Fields
				LocalReconMatchNumber 	is a BankStatementReconciliation view

			Action Rules
				invoke Create
					assign result to LocalReconMatchNumber
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashManagementAccount		= CashManagementAccount
					invoked.LineMatchField				= ManuallyReconciledMatchField
					invoked.BankStatement				= BankStatement
					invoked.CashTransactionCategory		= CashTransactionCategory
					invoked.CashCode					= CashCode
					invoked.ReconciledAmount			= SignedAmount
					invoked.PostStatementLine			= PostStatementLine
					invoked.SummaryRecord				= true
					invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
					invoked.LineStatus					= 1 
				ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation		
				LineStatus				= 1 
				LineMatchField			= ManuallyReconciledMatchField
				MatchedDate				= current timestamp
				MatchedActor			= actor
				MatchedManually			= true
			Exit Rules
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmLineStatus				= 1 
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmReconSummaryRecord		= ReconMatchNumber
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus			= 1 
					invoked.PrmReconSummaryRecord	= ReconMatchNumber
				if (BankStatement.StatementStatus.Unreconciled)
					invoke UpdateReconciliationStatus Unreconciled BankStatement

		FlagAsPending is an Instance Action
			valid when (CanBeFlaggedAsPending)
			Local Fields
				LocalReconMatchNumber 	is a BankStatementReconciliation view

			Action Rules
				invoke Create
					assign result to LocalReconMatchNumber
					invoked.CashManagementGroup			= CashManagementGroup
					invoked.CashManagementAccount		= CashManagementAccount
					invoked.LineMatchField				= LineMatchField
					invoked.CashCode					= CashCode
					invoked.PostStatementLine			= PostStatementLine
					invoked.SummaryRecord				= true
					invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
					invoked.LineStatus					= 2 
					invoked.PendingStatementLine		= true
				ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation		
				LineStatus				= 2 
				PendingStatementLine	= true
				MatchedDate				= current timestamp
				MatchedActor			= actor
				MatchedManually			= true
			Exit Rules
				invoke UpdateSummaryRecordAmount ReconMatchNumber
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmLineStatus				= 2 
						invoked.PrmCashManagementAccount	= CashManagementAccount
						invoked.PrmReconSummaryRecord		= ReconMatchNumber
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus				= 2 
					invoked.PrmReconSummaryRecord		= ReconMatchNumber
				if (BankStatement.StatementStatus.Unreconciled)
					invoke UpdateReconciliationStatus Unreconciled BankStatement

		FlagMatchedTransactionsAsPending is an Instance Action
			valid when (SummaryRecordCanBeFlaggedAsPending)

			Action Rules
				constraint (LineMatchField entered)
					"LineMatchFieldIsRequired"
				LineStatus				= 2 
				PendingStatementLine	= true
				for each BankStatementReconciliation descendants
					invoke UpdateBypassRules each
						invoked.LineMatchField			= LineMatchField
						invoked.LineStatus				= 2 
						invoked.PendingStatementLine	= true
					if (each.BankStatementLineDetail entered)
						invoke UpdateLineDetailStatus each.BankStatementLineDetail
							invoked.PrmLineStatus				= 2 
							invoked.PrmCashManagementAccount	= CashManagementAccount
							invoked.PrmReconSummaryRecord		= BankStatementReconciliation
					invoke UpdateLineStatus each.BankStatementLine
						invoked.PrmLineStatus			= 2 
						invoked.PrmReconSummaryRecord	= BankStatementReconciliation
				
			Exit Rules
				if (BankStatement.StatementStatus.Unreconciled)
					invoke UpdateReconciliationStatus Unreconciled BankStatement


		UpdateLineReconciledAmount is an Instance Action
			default label is untranslatable
			restricted
			Parameters
 				PrmReconciledAmount		is an InternationalAmount
			Action Rules
				ReconciledAmount	+= PrmReconciledAmount

		UpdateSummaryRecordAmount is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmNetBankLineAmount	is an InternationalAmount
				PrmNetTransactionAmount	is an InternationalAmount
				
			Local Fields
 				LocalLineStatus		is Numeric 1
				LocalBankStatement		is a BankStatement
				LocalReconciliationDate	is Date

			Action Rules
				TotalsAccumulated	= false
				if (PrmNetBankLineAmount	entered
				or  PrmNetTransactionAmount	entered)
					ReconciledAmount	+= (PrmNetBankLineAmount - PrmNetTransactionAmount)
				else
					ReconciledAmount	= (NetBankLineAmount - NetTransactionAmount)
				if (CashManagementAccount.HasAnySecondaryReconciliations)
					SecondaryReconciledAmount	= (NetBankLineAmount	- NetSecondaryTransactionAmount)

				if (BankStatement entered)			
					if (MultipleStatementReconciliationRel exists)
						initialize BankStatement
				else
					initialize LocalBankStatement
					for each RelatedStatementLinesByDateRel 
						if (each.BankStatement entered)
							if (LocalBankStatement entered)
								if (LocalBankStatement != each.BankStatement)
									initialize LocalBankStatement
									end for each
							else
								LocalBankStatement	= each.BankStatement
					if (LocalBankStatement entered)
						BankStatement			= LocalBankStatement
				if (ReconciledAmount entered
				and LineStatus.Reconciled)
					if (PendingStatementLine)
						LocalLineStatus	= 2 

					else
						LocalLineStatus	= 0 
					LineStatus	= LocalLineStatus
					SummaryIncludesReconDiff	= false
					if (instance count of BankStatementReconciliation descendants > 30)
						if (RelatedCashLedgerTransactionsRel exists)
							constraint (first RelatedCashLedgerTransactionsRel.CashLedgerTransaction.PeriodDate	!entered)
								"CashLedgerTransactionsHaveBeenClosed;CannotReopen"
						invoke UnReconcileSetAction in background 
							invoked.PrmCashManagementGroup			= CashManagementGroup
							invoked.PrmCashManagementAccount		= CashManagementAccount
							invoked.PrmBankStatementReconciliation	= BankStatementReconciliation
							invoked.PrmLineStatus					= LocalLineStatus
					else
						for each BankStatementReconciliation descendants
							invoke UpdateReconLineStatus each
								invoked.PrmLineStatus	= LocalLineStatus


							invoke ReconcileDetailTransaction each.RelatedCashForecastDetail(CashForecastDetail)
								invoked.PrmReconciled	= false
							if (each.BankStatementLineDetail entered)
								invoke UpdateLineDetailStatus each.BankStatementLineDetail
									invoked.PrmCashManagementAccount = CashManagementAccount
									invoked.PrmLineStatus			 = LocalLineStatus
							invoke UpdateLineStatus each.BankStatementLine
								invoked.PrmLineStatus	= LocalLineStatus
							invoke UnreconcileTransaction each.NonCashLedgerTransaction
							if (each.LineType.CashLedger)
								constraint (each.CashLedgerTransaction.PeriodDate	!entered)
									"Transaction:<each.TransactionNumber>ForCashCode:<each.CashCode>BankTransactionCode:<each.BankTransactionCode>HasBeenClosed;CannotReopen"
								if (each.CashLedgerTransactionDetail entered)
									invoke UpdateLineDetailStatus each.CashLedgerTransactionDetail
										invoked.PrmLineStatus				= 0 
								if (each.CashLedgerTransaction.Status.Reconciled)
									invoke Reconciled.ReopenFromCTMBankStatement each.CashLedgerTransaction
								else
									if (each.CashLedgerReconciliationAdjustmentRel exists)
										invoke Delete each.CashLedgerReconciliationAdjustmentRel					        
					if (BankStatement entered)
						if (BankStatement.StatementStatus.Reconciled)
							invoke UnreconcileStatement Reconciled BankStatement
					else
						for each RelatedStatementLinesByDateRel
							if (each.BankStatement.StatementStatus.Unreconciled)
								invoke UpdateReconciliationStatus Unreconciled each.BankStatement
				if (ReconciledAmount !entered)
					if (any BankStatementReconciliation descendants.LineType.CashLedger) 
						if (BankStatement entered)
							LocalReconciliationDate	= BankStatement.StatementDate
						else
						if (ContextBankStatement entered)
							LocalReconciliationDate	= ContextBankStatementRel.BankStatement.StatementDate
						else
							LocalReconciliationDate	= last RelatedStatementLinesByDateRel.BankStatement.StatementDate
						if (LocalReconciliationDate	> all CashCodeRel.CurrentAccountBalanceDate)
							invoke ReconcileSelectedMatchedTransactions
					else
						invoke ReconcileSelectedMatchedTransactions

		ReconcileWithinTolerance is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmNetReconciledAmount			is an InternationalAmount
				PrmNetSecondaryReconciledAmount	is an InternationalAmount
				PrmBankStatement				is a BankStatement
				
			Local Fields
				LocalCashTransactionCategory	is a CashTransactionCategory
				LocalTolerancePercent		 	is Percent 3
				LocalToleranceAmount			is an InternationalAmount
				LocalActualAmount				is an InternationalAmount
				LocalReconciledAmount			is an InternationalAmount

			Action Rules
				BankStatementBeingReconciled = PrmBankStatement

				ReconciledAmount			+= PrmNetReconciledAmount
				if (CashManagementAccount.HasAnySecondaryReconciliations)

					SecondaryReconciledAmount	+= PrmNetSecondaryReconciledAmount
				if (ReconciledAmount	entered)
					if (CashTransactionCategory entered)
						LocalCashTransactionCategory	= CashTransactionCategory
					else
						for each BankStatementReconciliation descendants
							if (LocalCashTransactionCategory !entered)
								LocalCashTransactionCategory 	= each.CashTransactionCategory
							else
								if (each.CashTransactionCategory	entered
								and each.CashTransactionCategory	!= LocalCashTransactionCategory)
									initialize LocalCashTransactionCategory
									end for each
					if  (LocalCashTransactionCategory	entered)
						if (LocalCashTransactionCategory.AlwaysReconcile)
							invoke Reconcile
						else
							if (BankReconciliationMatchRule entered)
								if  (IsMatchTypeCompliant
								and (BankReconciliationMatchRule.ReconciliationToleranceAmount entered
								or   BankReconciliationMatchRule.ReconciliationTolerancePercent entered))
									LocalToleranceAmount	= BankReconciliationMatchRule.ReconciliationToleranceAmount
									LocalTolerancePercent	= BankReconciliationMatchRule.ReconciliationTolerancePercent
							else
							if (LocalCashTransactionCategory.ReconciliationToleranceAmount entered
							or  LocalCashTransactionCategory.ReconciliationTolerancePercent entered)
								LocalToleranceAmount	= LocalCashTransactionCategory.ReconciliationToleranceAmount
								LocalTolerancePercent	= LocalCashTransactionCategory.ReconciliationTolerancePercent
							else
								LocalToleranceAmount	= CashManagementAccount.ReconciliationToleranceAmount
								LocalTolerancePercent	= CashManagementAccount.ReconciliationTolerancePercent
		
							if (LocalTolerancePercent entered)
								include CheckForNegativeRate		
								include AbsoluteValueOfReconciledAmount
								if ((LocalReconciledAmount / LocalActualAmount) <= LocalTolerancePercent
								and !LocalNegativeAdjustment)		
									if (!LineType.Forecast)
										invoke UpdateLineReconciledAmount last RelatedCashTransactionDetailRel
											if (RelatedCashTransactionDetailRel.DebitCreditIndicator.Debit)
												invoked.PrmReconciledAmount	-= ReconciledAmount
											else
												invoked.PrmReconciledAmount	+= ReconciledAmount
										initialize ReconciledAmount
									invoke Reconcile
								else
									for each BankStatementReconciliation descendants
										if (each.BankStatementLineDetail entered)
											invoke UpdateLineDetailStatus each.BankStatementLineDetail
												invoked.PrmLineStatus				= LineStatus
												invoked.PrmCashManagementAccount	= CashManagementAccount
												invoked.PrmReconSummaryRecord		= BankStatementReconciliation
										invoke UpdateLineStatus each.BankStatementLine
											invoked.PrmLineStatus			= LineStatus
											invoked.PrmReconSummaryRecord	= BankStatementReconciliation
							
							if (LocalToleranceAmount entered)
								include CheckForNegativeRate		
								include AbsoluteValueOfReconciledAmount
								if (LocalReconciledAmount <= LocalToleranceAmount
								and !LocalNegativeAdjustment)		
									if (!LineType.Forecast)
										invoke UpdateLineReconciledAmount last RelatedCashTransactionDetailRel
											if (RelatedCashTransactionDetailRel.DebitCreditIndicator.Debit)
												invoked.PrmReconciledAmount	-= ReconciledAmount
											else
												invoked.PrmReconciledAmount	+= ReconciledAmount
											initialize ReconciledAmount
									invoke Reconcile
								else
									for each BankStatementReconciliation descendants
										if (each.BankStatementLineDetail entered)
											invoke UpdateLineDetailStatus each.BankStatementLineDetail
												invoked.PrmLineStatus				= LineStatus
												invoked.PrmCashManagementAccount	= CashManagementAccount
												invoked.PrmReconSummaryRecord		= BankStatementReconciliation
										invoke UpdateLineStatus each.BankStatementLine
											invoked.PrmLineStatus			= LineStatus
											invoked.PrmReconSummaryRecord	= BankStatementReconciliation
					else
						for each BankStatementReconciliation descendants
							if (each.BankStatementLineDetail entered)
								invoke UpdateLineDetailStatus each.BankStatementLineDetail
									invoked.PrmLineStatus				= LineStatus
									invoked.PrmCashManagementAccount	= CashManagementAccount
									invoked.PrmReconSummaryRecord		= BankStatementReconciliation
							invoke UpdateLineStatus each.BankStatementLine
								invoked.PrmLineStatus			= LineStatus
								invoked.PrmReconSummaryRecord	= BankStatementReconciliation
				else
					invoke Reconcile















 		UnreconcileSelectedMatchedTransactions is an Instance Action
 			valid when (SummaryRecordCanBeUnreconciled)
 			Action Rules
				invoke UnreconcileMatchedTransactions
				

 		UnreconcileMatchedTransactions is an Instance Action
 			default label is untranslatable
 			restricted
 			Parameters
 				PrmUnmatchTransaction	is Boolean
 				
 			Local Fields
 				LocalLineStatus	is Numeric 1
 				
 			Action Rules
				if (PendingStatementLine)
					LocalLineStatus	= 2 

				else
					LocalLineStatus	= 0 
				LineStatus	= LocalLineStatus
				SummaryIncludesReconDiff	= false
				if (instance count of BankStatementReconciliation descendants > 30)
					if (RelatedCashLedgerTransactionsRel exists)
						constraint (first RelatedCashLedgerTransactionsRel.CashLedgerTransaction.PeriodDate	!entered)
							"CashLedgerTransactionsHaveBeenClosed;CannotReopen"
					SelectedForReconciliation	= true 
					invoke UnReconcileSetAction in background 
						invoked.PrmCashManagementGroup			= CashManagementGroup
						invoked.PrmCashManagementAccount		= CashManagementAccount
						invoked.PrmBankStatementReconciliation	= BankStatementReconciliation
						invoked.PrmLineStatus					= LocalLineStatus
						invoked.PrmUnmatchTransaction			= PrmUnmatchTransaction
				else
					for each BankStatementReconciliation descendants
						invoke UpdateReconLineStatus each
							invoked.PrmLineStatus			= LocalLineStatus
							invoked.PrmUnmatchTransaction	= PrmUnmatchTransaction
						invoke ReconcileDetailTransaction each.RelatedCashForecastDetail(CashForecastDetail)
							invoked.PrmReconciled	= false
						if (each.BankStatementLineDetail entered)
							invoke UpdateLineDetailStatus each.BankStatementLineDetail
								invoked.PrmCashManagementAccount 		= CashManagementAccount
								invoked.PrmLineStatus					= LocalLineStatus
								invoked.PrmInitializeReconSummaryRecord	= true
						invoke UpdateLineStatus each.BankStatementLine
							invoked.PrmLineStatus					= LocalLineStatus
							invoked.PrmInitializeReconSummaryRecord	= true
						invoke UnreconcileTransaction each.NonCashLedgerTransaction
						if (each.LineType.CashLedger)
							constraint (each.CashLedgerTransaction.PeriodDate	!entered)
								"Transaction:<each.TransactionNumber>ForCashCode:<each.CashCode>BankTransactionCode:<each.BankTransactionCode>HasBeenClosed;CannotReopen"
							if (each.CashLedgerTransactionDetail entered)
								invoke UpdateLineDetailStatus each.CashLedgerTransactionDetail
									invoked.PrmLineStatus				= 0 
								
							if (each.CashLedgerTransaction.Status.Reconciled)
								invoke Reconciled.ReopenFromCTMBankStatement each.CashLedgerTransaction
							else
								if (each.CashLedgerReconciliationAdjustmentRel exists)
									invoke Delete each.CashLedgerReconciliationAdjustmentRel
				if (BankStatement.StatementStatus.Reconciled)
					invoke UnreconcileStatement Reconciled BankStatement
 			
  		UpdateReconLineStatus is an Instance Action
  			default label is untranslatable
  			restricted
  			Parameters
  				PrmLineStatus 			is Numeric 1
 				PrmUnmatchTransaction	is Boolean
				
  			Action Rules
  				LineStatus	= PrmLineStatus
  				if (PrmUnmatchTransaction)
					initialize ReconMatchNumber
					initialize LineMatchField
					initialize MatchedDate
					initialize MatchedActor
					initialize MatchedManually
					include LineMatchFieldDefaulting
					include ReconciliationMatchRules
				if (TransactionAmount	!= ReconciledAmount)
					ReconciledAmount	= TransactionAmount
					if (!PrmUnmatchTransaction)
						invoke UpdateSummaryRecordAmount ReconMatchNumber



















































		ReconcileSelectedMatchedTransactions is an Instance Action
			valid when (SummaryRecordCanBeReconciled)
			Local Fields
				LocalPerformForEachLoop 			is Boolean
				LocalBankStatementReconciliation 	is a BankStatementReconciliation
			Action Rules
				if (!CashManagementAccount.AllowOneSidedReconciliations)
					if (ReconMatchNumber entered)


						constraint (ReconMatchNumber.RelatedCashTransactionDetailRel exists
						or 			instance count of ReconMatchNumber.RelatedStatementLinesByDateRel > 1)
							"CannotPerformAOneSidedReconciliation;MustHaveACorrespondingTransaction"
						if (ReconMatchNumber.RelatedCashTransactionDetailRel !exists)
							constraint (ReconMatchNumber.NetBankLineAmount !entered)
								"SelectedStatementLinesMustNetToZero"
					else
					if (SummaryRecord
					and !SelectedForReconciliation)


						constraint (RelatedCashTransactionDetailRel exists
						or 			instance count of RelatedStatementLinesByDateRel > 1)
							"CannotPerformAOneSidedReconciliation;MustHaveACorrespondingTransaction"		
						if (RelatedCashTransactionDetailRel !exists)
							constraint (NetBankLineAmount !entered)
								"SelectedStatementLinesMustNetToZero"
				if (MatchedWithBalance)
					if (last RelatedCashTransactionDetailRel.DebitCreditIndicator.Credit)		
						if (ReconciledAmount < 0
						and (ReconciledAmount *-1) > last RelatedCashTransactionDetailRel.TransactionAmount)
							LocalPerformForEachLoop = true
						else
							LocalBankStatementReconciliation = RelatedCashTransactionDetailRel.BankStatementReconciliation
					else
						if (ReconciledAmount > 0
						and ReconciledAmount > last RelatedCashTransactionDetailRel.TransactionAmount)
							LocalPerformForEachLoop = true
						else
							LocalBankStatementReconciliation = RelatedCashTransactionDetailRel.BankStatementReconciliation
					if (LocalPerformForEachLoop)
						for each RelatedCashTransactionDetailRel
							if  (ReconciledAmount < 0
							and (each.DebitCreditIndicator.Debit
							or  (ReconciledAmount *-1) < each.TransactionAmount))
								LocalBankStatementReconciliation = each.BankStatementReconciliation
								end for each
							if  (ReconciledAmount > 0
							and (each.DebitCreditIndicator.Credit
							or  ReconciledAmount < each.TransactionAmount))
								LocalBankStatementReconciliation = each.BankStatementReconciliation
								end for each
					constraint (LocalBankStatementReconciliation entered)
						"MustManuallyAdjustReconciledAmountOnOneOrMoreTransactionsForTheReconciledDifferenceOf<ReconciledAmount>"
					confirmation required
						"Transaction<LocalBankStatementReconciliation.TransactionNumber>Dated:<last RelatedCashTransactionDetailRel.TransactionDate>WillBeAdjustedForReconciledDifferenceOf:<ReconciledAmount>"
				if (LineType.Forecast)
					LineMatchField	= CashTransactionCategory
				else
					LineMatchField	= ManuallyReconciledMatchField
				invoke UpdateLineMatchField BankStatementReconciliation descendants
					invoked.PrmLineMatchField	= LineMatchField
				if (!PostStatementLine
				and ReconciledAmount entered)
					invoke UpdateReconciledAmount LocalBankStatementReconciliation
						invoked.PrmReconciledAmount	= ReconciledAmount
					initialize ReconciledAmount
				if (BankStatement !entered)
					BankStatementBeingReconciled	= last RelatedStatementLinesByDateRel.BankStatement
				invoke Reconcile
			
			Exit Rules
				if (SelectedForReconciliation)
					invoke ClearSelectedList
				if (BankStatementReconciliation	= CashManagementAccount.CurrentReconMatchNumber)
					invoke ClearCurrentReconciliationList CashManagementAccount
				if (BankStatement entered)
					if (BankStatement.StatementStatus.Unreconciled)
						invoke UpdateReconciliationStatus Unreconciled BankStatement
				else
					for each RelatedStatementLinesByDateRel
						if (each.BankStatement.StatementStatus.Unreconciled)
							invoke UpdateReconciliationStatus Unreconciled each.BankStatement
					
		UpdateReconciledAmount is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmReconciledAmount	is an InternationalAmount
			Action Rules
				if (DebitCreditIndicator.Debit)
					ReconciledAmount	-= PrmReconciledAmount
				else
					ReconciledAmount	+= PrmReconciledAmount

		Reconcile is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if ((NumberOfMatchedStatementLines	entered
				and (NumberOfMatchedStatementLines + NumberOfMatchedSystemLines) > 30)
				or  (NumberOfMatchedStatementLines	!entered
				and  instance count of BankStatementReconciliation descendants > 30))
					invoke ReconcileSetAction in background 
						invoked.PrmCashManagementGroup			= CashManagementGroup
						invoked.PrmCashManagementAccount		= CashManagementAccount
						invoked.PrmBankStatementReconciliation	= BankStatementReconciliation
						invoked.PrmReconcileDate				= TransactionDate		
						if (BankStatement entered)
							invoked.PrmBankStatement			= BankStatement
						else
						if (ContextBankStatement entered)
							invoked.PrmBankStatement			= ContextBankStatementRel.BankStatement
						else
							invoked.PrmBankStatement			= BankStatementBeingReconciled
				else
					for each BankStatementReconciliation descendants
						invoke ReconcileTransaction each
						invoke ReconcileDetailTransaction each.RelatedCashForecastDetail(CashForecastDetail)
							invoked.PrmReconciled	= true
						if (each.BankStatementLineDetail entered)
							invoke UpdateLineDetailStatus each.BankStatementLineDetail
								invoked.PrmLineStatus				= 1 
								invoked.PrmCashManagementAccount	= CashManagementAccount
								invoked.PrmReconSummaryRecord		= BankStatementReconciliation
								if (LineStatus = 2)
									invoked.PrmPendingReconcileDate = ContextBankStatementRel.StatementDate
						invoke UpdateLineStatus each.BankStatementLine
							invoked.PrmLineStatus			= 1 
							invoked.PrmReconSummaryRecord	= BankStatementReconciliation
							if (LineStatus = 2)
								invoked.PrmPendingReconcileDate	= ContextBankStatementRel.StatementDate
						invoke ReconcileTransaction each.NonCashLedgerTransaction
							if (BankStatement entered)
								invoked.PrmBankStatement	= BankStatement
							else
							if (ContextBankStatement entered)
								invoked.PrmBankStatement	= ContextBankStatementRel.BankStatement
							else
								invoked.PrmBankStatement	= BankStatementBeingReconciled
							invoked.PrmReconciledAmount		= each.ReconciledAmount
							invoked.PrmTransactionDate 		= TransactionDate	
											
						if (each.CashLedgerTransactionDetail entered)
							invoke UpdateLineDetailStatus each.CashLedgerTransactionDetail
								invoked.PrmLineStatus				= 1 
								invoked.PrmReconcileBankAmount		= each.ReconciledAmount
						
						if (each.CashLedgerTransaction entered)
							if (each.CashLedgerTransaction.Status.PendingApproval
							and each.CashLedgerTransaction.ApprovalRequestType entered)
								invoke PendingApproval.OpenToReconcile each.CashLedgerTransaction
							
							invoke Open.ReconcileFromCTMBankStatement each.CashLedgerTransaction
								if (TransactionDate entered)	
									invoked.PrmReconcileDate	= TransactionDate
								else
								if (BankStatement entered)
									invoked.PrmReconcileDate	= BankStatement.StatementDate
								else
								if (ContextBankStatement entered)
									invoked.PrmReconcileDate	= ContextBankStatementRel.StatementDate
								else
									invoked.PrmReconcileDate	= BankStatementBeingReconciled.StatementDate
								invoked.PrmReconcileBankAmount	= each.ReconciledAmount
				LineStatus	= 1 

		ReconcileSetAction is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashManagementAccount		is a CashManagementAccount
				PrmBankStatementReconciliation	is a BankStatementReconciliation
				PrmBankStatement				is a BankStatement
				PrmReconcileDate				is Date		

			Parameter Rules
				PrmCashManagementGroup			required
				PrmCashManagementAccount		required
				PrmBankStatementReconciliation	required
				PrmBankStatement				required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    ReconMatchNumber				= PrmBankStatementReconciliation)
			
			Action Rules
				Set Rules
					Exit Rules
						if (PrmBankStatement.StatementStatus.Unreconciled)		
							invoke UpdateReconciliationStatus Unreconciled PrmBankStatement

				Instance Rules
					invoke ReconcileTransaction
					invoke ReconcileDetailTransaction RelatedCashForecastDetail(CashForecastDetail)
						invoked.PrmReconciled	= true
					if (BankStatementLineDetail entered)
						invoke UpdateLineDetailStatus BankStatementLineDetail
							invoked.PrmLineStatus				= 1 
							invoked.PrmCashManagementAccount	= CashManagementAccount
							invoked.PrmReconSummaryRecord		= BankStatementReconciliation
							if (LineStatus = 2)
								invoked.PrmPendingReconcileDate = ContextBankStatementRel.StatementDate
					invoke UpdateLineStatus BankStatementLine
						invoked.PrmLineStatus			= 1 
						invoked.PrmReconSummaryRecord	= BankStatementReconciliation
						if (LineStatus = 2)
							invoked.PrmPendingReconcileDate	= ContextBankStatementRel.StatementDate
					invoke ReconcileTransaction NonCashLedgerTransaction
						invoked.PrmBankStatement	= PrmBankStatement
						invoked.PrmReconciledAmount	= ReconciledAmount		
						invoked.PrmTransactionDate	= PrmReconcileDate	
					
					if (CashLedgerTransactionDetail entered)
						invoke UpdateLineDetailStatus CashLedgerTransactionDetail
							invoked.PrmLineStatus				= 1 
							invoked.PrmReconcileBankAmount		= ReconciledAmount

					if (CashLedgerTransaction entered)
						invoke Open.ReconcileFromCTMBankStatement CashLedgerTransaction
							if (PrmReconcileDate entered)	
								invoked.PrmReconcileDate	= PrmReconcileDate	
							else
								invoked.PrmReconcileDate	= PrmBankStatement.StatementDate
							invoked.PrmReconcileBankAmount	= ReconciledAmount

		UnReconcileSetAction is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashManagementAccount		is a CashManagementAccount
				PrmBankStatementReconciliation	is a BankStatementReconciliation 
				PrmLineStatus					is Numeric 1
				PrmUnmatchTransaction			is Boolean
					
			Parameter Rules
				PrmCashManagementGroup			required
				PrmCashManagementAccount		required
				PrmBankStatementReconciliation	required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    ReconMatchNumber				= PrmBankStatementReconciliation)
			
			Action Rules
				Set Rules
					Exit Rules
						if (PrmUnmatchTransaction)				
							invoke Purge PrmBankStatementReconciliation
						if (!PrmUnmatchTransaction)				
							invoke Update PrmBankStatementReconciliation
								invoked.SelectedForReconciliation = false

				Instance Rules
					invoke UpdateReconLineStatus
						invoked.PrmLineStatus			= PrmLineStatus
						invoked.PrmUnmatchTransaction	= PrmUnmatchTransaction
					invoke ReconcileDetailTransaction RelatedCashForecastDetail(CashForecastDetail)
						invoked.PrmReconciled	= false
					if (BankStatementLineDetail entered)
						invoke UpdateLineDetailStatus BankStatementLineDetail
							invoked.PrmCashManagementAccount = CashManagementAccount
							invoked.PrmLineStatus			 = PrmLineStatus
					invoke UpdateLineStatus BankStatementLine
						invoked.PrmLineStatus	= PrmLineStatus
					invoke UnreconcileTransaction NonCashLedgerTransaction
					if (LineType.CashLedger)
						if (CashLedgerTransactionDetail entered)
							invoke UpdateLineDetailStatus CashLedgerTransactionDetail
								invoked.PrmLineStatus				= 0 

						if (CashLedgerTransaction.Status.Reconciled)
							invoke Reconciled.ReopenFromCTMBankStatement CashLedgerTransaction
						else
							if (CashLedgerReconciliationAdjustmentRel exists)
								invoke Delete CashLedgerReconciliationAdjustmentRel					        

		ReconcileTransaction is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				LineStatus			= 1 
				if (HasReconciledDifference)
					invoke UpdateIncludesReconDiffFlag ReconMatchNumber

		UpdateIncludesReconDiffFlag is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				SummaryIncludesReconDiff	= true

		UpdateLineMatchField is an Instance Action
			default label is untranslatable
			restricted
			Parameters
				PrmLineMatchField			is AlphaUpper 200
				PrmCashTransactionCategory	is a CashTransactionCategory
			
			Action Rules
				LineMatchField	= PrmLineMatchField
				if (PrmCashTransactionCategory	entered)
					CashTransactionCategory		= PrmCashTransactionCategory
					PostStatementLine		= true

		UpdateBankStatement is an Instance Action
			restricted
			Parameters
				PrmBankStatement	is a BankStatement
			Action Rules
				BankStatement	= PrmBankStatement



		UpdateInterfacedCBTransactions is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
  				PrmBankStatement			is a BankStatement
				PrmMassStatementLoad		is Boolean
				PrmMassAccountLoad			is Boolean
				
			Parameter Rules
				PrmCashManagementGroup		required
				PrmCashManagementAccount	required
			
			Local Fields
  				BackgroundGroup				is AlphaUpper up to 50
  				
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashManagementAccount	= PrmCashManagementAccount
				and    LineStatus.Unreconciled
				and    LineType.CashLedger)

			
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus

			Action Rules
				Empty Set Rules
					if (PrmBankStatement entered)
						increment PrmBankStatement.CompletedReconLoadProcesses
						if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
							if (PrmMassStatementLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
							invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
								invoked.PrmCashManagementGroup		= PrmCashManagementGroup
								invoked.PrmCashManagementAccount	= PrmCashManagementAccount
								invoked.PrmBankStatement			= PrmBankStatement
					else
						increment PrmCashManagementAccount.CompletedReconLoadProcesses
						if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
							if (PrmMassAccountLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
							invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
								invoked.PrmMassAccountLoad	= PrmMassAccountLoad
								
				Set Rules
					Exit Rules
						if (PrmBankStatement entered)
							increment PrmBankStatement.CompletedReconLoadProcesses
							if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
								if (PrmMassStatementLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
								invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
									invoked.PrmCashManagementGroup		= PrmCashManagementGroup
									invoked.PrmCashManagementAccount	= PrmCashManagementAccount
									invoked.PrmBankStatement			= PrmBankStatement
						else
							increment PrmCashManagementAccount.CompletedReconLoadProcesses
							if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
								if (PrmMassAccountLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
								invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
									invoked.PrmMassAccountLoad	= PrmMassAccountLoad
									
				Instance Rules
					if (LineMatchField !entered)
						include ReconciliationMatchRules
						
					if (LineType.CashLedger
					and !CashLedgerTransaction.Status.Open)
						if (ReconMatchNumber entered)
							invoke UnselectTransaction
						invoke Purge						






		ProcessMatchRulesForBlankLineMatchField is a Set Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
  				PrmBankStatement			is a BankStatement
				PrmMassStatementLoad		is Boolean
				PrmMassAccountLoad			is Boolean
				
			Parameter Rules
				PrmCashManagementGroup		required
				PrmCashManagementAccount	required
			
			Local Fields
  				BackgroundGroup				is AlphaUpper up to 50
  				
			Instance Selection
				where (CashManagementGroup		= PrmCashManagementGroup
				and    CashManagementAccount	= PrmCashManagementAccount
				and    LineMatchField !entered
				and    !SummaryRecord
				and    !PostStatementLine
				and    LineStatus.Unreconciled
				and    !LineType.Forecast
				and    PrmBankStatement			= PrmBankStatement) 

			Sort Order
				CashManagementGroup
				CashManagementAccount
				SummaryRecord
				LineMatchField

			Action Rules
				Empty Set Rules
					if (PrmBankStatement entered)
						increment PrmBankStatement.CompletedReconLoadProcesses
						if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
							if (PrmMassStatementLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
							invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
								invoked.PrmCashManagementGroup		= PrmCashManagementGroup
								invoked.PrmCashManagementAccount	= PrmCashManagementAccount
								invoked.PrmBankStatement			= PrmBankStatement
					else
						increment PrmCashManagementAccount.CompletedReconLoadProcesses
						if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
							if (PrmMassAccountLoad)
								BackgroundGroup = PrmCashManagementGroup + current corporate date
							else
								BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
							invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
								invoked.PrmMassAccountLoad	= PrmMassAccountLoad
								
				Set Rules
					Exit Rules
						if (PrmBankStatement entered)
							increment PrmBankStatement.CompletedReconLoadProcesses
							if (PrmBankStatement.CompletedReconLoadProcesses = PrmBankStatement.TotalReconciliationProcesses)
								if (PrmMassStatementLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
								invoke ReconcileStatementLines BankStatementReconciliation in background group(BackgroundGroup)
									invoked.PrmCashManagementGroup		= PrmCashManagementGroup
									invoked.PrmCashManagementAccount	= PrmCashManagementAccount
									invoked.PrmBankStatement			= PrmBankStatement
						else
							increment PrmCashManagementAccount.CompletedReconLoadProcesses
							if (PrmCashManagementAccount.CompletedReconLoadProcesses = PrmCashManagementAccount.TotalReconciliationProcesses)
								if (PrmMassAccountLoad)
									BackgroundGroup = PrmCashManagementGroup + current corporate date
								else
									BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + current corporate date
								invoke ReconcileStatementLines PrmCashManagementAccount in background group(BackgroundGroup)
									invoked.PrmMassAccountLoad	= PrmMassAccountLoad
									
				Instance Rules
					include ReconciliationMatchRules


		ReconcileStatementLines is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashManagementAccount		is a CashManagementAccount
				PrmBankStatement				is a BankStatement
				PrmMassReconcile				is Boolean

			Local Fields
				LocalReconMatchNumber			is a BankStatementReconciliation view
					do not save in checkpoint
				LocalReconciliationNumber		is a BankStatementReconciliation
  				BackgroundGroup					is AlphaUpper up to 50
				LocalAlwaysReconcile			is Boolean
				LocalTransactionDate			is Date	
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    LineStatus.Unreconciled
				and    LineMatchField				entered
				and    ReconMatchNumber				!entered
				and  ((BankStatement				entered
				and    BankStatement				= PrmBankStatement)
				or     BankStatement				!entered)
				and    !SummaryRecord
				and    !ReconcileByAmount
				and    !CashTransactionCategory.UncategorizedCategory
				and    PrmBankStatement 			= PrmBankStatement) 
			
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus
				PostStatementLine
				LineMatchField
				LineType 	
				Function
				BankStatementReconciliation

  			Accumulators
				NetReconciledAmount
				NetSecondaryReconciledAmount
				NumberOfStatementLines
				NumberOfSystemLines
				
			Action Rules
				Empty Set Rules

					if (PrmMassReconcile)
						BackgroundGroup = PrmCashManagementGroup + current corporate date
					else
						BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
					invoke ReconcileLinesByAmount in background group(BackgroundGroup)
						invoked.PrmCashManagementGroup		= PrmCashManagementGroup
						invoked.PrmCashManagementAccount	= PrmCashManagementAccount
						invoked.PrmBankStatement			= PrmBankStatement
					if (PrmMassReconcile)
						invoke ReconcileNextBankStatement PrmBankStatement
				
					if (PrmBankStatement.StatementStatus.Unreconciled)
						invoke UpdateReconciliationStatus Unreconciled PrmBankStatement
					
				Set Rules
					Entrance Rules

						if (PrmMassReconcile)
							BackgroundGroup = PrmCashManagementGroup + current corporate date
						else
							BackgroundGroup = PrmCashManagementGroup + PrmCashManagementAccount + PrmBankStatement
						invoke ReconcileLinesByAmount in background group(BackgroundGroup)
							invoked.PrmCashManagementGroup		= PrmCashManagementGroup
							invoked.PrmCashManagementAccount	= PrmCashManagementAccount
							invoked.PrmBankStatement			= PrmBankStatement

					Exit Rules
						if (PrmBankStatement.StatementStatus.Unreconciled)
							invoke UpdateReconciliationStatus Unreconciled PrmBankStatement
						if (PrmMassReconcile)
							invoke ReconcileNextBankStatement PrmBankStatement
				
				LineMatchField Set Rules
					Entrance Rules
						initialize LocalReconMatchNumber
						initialize LocalReconciliationNumber
						initialize LocalAlwaysReconcile
						
					Exit Rules
						increment LocalReconciliationNumber.NumberOfMatchedStatementLines by NumberOfStatementLines
						increment LocalReconciliationNumber.NumberOfMatchedSystemLines by NumberOfSystemLines

						if (LocalTransactionDate entered )
							invoke UpdateLocalReconciliationNumber LocalReconciliationNumber
								invoked.PrmTransactionDate = LocalTransactionDate
								 						






						if (LocalReconciliationNumber.NumberOfMatchedStatementLines	>= 1
						and LocalReconciliationNumber.NumberOfMatchedSystemLines !entered
						and !LocalAlwaysReconcile)
							invoke UnmatchSelectedTransactions LocalReconciliationNumber
						else	
							invoke ReconcileWithinTolerance LocalReconciliationNumber
								invoked.PrmNetReconciledAmount			= NetReconciledAmount
								invoked.PrmNetSecondaryReconciledAmount	= NetSecondaryReconciledAmount
								invoked.PrmBankStatement                = PrmBankStatement
							
				Instance Rules
					if (LocalReconciliationNumber entered)
						if (LineType.Statement	
						and TransactionDate > LocalReconciliationNumber.TransactionDate)
							LocalTransactionDate = TransactionDate
						ReconMatchNumber	= LocalReconciliationNumber
						LineStatus			= LocalReconciliationNumber.LineStatus
						MatchedDate			= current timestamp
						MatchedActor		= actor
						if (LineStatus.Pending)
							PendingStatementLine = true
						else
							PendingStatementLine = false
					else
						if (UnreconciledMatchedTransactionsRel exists)
							LocalReconciliationNumber = last UnreconciledMatchedTransactionsRel.ReconMatchNumber
						else
							if ((LineType.Statement
							or   Function.Void)
							and (instance count of LineMatchFieldRel > 1
							or   CashTransactionCategory.AlwaysReconcile))
								initialize LocalReconMatchNumber
								invoke Create
									assign result to LocalReconMatchNumber
									invoked.CashManagementGroup			= CashManagementGroup
									invoked.CashManagementAccount		= CashManagementAccount
									invoked.LineMatchField				= LineMatchField
									invoked.BankStatement				= PrmBankStatement
									invoked.CashCode					= CashCode
									invoked.PostStatementLine			= PostStatementLine
									invoked.SummaryRecord				= true
									invoked.BankReconciliationMatchRule = BankReconciliationMatchRule
									invoked.TransactionDate				= TransactionDate	
									if (PostStatementLine)
										invoked.CashTransactionCategory	= CashTransactionCategory
										invoked.PostStatementLine		= true
								
								LocalReconciliationNumber	= LocalReconMatchNumber.BankStatementReconciliation
								if (CashTransactionCategory.AlwaysReconcile)
									LocalAlwaysReconcile = true
						ReconMatchNumber	= LocalReconciliationNumber
						LineStatus			= LocalReconciliationNumber.LineStatus
						MatchedDate			= current timestamp
						MatchedActor		= actor
						if (LineStatus.Pending)
							PendingStatementLine = true
						else
							PendingStatementLine = false

					if (ReconMatchNumber entered)
						if (LineType.Statement)
							NetReconciledAmount					+= SignedAmount
							NetSecondaryReconciledAmount		+= SignedAmount
							NumberOfStatementLines				+= 1
						else
							NumberOfSystemLines 				+= 1
							if (SecondaryReconTransaction)
								NetSecondaryReconciledAmount	-= SignedAmount	
							else
								NetReconciledAmount				-= SignedAmount	
	
							if (!SummaryRecord
							and BankReconciliationMatchRule entered)
								if (BankReconciliationMatchRule.UseDayLag)
									LocalMatchRuleDateRange.Begin = PrmBankStatement.StatementDate - BankReconciliationMatchRule.DayLag as days
									LocalMatchRuleDateRange.End = PrmBankStatement.StatementDate + BankReconciliationMatchRule.FutureDay as days
								else
									LocalMatchRuleDateRange.Begin = PrmBankStatement.StatementDate - 7300 days 	
									LocalMatchRuleDateRange.End = PrmBankStatement.StatementDate + 7300 days	
								
								if (!TransactionDate within LocalMatchRuleDateRange) 
									initialize ReconMatchNumber
									initialize MatchedDate
									initialize MatchedActor
									NumberOfSystemLines 				-= 1
									if (SecondaryReconTransaction)
										NetSecondaryReconciledAmount	+= SignedAmount	
									else
										NetReconciledAmount				+= SignedAmount	

		ReconcileLinesByAmount is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmCashManagementAccount		is a CashManagementAccount
				PrmBankStatement				is a BankStatement

			Local Fields
				LocalReconcileByAmount			is a ReconcileByAmount
				LocalTransactionCounter			is Numeric 5
				LocalTransactionLineTotal		is an InternationalAmount
				LocalFieldsUpdated				is Boolean
				LocalHasRelatedSystemLines		is Boolean
				LocalMatchedFlag				is Boolean

			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    LineStatus.Unreconciled
				and    ReconMatchNumber				!entered
				and    BankStatement				= PrmBankStatement
				and    !SummaryRecord
				and    ReconcileByAmount
				and    !CashTransactionCategory.UncategorizedCategory)
			
			Sort Order
				CashManagementGroup
				CashManagementAccount
				LineStatus
				ReconcileByAmount
				BankReconciliationMatchRule
				TransactionAmount
				BankStatementReconciliation

  			Accumulators
				
			Action Rules
				Set Rules
					Exit Rules
						if (PrmBankStatement.StatementStatus.Unreconciled)
							invoke UpdateReconciliationStatus Unreconciled PrmBankStatement
							
				BankReconciliationMatchRule Set Rules
					Entrance Rules
						initialize LocalTransactionCounter
						initialize LocalTransactionLineTotal
						initialize LocalReconcileByAmount
						initialize LocalFieldsUpdated
						initialize LocalHasRelatedSystemLines
						
					Exit Rules
						if (LocalHasRelatedSystemLines)
							LocalReconcileByAmount.NumberOfStatementRecords		= LocalTransactionCounter

							invoke ReconcileByAmountAction PrmBankStatement
								invoked.PrmReconcileByAccount	= LocalReconcileByAmount
							
				Instance Rules
					if (!LocalFieldsUpdated)
						LocalFieldsUpdated								= true
						LocalReconcileByAmount.ReconciliationMatchType	= BankReconciliationMatchRule.MatchType


						if (BankReconciliationMatchRule.UseDayLag)
							LocalFromTransactionDate					= BankStatement.StatementDate - BankReconciliationMatchRule.DayLag as days
							LocalToTransactionDate						= BankStatement.StatementDate + BankReconciliationMatchRule.FutureDay as days
						else
							LocalFromTransactionDate					= BankStatement.StatementDate - 7300 days 	
							LocalToTransactionDate						= BankStatement.StatementDate + 7300 days	
						if (BankReconciliationMatchRule.MatchType.ManyToOne		
						or  BankReconciliationMatchRule.MatchType.ManyToMany)	
							if (ReconcileByAmountByStatementRel	exists)
								for each ReconcileByAmountByStatementRel
									LocalTransactionCounter		+= 1
									LocalReconcileByAmount.StatementLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].ReconciliationAmount		= each.TransactionAmount
									LocalReconcileByAmount.StatementLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].BankStatementReconciliation	= each.BankStatementReconciliation
								LocalReconcileByAmount.NumberOfStatementRecords	= LocalTransactionCounter 
								initialize LocalTransactionCounter
							if (ReconcileByAmountByTransaction2Rel	exists)
								LocalHasRelatedSystemLines		= true	
								for each ReconcileByAmountByTransaction2Rel
									LocalTransactionCounter		+= 1
									LocalTransactionLineTotal	+= each.TransactionAmount
									LocalReconcileByAmount.TransactionLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].ReconciliationAmount		= each.TransactionAmount
									LocalReconcileByAmount.TransactionLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].BankStatementReconciliation	= each.BankStatementReconciliation
								LocalReconcileByAmount.TransactionLineTotal			= LocalTransactionLineTotal
								LocalReconcileByAmount.NumberOfTransactionRecords	= LocalTransactionCounter 
								initialize LocalTransactionCounter
						else
							if (ReconcileByAmountByTransactionRel	exists)
								LocalHasRelatedSystemLines		= true	
								for each ReconcileByAmountByTransactionRel
									LocalTransactionCounter		+= 1
									LocalTransactionLineTotal	+= each.TransactionAmount
									LocalReconcileByAmount.TransactionLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].ReconciliationAmount		= each.TransactionAmount
									LocalReconcileByAmount.TransactionLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].BankStatementReconciliation	= each.BankStatementReconciliation
								LocalReconcileByAmount.TransactionLineTotal			= LocalTransactionLineTotal
								LocalReconcileByAmount.NumberOfTransactionRecords	= LocalTransactionCounter 
								initialize LocalTransactionCounter

					if (LocalHasRelatedSystemLines)
						LocalTransactionCounter	+= 1
						if (BankReconciliationMatchRule.MatchType.OneToOne		
						or  BankReconciliationMatchRule.MatchType.OneToMany)
							LocalReconcileByAmount.StatementLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].ReconciliationAmount			= TransactionAmount
							LocalReconcileByAmount.StatementLineOccurs.StatementReconciliationAmount[LocalTransactionCounter].BankStatementReconciliation	= BankStatementReconciliation
					

		UpdateLocalReconciliationNumber is an Instance Action	
			default label is untranslatable
			restricted
			Parameters
				PrmTransactionDate is Date
			Action Rules
				TransactionDate	= PrmTransactionDate
				
 		UpdateReconMatchNumber is an Instance Action
 			default label is untranslatable
 			restricted
 			Parameters
 				PrmReconMatchNumber	is a BankStatementReconciliation
 				
 			Action Rules
 				ReconMatchNumber	= PrmReconMatchNumber
				MatchedDate			= current timestamp
				MatchedActor		= actor
				MatchedManually		= true
 				invoke Update BankStatementLine
 					invoked.ReconSummaryRecord	= PrmReconMatchNumber
 
 		UnmatchSelectedTransactions is an Instance Action
 			valid when (CanUnmatchSelectedTransactions)
 			Local Fields
 				LocalPurgeTransaction	is Boolean	
 			Action Rules
 				if (!LineStatus.Unreconciled)
					if (instance count of BankStatementReconciliation descendants <= 30)
						LocalPurgeTransaction	= true	
 					invoke UnreconcileMatchedTransactions
 						invoked.PrmUnmatchTransaction	= true
 				else
 					LocalPurgeTransaction	= true
					for each BankStatementReconciliation descendants
						invoke UpdateBypassRules each
							initialize invoked.ReconMatchNumber
							initialize invoked.LineMatchField
							initialize invoked.MatchedDate
							initialize invoked.MatchedActor
							initialize invoked.MatchedManually
			Exit Rules
				if (LocalPurgeTransaction)
					invoke Purge 
 
  		UnmatchAndMarkPendingAsUnreconciled is an Instance Action
  			confirmation required
 			valid when (CanUnmatchPendingTransactions)
 			Action Rules
				for each BankStatementReconciliation descendants
					if (each.BankStatementLine.BankStatement.StatementStatus.Reconciled)
						invoke UnreconcileStatement Reconciled each.BankStatementLine.BankStatement
					if (each.BankStatementLineDetail entered)
						invoke UpdateLineDetailStatus each.BankStatementLineDetail
							invoked.PrmCashManagementAccount 		= CashManagementAccount
							invoked.PrmLineStatus					= 0 
							invoked.PrmInitializeReconSummaryRecord	= true
					invoke UpdateLineStatus each.BankStatementLine
						invoked.PrmLineStatus					= 0 
						invoked.PrmInitializeReconSummaryRecord	= true
					invoke UpdateBypassRules each
						invoked.LineStatus		= 0 
						initialize invoked.ReconMatchNumber
						initialize invoked.LineMatchField
						initialize invoked.MatchedDate
						initialize invoked.MatchedActor
						initialize invoked.MatchedManually
			Exit Rules
				invoke Purge 
 
		UnmatchMatchedSummaryTransactions is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
				PrmBankStatement			is a BankStatement
					
			Parameter Rules
				PrmCashManagementAccount	required
				PrmBankStatement			required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    BankStatement				= PrmBankStatement
				and   (SummaryRecord
				or     LineStatus.Pending))
			
			Action Rules
				Instance Rules
					if (LineStatus.Pending)
						invoke UnselectTransaction
					else
						invoke UnmatchSelectedTransactions

		DeleteOpenTransactionLines is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
				
			Parameter Rules
				PrmCashManagementAccount	required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    LineType						> 1
				and    ReconMatchNumber				!entered
				and    !SelectedForReconciliation
				and    !SummaryRecord
				and    LineStatus.Unreconciled)
			
			Action Rules
				Instance Rules
					invoke Purge 

		DeleteStatementReconciliationDetails is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
				PrmBankStatement			is a BankStatement
					
			Parameter Rules
				PrmCashManagementAccount	required
				PrmBankStatement			required
				
			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    BankStatement				= PrmBankStatement)
			
			Action Rules
				Instance Rules
					invoke Purge


  		Create is a Create Action
  			restricted
			Exit Rules
  				include ReconciliationMatchRules

  		CreateFromCashLedgerTransactionRelease is a Create Action
  			default label is untranslatable
  			restricted

			Local Fields
				LocalReconMatchNumber is a BankStatementReconciliation view

  			Exit Rules
  				if (CreatedFromBankStatementLineRel exists)
					invoke Create
						assign result to LocalReconMatchNumber
						invoked.CashManagementGroup			= CashManagementGroup
						invoked.CashManagementAccount		= CashManagementAccount
						invoked.LineMatchField				= LineMatchField
						invoked.BankStatement				= CreatedFromBankStatementLineRel.BankStatement
						invoked.CashTransactionCategory		= CreatedFromBankStatementLineRel.CashTransactionCategory
						invoked.CashCode					= CreatedFromBankStatementLineRel.CashCode
						invoked.ReconciledAmount			= SignedAmount
						invoked.PostStatementLine			= false
						invoked.SummaryRecord				= true
						invoked.LineStatus					= 1 
					ReconMatchNumber		= LocalReconMatchNumber.BankStatementReconciliation		
					LineStatus				= 1 
					MatchedDate				= current timestamp
					MatchedActor			= actor

					invoke UpdateCreatedFromStatementLine CreatedFromBankStatementLineRel
						invoked.PrmReconMatchNumber	= ReconMatchNumber
						invoked.PrmLineMatchField	= LineMatchField







					invoke Open.ReconcileFromCTMBankStatement CashLedgerTransaction
						invoked.PrmReconcileDate		= TransactionDate
						invoked.PrmReconcileBankAmount	= ReconciledAmount
					
					invoke UpdateLineStatus CreatedFromBankStatementLineRel.BankStatementLine
						invoked.PrmLineStatus			= 1 
						invoked.PrmReconSummaryRecord	= ReconMatchNumber
					
					if (CreatedFromBankStatementLineRel.BankStatement.StatementStatus.Unreconciled)
						invoke UpdateReconciliationStatus Unreconciled CreatedFromBankStatementLineRel.BankStatement
  					
 		UpdateCreatedFromStatementLine is an Instance Action
 			default label is untranslatable
 			restricted
 			Parameters
 				PrmReconMatchNumber	is a BankStatementReconciliation
 				PrmLineMatchField	is AlphaUpper 200 
 			Action Rules
 				ReconMatchNumber	= PrmReconMatchNumber
				LineMatchField		= PrmLineMatchField
				MatchedDate			= current timestamp
				MatchedActor		= actor
				LineStatus			= 1 
 
 		UpdateTransactionNumber is an Instance Action	
			default label is untranslatable
			restricted
			refresh and lock this instance
			Parameters
 				PrmTransactionNumber	is like TransactionNumber
			Action Rules
				TransactionNumber = PrmTransactionNumber
				if (LineStatus.Unreconciled)
					initialize LineMatchField
					include ReconciliationMatchRules
				 					
  		Update is an Update Action
			Field Rules
				LineMatchField
					if (LineType.Forecast
					or (SummaryRecord
					and PostStatementLine))
						cannot be changed
							"CannotChangeLineMatchFieldOnForecastReconciliations"
					if (LineStatus.Reconciled)
						cannot be changed
							"CannotChangeLineMatchFieldOnReconciledTransactions"
				LineType
					cannot be changed
				BankStatementLine
					cannot be changed
				NonCashLedgerTransaction
					cannot be changed
				RelatedCashForecastDetail
					cannot be changed
				CashCode
					cannot be changed
				BankTransactionCode	
					cannot be changed
				CashLedgerTransaction
					cannot be changed




				TransactionDate
					cannot be changed
				TransactionAmount
				ReconciledAmount
					if (LineType.Summary
					or  LineType.Statement
					or  LineType.Forecast)
						cannot be changed
							"CannotChangeReconciliationAmountFor<LineType>Transactions"
				DebitCreditIndicator
					cannot be changed
				SignedAmount
					cannot be changed
				Description
					cannot be changed








				PostingYear
					cannot be changed
				PostingPeriod
					cannot be changed
				SystemCode
					cannot be changed


				Reference
					cannot be changed












				SummaryRecord
					cannot be changed
				CashTransactionCategory
					if (RelatedCashForecastDetail entered)
						cannot be changed



			Exit Rules
				if (CashTransactionCategory changed)
					invoke Update BankStatementLine
						invoked.CashTransactionCategory	= CashTransactionCategory
				if (LineMatchField !entered)
  					include ReconciliationMatchRules
				
		UpdateComment is an Update Action
			valid when (SummaryRecord)
			Field Rules
				LineMatchField
					cannot be changed
				ReconciledAmount
					cannot be changed

 		UpdateTransactionAmount	is an Update Action
 			default label is untranslatable
 			restricted

 		UpdateCashTransactionCategory is an Update Action
 			default label is untranslatable
 			restricted
  		
 		UpdateReferenceOrDescription is an Update Action	
 			default label is untranslatable
 			restricted
 			Exit Rules
 				if (ReconMatchNumber !entered)
 					initialize LineMatchField
					include LineMatchFieldDefaulting
					include ReconciliationMatchRules

		UpdateBypassRules is an Update Action
			default label is untranslatable
			restricted
			bypass field rules
			Exit Rules
				if (LineMatchField !entered)
					include LineMatchFieldDefaulting
					include ReconciliationMatchRules
				

  		Delete is a Delete Action
  			restricted
			Entrance Rules
				if (BankStatementLineDetail entered)
 					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmCashManagementAccount 		= CashManagementAccount
						invoked.PrmLineStatus					= 0 
						invoked.PrmInitializeReconSummaryRecord	= true
						invoked.PrmInitializeReconIdentifier	= true
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus					= 0 
					invoked.PrmInitializeReconSummaryRecord	= true
					invoked.PrmInitializeReconIdentifier	= true
 
  		Purge is a Purge Action
			disable archiving and propagate
  			restricted
  			Local Fields
  				
			Entrance Rules
				if (BankStatementLineDetail entered)
					invoke UpdateLineDetailStatus BankStatementLineDetail
						invoked.PrmCashManagementAccount 		= CashManagementAccount
						invoked.PrmLineStatus					= 0 
						invoked.PrmInitializeReconSummaryRecord	= true
						invoked.PrmInitializeReconIdentifier	= true
				invoke UpdateLineStatus BankStatementLine
					invoked.PrmLineStatus					= 0 
					invoked.PrmInitializeReconSummaryRecord	= true
					invoked.PrmInitializeReconIdentifier	= true
					
		PurgeInternal is a Purge Action
			restricted
			
			

		UpdateReconciledPendingBankTransactions is a Set Action
			restricted
			Parameters
				CashManagementGroup
				
			Parameter Rules
				CashManagementGroup
					required
					
			Instance Selection
				where (CashManagementGroup = CashManagementGroup
				and    SummaryRecord
				and    LineStatus.Reconciled)
			
			Action Rules
				Instance Rules
					if (MultipleStatementReconciliationRel exists)
						PendingStatementLine = true
						invoke Update BankStatementReconciliation descendants
							invoked.PendingStatementLine = true










		UpdateCashLedgerSourceRecord is an Instance Action		
			restricted
			Parameters
				PrmCashLedgerSourceRecord	is a CashLedgerSourceRecord

			Action Rules								
				CashLedgerSourceRecord	= PrmCashLedgerSourceRecord


		UpdateDetailsWithUpdatedTemplate is a Set Action	
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmCashManagementAccount	is a CashManagementAccount
					
			Sort Order
				CashManagementGroup
				CashManagementAccount

			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    CashManagementAccount		= PrmCashManagementAccount
				and    !SummaryRecord
				and    ReconMatchNumber 			!entered)
			
			Action Rules
				Instance Rules
					invoke Update
						initialize invoked.TemplateMatchField
						initialize invoked.LineMatchField
						
		UpdateReconcileByAmount is a Set Action
			default label is untranslatable
			restricted
			Parameters
				PrmCashManagementGroup			is a CashManagementGroup
				PrmBankReconciliationMatchRule	is a BankReconciliationMatchRule
				PrmReconcileByAmountToBeUpdated is Boolean
					
			Sort Order is ByBankReconciliationMatchRule

			Instance Selection
				where (CashManagementGroup			= PrmCashManagementGroup
				and    BankReconciliationMatchRule	= PrmBankReconciliationMatchRule
				and    ReconcileByAmount 			= PrmReconcileByAmountToBeUpdated
				and    LineStatus 				   != 2 
				and	  !ReconMatchNumber entered)
			
			Action Rules
				Instance Rules
					invoke UpdateBypassRules
						if (PrmReconcileByAmountToBeUpdated)	
							invoked.ReconcileByAmount = false
						if (!PrmReconcileByAmountToBeUpdated)	
							invoked.ReconcileByAmount = true	
							
							
		BankStatementReconciliationPurge is a Set Action
			restricted
			Parameters
				PrmCashManagementGroup       is a CashManagementGroup
				PrmCashManagementAccount	 is a CashManagementAccount
				PrmBankStatementReconciliationCutOffDate   is Date
				
			Parameter Rules
			
			Local Fields
				LocalBankStatement	is a BankStatement
				LocalReconciledDate	is Date			
			
			Sort Order is ByAccountSummaryRecord	
			
			Instance Selection
				where (CashManagementGroup	=  PrmCashManagementGroup
				and    CashManagementAccount	=  PrmCashManagementAccount
				and    LineStatus.Reconciled
				and    TransactionDate		<= PrmBankStatementReconciliationCutOffDate)
			
			Action Rules
				Instance Rules
					if (SummaryRecord)
						if (BankStatement entered)
							LocalBankStatement	= BankStatement
						else
							LocalBankStatement	= last RelatedStatementLinesByDateRel.BankStatement
						if (TransactionDate entered)
							LocalReconciledDate	= TransactionDate
						else
							LocalReconciledDate	= last RelatedStatementLinesByDateRel.BankStatement
					else
						if (ReconMatchNumber.BankStatement entered)
							LocalBankStatement	= ReconMatchNumber.BankStatement
						else
							LocalBankStatement	= ReconMatchNumber.last RelatedStatementLinesByDateRel.BankStatement					
						if (ReconMatchNumber.TransactionDate entered)
							LocalReconciledDate	= ReconMatchNumber.TransactionDate
						else
							LocalReconciledDate	= LocalBankStatement.StatementDate
					if ((LocalBankStatement.StatementStatus.Closed
					or LocalBankStatement not exists)
					and LocalReconciledDate  <= PrmBankStatementReconciliationCutOffDate
					and (!SummaryRecord
					or  (SummaryRecord
					and  !BankStatementReconciliation descendants exist)))
						invoke PurgeInternal
