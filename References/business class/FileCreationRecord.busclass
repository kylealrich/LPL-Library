FileCreationRecord is a BusinessClass
    owned by filecreation
    prefix is FCREC

    Patterns
        disable EffectiveDated
        disable AsOfDateProcessing
        disable Auditing

    Persistent Fields
    	FinanceEnterpriseGroup		
    	FileCreationSetup
  			delete cascades
		Key1						is Alpha 40
		Key2						is Alpha 40
		Key3						is Alpha 40
		Key4						is Alpha 40
		Key5						is Alpha 40
		Key6						is Alpha 40
		Key7						is Alpha 30
		Key8						is Alpha 30
		Key9						is Alpha 30
		Key10						is Alpha 70
		Key11						is Alpha 30
		SystemTimeStamp				is TimeStamp
		TransactionId				is Numeric 13
		SortKey						is Alpha 240
		SortThreadKey				is Alpha 240
		EffectiveDate				is Date
		RunSystemTimeStamp			is TimeStamp
		RunSequenceNumber			is Numeric 4
        Status 						is Numeric 1
            States
 				NotProcessed			value is 1
				Error					value is 2			
				Processed				value is 3
		Message						is Text
		DetailedMessage				is RichText
		ActionTag					is Text
		InitiatingAction			is Text
		AllChangedFields			is Text
			default label is "ChangedFields"
		ThreadingKey				is Numeric 8
		PreviewText 				is Text
		

	Local Fields
		I1									is Numeric 4
		I2									is Numeric 4
		I3									is Numeric 4
		I4									is Numeric 4
		I5 									is Numeric 5
		TempText							is Text	
		DerivedTempText						is Text 
		LocalOverallText					is Text 
		FileCreationAlphaArray
		TopLevelAlphaArray					is a FileCreationAlphaArray 
		AlphaArrayIterator					is Numeric 5
		LocalFinanceEnterpriseGroup			is like FinanceEnterpriseGroup
		RelatedField						is Alpha 200
			is related value for "FileCreationRecord"
		RelatedComparedToField				is Alpha 200
			is related value for "FileCreationRecord"
		LocalAlpha							is Alpha 300
		LocalAlphaLengthCompare             is Numeric 4
		LocalAlphaDataMapping				is Alpha 301
		LocalAlphaToIterate					is Alpha 10000
		LocalAlphaIterator					is Numeric 5
		LocalDate							is Date
		LocalDecimal						is Decimal 24.8
		LocalNumeric						is Numeric 17
		LocalTime							is Time
		LocalText							is Text
		LocalTextDataMapping				is Text
		LocalNewText						is Text
		LocalOverallNewText					is Text 
		LocalBoolean						is Boolean
		LocalTimeStamp						is TimeStamp
		LocalJavaFormat						is Alpha 40
		LocalRowOrder						is Numeric 4
		LocalColumnOrder					is Numeric 4
		NotFirstRecord						is Boolean	
		LocalDistributionNumber 			is Numeric size 2
		LocalSequenceNumber					is Numeric size 4
		LocalFileCreationSetup				is a FileCreationSetup
		ColumnFileCreationSetup				is like FileCreationSetup
		ExtendedFileCreationSetup			is like FileCreationSetup
		HoldFileCreationSetup				is a FileCreationSetup
		LocalFileCreationRowDetail			is a FileCreationRowDetail
			context of LocalFileCreationSetup
		ColumnFileCreationRowDetail			is like FileCreationRowDetail
		ExtendedFileCreationRowDetail		is like FileCreationRowDetail
		LocalFileCreationColumnDetail		is like FileCreationColumnDetail
		LocalHighEndPosition				is Numeric 5

		NotFirst					is Boolean		
		IsHeader					is Boolean
		IsTrailer					is Boolean
		CurrentSystemTimeStamp		is TimeStamp
		ArrayIndex					is Numeric 4	
		StartIndex					is Numeric 4	
		EndIndex					is Numeric 4	
		LastRowOrder				is Numeric 4	
		OneToManySequence			is Numeric 3
		HoldOneToManySequence		is Numeric 3
		RecordCount1				is Numeric 12
		RecordCount2				is Numeric 12
		RecordCount3				is Numeric 12
		RecordCount4				is Numeric 12
		RecordCount5				is Numeric 12
		RecordCount6				is Numeric 12
		PendingRecordCount1			is Numeric 12
		PendingRecordCount2			is Numeric 12
		PendingRecordCount3			is Numeric 12
		PendingRecordCount4			is Numeric 12
		PendingRecordCount5			is Numeric 12
		PendingRecordCount6			is Numeric 12
		HoldPendingRecordCount1		is Numeric 12
		HoldPendingRecordCount2		is Numeric 12
		HoldPendingRecordCount3		is Numeric 12
		HoldPendingRecordCount4		is Numeric 12
		HoldPendingRecordCount5		is Numeric 12
		HoldPendingRecordCount6		is Numeric 12
		HoldRecordCount1			is Numeric 12
		HoldRecordCount2			is Numeric 12
		HoldRecordCount3			is Numeric 12
		HoldRecordCount4			is Numeric 12
		HoldRecordCount5			is Numeric 12
		HoldRecordCount6			is Numeric 12
		TotalRowCount				is Numeric 12
		HoldTotalRowCount			is Numeric 12
		FileCreationRecordCountArray
		FileText					is Text
		RequiredFields				is Numeric 1	
			States
				None			value is 0
				AtLeastOne		value is 1
				All				value is 2
		AtLeastOneFieldEntered		is Boolean
		AtLeastOneFieldChanged		is Boolean
		FileView					is a FileCreationFile view
		SequenceNumber				is Numeric 4
		ChangedFieldsLocal			is Text
		ChangedFieldsArray			is a AllChangedFieldsArray
		SavedFieldRelation			is Alpha 200
		OTMChangedFieldsArray		is a AllChangedFieldsArray
		IncludedFieldArraySize		is Numeric 4 
		OneToManyCount				is Numeric 4
		LocalActionTag				is Text
		LocalChangedFields			is Text
		LocalInitiatingAction		is Text
		LocalKey2					is Alpha 20
		LocalKey3					is Alpha 20
		LocalKey4					is Alpha 20
		LocalKey5					is Alpha 20
		LocalKey6					is Alpha 20
		PreviewRecord				is Boolean
		LocalCurrentDate			is Date
		ConditionMet				is Boolean
		ConditionMet1				is Boolean
		ConditionMet2				is Boolean
		AllConditionsMet			is Boolean
		LocalCompareAlpha			is Alpha 150
		LocalCompareDate			is Date
		LocalCompareDecimal			is Decimal 24.8
		LocalCompareNumeric			is Numeric 17
		LocalCompareTime			is Time
		LocalCompareText			is Text
		LocalCompareBoolean			is Boolean
		LocalCompareOperator		is a CompareOperator
		LocalCompareTimeStamp		is TimeStamp
		LocalCompareType			is Numeric 1
			States
				Literal				value is 0
				Field				value is 1
		ChangedFieldLookup			is Alpha 200
		ChangedFieldTemp			is Alpha 200
		FileName					is Alpha 150
			Text Variables
				FileTimeStamp		
		LocalFileName 				is Alpha 150	
		FieldRangeIndex				is Numeric 4
		LocalFieldRange				is a FixedLengthFieldRange
		LastFileCreationUniqueID	is UniqueID
		LocalTrailerOnly			is Boolean
		LocalUserFieldCount			is Numeric 2
		LocalRelation				is Alpha 100
		LocalUserFieldName			is Alpha 300
			is related value for "FileCreationRecord"
		LocalUserFieldBusinessClass is Alpha 100
		LocalUserFieldBusinessClassDelta is Alpha 300
		RecordIsWritten				is Boolean
		LocalRunTimeStamp			is TimeStamp
		LocalGroupedTime			is TimeStamp
		LocalGroupedSequence		is Numeric 4
		LocalMessage				is Text
		LocalMessageWrittenForOneToMany			is Boolean
		LocalMessageWrittenForExtendedOneToMany	is Boolean
		LocalDoNotCheckForDefaultMapping		is Boolean
		LocalDefaultAlphaSet					is Boolean
		LocalMergedFileSystemTimeStamp			is TimeStamp
		LocalMergedFileSequenceNumber			is Numeric 4
		OTMCount								is Numeric 4
		FileSequenceNumber						is Numeric 4
		FormattingNotNeeded						is Boolean	
		LocalJavaFormatting						is Alpha 40
		LocalLengthFormat						is Numeric 4
		LocalSubstringStart        				is Numeric 4
		LocalSubstringEnd						is Numeric 4
		LocalExtendsOneToManyRow				is like FileCreationRowDetail
		LocalIncludeInRecordCount1				is Boolean
		LocalIncludeInRecordCount2				is Boolean
		LocalIncludeInRecordCount3				is Boolean
		LocalIncludeInRecordCount4				is Boolean
		LocalIncludeInRecordCount5				is Boolean
		LocalIncludeInRecordCount6				is Boolean
		RowMappingCacheView						is a FileCreationRowMappingCache view
		LocalSubtotalLevel	is Numeric 2
		LocalColumnMappingCache is Numeric 4
		LocalRowMappingCache	is Numeric 4
		LocalFileCreationTotalArray is a FileCreationTotalArray
		LocalLastColumnValue					is Text
		SortBeingRegenerated					is Boolean
		SortFieldBlank							is Boolean
		LocalEndOfLineCharacter					is Alpha 2
		FieldBeingValidated						is Boolean
		DoNotProcessRecord						is Boolean
		LocalCharacterCheckValidation   		is RichText
		LocalLengthCheckValidation				is RichText
		LocalRequiredCheckValidation    		is RichText
		LengthErrorsExist						is Boolean
		RequiredFieldsMissing					is Boolean
		RequiredFieldMissing					is Boolean
		LocalValidateRequiredFields     		is Boolean
		LocalValidateLength			    		is Boolean
		LocalValidateCharacters  				is Boolean
		LocalCharacterExpression				is Alpha 50
		LocalAlphaErrorHandling					is Alpha 300
		LocalDateErrorHandling					is Date
		LocalDecimalErrorHandling				is Decimal 24.8
		LocalNumericErrorHandling				is Numeric 17
		LocalTimeErrorHandling					is Time
		LocalTimeStampErrorHandling				is TimeStamp
		DerivedRow 								is Text
			is derived field for "FileCreationRecord"	
		LocalDynamicRow							is like FileCreationRowDetail		
		LocalFileCreationRowDynamicMapping		is like FileCreationRowDynamicMapping			
		LocalOTMUniqueID						is UniqueID 
		LocalHoldTimeStamp						is TimeStamp 
		OTMRecordCounter 						is Numeric 5 
		LocalFileCreationRowMappingCache		is like FileCreationRowMappingCache
		LocalFileCreationColumnMappingCache		is like FileCreationColumnMappingCache
		OTOFileCreationRowMappingCache			is like FileCreationRowMappingCache
		LocalDoNotWriteSeparator				is Boolean 
		ExtendedRowWritten						is Boolean 
		LocalFieldPadLength						is Numeric 4 
		LastFieldPadLength						is Numeric 4 
		LastFieldPadLengthWritten				is Numeric 4 
		LocalSequenceValue						is Alpha 20
		LocalStatus 							is Numeric 1
			States
				NotProcessed			value is 1
				Error					value is 2			
				Processed				value is 3
		LocalDoNotProcessRecord					is Boolean
		TempLengthCheckValidation				is RichText
		TempRequiredCheckValidation    			is RichText
		TempRequiredFieldsMissing  				is Boolean
		TempLengthErrorsExist					is Boolean
		HoldAlphaArray							is an FileCreationAlphaArray
		TempFieldRangeIndex						is Numeric 4
		MainOneToManyRowMappedFieldChanged  	is Boolean

	Transient Fields
		GeneratedTrailerText		is Text
			default label is untranslatable
		GeneratedHeaderText			is Text
			default label is untranslatable

	Rule Blocks
		
		OneToManyLogic
			if (FileCreationSetup.ExportFile.PayablesInvoice
			and each(Row).OneToManyBusinessClassPayablesInvoice entered)
				include PayablesInvoiceOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerChartAccount
			and each(Row).OneToManyBusinessClassGeneralLedgerChartAccount entered)
				include GeneralLedgerChartAccountOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.Asset
			and each(Row).OneToManyBusinessClassAsset entered)
				include AssetOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.BinGroup
			and each(Row).OneToManyBusinessClassBinGroup entered)
				include BinGroupOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.Contract
			and each(Row).OneToManyBusinessClassContract entered)
				include ContractOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.PurchaseOrder
			and each(Row).OneToManyBusinessClassPurchaseOrder entered)
				include PurchaseOrderOneToManyLogic
			else
			if (FileCreationSetup.ExportFile.Vendor
			and each(Row).OneToManyBusinessClassVendor entered)
				include VendorOneToManyLogic
				
		GetOneToManyCount
			if (FileCreationSetup.ExportFile.PayablesInvoice)
				if (each(Row).OneToManyBusinessClassPayablesInvoice.PayablesInvoiceDistribution)
					OneToManyCount = instance count of PayablesInvoiceDistributionRel
				if (each(Row).OneToManyBusinessClassPayablesInvoice.PayablesInvoicePayment)
					OneToManyCount = instance count of PayablesInvoicePaymentRel
				if (each(Row).OneToManyBusinessClassPayablesInvoice.PayablesInvoiceAddOnCharge)
					OneToManyCount = instance count of PayablesInvoiceAddOnChargeRel	
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerChartAccount)
				if (each(Row).OneToManyBusinessClassGeneralLedgerChartAccount.ReportingChartAccount)
					OneToManyCount = instance count of ReportingChartAccountRel
			else
			if (FileCreationSetup.ExportFile.Asset)
				if (each(Row).OneToManyBusinessClassAsset.AssetBook)
					OneToManyCount = instance count of AssetBookRel
			else
			if (FileCreationSetup.ExportFile.BinGroup)
				if (each(Row).OneToManyBusinessClassBinGroup.BinGroupDetail)
					OneToManyCount = instance count of BinGroupDetailRel
			else
			if (FileCreationSetup.ExportFile.Contract)
				if (each(Row).OneToManyBusinessClassContract.ContractLine)
					OneToManyCount = instance count of ContractLineRel
			else
			if (FileCreationSetup.ExportFile.PurchaseOrder)
				if (each(Row).OneToManyBusinessClassPurchaseOrder.PurchaseOrderLine)
					OneToManyCount = instance count of PurchaseOrderLineOTMRel
			else
			if (FileCreationSetup.ExportFile.Vendor)
				if (each(Row).OneToManyBusinessClassVendor.VendorLocation)
					OneToManyCount = instance count of VendorLocationRel

		PayablesInvoiceOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with PayablesInvoice
				replace OneToManyBusinessClassRel with PayablesInvoiceDistributionRel
				replace OneToManyOption with PayablesInvoiceDistribution
				replace OneToManySequenceField1 with each(OneToMany).PayablesInvoiceDistribution
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
			include FileGeneration.OneToMany
				replace MasterBusinessClass with PayablesInvoice
				replace OneToManyBusinessClassRel with PayablesInvoicePaymentRel
				replace OneToManyOption with PayablesInvoicePayment
				replace OneToManySequenceField1 with each(OneToMany).PayablesInvoicePayment
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
			include FileGeneration.OneToMany
				replace MasterBusinessClass with PayablesInvoice
				replace OneToManyBusinessClassRel with PayablesInvoiceAddOnChargeRel
				replace OneToManyOption with PayablesInvoiceAddOnCharge
				replace OneToManySequenceField1 with each(OneToMany).PayablesInvoiceAddOnCharge
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank


		GeneralLedgerChartAccountOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with GeneralLedgerChartAccount
				replace OneToManyBusinessClassRel with ReportingChartAccountRel
				replace OneToManyOption with ReportingChartAccount
				replace OneToManySequenceField1 with each(OneToMany).ReportingChartAccount
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
		
		AssetOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with Asset
				replace OneToManyBusinessClassRel with AssetBookRel
				replace OneToManyOption with AssetBook
				replace OneToManySequenceField1 with each(OneToMany).AssetBook
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
		
		BinGroupOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with BinGroup
				replace OneToManyBusinessClassRel with BinGroupDetailRel
				replace OneToManyOption with BinGroupDetail
				replace OneToManySequenceField1 with each(OneToMany).BinGroupDetail
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
		
		ContractOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with Contract
				replace OneToManyBusinessClassRel with ContractLineRel
				replace OneToManyOption with ContractLine
				replace OneToManySequenceField1 with each(OneToMany).ContractLine
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank

		PurchaseOrderOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with PurchaseOrder
				replace OneToManyBusinessClassRel with PurchaseOrderLineOTMRel
				replace OneToManyOption with PurchaseOrderLine
				replace OneToManySequenceField1 with each(OneToMany).PurchaseOrderLine
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank
		
		VendorOneToManyLogic
			include FileGeneration.OneToMany
				replace MasterBusinessClass with Vendor
				replace OneToManyBusinessClassRel with VendorLocationRel
				replace OneToManyOption with VendorLocation
				replace OneToManySequenceField1 with each(OneToMany).VendorLocation
				replace IsSecondSequenceNumber with false
				replace OneToManySequenceField2 with blank

	Derived Fields
	
		MarkedAsProcessedMessage is a MessageField
			"RecordMarkedAsProcessedBecauseAnotherRecordForTheSameEffectiveDateWasCreated"

		UpdateStatusToProcessedMessage is a MessageField
            "Processed_by_Update_Status_To_Processed_action"	

		Output is a DerivedField
			type is Text


			FileName = FileCreationSetup.CalculatedFileName

			PreviewRecord = true
			LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
			if(Status.Processed)
				LocalRunTimeStamp = RunSystemTimeStamp

			include FileGeneration.CreateOutput


			PreviewRecord = false

		DerivedPreviewText is a DerivedField
			type is Text
			default label is "PreviewText"

			return PreviewText

		LoadChangedFields is a NativeField
			type is Numeric 4
			restricted

		AsyncQueueHCMConcurrentActions	is a DerivedField	
			type is Alpha 50
			restricted
			return "HCMConcurrentActions"

		RecordTerminator is a DerivedField
			type is Alpha 2
			if (LocalFileCreationSetup.FileType.Separated)
				return FileCreationSetup.DerivedEndOfLineCharacter
			else 
				return FileCreationSetup.DerivedEndOfLineCharacter[2]
					
		DidNotMeetRowConditionsMessage is a MessageField
			restricted
			"DidNotMeetRowConditionsForRow:"
			
		DidNotMeetOneToManyConditionsMessage is a MessageField
			restricted
			"AtLeastOneRecordDidNotMeetOneToManyConditionsForRow:"
			
		DidNotMeetExtendedConditionsMessage is a MessageField
			restricted
			"AtLeastOneRecordDidNotMeetExtendedConditionsForRow:"
		
		NoRecordsMessage is a MessageField	
			restricted
			"NoRecordsToProcess"
			
		Key1Hash is a NativeField
			type is Numeric 8	
			
		RecordExistenceCheck is a DerivedField
			type is Boolean
			if (FileCreationSetup.ExportFile.PayablesInvoice
			and PayablesInvoiceRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerTransaction
			and GeneralLedgerTransactionRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.InventoryLocation
			and InventoryLocationRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.PurchaseOrderLine
			and PurchaseOrderLineRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.InventoryTransactionLine
			and InventoryTransactionLineRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerTotal
			and GeneralLedgerTotalRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.GLTransactionDetail
			and GLTransactionDetailRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.Vendor
			and VendorRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.Asset
			and AssetRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.Scenario
			and ScenarioRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerChartAccount
			and GeneralLedgerChartAccountRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.BinGroup
			and BinGroupRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.Contract
			and ContractRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.Item
			and ItemRel exists)
				return true
			else 
			if (FileCreationSetup.ExportFile.RequesterRequestingLocation
			and RequesterRequestingLocationRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.PurchaseOrder
			and PurchaseOrderRel exists)
				return true
			else
			if (FileCreationSetup.ExportFile.GeneralLedgerJournalControl
			and GeneralLedgerJournalControlRel exists)
				return true
			return false
			
		RecordDoesNotExistMessage is a MessageField
			restricted
			"RecordSkipped;ApplicationOrExportRecordDoesNotExist"

		RecordIdentifier is a DerivedField
			type is Alpha 500	
			if (Key1 entered)
				RecordIdentifier += Key1
			if (Key2 entered)
				RecordIdentifier += "," + Key2
			if (Key3 entered)
				RecordIdentifier += "," + Key3
			if (Key4 entered)
				RecordIdentifier += "," + Key4
			if (Key5 entered)
				RecordIdentifier += "," + Key5
			if (Key6 entered)
				RecordIdentifier += "," + Key6
			if (Key7 entered)
				RecordIdentifier += "," + Key7
			if (Key8 entered)
				RecordIdentifier += "," + Key8
			if (Key9 entered)
				RecordIdentifier += "," + Key9
			if (Key10 entered)
				RecordIdentifier += "," + Key10
			if (Key11 entered)
				RecordIdentifier += "," + Key11
			return RecordIdentifier

		ErrorsExistMessage is a MessageField
			restricted
			"ErrorsExist;UseViewDetailedErrorForMoreInformation"
			
	Conditions
		
		UseSortingThreadingMethod
			when (FileCreationSetup.SortSourceFieldOne entered)
			
	Relations
		FileCreationRecordsSameEffectiveDateRel
			one-to-many relation to FileCreationRecord
			Field Mapping uses ByEffectiveDate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				related.Key1				= Key1
				related.Key2				= Key2
				related.Key3				= Key3
				related.Key4				= Key4
				related.Key5				= Key5
				related.Key6				= Key6
				related.Key7				= Key7
				related.Key8				= Key8
				related.Key9				= Key9
				related.Key10				= Key10
				related.Key11				= Key11
				related.EffectiveDate		= EffectiveDate
			Instance Selection
				where (related.TransactionId not = TransactionId
				and	   not related.Status.Processed)

		PayablesInvoiceRel
			one-to-one relation to PayablesInvoice
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PayablesInvoice						= Key2
				
		InventoryLocationRel
			one-to-one relation to InventoryLocation
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.InventoryLocation					= Key2
				
		InventoryTransactionLineRel
			one-to-one relation to InventoryTransactionLine
			Field Mapping uses symbolic key
				related.Company                             			= Key1
				related.InventoryLocation                   			= Key2
				related.InventoryTransaction                			= Key3
				related.TransactionSystemCode               			= Key4
				related.InventoryTransactionLine.WarehouseShipment		= Key5
				related.InventoryTransactionLine.LineNumber				= Key6 
				related.InventoryTransactionLine.ComponentSequence		= Key7

		GeneralLedgerTransactionRel
			one-to-one relation to GeneralLedgerTransaction
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup									= FinanceEnterpriseGroup
				related.AccountingEntity										= Key1
				related.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod	= Key2
				related.GeneralLedgerJournalControl								= Key3
				related.GeneralLedgerTransaction								= Key4

		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PurchaseOrder						= Key2
				related.PurchaseOrderLine					= Key3
				
		GeneralLedgerTotalRel
			one-to-one relation to GeneralLedgerTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Scenario							= Key1
				related.AccountingEntity					= Key2
				related.GeneralLedgerTotal.Ledger			= Key3
				related.GeneralLedgerTotal.System			= Key4
				related.GeneralLedgerTotal.Currency			= Key5
				related.GeneralLedgerTotal.EntityYearPeriod	= Key6
				related.GeneralLedgerTotal.AccountingUnit	= Key7
				related.GeneralLedgerTotal.GeneralLedgerChartAccount	= Key8
				related.GeneralLedgerTotal.Project			= Key9
				related.GeneralLedgerTotal.DimensionCode	= Key10
				related.GeneralLedgerTotal.PrimaryLedger	= Key11
				
		GLTransactionDetailRel
			one-to-one relation to GLTransactionDetail
			Field Mapping uses symbolic key
				related.GLTransactionDetail					= Key1
				
		VendorRel
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup							= Key1
				related.Vendor								= Key2
		
		AssetRel
			one-to-one relation to Asset
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Asset								= Key1
		
		ScenarioRel
			one-to-one relation to Scenario
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.Scenario							= Key1
		
		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.GeneralLedgerChartAccount			= Key1
		
		BinGroupRel
			one-to-one relation to BinGroup
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.InventoryLocation					= Key2
				related.BinGroup							= Key3

		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup    = Key1
				related.Contract	   	 = Key2
		
		ItemRel
            one-to-one relation to Item
            Field Mapping uses symbolic key
                related.ItemGroup = Key1
                related.Item      = Key2

		RequesterRequestingLocationRel
			one-to-one relation to RequesterRequestingLocation
			Field Mapping uses symbolic key
				related.Company				= Key1
				related.Requester			= Key2
				related.RequestingLocation  = Key3

		PurchaseOrderRel
			one-to-one relation to PurchaseOrder
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PurchaseOrder						= Key2

		GeneralLedgerJournalControlRel
			one-to-one relation to GeneralLedgerJournalControl
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup      		= FinanceEnterpriseGroup
				related.AccountingEntity					= Key1
				related.GeneralLedgerClosePeriod			= Key2
				related.GeneralLedgerJournalControl			= Key3

		FileCreationRowDetailRel
			one-to-many relation to FileCreationRowDetail
			Field Mapping uses ByRowOrder
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.FileCreationSetup	= LocalFileCreationSetup
			Instance Selection
				where (related.Trailer
				or	   LocalTrailerOnly = false
				or     related.LinkedRow.Trailer)
				
		FileCreationRowDetailEnabledRel
			one-to-many relation to FileCreationRowDetail
			Field Mapping uses ByRowOrder
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.FileCreationSetup	= LocalFileCreationSetup
			Instance Selection
				where ((related.Trailer
				or	   LocalTrailerOnly = false
				or     related.LinkedRow.Trailer)
				and    not related.Disable)

		FileCreationRowDetailOTMExtendsRel
			one-to-many relation to FileCreationRowDetail
			Field Mapping uses ByExtendsOneToManyRow
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.FileCreationSetup	= ExtendedFileCreationSetup
				related.ExtendsOneToManyRow	= ExtendedFileCreationRowDetail
				
		FileCreationColumnDetailRel
			one-to-many relation to FileCreationColumnDetail
			Field Mapping uses ByColumnOrder
				related.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
				related.FileCreationSetup		= ColumnFileCreationSetup
				related.FileCreationRowDetail	= ColumnFileCreationRowDetail

		FileCreationDataMappingRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail

		FileCreationDataMappingByValueRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail
				related.AlphaFromValue				= LocalAlpha
				related.DefaultMapping				= false
				
		FileCreationDataMappingByValueTextRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail
				related.AlphaFromValue				= LocalText
				related.DefaultMapping				= false

		FileCreationDataMappingByValueBooleanRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail
				related.AlphaFromValue				= LocalBoolean
				related.DefaultMapping				= false

		FileCreationDataMappingContainsRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses ByCompareType
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail
				related.CompareType					= 1
				
		FileCreationDataMappingDefaultRel
			one-to-many relation to FileCreationDataMapping
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.FileCreationSetup			= LocalFileCreationSetup
				related.FileCreationRowDetail		= LocalFileCreationRowDetail
				related.FileCreationColumnDetail	= LocalFileCreationColumnDetail
			Instance Selection
				where (related.DefaultMapping)
				
		FileCreationDataMappingCacheByValueRel
			one-to-many relation to FileCreationDataMappingCache
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.FileCreationSetup				= LocalFileCreationSetup
				related.FileCreationRowMappingCache		= LocalFileCreationRowDetail
				related.FileCreationColumnMappingCache	= LocalFileCreationColumnDetail
				related.AlphaFromValue					= LocalAlphaDataMapping
				related.DefaultMapping					= false
				
		FileCreationDataMappingCacheByValueTextRel
			one-to-many relation to FileCreationDataMappingCache
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.FileCreationSetup				= LocalFileCreationSetup
				related.FileCreationRowMappingCache		= LocalFileCreationRowDetail
				related.FileCreationColumnMappingCache	= LocalFileCreationColumnDetail
				related.AlphaFromValue					= LocalTextDataMapping
				related.DefaultMapping					= false

		FileCreationDataMappingCacheByValueBooleanRel
			one-to-many relation to FileCreationDataMappingCache
			Field Mapping uses ByAlphaFromValue
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.FileCreationSetup				= LocalFileCreationSetup
				related.FileCreationRowMappingCache		= LocalFileCreationRowDetail
				related.FileCreationColumnMappingCache	= LocalFileCreationColumnDetail
				related.AlphaFromValue					= LocalBoolean
				related.DefaultMapping					= false

		FileCreationDataMappingCacheContainsRel
			one-to-many relation to FileCreationDataMappingCache
			Field Mapping uses ByCompareType
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.FileCreationSetup				= LocalFileCreationSetup
				related.FileCreationRowMappingCache		= LocalFileCreationRowDetail
				related.FileCreationColumnMappingCache	= LocalFileCreationColumnDetail
				related.CompareType						= 1
				
		FileCreationDataMappingCacheDefaultRel
			one-to-many relation to FileCreationDataMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
				related.FileCreationSetup				= LocalFileCreationSetup
				related.FileCreationRowMappingCache		= LocalFileCreationRowDetail
				related.FileCreationColumnMappingCache	= LocalFileCreationColumnDetail
			Instance Selection
				where (related.DefaultMapping)
		
		FileCreationFileRel
			one-to-one relation to FileCreationFile
			Field Mapping uses ByTimeStamp
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FileCreationSetup			= FileCreationSetup
				related.SystemTimeStamp				= SystemTimeStamp
				related.SequenceNumber				= SequenceNumber
				
		FileCreationFileNavigationRel
			one-to-many relation to FileCreationFile
			Field Mapping uses ByTimeStamp
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FileCreationSetup			= FileCreationSetup
				related.SystemTimeStamp				= RunSystemTimeStamp
				
		FileCreationFileUpdateRel
			one-to-one relation to FileCreationFile
			Field Mapping uses ByTimeStamp
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FileCreationSetup			= FileCreationSetup
				related.SystemTimeStamp				= LocalTimeStamp
				related.SequenceNumber				= SequenceNumber
				
		MergedFileCreationFileRel
			one-to-one relation to FileCreationFile
			Field Mapping uses ByTimeStamp	
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				related.SystemTimeStamp		= LocalMergedFileSystemTimeStamp
				related.SequenceNumber		= LocalMergedFileSequenceNumber
				
		FileCreationFileGroupedFilesForRegenerationRel
			one-to-many relation to FileCreationFile
			Field Mapping uses ByGroupedTimeStamp
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.FileCreationSetup			= FileCreationSetup
				related.GroupedSystemTimeStamp		= LocalGroupedTime
				related.GroupedSequenceNumber		= LocalGroupedSequence
			Instance Selection
				where (related.SystemTimeStamp != LocalTimeStamp
				or    (related.SystemTimeStamp = LocalTimeStamp
				and    related.SequenceNumber  != SequenceNumber))

		
		FileCreationTotalCacheDynamicRel 
			one-to-many relation to FileCreationTotalCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 			   = FinanceEnterpriseGroup
				related.FileCreationSetup   		       = FileCreationSetup
			Instance Selection
				where (related.TotalledRowCache = LocalFileCreationRowMappingCache
				and    related.TotalledColumnCache = LocalFileCreationColumnMappingCache)

		FileCreationRowDynamicMappingRel 
			one-to-one relation to FileCreationRowDynamicMapping
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		  = FinanceEnterpriseGroup
				related.FileCreationSetup 	  		  = FileCreationSetup
				related.FileCreationRowDetail 		  = LocalDynamicRow
				related.FileCreationRowDynamicMapping = LocalFileCreationRowDynamicMapping		

		FileCreationRowMappingCacheOTORel
			one-to-one relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		  = FinanceEnterpriseGroup
				related.FileCreationSetup 	  		  = FileCreationSetup
				related.FileCreationRowMappingCache   = I5

		PayablesInvoiceDistributionRel 
			one-to-many relation to PayablesInvoiceDistribution
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PayablesInvoice								= Key2

		PayablesInvoicePaymentRel 
			one-to-many relation to PayablesInvoicePayment
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PayablesInvoice						= Key2
		
		PayablesInvoiceAddOnChargeRel 
			one-to-many relation to PayablesInvoiceAddOnCharge
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PayablesInvoice						= Key2

		ReportingChartAccountRel
			one-to-many relation to ReportingChartAccount
			Field Mapping uses BySubordinateAccount
				related.FinanceEnterpriseGroup				= Key1
				related.GeneralLedgerChartAccount			= Key2

		AssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Key1

		BinGroupDetailRel
            one-to-many relation to BinGroupDetail
           	Field Mapping uses symbolic key
                related.Company           = Key1
                related.InventoryLocation = Key2
                related.BinGroup          = Key3

		ContractLineRel
			one-to-many relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup = Key1
				related.Contract      = Key2

		PurchaseOrderLineOTMRel
			one-to-many relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company								= Key1
				related.PurchaseOrder						= Key2

		VendorLocationRel
			one-to-many relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup			= Key1
				related.Vendor				= Key2

		LastFileCreationRecordRel
			one-to-one relation to FileCreationRecord
			Field Mapping uses ByUniqueID
				related.UniqueID = LastFileCreationUniqueID
				
		FileCreationRecordSortToBeRegeneratedRel
			one-to-many relation to FileCreationRecord
			Field Mapping uses BySortKey
				related.SortKey   			= "SORTKEYNEEDSTOBEREGENERATEDWILLHAPPENAUTOMATICALLY"
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				
		FileCreationRowMappingCacheDataRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (not related.Header
				and    not related.Trailer
				and    not related.Subtotal
				and    related.ExtendsOneToManyRow not entered)
				
		FileCreationExtendedRowMappingCacheDataRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (not related.Header
				and    not related.Trailer
				and    related.ExtendsOneToManyRow = LocalExtendsOneToManyRow)
				
		FileCreationRowMappingCacheHeaderRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (related.Header)
				
		FileCreationRowMappingCacheTrailerRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (related.Trailer)
				
		FileCreationRowMappingCacheSubtotalRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses BySubtotalLevel
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (related.Subtotal)
				
		FileCreationRowMappingCacheSubtotalDescendingRel
			one-to-many relation to FileCreationRowMappingCache
			Field Mapping uses BySubtotalLevelDescending
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (related.Subtotal)

		FileCreationRowMappingCacheConditionRel 
			one-to-one relation to FileCreationRowMappingCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
				related.FileCreationRowMappingCache		= OTOFileCreationRowMappingCache
				
		FileCreationRowDetailSubtotalRel
			one-to-many relation to FileCreationRowDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup					= FinanceEnterpriseGroup
				related.FileCreationSetup   			= FileCreationSetup
			Instance Selection
				where (related.Subtotal
				and    not related.Disable)
				
		FileCreationTotalCacheRel
			one-to-one relation to FileCreationTotalCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				       = FinanceEnterpriseGroup
				related.FileCreationSetup   		       = FileCreationSetup
				related.FileCreationRowMappingCache        = LocalRowMappingCache
				related.FileCreationColumnMappingCache     = LocalColumnMappingCache
				related.FileCreationTotalCache			   = 1
				
		FileCreationTotalCacheOTMRel
			one-to-many relation to FileCreationTotalCache
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 				       = FinanceEnterpriseGroup
				related.FileCreationSetup   		       = FileCreationSetup
				
		FileCreationSortThreadRel
			one-to-one relation to FileCreationSortThread
			Field Mapping uses ByKey
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				related.Key = SortThreadKey
				related.FileSystemTimeStamp = blank
				related.FileSequenceNumber = blank
				related.Processed = false
				
		FileCreationSortThreadProcessedRel
			one-to-one relation to FileCreationSortThread
			Field Mapping uses ByKey
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				related.Key = SortThreadKey
				related.FileSystemTimeStamp = blank
				related.FileSequenceNumber = blank
				related.Processed = true
				
		FileCreationSortThreadRegeneratedRel
			one-to-one relation to FileCreationSortThread
			Field Mapping uses ByKey
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.FileCreationSetup	= FileCreationSetup
				related.Key = SortThreadKey
				related.FileSystemTimeStamp = RunSystemTimeStamp
				related.FileSequenceNumber = RunSequenceNumber
				related.Processed = true

	Field Rules
		Status
			default to Status.NotProcessed
			
			if (Status changed
			and old Status.Error
			and Status.NotProcessed)
				initialize Message

			if (Status changed
			and old Status.Processed
			and Status.NotProcessed)
				initialize RunSystemTimeStamp
				initialize RunSequenceNumber
				if (FileCreationSetup.SortSourceFieldOne entered)
					invoke RegenerateSortKey

		PreviewText
			if (Status changed
			and Status = Status.Processed)
				initialize PreviewText

	Sets
		ByTimeStamp
			primary
			indexed
			Sort Order
				FinanceEnterpriseGroup
				FileCreationSetup
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				SystemTimeStamp
				TransactionId
	
		BySortKey
			indexed
			Sort Order
				SortKey
				FinanceEnterpriseGroup
				FileCreationSetup
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				SystemTimeStamp
				TransactionId

		ByRunSystemTimeStamp
			indexed
			Sort Order
				FinanceEnterpriseGroup
				FileCreationSetup
				RunSystemTimeStamp
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				SystemTimeStamp
				TransactionId

		ByEffectiveDate
			indexed
			Sort Order				
				FinanceEnterpriseGroup
				FileCreationSetup
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				EffectiveDate
				SystemTimeStamp
				TransactionId

		ByStatus
			indexed
			Sort Order
				FinanceEnterpriseGroup
				FileCreationSetup
				Status
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				SystemTimeStamp
				TransactionId
				
		ByTransactionId
			indexed
			Sort Order
				FinanceEnterpriseGroup
				SystemTimeStamp
				TransactionId
				Key1
				Key2
				Key3
				Key4
				Key5
				Key6
				Key7
				Key8
				Key9
				Key10
				Key11
				Status
				FileCreationSetup
				
		ByUniqueID
			Sort Order
				UniqueID
				
	Create Rules
		initialize SortFieldBlank
		initialize SortBeingRegenerated
		if (FileCreationSetup.SortSourceFieldOne entered)
			AlphaArrayIterator	= 1

			include FileGeneration.GetSortFieldValue
				replace Index with 1
			include FileGeneration.AddFieldToAlphaArray
				replace Index with 1
			
			if (not SortFieldBlank)	
				SortThreadKey = FileCreationAlphaArray
				if (FileCreationSortThreadRel not exists
				and not FileCreationSetup.ThreadingMethod.SingleThreaded)
					invoke Create FileCreationSortThread
						resume on error
						invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
						invoked.FileCreationSetup = FileCreationSetup
						invoked.Key = SortThreadKey


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldTwo entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 2
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 2


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldThree entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 3
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 3


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldFour entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 4
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 4


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldFive entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 5
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 5


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldSix entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 6
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 6


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldSeven entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 7
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 7


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldEight entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 8
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 8


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldNine entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 9
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 9

			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldTen entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 10
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 10


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldEleven entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 11
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 11


			if (AlphaArrayIterator < 240
			and FileCreationSetup.SortSourceFieldTwelve entered
			and not SortFieldBlank)
				include FileGeneration.GetSortFieldValue
					replace Index with 12
				include FileGeneration.AddFieldToAlphaArray
					replace Index with 12

			if (not SortFieldBlank)
				SortKey = FileCreationAlphaArray
			else
				SortKey = "SORTKEYNEEDSTOBEREGENERATEDWILLHAPPENAUTOMATICALLY"
				
			initialize I4
			for each FileCreationRecordSortToBeRegeneratedRel
				invoke RegenerateSortKey each
				I4 += 1
				if (I4 >= 10)
					end for each
				

	Actions
		Create is a Create Action
			Action Rules
				ThreadingKey = Key1Hash
										
		CreateErrorRecord is a Create Action
			restricted
			Action Rules
				Status = Status.Error
																	
		Update is an Update Action
																																																										
		Delete is a Delete Action

		UpdateRecordToProcessed is an Instance Action
			restricted

			Parameters
				ProcessedMessage		is Text

			Action Rules
				Status 		= 3
				Message		= ProcessedMessage

		UpdateStatusToProcessed is a Set Action
			run in background
			confirmation required
				"Warning:ThisWillChangeTheStatusOfSelectedRecordsToProcessed;DoYouWishToContinue?"
				
			Parameters
				FinanceEnterpriseGroup			
				IncludeErrors			is Boolean
				PrmFileCreationSetup	is a FileCreationSetup
					default label is "FileCreationSetup"	
				TimeStampFrom			is TimeStamp
				TimeStampTo				is TimeStamp
					default label is "To"
				TransactionIdFrom		is Numeric size 13
				TransactionIdTo			is Numeric size 13
					default label is "To"
				PrmInitiatingAction		is Alpha size 80
					default label is "InitiatingAction"
				PrmActionTag			is Alpha size 50
					default label is "ActionTag"
			
			Parameter Rules
				FinanceEnterpriseGroup
					required
					
				PrmFileCreationSetup
					required
					
				TimeStampFrom
					constraint (TimeStampTo entered)
						"BothTimeStampFromAndToMustBeEnteredIfOneIsEntered"
					
					constraint (TimeStampFrom < TimeStampTo)
						"TimeStampFromShouldNotBeLaterThanTimeStampTo"
						
				TimeStampTo						
					constraint (TimeStampFrom entered)
						"BothTimeStampFromAndToMustBeEnteredIfOneIsEntered"
				
				TransactionIdFrom				
					constraint (TransactionIdTo entered)
						"BothTransactionIdFromAndToMustBeEnteredIfOneIsEntered"
					
					constraint (TransactionIdTo > TransactionIdFrom)
						"TransactionIdToShouldBeGreaterThanTransactionIdFrom"

				TransactionIdTo						
					constraint (TransactionIdFrom entered)
						"BothTransactionIdFromAndToMustBeEnteredIfOneIsEntered"
						
			Instance Selection
				where (FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and	   FileCreationSetup = PrmFileCreationSetup
				and   (Status.NotProcessed
				or	  (IncludeErrors
				and	   Status.Error))
				and	  ((TimeStampFrom not entered
				or	  (SystemTimeStamp >= TimeStampFrom
				and	   SystemTimeStamp <= TimeStampTo))
				and	  (TransactionIdFrom not entered
				or	  (TransactionId >= TransactionIdFrom
				and	   TransactionId <= TransactionIdTo))))
					
			Action Rules
				Instance Rules
					Status 	= 3
					Message = UpdateStatusToProcessedMessage 	
		
		GenerateHeaderAndTrailer is an Instance Action
			restricted
			Parameters
				PrmRecordCount1				is Numeric 12
				PrmRecordCount2				is Numeric 12
				PrmRecordCount3				is Numeric 12
				PrmRecordCount4				is Numeric 12
				PrmRecordCount5				is Numeric 12
				PrmRecordCount6				is Numeric 12
				PrmCurrentSystemTimeStamp	is TimeStamp
				PrmMergedFileSystemTimeStamp	is TimeStamp
				PrmMergedFileSequenceNumber		is Numeric 4
				PrmFileName					is Alpha 150
				PrmFileCreationTotalArray   is a FileCreationTotalArray
			
			Local Fields	
				FileName					is Alpha 150
					Text Variables
						FileTimeStamp
				LocalEndOfLineCharacter		is Alpha 2		
				LocalSetup					is like FileCreationSetup		
				
			Action Rules
				FileName  				= PrmFileName
				RecordCount1			= PrmRecordCount1
				RecordCount2			= PrmRecordCount2
				RecordCount3			= PrmRecordCount3
				RecordCount4			= PrmRecordCount4
				RecordCount5			= PrmRecordCount5
				RecordCount6			= PrmRecordCount6
				LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
				if (PrmMergedFileSystemTimeStamp entered)
					CurrentSystemTimeStamp = PrmMergedFileSystemTimeStamp
				else
					CurrentSystemTimeStamp	= PrmCurrentSystemTimeStamp
				LocalFinanceEnterpriseGroup		= FinanceEnterpriseGroup
				LocalFileCreationSetup	= FileCreationSetup
				LocalMergedFileSequenceNumber	   =  PrmMergedFileSequenceNumber
				LocalMergedFileSystemTimeStamp     =  PrmMergedFileSystemTimeStamp
				if (FileCreationSetup.ThreadingMethod.MergedFileForThreads)
					include FileGeneration.CreateMappingsInMemory
					for each(Cache) FileCreationTotalCacheOTMRel
						LocalSetup				= each(Cache).FileCreationSetup
						LocalRowMappingCache    = each(Cache).FileCreationRowMappingCache
						LocalColumnMappingCache = each(Cache).FileCreationColumnMappingCache
						for each(Array) PrmFileCreationTotalArray.FileCreationTotal
							if (each(Array).Setup  = LocalSetup
							and	each(Array).Row    = LocalRowMappingCache
							and	each(Array).Column = LocalColumnMappingCache)
								invoke Update FileCreationTotalCacheRel
									invoked.Total = each(Array).Total
								end for each
				if (FileCreationSetup.ThreadingMethod.MergedFileForThreads)
					if (not FileCreationSetup.UseForTesting
					or (FileCreationSetup.UseForTesting
					and not FileCreationSetup.DoNotIncludeHeader))
						include FileGeneration.WriteHeader
						initialize FileText
				if (not FileCreationSetup.UseForTesting
				or (FileCreationSetup.UseForTesting
				and not FileCreationSetup.DoNotIncludeTrailer))
					include FileGeneration.WriteTrailer
					GeneratedTrailerText	= FileText
					initialize FileText
				if (not FileCreationSetup.UseForTesting
				or (FileCreationSetup.UseForTesting
				and not FileCreationSetup.DoNotIncludeHeader))
					include FileGeneration.WriteHeaderNoCount
					GeneratedHeaderText	= FileText
				if (PrmMergedFileSystemTimeStamp entered
				and PrmMergedFileSequenceNumber  entered)
					invoke Update MergedFileCreationFileRel
						invoked.HeaderText   = GeneratedHeaderText
						invoked.TrailerText  = GeneratedTrailerText
						invoked.RecordCount1 = RecordCount1
						invoked.RecordCount2 = RecordCount2
						invoked.RecordCount3 = RecordCount3
						invoked.RecordCount4 = RecordCount4
						invoked.RecordCount5 = RecordCount5
						invoked.RecordCount6 = RecordCount6
			Exit Rules
				clear in-memory cache
					
		GenerateFileThread is a Set Action
			restricted
			synchronized on untranslatable:"FileCreationRecord_GenerateFile_<FinanceEnterpriseGroupPrm>_<FileCreationSetupPrm>_<PrmThread>"

			Parameters
				PrmNumberOfThreads		is Numeric 3
				PrmThread				is Numeric 3
				FinanceEnterpriseGroupPrm		is a FinanceEnterpriseGroup
					default label is "Organization"
				FileCreationSetupPrm	is a FileCreationSetup
					default label is "FileCreationSetup"
				SystemTimeStampPrm		is TimeStamp
					default label is "SystemTimeStamp"
				SequenceNumberPrm		is Numeric 4
					default label is "SequenceNumber"
				ProcessRegeneratedFileWithProcessFlow	is Boolean
				SendRegeneratedFileToION				is Boolean
				GroupedSystemTimeStampPrm				is TimeStamp
					default label is "GroupedSystemTimeStamp"
				GroupedSequenceNumberPrm					is Numeric 4
					default label is "GroupedSequenceNumber"
				GroupedSystemTimeStampRegenPrm  			is TimeStamp
					default label is "RegeneratedGroupedSystemTimeStamp"
				GroupedSequenceNumberRegenPrm   			is Numeric 4
					default label is "RegeneratedGroupedSequenceNumber"
				FilterTimeStampPrm		is TimeStamp
				PrmThreadGroupID		is UniqueID
				PrmMergedFileStamp		is TimeStamp
				PrmMergedSequenceNumber is Numeric 4
				PrmRegenerateExitRules  is Boolean
				PrmGeneratedWithSortThread is Boolean
				
			Parameter Rules
				
				SystemTimeStampPrm
					if (PrmMergedFileStamp not entered)
						FinanceEnterpriseGroup 		= FinanceEnterpriseGroupPrm
						FileCreationSetup	= FileCreationSetupPrm
						LocalTimeStamp		= SystemTimeStampPrm
						SequenceNumber		= SequenceNumberPrm
						constraint (FileCreationFileUpdateRel.FileCreationRecordRel exists)
							"NoFileCreationRecordsAreLinkedToTheFileSelected"
				
				SequenceNumberPrm
					if (SystemTimeStampPrm entered)
						required
												
			Local Fields
				CurrentSystemTimeStamp		is TimeStamp
				OneToManySequence			is Numeric 3
				RecordCount1				is Numeric 12
				RecordCount2				is Numeric 12
				RecordCount3				is Numeric 12
				RecordCount4				is Numeric 12
				RecordCount5				is Numeric 12
				RecordCount6				is Numeric 12
				PendingRecordCount1			is Numeric 12
				PendingRecordCount2			is Numeric 12
				PendingRecordCount3			is Numeric 12
				PendingRecordCount4			is Numeric 12
				PendingRecordCount5			is Numeric 12
				PendingRecordCount6			is Numeric 12
				FileCreationRecordCountArray
				TotalRowCount				is Numeric 12
				TotalRecordCount			is Numeric 12
				FileText					is Text
					do not save in checkpoint
				TrailerText					is Text
					do not save in checkpoint
				HeaderText					is Text
					do not save in checkpoint
				TempText					is Text
					do not save in checkpoint
				AtLeastOneFieldEntered		is Boolean
					do not save in checkpoint
				FileName					is Alpha 150
					Text Variables
						FileTimeStamp			
				LocalMimeType					is Text
					do not save in checkpoint
				FieldRangeIndex				is Numeric 4
				LocalAlphaArray				is a FileCreationAlphaArray
				LastFileCreationRecord			is UniqueID
				FileSequenceNumber			is Numeric 4
				NeedToGenerateAnotherFile   is Boolean
				LocalNumberOfRecordsBeforeSegment	is Numeric 5
				LocalRecordCounter			        is Numeric 5
				LocalFileSize				is Numeric 9
				LocalFileSizeMB			    is Decimal 13.2
            		precision is 2
				LocalSubtotalFieldValueArray	is a SubtotalFieldValueArray
				SubtotalFieldChanged			is Boolean
				LocalCounter					is Numeric 3
				LocalSetKey1					is Alpha 40
				LocalSetKey2					is Alpha 40
				LocalEndOfLineCharacter			is Alpha 2
				DoNotProcessRecord				is Boolean
				LocalCharacterCheckValidation   is RichText
				LocalLengthCheckValidation		is RichText
				LocalRequiredCheckValidation    is RichText
				InvalidCharactersExist			is Boolean
				LengthErrorsExist				is Boolean
				RequiredFieldsMissing			is Boolean

			Instance Selection
				where (FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
				and    FileCreationSetup	= FileCreationSetupPrm
				and	   ((SystemTimeStampPrm not entered
				and	     (Status.NotProcessed
				or		  Status.Error))
				or		(SystemTimeStampPrm entered
				and		 RunSystemTimeStamp = SystemTimeStampPrm))
				and	   (FilterTimeStampPrm not entered
				or		RunSystemTimeStamp = FilterTimeStampPrm)
				and    (PrmNumberOfThreads <= 1
				or     ((UseSortingThreadingMethod	
				and     FileCreationSortThreadProcessedRel.Thread = PrmThread
				and     SystemTimeStampPrm not entered)
				or      (PrmGeneratedWithSortThread 
				and      FileCreationSortThreadRegeneratedRel.Thread = PrmThread
				and      SystemTimeStampPrm entered)
				or     ((!UseSortingThreadingMethod 
				or      (!PrmGeneratedWithSortThread 
				and       SystemTimeStampPrm entered))
				and     ThreadingKey % PrmNumberOfThreads = PrmThread))))

			Sort Order is BySortKey

			Action Rules
				Empty Set Rules
					if (FileCreationSetupPrm.GenerationBehaviorForNoOutput.GenerateFileRecordWithNoDocument
					or  FileCreationSetupPrm.GenerationBehaviorForNoOutput.GenerateFileRecordWithDocument)
						FinanceEnterpriseGroup						= FinanceEnterpriseGroupPrm
						FileCreationSetup					= FileCreationSetupPrm
						FileName 							= FileCreationSetupPrm.CalculatedFileName
						if (FileCreationSetupPrm.FileMimeType.PlainText)
							LocalMimeType 						= "text/plain"
						if (FileCreationSetupPrm.FileMimeType.CSV)
							LocalMimeType 						= "text/csv"
						CurrentSystemTimeStamp				= system current timestamp
						LocalTimeStamp						= CurrentSystemTimeStamp
						invoke Create FileCreationFile
							assign result to FileView
							invoked.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
							invoked.FileCreationSetup		= FileCreationSetup
							invoked.SystemTimeStamp			= CurrentSystemTimeStamp
							invoked.FileOutput				= ""
							invoked.Message					= NoRecordsMessage
							invoked.ThreadGroupID			= PrmThreadGroupID
							invoked.ThreadNumber			= PrmThread
							invoked.NumberOfThreads     	= PrmNumberOfThreads
						if (FileCreationSetupPrm.GenerationBehaviorForNoOutput.GenerateFileRecordWithDocument
						and not FileCreationSetupPrm.ThreadingMethod.MergedFileForThreads)
							SequenceNumber					= FileView.SequenceNumber
							invoke UpdateRecordCount FileCreationFileUpdateRel
								invoked.TotalRowCount		= TotalRowCount	
								invoked.TotalRecordCount	= TotalRecordCount
								invoked.FileName			= FileName	
								invoked.FileMimeType		= LocalMimeType	
										
				Set Rules
					Entrance Rules
						LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
						if (PrmMergedFileStamp entered)
							CurrentSystemTimeStamp = PrmMergedFileStamp
						else
							CurrentSystemTimeStamp	= system current timestamp + PrmThread
						initialize RecordCount1
						initialize RecordCount2
						initialize RecordCount3
						initialize RecordCount4
						initialize RecordCount5
						initialize RecordCount6
						initialize FileCreationRecordCountArray
						initialize TotalRecordCount
						initialize LocalNumberOfRecordsBeforeSegment
						initialize LocalRecordCounter


						LocalFinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
						LocalFileCreationSetup	= FileCreationSetupPrm
						if (FileCreationSetupPrm.FileSegmentLimit.NumberOfRecords)	
							LocalNumberOfRecordsBeforeSegment = FileCreationSetupPrm.NumberOfRecordsBeforeNewFile

						LocalFileCreationSetup = FileCreationSetupPrm
						FileName = FileCreationSetupPrm.CalculatedFileName



						invoke Create FileCreationFile
							assign result to FileView
							invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							invoked.FileCreationSetup	= FileCreationSetupPrm
							invoked.SystemTimeStamp		= CurrentSystemTimeStamp 
							invoked.FileOutput			= ""
							invoked.ThreadGroupID       = PrmThreadGroupID
							invoked.ThreadNumber		= PrmThread
							invoked.NumberOfThreads     = PrmNumberOfThreads
							if (GroupedSystemTimeStampPrm entered)
								invoked.GroupedSystemTimeStamp = GroupedSystemTimeStampPrm
							if (GroupedSequenceNumberPrm entered)
								invoked.GroupedSequenceNumber  = GroupedSequenceNumberPrm
							if (FileCreationRowDetailSubtotalRel exists)
								invoked.SubtotalExists = true
							if (UseSortingThreadingMethod
							and not FileCreationSetup.ThreadingMethod.SingleThreaded)
								invoked.GeneratedWithSortThread = true

						FileSequenceNumber		= FileView.SequenceNumber
														 
					Exit Rules
						include FileGeneration.FinalWriteForAdditionalRecordMapping
							replace FileCreationSetupField with FileCreationSetupPrm
							

						FinanceEnterpriseGroup				= FinanceEnterpriseGroupPrm
						LastFileCreationUniqueID	= LastFileCreationRecord
						FileCreationSetup	= FileCreationSetupPrm
						LocalTimeStamp		= CurrentSystemTimeStamp
						SequenceNumber 		= FileSequenceNumber
						if (FileCreationSetupPrm.ThreadingMethod.MergedFileForThreads
						and FileCreationTotalCacheOTMRel exists)
							LocalCounter = 1
							for each FileCreationTotalCacheOTMRel
								LocalFileCreationTotalArray.FileCreationTotal[LocalCounter].Setup  = each.FileCreationSetup
								LocalFileCreationTotalArray.FileCreationTotal[LocalCounter].Row    = each.FileCreationRowMappingCache
								LocalFileCreationTotalArray.FileCreationTotal[LocalCounter].Column = each.FileCreationColumnMappingCache
								LocalFileCreationTotalArray.FileCreationTotal[LocalCounter].Total  = each.Total
								LocalCounter += 1
							invoke Update FileCreationFileUpdateRel
								invoked.FileCreationTotalArray		= LocalFileCreationTotalArray
						if (FileCreationRowDetailSubtotalRel exists)
							invoke GenerateFinalSubtotalSection LastFileCreationRecordRel
								invoked.PrmFileCreationRecordCountArray = FileCreationRecordCountArray
								invoked.PrmLastFileCreationRecord       = LastFileCreationUniqueID
								invoked.PrmRecordCount1					= RecordCount1
								invoked.PrmRecordCount2					= RecordCount2
								invoked.PrmRecordCount3					= RecordCount3
								invoked.PrmRecordCount4					= RecordCount4
								invoked.PrmRecordCount5					= RecordCount5
								invoked.PrmRecordCount6					= RecordCount6
								invoked.PrmTimeStamp 					= LocalTimeStamp
								invoked.PrmSequenceNumber				= SequenceNumber
							invoke AppendToFile FileCreationFileUpdateRel
								invoked.PrmNewLine		= FileText
								invoked.PrmAppendSection = true
							RecordCount1				= FileCreationFileUpdateRel.Count1
							RecordCount2				= FileCreationFileUpdateRel.Count2
							RecordCount3				= FileCreationFileUpdateRel.Count3
							RecordCount4				= FileCreationFileUpdateRel.Count4
							RecordCount5				= FileCreationFileUpdateRel.Count5
							RecordCount6				= FileCreationFileUpdateRel.Count6
							
						if (FileCreationSetupPrm.ThreadingMethod.SingleThreaded
						or  FileCreationSetupPrm.ThreadingMethod.IndividualFilesPerThread
						or  PrmRegenerateExitRules
						and PrmMergedFileStamp not entered)
							FinanceEnterpriseGroup				= FinanceEnterpriseGroupPrm
							LastFileCreationUniqueID	= LastFileCreationRecord
							invoke GenerateHeaderAndTrailer LastFileCreationRecordRel
								invoked.PrmRecordCount1				= RecordCount1
								invoked.PrmRecordCount2				= RecordCount2
								invoked.PrmRecordCount3				= RecordCount3
								invoked.PrmRecordCount4				= RecordCount4
								invoked.PrmRecordCount5				= RecordCount5
								invoked.PrmRecordCount6				= RecordCount6
								invoked.PrmCurrentSystemTimeStamp	= CurrentSystemTimeStamp
								invoked.PrmFileName					= FileName
							TrailerText				   += LastFileCreationRecordRel.GeneratedTrailerText
							HeaderText				   += LastFileCreationRecordRel.GeneratedHeaderText
	
							if (FileCreationSetupPrm.FileMimeType.PlainText)
								LocalMimeType 						= "text/plain"
							if (FileCreationSetupPrm.FileMimeType.CSV)
								LocalMimeType 						= "text/csv"

							FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							FileCreationSetup	= FileCreationSetupPrm
							LocalTimeStamp		= CurrentSystemTimeStamp
							SequenceNumber 		= FileSequenceNumber
							if (TrailerText entered
							or  HeaderText entered)
								invoke Update FileCreationFileUpdateRel
									invoked.TrailerText		= TrailerText
									invoked.HeaderText 		= HeaderText
							
							if (not FileCreationFileUpdateRel.FileOutput entered
							and FileCreationSetupPrm.GenerationBehaviorForNoOutput.GenerateNoFileRecord)
								invoke Purge FileCreationFileUpdateRel
							
							invoke UpdateRecordCount FileCreationFileUpdateRel
								invoked.TotalRowCount			= TotalRowCount	
								invoked.TotalRecordCount		= TotalRecordCount
								invoked.FileName				= FileName	
								invoked.FileMimeType			= LocalMimeType		

								if (SystemTimeStampPrm entered)
									invoked.Regenerated				= true
									invoked.ProcessRegeneratedFileWithProcessFlow	= ProcessRegeneratedFileWithProcessFlow
									invoked.SendRegeneratedFileToION				= SendRegeneratedFileToION
									
							if (GroupedSystemTimeStampPrm not entered
							and GroupedSequenceNumberPrm  not entered
							and GroupedSystemTimeStampRegenPrm entered
							and GroupedSequenceNumberRegenPrm entered)
								invoke Update FileCreationFileUpdateRel
									invoked.GroupedSystemTimeStamp = CurrentSystemTimeStamp
									invoked.GroupedSequenceNumber  = FileSequenceNumber
								LocalGroupedTime		= GroupedSystemTimeStampRegenPrm
								LocalGroupedSequence	= GroupedSequenceNumberRegenPrm
																				
							if (SystemTimeStampPrm entered)						
								LocalTimeStamp		= SystemTimeStampPrm
								SequenceNumber 		= SequenceNumberPrm
								invoke UpdateRegenerationFields FileCreationFileUpdateRel
									invoked.NewFileTimeStamp 	= CurrentSystemTimeStamp
									invoked.NewSequenceNumber	= FileSequenceNumber
									
								if (GroupedSystemTimeStampPrm not entered
								and GroupedSequenceNumberPrm  not entered
								and GroupedSystemTimeStampRegenPrm entered
								and GroupedSequenceNumberRegenPrm entered)
									for each FileCreationFileGroupedFilesForRegenerationRel
										invoke RegenerateFileThreaded each
											invoked.GroupedSystemTimeStampPrm = CurrentSystemTimeStamp
											invoked.GroupedSequenceNumberPrm  = FileSequenceNumber
								
							if (NeedToGenerateAnotherFile)
								invoke GenerateFileThread 
									invoked.FileCreationSetupPrm	= FileCreationSetupPrm
									invoked.PrmNumberOfThreads		= PrmNumberOfThreads
									invoked.PrmThread	   			= PrmThread
									if (GroupedSystemTimeStampPrm not entered)
										invoked.GroupedSystemTimeStampPrm = CurrentSystemTimeStamp
										invoked.GroupedSequenceNumberPrm  = FileSequenceNumber
									else
										invoked.GroupedSystemTimeStampPrm = GroupedSystemTimeStampPrm
										invoked.GroupedSequenceNumberPrm  = GroupedSequenceNumberPrm
									invoked.FinanceEnterpriseGroupPrm		   = FinanceEnterpriseGroupPrm
									invoked.FileCreationSetupPrm	   = FileCreationSetupPrm
								if (GroupedSystemTimeStampPrm not entered
								and GroupedSequenceNumberPrm  not entered)
									invoke Update FileCreationFileUpdateRel
										invoked.GroupedSystemTimeStamp = CurrentSystemTimeStamp
										invoked.GroupedSequenceNumber  = FileSequenceNumber
							
							
							if (SystemTimeStampPrm not entered
							and SequenceNumberPrm not entered
							and UseSortingThreadingMethod)
								invoke SetFileForThread FileCreationSortThread
									invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.PrmFileCreationSetup	= FileCreationSetup
									invoked.PrmFileSystemTimeStamp	= LocalTimeStamp
									invoked.PrmFileSequenceNumber   = SequenceNumber
									invoked.PrmThread				= PrmThread
							
							else
							if (PrmGeneratedWithSortThread)
								invoke SetFileForThreadRegenerated FileCreationSortThread
									invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
									invoked.PrmFileCreationSetup	= FileCreationSetup
									invoked.PrmFileSystemTimeStamp	= CurrentSystemTimeStamp
									invoked.PrmFileSequenceNumber   = FileSequenceNumber
									invoked.PrmThread				= PrmThread
									invoked.SystemTimeStampPrm		= SystemTimeStampPrm
									invoked.SequenceNumberPrm		= SequenceNumberPrm
						
						else
							FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							FileCreationSetup	= FileCreationSetupPrm
							LocalTimeStamp		= CurrentSystemTimeStamp
							SequenceNumber 		= FileSequenceNumber
							invoke Update FileCreationFileUpdateRel
								invoked.RowsOutputted			= TotalRowCount	
								invoked.RecordsOutputted		= TotalRecordCount
								invoked.RecordCount1			= RecordCount1
								invoked.RecordCount2			= RecordCount2
								invoked.RecordCount3			= RecordCount3
								invoked.RecordCount4			= RecordCount4
								invoked.RecordCount5			= RecordCount5
								invoked.RecordCount6			= RecordCount6
						
						clear in-memory cache
						
         
				Instance Rules
					if (!FileCreationSetup.ErrorHandling.Off)
						initialize InvalidCharactersExist
						initialize LengthErrorsExist
						initialize RequiredFieldsMissing
						initialize LocalCharacterCheckValidation
						initialize LocalLengthCheckValidation
						initialize LocalRequiredCheckValidation
						if (FileCreationSetup.ValidateCharacters)	
							LocalCharacterCheckValidation += "<body><h3 style=\"font-weight:bold;text-align:center\">Character Check Validation</h3><table style=\"table-layout:fixed;width:100%;border-collapse:collapse\"><tbody><tr><th style=\"width:100%;font-weight:bold;font-size:15px;padding:20px;letter-spacing:2px;text-align:center\">Output</th></tr></tbody>"
						if (FileCreationSetup.ValidateLength)	
							LocalLengthCheckValidation += "<body><h3 style=\"font-weight:bold;text-align:center\">Length Validation</h3><table style=\"table-layout:fixed;width:100%;border-collapse:collapse\"><tbody><tr><th style=\"width:33%;font-weight:bold;font-size:15px;padding:20px;letter-spacing:2px;text-align:center\">Column</th><th style=\"width:34%;font-weight:bold;font-size:15px;padding:20px;letter-spacing:2px;text-align:center\">Truncated Value</th><th style=\"width:33%;font-weight:bold;font-size:15px;padding:20px;letter-spacing:2px;text-align:center\">Original Length</th></tr></tbody>"
						if (FileCreationSetup.ValidateRequiredFields)
							LocalRequiredCheckValidation += "<body><h3 style=\"font-weight:bold;text-align:center\">Required Field Validation</h3><table style=\"table-layout:fixed;width:100%;border-collapse:collapse\"><tbody><tr><th style=\"width:100%;font-weight:bold;font-size:15px;padding:20px;letter-spacing:2px;text-align:center\">Column</th></tr></tbody>"
					initialize DetailedMessage
					initialize FieldBeingValidated
					initialize DoNotProcessRecord
					LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
					LocalFinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
					LocalFileCreationSetup	= FileCreationSetupPrm
					if (RecordExistenceCheck)	
						if (FileCreationRowMappingCacheDataRel not exists)
							include FileGeneration.CreateMappingsInMemory
							if (not FileCreationSetupPrm.ThreadingMethod.MergedFileForThreads)
								include FileGeneration.WriteHeader
								LocalFileSize  += FileText size
								initialize FileText

								include FileGeneration.WriteTrailerNoCount
								LocalFileSize  += FileText size
								initialize FileText
							if (FileCreationRowMappingCacheSubtotalRel exists)
								for each FileCreationRowMappingCacheSubtotalRel
									RelatedField = FileCreationSetup.BaseRelation + each.SubtotalField
									LocalSubtotalFieldValueArray.SubtotalFieldValue[each.SubtotalLevel].SubtotalFieldStaticValue = RelatedField compute value
									LocalSubtotalFieldValueArray.SubtotalFieldValue[each.SubtotalLevel].SubtotalPlacement = each.SubtotalPlacement
						if (not NeedToGenerateAnotherFile)
							initialize LocalMessage
							initialize Message
							FileCreationAlphaArray			= LocalAlphaArray
							LocalFinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
							if (SystemTimeStampPrm entered)
								LocalRunTimeStamp = SystemTimeStampPrm
							for each(SubtotalInitial) FileCreationRowMappingCacheSubtotalRel
								LocalSubtotalLevel = each(SubtotalInitial).SubtotalLevel	
								RelatedField = FileCreationSetup.BaseRelation + each(SubtotalInitial).SubtotalField
								LocalSubtotalFieldValueArray.SubtotalFieldValue[LocalSubtotalLevel].SubtotalFieldCompareValue = RelatedField compute value		
								if (LocalSubtotalFieldValueArray.SubtotalFieldValue[LocalSubtotalLevel].SubtotalFieldCompareValue != LocalSubtotalFieldValueArray.SubtotalFieldValue[LocalSubtotalLevel].SubtotalFieldStaticValue)
									SubtotalFieldChanged = true
									end for each
							if (SubtotalFieldChanged)
								for each(SubtotalSecondary) FileCreationRowMappingCacheSubtotalRel
									if (each(SubtotalSecondary).SubtotalLevel >= LocalSubtotalLevel)
										RelatedField = FileCreationSetup.BaseRelation + each(SubtotalSecondary).SubtotalField
										LocalSubtotalFieldValueArray.SubtotalFieldValue[each(SubtotalSecondary).SubtotalLevel].SubtotalFieldStaticValue = RelatedField compute value
								initialize FileText
								LocalTimeStamp	= CurrentSystemTimeStamp
								SequenceNumber 	= FileSequenceNumber
								LastFileCreationUniqueID = LastFileCreationRecord
								include FileGeneration.SubtotalRowGeneration
								invoke AppendToFile FileCreationFileUpdateRel
									invoked.PrmNewLine		= FileText
									invoked.PrmAppendSection = true
								initialize FileText
								initialize SubtotalFieldChanged
								while (LocalSubtotalLevel <= 12)
									initialize FileCreationRecordCountArray.FileCreationRecordCount[LocalSubtotalLevel]
									LocalSubtotalLevel += 1	
							if (FileCreationSetup.UseDynamicRowProcessing)
								LocalHoldTimeStamp = CurrentSystemTimeStamp
								HoldRecordCount1 = RecordCount1
								HoldRecordCount2 = RecordCount2
								HoldRecordCount3 = RecordCount3
								HoldRecordCount4 = RecordCount4
								HoldRecordCount5 = RecordCount5
								HoldRecordCount6 = RecordCount6
								LocalFileName 	 = FileName
								include FileGeneration.CreateDynamicRowOutput
							else		
								include FileGeneration.CreateRowOutput
							if (FileCreationSetup.ValidateCharacters
							and !FileCreationSetup.ErrorHandling.Off)
								invoke FormatVariable FileCreationSetup
									invoked.PrmValidFormat			= FileCreationSetup.CharacterExpression
									invoked.PrmReplaceInvalidsWith	= ""
									invoked.PrmReplaceValue			= FileText
								if (FileText != FileCreationSetup.ReplacedValue)
									LocalCharacterCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + FileText + "</td>" + "</tr></tbody>" 
									InvalidCharactersExist = true
									if (FileCreationSetup.ErrorHandling.MoveToError)
										Status = Status.Error
										DoNotProcessRecord = true
							if (DoNotProcessRecord)										
								initialize FileText
								for each(Total) FileCreationTotalCacheOTMRel
									invoke Update each(Total)
										invoked.PendingSubtotal = blank
										invoked.PendingTotal = blank
								initialize PendingRecordCount1
								initialize PendingRecordCount2
								initialize PendingRecordCount3
								initialize PendingRecordCount4
								initialize PendingRecordCount5
								initialize PendingRecordCount6
								for each(RecordCount) FileCreationRecordCountArray.FileCreationRecordCount
									each(RecordCount).PendingRecordCount1 = 0
									each(RecordCount).PendingRecordCount2 = 0
									each(RecordCount).PendingRecordCount3 = 0
									each(RecordCount).PendingRecordCount4 = 0
									each(RecordCount).PendingRecordCount5 = 0
									each(RecordCount).PendingRecordCount6 = 0
							if (!FileCreationSetup.ErrorHandling.Off
							and (InvalidCharactersExist
							or   LengthErrorsExist
							or   RequiredFieldsMissing))
								DetailedMessage = "<html><body><header><h1 style=\"text-align:center\">Record Errors " + CurrentSystemTimeStamp + "</h1><h2 style=\"text-align:center\">" + RecordIdentifier + "</h2></header></body></html><br>"
								if (FileCreationSetup.ValidateCharacters
								and InvalidCharactersExist)
									LocalCharacterCheckValidation += "</table></body><br />"
									DetailedMessage += LocalCharacterCheckValidation
								if (FileCreationSetup.ValidateLength
								and LengthErrorsExist)
									LocalLengthCheckValidation += "</table></body><br />"
									DetailedMessage += LocalLengthCheckValidation
								if (FileCreationSetup.ValidateRequiredFields
								and RequiredFieldsMissing)
									LocalRequiredCheckValidation += "</table></body><br />"
									DetailedMessage += LocalRequiredCheckValidation
							if (DetailedMessage entered)
								Message = ErrorsExistMessage
							if (!DoNotProcessRecord)
								for each(Total) FileCreationTotalCacheOTMRel
									invoke Update each(Total)
										invoked.Subtotal = each(Total).PendingSubtotal
										invoked.Total = each(Total).PendingTotal
										invoked.PendingSubtotal = blank
										invoked.PendingTotal = blank
								RecordCount1 = RecordCount1 + PendingRecordCount1
								RecordCount2 = RecordCount2 + PendingRecordCount2
								RecordCount3 = RecordCount3 + PendingRecordCount3
								RecordCount4 = RecordCount4 + PendingRecordCount4
								RecordCount5 = RecordCount5 + PendingRecordCount5
								RecordCount6 = RecordCount6 + PendingRecordCount6
								initialize PendingRecordCount1
								initialize PendingRecordCount2
								initialize PendingRecordCount3
								initialize PendingRecordCount4
								initialize PendingRecordCount5
								initialize PendingRecordCount6
								for each(RecordCount) FileCreationRecordCountArray.FileCreationRecordCount
									each(RecordCount).RecordCount1 = each(RecordCount).RecordCount1 + each(RecordCount).PendingRecordCount1
									each(RecordCount).RecordCount2 = each(RecordCount).RecordCount2 + each(RecordCount).PendingRecordCount2
									each(RecordCount).RecordCount3 = each(RecordCount).RecordCount3 + each(RecordCount).PendingRecordCount3
									each(RecordCount).RecordCount4 = each(RecordCount).RecordCount4 + each(RecordCount).PendingRecordCount4
									each(RecordCount).RecordCount5 = each(RecordCount).RecordCount5 + each(RecordCount).PendingRecordCount5
									each(RecordCount).RecordCount6 = each(RecordCount).RecordCount6 + each(RecordCount).PendingRecordCount6
									each(RecordCount).PendingRecordCount1 = 0
									each(RecordCount).PendingRecordCount2 = 0
									each(RecordCount).PendingRecordCount3 = 0
									each(RecordCount).PendingRecordCount4 = 0
									each(RecordCount).PendingRecordCount5 = 0
									each(RecordCount).PendingRecordCount6 = 0
								LocalFileSize  += FileText size
								LocalFileSizeMB = ((LocalFileSize / 1024)/1024)
								if (((LocalFileSizeMB >= FileCreationSetup.NumberOfMegabytesBeforeNewFile
								and FileCreationSetup.FileSegmentLimit.NumberOfMegabytes)
								or  LocalFileSizeMB >= FileCreationSetup.MaxFileSize)
								and SystemTimeStampPrm not entered)
									NeedToGenerateAnotherFile = true
									initialize FileText
								else	
									if (not FileCreationSetup.TurnOffRecordAuditing)
										Message 			+= LocalMessage
									Status 				=  Status.Processed
									RunSystemTimeStamp	=  CurrentSystemTimeStamp
									if (PrmMergedSequenceNumber entered)
										RunSequenceNumber   = PrmMergedSequenceNumber
									else
										RunSequenceNumber   = FileSequenceNumber
									LocalAlphaArray			= FileCreationAlphaArray
									LastFileCreationRecord	= UniqueID
									LocalTimeStamp	= CurrentSystemTimeStamp
									SequenceNumber 	= FileSequenceNumber
									invoke AppendToFile FileCreationFileUpdateRel
										invoked.PrmNewLine		= FileText
									initialize FileText
									if (LocalNumberOfRecordsBeforeSegment entered
									and SystemTimeStampPrm not entered
									and FileCreationSetup.FileSegmentLimit.NumberOfRecords)
										increment LocalRecordCounter
									if (LocalRecordCounter = LocalNumberOfRecordsBeforeSegment
									and FileCreationSetup.FileSegmentLimit.NumberOfRecords
									and SystemTimeStampPrm not entered)
										NeedToGenerateAnotherFile = true
									if (RecordIsWritten)
										increment TotalRecordCount
										initialize RecordIsWritten		
					else
						Status = Status.Processed
						Message = RecordDoesNotExistMessage	
						
		PurgeRecords is a Set Action
			restricted
			run in background
			synchronized on untranslatable:"FileCreationSetup_PurgeFileCreationRecordOrFile_<PrmFinanceEnterpriseGroup>_<Thread>"
			
			Parameters
				PrmFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
				PrmFileCreationSetup	is like FileCreationSetup
				PrmPurgeDate			is TimeStamp
				NumberOfThreads			is Numeric 3
				Thread					is Numeric 3
				
			Instance Selection
				where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    FileCreationSetup = PrmFileCreationSetup
				and	   SystemTimeStamp <= PrmPurgeDate
				and	   Status.Processed
				and   (NumberOfThreads <= 1
				or	  (Key1Hash % NumberOfThreads) = Thread))
				
			Action Rules
				Instance Rules
					invoke Purge
		
		Purge is a Purge Action
			restricted
		
		PurgeByPass is a Purge Action
			restricted
			bypass relational integrity rules
			
		GenerateFinalSubtotalSection is an Instance Action
			restricted
			Parameters
				PrmFileCreationRecordCountArray is a FileCreationRecordCountArray
				PrmLastFileCreationRecord       is UniqueID
				PrmRecordCount1					is Numeric 12
				PrmRecordCount2					is Numeric 12
				PrmRecordCount3					is Numeric 12
				PrmRecordCount4					is Numeric 12
				PrmRecordCount5					is Numeric 12
				PrmRecordCount6					is Numeric 12
				PrmSequenceNumber				is Numeric 4
				PrmTimeStamp					is TimeStamp
				
			Local Fields
				LocalEndOfLineCharacter			is Alpha 2
				
			Action Rules
				RecordCount1				= PrmRecordCount1
				RecordCount2				= PrmRecordCount2
				RecordCount3				= PrmRecordCount3
				RecordCount4				= PrmRecordCount4
				RecordCount5				= PrmRecordCount5
				RecordCount6				= PrmRecordCount6
				LocalTimeStamp				= PrmTimeStamp
				SequenceNumber 				= PrmSequenceNumber
				LastFileCreationUniqueID	= PrmLastFileCreationRecord
				LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
				FileCreationRecordCountArray = PrmFileCreationRecordCountArray
				LocalSubtotalLevel = 1
				include FileGeneration.SubtotalRowGeneration
				RecordCount1 = RecordCount1 + PendingRecordCount1
				RecordCount2 = RecordCount2 + PendingRecordCount2
				RecordCount3 = RecordCount3 + PendingRecordCount3
				RecordCount4 = RecordCount4 + PendingRecordCount4
				RecordCount5 = RecordCount5 + PendingRecordCount5
				RecordCount6 = RecordCount6 + PendingRecordCount6
				initialize PendingRecordCount1
				initialize PendingRecordCount2
				initialize PendingRecordCount3
				initialize PendingRecordCount4
				initialize PendingRecordCount5
				initialize PendingRecordCount6
				invoke Update FileCreationFileUpdateRel
					invoked.Count1				= RecordCount1
					invoked.Count2				= RecordCount2
					invoked.Count3				= RecordCount3
					invoked.Count4				= RecordCount4
					invoked.Count5				= RecordCount5
					invoked.Count6				= RecordCount6
				
		RegenerateSortKeyMultiple is a Set Action
			restricted
			Parameters
				PrmFileCreationSetup 				is like FileCreationSetup
				PrmFinanceEnterpriseGroup  	 				is like FinanceEnterpriseGroup
			
			Instance Selection
				where (FileCreationSetup = PrmFileCreationSetup
				and    FinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				and    SortKey = "SORTKEYNEEDSTOBEREGENERATEDWILLHAPPENAUTOMATICALLY")
				
			Sort Order is BySortKey
			
			Action Rules
				Instance Rules
					invoke RegenerateSortKey
				
		RegenerateSortKey is an Instance Action
			restricted
			Action Rules
				SortBeingRegenerated = true
				if (FileCreationSetup.SortSourceFieldOne entered)
					AlphaArrayIterator	= 1

					include FileGeneration.GetSortFieldValue
						replace Index with 1
					include FileGeneration.AddFieldToAlphaArray
						replace Index with 1
						
					SortThreadKey = FileCreationAlphaArray
					if (FileCreationSortThreadRel not exists
					and not FileCreationSetup.ThreadingMethod.SingleThreaded)
						invoke Create FileCreationSortThread
							resume on error
							invoked.FinanceEnterpriseGroup = FinanceEnterpriseGroup
							invoked.FileCreationSetup = FileCreationSetup
							invoked.Key = SortThreadKey
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldTwo entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 2
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 2
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldThree entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 3
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 3
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldFour entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 4
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 4
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldFive entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 5
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 5
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldSix entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 6
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 6
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldSeven entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 7
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 7
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldEight entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 8
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 8
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldNine entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 9
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 9

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldTen entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 10
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 10
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldEleven entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 11
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 11
		

					if (AlphaArrayIterator < 240
					and FileCreationSetup.SortSourceFieldTwelve entered)
						include FileGeneration.GetSortFieldValue
							replace Index with 12
						include FileGeneration.AddFieldToAlphaArray
							replace Index with 12
		
					if (not SortFieldBlank)
						SortKey = FileCreationAlphaArray	

		ValidateRecordsThread is a Set Action
			synchronized on untranslatable:"FileCreationRecord_ValidateRecords_<FinanceEnterpriseGroupPrm>_<FileCreationSetupPrm>_<PrmThread>"
			restricted
			Parameters
				FileCreationSetupPrm  	  	 	is a FileCreationSetup
				FinanceEnterpriseGroupPrm       is a FinanceEnterpriseGroup
				ValidateRequiredFields     		is Boolean
				ValidateLength			   		is Boolean
				ValidateCharacters  			is Boolean
				CharacterCheck					is Numeric 2
					States
						NonASCII  			value is 0
						UserDefined 		value is 1
				CharacterExpression				is Alpha 50
				PrmThread 						is Numeric 3
				PrmNumberOfThreads				is Numeric 3

			Local Fields
				LocalCharacterCheckValidation   is RichText
				LocalLengthCheckValidation		is RichText
				LocalRequiredCheckValidation    is RichText
				RequiredFieldMissing			is Boolean
				LocalValidateRequiredFields     is Boolean
				LocalValidateLength			    is Boolean
				LocalValidateCharacters  		is Boolean
				LocalCharacterExpression		is Alpha 50
			Parameter Rules

				CharacterExpression
					if (CharacterCheck.NonASCII)
						force default to "[^\x00-\x7F]"

			Instance Selection
				where (FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    FileCreationSetup = FileCreationSetupPrm
				and    (Status = Status.NotProcessed
				or      Status = Status.Error)
				and    (PrmNumberOfThreads <= 1
				or      Key1Hash % PrmNumberOfThreads = PrmThread))

			Sort Order is ByTimeStamp
			Action Rules

				Set Rules
			
					Exit Rules
						invoke Create FileCreationTemporary
							invoked.FinanceEnterpriseGroup 		= FinanceEnterpriseGroupPrm
							invoked.FileCreationSetup 			= FileCreationSetupPrm
							invoked.Key1 						= PrmThread
							invoked.CharacterCheckValidation    = LocalCharacterCheckValidation
							invoked.LengthCheckValidation	    = LocalLengthCheckValidation
							invoked.RequiredCheckValidation     = LocalRequiredCheckValidation

				Instance Rules
					LocalValidateRequiredFields     = ValidateRequiredFields
					LocalValidateLength			    = ValidateLength	
					LocalValidateCharacters  		= ValidateCharacters
					LocalFileCreationSetup = FileCreationSetupPrm
					LocalFinanceEnterpriseGroup	   = FinanceEnterpriseGroupPrm
					LocalCharacterExpression = CharacterExpression
					FieldBeingValidated = true
					if (FileCreationRowMappingCacheDataRel not exists)
						include FileGeneration.CreateMappingsInMemory
					
					
					for each(Row) FileCreationRowMappingCacheDataRel
						if (!each(Row).OneToMany)
							if (ValidateCharacters)
								for each(Column) each(Row).FileCreationColumnMappingCacheValidationRel
									initialize RequiredFieldMissing
									initialize LocalAlpha
									RelatedField				= each(Column).RelatedField
									include FileGeneration.GetFieldValue
									invoke FormatVariable FileCreationSetup
										invoked.PrmValidFormat			= LocalCharacterExpression
										invoked.PrmReplaceInvalidsWith	= "A"
										invoked.PrmReplaceValue			= LocalAlpha
									if (LocalAlpha != FileCreationSetup.ReplacedValue)
										LocalCharacterCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlpha + "</td>" + "</tr></tbody>" 
									if (ValidateRequiredFields
									and each(Column).InputOption.FieldRequired)
										if (each(Column).FieldDataType.Alpha
										and LocalAlpha = blank)
											RequiredFieldMissing = true
										if (each(Column).FieldDataType.Numeric)
											LocalNumeric = LocalAlpha
											if (LocalNumeric = blank)
												RequiredFieldMissing = true
										if (each(Column).FieldDataType.Decimal)
											LocalDecimal = LocalAlpha
											if (LocalDecimal = blank)
												RequiredFieldMissing = true	
										if (each(Column).FieldDataType.Time)
											LocalTime = LocalAlpha
											if (LocalTime = blank)
												RequiredFieldMissing = true	
										if (each(Column).FieldDataType.TimeStamp)
											LocalTimeStamp = LocalAlpha
											if (LocalTimeStamp = blank)
												RequiredFieldMissing = true
										if (each(Column).FieldDataType.Date)
											LocalDate = LocalAlpha
											if (LocalDate = blank)
												RequiredFieldMissing = true
										if (each(Column).FieldDataType.Text
										and LocalText = blank)
											RequiredFieldMissing = true
										if (RequiredFieldMissing)
											LocalRequiredCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "</tr></tbody>" 
									if (ValidateLength
									and each(Column).Length entered
									and each(Column).LengthValidationValid)
										if (FileCreationSetupPrm.FileType.Separated)
											if (LocalAlphaLengthCompare  > each(Column).Length)
												LocalLengthCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlpha + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlphaLengthCompare + "</td>" + "</tr></tbody>" 
										else
											LocalAlphaLengthCompare = LocalAlpha size
											if (LocalAlphaLengthCompare > each(Column).Length)
												LocalAlpha		= LocalAlpha[1:each(Column).Length]
												LocalLengthCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlpha + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlphaLengthCompare + "</td>" + "</tr></tbody>" 

							if (ValidateRequiredFields
							and !ValidateCharacters)
								for each(Column) each(Row).FileCreationColumnMappingCacheRequiredRel
									initialize RequiredFieldMissing
									initialize LocalAlpha
									RelatedField				= each(Column).RelatedField
									include FileGeneration.GetFieldValue
									if (each(Column).FieldDataType.Alpha
									and LocalAlpha = blank)
										RequiredFieldMissing = true
									if (each(Column).FieldDataType.Numeric)
										LocalNumeric = LocalAlpha
										if (LocalNumeric = blank)
											RequiredFieldMissing = true
									if (each(Column).FieldDataType.Decimal)
										LocalDecimal = LocalAlpha
										if (LocalDecimal = blank)
											RequiredFieldMissing = true	
									if (each(Column).FieldDataType.Time)
										LocalTime = LocalAlpha
										if (LocalTime = blank)
											RequiredFieldMissing = true	
									if (each(Column).FieldDataType.TimeStamp)
										LocalTimeStamp = LocalAlpha
										if (LocalTimeStamp = blank)
											RequiredFieldMissing = true
									if (each(Column).FieldDataType.Date)
										LocalDate = LocalAlpha
										if (LocalDate = blank)
											RequiredFieldMissing = true
									if (each(Column).FieldDataType.Text
									and LocalText = blank)
										RequiredFieldMissing = true
									if (RequiredFieldMissing)
										LocalRequiredCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "</tr></tbody>"
									
							
							if (ValidateLength
							and !ValidateCharacters)
								for each(Column) each(Row).FileCreationColumnMappingCacheLengthRel
									initialize LocalAlpha
									RelatedField				= each(Column).RelatedField
									include FileGeneration.GetFieldValue
									if (FileCreationSetupPrm.FileType.Separated)
										if (LocalAlphaLengthCompare  > each(Column).Length)
												LocalLengthCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlpha + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlphaLengthCompare + "</td>" + "</tr></tbody>" 
									else
										LocalAlphaLengthCompare = LocalAlpha size
										if (LocalAlphaLengthCompare > each(Column).Length)
												LocalLengthCheckValidation += "<tbody><tr>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + RecordIdentifier + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + each(Column).FieldName + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlpha + "</td>" + "<td style=\"padding:20px;letter-spacing:1px;text-align:center\">" + LocalAlphaLengthCompare + "</td>" + "</tr></tbody>" 
						else
							include OneToManyLogic

		GrabAuditInformationThread is a Set Action
			restricted
			synchronized on untranslatable:"FileCreationRecord_GrabAuditInformation_<FinanceEnterpriseGroupPrm>_<FileCreationSetupPrm>_<PrmThread>"
		
			Parameters
				FileCreationSetupPrm  	  	 	is a FileCreationSetup
				FinanceEnterpriseGroupPrm        is a FinanceEnterpriseGroup
				BeginTimeStamp  				is TimeStamp
				EndTimeStamp    				is TimeStamp
				PrmNumberOfThreads				is Numeric 3
				PrmThread						is Numeric 3
			Rule Blocks
				GetActionInformation
					if (each(Audit).action tag != blank
					and	not ActionTag contains each(Audit).action tag)
						if (ActionTag = blank)
							ActionTag = each(Audit).action tag
						else
							ActionTag += "," + each(Audit).action tag
					if (not InitiatingAction contains each(Audit).initiating action)
						if (InitiatingAction = blank)
							InitiatingAction = each(Audit).initiating action
						else
							InitiatingAction += "," + each(Audit).initiating action

			Instance Selection
				
				where (FinanceEnterpriseGroup = FinanceEnterpriseGroupPrm
				and    FileCreationSetup = FileCreationSetupPrm
				and    Status.NotProcessed
				and    (PrmNumberOfThreads <= 1
				or      Key1Hash % PrmNumberOfThreads = PrmThread))

			Sort Order is ByTimeStamp


			Action Rules
			
				Set Rules

				Instance Rules

					if (FileCreationSetupPrm.ExportFile.PayablesInvoice)
						if (PayablesInvoiceRel.update stamp > BeginTimeStamp)
							for each(Audit) PayablesInvoiceRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields = "PayablesInvoice." + "AllFieldsChanged"
										else
											AllChangedFields += ",PayablesInvoice." + "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "PayablesInvoice." + each(ChangedField)
												else
													AllChangedFields += ",PayablesInvoice." + each(ChangedField)
						for each(OTM) PayablesInvoiceDistributionRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "PayablesInvoiceDistribution." + each(OTM).PayablesInvoiceDistribution + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",PayablesInvoiceDistribution." + each(OTM).PayablesInvoiceDistribution + "." + "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "PayablesInvoiceDistribution." + each(OTM).PayablesInvoiceDistribution + "." + each(ChangedField)
													else
														AllChangedFields += ",PayablesInvoiceDistribution." + each(OTM).PayablesInvoiceDistribution + "." + each(ChangedField)

						for each(OTM) PayablesInvoicePaymentRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields = "PayablesInvoicePayment." + each(OTM).PayablesInvoicePayment + "." + "AllFieldsChanged"
											else
												AllChangedFields += ",PayablesInvoicePayment." + each(OTM).PayablesInvoicePayment + "." + "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "PayablesInvoicePayment." + each(OTM).PayablesInvoicePayment + "." + each(ChangedField)
													else
														AllChangedFields += ",PayablesInvoicePayment." + each(OTM).PayablesInvoicePayment + "." + each(ChangedField)

						for each(OTM) PayablesInvoiceAddOnChargeRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields = "PayablesInvoiceAddOnCharge." + each(OTM).PayablesInvoiceAddOnCharge + "." + "AllFieldsChanged"
											else
												AllChangedFields += ",PayablesInvoiceAddOnCharge." + each(OTM).PayablesInvoiceAddOnCharge + "." + "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "PayablesInvoiceAddOnCharge." + each(OTM).PayablesInvoiceAddOnCharge + "." + each(ChangedField)
													else
														AllChangedFields += ",PayablesInvoiceAddOnCharge." + each(OTM).PayablesInvoiceAddOnCharge + "." + each(ChangedField)
								
					
					if (FileCreationSetupPrm.ExportFile.InventoryLocation)
						if (InventoryLocationRel.update stamp > BeginTimeStamp)
							for each(Audit) InventoryLocationRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields = "InventoryLocation." + "AllFieldsChanged"
										else
											AllChangedFields += ",InventoryLocation." + "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "InventoryLocation." + each(ChangedField)
												else
													AllChangedFields += ",InventoryLocation." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.GLTransactionDetail)
						if (GLTransactionDetailRel.update stamp > BeginTimeStamp)
							for each(Audit) GLTransactionDetailRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "GLTransactionDetail." +  "AllFieldsChanged"
										else
											AllChangedFields +=  ",GLTransactionDetail." + "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "GLTransactionDetail." + each(ChangedField)
												else
													AllChangedFields += ",GLTransactionDetail." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.GeneralLedgerTransaction)
						if (GeneralLedgerTransactionRel.update stamp > BeginTimeStamp)
							for each(Audit) GeneralLedgerTransactionRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "GeneralLedgerTransaction." +  "AllFieldsChanged"
										else
											AllChangedFields +=  ",GeneralLedgerTransaction." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "GeneralLedgerTransaction." + each(ChangedField)
												else
													AllChangedFields += ",GeneralLedgerTransaction." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.GeneralLedgerTotal)
						if (GeneralLedgerTotalRel.update stamp > BeginTimeStamp)
							for each(Audit) GeneralLedgerTotalRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "GeneralLedgerTotal."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",GeneralLedgerTotal." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "GeneralLedgerTotal." + each(ChangedField)
												else
													AllChangedFields += ",GeneralLedgerTotal." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.Asset)
						if (AssetRel.update stamp > BeginTimeStamp)
							for each(Audit) AssetRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "Asset."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",Asset." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "Asset." + each(ChangedField)
												else
													AllChangedFields += ",Asset." + each(ChangedField)
						
						for each(OTM) AssetBookRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "AssetBook." + each(OTM).AssetBook + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",AssetBook." + each(OTM).AssetBook + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "AssetBook." + each(OTM).AssetBook + "." + each(ChangedField)
													else
														AllChangedFields += ",AssetBook." + each(OTM).AssetBook + "." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.InventoryTransactionLine)
						if (InventoryTransactionLineRel.update stamp > BeginTimeStamp)
							for each(Audit) InventoryTransactionLineRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "InventoryTransactionLine."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",InventoryTransactionLine." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "InventoryTransactionLine." + each(ChangedField)
												else
													AllChangedFields += ",InventoryTransactionLine." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.PurchaseOrderLine)
						if (PurchaseOrderLineRel.update stamp > BeginTimeStamp)
							for each(Audit) PurchaseOrderLineRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "PurchaseOrderLine."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",PurchaseOrderLine." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "PurchaseOrderLine." + each(ChangedField)
												else
													AllChangedFields += ",PurchaseOrderLine." + each(ChangedField)
					
					if (FileCreationSetupPrm.ExportFile.Vendor)
						if (VendorRel.update stamp > BeginTimeStamp)
							for each(Audit) VendorRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "Vendor."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",Vendor." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "Vendor." + each(ChangedField)
												else
													AllChangedFields += ",Vendor." + each(ChangedField)
						for each(OTM) VendorLocationRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "VendorLocation." + each(OTM).VendorLocation + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",VendorLocation." + each(OTM).VendorLocation + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "VendorLocation." + each(OTM).VendorLocation + "." + each(ChangedField)
													else
														AllChangedFields += ",VendorLocation." + each(OTM).VendorLocation + "." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.Scenario)
						if (ScenarioRel.update stamp > BeginTimeStamp)
							for each(Audit) ScenarioRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "Scenario."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",Scenario." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "Scenario." + each(ChangedField)
												else
													AllChangedFields += ",Scenario." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.GeneralLedgerChartAccount)
						if (GeneralLedgerChartAccountRel.update stamp > BeginTimeStamp)
							for each(Audit) GeneralLedgerChartAccountRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "GeneralLedgerChartAccount."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",GeneralLedgerChartAccount." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "GeneralLedgerChartAccount." + each(ChangedField)
												else
													AllChangedFields += ",GeneralLedgerChartAccount." + each(ChangedField)

						for each(OTM) ReportingChartAccountRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "ReportingChartAccount." + each(OTM).ReportingChartAccount + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",ReportingChartAccount." + each(OTM).ReportingChartAccount + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "ReportingChartAccount." + each(OTM).ReportingChartAccount + "." + each(ChangedField)
													else
														AllChangedFields += ",ReportingChartAccount." + each(OTM).ReportingChartAccount + "." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.BinGroup)
						if (BinGroupRel.update stamp > BeginTimeStamp)
							for each(Audit) BinGroupRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "BinGroup."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",BinGroup." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "BinGroup." + each(ChangedField)
												else
													AllChangedFields += ",BinGroup." + each(ChangedField)
						
						for each(OTM) BinGroupDetailRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "BinGroupDetail." + each(OTM).BinGroupDetail + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",BinGroupDetail." + each(OTM).BinGroupDetail + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "BinGroupDetail." + each(OTM).BinGroupDetail + "." + each(ChangedField)
													else
														AllChangedFields += ",BinGroupDetail." + each(OTM).BinGroupDetail + "." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.Contract)
						if (ContractRel.update stamp > BeginTimeStamp)
							for each(Audit) ContractRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "Contract."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",Contract." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "Contract." + each(ChangedField)
												else
													AllChangedFields += ",Contract." + each(ChangedField)
						
						for each(OTM) ContractLineRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "ContractLine." + each(OTM).ContractLine + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",ContractLine." + each(OTM).ContractLine + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "ContractLine." + each(OTM).ContractLine + "." + each(ChangedField)
													else
														AllChangedFields += ",ContractLine." + each(OTM).ContractLine + "." + each(ChangedField)
					
					if (FileCreationSetupPrm.ExportFile.Item)
						if (ItemRel.update stamp > BeginTimeStamp)
							for each(Audit) ItemRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields = "Item." + "AllFieldsChanged"
										else
											AllChangedFields += ",Item." + "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "Item." + each(ChangedField)
												else
													AllChangedFields += ",Item." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.RequesterRequestingLocation)
						if (RequesterRequestingLocationRel.update stamp > BeginTimeStamp)
							for each(Audit) RequesterRequestingLocationRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields = "RequesterRequestingLocation." + "AllFieldsChanged"
										else
											AllChangedFields += ",RequesterRequestingLocation." + "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "RequesterRequestingLocation." + each(ChangedField)
												else
													AllChangedFields += ",RequesterRequestingLocation." + each(ChangedField)
					
					if (FileCreationSetupPrm.ExportFile.PurchaseOrder)
						if (PurchaseOrderRel.update stamp > BeginTimeStamp)
							for each(Audit) PurchaseOrderRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "PurchaseOrder."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",PurchaseOrder." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "PurchaseOrder." + each(ChangedField)
												else
													AllChangedFields += ",PurchaseOrder." + each(ChangedField)
						
						for each(OTM) PurchaseOrderLineOTMRel
							if (each(OTM).update stamp > BeginTimeStamp)
								for each(Audit) each(OTM).audit log records 
									if (each(Audit).system stamp > BeginTimeStamp
									and each(Audit).system stamp <= EndTimeStamp)
										include GetActionInformation
										if each(Audit).action type = 1 
											if (AllChangedFields = blank)
												AllChangedFields =  "PurchaseOrderLine." + each(OTM).PurchaseOrderLine + "." + "AllFieldsChanged"
											else
												AllChangedFields +=  ",PurchaseOrderLine." + each(OTM).PurchaseOrderLine + "." +  "AllFieldsChanged"
										else
											for each(ChangedField) each(Audit).changed field names split
												if (AllChangedFields not contains each(ChangedField))
													if (AllChangedFields = blank)
														AllChangedFields += "PurchaseOrderLine." + each(OTM).PurchaseOrderLine + "." + each(ChangedField)
													else
														AllChangedFields += ",PurchaseOrderLine." + each(OTM).PurchaseOrderLine + "." + each(ChangedField)

					if (FileCreationSetupPrm.ExportFile.GeneralLedgerJournalControl)
						if (GeneralLedgerJournalControlRel.update stamp > BeginTimeStamp)
							for each(Audit) GeneralLedgerJournalControlRel.audit log records 
								if (each(Audit).system stamp > BeginTimeStamp
								and each(Audit).system stamp <= EndTimeStamp)
									include GetActionInformation
									if each(Audit).action type = 1 
										if (AllChangedFields = blank)
											AllChangedFields =  "GeneralLedgerJournalControl."  + "AllFieldsChanged"
										else
											AllChangedFields +=  ",GeneralLedgerJournalControl." +  "AllFieldsChanged"
									else
										for each(ChangedField) each(Audit).changed field names split
											if (AllChangedFields not contains each(ChangedField))
												if (AllChangedFields = blank)
													AllChangedFields += "GeneralLedgerJournalControl." + each(ChangedField)
												else
													AllChangedFields += ",GeneralLedgerJournalControl." + each(ChangedField)
					
		SetThreadingKey is a Set Action
			restricted

			Instance Selection
				where (Status.NotProcessed
				or     Status.Error)

			Action Rules
			
				Set Rules

				Instance Rules
					ThreadingKey = Key1Hash

		SetThreadingKeyOnRegenerate is a Set Action
			restricted

			Parameters
				FinanceEnterpriseGroupPrm		is like FinanceEnterpriseGroup
				FileCreationSetupPrm			is like FileCreationSetup
				SystemTimeStampPrm				is TimeStamp
			Instance Selection
				where (FinanceEnterpriseGroup		= FinanceEnterpriseGroupPrm
				and    FileCreationSetup			= FileCreationSetupPrm
				and    RunSystemTimeStamp   		= SystemTimeStampPrm)

			Action Rules
			
				Set Rules

				Instance Rules
					ThreadingKey = Key1Hash

		PreviewRecord is an Instance Action
			default label is "Preview"
			valid when (FileCreationSetup.UseDynamicRowProcessing)	
			Action Rules	
				if (FileCreationSetup.RegenerateMappingsFlag.Needed)	
					invoke Update FileCreationSetup
						invoked.RegenerateMappingsFlag = 1
					invoke PurgeMappings FileCreationRowDynamicMapping in foreground
						invoked.FinanceEnterpriseGroupPrm 	= FinanceEnterpriseGroup
						invoked.FileCreationSetupPrm 		= FileCreationSetup
					for each FileCreationSetup.FileCreationRowDetail set
						if (!each.Header
						and !each.Trailer
						and !each.Subtotal)
							if (each.LinkedSetup not entered
							and	each.LinkedRow not entered)
								invoke CreateDynamicRowLPL FileCreationColumnDetail in foreground
									invoked.FinanceEnterpriseGroupPrm = FinanceEnterpriseGroup
									invoked.FileCreationSetupPrm = FileCreationSetup
									invoked.FileCreationRowDetailPrm = each.FileCreationRowDetail
									invoked.TargetFileCreationSetupPrm	= FileCreationSetup
									invoked.TargetFileCreationRowDetailPrm	= each.FileCreationRowDetail
							else
								invoke CreateDynamicRowLPL FileCreationColumnDetail in foreground
									invoked.FinanceEnterpriseGroupPrm = FinanceEnterpriseGroup
									invoked.FileCreationSetupPrm = each.LinkedSetup
									invoked.FileCreationRowDetailPrm = each.LinkedRow
									invoked.TargetFileCreationSetupPrm	= FileCreationSetup
									invoked.TargetFileCreationRowDetailPrm	= each.FileCreationRowDetail
					invoke SetRegenerateMappingsFlagToNotNeeded FileCreationSetup in foreground
				FileName = FileCreationSetup.CalculatedFileName

				PreviewRecord = true
				LocalEndOfLineCharacter = FileCreationSetup.DerivedEndOfLineCharacter
				if(Status.Processed)
					LocalRunTimeStamp = RunSystemTimeStamp
				include FileGeneration.CreateOutputAction

				PreviewRecord = false
