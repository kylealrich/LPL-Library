DetailReconciliationMatchRule is a BusinessClass
    owned by reconciliation
    prefix is DRMR
    sql name is DetailReconMatchRule

    Ontology
    	symbolic key is DetailReconciliationMatchRule

    Persistent Fields
		Description							is Alpha up to 250
		InterfaceRule						is a TransactionReconDetail group
		GeneralLedgerRule					is a TransactionReconDetail group
			default label is "GlobalLedgerRule"
		InterfaceApplyToAll					is Boolean
			default label is "ApplyToAll"
		GeneralLedgerApplyToAll				is Boolean
			default label is "ApplyToAll"
		MatchType							is a ReconciliationMatchType
		UseDayLag							is Boolean
		DayLag								is Numeric 3
		FutureDay							is Numeric 3
	    ReconciliationTolerancePercent		is Percent 3
			default label is "TolerancePercent"
		ReconciliationToleranceAmount		is an InternationalAmount
			default label is "ToleranceAmount"
	    ReconciliationToleranceAccount		is a FinanceCodeBlockFull
	    	default label is "ToleranceAccount"
		ReconciliationToleranceAllocation	is a CashAllocationCode
			default label is "ToleranceAllocationCode"
	    InterfaceLineMatchField				is Alpha 200	
			default label is "LineMatchField"
			Text Variables
				TransactionNumber
				TransactionDate
				TransactionAmount
				PostingDate
				Currency
				UnitsAmount
				SystemCode
				SourceCode
				Reference
				Description
		InterfaceLineMatchFieldArray		is a LineMatchFieldArray
		InterfaceRemoveAlphaCharacters		is Boolean
			default label is "RemoveAlphaCharacters"
		InterfaceRemoveLeadingZeros			is Boolean
			default label is "RemoveLeadingZeros"
		InterfaceRemoveCharacterString		is Boolean
			default label is "RemoveCharacterString"
		InterfaceRemoveString				is AlphaUpper up to 20
		InterfaceRemoveCharactersBefore		is Boolean
			default label is "RemoveCharacterStringAndPrecedingCharacters"
		InterfaceRemoveBefore				is AlphaUpper up to 20
		InterfaceRemoveCharactersAfter		is Boolean
			default label is "RemoveCharacterStringAndSubsequentCharacters"
		InterfaceRemoveAfter				is AlphaUpper up to 20
		GeneralLedgerLineMatchField			is Alpha 200	
			default label is "LineMatchField"
			Text Variables
				TransactionNumber
				TransactionDate
				TransactionAmount
				PostingDate
				Currency
				UnitsAmount
				SystemCode
				SourceCode
				Reference
				Description
		GeneralLedgerLineMatchFieldArray	is a LineMatchFieldArray
			default label is "GlobalLedgerLineMatchFieldArray"	
		GeneralLedgerRemoveAlphaCharacters	is Boolean
			default label is "RemoveAlphaCharacters"
		GeneralLedgerRemoveLeadingZeros		is Boolean
			default label is "RemoveLeadingZeros"
		GeneralLedgerRemoveCharacterString	is Boolean
			default label is "RemoveCharacterString"
		GeneralLedgerRemoveString			is AlphaUpper up to 20
			default label is "GlobalLedgerRemoveString"			
		GeneralLedgerRemoveCharactersBefore	is Boolean
			default label is "RemoveCharacterStringAndPrecedingCharacters"
		GeneralLedgerRemoveBefore			is AlphaUpper up to 20
			default label is "GlobalLedgerRemoveBefore" 		
		GeneralLedgerRemoveCharactersAfter	is Boolean
			default label is "RemoveCharacterStringAndSubsequentCharacters"
		GeneralLedgerRemoveAfter			is AlphaUpper up to 20
			default label is "GlobalLedgerRemoveAfter" 			
		Active
	
	Local Fields
		LocalCounter 						is Numeric 3
		LocalSegment						is Numeric 2
		
	Derived Fields
		DerivedInterfaceRemoveString is a StringField
			type is Alpha up to 35
			"(?i)"
			"\Q"
			InterfaceRemoveString
			"\E"
		
		DerivedInterfaceRemoveBefore is a StringField
			type is Alpha up to 35
			"^.*"
			"(?i)"
			"\Q"
			InterfaceRemoveBefore
			"\E"
			
		DerivedInterfaceRemoveAfter is a StringField
			type is Alpha up to 35
			"(?i)"
			"\Q"
			InterfaceRemoveAfter
			"\E"
			".*$"
		
		DerivedGeneralLedgerRemoveString is a StringField
			type is Alpha up to 35
			"(?i)"
			"\Q"
			GeneralLedgerRemoveString
			"\E"
			
		DerivedGeneralLedgerRemoveBefore is a StringField
			type is Alpha up to 35
			"^.*"
			"(?i)"
			"\Q"
			GeneralLedgerRemoveBefore
			"\E"
				
		DerivedGeneralLedgerRemoveAfter is a StringField
			type is Alpha up to 35
			"(?i)"
			"\Q"
			GeneralLedgerRemoveAfter
			"\E"
			".*$"
			
		DerivedDetailReconciliationMatchRuleGroup is a DerivedField
			type is AlphaUpper 50
			restricted
			return first DetailReconciliationMatchRuleGroupDetailRel.DetailReconciliationMatchRuleGroup
			
		DisableReconApplyingModificationOptionsToVariablesOnly is a DerivedField
			type is Boolean
			restricted
			return config.DisableReconApplyingModificationOptionsToVariablesOnly
						
	Field Rules
		Description
			default to DetailReconciliationMatchRule
		
		InterfaceRule
			if (GeneralLedgerRule entered)
				constraint (InterfaceRule != GeneralLedgerRule)
					"InterfaceRuleAndGlobalLedgerRuleMustBeDifferent"
			
			if (!InterfaceApplyToAll
			and !GeneralLedgerRule entered
			and !GeneralLedgerApplyToAll)
				required
					"MustEnterAnInterfaceRuleOrGlobalLedgerRule"
		
		InterfaceApplyToAll
			if (InterfaceRule entered)
				cannot be entered
					"CanEnterEitherAnInterfaceRuleOrApplyToAll"
					
		InterfaceLineMatchField
			if (InterfaceRule entered
			or	InterfaceApplyToAll)
				default to GeneralLedgerLineMatchField
				required
					"InterfaceLineMatchFieldIsRequired"
			
			constraint (InterfaceRule entered
			or			InterfaceApplyToAll)
				"MustEnterAnInterfaceRuleOrApplyToAllWhenALineMatchFieldIsEntered"
				
			InterfaceLineMatchField -= " "

			LocalCounter = 1
			LocalSegment = 1 	
			initialize InterfaceLineMatchFieldArray
			while (LocalCounter <= 200)
				if (InterfaceLineMatchField[LocalCounter] entered)
					if (InterfaceLineMatchField[LocalCounter] = "{")
						if (LocalCounter != 1)
							LocalSegment += 1
						InterfaceLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += InterfaceLineMatchField[LocalCounter]
						InterfaceLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Variable = true
					else
					if (InterfaceLineMatchField[LocalCounter] = "}")
						InterfaceLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += InterfaceLineMatchField[LocalCounter]
						if (InterfaceLineMatchField[LocalCounter+1] != "{")
							LocalSegment += 1
					else
						InterfaceLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += InterfaceLineMatchField[LocalCounter]
					LocalCounter += 1
				else
					end while
			
		InterfaceRemoveLeadingZeros
			if (!InterfaceRule entered
			and !InterfaceApplyToAll)
				cannot be entered
					"MustEnterAnInterfaceRuleOrApplyToAllWhenRemoveLeadingZerosIsSelected"
					
		InterfaceRemoveAlphaCharacters
			if (!InterfaceRule entered
			and !InterfaceApplyToAll)
				cannot be entered
					"MustEnterAnInterfaceRuleOrApplyToAllWhenRemoveAlphaCharactersIsSelected"
					
			constraint (!InterfaceRemoveCharacterString)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringForTheInterfaceLineMatchField"
			
			constraint (!InterfaceRemoveCharactersBefore)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringAndPrecedingCharactersForTheInterfaceLineMatchField"
			
			constraint (!InterfaceRemoveCharactersAfter)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringAndSubsequentCharactersForTheInterfaceLineMatchField"
						
		InterfaceRemoveCharacterString
			constraint (!InterfaceRemoveCharactersBefore)
				"CannotRemoveCharacterStringAndRemoveCharacterStringAndPrecedingCharactersForTheInterfaceLineMatchField"
			
			constraint (!InterfaceRemoveCharactersAfter)
				"CannotRemoveCharacterStringAndRemoveCharacterStringAndSubsequentCharactersForTheInterfaceLineMatchField"
							
		InterfaceRemoveString
			if (InterfaceRemoveCharacterString)
				required
					"MustEnterACharacterStringToBeRemovedForTheInterfaceLineMatchField"
			else
				initialize
				
		InterfaceRemoveBefore
			if (InterfaceRemoveCharactersBefore
			and InterfaceRemoveCharactersAfter)
				constraint (InterfaceRemoveBefore != InterfaceRemoveAfter)
					"RemoveCharacterStringAndPrecedingCharactersMustBeDifferentThanRemoveCharacterStringAndSubsequentCharactersForTheInterfaceLineMatchField"
				
			if (InterfaceRemoveCharactersBefore)
				required
					"MustEnterACharacterStringToBeRemovedForTheInterfaceLineMatchField"
			else
				initialize
				
		InterfaceRemoveAfter
			if (InterfaceRemoveCharactersAfter
			and InterfaceRemoveCharactersBefore)
				constraint (InterfaceRemoveAfter != InterfaceRemoveBefore)
					"RemoveCharacterStringAndSubsequentCharactersMustBeDifferentThanRemoveCharacterStringAndPrecedingCharactersForTheInterfaceLineMatchField"
				
			if (InterfaceRemoveCharactersAfter)
				required
					"MustEnterACharacterStringToBeRemovedForTheInterfaceLineMatchField"
			else
				initialize
				
		GeneralLedgerRule
			if (InterfaceRule entered)
				constraint (GeneralLedgerRule != InterfaceRule)
					"GlobalLedgerRuleAndInterfaceRuleMustBeDifferent"
			
			if (!GeneralLedgerApplyToAll
			and !InterfaceRule entered
			and !InterfaceApplyToAll)
				required
					"MustEnterAnInterfaceRuleOrGlobalLedgerRule"
		
		GeneralLedgerApplyToAll
			if (GeneralLedgerRule entered)
				cannot be entered
					"CanEnterEitherAGlobalLedgerRuleOrApplyToAll"
											
		GeneralLedgerLineMatchField
			if (GeneralLedgerRule entered
			or	GeneralLedgerApplyToAll)
				default to InterfaceLineMatchField
				required
					"GlobalLedgerLineMatchFieldIsRequired"
			
			constraint (GeneralLedgerRule entered
			or 			GeneralLedgerApplyToAll)
				"MustEnterAGlobalLedgerRuleOrApplyToAllWhenALineMatchFieldIsEntered"
				
			GeneralLedgerLineMatchField -= " "
		
			LocalCounter = 1
			LocalSegment = 1 	
			initialize GeneralLedgerLineMatchFieldArray
			while (LocalCounter <= 200)
				if (GeneralLedgerLineMatchField[LocalCounter] entered)
					if (GeneralLedgerLineMatchField[LocalCounter] = "{")
						if (LocalCounter != 1)
							LocalSegment += 1
						GeneralLedgerLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += GeneralLedgerLineMatchField[LocalCounter]
						GeneralLedgerLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Variable = true
					else
					if (GeneralLedgerLineMatchField[LocalCounter] = "}")
						GeneralLedgerLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += GeneralLedgerLineMatchField[LocalCounter]
						if (GeneralLedgerLineMatchField[LocalCounter+1] != "{")
							LocalSegment += 1
					else
						GeneralLedgerLineMatchFieldArray.LineMatchFieldSegment[LocalSegment].Segment += GeneralLedgerLineMatchField[LocalCounter]
					LocalCounter += 1
				else
					end while
					
		GeneralLedgerRemoveLeadingZeros
			if (!GeneralLedgerRule entered
			and !GeneralLedgerApplyToAll)
				cannot be entered
					"MustEnterAGlobalLedgerRuleOrApplyToAllWhenRemoveLeadingZerosIsSelected"
					
		GeneralLedgerRemoveAlphaCharacters
			if (!GeneralLedgerRule entered
			and !GeneralLedgerApplyToAll)
				cannot be entered
					"MustEnterAGlobalLedgerRuleOrApplyToAllWhenRemoveAlphaCharactersIsSelected"
		
			constraint (!GeneralLedgerRemoveCharacterString)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringForTheGlobalLedgerLineMatchField"
			
			constraint (!GeneralLedgerRemoveCharactersBefore)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringAndPrecedingCharactersForTheGlobalLedgerLineMatchField"
			
			constraint (!GeneralLedgerRemoveCharactersAfter)
				"CannotRemoveAlphaCharactersAndRemoveCharacterStringAndSubsequentCharactersForTheGlobalLedgerLineMatchField"
						
		GeneralLedgerRemoveCharacterString
			constraint (!GeneralLedgerRemoveCharactersBefore)
				"CannotRemoveCharacterStringAndRemoveCharacterStringAndPrecedingCharactersForTheGlobalLedgerLineMatchField"
			
			constraint (!GeneralLedgerRemoveCharactersAfter)
				"CannotRemoveCharacterStringAndRemoveCharacterStringAndSubsequentCharactersForTheGlobalLedgerLineMatchField"
							
		GeneralLedgerRemoveString
			if (GeneralLedgerRemoveCharacterString)
				required
					"MustEnterACharacterStringToBeRemovedForTheGlobalLedgerLineMatchField"
			else
				initialize
				
		GeneralLedgerRemoveBefore
			if (GeneralLedgerRemoveCharactersBefore
			and GeneralLedgerRemoveCharactersAfter)
				constraint (GeneralLedgerRemoveBefore != GeneralLedgerRemoveAfter)
					"RemoveCharacterStringAndPrecedingCharactersMustBeDifferentThanRemoveCharacterStringAndSubsequentCharactersForTheGlobalLedgerLineMatchField"
				
			if (GeneralLedgerRemoveCharactersBefore)
				required
					"MustEnterACharacterStringToBeRemovedForTheGlobalLedgerLineMatchField"
			else
				initialize
				
		GeneralLedgerRemoveAfter
			if (GeneralLedgerRemoveCharactersAfter
			and GeneralLedgerRemoveCharactersBefore)
				constraint (GeneralLedgerRemoveAfter != GeneralLedgerRemoveBefore)
					"RemoveCharacterStringAndSubsequentCharactersMustBeDifferentThanRemoveCharacterStringAndPrecedingCharactersForTheGlobalLedgerLineMatchField"
				
			if (GeneralLedgerRemoveCharactersAfter)
				required
					"MustEnterACharacterStringToBeRemovedForTheGlobalLedgerLineMatchField"
			else
				initialize			
						
		DayLag
			if (UseDayLag)
				constraint (DayLag >= 0)
					"DayLagCannotBeNegative"
			else
				initialize
		
		FutureDay
			if (UseDayLag)
				constraint (FutureDay >= 0)
					"FutureDayCannotBeNegative"
			else
				initialize
		
		ReconciliationToleranceAmount
			constraint (!ReconciliationTolerancePercent entered)
				"CanEnterEitherAToleranceAmountOrTolerancePercent"
			
			constraint (ReconciliationToleranceAmount > 0)
				"ToleranceAmountCannotBeNegative"
			
			constraint (ReconciliationToleranceAccount entered
			or 			ReconciliationToleranceAllocation entered)
				"MustEnterAToleranceAccountOrToleranceAllocationCode"
					
		ReconciliationToleranceAccount
			constraint (!ReconciliationToleranceAllocation entered)
				"CanEnterEitherAToleranceAccountOrToleranceAllocationCode"
			
			constraint (ReconciliationToleranceAmount entered)
				"ToleranceAmountIsRequiredWhenAToleranceAccountOrToleranceAllocationCodeIsEntered"
			
			if (ReconciliationManagementGroup.FinanceEnterpriseGroup exists
			and !ReconciliationToleranceAccount.ToAccountingEntity entered)
				initialize ReconciliationToleranceAccount.Ledger
				
		ReconciliationToleranceAllocation
			constraint (!ReconciliationToleranceAccount entered)
				"CanEnterEitherAToleranceAccountOrToleranceAllocationCode"
			
			constraint (ReconciliationToleranceAmount entered)
				"ToleranceAmountIsRequiredWhenAToleranceAccountOrToleranceAllocationCodeIsEntered"
			
			constraint (ReconciliationToleranceAllocation.AllocationType.Percent)
				"ToleranceAllocationCodeMustBePercentType"
				
		Active
			initial value is true
	
	Conditions





			
		InMatchRuleGroup
			restricted
			when (DetailReconciliationMatchRuleGroupDetailRel exists)
				
		NotInMatchRuleGroup
			restricted
			when (!DetailReconciliationMatchRuleGroupDetailRel exists)

		HasToleranceDefined
			restricted
			when (ReconciliationToleranceAmount entered
			or	  ReconciliationTolerancePercent entered)
		
		InterfaceRuleEntered
			restricted
			when (InterfaceRule entered)
			
		GeneralLedgerRuleEntered
			restricted
			when (GeneralLedgerRule entered)
			
	Relations
		DetailReconciliationMatchRuleGroupDetailRel
			one-to-many relation to DetailReconciliationMatchRuleGroupDetail
			Field Mapping uses ByDetailReconciliationMatchRule
				related.ReconciliationManagementGroup	= ReconciliationManagementGroup
				related.DetailReconciliationMatchRule	= DetailReconciliationMatchRule
				
	Attach Rules
		constraint (Active)
			"AccountMatchRuleIsInactive"
	
	Actions
		Create is a Create Action
					
		Update is an Update Action
		
		AddMatchRule is an Instance Action
			valid when (Active)
			default label is "AddToMatchRuleGroup"
			Parameters
				PrmReconciliationManagementGroup 		is a ReconciliationManagementGroup
				PrmDetailReconciliationMatchRuleGroup	is a DetailReconciliationMatchRuleGroup

			Action Rules
				invoke Create DetailReconciliationMatchRuleGroupDetail
					invoked.ReconciliationManagementGroup	 	= PrmReconciliationManagementGroup
					invoked.DetailReconciliationMatchRuleGroup	= PrmDetailReconciliationMatchRuleGroup
					invoked.DetailReconciliationMatchRule		= DetailReconciliationMatchRule
					
		Delete is a Delete Action
			Action Rules
				constraint (DetailReconciliationMatchRuleGroupDetailRel not exists)
					"CannotDelete:<DetailReconciliationMatchRule>ExistsInMatchRuleGroup<DerivedDetailReconciliationMatchRuleGroup>"
			
