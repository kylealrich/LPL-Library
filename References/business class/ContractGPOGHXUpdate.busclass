ContractGPOGHXUpdate is a BusinessClass
	owned by po
	
	prefix is UpGHX
	
	Ontology
		symbolic key is ContractGPOGHXUpdate
	Patterns



	Persistent Fields
		ContractNumber                          is Alpha 50   
		ContractDescription                     is Alpha 80   
		TierLevel                               is like ContractImportTier 
		ContractTierDescription                 is Text  
		Manufacturer                            is Alpha 100
		ManufacturerEID                         is Alpha 50
		SourceEID                               is Alpha 50
		SourceType                              is Alpha 100 
		SourceContractType                      is Alpha 20
		ContractStartDate                       is Date
		ContractEndDate                         is Date
	  	ContractDMLType                         is AlphaUpper 1
			States
				Insert					value is "I"
				Update     				value is "U"
				Delete				    value is "D"	  		

		ManufacturerPartNumber                  is AlphaUpper 48
		Vendor                                  is Alpha 100
		VendorERPNumber                         is Alpha 50 
		VendorEID                               is Alpha 50
		VendorPartNumber                        is AlphaUpper 50		
		Organization                            is Alpha 100
		OrganizationEID                         is Alpha 50
		ContractOrgID                           is Alpha 50 
		BuyerPartNum                            is AlphaUpper 48
		ItemDescription                         is Alpha 255
		ContractPrice                           is like ContractUnitCost 
		Adjustment                              is Decimal size 7.6
		Surcharge                               is like ContractUnitCost 
		LandedPrice                             is like ContractUnitCost 
		UOM                        				is like UnitOfMeasure 
		Quantity                                is Unsigned Decimal size 13.7
		ItemStartDate    						is Date
		ItemEndDate                             is Date
		IsSUOM                                  is Boolean
		PVRank                                  is Numeric 10

		ItemDMLType                             is AlphaUpper 1		
			States
				Insert					value is "I"
				Update     				value is "U"
				Delete				    value is "D"	
	
	Local Fields
		LocalContractGroup  			is a ContractGroup
		LocalItemDescriptionSize    	is Numeric 400
		NewContractLineImport       	is a ContractLineImport view
		LocalContractImport         	is a ContractImport
		LocalContractLineImport     	is like ContractLineImport
		LocalMappedDistributorSupplier 	is like Supplier 			
		LocalVendorEID                  is Alpha 50 
		LocalCompany               		is like InventoryCompany            
		LocalLocation               	is like InventoryLocation         
		LocalRequestingLocation     	is like RequestingLocation       
		LocalPricingGroup           	is like PricingGroup
		IsManufacturerContract          is Boolean
		IsDistributorContract           is Boolean
		IsMultiTierContract             is Boolean
		LocalNewLine                    is Boolean
		LocalSkipNewDistributor         is Boolean
		LocalItemDeleted                is Boolean
		LocalGPOContractNumber          is like GPOContractNumber
		LocalManufacturerPart           is like ManufacturerNumber
		LocalManufacturerSupplier       is like GPOSupplierID
		LocalGPOUOM                 	is like UnitOfMeasure
		LocalInternalUOM            	is like UnitOfMeasure	
		LocalVendorPartNumberChanged    is Boolean 	
	Conditions
	
		HasContractInterface
			restricted
			when (ContractImportRel exists)
			
		NewItem
			when (ItemDMLType 		= "I"
			and   ContractDMLType 	= "U")
	
		ContractGPOGHXUpdateOldChangedSupplierRelExists
			restricted
			when (ContractGPOGHXUpdateOldChangedSupplierRel exists)
		
		ContractImportDistributorRelExists
			restricted
			when (ContractImportDistributorRel exists)

		ContractGPOGHXInterfaceOldChangedSupplierRelExists
			restricted
			when (ContractGPOGHXInterfaceOldChangedSupplierRel exists)

		ContractDistributorExpiredRelExists
			restricted
			when (ContractDistributorExpiredRel exists)

	Relations
	
		ContractGPOGHXInterfaceHeaderRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractNumber
				related.ContractNumber           = ContractNumber			
		
		ContractGPOGHXInterfaceItemRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByItem
				related.ContractNumber           = ContractNumber
				related.ManufacturerPartNumber   = ManufacturerPartNumber
				related.VendorPartNumber         = VendorPartNumber
				related.UOM                      = UOM	

		ContractGPOGHXInterfaceOrganizationItemRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByOrganizationItem
				related.ContractNumber           = ContractNumber
				related.OrganizationEID          = OrganizationEID
				related.ManufacturerPartNumber   = ManufacturerPartNumber
				related.VendorPartNumber         = VendorPartNumber
				related.UOM                      = UOM	

		ContractGPOGHXInterfaceItemManufacturerOnlyRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByItemNoVendorItem
				related.ContractNumber           = ContractNumber
				related.ManufacturerPartNumber   = ManufacturerPartNumber
				related.UOM                      = UOM	
			Instance Selection 
				where (related.VendorEID = VendorEID
				and    VendorEID         = ManufacturerEID)	

		ContractGPOGHXUpdateItemManufacturerOnlyRel
			one-to-many relation to ContractGPOGHXUpdate
			Field Mapping uses ByItem
				related.ContractNumber           = ContractNumber
				related.ManufacturerPartNumber   = ManufacturerPartNumber
			Instance Selection
				where (ContractDMLType = "U"
				and    ItemDMLType     = "I")
		
		ContractGPOGHXUpdateItemOnlyRel
			one-to-many relation to ContractGPOGHXUpdate
			Field Mapping uses ByItem
				related.ContractNumber           = ContractNumber
				related.ManufacturerPartNumber   = ManufacturerPartNumber
			Instance Selection
				where (ContractDMLType = "U"
				and    ItemDMLType     = "U")

		ContractGPOGHXUpdateOtherRecordRel
			one-to-many relation to ContractGPOGHXUpdate
			Field Mapping uses ByItem
				related.ContractNumber           = ContractNumber
				related.ManufacturerPartNumber   = ManufacturerPartNumber
			Instance Selection
				where (ContractDMLType = "U"
				and    ItemDMLType     = "U"
				and    related.ManufacturerEID = ManufacturerEID
				and    related.ContractEndDate > ContractEndDate)		
		ContractGPOGHXUpdateOldChangedSupplierRel
			one-to-many relation to ContractGPOGHXUpdate
			Field Mapping uses ByContractNumber
				related.ContractNumber           = ContractNumber
			Instance Selection
				where (related.ContractDMLType = "U"
				and    related.ItemDMLType     = blank
				and    related.ContractEndDate < ContractStartDate)   
		
		ContractGPOGHXInterfaceOldChangedSupplierRel
			one-to-many relation to ContractGPOGHXUpdate
			Field Mapping uses ByContractNumber
				related.ContractNumber           = ContractNumber
			Instance Selection
				where (related.ContractDMLType = "U"
				and    related.ItemDMLType     = "U"
				and    related.VendorEID       = !VendorEID
				and    related.ContractEndDate < ContractEndDate) 

		ContractImportRel
			one-to-many relation to ContractImport
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber   = ContractNumber
									
		ContractLineImportRel
			one-to-many relation to ContractLineImport
			Field Mapping uses ByGPOContractNumber
				related.ContractGroup  								= LocalContractGroup
				related.GPOContractNumber 							= LocalGPOContractNumber
				related.ManufacturerInformation.ManufacturerNumber	= LocalManufacturerPart
			Instance Selection
				where (related.UOM	= LocalInternalUOM)					
		
		ContractImportTierRel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup      = LocalContractGroup
				related.ContractImport     = LocalContractImport
				related.ContractImportTier = TierLevel
						
		ContractLineImportTierCostRel
			one-to-many relation to ContractLineImportTierCost
			Field Mapping uses ByGPOContractNumber
				related.ContractGroup  								= LocalContractGroup
				related.GPOContractNumber 							= ContractNumber
				related.ContractImportTier                          = TierLevel
				related.ManufacturerNumber  						= ManufacturerPartNumber

		ContractImportTierMemberRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses ByMembership
				related.ContractGroup       		= LocalContractGroup
				related.GPOContractNumber   		= ContractNumber
				related.ContractImportGPOMembership = OrganizationEID
	
		ContractImportTierMemberByLocationRel
			one-to-one relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                     		= LocalContractGroup
				related.ContractImport                    		= LocalContractImport
				related.ContractImportTierMember.Company    	= LocalCompany
				related.ContractImportTierMember.Location       = LocalLocation
				related.ContractImportTierMember.RequestingLocation = LocalRequestingLocation
				related.ContractImportTierMember.PricingGroup   = LocalPricingGroup

		ManufacturerSupplierRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses symbolic key
				related.SupplierGroup               = LocalContractGroup
				related.ContractImportGPOSupplier 	= ManufacturerEID

		DistributorSupplierRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses symbolic key
				related.SupplierGroup               = LocalContractGroup
				related.ContractImportGPOSupplier 	= VendorEID				

		ContractImportGPOMembershipRel
			one-to-one relation to ContractImportGPOMembership
			Field Mapping uses symbolic key
				related.ContractImportGPOMembership = OrganizationEID

		ContractImportNewlyMappedMembershipRel
			one-to-many relation to ContractImportGPOMembership
			Field Mapping uses ByLocation
				related.ContractGroup = LocalContractGroup
			Instance Selection
				where (related.EligibleForNewTierMembers)			

		ContractImportDistributorRel
			one-to-one relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup      			= LocalContractGroup
				related.ContractImport     			= LocalContractImport
				related.ContractImportDistributor 	= LocalMappedDistributorSupplier

        ContractImportDistributorForSupplierRel
 			one-to-many relation to ContractImportDistributor
			delete cascades
			Field Mapping uses ByDistributorSupplier
				related.ContractGroup     		= LocalContractGroup
				related.GPODistributorSupplier	= LocalVendorEID
				related.ContractImport    		= LocalContractImport
				
		ContractDistributorExpiredRel
			one-to-many relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup      			= LocalContractGroup
				related.ContractImport     			= LocalContractImport
			Instance Selection
				where (related.ExpirationDate < LocalContractImport.ExpirationDate)

		ContractImportTierDistributorRel
			one-to-one relation to ContractImportTierDistributor
			Field Mapping uses symbolic key
				related.ContractGroup                     		= LocalContractGroup
				related.ContractImport                    		= LocalContractImport
				related.ContractImportTierMember.Company    	= LocalCompany
				related.ContractImportTierMember.Location       = LocalLocation
				related.ContractImportTierMember.RequestingLocation = LocalRequestingLocation
				related.ContractImportTierMember.PricingGroup   = LocalPricingGroup                  
				related.ContractImportTierDistributor           = LocalMappedDistributorSupplier  			
		
		ContractLineImportDistributorRel
			one-to-many relation to ContractLineImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup					= LocalContractGroup
				related.ContractImport					= LocalContractImport
				related.ContractLineImport              = LocalContractLineImport
			Instance Selection
				where (related.GPOSupplier              = VendorEID)

		ManufacturerSupplierUOMRel 
			one-to-many relation to ContractImportGPOSupplierUOM
			Field Mapping uses symbolic key
				related.SupplierGroup                               = LocalContractGroup
				related.ContractImportGPOSupplier                   = LocalManufacturerSupplier	
				related.ContractImportGPOSupplierUOM                = LocalGPOUOM	
			Instance Selection 
				where (related.UnitOfMeasure entered)				

	Sets
	
		ByContractNumber
			Sort Order
				ContractNumber
				ContractGPOGHXUpdate	
				
		ByItem
			Sort Order
				ContractNumber
				ManufacturerPartNumber
				VendorPartNumber
				UOM
				ContractGPOGHXUpdate

	Actions
	
		Create is a Create Action
			restricted
			
		Update is an Update Action
			restricted
			
		Delete is a Delete Action
			restricted
			
		Purge is a Purge Action
			restricted

		MassDelete is a Set Action
			disable checkpoint
			
			Action Rules
			
				Instance Rules
				
					invoke Purge

		PurgeDeletedRecords is a Set Action
			restricted	
			Instance Selection
				include only deleted records
			Action Rules
				Instance Rules
					invoke Purge	

		CopyRecord is an Instance Action  
			restricted
			Action Rules
			
				invoke Create ContractGPOGHXUpdate
					fill in fields from this instance

		ProcessGHXUpdates is a Set Action
			Parameters
				ContractGroup                   
				AutoUpdateContracts 			is Boolean				
				LineUpdateOption            	is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3				
				TolerancePercent		   		is Percent size 6.3
				Connector
				ToleranceAmount			   		is an InternationalAmount
				RejectAllCostIncreases	   		is Boolean
				UpdateCostsOnly                 is Boolean
				ProcessItemMasterOnly           is Boolean
								
			Parameter Rules
			
				ContractGroup
					required
				
				AutoUpdateContracts
					initial value is true

				LineUpdateOption
					initial value is 2
					default to 2			
			
				Connector
					if (TolerancePercent > 0 and ToleranceAmount > 0)
						required
							"ConnectorIsRequiredWhenTolerancePercentAndToleranceAmountAreEntered"
					else
						cannot be entered
							"CannotEnterConnectorUnlessTolerancePercentAndToleranceAmountAreEntered"

				RejectAllCostIncreases
					if (RejectAllCostIncreases)
						constraint (TolerancePercent = 0 and ToleranceAmount = 0)
							"CannotEnterTolerancePercentOrAmountWhenRejectingAllCostIncreases"

			Sort Order
				ContractNumber
				ContractGPOGHXUpdate

			Action Rules
				
        		ContractNumber Set Rules
        			
        			Entrance Rules 
						if (HasContractInterface)
							invoke ProcessGHXUpdatesForAContract 
								invoked.ContractGroup                   = ContractGroup 
								invoked.AutoUpdateContracts 			= AutoUpdateContracts				
								invoked.LineUpdateOption            	= LineUpdateOption 
								invoked.TolerancePercent		   		= TolerancePercent 
								invoked.Connector                       = Connector
								invoked.ToleranceAmount			   		= ToleranceAmount
								invoked.RejectAllCostIncreases	   		= RejectAllCostIncreases
								invoked.UpdateCostsOnly                 = UpdateCostsOnly
								invoked.ProcessItemMasterOnly           = ProcessItemMasterOnly
								invoked.ParmContractNumber              = ContractNumber 
						if (!HasContractInterface)
							invoke ProcessGHXUpdatesForGHXInterface 
								invoked.ContractGroup                   = ContractGroup 
								invoked.ParmContractNumber              = ContractNumber 
					
					Exit Rules
				
				Instance Rules

		ProcessGHXUpdatesForAContract is a Set Action
			restricted 
			Parameters
				ContractGroup                   
				AutoUpdateContracts 			is Boolean				
				LineUpdateOption            	is Numeric 1
					States
						UpdateIfCurrentDateSameAsHeaderDate value is 1
						UpdateAll                           value is 2
         				DoNotUpdate                         value is 3				
				TolerancePercent		   		is Percent size 6.3
				Connector
				ToleranceAmount			   		is an InternationalAmount
				RejectAllCostIncreases	   		is Boolean
				UpdateCostsOnly                 is Boolean
				ProcessItemMasterOnly           is Boolean
				ParmContractNumber              is Alpha 50          

			Instance Selection 
				where (ParmContractNumber = ContractNumber)

			Sort Order
				ContractNumber
				ContractGPOGHXUpdate

			Set Is 
				ContractNumber
				ContractGPOGHXUpdate
			Action Rules
				
        		ContractNumber Set Rules
        			
        			Exit Rules
				
						LocalContractGroup		= ContractGroup
						if (AutoUpdateContracts
						and LocalItemDeleted = true)
							invoke RemoveMissingGPOItems first ContractImportRel
							LocalItemDeleted = false
						LocalContractImport         = first ContractImportRel.ContractImport
						if  (AutoUpdateContracts
						and  LocalContractImport.HasOpenManufacturerContract)
							if  (LocalContractImport.FutureEffectiveDate entered
							or   LocalContractImport.FutureExpirationDate entered)
								invoke UpdateNewDatesOnContract LocalContractImport
									invoked.LineUpdateOption		= LineUpdateOption
							if (LocalContractImport.CanUpdateSupplierForGPO)
								invoke ChangeSupplierAndVendor LocalContractImport
							if (LocalContractImport.HasUpdatedTiers)
								invoke UpdateTiers LocalContractImport 
							if (LocalContractImport.NonBlankContractLinesExist
							and LocalContractImport.NewGPOContractExists)
								invoke ProcessContractImportLinesUpdates ContractLineImport
									invoked.PrmContractGroup           = ContractGroup
									invoked.ImportedContract       	= LocalContractImport
									invoked.UpdateContract        	= LocalContractImport.DerivedToContract
									invoked.TolerancePercent      	= TolerancePercent
									invoked.Connector             	= Connector
									invoked.ToleranceAmount		  	= ToleranceAmount
									invoked.RejectAllCostIncreases	= RejectAllCostIncreases
									invoked.FromContractCreation    = false	
									invoked.MultipleContracts       = true
									invoked.ProcessItemMasterOnly   = ProcessItemMasterOnly
									invoked.UpdateCostsOnly         = UpdateCostsOnly
									if (LocalContractImport.GPOContractDirect.HasMembersToRelease)
										invoked.UnreleasedMembersToStart = true
									invoked.MultipleUOMHandling     = ContractGroup.DefaultGPOMultipleUOMHandling

							if (LocalContractImport.HasTierMembersMissingOnContract)
								invoke AddMembersToContract LocalContractImport
							if (LocalContractImport.VendorItemsToUpdate)
								invoke UpdateVendorItemsOnContract LocalContractImport
							if (LocalContractImport.DoNotCreateDistributorContract = false)
								for each LocalContractImport.ContractImportDistributorRel
									if (each.CanUpdateSupplierForGPO)
										invoke ChangeSupplierAndVendor each
									if (each.MarkupPercentChanged)
										invoke UpdateMarkupPercent each
									if (each.EligibleForContractCreation
									and each.DistributorContractNumber entered)
										invoke CreateAndUpdateDistributorContracts ContractImportDistributor
											invoked.ParmContractGroup				= ContractGroup
											invoked.ParmContractImport  			= LocalContractImport			
											invoked.NewContract          			= LocalContractImport.DerivedToContract
											invoked.ParmDistributorContractNumber 	= each.DistributorContractNumber
											invoked.ProcessItemMasterOnly           = ProcessItemMasterOnly

						invoke ProcessGHXUpdatesForGHXInterface 
							invoked.ContractGroup                   = ContractGroup 
							invoked.ParmContractNumber              = ParmContractNumber 

				Instance Rules

					LocalSkipNewDistributor          = false				
					LocalContractGroup 				 = ContractGroup
					LocalGPOUOM                      = UOM
					LocalInternalUOM                 = UOM
					if (ManufacturerSupplierUOMRel exists)
						LocalInternalUOM  			 = first ManufacturerSupplierUOMRel.UnitOfMeasure
					LocalGPOContractNumber          = ContractNumber
					LocalManufacturerPart           = ManufacturerPartNumber
					if (HasContractInterface)
						LocalContractImport         = first ContractImportRel.ContractImport
					if (ContractLineImportRel exists)
						LocalContractLineImport     = ContractLineImportRel.ContractLineImport 
					LocalMappedDistributorSupplier  = DistributorSupplierRel.ContractSupplier
					if (LocalContractImport.IsManufacturerContract)
						IsManufacturerContract = true
					if (LocalContractImport.IsDistributorContract)
						IsDistributorContract  = true

					if (ContractDMLType.Update
					and ItemDMLType     = blank
					and IsManufacturerContract)
						if (ContractImportTierRel exists
						and ContractImportTierRel.Description != ContractTierDescription)
							invoke Update ContractImportTierRel
								invoked.Description = ContractTierDescription 

						if (ContractDescription != LocalContractImport.Description)
							invoke FastUpdate LocalContractImport
								invoked.Description = ContractDescription


					if (ContractDMLType.Update
					and ItemDMLType.Insert)
						if  (ContractStartDate >= LocalContractImport.EffectiveDate
						or   ItemStartDate     >= LocalContractImport.EffectiveDate)
							if  (ManufacturerEID != LocalContractImport.ManufacturerSupplier)

								if (ManufacturerSupplierRel !exists)
									invoke Create ContractImportGPOSupplier					
										invoked.SupplierGroup      			= ContractGroup
										invoked.ContractImportGPOSupplier   = ManufacturerEID
										invoked.Name               			= Manufacturer							
								invoke FastUpdate LocalContractImport
									invoked.ManufacturerSupplier = ManufacturerEID						
							if (ContractGPOGHXInterfaceOldChangedSupplierRel exists)
								LocalVendorEID = first ContractGPOGHXInterfaceOldChangedSupplierRel.VendorEID
								if (ContractImportDistributorForSupplierRel exists
								and ContractImportDistributorForSupplierRel.GPODistributorSupplier != VendorEID 
								and ManufacturerEID != VendorEID
								and ContractImportDistributorRel !exists)
									if (DistributorSupplierRel !exists)
										invoke Create ContractImportGPOSupplier					
											invoked.SupplierGroup      			= ContractGroup
											invoked.ContractImportGPOSupplier   = VendorEID
											invoked.Name               			= Vendor											
									LocalSkipNewDistributor = true
									invoke UpdateFromGHX first ContractImportDistributorForSupplierRel
										invoked.GPODistributorSupplier = VendorEID
								else 
									initialize LocalVendorEID  
					if   (ContractDMLType.Update
					and  (ItemDMLType = blank
					or    ItemDMLType.Update))
						if (ContractEndDate != LocalContractImport.ExpirationDate
						or  ContractStartDate != LocalContractImport.EffectiveDate)
							if (ContractGPOGHXUpdateOtherRecordRel !exists)
								
								invoke FastUpdate LocalContractImport 								
									if (ContractEndDate != this instance.LocalContractImport.ExpirationDate)
										invoked.FutureExpirationDate = ContractEndDate
									if (ContractStartDate != this instance.LocalContractImport.EffectiveDate)
										invoked.FutureEffectiveDate = ContractStartDate
					
					if  (ContractDMLType.Insert
					and  ItemDMLType.Insert)

						if (VendorEID entered
						and VendorEID != ManufacturerEID
						and DistributorSupplierRel !exists)
							invoke Create ContractImportGPOSupplier					
								invoked.SupplierGroup      			= ContractGroup
								invoked.ContractImportGPOSupplier   = VendorEID
								invoked.Name               			= Vendor

					if  (ContractDMLType.Update
					and  ItemDMLType.Insert 
					and  Adjustment != 0)
						if (ContractImportDistributorRel exists)
							if ((ContractImportDistributorRel.MarkupPercent = 0 and Adjustment != 1) 
							or  (ContractImportDistributorRel.MarkupPercent != 0
							and  ContractImportDistributorRel.MarkupPercent != Adjustment/100))
								invoke Update ContractImportDistributorRel
									invoked.FromMarkupChange = true
									if (Adjustment = 1)
										invoked.LeavePercentAtZero							= true
									else 
									if (Adjustment != 1)
										invoked.MarkupPercent                               = Adjustment	
						
						if (IsManufacturerContract
						and VendorEID entered
						and VendorEID != ManufacturerEID
						and LocalSkipNewDistributor = false
						and ContractImportDistributorRel !exists
						and ContractImportDistributorForSupplierRel !exists
						and ContractImportRel.DoNotCreateDistributorContract = false
						and DistributorSupplierRel.DoNotCreateDistributorContract = false)
							if (LocalMappedDistributorSupplier entered)
								invoke Create ContractImportDistributor
									invoked.ContractGroup                                   = ContractGroup
									invoked.ContractImport                                  = LocalContractImport
									invoked.GPODistributorSupplier                          = VendorEID
									invoked.ContractImportDistributor                       = LocalMappedDistributorSupplier
									if (Adjustment = 1)
										invoked.LeavePercentAtZero							= true
									else 
									if (Adjustment != 1)
										invoked.MarkupPercent                               = Adjustment	

					if (OrganizationEID entered
					and ContractImportGPOMembershipRel exists
					and ContractImportGPOMembershipRel.ParticipantEntered)
						LocalCompany            = ContractImportGPOMembershipRel.ParticipantLocation.Company                   
						LocalLocation           = ContractImportGPOMembershipRel.ParticipantLocation.Location             
						LocalRequestingLocation = ContractImportGPOMembershipRel.ParticipantLocation.RequestingLocation             
						LocalPricingGroup       = ContractImportGPOMembershipRel.ParticipantLocation.PricingGroup 

					if (IsManufacturerContract
					and ContractImportTierRel !exists)
						invoke Create ContractImportTier
							invoked.ContractGroup       = ContractGroup
							invoked.ContractImport      = LocalContractImport
							invoked.ContractImportTier  = TierLevel
							invoked.Description         = ContractTierDescription
							invoked.TierTitle           = TierLevel
							invoked.FromGHX             = true	

					if (OrganizationEID entered
					and ContractImportGPOMembershipRel exists
					and ContractImportGPOMembershipRel.ParticipantEntered)	
						if (ContractImportTierMemberRel !exists
						and ContractImportTierMemberByLocationRel !exists)
							invoke IndirectCreate ContractImportTierMember
								invoked.ContractGroup            					= ContractGroup
								invoked.ContractImport           					= LocalContractImport
								invoked.ContractImportTierMember.Company 			= LocalCompany
								invoked.ContractImportTierMember.Location 			= LocalLocation
								invoked.ContractImportTierMember.RequestingLocation = LocalRequestingLocation
								invoked.ContractImportTierMember.PricingGroup 		= LocalPricingGroup
								if (IsManufacturerContract)
									invoked.Tier                   					= TierLevel
								invoked.LocalTierName                               = TierLevel
								invoked.LocalTierDescription                        = ContractTierDescription
								invoked.ContractImportGPOMembership 				= OrganizationEID
								invoked.LocalGPOSupplier                            = VendorEID
								if (VendorEID = ManufacturerEID)
									invoked.PurchaseMethod                          = 1
								else 
								if (VendorEID != ManufacturerEID)
									invoked.PurchaseMethod                          = 2
								invoked.LocalFromGHXUpdate                          = true
								invoked.GPOContractNumber        					= ContractNumber
								invoked.EffectiveDate            					= ContractStartDate
								invoked.ExpirationDate           					= ContractEndDate
								if (IsDistributorContract)
									invoked.FromDistributor                         = true
								invoked.DoNotCreateDistributorContract              = LocalContractImport.DoNotCreateDistributorContract
						else
						if (ContractImportTierMemberRel exists
						and IsManufacturerContract)
								
							if (first ContractImportTierMemberRel.Tier != TierLevel)
								invoke Update first ContractImportTierMemberRel
									invoked.EffectiveDate        = ContractStartDate
									invoked.ExpirationDate       = ContractEndDate
									invoked.Tier                 = TierLevel
							if ((first ContractImportTierMemberRel.PurchaseMethod = 1
							and  ManufacturerEID != VendorEID)
							or  (first ContractImportTierMemberRel.PurchaseMethod = 2
							and  ManufacturerEID = VendorEID))
								invoke Update first ContractImportTierMemberRel
									invoked.PurchaseMethod       = 3
					
					if  ((ContractDMLType.Insert
					and  ItemDMLType.Insert)
					or  (ContractDMLType.Update
					and (ItemDMLType.Insert
					or   ItemDMLType.Update))) 

						if (IsManufacturerContract
						and VendorEID entered
						and VendorEID != ManufacturerEID
						and ContractImportDistributorRel exists
						and ContractImportRel.DoNotCreateDistributorContract = false)
							LocalMappedDistributorSupplier	= DistributorSupplierRel.ContractSupplier

							if (ContractImportTierMemberRel exists)
								if (ContractImportTierDistributorRel !exists)
									invoke Create ContractImportTierDistributor
										invoked.ContractGroup                                   = LocalContractGroup
										invoked.ContractImport                                  = LocalContractImport
										invoked.ContractImportTierMember.Company                = LocalCompany                         						
										invoked.ContractImportTierMember.Location               = LocalLocation 
										invoked.ContractImportTierMember.RequestingLocation     = LocalRequestingLocation
										invoked.ContractImportTierMember.PricingGroup		    = LocalPricingGroup
										invoked.ContractImportTierDistributor                   = LocalMappedDistributorSupplier	        						
										invoked.ContractImportGPOMembership                     = OrganizationEID	

					if  ((ContractDMLType.Update
					and  (ItemDMLType.Insert
					or    ItemDMLType.Update))
					or   (ContractDMLType.Insert
					and   ItemDMLType.Insert))
						if (ItemEndDate >= current corporate date) 		

							if (ContractLineImportRel !exists)
								LocalNewLine = true
								invoke CreateWithTierCosts ContractLineImport
									assign result to NewContractLineImport
									invoked.ContractGroup                           					= ContractGroup
									invoked.ContractImport                          					= LocalContractImport
									invoked.GPOContractNumber                           				= ContractNumber
									if (ContractImportRel.ManufacturerCodeDivision.ManufacturerCode entered)
										invoked.ManufacturerInformation.Manufacturer.ManufacturerCode   = ContractImportRel.ManufacturerCodeDivision.ManufacturerCode 
									else
										invoked.ManufacturerInformation.Manufacturer.ManufacturerCode 	= ManufacturerSupplierRel.ManufacturerCodeDivision.ManufacturerCode 
									
									if (ContractImportRel.ManufacturerCodeDivision.ManufacturerDivision entered)
										invoked.ManufacturerInformation.Manufacturer.ManufacturerDivision = ContractImportRel.ManufacturerCodeDivision.ManufacturerDivision 
									else
										invoked.ManufacturerInformation.Manufacturer.ManufacturerDivision 	= ManufacturerSupplierRel.ManufacturerCodeDivision.ManufacturerDivision
									invoked.ManufacturerInformation.ManufacturerNumber 					= ManufacturerPartNumber
									if (ContractImportRel.IsDistributorContractForGPO)
										invoked.VendorItem                             					= VendorPartNumber                   
									else
										invoked.VendorItem                              				= ManufacturerPartNumber
									LocalItemDescriptionSize = ItemDescription size
									if (LocalItemDescriptionSize > 60)
										invoked.ItemDescription3                                        = ItemDescription
									if (ContractStartDate <= ItemStartDate)
										invoked.EffectiveDate                                           = ItemStartDate
									else
										invoked.EffectiveDate                                           = ContractStartDate
									if (ContractEndDate >= ItemEndDate)
										invoked.ExpirationDate                                          = ItemEndDate
									else 
										invoked.ExpirationDate                                          = ContractEndDate
									invoked.ItemNumber													= BuyerPartNum
									invoked.ItemDescription              								= ItemDescription
									invoked.BaseCost                                					= ContractPrice                        
									invoked.UOM                  										= LocalInternalUOM        
									if (LocalInternalUOM != LocalGPOUOM)
										invoked.GPOUnitOfMeasure                                        = LocalGPOUOM       
									invoked.UOMConversion                           					= Quantity               
									if (IsManufacturerContract)
										invoked.TransientTier1                     						= TierLevel
										invoked.TransientTierCost1                                     	= ContractPrice
									invoked.UpdateFunction                          					= "C"					
									LocalContractLineImport = NewContractLineImport.ContractLineImport
							if (ContractLineImportRel exists)
								if (LocalContractLineImport !entered)
									LocalContractLineImport = ContractLineImportRel.ContractLineImport
								if (LocalNewLine = false)
									if (ContractLineImportRel.BaseCost 		  != ContractPrice
									or  ContractLineImportRel.ItemDescription != ItemDescription
									or  ContractLineImportRel.UOMConversion   != Quantity
									or  ContractLineImportRel.EffectiveDate   != ItemStartDate
									or  ContractLineImportRel.ExpirationDate  != ItemEndDate)
										invoke FastUpdate ContractLineImportRel
											invoked.BaseCost  		= ContractPrice			
											if (invoked.UpdateFunction != "C")
												invoked.UpdateFunction 	= "U"
											invoked.ItemDescription = ItemDescription
											invoked.UOMConversion   = Quantity
											if (ItemStartDate entered
											and ContractImportRel.EffectiveDate <= ItemStartDate)
												invoked.EffectiveDate  = ItemStartDate
											if (ItemEndDate entered
											and ContractImportRel.ExpirationDate >= ItemEndDate)
												invoked.ExpirationDate = ItemEndDate
											if (ContractPrice = 0)
												invoked.CostOption = 2 
											else
											if (ContractPrice > 0)
												invoked.CostOption = 1 
									if (ManufacturerEID = VendorEID 
									and VendorPartNumber != ManufacturerPartNumber
									and	ContractLineImportRel.VendorItem      != VendorPartNumber)
										LocalVendorPartNumberChanged = true 
										invoke FastUpdate ContractLineImportRel
											invoked.VendorItem      = VendorPartNumber
											invoked.UserField5      = VendorPartNumber
								if (IsManufacturerContract)
									if (ContractLineImportTierCostRel !exists)
										invoke Create ContractLineImportTierCost
											invoked.ContractGroup                       = LocalContractGroup
											invoked.ContractImport                      = LocalContractImport
											invoked.ContractLineImport                  = LocalContractLineImport
											invoked.ContractImportTier              	= TierLevel
											invoked.TierCost							= ContractPrice	
											invoked.ManufacturerNumber                  = ManufacturerPartNumber
											invoked.VendorItem		                  	= VendorPartNumber
											invoked.GPOContractNumber                   = ContractNumber								
										invoke FastUpdate ContractLineImportRel
											if (invoked.UpdateFunction != "C")
												invoked.UpdateFunction 	= "U"
									else
									if (ContractLineImportTierCostRel exists)
										if (ContractPrice != ContractLineImportTierCostRel.TierCost)
											invoke Update ContractLineImportTierCostRel
												invoked.TierCost        = ContractPrice										
											invoke FastUpdate ContractLineImportRel
												if (invoked.UpdateFunction != "C")
													invoked.UpdateFunction 	= "U"
								if (IsManufacturerContract
								and ManufacturerEID != VendorEID
								and ContractImportDistributorRel exists								
								and ContractImportRel.DoNotCreateDistributorContract = false)
									if (ContractLineImportDistributorRel !exists)
										invoke Create ContractLineImportDistributor
											invoked.ContractGroup                       = ContractGroup
											invoked.ContractImport                      = LocalContractImport
											invoked.ContractLineImport                  = LocalContractLineImport
											invoked.DistributorSupplier                 = LocalMappedDistributorSupplier
											if (VendorPartNumber entered)
												invoked.VendorItem                     	= VendorPartNumber
											else 
												invoked.VendorItem                      = ManufacturerPartNumber 
											invoked.GPOSupplier                         = VendorEID
											invoked.DistributorCost                     = Surcharge
									else
									if (ContractLineImportDistributorRel exists)
										if (first ContractLineImportDistributorRel.VendorItem        != VendorPartNumber
										and VendorPartNumber entered)
											invoke Update ContractLineImportDistributorRel
												invoked.VendorItem                          = VendorPartNumber	
												invoked.VendorItemChanged                   = true 										
										if (first ContractLineImportDistributorRel.DistributorCost   != Surcharge) 
											invoke Update ContractLineImportDistributorRel
												invoked.DistributorCost                     = Surcharge
				
					if (ContractDMLType.Update
					and ItemDMLType.Delete)
						if (ContractLineImportRel exists)
							invoke FastUpdate ContractLineImportRel 
								invoked.UpdateFunction = "D"

		ProcessGHXUpdatesForGHXInterface is a Set Action
			restricted 
			Parameters
				ContractGroup                   
				ParmContractNumber              is Alpha size 50
								
			Sort Order
				ContractNumber
				ContractGPOGHXUpdate

			Set Is 
				ContractNumber
				ContractGPOGHXUpdate
			
			Local Fields 
				UpdateManufacturerEIDRun    is Boolean 
				UpdateHeaderDescriptionsRun is Boolean 
			Instance Selection 
				where (ParmContractNumber = ContractNumber)
			
			Action Rules
				
        		ContractNumber Set Rules
        			
					Entrance Rules 
						UpdateManufacturerEIDRun = false 						
						UpdateHeaderDescriptionsRun = false 
					
					Exit Rules

						invoke PurgeUpdateRecordsForAContract 
							invoked.ContractGroup 		= ContractGroup 
							invoked.ParmContractNumber 	= ParmContractNumber 
				
				Instance Rules

					LocalSkipNewDistributor          = false				
					LocalContractGroup 				 = ContractGroup
					LocalGPOUOM                      = UOM
					LocalInternalUOM                 = UOM
					if (ManufacturerSupplierUOMRel exists)
						LocalInternalUOM  			 = first ManufacturerSupplierUOMRel.UnitOfMeasure
					LocalGPOContractNumber          = ContractNumber
					LocalManufacturerPart           = ManufacturerPartNumber
					if (HasContractInterface)
						LocalContractImport         = first ContractImportRel.ContractImport
					if (ContractLineImportRel exists)
						LocalContractLineImport     = ContractLineImportRel.ContractLineImport 
					LocalMappedDistributorSupplier  = DistributorSupplierRel.ContractSupplier
					if (LocalContractImport.IsManufacturerContract)
						IsManufacturerContract = true
					if (LocalContractImport.IsDistributorContract)
						IsDistributorContract  = true

					if (ContractDMLType.Update
					and ItemDMLType.Insert)
						if  (ContractStartDate >= LocalContractImport.EffectiveDate
						or   ItemStartDate     >= LocalContractImport.EffectiveDate)
							if (ContractGPOGHXInterfaceOldChangedSupplierRel exists)
								LocalVendorEID = first ContractGPOGHXInterfaceOldChangedSupplierRel.VendorEID
							else 
								initialize LocalVendorEID  

					if  (ContractDMLType.Insert
					and  ItemDMLType.Insert)
						invoke Create ContractGPOGHXInterface
							fill in fields from this instance
					
					if ((ItemDMLType.Insert
					or   ItemDMLType.Update)
					and !ContractDMLType.Insert)
						if (ContractGPOGHXInterfaceItemRel !exists)
							if (LocalVendorPartNumberChanged = false)
								invoke Create ContractGPOGHXInterface
									fill in fields from this instance
							else 
							if (LocalVendorPartNumberChanged = true 
							and ContractGPOGHXInterfaceItemManufacturerOnlyRel exists)
								invoke Update ContractGPOGHXInterfaceItemManufacturerOnlyRel
									invoked.VendorPartNumber = VendorPartNumber		
						else
						if (ContractGPOGHXInterfaceItemRel exists)
							invoke Update ContractGPOGHXInterfaceItemRel
								fill in fields from this instance

					if   (ContractDMLType.Update 
					and   ItemDMLType.Insert 
					and   UpdateManufacturerEIDRun = false 
					and ((ContractGPOGHXInterfaceHeaderRel exists
					and   first ContractGPOGHXInterfaceHeaderRel.ManufacturerEID != ManufacturerEID)
					or    LocalVendorEID entered))
						invoke UpdateManufacturerEID ContractGPOGHXInterface 
							invoked.ParmContractNumber      = ContractNumber 
							if  (ContractGPOGHXInterfaceHeaderRel exists
							and  first ContractGPOGHXInterfaceHeaderRel.ManufacturerEID != ManufacturerEID)							
								invoked.ParmManufacturerEID     = ManufacturerEID
							if (LocalVendorEID entered)
								invoked.ParmOldVendorEID        = LocalVendorEID
								invoked.ParmNewVendorEID        = VendorEID      
						UpdateManufacturerEIDRun = true  		    

					if (ContractDMLType.Update  
					and ItemDMLType = blank 
					and UpdateHeaderDescriptionsRun = false 
					and ContractGPOGHXInterfaceHeaderRel exists) 
						if (first ContractGPOGHXInterfaceHeaderRel.ContractDescription 		!= ContractDescription
						or  first ContractGPOGHXInterfaceHeaderRel.ContractTierDescription 	!= ContractTierDescription
						or  first ContractGPOGHXInterfaceHeaderRel.ContractEndDate          != ContractEndDate)
							invoke UpdateHeaderDescriptions ContractGPOGHXInterface 
								invoked.ParmContractNumber		= ContractNumber 
								invoked.ParmContractDescription = ContractDescription 
								invoked.ParmTierDescription     = ContractTierDescription 
								if (ContractEndDate > LocalContractImport.ExpirationDate)
									invoked.ParmEndDate         = ContractEndDate
							UpdateHeaderDescriptionsRun = true 		 

					if (ContractDMLType.Insert
					and ItemDMLType = blank)  
						invoke Create ContractGPOGHXInterface
							fill in fields from this instance						
					if (ContractDMLType.Update
					and ItemDMLType.Update
					and ItemEndDate >= current corporate date)
						if (ContractGPOGHXInterfaceOrganizationItemRel exists)  
							for each ContractGPOGHXInterfaceOrganizationItemRel
								if (each.ItemEndDate     != ItemEndDate
								or  each.ContractEndDate != ContractEndDate)
									invoke Update each
										invoked.ItemEndDate 	= ItemEndDate
										invoked.ContractEndDate = ContractEndDate	
					if (ContractDMLType.Delete
					and ItemDMLType.Delete
					and ContractGPOGHXInterfaceHeaderRel exists)
						for each ContractGPOGHXInterfaceHeaderRel
							invoke Purge each
					if (ContractDMLType.Update
					and ItemDMLType.Delete
					and ContractGPOGHXInterfaceItemRel exists)
						invoke Purge ContractGPOGHXInterfaceItemRel
						LocalItemDeleted = true  		

		PurgeUpdateRecordsForAContract is a Set Action
			restricted 
			
			Parameters 
				ContractGroup 
				ParmContractNumber is Alpha size 50 

			Instance Selection 
				where (ParmContractNumber = ContractNumber)
			
			Sort Order
				ContractNumber
				ContractGPOGHXUpdate

			Set Is 
				ContractNumber
				ContractGPOGHXUpdate
			Action Rules
			
				Instance Rules
				
					invoke Purge						
					
			
									
