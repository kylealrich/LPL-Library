UserCardView is a BusinessClass
    owned by repository
    prefix is URCV
	framework type is LPLConfiguration
	
	Patterns
		disable EffectiveDated
		disable AsOfDateProcessing
		implements DynamicCreation
		implements ConfigurationMetadata
		implements AuditLogEntryActions

    Ontology
        symbolic key is UserCardView

    Persistent Fields
    	Owner is like Actor // LMRK-97977 Was "is Actor". Likely meant to be "is an Actor". Changed to "like" so we have the same dict type but without changing existing functionality.
    	BusinessView
    	BusinessCardView is LPLName
    	Actor
    	UserFolder
    		delete cascades
		Status 			is a UserObjectStatus
    	LPL             is LPL
    	Description		is a ConfigDescription
    	UserEditorType
    	Independent		is Boolean
    	LPLIndex		is Text  
    	ErrorText		is Text

	Transient Fields
		TBusinessCardView is a BusinessCardView
			default label is "BusinessCardView"
			derive value from DerivedBusinessCardView 

    Derived Fields
    	DerivedBusinessCardView is a DerivedField
    		type is LPLName
    		restricted
    		if (BusinessCardViewRel exists)
    			return BusinessCardView

    		return blank

    	ContextKey is a DerivedField
    		type is LPLName
    		if (Actor entered)
	    		return  "Actor  '" + Actor + "', " + BusinessView + ", " + BusinessCardView
    		if (UserFolder entered)
    			return "Folder '" + UserFolder.Name + "', " + BusinessView + ", " + BusinessCardView
    		return  "blank, " + BusinessView + ", " + BusinessCardView

		ConfigActor is a ConditionalField
			type is Actor
			default label is "Actor"
			if (IsFolder)
				UserFolder.Actor
			else
				Actor

		ParseText is a NativeField
			type is Text

		OverrideNotificationDescription is a MessageField
    		"YourPersonalizationHasBeenUpdated"

		OverrideNotificationDetails is a MessageField
    		"YourPreviousModificationsFor<BusinessView>.<BusinessCardView>HaveBeenOverriddenByTheConfigurationAdministratorAndAreNoLongerActive"

	    BusinessClassViewMF is a MessageField
            "Business_Class"

        BusinessTaskViewMF is a MessageField
            "Business_Task"

        BusinessViewDefaultMF is a MessageField
            "View"

        BusinessViewLabel is a ConditionalField
            type is Alpha 20
            if (BusinessView.Type.BusinessClass)
                BusinessClassViewMF
            else
            if (BusinessView.Type.BusinessTask)
                BusinessTaskViewMF
            else
                BusinessViewDefaultMF

		NewInitialLPL is a NativeField
		    type is Text
		    
		UpdIndIndexStamp is a NativeField
			type is Text
			restricted
			default label is "UpdateIndexStamp"


        OverriddenCount is a DerivedField
            type is Numeric size 4
            if (Global)
                return (instance count of OverriddenConfigurationRel)
            else
                return blank

	Local Fields
		LocParseText 			    is Text
		LocBasedOnCard  		    is a BusinessCardView
		LocCardViewTypeChanged 	    is Boolean
		LocActor                    is Actor
		LocBusinessView             is LPLName
		LocName                     is LPLName

    Field Rules
		Owner
			default to actor
    	BusinessView
    		required

    	BusinessCardView
    		required


    		constraint (Global or BusinessCardViewRel exists) 
    			"PersonalizationsAndFoldersMustBeBackedByAnExistingCardView"

    	Actor
    		if (old Independent 
    		and IsCardViewIndependent
			and Actor entered
			and not old Actor entered)
				cannot be changed
					"CannotChangeAnIndependentCardViewToAPersonalization.PleaseCreateANewPersonalization"

    		constraint (UserFolder not entered)
    			"CannotEnterBothActorAndFolder"

		UserFolder
			if (old Independent  
			and IsCardViewIndependent
			and UserFolder entered
			and not old UserFolder entered)
				cannot be changed
					"CannotChangeAnIndependentCardViewToAFolder.PleaseCreateANewFolder"

   			constraint (Actor not entered)
   				"CannotEnterBothActorAndFolder"

		LPL
			required

			if (LPL changed)
				LPLIndex = blank

			if (Status.Active)
				LocParseText = ParseText
				
				if (action type.Update)
					constraint (not LocCardViewTypeChanged)
						"ChangingTheCardViewTypeIsNotAllowed."

				if (not LocParseText = blank)
					confirmation required
						"<LocParseText>:_User_Card_ViewIsInvalid.__DoYouWantToSaveAnyway?"

					Status = Status.Invalid
					ErrorText = LocParseText

		UserEditorType
			default to UserEditorType.LPL

		Status
			if (Status.Active)
				initialize ErrorText

    Conditions
    	IsFolder
    		default label is "Folder"
   			when (UserFolder entered)

   		IsActor
   			default label is "Actor"
   			when (Actor entered)

    	Global
    		when (!IsActor and !IsFolder)

		ConfigGlobal
			default label is "GlobalConfiguration"
			when ((IsFolder and UserFolder.Actor not entered) or Global)

		IsForUserBusinessView
			default label is untranslatable
			when (BusinessView.IsUserClass)

		IsCardViewDependent
			restricted
			when (BusinessCardViewRel exists
			and   not BusinessCardViewRel.Independent)

		IsCardViewIndependent
			restricted
			when (not BusinessCardViewRel exists
			or    BusinessCardViewRel.Independent)

		CondIndependent
			restricted
			when (Global and IsCardViewIndependent)

		HasErrorText
			default label is "ErrorTextEntered"
			when (ErrorText entered)

        IsOverridden
        	default label is "Overridden"
            when (first OverriddenConfigurationRel exists
            and Global)

	Relations
    	DuplicateRel
    		one-to-many relation to UserCardView 
			Field Mapping uses ByViewCardViewActor
				related.BusinessView     = BusinessView
				related.BusinessCardView = BusinessCardView
				related.Actor 		     = Actor
			Instance Selection
				where (related.UserFolder not entered
				and    related.UserCardView != UserCardView)

		BusinessCardViewRel
			one-to-one relation to BusinessCardView
			Field Mapping uses symbolic key
				related.BusinessView     = BusinessView
				related.BusinessCardView = BusinessCardView

		OverriddenConfigurationRel
    		one-to-many relation to UserCardView
			Field Mapping uses ByViewCardViewActor
				related.BusinessView = BusinessView
				related.BusinessCardView = BusinessCardView
	        Instance Selection
		        where (not related.Global and not related.IsFolder)

        ConfigEntityRel
            one-to-one relation to ConfigEntity
            Field Mapping uses ByEntityType
                related.EntityType = 18
                related.BusinessView = BusinessView
                related.Name = BusinessCardView
                related.Actor = Actor

		LocalDuplicateRel
		    one-to-many relation to UserCardView
			Field Mapping uses AllActorSet
			    related.Actor = LocActor
			    related.BusinessView        = LocBusinessView
				related.BusinessCardView    = LocName

	        Instance Selection
		        where (not related.IsFolder)

		LocalBusinessCardViewRel
            one-to-one relation to BusinessCardView
            Field Mapping uses symbolic key
			    related.BusinessView        = LocBusinessView
				related.BusinessCardView    = LocName

	Actions
    	Create is a Create Action
    		Action Rules
	    		if (TBusinessCardView entered)
	    			if (BusinessCardView entered)
	    				constraint (BusinessCardView = TBusinessCardView)
	    					"OnlyCardViewOrAnExistingCardViewCanBeEntered" 

	    			BusinessCardView = TBusinessCardView

				Independent = CondIndependent

    		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent
    			
    	CreateFromSnapshot is a Create Action
    		restricted
    		bypass field rules

    		
    		Exit Rules

			    if (Independent
    			and Status.Active)
					LPLIndex = UpdIndIndexStamp
    		
    	Update is an Update Action
    		Action Rules
    			if (TBusinessCardView entered)
	    			if (BusinessCardView entered)
	    				constraint (BusinessCardView = TBusinessCardView)
	    					"OnlyCardViewOrAnExistingCardViewCanBeEntered" 

	    			BusinessCardView = TBusinessCardView

				Independent = CondIndependent

    			if (not UserFolder entered)
    				if (Actor changed
    				and DuplicateRel exists)
    					if (Actor entered) 
    						confirmation required
								"User_CardViewPersonalizationExists.__DoYouWantToOverwrite?"
    					else
    						confirmation required
								"User_CardViewConfigurationExists.__DoYouWantToOverwrite?"
    					invoke Delete DuplicateRel

     		Exit Rules


			    if (Independent
    			and Status.Active)
					LocParseText = ParseText

				invoke FireEvent
    			
    	UpdateFromSnapshot is an Update Action
    		restricted
    		bypass field rules

    		
    		Action Rules
				if (not UserFolder entered)
    				if (Actor changed
    				and DuplicateRel exists)
    					invoke Delete DuplicateRel
			
			Exit Rules

			    if (Independent
    			and Status.Active)
					LPLIndex = UpdIndIndexStamp

			  
    	Delete is a Delete Action
    		Exit Rules
    			invoke FireEvent
    			
    	DeleteFromSnapshot is a Delete Action
    		restricted
    		bypass relational integrity rules


		Purge is a Purge Action
			restricted
    		Exit Rules
    			invoke FireEvent

    	Activate is an Instance Action
    		valid when (not Status.Active)
    		Action Rules
    			LocParseText = ParseText

				if (not LocParseText = blank)
					constraint(LocParseText = blank)
						"<LocParseText>:_User_CardViewIsInvalid._Cannot_Activate."

				Status = Status.Active
				initialize ErrorText

			Exit Rules



				if (Independent)
					LocParseText = ParseText 

    			invoke FireEvent

    	Deactivate is an Instance Action
    		valid when (not Status.Inactive)
    		Action Rules
    			Status = Status.Inactive

			Exit Rules
    			invoke FireEvent

    	Invalidate is an Instance Action
    		valid when (not Status.Invalid)
    		restricted
    		Action Rules
    			Status = Status.Invalid

			Exit Rules
    			invoke FireEvent

		FireEvent is an Instance Action
			restricted

		OverridePersonalizations is a Set Action
			run in foreground
			Parameters
				Config is a UserCardView
					default label is "Configuration"

			Parameter Rules
				Config
					required
					constraint(Config.Global)
						"OverridePersonalizationsActionIsOnlyValidForAConfiguration"

			Instance Selection
		   		where (BusinessView     = Config.BusinessView
		   		and    BusinessCardView = Config.BusinessCardView
		   		and    IsActor
		   		and    not UserFolder entered)

		   	Action Rules
		   		Instance Rules
		   			invoke Update
		   				invoked.LPL = Config.LPL

		   			invoke CreateMessage UserNotification
		   				invoked.ParamActor 			= Actor
		   				invoked.ParamPriority 		= 5
		   				invoked.ParamDescription	= this instance(locale of Actor.IsoLocale).OverrideNotificationDescription
		   				invoked.ParamDetails		= this instance(locale of Actor.IsoLocale).OverrideNotificationDetails

		DeletePersonalizationsForActor is a Set Action
			Parameters
				ParamActor is an Actor
					default label is "Actor"
				ParamDeletedActor is like Actor
					default label is "DeletedActor"

			Parameter Rules
				ParamActor
					if (ParamActor entered)
						ParamDeletedActor = ParamActor
					else
					if (ParamDeletedActor not entered)
						required
							"MustEnterActorOrDeletedActor"

			Instance Selection
				where (Actor = ParamDeletedActor)

			Sort Order
				Actor
    			BusinessView
        		BusinessCardView

			Action Rules
				Instance Rules
					invoke Delete

		PurgePersonalizationsForActor is a Set Action
			Parameters
				ParamActor is an Actor
					default label is "Actor"
				ParamDeletedActor is like Actor
					default label is "DeletedActor"

			Parameter Rules
				ParamActor
					if (ParamActor entered)
						ParamDeletedActor = ParamActor
					else
					if (ParamDeletedActor not entered)
						required
							"MustEnterActorOrDeletedActor"

			Instance Selection
				include deleted records
				where (Actor = ParamDeletedActor)

			Sort Order
				Actor
    			BusinessView
        		BusinessCardView

			Action Rules
				Instance Rules
					invoke Purge


        CreateConfiguration is a Create Action
        	completion message is "ConfigurationCreated"
            Parameters
                BusinessView
                	default label is "BusinessClass"
                Card          is a BusinessCardView

			Parameter Rules
				BusinessView
					required
			    Card
			        required

            Entrance Rules
                LocActor = blank
                LocBusinessView = BusinessView
                LocName = Card
                constraint (!LocalDuplicateRel exists)
                    "ConfigurationExistsFor_'<LocName>'"

            Action Rules
                invoke Create this instance
                    invoked.BusinessView        = BusinessView
                    invoked.BusinessCardView    = Card
                    invoked.LPL                 = BusinessCardViewRel.BaseLPL

        CreateNewCard is a Create Action
            default label is "AddNewCardView"
        	completion message is "NewCardViewCreated"
            Parameters
                BusinessView
                	default label is "BusinessClass"
                CardName is LPLName
                BasedOnCard is a BusinessCardView

			Parameter Rules
				BusinessView
					required
			    CardName
			        required


            Entrance Rules
                LocActor = blank
                LocBusinessView = BusinessView
                LocName = CardName
                constraint (!LocalDuplicateRel exists)
                    "CardNameInUse_'<LocName>'"

                constraint (!LocalBusinessCardViewRel exists)
                    "CardNameInUse_'<LocName>'"

            Action Rules
                invoke Create this instance
                    invoked.BusinessView        = BusinessView
                    invoked.BusinessCardView    = CardName
                    invoked.Independent         = true

                    if (BasedOnCard entered)
                        invoked.LocBasedOnCard = BasedOnCard

                    invoked.LPL = this instance.NewInitialLPL

        CreatePersonalization is a Create Action
        	completion message is "PersonalizationCreated"
            Parameters
                BusinessView
                	default label is "BusinessClass"
                Card          is a BusinessCardView

			Parameter Rules
				BusinessView
					required
			    Card
			        required

            Entrance Rules
                LocActor = actor
                LocBusinessView = BusinessView
                LocName = Card
                constraint (!LocalDuplicateRel exists)
                    "PersonalizationExistsFor_'<LocName>'"

            Action Rules
                invoke Create this instance
                	invoked.Actor				= actor
                    invoked.BusinessView        = BusinessView
                    invoked.BusinessCardView    = Card
					invoked.LPL 				= BusinessCardViewRel.LPL






		TagItem is an Instance Action
			valid when (not IsFolder)
			Parameters
				ParamConfigurationTag is a ConfigurationTag
					default label is "Tag"
			
			Entrance Rules
				if (Status.Inactive)
					confirmation required
						"UserCardViewIsInactive,TagAnyway?"
							
				if (Status.Invalid)
					confirmation required
						"UserCardViewIsInvalid,TagAnyway?"
							
			Action Rules
				invoke Create ConfigurationTagItem
					invoked.ConfigurationTag = ParamConfigurationTag
					invoked.ConfigurationTagItem.Reference = reference to this instance		  

    Sets
    	ActorSet
    		Sort Order
    			Actor
    			BusinessView
        		BusinessCardView
        	Instance Selection
        		where (IsActor)

		FolderSet
			Sort Order
    			UserFolder
    			BusinessView
        		BusinessCardView
    		Instance Selection
				where (IsFolder)

		AllActorSet
			duplicates
    		Sort Order
    			Actor
    			BusinessView
        		BusinessCardView

		GlobalSet
			Sort Order
				BusinessView
				BusinessCardView
			Instance Selection
				where (Global)

		ByViewCardViewActor
			sql name is URCVBYVCA
			Sort Order
				BusinessView
				BusinessCardView
				Actor
				UserFolder
				UserCardView

		ByCardViewViewActor
			sql name is URCVBYCVA
			Sort Order
				BusinessCardView
				BusinessView
				Actor
				UserFolder
				UserCardView

		IndependentConfigCardViews
			sql name is UCIDTCC
			Sort Order
				BusinessView
				BusinessCardView
			Instance Selection
				where (Independent)
