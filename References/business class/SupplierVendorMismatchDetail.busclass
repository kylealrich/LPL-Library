SupplierVendorMismatchDetail is a BusinessClass
	owned by procurement
	prefix is Supt

	Ontology
		symbolic key is SupplierVendorMismatchDetail

	Patterns

	Persistent Fields
		SupplierSourceId
		PayablesCertificationCode
		PayablesDiversityCode
		CertificationEffectiveDate	is Date
		DiversityCodeDcertDate		is Date
			default label is "DiversityCodeExpirationDate"
		Type						is Numeric size 2
			States
				Name								value is 1
				TaxId								value is 2
					default label is "Tax ID"
				GlobalLocationNumber				value is 3
				URL									value is 5
				FirstAddressLine					value is 6
					default label is "BillToFirstAddressLine"
				SecondAddressLine					value is 7
					default label is "BillToSecondAddressLine"
				ThirdAddressLine					value is 8
					default label is "BillToThirdAddressLine"
				FourthAddressLine					value is 9
					default label is "BillToFourthAddressLine"
				City								value is 10
					default label is "BillToCity"
				StateOrProvince						value is 11
					default label is "BillToStateOrProvince"
				PostalCode							value is 12
					default label is "BillToPostalCode"
				County								value is 13
					default label is "BillToCounty"
				Country								value is 14
					default label is "BillToCountry/\Jurisdiction"
				Type								value is 70
					default label is "BillToType"
				Region								value is 86
					default label is "BillToRegion"
				NationalID							value is 87
					default label is "BillToNationalID"
				LocaleID							value is 88
					default label is "BillToLocaleID"
				IndividualID						value is 89
					default label is "BillToIndividualID"
				StateOrProvinceID					value is 94
					default label is "BillToStateOrProvinceID"
				ContactName							value is 15
				ContactPhonePrefix					value is 64
				ContactPhoneNumber					value is 17
				ContactPhoneExt						value is 18
				ContactFaxPrefix					value is 65
				ContactFaxNumber					value is 20
				ContactFaxExt						value is 21
				ContactEmail						value is 22
				DiversityCodeSupplierOnly			value is 23
				DiversityCodeVendorOnly				value is 24
				DiversityCodeExpirationDateSupplier	value is 25
				DiversityCodeExpirationDateVendor	value is 26
				CertificationCodeSupplierOnly		value is 27
				CertificationCodeExpDate			value is 28
				DiversityCodeReviewDate				value is 29
				DiversityCodeEffectiveDate			value is 30
				CertificationCodeVendorOnly			value is 31
				ContactMobilePhonePrefix			value is 66
				ContactMobilePhoneNumber			value is 33
				ContactMobilePhoneExt				value is 34
				VATRegistrationCountry				value is 35
					default label is "VATRegistrationCountry/\Jurisdiction"
				VATRegistrationNumber				value is 36
				BankAccountNumber					value is 37
				BankEntity							value is 38
				BankAccountType						value is 39
				BankCurrency						value is 40
				CrossBorderIdentifier				value is 41
				SwiftID								value is 42
					default label is "Swift ID"
				BankingCode							value is 43
				BankID								value is 44
					default label is "Bank ID"
				AssignmentNumber					value is 45
				GiroNumber							value is 46
				BACSReference						value is 47
				BACSName							value is 48
				CreditCardNumber					value is 49
				LocationBankAccountNumber			value is 50
				LocationBankEntity					value is 51
				LocationBankAccountType				value is 52
				LocationBankCurrency				value is 53
				LocationCrossBorderIdentifier		value is 54
				LocationSwiftID						value is 55
					default label is "Location Swift ID"
				LocationBankingCode					value is 56
				LocationBankID						value is 57
					default label is "Location Bank ID"
				LocationAssignmentNumber			value is 58
				LocationGiroNumber					value is 59
				LocationBACSReference				value is 60
				LocationBACSName					value is 61
				LocationCreditCardNumber			value is 62
				TaxIdentificationType				value is 63
				RemitToFirstAddressLine				value is 76
				RemitToSecondAddressLine			value is 77
				RemitToThirdAddressLine				value is 78
				RemitToFourthAddressLine			value is 79
				RemitToCity							value is 80
				RemitToStateOrProvince				value is 81
				RemitToPostalCode					value is 82
				RemitToCounty						value is 83
				RemitToCountry						value is 84
					default label is "RemitToCountry/\Jurisdiction"
				RemitToType							value is 85
				RemitToRegion						value is 90
				RemitToNationalID					value is 91
				RemitToLocaleID						value is 92
				RemitToIndividualID					value is 93
				RemitToStateOrProvinceID			value is 95
		SupplierValue				is Alpha size 256
		VendorValue					is Alpha size 256

	Derived Fields
		DerivedSupplierValue is a DerivedField
			type is like Description
			if (Type.CertificationCodeExpDate
			or  Type.DiversityCodeExpirationDateSupplier
			or  Type.DiversityCodeExpirationDateVendor
			or  Type.DiversityCodeReviewDate
			or  Type.DiversityCodeEffectiveDate)
				return SupplierValue[5:6]+"/"+SupplierValue[7:8]+"/"+SupplierValue[1:4]
			else
			if (Type.BankAccountType
			or  Type.LocationBankAccountType)
				if (SupplierValue = "C")
					return "Current Checking"
				else
				if (SupplierValue = "S")
					return "Savings"
				else
				if (SupplierValue = "I")	
					return "IBAN"	
				else
				if (SupplierValue = "01")
					return "Futsuu"
				else
				if (SupplierValue = "02")
					return "Touza"
				else
				if (SupplierValue = "03")
					return "Chochiku"
				else
				if (SupplierValue = "04")
					return "Sonota"
				else
				if (SupplierValue = "99")
					return "Other"
			else
				return SupplierValue

		DerivedVendorValue is a DerivedField
			type is like Description
			if (Type.CertificationCodeExpDate
			or  Type.DiversityCodeExpirationDateSupplier
			or  Type.DiversityCodeExpirationDateVendor
			or  Type.DiversityCodeReviewDate
			or  Type.DiversityCodeEffectiveDate)
				return VendorValue[5:6]+"/"+VendorValue[7:8]+"/"+VendorValue[1:4]
			else
			if (Type.BankAccountType
			or  Type.LocationBankAccountType)
				if (VendorValue = "C")
					return "Current Checking"
				else
				if (VendorValue = "S")
					return "Savings"
				else
				if (VendorValue = "I")	
					return "IBAN"		
				else
				if (VendorValue = "01")
					return "Futsuu"
				else
				if (VendorValue = "02")
					return "Touza"
				else
				if (VendorValue = "03")
					return "Chochiku"
				else
				if (VendorValue = "04")
					return "Sonota"
				else
				if (VendorValue = "99")
					return "Other"
			else
				return VendorValue

	Conditions
		SupplierValuesToUse
			restricted
			when (!Type.DiversityCodeVendorOnly
				and !Type.DiversityCodeExpirationDateVendor
				and !Type.CertificationCodeVendorOnly)

		VendorValuesToUse	
			restricted
			when (!Type.DiversityCodeSupplierOnly
				and !Type.DiversityCodeExpirationDateSupplier
				and !Type.CertificationCodeSupplierOnly
				and !Type.ContactName)

		DiversityCodeExists
			restricted
			when (PayablesDiversityCode entered)

		SupplierDiversityExists
			restricted
			when (SupplierDiversityResponseRel exists)

		ContactExists
			restricted
			when (SupplierSourceId entered)

		CertificationExists
			restricted
			when (PayablesCertificationCode entered)

		SupplierDiversityCertDateIsZero
			restricted
			when (SupplierDiversityExists
				and SupplierDiversityResponseRel.EffectiveDate !entered)

		SupplierDiversityDecertDateIsZero
			restricted
			when (SupplierDiversityExists
				and SupplierDiversityResponseRel.ExpirationDate !entered)

		GlnActiveOrNew
			restricted
			when ((GlobalLocationNumberSupRel exists
					and GlobalLocationNumberSupRel.Active)
				or !GlobalLocationNumberSupRel exists)

	Relations
		SupplierDiversityResponseRel
			one-to-many relation to SupplierDiversityResponse
			Field Mapping uses BySupplier
				related.SupplierGroup	= SupplierGroup
				related.Supplier		= Supplier
			Instance Selection
				where (related.Active
					and related.PayablesDiversityCode = PayablesDiversityCode)

		VendorDiversityRel
			one-to-many relation to VendorDiversity
			Field Mapping uses ByDateDescending
				related.VendorGroup		= SupplierGroup
				related.Vendor			= Supplier.Vendor
				related.VendorLocation	= blank
				related.DiversityCode	= PayablesDiversityCode
			Instance Selection
				where (related.Active)

		VendorGroupRel
			one-to-one relation to VendorGroup
			Field Mapping uses symbolic key
				related.VendorGroup = SupplierGroup

		SupplierCertificationRel
			one-to-one relation to SupplierCertification
			Field Mapping uses symbolic key
				related.SupplierGroup										= SupplierGroup
				related.Supplier											= Supplier
				related.SupplierSourceId									= SupplierSourceId
				related.CommodityCode										= blank
				related.SupplierCertification.PayablesCertificationCode		= PayablesCertificationCode
				related.SupplierCertification.CertificationEffectiveDate	= CertificationEffectiveDate

		VendorCertificationRel
			one-to-one relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup	               = SupplierGroup
				related.Vendor                     = Supplier.Vendor
				related.VendorLocation	           = SupplierSourceId.VendorLocation				
				related.PayablesCertificationCode  = PayablesCertificationCode			
				related.CertificationEffectiveDate = CertificationEffectiveDate
				
		PayablesDiversityCodeRel is a PayablesDiversityCode set
							
		VendorLocationRel 
			one-to-one relation to VendorLocation
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation      		         = SupplierSourceId.VendorLocation
		
		VendorLocationAddressRel 
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation      		         = SupplierSourceId.VendorLocation
				related.VendorContact.VendorContactCode 	 = blank
				related.VendorContact.ContactLevel      	 = blank
		
		VendorLocationContactRel 
			one-to-one relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation      		         = SupplierSourceId.VendorLocation
				related.VendorContact.VendorContactCode      = "PRIME"
				related.VendorContact.ContactLevel           = 0
		
		VendorRel 
			one-to-one relation to Vendor
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
		
		SupplierRel
			one-to-one relation to Supplier
			Field Mapping uses symbolic key
				related.SupplierGroup         		         = SupplierGroup
				related.Supplier              		         = Supplier
		
		VendorAddressRel 
			one-to-one relation to VendorAddress
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation                  	 = blank
				related.VendorContact.VendorContactCode 	 = blank
				related.VendorContact.ContactLevel      	 = blank
		
		VendorContactRel 
			one-to-one relation to VendorContact
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation      		         = blank
				related.VendorContact.VendorContactCode      = "PRIME"
				related.VendorContact.ContactLevel           = 0
		
		VendorCertificationConstraintRel
			one-to-one relation to VendorCertification
			Field Mapping uses symbolic key
				related.VendorGroup         		         = SupplierGroup
				related.Vendor              		         = Supplier.Vendor
				related.VendorLocation      		         = SupplierSourceId.VendorLocation
				related.PayablesCertificationCode            = PayablesCertificationCode
				related.CertificationEffectiveDate 			 = CertificationEffectiveDate
		
		UpdateSupplierCertificationRel
			one-to-one relation to SupplierCertification
			Field Mapping uses symbolic key
				related.SupplierGroup									 = SupplierGroup
				related.Supplier										 = Supplier
				related.SupplierSourceId    							 = SupplierSourceId
				related.CommodityCode                                    = blank
				related.SupplierCertification.PayablesCertificationCode  = PayablesCertificationCode
				related.SupplierCertification.CertificationEffectiveDate = CertificationEffectiveDate
				
		GlobalLocationNumberSupRel
			one-to-one relation to GlobalLocationNumber
			Field Mapping uses symbolic key
				related.ItemGroup              = SupplierGroup
				related.GlobalLocationNumber   = SupplierValue  
				
		GlobalLocationNumberVenRel
			one-to-one relation to GlobalLocationNumber
			Field Mapping uses symbolic key
				related.ItemGroup               = SupplierGroup
				related.GlobalLocationNumber    = VendorValue
				
		GlobalLocationNumberDetailSupplierRel
			one-to-one relation to GlobalLocationNumberDetail
			Field Mapping uses Set4
				related.ItemGroup              							= SupplierGroup
				related.GlobalLocationNumberDetail.GlobalLocationNumberType = 7
				related.VendorAndVendorLocation.Vendor                  = Supplier.Vendor
				related.VendorAndVendorLocation.VendorLocation          = 0
				related.GlobalLocationNumber   							= SupplierValue  
		
		SupplierSourceIdPrimaryRel
			one-to-one relation to SupplierSourceId
			Field Mapping uses IsPrimaryContact
				related.SupplierGroup     = SupplierGroup
				related.Supplier          = Supplier                  
							
	Sets
		ByType
			Sort Order
				SupplierGroup
				Supplier
				Type
				SupplierSourceId
				PayablesCertificationCode
				PayablesDiversityCode
				SupplierVendorMismatchDetail
				
	Actions
		Create is a Create Action
			restricted
		
		Delete is a Delete Action
			Action Rules
				invoke DeleteNoDetails SupplierVendorMismatch
		
		UpdateSupplierFromVendorDetail is an Instance Action
			default label is "UseVendorValue"
			valid when (VendorValuesToUse)
			Action Rules
				if (SupplierSourceId entered)
					invoke Update SupplierSourceId
						if (Type.Name)
							invoked.LocationName                                    = VendorValue
						if (Type.FirstAddressLine)
	   						invoked.LocationAddress.DeliveryAddress.AddressLine1 	= VendorValue
	   					if (Type.SecondAddressLine)
	   						invoked.LocationAddress.DeliveryAddress.AddressLine2   	= VendorValue
	 	  				if (Type.ThirdAddressLine)
							invoked.LocationAddress.DeliveryAddress.AddressLine3  	= VendorValue
						if (Type.FourthAddressLine)
	   						invoked.LocationAddress.DeliveryAddress.AddressLine4     = VendorValue
	   					if (Type.City)
	   						invoked.LocationAddress.Municipality	                 = VendorValue
	 	  				if (Type.StateOrProvince)
							invoked.LocationAddress.StateProvince	                 = VendorValue
						if (Type.PostalCode)
	   						invoked.LocationAddress.PostalCode	                     = VendorValue 
	   					if (Type.County)
	   						invoked.LocationAddress.County                      	 = VendorValue
	 	  				if (Type.Country)
							invoked.LocationAddress.Country                          = VendorValue
						if (Type.Type)
	 	  					invoked.LocationAddress.Type				 			 = VendorValue
						if (Type.ContactPhonePrefix)
	 	  					invoked.TelephoneNumber.InternationalPrefix	 			 = VendorValue
						if (Type.ContactPhoneNumber)
							invoked.TelephoneNumber.SubscriberNumber     			 = VendorValue
	   					if (Type.ContactPhoneExt)
	   						invoked.TelephoneNumber.Extension            			= VendorValue
						if (Type.ContactMobilePhonePrefix)
	 	  					invoked.MobilePhone.MobilePhoneNumber.InternationalPrefix	= VendorValue
						if (Type.ContactMobilePhoneNumber)
							invoked.MobilePhone.MobilePhoneNumber.SubscriberNumber		= VendorValue
	   					if (Type.ContactFaxPrefix)
	 	  					invoked.FaxNumber.InternationalPrefix    	 			= VendorValue
						if (Type.ContactFaxNumber)
							invoked.FaxNumber.SubscriberNumber           			= VendorValue
	   					if (Type.ContactFaxExt)
	   						invoked.FaxNumber.Extension      			            = VendorValue
	   					if (Type.ContactEmail)
	   						invoked.EmailAddress			                         = VendorValue
	   					if (Type.LocationBankAccountNumber)
							invoked.BankInformationGroup.BankAccountNumber      = VendorValue
						if (Type.LocationBankEntity)
							invoked.BankInformationGroup.BankEntity             = VendorValue
						if (Type.LocationBankAccountType)
							invoked.BankInformationGroup.BankAccountType        = VendorValue
						if (Type.LocationBankCurrency)
							invoked.BankInformationGroup.BankCurrency           = VendorValue
						if (Type.LocationCrossBorderIdentifier)
							invoked.BankInformationGroup.CrossBorderIdentifier  = VendorValue
						if (Type.LocationSwiftID)
							invoked.BankInformationGroup.SwiftID                = VendorValue
						if (Type.LocationBankingCode)
							invoked.BankInformationGroup.BankingCode            = VendorValue
						if (Type.LocationBankID)
							invoked.BankInformationGroup.BankID                 = VendorValue
						if (Type.LocationAssignmentNumber)
							invoked.BankInformationGroup.AssignmentNumber       = VendorValue
						if (Type.LocationGiroNumber)
							invoked.BankInformationGroup.GiroNumber             = VendorValue
						if (Type.LocationBACSReference)
							invoked.BankInformationGroup.BACSReference          = VendorValue
						if (Type.LocationBACSName)
							invoked.BankInformationGroup.BACSName               = VendorValue
						if (Type.LocationCreditCardNumber)
							invoked.BankInformationGroup.CreditCardNumber       = VendorValue
				
				if (!SupplierSourceId entered
				and !PayablesDiversityCode entered
				and !PayablesCertificationCode entered)
					if (Type.FirstAddressLine
					or Type.RemitToFirstAddressLine
					or Type.SecondAddressLine
					or Type.RemitToSecondAddressLine
					or Type.ThirdAddressLine
					or Type.RemitToThirdAddressLine
					or Type.FourthAddressLine
					or Type.RemitToFourthAddressLine
					or Type.City
					or Type.RemitToCity
					or Type.StateOrProvince
					or Type.RemitToStateOrProvince
					or Type.PostalCode
					or Type.RemitToPostalCode
					or Type.County
					or Type.RemitToCounty
					or Type.Country
					or Type.RemitToCountry
					or Type.Type
					or Type.RemitToType
					or Type.Region
					or Type.RemitToRegion
					or Type.NationalID
					or Type.RemitToNationalID
					or Type.LocaleID
					or Type.RemitToLocaleID
					or Type.IndividualID
					or Type.RemitToIndividualID
					or Type.StateOrProvinceID
					or Type.RemitToStateOrProvinceID
					or Type.Name
					or Type.TaxId
					or Type.GlobalLocationNumber
					or Type.URL
					or Type.VATRegistrationCountry
					or Type.VATRegistrationNumber
					or Type.TaxIdentificationType
					or Type.BankEntity
					or Type.BankAccountNumber
					or Type.BankAccountType
					or Type.BankCurrency
					or Type.GiroNumber
					or Type.CreditCardNumber
					or Type.ContactEmail
					or Type.ContactPhonePrefix
					or Type.ContactPhoneNumber
					or Type.ContactPhoneExt
					or Type.ContactMobilePhonePrefix
					or Type.ContactMobilePhoneNumber
					or Type.ContactFaxNumber
					or Type.ContactFaxPrefix
					or Type.ContactFaxExt)	  	
						invoke Update Supplier 			
							if (Type.Name)
								invoked.SupplierName	                            = VendorValue
							if (Type.TaxId)
								invoked.TaxIdGroup.TaxId                            = VendorValue
								constraint (VendorValue entered)
									"CannotUpdateTaxInformationWithABlankValue"
							if (Type.GlobalLocationNumber)
								constraint (VendorValue entered)
									"CannotUpdateSupplierGlobalLocationNumberWithABlankValue"
								constraint (GlobalLocationNumberVenRel.Active)
									"CannotUpdateGlobalLocationNumberForSupplier;GlobalLocationNumberIsInactive"
								invoked.GlobalLocationNumber                        = VendorValue
							if (Type.URL)
								invoked.WebAddress                                  = VendorValue
							if (Type.VATRegistrationCountry)
								invoked.VATRegistrationCountry                      = VendorValue
								invoked.VATRegistrationNumber                       = VendorRel.VATRegistrationNumber
							if (Type.VATRegistrationNumber)
								invoked.VATRegistrationNumber                       = VendorValue
								invoked.VATRegistrationCountry                      = VendorRel.VATRegistrationCountry
							if ((Type.FirstAddressLine or Type.RemitToFirstAddressLine)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.DeliveryAddress.AddressLine1 = VendorValue
							if (Type.FirstAddressLine
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.DeliveryAddress.AddressLine1 = VendorValue
							if ((Type.SecondAddressLine or Type.RemitToSecondAddressLine)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.DeliveryAddress.AddressLine2	= VendorValue
							if (Type.SecondAddressLine
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.DeliveryAddress.AddressLine2	= VendorValue	
							if ((Type.ThirdAddressLine or Type.RemitToThirdAddressLine)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.DeliveryAddress.AddressLine3 = VendorValue
							if (Type.ThirdAddressLine
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.DeliveryAddress.AddressLine3 = VendorValue	
							if ((Type.FourthAddressLine or Type.RemitToFirstAddressLine)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.DeliveryAddress.AddressLine4	= VendorValue
							if (Type.FourthAddressLine
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.DeliveryAddress.AddressLine4	= VendorValue
							if ((Type.City or Type.RemitToCity)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.Municipality                 = VendorValue
							if (Type.City
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.Municipality                 = VendorValue
							if ((Type.StateOrProvince  or Type.RemitToStateOrProvince)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.StateProvince                = VendorValue
							if (Type.StateOrProvince
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.StateProvince                = VendorValue
							if ((Type.PostalCode or Type.RemitToPostalCode)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.PostalCode                   = VendorValue 
							if (Type.PostalCode
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.PostalCode                   = VendorValue 
							if ((Type.County or Type.RemitToCounty)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.County                   	= VendorValue
							if (Type.County
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.County                   	= VendorValue
							if ((Type.Country or Type.RemitToCountry)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.Country                      = VendorValue
							if (Type.Country
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.Country                      = VendorValue
							if (Type.Type
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.Type		                    = VendorValue
							if ((Type.Region or Type.RemitToRegion)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.Region	                 	= VendorValue
							if (Type.Region
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.Region						= VendorValue
							if ((Type.NationalID or Type.RemitToNationalID)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.NationalIDNumber	                 	= VendorValue
							if (Type.NationalID
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.NationalIDNumber						= VendorValue
							if ((Type.StateOrProvinceID or Type.StateOrProvinceID)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.StateProvinceIDNumber	                 	= VendorValue
							if (Type.StateOrProvinceID
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.StateProvinceIDNumber				= VendorValue
							if ((Type.LocaleID or Type.RemitToLocaleID)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.LocaleIDNumber	                 	= VendorValue	
							if (Type.LocaleID
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.LocaleIDNumber						= VendorValue
							if ((Type.IndividualID or Type.RemitToIndividualID)
							and invoked.BillingAddress entered)
								invoked.BillingAddress.IndividualIDNumber	                 	= VendorValue
							if (Type.IndividualID
							and (!invoked.BillingAddress entered
							or    invoked.SameAsAddressAbove))
								invoked.MailingAddress.IndividualIDNumber					= VendorValue
							if (Type.BankAccountNumber)
								invoked.BankInformationGroup.BankAccountNumber			= VendorValue
								invoked.BankInformationGroup.ConfirmBankAccountNumber	= VendorValue
							if (Type.BankEntity)
								invoked.BankInformationGroup.BankEntity             = VendorValue
								invoked.BankInformationGroup.ConfirmBankEntity		= VendorValue
							if (Type.BankAccountType)
								invoked.BankInformationGroup.BankAccountType        = VendorValue
							if (Type.BankCurrency)
								invoked.BankInformationGroup.BankCurrency           = VendorValue
							if (Type.CrossBorderIdentifier)
								invoked.BankInformationGroup.CrossBorderIdentifier  = VendorValue
							if (Type.SwiftID)
								invoked.BankInformationGroup.SwiftID                = VendorValue
							if (Type.BankingCode)
								invoked.BankInformationGroup.BankingCode            = VendorValue
							if (Type.BankID)
								invoked.BankInformationGroup.BankID                 = VendorValue
							if (Type.AssignmentNumber)
								invoked.BankInformationGroup.AssignmentNumber       = VendorValue
							if (Type.GiroNumber)
								invoked.BankInformationGroup.GiroNumber             = VendorValue
							if (Type.BACSReference)
								invoked.BankInformationGroup.BACSReference          = VendorValue
							if (Type.BACSName)
								invoked.BankInformationGroup.BACSName               = VendorValue
							if (Type.CreditCardNumber)
								invoked.BankInformationGroup.CreditCardNumber       = VendorValue
							if (Type.TaxIdentificationType)
								invoked.TaxIdGroup.TaxIdType                        = VendorValue
						
						invoke Update SupplierSourceIdPrimaryRel 			
							invoked.LocalFromMismatch = true
							if (Type.ContactPhoneNumber)
								invoked.TelephoneNumber.SubscriberNumber     = VendorValue
							if (Type.ContactPhonePrefix)
								invoked.TelephoneNumber.InternationalPrefix	 = VendorValue
							if (Type.ContactPhoneExt)
								invoked.TelephoneNumber.Extension            = VendorValue 
							if (Type.ContactMobilePhoneNumber)
								invoked.MobilePhone.MobilePhoneNumber.SubscriberNumber		= VendorValue
							if (Type.ContactMobilePhonePrefix)
								invoked.MobilePhone.MobilePhoneNumber.InternationalPrefix	= VendorValue
							if (Type.ContactMobilePhoneExt)
								invoked.MobilePhone.MobilePhoneNumber.Extension				= VendorValue
							if (Type.ContactFaxNumber)
								invoked.FaxNumber.SubscriberNumber           = VendorValue
							if (Type.ContactFaxPrefix)
								invoked.FaxNumber.InternationalPrefix    	 = VendorValue
							if (Type.ContactFaxExt)
								invoked.FaxNumber.Extension                  = VendorValue
							if (Type.ContactEmail)
								invoked.EmailAddress                         = VendorValue
								
					if (PayablesDiversityCode entered)
						if (Type.DiversityCodeSupplierOnly)
							constraint (Type.DiversityCodeVendorOnly)
								"NoDiversityCodeOnVendor;ClickUseSupplierValuesButtonForDiversityCode<PayablesDiversityCode>"
						if (Type.DiversityCodeExpirationDateSupplier)
							constraint (Type.DiversityCodeExpirationDateVendor)
								"CannotUpdateSupplier;VendorExpirationDateIsOlderForDiversityCode<PayablesDiversityCode>"
						if (Type.DiversityCodeExpirationDateVendor)
							invoke Update SupplierDiversityResponseRel
								invoked.ExpirationDate            				 = VendorValue
								if (SupplierDiversityCertDateIsZero)
									invoked.EffectiveDate						 = first VendorDiversityRel.DiversityEffectiveDate
						if (Type.DiversityCodeEffectiveDate)
							invoke Update SupplierDiversityResponseRel			
								invoked.EffectiveDate		                     = VendorValue
								if (SupplierDiversityDecertDateIsZero)
									invoked.ExpirationDate                      =  DiversityCodeDcertDate
						if (Type.DiversityCodeReviewDate)
							invoke Update SupplierDiversityResponseRel		
								invoked.ReviewDate                                   = VendorValue	
						if (Type.DiversityCodeVendorOnly)
							invoke Create SupplierDiversityResponse
								invoked.SupplierGroup									 = SupplierGroup
								invoked.Supplier										 = Supplier
								invoked.PayablesDiversityCode                            = PayablesDiversityCode
								invoked.EffectiveDate                   				 = first VendorDiversityRel.DiversityEffectiveDate
								invoked.ExpirationDate		  		                     = DiversityCodeDcertDate 
								invoked.ReviewDate                                       = first VendorDiversityRel.ReviewDate
								invoked.CertificationComplete                            = first VendorDiversityRel.CertificationComplete
								invoked.Alerts                                           = first VendorDiversityRel.Alerts
								invoked.Attachment                                       = first VendorDiversityRel.Attachment
								
					if (PayablesCertificationCode entered)
						if (Type.CertificationCodeSupplierOnly)
							constraint (Type.CertificationCodeVendorOnly)
								"NoCertificationCodeOnVendor;ClickUseSupplierValuesButtonForCertificationCode<PayablesCertificationCode>"
						if (Type.CertificationCodeVendorOnly)
							invoke Create SupplierCertification
								invoked.SupplierGroup 										= SupplierGroup
								invoked.Supplier  	 										= Supplier
								invoked.SupplierSourceId            						= SupplierSourceId
								invoked.SupplierCertification.PayablesCertificationCode 	= PayablesCertificationCode
								invoked.SupplierCertification.CertificationEffectiveDate 	= CertificationEffectiveDate
								invoked.Active                                              = 1
								invoked.CertificationExpirationDate 						= VendorCertificationRel.CertificationExpirationDate
								invoked.IndirectEntry                                       = true
						if (Type.CertificationCodeExpDate)
							invoke Update UpdateSupplierCertificationRel
								invoked.SupplierGroup  										= SupplierGroup
								invoked.Supplier        									= Supplier
								invoked.SupplierSourceId            						= SupplierSourceId
								invoked.SupplierCertification.PayablesCertificationCode 	= PayablesCertificationCode
								invoked.SupplierCertification.CertificationEffectiveDate 	= CertificationEffectiveDate
								invoked.CertificationExpirationDate 						= VendorValue
								invoked.IndirectEntry                                       = true		
													
					invoke Delete
					
					invoke DeleteNoDetails SupplierVendorMismatch
   				
   		UpdateVendorFromSupplierDetail is an Instance Action 
			valid when (SupplierValuesToUse)
			default label is "UseSupplierValue"
			Action Rules
				
				if (SupplierSourceId entered)
					if (Type.Name
					or Type.LocationBankAccountNumber
					or Type.LocationBankEntity
					or Type.LocationBankAccountType
					or Type.LocationBankCurrency
					or Type.LocationCrossBorderIdentifier
					or Type.LocationSwiftID
					or Type.LocationBankingCode
					or Type.LocationBankID
					or Type.LocationAssignmentNumber
					or Type.LocationGiroNumber
					or Type.LocationBACSReference
					or Type.LocationBACSName
					or Type.LocationCreditCardNumber)
						invoke Update VendorLocationRel
							invoked.VendorGroup      			    					= SupplierGroup
							invoked.Vendor		         								= Supplier.Vendor
							invoked.VendorLocation         								= SupplierSourceId.VendorLocation
							if (Type.Name)
								invoked.VendorName										= SupplierValue
							if (Type.LocationBankAccountNumber)
								invoked.BankAccountNumber        = SupplierValue
							if (Type.LocationBankEntity)
								invoked.BankEntity               = SupplierValue
							if (Type.LocationBankAccountType)
								invoked.BankAccountType          = SupplierValue
							if (Type.LocationBankCurrency)
								invoked.BankCurrency             = SupplierValue
							if (Type.LocationCrossBorderIdentifier)
								invoked.CrossBorderIdentifier    = SupplierValue
							if (Type.LocationSwiftID)
								invoked.SwiftID                  = SupplierValue
							if (Type.LocationBankingCode)
								invoked.BankingCode              = SupplierValue
							if (Type.LocationBankID)
								invoked.BankID                   = SupplierValue
							if (Type.LocationAssignmentNumber)
								invoked.AssignmentNumber         = SupplierValue
							if (Type.LocationGiroNumber)
								invoked.GiroNumber               = SupplierValue
							if (Type.LocationBACSReference)
								invoked.BACSReference            = SupplierValue
							if (Type.LocationBACSName)
								invoked.BACSName                 = SupplierValue
							if (Type.LocationCreditCardNumber)
								invoked.CreditCardNumber         = SupplierValue
	 	  			if (Type.FirstAddressLine
					or Type.SecondAddressLine
					or Type.ThirdAddressLine
					or Type.FourthAddressLine
					or Type.City
					or Type.StateOrProvince
					or Type.PostalCode
					or Type.County
					or Type.Country
					or Type.Type
					or Type.Region
					or Type.NationalID
					or Type.LocaleID
					or Type.IndividualID
					or Type.StateOrProvinceID)
						invoke Update VendorLocationAddressRel
							if (Type.FirstAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine1 	     = SupplierValue
							if (Type.SecondAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine2   	= SupplierValue
							if (Type.ThirdAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine3 	     = SupplierValue
							if (Type.FourthAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine4       = SupplierValue
							if (Type.City)
								invoked.PostalAddress.Municipality             			= SupplierValue
							if (Type.StateOrProvince)
								invoked.PostalAddress.StateProvince            			= SupplierValue
							if (Type.PostalCode)
								invoked.PostalAddress.PostalCode						= SupplierValue 
							if (Type.County)
								invoked.PostalAddress.County           					= SupplierValue
							if (Type.Country)
								invoked.PostalAddress.Country							= SupplierValue
							if (Type.Type)
								invoked.PostalAddress.Type   							= SupplierValue
							if (Type.Region)
								invoked.PostalAddress.Region							= SupplierValue
							if (Type.NationalID)										
								invoked.PostalAddress.NationalIDNumber							= SupplierValue
							if (Type.LocaleID)
								invoked.PostalAddress.LocaleIDNumber							= SupplierValue
							if (Type.IndividualID)
								invoked.PostalAddress.IndividualIDNumber						= SupplierValue
							if (Type.StateOrProvinceID)
								invoked.PostalAddress.StateProvinceIDNumber						= SupplierValue
					if (Type.ContactName
					or Type.ContactPhonePrefix
					or Type.ContactPhoneNumber
					or Type.ContactPhoneExt
					or Type.ContactMobilePhonePrefix
					or Type.ContactMobilePhoneNumber
					or Type.ContactFaxPrefix
					or Type.ContactFaxNumber
					or Type.ContactFaxExt
					or Type.ContactEmail)
						invoke Update VendorLocationContactRel
							if (Type.ContactName)
								invoked.ContactName      								= SupplierValue
							if (Type.ContactPhonePrefix)
								invoked.PhoneNumber.InternationalPrefix	     			= SupplierValue
							if (Type.ContactPhoneNumber)
								invoked.PhoneNumber.SubscriberNumber      				= SupplierValue
							if (Type.ContactPhoneExt)
								invoked.PhoneNumber.Extension         					= SupplierValue
							if (Type.ContactMobilePhonePrefix)
								invoked.MobileNumber.MobilePhoneNumber.InternationalPrefix	 = SupplierValue
							if (Type.ContactMobilePhoneNumber)
								invoked.MobileNumber.MobilePhoneNumber.SubscriberNumber		 = SupplierValue
							if (Type.ContactFaxPrefix)
								invoked.FaxNumber.InternationalPrefix		 			= SupplierValue
							if (Type.ContactFaxNumber)
								invoked.FaxNumber.SubscriberNumber       				= SupplierValue
							if (Type.ContactFaxExt)
								invoked.FaxNumber.Extension           					= SupplierValue
							if (Type.ContactEmail)
								invoked.EmailAddress     								= SupplierValue
		
				if (!SupplierSourceId entered
				and !PayablesDiversityCode entered
				and !PayablesCertificationCode entered
				and !Type.GlobalLocationNumber)
					if (Type.Name
					or Type.TaxId
					or Type.GlobalLocationNumber
					or Type.URL
					or Type.VATRegistrationCountry
					or Type.VATRegistrationNumber
					or Type.BankAccountNumber
					or Type.BankEntity
					or Type.BankAccountType
					or Type.BankCurrency
					or Type.CrossBorderIdentifier
					or Type.SwiftID
					or Type.BankID
					or Type.AssignmentNumber
					or Type.GiroNumber
					or Type.BACSReference
					or Type.BACSName
					or Type.CreditCardNumber
					or Type.TaxIdentificationType)	
						invoke Update VendorRel
							invoked.VendorGroup		= SupplierGroup
							invoked.Vendor			= Supplier.Vendor
							if (Type.Name)
								invoked.VendorName		 = SupplierValue
							if (Type.TaxId)
								invoked.TaxID            = SupplierValue
							if (Type.GlobalLocationNumber)
								invoked.GlobalLocationNumber = SupplierValue
							if (Type.URL)
								invoked.URLAddress          = SupplierValue
							if (Type.VATRegistrationCountry)
								invoked.VATRegistrationCountry   = SupplierValue
								invoked.VATRegistrationNumber    = SupplierRel.VATRegistrationNumber
							if (Type.VATRegistrationNumber)
								invoked.VATRegistrationNumber    = SupplierValue
								invoked.VATRegistrationCountry   = SupplierRel.VATRegistrationCountry
							if (Type.BankAccountNumber)
								invoked.BankAccountNumber        = SupplierValue
							if (Type.BankEntity)
								invoked.BankEntity               = SupplierValue
							if (Type.BankAccountType)
								invoked.BankAccountType          = SupplierValue
							if (Type.BankCurrency)
								invoked.BankCurrency             = SupplierValue
							if (Type.CrossBorderIdentifier)
								invoked.CrossBorderIdentifier    = SupplierValue
							if (Type.SwiftID)
								invoked.SwiftID                  = SupplierValue
							if (Type.BankingCode)
								invoked.BankingCode              = SupplierValue
							if (Type.BankID)
								invoked.BankID                   = SupplierValue
							if (Type.AssignmentNumber)
								invoked.AssignmentNumber         = SupplierValue
							if (Type.GiroNumber)
								invoked.GiroNumber               = SupplierValue
							if (Type.BACSReference)
								invoked.BACSReference            = SupplierValue
							if (Type.BACSName)
								invoked.BACSName                 = SupplierValue
							if (Type.CreditCardNumber)
								invoked.CreditCardNumber         = SupplierValue
							if (Type.TaxIdentificationType)
								invoked.TaxIDType                = SupplierValue
					if (Type.FirstAddressLine
					or Type.RemitToFirstAddressLine
					or Type.SecondAddressLine
					or Type.RemitToSecondAddressLine
					or Type.ThirdAddressLine
					or Type.RemitToThirdAddressLine
					or Type.FourthAddressLine
					or Type.RemitToFourthAddressLine
					or Type.City
					or Type.RemitToCity
					or Type.StateOrProvince
					or Type.RemitToStateOrProvince
					or Type.PostalCode
					or Type.RemitToPostalCode
					or Type.County
					or Type.RemitToCounty
					or Type.Country
					or Type.RemitToCountry
					or Type.Type
					or Type.RemitToType
					or Type.Region
					or Type.RemitToRegion
					or Type.NationalID
					or Type.RemitToNationalID
					or Type.LocaleID
					or Type.RemitToLocaleID
					or Type.IndividualID
					or Type.RemitToIndividualID
					or Type.StateOrProvinceID
					or Type.RemitToStateOrProvinceID)
						invoke Update VendorAddressRel
							if (Type.FirstAddressLine or Type.RemitToFirstAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine1 	     = SupplierValue
							if (Type.SecondAddressLine or Type.RemitToSecondAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine2   	= SupplierValue
							if (Type.ThirdAddressLine or Type.RemitToThirdAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine3 	     = SupplierValue
							if (Type.FourthAddressLine or Type.RemitToFourthAddressLine)
								invoked.PostalAddress.DeliveryAddress.AddressLine4       = SupplierValue
							if (Type.City or Type.RemitToCity)
								invoked.PostalAddress.Municipality             			= SupplierValue
							if (Type.StateOrProvince or Type.RemitToStateOrProvince)
								invoked.PostalAddress.StateProvince            			= SupplierValue
							if (Type.PostalCode or Type.RemitToPostalCode)
								invoked.PostalAddress.PostalCode						= SupplierValue 
							if (Type.County or Type.RemitToCounty)
								invoked.PostalAddress.County           					= SupplierValue
							if (Type.Country or Type.RemitToCountry)
								invoked.PostalAddress.Country							= SupplierValue
							if (Type.Type or Type.RemitToType)
								invoked.PostalAddress.Type   							= SupplierValue
							if (Type.Region or Type.RemitToRegion)
								invoked.PostalAddress.Region							= SupplierValue
							if (Type.NationalID or Type.RemitToNationalID)
								invoked.PostalAddress.NationalIDNumber							= SupplierValue
							if (Type.LocaleID or Type.RemitToLocaleID)
								invoked.PostalAddress.LocaleIDNumber							= SupplierValue
							if (Type.IndividualID or Type.RemitToIndividualID)
								invoked.PostalAddress.IndividualIDNumber						= SupplierValue
							if (Type.StateOrProvinceID or Type.RemitToStateOrProvinceID)
								invoked.PostalAddress.StateProvinceIDNumber						= SupplierValue
					if (Type.ContactName 
					or Type.ContactPhoneNumber 
					or Type.ContactPhonePrefix 
					or Type.ContactPhoneExt 
					or Type.ContactMobilePhoneNumber
					or Type.ContactMobilePhonePrefix
					or Type.ContactFaxNumber
					or Type.ContactFaxPrefix
					or Type.ContactFaxExt
					or Type.ContactEmail)
						invoke Update VendorContactRel
							if (Type.ContactName)
								invoked.ContactName      								= SupplierValue
							if (Type.ContactPhoneNumber)
								invoked.PhoneNumber.SubscriberNumber      				= SupplierValue
							if (Type.ContactPhonePrefix)
								invoked.PhoneNumber.InternationalPrefix	     			= SupplierValue
							if (Type.ContactPhoneExt)
								invoked.PhoneNumber.Extension         					= SupplierValue
							if (Type.ContactMobilePhoneNumber)
								invoked.MobileNumber.MobilePhoneNumber.SubscriberNumber		 = SupplierValue
							if (Type.ContactMobilePhonePrefix)
								invoked.MobileNumber.MobilePhoneNumber.InternationalPrefix	 = SupplierValue
							if (Type.ContactFaxNumber)
								invoked.FaxNumber.SubscriberNumber       				= SupplierValue
							if (Type.ContactFaxPrefix)
								invoked.FaxNumber.InternationalPrefix		 			= SupplierValue
							if (Type.ContactFaxExt)
								invoked.FaxNumber.Extension           					= SupplierValue
							if (Type.ContactEmail)
								invoked.EmailAddress     								= SupplierValue
	   								
   				if (Type.GlobalLocationNumber)
   					constraint (SupplierValue entered)
   						"CannotUpdateVendorGlobalLocationNumberWithABlankValue"
   					constraint (GlnActiveOrNew)
   						"CannotUpdateGlobalLocationNumberForVendor;GlobalLocationNumberIsInactive"
   					constraint (!VendorValue entered)
   						"CannotUpdateVendorGlobalLocationNumberWhenItHasAValue;MustRemoveExistingValueInIC58"
   					if (!GlobalLocationNumberSupRel exists)
						invoke Create GlobalLocationNumber
							invoked.ItemGroup				= SupplierGroup
							invoked.GlobalLocationNumber	= SupplierValue
			  				invoked.Description             = SupplierValue
			  				invoked.Active					= true
					if (!GlobalLocationNumberDetailSupplierRel exists)
						invoke Create GlobalLocationNumberDetail
							invoked.ItemGroup											= SupplierGroup
							invoked.GlobalLocationNumber 								= SupplierValue
							invoked.GlobalLocationNumberDetail.GlobalLocationNumberType = 7
							invoked.VendorAndVendorLocation.Vendor	 					= Supplier.Vendor
   				
   				if (PayablesDiversityCode entered)
   					constraint (PayablesDiversityCodeRel.Active)
	   					"DiversityCodeInactiveInAccountsPayable;CannotCreateOrUpdateInactiveCode"
   					if (Type.DiversityCodeSupplierOnly)
						constraint (SupplierDiversityResponseRel.ExpirationDate entered)
  							"ExpirationDateMustBeAssignedToDiversityCode<PayablesDiversityCode>"	
						if (VendorGroupRel.DiversityValidWhenWithinDates)
							constraint (SupplierDiversityResponseRel.EffectiveDate entered)
								"EffectiveDateMustBeAssignedToDiversityCode<PayablesDiversityCode>"
						constraint (!VendorDiversityRel exists)
							"VendorDiversityCode<PayablesDiversityCode>AlreadyExists"
						invoke Create VendorDiversity
							invoked.VendorGroup				= SupplierGroup
							invoked.Vendor					= Supplier.Vendor
							invoked.DiversityCode  	        = PayablesDiversityCode
							invoked.DiversityEffectiveDate	= SupplierDiversityResponseRel.EffectiveDate
							invoked.DiversityExpirationDate	= SupplierDiversityResponseRel.ExpirationDate
							invoked.ReviewDate				= SupplierDiversityResponseRel.ReviewDate
							invoked.CertificationComplete   = SupplierDiversityResponseRel.CertificationComplete
							invoked.Alerts                  = SupplierDiversityResponseRel.Alerts
							invoked.Attachment              = SupplierDiversityResponseRel.Attachment
					if (Type.DiversityCodeEffectiveDate)
						invoke Update first VendorDiversityRel
							invoked.DiversityEffectiveDate = SupplierDiversityResponseRel.EffectiveDate
					if (Type.DiversityCodeVendorOnly)
	   					constraint (Type.DiversityCodeSupplierOnly)
	   						"NoDiversityCodeOnSupplier;ClickUseVendorValuesButtonForDiversityCode<PayablesDiversityCode>"
	   				if (Type.DiversityCodeExpirationDateSupplier)
						invoke Update first VendorDiversityRel
							invoked.DiversityExpirationDate = SupplierDiversityResponseRel.ExpirationDate	   				
	   				if (Type.DiversityCodeExpirationDateVendor)
	   					constraint (Type.DiversityCodeExpirationDateSupplier)
	   						"CannotUpdateVendor;SupplierExpirationDateIsOlderForDiversityCode<PayablesDiversityCode>"
	   				if (Type.DiversityCodeReviewDate)
						invoke Update first VendorDiversityRel
							invoked.ReviewDate = SupplierDiversityResponseRel.ReviewDate
   							
   				if (PayablesCertificationCode entered)
					if (Type.CertificationCodeVendorOnly)
						constraint (Type.CertificationCodeSupplierOnly)
							"NoCertificationCodeOnSupplier;ClickUseVendorValuesButtonForCertificationCode<PayablesCertificationCode>"
					if (Type.CertificationCodeSupplierOnly)
						constraint (!VendorCertificationConstraintRel exists)
							"VendorCertification<PayablesCertificationCode>AlreadyExists"
						invoke Create VendorCertification
							invoked.VendorGroup  				= SupplierGroup
 							invoked.Vendor 	 	 				= Supplier.Vendor
							invoked.VendorLocation              = SupplierSourceId.VendorLocation
 							invoked.PayablesCertificationCode	= PayablesCertificationCode
 							invoked.CertificationEffectiveDate 	= CertificationEffectiveDate
 							invoked.CertificationExpirationDate = DiversityCodeDcertDate
 					if (Type.CertificationCodeExpDate)
 						invoke Create VendorCertification
 							invoked.VendorGroup  					= SupplierGroup
 							invoked.Vendor 	 	 					= Supplier.Vendor
							invoked.VendorLocation              	= SupplierSourceId.VendorLocation
 							invoked.PayablesCertificationCode		= PayablesCertificationCode
 							invoked.CertificationEffectiveDate 		= CertificationEffectiveDate
 							invoked.CertificationExpirationDate 	= SupplierValue

				invoke Delete

				invoke DeleteNoDetails SupplierVendorMismatch
