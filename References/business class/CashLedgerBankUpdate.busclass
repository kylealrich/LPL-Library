CashLedgerBankUpdate is a BusinessClass
    owned by cb
    prefix is CLTU

    Ontology
    	symbolic key is CashLedgerBankUpdate

	Patterns
        implements StaticJava
        disable AuditIndex
        disable Auditing
        disable EffectiveDated
        
    Persistent Fields
		OriginalFileName					is Alpha 60 
		CashLedgerTransactionIdentifier
		TransactionDate						is Date
		TransactionAmount					is an InternationalAmount
        BankCurrency						is a Currency
        ExchangeRate						is a CurrencyRate
        CashLedgerUpdateAction				
		ActionDate							is Date
		ConfirmationNumber					
		CheckNumber							is a TransactionNumber
        CustomerOrPayeeName					is a VendorName 
        	holds pii
		UpdateReference						is Alpha 30
		StatusReasonCode					is Alpha 35
		StatusReasonDescription				is Alpha up to 150	
		CashCode
		BankTransactionCode
		ElectronicPaymentCode
		CrossBorderIdentifier
		BankEntity
		BankAccountNumber	
		ErrorMessage						is Alpha up to 200
		PostDate							is Date	
		
	Derived Fields
		ReasonCodeMessage is a MessageField
			restricted
			"<CashLedgerUpdateAction>Code:<StatusReasonCode>"

		ReasonDescriptionMessage is a MessageField
			restricted
			"<CashLedgerUpdateAction>Description:<StatusReasonDescription>"
		
		CashLedgerTransactionNotFoundMessage is a MessageField
			restricted
			"CashLedgerTransaction<CashLedgerTransactionIdentifier>NotFound"
		
		ConfirmationNumberRequiredMessage is a MessageField
			restricted
			"ConfirmationNumberRequiredForAcceptedUpdateAction"
			
		RecordAlreadyConfirmedMessage is a MessageField
			restricted
			"RecordIsAlreadyConfirmed"

		CannotRejectPaymentMessage is a MessageField
			restricted
			"PaymentRecordIsInStatus<first CashLedgerPayablesPaymentRel.Status>:CannotReject"
		
		CannotRejectCashLedgerTransactionMessage is a MessageField
			restricted
			"CashledgerTransactionIsInStatus<first CashLedgerTransactionByIdentifierRel.Status>:CannotReject"
		
		CannotUpdateElectronicFundsTransferMessage is a MessageField
			restricted
			"FundsTransferRecordIsInStatus<first CashLedgerElectronicFundsTransferTransactionRel.Status>:CannotBe<CashLedgerUpdateAction>"
		
		CannotUpdateWireTransferMessage is a MessageField
			restricted
			"WireTransferRecordHasBeenProcessedOrRejected:CannotBe<CashLedgerUpdateAction>"
		
		PaymentNumberAlreadyAssignedToPaymentRecordMessage is a MessageField
			restricted
			"PaymentNumber<first CashLedgerPayablesPaymentRel.TransactionNumber>:AlreadyAssignedToPaymentRecord"  
			 
		PaymentNumberAlreadyAssignedToAnotherPaymentRecordMessage is a MessageField
			restricted
			"PaymentNumber<first CashLedgerPayablesPaymentByTranNbrRel.TransactionNumber>:AlreadyAssignedToAnotherPaymentRecord"
				
		PaymentRecordAlreadyPaidMessage is a MessageField
			restricted
			"PaymentAlreadyPaidOn<first CashLedgerPayablesPaymentRel.PaidDate>"

		CannotEscheatNoAcountDefined is a MessageField
			restricted
			"StaleDatingAccountsRequiredForCompany<first CashLedgerPayablesPaymentRel.Company>CashCode<first CashLedgerPayablesPaymentRel.CashCode>"

		CannotEscheatPaymentMessage is a MessageField
			restricted
			"PaymentRecordIsInStatus<first CashLedgerPayablesPaymentRel.Status>:CannotEscheat"

		CannotEscheatBankIssuedTransactionNumberNotDefined	is a MessageField	
			restricted
			"CannotEscheatBankIssuedTransactionNumberNotDefined"

		CannotEscheatInvalidStatusTransactionMessage is a MessageField	
			restricted
			"TransactionRecordIsNotInOpenOrStaleDatedStatus:CannotEscheat"
					
		CannotUpdateLedgerTransactionMessage is a MessageField
			restricted
			"TransactionRecordIsNotInOpenStatus:CannotBe<CashLedgerUpdateAction>"
		
		RecordNotFoundMessage is a MessageField
			restricted
			"RecordNotFoundInCashLedgerForIdentifier:<CashLedgerTransactionIdentifier>"

		RecordNotFoundForTransactionMessage is a MessageField
			restricted
			"RecordNotFoundInCashLedgerForTransaction:<CheckNumber>"

		OpenRecordNotFoundForTransactionMessage is a MessageField
			restricted
			"RecordFoundInCashLedgerForTransaction:<CheckNumber>IsNotInOpenStatus;Cannot<CashLedgerUpdateAction>"

		StaleDatedRecordNotFoundForTransactionMessage is a MessageField
			restricted
			"RecordFoundInCashLedgerForTransaction:<CheckNumber>IsNotInStaleDatedStatus;Cannot<CashLedgerUpdateAction>"

		CheckNumberRequiredMessage is a MessageField
			restricted
			"CheckNumberRequiredFor<CashLedgerUpdateAction>Action"
			
		ActionDateRequiredMessage is a MessageField
			restricted
			"ActionDateRequiredFor<CashLedgerUpdateAction>Action"
			
		MoreThanOneRecordFoundMessage is a MessageField
			restricted
			"MoreThanOneRecordFoundForCheckNumber<CheckNumber>;Cannot<CashLedgerUpdateAction>"
		
		CashLedgerTransactionIdentifierRequiredMessage is a MessageField
			restricted
			"CashLedgerTransactionIdentifierRequiredFor<CashLedgerUpdateAction>Action"
			
		CashLedgerUpdateActionRequiredMessage is a MessageField
			restricted
			"CashLedgerUpdateActionRequired"

		TranOrPmtInvalidStatusMessage is a MessageField
			restricted
			"CannotUpdate:TransactionMustBeInOpenOrReconciledStatusAndPaymentMustBeClosed"

		CheckNumberInvalidMessage is a MessageField
			restricted
			"CheckNumberMustBeNumericAndGreaterThanZero"

		InvalidCashCodeForTransactionIdentifierMessage is a MessageField
			restricted
			"InvalidCashCodeForTransactionIdentifier"
			
		InvalidBankTransactionCodeForTransactionIdentifierMessage is a MessageField
			restricted
			"InvalidBankTransactionCodeForTransactionIdentifier"

		InvalidActionForEftMessage is a MessageField
			restricted
			"InvalidActionForEftUpdate;ValidActionsAreAcceptedOrRejected"

		InvalidActionForWireTransfer is a MessageField
			restricted
			"InvalidActionForWireTransfer;ValidActionsAreAcceptedOrRejected"
			
		ActionOnlyValidForBankIssuedTransactionNumberMessage is a MessageField
			restricted
			"ActionOnlyValidForBankIssuedTransactionNumber"			

		CashManagementGroupRequiredMessage is a MessageField
			restricted
			"CashManagementGroupActionRequired"

		CashManagementAccountRequiredMessage is a MessageField
			restricted
			"CashManagementAccountRequired"

		CheckNumberOrTransactionIdentifierRequiredMessage is a MessageField
			restricted
			"CheckNumberOrTransactionIdentifierRequiredFor<CashLedgerUpdateAction>Action"

		CannotPerformStaleDateActionsMessage is a MessageField
			restricted
			"TransactionRecordIsNotInStaleDatedStatus:CannotBe<CashLedgerUpdateAction>"

		CannotStaleDateNoAcountDefined is a MessageField	
			restricted
			"StaleDatingAccountsRequiredForCompany<first CashLedgerPayablesPaymentRel.Company>CashCode<first CashLedgerPayablesPaymentRel.CashCode>"

		CannotStaleDatePaymentMessage is a MessageField	
			restricted
			"PaymentRecordIsInStatus<first CashLedgerPayablesPaymentRel.Status>:CannotStaleDate"

		CannotStaleDateBankIssuedTransactionNumberNotDefined	is a MessageField	
			restricted
			"CannotStaleDateBankIssuedTransactionNumberNotDefined"

		PostingDateNotValidMessage	is a MessageField	
			restricted
			"PostDateNotWithinValidEntryDatesForSystemCode_'\C\B'_andCompany<first CashLedgerPayablesPaymentRel.PayablesCompanyProcessLevel.PayablesCompany>;ValidDateRangeIs<CBCompanySystemClosingControlRel.ValidEntryDate.Begin>-<CBCompanySystemClosingControlRel.ValidEntryDate.End>"	


		UpdateComment is a DerivedField
			type is Alpha 250	
			restricted
			if (StatusReasonCode 		entered
			and StatusReasonDescription	entered)
				return ReasonCodeMessage + " " + ReasonDescriptionMessage
			else
				if (StatusReasonDescription	entered)
					return ReasonCodeMessage
				else
					if (StatusReasonDescription	entered)
						return ReasonDescriptionMessage

		CannotPerformPendingStopPayConfirmActionsMessage is a MessageField		
			restricted
			"TransactionRecordIsNotInPendingStopPayConfirmationStatus:CannotBe<CashLedgerUpdateAction>"

		PendingStopPayConfirmRecordNotFoundForTransactionMessage is a MessageField		
			restricted
			"RecordFoundInCashLedgerForTransaction:<CheckNumber>IsNotInPendingStopPayConfirmationStatus;Cannot<CashLedgerUpdateAction>"

	Local Fields
		LocalCashCode 				is like CashCode
		LocalBankTransactionCode	is like BankTransactionCode
		ErrorOccurred				is Boolean
		
	Field Rules

	Attach Rules

	Relations
		CashLedgerPayablesPaymentRel 
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses ByCashLedgerTransactionIdentifier
				related.CashManagementGroup				= CashManagementGroup
				related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier

		CashCodeRel				
			one-to-many relation to CashCode
			Field Mapping uses ByBankAccount
				related.CashManagementGroup				= CashManagementGroup
				related.BankAccountNumber				= CashLedgerBankUpdate.CashManagementAccount
			
		CashLedgerPayablesPaymentByCashCodeRel				
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set4
				related.CashManagementGroup				= CashManagementGroup
			Instance Selection
				where (((CashCode												entered
				and      related.CashCode										= CashCode) 
				or      (CashCode												!entered
				and      related.CashCode										= any CashCodeRel.CashCode))
				and     (related.CashLedgerPayablesPayment.BankTransactionCode	= BankTransactionCode
				or       BankTransactionCode									!entered)
				and      related.TransactionNumber								= CheckNumber)
			
		CashLedgerPayablesPaymentByTranNbrRel 
			one-to-many relation to CashLedgerPayablesPayment
			Field Mapping uses Set4
				related.CashManagementGroup								= CashManagementGroup
				related.CashCode										= LocalCashCode
                related.CashLedgerPayablesPayment.BankTransactionCode	= LocalBankTransactionCode
				related.TransactionNumber								= CheckNumber

		CashLedgerElectronicFundsTransferTransactionRel 
			one-to-many relation to CashLedgerElectronicFundsTransferTransaction
			Field Mapping uses ByCashLedgerTransactionIdentifier
				related.CashManagementGroup				= CashManagementGroup
				related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier

		CashLedgerTransactionByIdentifierRel 
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashLedgerTransactionIdentifier
				related.CashManagementGroup				= CashManagementGroup
				related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier

		WireTransferOutputDetailRel
			one-to-many relation to WireTransferOutputDetail
			Field Mapping uses ByCashLedgerTransactionIdentifier
				related.CashManagementGroup				= CashManagementGroup
				related.CashLedgerTransactionIdentifier	= CashLedgerTransactionIdentifier
				
		CashLedgerTransactionByCashManagementAccountOpenRel 
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashLedgerBankUpdate.CashManagementAccount
				related.Status					= 1 
			Instance Selection
				where (((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

		CashLedgerTransactionByCashManagementAccountStaleDatedRel 	
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashLedgerBankUpdate.CashManagementAccount
				related.Status					= 5 
			Instance Selection
				where (((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)
				
		CashLedgerTransactionByCashManagementAccountNotOpenRel	
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		 = CashManagementGroup
				related.CashManagementAccount	 = CashLedgerBankUpdate.CashManagementAccount
			Instance Selection
				where (related.Status					!= 1
				and    ((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

		CashLedgerTransactionByCashManagementAccountNotStaleDatedRel	
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		 = CashManagementGroup
				related.CashManagementAccount	 = CashLedgerBankUpdate.CashManagementAccount
			Instance Selection
				where (related.Status					!= 5
				and    ((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

		CashLedgerTransactionByCashManagementAccountPendingStopPayConfirmRel		
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		= CashManagementGroup
				related.CashManagementAccount	= CashLedgerBankUpdate.CashManagementAccount
				related.Status					= 8 
			Instance Selection
				where (((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

		CashLedgerTransactionByCashManagementAccountNotPendingStopPayConfirmRel		
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses ByCashManagementAccount
				related.CashManagementGroup		 = CashManagementGroup
				related.CashManagementAccount	 = CashLedgerBankUpdate.CashManagementAccount
			Instance Selection
				where (related.Status					!= 8
				and    ((CashCode						entered
				and      related.CashCode				= CashCode)
				or     	 CashCode						!entered)
				and    ((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

		CashLedgerTransactionByCashCodeRel 
			one-to-many relation to CashLedgerTransaction
			Field Mapping uses Set6
				related.CashManagementGroup		= CashManagementGroup
				related.CashCode				= CashCode
			Instance Selection
				where (((BankTransactionCode			entered
				and      related.BankTransactionCode	= BankTransactionCode)
				or	     BankTransactionCode			!entered)
				and      related.TransactionNumber		= CheckNumber)

        CashPaymentFormatRel
            one-to-many relation to CashPaymentFormat
            Field Mapping uses symbolic key
            	related.CashManagementGroup 					= CashManagementGroup	
                related.CashCode								= CashCode
                related.CashPaymentFormat.BankTransactionCode	= CashLedgerPayablesPaymentRel.CashLedgerPayablesPayment.BankTransactionCode
                related.CashPaymentFormat.PayablesProcessGroup	= CashLedgerPayablesPaymentRel.PayablesProcessGroup

		CBCompanySystemClosingControlRel	
			one-to-one relation to CompanySystemClosingControl
			Field Mapping uses BySystemCode
				related.GeneralLedgerSystemCode		= "CB"
				related.Company						= CashLedgerPayablesPaymentRel.PayablesCompanyProcessLevel.PayablesCompany
				
	Conditions
		RecordExists
			restricted
			when (CashLedgerBankUpdate exists)
			
		HasErrorMessage
			restricted
			when (ErrorMessage entered)
			
		SecurityGroupAllowsAccess
			restricted
			when (CashCode !entered
			or    CashCode.SecurityGroupAllowsAccess)

	Rule Blocks
		ValidateOpenTransactions
			if (CashLedgerTransactionIdentifier	entered)
				if (CashLedgerTransactionByIdentifierRel	exists)
					if (!first CashLedgerTransactionByIdentifierRel.Status.Open)
						ErrorOccurred	= true									
						ErrorMessage	= CannotUpdateLedgerTransactionMessage
					else
						include InvokeOpenActions	
				else
					ErrorOccurred	= true
					ErrorMessage	= RecordNotFoundMessage
			else
				if (CashLedgerBankUpdate.CashManagementAccount !entered)
					ErrorOccurred	= true									
					ErrorMessage	= CashManagementAccountRequiredMessage
				else	
				if (CashLedgerTransactionByCashManagementAccountOpenRel exists)
					if (instance count of CashLedgerTransactionByCashManagementAccountOpenRel > 1)
						ErrorOccurred	= true
						ErrorMessage	= MoreThanOneRecordFoundMessage
					else
						include InvokeOpenActions	
				else
					if (CashLedgerTransactionByCashManagementAccountNotOpenRel exists)	
						ErrorOccurred	= true
						ErrorMessage	= OpenRecordNotFoundForTransactionMessage
					else			
						ErrorOccurred	= true
						ErrorMessage	= RecordNotFoundForTransactionMessage
					
		InvokeOpenActions
			if (CashLedgerUpdateAction.Reconcile)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke Open.Reconcile first CashLedgerTransactionByIdentifierRel	
						resume on error
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
						invoked.PrmReconcileBankAmount	= TransactionAmount
				else	
					invoke Open.Reconcile CashLedgerTransactionByCashManagementAccountOpenRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
						invoked.PrmReconcileBankAmount	= TransactionAmount
			else
			if (CashLedgerUpdateAction.Void)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke Open.Void first CashLedgerTransactionByIdentifierRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
				else	
					invoke Open.Void CashLedgerTransactionByCashManagementAccountOpenRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
			else
			if (CashLedgerUpdateAction.StopPayment)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke Open.StopPayment first CashLedgerTransactionByIdentifierRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
				else	
					invoke Open.StopPayment CashLedgerTransactionByCashManagementAccountOpenRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate		= ActionDate
			else
			if (CashLedgerUpdateAction.OpenToStaleDate)	
				if (CashLedgerTransactionIdentifier	entered)	
					invoke Open.ManualStaleDate first CashLedgerTransactionByIdentifierRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmStaleDate			= ActionDate
						invoked.PrmPostDate				= PostDate
				else	
					invoke Open.ManualStaleDate CashLedgerTransactionByCashManagementAccountOpenRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmStaleDate			= ActionDate
						invoked.PrmPostDate				= PostDate
			if (!ErrorOccurred)	
				invoke Delete
														
		ValidateStaleDatedTransactions
			if (CashLedgerTransactionIdentifier	entered)
				if (CashLedgerTransactionByIdentifierRel	exists)
					if (!first CashLedgerTransactionByIdentifierRel.Status.StaleDated)
						ErrorOccurred	= true									
						ErrorMessage	= CannotPerformStaleDateActionsMessage
					else
						include InvokeStaleDatedActions
				else
					ErrorOccurred	= true
					ErrorMessage	= RecordNotFoundMessage
			else
				if (CashLedgerBankUpdate.CashManagementAccount !entered)
					ErrorOccurred	= true									
					ErrorMessage	= CashManagementAccountRequiredMessage
				else	
				if (CashLedgerTransactionByCashManagementAccountStaleDatedRel exists)
					if (instance count of CashLedgerTransactionByCashManagementAccountStaleDatedRel > 1)
						ErrorOccurred	= true
						ErrorMessage	= MoreThanOneRecordFoundMessage
					else
						include InvokeStaleDatedActions	
				else
					if (CashLedgerTransactionByCashManagementAccountNotStaleDatedRel exists)	
						ErrorOccurred	= true
						ErrorMessage	= StaleDatedRecordNotFoundForTransactionMessage
					else			
						ErrorOccurred	= true
						ErrorMessage	= RecordNotFoundForTransactionMessage
			
		InvokeStaleDatedActions
			if (CashLedgerUpdateAction.StaleDateToOpen)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke StaleDated.Reopen first CashLedgerTransactionByIdentifierRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmPostDate			= ActionDate
				else	
					invoke StaleDated.Reopen CashLedgerTransactionByCashManagementAccountStaleDatedRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmPostDate			= ActionDate
			else
			if (CashLedgerUpdateAction.StaleDateToVoid)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke StaleDated.Void first CashLedgerTransactionByIdentifierRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate
				else
					invoke StaleDated.Void CashLedgerTransactionByCashManagementAccountStaleDatedRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate		
			else
			if (CashLedgerUpdateAction.StaleDateToStopPay)
				if (CashLedgerTransactionIdentifier	entered)	
					invoke StaleDated.StopPayment first CashLedgerTransactionByIdentifierRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate
				else
					invoke StaleDated.StopPayment CashLedgerTransactionByCashManagementAccountStaleDatedRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate
			else
			if (CashLedgerUpdateAction.StaleDateToEscheat)	
				if (CashLedgerTransactionIdentifier	entered)	
					invoke StaleDated.ManualEscheat first CashLedgerTransactionByIdentifierRel
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmEscheatDate		= ActionDate
						invoked.PrmPostDate			= PostDate
				else
					invoke StaleDated.ManualEscheat CashLedgerTransactionByCashManagementAccountStaleDatedRel	
						resume on error	
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmEscheatDate		= ActionDate
						invoked.PrmPostDate			= PostDate							
			if (!ErrorOccurred)	
				invoke Delete

		ValidatePendingStopPayConfirmTransactions		
			if (CashLedgerTransactionIdentifier entered)
				if (CashLedgerTransactionByIdentifierRel exists)
					if (!first CashLedgerTransactionByIdentifierRel.Status.PendingStopPayConfirmation)
						ErrorOccurred	= true
						ErrorMessage	= CannotPerformPendingStopPayConfirmActionsMessage
					else
						include InvokePendingStopPayConfirmActions
				else
					ErrorOccurred	= true
					ErrorMessage	= RecordNotFoundMessage
			else
				if (CashLedgerBankUpdate.CashManagementAccount !entered)
					ErrorOccurred	= true
					ErrorMessage	= CashManagementAccountRequiredMessage
				else	
				if (CashLedgerTransactionByCashManagementAccountPendingStopPayConfirmRel exists)
					if (instance count of CashLedgerTransactionByCashManagementAccountPendingStopPayConfirmRel > 1)
						ErrorOccurred	= true
						ErrorMessage	= MoreThanOneRecordFoundMessage
					else
						include InvokePendingStopPayConfirmActions	
				else
					if (CashLedgerTransactionByCashManagementAccountNotPendingStopPayConfirmRel exists)
						ErrorOccurred	= true
						ErrorMessage	= PendingStopPayConfirmRecordNotFoundForTransactionMessage
					else
						ErrorOccurred	= true
						ErrorMessage	= RecordNotFoundForTransactionMessage

		InvokePendingStopPayConfirmActions		
			if (CashLedgerUpdateAction.PendingConfirmToOpen)
				if (CashLedgerTransactionIdentifier entered)
					invoke PendingStopPayConfirmation.Reopen first CashLedgerTransactionByIdentifierRel	
						resume on error
							ErrorOccurred	= true
							ErrorMessage	= error message
				else
					invoke PendingStopPayConfirmation.Reopen CashLedgerTransactionByCashManagementAccountPendingStopPayConfirmRel
						resume on error
							ErrorOccurred	= true
							ErrorMessage	= error message
			else
			if (CashLedgerUpdateAction.PendingConfirmToStopPay)
				if (CashLedgerTransactionIdentifier entered)
					invoke PendingStopPayConfirmation.StopPayment first CashLedgerTransactionByIdentifierRel
						resume on error
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate
				else
					invoke PendingStopPayConfirmation.StopPayment CashLedgerTransactionByCashManagementAccountPendingStopPayConfirmRel
						resume on error
							ErrorOccurred	= true
							ErrorMessage	= error message
						invoked.PrmReconcileDate	= ActionDate
			if (!ErrorOccurred)
				invoke Delete

		UpdateCashLedgerPayablesPayment
			invoke UpdateFromBankUpdateFile first CashLedgerPayablesPaymentRel
				resume on error	
					ErrorOccurred	= true
					ErrorMessage	= error message
				invoked.PrmCashLedgerUpdateAction	= CashLedgerUpdateAction
				invoked.PrmActionDate				= ActionDate
				invoked.PrmConfirmationNumber		= ConfirmationNumber
				invoked.PrmCheckNumber				= CheckNumber	
				invoked.PrmUpdateComment			= UpdateComment
				invoked.PrmPostDate					= PostDate		

			if (!ErrorOccurred)		
				invoke Delete

		UpdateCashLedgerElectronicFundsTransferTransaction
			invoke UpdateFromBankUpdateFile first CashLedgerElectronicFundsTransferTransactionRel
				resume on error	
					ErrorOccurred	= true
					ErrorMessage	= error message
				invoked.PrmCashLedgerUpdateAction	= CashLedgerUpdateAction
				invoked.PrmActionDate				= ActionDate
				invoked.PrmConfirmationNumber		= ConfirmationNumber
				invoked.PrmUpdateComment			= UpdateComment
			if (!ErrorOccurred)	
				invoke Delete

		UpdateWireTransferOutputDetail
			invoke ConfirmWireTransfer first WireTransferOutputDetailRel
				resume on error	
					ErrorOccurred	= true
					ErrorMessage	= error message
				invoked.PrmCashLedgerUpdateAction	= CashLedgerUpdateAction
				if (ActionDate entered)
					invoked.PrmConfirmationDate		= ActionDate
				else
					invoked.PrmConfirmationDate		= current corporate date
				invoked.PrmConfirmationNumber		= ConfirmationNumber
				invoked.PrmConfirmationAmount		= TransactionAmount
				invoked.PrmConfirmationComment		= UpdateComment
				invoked.PrmPostingDate 				= PostDate	
			if (!ErrorOccurred)	
				invoke Delete
			
	Actions
		UpdateLedgerTransactions is a Set Action
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmRunGroup					is a RunGroup
				PrmIgnoreDuplicates			is Boolean	
				PrmCashManagementAccount	is a CashManagementAccount
					
			Parameter Rules
				PrmRunGroup
					required
				
			Local Fields

			Instance Selection
				where ((CashManagementGroup							= PrmCashManagementGroup
				or     CashManagementGroup							!entered)
				and    CashLedgerBankUpdate.RunGroup				= PrmRunGroup
				and  ((PrmCashManagementAccount						entered	
				and    CashLedgerBankUpdate.CashManagementAccount	= PrmCashManagementAccount)
				or     PrmCashManagementAccount						!entered))

			Action Rules
				Instance Rules
					ErrorOccurred	= false
					if (CashManagementGroup not entered)
						ErrorOccurred	= true
						ErrorMessage	= CashManagementGroupRequiredMessage
					else	
					if (CashLedgerUpdateAction not entered)
						ErrorOccurred	= true
						ErrorMessage 	= CashLedgerUpdateActionRequiredMessage
					else	
						if (CashLedgerUpdateAction.Reconcile
						or  CashLedgerUpdateAction.Void
						or  CashLedgerUpdateAction.StopPayment
						or  CashLedgerUpdateAction.StaleDateToOpen		
						or  CashLedgerUpdateAction.StaleDateToVoid		
						or  CashLedgerUpdateAction.StaleDateToStopPay	
						or  CashLedgerUpdateAction.OpenToStaleDate		
						or  CashLedgerUpdateAction.StaleDateToEscheat	
						or  CashLedgerUpdateAction.PendingConfirmToOpen		
						or  CashLedgerUpdateAction.PendingConfirmToStopPay)	
							if (CheckNumber	!entered
							and CashLedgerTransactionIdentifier !entered)
								ErrorOccurred	= true
								ErrorMessage	= CheckNumberOrTransactionIdentifierRequiredMessage	
							else
							if (ActionDate		!entered)
								ErrorOccurred	= true
								ErrorMessage	= ActionDateRequiredMessage
							else	
								if (CashLedgerUpdateAction.Reconcile
								or  CashLedgerUpdateAction.Void
								or  CashLedgerUpdateAction.StopPayment
								or  CashLedgerUpdateAction.OpenToStaleDate)		
									include ValidateOpenTransactions
								else	
									if (CashLedgerUpdateAction.StaleDateToOpen
									or  CashLedgerUpdateAction.StaleDateToVoid
									or  CashLedgerUpdateAction.StaleDateToStopPay
									or  CashLedgerUpdateAction.StaleDateToEscheat)
										include ValidateStaleDatedTransactions
									else
										include ValidatePendingStopPayConfirmTransactions		
						else
							if  (CashLedgerTransactionIdentifier	!entered		
							and (CashLedgerUpdateAction.Escheat
							or   CashLedgerUpdateAction.StaleDate))
								if (CashLedgerBankUpdate.CashManagementAccount !entered)
									ErrorOccurred	= true									
									ErrorMessage	= CashManagementAccountRequiredMessage
								else
								if (CheckNumber	!entered)
									ErrorOccurred	= true
									ErrorMessage	= CheckNumberOrTransactionIdentifierRequiredMessage
								else
								if (instance count of CashLedgerPayablesPaymentByCashCodeRel > 1)
									ErrorOccurred	= true
									ErrorMessage	= MoreThanOneRecordFoundMessage
								else
									if (CashLedgerPayablesPaymentByCashCodeRel exists)
										CashLedgerTransactionIdentifier	= first CashLedgerPayablesPaymentByCashCodeRel.CashLedgerTransactionIdentifier
									else
										ErrorOccurred	= true
										ErrorMessage	= RecordNotFoundForTransactionMessage
							if (CashLedgerTransactionIdentifier	!entered
							and !ErrorOccurred)					
								ErrorOccurred	= true
								ErrorMessage	= CashLedgerTransactionIdentifierRequiredMessage
							else
							if (CashLedgerPayablesPaymentRel	exists)
								LocalCashCode				= CashLedgerPayablesPaymentRel.CashCode
								LocalBankTransactionCode	= CashLedgerPayablesPaymentRel.CashLedgerPayablesPayment.BankTransactionCode
								if (CashCode entered
								and CashCode not = LocalCashCode)
									ErrorOccurred			= true
									ErrorMessage			= InvalidCashCodeForTransactionIdentifierMessage
								else
								if (BankTransactionCode entered
								and BankTransactionCode not = LocalBankTransactionCode)
									ErrorOccurred			= true
									ErrorMessage			= InvalidBankTransactionCodeForTransactionIdentifierMessage
								else
								if (!CashLedgerUpdateAction.StaleDate	
								and !CashLedgerUpdateAction.Escheat		
								and !first CashLedgerPayablesPaymentRel.CanUpdateRecord)
									ErrorOccurred		= true
									ErrorMessage		= TranOrPmtInvalidStatusMessage
								else	
									if (CashLedgerUpdateAction.Accepted)
										if (ConfirmationNumber !entered)
											ErrorOccurred	= true
											ErrorMessage	= ConfirmationNumberRequiredMessage 
										else
											if (first CashLedgerPayablesPaymentRel.ConfirmationNumber entered)
												ErrorOccurred	= true
												ErrorMessage	= RecordAlreadyConfirmedMessage
											else
												include UpdateCashLedgerPayablesPayment
									if (CashLedgerUpdateAction.Rejected)
										if (!first CashLedgerPayablesPaymentRel.Status.PaymentCycleClosed)
											ErrorOccurred	= true
											ErrorMessage	= CannotRejectPaymentMessage 
										else
										if (!first CashLedgerPayablesPaymentRel.IsSummarizedPayment
										and !first CashLedgerTransactionByIdentifierRel.Status.Open
										and !first CashLedgerPayablesPaymentRel.CashLedgerPayablesPayment.BankTransactionCode.AllowDetailPaymentReject)
											ErrorOccurred	= true
											ErrorMessage	= CannotRejectCashLedgerTransactionMessage
										else		
											include UpdateCashLedgerPayablesPayment
									if (CashLedgerUpdateAction.CheckNumber)
										if (!first CashLedgerPayablesPaymentRel.IsBankIssuedPaymentNumber)
											ErrorOccurred	= true
											ErrorMessage	= ActionOnlyValidForBankIssuedTransactionNumberMessage
										else	
										if (CheckNumber	!entered)
											ErrorOccurred	= true
											ErrorMessage	= CheckNumberRequiredMessage
										else
										if (CashLedgerPayablesPaymentRel.TransactionNumber = CheckNumber)
											ErrorOccurred	= true
											ErrorMessage 	= PaymentNumberAlreadyAssignedToPaymentRecordMessage
										else	 
										if (!CheckNumber is numeric
										or  !CheckNumber > "0000000000000000000000")
											ErrorOccurred	= true
											ErrorMessage	= CheckNumberInvalidMessage
										else
										if (first CashLedgerPayablesPaymentByTranNbrRel exists
										and !PrmIgnoreDuplicates)	
											ErrorOccurred	= true
											ErrorMessage	= PaymentNumberAlreadyAssignedToAnotherPaymentRecordMessage 
										else
											include UpdateCashLedgerPayablesPayment
									if (CashLedgerUpdateAction.Paid)
										if (!first CashLedgerPayablesPaymentRel.IsBankIssuedPaymentNumber)
											ErrorOccurred	= true
											ErrorMessage	= ActionOnlyValidForBankIssuedTransactionNumberMessage
										else	
										if (ActionDate		!entered)
											ErrorOccurred	= true
											ErrorMessage	= ActionDateRequiredMessage
										else
										if (first CashLedgerPayablesPaymentRel.PaidDate entered)
											ErrorOccurred	= true
											ErrorMessage	= PaymentRecordAlreadyPaidMessage 
										else
											include UpdateCashLedgerPayablesPayment
									if (CashLedgerUpdateAction.Escheat)
										if (PostDate not entered)	
											PostDate		= current corporate date		
										if (!first CashLedgerPayablesPaymentRel.IsBankIssuedPaymentNumber)
											ErrorOccurred	= true
											ErrorMessage	= ActionOnlyValidForBankIssuedTransactionNumberMessage
										else	
										if (ActionDate		!entered)
											ErrorOccurred	= true
											ErrorMessage	= ActionDateRequiredMessage
										else
										if (first CashLedgerPayablesPaymentRel.StaleDateGLAccountsNotDefined)
											ErrorOccurred	= true
											ErrorMessage	= CannotEscheatNoAcountDefined
										else
										if (first CashLedgerPayablesPaymentRel.TransactionNumber not entered)	
											ErrorOccurred	= true
											ErrorMessage	= CannotEscheatBankIssuedTransactionNumberNotDefined	
										else
										if (!first CashLedgerPayablesPaymentRel.Status.PaymentCycleClosed
										and !first CashLedgerPayablesPaymentRel.Status.StaleDated)			
											ErrorOccurred	= true
											ErrorMessage	= CannotEscheatPaymentMessage 
										else
										if (CashLedgerTransactionByIdentifierRel	exists
										and !first CashLedgerTransactionByIdentifierRel.Status.Open
										and !first CashLedgerTransactionByIdentifierRel.Status.StaleDated)	
											ErrorOccurred	= true
											ErrorMessage	= CannotEscheatInvalidStatusTransactionMessage	
										else
										if (CBCompanySystemClosingControlRel.Control	
										and !PostDate within CBCompanySystemClosingControlRel.ValidEntryDate)
											ErrorOccurred	= true
											ErrorMessage	= PostingDateNotValidMessage	
										else
											include UpdateCashLedgerPayablesPayment
									if (CashLedgerUpdateAction.StaleDate)	
										if (PostDate not entered)	
											PostDate		= current corporate date		
										if (!first CashLedgerPayablesPaymentRel.IsBankIssuedPaymentNumber)
											ErrorOccurred	= true
											ErrorMessage	= ActionOnlyValidForBankIssuedTransactionNumberMessage
										else	
										if (ActionDate		!entered)
											ErrorOccurred	= true
											ErrorMessage	= ActionDateRequiredMessage
										else
										if (first CashLedgerPayablesPaymentRel.StaleDateGLAccountsNotDefined)
											ErrorOccurred	= true
											ErrorMessage	= CannotStaleDateNoAcountDefined
										else
										if (first CashLedgerPayablesPaymentRel.TransactionNumber not entered)	
											ErrorOccurred	= true
											ErrorMessage	= CannotStaleDateBankIssuedTransactionNumberNotDefined	
										else
										if (!first CashLedgerPayablesPaymentRel.Status.PaymentCycleClosed)
											ErrorOccurred	= true
											ErrorMessage	= CannotStaleDatePaymentMessage 
										else
										if (CashLedgerTransactionByIdentifierRel	exists
										and !first CashLedgerTransactionByIdentifierRel.Status.Open)
											ErrorOccurred	= true
											ErrorMessage	= CannotUpdateLedgerTransactionMessage
										else
										if (CBCompanySystemClosingControlRel.Control	
										and !PostDate within CBCompanySystemClosingControlRel.ValidEntryDate)
											ErrorOccurred	= true
											ErrorMessage	= PostingDateNotValidMessage	
										else
											include UpdateCashLedgerPayablesPayment		
							else
							if (CashLedgerElectronicFundsTransferTransactionRel	exists)
								if (!first CashLedgerElectronicFundsTransferTransactionRel.Status.ElectronicFundsCreated)
									ErrorOccurred	= true
									ErrorMessage	= CannotUpdateElectronicFundsTransferMessage 
								else
									if (CashLedgerUpdateAction.Accepted)
										if (ConfirmationNumber !entered)
											ErrorOccurred	= true
											ErrorMessage	= ConfirmationNumberRequiredMessage 
										else
											if (first CashLedgerElectronicFundsTransferTransactionRel.ConfirmationNumber entered)
												ErrorOccurred	= true
												ErrorMessage	= RecordAlreadyConfirmedMessage
											else
												include UpdateCashLedgerElectronicFundsTransferTransaction
									else			
										if (CashLedgerUpdateAction.Rejected)
											include UpdateCashLedgerElectronicFundsTransferTransaction
										else
											ErrorOccurred	= true
											ErrorMessage	= InvalidActionForEftMessage 		
							else
							if (WireTransferOutputDetailRel	exists)
								if (first WireTransferOutputDetailRel.Status.Processed
								or  first WireTransferOutputDetailRel.Status.Rejected)
									ErrorOccurred	= true
									ErrorMessage 	= CannotUpdateWireTransferMessage 
								else
									if (CashLedgerUpdateAction.Accepted)
										if (ConfirmationNumber !entered)
											ErrorOccurred	= true
											ErrorMessage 	= ConfirmationNumberRequiredMessage 
										else
											if (first WireTransferOutputDetailRel.ConfirmationNumber entered)
												ErrorOccurred	= true
												ErrorMessage 	= RecordAlreadyConfirmedMessage
											else
												include UpdateWireTransferOutputDetail
									else			
										if (CashLedgerUpdateAction.Rejected)
											include UpdateWireTransferOutputDetail
										else
											ErrorOccurred	= true
											ErrorMessage 	= InvalidActionForWireTransfer 		
							else
								if (!ErrorOccurred)				
									ErrorOccurred	= true
									ErrorMessage 	= RecordNotFoundMessage
		
		Create is a Create Action
		
		Update is an Update Action
		
		Delete is a Delete Action
