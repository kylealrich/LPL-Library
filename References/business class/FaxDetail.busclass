FaxDetail is a BusinessClass
	owned by fax
	prefix is fax

	Ontology		
		symbolic key is FaxDetail

	Patterns
		implements CRUD
		disable AuditIndex		
		
	Persistent Fields
		Company					is a GeneralLedgerCompany
		PurchaseOrder
        PurchaseOrderRevision
        POCommentSequenceNumber	is a SequenceNumber
		TransmissionID			is Alpha up to 100
		DOCID					is Alpha up to 100		
			default label is "FaxI\D"
		Name					is Alpha up to 50
			default label is "Recipient"	
		Fax 					is Alpha up to 25
			default label is "FaxNumber"
		FaxResponseMessage 		is Alpha up to 100	
		Classification 			is Alpha up to 100	
		Outcome 				is Alpha up to 100
			default label is "FaxDeliveryStatus"
		LastDate 				is Alpha up to 10	
		LastTime 				is Alpha up to 8	
		NextDate 				is Alpha up to 10		
		NextTime 				is Alpha up to 8
		PagesScheduled 			is Alpha up to 100
		PagesSent 				is Alpha up to 100
			default label is "Number_ofPagesFaxed"	
		BaudRate 				is Alpha up to 8	
		Duration 				is Alpha up to 10
		Retries 				is Alpha up to 3		
		RemoteCSID 				is Alpha up to 100
		StatusCode 				is Alpha up to 1
		StatusDescription 		is Alpha up to 7
		ErrorLevel				is Alpha up to 6
		ErrorMessage 			is Text

    Derived Fields
            
        DateTime					is a StringField
        	type is Alpha size 20
        	default label is "Time_andDate"
        	LastTime 
        	":"
        	LastDate
        	
        DerivedFaxNumber			is a StringField
        	type is Alpha size 20
        	LocalFaxPrefix
        	LocalSubscriberNumber
        	
        OutcomeMessage 				is a DerivedField
        	type is Alpha up to 150
        	default label is "Outcome"
        	if (Outcome entered)
        		return Outcome
        	else
        	if (ErrorMessage entered)
        		return "Error: " + ErrorMessage
        	else	
        	if (StaleTransmission)
        		return FaxResponseMessage	
        	else
        	if (Classification entered)
        		return Classification + ": " + Outcome
        	else
        		return blank
        		
        FaxPoHeader					is a DerivedField
        	type is Alpha up to 25
        	if (HasErrorMessage)
        		return "Error"
        	else
        	if (Classification entered)
        		return Classification
        	else
        	if ConversionStatus
        		return "In conversion process"
        	else
        	if PendingStatus
        		return "Waiting to be sent"
        	else
        	if InvalidStatus
        		return "Unable to retrieve status"
        	else
        	if SuccessfulTransmission
        		return "Fax Successfully Sent"
        		
        DerivedUserNotification		is a MessageField
        	restricted
        	"Fax:<TransmissionID>_\Company:<Company>_\PurchaseOrder:<PurchaseOrder>_\DOCID:<DOCID>_\Name:<Name>_\FaxNumber:<Fax>_\Status:<Outcome>_\Date:<LastDate>_\Time:<LastTime>_\Level:<ErrorLevel>_\StatusMessage:<ErrorMessage>"
        
        ConsensusSendFaxJSON is a DerivedField
   			type is JSONObject
   			restricted
   			ConsensusSendFaxJSON = template.ConsensusSendFaxJSON_ST document for this instance
   			
   		DerivedMIMEType is a DerivedField
   			type is Alpha up to 25
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/doc")
				return "DOC"
			else
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/docx")
			   	return "DOCX"
			else
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/xls")
			   	return "XLS"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/xlsx")
			   	return "XLSX"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/ppt")
			   	return "PPT"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/pptx")
			   	return "PPTX"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/html")
			   	return "HTML"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/htm")
			   	return "HTM"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/tif")
			   	return "TIF"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/tiff")
			   	return "TIFF"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/jpg")
			   	return "JPG"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/jpeg")
			   	return "JPEG"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/txt")
			   	return "TXT"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/pdf")
			   	return "PDF"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/rtf")
			   	return "RTF"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/snp")
			   	return "SNP"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/png")
			   	return "PNG"
			else   
			if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/gif")
			   	return "GIF"
			   	
		GenerateBearerToken is a DerivedField 
			type is Boolean
			restricted
			if (((current timestamp - FaxConfigurationInUseRel.BearerTokenTimestamp) > FaxConfigurationInUseRel.BearerTokenExpiresIn)
				or (FaxConfigurationInUseRel.BearerToken = ""))
				return true
				
		DerivedRecipientName is a DerivedField
			type is Alpha up to 120
			if (PurchaseOrderRel.PurchaseFromLocationRel.ContactName entered)
				return PurchaseOrderRel.PurchaseFromLocationRel.ContactName				
			else			
			if (PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.ContactName entered)
				return PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.ContactName
			else
			if (PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.VendorName entered)
				return PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.VendorName
			else 
			if (PurchaseOrderRel.PurchasingVendorRel.ContactName entered)
				return PurchaseOrderRel.PurchasingVendorRel.ContactName
			else
			if (PurchaseOrderRel.PurchasingVendorRel.VendorRel.ContactName entered)
				return PurchaseOrderRel.PurchasingVendorRel.VendorRel.ContactName
			else
			if (PurchaseOrderRel.PurchasingVendorRel.VendorRel.VendorName entered)
				return PurchaseOrderRel.PurchasingVendorRel.VendorRel.VendorName
			else
				return "None"			
        		
    Local Fields
    	LocalRecipientName					is a VendorName 
    		holds pii
    	LocalDispositionRecipient			is Alpha up to 101	
		LocalDispositionEmailAddress		is an EmailAddress 
			holds pii
		LocalTransmissionID 				is Alpha up to 15   	
    	LocalFaxPrefix 						is Alpha up to 5
    	LocalSubscriberNumber 				is Alpha up to 15
    	LocalFaxNumber						is Alpha up to 25
    	LocalDate 							is Date
		MyHTTPInfo 							is a HTTPInfo
		JSONRequest							is JSONObject
		JSONResponse						is JSONObject
		BearerToken							is Text
		ExpiresIn							is Numeric 20
		LocalMIMEType						is Alpha up to 25
		LocalDocumentFile					is an XMLBinaryDocument
		    	       								 		
	Relations
	
		IssuedPurchaseOrderRel
			one-to-one relation to PurchaseOrderComment
			Field Mapping uses part of key
				related.Company  					= Company
				related.PurchaseOrder 				= PurchaseOrder 	
				related.SequenceNumber 				= POCommentSequenceNumber
													
		FaxConfigurationInUseRel
        	one-to-many relation to FaxConfiguration
        	Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= Company.FinanceEnterpriseGroup
        	Instance Selection
        		where (related.Default)
        		        		        			                
        PurchaseOrderRel
            one-to-one relation to PurchaseOrder
            Field Mapping uses ByCompanyPurchaseOrderRevision
                related.Company						= PurchaseOrder.Company
                related.PurchaseOrder				= PurchaseOrder
                related.PurchaseOrderRevision 		= PurchaseOrder.PurchaseOrderRevision
                         			
	Sets			
		ByFaxPORev
            indexed
			Sort Order
				Company
				PurchaseOrder
                PurchaseOrderRevision
                
	Field Rules
		LocalFaxPrefix
			default to PurchaseOrderRel.FaxNumber.InternationalPrefix
			
		LocalSubscriberNumber
			default to PurchaseOrderRel.FaxNumber.SubscriberNumber
			
		LocalTransmissionID
			default to TransmissionID
			
		LocalFaxNumber
			default to DerivedFaxNumber
			
		LocalRecipientName
			default to DerivedRecipientName
			                               
    Conditions
    			
    	FromPurchaseOrder
    		restricted
    		when (PurchaseOrder entered)
    		
    	CompletedStatus
    		restricted
    		when ((FaxResponseMessage = "Your transmission has completed."
    				and UseEFax)
    			or ((Outcome = "COMPLETE" or Outcome = "ERROR")
    				and UseConsensus))	
    		
    	ConversionStatus
    		restricted
    		when (FaxResponseMessage = "Your transmission is in the conversion process.")
    		
    	PendingStatus
    		restricted
    		when (FaxResponseMessage = "Your transmission is waiting to be sent.")
    		
    	InvalidStatus
    		restricted
    		when (FaxResponseMessage = "Unable to retrieve statistics for transmission.")	
    		
		StaleTransmission
			restricted


			when (((current corporate date - LastDate) > 31) and InvalidStatus)
    		
		InvalidTransmission
			restricted
			when (StaleTransmission
			or	  	HasErrorMessage
			or		StatusCode			= "2")
			
    	NoAnswer
    		restricted
    		when (Classification	= "\"No answer\"")
    		
    	Busy
    		restricted
    		when (Classification	= "\"Busy\"")
    		
    	CallPlacementError
    		restricted
    		when (Classification	= "\"Call placement error\"")
    	
    	NoDialTone
    		restricted
    		when (Classification	= "\"No dial tone\"")
    	    	
    	SystemError
    		restricted
    		when (Classification	= "\"System error\"")
    		
    	FaxTransmissionFailed
    		restricted
    		when (Classification	= "\"Fax transmission failed\"")
    	    	
    	UserDefined
    		restricted
    		when (Classification	= "\"User defined\"")

    	RemoteHangUp
    		restricted
    		when (Classification	= "\"Remote hang-up\"")
    		    		    		    		
    	SuccessfulTransmission	
			restricted
			when  	(Classification	= "\"Success\""
			or		Outcome = "\"Success\""
			or		ErrorLevel = "SFAX")
			    		    		    		
    	UnspecifiedFailure
    		restricted
    		when 	(Classification	=	"\"Unspecified failure\"")

    	HasErrorMessage
    		restricted
    		when ((ErrorMessage entered
    		and		UseEFax)
    		or	(!SuccessfulTransmission
    		and 	ErrorLevel entered
    		and		UseConsensus))
    		
    	PendingTransmission
    		restricted
    		when   	(Outcome not entered
    		and     !InvalidTransmission)
    			    		
    	CheckFaxStatus
    		restricted
    		when  	((!SuccessfulTransmission
    		and	   	!HasErrorMessage
    		and		!CompletedStatus
    		and		UseEFax) 
    		or 		(DOCID entered
    		and		TransmissionID entered
    		and		!CompletedStatus
    		and		UseConsensus))
    		
    	ResendFax
    		restricted
			when 	(!SuccessfulTransmission
			and		IssueMethodFax
			and		POStatusOpen)
			
		UnsuccessfulTransmission
    		restricted	
    		when 	(!SuccessfulTransmission
    		and      !UnspecifiedFailure
    		and      !FaxTransmissionFailed
    		and   	 Classification	entered)
    		
    	SecurityGroupAllowsAccess
    		when((Company not entered)
    		or  (Company entered and Company.SecurityGroupAllowsAccess))
    		
    	IssueMethodFax
    		when (PurchaseOrder.IssueMethod = "F")
    		
    	POStatusOpen
    		when (!PurchaseOrder.Canceled or PurchaseOrder.Closed.No)
    		
    	MostRecentRevision
    		when (PurchaseOrderRevision >= PurchaseOrder.PurchaseOrderRevision)
    		
    	UseEFax
    		when (FaxConfigurationInUseRel.Configuration.Efax)

    	UseConsensus
    		when (FaxConfigurationInUseRel.Configuration.Consensus) 
    			

    	
    	NotifyError
    		restricted
    		when FaxConfigurationInUseRel.NotificationLevel.Error
    	
    	NotifySuccess
    		restricted
    		when FaxConfigurationInUseRel.NotificationLevel.Success
    	
    	NotifyBoth
    		restricted
    		when FaxConfigurationInUseRel.NotificationLevel.Both
    		
    	NotificationsOn
    		restricted
    		when (NotifyError or NotifySuccess or NotifyBoth)
    		
    	EmailNotification
    		restricted
    		when FaxConfigurationInUseRel.NotificationType.Email
    	
    	UserNotification
    		restricted
    		when FaxConfigurationInUseRel.NotificationType.User
    	
    	BothNotification
    		restricted
    		when FaxConfigurationInUseRel.NotificationType.Both
    		
    	WebserviceCallError
    		restricted
    		when MyHTTPInfo.Failed
    		    		
	Rule Blocks
	
		ConsensusSendFaxRuleBlock
						
			if (GenerateBearerToken)
				invoke CalloutWithOAuth2Token FaxConfigurationInUseRel
					resume on error

			if (PurchaseOrder.Company.UseIDM)
				if (PurchaseOrder.RetrieveIDMDocument and PurchaseOrder.IDMItem.RetrievedAttachment entered)
					LocalMIMEType				= PurchaseOrder.DerivedIDMDocumentMimeType
					LocalDocumentFile			= PurchaseOrder.IDMItem.RetrievedAttachment.File
			else
				LocalMIMEType				= DerivedMIMEType
				LocalDocumentFile			= IssuedPurchaseOrderRel.Attachment.File

			invoke ConsensusSendFax ConsensusCallout
				invoked.CONSENSUSCALLOUTWSIHTTPHEADERAuthorization	= "Bearer " + FaxConfigurationInUseRel.BearerToken
				invoked.CONSENSUSCALLOUTWSIHTTPHEADERuserid 		= FaxConfigurationInUseRel.UserName
				JSONRequest											= ConsensusSendFaxJSON
				MyHTTPInfo											= result.HTTPResult
				JSONResponse										= result.JSONResponse
			
			if (WebserviceCallError)
				include CaptureErrorMessage
				if (NotifyError or NotifyBoth)
					invoke SendErrorNotification
						resume on error
			else
				DOCID 		= JSONResponse select "$..fax_id"
				Fax			= JSONResponse select "$..destination_fax_number"
				
			
		ConsensusGetFaxMetadata
				
			if (GenerateBearerToken)
				invoke CalloutWithOAuth2Token FaxConfigurationInUseRel
					resume on error
			
			invoke ConsensusGetFaxMetadata ConsensusCallout
				invoked.CONSENSUSCALLOUTWSIHTTPHEADERAuthorization	= "Bearer " + FaxConfigurationInUseRel.BearerToken
				invoked.CONSENSUSCALLOUTWSIHTTPHEADERuserid 		= FaxConfigurationInUseRel.UserName
				invoked.FaxID										= DOCID
				MyHTTPInfo											= result.HTTPResult
				JSONResponse										= result.JSONResponse
			
			if (WebserviceCallError)
				include CaptureErrorMessage
				if (!SuccessfulTransmission and (NotifyError or NotifyBoth))
					invoke SendErrorNotification
						resume on error
				
			else
				Duration			= JSONResponse select "$.duration"
				PagesSent			= JSONResponse select "$.pages"
				FaxResponseMessage 	= JSONResponse select "$.fax_status"
				Name				= JSONResponse select "$.routing_data.to_name"
				Outcome				= JSONResponse select "$.transmission_data.transmission_status"
				Retries				= JSONResponse select "$.transmission_data.billable_retries"
				LastDate			= JSONResponse select "$.completed_timestamp"
				ErrorLevel			= JSONResponse select "$.transmission_data.error_code"
				ErrorMessage		= JSONResponse select "$.transmission_data.error_message"
				
			if (CompletedStatus and NotificationsOn)
				if (!SuccessfulTransmission and (NotifyError or NotifyBoth))
					invoke SendErrorNotification
						resume on error
				if (SuccessfulTransmission and (NotifySuccess or NotifyBoth))
					invoke SendSuccessNotification
						resume on error
				
		CaptureErrorMessage
		
			JSONResponse			= MyHTTPInfo.ResponseBody
			StatusDescription		= JSONResponse select "Error"
			ErrorLevel				= JSONResponse select "$.errors..error_code"
			ErrorMessage			= JSONResponse select "$.errors"
			DOCID					= JSONResponse select "$.transaction_id"
	
		FaxDetailRuleBlock
		
			invoke Create OutboundRequest
            	invoked.OutboundRequest									= 	"1"
	                                    
			invoke Create OutboundRequestAccessControl			
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestAccessControl					= 	"1"
				invoked.UserName										= 	FaxConfigurationInUseRel.UserName					
				invoked.Password										=	FaxConfigurationInUseRel.FaxPassword

			invoke Create OutboundRequestTransmission
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				
			invoke Create OutboundRequestTransmissionTransmissionControl
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionTransmissionControl	= 	"1"
				if (LocalTransmissionID not entered)
					LocalTransmissionID										= 	PurchaseOrderRel.DisplayPurchaseOrderAndRevision	
				invoked.TransmissionID									= 	LocalTransmissionID					
				invoked.Resolution										= 	FaxConfigurationInUseRel.Resolution
				invoked.NoDuplicates									= 	FaxConfigurationInUseRel.NoDuplicates					
				invoked.Priority										= 	FaxConfigurationInUseRel.Priority
				invoked.SelfBusy										= 	FaxConfigurationInUseRel.SelfBusy			
					
			invoke Create OutboundRequestTransmissionDispositionControl
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionDispositionControl	= 	"1"
				invoked.DispositionLevel 								= 	FaxConfigurationInUseRel.Level	
				invoked.DispositionMethod 								= 	FaxConfigurationInUseRel.Method
				invoked.DispositionLanguage 							= 	FaxConfigurationInUseRel.Language
				
			invoke Create OutboundRequestTransmissionDispositionControlDispositionEmails
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionDispositionControl	= 	"1"
				invoked.OutboundRequestTransmissionDispositionControlDispositionEmails	= "1"
				
			invoke Create OutboundRequestTransmissionDispositionControlDispositionEmailsDispositionEmail
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionDispositionControl	= 	"1"
				invoked.OutboundRequestTransmissionDispositionControlDispositionEmails	= 	"1"	
				invoked.OutboundRequestTransmissionDispositionControlDispositionEmailsDispositionEmail	= 	"1"
				
	
				if (PurchaseOrderRel.Buyer.Name entered)
					LocalDispositionRecipient							=	PurchaseOrderRel.Buyer.Name
				else
				if (actor.agent(Employee).Name.PreferredFirstAndLastName entered)
					LocalDispositionRecipient							=	actor.agent(Employee).Name.PreferredFirstAndLastName
				else
					LocalDispositionRecipient							=	"None"	
						
				invoked.DispositionRecipient							=	LocalDispositionRecipient
					
				if (PurchaseOrderRel.Buyer.EmailAddress 					entered)
					LocalDispositionEmailAddress						=	PurchaseOrderRel.Buyer.EmailAddress
				else
				if (actor.agent(Employee).EmployeeWorkEmailAddress entered)
					LocalDispositionEmailAddress						=	actor.agent(Employee).EmployeeWorkEmailAddress
				else
					LocalDispositionEmailAddress						=	"None"
					
				invoked.DispositionAddress								=	LocalDispositionEmailAddress
											
			invoke Create OutboundRequestTransmissionRecipients
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionRecipients			= 	"1"
									
			invoke Create OutboundRequestTransmissionRecipientsRecipient
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionRecipients			= 	"1"
				invoked.OutboundRequestTransmissionRecipientsRecipient	= 	"1"	
				if (PurchaseOrderRel.PurchaseFromLocationRel.ContactName 	entered)
					LocalRecipientName									= 	PurchaseOrderRel.PurchaseFromLocationRel.ContactName				
				else			
				if (PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.ContactName entered)
					LocalRecipientName 									= 	PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.ContactName
				else
				if (PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.VendorName entered)
					LocalRecipientName									= 	PurchaseOrderRel.PurchaseFromLocationRel.VendorLocationRel.VendorName
				else 
				if (PurchaseOrderRel.PurchasingVendorRel.ContactName 		entered)
					LocalRecipientName									= 	PurchaseOrderRel.PurchasingVendorRel.ContactName
				else
				if (PurchaseOrderRel.PurchasingVendorRel.VendorRel.ContactName entered)
					LocalRecipientName 									= 	PurchaseOrderRel.PurchasingVendorRel.VendorRel.ContactName
				else
				if (PurchaseOrderRel.PurchasingVendorRel.VendorRel.VendorName entered)
					LocalRecipientName									= 	PurchaseOrderRel.PurchasingVendorRel.VendorRel.VendorName
				else
					LocalRecipientName									=	"None"
				invoked.RecipientName									=   LocalRecipientName
				LocalFaxPrefix											=   PurchaseOrderRel.FaxNumber.InternationalPrefix
				LocalSubscriberNumber									= 	PurchaseOrderRel.FaxNumber.SubscriberNumber
				invoked.RecipientCompany 								= 	Company									
				invoked.RecipientFax 									=	DerivedFaxNumber									
					 					
			invoke Create OutboundRequestTransmissionFiles
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionFiles				= 	"1"				
	
			invoke Create OutboundRequestTransmissionFilesFile
				invoked.OutboundRequest									= 	"1"
				invoked.OutboundRequestTransmission						= 	"1"
				invoked.OutboundRequestTransmissionFiles				= 	"1"	
				invoked.OutboundRequestTransmissionFilesFile			= 	"1"
				
				if (FromPurchaseOrder)
						
					if(PurchaseOrder.Company.UseIDM)

						if (PurchaseOrder.RetrieveIDMDocument and PurchaseOrder.IDMItem.RetrievedAttachment entered)
							invoked.FileContents = PurchaseOrder.IDMItem.RetrievedAttachment.File
							invoked.FileType = PurchaseOrder.DerivedIDMDocumentMimeType

					else
						invoked.FileContents 								= 	IssuedPurchaseOrderRel.Attachment.File
	
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/doc")
							invoked.FileType 								= 	"doc"
						else
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/docx")
						   	invoked.FileType 								= 	"docx"
						else
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/xls")
						   	invoked.FileType 								= 	"xls"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/xlsx")
						   	invoked.FileType 								= 	"xlsx"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/ppt")
						   	invoked.FileType 								= 	"ppt"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/pptx")
						   	invoked.FileType 								= 	"pptx"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/html")
						   	invoked.FileType 								= 	"html"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/htm")
						   	invoked.FileType 								= 	"htm"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/tif")
						   	invoked.FileType 								= 	"tif"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/tiff")
						   	invoked.FileType 								= 	"tiff"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/jpg")
						   	invoked.FileType 								= 	"jpg"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/jpeg")
						   	invoked.FileType 								= 	"jpeg"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/txt")
						   	invoked.FileType 								= 	"txt"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/pdf")
						   	invoked.FileType 								= 	"pdf"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/rtf")
						   	invoked.FileType 								= 	"rtf"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/snp")
						   	invoked.FileType 								= 	"snp"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/png")
						   	invoked.FileType 								= 	"png"
						else   
						if (IssuedPurchaseOrderRel.Attachment.MimeType		= 	"application/gif")
						   	invoked.FileType 								= 	"gif"						   	
					
			invoke SendFax EFax		
				invoked.Id												= 	FaxConfigurationInUseRel.AccountID	
				invoked.Respond											= 	"XML"						
				invoked.Xml												= 	"1"
				DOCID 													= result.OutboundResponse.Transmission.TransmissionControl.DOCID
				StatusCode												= result.OutboundResponse.Transmission.Response.StatusCode
				StatusDescription 										= result.OutboundResponse.Transmission.Response.StatusDescription
				ErrorLevel		 										= result.OutboundResponse.Transmission.Response.ErrorLevel
				ErrorMessage 											= result.OutboundResponse.Transmission.Response.ErrorMessage
				FaxResponseMessage										= ""
				Classification											= ""
				Outcome													= ""
				LastDate												= ""
				LastTime												= ""
				NextDate												= ""
				NextTime												= ""
				PagesScheduled											= ""
				PagesSent												= ""
				BaudRate												= ""
				Duration												= ""
				RemoteCSID												= ""
			if (ErrorMessage entered)
				Outcome		= ErrorMessage
				if (NotifyError or NotifyBoth)
					invoke SendErrorNotification
						resume on error
	Actions
		Create is a Create Action
			restricted
							
		Update is an Update Action
			restricted

		Delete is a Delete Action
		 
		SendFax is an Instance Action
			restricted				
			Action Rules
				if (UseConsensus)
					include ConsensusSendFaxRuleBlock
				else
					include FaxDetailRuleBlock
				
		ResendFax is an Instance Action
			Action Rules
				if (UseConsensus)
					initialize Duration
					initialize PagesSent
					initialize FaxResponseMessage
					initialize Name
					initialize Outcome
					initialize Retries
					initialize LastDate
					initialize ErrorLevel
					initialize ErrorMessage
					initialize StatusDescription
					initialize DOCID
					initialize Fax
					LocalRecipientName = DerivedRecipientName
					LocalFaxNumber = PurchaseOrderRel.FaxNumber.InternationalPrefix + PurchaseOrderRel.FaxNumber.SubscriberNumber
					include ConsensusSendFaxRuleBlock
				else
					include FaxDetailRuleBlock
										
		CheckFaxStatus is an Instance Action						
        	Action Rules
        		if (UseConsensus)
        			include ConsensusGetFaxMetadata
        		else
	        		invoke Create OutboundStatus
	        			invoked.OutboundStatus 									= "1"
					invoke Create OutboundStatusAccessControl
						invoked.OutboundStatus									= "1"
						invoked.OutboundStatusAccessControl						= "1"
						invoked.UserName										= FaxConfigurationInUseRel.UserName					
						invoked.Password										= FaxConfigurationInUseRel.FaxPassword
						
					invoke Create OutboundStatusTransmission
						invoked.OutboundStatus									= "1"
						invoked.OutboundStatusTransmission						= "1"
						
					invoke Create OutboundStatusTransmissionTransmissionControl
						invoked.OutboundStatusTransmission 						= "1"
						invoked.OutboundStatusTransmissionTransmissionControl 	= "1"
						invoked.OutboundStatus									= "1"
						invoked.DOCID											= DOCID
				
					invoke FaxStatus EFax
						resume on error									
						invoked.Id												= FaxConfigurationInUseRel.AccountID	
						invoked.Respond											= "XML"						
						invoked.Xml												= "1"
						Name 													= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Name
						Fax 													= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Fax
						FaxResponseMessage 										= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Status.Message
						Classification 											= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Status.Classification
						Outcome 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Status.Outcome
						LastDate 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.LastAttempt.LastDate
						LastTime 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.LastAttempt.LastTime
						NextDate 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.NextAttempt.NextDate
						NextTime 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.NextAttempt.NextTime	
						PagesScheduled 											= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Pages.Scheduled
						PagesSent 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Pages.Sent
						BaudRate 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.BaudRate
						Duration 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Duration
						Retries 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.Retries
						RemoteCSID 												= result.OutboundStatusResponse.Transmission.Recipients.Recipient.RemoteCSID
						MyHTTPInfo												= result.MyHTTPInfo			
						if (MyHTTPInfo.Failed)
							Outcome	= MyHTTPInfo.ResponseBody	
					if (ErrorMessage entered)
						Outcome		= ErrorMessage
					if (CompletedStatus and NotificationsOn)
						if (!SuccessfulTransmission and (NotifyError or NotifyBoth))
							invoke SendErrorNotification
								resume on error
						if (SuccessfulTransmission and (NotifySuccess or NotifyBoth))
							invoke SendSuccessNotification
								resume on error
				
		CheckAllFaxStatus is a Set Action
			Parameters
				PrmCompany is a Company
					default label is "Company"
				CheckAllFaxStatusByProcurementGroup is Boolean
										
			Sort Order
				Company
				PurchaseOrder
				FaxDetail
										
			Parameter Rules
				PrmCompany
				CheckAllFaxStatusByProcurementGroup
					initial value is false
					default to false
															
			Instance Selection
				where 	(DOCID				entered
				and		TransmissionID		entered
				and		CheckFaxStatus
				and		((current date - create date) <= 30)
				)
				
			Action Rules
				Instance Rules
					if (PrmCompany entered
					and PrmCompany		= 	Company)				
						invoke 	CheckFaxStatus
					else
						if (CheckAllFaxStatusByProcurementGroup)
							invoke 	CheckFaxStatus
					
		ResendErroredFaxes is a Set Action

			Parameters
				PrmCompany is a Company
					default label is "Company"
				ResendErroredFaxesByProcurementGroup is Boolean
										
			Sort Order
				Company
				PurchaseOrder
				FaxDetail
										
			Parameter Rules
				PrmCompany
				ResendErroredFaxesByProcurementGroup
					initial value is false
					default to false
			Instance Selection
				where 	(MostRecentRevision
				and		((PurchaseOrder 	entered
				and 	DOCID			not entered)
				or     	ResendFax))
				
			Action Rules						
				Instance Rules
					if (PrmCompany entered
					and PrmCompany		= 	Company)				
						invoke 	ResendFax
					else
						if (ResendErroredFaxesByProcurementGroup)
							invoke 	ResendFax
							
		SendErrorNotification is an Instance Action
			restricted
			Local Fields
				LocalActor		is an Actor
			Action Rules
				if (EmailNotification or BothNotification)
					send email
						to FaxConfigurationInUseRel.ToNotificationEmail
						from FaxConfigurationInUseRel.FromNotificationEmail
						subject "Fax:<TransmissionID>Failed"
						Contents
							"Fax:<TransmissionID>HasFailedWithStatus:<Outcome>"
							"Company:<Company>"
							"PurchaseOrder:<PurchaseOrder>"
							"PurchaseOrderRevision:<PurchaseOrderRevision>"
							"DOCID:<DOCID>"
							"Name:<Name>"
							"FaxNumber:<Fax>"
							"Status:<Classification>-<Outcome>"
							"Date:<LastDate>"
							"Time:<LastTime>"
							"ErrorLevel:<ErrorLevel>"
							"ErrorMessage":"<ErrorMessage>"
							
				if (UserNotification or BothNotification)
					LocalActor = actor
					send notification
						to LocalActor
						description is "Fax:<TransmissionID>FailedToSend"
						priority is high
						detail is "<DerivedUserNotification>"
				
		SendSuccessNotification is an Instance Action
			restricted
			Local Fields
				LocalActor		is an Actor
			Action Rules
				if (EmailNotification or BothNotification)
					send email
						to FaxConfigurationInUseRel.ToNotificationEmail
						from FaxConfigurationInUseRel.FromNotificationEmail
						subject "Fax:<TransmissionID>SuccessfullySent"
						Contents
							"Fax:<TransmissionID>SuccessfullySentWithStatus:<Outcome>"
							"Company:<Company>"
							"PurchaseOrder:<PurchaseOrder>"
							"PurchaseOrderRevision:<PurchaseOrderRevision>"
							"DOCID:<DOCID>"
							"Name:<Name>"
							"FaxNumber:<Fax>"
							"FullStatus:<Classification>-<Outcome>"
							"Date:<LastDate>"
							"Time:<LastTime>"
							"Level":"<ErrorLevel>"
							"Message":"<ErrorMessage>"
				if (UserNotification or BothNotification)
					LocalActor = actor
					send notification
						to LocalActor
						description is "Fax:<TransmissionID>SuccessfullySent"
						priority is low
						detail is "<DerivedUserNotification>"
											
