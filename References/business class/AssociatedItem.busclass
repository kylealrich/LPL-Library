AssociatedItem is a BusinessClass
    owned by ic
    prefix is ITS
    classic name is ITEMSUB

    Ontology
        symbolic key is AssociatedItem
            classic set name is ITSSET1
            classic name for AssociatedItem.AssociatedItemSubType is SUBTYPE
            classic name for AssociatedItem.RelatedItem is SUB-ITEM

    Patterns
        implements StaticJava
        disable AuditIndex

    Persistent Fields

        EffectiveDate  is Date
            classic name is EFFECT-DT
        ExpirationDate is Date
            classic name is EXPIRE-DT
        Priority		is Numeric 2
        Contract
        ContractLine

	Local Fields

		LocalContractParticipant is a ContractParticipant

    Derived Fields
    
    	ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforAssociatedItem"
			
    	ContextMessageText is a MessageField
			restricted
			"AssociatedItem<AssociatedItem>OfItem<Item>"
			
        ItemCodeUsed is a ConditionalField
            type is Numeric size 1
            restricted
            if (HasItem)
                1
            else
                blank

		DerivedAvailableQuantity is a DerivedField
			type is like Quantity
			default label is "AvailableQuantity"
			if (RelatedItemLocationRel.AllowIssue
			and IsItemMasterSubstitute)
				return DerivedItemAvailableQuantity
			else
				return 0

		RSSLPLItemAvailableQuantity is a DerivedField
			type is like Quantity
				precision is AssociatedItem.RelatedItem.NumberOfDecimalsQuantity
			return RSSLPLItemLocationRel.AvailableQuantity

		RSSLPLAvailableQuantityWithUOM is a LabelField
			"<RSSLPLItemAvailableQuantity>_<Item.StockUOM>"

		RSSLPLItemType	is a DerivedField
			type is like ItemType
			if (ContractLine entered)
				return KeywordShadowByContractLineRel.DefaultItemType
			else
				return KeywordShadowByItemRel.DefaultItemType

		RSSLPLItemDescription	is a DerivedField
			type is like Description
			if (ContractLine entered)
				return KeywordShadowByContractLineRel.ItemDescription
			else
				return KeywordShadowByItemRel.ItemDescription

		RSSLPLNumberOfDecimalsCost is a ConditionalField
			type is Numeric size 1
			if (ContractLine entered)
				KeywordShadowByContractLineRel.NumberOfDecimalsCost
			else
				KeywordShadowByItemRel.NumberOfDecimalsCost

		RSSLPLNumberOfDecimalsQuantity is a ConditionalField
			type is Numeric size 1
			if (ContractLine entered)
				KeywordShadowByContractLineRel.NumberOfDecimalsQuantity
			else
				KeywordShadowByItemRel.NumberOfDecimalsQuantity

		RSSLPLUnitCost is a ConditionalField
			type is like UnitCost
				precision is RSSLPLNumberOfDecimalsCost
			if (ContractLine entered)
				KeywordShadowByContractLineRel.DefaultUnitCost
			else
				KeywordShadowByItemRel.DefaultUnitCost

		RSSLPLCostCode is a ConditionalField
			type is like CostCode
			if (ContractLine entered)
				KeywordShadowByContractLineRel.CostCode
			else
				KeywordShadowByItemRel.CostCode

		RSSLPLCurrencyCode is a ConditionalField
			type is like Currency
			if (ContractLine entered)
				KeywordShadowByContractLineRel.DefaultCurrencyCode
			else
				KeywordShadowByItemRel.DefaultCurrencyCode

		RSSLPLCostUOM is a ConditionalField
			type is like UnitOfMeasure
			if (ContractLine entered)
				KeywordShadowByContractLineRel.DerivedCostUOM
			else
				KeywordShadowByItemRel.DerivedCostUOM

		RSSLPLUOMConversion is a ConditionalField
			type is MessageField
			if (ContractLine entered)
				KeywordShadowByContractLineRel.DefaultUOMConversion
			else
				KeywordShadowByItemRel.DefaultUOMConversion

		RSSLPLUnitCostWithCurrency is a ConditionalField
			type is MessageField
			if (ContractLine entered)
				KeywordShadowByContractLineRel.DerivedUnitCostWithCurrency
			else
				KeywordShadowByItemRel.DerivedUnitCostWithCurrency

		RSSLPLIsCostUpdateProhibited is a ConditionalField
			type is Boolean
			if (ContractLine entered)
				KeywordShadowByContractLineRel.IsCostUpdateProhibited
			else
				KeywordShadowByItemRel.IsCostUpdateProhibited

		DerivedAssociatedItemDescription is a DerivedField
			type is like Description
			return ItemRel.Item.Description

		DerivedItemAvailableQuantity is a DerivedField
			type is like Quantity
				precision is AssociatedItem.RelatedItem.NumberOfDecimalsQuantity
			return RelatedItemLocationRel.AvailableQuantity

		DerivedItemStockOnHandQuantity  is a DerivedField
			type is like Quantity
				precision is AssociatedItem.RelatedItem.NumberOfDecimalsQuantity
			return RelatedItemLocationRel.StockOnHandQuantity

		DerivedStockOnHandQuantity is a DerivedField
			type is like Quantity
			default label is "StockOnHandQuantity"
			if (IsItemMasterSubstitute)
				return DerivedItemStockOnHandQuantity
			else
				return 0
				
		DerivedValidContractParticipant is a DerivedField
			type is Boolean
			if  (Contract.ContractParticipantsExist
			and (RequisitionLineRel exists
			or  PurchaseOrderLineRel exists))
				for each Contract.ContractParticipant set
					if  (each.ContractParticipant.ParticipantLocation.Company entered
					and (each.ContractParticipant.ParticipantLocation.Company = RequisitionLineRel.FromCompanyLocationBin.FromCompany
					or 	each.ContractParticipant.ParticipantLocation.Company = PurchaseOrderLineRel.Company))
						
						if  (each.ContractParticipant.ParticipantLocation.RequestingLocation not entered
						and (each.ContractParticipant.ParticipantLocation.Location not entered 
						or  each.ContractParticipant.ParticipantLocation.Location = RequisitionLineRel.FromCompanyLocationBin.FromLocation
						or  each.ContractParticipant.ParticipantLocation.Location = PurchaseOrderLineRel.ShipToLocation ))
							return true
						
						if  (each.ContractParticipant.ParticipantLocation.RequestingLocation entered
						and each.ContractParticipant.ParticipantLocation.RequestingLocation = RequisitionLineRel.RequestingLocation)						
							return true
					
					if  (each.ContractParticipant.ParticipantLocation.PricingGroup entered
					and (RequisitionLineRel.FromCompanyLocationBin.FromCompany.PricingGroup = each.ContractParticipant.ParticipantLocation.PricingGroup
					or  RequisitionLineRel.RequestingLocation.PricingGroup = each.ContractParticipant.ParticipantLocation.PricingGroup
					or  RequisitionLineRel.FromCompanyLocationBin.FromLocation.PricingGroup = each.ContractParticipant.ParticipantLocation.PricingGroup
					or  PurchaseOrderLineRel.InventoryCompanyRel.PricingGroup = each.ContractParticipant.ParticipantLocation.PricingGroup
					or  PurchaseOrderLineRel.ShipToLocation.PricingGroup = each.ContractParticipant.ParticipantLocation.PricingGroup))
						return true
					
			if (not Contract.ContractParticipantsExist)
				return true

		RSSLPLDerivedValidContractParticipant is a DerivedField
			type is Boolean
			if  (Contract.ContractParticipantsExist
			and  KeywordShadowByItemRel exists
			or   KeywordShadowByContractLineRel exists)
				for each Contract.ContractParticipant set
					LocalContractParticipant = each.ContractParticipant
					if  (LocalContractParticipant.ParticipantLocation.Company entered
					and (LocalContractParticipant.ParticipantLocation.Company = KeywordShadowByItemRel.DefaultFromCompany
					or   LocalContractParticipant.ParticipantLocation.Company = KeywordShadowByContractLineRel.DefaultFromCompany))
						
						if  (LocalContractParticipant.ParticipantLocation.RequestingLocation not entered
						and (LocalContractParticipant.ParticipantLocation.Location not entered 
						or  LocalContractParticipant.ParticipantLocation.Location = KeywordShadowByItemRel.DefaultFromLocation
						or  LocalContractParticipant.ParticipantLocation.Location = KeywordShadowByContractLineRel.DefaultFromLocation))
							return true
						
						if  (LocalContractParticipant.ParticipantLocation.RequestingLocation entered
						and (LocalContractParticipant.ParticipantLocation.RequestingLocation = KeywordShadowByItemRel.DerivedRequestingLocation
						or   LocalContractParticipant.ParticipantLocation.RequestingLocation = KeywordShadowByContractLineRel.DerivedRequestingLocation))						
							return true

					if  (LocalContractParticipant.ParticipantLocation.PricingGroup entered
					and (KeywordShadowByItemRel.FromCompanyRel.PricingGroup 			  = LocalContractParticipant.ParticipantLocation.PricingGroup
					or  KeywordShadowByContractLineRel.FromCompanyRel.PricingGroup  	  = LocalContractParticipant.ParticipantLocation.PricingGroup
					or  KeywordShadowByItemRel.RequestingLocationRel.PricingGroup 		  = LocalContractParticipant.ParticipantLocation.PricingGroup
					or  KeywordShadowByContractLineRel.RequestingLocationRel.PricingGroup = LocalContractParticipant.ParticipantLocation.PricingGroup
					or  KeywordShadowByItemRel.FromLocationRel.PricingGroup 		      = LocalContractParticipant.ParticipantLocation.PricingGroup
					or  KeywordShadowByContractLineRel.FromLocationRel.PricingGroup 	  = LocalContractParticipant.ParticipantLocation.PricingGroup))
						return true
						
			if (not Contract.ContractParticipantsExist)
				return true

    	DerivedSubstitute	is a MessageField
    		"Substitute"
    	
    	EffectiveDateMessage is a MessageField
			restricted
			"FieldIsLessThanContract'sEffectiveDate"

    	ExpirationDateMessage is a MessageField
			restricted
			"FieldIsGreaterThanContract'sExpirationDate"
 
    	ContractNotAvailableMessage is a MessageField
			restricted
			"ContractLineIsEitherOnHoldOrInError.ThisItemIsNotAvailableForSubstitution"

    	ContractLineClosedMessage is a MessageField
			restricted
			"ContractLineIsClosed.ThisItemIsNotValidForSubstitution"
			
	Context Fields

		ContextCompany						is a LikeInventoryCompany
		ContextInventoryLocation			is a LikeInventoryLocation
		ContextRequisition					is a Requisition
		ContextRequisitionLine			is a RequisitionLine
		ContextPurchaseOrder			is a PurchaseOrder
		ContextPurchaseOrderLine		is a PurchaseOrderLine

		ContextCustomerOrder       		is a CustomerOrder
		ContextCustomerOrderLine	 	is a CustomerOrderLine
		
    Conditions

        IsComplimentary
        	restricted
            when (AssociatedItem.AssociatedItemSubType.Companion)

        HasItem
            classic name is ITEM-ENTERED
            restricted
            when (Item entered)

        IsSubstitute
        	restricted
            when (AssociatedItem.AssociatedItemSubType.Substitute)

		IsFromRequisitionLineAndUnreleased
			restricted
			when (ContextRequisition.IsUnreleased
			and RequisitionLineRel exists)
		
		ForCustomerOrderLine
			restricted
			when (ContextCustomerOrderLine in context)
			
		IsInRequisitionLocation
			restricted
			when (RequisitionItemLocationRel exists
			and   RequisitionItemLocationRel.IsActive)

		
		IsInPurchaseOrderLocation
			restricted
			when (PurchaseOrderItemLocationRel exists
			and   PurchaseOrderItemLocationRel.IsActive)
			
		IsNotLocationSpecific
			restricted
			when (AssociatedItem.RelatedCompany not entered
			and   AssociatedItem.RelatedLocation not entered)
		
		IsSubstituteForLocation
			restricted
			when (IsSubstitute
			and   AssociatedItem.RelatedCompany entered
			and   AssociatedItem.RelatedLocation entered)	

		IsSubstituteForCompanyOnly
			restricted
			when (AssociatedItem.RelatedCompany entered
			and  AssociatedItem.RelatedLocation not entered)
			
		IsWithinEffectiveDate
			restricted
			when ((EffectiveDate  not entered or current corporate date >= EffectiveDate)
			and   (ExpirationDate not entered or current corporate date <= ExpirationDate))
			
		IsActive
			restricted
			when (ItemRel.Active)			

		IsItemMasterSubstitute
			restricted
			when (IsSubstitute
			and   Contract not entered)
			
		IsValidInItemLocation
			restricted
			when (RelatedItemLocationRel exists
			and   RelatedItemLocationRel.InventoryTracked
			and   RelatedItemLocationRel.Active)		

		IsSpecialSubstitute
			restricted
			when (IsSubstitute
			and   Contract entered)

		InvalidSpecialItemEffectiveDate
			restricted
			when (ContractLine.EffectiveDate entered
			and   EffectiveDate entered
			and   EffectiveDate < ContractLine.EffectiveDate)

		InvalidSpecialItemExpirationDate
			restricted
			when (ContractLine.ExpirationDate entered
			and   ExpirationDate entered
			and   ExpirationDate > ContractLine.ExpirationDate)

		ContractLineForSubstitution
			restricted
			when (IsSpecialSubstitute
			and   IsValidContract
			and   IsValidContractLine
			and  (EffectiveDate not entered
			or    ContractLine.EffectiveDate not entered
			or    EffectiveDate >= ContractLine.EffectiveDate)
			and  (ExpirationDate not entered
			or    ContractLine.ExpirationDate not entered
			or    ExpirationDate <= ContractLine.ExpirationDate))

		IsValidContractLine
			restricted
			when (not ContractLine.OnHold
			and   not ContractLine.ErrorsExist
			and   not ContractLine.LineClosed)

		IsValidContract
			restricted
			when (Contract.ContractStatus.Active
			or    Contract.ContractStatus.Amendment
			or    Contract.ContractStatus.Addendum
			or   (Contract.ContractStatus.ReadyToActivate and Contract.HasBeenActivated))

		ContractLineNotAvailable
			restricted
			when (ContractLine entered
			and  (ContractLine.OnHold
			or    ContractLine.ErrorsExist))

		ContractLineClosed
			restricted
			when (ContractLine entered
			and   ContractLine.LineClosed)

		IsWithinContractLineEffectiveDate
			restricted
			when (Contract entered
			and	 (ContractLine.EffectiveDate not entered 
			or 	 ContractLine.EffectiveDate <= current corporate date)
			and  (ContractLine.ExpirationDate not entered 
			or 	 ContractLine.ExpirationDate >= current corporate date))
		
		RSSLPLAllocationPriorityLevelEnabled
			restricted
			when (RSSLPLConfigurationParameterRel exists)
		
		IsValidContractParticipantForRSSLPL
			restricted
			when (RSSLPLDerivedValidContractParticipant)
		
	Relations
		ItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= AssociatedItem.RelatedItem
				
		KeywordShadowByItemRel
			one-to-one relation to KeywordShadow
			Field Mapping uses ByShadowItem
				related.ItemGroup		= ItemGroup
				related.Item			= AssociatedItem.RelatedItem
				
		KeywordShadowByContractLineRel
			one-to-one relation to KeywordShadow
			Field Mapping uses ByContractLine
				related.ItemGroup		= ItemGroup
				related.Contract		= Contract
				related.ContractLine	= ContractLine
				
		RSSLPLItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           = KeywordShadowByItemRel.DefaultFromCompany
				related.InventoryLocation = KeywordShadowByItemRel.DefaultFromLocation
				related.Item              = AssociatedItem.RelatedItem

		RequesterRel
            one-to-one relation to Requester
            Field Mapping uses symbolic key
            	related.HROrganization = actor.agent(Employee).HROrganization
                related.Requester = actor.agent(Employee).Employee.Requester.Requester
	
		RequisitionLineRel
			one-to-one relation to RequisitionLine
			Field Mapping uses symbolic key
				related.Company         = ContextCompany
				related.Requisition     = ContextRequisition
				related.RequisitionLine = ContextRequisitionLine

		PurchaseOrderLineRel
			one-to-one relation to PurchaseOrderLine
			Field Mapping uses symbolic key
				related.Company           = ContextCompany
				related.PurchaseOrder     = ContextPurchaseOrder
				related.PurchaseOrderLine = ContextPurchaseOrderLine

		ItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           = ContextCompany
				related.InventoryLocation = RequisitionLineRel.FromCompanyLocationBin.FromLocation
				related.Item              = AssociatedItem.RelatedItem

		CustomerOrderItemLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key
				related.Company           = ContextCustomerOrder.InventoryCompanyRel.Company
				related.InventoryLocation = ContextCustomerOrder.InventoryLocation
				related.Item              = AssociatedItem.RelatedItem

		CustomerOrderLineRel
			one-to-one relation to CustomerOrderLine
			Field Mapping uses symbolic key
				related.Company				= ContextCompany
				related.CustomerOrder		= ContextCustomerOrder
				related.CustomerOrderLine	= ContextCustomerOrderLine



		RelatedItemsInLocationRel
			one-to-one relation to ItemLocation
			Field Mapping uses symbolic key				
                related.Company          				= ContextCompany
                related.InventoryLocation 		= ContextRequisition.FromCompanyLocation.FromLocation
                related.Item              					= AssociatedItem.RelatedItem
        
        RelatedItemLocationRel
        	one-to-one relation to ItemLocation
			Field Mapping uses symbolic key				
                related.Company          				= AssociatedItem.RelatedCompany
                related.InventoryLocation 				= AssociatedItem.RelatedLocation
                related.Item              				= AssociatedItem.RelatedItem
        
        RequisitionItemLocationRel
        	one-to-one relation to ItemLocation
        	Field Mapping uses symbolic key
        		related.Company							= ContextCompany
        		related.InventoryLocation				= ContextInventoryLocation
        		related.Item							= AssociatedItem.RelatedItem
        	   
       	PurchaseOrderItemLocationRel
       		one-to-one relation to ItemLocation
       		Field Mapping uses symbolic key
       			related.Company							= ContextCompany
       			related.InventoryLocation				= ContextInventoryLocation
       			related.Item							= AssociatedItem.RelatedItem
	
		RSSLPLConfigurationParameterRel
            one-to-many relation to ConfigurationParameter
            Field Mapping uses symbolic key
                related.ConfigurationParameter.ConfigurationID  = "config"
                related.ConfigurationParameter.Name             = "RSS_LPLAllocationPriorityLevel"
			Instance Selection
				where (related.ConfigurationParameter.Value = "true")
		
		RSSLPLAllocationPriorityLevelRel
			one-to-many relation to AllocationPriorityLevel
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= actor.context.FinanceEnterpriseGroup
			Instance Selection
				where (related.UseAsDefault)
    Sets

		AllTypesByPriority
			Sort Order
				ItemGroup
				Item
				AssociatedItem.AssociatedItemSubType
				Priority
				AssociatedItem.RelatedItem
				AssociatedItem.RelatedCompany
				AssociatedItem.RelatedLocation
                
		ByPriority
			Instance Selection
				where (IsSubstitute)
			Sort Order
				ItemGroup
				Item
				Priority
				AssociatedItem.RelatedItem
                AssociatedItem.RelatedCompany
                AssociatedItem.RelatedLocation
				AssociatedItem.AssociatedItemSubType

		ByPriorityAndContract
			Instance Selection
				where (IsSubstitute)
			Sort Order
				ItemGroup
				Item
				Priority
				Contract
				AssociatedItem.RelatedItem
                AssociatedItem.RelatedCompany
                AssociatedItem.RelatedLocation
				AssociatedItem.AssociatedItemSubType

        Set3
            indexed
            Sort Order
                ItemGroup
                AssociatedItem.RelatedItem
                Item
                AssociatedItem.AssociatedItemSubType
                AssociatedItem.RelatedCompany
                AssociatedItem.RelatedLocation
                
	Field Rules
							
		Contract
			constraint (IsValidContract)
				"CannotUse;ContractIsInA<Contract.ContractStatus>Status"			

		ContractLine
			if (Contract entered)
				required

			if (Contract changed)
				initialize ContractLine	
				
			constraint (ContractLine.ItemType.Special)
				"MustUseAContractLineWithSpecialItem"

		EffectiveDate
			if (ExpirationDate entered)
				default to current corporate date
		
		ExpirationDate
			if (EffectiveDate entered)
				constraint (EffectiveDate <= ExpirationDate)
					"EffectiveDateCannotBeGreaterThanExpirationDate"
		
		Priority
			if (IsSubstitute)
				default to 50
				
			constraint (Priority >= 0)
				"PriorityCannotBeLessThanZero"

    Actions
        Create is a Create Action
			Exit Rules
				if (not IsSpecialSubstitute)
					constraint (ItemRel.Item exists)
						"RelatedItem<AssociatedItem.RelatedItem>DoesNotExist"		
					invoke ItemDetailChanged Item

		CreateSubstituteSpecialItem is a Create Action
			Entrance Rules
				constraint (Contract entered)
					"ContractIsRequired"
				AssociatedItem.AssociatedItemSubType = AssociatedItem.AssociatedItemSubType.Substitute

        Update is an Update Action
			Exit Rules
				invoke ItemDetailChanged Item

        Delete is a Delete Action
			Exit Rules
				invoke ItemDetailChanged Item

		RSSLPLAddRequisitionLine is an Instance Action
			default label is "AddToRequisition"
			completion message is "SubstituteItem<AssociatedItem.RelatedItem>AddedTo_\Requisition<PrmRequisition>"
            Local Fields
            	LocalRequisitionView 			is a Requisition view
			Parameters
				PrmCompany             			is an InventoryCompany
					default label is "Company"
				PrmRequestingLocation			is a RequestingLocation
					default label is "RequestingLocation"
				PrmRequisition                  is a Requisition
				PrmFromCompanyLocation 			is a FromCompanyLocation
				PrmAllocationPriority			is a AllocationPriority
					default label is "Priority"
				PrmRequisitionDescription		is Alpha size 30
					default label is "RequisitionDescription"
				PrmAddToRequisition				is Numeric size 1
					States
						AddToExistingRequisition	value is 0
						StartNewRequisition			value is 1				
				PrmQuantity						is a Quantity
					default label is "Quantity"
					precision is RSSLPLNumberOfDecimalsQuantity
				PrmUOM							is a UnitOfMeasure
					default label is "U\O\M"
	            PrmTransactionUnitCost			is an UnsignedUnitCost
					default label is "UnitCost"
					precision is RSSLPLNumberOfDecimalsCost
				PrmTransactionCurrencyCode		is a Currency
				PrmRequestedDeliveryDate		is Date
					default label is "RequestedDeliveryDate"
				PrmCostCode						is like CostCode
				PrmAllocationPriorityLevel          is an AllocationPriorityLevel
					default label is "Priority"
			Parameter Rules
				PrmCompany
				    default to actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    initial value is actor.agent(Employee).Employee.Requester.CurrentCompanyForRQC
				    default to actor.agent(Employee).Employee.Requester.Company
				    initial value is actor.agent(Employee).Employee.Requester.Company
				PrmRequestingLocation
            		default to PrmRequisition.RequestingLocation
            		initial value is PrmRequisition.RequestingLocation
            		default to actor.agent(Employee).Employee.Requester.RequestingLocation
            		initial value is actor.agent(Employee).Employee.Requester.RequestingLocation					
				PrmRequisition
					if (PrmAddToRequisition.AddToExistingRequisition)
						required
							"FieldIsRequired"
						constraint(PrmRequisition.UpdateAllowed)
							"RequisitionMustBeUnreleased"
				PrmQuantity
					required
				PrmUOM
					required
					default to RSSLPLCostUOM
					initial value is RSSLPLCostUOM
				PrmTransactionUnitCost
					initial value is RSSLPLUnitCost
					default to RSSLPLUnitCost
				PrmCostCode
					initial value is RSSLPLCostCode
					default to RSSLPLCostCode
				PrmAllocationPriority
					if (RSSLPLConfigurationParameterRel exists)
						default to PrmAllocationPriorityLevel
						default to RSSLPLAllocationPriorityLevelRel.AllocationPriorityLevel
			Entrance Rules
				if (EffectiveDate entered)
					constraint (EffectiveDate <= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
				if (ExpirationDate entered)
					constraint (ExpirationDate >= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
				if (IsSpecialSubstitute)
					constraint (IsValidContract)
						"CannotAddToRequisition.ContractIsInvalid"
					constraint (IsValidContractLine)
						"CannotAddToRequisition.ContractLineIsInvalid"
						
			Action Rules
				if (PrmAddToRequisition.StartNewRequisition)
					invoke Create Requisition
						assign result to LocalRequisitionView
						invoked.Company					= PrmCompany
						invoked.RequestingLocation		= PrmRequestingLocation
						invoked.AllocationPriority				 	= PrmAllocationPriority
						if (RSSLPLConfigurationParameterRel exists)
							invoked.TransientAllocationPriorityLevel 	= PrmAllocationPriority
						invoked.RequestedDeliveryDate	= PrmRequestedDeliveryDate
						invoked.RequisitionDescription	= PrmRequisitionDescription
						invoked.FromCompanyLocation		= PrmFromCompanyLocation
		            PrmRequisition = LocalRequisitionView.Requisition

				invoke Create RequisitionLine
					invoked.Company					= PrmCompany
					invoked.Requisition				= PrmRequisition
					invoked.Item					= AssociatedItem.RelatedItem
					invoked.ItemEntryMethod			= ItemEntryMethod.Item
					invoked.Quantity				= PrmQuantity
					invoked.EnteredUOM				= PrmUOM
					invoked.TransactionUnitCost		= PrmTransactionUnitCost
					invoked.TransactionCurrencyCode	= PrmTransactionCurrencyCode
					invoked.TransientBypassUnitCost = true
					invoked.RequestedDeliveryDate 	= PrmRequestedDeliveryDate
					invoked.CostCode				= PrmCostCode	
					if (IsSpecialSubstitute)
						invoked.ItemType			= ItemType.Special	
						invoked.Contract	 		= Contract
						invoked.ContractLine 		= ContractLine
						invoked.Description			= ContractLine.ItemDescription
					else
						invoked.Description			= DerivedAssociatedItemDescription	
			Exit Rules
				invoke UpdateCurrentRequisitionForRQC RequesterRel
						invoked.PrmCompany				= PrmCompany
						invoked.PrmRequisition     		= PrmRequisition


		CreateRequisitionLine is an Instance Action
			valid when (IsFromRequisitionLineAndUnreleased)
			default label is "AddToRequisition"
			completion message is "Item<AssociatedItem.RelatedItem>AddedTo_\Requisition<ContextRequisition>"
			Parameters
				PrmOrderQuantity					is a Quantity
					default label is "OrderQuantity"
				PrmOrderUOM							is a UnitOfMeasure
					default label is "U\O\M"
				PrmRequestedDeliveryDate			is Date
					default label is "RequestedDeliveryDate"
			Parameter Rules
				PrmOrderQuantity
					required
			Entrance Rules
				if (EffectiveDate entered)
					constraint (EffectiveDate <= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
				if (ExpirationDate entered)
					constraint (ExpirationDate >= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
				if (IsSpecialSubstitute)
					constraint (IsValidContract)
						"CannotAddToRequisition.ContractIsInvalid"
					constraint (IsValidContractLine)
						"CannotAddToRequisition.ContractLineIsInvalid"
					constraint (DerivedValidContractParticipant)
						"CannotAddToRequisition.ContractParticipantIsInvalid."
						
			Action Rules
				invoke Create RequisitionLine
					fill in fields from RequisitionLineRel
						except invoked.RequisitionLine
						except invoked.LastUpdateDate
                        except invoked.LastUpdateBy
                        except invoked.CreatedBy
						except invoked.CreationDate
                        except invoked.AccruedTaxAmount
                        except invoked.LineAddOnChargeTotal
                        except invoked.LandedUnitCost

                        except invoked.Status
                        except invoked.Closed
                        except invoked.ApprovedRejectedDate
                        except invoked.ApprovingRejectingOperatorID
                        except invoked.ReleasedDate
                        except invoked.ReleasingOperatorID
                        except invoked.Approved
                        except invoked.KilledQuantity
                        except invoked.LastDistributionSequence
                        except invoked.LastReturnSequence
                        except invoked.ReturnQuantity
                        except invoked.DetailReturnQuantity
                        except invoked.OverrideCost
                        except invoked.ItemType
                        except invoked.Vendor
                        except invoked.AccruedTaxAmount
                        except invoked.InvoicedTaxAmount
                        except invoked.InterfaceCancelQuantity
                        except invoked.PatientProcedure
                        except invoked.CostCode
                        except invoked.RequisitionSource
						except invoked.TransientAllocationPriorityLevel
					invoked.Company					= RequisitionLineRel.Company
					invoked.Requisition				= RequisitionLineRel.Requisition
					invoked.Item					= AssociatedItem.RelatedItem
					invoked.ItemEntryMethod			= ItemEntryMethod.Item
					invoked.Quantity				= PrmOrderQuantity
					if (IsSpecialSubstitute)
						invoked.ItemType			= ItemType.Special	
						invoked.Contract	 		= Contract
						invoked.ContractLine 		= ContractLine
						invoked.Description			= ContractLine.ItemDescription
						invoked.EnteredUOM			= ContractLine.UOM
						initialize invoked.TransactionUnitCost
						initialize invoked.Manufacturer
						initialize invoked.ManufacturerNumber
					else
						invoked.Description			= DerivedAssociatedItemDescription	
						invoked.TransactionUnitCost	= RequisitionLineRel.TransactionUnitCost
						if (PrmOrderUOM entered)
							invoked.EnteredUOM			= PrmOrderUOM
						else
							invoked.EnteredUOM			= AssociatedItem.RelatedItem.DefaultTransactionUOM
					if (PrmRequestedDeliveryDate entered)
						invoked.RequestedDeliveryDate 	= PrmRequestedDeliveryDate

		
		AddToCustomerOrder is an Instance Action
			valid when (ForCustomerOrderLine)
			completion message is "<AssociatedItem.AssociatedItemSubType>Item<AssociatedItem.RelatedItem>AddedTo_\CustomerOrder<ContextCustomerOrder>"
			Parameters
				PrmOrderQuantity					is a Quantity
					default label is "OrderQuantity"
				PrmSellUOM							is a UnitOfMeasure
					default label is "UnitOfMeasure"
				PrmExpectedDeliveryDate				is Date
					default label is "ExpectedShipDate"
				PrmUnitCost							is an InternationalCost							
					default label is "UnitCost"
				
			Parameter Rules
				PrmOrderQuantity
					required
				PrmSellUOM
					required
				PrmExpectedDeliveryDate
					default to ContextCustomerOrder.ExpectedShipDate
					required
					
			Action Rules
				if (EffectiveDate entered)
					constraint (EffectiveDate <= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
						
				if (ExpirationDate entered)
					constraint (ExpirationDate >= current corporate date)
						"SubstituteItemCouldNotBeAdded;ItIsExpired"
				
				invoke Create CustomerOrderLine
					invoked.Company							= ContextCustomerOrder.Company
					invoked.CustomerOrder					= ContextCustomerOrder
					invoked.Item							= AssociatedItem.RelatedItem
					invoked.OrderQuantity					= PrmOrderQuantity
					invoked.SellUOM							= PrmSellUOM
					invoked.EarlyDeliveryDate				= PrmExpectedDeliveryDate
					invoked.UnitCost						= PrmUnitCost
					if (IsSubstitute)
						invoked.OriginalReplacementOrSubstitute	= AssociatedItem.AssociatedItemSubType.Substitute
						invoked.OriginalItem					= Item
						invoked.OriginalLine					= ContextCustomerOrderLine
						
		UpdateOrderQuantity is an Instance Action
			valid when (ForCustomerOrderLine)
			Parameters
				PrmOrderQuantity		is a Quantity
				PrmSellUOM				is an UnitOfMeasure
				PrmExpectedDeliveryDate	is Date
			
			Parameter Rules
				PrmOrderQuantity
					required				
			
			Action Rules
				invoke Update CustomerOrderLineRel
					invoked.OrderQuantity			= PrmOrderQuantity
					if (PrmExpectedDeliveryDate entered)
						invoked.ExpectedShipDate 	= PrmExpectedDeliveryDate
					if (PrmSellUOM entered)
						invoked.SellUOM				= PrmSellUOM
			
