ReceivableReason is a BusinessClass
	owned by ar
	prefix is ARR
	classic name is ARREASON

	Ontology
		symbolic key is ReceivableReason
			classic set name is ARRSET1
			classic name is REASON-CODE
			classic name for ReceivableReasonType is TYPE

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		ReceivableAdjustmentReasonType
			classic name is REASON-TYPE





		Active							is Boolean
			classic name is ACTIVE-STATUS
		ChargebackType					is AlphaUpper size 1
			classic name is CB-TYPE
			States
				Detail	value is "D"
				Summary	value is "S"
				Memo	value is "M"
		Description


		Review							is AlphaUpper size 1
			classic name is REVIEW-FL
			States
				ConditionalReviewRequired	value is "N"
				OptionalDiscountReview		value is "O"
				ReviewAlways				value is "Y"
		AdjustmentAmountReviewLimit		is an InternationalAmount
			classic name is APP-LIMIT
				precision is Company.BaseNumberOfDecimals
		AdjustmentAmountReviewPercent	is Percent size 5.2
			classic name is APP-PERCENT
		UsedFlag						is Boolean
			classic name is USED-FL
		JournalBook
			classic name is JRNL-BOOK-NBR
			restricted
		AccountingUnitOverrideFlag		is AlphaUpper size 1
			default label is "FinanceCodeBlockOverride"
			classic name is ACCT-UNIT-FLAG
			States
				AllowProcessLevelFinanceCodeBlockOverride	value is "N"
				PreventProcessLevelFinanceCodeBlockOverride	value is "Y"

		ReceivableInvoiceDisputeCode
			classic name is DISPUTE-CD
		ChargebackDisputeCode			is a ReceivableInvoiceDisputeCode
			classic name is CB-DISPUTE-CD
		DistributionAccount				is a FinanceCodeBlockFull
			classic name for DistributionAccount.AccountingUnit is ACCT-UNIT
			classic name for DistributionAccount.GeneralLedgerChartAccount is ACCOUNT
			classic name for DistributionAccount.Project is ACTIVITY
		ChargebackAccount				is a FinanceCodeBlock
			classic name for ChargebackAccount.AccountingUnit is CB-ACCT-UNIT
			classic name for ChargebackAccount.GeneralLedgerChartAccount is CB-ACCOUNT
		AccrualAccount					is a FinanceCodeBlockFull
			classic name for AccrualAccount.AccountingUnit is ACCR-ACCT-UNIT
			classic name for AccrualAccount.GeneralLedgerChartAccount is ACCR-ACCOUNT
		RequiresApproval						is Boolean
		ApprovalCode
		RejectAdjustmentReasonCodeRequired		is Boolean
			default label is "RejectionReasonRequired"
		AttachmentRequired						is Boolean

	Transient Fields
		TransientCodeBlock							is a TransactionCodeBlock
		ActiveReceivableReasonType					is AlphaUpper size 2	//Using for select lists.  Intentionally excluding "MarkedAsPaid" / "MP".
			States
				CashApplicationAdjustment	value is "AD"
				MemoEntry					value is "ME"
			derive value from ReceivableReasonType	
		SelectableReceivableAdjustmentReasonType	is AlphaUpper size 2	//Using for select lists.  Intentionally excluding "MarkedAsPaid" / "MP".
			States
				Chargeback		value is "CB"
				Discount		value is "DS"
				OverShort		value is "OS"
				Grouping		value is "GP"
				PaymentTransfer	value is "TR"
				TaxWithholding	value is "TW"	
			derive value from ReceivableAdjustmentReasonType


	Derived Fields
		ContextMessageEntityType		is a StringField
			type is Alpha 50
			restricted
			"InforERPEnterpriseFinancialsReason"

		ContextMessageText				is a MessageField
			restricted
			"AdjustmentReason<ReceivableReason>ForCompany<Company>"

		RepresentativeText is a StringField			
			type is Text
			default label is "Company"
			Company " - " Company.Name

		ReasonRepresentativeText is a StringField	
			type is Text
			ReceivableReason " - " Description

		ActiveStatus is a DerivedField				
			type is Alpha size 10
			if(Active)
				return "Active"
			if(not Active)
				return ("InActive")

	Attach Rules
		constraint (Active)
			"ReasonCodeMustBeActive"

	Field Rules
		Active
			initial value is true

		ActiveReceivableReasonType	
			initial value is ActiveReceivableReasonType.CashApplicationAdjustment
			if (ReceivableReasonType entered
			and ReceivableReasonType.CashApplicationAdjustment)
				default to ReceivableReasonType.CashApplicationAdjustment
			if (ReceivableReasonType entered
			and ReceivableReasonType.MemoEntry)
				default to ReceivableReasonType.MemoEntry

		SelectableReceivableAdjustmentReasonType
			if (ReceivableAdjustmentReasonType entered
			and !ReceivableAdjustmentReasonType.MarkAsPaid
			and !ReceivableAdjustmentReasonType.OverApplied)

				default to ReceivableAdjustmentReasonType

		ReceivableReasonType
			if (ActiveReceivableReasonType entered
			and ReceivableReasonType not entered)
				default to ActiveReceivableReasonType


	SubType ReceivableReasonType.CashApplicationAdjustment Field Rules
		Description
			required
				"DescriptionIsARequiredField."

		ReceivableReasonType
			required
			if (GainLossReservedReason)
				cannot be changed
					"CannotBeChangedForReservedReason<ReceivableReason>"
			if (ReceivableReasonType not entered)
				ReceivableReasonType = ActiveReceivableReasonType
			if (IsMarkAsPaidType)	
				cannot be changed
					"CannotBeChangedForReservedReason<ReceivableReason>"

		ReceivableAdjustmentReasonType
			required
				"Receivable_\Adjustment_\Reason_\TypeIsRequiredFor_\Cash_\Application_\Adjustment_\Receivable_\Reason_\Type."
			if (ReceivableAdjustmentReasonType not entered)
				ReceivableAdjustmentReasonType = SelectableReceivableAdjustmentReasonType
			if (old SelectableReceivableAdjustmentReasonType != SelectableReceivableAdjustmentReasonType )
				ReceivableAdjustmentReasonType = SelectableReceivableAdjustmentReasonType
				
			if (IsMarkAsPaidType)	
				constraint (!ReceivableCompanyMarkedAsPaidReceivableReasonRelExists)
					"On_\Receivable_\Company,Mark_\AsPaid_\Receivable_\ReasonFieldNotCreated."

		DistributionAccount
			if (GainLossReservedReason)
				cannot be entered
					"AccountingUnitCannotBeEnteredForReservedReason<ReceivableReason>"
			else
			if (IsMarkAsPaidType)	
				cannot be entered
					"DistributionAccountForReservedReason<ReceivableReason>CannotBeEnteredHere.DefinedOnReceivableCompany."
			else
			if (ReceivableAdjustmentReasonType.Chargeback
			or  ReceivableAdjustmentReasonType.Discount
			or  ReceivableAdjustmentReasonType.OverShort
			or  ReceivableAdjustmentReasonType.TaxWithholding)	
				required
					"AccountRequiredForType<ReceivableAdjustmentReasonType>"
			else
				cannot be entered
					"AccountCannotBeEnteredForType<ReceivableAdjustmentReasonType>"	

		ChargebackAccount
			if (ReceivableAdjustmentReasonType.Chargeback)
				required
					"ChargebackAccountRequiredForType<ReceivableAdjustmentReasonType>"
			else
				cannot be entered
					"ChargebackAccountNotAllowedForType<ReceivableAdjustmentReasonType>"

		Review
			if (ApprovalCode entered)
				required
					"ApprovalCodeIsEntered;SelectReviewOption"
					
			if (Review.OptionalDiscountReview)
				constraint (ReceivableAdjustmentReasonType.Discount)
					"CannotSetReviewToOptionalDiscountIfTypeIsNotDiscount"
			if (Review.ReviewAlways
			and ReceivableReasonType.CashApplicationAdjustment
			and !ReceivableAdjustmentReasonType.OverApplied)
				constraint (AdjustmentAmountReviewLimit not entered
				and		 AdjustmentAmountReviewPercent not entered)
					"CannotEnterLimitOrPercentIfReviewSetToAlways"
			if (ReceivableAdjustmentReasonType.MarkAsPaid
			or ReceivableAdjustmentReasonType.Grouping
			or ReceivableAdjustmentReasonType.PaymentTransfer)
				cannot be entered
					"CannotSelectReviewOptionFor<ReceivableAdjustmentReasonType>ReceivableAdjustmentType."

		AttachmentRequired
			if (Review not entered)
				cannot be entered
					"ReasonCodeIsNotSetForReview;AttachmentRequiredCannotBeEntered"
					
		AdjustmentAmountReviewLimit
			if (ReceivableReasonType.CashApplicationAdjustment
			and Review.ConditionalReviewRequired
			and AdjustmentAmountReviewPercent not entered)
				required
					"ReviewSetFor_\Conditional\Review\Required;_\Adjustment\Amount\Review\LimitOr_\Adjustment\Amount\Review\PercentMustBeEntered"
			if (ReceivableReasonType.CashApplicationAdjustment
			and (Review.OptionalDiscountReview
			or Review.ReviewAlways
			or Review not entered))
				cannot be entered
					"Adjustment\Amount\Review\LimitCannotBeEntered;ReviewMustBeSetTo_\Conditional\Review\Required"


		AdjustmentAmountReviewPercent
			if (ReceivableReasonType.CashApplicationAdjustment
			and Review.ConditionalReviewRequired
			and AdjustmentAmountReviewLimit not entered)
				required
					"ReviewSetFor_\Conditional\Review\Required;_\Adjustment\Amount\Review\LimitOr_\Adjustment\Amount\Review\PercentMustBeEntered"
			if (ReceivableReasonType.CashApplicationAdjustment
			and (Review.OptionalDiscountReview
			or Review.ReviewAlways
			or Review not entered))
				cannot be entered
					"Adjustment\Amount\Review\PercentCannotBeEntered;ReviewMustBeSetTo_\Conditional\Review\Required"
					
		
		ChargebackType
			if (ReceivableAdjustmentReasonType.Chargeback)
				required
					"ChargebackTypeRequired"
			else
				cannot be entered
					"CannotEnterChargebackTypeForThisReasonType"

		ReceivableInvoiceDisputeCode
			if (!ReceivableAdjustmentReasonType.Discount
			and !ReceivableAdjustmentReasonType.OverShort)
				cannot be entered
					"DisupteCodeOnlyAllowedForTypeDiscountAndOverShort"

		ChargebackDisputeCode
			if (!ReceivableAdjustmentReasonType.Chargeback)
				cannot be entered
					"DisupteCodeOnlyAllowedForTypeChargeback"

		AccrualAccount
			if (!ReceivableAdjustmentReasonType.Discount
			and !ReceivableAdjustmentReasonType.OverShort)
				cannot be entered
					"AccrualAccountCannotBeEnteredForType<ReceivableAdjustmentReasonType>"

		AccountingUnitOverrideFlag
			if (!ReceivableAdjustmentReasonType.MarkAsPaid)	
				default to "N"	

		ReceivableReason
			if (ReceivableAdjustmentReasonType.MarkAsPaid)	
				cannot be changed	
					"CannotModifyReceivableReason"	

		ApprovalCode
			if (RequiresApproval)
				required
					"ApprovalCodeRequiredWhenReasonCodeRequiresApproval"
			constraint (ApprovalCode.HasApprovalLevels)
				"ApprovalCodeHasNoApprovalLevels"
			constraint (!ApprovalCode.HasTeamWithNoMembers)
				"ApprovalCodeHasATeamWithNoMembers"
			constraint (!ApprovalCode.HasInvalidEscalations)
				"ApprovalCodeHasInvalidEscalationSettings"
			constraint (!ApprovalCode.HasInactiveResources)
				"ApprovalCodeHasInactiveResources"
			if (ReceivableAdjustmentReasonType.Grouping)
				cannot be entered
					"CannotEnterApprovalCodeFor<ReceivableAdjustmentReasonType>"
		
		RejectAdjustmentReasonCodeRequired
			if (ReceivableAdjustmentReasonType.Grouping)
				cannot be entered
					"CannotRequireRejectionReasonFor<ReceivableAdjustmentReasonType>"
			constraint (RequiresApproval)
				"CannotRequireRejectionReason;RequiresApprovalFlagMustBeSetToTrue"
				


	SubType ReceivableReasonType.MemoEntry Field Rules



		ReceivableReasonType
			required

		ReceivableAdjustmentReasonType
			cannot be entered

		DistributionAccount
			cannot be entered

		ChargebackAccount
			cannot be entered

		Review
			cannot be entered

		ChargebackType
			cannot be entered

		ReceivableInvoiceDisputeCode
			cannot be entered

		ChargebackDisputeCode
			cannot be entered

		AccrualAccount
			cannot be entered

		AdjustmentAmountReviewLimit
			cannot be entered

		AdjustmentAmountReviewPercent
			cannot be entered
		
		RequiresApproval
			cannot be entered

		ApprovalCode
			cannot be entered

		RejectAdjustmentReasonCodeRequired
			cannot be entered







	SubType ReceivableReasonType.MarkedAsPaid Field Rules
		Description
			required
				"CannotCreateReceivableReasonWithReceivableReasonTypeOfMarkAsPaidFromThisForm."

		ReceivableReasonType
			required

		DistributionAccount
			cannot be entered
				"AccountCannotBeEnteredForType<ReceivableAdjustmentReasonType>"	

		ChargebackAccount
			cannot be entered
				"ChargebackAccountNotAllowedForType<ReceivableAdjustmentReasonType>"

		Review
			cannot be entered

		ChargebackType
			cannot be entered
				"CannotEnterChargebackTypeForThisReasonType"

		ReceivableInvoiceDisputeCode
			cannot be entered
				"DisupteCodeOnlyAllowedForTypeDiscountAndOverShort"

		ChargebackDisputeCode
			cannot be entered
				"DisupteCodeOnlyAllowedForTypeChargeback"

		AccrualAccount
			cannot be entered
				"AccrualAccountCannotBeEnteredForType<ReceivableAdjustmentReasonType>"

		ReceivableReason
			default to "MP"
		
		AdjustmentAmountReviewLimit
			cannot be entered

		AdjustmentAmountReviewPercent
			cannot be entered

		RequiresApproval
			cannot be entered

		ApprovalCode
			cannot be entered

		RejectAdjustmentReasonCodeRequired
			cannot be entered


	Conditions
		IsValidForActorContext
			restricted
			when (GeneralLedgerCompanyRel.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)	

		SecurityGroupAllowsAccess	
			when (actor.context.CompanySecurityGroup = blank
			or	  CompanySecurityGroupMemberRel exists)

		IsActive
			restricted
			when (Active)

		IsActiveMemoEntryType
			restricted
			classic name is ACTIVE-MEMO
			when (Active
			and   ReceivableReasonType.MemoEntry)

		IsAdjustType
			restricted
			when (ReceivableReasonType.CashApplicationAdjustment)

		IsChargeback
			restricted
			when (ReceivableAdjustmentReasonType.Chargeback)

		IsGroupingType
			restricted
			classic name is GROUP-TYPE
			when (ReceivableAdjustmentReasonType.Grouping)

		IsMemoChargebackType
			restricted
			classic name is MEMO-CB
			when (ChargebackType.Memo)

		IsNotReservedWordCurr
			restricted
			classic name is NOT-CURR
			when (ReceivableReason != "CURR")

		IsNotGroupingType
			restricted
			classic name is NOT-GROUP
			when (not ReceivableAdjustmentReasonType.Grouping)

		IsNotMemoChargebackType
			restricted
			classic name is NOT-MEMO
			when (not ChargebackType.Memo)

		IsNotPaymentTransferType
			restricted
			classic name is NOT-TRANSFER
			when (not ReceivableAdjustmentReasonType.PaymentTransfer)

		IsOverShortType
			restricted
			classic name is OVER-SHORT
			when (ReceivableAdjustmentReasonType.OverShort
			and   ReceivableReason != "CURR")

		IsOverShortOrTaxWithholdingType	
			restricted	
			when ((ReceivableAdjustmentReasonType.OverShort
			or ReceivableAdjustmentReasonType.TaxWithholding)
			and   ReceivableReason != "CURR")

		IsDiscountType
			restricted
			when (ReceivableAdjustmentReasonType.Discount)

		IsMarkAsPaidType	
			restricted	
			when (ReceivableAdjustmentReasonType.MarkAsPaid)	

		IsMarkAsPaidReceivableAdjustmentReasonTypeForCompanyExists	
			restricted	
			when (ReceivableAdjustmentReasonType.MarkAsPaid
			and CompanyMarkAsPaidReceivableAdjustmentReasonTypeRel exists)	

		IsNotMemoEntryAndNotMarkAsPaidType	
			restricted	
			when (not ReceivableReasonType.MemoEntry	
			and not ReceivableAdjustmentReasonType.MarkAsPaid)	

		IsMarkedAsPaidReceivableReasonType	
			restricted	
			when (ReceivableReasonType.MarkedAsPaid)	

		IsNotMarkedAsPaidReceivableReasonType	
			restricted	
			when (not ReceivableReasonType.MarkedAsPaid)	

		IsReceivableReasonTypeCashApplicationAdjustmentAndNotReceivableAdjustmentReasonType
			restricted
			when (ReceivableReasonType.CashApplicationAdjustment
			and not ReceivableAdjustmentReasonType.MarkAsPaid)

		ISPaymentTransferType
			restricted
			classic name is TRANSFER
			when (ReceivableAdjustmentReasonType.PaymentTransfer)

		GainLossReservedReason
			restricted
			when (ReceivableAdjustmentReasonType.OverShort
			and   ReceivableReason = "CURR")

		AllowProcessLevelFinanceCodeBlockOverride
			restricted
			when (AccountingUnitOverrideFlag.AllowProcessLevelFinanceCodeBlockOverride)	

		PreventProcessLevelFinanceCodeBlockOverride
			restricted
			when (AccountingUnitOverrideFlag.PreventProcessLevelFinanceCodeBlockOverride)

		IsReceivableInvoiceSelectable
			restricted
			when	(ReceivableAdjustmentReasonType.Chargeback
			and		not ChargebackType.Memo
			and		ReceivableReason != "CURR"
			or		ReceivableAdjustmentReasonType.OverShort
			and		ReceivableReason != "CURR"
			or		ReceivableAdjustmentReasonType.Discount
			and		ReceivableReason != "CURR"	
			or		ReceivableAdjustmentReasonType.TaxWithholding	
			and		ReceivableReason != "CURR")

		IsOverShortAndChargebackDetailAndChargebackSummary	
			restricted
			when	(ReceivableAdjustmentReasonType.Chargeback
			and		not ChargebackType.Memo
			and		ReceivableReason != "CURR"
			or		ReceivableAdjustmentReasonType.OverShort
			and		ReceivableReason != "CURR")

		CompanyMarkAsPaidReceivableAdjustmentReasonTypeRelExists	
			restricted	
			when	(CompanyMarkAsPaidReceivableAdjustmentReasonTypeRel exists)	

		CompanyMarkAsPaidReceivableReasonTypeRelExists					
			restricted													
			when	(CompanyMarkAsPaidReceivableReasonTypeRel exists)	

		ReceivableCompanyMarkAsPaidReceivableAdjustmentReasonTypeRelExists	
			restricted	
			when	(CompanyMarkAsPaidReceivableAdjustmentReasonTypeRel exists	
			and ReceivableCompanyMarkedAsPaidReceivableReasonRel exists)

		CompanyMarkAsPaidReceivableOffsetAccountRelExists
			restricted
			when	(ReceivableReason.CompanyMarkAsPaidOffsetAccountRel.Company.ReceivableCompany.MarkedAsPaidOffsetAccount.GeneralLedgerChartAccount exists)

		ReceivableCompanyMarkedAsPaidReceivableReasonRelExists
			restricted
			when	(ReceivableReason.ReceivableCompanyMarkedAsPaidReceivableReasonRel.Company.ReceivableCompany.MarkedAsPaidReceivableReason exists)

		IsReceivableOverAppliedReasonOrMarkAsPaidReason
			restricted
			when (ReceivableReasonType.CashApplicationAdjustment
			and  (ReceivableAdjustmentReasonType.OverApplied
			or	  ReceivableAdjustmentReasonType.MarkAsPaid))

		IsOverAppliedType
			restricted
			when (ReceivableAdjustmentReasonType.OverApplied)

		ShowActive							
			restricted
			when (ReceivableReasonType.MemoEntry
			or	IsMarkAsPaidType
			or	IsOverAppliedType
			or	(not IsReceivableOverAppliedReasonOrMarkAsPaidReason))

		IsReceivableOverAppliedOrMarkAsPaidOrGroupingReason
			restricted
			when (IsReceivableOverAppliedReasonOrMarkAsPaidReason
			or   ReceivableAdjustmentReasonType.Grouping
			or   ReceivableReasonType.MemoEntry
			or   ReceivableAdjustmentReasonType.PaymentTransfer)

		IsGroupingOrPaymentTransferOrMemoEntryReason
			restricted
			when (ReceivableAdjustmentReasonType.Grouping
			or   ReceivableReasonType.MemoEntry
			or   ReceivableAdjustmentReasonType.PaymentTransfer)

	Relations

		CompanyMarkAsPaidOffsetAccountRel	
			one-to-many relation to ReceivableCompany	
			Field Mapping uses symbolic key	
				related.Company	 =	Company	
			Instance Selection
				where (related.Company.ReceivableCompany.MarkedAsPaidOffsetAccount.GeneralLedgerChartAccount exists)


		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= Company

		CompanySecurityGroupMemberRel	
			one-to-one relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup	= actor.context.CompanySecurityGroup.FinanceDimensionStructure
				related.Company						= Company

		CompanyMarkAsPaidReceivableReasonTypeRel	
			one-to-one relation to ReceivableReason	

			Field Mapping uses symbolic key	
				related.Company					 =	Company	
				related.ReceivableReasonType	 =	"MP"	
				related.ReceivableReason		 =	ReceivableReason	

		CompanyMarkAsPaidReceivableAdjustmentReasonTypeRel	
			one-to-many relation to ReceivableReason	
			delete restricted	
			Field Mapping uses symbolic key	
				related.Company					 =	Company	
				related.ReceivableReasonType	 =	"AD"	//IEFIN-40063  09-18-2018	//IEFIN-56201 switching to "AD" from "MP"
				related.ReceivableReason		 =	ReceivableReason	
			Instance Selection
				where (related.ReceivableReason.ReceivableAdjustmentReasonType	 =	"MP")

		ReceivableCompanyMarkedAsPaidReceivableReasonRel
			one-to-many relation to ReceivableCompany	
			Field Mapping uses symbolic key	
				related.Company								 =	Company	
			Instance Selection
				where (related.Company.MarkedAsPaidReceivableReason	 =	ReceivableReason)

		CompanyOverApplyReceivableAdjustmentReasonTypeRel
			one-to-many relation to ReceivableReason
			delete restricted
			Field Mapping uses symbolic key
				related.Company					 =	Company
				related.ReceivableReasonType	 =	"AD"
				related.ReceivableReason		 =	ReceivableReason
			Instance Selection
				where (related.ReceivableReason.ReceivableAdjustmentReasonType	 =	"OA")

	Actions
		Create is a Create Action
			Entrance Rules
				constraint(ReceivableReason != "CURR")
					"CURRIsAReservedReasonCodeForGainLossProcessing"
	
		CreateForReceivableReason is a Create Action
			restricted

		Update is an Update Action

		Delete is a Delete Action

		EditCodeBlock is an Update Action
			restricted

		FastUpdate is an Update Action
			restricted
			bypass field rules
			Exit Rules
			
