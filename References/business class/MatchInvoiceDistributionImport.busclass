MatchInvoiceDistributionImport is a BusinessClass
    owned by ma
    prefix is MDA
    classic name is MACAPDTL

    Ontology
        symbolic key is MatchInvoiceDistributionImport
            classic set name is MDASET1

    Patterns
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
       	disable DataTranslations

    Persistent Fields

		RunGroup
        Company					is a MatchCompany
        Vendor
        OldVendor
		EDINumber
            classic name is EDI-NBR
        Invoice
        Suffix
        Sequence
            classic name is DIST-SEQ-NBR
        TaxableAmount                  is an InternationalAmount
            classic name is TAXABLE-AMT
        OriginalTransactionAmount      is an InternationalAmount
            classic name is ORIG-TRAN-AMT
        TaxIndicator
        TaxCode
        Description
        DistributionReference          is a Reference 
            classic name is DST-REFERENCE

        UnitAmount                     is an InternationalAmount
            classic name is UNT-AMOUNT
        AssetDescription               is a Description
            classic name is ASSET-DESC
        TagNumber
            classic name is TAG-NBR
        ItemNumber
            classic name is ITEM-NBR
        ItemQuantity
        ItemDescription
            classic name is ITEM-DESC
        VendorItem						is like VendorItem
            classic name is VEN-ITEM
        AssetTemplate
        InServiceDate                  is Date
            classic name is INSRV-DATE
        PurchaseDate                   is Date
        ModelNumber
        SerialNumber
        HoldAsset                      is Boolean
            classic name is HOLD-AM
        Asset
        TaxAmount                      is an InternationalAmount
            classic name is ITEM-TAX-TRAN
        AssetGroup
        Combine
        AccountingUnitGroup            is an AssetAccountingUnitGroup
            classic name is AU-GROUP
        TaxUsageCode
            classic name is TAX-USAGE-CD
        DstUsrFld01                    is AlphaUpper size 20
        DstUsrFld02                    is AlphaUpper size 20
        DstUsrFld03                    is AlphaUpper size 20
        DstUsrFld04                    is AlphaUpper size 20
        DstUsrFld05                    is AlphaUpper size 20
        AddOnCharge
            classic name is PO-AOC-CODE
        ICNCode
        StockWeight
            classic name is WEIGHT
        SupplementaryQuantity          is a Quantity
            classic name is SUPLMNTARY-QTY
        LineType                       is AlphaUpper size 1
        	States
        		Goods					value is "G"
        		Service					value is "S"
        ContractRebateGroup
        RebateSequence                 is a Sequence
            classic name is REBATE-SEQ
        DistributionAccount            is a FinanceCodeBlock
            classic name for DistributionAccount.ToAccountingEntity is DIST-COMPANY
            classic name for DistributionAccount.AccountingUnit is DIS-ACCT-UNIT
            classic name for DistributionAccount.GeneralLedgerChartAccount is DIS-ACCOUNT
            classic name for DistributionAccount.Project is ACTIVITY


        RecordInError                 is Boolean
		ErrorMessage				  is Alpha up to 150
        HSNSACCode

	Context Fields
		ContextMatchInvoice is a MatchInvoiceImport
		
	Local Fields
    	ImportedDistribution			is a PayablesInvoiceDistribution view
    	LocalDistribution				is like PayablesInvoiceDistribution

		IntrastatFiscalYear				is Date
		IntrastatProcessing
		LocalTrigger					is Alpha size 1

		ErrorOccurred					is Boolean
		LocalErrorMessage				is Alpha 150
		Select							is Boolean

        ThisCompany						is like PayablesCompany
		ThisVendor						is like Vendor
		ThisOldVendor					is like OldVendor
		ThisEDINumber					is like EDINumber
		ThisInvoice						is like Invoice
		ThisSuffix						is like Suffix

		NextSentence					is Boolean
		LocalResultID					is like PayablesInvoiceInterfaceResult
	Conditions
		IsHSNSACCodeEnabled
			restricted
			when (Company.GeneralLedgerCompany.RequireHSNSACCode)
			
	Relations
        PayablesCompanyRel
            one-to-one relation to PayablesCompany
            Field Mapping uses symbolic key
                related.Company			 				= Company









        MatchInvoiceImportRel
            one-to-one relation to MatchInvoiceImport
            Field Mapping uses ByCompanyVendorInvoice
                related.Company			 				= Company
				related.Vendor							= Vendor
				related.OldVendor						= OldVendor
				related.EDINumber						= EDINumber
				related.Invoice							= Invoice
				related.Suffix							= Suffix

		LocalDistributionRel
			one-to-one relation to PayablesInvoiceDistribution
			Field Mapping uses symbolic key
				related.Company							= Company
				related.PayablesInvoice					= MatchInvoiceImportRel.PayablesInvoice
				related.PayablesInvoiceDistribution		= LocalDistribution

        ThisMatchInvoiceImportRel
            one-to-one relation to MatchInvoiceImport
            Field Mapping uses ByCompanyVendorInvoice
                related.Company			 				= ThisCompany
				related.Vendor							= ThisVendor
				related.OldVendor						= ThisOldVendor
				related.EDINumber						= ThisEDINumber
				related.Invoice							= ThisInvoice
				related.Suffix							= ThisSuffix

		VendorForLegacyVendorRel
            one-to-many relation to Vendor
            Field Mapping uses ByLegacyVendor
				related.VendorGroup						= PayablesCompanyRel.VendorGroup
				related.LegacyVendor					= OldVendor
			
       	TaxEntityRel				 
            one-to-one relation to TaxEntity
            Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
                related.TaxEntity 						= Company.AccountingEntity
                
        EntityTaxCodeRel
            one-to-one relation to EntityTaxCode
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
                related.TaxEntity 						= Company.AccountingEntity
                related.TaxCode 						= TaxCode

       	IntrastatHeaderRel
            one-to-one relation to IntrastatHeader
  			Field Mapping uses Set3
				related.TaxEntity						= Company.AccountingEntity  			
                related.IntrastatHeader.FiscalYear		= IntrastatFiscalYear
                related.IntrastatHeader.IntrastatNumber = MatchInvoiceImportRel.IntrastatNumber

		LocalInterfaceResultsRel
			one-to-one relation to PayablesInvoiceInterfaceResult
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			= Company.FinanceEnterpriseGroup
				related.PayablesInvoiceInterfaceResult	= LocalResultID

	Sets
        ByRunGroup
            indexed
            Sort Order
                RunGroup
                Company
                Vendor
                OldVendor
				EDINumber
                Invoice
                Suffix
                Sequence

		ByCompanyVendorInvoice
            indexed
            Sort Order
                Company
                Vendor
                OldVendor
				EDINumber
                Invoice
                Suffix
                Sequence
	
	Field Rules
		RunGroup
			required
			default to ContextMatchInvoice.RunGroup
			initial value is ContextMatchInvoice.RunGroup

		Invoice
			required
			initial value is ContextMatchInvoice.Invoice
		
		EDINumber
			initial value is ContextMatchInvoice.EDINumber

		Vendor
			initial value is ContextMatchInvoice.Vendor
			
		OldVendor
			initial value is ContextMatchInvoice.OldVendor
			
		Suffix
			initial value is ContextMatchInvoice.Suffix
				
		Sequence
			autosequence using ByRunGroup
			required

		ContractRebateGroup
			default to MatchInvoiceImportRel.ContractRebateGroup

		DistributionAccount
			if (TaxCode not entered)
				required
					"ExpenseAccountOrTaxCodeRequired"  

		ICNCode
			if  (!TaxEntityRel.IntrastatUsed)
				cannot be entered
					"TaxEntityDoesNotUseIntrastatReporting"
				
			if  (LineType.Service)
				cannot be entered
					"IntrastatReportingNotAllowedOnServiceLine"
				
			if (MatchInvoiceImportRel.ProcessType.ServiceContract)
				cannot be entered
					"FieldCannotBeEnteredOnServiceInvoice"
			
			IntrastatFiscalYear = MatchInvoiceImportRel.InvoiceDate year
			if (IntrastatHeaderRel.Status.Reported)
				cannot be changed
					"CannotBeChanged;IntrastatReported"

		StockWeight
			if  (!TaxEntityRel.IntrastatUsed)
				cannot be entered
					"TaxEntityDoesNotUseIntrastatReporting"
				
			if  (LineType.Service)
				cannot be entered
					"IntrastatReportingNotAllowedOnServiceLine"
				
			if (MatchInvoiceImportRel.ProcessType.ServiceContract)
				cannot be entered
					"FieldCannotBeEnteredOnServiceInvoice"
			
			IntrastatFiscalYear = MatchInvoiceImportRel.InvoiceDate year
			if (IntrastatHeaderRel.Status.Reported)
				cannot be changed
					"CannotBeChanged;IntrastatReported"

		SupplementaryQuantity
			if  (!TaxEntityRel.IntrastatUsed)
				cannot be entered
					"TaxEntityDoesNotUseIntrastatReporting"
				
			if  (LineType.Service)
				cannot be entered
					"IntrastatReportingNotAllowedOnServiceLine"
				
			if (MatchInvoiceImportRel.ProcessType.ServiceContract)
				cannot be entered
					"FieldCannotBeEnteredOnServiceInvoice"
			
			IntrastatFiscalYear = MatchInvoiceImportRel.InvoiceDate year
			if (IntrastatHeaderRel.Status.Reported)
				cannot be changed
					"CannotBeChanged;IntrastatReported"
					
		LineType
			if (MatchInvoiceImportRel.ProcessType.ServiceContract)
				cannot be entered
					"FieldCannotBeEnteredOnServiceInvoice"
			
	Rule Blocks
		ProcessIntrastat
			IntrastatProcessing.TaxEntity                  	= Company.AccountingEntity
	        
	        if (MatchInvoiceImportRel.Location entered)                                  
	        	IntrastatProcessing.DestinationCountry      = MatchInvoiceImportRel.Location.PostalAddressForPurchaseOrder.Country
	        	IntrastatProcessing.DestinationRegion       = MatchInvoiceImportRel.Location.PostalAddressForPurchaseOrder.Region
			else
	        	IntrastatProcessing.DestinationCountry      = MatchInvoiceImportRel.ProcessLevel.PostalAddress.Country
	        	IntrastatProcessing.DestinationRegion       = MatchInvoiceImportRel.ProcessLevel.PostalAddress.Region
	        	          
			if (MatchInvoiceImportRel.PurchaseFromVendorLocAddressRel exists)
				IntrastatProcessing.OriginCountry 			= MatchInvoiceImportRel.PurchaseFromVendorLocAddressRel.PostalAddress.Country
				IntrastatProcessing.OriginRegion 			= MatchInvoiceImportRel.PurchaseFromVendorLocAddressRel.PostalAddress.Region
				IntrastatProcessing.VendorVATRegCountry		= MatchInvoiceImportRel.PurchaseFromLocation.VATRegistrationCountry
				IntrastatProcessing.VendorVATRegNumber		= MatchInvoiceImportRel.PurchaseFromLocation.VATRegistrationNumber
			else
				IntrastatProcessing.OriginCountry 			= MatchInvoiceImportRel.InvoiceVendorAddressRel.PostalAddress.Country
				IntrastatProcessing.OriginRegion 			= MatchInvoiceImportRel.InvoiceVendorAddressRel.PostalAddress.Region
				IntrastatProcessing.VendorVATRegCountry		= MatchInvoiceImportRel.Vendor.VATRegistrationCountry
				IntrastatProcessing.VendorVATRegNumber		= MatchInvoiceImportRel.Vendor.VATRegistrationNumber				

	        LocalTrigger                             	   	= IntrastatProcessing.CheckCountries
	        constraint (IntrastatProcessing.OutputErrorNumber not entered)
	        	"<IntrastatProcessing.OutputErrorMessage>"
	
			if (IntrastatProcessing.DoIntrastatReporting)
				constraint (LineType entered)
					"LineTypeRequiredForIntrastatReporting"

				if (LineType.Goods)
					constraint (ICNCode entered)
						"ICNCodeRequiredForIntrastatReporting"

					constraint (StockWeight entered)
						"StockWeightRequiredForIntrastatReporting"
					
					constraint (SupplementaryQuantity entered)
						"SupplementaryQuantityRequiredForIntrastatReporting"

			else 
				constraint (ICNCode not entered)
					"SpecifiedCountries/jurisdictionsOrRegionsNotValidForIntrastatProcessing"

				constraint (StockWeight not entered)
					"SpecifiedCountries/jurisdictionsOrRegionsNotValidForIntrastatProcessing"
				
				constraint (SupplementaryQuantity not entered)
					"SpecifiedCountries/jurisdictionsOrRegionsNotValidForIntrastatProcessing"
				
	Create Rules
		constraint (MatchInvoiceImportRel exists)
			"InterfaceInvoiceDoesNotExist"
			
	Actions
		Create is a Create Action
			Action Rules
				if  (TaxEntityRel.IntrastatUsed
				and  !MatchInvoiceImportRel.ProcessType.ServiceContract)
					include ProcessIntrastat
					
		CreateNoRules is a Create Action
			restricted
			bypass field rules
		
		Update is an Update Action
			Action Rules
				if  (TaxEntityRel.IntrastatUsed
				and  !MatchInvoiceImportRel.ProcessType.ServiceContract)
					include ProcessIntrastat

		ChangeRunGroup is an Instance Action
			restricted
			Parameters
				NewRunGroup is a RunGroup
			Action Rules
				RunGroup = NewRunGroup
					
		ChangeSecondaryKeyFields is an Instance Action
			restricted
			Parameters
				NewRunGroup is a RunGroup
		        NewCompany			is a MatchCompany
		        NewVendor			is like Vendor
		        NewOldVendor		is like OldVendor
		        NewInvoice			is like Invoice
		        NewSuffix			is like Suffix
		        NewEDINumber		is like EDINumber
			Action Rules
				RunGroup 			= NewRunGroup
		        Company				= NewCompany
        		Vendor				= NewVendor
		        OldVendor			= NewOldVendor
		        Invoice				= NewInvoice
		        Suffix				= NewSuffix
		        EDINumber			= NewEDINumber
					
		Delete is a Delete Action
					
		FastDelete is a Delete Action
			restricted
			bypass relational integrity rules
					
		MatchDistributionLoad is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmRunGroup					is a RunGroup
					default label is "RunGroup"
				PrmCompany					is a PayablesCompany
				PrmVendorGroup				is a VendorGroup		
				PrmVendor					is a Vendor
					context of PrmVendorGroup		
				PrmProcessLevel				is a PayablesProcessLevel
				PrmAuthorityCode			is a PayablesAuthorityCode
					context of PrmVendorGroup			
		        InvoiceProcess          	is AlphaUpper size 1
		            States
		                Add         value is "A"
		                AddAndMatch value is "M"
				MatchPoint					is Numeric 1
					States
						RuleGroupOne		value is 1
						RuleGroupTwo		value is 2
						RuleGroupThree		value is 3
				AllowMatchItemOrVendorItem			is Boolean
				PrmInterfaceRun				is like PayablesInvoiceInterfaceResult

				
			Parameter Rules
				PrmFinanceEnterpriseGroup
					initial value is actor.context.FinanceEnterpriseGroup
					default to actor.context.FinanceEnterpriseGroup
				PrmRunGroup
					required
						"RunGroupIsRequired"

			Local Fields

				ThisMatchInvoiceImport			is a MatchInvoiceImport

		        LocalTransactionTotal 			is an InternationalAmount	
		        LocalFunctionalTotal 			is an InternationalAmount
				LocalAlternateTotal  			is an InternationalAmount
				LocalAlternateTotal2 			is an InternationalAmount
				LocalAlternateTotal3			is an InternationalAmount
				LocalToFunctionalTotal			is an InternationalAmount
				LocalToAlternateTotal			is an InternationalAmount
				LocalToAlternateTotal2			is an InternationalAmount
				LocalToAlternateTotal3			is an InternationalAmount
				LocalProjectTotal				is an InternationalAmount
				LocalReportTotal1    			is an InternationalAmount
				LocalReportTotal2    			is an InternationalAmount
				LocalReportTotal3				is an InternationalAmount
				LocalReportTotal4				is an InternationalAmount
				LocalReportTotal5				is an InternationalAmount

				LocalInterfacedDistributionsCount		is Numeric 10

			Instance Selection
				where (RunGroup	= PrmRunGroup
				and    (PrmCompany            			  not entered
				or      Company	= PrmCompany)
				and    (PrmVendor            			  not entered
				or      Vendor	= PrmVendor)
				and    (PrmVendorGroup					not entered		
				or      Company.PayablesCompany.VendorGroup = PrmVendorGroup))

			Sort Order
				RunGroup
				Company
				Vendor
				OldVendor
				EDINumber
				Invoice
				Suffix
				Sequence

			Action Rules

				Empty Set Rules
						
					invoke PostLoadInterface MatchInvoiceImport
						invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						invoked.PrmRunGroup					= PrmRunGroup
						invoked.PrmCompany					= PrmCompany
						invoked.PrmVendor					= PrmVendor
						invoked.PrmProcessLevel				= PrmProcessLevel
						invoked.PrmAuthorityCode			= PrmAuthorityCode
				        invoked.InvoiceProcess				= InvoiceProcess
						invoked.MatchPoint					= MatchPoint
						invoked.AllowMatchItemOrVendorItem			= AllowMatchItemOrVendorItem
						invoked.PrmInterfaceRun				= PrmInterfaceRun
						invoked.PrmVendorGroup				= PrmVendorGroup	

				RunGroup Set Rules
						
					Exit Rules
						LocalResultID					= PrmInterfaceRun
						invoke Update LocalInterfaceResultsRel
							invoked.InterfacedDistributionsCount		= LocalInterfacedDistributionsCount

						invoke PostLoadInterface MatchInvoiceImport
							invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup					= PrmRunGroup
							invoked.PrmCompany					= PrmCompany
							invoked.PrmVendor					= PrmVendor
							invoked.PrmProcessLevel				= PrmProcessLevel
							invoked.PrmAuthorityCode			= PrmAuthorityCode
					        invoked.InvoiceProcess				= InvoiceProcess
							invoked.MatchPoint					= MatchPoint
							invoked.AllowMatchItemOrVendorItem			= AllowMatchItemOrVendorItem
							invoked.PrmInterfaceRun				= PrmInterfaceRun
							invoked.PrmVendorGroup				= PrmVendorGroup	

				Suffix Set Rules
				
					Entrance Rules
			            initialize LocalTransactionTotal
			            initialize LocalFunctionalTotal
						initialize LocalAlternateTotal
						initialize LocalAlternateTotal2
						initialize LocalAlternateTotal3
						initialize LocalToFunctionalTotal
						initialize LocalToAlternateTotal
						initialize LocalToAlternateTotal2
						initialize LocalToAlternateTotal3
						initialize LocalProjectTotal
						initialize LocalReportTotal1
						initialize LocalReportTotal2
						initialize LocalReportTotal3
						initialize LocalReportTotal4
						initialize LocalReportTotal5
		 					
		                ThisCompany			= Company
						ThisVendor			= Vendor
						ThisOldVendor		= OldVendor
						ThisEDINumber		= EDINumber
						ThisInvoice			= Invoice
						ThisSuffix			= Suffix

						ThisMatchInvoiceImport = ThisMatchInvoiceImportRel.MatchInvoiceImport

						
					Exit Rules

						if (LocalTransactionTotal entered)
							invoke FastUpdate ThisMatchInvoiceImport.PayablesInvoice
								invoked.TotalDistributionAmount.TransactionTotal		+= LocalTransactionTotal
								invoked.TotalDistributionAmount.FunctionalTotal			+= LocalFunctionalTotal
								invoked.TotalDistributionAmount.AlternateTotal			+= LocalAlternateTotal
								invoked.TotalDistributionAmount.AlternateTotal2			+= LocalAlternateTotal2
								invoked.TotalDistributionAmount.AlternateTotal3			+= LocalAlternateTotal3
								invoked.TotalDistributionAmount.ToFunctionalTotal		+= LocalToFunctionalTotal
								invoked.TotalDistributionAmount.ToAlternateTotal		+= LocalToAlternateTotal
								invoked.TotalDistributionAmount.ToAlternateTotal2		+= LocalToAlternateTotal2
								invoked.TotalDistributionAmount.ToAlternateTotal3		+= LocalToAlternateTotal3
								invoked.TotalDistributionAmount.ProjectTotal			+= LocalProjectTotal
								invoked.TotalDistributionAmount.ReportTotal1			+= LocalReportTotal1
								invoked.TotalDistributionAmount.ReportTotal2			+= LocalReportTotal2
								invoked.TotalDistributionAmount.ReportTotal3			+= LocalReportTotal3
								invoked.TotalDistributionAmount.ReportTotal4			+= LocalReportTotal4
								invoked.TotalDistributionAmount.ReportTotal5			+= LocalReportTotal5

				Instance Rules
					Select = false
					if     ((PrmProcessLevel            			  not entered
					or       MatchInvoiceImportRel.ProcessLevel		= PrmProcessLevel)
					and     (PrmAuthorityCode       			      not entered
					or       MatchInvoiceImportRel.AuthorityCode	= PrmAuthorityCode)
	                and      PayablesCompanyRel.Company.FinanceEnterpriseGroup         = PrmFinanceEnterpriseGroup)
						Select										= true	
						LocalInterfacedDistributionsCount			+= 1



					if  (TaxEntityRel.ThirdParty.TaxEngine
					and  MatchInvoiceImportRel.ProcessType.Basic
					and  MatchInvoiceImportRel.RecordInError)
						NextSentence = true
					else 
					if  (Select
					and  MatchInvoiceImportRel.PayablesInvoice exists)
					
						RecordInError 						= false
						ErrorOccurred						= false



						invoke CreateImport PayablesInvoiceDistribution
							assign result to ImportedDistribution
							resume on error
								ErrorOccurred		= true
								LocalErrorMessage	= error message
									display "Error=<LocalErrorMessage>"
							fill in fields from this instance
							fill in user fields from this instance
							invoked.Company								= Company
							invoked.PayablesInvoice						= MatchInvoiceImportRel.PayablesInvoice
							if (OldVendor entered
							and Vendor not entered)
								invoked.Vendor							= first VendorForLegacyVendorRel.Vendor
							else
								invoked.Vendor							= Vendor
							invoked.GLFinanceCodeBlock					= DistributionAccount
							invoked.GLTransactionAmount					= OriginalTransactionAmount
							invoked.DistributionAmount.CurrencyAmount	= OriginalTransactionAmount
								invoked.TransientAsset		= Asset
								invoked.TransientAssetTemplate = AssetTemplate
								invoked.TransientAssetDescription = AssetDescription
								if (AssetTemplate entered)
									invoked.AssetFlag		= "A"
								else
								if (Asset entered)
									invoked.AssetFlag		= "R"

							invoked.TransientItemQuantity				= ItemQuantity 
					        invoked.TransientTagNumber					= TagNumber
					        invoked.TransientInServiceDate				= InServiceDate
					        invoked.TransientPurchaseDate				= PurchaseDate
					        invoked.TransientModelNumber				= ModelNumber
					        invoked.TransientSerialNumber				= SerialNumber
					        invoked.TransientHoldAsset					= HoldAsset
					        invoked.TransientAssetGroup					= AssetGroup
					        invoked.TransientCombine					= Combine
					        invoked.TransientAccountingUnitGroup 		= AccountingUnitGroup

							invoked.TransientBypassErrorUpdate 			= true
	
						if (ErrorOccurred)
							RecordInError = true
							invoke SetError MatchInvoiceImportRel
								invoked.PrmErrorMessage					= LocalErrorMessage
										

						else
							LocalDistribution							= ImportedDistribution.PayablesInvoiceDistribution

				            if   (TaxCode entered
				            and   !TaxIndicator.Taxable
							and  ((TaxEntityRel.UseTaxCodeAccounts
							and    EntityTaxCodeRel.AccruedOrInvoiced.Accrued)
							or     (!TaxEntityRel.UseTaxCodeAccounts
							and    TaxEntityRel.AccruedOrInvoiced.Accrued)))
								NextSentence = true
							else

								LocalTransactionTotal   += LocalDistributionRel.DistributionAmount.CurrencyAmount
								LocalFunctionalTotal 	+= LocalDistributionRel.DistributionAmount.FunctionalAmount.EnteredCurrencyAmount
								LocalAlternateTotal  	+= LocalDistributionRel.DistributionAmount.AlternateAmount.EnteredCurrencyAmount
								LocalAlternateTotal2 	+= LocalDistributionRel.DistributionAmount.AlternateAmount2.EnteredCurrencyAmount
								LocalAlternateTotal3 	+= LocalDistributionRel.DistributionAmount.AlternateAmount3.EnteredCurrencyAmount
								LocalToFunctionalTotal 	+= LocalDistributionRel.DistributionAmount.ToFunctionalAmount.EnteredCurrencyAmount
								LocalToAlternateTotal  	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount.EnteredCurrencyAmount
								LocalToAlternateTotal2 	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount2.EnteredCurrencyAmount
								LocalToAlternateTotal3 	+= LocalDistributionRel.DistributionAmount.ToAlternateAmount3.EnteredCurrencyAmount
								LocalProjectTotal 		+= LocalDistributionRel.DistributionAmount.ProjectAmount.EnteredCurrencyAmount
								LocalReportTotal1    	+= LocalDistributionRel.DistributionAmount.ReportAmount1.EnteredCurrencyAmount
								LocalReportTotal2    	+= LocalDistributionRel.DistributionAmount.ReportAmount2.EnteredCurrencyAmount
								LocalReportTotal3    	+= LocalDistributionRel.DistributionAmount.ReportAmount3.EnteredCurrencyAmount
								LocalReportTotal4    	+= LocalDistributionRel.DistributionAmount.ReportAmount4.EnteredCurrencyAmount
								LocalReportTotal5    	+= LocalDistributionRel.DistributionAmount.ReportAmount5.EnteredCurrencyAmount

							invoke FastDelete
							
				            		
