Book is a BusinessClass
	owned by am
	prefix is AMB
	classic name is AMBOOK

	Ontology
		symbolic key is Book
			classic set name is AMBSET1

	Patterns
		implements StaticJava
		disable AuditIndex

	Persistent Fields

		Description
		Active                      is Boolean
			classic name is BOOK-STATUS
		Convention
		MethodSwitch                is Boolean
		Ledger
		PostCurrency				is Numeric 1
			default label is "TransactionCurrency"
			States
				Book	value is 0
				Asset	value is 1
		CurrencyTable
		Currency					is a FromCurrency
			default label is "BookCurrency"
			classic name is CURRENCY-CODE
		TransactionNumberOfDecimals is a CurrencyNumberOfDecimals
			classic name is TRAN-ND
		TrackDepreciationHistory    is Boolean
			classic name is TRANS-HISTORY
		DepreciationType            is AlphaUpper size 1
			classic name is DEPR-TYPE-FLAG
			States
				AssetLevel value is "A"
				ClassLevel value is "C"
		BookFormula 				is a ClassDepreciation compute in subject AssetBookFormula 
		ClassBalanceType			is Numeric 1
			States
				AverageBalance	value is 0
				EndingBalance	value is 1
		ReportingBasis
		AssetObjectID               is Numeric size 12
			classic name is OBJ-ID
		PostHistory					is Boolean
		Impairment					is Boolean
			default label is "UseForImpairment"
		ImpairmentBook				is a Book
		BookRegulation
		TaxBook						is Boolean		


	Context Fields
		Asset
		AssetType
		
	Transient Fields
		CompaniesAllowedForMQTest	is Boolean
		TotalTestPercent			is like Percent
		
	Local Fields
		LocalBook						is like Book
		LocalCompany					is like Company
		FutureBookCalendarExists 		is Boolean
		LocalYearEndDate 				is Date
		LocalAsset						is like Asset
		LocalFinanceEnterpriseGroup		is like FinanceEnterpriseGroup
		LocalGeneralLedgerCompanyGroup	is like GeneralLedgerCompanyGroup


		LocalAssetBookTransferPurgeCount		is Numeric 10
		SumOfQuarters							is an InternationalAmount
		Q4Total									is an InternationalAmount
		LocalFirstCompanyYear					is Year







		ByPassAttachRules				is Boolean
	Sets
		ByLedger
			Sort Order
				FinanceEnterpriseGroup
				Ledger
				Book

	Derived Fields
		BookClassComputedValue is a DerivedField
			type is like InternationalAmount
			restricted
			return first ClassDepreciationAssetRel.ReportWriterComputedAmount

		MultipleCompanies is a MessageField
			restricted
			"Companies"

		SystemCode is a DerivedField
			type is like GeneralLedgerSystemCode 
			restricted
			return "AM"

		ValidForCompany is a DerivedField
			type is like Company
			restricted
			return (CurrentCalendarRel.Company)

		NumberOfCompanies is a DerivedField
			type is Numeric 5
			restricted
			return (instance count of CurrentCalendarRel)
			
		MidQuarterTestResult	is a DerivedField
			type is Alpha 70
			CompaniesAllowedForMQTest = true
			if (SelectedBookCalendarsRel exists)
				LocalFirstCompanyYear = first SelectedBookCalendarsRel.CurrentPeriodYear
				for each SelectedBookCalendarsRel
					if (LocalFirstCompanyYear != each.CurrentPeriodYear)
						CompaniesAllowedForMQTest = false
						end for each
					else
						SumOfQuarters += (each.Q1 +each.Q2+ each.Q3 + each.Q4)
						Q4Total += each.Q4
				TotalTestPercent = (Q4Total/SumOfQuarters)
				if (CompaniesAllowedForMQTest)
					if (TotalTestPercent >= 40%)
						return ApplyMessage
					else
						return DoesNotApplyMessage
				else
					return ErrorMessage
			return ""				

		ApplyMessage			is a MessageField
			restricted
			"TotalTestPercentIs<TotalTestPercent>,_\Mid-\Quarter_\ConventionApplies"
			
		DoesNotApplyMessage		is a MessageField
			restricted
			"TotalTestPercentIs<TotalTestPercent>,_\Mid\Quarter_\ConventionDoesNotApply"		
			
		ErrorMessage		is a MessageField
			restricted
			"NotAllSelectedCompaniesShareTheSameFiscalYear"	
				










	Conditions
		IsActive
			restricted
			when (Active)

		IsTaxBook
			restricted
			when (TaxBook)
				
		BookEntered
			restricted
			classic name is BOOK-EXIST
			when (Book entered)

		BookCalendarExists
			restricted
			classic name is CALENDAR-EXIST
			when (CurrentCalendarRel exists)

		MultipleCalendarCompanies
			restricted
			when (NumberOfCompanies > 1)


		LastCurrentNextCalendarsExist
			restricted
	 		when (CurrentCalendarRel exists
			and FutureCalendarRel exists
			and HistoryCalendarRel exists)

		IsClassLevelDepreciation
			restricted
			classic name is CLASS-LVL-DEPR
			when (DepreciationType.ClassLevel)

		ClassDepreciationExists
			restricted
			classic name is DEPR-EXISTS
			when (first ClassDepreciationsRel exists)

		AssetBookTypeExists
			restricted
			classic name is RATES-EXIST
			when (first AssetBookTypesRel exists)

 		AssetsInUse  
 			restricted
 			when (BookCalendarHistRel exists)

 		AssetsExist
 			restricted
 			when (AssetBooksRel exists)

		IsClassLevel
			restricted
			when (DepreciationType.ClassLevel)

 		CurrentCalendarExists
 			restricted
 			when (CurrentCalendarRel exists)

		FutureCalendarExists
			restricted
			when (FutureCalendarRel exists)

		HistoryCalendarExists
			restricted
			when (HistoryCalendarRel exists)

		ThisRecordExists
 			restricted
 			when (BookRel exists)

 		IsPostingBook
 			restricted
 			when (PostingBookCalendars exists)

 		IsImpairmentBook
 			restricted
 			when (Impairment)

 		IsAssignedImpairmentBook
 			when (IsImpairmentBookRel exists)

 		IsRequiredBook
 			restricted
 			when (RequiredBookCalendarRel exists)

 		UnreleasedAssetBookExist
 			restricted
 			when (UnreleasedAssetBooksRel exists)

 		AssetExistOrImpairmentBookChanged
 			when (ImpairmentBook.AssetsExist
 			or	(old ImpairmentBook entered
			and ImpairmentBook changed
			and ImpairmentAssetBookRel exists))

		BookTracksHistory
			when (TrackDepreciationHistory)	

		ResetSelection
			when (SelectedBookCalendarsRel exists)
			
		CubeOnlineMode
			restricted
			when (GeneralLedgerTotalAnalyticCubeRel exist
			and	GeneralLedgerTotalAnalyticCubeRel.Mode = 0)
	
	Relations
		AssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Asset						= Asset
			  	related.Book						= Book

		BookTransactions
			one-to-many relation to AssetBookTransaction
			Field Mapping uses ByBookCompany
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Book					= Book


		AssetBookTypesRel
			one-to-many relation to AssetBookType
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Book                    = Book

		BookCalendarsRel
			one-to-many relation to BookCalendar
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Book 					= Book
				
		SelectedBookCalendarsRel
			one-to-many relation to BookCalendar
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Book 					= Book	
			Instance Selection
				where (related.Selected = true)		

		PostingBookCalendars
			one-to-many relation to BookCalendar
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Book 					= Book
 			Instance Selection
				where (related.PostingBook = true)

		ClassDepreciationsRel
			one-to-many relation to ClassDepreciation
			Field Mapping uses Set5
				related.Book = Book

		ClassDepreciationAssetRel
			one-to-many relation to ClassDepreciation
			Field Mapping uses Set2
				related.Company								= Asset.Company
				related.Book								= Book
				related.AssetType							= AssetType


		ClassDepreciationExpenseRel
			one-to-many relation to ClassDepreciation
			Field Mapping uses Set2
				related.Company								= Asset.Company
				related.Book								= Book
				related.AssetType							= AssetType


		ClassAccumulatedDepreciationRel
			one-to-many relation to ClassDepreciation
			Field Mapping uses Set2
				related.Company								= Asset.Company
				related.Book								= Book
				related.AssetType							= AssetType


		AssetCompanyRel
			one-to-one relation to AssetCompany
			Field Mapping uses symbolic key
				related.Company		= AssetType.Company

  		BookGroupsRel
			one-to-many relation to BookGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup

 		MethodRel is a Method set

 		BookCalendarHistRel is an BookCalendar set  
 			Instance Selection
 				where (related.ActiveCalendar)

 		CurrentImpairmentBookCalendarRel
 			one-to-many relation to BookCalendar
 			Field Mapping uses ByCompanyBookDate
 				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
 				related.Company			= LocalCompany
 				related.Book			= ImpairmentBook
				related.YearEndDate		= LocalYearEndDate
		  	Instance Selection
		  		where (related.IsCurrent)

 		CompanyImpairmentBookCalendarRel
 			one-to-many relation to BookCalendar
 			Field Mapping uses ByCompanyBookDate
 				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
 				related.Company			= LocalCompany
 				related.Book			= ImpairmentBook
		  	Instance Selection
		  		where (related.IsCurrent)

 		CurrentCalendarRel
 			one-to-many relation to BookCalendar
 			Field Mapping uses Set4
 				related.Company			= AssetType.Company
 				related.Book			= Book


		CurrentBookCalendarsRel
 			one-to-many relation to BookCalendar
 			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Book					= Book
			Instance Selection
				where (related.IsCurrent)

		AllCurrentBookCalendarsRel
 			one-to-many relation to BookCalendar
 			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
			Instance Selection
				where (related.IsCurrent)

		FutureCalendarRel is an BookCalendar set
 			Instance Selection
 				where (related.IsFuture)

 		FutureBookCalendarsRel
 			one-to-many relation to BookCalendar
			Field Mapping uses ByCompanyBookStatus
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Company					= LocalCompany
				related.Book					= LocalBook
				related.CalendarStatus			= "F"

		HistoryCalendarRel is an BookCalendar set
 			Instance Selection
 				where (related.IsHistory)

 		RequiredBookCalendarRel
			one-to-many relation to BookCalendar
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
				related.Book 					= Book
			Instance Selection
				where (related.RequiredBook)

 		AssetBooksRel
 			one-to-many relation to AssetBook
 			Field Mapping uses Set2
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book 						= Book

 		ImpairmentAssetBookRel
			one-to-many relation to AssetBook
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book 						= old ImpairmentBook

		UnreleasedAssetBooksRel
 			one-to-many relation to AssetBook
 			Field Mapping uses Set2
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book 						= Book
			Instance Selection
				where (related.Asset.Status.Unreleased)

		BookRel
			one-to-one relation to Book
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book						= Book

		AllNonImpairmentBooksRel 
			one-to-many relation to Book
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (!related.Impairment)

		ImpairmentBookRel
			one-to-one relation to Book
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book						= ImpairmentBook

		IsImpairmentBookRel
			one-to-many relation to Book
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.ImpairmentBook		= Book)

		ImpairmentBookUsedRel
			one-to-many relation to Book
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Book 				!= Book
				and related.ImpairmentBook			= ImpairmentBook)








		AssetBookPurgeRel
			one-to-many relation to AssetBook
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
			  	related.Book						= LocalBook
			Instance Selection
				include deleted records
				where(related.Asset					= LocalAsset
				or LocalAsset not entered)

		GeneralLedgerCompanyGroupMemberRel
			one-to-many relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup		= LocalGeneralLedgerCompanyGroup
			Instance Selection
				include deleted records

		GeneralLedgerCompanyGroupMembersRel   
			one-to-many relation to GeneralLedgerCompanyGroupMember
			Field Mapping uses symbolic key
				related.GeneralLedgerCompanyGroup		= LocalGeneralLedgerCompanyGroup

		AssetTransactionsRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
			Instance Selection
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				and   related.Book							= LocalBook)
				
		AssetTransactionSummaryPurgeRel
			one-to-many relation to AssetTransactionSummary
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.GeneralLedgerCompanyRel.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				and   related.Book												= LocalBook
				and  (LocalCompany not entered
				or 	  related.Company											= LocalCompany)
				and   LocalAsset not entered)
				
		AssetTransactionBeginningBalanceRel
			one-to-many relation to AssetTransactionBeginningBalance
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup							= LocalFinanceEnterpriseGroup
				and   related.Book												= LocalBook
				and  (LocalCompany not entered
				or 	  related.Company											= LocalCompany)
				and   LocalAsset not entered)

		AssetTransactionsPurgeRel
			one-to-many relation to AssetTransaction
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				and   related.Book							= LocalBook
				and  (LocalAsset not entered
				or 	  related.Asset							= LocalAsset)
				and   related.Company				    	= LocalCompany)
				
		AssetBookTransactionsPurgeRel
			one-to-many relation to AssetBookTransaction
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				and   related.Book							= LocalBook
				and  (LocalAsset not entered
				or 	  related.Asset							= LocalAsset)
				and   related.Company				    	= LocalCompany)
		
		AssetBookAdjustmentPurgeRel
			one-to-many relation to AssetBookAdjustment
			Field Mapping uses symbolic key
		  	Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
			  	and   related.Book							= LocalBook
				and  (LocalAsset not entered
				or 	  related.Asset							= LocalAsset))

		AssetBookAdjustmentsRel
			one-to-many relation to AssetBookAdjustment
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
			Instance Selection
				include deleted records
				where  (related.Book						= LocalBook
				and    (LocalAsset not entered
				or 	    related.Asset						= LocalAsset)
				and   	related.Asset.Company				= LocalCompany)

		AssetBookDisposalsRel
			one-to-many relation to AssetBookDisposal
			Field Mapping uses Set2
		  		related.Book								= LocalBook
		  	Instance Selection
				include deleted records
				where ((LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Asset.Company				= LocalCompany)

		AssetBookTransfersRel
			one-to-many relation to AssetBookTransfer
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
		  	Instance Selection
				include deleted records
				where  (related.Book						= LocalBook
				and    (LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Asset.Company				= LocalCompany)

		AssetRecapturesRel
			one-to-many relation to AssetRecapture
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
		  	Instance Selection
				include deleted records
				where  (related.Book						= LocalBook
				and    (LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Asset.Company				= LocalCompany)

		PersonalUseHistoriesRel
			one-to-many relation to PersonalUseHistory
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
		  	Instance Selection
				include deleted records
				where  (related.Book						= LocalBook
				and    (LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Asset.Company				= LocalCompany)

		AssetBookReinstatementsRel
			one-to-many relation to AssetBookReinstatement
			Field Mapping uses Set2
		  		related.Book								= LocalBook
		  	Instance Selection
				include deleted records
				where ((LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Asset.Company				= LocalCompany)

		PurgeAssetBooksRel
			one-to-many relation to AssetBook
			Field Mapping uses Set2
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
			  	related.Book								= LocalBook
		  	Instance Selection
				include deleted records
				where ((LocalAsset not entered
				or 		related.Asset						= LocalAsset)
		 		and   	related.Company				        = LocalCompany)

		AssetBookTransferPurgeRel
			one-to-many relation to AssetBookTransfer
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
			  	and related.Book							= LocalBook
			  	and (LocalAsset not entered
				or 	related.Asset							= LocalAsset))

		AssetRecapturePurgeRel
			one-to-many relation to AssetRecapture
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
			  	and related.Book							= LocalBook
			  	and (LocalAsset not entered
				or 	related.Asset							= LocalAsset))

		PersonalUseHistoryPurgeRel
			one-to-many relation to PersonalUseHistory
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where(related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
			  	and related.Book							= LocalBook
			  	and (LocalAsset not entered
				or 	related.Asset							= LocalAsset))

		AssetBookReinstatementPurgeRel
			one-to-many relation to AssetBookReinstatement
			Field Mapping uses symbolic key
			Instance Selection
				include deleted records
				where (related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				and related.Book							= LocalBook
				and (LocalAsset not entered
				or 	related.Asset							= LocalAsset))

		AssetBookHistoryPurgeRel
			one-to-many relation to AssetBookHistory
			Field Mapping uses Set2
				related.Book = LocalBook
			Instance Selection
				include deleted records
				where (related.Company		= LocalCompany
					and (LocalAsset not entered
						or related.Asset	= LocalAsset))

		AssetBookPeriodHistoryPurgeRel
			one-to-many relation to AssetBookPeriodHistory
			Field Mapping uses Set2
				related.Book = LocalBook
			Instance Selection
				include deleted records
				where (related.Company		= LocalCompany
					and (LocalAsset not entered
						or related.Asset	= LocalAsset))
						
		GeneralLedgerTotalAnalyticCubeRel
			one-to-one relation to AnalyticCube
	        Field Mapping uses AnalyticCubeSet
	        	related.BusinessClass = "GeneralLedgerTotal"
	        				

	Field Rules

		Currency
			required
			if (BookCalendarsRel exists)
				cannot be changed
					"CannotChangeCurrencyCode;CalendarsExist" 
			if (Currency changed)
				TransactionNumberOfDecimals = Currency.NumberOfDecimals

		Description
			required

        Convention
            if (DepreciationType.AssetLevel)
                required
                    "ConventionIsRequiredForAssetLevelDepreciation"
            else
                constraint (Convention.None)
                    "ConventionCannotBeEnteredForClassLevelDepreciation"

            if (Impairment)
                if (IsImpairmentBookRel exists)
                    constraint (IsImpairmentBookRel.Convention = Convention)
                        "ImpairmentBookConventionMustBeSameAsDepreciationBookConvention"
		Ledger
			if (old Ledger entered)
				if (AssetsInUse)
					cannot be changed
						"CannotBeChanged;BookHasAssetHistory"


			default to FinanceEnterpriseGroup.CoreLedger
			required

		PostCurrency
			if (AssetsInUse)
				cannot be changed
					"CannotBeChanged;BookHasAssetHistory"






 		TrackDepreciationHistory
 			if (TrackDepreciationHistory changed)
	 			if (IsImpairmentBookRel exists)
					constraint (IsImpairmentBookRel.TrackDepreciationHistory = TrackDepreciationHistory)
						"ImpairmentBookTrackDepreciationHistoryMustBeSameAsDepreciationBookTrackDepreciationHistory"

 		DepreciationType
 			required
 			initial value is DepreciationType.AssetLevel
 			default to DepreciationType.AssetLevel
 			if (DepreciationType.ClassLevel
 			and !CubeOnlineMode)
 				confirmation required
					"Warning:_\Depreciation_\TypeOf_\Class_\LevelRequires_\Infor\BI,YetTheConfigurationProperty_\Infor\BI_\ProtocolFor_\Infor\BIDoNotSetUpCorrectly"
			if (DepreciationType changed
			and old DepreciationType entered)
				if (AssetBook set exists)
					cannot be changed
						"CannotChangeDepreciationType;AssetsExistForThisBook" 

		ReportingBasis
			if (DepreciationType.ClassLevel)
				required
			else
				initialize

		Active
			initial value is true
			default to true
			if (!Impairment)
				if (Active changed
				and old Active = true)
					constraint (!IsRequiredBook)
						"RequiredBooksCannotBeInactive"
					constraint (!UnreleasedAssetBookExist)
						"BookCannotBeInactivated;UnreleasedAssetBooksExist"


			if (Active)
				if (ImpairmentBook entered)
					constraint (ImpairmentBook.Active)
						"ImpairmentBookMustBeActive"


		TransactionNumberOfDecimals
			default to Currency.NumberOfDecimals

		Impairment
			if (Impairment)
				constraint (!MethodSwitch)
					"ImpairmentBookCannotMethodSwitch"
			if (ImpairmentBook entered)
				cannot be entered
					"ADepreciationBookCannotAlsoBeAnImpairmentBook"
				constraint (ImpairmentBook not entered)
					"ABookCannotBeBothUsedForImpairmentAndBeAssignedAnImpairmentBook"
				constraint (PostHistory)
					"ImpairmentBooksMustPostHistory"
				constraint (!MethodSwitch)
					"ImpairmentBooksCannotUseMethodSwitch"
			if (AssetsExist)
				cannot be changed
					"CannotChange;AssetsAreAssignedToThisBook"
			if (IsImpairmentBookRel exists)
				constraint (Impairment = true)
					"CannotChangeImpairmentFlag;ThisBookIsAssignedAsAnImpairmentBook"

		ImpairmentBook
			if (ImpairmentBook entered)
				constraint (Impairment = false)
					"ABookCannotBeBothUsedForImpairmentAndBeAssignedAnImpairmentBook"
				constraint (ImpairmentBook.Impairment)
					"ImpairmentBookMustBeUsedForImpairment"
				constraint (ImpairmentBook.Ledger = Ledger)
					"ImpairmentBookLedgerMustBeSameAsDepreciationBookLedger"
				constraint (DepreciationType.AssetLevel)
					"DepreciationTypeMustBeAssetTypeForImpairment"
				constraint (ImpairmentBook.DepreciationType.AssetLevel)
					"ImpairmentBookDepreciationTypeMustBeAssetTypeForImpairment"
				constraint (ImpairmentBook.MethodSwitch = false)
					"ImpairmentBookCannotMethodSwitch"
				constraint (ImpairmentBook.Currency = Currency)
					"ImpairmentBookCurrencyMustBeSameAsDepreciationBook"
				constraint (ImpairmentBook.PostCurrency = PostCurrency)
					"ImpairmentBookTransactionCurrencyOptionMustBeSameAsDepreciationBookTransactionCurrencyOption"
				constraint (ImpairmentBook.Convention= Convention)
					"ImpairmentBookConventionMustBeSameAsDepreciationBookConvention"
				constraint (ImpairmentBook.Active = Active)
					"ImpairmentBookActiveStatusMustEqualDepreciationBookActiveStatus"
				constraint (ImpairmentBook.TrackDepreciationHistory = TrackDepreciationHistory)
					"ImpairmentBookTrackDepreciationHistoryMustBeSameAsDepreciationBookTrackDepreciationHistory"
				constraint (!ImpairmentBookUsedRel exists)
					"ImpairmentBookIsAlreadyAssignedToAnotherBook"
				for each CurrentBookCalendarsRel
					LocalCompany 		= each.Company
					LocalYearEndDate 	= each.YearEndDate
					constraint (CompanyImpairmentBookCalendarRel exists)
						"CurrentImpairmentBookCalendarForCompany<LocalCompany>DoesNotExist"
					constraint (CurrentImpairmentBookCalendarRel exists)
						"BookAndImpairmentBookCalendarsMustHaveTheSameEndDate"
					constraint (CurrentImpairmentBookCalendarRel.YearBeginDate = each.YearBeginDate)
						"BookAndImpairmentBookCalendarsMustHaveTheSameBeginDate"
					constraint (CurrentImpairmentBookCalendarRel.PostingBook = each.PostingBook)
						"BookAndImpairmentBookCalendarsMustHaveTheSamePostingStatus"
					constraint (CurrentImpairmentBookCalendarRel.DepreciationPeriodsPerYear = each.DepreciationPeriodsPerYear)
						"BookAndImpairmentBookCalendarsMustHaveTheSameNumberOfPeriodsPerYear"
					constraint (CurrentImpairmentBookCalendarRel.DepreciationPeriods = each.DepreciationPeriods)
						"BookAndImpairmentBookCalendarsMustHaveTheSameNumberOfPeriods"
					constraint (CurrentImpairmentBookCalendarRel.NumberOfDepreciationPeriodsClosed = each.NumberOfDepreciationPeriodsClosed)
						"BookAndImpairmentBookCalendarsMustHaveTheSameNumberOfPeriodsClosed"
					constraint (CurrentImpairmentBookCalendarRel.CloseBook = each.CloseBook)
						"TheCloseBookFlagOnTheBooksCurrentCalendarAndItsImpairmentBookMustHaveTheSameValue"
			if (AssetExistOrImpairmentBookChanged)
				cannot be changed
					"ImpairmentBookCannotBeChanged;ImpairedAssetsExist"

	Rule Blocks
		PurgeSelectedDetail
			AdjustmentCount								+= instance count of AssetBookAdjustmentsRel
			invoke AssetBookAdjustmentPurge AssetBookAdjustment
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetBookDisposalCount						+= instance count of AssetBookDisposalsRel
			invoke AssetBookDisposalPurge AssetBookDisposal
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetBookTransferCount					  	+= instance count of AssetBookTransfersRel
			invoke AssetBookTransferPurge AssetBookTransfer
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetRecaptureCount							+= instance count of AssetRecapturesRel
			invoke AssetRecapturePurge AssetRecapture
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			PersonalUseHistoryCount						+= instance count of PersonalUseHistoriesRel
			invoke PersonalUseHistoryPurge PersonalUseHistory
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetBookReinstatementCount					+= instance count of AssetBookReinstatementsRel
			invoke AssetBookReinstatementPurge AssetBookReinstatement
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetBookCount								+= instance count of PurgeAssetBooksRel
			invoke AssetBookPurge AssetBook
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				invoked.PrmCompany						= LocalCompany

			AssetBookPeriodHistoryCount					+= instance count of AssetBookPeriodHistoryPurgeRel

			AssetBookHistoryCount						+= instance count of AssetBookHistoryPurgeRel
			invoke AssetBookHistoryPurge AssetBookHistory
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmCompany						= LocalCompany
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				
		PurgeSelectedTransactions
			AssetTransactionCount						+= instance count of AssetTransactionsPurgeRel
			invoke AssetTransactionsPurge AssetTransaction
			 	invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmCompany						= LocalCompany
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption		
				
			AssetBookTransactionCount					+= instance count of AssetBookTransactionsPurgeRel
			invoke AssetBookTransactionsPurge AssetBookTransaction
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmCompany						= LocalCompany
				invoked.PrmAsset						= PrmAsset
				invoked.PrmBook							= PrmBook
				invoked.PrmPurgeOption					= PrmPurgeOption
				
			AssetTransactionSummaryCount				+= instance count of AssetTransactionSummaryPurgeRel
			invoke AssetTransactionSummaryPurge AssetTransactionSummary
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmCompany						= LocalCompany
				invoked.PrmBook							= PrmBook
				invoked.PrmAsset						= PrmAsset
				invoked.PrmPurgeOption					= PrmPurgeOption
				
			AssetTransactionBeginningBalanceCount		+= instance count of AssetTransactionBeginningBalanceRel
			invoke AssetTransactionBeginningBalancePurge AssetTransactionBeginningBalance
				invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				invoked.PrmCompany						= LocalCompany
				invoked.PrmBook							= PrmBook
				invoked.PrmAsset						= PrmAsset
				invoked.PrmPurgeOption					= PrmPurgeOption
			
		
	Attach Rules

		if(action type.Create or action type.Update or action type.Delete)
			if (parentcontext.name = "AssetBook")
				if (!Asset.AssetProcess.Disposal)
					constraint (Active)
						"BookIsInactive"

		if (parentcontext.name = "AssetBookType")
			constraint (Active)
				"BookIsInactive"

		if(action type.Create or action type.Update or action type.Delete)
			if (parentcontext.name = "AssetBookAdjustment")
				constraint (Active)
					"BookIsInactive"

		if (parentcontext.name = "AssetBookImport")
			constraint (Active)
				"BookIsInactive"









		if (parentcontext.name = "AssetBookRecalculation")
			constraint (Active)
				"BookIsInactive"

		if (parentcontext.name = "AssetBookRevaluation")
			constraint (Active)
				"BookIsInactive"

		if (parentcontext.name = "AssetBookAdditionalImport")
			constraint (Active)
				"BookIsInactive"

		if(action type.Create or action type.Update or action type.Delete)
				if (parentcontext.name = "AssetBookReinstatement")
					constraint (Active)
						"BookIsInactive"


	Actions
		Create is a Create Action

			Field Rules
				ImpairmentBook
					if (old ImpairmentBook entered)
						cannot be changed
							"ImpairmentBookAlreadyExists"
					constraint (!ImpairmentBookUsedRel exists)
						"ImpairmentBookIsAssignedToAnotherBook"


















































































































		ValidateFutureCalendar is an Instance Action
			restricted
			Parameters
				FinanceEnterpriseGroup
				PrmCompany				is like Company
				PrmBook					is like Book

			Entrance Rules
				LocalCompany 	= PrmCompany
				LocalBook		= PrmBook
			Action Rules
				if (FutureBookCalendarsRel exists)
					FutureBookCalendarExists = true
				else
					FutureBookCalendarExists = false
				constraint (FutureBookCalendarExists)
					"FutureBookCalendarIsRequiredForCompany<LocalCompany>Book<LocalBook>"




		Update is an Update Action


			Action Rules
				if (IsImpairmentBookRel exists)
					constraint (Impairment = true)
						"CannotChangeImpairmentFlag;ThisBookIsAssignedAsAnImpairmentBook"

			Exit Rules
				if (!Impairment)
					if (Active changed
					and old Active = true)
						if (ImpairmentBook entered)
							confirmation required
								"ImpairmentBookWillAlsoBeInactivated;SelectYesToContinue"
		   			 		invoke Update ImpairmentBook
								invoked.Active	= false


		Delete is a Delete Action
			Action Rules
				constraint (!AssetsInUse)
					"CannotDeleteBook;AssetsExist"                      
				constraint (!IsImpairmentBookRel exists)
					"CannotChangeImpairmentFlag;ThisBookIsAssignedAsAnImpairmentBook"

		Purge is a Purge Action
			restricted
								
		Reset	is an Instance Action
			valid when (ResetSelection)
			Action Rules
				invoke InitializeSelection SelectedBookCalendarsRel
						
		ProjectMidQuarterAmounts	is an Instance Action
			Action Rules
				invoke MQProjection CurrentBookCalendarsRel
																															
		BookPurge is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBook								is a Book
					default label is "Book"
					context of PrmFinanceEnterpriseGroup
				PrmCompany                 			is an AssetCompany
					default label is "Company"
				PrmCompanyGroup            			is a GeneralLedgerCompanyGroup
					default label is "CompanyGroup"
				PrmAsset							is an Asset
					default label is "Asset"
					context of PrmFinanceEnterpriseGroup

				PrmPurge                   is AlphaUpper size 1
					default label is "Purge"
					States
						All         		value is "A"
						AllWithTransactions value is "T"
						HistoryOnly 		value is "H"
				PrmPurgeOption								is Numeric 1
					default label is "ActionOption"
					States
						PurgeRecords 	value is 1
						ReportOnly		value is 2

			Parameter Rules
				PrmFinanceEnterpriseGroup
					LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				PrmBook
					required
					LocalBook = PrmBook
					constraint(not PrmBook.Active)
						"CannotPurgeActiveBook"
				PrmCompany
					if (PrmCompanyGroup not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					else
						cannot be entered
							"CannotEnterBothCompanyGroupAndCompany"
					LocalCompany = PrmCompany
				PrmCompanyGroup
					if (PrmCompany not entered)
						required
							"MustEnterEitherCompanyOrCompanyGroup"
					else
						cannot be entered
							"CannotEnterBothCompanyGroupAndCompany"
					LocalGeneralLedgerCompanyGroup = PrmCompanyGroup
				PrmAsset
					LocalAsset = PrmAsset
					if(PrmAsset entered)
						constraint(AssetBookPurgeRel exists)
							"Book_<PrmBook>DoesNotExistForAsset_<PrmAsset>"
				PrmPurge
					initial value is "A"
					default to "A"

			Instance Selection
				include deleted records
				where(FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
				and Book 								= PrmBook)

			Local Fields
				LocalActor									is an Actor
				LocalCounter								is Numeric 10
				LocalNewLine								is LPLText
				LocalNotificationDetails					is LPLText
				LocalParameterAsset							is like Asset
				LocalAdjustmentCount						is Numeric 10
				LocalAssetBookDisposalCount					is Numeric 10
				LocalAssetBookTransferCount					is Numeric 10
				LocalAssetRecaptureCount					is Numeric 10
				LocalPersonalUseHistoryCount				is Numeric 10
				LocalAssetBookReinstatementCount			is Numeric 10
				LocalAssetBookCount							is Numeric 10
				LocalAssetBookHistoryCount					is Numeric 10
				LocalAssetBookPeriodHistoryCount			is Numeric 10
				LocalAssetTransactionCount					is Numeric 10
				LocalAssetBookTransactionCount				is Numeric 10
				LocalAssetTransactionSummaryCount	    	is Numeric 10
				LocalAssetTransactionBeginningBalanceCount	is Numeric 10

			Accumulators
				AdjustmentCount
	 			AssetBookDisposalCount
				AssetBookTransferCount
				AssetRecaptureCount
				PersonalUseHistoryCount
				AssetBookReinstatementCount
				AssetBookCount
				AssetBookHistoryCount
				AssetBookPeriodHistoryCount
				AssetTransactionCount
				AssetBookTransactionCount
				AssetTransactionSummaryCount
				AssetTransactionBeginningBalanceCount

			Action Rules
				Empty Set Rules
					send notification
						to LocalActor
						description is "BookPurgeDetailsForFinanceEnterpriseGroup_<PrmFinanceEnterpriseGroup>_Book<PrmBook>"
						priority is high
						detail is "No_Book_records_to_process"
				Set Rules
					Entrance Rules
						LocalActor = actor
						LocalFinanceEnterpriseGroup 		= PrmFinanceEnterpriseGroup
						LocalBook 							= PrmBook
						LocalCompany 						= PrmCompany
						LocalGeneralLedgerCompanyGroup 		= PrmCompanyGroup
						LocalAsset 							= PrmAsset
					Exit Rules
						LocalAdjustmentCount						= AdjustmentCount
						LocalAssetBookDisposalCount					= AssetBookDisposalCount
						LocalAssetBookTransferCount					= AssetBookTransferCount
						LocalAssetRecaptureCount					= AssetRecaptureCount
						LocalPersonalUseHistoryCount				= PersonalUseHistoryCount
						LocalAssetBookReinstatementCount			= AssetBookReinstatementCount
						LocalAssetBookCount							= AssetBookCount
						LocalAssetBookHistoryCount					= AssetBookHistoryCount
						LocalAssetBookPeriodHistoryCount			= AssetBookPeriodHistoryCount
						LocalAssetTransactionCount					= AssetTransactionCount
						LocalAssetBookTransactionCount				= AssetBookTransactionCount
						LocalAssetTransactionSummaryCount			= AssetTransactionSummaryCount
						LocalAssetTransactionBeginningBalanceCount	= AssetTransactionBeginningBalanceCount
						
						LocalNewLine 	= "\u000a"
						if(PrmPurgeOption.PurgeRecords)
							LocalNotificationDetails = "Number of records that have been purged "+LocalNewLine
						else
							LocalNotificationDetails = "Number of records that are available to purge "+LocalNewLine
						LocalNotificationDetails += "AssetBookAdjustment: "+LocalAdjustmentCount+LocalNewLine + "AssetBookDisposal: "+LocalAssetBookDisposalCount+LocalNewLine
						LocalNotificationDetails += "AssetBookTransfer: "+LocalAssetBookTransferCount+LocalNewLine + "AssetRecapture: "+LocalAssetRecaptureCount+LocalNewLine
						LocalNotificationDetails += "PersonalUseHistory: "+LocalPersonalUseHistoryCount+LocalNewLine + "AssetBookReinstatement: "+LocalAssetBookReinstatementCount+LocalNewLine
						LocalNotificationDetails += "AssetBook: "+LocalAssetBookCount+LocalNewLine + "AssetBookHistory: "+LocalAssetBookHistoryCount+LocalNewLine
						LocalNotificationDetails += "AssetBookPeriodHistory: "+LocalAssetBookPeriodHistoryCount+LocalNewLine
						LocalNotificationDetails += "AssetTransaction: "+LocalAssetTransactionCount+LocalNewLine + "AssetBookTransaction: "+LocalAssetBookTransactionCount+LocalNewLine
						LocalNotificationDetails += "AssetTransactionSummary: "+LocalAssetTransactionSummaryCount+LocalNewLine + "AssetTransactionBeginningBalance: "+LocalAssetTransactionBeginningBalanceCount+LocalNewLine

						send notification
							to LocalActor
							description is "BookPurgeDetailsForFinanceEnterpriseGroup_<PrmFinanceEnterpriseGroup>_Book<PrmBook>"
							priority is high
							detail is "<LocalNotificationDetails>"
				Instance Rules
					if(PrmPurge.All)

						if (PrmCompanyGroup entered)
							LocalGeneralLedgerCompanyGroup 			= PrmCompanyGroup
							for each GeneralLedgerCompanyGroupMembersRel
								LocalCompany						= each.Company
								include PurgeSelectedDetail

						else
							LocalCompany							= PrmCompany
							display "B_1166LocalCompany<LocalCompany>"
							include PurgeSelectedDetail

					else
					if (PrmPurge.AllWithTransactions)
					
						if (PrmCompanyGroup entered)
							LocalGeneralLedgerCompanyGroup 			= PrmCompanyGroup
							for each GeneralLedgerCompanyGroupMembersRel
								LocalCompany						= each.Company
								include PurgeSelectedTransactions
								include PurgeSelectedDetail

						else
							LocalCompany							= PrmCompany
							include PurgeSelectedTransactions
							include PurgeSelectedDetail
					
					else
						if (PrmCompanyGroup entered)
							for each GeneralLedgerCompanyGroupMembersRel
								LocalCompany							= each.Company

								AssetBookHistoryCount					+= instance count of AssetBookHistoryPurgeRel
								AssetBookPeriodHistoryCount				+= instance count of AssetBookPeriodHistoryPurgeRel


								invoke AssetBookHistoryPurge AssetBookHistory
									invoked.PrmFinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
									invoked.PrmCompany					= LocalCompany
									invoked.PrmAsset					= PrmAsset
									invoked.PrmBook						= PrmBook
									invoked.PrmPurgeOption				= PrmPurgeOption
						else

							AssetBookHistoryCount						= instance count of AssetBookHistoryPurgeRel
							AssetBookPeriodHistoryCount					= instance count of AssetBookPeriodHistoryPurgeRel
							invoke AssetBookHistoryPurge AssetBookHistory
								invoked.PrmFinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
								invoked.PrmCompany						= LocalCompany
								invoked.PrmAsset						= PrmAsset
								invoked.PrmBook							= PrmBook
								invoked.PrmPurgeOption					= PrmPurgeOption

					if(CurrentBookCalendarsRel not exists
					and BookTransactions not exists
					and AssetTransactionsRel not exists
					and AssetBookPurgeRel not exists)
						invoke Purge


