ContractEventWorksheet is a BusinessClass
    owned by po
    prefix is CMEW

	Ontology
		symbolic key is ContractEventWorksheet
		
    Persistent Fields
    	Item			
 		ItemDescription			is Alpha size 30
 		ItemType				is Alpha size 1
 		ServiceCode				is Alpha size 1
 		UOM						is a UnitOfMeasure
 		ManufacturerInformation
 		PurchaseType 		 	is Numeric size 1
    		States
    			Contract     value is 2
    			Blanket      value is 3
    			Standing     value is 4
    			CatalogQuote value is 5
    			Service 	 value is 6
    			NoOutput     value is 7
 		CommodityCode
 		AmountServiceSequence   is Numeric size 21
 	
 	Local Fields
 		LocalCompany			is a SourcingCompany
 		LocalSourcingEvent		is a SourcingEvent
 		LocalArticle			is like Article
 		LocalQuestion			is like Question
 		LocalContact			is like Employee
 		LocalContactType		is like PurchasingContactType
				
 	Sets
 		ByContractLine
 			indexed
 		 	Sort Order
 		 		ContractGroup
	 		 	Contract
	 		 	ContractLine

	Field Rules
		Actor
			Actor = actor
	
	Conditions
		
		SpecialOrServiceItem
			when (ContractLine.SourcingItemType = "S"
			or    ContractLine.SourcingItemType = "X")
	
	Relations
		SourcingEventArticleRel
			one-to-many relation to SourcingEventArticle
			Field Mapping uses ByArticle
				related.Company						= LocalCompany
				related.SourcingEvent 				= LocalSourcingEvent
				related.Article						= LocalArticle
		
		SourcingEventQuestionRel
			one-to-many relation to SourcingEventQuestion
			Field Mapping uses ByQuestion
				related.Company						= LocalCompany
				related.SourcingEvent 				= LocalSourcingEvent
				related.Question					= LocalQuestion
				
		SourcingEventContactRel
			one-to-many relation to SourcingEventContact
			Field Mapping uses ByContactType
				related.Company						= LocalCompany
				related.SourcingEvent 				= LocalSourcingEvent
				related.ContactType					= LocalContactType
				related.Contact						= LocalContact
				
		ContractLineRel
			one-to-one relation to ContractLine
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
        		related.Contract		= Contract
        		related.ContractLine	= ContractLine
        		
        ContractParticipantRel
        	one-to-many relation to ContractParticipant
        	Field Mapping uses symbolic key
        		related.ContractGroup  	= ContractGroup
        		related.Contract     	= Contract

 	Actions
 		Create is a Create Action
 			restricted
 			 		
 		Delete is a Delete Action
			restricted
			
		RemoveSelectedLines is a Delete Action
			default label is "RemoveSelectedLine"
		
		CreateEvent is a Set Action
			run in foreground
			completion message is "Event#<ResultSourcingEvent.SourcingEvent>HasBeenCreated"
			Parameters
				Company						is a SourcingCompany
				ApplyTemplate				is a SourcingEvent
    			NewName						is a Description
				NewDescription				is Text
				NewEventReference			is a Description
				NewSourcingEventType		is a SourcingEventType
				NewBuyer					is a Buyer
				NewCurrencyCode				is a Currency
				NewAllowResponseInOtherCurrency is Boolean
				NewCategory					is a Category
				NewSubCategory				is a SubCategory
				NewPostingOptions			is a PostingOptions
				NewCreateAmendments			is Boolean
				NewOnlyNotifyResponders		is Boolean
				NewAllowSupplierQandA		is Boolean
				NewAllowAddOnCharge			is Boolean
				NewRequireBidBond			is Boolean
				NewBidBondPercent			is Numeric size 2
				NewTwoStepBidding			is Numeric size 1
					States
						Separate value is 1
							default label is "TechnicalProposalSubmittedSeparatelyFromBidAmounts"
						Combined value is 2
							default label is "TechnicalProposalAndBidAmountsSubmittedAtTheSameTime"
				NewBestAndFinalOffer		is Boolean
				NewInformalQuote			is Boolean
				NewPreviewDate				is TimeStamp
				NewOpenDate					is TimeStamp
				NewCloseDate				is TimeStamp
				NewQandAOpenDate			is TimeStamp
				NewQandACloseDate			is TimeStamp
				NewDisputeCloseDate			is TimeStamp
				NewDefaultEffectiveDate		is Date
				NewDefaultExpirationDate	is Date

			Parameter Rules
				Company
					required
					if (Company entered)
						confirmation required
							"EventWillBeCreatedForAllLinesInList;DoYouWishToContinue?"
				ApplyTemplate
					constraint (ApplyTemplate.IsTemplate)
		    			"MustSelectATemplate"
					constraint (!ApplyTemplate.SourcingEventLine set exists)
						"CanOnlyApplyTemplateWithNoLines"
				NewName
    				required
    				initial value is ApplyTemplate.Name
    				if (ApplyTemplate entered) 
    					default to ApplyTemplate.Name
				NewDescription
					initial value is ApplyTemplate.Description
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.Description
				NewEventReference
					initial value is ApplyTemplate.EventReference
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.EventReference
				NewSourcingEventType
					initial value is ApplyTemplate.SourcingEventType
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.SourcingEventType
				NewCurrencyCode
					initial value is ApplyTemplate.CurrencyCode
					if (ApplyTemplate entered)
						default to ApplyTemplate.CurrencyCode
				NewAllowResponseInOtherCurrency
					initial value is ApplyTemplate.AllowResponseInOtherCurrency
				NewBuyer
					initial value is ApplyTemplate.Buyer
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.Buyer
				NewCategory
					initial value is ApplyTemplate.Category
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.Category
				NewSubCategory
					initial value is ApplyTemplate.SubCategory
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.SubCategory
				NewPostingOptions
					initial value is ApplyTemplate.PostingOptions
    				if (ApplyTemplate entered)
    					default to ApplyTemplate.PostingOptions
				NewCreateAmendments
					initial value is ApplyTemplate.CreateAmendments
				NewOnlyNotifyResponders
					initial value is ApplyTemplate.OnlyNotifyResponders
				NewAllowSupplierQandA
					initial value is ApplyTemplate.AllowSupplierQandA
				NewAllowAddOnCharge
					initial value is ApplyTemplate.AllowAddOnCharge
				NewInformalQuote
					initial value is ApplyTemplate.InformalQuote
				NewRequireBidBond
					initial value is ApplyTemplate.RequireBidBond
				NewBidBondPercent
					initial value is ApplyTemplate.BidBondPercent
				NewTwoStepBidding
					initial value is ApplyTemplate.TwoStepBidding
				NewBestAndFinalOffer
					initial value is ApplyTemplate.BestAndFinalOffer

			Results
				ResultSourcingEvent is a SourcingEvent view

			Local Fields
				SavedSourcingEvent			is a SourcingEvent view
				SavedSourcingEventLine		is a SourcingEventLine view
				TotalPercent				is a Percent
				DistributionCount			is Numeric size 10
				NumberOfDistributions		is Numeric size 10
				LocalSourcingEventArticle	is a SourcingEventArticle view
				LocalSourcingEventTerm		is a SourcingEventTermAndCondition view
				LocalSourcingEventQuestion	is a SourcingEventQuestion view
				LocalContract				is a Contract 
			
			Instance Selection
				where (Actor			= actor
				and    ContractGroup	= Company.SourcingGroup)
			
			Sort Order
				Item
				ItemDescription 				
		 		ItemType		
		 		ServiceCode	
		 		AmountServiceSequence			
		 		UOM				
		 		PurchaseType					
		 		CommodityCode
			
			Accumulators
				TotalQuantity
				CombinedLines
				CombinedDistributionLines
				
			Action Rules
			
				Set Rules
				
					Exit Rules
						ResultSourcingEvent = SavedSourcingEvent
				
					Entrance Rules
					
						invoke Create Draft SourcingEvent
							assign result to SavedSourcingEvent
							
							invoked.CreateByCopy 			= true
		    				invoked.CreateFromLibrary 		= true
							invoked.Company 				= Company
							invoked.Name					= NewName						
							invoked.Description				= NewDescription				
							invoked.EventReference			= NewEventReference			
							invoked.SourcingEventType 		= NewSourcingEventType		
							invoked.CurrencyCode            = NewCurrencyCode
							invoked.AllowResponseInOtherCurrency = NewAllowResponseInOtherCurrency
							if (NewBuyer entered)
								invoked.Buyer 				= NewBuyer
							else
								invoked.Buyer				= actor.context.Buyer										
							invoked.Category				= NewCategory
							invoked.SubCategory				= NewSubCategory
							invoked.PostingOptions			= NewPostingOptions
							invoked.CreateAmendments		= NewCreateAmendments
							invoked.OnlyNotifyResponders	= NewOnlyNotifyResponders
							invoked.AllowSupplierQandA		= NewAllowSupplierQandA
							invoked.AllowAddOnCharge		= NewAllowAddOnCharge
							invoked.InformalQuote			= NewInformalQuote
							invoked.RequireBidBond			= NewRequireBidBond
							invoked.BidBondPercent			= NewBidBondPercent
							invoked.TwoStepBidding			= NewTwoStepBidding
							invoked.BestAndFinalOffer		= NewBestAndFinalOffer
							invoked.PreviewDate				= NewPreviewDate
							invoked.OpenDate				= NewOpenDate
							invoked.CloseDate				= NewCloseDate
							invoked.QandAOpenDate			= NewQandAOpenDate
							invoked.QandACloseDate			= NewQandACloseDate
							invoked.DisputeCloseDate		= NewDisputeCloseDate

							if (ApplyTemplate entered)
								fill in fields from ApplyTemplate
							else
							if (!ApplyTemplate entered)
								invoked.VendorItemProcessing = Company.VendorItemProcessing 
							
								
						if (ApplyTemplate entered)
							for each ApplyTemplate.SourcingEventQuestionByDisplayRel 
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventQuestion set
									assign result to LocalSourcingEventQuestion
									fill in fields from each
								
								for each each.SourcingEventQuestionValue set 
									invoke CreateDisplay LocalSourcingEventQuestion.SourcingEventQuestion.SourcingEventQuestionValue set
										fill in fields from each
						
							for each ApplyTemplate.ActiveSourcingEventArticlesRel
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventArticle set
									assign result to LocalSourcingEventArticle
									fill in fields from each

								for each each.ActiveSourcingEventTermAndConditionRel
									invoke Create LocalSourcingEventArticle.SourcingEventArticle.SourcingEventTermAndCondition set
										assign result to LocalSourcingEventTerm
										fill in fields from each
										if (each.TermAndConditionNumber entered)
											invoked.AllowModification		= each.TermAndConditionNumber.AllowModification
										else
											invoked.AllowModification		= true
									
									for each each.SourcingEventTermAndConditionAttachment set		
										invoke Create LocalSourcingEventTerm.SourcingEventTermAndCondition.SourcingEventTermAndConditionAttachment set
											fill in fields from each

							for each ApplyTemplate.SourcingEventMeeting set 
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventMeeting set
									fill in fields from each
							
							for each ApplyTemplate.SourcingEventAttachment set 
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventAttachment set
									fill in fields from each
							
							for each ApplyTemplate.SourcingEventContact set 
								if (each.Contact entered)
									invoke CreateAdHocContact SavedSourcingEvent.SourcingEvent.SourcingEventContact set
										fill in fields from each
								else
									invoke CreateContactFromEmployee SavedSourcingEvent.SourcingEvent.SourcingEventContact set
										fill in fields from each
							
							for each ApplyTemplate.SourcingEventComment set 
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventComment set
									fill in fields from each
									
							for each ApplyTemplate.SourcingEventCommodities set 
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventCommodities set
									fill in fields from each
				
				CommodityCode Set Rules
				
					Entrance Rules
						
						invoke Create Draft SavedSourcingEvent.SourcingEvent.SourcingEventLine set 
							assign result to SavedSourcingEventLine
							invoked.Name						  = ItemDescription
							invoked.ItemNumber          		  = ContractLine.ItemNumber
							if (SpecialOrServiceItem)
								invoked.Description               = ItemDescription
							invoked.ItemDescription				  = ItemDescription
							invoked.ItemDescription2			  = ContractLine.ItemDescription2
							invoked.ItemDescription3              = ContractLine.ItemDescription3
							invoked.ItemType					  = ContractLine.SourcingItemType
							invoked.ServiceCode					  = ServiceCode
							invoked.UOM.UnitOfMeasure			  = UOM
							invoked.ManufacturerInformation		  = ManufacturerInformation
							invoked.DistributionType			  = "Percent"
							invoked.OutputType					  = Contract.SourcingOutputType
							invoked.CommodityCode				  = CommodityCode
							invoked.GlobalTradeItemNumber		  = ContractLine.GlobalTradeItemNumber
							invoked.UnspscCode                    = ContractLine.UNSPSCCode
							invoked.DefaultContractType           = Contract.ContractType
							invoked.DefaultContractSubType        = Contract.ContractSubtype
							invoked.DefaultContractClass          = Contract.ContractClassification
							invoked.DefaultContractSubClass       = Contract.ContractSubclassification
							if (Contract.ScheduleFrequency        > 0)
								if (Contract.ScheduleFrequency    = 1)
									invoked.DefaultScheduleFrequency = "W"								
								if (Contract.ScheduleFrequency    = 2)
									invoked.DefaultScheduleFrequency = "B"
								if (Contract.ScheduleFrequency    = 3)
									invoked.DefaultScheduleFrequency = "M"
								if (Contract.ScheduleFrequency    = 4)
									invoked.DefaultScheduleFrequency = "Q"
							else
								initialize invoked.DefaultScheduleFrequency
							invoked.DefaultMaxReleaseNumber       = Contract.MaximumReleaseNumber
							invoked.DefaultEffectiveDate		  = NewDefaultEffectiveDate
							invoked.DefaultExpirationDate		  = NewDefaultExpirationDate
							if (PurchaseType.Standing)
								invoked.DefaultParticipant.Company  = first ContractParticipantRel.ContractParticipant.ParticipantLocation.Company
								invoked.DefaultParticipant.Location  = first ContractParticipantRel.ContractParticipant.ParticipantLocation.Location
														
							if (ApplyTemplate entered)
								invoked.TemplateApplied			= true
															
					Exit Rules
					
						invoke UpdateLineFromWorksheet Draft SavedSourcingEventLine.SourcingEventLine
							if (invoked.ServiceCode.Amount)
								invoked.Quantity = 1
							else 
								invoked.Quantity = TotalQuantity 
						
						if (CombinedLines > 1
						and	SavedSourcingEventLine.SourcingEventLine.DistributionType.Percent)	
							DistributionCount = 0
							TotalPercent      = 0
							for each SavedSourcingEventLine.SourcingEventLine.SourcingEventLineDistribution set
								DistributionCount += 1
								invoke CmUpdate each
									if (DistributionCount = CombinedDistributionLines)
										invoked.Percent = 100% - TotalPercent
									else
										invoked.Percent = (each.Percent / CombinedLines)	
								TotalPercent += each.Percent
					
				Instance Rules
					NumberOfDistributions = 0
					
									
					invoke FastUpdateToEvent ContractLine set  
						invoked.ToEventCompany		= SavedSourcingEvent.Company
						invoked.ToEventNumber		= SavedSourcingEvent.SourcingEvent
						invoked.ToEventLine			= SavedSourcingEventLine.SourcingEventLine
																	
					
					if (LocalContract != Contract)
					
						LocalContract 		= Contract
						LocalCompany		= Company
						LocalSourcingEvent 	= SavedSourcingEvent.SourcingEvent
						
						for each Contract.ActiveSSArticles
							LocalArticle = each.Article
							
							if (!SourcingEventArticleRel exists
							or	!each.Article entered)
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventArticle set
									assign result to LocalSourcingEventArticle
									fill in fields from each
										except invoked.LastTermAndConditionDisplayOrder
									invoked.CMArticle				= true
									invoked.Active					= true							
									
								for each each.ActiveContractSSTermAndConditionRel
									invoke CreateFromTerm LocalSourcingEventArticle.SourcingEventArticle.SourcingEventTermAndCondition set
										assign result to LocalSourcingEventTerm
										fill in fields from each
											except invoked.DisplayOrder
											except invoked.LastChildTermAndConditionDisplayOrder
										invoked.SourcingEventTermAndCondition = each.ContractTermAndCondition
										if (each.TermAndCondition entered)
											invoked.AllowModification		= each.TermAndCondition.AllowModification
										else
											invoked.AllowModification		= true
										invoked.TermAndConditionNumber	= each.TermAndCondition
										invoked.CMTerm					= true
										invoked.Article					= each.ContractArticle.Article
										invoked.RepositoryModified		= each.Modified
										
									
									for each each.ContractTermAndConditionAttachment set	
										invoke CreateFromTerm LocalSourcingEventTerm.SourcingEventTermAndCondition.SourcingEventTermAndConditionAttachment set
											fill in fields from each
											invoked.SourcingEventTermAndConditionAttachment = each.ContractTermAndConditionAttachment
											
						for each Contract.NonRebateQuestionRel
							LocalQuestion = each.Question
							
							if ((!SourcingEventQuestionRel exists
							and  !each.CreatedFromQuestion entered)
							or   !each.Question entered)
								invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventQuestion set
									assign result to LocalSourcingEventQuestion
									fill in fields from each
										except invoked.DisplayOrder
									invoked.CMQuestion		= true
									
								for each each.ContractQuestionListValue set
									invoke Create LocalSourcingEventQuestion.SourcingEventQuestion.SourcingEventQuestionValue set
										fill in fields from each
										invoked.SourcingEventQuestionValue	= each.ContractQuestionListValue
							
						if (!SavedSourcingEvent.SourcingEvent.SourcingEventContact set exists)
							for each Contract.SSContacts
								LocalContactType = each.ContactType
								LocalContact 	 = each.Contact
								
								if (!SourcingEventContactRel exists
								or	!each.Contact entered)
									if (each.Contact entered)
										invoke CreateContactFromEmployee SavedSourcingEvent.SourcingEvent.SourcingEventContact set
											fill in fields from each
											invoked.PurchasingContact		= true
									else
										invoke CreateAdHocContact SavedSourcingEvent.SourcingEvent.SourcingEventContact set
											fill in fields from each
											invoked.PurchasingContact		= true
											
						for each Contract.SSComments
							invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventComment set
								fill in fields from each
								invoked.Title			= each.CommentTitle
								invoked.Comment			= each.Description
								if (each.CommentUsedFor.DisplayOnly)
									invoked.Type			= "O"
								else
								if (each.CommentUsedFor.PrintOnPurchaseOrder)
									invoked.Type			= "P"
								else
								if (each.CommentUsedFor.DisplayOnInvoice)
									invoked.Type			= "N"
								invoked.CMComment		= true
						
						for each Contract.SSAttachments
							invoke Create SavedSourcingEvent.SourcingEvent.SourcingEventAttachment set
								fill in fields from each
								invoked.CMAttachment    = true
									
					if (SavedSourcingEventLine.SourcingEventLine.AllowAddOnCharge)
						for each ContractLine.ContractLineAOC set
							invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineAOC set
								invoked.AOC		= each.AOC

					invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineSource set
						invoked.ProcurementGroup					= ContractGroup
						invoked.Vendor								= Contract.Supplier.Vendor
						invoked.PurchaseFromLocation				= Contract.SupplierSourceId.VendorLocation
						invoked.OriginCode							= "CM"
						invoked.SourceDocumentNumeric		      	= Contract
						invoked.OperatingCompany					= Company
						invoked.RequestingLocation					= ContractLine.BlanketStandingRequestingLocation.RequestingLocation
						invoked.LineNumber   						= ContractLine
						invoked.Quantity							= ContractLine.Quantity
						invoked.SupplierGroup						= ContractGroup
						invoked.Supplier							= Contract.Supplier
						
					TotalQuantity             += ContractLine.Quantity
					CombinedLines             += 1
					CombinedDistributionLines += NumberOfDistributions
					
					for each ContractLine.SSComments
						invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineComment set
							fill in fields from each
							invoked.Title				= each.CommentTitle
							invoked.Comment				= each.Description
							if (each.CommentUsedFor.DisplayOnly)
								invoked.Type				= "O"
							else
							if (each.CommentUsedFor.PrintOnPurchaseOrder)
								invoked.Type				= "P"
							else
							if (each.CommentUsedFor.DisplayOnInvoice)
								invoked.Type				= "N"
							invoked.CMComment			= true
					
					for each ContractLine.SSAttachments
						invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineAttachment set
							fill in fields from each
							invoked.CMAttachment        = true	
											
					invoke Delete

		AppendToEvent is a Set Action
			run in foreground		
			Parameters
				Company				is a SourcingCompany
				Event				is a SourcingEvent
    			
			Parameter Rules
				Company 
					required
					if (Company entered)
						confirmation required
							"EventLinesWillBeCreatedForAllLinesInList;DoYouWishToContinue?"
							
				Event
					required
					constraint (Event.Status.Draft)
		    			"EventMustBeInADraftStatus"
    				constraint (Event exists
    				and 		Event.IsEvent)
    					"EventDoesNotExist"
							
			Local Fields
            	SavedSourcingEventLine		is a SourcingEventLine view
				TotalPercent				is a Percent 
				DistributionCount   	    is Numeric size 10
				NumberOfDistributions   	is Numeric size 10
				LocalSourcingEventArticle	is a SourcingEventArticle view
				LocalSourcingEventTerm		is a SourcingEventTermAndCondition view
				LocalSourcingEventQuestion	is a SourcingEventQuestion view
				LocalContract				is a Contract
				
			Instance Selection
				where (Actor			= actor
				and    ContractGroup	= Company.SourcingGroup)
			
			Sort Order
				Item
				ItemDescription 				
		 		ItemType		
		 		ServiceCode	
		 		AmountServiceSequence			
		 		UOM				
		 		PurchaseType					
		 		CommodityCode
		 					
			Accumulators
				TotalQuantity
				CombinedLines
				CombinedDistributionLines
				
			Action Rules
			
				Set Rules
				
				CommodityCode Set Rules
				
					Entrance Rules
					
						invoke Create Draft SourcingEventLine
							assign result to SavedSourcingEventLine
							invoked.Company						= Company
							invoked.SourcingEvent				= Event
							invoked.Name						= ItemDescription
							invoked.ItemNumber          		= ContractLine.ItemNumber
							invoked.ItemDescription				= ItemDescription
							invoked.ItemDescription2			= ContractLine.ItemDescription2
							invoked.ItemDescription3            = ContractLine.ItemDescription3
							invoked.ItemType					= ContractLine.SourcingItemType
							invoked.ServiceCode					= ServiceCode
							invoked.UOM.UnitOfMeasure			= UOM
							invoked.ManufacturerInformation		= ManufacturerInformation
							invoked.DistributionType			= "Percent"
							invoked.OutputType					= Contract.SourcingOutputType
							invoked.CommodityCode				= CommodityCode
							invoked.GlobalTradeItemNumber		= ContractLine.GlobalTradeItemNumber
							invoked.UnspscCode                  = ContractLine.UNSPSCCode
							invoked.DefaultContractType           = Contract.ContractType
							invoked.DefaultContractSubType        = Contract.ContractSubtype
							invoked.DefaultContractClass          = Contract.ContractClassification
							invoked.DefaultContractSubClass       = Contract.ContractSubclassification
							invoked.DefaultScheduleFrequency      = Contract.ScheduleFrequency
							invoked.DefaultMaxReleaseNumber       = Contract.MaximumReleaseNumber
							if (PurchaseType.Standing)
								invoked.DefaultParticipant.Company  = first ContractParticipantRel.ContractParticipant.ParticipantLocation.Company
								invoked.DefaultParticipant.Location  = first ContractParticipantRel.ContractParticipant.ParticipantLocation.Location
															
					Exit Rules
					
						invoke UpdateLineFromWorksheet Draft SavedSourcingEventLine.SourcingEventLine
							if (invoked.ServiceCode.Amount)
								invoked.Quantity = 1
							else 
								invoked.Quantity = TotalQuantity 
						
						if (CombinedLines > 1
						and	SavedSourcingEventLine.SourcingEventLine.DistributionType.Percent)	
							DistributionCount = 0
							TotalPercent      = 0
							for each SavedSourcingEventLine.SourcingEventLine.SourcingEventLineDistribution set
								DistributionCount += 1
								invoke CmUpdate each
									if (DistributionCount = CombinedDistributionLines)
										invoked.Percent = 100% - TotalPercent
									else
										invoked.Percent = (each.Percent / CombinedLines)	
								TotalPercent += each.Percent
					
				Instance Rules
					NumberOfDistributions = 0
					
					invoke FastUpdateToEvent ContractLine set  
						invoked.ToEventCompany		= Company
						invoked.ToEventNumber		= Event
						invoked.ToEventLine			= SavedSourcingEventLine.SourcingEventLine
					
					if (LocalContract != Contract)
					
						LocalContract 		= Contract
						LocalCompany		= Company
						LocalSourcingEvent 	= Event
						
						for each Contract.ActiveSSArticles
							LocalArticle = each.Article
							
							if (!SourcingEventArticleRel exists
							or	!each.Article entered)
								invoke Create Event.SourcingEventArticle set
									assign result to LocalSourcingEventArticle
									fill in fields from each
										except invoked.LastTermAndConditionDisplayOrder
									invoked.CMArticle				= true							
									invoked.Active					= true	
									
								for each each.ActiveContractSSTermAndConditionRel
									invoke CreateFromTerm LocalSourcingEventArticle.SourcingEventArticle.SourcingEventTermAndCondition set
										assign result to LocalSourcingEventTerm
										fill in fields from each
											except invoked.DisplayOrder
											except invoked.LastChildTermAndConditionDisplayOrder
										if (each.TermAndCondition entered)
											invoked.AllowModification		= each.TermAndCondition.AllowModification
										else
											invoked.AllowModification		= true
										invoked.TermAndConditionNumber	= each.TermAndCondition
										invoked.CMTerm					= true
										invoked.Article					= each.ContractArticle.Article
										invoked.RepositoryModified		= each.Modified
							
									for each each.ContractTermAndConditionAttachment set		
										invoke CreateFromTerm LocalSourcingEventTerm.SourcingEventTermAndCondition.SourcingEventTermAndConditionAttachment set 
											fill in fields from each
																	
						for each Contract.NonRebateQuestionRel
							LocalQuestion = each.Question
							
							if ((!SourcingEventQuestionRel exists
							and  !each.CreatedFromQuestion entered)
							or   !each.Question entered)
								invoke Create Event.SourcingEventQuestion set
									assign result to LocalSourcingEventQuestion
									fill in fields from each
										except invoked.DisplayOrder
									invoked.CMQuestion		= true
									
								for each each.ContractQuestionListValue set
									invoke Create LocalSourcingEventQuestion.SourcingEventQuestion.SourcingEventQuestionValue set
										fill in fields from each
										invoked.SourcingEventQuestionValue	= each.ContractQuestionListValue
							
						for each Contract.SSContacts
							LocalContactType = each.ContactType
							LocalContact 	 = each.Contact
							
							if (!SourcingEventContactRel exists
							or 	!each.Contact entered)
								if (each.Contact entered)
									invoke CreateContactFromEmployee Event.SourcingEventContact set
										fill in fields from each
										invoked.PurchasingContact		= true
								else
									invoke CreateAdHocContact Event.SourcingEventContact set
										fill in fields from each
										invoked.PurchasingContact		= true
								
						for each Contract.SSComments
							invoke Create Event.SourcingEventComment set
								fill in fields from each
								invoked.Title			= each.CommentTitle
								invoked.Comment			= each.Description
								if (each.CommentUsedFor.DisplayOnly)
									invoked.Type			= "O"
								else
								if (each.CommentUsedFor.PrintOnPurchaseOrder)
									invoked.Type			= "P"
								else
								if (each.CommentUsedFor.DisplayOnInvoice)
									invoked.Type			= "N"
								invoked.CMComment		= true
									
					for each ContractLine.ContractLineDistribution set
						invoke CmCreate SavedSourcingEventLine.SourcingEventLine.SourcingEventLineDistribution set
							invoked.DistributionAccount       						= each.DistributionAccount
							invoked.Percent											= each.Percent
							
						NumberOfDistributions += 1
																
					if (SavedSourcingEventLine.SourcingEventLine.AllowAddOnCharge)
						for each ContractLine.ContractLineAOC set
							invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineAOC set
								invoked.AOC		= each.AOC

					invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineSource set
						invoked.ProcurementGroup					= ContractGroup
						invoked.Vendor								= Contract.Supplier.Vendor
						invoked.PurchaseFromLocation				= Contract.SupplierSourceId.VendorLocation
						invoked.OriginCode							= "CM"
						invoked.SourceDocumentNumeric	      		= Contract
						invoked.OperatingCompany					= Company
						invoked.RequestingLocation 					= ContractLine.BlanketStandingRequestingLocation.RequestingLocation
						invoked.LineNumber 							= ContractLine
						invoked.Quantity							= ContractLine.Quantity
						invoked.SupplierGroup						= ContractGroup
						invoked.Supplier							= Contract.Supplier
											
					TotalQuantity             += ContractLine.Quantity
					CombinedLines             += 1
					CombinedDistributionLines += NumberOfDistributions
					
					for each ContractLine.SSComments
						invoke Create SavedSourcingEventLine.SourcingEventLine.SourcingEventLineComment set
							fill in fields from each
							invoked.Title				= each.CommentTitle
							invoked.Comment				= each.Description
							if (each.CommentUsedFor.DisplayOnly)
								invoked.Type				= "O"
							else
							if (each.CommentUsedFor.PrintOnPurchaseOrder)
								invoked.Type				= "P"
							else
							if (each.CommentUsedFor.DisplayOnInvoice)
								invoked.Type				= "N"
							invoked.CMComment			= true
						
					invoke Delete		
