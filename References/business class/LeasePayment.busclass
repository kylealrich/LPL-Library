LeasePayment is a BusinessClass
    owned by lm
    prefix is LPH
    classic name is LMPAYHDR

    Ontology
        symbolic key is LeasePayment
            classic set name is LPHSET1
            classic name for Vendor is PMT-VENDOR

    Patterns
        implements StaticJava
        disable AuditIndex
		implements Archivable

    Persistent Fields
		LastPaymentNumber		 is a PaymentNumber
        Currency
            classic name is CURRENCY-CODE
        CurrencyNumberOfDecimals
            classic name is CURR-ND
        ProcessLevel			 is a PayablesProcessLevel
            classic name is PROC-LEVEL
        AccrualCode              is a PayablesAccrualCode
            classic name is ACCR-CODE
			default label is "PayablesAccrualCode"
        StraightLine	         is Boolean   
            classic name is STRT-LINE-FLAG
        StraightLineAmount       is an InternationalAmount
            classic name is STRT-LINE-AMT
        StraightLineOverride     is Boolean
            classic name is STRT-LINE-OVRD
        RemitToCode              is a VendorLocation
		ExternalPurchaseOrder	 is a PurchaseOrder
			default label is "PurchaseOrder"
		DoNotCreateAPInvoice	 is Boolean
			default label is "DoNotCreatePayablesInvoice"
		LeaseInvoiceAccrualAccount	is a FinanceCodeBlockFull
		LeasePaymentDueDay 		  is Numeric 2

	Transient Fields
        StraightLineAmountOverride      is an InternationalAmount
		LeasePaymentEOM 		  is Numeric 1
    		States
    			Yes				   value is 1
    			No 				   value is 2
			derive value from DerivedEOM

	Local Fields
		LocalModificationDate				is Date
		LocalLeaseROUAssetAmount			is an InternationalAmount
		LocalLeaseObligation				is an InternationalAmount
		LocalPaymentCount					is Numeric size 3
		LocalStraightLineAmount				is an InternationalAmount
		LocalCompletionMessage				is Text
		LocalCurrencyExchangeGroup			is a CurrencyExchangeGroup
		LocalBaseDeferrredRentAtAdoption	is an InternationalAmount

	Rule Blocks

		VerfiyLeasePaymentDueDay
			for each UnreleasedLeasePaymentRel
				if (LeasePaymentDueDay > Lease.EndDate day  
				and each.DueDate month 	= Lease.EndDate month
				and each.DueDate year 	= Lease.EndDate year)
					constraint (each.DueDate day = Lease.EndDate day)
						"<each.DueDate>:LeasePaymentInTheFinalMonthMustBeOnTheLeaseEndDate:<Lease.EndDate>"
				else
					if (LeasePaymentDueDay < Lease.BeginDate day 
					and each.DueDate month 	= Lease.BeginDate month
					and each.DueDate year 	= Lease.BeginDate year)
						constraint (each.DueDate day = Lease.BeginDate day)
							"<each.DueDate>:LeasePaymentExistWithADueDayNotEqualToTheLeasePaymentDueDay:<LeasePaymentDueDay>"
					else
						if (LeasePaymentDueDay = "31") 
							if (each.DueDate month ="1" or each.DueDate month  = "3" or each.DueDate month  = "5" or each.DueDate month  = "7" or each.DueDate month  = "8" or each.DueDate month  = "10" or each.DueDate month  = "12")
								constraint (each.DueDate day = "31")
									"<each.DueDate>:AllLeasePaymentsMustBeOnTheEndOfTheMonth"
							else
								if (each.DueDate month ="4" or each.DueDate month  = "6" or each.DueDate month  = "9" or each.DueDate month  = "11")
									constraint (each.DueDate day = "30")
										"<each.DueDate>:AllLeasePaymentsMustBeOnTheEndOfTheMonth"
								else
									if (each.IsLeapYear)
										constraint (each.DueDate day = "29")
											"<each.DueDate>:AllLeasePaymentsMustBeOnTheEndOfTheMonth"
									else
										constraint (each.DueDate day = "28")
											"<each.DueDate>:AllLeasePaymentsMustBeOnTheEndOfTheMonth"
						else
							if (LeasePaymentDueDay < "29") 
								constraint (each.DueDate day = LeasePaymentDueDay)
									"<each.DueDate>:LeasePaymentExistWithADueDayNotEqualToTheLeasePaymentDueDay:<LeasePaymentDueDay>"
							else
								if (each.DueDate month != "2") 
									constraint (each.DueDate day = LeasePaymentDueDay)
										"<each.DueDate>:LeasePaymentExistWithADueDayNotEqualToTheLeasePaymentDueDay:<LeasePaymentDueDay>"
								else
									if (each.IsLeapYear)
										constraint (each.DueDate day = "29")
											"<each.DueDate>:LeasePaymentExistWithADueDayNotEqualToTheLeasePaymentDueDay:<LeasePaymentDueDay>"
									else
										constraint (each.DueDate day = "28")
											"<each.DueDate>:LeasePaymentExistWithADueDayNotEqualToTheLeasePaymentDueDay:<LeasePaymentDueDay>"		

	Field Rules
	
		Vendor 


					
		ProcessLevel
			default to first DefaultProcessLevelRel.PayablesProcessLevel
			required
				"ProcessLevelIsRequired;DefineDefaultProcessLevelOnPayablesCompany"
		
		ExternalPurchaseOrder
			constraint (Vendor = ExternalPurchaseOrder.Vendor)
				"PurchaseOrderIsForADifferentVendor"
						
		StraightLine
			initial value is true				
			if (!Lease.LeaseClassification.Finance)
				if (Lease.Status.Released)
					cannot be changed
						"CannotChangeStraightLineOnReleasedLease"
				if (!StraightLine)
					initialize StraightLineAmount
			else
				StraightLine = false
					
		StraightLineAmount
			if (!Lease.LeaseClassification.Finance)
				if (Lease.Status.Released)
					cannot be changed
						"CannotChangeStraightLineAmountOnReleasedLease"
				if (!StraightLine)
					initialize StraightLineAmount
			else
				initialize StraightLineAmount

		Currency
			default to Lease.Currency
			
		CurrencyNumberOfDecimals
			default to Lease.CurrencyNumberOfDecimals		

		LeaseInvoiceAccrualAccount
            if (DoNotCreateAPInvoice)
				required
            		"IfDoNotCreateAPInvoiceSelectedLeaseInvoiceAccrualAccountRequired"

		LeasePaymentDueDay
			constraint (LeasePaymentDueDay > "0")
				"LeasePaymentDueDayMustBeBetween1And31,Enter31IfTheDueDateForTheLeasePaymentsIsEndOfTheMonth"
			constraint (LeasePaymentDueDay < "32")
				"LeasePaymentDueDayMustBeBetween1And31,Enter31IfTheDueDateForTheLeasePaymentsIsEndOfTheMonth"
			if (LeasePaymentEOM.Yes)
				LeasePaymentDueDay = "31"
			if (LeasePaymentDueDay entered and LeasePaymentDueDay != "31")
				LeasePaymentEOM = "2"
			if (LeasePaymentEOM.No)
				required
					"MustEnterAPaymentDueDayIfNotEndOfMonthPayment"

	Derived Fields

		DerivedRoundTo					is a DerivedField
    		type is Decimal 5.4
			restricted
    		if (CurrencyNumberOfDecimals = 2)
    			return .01
    		else
    		if (CurrencyNumberOfDecimals = 0)
    			return 1
    		else
    		if (CurrencyNumberOfDecimals = 3)
    			return .001
    		else
    		if (CurrencyNumberOfDecimals = 4)
    			return .0001

		DerivedBaseRoundTo is a DerivedField
    		type is Decimal 5.4
			restricted
    		if (Lease.BaseCurrency.NumberOfDecimals = 2)
    			return .01
    		else
    		if (Lease.BaseCurrency.NumberOfDecimals = 0)
    			return 1
    		else
    		if (Lease.BaseCurrency.NumberOfDecimals = 3)
    			return .001
    		else
    		if (Lease.BaseCurrency.NumberOfDecimals = 4)
    			return .0001

		RoundedStraightLineAmount			is a DerivedField
     		type is Decimal 24.8 
 			restricted

			RoundedStraightLineAmount	     = LocalStraightLineAmount
			round RoundedStraightLineAmount to nearest DerivedRoundTo
			return RoundedStraightLineAmount


	    					
		TotalPaymentAmounts	is a DerivedField
			type is like InternationalAmount
			restricted
			return (sum NonExecutoryCodePaymentRel.PaymentAmount)
			
		TotalNonExecPaymentAmount is a DerivedField
			type is like InternationalAmount

			return (sum NonExecutoryCodePaymentRel.PaymentPlusTaxAmount)

		BaseTotalNonExecPaymentAmount is a DerivedField
			type is like InternationalAmount
			return (sum NonExecutoryCodePaymentRel.BasePaymentPlusTaxAmount)

		ModificationTotalNonExecPaymentAmount is a DerivedField
			type is like InternationalAmount
			restricted
			LocalModificationDate = first ModificationInProgressRel.ModificationEffectiveDate 
			return (sum ModificationNonExecutoryCodePaymentRel.PaymentPlusTaxAmount)
			
		TotalNonExecPaymentCount is a DerivedField
			type is like InternationalAmount
			restricted
			if (Lease.EndingResidual
			or  Lease.HasEndingBargainPurchaseOption)
				LocalPaymentCount = (instance count of NonExecutoryCodePaymentRel)
				return LocalPaymentCount - 1
			else
				return (instance count of NonExecutoryCodePaymentRel)

		ModificationTotalNonExecPaymentCount is a DerivedField
			type is like InternationalAmount
			restricted
			LocalModificationDate = first ModificationInProgressRel.ModificationEffectiveDate
			return (instance count of ModificationNonExecutoryCodePaymentRel)
		
		NetIDCIncentiveAmount is a DerivedField
			type is like InternationalAmount
			restricted
			if (IsFirstPayment)
				return (Lease.InitialDirectCost.TransactionAmount + LeaseInitialDirectCostRel.BeginningIDC - Lease.DerivedLeaseIncentiveLeaseCurrency)
			else 
				return (Lease.InitialDirectCost.TransactionAmount + LeaseInitialDirectCostRel.InitialDirectCostTotal - Lease.DerivedLeaseIncentiveLeaseCurrency)
			
		NetUpfrontCastFlowAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (Lease.InitialDirectCost.TransactionAmount + LeaseInitialDirectCostRel.InitialDirectCostTotal - Lease.DerivedLeaseIncentiveLeaseCurrency + Lease.DownPayment.TransactionAmount)

		BaseNetUpfrontCastFlowAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (Lease.InitialDirectCost.BaseAmount.EnteredCurrencyAmount + LeaseInitialDirectCostRel.InitialDirectCostBaseTotal - Lease.DerivedLeaseIncentiveBaseCurrency + Lease.DownPayment.BaseAmount.EnteredCurrencyAmount)

		StraightLineCalculationAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (TotalNonExecPaymentAmount + NetUpfrontCastFlowAmount)

		BaseStraightLineCalculationAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (BaseTotalNonExecPaymentAmount + BaseNetUpfrontCastFlowAmount)

		TotalNonExecStraightLineAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (TotalNonExecPaymentAmount / TotalNonExecPaymentCount)
			
		TotalIDCIncentiveStraightLineAmount is a DerivedField
			type is like InternationalAmount
			restricted
			return (NetIDCIncentiveAmount / TotalNonExecPaymentCount)
				
		TotalStraightLineAmount is a DerivedField
			type is like InternationalAmount
			restricted
			TotalStraightLineAmount = ((TotalNonExecPaymentAmount + NetUpfrontCastFlowAmount + Lease.DeferredRentsAtAdoption) / TotalNonExecPaymentCount)
			round TotalStraightLineAmount to nearest DerivedRoundTo
			return TotalStraightLineAmount

		BaseTotalStraightLineAmount is a DerivedField
			type is like InternationalAmount
			restricted
			initialize LocalCurrencyExchangeGroup
			LocalCurrencyExchangeGroup.TransactionAmount 				= Lease.DeferredRentsAtAdoption
			LocalCurrencyExchangeGroup.BaseAmount.EnteredCurrencyRate 	= Lease.BaseCurrencyRate
			LocalCurrencyExchangeGroup.BaseAmount.ToCurrency			= Lease.BaseCurrency
			LocalBaseDeferrredRentAtAdoption								= LocalCurrencyExchangeGroup.BaseAmount.OutputCurrencyAmount			
			BaseTotalStraightLineAmount = ((BaseTotalNonExecPaymentAmount + BaseNetUpfrontCastFlowAmount + LocalBaseDeferrredRentAtAdoption) / TotalNonExecPaymentCount)
			round BaseTotalStraightLineAmount to nearest DerivedBaseRoundTo
			return BaseTotalStraightLineAmount

		ModificationStraightLineAmount is a DerivedField
			type is like InternationalAmount
			restricted
			ModificationStraightLineAmount = ((ModificationTotalNonExecPaymentAmount + LocalLeaseROUAssetAmount - LocalLeaseObligation) / ModificationTotalNonExecPaymentCount)
			round ModificationStraightLineAmount to nearest DerivedRoundTo
			return ModificationStraightLineAmount

		LeaseRepresentativeText is a StringField
			type is Text
			default label is "Lease"
			Lease " - " Lease.Description
			
		CompanyRepresentativeText is a StringField
			type is Text
			default label is "Company"
			Company " - " Company.Name
			
		VendorRepresentativeText is a StringField
			type is Text
			default label is "Vendor"
			Vendor " - " Vendor.VendorName
			
		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			if (RecordExists)
				return PaymentScheduleCardViewDisplay
			else
				return CreateMessage
				
		CreateMessage is a LabelField
			restricted
			"Create_NewLeasePaymentSchedule"
		
		PaymentScheduleCardViewDisplay is a LabelField
			"PaymentSchedule_-<Lease>"

		DeleteLeasePayemenShedule	is a MessageField
			restricted
			"DeleteCompletedSuccesfully"

		DeletePayementSheduleAmortizationMessage	is a MessageField
			restricted
			"DeleteComplete;AmortizationNeedsToBeRecalculated"

		DerivedEOM is a DerivedField
			type is Numeric 1
			if (LeasePaymentDueDay = "31")
				return "1"
			else
				if (LeasePaymentDueDay entered)
					return "2"


    Conditions
		
		RecordExists 
			restricted
			when (LeasePayment exists)
				
        IsStraightLine
        	restricted
            when (StraightLine)

		HasOnlyExecutoryCodePayments
			restricted
			when (ExecutoryCodePaymentRel exists
			and   !NonExecutoryCodePaymentRel exists)

		IsValidForActorContext
			restricted
			when (Company.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
		
		LessorPaymentSchedule
			restricted
			when (Vendor = Lease.Lessor)

		
		IsMonthToMonthRenewal
			restricted
			when (Lease.IsMonthToMonthRenewal)

		IsFirstPayment
			restricted
			when (Lease.BeginDate month = first NonExecutoryCodePaymentRel.DueDate month
			and   Lease.BeginDate year  = first NonExecutoryCodePaymentRel.DueDate year)

		LeasePaymentDueDayEntered
			when (LeasePaymentDueDay entered)

		IsEOMPayment
			when (LeasePaymentEOM.Yes)

		DoNotAllowUpdateLeasePaymentDueDay
			when (LeasePaymentDueDay entered
			and   NonExecutoryCodePaymentRel exists)
							
    Relations
        LeasePaymentDetailRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease

		AllLeasePaymentDetailRel 
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses Set3
                related.Company = Company
                related.Lease   = Lease
                
        LeasePaymentDetailForVendorRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor

		LeasePaymentDetailByDueDateRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor
                
        RecurringLeasePaymentDetailRel
            one-to-many relation to RecurringLeasePaymentDetail
            Field Mapping uses ByBeginDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor

		NonExecutoryCodePaymentRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and    related.LeasePaymentDetail.PaymentNumber entered)

		UnreleasedLeasePaymentRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses ByDueDate
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and    related.LeasePaymentDetail.PaymentNumber entered
				and    related.Released = false)

        ModificationNonExecutoryCodePaymentRel
			one-to-many relation to LeasePaymentDetail
            Field Mapping uses Set3
                related.Company  = Company
                related.Lease    = Lease
                related.DueDate >= LocalModificationDate
            Instance Selection
            	where (related.Vendor = Vendor
            	and	   related.LeasePaymentDetail.ExecutoryCostCode not entered
            	and    related.LeasePaymentDetail.PaymentNumber entered)
            	    	
		ExecutoryCodePaymentRel
			one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor
            Instance Selection
            	where (related.LeasePaymentDetail.ExecutoryCostCode entered
            	and    related.LeasePaymentDetail.PaymentNumber entered)
            	
		InvoicedPaymentsRel
            one-to-many relation to LeasePaymentDetail
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
                related.Vendor  = Vendor
            Instance Selection
            	where (related.Released)
		                
        DefaultProcessLevelRel
        	one-to-many relation to PayablesProcessLevel
        	Field Mapping uses symbolic key
        		related.Company		= Company
        	Instance Selection
        		where (related.DefaultProcessLevel)

		ModificationInProgressRel
			one-to-many relation to LeaseModification
			Field Mapping uses symbolic key
				related.Company		= Company
				related.Lease		= Lease
				related.Vendor		= Vendor				
			Instance Selection
				where (related.Status.Unreleased)

		LeaseInitialDirectCostRel
			one-to-many relation to LeaseInitialDirectCost
            Field Mapping uses symbolic key
                related.Company = Company
                related.Lease   = Lease
			
	Actions
		Create is a Create Action
			Entrance Rules
				constraint (Lease.EitherUnreleasedOrReleased)
					"CannotCreate;LeaseIs<Lease.Status>"
			Action Rules
				if (Lease.IsMonthToMonthRenewal)
					StraightLineOverride 		= false
					StraightLine				= false
				
				if (StraightLine)
		        	if (StraightLineAmountOverride = 0)
		        		StraightLineOverride 		= false
	    	    		LocalStraightLineAmount 	= TotalStraightLineAmount
					else
		        		StraightLineOverride 		= true
		        		LocalStraightLineAmount 	= StraightLineAmountOverride
		        	StraightLineAmount = RoundedStraightLineAmount
		
		RestrictedCreate is a Create Action
			restricted
			bypass field rules
			
		Update is an Update Action
			Entrance Rules
				constraint (Lease.EitherUnreleasedOrReleased)
					"CannotModify;LeaseIs<Lease.Status>"
			Action Rules
				if (Lease.IsMonthToMonthRenewal)
					StraightLineOverride 		= false
					StraightLine				= false
					
				if (!Lease.LeaseClassification.Finance
				and Lease.Status.Unreleased)
					if (StraightLine)
						if (StraightLineAmountOverride = 0)
							StraightLineOverride 		= false
							LocalStraightLineAmount 	= TotalStraightLineAmount
						else
							StraightLineOverride 		= true
							LocalStraightLineAmount 	= StraightLineAmountOverride
						StraightLineAmount = RoundedStraightLineAmount
			Exit Rules
				include VerfiyLeasePaymentDueDay


		RestrictedUpdate is an Update Action
			restricted
			bypass field rules								

		StraightLineUpdate is an Update Action
			restricted
			bypass field rules
			Action Rules
				if  (StraightLine
				and !StraightLineOverride
				and Vendor = Lease.Lessor)				
					LocalStraightLineAmount = TotalStraightLineAmount
					StraightLineAmount 		= RoundedStraightLineAmount

		ModificationStraightLineUpdate is an Instance Action
			restricted
			Parameters
				PrmLeaseROUAssetAmount	is an InternationalAmount
				PrmLeaseObligation		is an InternationalAmount
				
			Action Rules
				if  (StraightLine
				and !StraightLineOverride)
    	    		LocalLeaseROUAssetAmount = PrmLeaseROUAssetAmount
					LocalLeaseObligation = PrmLeaseObligation
					StraightLineAmount = ModificationStraightLineAmount
		
		ReplaceVendor is an Instance Action
			restricted
			Parameters
				VendorGroup
				NewVendor	is a Vendor
			Action Rules
				display "ReplacingVendorFrom<old Vendor>To<NewVendor>"
				invoke RestrictedCreate LeasePayment
					fill in fields from this instance
					invoked.Vendor		= NewVendor

				display "PmtDtl"
				for each LeasePaymentDetailForVendorRel
					invoke RestrictedCreate LeasePaymentDetail
						fill in fields from each
						invoked.Vendor	= NewVendor

				display "RecurPmt"
				for each RecurringLeasePaymentDetailRel
					invoke RestrictedCreate RecurringLeasePaymentDetail
						fill in fields from each
						invoked.Vendor	= NewVendor

			Exit Rules
				invoke ReplaceVendorDelete			 

		ReplaceVendorDelete is a Delete Action
			restricted
							
		Delete is a Delete Action
			completion message is "<LocalCompletionMessage>"
			Entrance Rules
				constraint (Lease.Status.Unreleased)
					"CannotDelete;LeaseIs<Lease.Status>"
				constraint (!InvoicedPaymentsRel exists)
					"CannotDelete;ReleasedPaymentsExist"
			Action Rules
				if (Lease.HasAmortizationSchedule
				and Lease.Lessor = Vendor)
					invoke RemoveAmortization Lease
					LocalCompletionMessage	= DeletePayementSheduleAmortizationMessage
				else
					LocalCompletionMessage = DeleteLeasePayemenShedule

		Purge is a Purge Action
			restricted
