AsyncAuditEntry is a BusinessClass
	owned by async
	prefix is AAE
	stored in environment

	Ontology
		symbolic key is AsyncAuditEntry

	Patterns
		disable Auditing
        disable EffectiveDated
        disable AsOfDateProcessing
        implements UniqueID
        implements CreateStamp
        implements IncrementalReplication
			indicator field is Archived
				replicate when false
					then set to true
		
	Persistent Fields
		ActionName is like BusinessAction
		InitatingActionName is like BusinessAction
		InvokingActionName is like BusinessAction
		Reference is BusinessObjectReference
		AuditLog is Text
		Archived is Boolean
	
	Conditions
		AsyncActionRequestEntry
			when (Reference.BusinessClassName = "AsyncActionRequest")
			
		AsyncActionRequestDrillIsValid
			when (AsyncActionRequestEntry and DrillIsValid and Reference(AsyncActionRequest) exists)
			
		AsyncActionTriggerEntry
			when (Reference.BusinessClassName = "AsyncActionTrigger")
			
		AsyncActionTriggerDrillIsValid
			when (AsyncActionTriggerEntry and DrillIsValid and Reference(AsyncActionTrigger) exists)
		
		AsyncQueueDefinitionEntry
			when (Reference.BusinessClassName = "AsyncQueueDefinition")
			
		AsyncQueueDefinitionDrillIsValid
			when (AsyncQueueDefinitionEntry and DrillIsValid and Reference(AsyncQueueDefinition) exists)
			
		AsyncQueueMappingEntry
			when (Reference.BusinessClassName = "AsyncQueueMapping")
			
		AsyncQueueMappingDrillIsValid
			when (AsyncQueueMappingEntry and DrillIsValid and Reference(AsyncQueueMapping) exists)
			
		AsyncQueueGroupEntry
			when (Reference.BusinessClassName = "AsyncQueueGroup")
			
		AsyncQueueGroupDrillIsValid
			when (AsyncQueueGroupEntry and DrillIsValid and Reference(AsyncQueueGroup) exists)
			
		AsyncSynchronizedGroupEntry
			when (Reference.BusinessClassName = "AsyncSynchronizedGroup")	
			
		AsyncSynchronizedGroupDrillIsValid
			when (AsyncSynchronizedGroupEntry and DrillIsValid and Reference(AsyncSynchronizedGroup) exists)
		
		AsyncBackgroundGroupEntry
			when (Reference.BusinessClassName = "AsyncBackgroundGroup")	
			
		AsyncBackgroundGroupDrillIsValid
			when (AsyncBackgroundGroupEntry and DrillIsValid and Reference(AsyncBackgroundGroup) exists)
			
		AsyncBlocklistEntry
			when (Reference.BusinessClassName = "AsyncBlocklist")	
			
		AsyncBlocklistDrillIsValid
			when (AsyncBlocklistEntry and DrillIsValid and Reference(AsyncBlocklist) exists)
			
		AsyncScheduleTemplateEntry
			when (Reference.BusinessClassName = "AsyncScheduleTemplate")

		AsyncScheduleTemplateDrillIsValid
			when (AsyncScheduleTemplateEntry and DrillIsValid and Reference(AsyncScheduleTemplate) exists)
		
		AsyncScheduleExclusionSetEntry
			when (Reference.BusinessClassName = "AsyncScheduleExclusionSet")
			
		AsyncScheduleExclusionSetDrillIsValid
			when (AsyncScheduleExclusionSetEntry and DrillIsValid and Reference(AsyncScheduleExclusionSet) exists)
		
		DrillIsValid
			when (not BusinessActionRel.ActionType.Delete)
		
		HasFields
			default label is "FieldsExist"
			when (not BusinessActionRel.ActionType.Delete and not BusinessActionRel.ActionType.Purge and AsyncAuditEntryField set exists)

	Actions
		Create is a Create Action
			restricted
			
		Delete is a Delete Action
			Entrance Rules
				if (not Archived and RepSetBCAtiveRel exists)
					confirmation required
						"RecordHasNotBeenReplicated,AreYouSure?"
		
		Purge is a Set Action
			disable checkpoint
			Parameters
				ThruDate 			is Date
				PurgeOffsetDays 	is Numeric size 3

			Local Fields
				LocalThruDate 	is Date
					value is ThruDate		
					


			Parameter Rules
				ThruDate   
					if (ThruDate entered)
						LocalThruDate = (ThruDate + 1 day)
					else	 
					if (not PurgeOffsetDays entered)
						required	
							"MustEnterThroughFinishDateOrOffset"
					else
						LocalThruDate  = current date - (PurgeOffsetDays - 1)
			
				PurgeOffsetDays
					constraint (not ThruDate entered)
						"CannotEnterBothThroughFinishDateAndOffset"

			Instance Selection
				where (create stamp < LocalThruDate)

			Sort Order is ByChangeTimeActor
									
			Action Rules
				Instance Rules
					invoke Delete
		
	Relations
		BusinessActionRel
			one-to-one relation to BusinessAction
			Field Mapping uses symbolic key
				related.BusinessView = Reference.BusinessClassName
				related.BusinessAction = ActionName
				
		RepSetBCAtiveRel
			one-to-many relation to RepSetBC
			Field Mapping uses ByBusinessClassAllSet
				related.BusinessClass = "AsyncAuditEntry"
			Instance Selection
				where (related.Inactive = false)
				
	Sets
		ByActorChangeTime
			indexed
			Sort Order
				create stamp.actor
				create stamp descending
				AsyncAuditEntry
				
		ByChangeTimeActor 
			indexed
			Sort Order
				create stamp descending
				create stamp.actor
				AsyncAuditEntry
				
		ByBusClassChangeTime
			indexed
			Sort Order
				Reference.BusinessClassName
				create stamp descending
				AsyncAuditEntry
		
		ByBusClassID
			indexed
			Sort Order
				Reference.BusinessClassName
				Reference.BusinessObjectKey
				create stamp descending
				AsyncAuditEntry
