AssetBookImport is a BusinessClass
    owned by am
    prefix is ABC
    classic name is AMASTBKCNV

    Ontology
        symbolic key is AssetBookImport
            classic set name is ABCSET0
            classic name is CONVERSION-NBR

    Patterns
        implements StaticJava
        disable AuditIndex

		disable Auditing 
       	disable EffectiveDated
		
    Persistent Fields
		RunGroup
        RecordInError                 		is Boolean
		ErrorMessage						is Alpha 150
		Asset
		AssetManagementInterfaceResult

        Active                        is Boolean
            classic name is BOOK-STATUS
        BookRegulation
        Life
        LifeRemaining
            classic name is LIFE-REM
        Basis                         is Decimal size 19.3
            classic name is BOOK-BASIS
      		precision is OutputNumberOfDecimals
        Method
        InServiceDate                 is Date
            classic name is INSRV-DATE
        YearPlacedInService
            classic name is METH-TABLE-YR
        Convention
        LifeInYears
            classic name is LIFE-YEARS
        YearToDateDepreciation        is Decimal size 19.3
            classic name is DEPR-YTD
            precision is OutputNumberOfDecimals
        YearToDateDepreciationAllowed is Decimal size 19.3
            classic name is DEPR-YTD-ALLOW
            precision is OutputNumberOfDecimals
        LifeToDateDepreciation        is Decimal size 19.3
            classic name is DEPR-LTD
            precision is OutputNumberOfDecimals
        LifeToDateDepreciationAllowed is Decimal size 19.3
            classic name is DEPR-LTD-ALLOW
            precision is OutputNumberOfDecimals
        YearToDateInactiveMonths
            classic name is INACT-YTD
        LifeToDateInactiveMonths
            classic name is INACT-LTD
        SalvageValue                  is Decimal size 19.3
        	precision is OutputNumberOfDecimals
        BusinessPercent
            classic name is BUS-PERCENT
        PersonalUseCode
            classic name is PERSONAL-USE
        FirstYearExpenseAmount        is Decimal size 19.3
            classic name is YR1-EXP
            precision is OutputNumberOfDecimals
        AssetTaxCreditTable
            classic name is TC-TABLE
        TaxCreditPropertyAmount       is Decimal size 19.3
            classic name is TC-PROPERTY
            precision is OutputNumberOfDecimals
        TaxCredit                     is Decimal size 19.3
        	precision is OutputNumberOfDecimals
        InsuranceCalculationMethod    is a Method
            classic name is INS-METHOD
        ActualInsuranceValue          is Decimal size 19.3
            classic name is INS-ACT-VAL
            precision is OutputNumberOfDecimals
        CalculatedInsuranceValue      is Decimal size 19.3
            classic name is INS-CMPTD-VAL
            precision is OutputNumberOfDecimals
        ReplacementCalculationMethod  is a Method
            classic name is RPL-METHOD
        CalculatedReplacementValue    is Decimal size 19.3
            classic name is RPL-CMPTD-VAL
            precision is OutputNumberOfDecimals
		IndianReservation					is Boolean
		PropertyType						is Numeric 2
			States
				1245					value is 01
					default label is "1245"
				1250					value is 02	
					default label is "1250"
		QualifiedImprovement				is Numeric 2
			States
				NotQualified			value is 00
				LeaseholdImprovement	value is 01
				NotLeaseholdImprovement	value is 02
		ForeignProperty						is Boolean
		CostRecoverySystem					is Numeric 2
			States
				ACRS					value is 1
				MACRS					value is 2
		ClassificationOfProperty			is AlphaUpper 5
			States
				Blank					value is " "		
				3YearProperty			value is "03"
				5YearProperty			value is "05"
				7YearProperty			value is "07"
				10YearProperty			value is "10"
				12YearProperty			value is "12"
				15YearProperty			value is "15"
				RealProperty18			value is "18"
					default label is "Real Property (3/17/84 To 5/9/85)"
				RealProperty19 			value is "19"
					default label is "Real Property (3/10/85 To 12/31/86)"	
				20YearProperty			value is "20"
				25YearProperty			value is "25"
				ResidentialReal27		value is "27"	
					default label is "Residential Real 27.5"
			 	NonResidentialReal30	value is "31"	
			 		default label is "NonResidential Real 31.5 (1/1/87 To 5/12/93)"
				NonResidentialReal40 	value is "39"		
					default label is "NonResidential Real 39/40"				
		NonConforming						is Boolean				
		Farming								is Boolean
		Section179							is Boolean
		Listed								is Boolean
		Used								is Boolean
		DepreciableIntangible				is Numeric 1
			States
				Blank					value is 0
				DepreciableIntangible	value is 1
				AmortizedIntangible		value is 2	
		MineralReserves						is Boolean
		LowIncomeHousing					is Boolean
		TransitionalRuleFlag				is Boolean
		BonusAmount							is an InternationalAmount
		Section179Expense					is an InternationalAmount
		SpreadOverRemainingLife				is Boolean

		
		
	Transient Fields
		OutputNumberOfDecimals 			is Numeric size 1
			derive value from AssetImport.NumberOfDecimals
		TransientBookRegulation			is a BookRegulation
			derive value from BookRegulation
		TransientUpdateFromImport		is Boolean
		TransientRegulationUpdate		is Boolean
	Local Fields
    	InterfacedAssetBook				is an AssetBook view
    	LocalItemImportCount			is Numeric size 6
    	LocalItemCount					is Numeric size 6
		LocalBookRegulationChanged		is Boolean
		LocalSalvagePercentage			is like BusinessPercent
		LocalPersonalUseCode			is like PersonalUseCode

    Conditions

        AssetImportExists
        	restricted
            when (AmassetcnvRel exists)

        ImportedAssetExists
        	restricted
            when (AmcnvassetRel exists)

        AssetItemImportExists
        	restricted
            when (first AmastitcnvRel exists)

        AssetTransactionImportExists
        	restricted
            when (first AmasttrcnvRel exists)

		BookCalendarExists
			restricted
			when (BookCalendarRel exists)
		
		AllowsBookUpdateWithRegulation
			restricted
			when (BookRegulationsRel exists)
		
		BookRegulationsExist
			restricted
			when (BookRegulationsRel exists)

		AllowBookUpdateWithRegulation
			restricted
			when (!BookEntered
			and AllowsBookUpdateWithRegulation)	

		DisplayBookRegulation
			restricted
			when (BookEntered
			and AllowsBookUpdateWithRegulation)	
		
		BookEntered
        	restricted
            when (Book entered)
    Relations

        AmassetcnvRel
            one-to-one relation to AssetImport
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= AssetImport.FinanceEnterpriseGroup
                related.AssetImport 			= AssetImport

        AmastitcnvRel
            one-to-many relation to AssetItemImport
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= AssetImport.FinanceEnterpriseGroup
                related.AssetImport = AssetImport
        
        AssetItemImportErrorsRel
        	one-to-many relation to AssetItemImport
            Field Mapping uses symbolic key
                related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.AssetImport 			= AssetImport
            Instance Selection
           		where (related.RecordInError = true) 
        
        AssetItemRel
        	one-to-many relation to AssetItem
        	Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= AssetImport.FinanceEnterpriseGroup
				related.Asset					= Asset
       
        ItemsByPurchaseDateRel
            one-to-many relation to AssetItemImport
            Field Mapping uses ByPurchaseDateDecending
                related.AssetImport = AssetImport
        
        AmasttrcnvRel
            one-to-many relation to AssetTransactionImport
            Field Mapping uses Set1
                related.AssetTransactionImport.ConversionNumber = AssetImport

        AmcnvassetRel
            one-to-one relation to ImportedAsset
            Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
                related.AssetImport 			= AssetImport
         		related.Asset					= Asset  
         		
        BookCalendarRel
            classic name is AMCALENDAR
            one-to-one relation to BookCalendar
            Field Mapping uses Set5
                related.Book    = Book
                related.Company = AmassetcnvRel.Company
                
    	ThisInstanceRel
			one-to-one relation to AssetBookImport
			Field Mapping uses symbolic key
            	related.FinanceEnterpriseGroup	= AssetImport.FinanceEnterpriseGroup
				related.AssetImport				= AssetImport
				related.Book					= Book
		
		AssetBookRel
			one-to-one relation to AssetBook
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Asset					= Asset
				related.Book					= Book	

		GuidelineClassRegulationsRel
			one-to-many relation to AssetGuidelineClassRegulation
			Field Mapping uses ByEffectiveDate
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				related.AssetGuidelineClass		= AssetImport.AssetGuidelineClass	
                related.BookRegulation          = BookRegulation      
			Instance Selection				
				where (related.EffectiveDate <= InServiceDate
				and related.Active = true)

		LocalGuidelineClassRegulationsRel
			one-to-many relation to AssetGuidelineClassRegulation
			Field Mapping uses ByEffectiveDate
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup	
				related.AssetGuidelineClass		= AssetImport.AssetGuidelineClass	
                related.BookRegulation          = BookRegulation      
			Instance Selection				
				where (related.Active = true)		

		RegulationPersonalUseCodeRel
			one-to-many relation to PersonalUseCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book						= Book
				related.PersonalUseCode				= GuidelineClassRegulationsRel.PersonalUseCode
			
		LocalPersonalUseCodeRel
			one-to-many relation to PersonalUseCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Book						= Book
				related.PersonalUseCode				= LocalPersonalUseCode

		BookRegulationsRel
			one-to-many relation to BookRegulation
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
	
	Derived Fields
		HighItemPurchaseDate is a DerivedField
			type is Date
			restricted
			return (first ItemsByPurchaseDateRel.PurchaseDate)		

		DerivedBasis is a DerivedField
			type is like InternationalAmount
			restricted
			if (Book.PostCurrency.Asset
			or AssetImport.Currency = Book.Currency)
				return (sum AmastitcnvRel.TransactionItemCost)
			else 
				if (AssetImport.Company.AccountingEntity.FunctionalCurrency = Book.Currency)
					return (sum AmastitcnvRel.BaseItemCost)
				
			
    Sets

        Set1
            not indexed
            Sort Order
                AssetImport
                Book

    Field Rules
    	RunGroup
    		default to AssetImport.RunGroup
    		
		InServiceDate
			initial value is (HighItemPurchaseDate)
			default to (HighItemPurchaseDate)
			required
			constraint (BookCalendarExists)
				"Prerequisite;CalendarMustBeDefinedForBook<Book>"

		Method
			if (AssetImport.AssetCategory.NonDepreciable)
				cannot be entered
					"MethodCannotBeEnteredForNonDepreciableAsset"				
			else
				if (GuidelineClassRegulationsRel exists)
					if (LocalBookRegulationChanged)
						Method = GuidelineClassRegulationsRel.Method
					else
						if (action type.Create)
							if (Method not entered)
								default to GuidelineClassRegulationsRel.Method
				else
					if (GuidelineClassRegulationsRel not exists)
						required
		
			if (AssetImport.Classification.Finance) 
       			constraint (Method.MethodFormula = "SL")
                	"TheMethodMustBeStraightLineForAssetBooksOnAFinanceLease"
						
        Active
			initial value is true
			
        BusinessPercent
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					BusinessPercent = GuidelineClassRegulationsRel.BusinessPercent
			else
				default to 100.00
			


            
       	Convention
		   	if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Convention = GuidelineClassRegulationsRel.Convention
			else
				default to "FM"  
			


			if (AssetImport.Classification.Finance) 
       			constraint (Convention.FullMonth)
                	"TheConventionMustBeFullMonthForAssetBooksOnAFinanceLease"
		
		Life
			if (AssetImport.AssetCategory.NonDepreciable)
				cannot be entered
					"LifeCannotBeEnteredForNonDepreciableAsset"				
			else
				if (GuidelineClassRegulationsRel exists)
					if (LocalBookRegulationChanged)
						Life = GuidelineClassRegulationsRel.Life
					else
						if (action type.Create)
							if (Life not entered)
								default to GuidelineClassRegulationsRel.Life
				else
					required
			



		BookRegulation
			initial value is Book.BookRegulation
			if (BookRegulation entered
			and AssetImport.AssetGuidelineClass entered)
				constraint (GuidelineClassRegulationsRel exists)
					"ActiveGuidelineClassRegulationDoesn'tExistFor:_Book<Book>Book_Regulation<BookRegulation>_In-ServiceDate<InServiceDate>"
		
		SalvageValue
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					LocalSalvagePercentage = GuidelineClassRegulationsRel.SalvagePercent
			
					if (LocalSalvagePercentage entered)
						SalvageValue = Basis * (LocalSalvagePercentage/100)
			



		FirstYearExpenseAmount
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					FirstYearExpenseAmount = Basis * (GuidelineClassRegulationsRel.FirstYearExpensePercent/100)
			



		ClassificationOfProperty
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					ClassificationOfProperty = GuidelineClassRegulationsRel.ClassificationOfProperty
			


		
		AssetTaxCreditTable
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					AssetTaxCreditTable = GuidelineClassRegulationsRel.AssetTaxCreditTable
			if (AssetTaxCreditTable entered)
				TaxCreditPropertyAmount = Basis * AssetTaxCreditTable.QualifyingPercentage / 100
				TaxCredit 				= TaxCreditPropertyAmount * AssetTaxCreditTable.TaxCreditPercentage / 100
			else 
				initialize TaxCreditPropertyAmount
				initialize TaxCredit 



		
		PersonalUseCode
			if (LocalBookRegulationChanged)
				LocalPersonalUseCode = first GuidelineClassRegulationsRel.PersonalUseCode 
				if (LocalPersonalUseCode entered)
					PersonalUseCode = LocalPersonalUseCode
			if (PersonalUseCode entered)
				LocalPersonalUseCode = PersonalUseCode
				constraint (LocalPersonalUseCodeRel exists)
					"PersonalUseCode<PersonalUseCode>IsNotDefinedForBook<Book>"
		
		Used
			if (AssetImport.Used)
				if (action type.Update)
					if (Used changed 
					and not Used)
						constraint (Used)
							"BookUsedFlagSetToNo,WhenAssetIsSetToUsedAllBooksMustAlsoBeSetToUsed"	
				else	
					default to AssetImport.Used
			else
				if (GuidelineClassRegulationsRel  exists)
					if (LocalBookRegulationChanged)
						Used = GuidelineClassRegulationsRel.Used




		PropertyType
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					PropertyType = GuidelineClassRegulationsRel.PropertyType





		IndianReservation
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					IndianReservation = GuidelineClassRegulationsRel.IndianReservation





		QualifiedImprovement
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					QualifiedImprovement = GuidelineClassRegulationsRel.QualifiedImprovement





		ForeignProperty
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					ForeignProperty = GuidelineClassRegulationsRel.ForeignProperty





		CostRecoverySystem
			if (GuidelineClassRegulationsRel  exists)
				if (LocalBookRegulationChanged)
					CostRecoverySystem = GuidelineClassRegulationsRel.CostRecoverySystem














		NonConforming
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					NonConforming = GuidelineClassRegulationsRel.NonConforming





		MineralReserves
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					MineralReserves = GuidelineClassRegulationsRel.MineralReserves





		Farming	
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Farming = GuidelineClassRegulationsRel.Farming





		LowIncomeHousing
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					LowIncomeHousing = GuidelineClassRegulationsRel.LowIncomeHousing





		Section179	
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Section179 = GuidelineClassRegulationsRel.Section179





		Listed		
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					Listed = GuidelineClassRegulationsRel.Listed





		DepreciableIntangible
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					DepreciableIntangible = GuidelineClassRegulationsRel.DepreciableIntangible




		TransitionalRuleFlag
			if (GuidelineClassRegulationsRel exists)
				if (LocalBookRegulationChanged)
					TransitionalRuleFlag = GuidelineClassRegulationsRel.TransitionalRuleFlag  
					
	Rule Blocks

		InterfaceThisAssetBook

	
			initialize RecordInError
			initialize ErrorMessage

			if (AssetBookRel exists
			and Asset.InterfaceInProgress)
				invoke FastUpdate AssetBookRel
					fill in fields from this instance
					invoked.AssetManagementInterfaceResult = PrmAssetManagementInterfaceResult
			else
				invoke ImportCreate AssetBook
					assign result to InterfacedAssetBook
					resume on error
						RecordInError	= true
						ErrorMessage	= error message
					fill in fields from this instance
					invoked.Asset							= AssetImport.Asset
					invoked.AssetManagementInterfaceResult	= PrmAssetManagementInterfaceResult
					invoked.TransientSkipTransactionCreate	= true
					invoked.ComputeOption                   = PrmComputeOption
					invoked.TransientAllowZeroLifeRemaing   = PrmAllowZeroLifeRemaining

			if (!RecordInError)
				Asset							= AssetImport.Asset
				AssetManagementInterfaceResult	= PrmAssetManagementInterfaceResult
			else

				invoke IncrementErrorCount PrmAssetManagementInterfaceResult
				invoke SetRecordInError AssetImport

		CreateGuidelineClassRegulation
			if (BookRegulation entered)
				if (Method not entered)
					Method					= first GuidelineClassRegulationsRel.Method
				if (Life not entered)
					Life					= first GuidelineClassRegulationsRel.Life			
				if (GuidelineClassRegulationsRel.Convention entered)
					Convention				= first GuidelineClassRegulationsRel.Convention
				if (first GuidelineClassRegulationsRel.PersonalUseCode entered)
					LocalPersonalUseCode	= first GuidelineClassRegulationsRel.PersonalUseCode  
					constraint (LocalPersonalUseCodeRel exists)
						"PersonalUseCode<PersonalUseCode>IsNotDefinedForBook<Book>"
				if (PersonalUseCode not entered)
					PersonalUseCode			= first GuidelineClassRegulationsRel.PersonalUseCode
				else
					LocalPersonalUseCode	= PersonalUseCode
					constraint (LocalPersonalUseCodeRel exists)
						"PersonalUseCode<PersonalUseCode>IsNotDefinedForBook<Book>"
				if (ClassificationOfProperty not entered)
					ClassificationOfProperty	= first GuidelineClassRegulationsRel.ClassificationOfProperty
				
				if (AssetTaxCreditTable not entered)
					AssetTaxCreditTable		= first GuidelineClassRegulationsRel.AssetTaxCreditTable
					if (AssetTaxCreditTable entered)
						TaxCreditPropertyAmount = Basis * AssetTaxCreditTable.QualifyingPercentage / 100
						TaxCredit 				= TaxCreditPropertyAmount * AssetTaxCreditTable.TaxCreditPercentage / 100
				if (FirstYearExpenseAmount not entered)
					FirstYearExpenseAmount	= Basis * (GuidelineClassRegulationsRel.FirstYearExpensePercent/100)
				if (BusinessPercent not entered)
					BusinessPercent			= first GuidelineClassRegulationsRel.BusinessPercent 
				if (SalvageValue not entered)
					SalvageValue			= Basis * (first GuidelineClassRegulationsRel.SalvagePercent/100)


				if (SalvageValue not entered	
				and GuidelineClassRegulationsRel  exists)
					SalvageValue = Basis * (first GuidelineClassRegulationsRel.SalvagePercent/100)

				if (FirstYearExpenseAmount not entered		
				and GuidelineClassRegulationsRel  exists)
					FirstYearExpenseAmount = Basis * (first GuidelineClassRegulationsRel.FirstYearExpensePercent/100)


				if (Used not entered)
					if (AssetImport.Used)
						Used = AssetImport.Used
					else
						Used = GuidelineClassRegulationsRel.Used
				if (IndianReservation not entered)
					IndianReservation			= first GuidelineClassRegulationsRel.IndianReservation
				if (PropertyType not entered)
					PropertyType				= first GuidelineClassRegulationsRel.PropertyType
				if (QualifiedImprovement not entered)
					QualifiedImprovement		= first GuidelineClassRegulationsRel.QualifiedImprovement
				if (ForeignProperty not entered)
					ForeignProperty				= first GuidelineClassRegulationsRel.ForeignProperty
				if (CostRecoverySystem not entered)
					CostRecoverySystem			= first GuidelineClassRegulationsRel.CostRecoverySystem
				if (NonConforming not entered)
					NonConforming				= first GuidelineClassRegulationsRel.NonConforming
				if (Farming not entered)
					Farming						= first GuidelineClassRegulationsRel.Farming
				if (MineralReserves not entered)
					MineralReserves				= first GuidelineClassRegulationsRel.MineralReserves
				if (LowIncomeHousing not entered)
					LowIncomeHousing			= first GuidelineClassRegulationsRel.LowIncomeHousing
				if (Section179 not entered)
					Section179					= first GuidelineClassRegulationsRel.Section179
				if (Listed not entered)
					Listed						= first GuidelineClassRegulationsRel.Listed
				if (DepreciableIntangible not entered)
					DepreciableIntangible		= GuidelineClassRegulationsRel.DepreciableIntangible  
				if (TransitionalRuleFlag not entered)
					TransitionalRuleFlag		= first GuidelineClassRegulationsRel.TransitionalRuleFlag   




		InitializeValues
			initialize Method
			initialize Life
			initialize Convention
			initialize PersonalUseCode
			initialize ClassificationOfProperty
			initialize AssetTaxCreditTable	
			initialize FirstYearExpenseAmount	
			initialize BusinessPercent	
			initialize SalvageValue		
			initialize Used 
			initialize IndianReservation	
			initialize PropertyType		
			initialize QualifiedImprovement	
			initialize ForeignProperty		
			initialize CostRecoverySystem	
			initialize NonConforming	
			initialize Farming		
			initialize MineralReserves	
			initialize LowIncomeHousing		
			initialize Section179		
			initialize Listed	
			initialize DepreciableIntangible
			initialize TransitionalRuleFlag
			initialize BonusAmount				

	Actions
		Create is a Create Action
			Action Rules
				if (TransientBookRegulation entered)
					BookRegulation = TransientBookRegulation
				else
					if (BookRegulation not entered)
						BookRegulation = Book.BookRegulation
				if (InServiceDate not entered)
					InServiceDate = HighItemPurchaseDate
			Exit Rules
				if (Basis not entered)
					Basis = DerivedBasis
				include CreateGuidelineClassRegulation

		BookRegulationUpdate is an Instance Action
			valid when (AllowsBookUpdateWithRegulation)
			Parameters
				PrmBlankRegulation					is Boolean
				PrmBookRegulation 					is a BookRegulation
				PrmUpdateGuidelineClassDefaults 	is Boolean


			Parameter Rules	
				PrmUpdateGuidelineClassDefaults
					if (PrmUpdateGuidelineClassDefaults)
						constraint (PrmBookRegulation entered)
							"UpdateGuidelineClassDefaultsCannotBeCheckedWhenBookRegulationIsBlank"	

			Action Rules	
				BookRegulation = PrmBookRegulation
				if (BookRegulation entered)
					constraint (GuidelineClassRegulationsRel exists)
						"ActiveGuidelineClassRegulationDoesNotExistForAssetGuidelineClass<AssetImport.AssetGuidelineClass>_BookRegulation<PrmBookRegulation>_In-ServiceDate<InServiceDate>"

				if (PrmUpdateGuidelineClassDefaults
				and BookRegulation entered)
					TransientRegulationUpdate = true
					invoke Update

		Update is an Update Action
			Entrance Rules
				if (TransientRegulationUpdate
				or TransientUpdateFromImport)
					LocalBookRegulationChanged = true
		
		Delete is a Delete Action
		
		InterfaceAssetBooks is a Set Action
			restricted
			completion message is "InterfaceAssetBooksSubmitted"
			Parameters
				PrmRunGroup							is a RunGroup
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
		        PrmFromRange						is like AssetImport
		        PrmToRange							is like AssetImport
				PrmAssetManagementInterfaceResult	is a AssetManagementInterfaceResult
				PrmComputeOption                    is a Compute
				PrmAllowZeroLifeRemaining			is Boolean

			Instance Selection			
				where (RunGroup							= PrmRunGroup
				and    FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
				and    AssetImport.Asset				entered
				and   !AssetImport.RecordInError

				and   (PrmFromRange						<= AssetImport
				and   (AssetImport						<= PrmToRange
				or     PrmToRange						not entered)))

			Local Fields
				CommitNow						is Boolean

			Sort Order
				FinanceEnterpriseGroup
				AssetImport
				Book
				
			Action Rules

				Instance Rules

					if (PrmAssetManagementInterfaceResult.ErrorCount < PrmAssetManagementInterfaceResult.ErrorLimit)
						include InterfaceThisAssetBook

		FixAssetBooks is a Set Action
			restricted

			completion message is "FixAssetBooksSubmitted"
			disable checkpoint
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
				PrmAssetManagementInterfaceResult	is an AssetManagementInterfaceResult
			Instance Selection			
				where (RunGroup							not entered
				and    FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup

				and    AssetImport.Asset				entered
				and   !AssetImport.RecordInError
				and    AssetManagementInterfaceResult	not entered)

			Sort Order
				FinanceEnterpriseGroup
				AssetImport
				Book
				
			Action Rules
				Instance Rules
	    			RunGroup  = AssetImport.RunGroup
	    			AssetManagementInterfaceResult = PrmAssetManagementInterfaceResult
					
		FastDelete is a Purge Action
			restricted
			bypass relational integrity rules

		DeleteImportedRecords is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup			is a FinanceEnterpriseGroup
				PrmRunGroup				  			is a RunGroup
				PrmAssetManagementInterfaceResult	is an AssetManagementInterfaceResult

			Instance Selection
				where (RunGroup							= PrmRunGroup
                and    FinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
                and    AssetManagementInterfaceResult	= PrmAssetManagementInterfaceResult
				and    Asset entered
				and   !RecordInError
				and   !AssetImport.RecordInError)
				
			Action Rules
			
				Instance Rules
					if (PrmAssetManagementInterfaceResult.ErrorCount entered
					and PrmAssetManagementInterfaceResult.ErrorLimit entered)
						if (PrmAssetManagementInterfaceResult.ErrorCount <= PrmAssetManagementInterfaceResult.ErrorLimit)

							if ((AssetItemRel exists
							and AssetItemImportErrorsRel not exists)
							or (AssetItemRel not exists
							and AmastitcnvRel not exists))
								invoke FastDelete
					else
						invoke FastDelete

		ResetAsset is an Instance Action
			restricted
			Action Rules
				Asset		= blank
