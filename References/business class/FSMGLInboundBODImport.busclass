FSMGLInboundBODImport is a BusinessClass
	owned by integration
	
	prefix is FSMGL
	
	Ontology
		symbolic key is FSMGLInboundBODImport
		
	
	Patterns
		implements InlineUserFields
			size is 1000
        implements StaticJava
        disable AuditIndex
	Persistent Fields
	
	Transient Fields
		TransientFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
		TransientAccountingUnitStructure	is a AccountingUnitStructure
		TransientProjectStructure			is a ProjectStructure
		
	Field Rules
	
	Context Fields
		FSMInboundBODTracker
		
	Local Fields

		LocalTrackerID							is Numeric 15
		LocalSSJEBODXML							is XMLDocument
		LocalVariationID						is Alpha size 100
		NewBODTracker  							is a FSMInboundBODTracker view
		LocalConfigurationParameter				is Alpha size up to 200
		LocalActionCode							is Alpha size 10
		LocalJournalID							is AlphaUpper size 100
		LocalAutoReverse						is Alpha size 5
		LocalAutoReverseDate					is Alpha 20
		LocalError								is Boolean
		LocalErrorMessage						is Alpha size 300
		LocalHeaderAccountingEntity 			is AlphaUpper size 40
   		Error            						is Boolean
	    ErrorMessage     						is Alpha 300
	    LocalFromLogicalID						is Alpha 60
	    LocalSSJEProcessBODID					is Alpha 100
	    LocalReturnCode							is Alpha 150
		LocalReasonCode							is Alpha 600
		LocalReturnMessage						is Alpha 600
		LocalFSMInboundBODTracker				is Numeric 15
		LocalBODXML								is XMLDocument
		LocalDisplayID							is Alpha size 30
		LocalTextName							is Alpha size 100
		LocalTextValue							is Alpha size 30
		LocalTempPostingDate					is Alpha size 20
		LocalGLTransactionLineSequence			is Numeric size 12
		LocalTransactionDate					is Alpha size 30
		LocalSystem								is AlphaUpper size 4
		LocalGLEvent							is AlphaUpper size 4
		LocalRunGroup							is Alpha size 50
		LocalTransactionAmount					is Decimal 19.3
		LocalSequenceNumber						is Numeric size 12
		LocalAccountCode						is AlphaUpper size 26
		LocalCurrencyCode						is AlphaUpper size 5
		LocalPostingDate						is Alpha size 20
		LineDescription							is Alpha size 60
		LocalAccountingEntity					is Alpha size 40
		LocalToAccountingEntity					is AlphaUpper size 12
		LocalAccountingUnit						is Alpha size 12
		LocalTempTransactionDate				is Alpha size 30
		LocalDocumentNumber						is Alpha up to 30
		LocalResource							is Numeric size 13
		LocalResourceType						is Alpha size 30
		LocalDocType							is Alpha size 30
		LocalReference							is Alpha size up to 120
		LocalCodeName							is Alpha size 50
		LocalCodeValue							is Alpha size 30
		LocalProject							is AlphaUpper size 25
		LocalFinanceDimension1					is AlphaUpper size 15
		LocalFinanceDimension2					is AlphaUpper size 15
		LocalFinanceDimension3					is AlphaUpper size 15
		LocalFinanceDimension4					is AlphaUpper size 15
		LocalFinanceDimension5					is AlphaUpper size 15
		LocalFinanceDimension6					is AlphaUpper size 15
		LocalFinanceDimension7					is AlphaUpper size 15
		LocalFinanceDimension8					is AlphaUpper size 15
		LocalFinanceDimension9					is AlphaUpper size 15
		LocalFinanceDimension10					is AlphaUpper size 15
		LocalJob								is Alpha size 9
		LocalPayCode							is AlphaUpper size 20
		LocalPosition							is Alpha size 9
		LocalDeductionCode						is Alpha size 60
		LocalUnitsAmount						is Decimal 19.3
		LocalFinanceEnterpriseGroup				is AlphaUpper size 8
    	LocalHeaderSystem						is AlphaUpper size 4
    	LocalHeaderAutoReverse					is AlphaUpper size 4
    	LocalHeaderAutoReverseDate				is Alpha 20
    	BackgroundGroup 						is Alpha size 200
    	LocalName				 				is Alpha size 50
    	LocalNameValue			 				is Alpha size 50
    	LocalSourceJournalID					is Alpha size 50
    	LocalIterator							is Numeric 9
    	LocalLoop								is Numeric 9
    	LocalDimensionCodeCount					is Numeric 9
    	LocalUserAreaCount						is Numeric 9
    	LocalLineCount							is Numeric 9
    	LocalGLTransLineUserareaCount			is Numeric 9
    	LocalGenericDelimiter					is Alpha 9
    	LocalComponentID						is Alpha size 10
    	LocalCreateDateTime						is Alpha size 30
    	LocalMultiBODs							is Alpha size 4
    	LocalNativeRunGroup						is Alpha size 50
    	LocalLineLevelAutoReverse				is Alpha size 5
    	LocalLineLevelAutoReverseDate 			is Alpha 20
    	LocalProcessName						is Alpha size 350


		LocalCurrency							is Alpha size 5
		LocalFromCurrency						is Alpha size 5
		LocalToCurrency							is Alpha size 5
		LocalCurrCount							is Numeric size 4
		LocalCurrencyDescription				is Alpha size up to 60
		LocalCurrUserareacount					is Numeric size 4
		LocalCurrRate							is Decimal size 31.15
		LocalExchangeDate						is Alpha size 15
		LocalCurrencyTable						is Alpha size 12
		LocalCurrRateDocID						is Alpha size 100
		LocalCurrRateBODID						is Alpha size 100
		LocalSenderBODID						is Alpha size 100
		LocalRateStatus							is Alpha size 12
		LocalStatusMessage						is Alpha size 300
		LocalBODConfigNoun						is Alpha size 150


		LocalStatus								is Alpha size 10
		LocalActive								is Alpha size 10
		LocalDocumentID							is Alpha size 100
		LocalListID								is Alpha size 20
		LocalDescription						is Alpha size 60
		LocalParentAU							is Alpha size 25
		LocalPostingType						is Alpha size 10
		LocalAccountingUnitType					is Alpha size 10
		LocalResponse							is Alpha size 20
		LocalStructure							is Alpha size 15
		LocalDimensionCode						is Alpha 25
    	LocalDimensionEntity					is Alpha 40
    	LocalStructureSequence					is Alpha 50


		LocalCompany							is Numeric 4
		LocalCashManagementGroup				is Alpha size 8			
		LocalVendor								is Numeric size 9
		LocalPayGroup							is AlphaUpper size 10
		LocalBankTransNum						is Alpha size 10
		LocalCashCode							is AlphaUpper size 20
		LocalPayeeName							is Alpha size 120
		LocalDistributionAmt					is Decimal size 19.3
		LocalBankEntity							is Alpha size 15
		LocalAccountNumber						is Alpha size 35
		LocalCountry							is Alpha size 3
		LocalAddressLine1						is Alpha size 60
		LocalAddressLine2          				is Alpha size 60
		LocalAddressLine3						is Alpha size 60
		LocalAddressLine4						is Alpha size 60
		LocalPostalCode          				is Alpha size 12
		LocalStateProvince						is Alpha size 3
		LocalMunicipality      					is Alpha size 58		   	
    	LocalMainUserTemplate					is Alpha size 250
    	

    	LocalBODConfigVerb						is Numeric size 2
    	LocalBusinessGroup						is Alpha size 50
    	LocalReportingChart						is AlphaUpper size 15
    	LocalChartSection						is Alpha size 50
    	LocalAccountType						is Alpha size 50
    	LocalParentChartAct						is AlphaUpper size 26
    	LocalFEG								is AlphaUpper size 8
    	LocalValidFromDate						is Alpha size 25
    	LocalAccDesc							is Alpha size 60
    	LocalCodeBlockRelation					is Numeric size 6
    	LocalChartSequence						is Numeric 4
    	LocalAccountTypeName					is Alpha size 50
    	LocalOriginalCreateDateTime				is Alpha size 25
    	LocalConfirmBOD							is Alpha size 20
    	LocalShowChartOfAccountsXML				is XMLDocument
    	LocalCodeLength							is Numeric 9
    	LocalClassificationCode					is Alpha size 50
    	LocalGLNominalAccount					is Alpha size 50
    	LocalChartLength						is Numeric 9
    	LocalNativeAccount						is Alpha size 60
    	LocalSyncChartOfAccountsXML				is XMLDocument
    	LocalNativeEntity						is Alpha size 60


		LocalBODID								is Alpha 100
		LocalLogicalID							is Alpha 100
		LocalBeginDate 							is Alpha 20
		LocalEndDate 							is Alpha 20
		LocalAlphaBeginDate						is Alpha 20
		LocalAlphaEndDate						is Alpha 20
		LocalParentProject 						is AlphaUpper size 25
		LocalProjectType 						is Numeric size 1
		LocalProjectStatus 						is AlphaUpper size 20
		LocalContextStructure 					is AlphaUpper size 15
		LocalTopNode 							is Boolean
		IsActive 								is Boolean
		LocalProjectMasterXML					is XMLDocument
		LocalStatusCode 						is Alpha size 20
		LocalBodID								is Alpha 200
		LocalOriginalBODID						is Alpha 100
		LocalSplitDocIDLength					is Numeric size 1
		LocalProjectTypeFlag					is Boolean


		LocalBankStatementCount					is Numeric 9
		LocalCashManagementAccount				is AlphaUpper 35
		LocalAccountEntryCount					is Numeric 9
		LocalStatementDate						is Alpha 30
		LocalAccountBalanceCount				is Numeric 9
		LocalCounter							is Numeric 9
		LocalBalanceType						is Alpha 10
		LocalEndingBalance						is Decimal size 19.3
		NewBankStatement  						is a BankStatement view
		LocalLineCurrency						is AlphaUpper size 5
		LocalLineAmount							is Decimal size 19.3
		LocalTransactionType					is AlphaUpper 4
		LocalDebitCreditIndicator				is Alpha 2
		LocalBankLineDescription				is Alpha up to 1000
		LocalLineComment						is Text
		LocalTextReference						is Alpha size up to 80
		LocalRelatedReference					is Alpha size up to 80
		LocalBankReference 						is Alpha size up to 80
		LocalPartyReference						is Alpha size up to 80
		LocalTransactionID						is Alpha 10
		LocalBankStatement						is Numeric size 12
		LocalDebitCreditFlag					is Alpha 20
		LocalExternalReferenceLength			is Numeric 9
		LocalBankStatementAlertMessage			is Alpha 300
		LocalClosingBalance						is Decimal size 19.3
		LocalTransactionTypeCount				is Numeric 9


		LocalSyncAccountingChartXML				is XMLDocument

	Derived Fields

#ifdef module GeneralLedger
		ProcessSourceSystemJournalEntryConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessSourceSystemJournalEntryConfirmBODXML = template.IONProcessSourceSystemJournalEntry_ConfirmBOD_ST document for this instance
		
		ProcessSourceSystemJournalEntryAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessSourceSystemJournalEntryAcknowledgeBODXML = template.IONProcessSourceSystemJournalEntry_AcknowledgeBOD_ST document for this instance
		
		ProcessSourceSystemJournalEntryAccptAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessSourceSystemJournalEntryAccptAcknowledgeBODXML = template.IONProcessSourceSystemJournalEntry_AccptAcknowledgeBOD_ST document for this instance
		
		SyncSourceSystemJournalEntryConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncSourceSystemJournalEntryConfirmBODXML = template.IONSyncSourceSystemJournalEntry_ConfirmBOD_ST document for this instance
		
		SyncSourceSystemJournalEntryAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncSourceSystemJournalEntryAcknowledgeBODXML = template.IONSyncSourceSystemJournalEntry_AcknowledgeBOD_ST document for this instance
		
		SyncSourceSystemJournalEntryAccptAcknowledgeBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncSourceSystemJournalEntryAccptAcknowledgeBODXML = template.IONSyncSourceSystemJournalEntry_AccptAcknowledgeBOD_ST document for this instance
		
		DerivedLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "logicalID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
		
		DerivedTenantID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "tenantID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedReleaseID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "releaseID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedVersionID is a DerivedField
			type is Alpha size 60
			restricted
			LocalConfigurationParameter = "VersionID"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedBODCurrentTimeStamp is a DerivedField
			type is TimeStamp
			DerivedBODCurrentTimeStamp = system current timestamp
			return DerivedBODCurrentTimeStamp
		
		DerivedAlphaCurrentTimeStamp is a DerivedField
			type is Alpha size 20
			return DerivedBODCurrentTimeStamp
		
		DerivedBODFormattedCurrentTimeStamp is a DerivedField
			type is Alpha size 25
			return DerivedAlphaCurrentTimeStamp[1:4] + "-" + DerivedAlphaCurrentTimeStamp[5:6] + "-" + DerivedAlphaCurrentTimeStamp[7:8] + "T" + DerivedAlphaCurrentTimeStamp[9:10] + ":" + DerivedAlphaCurrentTimeStamp[11:12] + ":" + DerivedAlphaCurrentTimeStamp[13:14] + "Z"									
		
		DerivedJournalID is a DerivedField
			type is Alpha 100
			restricted
			return LocalJournalID
		
		DerivedRunGroup is a DerivedField
			type is Alpha 30
			restricted
			return LocalRunGroup
		
		DerivedSyncRunGroup is a DerivedField
			type is Alpha 30
			restricted
			return "SSJE"+DerivedAlphaCurrentTimeStamp[1:4]+DerivedAlphaCurrentTimeStamp[5:6]+DerivedAlphaCurrentTimeStamp[7:8]+DerivedAlphaCurrentTimeStamp[9:10]+ DerivedAlphaCurrentTimeStamp[11:12]
			
		DerivedFinanceEnterpriseGroup is a DerivedField
			type is AlphaUpper size 8
			restricted
			return LocalFinanceEnterpriseGroup
		
		DerivedAccountingEntity is a DerivedField
			type is AlphaUpper size 12
			restricted
			return LocalHeaderAccountingEntity
		
		DerivedTrackerID is a DerivedField
			type is Numeric 15
			restricted
			return LocalTrackerID
		
		DerivedSSJEConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:"+DerivedTenantID+":"+DerivedAccountingEntity+":"+":"+DerivedJournalID+":"+"?BOD&verb=Confirm&TrackerID="+ DerivedTrackerID
		
		DerivedSSJEACKBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:"+DerivedTenantID+":"+DerivedAccountingEntity+":"+":"+DerivedJournalID+":"+"?BOD&verb=ACK&TrackerID="+ DerivedTrackerID
		
		DerivedFromLogicalID is a DerivedField
			type is Alpha size 60
			restricted
			return LocalFromLogicalID
		
		DerivedSSJEBODID is a DerivedField
			type is Alpha 100
			restricted
			return 	LocalSSJEProcessBODID
		
		DerivedReasonCode is a DerivedField
			type is Alpha 600
			restricted
			return LocalReasonCode
		
		DerivedReturnMessage is a DerivedField
			type is Alpha 600
			restricted
			return LocalReturnMessage
		
		DerivedReturnCode is a DerivedField
			type is Alpha 150
			restricted
			return LocalReturnCode
		
		DerivedBODType is a DerivedField
			type is Alpha 50
			restricted
			return "Process.SourceSystemJournalEntry"
		
		DerivedMessageID is a DerivedField
			type is Alpha 50
			restricted
			return "MessageID"	

		DerivedParameterSendAckRejected is a DerivedField
			type is Alpha size 2
			restricted
			LocalConfigurationParameter = "ProcessSSJESendAckRejected"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedParameterSendAckAccepted is a DerivedField
			type is Alpha size 2
			restricted
			LocalConfigurationParameter = "ProcessSSJESendAckAccepted"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value				
		
		DerivedDisplayID is a DerivedField
			type is Alpha size 30
			restricted
			return LocalDisplayID
		
		DerivedInterfaceTrans is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "ProcessSourceSystemJournalEntry_RunGLTransInterfaceUpdate"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedSendTo is a DerivedField
			type is Alpha size 1000
			restricted
			LocalConfigurationParameter = "AdminEmailAddresses"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedMailFrom is a DerivedField
			type is Alpha size 1000
			restricted
			LocalConfigurationParameter = "mailFrom"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
										
		DerivedSSJEBODXML is a DerivedField
			type is XMLDocument
			restricted
			return LocalSSJEBODXML
		
		DerivedACKErrorMessage is a DerivedField
			type is Alpha 300
			restricted
			return LocalErrorMessage
		
		DerivedGenericDelimiter is a DerivedField
			type is Alpha size 5
			restricted
			LocalConfigurationParameter = "Generic_Delimiter"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		NativeAccountingEntity	is a NativeField
			type is Alpha 20
			restricted
		
		NativeRunGroup	is a NativeField
			type is Alpha 50
			restricted	
#endif



#ifdef module currency

		DerivedCurrRateConfirmBODID is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +DerivedCurrAccountEntity+ ":" + ":" + DerivedCurrRateDocID + ":"+"?CurrencyExchangeRateMaster&verb=Confirm&TrackerID="+ DerivedTrackerID
		
		DerivedCurrRateDocID is a DerivedField
			type is Alpha size 100
			restricted
			return LocalCurrRateDocID
		
		DerivedCurrAccountEntity is a DerivedField
			type is Alpha size 20
			restricted
			return LocalAccountingEntity
		
		DerivedCurrRateFromLogicalId is a DerivedField
			type is Alpha size 60
			restricted
			return LocalFromLogicalID
		
		DerivedCurrRateSenderCompID	is a DerivedField
			type is Alpha size 20
			restricted
			return LocalComponentID
		
		DerivedSenderBODID is a DerivedField
			type is Alpha size 100
			restricted
			return LocalSenderBODID
		
		DerivedErrorMessage is a DerivedField
			type is Alpha size 300
			restricted
			return LocalErrorMessage
			
		DerivedRateStatus is a DerivedField
			type is Alpha size 20
			restricted
			return LocalRateStatus
		
		DerivedCurrRateACKBODID	is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +DerivedCurrAccountEntity+ ":" + ":" + DerivedCurrRateDocID + ":"+"?CurrencyExchangeRateMaster&verb=Ack&TrackerID="+ DerivedTrackerID
			
		ProcessCurrExchangeRateConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessCurrExchangeRateConfirmBODXML = template.IONProcessCurrencyExchangeRateMaster_ConfirmBOD_ST document for this instance
		
		ProcessCurrExchangeRateAckBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessCurrExchangeRateAckBODXML = template.IONProcessCurrencyExchangeRateMaster_AckBOD_ST document for this instance	

		DerivedFinGroupParameter is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "ProcessCurrencyExchangeRateMaster_FinanceEnterpriseGroup"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
				
		DerivedCurrTableParameter is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "ProcessCurrencyExchangeRateMaster_CurrencyTable"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
				
		DerivedFEGParameter is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "GeneralLedger_BODS_FinanceEnterpriseGroup"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
				
		SyncCurrExchangeRateConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncCurrExchangeRateConfirmBODXML = template.IONSyncCurrencyExchangeRateMaster_ConfirmBOD_ST document for this instance
#endif




		DerivedStructure is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "ProcessCodeDefinition_Inbound_StructureName"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedPCDAccountingEntity is a DerivedField
			type is Alpha size 24
			restricted
			return LocalAccountingEntity
		
		DerivedPCDConfirmBODID is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedPCDAccountingEntity +":" + ":"+ DerivedDocumentID+ ":" + "?CodeDefinition&verb=Confirm&TrackerID=" + DerivedTrackerID
	
		DerivedSenderCompID	is a DerivedField
			type is Alpha size 20
			restricted
			return LocalComponentID
			
		DerivedCreateTime is a DerivedField
			type is Alpha size 50
			restricted
			return LocalCreateDateTime
		
		DerivedBODXML is a DerivedField
			type is XMLDocument
			restricted
			return LocalBODXML
			
		ProcessCodeDefinitionConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessCodeDefinitionConfirmBODXML = template.IONProcessCodeDefinition_ConfirmBOD_ST document for this instance
		
		ProcessCodeDefinitionAckBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessCodeDefinitionAckBODXML = template.IONProcessCodeDefinition_AckBOD_ST document for this instance
		
		ProcessPCDAckBODID is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID +":" +DerivedPCDAccountingEntity + ":" +":" +DerivedDocumentID +  ":" +"?CodeDefination&verb=Ack&TrackerID=" + DerivedTrackerID
	
		DerivedDocumentID is a DerivedField
			type is Alpha size 50
			restricted
			return LocalDocumentID
		DerivedAccountingUnit is a DerivedField
			type is Alpha size 50
			restricted
			return LocalAccountingUnit		


		DerivedCurrentDate is a DerivedField
			type is Alpha size 25
			return DerivedAlphaCurrentTimeStamp[1:8]									
		
		DerivedTransactionDate is a DerivedField
			type is Alpha size 25
			return LocalTransactionDate[1:4] + LocalTransactionDate[6:7] + LocalTransactionDate[9:10]									
		
		ProcessRemitAdviceConfirmBODID is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + LocalCashManagementGroup + DerivedGenericDelimiter + LocalToAccountingEntity + DerivedGenericDelimiter + LocalCompany + ":" + ":" + LocalReference + ":" +"?BOD&verb=Acknowledge&TrackerID=" + DerivedTrackerID
		
		ProcessRemitAdviceACKBODID is a DerivedField
			type is Alpha size 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + LocalCashManagementGroup + DerivedGenericDelimiter + LocalToAccountingEntity + DerivedGenericDelimiter + LocalCompany + ":" + ":" + LocalReference + ":" +"?BOD&verb=Acknowledge&TrackerID=" + DerivedTrackerID
		
		ProcessRemittanceAdviceConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessRemittanceAdviceConfirmBODXML = template.IONProcessRemittanceAdvice_ConfirmBOD_ST document for this instance				
		
		ProcessRemittanceAdviceAckBODXML is a DerivedField
			type is XMLDocument
			restricted
			ProcessRemittanceAdviceAckBODXML = template.IONProcessRemittanceAdvice_ACKBOD_ST document for this instance


#ifdef module GeneralLedger		
		NativeAccountingUnit is a NativeField
			type is Alpha 100
			restricted
		
		NativeFinanceEnterpriseGroup is a NativeField
			type is Alpha 100
			restricted
		
		DerivedShowChartOfAccountsConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + LocalDocumentID + ":" +"?BOD&verb=Confirm&&TrackerID="+ LocalTrackerID 
			
		ShowChartOfAccountsBODXML is a DerivedField
			type is XMLDocument
			restricted
			ShowChartOfAccountsBODXML = template.IONShowChartOfAccounts_ConfirmBOD_ST document for this instance
			return ShowChartOfAccountsBODXML
			
		DerivedAckResponse is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Rejected"
			else
				return "Accepted"
				
		DerivedRCode is a DerivedField
			type is Alpha 20
			restricted
			if(LocalConfirmBOD = "true")
				return "Application_Error"
			else
				return "Application_Success"
		
		DerivedShowCAReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing ChartOfAccounts- " + LocalErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedShowCAReturnMessage
				
		DerivedSyncChartOfAccountsConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalAccountingEntity + ":" + LocalDocumentID + ":" +"?BOD&verb=Confirm&&TrackerID="+ LocalTrackerID 
			
		SyncChartOfAccountsBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncChartOfAccountsBODXML = template.IONSyncChartOfAccounts_ConfirmBOD_ST document for this instance
			
		
		DerivedSyncCAReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing ChartOfAccounts- " + LocalErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedSyncCAReturnMessage
		
		NativeAccount is a NativeField
			type is Alpha 60
			restricted
		
		NativeEntity is a NativeField
			type is Alpha 60
			restricted
#endif


#ifdef module Projects

		NativeCSFFinanceEnterpriseGroup is a NativeField
			type is Alpha 60
			restricted
		
		CSFProject is a NativeField
			type is Alpha 60
			restricted
		
		DerivedProjectStructure is a DerivedField
			type is Alpha size 20
			restricted
			LocalConfigurationParameter = "GeneralLedger_BODS_ProjectStructure"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
		
		DerivedSPMReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			return "Error processing SyncProjectMaster- " + LocalErrorMessage
		
		DerivedSPMErrorMsgDescription is a DerivedField
			type is Alpha 300
			restricted
			return	"Failed message, " + "Message: "+ LocalErrorMessage 
			
		DerivedSPMOriginalBODMsg is a DerivedField
			type is XMLDocument
			restricted
			return LocalProjectMasterXML
			
		SyncProjectMasterConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncProjectMasterConfirmBODXML = template.IONSyncProjectMaster_ConfirmBOD_ST document for this instance
#endif


		DerivedCashManagementGroup is a DerivedField
			type is Alpha size 10
			restricted
			LocalConfigurationParameter = "LoadBankStatement_In_CashManagementGroup"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		LoadBankStatementAlertXML is a DerivedField
			type is XMLDocument
			restricted
			LoadBankStatementAlertXML = template.IONLoadBankStatement_Alert_ST document for this instance


		SyncAccountingEntityConfirmBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncAccountingEntityConfirmBODXML = template.IONSyncAccountingEntity_ConfirmBOD_ST document for this instance

		DerivedAEConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" + DerivedFEGParameter + ":" + LocalAccountingEntity + ":" + ":" + ":" +"?BOD&verb=Confirm&TrackerID="+ DerivedTrackerID
			
		DerivedCurrentPeriod is a DerivedField
			type is Numeric 7
			restricted
			LocalConfigurationParameter = "SyncAccountingEntity_In_CurrentPeriod"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value	
					
		DerivedCloseConfig is a DerivedField
			type is AlphaUpper size 20
			restricted
			LocalConfigurationParameter = "SyncAccountingEntity_In_CloseConfiguration"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value
					
		DerivedIgnoreGenericDelimiter is a DerivedField
			type is Alpha size 1
			restricted
			LocalConfigurationParameter = "SyncAccountingEntity_In_IgnoreGenericDelimeterConcatination"
			if (FSMBODConfigurationParameterRel exists)
				return FSMBODConfigurationParameterRel.Value


		SyncAccountingChartBODXML is a DerivedField
			type is XMLDocument
			restricted
			SyncAccountingChartBODXML = template.IONSyncAccountingChart_ConfirmBOD_ST document for this instance
		
		DerivedSyncAccountingChartConfirmBODID is a DerivedField
			type is Alpha 300
			restricted
			return "infor-nid:" + DerivedTenantID + ":" +LocalFinanceEnterpriseGroup + ":" + LocalReportingChart + ":" +"?BOD&verb=Confirm&&TrackerID="+ LocalTrackerID
		
		DerivedSyncAccountingChartReturnMessage is a DerivedField
			type is Alpha 300
			restricted
			if(LocalConfirmBOD = "true")
				return "Error processing SyncAccountingChart- " + LocalErrorMessage + ":"+ "TrackerID="+ LocalTrackerID
			else
				return DerivedSyncAccountingChartReturnMessage

	Relations
		UserTemplateRel
			one-to-many relation to UserTemplate
			Field Mapping uses symbolic key
			Instance Selection
				where (related.UserTemplate		= LocalMainUserTemplate)
				
		FSMInboundBODTrackerRel
            one-to-one relation to FSMInboundBODTracker
            Field Mapping uses symbolic key
                related.FSMInboundBODTracker	= LocalFSMInboundBODTracker
                
		FSMBODConfigurationParameterRel
        	one-to-one relation to FSMBODConfigurationParameter
			Field Mapping uses symbolic key
            	related.FSMBODConfigurationParameter 		= LocalConfigurationParameter		
		
		FSMBODConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= LocalBODConfigNoun
            	related.FSMBODConfiguration.Direction 	= 2
				
		FSMBODSyncConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= LocalBODConfigNoun
            	related.FSMBODConfiguration.Direction 	= 2
				
		FSMBODSyncSSJEConfigurationRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= LocalBODConfigNoun
            	related.FSMBODConfiguration.Direction 	= 2
		
		FinanceEnterpriseGroupRel
			one-to-one relation to FinanceEnterpriseGroup
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup			=	LocalFinanceEnterpriseGroup			

#ifdef module currency
		
		CurrencyRel
			one-to-one relation to Currency
			Field Mapping uses symbolic key
				related.Currency = LocalCurrency
		
		CurrencyRelationshipRel
			one-to-one relation to CurrencyRelationship
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
				related.CurrencyRelationship.FromCurrency	= LocalFromCurrency
				related.CurrencyRelationship.ToCurrency		= LocalToCurrency	  	
		
		CurrExchangeRateRel
			one-to-one relation to CurrExchangeRate
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup									= LocalFinanceEnterpriseGroup
				related.CurrencyTable											= LocalCurrencyTable
				related.CurrExchangeRate.CurrencyRelationship.FromCurrency		= LocalFromCurrency
				related.CurrExchangeRate.CurrencyRelationship.ToCurrency		= LocalToCurrency
				related.ExchangeDate											= LocalExchangeDate

#endif
#ifdef module GeneralLedger
		AccountingUnitRel
			one-to-one relation to AccountingUnit
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				related.AccountingEntity		= LocalAccountingEntity
				related.AccountingUnit			= LocalAccountingUnit

		AccountingUnitStructureRel
			one-to-one relation to AccountingUnitStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.AccountingUnitStructure		= LocalStructure
#endif


#ifdef module GeneralLedger		
		FSMBODConfigurationChartOfAccountsRel
			one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
				related.FSMBODConfiguration.Verb 		= LocalBODConfigVerb
            	related.FSMBODConfiguration.Noun 		= "ChartOfAccounts"
            	related.FSMBODConfiguration.Direction 	= 2

		FSMBODCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "SourceAccountingEntity"
            	related.FSMBODCrossReference.DestinationField 	= "DestinationAccountingEntity"
            Instance Selection
				where (related.SourceValue	= LocalAccountingEntity )
				
		AccountRel
			one-to-one relation to Account
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				related.Account					= LocalDocumentID
				
		ReportingChartAccountRel
			one-to-one relation to ReportingChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= LocalFinanceEnterpriseGroup
				related.ReportingChart				= LocalReportingChart
				related.GeneralLedgerChartAccount	= LocalDocumentID
			
		GeneralLedgerChartAccountRel
			one-to-one relation to GeneralLedgerChartAccount
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.GeneralLedgerChartAccount	= LocalDocumentID
			
		CodeBlockRelationRel
			one-to-many relation to CodeBlockRelation
			Field Mapping uses symbolic key	
				related.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
			Instance Selection
				where (related.FromField		= 2
				and related.ToField				= 3)
		
		CodeBlockRelationDetailRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.CodeBlockRelation			= LocalCodeBlockRelation
			Instance Selection
				where (related.SortFromValue			= "AccountingUnit"
				and related.SortToValue 				= "Account"
				and related.GeneralLedgerChartAccount 	= LocalDocumentID
				and related.TransientEntity 			= LocalAccountingEntity
				and related.AccountingUnit				= LocalAccountingUnit)
		
		ReportingChartRel
			one-to-one relation to ReportingChart
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= LocalFinanceEnterpriseGroup
				related.ReportingChart				= LocalReportingChart
#endif


#ifdef module Projects
		FSMBODConfigurationSyncProjectMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "ProjectMaster"
            	related.FSMBODConfiguration.Direction 	= 2
		
		ProjectRel 
			one-to-one relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFEG
				related.Project					= LocalProject
				
		ProjectsRel 
			one-to-many relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= LocalFEG
				related.Project					= LocalProject
			Instance Selection
				where ( related.ProjectType			= LocalProjectType
					and related.UsedByATransaction	= "0"
					and related.DimensionStructure	= LocalContextStructure)
		
		FSMBODFEGCrossReferenceDetailRel
			one-to-many relation to FSMBODCrossReferenceDetail
			Field Mapping uses symbolic key
            	related.FSMBODCrossReference.SourceField 		= "SourceFinanceEnterpriseGroup"
            	related.FSMBODCrossReference.DestinationField 	= "DestinationFinanceEnterpriseGroup"
            Instance Selection
				where (related.SourceValue	= LocalFinanceEnterpriseGroup)
		
#endif


		FSMBODConfigurationLoadBankStatementRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 3
            	related.FSMBODConfiguration.Noun 		= "BankStatement"
            	related.FSMBODConfiguration.Direction 	= 2
				
		BankStatementRel
			one-to-one relation to BankStatement
			Field Mapping uses symbolic key
            	related.CashManagementGroup		= LocalCashManagementGroup
				related.CashManagementAccount	= LocalCashManagementAccount
				related.BankStatement			= LocalBankStatement
				
		FSMBODConfigurationBankStatementAlertRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 2
            	related.FSMBODConfiguration.Noun 		= "PulseAlert"
            	related.FSMBODConfiguration.Direction 	= 1
            


		AccountingEntityRel
			one-to-one relation to AccountingEntity
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= LocalFinanceEnterpriseGroup
				related.AccountingEntity			= LocalAccountingEntity
		


		FSMBODConfigurationSyncAccountingChartRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 1
            	related.FSMBODConfiguration.Noun 		= "AccountingChart"
            	related.FSMBODConfiguration.Direction 	= 2


		FSMBODConfigurationAckFinancialPartyMasterRel
        	one-to-one relation to FSMBODConfiguration
			Field Mapping uses symbolic key
            	related.FSMBODConfiguration.Verb 		= 5
            	related.FSMBODConfiguration.Noun 		= "FinancialPartyMaster"
            	related.FSMBODConfiguration.Direction 	= 2

	Actions
		Create is a Create Action
			restricted
		
		Update is an Update Action
			restricted
		
		Delete is a Delete Action				
			restricted


#ifdef module GeneralLedger			
		SyncSourceSystemJournalEntry is an Import Action
			restricted
			bod type is Sync.SourceSystemJournalEntry
			Parameters
				SourceSystemJournalEntryBOD 	is XMLDocument
            Action Rules
				LocalActionCode					= SourceSystemJournalEntryBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalJournalID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"
				LocalUserAreaCount				= SourceSystemJournalEntryBOD select "count(//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property)"
				LocalBODXML						= SourceSystemJournalEntryBOD
				LocalSSJEProcessBODID			= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalVariationID				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID/@variationID"
				LocalHeaderAccountingEntity		= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID/@accountingEntity"
				
				if(LocalHeaderAccountingEntity not entered)
					LocalHeaderAccountingEntity = SourceSystemJournalEntryBOD select "//DataArea/Sync/accountingEntityID"
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalHeaderAccountingEntity     = NativeAccountingEntity
				LocalBusinessGroup				= SourceSystemJournalEntryBOD select "//DataArea/Sync/AccountingEntityID"
				LocalFinanceEnterpriseGroup		= NativeFinanceEnterpriseGroup
				LocalAccountingEntity			= LocalHeaderAccountingEntity
				LocalBODConfigNoun				= "SourceSystemJournalEntry"
				LocalIterator					= 1
				while(LocalUserAreaCount >= LocalIterator)
					LocalName					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					LocalNameValue				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property[<LocalIterator>]/NameValue"	
					if(LocalName = "fsm.AccountingEntity" or LocalName = "gfc.sourceAccountingEntity")
						LocalAccountingEntity = LocalNameValue
					else
					if(LocalName = "fsm.FinanceEnterpriseGroup" or LocalName = "gfc.FinanceEnterpriseGroup")
						LocalFinanceEnterpriseGroup	= LocalNameValue
					else
					if(LocalName = "fsm.RunGroup")
						LocalRunGroup = LocalNameValue
					else
					if(LocalName = "gfc.sourceJournalId")
						LocalSourceJournalID = LocalNameValue
					else
					if(LocalName = "GeneralLedgerSystemCode")
						LocalHeaderSystem = LocalNameValue	
					else
					if(LocalName = "gfc.sourceAutoReverse")
						LocalHeaderAutoReverse = LocalNameValue
						if(LocalHeaderAutoReverse = "Y")
							LocalAutoReverse = "true"
						else
							LocalAutoReverse = ""
					LocalIterator		= LocalIterator + 1
				
				LocalRunGroup = "SSJE" + DerivedAlphaCurrentTimeStamp[1:4] + DerivedAlphaCurrentTimeStamp[5:6] + DerivedAlphaCurrentTimeStamp[7:8] + DerivedAlphaCurrentTimeStamp[9:10] + DerivedAlphaCurrentTimeStamp[11:12]
				
				if(FSMBODSyncSSJEConfigurationRel exists and FSMBODSyncSSJEConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "SourceSystemJournalEntry"
							invoked.Direction				= 2					
							invoked.RunGroup				= LocalRunGroup
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalJournalID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSSJEProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker	
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.RunGroup				= LocalRunGroup
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalJournalID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSSJEProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if((LocalActionCode= "Add" or LocalFinanceEnterpriseGroup entered) and LocalJournalID entered)
						invoke SyncCreateGLRecords
							invoked.SourceSystemJournalEntryBOD			= SourceSystemJournalEntryBOD	
							invoked.PrmFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
							invoked.PrmAccountingEntity					= LocalAccountingEntity
							invoked.PrmRunGroup							= LocalRunGroup
							invoked.PrmSystem							= LocalHeaderSystem
							invoked.PrmAutoReverse						= LocalAutoReverse
							invoked.PrmMultiBODs						= LocalMultiBODs
							invoked.PrmLikeInboundTracker 				= LocalFSMInboundBODTracker
					else
						if(LocalActionCode != "Add" and LocalFinanceEnterpriseGroup not entered)
							LocalErrorMessage = "Error: SourceSystenJournalHeader actionCode must be Add, Error: provide proper Finance Enterprise Group value"
						else	
						if(LocalActionCode != "Add")
							LocalErrorMessage = "Error: SourceSystenJournalHeader actionCode must be Add"
						else
						if(LocalFinanceEnterpriseGroup not entered)
							LocalErrorMessage = "Error: Provide proper Finance Enterprise Group value"
						else
						if(LocalJournalID not entered)
							LocalErrorMessage = "JournalID is missing in XML"
						
						invoke SendSyncSSJEConfirmBOD
							invoked.SourceSystemJournalEntryBOD = SourceSystemJournalEntryBOD
							invoked.PrmErrorMessage 			= LocalErrorMessage
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							invoked.PrmReasonCode				= ""
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= true
							invoked.ErrorMessage 				= LocalErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "SourceSystemJournalEntry"
						invoked.Direction				= 2					
						invoked.RunGroup				= LocalRunGroup
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalJournalID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSSJEProcessBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync SourceSystemJournalEntry Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.RunGroup				= LocalRunGroup
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalJournalID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSSJEProcessBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync SourceSystemJournalEntry Inbound BOD Service is not Enabled"
						
		SyncCreateGLRecords is an Import Action			
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 		is XMLDocument
				PrmFinanceEnterpriseGroup			is Alpha size 8
				PrmAccountingEntity					is Alpha size 12
				PrmRunGroup							is AlphaUpper size 30
				PrmSystem							is AlphaUpper size 4
				PrmAutoReverse						is Alpha size 5
				PrmMultiBODs						is Alpha size 4
				PrmLikeInboundTracker   			is like FSMInboundBODTracker
			Local Fields
				LocalTransLines						is XMLDocument
			Action Rules		
				LocalFSMInboundBODTracker 			= PrmLikeInboundTracker
				LocalLineCount						= SourceSystemJournalEntryBOD select "count(//DataArea/SourceSystemJournalEntry/JournalEntryLine)"
				LocalJournalID						= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalSSJEProcessBODID				= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalFromLogicalID					= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalCreateDateTime					= SourceSystemJournalEntryBOD select "//ApplicationArea/CreationDateTime"
				LocalHeaderAccountingEntity			= SourceSystemJournalEntryBOD select "//DataArea/Process/AccountingEntityID"
				LocalComponentID					= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/ComponentID"
				LocalIterator						= 1
				LocalAccountingEntity				= PrmAccountingEntity
				LocalRunGroup						= PrmRunGroup
				
				while(LocalLineCount >= LocalIterator)
					LocalTransLines				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryLine[<LocalIterator>]"
					LocalTransactionAmount		= LocalTransLines select "/JournalEntryLine/Amount"
					LocalAccountCode			= LocalTransLines select "/JournalEntryLine/GLAccount/GLNominalAccount"		
					LocalCurrencyCode			= LocalTransLines select "/JournalEntryLine/Amount/@currencyID"
					LocalTempPostingDate		= LocalTransLines select "/JournalEntryLine/SourceAccountingDate/PostDateTime"
					LocalPostingDate			= LocalTempPostingDate[1:4] + LocalTempPostingDate[6:7] + LocalTempPostingDate[9:10]
					LocalTempTransactionDate	= LocalTransLines select "/JournalEntryLine/ExchangeRateDateTime"
					LocalTransactionDate		= LocalTempTransactionDate[1:4] + LocalTempTransactionDate[6:7] + LocalTempTransactionDate[9:10]
					LineDescription				= LocalTransLines select "/JournalEntryLine/GLAccount/GLNominalAccountName"
					LocalDocType				= LocalTransLines select "/JournalEntryLine/SourceDocumentReference/@type"
					LocalDocumentNumber			= LocalTransLines select "/JournalEntryLine/DocumentReference/DocumentID/ID"
					LocalResourceType			= LocalTransLines select "/JournalEntryLine/DocumentReference/@type"
					initialize LocalGLTransactionLineSequence
					initialize LocalAccountingUnit
					initialize LocalToAccountingEntity
					initialize LocalJob
					initialize LocalPayCode
					initialize LocalPosition
					initialize LocalUnitsAmount
					initialize LocalSystem
					initialize LocalGLEvent
					initialize LocalFinanceDimension1
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9
					initialize LocalFinanceDimension10
					initialize LocalLineLevelAutoReverse
					initialize LocalAutoReverse
					
					if(LocalDocType = "SupplierInvoice" or LocalDocType = "Invoice")
						LocalDocumentNumber = LocalTransLines select "/JournalEntryLine/SourceDocumentReference/AlternateDocumentID/ID"
					else
						LocalDocumentNumber = ""	
					
					if(LocalTransactionDate not entered)
						LocalTransactionDate = LocalPostingDate
					if(LocalPostingDate not entered)
						LocalPostingDate = LocalTransactionDate
					
					LocalLoop = 1
					LocalDimensionCodeCount					= LocalTransLines select "count(/JournalEntryLine/DimensionCodes/DimensionCode)"
					while(LocalDimensionCodeCount >= LocalLoop)
						LocalCodeName						= LocalTransLines select "/JournalEntryLine/DimensionCodes/DimensionCode[<LocalLoop>]/@sequence"
						LocalCodeValue						= LocalTransLines select "/JournalEntryLine/DimensionCodes/DimensionCode[<LocalLoop>]"
						if(LocalCodeName = "1")
							LocalAccountingUnit = LocalCodeValue
						else
						if(LocalCodeName = "2")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeName = "3")
							LocalFinanceDimension2	= LocalCodeValue
						else	
						if(LocalCodeName = "4")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeName = "5")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeName = "6")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeName = "7")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeName = "8")
							LocalFinanceDimension7	= LocalCodeValue
						else
						if(LocalCodeName = "9")
							LocalFinanceDimension8	= LocalCodeValue
						else
						if(LocalCodeName = "10")
							LocalFinanceDimension9	= LocalCodeValue
						else
						if(LocalCodeName = "11")
							LocalFinanceDimension10	= LocalCodeValue
						LocalLoop = LocalLoop + 1
					
					LocalGLTransLineUserareaCount	= LocalTransLines select "count(/JournalEntryLine/UserArea/Property)"
					LocalLoop	= 1
					while(LocalGLTransLineUserareaCount >= LocalLoop)
						LocalTextName			= LocalTransLines select "/JournalEntryLine/UserArea/Property[<LocalLoop>]/NameValue/@name"
						LocalTextValue			= LocalTransLines select "/JournalEntryLine/UserArea/Property[<LocalLoop>]/NameValue"
						if(LocalTextName = "gfc.sourceJeLineSequence")
							LocalGLTransactionLineSequence	= LocalTextValue
						else
						if(LocalTextName = "gfc.sourceToGlCompany")
							LocalToAccountingEntity = LocalTextValue
						else
						if(LocalTextName = "gfc.sourceJobCode")	
							LocalJob = LocalTextValue
						else
						if(LocalTextName = "gfc.sourcePayCode")
							LocalPayCode = LocalTextValue
						else
						if(LocalTextName = "gfc.sourcePositionCode")
							LocalPosition = LocalTextValue
						else
						if(LocalTextName = "gfc.sourceHours")
							LocalUnitsAmount = LocalTextValue
						else
						if(LocalTextName = "gfc.sourceSystem")
							LocalSystem = LocalTextValue
						else
						if(LocalTextName = "GeneralLedgerEvent")
							LocalGLEvent = LocalTextValue
						else
						if(LocalTextName = "gfc.sourceGeneralLedgerEvent")
							LocalGLEvent = LocalTextValue	
						else
						if(LocalTextName = "gfc.sourceAutoReverse" and LocalTextValue entered)
							LocalLineLevelAutoReverse = LocalTextValue	
						LocalLoop			= LocalLoop + 1	
					
					if(LocalLineLevelAutoReverse = "Y")
						LocalAutoReverse = "true"
					else
					if(LocalLineLevelAutoReverse = "N")
						LocalAutoReverse = "false"
					else
					if(LocalLineLevelAutoReverse not entered and PrmAutoReverse = "true")
						LocalAutoReverse = "true"
					else
						LocalAutoReverse = "false"
						
					if(LocalSystem not entered and LineDescription = "Payroll interface transaction")
						LocalSystem  = "PR"
					if(PrmSystem entered)
						LocalSystem = PrmSystem
					if(LocalGLTransactionLineSequence not entered)
						LocalGLTransactionLineSequence 	= LocalTransLines select "/JournalEntryLine/@sequence"
					if(LocalToAccountingEntity not entered)	
						LocalToAccountingEntity		   	= PrmAccountingEntity
					LocalReference 	= LocalJournalID + "_Seq:" + LocalGLTransactionLineSequence
					
					invoke Create GLTransactionInterface
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
						invoked.FinanceEnterpriseGroup					= PrmFinanceEnterpriseGroup
						invoked.GLTransactionInterface.RunGroup			= PrmRunGroup
						invoked.GLTransactionInterface.SequenceNumber	= LocalGLTransactionLineSequence
						invoked.AccountingEntity						= PrmAccountingEntity
						invoked.AccountCode								= LocalAccountCode
						invoked.ToAccountingEntity						= LocalToAccountingEntity
						invoked.AccountingUnit 							= LocalAccountingUnit
						invoked.TransactionAmount						= LocalTransactionAmount
						invoked.CurrencyCode							= LocalCurrencyCode
						invoked.PostingDate								= LocalPostingDate
						invoked.TransactionDate							= LocalTransactionDate 
						invoked.System									= LocalSystem
						invoked.GeneralLedgerEvent						= LocalGLEvent
						invoked.Description								= LineDescription
						invoked.Reference								= LocalReference
						invoked.DocumentNumber							= LocalDocumentNumber
						invoked.FinanceDimension1						= LocalFinanceDimension1
						invoked.FinanceDimension2						= LocalFinanceDimension2
						invoked.FinanceDimension3						= LocalFinanceDimension3
						invoked.FinanceDimension4						= LocalFinanceDimension4
						invoked.FinanceDimension5						= LocalFinanceDimension5
						invoked.FinanceDimension6						= LocalFinanceDimension6
						invoked.FinanceDimension7						= LocalFinanceDimension7
						invoked.FinanceDimension8						= LocalFinanceDimension8
						invoked.FinanceDimension9						= LocalFinanceDimension9
						invoked.FinanceDimension10						= LocalFinanceDimension10
						invoked.Resource								= LocalResource
						invoked.AutoReverse								= LocalAutoReverse
						invoked.UnitsAmount								= LocalUnitsAmount
						invoked.SenderBODID								= LocalSSJEProcessBODID
						invoked.SenderComponentID						= LocalComponentID
						invoked.SenderCreationDateTime					= LocalCreateDateTime
						invoked.SenderLogicalID							= LocalFromLogicalID
						invoked.SenderOriginalBOD						= PrmMultiBODs
					if(Error)
					    LocalFSMInboundBODTracker 						= PrmLikeInboundTracker
						LocalReasonCode = "Application error -  GLTransactionInterface failed to create transaction for Finance Enterprise Group:" + PrmFinanceEnterpriseGroup +" Run Group:"+PrmRunGroup + "  Accounting Entity:" + LocalHeaderAccountingEntity + " Line:"+ LocalGLTransactionLineSequence + " Process: FSM_ION_SyncSourceSystemJournalEntry_Inbound and Review Tracker:"+ LocalFSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
						
						if(DerivedParameterSendAckRejected="Y")
							invoke SendSyncSSJEACKBOD
								invoked.PrmErrorMessage					= ErrorMessage
								invoked.SourceSystemJournalEntryBOD 	= SourceSystemJournalEntryBOD
								invoked.PrmFinEnterpriseGroup			= PrmFinanceEnterpriseGroup
								invoked.PrmAccountingEntity				= LocalAccountingEntity
								invoked.PrmErrorLine					= LocalGLTransactionLineSequence
								invoked.PrmTrackerID					= LocalFSMInboundBODTracker
								invoked.PrmRunGroup						= PrmRunGroup
						invoke SendSyncSSJEConfirmBOD
							invoked.PrmErrorMessage 					= ErrorMessage
							invoked.SourceSystemJournalEntryBOD	 		= SourceSystemJournalEntryBOD
							invoked.PrmTrackerID						= LocalFSMInboundBODTracker
							invoked.PrmReasonCode						= LocalReasonCode
						LocalIterator	= LocalLineCount + 1	
					else
						if (LocalIterator%20 = 0)
							commit transaction
						LocalIterator	= LocalIterator + 1
						
				if(!Error)
					if(DerivedParameterSendAckAccepted = "Y")
						invoke SendSyncSSJEAcceptedACKBOD
							invoked.SourceSystemJournalEntryBOD 		= SourceSystemJournalEntryBOD
							invoked.PrmFinEnterpriseGroup				= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup							= PrmRunGroup
							invoked.PrmAccountingEntity					= LocalAccountingEntity
							invoked.PrmTransLines						= LocalLineCount
							invoked.PrmTrackerID						= LocalFSMInboundBODTracker
					
					if(DerivedInterfaceTrans = "true")	
						invoke InterfaceTransactions GLTransactionInterface
							resume on error
				           		Error            						= true
				                ErrorMessage     						= error message
							invoked.PrmEnterpriseGroup					= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup							= PrmRunGroup
							invoked.PrmInterfaceInDetail				= true
							invoked.PrmBypassStructureRelationEdit		= false
							invoked.PrmByPassOrganizationCode			= true
							invoked.PrmEditAndInterface					= true
						LocalProcessName	= "FSM_ION_SyncSourceSystemJournalEntry_Inbound"	
						if (DerivedMailFrom entered and DerivedSendTo entered)
							send email
								to DerivedSendTo
								from DerivedMailFrom
								subject "Global_\Ledger_\Transactions_\CreatedByGL_\Transaction_\InterfaceFor_\Finance_\Enterprise_\Group:<PrmFinanceEnterpriseGroup>_\Run_\Group:<PrmRunGroup>"
								Contents
									"ATTENTION:_\Process<LocalProcessName>Interface_\Global_\Ledger_\Transactions."
									"Message:_\Journalize_\Transaction_\InterfaceCompleteFor_\Run\Group:<PrmRunGroup>._\Review_\Transaction_\Interface_\ResultsForAnyErrorsThatMayHavePreventedTheJournalizeToComplete._\CorrectErrorsUsing_\Transaction_\InterfaceAndJournalizeTransactionsByPerformingThe_\Interface\TransactionsActionForThe_\Run\Group."
									"Finance_\Enterprise_\Group:<PrmFinanceEnterpriseGroup>"
									"Run_\Group:<PrmRunGroup>"
									"Create_\Date_\Time:<DerivedBODFormattedCurrentTimeStamp>"
									"JournalID:<LocalJournalID>"
									"Accounting\Entity:<LocalAccountingEntity>"
									"TrackerID:<LocalFSMInboundBODTracker>"
								
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp

		SendSyncSSJEConfirmBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 	is XMLDocument
				PrmErrorMessage					is Alpha 300
				PrmTrackerID					is Numeric 15
				PrmReasonCode					is Alpha 400
			Action Rules
				LocalTrackerID					= PrmTrackerID
				LocalErrorMessage				= PrmErrorMessage
				LocalFromLogicalID				= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID			= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalSSJEBODXML					= SourceSystemJournalEntryBOD
				LocalReturnCode					= "DataMissingInXML"

				LocalJournalID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				
				if(PrmReasonCode entered)
					LocalReasonCode				= PrmReasonCode
				else
					LocalReasonCode				= "Unable to complete process - FSM_ION_SyncSourceSystemJournalEntry_Inbound " + "For BOD TrackerID - " + LocalTrackerID + " XML Missing is Data. Please review XML for missing FinanceEnterpriseGroup or JournalID or check ActionCode"
				LocalHeaderAccountingEntity		= SourceSystemJournalEntryBOD select "//DataArea/Sync/AccountingEntityID"
				LocalMainUserTemplate			= "IONSyncSourceSystemJournalEntry_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncSourceSystemJournalEntryConfirmBODXML
						bod type is "Confirm.BOD"	
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
		
		SendSyncSSJEACKBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 			is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmFinEnterpriseGroup					is AlphaUpper size 30
				PrmAccountingEntity						is Alpha size 12
				PrmErrorLine							is Numeric 4
				PrmTrackerID							is Numeric 15
				PrmRunGroup						 		is Alpha size 30
			Action Rules
				LocalTrackerID							= PrmTrackerID
				LocalErrorMessage						= PrmErrorMessage
				LocalFromLogicalID						= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID					= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalJournalID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"							
				LocalFinanceEnterpriseGroup				= PrmFinEnterpriseGroup
				PrmErrorLine							= LocalGLTransactionLineSequence
				LocalHeaderAccountingEntity				= SourceSystemJournalEntryBOD select "//DataArea/Sync/AccountingEntityID"
				LocalReasonCode							= "Application error -  GLTransactionInterface failed to create transaction for Finance Enterprise Group:" + PrmFinEnterpriseGroup +" Run Group:"+PrmRunGroup + "  Accounting Entity:" + LocalHeaderAccountingEntity + " Line:"+ PrmErrorLine + "   Process: FSM_ION_ SyncSourceSystemJournalEntry_Inbound and Review Tracker:"+ LocalTrackerID
				LocalMainUserTemplate					= "IONSyncSourceSystemJournalEntry_AcknowledgeBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncSourceSystemJournalEntryAcknowledgeBODXML
						bod type is "Acknowledge.SourceSystemJournalEntry"
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
		
		SendSyncSSJEAcceptedACKBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 			is XMLDocument
				PrmFinEnterpriseGroup					is AlphaUpper size 30
				PrmRunGroup						 		is Alpha size 30
				PrmTransLines							is Numeric 4
				PrmAccountingEntity						is Alpha size 12
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalTrackerID							= PrmTrackerID
				LocalFromLogicalID						= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID					= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalReturnCode							=  "TrackerID: "+ LocalTrackerID + " for Process: Sync.SourceSystemJournalEntry is completed."
				LocalReasonCode							= "Successfully Inserted"
				LocalJournalID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"
				LocalRunGroup							= PrmRunGroup
				LocalHeaderAccountingEntity				= SourceSystemJournalEntryBOD select "//DataArea/Sync/AccountingEntityID"
				if(DerivedInterfaceTrans = "true")
					LocalReturnMessage					= "Journalize Transaction Interface complete for RunGroup: " +LocalRunGroup +", "+ PrmTransLines + " transactions created for FinanceEnterpriseGroup: " + PrmFinEnterpriseGroup +", JournalID: " + LocalJournalID + " Review Transaction Interface Results for any errors that may have prevented the journalize to complete. Correct errors using Transaction Interface and journalize transactions by performing the InterfaceTransactions action for the RunGroup."
				else
					LocalReturnMessage					= "Transaction Interface complete for RunGroup: " +LocalRunGroup+ ", "+ PrmTransLines + "transactions created for FinanceEnterpriseGroup: " + PrmFinEnterpriseGroup +", JournalID: " + LocalJournalID + " Review Transaction Interface Results for any errors. Correct errors using Transaction Interface and journalize transactions by performing the InterfaceTransactions action for the RunGroup."
				LocalMainUserTemplate					= "IONSyncSourceSystemJournalEntry_AccptAcknowledgeBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncSourceSystemJournalEntryAccptAcknowledgeBODXML
						bod type is "Acknowledge.SourceSystemJournalEntry"
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
#endif		
		

#ifdef module GeneralLedger			
		ProcessSourceSystemJournalEntry is an Import Action
			restricted
			bod type is Process.SourceSystemJournalEntry
			Parameters
				SourceSystemJournalEntryBOD 	is XMLDocument
            Action Rules
				LocalActionCode					= SourceSystemJournalEntryBOD select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalJournalID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"
				LocalUserAreaCount				= SourceSystemJournalEntryBOD select "count(//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property)"
				LocalBODXML						= SourceSystemJournalEntryBOD
				LocalSSJEProcessBODID			= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalVariationID				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID/@variationID"
				LocalHeaderAccountingEntity		= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID/@accountingEntity"
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalHeaderAccountingEntity     = NativeAccountingEntity
				LocalAccountingEntity			= LocalHeaderAccountingEntity
				LocalBODConfigNoun				= "SourceSystemJournalEntry"
				LocalIterator					= 1
				while(LocalUserAreaCount >= LocalIterator)
					LocalName					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
					LocalNameValue				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/BaseJournalEntryHeader/UserArea/Property[<LocalIterator>]/NameValue"	
					
					if(LocalName = "gfc.FinanceEnterpriseGroup" or LocalName = "fsm.FinanceEnterpriseGroup" or LocalName = "ips.FinanceEnterpriseGroup" or LocalName = "FinanceEnterpriseGroup")
						LocalFinanceEnterpriseGroup		= LocalNameValue
					else
					if(LocalName = "fsm.AccountingEntity" or LocalName = "gfc.sourceAccountingEntity")
						LocalAccountingEntity		= LocalNameValue
					else
					if(LocalName = "fsm.RunGroup")
						LocalRunGroup				= LocalNameValue
					else
					if(LocalName = "gfc.sourceJournalId")
						LocalSourceJournalID 		= LocalNameValue
					else
					if(LocalName = "GeneralLedgerSystemCode")
						LocalHeaderSystem			= LocalNameValue	
					else
					if(LocalName = "gfc.sourceAutoReverse")
						LocalHeaderAutoReverse 		= LocalNameValue	
					else
					if(LocalName = "fsm.sourceAutoReverse")
						LocalHeaderAutoReverse		= LocalNameValue
					else
					if(LocalName = "fsm.sourceAutoReverseDate")
						LocalHeaderAutoReverseDate	= LocalNameValue
					LocalIterator		= LocalIterator + 1
				
				if(LocalHeaderAutoReverse = "Y")
					LocalAutoReverse = "true"
				else
					LocalAutoReverse = ""
					
				if(LocalSourceJournalID entered)
					LocalRunGroup = NativeRunGroup
					LocalMultiBODs = "M"	
				else
				if(LocalSourceJournalID not entered)
					LocalRunGroup = "SSJE" +"-"+ LocalJournalID
					LocalMultiBODs = "S"
				
				if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "SourceSystemJournalEntry"
							invoked.Direction				= 2					
							invoked.RunGroup				= LocalRunGroup
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalJournalID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSSJEProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker	
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.RunGroup				= LocalRunGroup
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalJournalID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSSJEProcessBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if((LocalActionCode= "Add" or LocalFinanceEnterpriseGroup entered) and LocalJournalID entered)
						invoke CreateGLRecords
							invoked.SourceSystemJournalEntryBOD			= SourceSystemJournalEntryBOD	
							invoked.PrmFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
							invoked.PrmAccountingEntity					= LocalAccountingEntity
							invoked.PrmRunGroup							= LocalRunGroup
							invoked.PrmSystem							= LocalHeaderSystem
							invoked.PrmAutoReverse						= LocalAutoReverse
							invoked.PrmAutoReverseDate					= LocalHeaderAutoReverseDate
							invoked.PrmMultiBODs						= LocalMultiBODs
							invoked.PrmLikeInboundTracker 				= LocalFSMInboundBODTracker
					else
						if(LocalActionCode != "Add" and LocalFinanceEnterpriseGroup not entered)
							LocalErrorMessage = "Error: SourceSystenJournalHeader actionCode must be Add, Error: Finance Enterprise Group, JournalEntryHeader.BaseJournalEntryHeader.UserArea.Property.NameValue must be fsm.FinanceEnterpriseGroup"
						else	
						if(LocalActionCode != "Add")
							LocalErrorMessage = "Error: SourceSystenJournalHeader actionCode must be Add"
						else
						if(LocalFinanceEnterpriseGroup not entered)
							LocalErrorMessage = "Error: Invalid Finance Enterprise Group, JournalEntryHeader.BaseJournalEntryHeader.UserArea.Property.NameValue must be fsm.FinanceEnterpriseGroup"
						else
						if(LocalJournalID not entered)
							LocalErrorMessage = "JournalID is missing in XML"
					
						invoke SendPSSJEConfirmBOD
							invoked.SourceSystemJournalEntryBOD = SourceSystemJournalEntryBOD
							invoked.PrmErrorMessage 			= LocalErrorMessage
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							invoked.PrmReasonCode				= ""
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= true
							invoked.ErrorMessage 				= LocalErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "SourceSystemJournalEntry"
						invoked.Direction				= 2					
						invoked.RunGroup				= LocalRunGroup
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalJournalID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSSJEProcessBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process SourceSystemJournalEntry Inbound BOD Service is not Enabled"			
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.RunGroup				= LocalRunGroup
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalJournalID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSSJEProcessBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process SourceSystemJournalEntry Inbound BOD Service is not Enabled"			

		CreateGLRecords is an Import Action			
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 		is XMLDocument
				PrmFinanceEnterpriseGroup			is Alpha size 8
				PrmAccountingEntity					is Alpha size 12
				PrmRunGroup							is AlphaUpper size 30
				PrmSystem							is AlphaUpper size 4
				PrmAutoReverse						is Alpha size 5
				PrmAutoReverseDate					is Alpha size 20 
				PrmMultiBODs						is Alpha size 4
				PrmLikeInboundTracker   			is like FSMInboundBODTracker
			Local Fields
				LocalTransLines						is XMLDocument
			Action Rules			
				LocalFSMInboundBODTracker 			= PrmLikeInboundTracker
				LocalLineCount						= SourceSystemJournalEntryBOD select "count(//DataArea/SourceSystemJournalEntry/JournalEntryLine)"
				LocalJournalID						= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalSSJEProcessBODID				= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalFromLogicalID					= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalCreateDateTime					= SourceSystemJournalEntryBOD select "//ApplicationArea/CreationDateTime"
				LocalHeaderAccountingEntity			= SourceSystemJournalEntryBOD select "//DataArea/Process/AccountingEntityID"
				LocalComponentID					= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/ComponentID"
				LocalIterator						= 1
				LocalAccountingEntity				= PrmAccountingEntity
				LocalRunGroup						= PrmRunGroup
				LocalFinanceEnterpriseGroup			= PrmFinanceEnterpriseGroup
				
				while(LocalLineCount >= LocalIterator)
					LocalTransLines				= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryLine[<LocalIterator>]"
					LocalTransactionAmount		= LocalTransLines select "/JournalEntryLine/Amount"
					LocalAccountCode			= LocalTransLines select "/JournalEntryLine/GLAccount/GLNominalAccount"		
					LocalCurrencyCode			= LocalTransLines select "/JournalEntryLine/Amount/@currencyID"
					LocalTempPostingDate		= LocalTransLines select "/JournalEntryLine/SourceAccountingDate/PostDateTime"
					LocalPostingDate			= LocalTempPostingDate[1:4] + LocalTempPostingDate[6:7] + LocalTempPostingDate[9:10]
					LocalTempTransactionDate	= LocalTransLines select "/JournalEntryLine/ExchangeRateDateTime"
					LocalTransactionDate		= LocalTempTransactionDate[1:4] + LocalTempTransactionDate[6:7] + LocalTempTransactionDate[9:10]
					LineDescription				= LocalTransLines select "/JournalEntryLine/Description"
					LocalDocumentNumber			= LocalTransLines select "/JournalEntryLine/DocumentReference/DocumentID/ID"
					LocalResourceType			= LocalTransLines select "/JournalEntryLine/DocumentReference/@type"
					initialize LocalGLTransactionLineSequence
					initialize LocalProject
					initialize LocalAccountingUnit
					initialize LocalToAccountingEntity
					initialize LocalJob
					initialize LocalPayCode
					initialize LocalPosition
					initialize LocalDeductionCode
					initialize LocalUnitsAmount
					initialize LocalSystem
					initialize LocalGLEvent
					initialize LocalFinanceDimension1
					initialize LocalFinanceDimension2
					initialize LocalFinanceDimension3
					initialize LocalFinanceDimension4
					initialize LocalFinanceDimension5
					initialize LocalFinanceDimension6
					initialize LocalFinanceDimension7
					initialize LocalFinanceDimension8
					initialize LocalFinanceDimension9
					initialize LocalFinanceDimension10
					initialize LocalLineLevelAutoReverse
					initialize LocalAutoReverse
					initialize LocalAutoReverseDate
					initialize LocalLineLevelAutoReverseDate
					
					if(LocalResourceType = "Personnel")
						LocalResource = LocalDocumentNumber
						LocalDocumentNumber = ""
					else
						LocalResource = ""	
					
					if(LocalTransactionDate not entered)
						LocalTransactionDate = LocalPostingDate
					if(LocalPostingDate not entered)
						LocalPostingDate = LocalTransactionDate
					
					LocalLoop = 1
					LocalDimensionCodeCount					= LocalTransLines select "count(/JournalEntryLine/DimensionCodes/DimensionCode)"
					while(LocalDimensionCodeCount >= LocalLoop)
						LocalCodeName						= LocalTransLines select "/JournalEntryLine/DimensionCodes/DimensionCode[<LocalLoop>]/@listID"
						LocalCodeValue						= LocalTransLines select "/JournalEntryLine/DimensionCodes/DimensionCode[<LocalLoop>]"
						
						if(LocalCodeName = "Cost Centers")
							LocalAccountingUnit = LocalCodeValue
						else
						if(LocalCodeName = "Projects")
							LocalProject	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 1 Dimensions")
							LocalFinanceDimension1	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 2 Dimensions")
							LocalFinanceDimension2	= LocalCodeValue
						else	
						if(LocalCodeName = "Finance 3 Dimensions")
							LocalFinanceDimension3	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 4 Dimensions")
							LocalFinanceDimension4	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 5 Dimensions")
							LocalFinanceDimension5	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 6 Dimensions")
							LocalFinanceDimension6	= LocalCodeValue
						else
						if(LocalCodeName = "Finance 7 Dimensions")
							LocalFinanceDimension7	= LocalCodeValue
						else	
						if(LocalCodeName = "Finance 8 Dimensions")
							LocalFinanceDimension8	= LocalCodeValue
						else	
						if(LocalCodeName = "Finance 9 Dimensions")
							LocalFinanceDimension9		= LocalCodeValue
						else
						if(LocalCodeName = "Finance 10 Dimensions")
							LocalFinanceDimension10	= LocalCodeValue	
						LocalLoop = LocalLoop + 1
					
					LocalGLTransLineUserareaCount	= LocalTransLines select "count(/JournalEntryLine/UserArea/Property)"
					LocalLoop	= 1
					while(LocalGLTransLineUserareaCount >= LocalLoop)
						LocalTextName			= LocalTransLines select "/JournalEntryLine/UserArea/Property[<LocalLoop>]/NameValue/@name"
						LocalTextValue			= LocalTransLines select "/JournalEntryLine/UserArea/Property[<LocalLoop>]/NameValue"
						
						if(LocalTextName		= "gfc.sourceJeLineSequence")
							LocalGLTransactionLineSequence	= LocalTextValue
						else
						if(LocalTextName		= "gfc.sourceToGlCompany")
							LocalToAccountingEntity	= LocalTextValue
						else
						if(LocalTextName = "gfc.sourceJobCode" or LocalTextName = "JobCode" or LocalTextName = "fsm.JobCode")	
							LocalJob			= LocalTextValue
						else
						if(LocalTextName = "gfc.sourcePayCode" or LocalTextName = "PayCode" or LocalTextName = "fsm.PayCode")
							LocalPayCode		= LocalTextValue
						else
						if(LocalTextName = "gfc.sourcePositionCode" or LocalTextName = "Position" or LocalTextName = "fsm.Position")
							LocalPosition		= LocalTextValue
						else
						if(LocalTextName = "gfc.sourceHours" or LocalTextName = "Hours" or LocalTextName = "fsm.Hours")
							LocalUnitsAmount	= LocalTextValue
						else
						if(LocalTextName 		= "gfc.sourceSystem")
							LocalSystem	    	= LocalTextValue
						else
						if(LocalTextName 		= "GeneralLedgerEvent")
							LocalGLEvent	   	= LocalTextValue
						else
						if(LocalTextName 		= "gfc.sourceGeneralLedgerEvent")
							LocalGLEvent	   	= LocalTextValue	
						else
						if(LocalTextName = "gfc.sourceAutoReverse" and LocalTextValue entered)
							LocalLineLevelAutoReverse = LocalTextValue
						else
						if((LocalTextName = "fsm.sourceAutoReverse" or LocalTextName = "AutoReverse" or LocalTextName = "fsm.AutoReverse") and LocalTextValue entered)
							LocalLineLevelAutoReverse = LocalTextValue
						else
						if((LocalTextName = "fsm.sourceAutoReverseDate" or LocalTextName = "AutoReverseDate" or LocalTextName = "fsm.AutoReverseDate") and LocalTextValue entered)
							LocalLineLevelAutoReverseDate = LocalTextValue
						else
						if((LocalTextName = "gfc.sourceDeductionCode" or LocalTextName = "DeductionCode" or LocalTextName = "fsm.DeductionCode") and LocalTextValue entered)
							LocalDeductionCode = LocalTextValue
								
						LocalLoop			= LocalLoop + 1	
					
					if(LocalLineLevelAutoReverse = "Y")
						LocalAutoReverse = "true"
						LocalAutoReverseDate =  LocalLineLevelAutoReverseDate
					else
					if(LocalLineLevelAutoReverse = "N")
						LocalAutoReverse = "false"
						LocalAutoReverseDate = ""
					else
					if(LocalLineLevelAutoReverse not entered and PrmAutoReverse = "true")
						LocalAutoReverse = "true"
						LocalAutoReverseDate = PrmAutoReverseDate
					else
						LocalAutoReverse = "false"
						LocalAutoReverseDate = ""
					
					if(LocalSystem not entered and LineDescription = "Payroll interface transaction")
						LocalSystem  = "PR"
					if(PrmSystem entered)
						LocalSystem = PrmSystem
						
					if(LocalGLTransactionLineSequence not entered)
						LocalGLTransactionLineSequence 	= LocalTransLines select "/JournalEntryLine/@sequence"
					if(LocalToAccountingEntity not entered)	
						LocalToAccountingEntity		   	= PrmAccountingEntity
					LocalReference 	= LocalJournalID + "_Seq:" + LocalGLTransactionLineSequence
					
					invoke Create GLTransactionInterface
						resume on error
	                   		Error            							= true
	                        ErrorMessage     							= error message
						invoked.FinanceEnterpriseGroup					= PrmFinanceEnterpriseGroup
						invoked.GLTransactionInterface.RunGroup			= PrmRunGroup
						invoked.GLTransactionInterface.SequenceNumber	= LocalGLTransactionLineSequence
						invoked.AccountingEntity						= PrmAccountingEntity
						invoked.AccountCode								= LocalAccountCode
						invoked.ToAccountingEntity						= LocalToAccountingEntity
						invoked.AccountingUnit 							= LocalAccountingUnit
						invoked.TransactionAmount						= LocalTransactionAmount
						invoked.CurrencyCode							= LocalCurrencyCode
						invoked.PostingDate								= LocalPostingDate
						invoked.TransactionDate							= LocalTransactionDate 
						invoked.System									= LocalSystem
						invoked.GeneralLedgerEvent						= LocalGLEvent
						invoked.Description								= LineDescription
						invoked.Reference								= LocalReference
						invoked.DocumentNumber							= LocalDocumentNumber
						invoked.Project									= LocalProject
						invoked.FinanceDimension1						= LocalFinanceDimension1
						invoked.FinanceDimension2						= LocalFinanceDimension2
						invoked.FinanceDimension3						= LocalFinanceDimension3
						invoked.FinanceDimension4						= LocalFinanceDimension4
						invoked.FinanceDimension5						= LocalFinanceDimension5
						invoked.FinanceDimension6						= LocalFinanceDimension6
						invoked.FinanceDimension7						= LocalFinanceDimension7
						invoked.FinanceDimension8						= LocalFinanceDimension8
						invoked.FinanceDimension9						= LocalFinanceDimension9
						invoked.FinanceDimension10						= LocalFinanceDimension10
						invoked.Resource								= LocalResource
						invoked.AutoReverse								= LocalAutoReverse
						invoked.AutoReverseDate							= LocalAutoReverseDate
						invoked.UnitsAmount								= LocalUnitsAmount
						invoked.SenderBODID								= LocalSSJEProcessBODID
						invoked.SenderComponentID						= LocalComponentID
						invoked.SenderCreationDateTime					= LocalCreateDateTime
						invoked.SenderLogicalID							= LocalFromLogicalID
						invoked.SenderOriginalBOD						= PrmMultiBODs	
						invoked.Position								= LocalPosition
						invoked.PayCode									= LocalPayCode
						invoked.Job										= LocalJob			
					if(Error)
					    LocalFSMInboundBODTracker 						= PrmLikeInboundTracker
						LocalReasonCode = "Application error -  GLTransactionInterface failed to create transaction for Finance Enterprise Group:" + PrmFinanceEnterpriseGroup +" Run Group:"+PrmRunGroup + "  Accounting Entity:" + LocalHeaderAccountingEntity + " Line:"+ LocalGLTransactionLineSequence + " Process: FSM_ION_ ProcessSourceSystemJournalEntry_Inbound and Review Tracker:"+ LocalFSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 								= Error
							invoked.ErrorMessage 						= ErrorMessage
							invoked.Status								= 2
							invoked.CloseDate							= system current timestamp
						
						if(DerivedParameterSendAckRejected="Y")
							invoke SendSSJEACKBOD
								invoked.PrmErrorMessage					= ErrorMessage
								invoked.SourceSystemJournalEntryBOD 	= SourceSystemJournalEntryBOD
								invoked.PrmFinEnterpriseGroup			= PrmFinanceEnterpriseGroup
								invoked.PrmAccountingEntity				= LocalAccountingEntity
								invoked.PrmErrorLine					= LocalGLTransactionLineSequence
								invoked.PrmTrackerID					= LocalFSMInboundBODTracker
								invoked.PrmRunGroup						= PrmRunGroup
						invoke SendPSSJEConfirmBOD
							invoked.PrmErrorMessage 					= ErrorMessage
							invoked.SourceSystemJournalEntryBOD	 		= SourceSystemJournalEntryBOD
							invoked.PrmTrackerID						= LocalFSMInboundBODTracker
							invoked.PrmReasonCode						= LocalReasonCode
						LocalIterator	= LocalLineCount + 1	
					else
						if (LocalIterator%20 = 0)
							commit transaction
						LocalIterator	= LocalIterator + 1
										
				if(!Error)
					if(DerivedParameterSendAckAccepted = "Y")
						invoke SendSSJEAcceptedACKBOD
							invoked.SourceSystemJournalEntryBOD 		= SourceSystemJournalEntryBOD
							invoked.PrmFinEnterpriseGroup				= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup							= PrmRunGroup
							invoked.PrmAccountingEntity					= LocalAccountingEntity
							invoked.PrmTransLines						= LocalLineCount
							invoked.PrmTrackerID						= LocalFSMInboundBODTracker
					
					if(DerivedInterfaceTrans = "true")	
						invoke InterfaceTransactions GLTransactionInterface
							resume on error
				           		Error            						= true
				                ErrorMessage     						= error message
							invoked.PrmEnterpriseGroup					= PrmFinanceEnterpriseGroup
							invoked.PrmRunGroup							= PrmRunGroup
							invoked.PrmInterfaceInDetail				= true
							invoked.PrmBypassStructureRelationEdit		= false
							invoked.PrmByPassOrganizationCode			= true
							invoked.PrmEditAndInterface					= true
						LocalProcessName	= "FSM_ION_ProcessSourceSystemJournalEntry_Inbound"	
						
						if (DerivedMailFrom entered and DerivedSendTo entered)
							send email
								to DerivedSendTo
								from DerivedMailFrom
								subject "Global_\Ledger_\Transactions_\CreatedByGL_\Transaction_\InterfaceFor_\Finance_\Enterprise_\Group:<PrmFinanceEnterpriseGroup>_\Run_\Group:<PrmRunGroup>"
								Contents
									"ATTENTION:_\Process<LocalProcessName>Interface_\Global_\Ledger_\Transactions."
									"Message:_\Journalize_\Transaction_\InterfaceCompleteFor_\Run\Group:<PrmRunGroup>._\Review_\Transaction_\Interface_\ResultsForAnyErrorsThatMayHavePreventedTheJournalizeToComplete._\CorrectErrorsUsing_\Transaction_\InterfaceAndJournalizeTransactionsByPerformingThe_\Interface\TransactionsActionForThe_\Run\Group."
									"Finance_\Enterprise_\Group:<PrmFinanceEnterpriseGroup>"
									"Run_\Group:<PrmRunGroup>"
									"Create_\Date_\Time:<DerivedBODFormattedCurrentTimeStamp>"
									"JournalID:<LocalJournalID>"
									"Accounting\Entity:<LocalAccountingEntity>"
									"TrackerID:<LocalFSMInboundBODTracker>"
						
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp
									
		SendPSSJEConfirmBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 	is XMLDocument
				PrmErrorMessage					is Alpha 300
				PrmTrackerID					is Numeric 15
				PrmReasonCode					is Alpha 400
			Action Rules
				LocalTrackerID					= PrmTrackerID
				LocalErrorMessage				= PrmErrorMessage
				LocalFromLogicalID				= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID			= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalSSJEBODXML					= SourceSystemJournalEntryBOD
				LocalReturnCode					= "DataMissingInXML"

				LocalJournalID					= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				if(PrmReasonCode entered)
					LocalReasonCode				= PrmReasonCode
				else
					LocalReasonCode				= "Unable to complete process - FSM_ION_ProcessSourceSystemJournalEntry_Inbound " + "For BOD TrackerID - " + LocalTrackerID + " XML Missing is Data. Please review XML for missing FinanceEnterpriseGroup or JournalID or check ActionCode"
				LocalHeaderAccountingEntity		= SourceSystemJournalEntryBOD select "//DataArea/Process/AccountingEntityID"
				LocalMainUserTemplate			= "IONProcessSourceSystemJournalEntry_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessSourceSystemJournalEntryConfirmBODXML
						bod type is "Confirm.BOD"	
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
		SendSSJEACKBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 			is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmFinEnterpriseGroup					is AlphaUpper size 30
				PrmAccountingEntity						is Alpha size 12
				PrmErrorLine							is Numeric 4
				PrmTrackerID							is Numeric 15
				PrmRunGroup						 		is Alpha size 30
			Action Rules
				LocalTrackerID							= PrmTrackerID
				LocalErrorMessage						= PrmErrorMessage
				LocalFromLogicalID						= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID					= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalJournalID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"							
				LocalFinanceEnterpriseGroup				= PrmFinEnterpriseGroup
				PrmErrorLine							= LocalGLTransactionLineSequence
				LocalHeaderAccountingEntity				= SourceSystemJournalEntryBOD select "//DataArea/Process/AccountingEntityID"
				LocalReasonCode							= "Application error -  GLTransactionInterface failed to create transaction for Finance Enterprise Group:" + PrmFinEnterpriseGroup +" Run Group:"+PrmRunGroup + "  Accounting Entity:" + LocalHeaderAccountingEntity + " Line:"+ PrmErrorLine + "   Process: FSM_ION_ ProcessSourceSystemJournalEntry_Inbound and Review Tracker:"+ LocalTrackerID
				LocalMainUserTemplate					= "IONProcessSourceSystemJournalEntry_AcknowledgeBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessSourceSystemJournalEntryAcknowledgeBODXML
						bod type is "Acknowledge.SourceSystemJournalEntry"
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
		
		SendSSJEAcceptedACKBOD is an Instance Action
			restricted			
			Parameters
				SourceSystemJournalEntryBOD 			is XMLDocument
				PrmFinEnterpriseGroup					is AlphaUpper size 30
				PrmRunGroup						 		is Alpha size 30
				PrmTransLines							is Numeric 4
				PrmAccountingEntity						is Alpha size 12
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalTrackerID							= PrmTrackerID
				LocalFromLogicalID						= SourceSystemJournalEntryBOD select "//ApplicationArea/Sender/LogicalID"
				LocalSSJEProcessBODID					= SourceSystemJournalEntryBOD select "//ApplicationArea/BODID"
				LocalReturnCode							=  "TrackerID: "+ LocalTrackerID + " for Process: Process.SourceSystemJournalEntry is completed."
				LocalReasonCode							= "Successfully Inserted"
				LocalJournalID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/JournalID"
				LocalDisplayID							= SourceSystemJournalEntryBOD select "//DataArea/SourceSystemJournalEntry/JournalEntryHeader/DisplayID"
				LocalRunGroup							= PrmRunGroup
				LocalHeaderAccountingEntity				= SourceSystemJournalEntryBOD select "//DataArea/Process/AccountingEntityID"
				if(DerivedInterfaceTrans = "true")
					LocalReturnMessage					= "Journalize Transaction Interface complete for RunGroup: " +LocalRunGroup +", "+ PrmTransLines + " transactions created for FinanceEnterpriseGroup: " + PrmFinEnterpriseGroup +", JournalID: " + LocalJournalID + " Review Transaction Interface Results for any errors that may have prevented the journalize to complete. Correct errors using Transaction Interface and journalize transactions by performing the InterfaceTransactions action for the RunGroup."
				else
					LocalReturnMessage					= "Transaction Interface complete for RunGroup: " +LocalRunGroup+ ", "+ PrmTransLines + "transactions created for FinanceEnterpriseGroup: " + PrmFinEnterpriseGroup +", JournalID: " + LocalJournalID + " Review Transaction Interface Results for any errors. Correct errors using Transaction Interface and journalize transactions by performing the InterfaceTransactions action for the RunGroup."
				LocalMainUserTemplate					= "IONProcessSourceSystemJournalEntry_AccptAcknowledgeBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessSourceSystemJournalEntryAccptAcknowledgeBODXML
						bod type is "Acknowledge.SourceSystemJournalEntry"
						accounting entity is LocalHeaderAccountingEntity
						document id is LocalJournalID
#endif

#ifdef module currency


		SyncCurrencyExchangeRateMaster is an Import Action
			restricted
			bod type is Sync.CurrencyExchangeRateMaster
			Parameters
				CurrencyExchangeRateMaster 	is XMLDocument
			Action Rules
				LocalActionCode					= CurrencyExchangeRateMaster select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalFromCurrency				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/SourceCurrencyCode"
				LocalCurrency					= LocalFromCurrency
				LocalCurrencyDescription		= LocalFromCurrency
				LocalToCurrency					= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/TargetCurrencyCode"
				LocalCurrRate					= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/RateNumeric"
				LocalExchangeDate				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/SetDateTime"
				LocalExchangeDate				= LocalExchangeDate[1:4] + LocalExchangeDate[6:7] + LocalExchangeDate[9:10]
				LocalVariationID				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID/@variationID"
				LocalSenderBODID				= CurrencyExchangeRateMaster select "//ApplicationArea/BODID"
				LocalFinanceEnterpriseGroup		= DerivedFEGParameter
				LocalCurrRateDocID				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID"
				LocalBODXML						= CurrencyExchangeRateMaster
				LocalCurrCount					= 1
				LocalBODConfigNoun				= "CurrencyExchangeRateMaster"
				LocalCurrencyTable				= FinanceEnterpriseGroupRel.CurrencyTable
				
				if(FSMBODSyncConfigurationRel exists and FSMBODSyncConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "CurrencyExchangeRateMaster"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalCurrRateDocID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalCurrRateDocID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					if(LocalActionCode = "Add")
						while(LocalCurrCount <= 2)
							if(CurrencyRel exists)
								LocalCurrCount				= LocalCurrCount + 1
								LocalCurrency 				= LocalToCurrency
								LocalCurrencyDescription 	= LocalToCurrency
							else
								invoke Create Currency
									resume on error
					           			Error            		= true
					                	ErrorMessage     		= error message
									invoked.Currency			= LocalCurrency
									invoked.Description			= LocalCurrency
								LocalCurrCount					= LocalCurrCount + 1
								LocalCurrency 					= LocalToCurrency
								LocalCurrencyDescription 		= LocalToCurrency
						if(!Error)
							if(CurrencyRelationshipRel not exists)
								invoke Create CurrencyRelationship
									resume on error
					           			Error            									= true
					                	ErrorMessage     									= error message
									invoked.FinanceEnterpriseGroup							= LocalFinanceEnterpriseGroup		
									invoked.CurrencyRelationship.FromCurrency				= LocalFromCurrency
									invoked.CurrencyRelationship.ToCurrency					= LocalToCurrency
							if(!Error)
								invoke Create CurrExchangeRate
									resume on error
					           			Error            										= true
					                	ErrorMessage     										= error message
									invoked.FinanceEnterpriseGroup								= LocalFinanceEnterpriseGroup
									invoked.CurrencyTable										= LocalCurrencyTable
									invoked.CurrExchangeRate.CurrencyRelationship.FromCurrency	= LocalFromCurrency
									invoked.CurrExchangeRate.CurrencyRelationship.ToCurrency	= LocalToCurrency	
									invoked.ExchangeDate										= LocalExchangeDate
									invoked.Rate												= LocalCurrRate
					else
						if(CurrExchangeRateRel exists)
							invoke Update CurrExchangeRateRel
								resume on error
					           		Error            										= true
					                ErrorMessage     										= error message
								invoked.FinanceEnterpriseGroup								= LocalFinanceEnterpriseGroup
								invoked.CurrencyTable										= LocalCurrencyTable
								invoked.CurrExchangeRate.CurrencyRelationship.FromCurrency	= LocalFromCurrency
								invoked.CurrExchangeRate.CurrencyRelationship.ToCurrency	= LocalToCurrency	
								invoked.ExchangeDate										= LocalExchangeDate
								invoked.Rate												= LocalCurrRate
							
					if(Error or CurrencyRelationshipRel not exists)
						if(!Error and CurrencyRelationshipRel not exists)
							Error					= true
							ErrorMessage			= "Currency Relationship does not exist"
						LocalRateStatus				= "Rejected"
						if(LocalActionCode = "Add")
							LocalStatusMessage 		= "Failed to create Currency Rate"
						else
							if(LocalActionCode = "Replace")
								LocalStatusMessage 		= "Failed to update Currency Rate"	
					else
						LocalRateStatus		= "Accepted"
						if(LocalActionCode = "Add")
							LocalStatusMessage 		= "Successfully Created Currency Rate"
						else
							if(LocalActionCode = "Replace")
								LocalStatusMessage 	 = "Successfully Updated Currency Rate"		
					if(Error or CurrencyRelationshipRel not exists)
						invoke CurrencyExchangeRateConfirmBOD
							invoked.CurrencyExchangeRateMaster	= CurrencyExchangeRateMaster
							invoked.PrmErrorMessage				= ErrorMessage
							invoked.PrmRateStatus				= LocalRateStatus
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker		

						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "CurrencyExchangeRateMaster"
						invoked.Direction				= 2					
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalCurrRateDocID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync CurrencyExchangeRateMaster Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalCurrRateDocID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync CurrencyExchangeRateMaster Inbound BOD Service is not Enabled"
						
		CurrencyExchangeRateConfirmBOD is an Instance Action
			restricted			
			Parameters
				PrmErrorMessage				is Alpha 300 
				CurrencyExchangeRateMaster 	is XMLDocument
				PrmRateStatus				is Alpha 12
				PrmTrackerID				is Numeric 15
			Action Rules
				LocalTrackerID			= PrmTrackerID
				LocalBODXML				= CurrencyExchangeRateMaster
				LocalAccountingEntity 	= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID/@accountingEntity"
				LocalCurrRateDocID		= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID"
				LocalFromLogicalID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/ComponentID"
				LocalSenderBODID		= CurrencyExchangeRateMaster select "//ApplicationArea/BODID"
				LocalErrorMessage		= PrmErrorMessage
				LocalRateStatus			= PrmRateStatus
				LocalMainUserTemplate	= "IONSyncCurrencyExchangeRateMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncCurrExchangeRateConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalCurrRateDocID
						



		ProcessCurrencyExchangeRateMaster is an Import Action
			restricted
			bod type is Process.CurrencyExchangeRateMaster
			Parameters
				CurrencyExchangeRateMaster 	is XMLDocument
            Action Rules
				LocalActionCode					= CurrencyExchangeRateMaster select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalFromCurrency				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/SourceCurrencyCode"
				LocalCurrency					= LocalFromCurrency
				LocalCurrencyDescription		= LocalFromCurrency
				LocalToCurrency					= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/TargetCurrencyCode"
				LocalCurrRate					= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/RateNumeric"
				LocalExchangeDate				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/CurrencyExchangeRate/SetDateTime"
				LocalCurrUserareacount			= CurrencyExchangeRateMaster select "count(//DataArea/CurrencyExchangeRateMaster/UserArea/Property)"
				LocalCurrRateDocID				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID"
				LocalVariationID				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID/@variationID"
				LocalSenderBODID				= CurrencyExchangeRateMaster select "//ApplicationArea/BODID"
				LocalBODXML						= CurrencyExchangeRateMaster
				LocalBODConfigNoun				= "CurrencyExchangeRateMaster"
				LocalLoop						= 1
				LocalCurrCount					= 1
				LocalFinanceEnterpriseGroup		= DerivedFinGroupParameter
				LocalCurrencyTable				= DerivedCurrTableParameter
				while(LocalLoop <= LocalCurrUserareacount)
					LocalName					= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/UserArea/Property[<LocalLoop>]/NameValue/@name"
					LocalNameValue				= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/UserArea/Property[<LocalLoop>]/NameValue"
					if(LocalName="FinanceEnterpriseGroup" and LocalNameValue entered)
						LocalFinanceEnterpriseGroup	= LocalNameValue
					else
						if(LocalName="CurrencyTable" and LocalNameValue entered)
							LocalCurrencyTable		= LocalNameValue
					LocalLoop						= LocalLoop + 1
				
				if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "CurrencyExchangeRateMaster"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalCurrRateDocID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalCurrRateDocID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
											
					if(LocalActionCode = "Add")
						while(LocalCurrCount <= 2)
							if(CurrencyRel exists)
								LocalCurrCount				= LocalCurrCount + 1
								LocalCurrency 				= LocalToCurrency
								LocalCurrencyDescription 	= LocalToCurrency
							else
								invoke Create Currency
									resume on error
					           			Error            		= true
					                	ErrorMessage     		= error message
									invoked.Currency			= LocalCurrency
									invoked.Description			= LocalCurrency
								LocalCurrCount					= LocalCurrCount + 1
								LocalCurrency 					= LocalToCurrency
								LocalCurrencyDescription 		= LocalToCurrency
						if(!Error)
							if(CurrencyRelationshipRel not exists)
								invoke Create CurrencyRelationship
									resume on error
					           			Error            									= true
					                	ErrorMessage     									= error message
									invoked.FinanceEnterpriseGroup							= LocalFinanceEnterpriseGroup		
									invoked.CurrencyRelationship.FromCurrency				= LocalFromCurrency
									invoked.CurrencyRelationship.ToCurrency					= LocalToCurrency
							if(!Error)
								invoke Create CurrExchangeRate
									resume on error
					           			Error            										= true
					                	ErrorMessage     										= error message
									invoked.FinanceEnterpriseGroup								= LocalFinanceEnterpriseGroup
									invoked.CurrencyTable										= LocalCurrencyTable
									invoked.CurrExchangeRate.CurrencyRelationship.FromCurrency	= LocalFromCurrency
									invoked.CurrExchangeRate.CurrencyRelationship.ToCurrency	= LocalToCurrency	
									invoked.ExchangeDate										= LocalExchangeDate
									invoked.Rate												= LocalCurrRate
					else
						if(CurrExchangeRateRel exists)
							invoke Update CurrExchangeRateRel
								resume on error
					           		Error            										= true
					                ErrorMessage     										= error message
								invoked.FinanceEnterpriseGroup								= LocalFinanceEnterpriseGroup
								invoked.CurrencyTable										= LocalCurrencyTable
								invoked.CurrExchangeRate.CurrencyRelationship.FromCurrency	= LocalFromCurrency
								invoked.CurrExchangeRate.CurrencyRelationship.ToCurrency	= LocalToCurrency	
								invoked.ExchangeDate										= LocalExchangeDate
								invoked.Rate												= LocalCurrRate
					if(Error)
						LocalRateStatus		= "Rejected"
						if(LocalActionCode = "Add")
							LocalStatusMessage 	= "Failed to create Currency Rate"
						else
							if(LocalActionCode = "Replace")
								LocalStatusMessage 	= "Failed to update Currency Rate"	
					else
						LocalRateStatus	= "Accepted"
						if(LocalActionCode = "Add")
							LocalStatusMessage 	= "Successfully Created Currency Rate"
						else
							if(LocalActionCode = "Replace")
								LocalStatusMessage 	= "Successfully Updated Currency Rate"		
					if(Error)
						invoke SendCurrExchangeRateConfirmBOD
							invoked.CurrencyExchangeRateMaster	= CurrencyExchangeRateMaster
							invoked.PrmErrorMessage				= ErrorMessage
							invoked.PrmRateStatus				= LocalRateStatus
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						
						invoke SendCurrExchangeRateAckBOD
							invoked.CurrencyExchangeRateMaster		= CurrencyExchangeRateMaster
							invoked.PrmRateStatus					= LocalRateStatus
							invoked.PrmErrorMessage					= LocalStatusMessage
							invoked.PrmTrackerID					= LocalFSMInboundBODTracker
						
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 						= Error
							invoked.ErrorMessage 				= ErrorMessage
							invoked.Status						= 2
							invoked.CloseDate					= system current timestamp
					else
						invoke SendCurrExchangeRateAckBOD
							invoked.CurrencyExchangeRateMaster		= CurrencyExchangeRateMaster
							invoked.PrmRateStatus					= LocalRateStatus
							invoked.PrmErrorMessage					= LocalStatusMessage
							invoked.PrmTrackerID					= LocalFSMInboundBODTracker
						
						invoke Update FSMInboundBODTrackerRel
							invoked.Status						= 3
							invoked.CloseDate					= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "CurrencyExchangeRateMaster"
						invoked.Direction				= 2					
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalCurrRateDocID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process CurrencyExchangeRateMaster Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalCurrRateDocID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process CurrencyExchangeRateMaster Inbound BOD Service is not Enabled"
								
		SendCurrExchangeRateConfirmBOD is an Instance Action
			restricted			
			Parameters
				PrmErrorMessage				is Alpha 300 
				CurrencyExchangeRateMaster 	is XMLDocument
				PrmRateStatus				is Alpha 12
				PrmTrackerID				is Numeric 15
			Action Rules
				LocalTrackerID			= PrmTrackerID
				LocalBODXML				= CurrencyExchangeRateMaster
				LocalAccountingEntity 	= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID/@accountingEntity"
				LocalCurrRateDocID		= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID"
				LocalFromLogicalID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/ComponentID"
				LocalSenderBODID		= CurrencyExchangeRateMaster select "//ApplicationArea/BODID"
				LocalErrorMessage		= PrmErrorMessage
				LocalRateStatus			= PrmRateStatus
				LocalMainUserTemplate	= "IONProcessCurrencyExchangeRateMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessCurrExchangeRateConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalCurrRateDocID
					
		SendCurrExchangeRateAckBOD is an Instance Action
			restricted			
			Parameters
				CurrencyExchangeRateMaster 	is XMLDocument
				PrmRateStatus				is Alpha 12
				PrmErrorMessage				is Alpha 300
				PrmTrackerID				is Numeric 15
			Action Rules
				LocalTrackerID			= PrmTrackerID
				LocalFromLogicalID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/LogicalID"
				LocalAccountingEntity 	= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID/@accountingEntity"
				LocalCurrRateDocID		= CurrencyExchangeRateMaster select "//DataArea/CurrencyExchangeRateMaster/IDs/ID"
				LocalSenderBODID		= CurrencyExchangeRateMaster select "//ApplicationArea/BODID"
				LocalComponentID		= CurrencyExchangeRateMaster select "//ApplicationArea/Sender/ComponentID"
				LocalRateStatus			= PrmRateStatus
				LocalErrorMessage		= PrmErrorMessage
				LocalMainUserTemplate	= "IONProcessCurrencyExchangeRateMaster_AckBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessCurrExchangeRateAckBODXML
						bod type is "Acknowledge.CurrencyExchangeRateMaster"	
						accounting entity is LocalAccountingEntity
						document id is LocalCurrRateDocID
#endif				



#ifdef module GeneralLedger
		ProcessCodeDefinitionBODImport is an Import Action
			restricted
			bod type is Process.CodeDefinition
			Parameters
				CodeDefinition 	is XMLDocument
            Action Rules
				LocalActionCode					= CodeDefinition select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalListID						= CodeDefinition select "//DataArea/CodeDefinition/ListID"
				LocalUserAreaCount				= CodeDefinition select "count(//DataArea/CodeDefinition/Property)"
				LocalAccountingUnit				= CodeDefinition select "//DataArea/CodeDefinition/CodeValue"
				LocalDescription				= CodeDefinition select "//DataArea/CodeDefinition/Description"
				LocalStatus						= CodeDefinition select "//DataArea/CodeDefinition/Status/Code"
				LocalDocumentID					= CodeDefinition select "//DataArea/CodeDefinition/DocumentID/ID"
				LocalSenderBODID				= CodeDefinition select "//ApplicationArea/BODID"
				LocalStructure					= DerivedStructure
				LocalBODConfigNoun				= "CodeDefinition"
				LocalVariationID				= CodeDefinition select "//DataArea/CodeDefinition/DocumentID/ID/@variationID"
				if(LocalStatus = "Open")
					LocalActive = "true"
				else
					LocalActive = "false"	
				LocalIterator					= 1
				while(LocalUserAreaCount >= LocalIterator)
					LocalName					= CodeDefinition select "//DataArea/CodeDefinition/Property[<LocalIterator>]/NameValue/@name"
					LocalNameValue				= CodeDefinition select "//DataArea/CodeDefinition/Property[<LocalIterator>]/NameValue"
					if(LocalName = "FinanceEnterpriseGroup" or LocalName = "fsm.FinanceEnterpriseGroup")
						LocalFinanceEnterpriseGroup	= LocalNameValue
					else
						if(LocalName = "AccountingEntity" or LocalName = "fsm.AccountingEntity")
							LocalAccountingEntity 	= LocalNameValue
						else
							if(LocalName = "PostingType" or LocalName = "fsm.PostingType")
								LocalPostingType 	= LocalNameValue
							else
								if(LocalName = "Parent" or LocalName= "fsm.Parent")
									LocalParentAU	= LocalNameValue
					LocalIterator = LocalIterator + 1
					
				if(LocalPostingType = "true" or LocalPostingType not entered)
					LocalAccountingUnitType = "1"
					LocalParentAU			= LocalParentAU
				else
					LocalParentAU			= ""
					LocalAccountingUnitType = "2"
				
				if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "CodeDefinition"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= CodeDefinition
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker			= FSMInboundBODTracker			
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= CodeDefinition
							initialize invoked.Error			
							initialize invoked.ErrorMessage
							
					TransientFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
					TransientAccountingUnitStructure		= LocalStructure
					if((LocalActionCode = "Add" or LocalActionCode = "Replace") and LocalListID = "Cost Centers")
						if(LocalActionCode = "Replace" and LocalAccountingUnitType = "2")
							LocalAccountingUnit = AccountingUnitStructureRel.StructureSequence+"_"+LocalAccountingUnit
						else
							LocalAccountingUnit = LocalAccountingUnit
						
						if(AccountingUnitRel not exists)
							invoke Create AccountingUnit
								resume on error
					           		Error            				= true
					                ErrorMessage     				= error message
								invoked.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
								invoked.AccountingEntity			= LocalAccountingEntity
								invoked.DimensionStructure			= LocalStructure
								invoked.AccountingUnit				= LocalAccountingUnit
								invoked.Description					= LocalDescription
								invoked.Active						= LocalActive
								invoked.AccountingUnitType			= LocalAccountingUnitType
								invoked.ParentAccountingUnit		= LocalParentAU
							if(Error)
								invoke SendCodeDefinitionConfirmBOD
									invoked.CodeDefinition			= CodeDefinition
									invoked.PrmAccountingEntity		= LocalAccountingEntity
									invoked.PrmErrorMessage			= ErrorMessage
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 					= Error
									invoked.ErrorMessage 			= ErrorMessage
									invoked.Status					= 2
									invoked.CloseDate				= system current timestamp	
							else
								invoke SendCodeDefinitionACKBOD
									invoked.CodeDefinition 			= CodeDefinition
									invoked.PrmAccountingEntity		= LocalAccountingEntity
									invoked.PrmErrorMessage			= ErrorMessage
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
								invoke Update FSMInboundBODTrackerRel
									invoked.Status					= 3
									invoked.CloseDate				= system current timestamp
						else
						if(AccountingUnitRel exists)
							invoke Update AccountingUnitRel
								resume on error
					           		Error            							= true
					                ErrorMessage     							= error message
								invoked.FinanceEnterpriseGroup					= LocalFinanceEnterpriseGroup
								invoked.AccountingEntity						= LocalAccountingEntity
								invoked.DimensionStructure						= LocalStructure
								invoked.AccountingUnit							= LocalAccountingUnit
								invoked.Description								= LocalDescription
								invoked.AccountingUnitType						= LocalAccountingUnitType
								invoked.ParentAccountingUnit					= LocalParentAU	
							if(Error)
								invoke SendCodeDefinitionConfirmBOD
									invoked.CodeDefinition			= CodeDefinition
									invoked.PrmAccountingEntity		= LocalAccountingEntity
									invoked.PrmErrorMessage			= ErrorMessage
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
									
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 					= Error
									invoked.ErrorMessage 			= ErrorMessage
									invoked.Status					= 2
									invoked.CloseDate				= system current timestamp	
							else
								invoke SendCodeDefinitionACKBOD
									invoked.CodeDefinition 			= CodeDefinition
									invoked.PrmAccountingEntity		= LocalAccountingEntity
									invoked.PrmErrorMessage			= ErrorMessage
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker
								invoke Update FSMInboundBODTrackerRel
									invoked.Status					= 3
									invoked.CloseDate				= system current timestamp
					else
						ErrorMessage = "Invalid ListID or Action Code"
						invoke SendCodeDefinitionConfirmBOD
							invoked.CodeDefinition			= CodeDefinition
							invoked.PrmAccountingEntity		= LocalAccountingEntity
							invoked.PrmErrorMessage			= ErrorMessage
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke SendCodeDefinitionACKBOD
							invoked.CodeDefinition 			= CodeDefinition
							invoked.PrmAccountingEntity		= LocalAccountingEntity
							invoked.PrmErrorMessage			= ErrorMessage
							invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 					= Error
							invoked.ErrorMessage 			= ErrorMessage
							invoked.Status					= 2
							invoked.CloseDate				= system current timestamp	
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "CodeDefinition"
						invoked.Direction				= 2					
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= CodeDefinition
						invoked.Error					= true
						invoked.ErrorMessage			= "Process CodeDefinition Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= CodeDefinition
						invoked.Error					= true
						invoked.ErrorMessage			= "Process CodeDefinition Inbound BOD Service is not Enabled"
						
		SendCodeDefinitionConfirmBOD is an Instance Action
			restricted			
			Parameters
				CodeDefinition 							is XMLDocument
				PrmAccountingEntity						is Alpha size 12
				PrmErrorMessage							is Alpha 300
				PrmTrackerID							is Numeric 15
			Action Rules			
				LocalFromLogicalID		= CodeDefinition select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID		= CodeDefinition select "//ApplicationArea/Sender/ComponentID"
				LocalCreateDateTime		= CodeDefinition select "//ApplicationArea/CreationDateTime"
				LocalSenderBODID		= CodeDefinition select "//ApplicationArea/BODID"
				LocalActionCode			= CodeDefinition select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalDocumentID			= CodeDefinition select "//DataArea/CodeDefinition/DocumentID/ID"
				LocalAccountingUnit		= CodeDefinition select "//DataArea/CodeDefinition/CodeValue"
				LocalBODXML				= CodeDefinition
				LocalTrackerID			= PrmTrackerID
				LocalResponse	= "Rejected"
				if(LocalActionCode="Add")
					LocalActionCode = "Creating"
				else
				if(LocalActionCode="Replace")	
					LocalActionCode = "Updating"
				else
					LocalActionCode = "Finding"	
				
				LocalErrorMessage		= "Unable to complete process - FSM_ION_ProcessCodeDefinition ,ErrorMessage:"+PrmErrorMessage
				LocalReasonCode			= "Error Processing ProcessCodeDefinition BOD while "+LocalActionCode+ " AccountingUnit" +", "+"for data : "+ PrmAccountingEntity + "-" +LocalDocumentID+", "+"error message:"+ PrmErrorMessage + ", "+ "TrackerID:" + LocalTrackerID
				LocalMainUserTemplate	= "IONProcessCodeDefinition_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessCodeDefinitionConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is PrmAccountingEntity
						document id is LocalDocumentID
					
		SendCodeDefinitionACKBOD is an Instance Action
			restricted			
			Parameters
				CodeDefinition 							is XMLDocument
				PrmAccountingEntity						is Alpha size 12
				PrmErrorMessage							is Alpha size 300
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalSenderBODID		= CodeDefinition select "//ApplicationArea/BODID"
				LocalCreateDateTime		= CodeDefinition select "//ApplicationArea/CreationDateTime"
				LocalActionCode			= CodeDefinition select "//DataArea/Process/ActionCriteria/ActionExpression/@actionCode"
				LocalDocumentID			= CodeDefinition select "//DataArea/CodeDefinition/DocumentID/ID"
				LocalAccountingUnit		= CodeDefinition select "//DataArea/CodeDefinition/CodeValue"
				LocalTrackerID			= PrmTrackerID
				if(LocalActionCode = "Add")
					LocalActionCode 	= "Creating"
				else
				if(LocalActionCode ="Replace")
					LocalActionCode 	= "Updating"
				else
					LocalActionCode 	= "Finding"
				if(PrmErrorMessage entered)
					LocalResponse		= "Rejected"
					LocalReasonCode		= "Error Processing ProcessCodeDefinition BOD while "+LocalActionCode+ " AccountingUnit" +", "+"for data : "+ LocalAccountingUnit + "-" +LocalDocumentID+", "+"error message:"+ PrmErrorMessage + ", "+ "TrackerID:" + LocalTrackerID
					LocalReturnCode		= "Application_Error"
				else
					LocalResponse		= "Accepted"
					LocalReasonCode		= "Application_Success"
					LocalReturnCode		= "Application_Success"
				LocalMainUserTemplate	= "IONProcessCodeDefinition_AckBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessCodeDefinitionAckBODXML
						bod type is "Acknowledge.CodeDefinition"
						accounting entity is PrmAccountingEntity
						document id is LocalDocumentID	
#endif


#ifdef module cb
		ProcessRemittanceAdviceBODImport is an Import Action
			restricted
			bod type is Process.RemittanceAdvice
			Parameters
				RemittanceAdvice 	is XMLDocument
            Action Rules
            	LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalBODConfigNoun				= "RemittanceAdvice"
				LocalSenderBODID				= RemittanceAdvice select "//ApplicationArea/BODID"
				LocalBODXML						= RemittanceAdvice
				LocalVariationID				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/DocumentID/ID/@variationID"
            	LocalVendor						= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/PartyIDs/ID"
            	LocalReference					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/DocumentID/ID"
            	LocalRunGroup					= "REMITADC" + DerivedCurrentDate
            	LocalUserAreaCount				= RemittanceAdvice select "count(//DataArea/RemittanceAdvice/RemittanceAdviceHeader/UserArea/Property)"
            	LocalIterator					= 1
            	while(LocalUserAreaCount >= LocalIterator)
            		LocalName					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
            		LocalNameValue				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/UserArea/Property[<LocalIterator>]/NameValue"
            		if(LocalName = "Cash Management Group")
            			LocalCashManagementGroup= LocalNameValue
            		else
            		if(LocalName = "Payables Company")
            			LocalCompany			= LocalNameValue
            		else
            		if(LocalName = "To Accounting Entity")
            			LocalToAccountingEntity	= LocalNameValue
            		LocalIterator = LocalIterator +1
            		
            	if(FSMBODConfigurationRel exists and FSMBODConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 2
							invoked.Noun 					= "RemittanceAdvice"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
							invoked.BODAccountingEntity		= LocalToAccountingEntity
							invoked.Company					= LocalCompany
							invoked.RunGroup				= LocalRunGroup
							invoked.Vendor					= LocalVendor
							invoked.BODDocumentID			= LocalReference
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
				
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
							invoked.BODDocumentID			= LocalReference
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.BODAccountingEntity		= LocalToAccountingEntity
							invoked.Company					= LocalCompany
							invoked.RunGroup				= LocalRunGroup
							invoked.Vendor					= LocalVendor
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
	            	
	            	LocalBankTransNum				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/PartyIDs/BICID"
	            	LocalTransactionDate			= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/EffectiveDateTime"
	            	LocalPayeeName					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Name"
	            	LocalTransactionDate			= LocalTransactionDate[1:4] + LocalTransactionDate[6:7] + LocalTransactionDate[9:10]
	            	LocalDistributionAmt			= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/TotalAmount"
	            	LocalBankEntity					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/FinancialParty/PartyIDs/ID"
	            	LocalAccountNumber				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/FinancialParty/FinancialAccount/BBANID"
	            	LocalCountry					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/CountryCode"
	            	LocalAddressLine1				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/AddressLine[1]"
	            	LocalAddressLine2				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/AddressLine[2]"
	            	LocalAddressLine3				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/AddressLine[3]"
	            	LocalAddressLine4				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/AddressLine[4]"
					LocalMunicipality				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/CityName"
					LocalStateProvince				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/CountrySubDivisionCode"
					LocalPostalCode					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/RemitToParty/Location/Address/PostalCode"
	            	LocalIterator					= 1
	            	while(LocalUserAreaCount >= LocalIterator)
	            		LocalName					= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/UserArea/Property[<LocalIterator>]/NameValue/@name"
	            		LocalNameValue				= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/UserArea/Property[<LocalIterator>]/NameValue"
	            		if(LocalName = "Cash Code")
	            			LocalCashCode			= LocalNameValue
	            		else
	            		if(LocalName = "Sequence Number")
	            			LocalSequenceNumber		= LocalNameValue
	            		else
	            		if(LocalName = "Pay Group")
	            			LocalPayGroup			= LocalNameValue
	            		else
	            		if(LocalName = "Accounting Unit")
	            			LocalAccountingUnit		= LocalNameValue
	            		else
	            		if(LocalName = "Account")
	            			LocalAccountCode		= LocalNameValue
	            		else
	            		if(LocalName = "Project")
	            			LocalProject	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 1")
	            			LocalFinanceDimension1	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 2")
	            			LocalFinanceDimension2	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 3")
	            			LocalFinanceDimension3	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 4")
	            			LocalFinanceDimension4	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 5")
	            			LocalFinanceDimension5	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 6")
	            			LocalFinanceDimension6	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 7")
	            			LocalFinanceDimension7	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 8")
	            			LocalFinanceDimension8	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 9")
	            			LocalFinanceDimension9	= LocalNameValue
	            		else
	            		if(LocalName = "Finance Dimension 10")
	            			LocalFinanceDimension10	= LocalNameValue
						LocalIterator = LocalIterator + 1
					
					LocalSequenceNumber = LocalSequenceNumber + 1
							
	            	invoke ReadyToImport.Create CashLedgerPaymentImport
						resume on error
	                   		Error            					= true
	                        ErrorMessage     					= error message	
	            		invoked.CashManagementGroup								= LocalCashManagementGroup
						invoked.PayablesData.PayablesCompany					= LocalCompany
						invoked.PayablesData.Vendor								= LocalVendor
						invoked.PayablesData.PayGroup							= LocalPayGroup
						invoked.CashLedgerPaymentImport.RunGroup				= LocalRunGroup
						invoked.CashLedgerPaymentImport.ReferenceNumber			= LocalReference
						invoked.CashLedgerPaymentImport.SequenceNumber 			= LocalSequenceNumber
						invoked.CashLedgerPaymentImport.BankTransactionCode		= LocalBankTransNum
						invoked.CashLedgerPaymentImport.CashCode				= LocalCashCode
						invoked.TransactionDate									= LocalTransactionDate
						invoked.PayeeName										= LocalPayeeName
						invoked.DistributionAmount								= LocalDistributionAmt
						invoked.DistributionAccount.ToAccountingEntity			= LocalToAccountingEntity
						invoked.DistributionAccount.AccountingUnit				= LocalAccountingUnit
						invoked.DistributionAccount.GeneralLedgerChartAccount	= LocalAccountCode
						invoked.DistributionAccount.Project						= LocalProject
						invoked.DistributionAccount.FinanceDimension1			= LocalFinanceDimension1
						invoked.DistributionAccount.FinanceDimension2			= LocalFinanceDimension2
						invoked.DistributionAccount.FinanceDimension3			= LocalFinanceDimension3
						invoked.DistributionAccount.FinanceDimension4			= LocalFinanceDimension4
						invoked.DistributionAccount.FinanceDimension5			= LocalFinanceDimension5
						invoked.DistributionAccount.FinanceDimension6			= LocalFinanceDimension6
						invoked.DistributionAccount.FinanceDimension7			= LocalFinanceDimension7
						invoked.DistributionAccount.FinanceDimension8			= LocalFinanceDimension8
						invoked.DistributionAccount.FinanceDimension9			= LocalFinanceDimension9
						invoked.DistributionAccount.FinanceDimension10			= LocalFinanceDimension10
						invoked.BankEntity										= LocalBankEntity
						invoked.BankAccountNumber								= LocalAccountNumber
						invoked.PayeePostalAddress.Country						= LocalCountry
						invoked.PayeePostalAddress.DeliveryAddress.AddressLine1	= LocalAddressLine1
						invoked.PayeePostalAddress.DeliveryAddress.AddressLine2	= LocalAddressLine2
						invoked.PayeePostalAddress.DeliveryAddress.AddressLine3	= LocalAddressLine3
						invoked.PayeePostalAddress.DeliveryAddress.AddressLine4	= LocalAddressLine4
						invoked.PayeePostalAddress.Municipality					= LocalMunicipality
	        			invoked.PayeePostalAddress.StateProvince				= LocalStateProvince
	        			invoked.PayeePostalAddress.PostalCode					= LocalPostalCode
					
					if(Error)
						LocalReturnMessage										= "Error Processing Cash Ledger Payment Import - Creating record for Cash Management Group " + LocalCashManagementGroup + " Cash Code " + LocalCashCode + " Bank Transaction Code " + LocalBankTransNum + " Reference Number " + LocalReference + " Sequence Number " + LocalSequenceNumber
						invoke SendProcessRemittanceAdviceConfirmBOD
							invoked.RemittanceAdvice 							= RemittanceAdvice
							invoked.PrmCashManagementGroup						= LocalCashManagementGroup
							invoked.PrmAccountingEntity							= LocalToAccountingEntity
							invoked.PrmCompany									= LocalCompany
							invoked.PrmReturnMessage							= LocalReturnMessage
							invoked.PrmErrorMessage								= ErrorMessage
							invoked.PrmTrackerID								= LocalFSMInboundBODTracker
						
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 										= Error
							invoked.ErrorMessage 								= ErrorMessage
							invoked.Status										= 2
							invoked.CloseDate									= system current timestamp
					else
						invoke SendProcessRemittanceAdviceACKBOD
							invoked.RemittanceAdvice 							= RemittanceAdvice		
							invoked.PrmReturnMessage							= LocalReturnMessage				
							invoked.PrmCashManagementGroup						= LocalCashManagementGroup			
							invoked.PrmAccountingEntity							= LocalToAccountingEntity				
							invoked.PrmCompany									= LocalCompany					
							invoked.PrmErrorMessage								= ErrorMessage		
							invoked.PrmTrackerID								= LocalFSMInboundBODTracker					
							invoked.PrmRunGroup									= LocalRunGroup	
													
						invoke Update FSMInboundBODTrackerRel
							invoked.Status										= 3
							invoked.CloseDate									= system current timestamp
				else	
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 2
						invoked.Noun 					= "RemittanceAdvice"					
						invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
						invoked.BODDocumentID			= LocalReference
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.BODAccountingEntity		= LocalToAccountingEntity
						invoked.Company					= LocalCompany
						invoked.RunGroup				= LocalRunGroup
						invoked.Vendor					= LocalVendor
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process.RemittanceAdvice Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
						invoked.BODDocumentID			= LocalReference
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.BODAccountingEntity		= LocalToAccountingEntity
						invoked.Company					= LocalCompany
						invoked.RunGroup				= LocalRunGroup
						invoked.Vendor					= LocalVendor
						invoked.Status					= 1
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Process.RemittanceAdvice Inbound BOD Service is not Enabled"
								
		SendProcessRemittanceAdviceConfirmBOD is an Instance Action
			restricted			
			Parameters
				RemittanceAdvice 						is XMLDocument
				PrmReturnMessage						is Alpha size 600
				PrmCashManagementGroup					is AlphaUpper size 8
				PrmAccountingEntity						is Alpha size 12
				PrmCompany								is Numeric 4
				PrmErrorMessage							is Alpha size 300
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalBODXML								= RemittanceAdvice
				LocalSenderBODID						= RemittanceAdvice select "//ApplicationArea/BODID"
				LocalCreateDateTime						= RemittanceAdvice select "//ApplicationArea/CreationDateTime"
				LocalFromLogicalID						= RemittanceAdvice select "//ApplicationArea/Sender/LogicalID"
				LocalCashManagementGroup				= PrmCashManagementGroup
				LocalToAccountingEntity 				= LocalToAccountingEntity
				LocalCompany							= LocalCompany
				LocalTrackerID							= PrmTrackerID
				LocalReference							= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/DocumentID/ID"	
				LocalReturnMessage						= PrmReturnMessage
				LocalErrorMessage						= "Unable to complete process - FSM_ION_ProcessRemitAdvice_In" + ", Error Message: " + PrmErrorMessage
				LocalMainUserTemplate					= "IONProcessRemittanceAdvice_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessRemittanceAdviceConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is PrmAccountingEntity
						document id is LocalReference	

		SendProcessRemittanceAdviceACKBOD is an Instance Action
			restricted			
			Parameters
				RemittanceAdvice 						is XMLDocument
				PrmReturnMessage						is Alpha size 600
				PrmCashManagementGroup					is AlphaUpper size 8
				PrmAccountingEntity						is Alpha size 12
				PrmCompany								is Numeric 4
				PrmErrorMessage							is Alpha size 300
				PrmTrackerID							is Numeric 15
				PrmRunGroup								is Alpha size 50
			Action Rules
				LocalRunGroup							= PrmRunGroup
				LocalTrackerID							= PrmTrackerID
				LocalReference							= RemittanceAdvice select "//DataArea/RemittanceAdvice/RemittanceAdviceHeader/DocumentID/ID"
				LocalFromLogicalID						= RemittanceAdvice select "//ApplicationArea/Sender/LogicalID"
				LocalCreateDateTime						= RemittanceAdvice select "//ApplicationArea/CreationDateTime"
				if(PrmErrorMessage != "")
					LocalResponse = "Rejected"
					LocalReturnMessage					= PrmReturnMessage
				else	
					LocalResponse = "Accepted"
					LocalReturnMessage					= ""
				LocalMainUserTemplate					= "IONProcessRemittanceAdvice_ACKBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is ProcessRemittanceAdviceAckBODXML
						bod type is "Acknowledge.RemittanceAdvice"	
						accounting entity is PrmAccountingEntity
						document id is LocalReference
#endif	
	

#ifdef module GeneralLedger		
		SyncChartOfAccountsBODImport is an Import Action
			restricted
			bod type is Sync.ChartOfAccounts
			Parameters
				SyncChartOfAccountsBOD	is XMLDocument
			Action Rules
				LocalBODConfigVerb		= 1
				LocalGenericDelimiter	= DerivedGenericDelimiter
				LocalAccountingEntity	= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@accountingEntity"
				LocalUserAreaCount		= SyncChartOfAccountsBOD select "count(//DataArea/ChartOfAccounts/BaseChartOfAccounts/UserArea/Property/NameValue)"
				LocalDocumentID			= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID"
				LocalSenderBODID		= SyncChartOfAccountsBOD select "//ApplicationArea/BODID"
				LocalVariationID		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@variationID"
				LocalAccDesc			= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Description"
				LocalLineCount			= SyncChartOfAccountsBOD select "count(//DataArea/ChartOfAccounts/Classification/Codes/Code)"
				LocalStatus				= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Status/Code"
				LocalActionCode 		= SyncChartOfAccountsBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalCurrencyCode		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/CurrencyCode"
				LocalValidFromDate		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/EffectiveTimePeriod/StartDateTime"
				LocalValidFromDate 		= LocalValidFromDate[6:7] + LocalValidFromDate[9:10] + LocalValidFromDate[1:4]
				LocalGLNominalAccount	= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/GLNominalAccount"
				LocalChartLength		= SyncChartOfAccountsBOD select "count (//DataArea/ChartOfAccounts/ChartStructure)"
				LocalNativeAccount 		= NativeAccount
				if (LocalStatus = "Open")
					LocalActive = "true"
				else
				if (LocalStatus = "Closed")
					LocalActive = "true"
				LocalIterator = 1
				while(LocalUserAreaCount >= LocalIterator)
					LocalName		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/UserArea/Property[<LocalIterator>]/NameValue/@name"
					LocalNameValue	= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/UserArea/Property[<LocalIterator>]/NameValue"
					if (LocalName = "fsm.FinanceEnterpriseGroup" or LocalName = "FinanceEnterpriseGroup")
						LocalFEG = LocalNameValue
					else
					if (LocalName = "fsm.ReportingChart" or LocalName = "ReportingChart")
						LocalReportingChart = LocalNameValue
					else
					if (LocalName = "fsm.ChartSection" or LocalName = "ChartSection")
						LocalChartSection = LocalNameValue
					else
					if (LocalName = "fsm.AccountType" or LocalName = "AccountType")
						LocalAccountType = LocalNameValue
					else
					if (LocalName = "fsm.ParentChartAccount" or LocalName = "ParentChartAccount")	
						LocalParentChartAct = LocalNameValue
					LocalIterator = LocalIterator + 1
				if (LocalAccountingEntity not entered)
					LocalAccountingEntity = LocalFEG
				LocalBusinessGroup = FSMBODCrossReferenceDetailRel.DestinationValue
				if (LocalBusinessGroup entered)
					LocalFinanceEnterpriseGroup = NativeFinanceEnterpriseGroup
				else
					LocalFinanceEnterpriseGroup = ""

				if (LocalChartSection = "BalanceSheet")
					LocalChartSection = 1
				else
				if (LocalChartSection = "IncomeStatement")
					LocalChartSection = 2

				if (LocalAccountType = "Asset")
					LocalAccountType = 1
				else
				if (LocalAccountType = "Liability")
					LocalAccountType = 2
				else
				if (LocalAccountType = "Equity")
					LocalAccountType = 3
				else
				if (LocalAccountType = "Revenue")
					LocalAccountType = 4
				else
				if (LocalAccountType = "Expense")
					LocalAccountType = 5	
				else
				if (LocalAccountType = "StatCumulative")
					LocalAccountType = 6
				else
				if (LocalAccountType = "StatNonCumulative")
					LocalAccountType = 7	
				else
				if (LocalAccountType = "Memo")
					LocalAccountType = 8

				LocalCodeLength = SyncChartOfAccountsBOD select"count (//DataArea/ChartOfAccounts/Classification/Codes/Code)"
				if(LocalCodeLength > 0)
					LocalClassificationCode = SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Classification/Codes/Code"
				if(LocalNativeAccount = "true")
					LocalDocumentID = LocalGLNominalAccount
				if(LocalFinanceEnterpriseGroup not entered and LocalNativeAccount = "true")
					LocalFinanceEnterpriseGroup = DerivedFEGParameter
				if(LocalChartSection not entered and LocalNativeAccount = "true")
					LocalChartSection = SyncChartOfAccountsBOD select"//DataArea/ChartOfAccounts/BaseChartOfAccounts/AccountType"
					if(LocalChartSection = "BalanceSheet")
						LocalChartSection = "1"
					else 
					if(LocalChartSection = "ProfitAndLoss")
						LocalChartSection = "2"
				if(LocalAccountType not entered and LocalNativeAccount = "true")
					if(LocalClassificationCode = "Asset")
						LocalAccountType = "1"
					else 
					if(LocalClassificationCode = "Liability")
						LocalAccountType = "2"
					else 
					if(LocalClassificationCode = "Equity")
						LocalAccountType = "3"
					else 
					if(LocalClassificationCode = "Revenue")
						LocalAccountType = "4"
					else 
					if(LocalClassificationCode = "Expense")
						LocalAccountType = "5"
					else 
					if(LocalClassificationCode = "Statistical")
						LocalAccountType = "7"
												
				if(LocalReportingChart not entered and LocalNativeAccount = "true")
					LocalReportingChart = SyncChartOfAccountsBOD select"//DataArea/ChartOfAccounts/AccountingChartReference/ID"
					
				if(LocalParentChartAct not entered and LocalNativeAccount = "true" and LocalChartLength > 0)
					LocalParentChartAct = SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/ChartStructure/ParentAccount/GLNominalAccount"
				
				LocalDescription			= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Name"
				if(LocalAccDesc not entered)
					LocalAccDesc = LocalDescription
				LocalNativeEntity		= NativeEntity
				if(LocalFinanceEnterpriseGroup not entered and LocalNativeEntity = "true")
					LocalFinanceEnterpriseGroup		= DerivedFEGParameter
							
				if(LocalChartSection not entered and LocalNativeEntity = "true")
					LocalChartSection = SyncChartOfAccountsBOD select"//DataArea/ChartOfAccounts/BaseChartOfAccounts/AccountType"
					if(LocalChartSection = "BalanceSheet")
						LocalChartSection = "1"
					else 
					if(LocalChartSection = "ProfitAndLoss")
						LocalChartSection = "2"
						
				if(LocalReportingChart not entered and LocalNativeEntity = "true")
					LocalReportingChart = SyncChartOfAccountsBOD select"//DataArea/ChartOfAccounts/AccountingChartReference/ID"
					
				if(LocalParentChartAct not entered and LocalNativeEntity = "true" and LocalChartLength > 0)
					LocalParentChartAct = SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/ChartStructure/ParentAccount/GLNominalAccount"
				
				LocalCodeLength			= SyncChartOfAccountsBOD select "count(//DataArea/ChartOfAccounts/Classification/Codes/Code)"
				if(LocalCodeLength > 0 and LocalAccountType not entered and LocalNativeEntity = "true")
					LocalIterator 	= 1
					while (LocalCodeLength >= LocalIterator )
						LocalName 		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Classification/Codes/Code[<LocalIterator>]/@listID"
						LocalNameValue 	= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Classification/Codes/Code[<LocalIterator>]"
						if (LocalName = "Account Sub-types" )
							if(LocalNameValue ="Asset" or LocalNameValue ="ASSET")
								LocalAccountType = "1"
							else 
							if(LocalNameValue ="Liability" or LocalNameValue ="LIABILITY")
								LocalAccountType = "2"
							else 
							if(LocalNameValue ="Equity" or LocalNameValue ="EQUITY")
								LocalAccountType = "3"
							else 
							if(LocalNameValue ="Revenue" or LocalNameValue ="REVENUE")
								LocalAccountType = "4"
							else 
							if(LocalNameValue ="Expense" or LocalNameValue ="EXPENSE")
								LocalAccountType = "5"
							else 
							if(LocalNameValue ="Statistical" or LocalNameValue ="STATISTICAL")
								LocalAccountType = "7"
						LocalIterator	= LocalIterator+1
				
				if(FSMBODConfigurationChartOfAccountsRel exists and FSMBODConfigurationChartOfAccountsRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ChartOfAccounts"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= SyncChartOfAccountsBOD
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= SyncChartOfAccountsBOD
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if (LocalActionCode = "Add" or LocalActionCode = "Replace" or LocalActionCode="Delete")
						if(AccountRel not exists and LocalParentChartAct="" and LocalNativeAccount = "true" and LocalActionCode="Replace")
							invoke UpdateSummaryGLChart
								invoked.SyncChartOfAccountsBOD					= SyncChartOfAccountsBOD
								invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
								invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
								invoked.PrmGeneralLedgerChartAccount			= LocalDocumentID
								invoked.PrmChartSection							= LocalChartSection	
								invoked.PrmAccountType							= LocalAccountType
								invoked.PrmAccountDescription					= LocalAccDesc	
								invoked.PrmActive								= LocalActive	
								invoked.PrmCurrency								= LocalCurrencyCode	
								invoked.PrmChart								= LocalReportingChart									
								invoked.PrmDisplayAccount						= LocalDocumentID	
								invoked.PrmActionCode							= LocalActionCode
						
						else
						if(AccountRel not exists and LocalParentChartAct not entered and LocalNativeAccount = "true" and LocalActionCode="Add")
							invoke CreateSummaryGLChart
								invoked.SyncChartOfAccountsBOD		            = SyncChartOfAccountsBOD
								invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
								invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
								invoked.PrmChart								= LocalReportingChart
								invoked.PrmGeneralLedgerChartAccount			= LocalDocumentID
								invoked.PrmAccountDescription					= LocalAccDesc
								invoked.PrmActive								= LocalActive	
								invoked.PrmChartSection							= LocalChartSection	
								invoked.PrmAccountType							= LocalAccountType	
								invoked.PrmCurrency								= LocalCurrencyCode		
								invoked.PrmDisplayAccount						= LocalDocumentID
						else
						if(AccountRel not exists)
							invoke Account
								invoked.SyncChartOfAccountsBOD					= SyncChartOfAccountsBOD
								invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
								invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
								invoked.PrmAccount								= LocalDocumentID
								invoked.PrmChartSection							= LocalChartSection	
								invoked.PrmAccountType							= LocalAccountType
								invoked.PrmAccountDescription					= LocalAccDesc	
								invoked.PrmActive								= LocalActive	
								invoked.Prmeffectivedate						= LocalValidFromDate
								invoked.PrmCurrency								= LocalCurrencyCode	
								invoked.PrmChart								= LocalReportingChart	
								invoked.PrmParentChartAccount					= LocalParentChartAct
								invoked.PrmCount								= LocalLineCount
								invoked.PrmDocument								= LocalDocumentID	
						else
						if (AccountRel exists)
							invoke Update GeneralLedgerChartAccountRel
								resume on error
			           				Error            		= true
			                		ErrorMessage     		= error message
								invoked.AccountDescription	= LocalAccDesc
								invoked.Active				= LocalActive
							if (Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 			= Error
									invoked.ErrorMessage 	= ErrorMessage
									invoked.Status			= 2
									invoked.CloseDate		= system current timestamp		
								invoke SendSyncChartOfAccountsConfirmBOD
									invoked.PrmErrorMessage 			= ErrorMessage
									invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
							else
							if (LocalParentChartAct entered)
								if (ReportingChartAccountRel.ParentChartAccount != LocalParentChartAct)
									invoke AddPostingAccountToChart GeneralLedgerChartAccountRel
										resume on error
											Error            			= true
			                				ErrorMessage     			= error message
										invoked.PrmChart			  	= LocalReportingChart
										invoked.PrmParentChartAccount	= LocalParentChartAct
									if (Error)
										invoke Update FSMInboundBODTrackerRel
											invoked.Error 				= Error
											invoked.ErrorMessage 		= ErrorMessage
											invoked.Status				= 2
											invoked.CloseDate			= system current timestamp	
										invoke SendSyncChartOfAccountsConfirmBOD
											invoked.PrmErrorMessage 			= ErrorMessage
											invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
											invoked.PrmTrackerID				= LocalFSMInboundBODTracker
												
							if (LocalLineCount > 0)		
								invoke CreateCBRDetail
									invoked.SyncChartOfAccountsBOD		= SyncChartOfAccountsBOD
									invoked.PrmInboundTracker	   		= LocalFSMInboundBODTracker
									invoked.PrmCount					= LocalLineCount
									invoked.PrmDocument					= LocalDocumentID
									invoked.PrmFinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							else
							if (!FSMInboundBODTrackerRel.Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Status					= 3
									invoked.CloseDate				= system current timestamp			
						else
						if (LocalActionCode="Delete")
							invoke Delete GeneralLedgerChartAccountRel
								resume on error
			           				Error            		= true
			                		ErrorMessage     		= error message
							if (Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 				= Error
									invoked.ErrorMessage 		= ErrorMessage
									invoked.Status				= 2
									invoked.CloseDate			= system current timestamp	
								invoke SendSyncChartOfAccountsConfirmBOD
									invoked.PrmErrorMessage 			= "Unable to Delete"
									invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
									invoked.PrmTrackerID				= LocalFSMInboundBODTracker
							else
								invoke Update FSMInboundBODTrackerRel
									invoked.Status		= 3
									invoked.CloseDate	= system current timestamp	
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 				= Error
								invoked.ErrorMessage 		= "Invalid action code"
								invoked.Status				= 2
								invoked.CloseDate			= system current timestamp	
							invoke SendSyncChartOfAccountsConfirmBOD
								invoked.PrmErrorMessage 			= "Invalid action code"
								invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker	
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status		= 3
							invoked.CloseDate	= system current timestamp				
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 				= 1
						invoked.Noun 				= "ChartOfAccounts"	
						invoked.Direction			= 2				
						invoked.BODDocumentID		= LocalDocumentID
						invoked.BODVariationID		= LocalVariationID
						invoked.BODID				= LocalSenderBODID
						invoked.Status				= 4
						invoked.StartDate			= system current timestamp
						invoked.BODXML				= SyncChartOfAccountsBOD
						invoked.BODAccountingEntity	= LocalAccountingEntity
						invoked.CloseDate			= system current timestamp
						invoked.Error				= true			
						invoked.ErrorMessage		= "Sync ChartOfAccounts Inbound BOD Service is not Enabled" 
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID		= LocalDocumentID
						invoked.BODVariationID		= LocalVariationID
						invoked.BODID				= LocalSenderBODID
						invoked.Status				= 4
						invoked.StartDate			= system current timestamp
						invoked.BODXML				= SyncChartOfAccountsBOD
						invoked.BODAccountingEntity	= LocalAccountingEntity
						invoked.CloseDate			= system current timestamp
						invoked.Error				= true			
						invoked.ErrorMessage		= "Sync ChartOfAccounts Inbound BOD Service is not Enabled" 
							
		CreateCBRDetail is an Import Action
			restricted
			Parameters
				SyncChartOfAccountsBOD		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmCount					is Numeric 9
				PrmDocument					is Alpha size 100
				PrmFinanceEnterpriseGroup	is Alpha size 8
			Action Rules
				LocalGenericDelimiter		= DerivedGenericDelimiter
				LocalDocumentID				= PrmDocument
				LocalLineCount				= PrmCount
				LocalFinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker 	= PrmInboundTracker
				LocalCodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
				LocalIterator = 1
				while (LocalLineCount >= LocalIterator)			
					LocalName 		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Classification/Codes/Code[<LocalIterator>]/@listID"
					LocalNameValue 	= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Classification/Codes/Code[<LocalIterator>]"
					if (LocalName = "AccountingUnit")
						LocalAccountingUnit = NativeAccountingUnit
						if (LocalAccountingUnit entered and !CodeBlockRelationDetailRel exists)
							invoke Create CodeBlockRelationDetail
								resume on error
                   					Error            				= true
                       				ErrorMessage     				= error message 
								invoked.FinanceEnterpriseGroup 		= LocalFinanceEnterpriseGroup
								invoked.AccountingUnit				= LocalAccountingUnit
								invoked.GeneralLedgerChartAccount	= LocalDocumentID
								invoked.CodeBlockRelation			= LocalCodeBlockRelation
								invoked.TransientEntity				= LocalAccountingEntity
					LocalIterator = LocalIterator + 1
				if (!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status						= 3
						invoked.CloseDate					= system current timestamp
						
		Account is an Import Action
			restricted
			Parameters
				SyncChartOfAccountsBOD		is XMLDocument
				PrmInboundTracker   		is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup	is Alpha size 8
				PrmAccount 					is Alpha 100
				PrmChartSection				is Alpha size 50
				PrmAccountType				is Alpha 50
				PrmAccountDescription		is Alpha 60
				PrmActive					is Alpha 10
				PrmCurrency					is AlphaUpper size 5
				Prmeffectivedate			is Alpha size 25
				PrmCreateMajorChartAccount	is Boolean
				PrmChart					is AlphaUpper size 15
				PrmParentChartAccount		is AlphaUpper size 26
				PrmCount					is Numeric 9
				PrmDocument					is Alpha 100
			Action Rules
				LocalFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker		= PrmInboundTracker
				LocalDocumentID					= PrmAccount
				LocalChartSection				= PrmChartSection
				LocalAccountType				= PrmAccountType
				LocalAccDesc					= PrmAccountDescription
				LocalActive						= PrmActive
				LocalValidFromDate				= Prmeffectivedate
				LocalCurrencyCode				= PrmCurrency
				LocalReportingChart				= PrmChart
				LocalParentChartAct				= PrmParentChartAccount
				LocalLineCount					= PrmCount
				LocalDocumentID					= PrmDocument
				invoke Create Account
					resume on error
						Error            							   	= true
						ErrorMessage     							   	= error message
					invoked.FinanceEnterpriseGroup 						= LocalFinanceEnterpriseGroup
					invoked.Account										= LocalDocumentID
					invoked.ChartSection								= LocalChartSection
					invoked.AccountType									= LocalAccountType
					invoked.AccountDescription							= LocalAccDesc
					invoked.Active										= LocalActive
					invoked.effective date								= LocalValidFromDate	
					invoked.CreateMajorChartAccount						= 1
					invoked.Currency									= LocalCurrencyCode
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 									= Error
						invoked.ErrorMessage 							= ErrorMessage
						invoked.Status									= 2
						invoked.CloseDate								= system current timestamp
					invoke SendSyncChartOfAccountsConfirmBOD
						invoked.PrmErrorMessage 			= "Unable to CreateTheAccount"
						invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
				if (LocalParentChartAct entered)
					if (ReportingChartAccountRel.ParentChartAccount != LocalParentChartAct)
						invoke AddPostingAccountToChart GeneralLedgerChartAccountRel
							resume on error
								Error            			= true
                				ErrorMessage     			= error message
							invoked.PrmChart				= LocalReportingChart
							invoked.PrmParentChartAccount 	= LocalParentChartAct
						if (Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 			= Error
								invoked.ErrorMessage 	= ErrorMessage
								invoked.Status			= 2
								invoked.CloseDate		= system current timestamp
							invoke SendSyncChartOfAccountsConfirmBOD
								invoked.PrmErrorMessage 			= "Unable to CreateTheAccount"
								invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
								
				if (LocalLineCount > 0)		
					invoke CreateCBRDetail
						invoked.SyncChartOfAccountsBOD		= SyncChartOfAccountsBOD
						invoked.PrmInboundTracker	   		= LocalFSMInboundBODTracker
						invoked.PrmCount					= LocalLineCount
						invoked.PrmDocument					= LocalDocumentID
						invoked.PrmFinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
				else
				if (!FSMInboundBODTrackerRel.Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp	
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status		= 3
						invoked.CloseDate	= system current timestamp
							
		CreateSummaryGLChart is an Import Action
			restricted
			Parameters
				SyncChartOfAccountsBOD			is XMLDocument
				PrmInboundTracker   			is like FSMInboundBODTracker 
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
				PrmChart						is AlphaUpper size 15
				PrmGeneralLedgerChartAccount 	is Alpha 100
				PrmAccountDescription			is Alpha 60
				PrmChartSection					is Alpha size 50
				PrmAccountType					is Alpha 50
				PrmActive						is Alpha 10
				PrmCurrency						is AlphaUpper size 5
				PrmChartType					is Numeric 1
				PrmDisplayAccount				is Alpha 100
				PrmChartSequence 				is Numeric 4
			Action Rules
				LocalFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker		= PrmInboundTracker
				LocalReportingChart				= PrmChart
				LocalDocumentID					= PrmGeneralLedgerChartAccount
				LocalChartSection				= PrmChartSection
				LocalAccountType				= PrmAccountType
				LocalAccDesc					= PrmAccountDescription
				LocalCurrencyCode				= PrmCurrency
				LocalActive						= PrmActive
				LocalDocumentID					= PrmDisplayAccount
				LocalChartSequence				= PrmChartSequence
				invoke Create GeneralLedgerChartAccount
					resume on error
						Error            						= true
						ErrorMessage     					   	= error message
					invoked.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
					invoked.GeneralLedgerChartAccount			= LocalDocumentID
					invoked.AccountDescription					= LocalAccDesc 					
					invoked.Active								= LocalActive
					invoked.ChartSection						= LocalChartSection	
					invoked.AccountType							= LocalAccountType
					invoked.Currency							= LocalCurrencyCode
					invoked.ChartType							= 1
					invoked.DisplayAccount						= LocalDocumentID
				if(ErrorMessage = "Field Reporting Chart is required")
					Error		= false
					ErrorMessage = ""
				if(!Error)
					if(GeneralLedgerChartAccountRel exists)
						LocalChartSequence	= ReportingChartRel.ChartSequence
						LocalDimensionCode	= LocalChartSequence+"_TOP_NODE"
						invoke Create ReportingChartAccount
							resume on error
				           		Error            							= true
				                ErrorMessage     							= error message
				        	invoked.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
							invoked.ReportingChart						= LocalReportingChart
							invoked.GeneralLedgerChartAccount			= LocalDocumentID
							invoked.ChartType							= 1
							invoked.ParentChartAccount					= LocalDimensionCode
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 			= Error
						invoked.ErrorMessage 	= ErrorMessage
						invoked.Status			= 2
						invoked.CloseDate		= system current timestamp
					invoke SendSyncChartOfAccountsConfirmBOD
						invoked.PrmErrorMessage 			= "Unable to CreateSummaryGLChart"
						invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status		= 3
						invoked.CloseDate	= system current timestamp			
							
		UpdateSummaryGLChart is an Import Action
			restricted
			Parameters
				SyncChartOfAccountsBOD			is XMLDocument
				PrmInboundTracker   			is like FSMInboundBODTracker 
				PrmFinanceEnterpriseGroup		is Alpha size 8
				PrmAccountDescription			is Alpha 60
				PrmChartSection					is Alpha size 50
				PrmAccountType					is Alpha 50
				PrmActive						is Alpha 10
				PrmCurrency						is AlphaUpper size 5
				PrmChartType					is Numeric 1
				PrmChart						is AlphaUpper size 15
				PrmActionCode					is Alpha 10
				PrmGeneralLedgerChartAccount 	is Alpha 100
				PrmDisplayAccount				is Alpha 100
			Action Rules
				LocalFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker		= PrmInboundTracker
				LocalChartSection				= PrmChartSection
				LocalAccountType				= PrmAccountType
				LocalAccDesc					= PrmAccountDescription
				LocalCurrencyCode				= PrmCurrency
				LocalReportingChart				= PrmChart
				LocalDocumentID					= PrmGeneralLedgerChartAccount
				LocalActive						= PrmActive
				LocalActionCode					= PrmActionCode
				LocalDocumentID					= PrmDisplayAccount
				LocalChartSequence				= ReportingChartRel.ChartSequence
				invoke Update GeneralLedgerChartAccountRel
					resume on error
						Error            						= true
						ErrorMessage     						= error message
					invoked.FinanceEnterpriseGroup 				= LocalFinanceEnterpriseGroup
					invoked.GeneralLedgerChartAccount			= LocalDocumentID
					invoked.AccountDescription					= LocalAccDesc 					
					invoked.Active								= LocalActive
					invoked.ChartSection						= LocalChartSection	
					invoked.AccountType							= LocalAccountType
					invoked.Currency							= LocalCurrencyCode
					invoked.ChartType							= 1
					invoked.DisplayAccount						= LocalDocumentID
				if (Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 			= Error
						invoked.ErrorMessage 	= ErrorMessage
						invoked.Status			= 2
						invoked.CloseDate		= system current timestamp
					invoke SendSyncChartOfAccountsConfirmBOD
						invoked.PrmErrorMessage 			= "Unable to UpdateSummaryGLChart"
						invoked.SyncChartOfAccountsBOD      = SyncChartOfAccountsBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status		= 3
						invoked.CloseDate	= system current timestamp
						
		SendSyncChartOfAccountsConfirmBOD is an Instance Action
			restricted			
			Parameters
				SyncChartOfAccountsBOD 	is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
			Action Rules
				LocalErrorMessage			= PrmErrorMessage
				LocalTrackerID				= PrmTrackerID
				LocalSyncChartOfAccountsXML	= SyncChartOfAccountsBOD
				LocalFromLogicalID			= SyncChartOfAccountsBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= SyncChartOfAccountsBOD select "//ApplicationArea/Sender/ComponentID"
				LocalSenderBODID			= SyncChartOfAccountsBOD select "//ApplicationArea/BODID"
				LocalDocumentID				= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID"
				LocalAccountingEntity		= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@accountingEntity"
				LocalOriginalCreateDateTime	= SyncChartOfAccountsBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID			= SyncChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@variationID"
				LocalConfirmBOD				= "true"
				LocalMainUserTemplate		= "IONSyncChartOfAccounts_ConfirmBOD_ST"
				
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncChartOfAccountsBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID   



		ShowChartOfAccountsBODImport is an Import Action
			restricted
			bod type is Show.ChartOfAccounts
			Parameters
				ShowChartOfAccountsBOD	is XMLDocument
			Action Rules
				LocalBODConfigVerb		= 4
				LocalGenericDelimiter 	= DerivedGenericDelimiter
				LocalSenderBODID		= ShowChartOfAccountsBOD select "//ApplicationArea/BODID"
				LocalAccountingEntity	= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@accountingEntity"
				LocalDocumentID			= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID"
				LocalAccDesc			= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Description"
				LocalStatus				= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/Status/Code"
				LocalReportingChart		= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@accountingEntity"
				LocalChartSection		= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/BaseChartOfAccounts/AccountType"
				LocalVariationID		= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@variationID"
				LocalBusinessGroup = FSMBODCrossReferenceDetailRel.DestinationValue
				if(LocalBusinessGroup entered)
					LocalFinanceEnterpriseGroup = NativeFinanceEnterpriseGroup
				else
					LocalFinanceEnterpriseGroup = ""

				if(LocalChartSection = "BalanceSheet")
					LocalChartSection = "1"
					LocalAccountType = "1"
				else
				if(LocalChartSection = "ProfitAndLoss")
					LocalChartSection = "2"
					LocalAccountType = "5"
				
				if(LocalStatus = "Open")
					LocalActive = "true"
				else
				if(LocalStatus = "Closed")
					LocalActive = "true"
					
				if(FSMBODConfigurationChartOfAccountsRel exists and FSMBODConfigurationChartOfAccountsRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 4
							invoked.Noun 					= "ChartOfAccounts"	
							invoked.Direction				= 2				
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= ShowChartOfAccountsBOD
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= ShowChartOfAccountsBOD
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if(AccountRel exists)
						invoke Update GeneralLedgerChartAccountRel
							resume on error
								Error            				= true
	                       		ErrorMessage     				= error message
							invoked.AccountDescription			= LocalAccDesc
							invoked.Active						= LocalActive
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= Error
								invoked.ErrorMessage 			= ErrorMessage
								invoked.Status					= 2
								invoked.CloseDate				= system current timestamp	
							invoke SendShowChartOfAccountsConfirmBOD
								invoked.ShowChartOfAccountsBOD	= ShowChartOfAccountsBOD
								invoked.PrmErrorMessage 		= ErrorMessage
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
					else
						invoke Create Account
							resume on error
		                   		Error            			= true
		                        ErrorMessage     			= error message 
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.Account					= LocalDocumentID
							invoked.ChartSection			= LocalChartSection
							invoked.AccountType				= LocalAccountType
							invoked.AccountDescription		= LocalAccDesc
							invoked.Active					= LocalActive
							invoked.Currency				= LocalCurrencyCode
							invoked.effective date			= LocalValidFromDate	
						if (Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 					= Error
								invoked.ErrorMessage 			= ErrorMessage
								invoked.Status					= 2	
								invoked.CloseDate				= system current timestamp
							invoke SendShowChartOfAccountsConfirmBOD
								invoked.ShowChartOfAccountsBOD 	= ShowChartOfAccountsBOD
								invoked.PrmErrorMessage 		= ErrorMessage
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker 
					if(!FSMInboundBODTrackerRel.Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Status					= 3
							invoked.CloseDate				= system current timestamp
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 				= 4
						invoked.Noun 				= "ChartOfAccounts"
						invoked.Direction			= 2					
						invoked.BODDocumentID		= LocalDocumentID
						invoked.BODVariationID		= LocalVariationID
						invoked.BODID				= LocalSenderBODID
						invoked.Status				= 4
						invoked.StartDate			= system current timestamp
						invoked.BODXML				= ShowChartOfAccountsBOD
						invoked.BODAccountingEntity	= LocalAccountingEntity
						invoked.CloseDate			= system current timestamp
						invoked.Error				= true			
						invoked.ErrorMessage		= "Show ChartOfAccounts Inbound BOD Service is not Enabled" 
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID		= LocalDocumentID
						invoked.BODVariationID		= LocalVariationID
						invoked.BODID				= LocalSenderBODID
						invoked.Status				= 4
						invoked.StartDate			= system current timestamp
						invoked.BODXML				= ShowChartOfAccountsBOD
						invoked.BODAccountingEntity	= LocalAccountingEntity
						invoked.CloseDate			= system current timestamp
						invoked.Error				= true			
						invoked.ErrorMessage		= "Show ChartOfAccounts Inbound BOD Service is not Enabled" 
					
		SendShowChartOfAccountsConfirmBOD is an Instance Action
			restricted			
			Parameters
				ShowChartOfAccountsBOD 	is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
			Action Rules
				LocalErrorMessage			= PrmErrorMessage
				LocalTrackerID				= PrmTrackerID
				LocalShowChartOfAccountsXML	= ShowChartOfAccountsBOD
				LocalFromLogicalID			= ShowChartOfAccountsBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= ShowChartOfAccountsBOD select "//ApplicationArea/Sender/ComponentID"
				LocalSenderBODID			= ShowChartOfAccountsBOD select "//ApplicationArea/BODID"
				LocalDocumentID				= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID"
				LocalAccountingEntity		= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@accountingEntity"
				LocalOriginalCreateDateTime	= ShowChartOfAccountsBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID			= ShowChartOfAccountsBOD select "//DataArea/ChartOfAccounts/IDs/ID/@variationID"
				LocalConfirmBOD				= "true"
				LocalMainUserTemplate		= "IONShowChartOfAccounts_ConfirmBOD_ST"
				
				if(UserTemplateRel exists)
					send ion bod
						bod is ShowChartOfAccountsBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID    			
#endif


#ifdef module Projects
		SyncProjectMasterBODImport is an Import Action
			restricted
			bod type is Sync.ProjectMaster
			Parameters
				SyncProjectMasterBOD 	is XMLDocument
			Action Rules
				LocalDocumentID						= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ID"
				LocalActionCode 					= SyncProjectMasterBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalVariationID					= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ID/@variationID"
				LocalAccountingEntity				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ID/@accountingEntity"
				LocalBODXML							= SyncProjectMasterBOD
				LocalGenericDelimiter				= DerivedGenericDelimiter
				LocalDocumentID        				= NativeCSFFinanceEnterpriseGroup
				LocalProject						= LocalProject
				LocalFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup		
				LocalFEG 							= FSMBODFEGCrossReferenceDetailRel.DestinationValue
				LocalBODID							= SyncProjectMasterBOD select "//ApplicationArea/BODID"
				LocalStatusCode						= SyncProjectMasterBOD select "//DataArea/ProjectMaster/Status/Code"
				LocalDocumentID						= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ID"
				LocalUserAreaCount					= SyncProjectMasterBOD select "count(//DataArea/ProjectMaster/UserArea/Property)"
				LocalLoop = 1
				while(LocalLoop <= LocalUserAreaCount)
					LocalName						=	SyncProjectMasterBOD select "//DataArea/ProjectMaster/UserArea/Property[<LocalLoop>]/NameValue/@name"
					LocalNameValue					=	SyncProjectMasterBOD select "//DataArea/ProjectMaster/UserArea/Property[<LocalLoop>]/NameValue"
					if(LocalName="fsm.PostingFlag" or LocalName="PostingFlag")
						LocalProjectType			=	LocalNameValue
					else
					if(LocalName="fsm.ProjectStatus" or LocalName="ProjectStatus")
						LocalProjectStatus			=	LocalNameValue
					else
					if(LocalName="fsm.ContextStructure" or LocalName="ContextStructure")
						LocalContextStructure		=	LocalNameValue
					else
					if(LocalName="fsm.IsTopNode" or LocalName="IsTopNode")
						LocalTopNode				=	LocalNameValue	
					LocalLoop						=	LocalLoop + 1
				
				if(LocalSplitDocIDLength = "1" and LocalFEG not entered)
					LocalFEG = DerivedFEGParameter
				
				if(LocalSplitDocIDLength = "1" and LocalContextStructure not entered)
					LocalContextStructure = DerivedProjectStructure
				
				if (LocalProjectType = "2" and ProjectRel not exists)
					LocalProject	=	CSFProject
				if(LocalSplitDocIDLength = "1" and (LocalProjectType not entered or LocalProjectStatus not entered))
					LocalLoop = 1
					while(LocalLoop <= LocalUserAreaCount)
						LocalName						=	SyncProjectMasterBOD select "//DataArea/ProjectMaster/UserArea/Property[<LocalLoop>]/NameValue/@name"
						LocalNameValue					=	SyncProjectMasterBOD select "//DataArea/ProjectMaster/UserArea/Property[<LocalLoop>]/NameValue"
						if(LocalName="fsm.PostingFlag" or LocalName="Posting Flag")
							LocalProjectTypeFlag			=	LocalNameValue
						else
						if(LocalName="fsm.Project Status" or LocalName="Project Status")
							LocalStatus			=	LocalNameValue
							if(LocalStatus = "1")
								LocalProjectStatus = "Allocate"
							else 
							if(LocalStatus = "2")
								LocalProjectStatus = "Billable"
							else 
							if(LocalStatus = "3")
								LocalProjectStatus = "REV_REC"
							else 
							if(LocalStatus = "4")
								LocalProjectStatus = "Capital"
							else 
							if(LocalStatus = "5")
								LocalProjectStatus = "Purge"
							else 
							if(LocalStatus = "A")
								LocalProjectStatus = "Active Status"
							else 
							if(LocalStatus = "OP")
								LocalProjectStatus = "POST Only"
						LocalLoop						=	LocalLoop + 1
						if(LocalProjectTypeFlag = true)
							LocalProjectType = 1
				if(FSMBODConfigurationSyncProjectMasterRel exists and FSMBODConfigurationSyncProjectMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "ProjectMaster"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.FinanceEnterpriseGroup	= LocalFEG
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker	= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.FinanceEnterpriseGroup	= LocalFEG
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if(LocalActionCode = "Add" or LocalActionCode = "Replace" or LocalActionCode = "Delete")
						if(ProjectRel not exists)
							invoke CreateProject
								invoked.SyncProjectMasterBOD		= SyncProjectMasterBOD
								invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup	= LocalFEG
								invoked.PrmStructure				= LocalContextStructure	
								invoked.PrmProject					= LocalProject	
								invoked.PrmProjectType				= LocalProjectType
								invoked.PrmProjectStatus			= LocalProjectStatus	
								invoked.PrmTopNode					= LocalTopNode	
						else
						if(ProjectRel exists and LocalStatusCode != "Deleted")
							invoke UpdateProject
								invoked.SyncProjectMasterBOD		= SyncProjectMasterBOD
								invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup	= LocalFEG
								invoked.PrmStructure				= LocalContextStructure	
								invoked.PrmProject					= LocalProject	
								invoked.PrmProjectType				= LocalProjectType
								invoked.PrmProjectStatus			= LocalProjectStatus	
								invoked.PrmTopNode					= LocalTopNode	
						else
						if(ProjectRel exists and LocalProjectType = "2" and LocalStatusCode = "Deleted")
							invoke Update FSMInboundBODTrackerRel
								invoked.Status					= 3
								invoked.CloseDate				= system current timestamp
						else
						if(ProjectRel exists and LocalStatusCode = "Deleted")
							invoke DeleteProject
								invoked.SyncProjectMasterBOD		= SyncProjectMasterBOD
								invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup	= LocalFEG
								invoked.PrmStructure				= LocalContextStructure	
								invoked.PrmProject					= LocalProject	
								invoked.PrmProjectType				= LocalProjectType
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status					= 3
							invoked.CloseDate				= system current timestamp
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "ProjectMaster"
						invoked.Direction				= 2
						invoked.Status					= 4					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.FinanceEnterpriseGroup	= LocalFEG
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ProjectMaster Inbound BOD Service is not Enabled"	
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 4					
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalBODID
						invoked.FinanceEnterpriseGroup	= LocalFEG
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync ProjectMaster Inbound BOD Service is not Enabled"
							
		CreateProject is an Import Action
			restricted			
			Parameters
				SyncProjectMasterBOD 			is XMLDocument
				PrmInboundTracker  				is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup		is Alpha 4
				PrmStructure					is Alpha 15
				PrmProject						is Alpha 25
				PrmProjectType					is Numeric 1
				PrmProjectStatus				is Alpha 20
				PrmTopNode						is Boolean
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalFEG						= PrmFinanceEnterpriseGroup
				LocalContextStructure			= PrmStructure
				LocalProject					= PrmProject
				LocalProjectStatus				= PrmProjectStatus
				LocalTopNode					= PrmTopNode
				LocalProjectType				= PrmProjectType
				LocalDescription 				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/Description"
				LocalCurrency					= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ProjectCurrency"
				LocalParentProject				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ParentProject/ID"
				LocalAlphaBeginDate				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ActualTimePeriod/StartDateTime"
				LocalAlphaEndDate				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ActualTimePeriod/EndDateTime"
				LocalBeginDate 					= LocalAlphaBeginDate[1:4] + LocalAlphaBeginDate[6:7] + LocalAlphaBeginDate[9:10] 
				LocalEndDate					= LocalAlphaEndDate[1:4]  + LocalAlphaEndDate[6:7] + LocalAlphaEndDate[9:10]
				LocalStatusCode					= SyncProjectMasterBOD select "//DataArea/ProjectMaster/Status/Code"
				TransientFinanceEnterpriseGroup	= LocalFEG
				TransientProjectStructure		= LocalContextStructure
				if(LocalStatusCode ="Open")
					IsActive = true
				else
				if(LocalStatusCode = "Closed")
					IsActive = false
					
				invoke Create Project
					resume on error
                   		Error             							= true
                        ErrorMessage     							= error message
	                invoked.FinanceEnterpriseGroup 					= LocalFEG
	                invoked.Project									= LocalProject
	                invoked.DisplayProject							= LocalProject	
					invoked.ProjectType								= LocalProjectType
					invoked.Description    							= LocalDescription
					invoked.Currency								= LocalCurrency
					invoked.ProjectStatus    						= LocalProjectStatus
					invoked.IsTopNode								= LocalTopNode
					invoked.ProjectDateRange.BeginDate				= LocalBeginDate
					invoked.ProjectDateRange.EndDate				= LocalEndDate
					invoked.ParentProject							= LocalParentProject
					invoked.Active									= IsActive
					invoked.DimensionStructure						= LocalContextStructure
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendProjectMasterConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SyncProjectMasterBOD    = SyncProjectMasterBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoked.PrmProject				= LocalProject
				else 
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
			
		UpdateProject is an Import Action
			restricted			
			Parameters
				SyncProjectMasterBOD 			is XMLDocument
				PrmInboundTracker  				is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup		is Alpha 4
				PrmStructure					is Alpha 15
				PrmProject						is Alpha 25
				PrmProjectType					is Numeric 1
				PrmProjectStatus				is Alpha 20
				PrmTopNode						is Boolean
				PrmBeginDate					is Alpha 20
				PrmEndDate						is Alpha 20
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalFEG						= PrmFinanceEnterpriseGroup
				LocalContextStructure			= PrmStructure
				LocalProject					= PrmProject
				LocalProjectStatus				= PrmProjectStatus
				LocalTopNode					= PrmTopNode
				LocalProjectType				= PrmProjectType
				LocalDescription 				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/Description"
				LocalCurrency					= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ProjectCurrency"
				LocalParentProject				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ParentProject/ID"
				LocalAlphaBeginDate				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ActualTimePeriod/StartDateTime"
				LocalAlphaEndDate				= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ActualTimePeriod/EndDateTime"
				LocalBeginDate 					= LocalAlphaBeginDate[1:4] + LocalAlphaBeginDate[6:7] + LocalAlphaBeginDate[9:10] 
				LocalEndDate					= LocalAlphaEndDate[1:4]  + LocalAlphaEndDate[6:7] + LocalAlphaEndDate[9:10]
				LocalStatusCode					= SyncProjectMasterBOD select "//DataArea/ProjectMaster/Status/Code"
				TransientFinanceEnterpriseGroup	= LocalFEG
				TransientProjectStructure		= LocalContextStructure
				if(LocalStatusCode ="Open")
					IsActive = true
				else
				if(LocalStatusCode = "Closed")
					IsActive = false
				
				invoke Update ProjectRel
					resume on error
                   		Error             							= true
                        ErrorMessage     							= error message
	                invoked.FinanceEnterpriseGroup 					= LocalFEG
	                invoked.Project									= LocalProject
	                invoked.ProjectType								= LocalProjectType
					invoked.Description    							= LocalDescription
					invoked.Currency								= LocalCurrency
					invoked.ProjectStatus    						= LocalProjectStatus
					invoked.IsTopNode								= LocalTopNode
					invoked.ProjectDateRange.BeginDate				= LocalBeginDate
					invoked.ProjectDateRange.EndDate				= LocalEndDate
					invoked.ParentProject							= LocalParentProject
					invoked.Active									= IsActive
					invoked.DimensionStructure						= LocalContextStructure
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp
					invoke SendProjectMasterConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SyncProjectMasterBOD    = SyncProjectMasterBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoked.PrmProject				= LocalProject
				else 
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
									
		DeleteProject is an Import Action
			restricted			
			Parameters
				SyncProjectMasterBOD 			is XMLDocument
				PrmInboundTracker  				is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup		is Alpha 4
				PrmStructure					is Alpha 15
				PrmProject						is Alpha 25
				PrmProjectType					is Numeric 1
			Action Rules
				LocalFSMInboundBODTracker 		= PrmInboundTracker
				LocalFEG						= PrmFinanceEnterpriseGroup
				LocalContextStructure			= PrmStructure
				LocalProject					= PrmProject
				LocalProjectType				= PrmProjectType
				TransientFinanceEnterpriseGroup	= LocalFEG
				TransientProjectStructure		= LocalContextStructure
				
				invoke Delete ProjectsRel
					resume on error
                   		Error             							= true
                        ErrorMessage     							= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 					= Error
						invoked.ErrorMessage 			= ErrorMessage
						invoked.Status					= 2
						invoked.CloseDate				= system current timestamp	
					invoke SendProjectMasterConfirmBOD
						invoked.PrmErrorMessage 		= ErrorMessage
						invoked.SyncProjectMasterBOD    = SyncProjectMasterBOD
						invoked.PrmTrackerID			= LocalFSMInboundBODTracker
						invoked.PrmProject				= LocalProject
				else 
					invoke Update FSMInboundBODTrackerRel
						invoked.Status					= 3
						invoked.CloseDate				= system current timestamp
		
		SendProjectMasterConfirmBOD is an Instance Action
			restricted			
			Parameters
				SyncProjectMasterBOD 			is XMLDocument
				PrmErrorMessage 				is Alpha 300
				PrmTrackerID					is Numeric 15
				PrmProject						is Alpha 25
			Action Rules
				LocalProjectMasterXML			= SyncProjectMasterBOD
				LocalErrorMessage				= PrmErrorMessage
				LocalTrackerID					= PrmTrackerID
				LocalProject					= PrmProject
				LocalAccountingEntity			= SyncProjectMasterBOD select "//DataArea/ProjectMaster/ID/@accountingEntity"
				LocalLogicalID					= SyncProjectMasterBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID				= SyncProjectMasterBOD select "//ApplicationArea/Sender/ComponentID"
				LocalCreateDateTime				= SyncProjectMasterBOD select "//ApplicationArea/CreationDateTime"
				LocalOriginalBODID				= SyncProjectMasterBOD select "//ApplicationArea/BODID"
				LocalBodID						= "infor-nid:" + DerivedTenantID + ":" + LocalProject +":"+":"+":"+"?BOD&verb=Confirm&TrackerID="+ LocalTrackerID
				LocalMainUserTemplate			= "IONSyncProjectMaster_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncProjectMasterConfirmBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID 
#endif

		LoadBankStatementBODImport is an Import Action
			restricted
			bod type is Load.BankStatement
			Parameters
				LoadBankStatementBOD 	is XMLDocument
			Action Rules
				LocalDocumentID						=	LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementHeader/DocumentID/ID"
				LocalDescription					=   LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementHeader/Description"
				LocalDescription					=   LocalDescription[0:3]
				LocalBankStatementCount				=   LoadBankStatementBOD select "count(//DataArea/BankStatement/BankStatementAccount)"
				LocalBODXML							=   LoadBankStatementBOD
				LocalCashManagementGroup			=	DerivedCashManagementGroup
				if(FSMBODConfigurationLoadBankStatementRel exists and FSMBODConfigurationLoadBankStatementRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 3
							invoked.Noun 					= "BankStatement"
							invoked.Direction				= 2					
							invoked.BODDocumentID			= LocalDocumentID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
							initialize invoked.Error			
							initialize invoked.ErrorMessage					
						LocalFSMInboundBODTracker	= NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker	= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
							initialize invoked.Error			
							initialize invoked.ErrorMessage	
					if(LocalDescription = "ANZ" or LocalDescription = "NAI")
						invoke CreateBankStatement
							invoked.LoadBankStatementBOD		= LoadBankStatementBOD
							invoked.PrmInboundTracker 			= LocalFSMInboundBODTracker
							invoked.PrmCashManagementGroup		= LocalCashManagementGroup
							invoked.PrmBankStatementCount		= LocalBankStatementCount	
							invoked.PrmDocumentID				= LocalDocumentID	
							invoked.PrmDescription				= LocalDescription
					else 
						invoke Update FSMInboundBODTrackerRel
							invoked.Status					= 3
							invoked.CloseDate				= system current timestamp
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 3
						invoked.Noun 					= "BankStatement"
						invoked.Direction				= 2	
						invoked.BODDocumentID			= LocalDocumentID
						invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup	
						invoked.BODXML					= LocalBODXML			
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Load BankStatement Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODDocumentID			= LocalDocumentID
						invoked.FinanceEnterpriseGroup	= LocalCashManagementGroup
						invoked.BODXML					= LocalBODXML
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Load BankStatement Inbound BOD Service is not Enabled"
					
		CreateBankStatement is an Import Action
			restricted			
			Parameters
				LoadBankStatementBOD 				is XMLDocument
				PrmInboundTracker  					is like FSMInboundBODTracker
				PrmCashManagementGroup				is Alpha 10
				PrmBankStatementCount				is Numeric 9
				PrmDocumentID						is Alpha 25
				PrmDescription						is Alpha 20
			Action Rules
				LocalFSMInboundBODTracker 			= 	PrmInboundTracker
				LocalCashManagementGroup			= 	PrmCashManagementGroup
				LocalBankStatementCount				= 	PrmBankStatementCount
				LocalDocumentID						=	PrmDocumentID
				LocalDescription					=	PrmDescription
				LocalIterator						=   1
				while(LocalBankStatementCount >= LocalIterator)	
					LocalCashManagementAccount  = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/BBANID"
					LocalAccountEntryCount		= LoadBankStatementBOD select "count(//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry)"
					LocalStatementDate			= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/StatementPeriod/StartDateTime"	
					LocalAccountBalanceCount	= LoadBankStatementBOD select "count(//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/AccountBalance)"
					LocalStatementDate 		    = LocalStatementDate[1:4]+LocalStatementDate[6:7]+LocalStatementDate[9:10]
					if(LocalDescription = "ANZ")
						LocalCounter  =  1
						while(LocalAccountBalanceCount >= LocalCounter)
							LocalBalanceType	=  LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/AccountBalance[<LocalCounter>]/BalanceType"
							if(LocalBalanceType = "CLAV")
								LocalEndingBalance		=  LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/AccountBalance[<LocalCounter>]/Amount"
							LocalCounter = LocalCounter + 1
					else
						LocalCounter  =  1
						while(LocalAccountBalanceCount >= LocalCounter)
							LocalBalanceType	=  LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/AccountBalance[<LocalCounter>]/BalanceType"
							if(LocalBalanceType = "CLBD")
								LocalClosingBalance		=  LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/BankAccount/AccountBalance[<LocalCounter>]/Amount"
							LocalCounter = LocalCounter + 1
					if(LocalDescription != "ANZ")
						LocalEndingBalance		= LocalClosingBalance
					if(LocalAccountEntryCount > 0)
						invoke Unreconciled.Create  BankStatement
							assign result to NewBankStatement
							resume on error
		                   		Error            			= true
		                        ErrorMessage     			= error message 
							invoked.CashManagementGroup		= LocalCashManagementGroup
							invoked.CashManagementAccount	= LocalCashManagementAccount
							invoked.StatementDate			= LocalStatementDate
							invoked.EndingBalance			= LocalEndingBalance
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 						= Error
								invoked.ErrorMessage 				= ErrorMessage
								invoked.Status						= 2
								invoked.CloseDate					= system current timestamp
							invoke SendBankStatementErrorAlert
								invoked.PrmErrorMessage 		= "Error Processing LoadBankStatement - Creating BankStatement" +", "+ LocalCashManagementAccount + "-" +LocalDocumentID+", "+"Message:"+ ErrorMessage
								invoked.LoadBankStatementBOD    = LoadBankStatementBOD
								invoked.PrmTrackerID			= LocalFSMInboundBODTracker
							LocalIterator  =   LocalBankStatementCount + 1
						else
							LocalBankStatement	= NewBankStatement.BankStatement
							LocalCounter = 1
							while(LocalAccountEntryCount >= LocalCounter)
								initialize LocalLineCurrency
								initialize LocalTransactionType
								initialize LocalDebitCreditIndicator
								initialize LocalLineAmount
								initialize LocalTransactionDate
								initialize LocalBankLineDescription
								initialize LocalRelatedReference
								initialize LocalBankReference
								initialize LocalLineComment
								initialize LocalTextReference
								if(LocalDescription = "ANZ")
									LocalLineCurrency  				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/Amount/@currencyID"
									LocalLineAmount	   				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/Amount"
									LocalDebitCreditFlag 			= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/DebitCreditFlag"
									LocalTransactionType 			= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/ExternalReferences/TransactionID"
								else
									LocalLineCurrency  				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryAmount/@currencyID"
									LocalLineAmount	   				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryAmount"
									LocalDebitCreditFlag 			= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/DebitCreditFlag"
									LocalTransactionTypeCount		= LoadBankStatementBOD select "count(//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/BankTransactionCode)"
									if(LocalTransactionTypeCount > 0)
										LocalLoop = 1
										while(LocalTransactionTypeCount >= LocalLoop)
											LocalName = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/BankTransactionCode[<LocalLoop>]/@listID"
	    									LocalNameValue = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/BankTransactionCode[<LocalLoop>]"
	    									if(LocalName = "ProprietaryCode")
	    										LocalTransactionType = LocalNameValue
	    									LocalLoop = LocalLoop + 1
 								LocalTransactionDate 			= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/RelatedDates/StartDateTime"
 								LocalExternalReferenceLength 	= LoadBankStatementBOD select "count(//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/ExternalReferences/Reference)"
 								LocalLineComment 				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/PaymentPurposeCode"
								LocalTransactionID 				= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/ExternalReferences/TransactionID"
 								LocalTransactionDate  			= LocalTransactionDate[1:4]+LocalTransactionDate[6:7]+LocalTransactionDate[9:10]
 								if(LocalDebitCreditFlag = "Debit"  or  LocalDebitCreditFlag = "DEBIT")
 									LocalDebitCreditIndicator = "D"
 								else
 									LocalDebitCreditIndicator = "C"
								if(LocalExternalReferenceLength > 0)
									LocalLoop = 1
									while(LocalExternalReferenceLength >= LocalLoop)
										LocalName = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/ExternalReferences/Reference[<LocalLoop>]/NameValue/@name"
    									LocalNameValue = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/ExternalReferences/Reference[<LocalLoop>]/NameValue"
    									if(LocalName = "Particulars")
    										LocalRelatedReference = LocalNameValue
    									if(LocalName = "Analysis Code")
 											LocalBankReference = LocalNameValue
										if(LocalName = "Reference")
 											LocalBankLineDescription = LocalNameValue
										if(LocalName = "Party Reference")
											LocalPartyReference = LocalNameValue
										LocalLoop = LocalLoop + 1
								if(LocalDescription = "ANZ")
									if((LocalTransactionID = "000" or LocalTransactionID = "001"))
										LocalTextReference = LocalPartyReference
									else
										LocalTextReference = LocalRelatedReference + LocalBankReference + LocalBankLineDescription
								if(LocalDescription != "ANZ")
									LocalRelatedReference 		= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryNote"
									LocalBankLineDescription    = LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementAccount[<LocalIterator>]/AccountEntry[<LocalCounter>]/EntryDetail/EntryTransaction/RemittanceInformation/UnstructuredRemittanceText"
								if(LocalDebitCreditIndicator = "D" and LocalDescription != "ANZ")
									LocalLineAmount				= -1*LocalLineAmount
								invoke Create  BankStatementLine
									resume on error
				                   		Error            			= true
				                        ErrorMessage     			= error message 
									invoked.CashManagementGroup		= LocalCashManagementGroup
									invoked.CashManagementAccount	= LocalCashManagementAccount
									invoked.BankStatement			= LocalBankStatement
									invoked.LineCurrency			= LocalLineCurrency
									invoked.TransactionType			= LocalTransactionType
									invoked.DebitCreditIndicator	= LocalDebitCreditIndicator
									invoked.LineAmount				= LocalLineAmount
									invoked.TransactionDate			= LocalTransactionDate
									invoked.Description				= LocalBankLineDescription
									invoked.RelatedReference		= LocalRelatedReference
									invoked.BankReference			= LocalBankReference
									invoked.Comment					= LocalLineComment
									invoked.TextReference			= LocalTextReference
								if(Error)
									invoke Update FSMInboundBODTrackerRel
										invoked.Error 						= Error
										invoked.ErrorMessage 				= ErrorMessage
										invoked.Status						= 2
										invoked.CloseDate					= system current timestamp
									invoke SendBankStatementErrorAlert
										invoked.PrmErrorMessage 		= "Error Processing LoadBankStatement - Creating BankStatementLine" +", "+ LocalCashManagementAccount + "-" +LocalDocumentID+", "+"Message:"+ ErrorMessage
										invoked.LoadBankStatementBOD    = LoadBankStatementBOD
										invoked.PrmTrackerID			= LocalFSMInboundBODTracker
									LocalCounter = LocalAccountEntryCount + 1
								else
									LocalCounter = LocalCounter + 1
						if(!Error)
							invoke InvokeReclassifyAllStatementLines BankStatementRel
								resume on error
			                   		Error            			= true
			                        ErrorMessage     			= error message 
							if(Error)
								invoke Update FSMInboundBODTrackerRel
									invoked.Error 						= Error
									invoked.ErrorMessage 				= ErrorMessage
									invoked.Status						= 2
									invoked.CloseDate					= system current timestamp
								invoke SendBankStatementErrorAlert
									invoked.PrmErrorMessage 		= "Error Processing LoadBankStatement - Peforming InvokeReclassifyAllStatementLines" +", "+ LocalCashManagementAccount + "-" +LocalDocumentID+", "+"Message:"+ ErrorMessage
									invoked.LoadBankStatementBOD    = LoadBankStatementBOD
									invoked.PrmTrackerID			= LocalFSMInboundBODTracker	
								LocalIterator = LocalBankStatementCount + 1
							else
								LocalIterator = LocalIterator + 1
					else
						LocalIterator = LocalIterator + 1
				if(!Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Status		= 3
						invoked.CloseDate	= system current timestamp
						
		SendBankStatementErrorAlert is an Instance Action
			restricted			
			Parameters
				LoadBankStatementBOD 					is XMLDocument
				PrmErrorMessage 						is Alpha 300
				PrmTrackerID							is Numeric 15
			Action Rules
				LocalErrorMessage						= PrmErrorMessage
				LocalTrackerID							= PrmTrackerID
				LocalLogicalID							= LoadBankStatementBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID						= LoadBankStatementBOD select "//ApplicationArea/Sender/ComponentID"
				LocalOriginalBODID						= LoadBankStatementBOD select "//ApplicationArea/BODID"
				LocalDocumentID							= LoadBankStatementBOD select "//DataArea/BankStatement/BankStatementHeader/DocumentID/ID"
				LocalBankStatementAlertMessage			= "BankStatement "+LocalDocumentID+" From "+LocalComponentID+" Failed while processing."
				invoke TriggerPulseAlert FSMBODConfigurationBankStatementAlertRel
					invoked.PrmActorGroup 	= "BankStatementProcessor" 
					invoked.PrmMainXML 		= LoadBankStatementAlertXML	
					invoked.PrmDescription	= LocalBankStatementAlertMessage


		SyncAccountingEntityBODImport is an Import Action
			restricted
			bod type is Sync.AccountingEntity
			Parameters
				AccountingEntityBOD			 	is XMLDocument
            Action Rules
				LocalBODXML						= AccountingEntityBOD
            	LocalVariationID             	= AccountingEntityBOD select "//DataArea/AccountingEntity/IDs/ID/@variationID"
            	LocalDocumentID					= AccountingEntityBOD select "//DataArea/AccountingEntity/IDs/ID"
            	LocalOriginalBODID				= AccountingEntityBOD select "//ApplicationArea/BODID"
            	LocalFinanceEnterpriseGroup		= DerivedFEGParameter
				LocalGenericDelimiter			= DerivedGenericDelimiter
				LocalBODConfigNoun				= "AccountingEntity"
				LocalCurrency					= AccountingEntityBOD select "//DataArea/AccountingEntity/CurrencyCode"
				LocalActionCode					= AccountingEntityBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
            	LocalStatusCode					= AccountingEntityBOD select "//DataArea/AccountingEntity/Status/Code"
				LocalHeaderAccountingEntity		= AccountingEntityBOD select "//DataArea/AccountingEntity/IDs/ID"
				
				if(LocalStatusCode = "Open")
					LocalStatus = "0"
				else 
				if(LocalStatusCode = "Delete")
					LocalStatus = "1"
				else
					LocalStatus = "2"
				
				if(LocalCurrency not entered)
					LocalCurrency = AccountingEntityBOD select "//DataArea/AccountingEntity/BaseCurrency"
            	
            	if (DerivedIgnoreGenericDelimiter = "N" or DerivedIgnoreGenericDelimiter not entered)
				    LocalAccountingEntity = NativeAccountingEntity
				else
				if (DerivedIgnoreGenericDelimiter = "Y")
					LocalAccountingEntity = LocalHeaderAccountingEntity
				
				if(FSMBODSyncConfigurationRel exists and FSMBODSyncConfigurationRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "AccountingEntity"
							invoked.Direction				= 2					
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalOriginalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker	
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalOriginalBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
					
					if(AccountingEntityRel exists)
						if(LocalActionCode = "Replace" or LocalActionCode = "Change")
							invoke SyncUpdateAccountingEntity
								invoked.AccountingEntityBOD					= AccountingEntityBOD	
								invoked.PrmInboundTracker 					= LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
								invoked.PrmAccountingEntity					= LocalAccountingEntity
								invoked.PrmStatus							= LocalStatus
								invoked.PrmCurrency							= LocalCurrency
						else
						if(LocalActionCode = "Delete")
							invoke SyncDeleteAccountingEntity
								invoked.AccountingEntityBOD					= AccountingEntityBOD	
								invoked.PrmInboundTracker 					= LocalFSMInboundBODTracker
								invoked.PrmFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
								invoked.PrmAccountingEntity					= LocalAccountingEntity
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status									= 3
								invoked.CloseDate								= system current timestamp
					else
						invoke SyncCreateAccountingEntity
							invoked.AccountingEntityBOD					= AccountingEntityBOD	
							invoked.PrmInboundTracker 					= LocalFSMInboundBODTracker
							invoked.PrmFinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
							invoked.PrmAccountingEntity					= LocalAccountingEntity
							invoked.PrmStatus							= LocalStatus
							invoked.PrmCurrency							= LocalCurrency
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "AccountingEntity"
						invoked.Direction				= 2					
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalOriginalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync AccountingEntity Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalOriginalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Sync AccountingEntity Inbound BOD Service is not Enabled"
						
		SyncUpdateAccountingEntity is an Import Action			
			restricted			
			Parameters
				AccountingEntityBOD					is XMLDocument	
				PrmInboundTracker 					is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup			is Alpha size 8
				PrmAccountingEntity					is Alpha size 12
				PrmStatus							is Alpha size 1
				PrmCurrency							is AlphaUpper size 5
			Action Rules	
			    LocalFSMInboundBODTracker 					= PrmInboundTracker
				LocalFinanceEnterpriseGroup					= PrmFinanceEnterpriseGroup	
				LocalAccountingEntity						= PrmAccountingEntity			
				LocalStatus									= PrmStatus		
				LocalCurrency								= PrmCurrency
            	LocalName									= AccountingEntityBOD select "//DataArea/AccountingEntity/Name"				
				
				invoke Update AccountingEntityRel
					resume on error
                   		Error            								= true
                        ErrorMessage     								= error message
					invoked.FinanceEnterpriseGroup						= LocalFinanceEnterpriseGroup
					invoked.AccountingEntity							= LocalAccountingEntity
					invoked.Name										= LocalName
					invoked.CloseConfiguration							= DerivedCloseConfig
					invoked.CurrentPeriod.GeneralLedgerCalendarPeriod 	= DerivedCurrentPeriod
					invoked.FunctionalCurrency							= LocalCurrency
					invoked.Status										= LocalStatus
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 								= Error
						invoked.ErrorMessage 						= ErrorMessage
						invoked.Status								= 2
						invoked.CloseDate							= system current timestamp
					invoke SendSyncAEConfirmBOD
						invoked.PrmErrorMessage 					= ErrorMessage
						invoked.AccountingEntityBOD	 				= AccountingEntityBOD
						invoked.PrmTrackerID						= LocalFSMInboundBODTracker
						invoked.PrmAccountingEntity					= LocalAccountingEntity
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp
		
		SyncDeleteAccountingEntity is an Import Action			
			restricted			
			Parameters
				AccountingEntityBOD					is XMLDocument	
				PrmInboundTracker 					is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup			is Alpha size 8
				PrmAccountingEntity					is Alpha size 12
			Action Rules	
			    LocalFSMInboundBODTracker 					= PrmInboundTracker
				LocalFinanceEnterpriseGroup					= PrmFinanceEnterpriseGroup	
				LocalAccountingEntity						= PrmAccountingEntity			
				
				invoke Delete AccountingEntityRel
					resume on error
                   		Error            								= true
                        ErrorMessage     								= error message
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 								= Error
						invoked.ErrorMessage 						= ErrorMessage
						invoked.Status								= 2
						invoked.CloseDate							= system current timestamp
					invoke SendSyncAEConfirmBOD
						invoked.PrmErrorMessage 					= ErrorMessage
						invoked.AccountingEntityBOD	 				= AccountingEntityBOD
						invoked.PrmTrackerID						= LocalFSMInboundBODTracker
						invoked.PrmAccountingEntity					= LocalAccountingEntity
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp

		SyncCreateAccountingEntity is an Import Action			
			restricted			
			Parameters
				AccountingEntityBOD					is XMLDocument	
				PrmInboundTracker 					is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup			is Alpha size 8
				PrmAccountingEntity					is Alpha size 12
				PrmStatus							is Alpha size 1
				PrmCurrency							is AlphaUpper size 5
			Action Rules	
			    LocalFSMInboundBODTracker 					= PrmInboundTracker
				LocalFinanceEnterpriseGroup					= PrmFinanceEnterpriseGroup	
				LocalAccountingEntity						= PrmAccountingEntity			
				LocalStatus									= PrmStatus		
				LocalCurrency								= PrmCurrency
            	LocalName									= AccountingEntityBOD select "//DataArea/AccountingEntity/Name"				
				
				invoke Create AccountingEntity
					resume on error
                   		Error            								= true
                        ErrorMessage     								= error message
					invoked.FinanceEnterpriseGroup						= LocalFinanceEnterpriseGroup
					invoked.AccountingEntity							= LocalAccountingEntity
					invoked.Name										= LocalName
					invoked.CloseConfiguration							= DerivedCloseConfig
					invoked.CurrentPeriod.GeneralLedgerCalendarPeriod 	= DerivedCurrentPeriod
					invoked.FunctionalCurrency							= LocalCurrency
					invoked.Status										= LocalStatus
				if(Error)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 								= Error
						invoked.ErrorMessage 						= ErrorMessage
						invoked.Status								= 2
						invoked.CloseDate							= system current timestamp
					invoke SendSyncAEConfirmBOD
						invoked.PrmErrorMessage 					= ErrorMessage
						invoked.AccountingEntityBOD	 				= AccountingEntityBOD
						invoked.PrmTrackerID						= LocalFSMInboundBODTracker
						invoked.PrmAccountingEntity					= LocalAccountingEntity
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status									= 3
						invoked.CloseDate								= system current timestamp

		SendSyncAEConfirmBOD is an Instance Action
			restricted			
			Parameters
				AccountingEntityBOD 			is XMLDocument
				PrmErrorMessage					is Alpha 300
				PrmTrackerID					is Numeric 15
				PrmReasonCode					is Alpha 400
				PrmAccountingEntity				is Alpha 20
			Action Rules
				LocalBODXML						= AccountingEntityBOD
				LocalTrackerID					= PrmTrackerID
				LocalErrorMessage				= PrmErrorMessage
				LocalAccountingEntity			= PrmAccountingEntity
				LocalFromLogicalID				= AccountingEntityBOD select "//ApplicationArea/Sender/LogicalID"
				LocalOriginalBODID				= AccountingEntityBOD select "//ApplicationArea/BODID"
				LocalCreateDateTime				= AccountingEntityBOD select "//ApplicationArea/CreationDateTime"
				LocalComponentID				= AccountingEntityBOD select "//ApplicationArea/Sender/ComponentID"
				LocalDocumentID					= AccountingEntityBOD select "//DataArea/AccountingEntity/IDs/ID"
				LocalResponse					= "Rejected"
				LocalReturnCode					= "Application_Error"
				LocalReasonCode 				= "Error processing SyncAccountingEntity" +", "+"Record Key:"+ "-" +", "+"Message:"+ LocalErrorMessage + ", "+ "For BOD TrackerID - " + LocalTrackerID
				LocalMainUserTemplate			= "IONSyncAccountingEntity_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncAccountingEntityConfirmBODXML
						bod type is "Confirm.BOD"	
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID
		


		SyncAccountingChartBODImport is an Import Action
			restricted
			bod type is Sync.AccountingChart
			Parameters
				SyncAccountingChartBOD 	is XMLDocument
			Action Rules
				LocalGenericDelimiter				= DerivedGenericDelimiter
				LocalSyncAccountingChartXML			= SyncAccountingChartBOD
				LocalFinanceEnterpriseGroup			= DerivedFEGParameter
				LocalStatus							= SyncAccountingChartBOD select "//DataArea/AccountingChart/Status/Code"
				LocalDescription					= SyncAccountingChartBOD select "//DataArea/AccountingChart/Description"
				LocalReportingChart					= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID"
				LocalActionCode						= SyncAccountingChartBOD select "//DataArea/Sync/ActionCriteria/ActionExpression/@actionCode"
				LocalName							= SyncAccountingChartBOD select "//DataArea/AccountingChart/Name"
				LocalAccountingEntity				= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID/@accountingEntity"
				LocalVariationID					= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID/@variationID"
				LocalSenderBODID 					= SyncAccountingChartBOD select "//ApplicationArea/BODID"
				
				LocalDocumentID						= LocalReportingChart
				if(LocalStatus ="Open")
					LocalActive = "1"
				else
					LocalActive = "0"
				
				if(LocalDescription not entered)
					LocalDescription = LocalName
				
				if(FSMBODConfigurationSyncAccountingChartRel exists and FSMBODConfigurationSyncAccountingChartRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 1
							invoked.Noun 					= "AccountingChart"	
							invoked.Direction				= 2				
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODAccountingEntity		= LocalAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= SyncAccountingChartBOD
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
					else
						LocalFSMInboundBODTracker = FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
							invoked.BODID					= LocalSenderBODID
							invoked.Status					= 1
							invoked.StartDate				= system current timestamp
							invoked.BODXML					= SyncAccountingChartBOD
							invoked.BODAccountingEntity		= LocalAccountingEntity
							initialize invoked.Error			
							initialize invoked.ErrorMessage
				
					if(LocalActionCode	= "Add")
						invoke CreateAccountingChart
							invoked.SyncAccountingChartBOD		            = SyncAccountingChartBOD
							invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
							invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
							invoked.PrmReportingChart						= LocalReportingChart
							invoked.PrmActive								= LocalActive
							invoked.PrmDescription							= LocalDescription
					else
						invoke UpdateAccountingChart
							invoked.SyncAccountingChartBOD		            = SyncAccountingChartBOD
							invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
							invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
							invoked.PrmReportingChart						= LocalReportingChart
							invoked.PrmActive								= LocalActive
							invoked.PrmDescription							= LocalDescription
							invoked.PrmActionCode							= LocalActionCode
				else 
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 1
						invoked.Noun 					= "AccountingChart"	
						invoked.Direction				= 2
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= SyncAccountingChartBOD
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync AccountingChart Inbound BOD Service is not Enabled" 
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.FinanceEnterpriseGroup	= LocalFinanceEnterpriseGroup
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalSenderBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.BODXML					= SyncAccountingChartBOD
						invoked.BODAccountingEntity		= LocalAccountingEntity
						invoked.CloseDate				= system current timestamp
						invoked.Error					= true			
						invoked.ErrorMessage			= "Sync AccountingChart Inbound BOD Service is not Enabled" 
						
		CreateAccountingChart is an Import Action
			restricted
			Parameters
				SyncAccountingChartBOD 				is XMLDocument
				PrmInboundTracker  					is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup			is Alpha 4
				PrmDescription						is Alpha 60
				PrmReportingChart					is AlphaUpper size 15
				PrmActive							is Alpha 10
			Action Rules
				LocalFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker		= PrmInboundTracker
				LocalDescription				= PrmDescription
				LocalReportingChart				= PrmReportingChart
				LocalActive						= PrmActive
				if(ReportingChartRel not exists)
					invoke Create ReportingChart
						resume on error
							Error            		= true
							ErrorMessage     		= error message
						invoked.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
						invoked.ReportingChart					= LocalReportingChart
						invoked.Active							= LocalActive
						invoked.Description						= LocalDescription
					if(Error)
						invoke Update FSMInboundBODTrackerRel
							invoked.Error 				= Error
							invoked.ErrorMessage 		= ErrorMessage
							invoked.Status				= 2
							invoked.CloseDate			= system current timestamp	
						invoke SyncAccountingChartConfirmBOD
							invoked.PrmErrorMessage 			= ErrorMessage
							invoked.SyncAccountingChartBOD      = SyncAccountingChartBOD
							invoked.PrmTrackerID				= LocalFSMInboundBODTracker
					else
						invoke Update FSMInboundBODTrackerRel
							invoked.Status		= 3
							invoked.CloseDate	= system current timestamp
							
				else
				if(ReportingChartRel exists)
					invoke Update FSMInboundBODTrackerRel
						invoked.Error 				= Error
						invoked.ErrorMessage 		= ErrorMessage
						invoked.Status				= 2
						invoked.CloseDate			= system current timestamp	
					invoke SyncAccountingChartConfirmBOD
						invoked.PrmErrorMessage 			= "ReportingChart already exists"
						invoked.SyncAccountingChartBOD      = SyncAccountingChartBOD
						invoked.PrmTrackerID				= LocalFSMInboundBODTracker			
				
		UpdateAccountingChart is an Import Action
			restricted
			Parameters
				SyncAccountingChartBOD 				is XMLDocument
				PrmInboundTracker  					is like FSMInboundBODTracker
				PrmFinanceEnterpriseGroup			is Alpha 4
				PrmDescription						is Alpha 60
				PrmReportingChart					is AlphaUpper size 15
				PrmActive							is Alpha 10
				PrmActionCode						is Alpha 10
			Action Rules
				LocalFinanceEnterpriseGroup 	= PrmFinanceEnterpriseGroup
				LocalFSMInboundBODTracker		= PrmInboundTracker
				LocalDescription				= PrmDescription
				LocalReportingChart				= PrmReportingChart
				LocalActive						= PrmActive
				LocalActionCode					= PrmActionCode
				if(ReportingChartRel exists)
					if(LocalActionCode = "Change" or LocalActionCode = "Replace")
						invoke Update ReportingChartRel
							resume on error
								Error            		= true
								ErrorMessage     		= error message
							invoked.FinanceEnterpriseGroup			= LocalFinanceEnterpriseGroup
							invoked.ReportingChart					= LocalReportingChart
							invoked.Active							= LocalActive
							invoked.Description						= LocalDescription
						if(Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 				= Error
								invoked.ErrorMessage 		= ErrorMessage
								invoked.Status				= 2
								invoked.CloseDate			= system current timestamp	
							invoke SyncAccountingChartConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.SyncAccountingChartBOD      = SyncAccountingChartBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status		= 3
								invoked.CloseDate	= system current timestamp		
					else
					if(ReportingChartRel exists and LocalActionCode = "Delete")
						invoke Delete ReportingChartRel
							resume on error
								Error            		= true
								ErrorMessage     		= error message
						if (Error)
							invoke Update FSMInboundBODTrackerRel
								invoked.Error 				= Error
								invoked.ErrorMessage 		= ErrorMessage
								invoked.Status				= 2
								invoked.CloseDate			= system current timestamp	
							invoke SyncAccountingChartConfirmBOD
								invoked.PrmErrorMessage 			= ErrorMessage
								invoked.SyncAccountingChartBOD      = SyncAccountingChartBOD
								invoked.PrmTrackerID				= LocalFSMInboundBODTracker
						else
							invoke Update FSMInboundBODTrackerRel
								invoked.Status		= 3
								invoked.CloseDate	= system current timestamp
				else
				if(ReportingChartRel not exists)
					if(LocalActionCode = "Change" or LocalActionCode = "Replace" or LocalActionCode = "Delete")
						invoke CreateAccountingChart
							invoked.SyncAccountingChartBOD		            = SyncAccountingChartBOD
							invoked.PrmFinanceEnterpriseGroup				= LocalFinanceEnterpriseGroup
							invoked.PrmInboundTracker 						= LocalFSMInboundBODTracker	
							invoked.PrmReportingChart						= LocalReportingChart
							invoked.PrmActive								= LocalActive
							invoked.PrmDescription							= LocalDescription
				else
					invoke Update FSMInboundBODTrackerRel
						invoked.Status		= 3
						invoked.CloseDate	= system current timestamp
						
		SyncAccountingChartConfirmBOD is an Instance Action
			restricted			
			Parameters
				SyncAccountingChartBOD 	is XMLDocument
				PrmErrorMessage 		is Alpha 300
				PrmTrackerID			is Numeric 15
			Action Rules
				LocalErrorMessage			= PrmErrorMessage
				LocalTrackerID				= PrmTrackerID
				LocalSyncAccountingChartXML	= SyncAccountingChartBOD
				LocalFromLogicalID			= SyncAccountingChartBOD select "//ApplicationArea/Sender/LogicalID"
				LocalComponentID			= SyncAccountingChartBOD select "//ApplicationArea/Sender/ComponentID"
				LocalSenderBODID			= SyncAccountingChartBOD select "//ApplicationArea/BODID"
				LocalOriginalCreateDateTime	= SyncAccountingChartBOD select "//ApplicationArea/CreationDateTime"
				LocalVariationID			= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID/@variationID"
				LocalAccountingEntity		= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID/@accountingEntity"
				LocalDocumentID				= SyncAccountingChartBOD select "//DataArea/AccountingChart/IDs/ID"
				LocalConfirmBOD				= "true"
				LocalMainUserTemplate		= "IONSyncAccountingChart_ConfirmBOD_ST"
				if(UserTemplateRel exists)
					send ion bod
						bod is SyncAccountingChartBODXML
						bod type is "Confirm.BOD"
						accounting entity is LocalAccountingEntity
						document id is LocalDocumentID


		AcknowledgeFinancialPartyMasterBODImport is an Import Action
			restricted
			bod type is Acknowledge.FinancialPartyMaster
			Parameters
				FinancialPartyMasterBOD			 	is XMLDocument
            Action Rules
				LocalBODXML						= FinancialPartyMasterBOD
            	LocalVariationID             	= FinancialPartyMasterBOD select "//DataArea/FinancialPartyMaster/PartyIDs/ID/@variationID"
            	LocalDocumentID					= FinancialPartyMasterBOD select "//DataArea/FinancialPartyMaster/PartyIDs/ID"
            	LocalOriginalBODID				= FinancialPartyMasterBOD select "//ApplicationArea/BODID"
				LocalHeaderAccountingEntity		= FinancialPartyMasterBOD select "//DataArea/Acknowledge/AccountingEntityID"
				if(FSMBODConfigurationAckFinancialPartyMasterRel exists and FSMBODConfigurationAckFinancialPartyMasterRel.Enable)
					if(FSMInboundBODTracker not entered)
						invoke Create FSMInboundBODTracker
							assign result to NewBODTracker
							invoked.Verb 					= 5
							invoked.Noun 					= "FinancialPartyMaster"
							invoked.Direction				= 2					
							invoked.BODAccountingEntity		= LocalHeaderAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalOriginalBODID
							invoked.Status					= 3
							invoked.StartDate				= system current timestamp
							invoked.CloseDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
						LocalFSMInboundBODTracker 			= NewBODTracker.FSMInboundBODTracker	
					else 
						LocalFSMInboundBODTracker		= FSMInboundBODTracker
						invoke Update FSMInboundBODTrackerRel
							invoked.BODAccountingEntity		= LocalHeaderAccountingEntity
							invoked.BODDocumentID			= LocalDocumentID
							invoked.BODVariationID			= LocalVariationID
							invoked.BODID					= LocalOriginalBODID
							invoked.Status					= 3
							invoked.StartDate				= system current timestamp
							invoked.CloseDate				= system current timestamp
							invoked.BODXML					= LocalBODXML
							initialize invoked.Error			
							initialize invoked.ErrorMessage
				else
				if(FSMInboundBODTracker not entered)
					invoke Create FSMInboundBODTracker
						assign result to NewBODTracker
						invoked.Verb 					= 5
						invoked.Noun 					= "FinancialPartyMaster"
						invoked.Direction				= 2					
						invoked.BODAccountingEntity		= LocalHeaderAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalOriginalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Acknowledge FinancialPartyMaster Inbound BOD Service is not Enabled"
					LocalFSMInboundBODTracker = NewBODTracker.FSMInboundBODTracker
				else
					LocalFSMInboundBODTracker = FSMInboundBODTracker
					invoke Update FSMInboundBODTrackerRel
						invoked.BODAccountingEntity		= LocalHeaderAccountingEntity
						invoked.BODDocumentID			= LocalDocumentID
						invoked.BODVariationID			= LocalVariationID
						invoked.BODID					= LocalOriginalBODID
						invoked.Status					= 4
						invoked.StartDate				= system current timestamp
						invoked.CloseDate				= system current timestamp
						invoked.BODXML					= LocalBODXML
						invoked.Error					= true
						invoked.ErrorMessage			= "Acknowledge FinancialPartyMaster Inbound BOD Service is not Enabled"						

