ClosePeriodTaskFlat is a BusinessClass
	owned by closemgmt
	prefix is CPTF

	Ontology
		symbolic key is ClosePeriodTaskFlat

	Persistent Fields
		DisplaySequence						is Numeric 04
		TopLevelTask						is a ClosePeriodTask  


		ParentTask							is a ClosePeriodTask
		TaskCompany							is a CompanyGroupField
		TaskLevel							is Numeric 2
			States
				Summary				value is 0 
				Detail				value is 1 		
		FinanceTeam
		TaskOwner 							is a FinanceTeamMember
			delete ignored
		TaskName							is Alpha 100
		Priority							is Numeric 1
			States
				Low							value is 0
				Medium						value is 1
				High						value is 2
		Risk								is Numeric 1
			States	
				Low							value is 0
				Medium						value is 1
				High						value is 2
		RequireSupportingDoco				is Boolean
		RequireJournalEntry                 is Boolean
		RequiresApproval					is Boolean
		ApprovalCode
		Approver							is a FinanceResource
		ApproverTeam						is a FinanceTeamField
		TaskStatus							is Numeric 1
			States	
				Scheduled					value is 0
				InProcess					value is 2
				PendingApproval				value is 5
				Closed						value is 7
				Voided						value is 9		
		ScheduleForTask        		 		is a CloseTaskScheduleAndLOE
		OneTimeTask							is Boolean

       	PrimaryTaskType						is a CloseTaskType
       	SecondaryTaskType					is a CloseTaskType
       	TertiaryTaskType					is a CloseTaskType
       	
       	DayOfClose							
		BeginTimeSensitive					is Boolean
		DueTimeSensitive					is Boolean
		DueTimeNotificationStamp			is TimeStamp

	Local Fields
		LocalTeam					is AlphaUpper 20
		LocalGroupingForTeam		is Numeric 9

	Derived Fields
		NumberOfDaysNote is a MessageField
			"(_Note:_UnlessTheSpecificDayOfTheMonthIsBeingUsed,Leaving_BeginNumberOfDaysBlankMeansTaskWillBeScheduledToBeginOnThePeriodEndDateAndLeaving_DueNumberOfDaysBlankMeansTaskWillBeScheduledToBeDueOnThePeriodEndDate)"
			
	Conditions
	
		SecurityGroupAllowsAccess
			restricted
			when (TaskCompany !entered
			or   (TaskCompany entered
			and   TaskCompany.FinanceCompanyField.SecurityGroupAllowsAccess))
			
		Overdue

			when (ClosePeriodTaskFlat.DetailPeriodTask.Overdue)

		StartedLate
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.StartedLate)

		DueToday

			when (ClosePeriodTaskFlat.DetailPeriodTask.DueToday)

		StartToday
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.StartToday)

		TaskInJeopardy
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.TaskInJeopardy)

		LateToStart
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.LateToStart)

		ShowImage
			restricted
			when (TaskOwner.TeamMember.ResourcePicture entered)

		EstimateForTask
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.EstimateForTask entered)

		ActualForTask
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.ActualForTask entered)

		YellowAlert
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.YellowAlert)

		AllowCreationOfOneTimeTasks
			when (CloseManagementGroup.AllowOneTimeTasks
			and   OpenClosePeriodRel exists)

		OneTimeTaskNeedsApprovalCode
			when (CloseManagementGroup.RequireApprovalOfOneTimeTasks)

		OneTimeTaskNeedsApproval
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.OneTimeTaskNeedsApproval)

		OneTimeTaskWaitingApproval
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.OneTimeTaskWaitingApproval)
			
		HasReopenHistory
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.HasReopenHistory)
			
		StartedEarly
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.StartMetric.StartedEarly)
			
		DoneEarly
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.DueMetric.CompletedEarly)
			
		DoneLate
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.DueMetric.CompletedLate)		

		IsOpen
			when (TaskStatus < 7)

		OpenTaskRequiresApproval
			when (ClosePeriodTaskFlat.DetailPeriodTask.OpenTaskRequiresApproval)

		OpenTaskNoApprovalRequired
			when (ClosePeriodTaskFlat.DetailPeriodTask.OpenTaskNoApprovalRequired)

		AllowReassignApprover
			when (ClosePeriodTaskFlat.DetailPeriodTask.AllowReassignApprover)
			
		AllowReassignOneTimeTaskApprover
			when (ClosePeriodTaskFlat.DetailPeriodTask.AllowReassignOneTimeTaskApprover)
		AllowForceComplete
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.AllowForceComplete)

		AllowForceCompleteLate
			restricted
			when (ClosePeriodTaskFlat.DetailPeriodTask.AllowForceCompleteLate)

		TaskClosingLateAndNeedsReasonCode
            restricted
            when (ClosePeriodTaskFlat.DetailPeriodTask.ClosingLate
            and   CloseManagementGroup.CloseLateReasonCodeRequired)
		
		HasSupportingDocumentation
            when (ClosePeriodTaskFlat.DetailPeriodTask.SupportingDocumentationRel exists)

	Relations
		SendToTeamMembersRel
			one-to-many relation to FinanceTeamMember 
			Field Mapping uses ByFinanceTeam
				related.FinanceEnterpriseGroup	= CloseManagementGroup
				related.FinanceTeam				= LocalTeam		

		OpenClosePeriodRel
			one-to-many relation to ClosePeriod
			Field Mapping uses ByOpenPeriod
				related.CloseManagementGroup = CloseManagementGroup

		CloseTaskTypeDefaultPrimaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsPrimary
				and    related.IsDefault)

		CloseTaskTypeDefaultSecondaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsSecondary
				and    related.IsDefault)

		CloseTaskTypeDefaultTertiaryRel
			one-to-many relation to CloseTaskType
			Field Mapping uses symbolic key
				related.CloseManagementGroup = CloseManagementGroup
			Instance Selection
				where (related.IsTertiary
				and    related.IsDefault)

	Sets
		BySummary
			Sort Order
				CloseManagementGroup
				ClosePeriod	
				ClosePeriodTaskFlat.SummaryPeriodTask
				ClosePeriodTaskFlat.DetailPeriodTask
				DisplaySequence	

		ByDetail
			Sort Order
				CloseManagementGroup
				ClosePeriod	
				ClosePeriodTaskFlat.DetailPeriodTask
				ClosePeriodTaskFlat.SummaryPeriodTask
				DisplaySequence	

		ByTopLevelTask
			Sort Order
				CloseManagementGroup
				ClosePeriod
				TopLevelTask
				ClosePeriodTaskFlat.SummaryPeriodTask
				ClosePeriodTaskFlat.DetailPeriodTask
				DisplaySequence	
				
		BySummaryDueDate
			Sort Order
				CloseManagementGroup
				ClosePeriod	
				ClosePeriodTaskFlat.SummaryPeriodTask
				ScheduleForTask.DueDate
				ScheduleForTask.DueTime
				DisplaySequence	
				ClosePeriodTaskFlat.DetailPeriodTask

		ByDueTimeStamp
			Sort Order 
                CloseManagementGroup
                ScheduleForTask.DueDate
                ScheduleForTask.DueTime
                ClosePeriod 
                ClosePeriodTaskFlat    

        ByTaskName
            Sort Order
                CloseManagementGroup
                TaskName
                ClosePeriod
                ClosePeriodTaskFlat

        ByTaskStatus
            Sort Order
                CloseManagementGroup
                TaskStatus
                ClosePeriod
                ClosePeriodTaskFlat

        ByTeam
            Sort Order
                CloseManagementGroup
                FinanceTeam
                ClosePeriod
                ClosePeriodTaskFlat

        ByOwner
            Sort Order
                CloseManagementGroup
                TaskOwner
                ClosePeriod
                ClosePeriodTaskFlat

        ByCompany
            Sort Order
                CloseManagementGroup
                TaskCompany
                ClosePeriod
                ClosePeriodTaskFlat

        ByPrimaryTaskType
            Sort Order
                CloseManagementGroup
                PrimaryTaskType
                ClosePeriod
                ClosePeriodTaskFlat

        BySecondaryTaskType
            Sort Order
                CloseManagementGroup
                SecondaryTaskType
                ClosePeriod
                ClosePeriodTaskFlat

        ByTertiaryTaskType
            Sort Order
                CloseManagementGroup
                TertiaryTaskType
                ClosePeriod
                ClosePeriodTaskFlat


	Actions	
		Create is a Create Action
			restricted

		Update is an Update Action
			restricted

		Purge is a Purge Action
			restricted



    	ManualApprove is an Instance Action
    		valid when (TaskStatus.PendingApproval)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"

			Action Rules
				invoke ManualApprove ClosePeriodTaskFlat.DetailPeriodTask


		ManualReject is an Instance Action	
    		valid when (TaskStatus.PendingApproval)
			subject is RejectTaskApproval
			Parameters
				PrmComment		is Alpha size up to 500

			Action Rules
				invoke ManualReject ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmComment	= PrmComment
					invoked.reason code	= reason code


    	OneTimeTaskManualApprove is an Instance Action
    		default label is "ManualApprove"
    		valid when (OneTimeTaskWaitingApproval)
			confirmation required
				"ThisWillBypassTheProcessFlowApprovalProcess;DoYouWantToContinue?"

			Action Rules
				invoke OneTimeTaskManualApprove ClosePeriodTaskFlat.DetailPeriodTask
				 

		OneTimeTaskManualReject is an Instance Action
			default label is "ManualReject"	
    		valid when (OneTimeTaskWaitingApproval)
			subject is RejectOneTimeTask
			Parameters
				PrmComment		is Alpha size up to 500

			Action Rules
				invoke OneTimeTaskManualReject ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmComment	= PrmComment
					invoked.reason code	= reason code
				
				
		ResubmitForApproval is an Instance Action
			valid when (ClosePeriodTaskFlat.DetailPeriodTask.AllowResubmitOfOneTimeTask)
			
			Action Rules
				invoke ResubmitForApproval ClosePeriodTaskFlat.DetailPeriodTask

		MassReassign is an Instance Action
			valid when (!ClosePeriod.CloseManagementStatus.Closed)
			completion message is "TasksForThisPeriodAreNowReassigned"
			
			Parameters
				PrmTaskSelection		is a ClosePeriodTask group
				PrmFinanceTeam			is a FinanceTeam
				PrmTaskOwner			is a FinanceTeamMember
				PrmScopeOfChange		is Numeric 1
					States
						JustThisPeriod					value is 0
						AllPeriods						value is 1
						AllPeriodsAndTheCloseProcess	value is 2
				
			Parameter Rules
				PrmTaskSelection
					required
						"TaskSelectionIsRequired"
				PrmFinanceTeam
					initial value is FinanceTeam
					required
						"TeamIsRequired"				
				PrmTaskOwner
					initial value is TaskOwner
					
			Action Rules
				invoke MassReassignSet ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmCloseManagementGroup	= CloseManagementGroup
					invoked.PrmClosePeriod			= ClosePeriod
					invoked.PrmTaskSelection		= PrmTaskSelection
					invoked.PrmFinanceTeam			= PrmFinanceTeam
					invoked.PrmTaskOwner			= PrmTaskOwner
					invoked.PrmScopeOfChange		= PrmScopeOfChange		

		Reassign is an Instance Action
			valid when (ClosePeriodTaskFlat.DetailPeriodTask.AllowReassign)
			completion message is "<TaskName>Reassigned"
			Parameters
				CloseManagementGroup 							
				PrmFinanceTeam								is a FinanceTeam
				PrmTaskOwner								is a FinanceTeamMember
				PrmScopeOfChange    						is Numeric 1
					States
						JustThisPeriod						value is 0
						AllPeriods							value is 1
						AllPeriodsAndChangeTheCloseProcess	value is 2

			Parameter Rules
				CloseManagementGroup
					default to ClosePeriod.CloseManagementGroup
					cannot be changed
				PrmFinanceTeam
					initial value is FinanceTeam
					required
						"TeamIsRequired"				
				PrmTaskOwner
					initial value is TaskOwner
				PrmScopeOfChange
					initial value is 0

			Action Rules
				invoke Reassign ClosePeriodTaskFlat.DetailPeriodTask
					invoked.CloseManagementGroup	= CloseManagementGroup
					invoked.PrmFinanceTeam			= PrmFinanceTeam
					invoked.PrmTaskOwner			= PrmTaskOwner
					invoked.PrmScopeOfChange		= PrmScopeOfChange

		MassVoidTask is an Instance Action
			valid when (ClosePeriod.CloseManagementStatus.Open)
			completion message is "SelectedDetailTasksForPeriod<ClosePeriod>AreNowVoided"
			subject is VoidTask
			
			Parameters
				PrmTaskSelection	is a ClosePeriodTask group
				PrmComment			is Alpha size up to 500
				
			Parameter Rules
				PrmTaskSelection
					required
						"TaskSelectionIsRequired"
				
			Action Rules
				constraint (ClosePeriod.CloseManagementStatus.Open)
					"PeriodMustBeOpenToPerformMassVoidTask"
				
				if (CloseManagementGroup.VoidReasonCodeRequired)			
					constraint (reason code entered)			
						"ReasonCodeIsRequiredForVoidingTheTask"	
				
				confirmation required
					"Caution:ThisActionWillVoidAllDetailedTasksForPeriod<ClosePeriod>ThatMeetTheTaskSelectionCriteria;WouldYouLikeToContinue?"
									
				invoke MassVoidTaskSet ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmCloseManagementGroup	= CloseManagementGroup
					invoked.PrmClosePeriod			= ClosePeriod
					invoked.PrmTaskSelection		= PrmTaskSelection
					invoked.PrmComment				= PrmComment
					invoked.PrmReasonCode			= reason code


		VoidTask is an Instance Action
			valid when (ClosePeriodTaskFlat.DetailPeriodTask.AllowVoid)
			completion message is "TaskVoided"
			subject is VoidTask
			Parameters
				PrmComment		is Alpha size up to 500

			Action Rules
				invoke VoidTask ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmComment	= PrmComment
					invoked.reason code	= reason code


		VoidOneTimeTask is an Instance Action
			default label is "VoidTask"
			valid when (ClosePeriodTaskFlat.DetailPeriodTask.AllowOneTimeVoidByCreator)
			completion message is "OneTimeTaskForThisPeriodIsNowVoided"
			subject is VoidTask

			Parameters
				PrmComment		is Alpha size up to 500

			Action Rules
				invoke VoidOneTimeTask ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmComment	= PrmComment
					invoked.reason code	= reason code

		ForceComplete is an Instance Action
			valid when (AllowForceComplete)

			Action Rules
				if (RequiresApproval)
					confirmation required
						"TaskWillBePutToClosedStatusWithoutUpdatingTaskOwnerOrGoingThroughTheApprovalProcess.DoYouWantToContinue?"
				else
					confirmation required
						"TaskWillBePutToClosedStatusWithoutUpdatingTaskOwner.DoYouWantToContinue?"

				invoke CloseTask ClosePeriodTaskFlat.DetailPeriodTask
					invoked.CloseByManager = true

		ForceCompleteLate is an Instance Action
			default label is "ForceComplete"
			subject is CloseTaskLate
			valid when (AllowForceCompleteLate)
			
			Parameters
				PrmLateComment				is Alpha size up to 500

			Action Rules
				if (RequiresApproval)
					confirmation required
						"TaskWillBePutToClosedStatusWithoutUpdatingTaskOwnerOrGoingThroughTheApprovalProcess.DoYouWantToContinue?"
				else
					confirmation required
						"TaskWillBePutToClosedStatusWithoutUpdatingTaskOwner.DoYouWantToContinue?"

				invoke CloseTask ClosePeriodTaskFlat.DetailPeriodTask
					invoked.reason code		= reason code
					invoked.PrmLateComment	= PrmLateComment				
					invoked.CloseByManager	= true
					
		MassForceComplete is an Instance Action
			valid when (ClosePeriod.CloseManagementStatus.Open)
			completion message is "SelectedDetailTasksForPeriod<ClosePeriod>AreNowClosed"
			subject is CloseTaskLate
			
			Parameters
				PrmTaskSelection	is a ClosePeriodTask group
				PrmLateComment		is Alpha size up to 500
				
			Parameter Rules
				PrmTaskSelection
					required
						"TaskSelectionIsRequired"
				
			Action Rules
				constraint (ClosePeriod.CloseManagementStatus.Open)
					"PeriodMustBeOpenToPerformMassForceComplete"
				
				if (CloseManagementGroup.CloseLateReasonCodeRequired)			
					constraint (reason code entered)			
						"ReasonCodeIsRequiredForClosingOfAnyTaskThatIsLate"	
				
				confirmation required
					"Caution:ThisActionWillForceCloseAllDetailedTasksWithStatusOf_In_ProcessForPeriod<ClosePeriod>ThatMeetTheTaskSelectionCriteria;WouldYouLikeToContinue?"
									
				invoke MassForceCompleteTaskSet ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmCloseManagementGroup	= CloseManagementGroup
					invoked.PrmClosePeriod			= ClosePeriod
					invoked.PrmTaskSelection		= PrmTaskSelection
					invoked.PrmLateComment			= PrmLateComment
					invoked.PrmReasonCode			= reason code

		Reopen is an Instance Action 

			valid when (ClosePeriodTaskFlat.DetailPeriodTask.AllowReopen)
			subject is ReopenTask
			Parameters
				CloseManagementGroup
				PrmComment 					is Alpha size up to 500
				PrmReopenDependents			is Boolean
				PrmFinanceTeam				is a FinanceTeam
				PrmTaskOwner				is a FinanceTeamMember

			Parameter Rules
				CloseManagementGroup
					default to ClosePeriod.CloseManagementGroup
					cannot be changed
				PrmFinanceTeam
					initial value is FinanceTeam
					required
						"TeamIsRequired"				
				PrmTaskOwner
					initial value is TaskOwner

			Action Rules
				invoke Reopen ClosePeriodTaskFlat.DetailPeriodTask
					invoked.CloseManagementGroup	= CloseManagementGroup
					invoked.PrmComment				= PrmComment
					invoked.PrmReopenDependents		= PrmReopenDependents
					invoked.reason code				= reason code
					invoked.PrmFinanceTeam			= PrmFinanceTeam
					invoked.PrmTaskOwner			= PrmTaskOwner


		SendMessage is an Instance Action
			Parameters
				CloseManagementGroup
				MessageFor						is Alpha 08
					States
						Resource				value is "Resource"
						Team					value is "Team"
				MessageTeam						is a FinanceTeam
				MessagePerson					is a FinanceResource
				DialogueTitle					is Alpha 100
				Dialogue 						is Text
				DialogueAttachment				is an Attachment
				DialogueLink					is an URL
				ResponseRequired				is Boolean
				PrmExternalToEmailAddress		is EmailAddressField with multiple addresses 
					holds pii
				PrmCcEmailAddress				is EmailAddressField with multiple addresses 
					holds pii
				PrmBccEmailAddress				is EmailAddressField with multiple addresses 
					holds pii
				PrmAddCcEmail					is Boolean
				PrmAddBccEmail					is Boolean
				PrmSendingLandmarkNotifications is Boolean
				PrmLocalActor					is an Actor

			Parameter Rules
				CloseManagementGroup
					initial value is ClosePeriod.CloseManagementGroup
					cannot be changed			
				PrmExternalToEmailAddress
					if (PrmExternalToEmailAddress not entered)
						constraint(MessagePerson entered or MessageTeam entered)
							"MustEnter_a_Resource,_Team_and/or_Email_Address."
				PrmCcEmailAddress
					if (PrmCcEmailAddress entered)
						constraint(PrmExternalToEmailAddress entered)
							"MustEnter_To_E-mail_Address,_when_Cc_email_is_entered."
				PrmBccEmailAddress
					if (PrmBccEmailAddress entered)
						constraint(PrmExternalToEmailAddress entered)
							"MustEnter_To_E-mail_Address,_when_Bcc_email_is_entered."							
				PrmSendingLandmarkNotifications
					if (MessagePerson not entered and MessageTeam not entered)
						constraint (not PrmSendingLandmarkNotifications entered)
							"MustEnterEither_Resource_and/or_TeamToSend_Notifications"
				DialogueTitle
					default to Dialogue
					initial value is TaskName
				Dialogue
					required
						"PleaseEnterYourMessage"

			Action Rules	
				if (MessagePerson entered)
					invoke Create FinanceResourceDialogue
						invoked.NavigateToThis		= reference to ClosePeriodTaskFlat.DetailPeriodTask				
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= MessagePerson
						invoked.DialogueTitle		= DialogueTitle
						invoked.Dialogue			= Dialogue
						invoked.DialogueAttachment	= DialogueAttachment
						invoked.SendToContact		= MessagePerson
						invoked.Author				= actor.agent(Employee).Employee
						invoked.DialogueLink		= DialogueLink
						invoked.ResponseRequired	= ResponseRequired
						invoked.MessageType 		= 0  


					invoke Create FinanceResourceDialogue
						invoked.NavigateToThis		= reference to ClosePeriodTaskFlat.DetailPeriodTask				
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= actor.agent(Employee).Employee
						invoked.DialogueTitle		= DialogueTitle
						invoked.Dialogue			= Dialogue
						invoked.DialogueAttachment	= DialogueAttachment
						invoked.SendToContact		= MessagePerson
						invoked.Author				= actor.agent(Employee).Employee
						invoked.DialogueLink		= DialogueLink
						invoked.ResponseRequired	= ResponseRequired
						invoked.MessageType 		= 1  

					if (PrmSendingLandmarkNotifications)
						PrmLocalActor = MessagePerson.FinanceResourceActor
						send notification
							to PrmLocalActor
							description is "<DialogueTitle>"
							priority is high
							detail is "<Dialogue>"

				if (MessageTeam entered) 



					LocalTeam = MessageTeam
					for each SendToTeamMembersRel  
						if ((each.FinanceTeamMember.TeamMember != actor.agent(Employee).Employee)
						and (each.FinanceTeamMember.TeamMember != MessagePerson))
							invoke Create FinanceResourceDialogue
								invoked.NavigateToThis		= reference to ClosePeriodTaskFlat.DetailPeriodTask				
								invoked.HROrganization		= CloseManagementGroup.HROrganization
								invoked.FinanceResource		= each.FinanceTeamMember.TeamMember
								invoked.DialogueTitle		= DialogueTitle
								invoked.Dialogue			= Dialogue
								invoked.DialogueAttachment	= DialogueAttachment
								invoked.SendToTeam			= MessageTeam
								invoked.SendToContact		= each.FinanceTeamMember.TeamMember
								invoked.Author				= actor.agent(Employee).Employee
								invoked.DialogueLink		= DialogueLink
								invoked.GroupingForTeam		= LocalGroupingForTeam	
								invoked.ResponseRequired	= ResponseRequired												
								invoked.MessageType 		= 0  

							invoke Create FinanceResourceDialogue
								invoked.NavigateToThis		= reference to ClosePeriodTaskFlat.DetailPeriodTask				
								invoked.HROrganization		= CloseManagementGroup.HROrganization
								invoked.FinanceResource		= actor.agent(Employee).Employee
								invoked.DialogueTitle		= DialogueTitle
								invoked.Dialogue			= Dialogue
								invoked.DialogueAttachment	= DialogueAttachment
								invoked.SendToTeam			= MessageTeam
								invoked.SendToContact		= each.FinanceTeamMember.TeamMember
								invoked.Author				= actor.agent(Employee).Employee
								invoked.DialogueLink		= DialogueLink
								invoked.GroupingForTeam		= LocalGroupingForTeam	
								invoked.ResponseRequired	= ResponseRequired		
								invoked.MessageType 		= 1  

							if (PrmSendingLandmarkNotifications)
								PrmLocalActor = each.FinanceTeamMember.TeamMember.FinanceResourceActor															
								send notification
									to PrmLocalActor
									description is "<DialogueTitle>"
									priority is high
									detail is "<Dialogue>"

				if (PrmExternalToEmailAddress entered)
					send email
						to PrmExternalToEmailAddress
						cc PrmCcEmailAddress
						bcc PrmBccEmailAddress
						from actor.agent(Employee).EmployeeWorkEmailAddress
						subject "<DialogueTitle>"
						Attachments
							attachment DialogueAttachment.File
						Contents
								"<Dialogue>"
								blank line
								"<DialogueLink>"
								
		Reminder is an Instance Action 		
			Parameters
				ReminderBeginDate				is Date
				ReminderDueDate					is Date
				ReminderDescription				is Alpha 100
				ReminderNotes					is Text
				ReminderAttachment				is an Attachment
				ReminderLink					is an URL
				FinancialForm					is Alpha 6

			Parameter Rules
				ReminderBeginDate
					initial value is current corporate date
					default to current corporate date
					constraint (ReminderBeginDate >= current corporate date)
						"SelectFutureDateOrLeaveBlank"
				ReminderDueDate
					initial value is current corporate date
					default to ReminderDueDate
					initial value is ReminderBeginDate
					constraint (ReminderDueDate >= ReminderBeginDate)
						"BeginDateCanNotBeBeforeDueDate"
				ReminderDescription
					required

			Action Rules
				invoke Create FinanceResourceSchedule
					invoked.HROrganization	= CloseManagementGroup.HROrganization
					invoked.FinanceResource	= actor.agent(Employee).Employee
					invoked.BeginDate		= ReminderBeginDate		
					invoked.DueDate			= ReminderDueDate		
					invoked.Description		= ReminderDescription
					invoked.Notes			= ReminderNotes		
					invoked.NavigateToThis	= reference to ClosePeriodTaskFlat.DetailPeriodTask
					invoked.Attachment		= ReminderAttachment
					invoked.WebsiteLink		= ReminderLink
					invoked.CreatedBy		= 0 
					invoked.FinancialForm	= FinancialForm
					

		WorkRequest is an Instance Action 		
			Parameters
				PrmClosePeriod					is a ClosePeriod
				RequestTeam						is a FinanceTeam
				RequestTeamMember				is a FinanceTeamMember
				RequestPerson					is a FinanceResource
				RequestBeginDate				is Date
				RequestBeginTime				is Time
				RequestDueDate					is Date
				RequestDueTime					is Time
				RequestDescription				is Alpha 100
				RequestNotes					is Text
				RequestAttachment				is an Attachment
				RequestLink						is an URL
				FinancialForm					is Alpha 6
				CreateOneTimeTask				is Boolean
				OneTimeParentTask				is a ClosePeriodTask
				OneTimeApprovalCode				is an ApprovalCode
				AddOneTimeTaskToProcess			is Boolean
				OneTimeCompany					is a CompanyGroupField
				OneTimePriority					is Numeric 1
					States
						Low							value is 0
						Medium						value is 1
						High						value is 2
				OneTimeRisk						is Numeric 1
					States	
						Low							value is 0
						Medium						value is 1
						High						value is 2
				OneTimeRequireSupportingDoco	is Boolean
				OneTimeRequireJournalEntry      is Boolean
				OneTimeRequiresApproval			is Boolean
				OneTimeCompletionApprovalCode	is an ApprovalCode
				OneTimeLevelOfEffort			is Unsigned Decimal 10.2
				OneTimeCalendar					is a SystemCalendar
				OneTimePeriodGroup				is a SystemCalendarPeriodGroup
				OneTimePrimaryType				is a CloseTaskType
				OneTimeSecondaryType			is a CloseTaskType
				OneTimeTertiaryType				is a CloseTaskType
				OneTimeDueTimeSensitive			is Boolean
				OneTimeTaskAddOption			is Numeric 1
					States
						JustTheSelectedPeriod			value is 0
						AllOpenPeriodsForParentTask		value is 1
				OneTimeStartDays				is Numeric 3
				OneTimeStartDayOfMonth			is Unsigned Decimal 2
				OneTimeStartLastDayOfMonth		is Boolean
				OneTimeStartNextMonth			is Boolean
				OneTimeStartTime				is Time
				OneTimeEndDays					is Numeric 3
				OneTimeEndDayOfMonth			is Unsigned Decimal 2
				OneTimeEndLastDayOfMonth		is Boolean
				OneTimeEndNextMonth				is Boolean
				OneTimeEndTime					is Time
				OneTimeHours					is Unsigned Decimal size 10.2
				OneTimeWorkDaysOnly				is Boolean
				
			Parameter Rules
				PrmClosePeriod
					initial value is ClosePeriod
					if (CreateOneTimeTask)
						constraint (PrmClosePeriod exists)
							"PeriodDoesNotExist"
						constraint (PrmClosePeriod.CloseManagementStatus.Open)
							"PeriodMustBeOpenToAddAOneTimeTask"
				RequestTeam
					if (CreateOneTimeTask)
						required
							"TeamRequiredForOneTimeTask"
					initial value is OneTimeParentTask.FinanceTeam
				RequestTeamMember
					initial value is OneTimeParentTask.TaskOwner
				RequestPerson
					if (!CreateOneTimeTask)
						required
							"PersonResponsibleRequiredForWorkRequest"
				RequestBeginDate
					initial value is current corporate date
					default to current corporate date
					constraint (RequestBeginDate >= current corporate date)
						"SelectFutureDateOrLeaveBlank"
				RequestBeginTime
					initial value is 28800 
				RequestDueDate
					initial value is current corporate date
					default to RequestDueDate
					initial value is RequestBeginDate
					constraint (RequestDueDate >= RequestBeginDate)
						"BeginDateCanNotBeBeforeDueDate"
				RequestDueTime
					initial value is 61200 
				RequestDescription
					required
				OneTimeParentTask
					if (CreateOneTimeTask)
						required
							"ParentTaskRequiredForAOneTimeTask"
						constraint (OneTimeParentTask.TaskLevel.Summary)
							"ParentCloseTaskMustBeSummaryLevel"
				OneTimeApprovalCode
					initial value is CloseManagementGroup.OneTimeTaskDefaultApprovalCode
					if (CreateOneTimeTask
					and CloseManagementGroup.RequireApprovalOfOneTimeTasks)
						required
							"ApprovalCodeRequiredForOneTimeTask"
				OneTimeCompany
					initial value is OneTimeParentTask.TaskCompany
				OneTimeCompletionApprovalCode
					if (OneTimeRequiresApproval)
						required
							"OneTimeTaskRequiresApprovalUponCompletion;CompletionApprovalCodeRequired"
				OneTimeCalendar
					initial value is OneTimeParentTask.CreatedFrom.DefaultCalendar
				OneTimePeriodGroup
					initial value is OneTimeParentTask.CreatedFrom.DefaultPeriodGroup
				OneTimePrimaryType
					initial value is first CloseTaskTypeDefaultPrimaryRel.CloseTaskType
				OneTimeSecondaryType
					initial value is first CloseTaskTypeDefaultSecondaryRel.CloseTaskType
				OneTimeTertiaryType
					initial value is first CloseTaskTypeDefaultTertiaryRel.CloseTaskType
				OneTimeStartTime
					initial value is 28800
					default to 28800
				OneTimeEndTime
					initial value is 61200
					default to 61200
				OneTimeHours
					initial value is OneTimeLevelOfEffort

			Action Rules
				if (CreateOneTimeTask)
					invoke WorkRequest OneTimeParentTask
						invoked.PrmClosePeriod					= PrmClosePeriod
						invoked.RequestTeam						= RequestTeam
						invoked.RequestTeamMember				= RequestTeamMember
						invoked.RequestPerson					= RequestPerson
						invoked.RequestBeginDate				= RequestBeginDate
						invoked.RequestBeginTime				= RequestBeginTime
						invoked.RequestDueDate					= RequestDueDate
						invoked.RequestDueTime					= RequestDueTime
						invoked.RequestDescription				= RequestDescription
						invoked.RequestNotes					= RequestNotes
						invoked.RequestAttachment				= RequestAttachment
						invoked.RequestLink						= RequestLink
						invoked.FinancialForm					= FinancialForm
						invoked.CreateOneTimeTask				= CreateOneTimeTask
						invoked.OneTimeParentTask				= OneTimeParentTask
						invoked.OneTimeApprovalCode				= OneTimeApprovalCode
						invoked.AddOneTimeTaskToProcess			= AddOneTimeTaskToProcess
						invoked.OneTimeCompany					= OneTimeCompany
						invoked.OneTimePriority					= OneTimePriority
						invoked.OneTimeRisk						= OneTimeRisk
						invoked.OneTimeRequireSupportingDoco	= OneTimeRequireSupportingDoco
						invoked.OneTimeRequireJournalEntry      = OneTimeRequireJournalEntry
						invoked.OneTimeRequiresApproval			= OneTimeRequiresApproval
						invoked.OneTimeCompletionApprovalCode	= OneTimeCompletionApprovalCode
						invoked.OneTimeLevelOfEffort			= OneTimeLevelOfEffort
						invoked.OneTimeCalendar					= OneTimeCalendar
						invoked.OneTimePeriodGroup				= OneTimePeriodGroup
	         			invoked.OneTimePrimaryType				= OneTimePrimaryType
	         			invoked.OneTimeSecondaryType			= OneTimeSecondaryType
	         			invoked.OneTimeTertiaryType				= OneTimeTertiaryType
	         			invoked.OneTimeDueTimeSensitive			= OneTimeDueTimeSensitive
						invoked.OneTimeTaskAddOption			= OneTimeTaskAddOption
						invoked.OneTimeStartDays				= OneTimeStartDays
						invoked.OneTimeStartDayOfMonth			= OneTimeStartDayOfMonth
						invoked.OneTimeStartLastDayOfMonth		= OneTimeStartLastDayOfMonth
						invoked.OneTimeStartNextMonth			= OneTimeStartNextMonth
						invoked.OneTimeStartTime				= OneTimeStartTime
						invoked.OneTimeEndDays					= OneTimeEndDays
						invoked.OneTimeEndDayOfMonth			= OneTimeEndDayOfMonth
						invoked.OneTimeEndLastDayOfMonth		= OneTimeEndLastDayOfMonth
						invoked.OneTimeEndNextMonth				= OneTimeEndNextMonth
						invoked.OneTimeEndTime					= OneTimeEndTime
						invoked.OneTimeHours					= OneTimeHours
						invoked.OneTimeWorkDaysOnly				= OneTimeWorkDaysOnly
				else
					invoke Create FinanceResourceSchedule
						invoked.HROrganization		= CloseManagementGroup.HROrganization
						invoked.FinanceResource		= RequestPerson
						invoked.BeginDate			= RequestBeginDate		
						invoked.DueDate				= RequestDueDate		
						invoked.Description			= RequestDescription
						invoked.Notes				= RequestNotes		
						invoked.NavigateToThis		= reference to ClosePeriodTaskFlat.DetailPeriodTask
						invoked.Attachment			= RequestAttachment
						invoked.WebsiteLink			= RequestLink
						invoked.FinancialForm		= FinancialForm
						if (RequestPerson = actor.agent(Employee).Employee)
							invoked.CreatedBy		= 0 
						else
							invoked.CreatedBy		= 2 
							invoked.WorkRequestedBy	= actor.agent(Employee).Employee
							
		RemoveApprovals is an Instance Action
			valid when (OpenTaskRequiresApproval)
			confirmation required
				"ThisWillRemoveTheRequirementForApprovalsUponCompletionOfTheTask.DoYouWantToContinue?"
			Action Rules
				invoke RemoveApprovals ClosePeriodTaskFlat.DetailPeriodTask
				

		AddApprovals is an Instance Action
			valid when (OpenTaskNoApprovalRequired)
			Parameters
				PrmApprovalCode 	is an ApprovalCode
				PrmApprover			is a FinanceResource
				PrmApprovalTeam		is a FinanceTeam
			
			Parameter Rules
				PrmApprovalCode
					initial value is ApprovalCode
				PrmApprover
					constraint (!PrmApprovalCode entered)
						"CannotEnterApproverWhenApprovalCodeIsEntered"
				PrmApprovalTeam
					if (PrmApprovalCode not entered
					and PrmApprover not entered)
						required
							"MustEnterEitherAnApprovalCodeOrAnApproverOrAnApprovalTeam"
					constraint (!PrmApprovalCode entered)
						"CannotEnterApprovalTeamWhenApprovalCodeIsEntered"
					constraint (!PrmApprover entered)
						"CannotEnterApprovalTeamWhenApproverIsEntered"
						
			Action Rules
				invoke AddApprovals ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmApprovalCode		= PrmApprovalCode
					invoked.PrmApprover			= PrmApprover
					invoked.PrmApprovalTeam		= PrmApprovalTeam
				
		ReassignApprover is an Instance Action
			valid when (AllowReassignApprover)
			Parameters
				ClosePeriodTask
				PrmReassignTo	is a TaskCompletionApprovalResource
			
			Parameter Rules
				ClosePeriodTask
					initial value is ClosePeriodTaskFlat.DetailPeriodTask
				PrmReassignTo
					required
						"MustEnter_Reassign_To"
					constraint (!PrmReassignTo.ApprovalLevel = ClosePeriodTaskFlat.DetailPeriodTask.ApprovalLevel)
						"Reassign_ToIsCurrentApprover"
							
			Action Rules
				invoke ReassignApprover ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmReassignTo	= PrmReassignTo

		ReassignOneTimeTaskApprover is an Instance Action
			valid when (AllowReassignOneTimeTaskApprover)
			default label is "ReassignApprover"
			Parameters
				ClosePeriodTask
				PrmReassignTo	is a OneTimeTaskApprovalResource
			
			Parameter Rules
				ClosePeriodTask
					initial value is ClosePeriodTaskFlat.DetailPeriodTask
				PrmReassignTo
					required
						"MustEnter_Reassign_To"
					constraint (!PrmReassignTo.ApprovalLevel = ClosePeriodTaskFlat.DetailPeriodTask.OneTimeTaskApprovalInfo.ApprovalLevel)
						"Reassign_ToIsCurrentApprover"
							
			Action Rules
				invoke ReassignOneTimeTaskApprover ClosePeriodTaskFlat.DetailPeriodTask
					invoked.PrmReassignTo	= PrmReassignTo

		AddIssue is an Instance Action	
			valid when (ClosePeriodTaskFlat.DetailPeriodTask.PeriodIsOpenOrClosed)
			Parameters
				CloseManagementGroup
				PrmClosePeriodTask			is a ClosePeriodTask
				PrmIssueDateCreated			is TimeStamp
				PrmIssueDateUpdated			is TimeStamp
				PrmIssueCreatedBy			is a FinanceResource
				PrmIssueUpdatedBy			is a FinanceResource
				PrmIssueSummary				is Alpha 100
				PrmIssueDescription			is Text
				PrmIssueStatus				is Numeric 1
					States
						Unresolved     value is 0
						Resolved       value is 1
				PrmResolutionRequiredForTaskCompletion	is Boolean
				PrmTaskName					is a ClosePeriodTask
				PrmFinanceTeam				is a FinanceTeam
				PrmTaskIssueOwner			is a FinanceTeamMember
			Local Fields	
				LocalActor					is an Actor

			Parameter Rules
				CloseManagementGroup
					default to ClosePeriod.CloseManagementGroup
					cannot be changed
				PrmIssueDateCreated
					initial value is current timestamp
					default to current timestamp	
				PrmIssueDateUpdated
					initial value is current timestamp
					default to current timestamp
				PrmIssueSummary
					required
				PrmIssueCreatedBy
					initial value is actor.agent(Employee).Employee
					force default to actor.agent(Employee).Employee	
				PrmIssueUpdatedBy
					initial value is actor.agent(Employee).Employee
					force default to actor.agent(Employee).Employee	
				PrmClosePeriodTask
					initial value is ClosePeriodTaskFlat.DetailPeriodTask
			Action Rules
				invoke Create ClosePeriodTaskIssue
					invoked.CloseManagementGroup	= CloseManagementGroup
					invoked.ClosePeriod  			= ClosePeriod
					invoked.ClosePeriodTask			= PrmClosePeriodTask
					invoked.DateCreated 			= PrmIssueDateCreated
					invoked.DateUpdated				= PrmIssueDateUpdated
					invoked.CreatedBy   			= PrmIssueCreatedBy
					invoked.UpdatedBy   			= PrmIssueUpdatedBy
					invoked.Summary      			= PrmIssueSummary
					invoked.Description	  			= PrmIssueDescription
					invoked.Status					= PrmIssueStatus
					invoked.ResolutionRequiredForTaskCompletion   = PrmResolutionRequiredForTaskCompletion
					invoked.TaskName                = PrmTaskName.TaskName
					invoked.TaskIssueOwner          = PrmTaskIssueOwner
					invoked.FinanceTeam             = PrmFinanceTeam

					if (PrmIssueStatus.Resolved)
						invoked.ResolvedBy = actor.agent(Employee).Employee
						invoked.DateResolved = current timestamp


				if (PrmFinanceTeam entered and PrmTaskIssueOwner entered)
					if (CloseManagementGroup.OverrideResourceEmailNotifications
					or  PrmTaskIssueOwner.TeamMember.SendUpdatesAsEmail)
						send email
							to		PrmTaskIssueOwner.TeamMember.EmailAddress
							from	actor.agent(Employee).EmployeeWorkEmailAddress
							subject "Issue:<PrmIssueSummary>_Task<ClosePeriodTaskFlat.DetailPeriodTask.TaskName>HasBeenAssignedToYou"
							Contents
									"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"

					if (CloseManagementGroup.OverrideResourceLandmarkNotifications
					or  PrmTaskIssueOwner.TeamMember.SendUpdatesAsNotification)
						LocalActor = PrmTaskIssueOwner.TeamMember.FinanceResourceActor
						if (LocalActor entered)
							send notification
								to	LocalActor
								description is	"Issue:<PrmIssueSummary>_Task<ClosePeriodTaskFlat.DetailPeriodTask.TaskName>HasBeenAssignedToYou"
								priority is high
				else	
					LocalTeam = PrmFinanceTeam
					for each SendToTeamMembersRel
						if (each.FinanceTeamMember.TeamMember != actor.agent(Employee).Employee)  
						  	if (CloseManagementGroup.OverrideResourceEmailNotifications
						  	or  each.FinanceTeamMember.TeamMember.SendUpdatesAsEmail)
								send email
									to		each.FinanceTeamMember.TeamMember.EmailAddress
									from	actor.agent(Employee).EmployeeWorkEmailAddress
									subject "Issue:<PrmIssueSummary>_Task<ClosePeriodTaskFlat.DetailPeriodTask.TaskName>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
									Contents
										"AssignedOn_<current timestamp>By_<actor.agent(Employee).Name.PreferredSimplePresentationName>"
	
							if (CloseManagementGroup.OverrideResourceLandmarkNotifications
							or  each.FinanceTeamMember.TeamMember.SendUpdatesAsNotification)
								LocalActor = each.FinanceTeamMember.TeamMember.FinanceResourceActor
								if (LocalActor entered)
									send notification
										to	LocalActor
										description is	"Issue:<PrmIssueSummary>_Task<ClosePeriodTaskFlat.DetailPeriodTask.TaskName>HasBeenAssignedToYourTeam_<PrmFinanceTeam>"
										priority is high	
