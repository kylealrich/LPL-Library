ContractTier is a BusinessClass
	owned by po
	prefix is CTP

	Ontology
		symbolic key is ContractTier

	Patterns
		implements Resequence on DisplayOrder
			new sequence field is NewDisplayOrder
			set is ByDisplayOrder

	Persistent Fields
		TierTitle				is a Description
		Description				is a Description4
		TierMarkupDiscount		is Numeric size 1
			States
				Markup		value is 1
				Discount	value is 2
				Fixed		value is 3
		TierPricingAmtPct
		FreightPricingAmtPct
		FreightMarkupDiscount	is Numeric size 1
			States
				Markup		value is 1
				Discount	value is 2
		DisplayOrder
		LastTierDisplayOrder	is Numeric size 8
			disable Auditing
		TierDisplayChange		is Boolean
		DefaultTier				is Boolean

	Local Fields
		LocalContractAndTier
		OriginalContractAndTier

	Transient Fields
		NewDisplayOrder					is a DisplayOrder
		TransientPurchaseType			is Numeric size 1
			States
				TotalPurchases		value is 1
				TargetedPurchases	value is 2
		TransientPurchaseBy				is Numeric size 1
			States
				PurchasePrice	value is 1
				InvoicePrice	value is 2
		TransientPurchaseOperator		is AlphaUpper size 2
			States
				LessThanOrEqualTo		value is "LE"
					default label is "LessThan_orEqualTo"
				GreaterThanOrEqualTo	value is "GE"
					default label is "GreaterThan_orEqualTo"
				EqualTo					value is "EQ"
				LessThan				value is "LT"
				GreaterThan				value is "GT"
		TransientPurchaseAmtPct			is a PurchaseAmtPct
		TransientPurchaseQuantity		is an ItemQuantity
		TransientPurchaseBeginRange 	is Date
		TransientPurchaseEndRange		is Date

	Derived Fields
		RepresentativeText is a StringField
			type is Text
			default label is "ContractTier"
			ContractTier " - " TierTitle

	Conditions
		TierModified
			restricted
			when (TierMarkupDiscount changed
			or    FreightMarkupDiscount changed
			or    TierPricingAmtPct.TierCost changed
			or    TierPricingAmtPct.TierPercent changed
			or    FreightPricingAmtPct.FreightCost changed
			or    FreightPricingAmtPct.FreightPercent changed)
		NoTierPricing
			restricted
			when (TierPricingAmtPct.TierPercent = 0
			and   TierPricingAmtPct.TierCost = 0)
		NoFreightPricing
			restricted
			when (FreightPricingAmtPct.FreightPercent = 0
			and   FreightPricingAmtPct.FreightCost = 0)
		TierPricingEntered
			restricted
			when (TierPricingAmtPct.TierPercent > 0
			or    TierPricingAmtPct.TierCost > 0)
		FreightPricingEntered
			restricted
			when (FreightPricingAmtPct.FreightPercent > 0
			or    FreightPricingAmtPct.FreightCost > 0)
		TierMarkupDiscountEntered
			restricted
			when (TierMarkupDiscount.Markup
			or    TierMarkupDiscount.Discount)
		FreightMarkupDiscountEntered
			restricted
			when (FreightMarkupDiscount.Markup
			or    FreightMarkupDiscount.Discount)
		IsDefault
			restricted
			when (DefaultTier)
		NewDefault
			restricted
			when (DefaultTier
			and   DefaultTier changed)
		FixedTier
			restricted
			when (TierMarkupDiscount.Fixed)
		NoQualifier
			restricted
			when (ContractTierQualifier set !exists)
		QualifierHasItems 
			when (TierQualifierItemRel exists)

	Relations
		
		TierQualifierItemRel 
			one-to-many relation to TierQualifierItem 
			Field Mapping uses ByTier 
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
				related.ContractTier    = ContractTier 
		ContractLineMemberRel
			one-to-many relation to ContractLineMember
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
			Instance Selection
				where (related.MfgContractTierInfo.Tier = ContractTier)

		TierMembersRel
			one-to-many relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
			Instance Selection
				where (related.Tier = ContractTier)

		OriginalContractTierRel
			one-to-one relation to ContractTier
			Field Mapping uses  symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= OriginalContractAndTier.OriginalContract
				related.ContractTier	= OriginalContractAndTier.OriginalContractTier

		NewContractTierRel
			one-to-one relation to ContractTier
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= LocalContractAndTier.LocalContract
				related.ContractTier	= LocalContractAndTier.LocalContractTier

		TierContractRel
			one-to-many relation to ContractTier
			Field Mapping uses symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract

		TierUsedAtContractLineRel
			one-to-many relation to ContractLineMember
			Field Mapping uses  symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
			Instance Selection
				where (related.MfgContractTierInfo.Tier = ContractTier)

		DistributorPricingMemberRel
			one-to-many relation to ContractDistributorPricingMember
			Field Mapping uses ByMfgTier
				related.ContractGroup					= ContractGroup
				related.MfgContractTierInfo.MfgContract	= Contract
			Instance Selection
				where (related.MfgContractTierInfo.Tier = ContractTier)

		ContractLineTierCostRel
			one-to-many relation to ContractLineTierCost
			Field Mapping uses  symbolic key
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract
			Instance Selection
				where (related.ContractTier = ContractTier)

		HasAnotherDefaultRel
			one-to-many relation to ContractTier
			Field Mapping uses ByDefault
				related.ContractGroup	= ContractGroup
				related.Contract		= Contract

	Sets
		ByDisplayOrder
			duplicates
			Sort Order
				ContractGroup
				Contract
				DisplayOrder

		ByPercent
			duplicates
			Sort Order
				ContractGroup
				Contract
				TierPricingAmtPct.TierPercent

		ByDefault
			duplicates
			indexed
			Sort Order
				ContractGroup
				Contract
			Instance Selection
				where (IsDefault)

	Field Rules
		DisplayOrder
			autosequence using Contract.LastTierDisplayOrder
		TierTitle
			required
				"TitleIsRequired"
		TierMarkupDiscount
			default to 3 
			if (TierMarkupDiscount.Fixed)
				initialize TierPricingAmtPct
			if (!TierMarkupDiscount.Fixed)
				constraint (TierPricingEntered)
					"TierCostOrPercentIsRequired"
			if (TierMarkupDiscount.Fixed)
				constraint (NoTierPricing)
					"CannotEnterTierCostOrPercentWhenFixedIsSelected"
			else
				if (TierPricingEntered)
					constraint (TierMarkupDiscountEntered)
						"TierCostOrPercentCannotBeEnteredUnlessTypeIsMarkupOrDiscount"
		TierPricingAmtPct
			if (TierMarkupDiscount.Markup
			or  TierMarkupDiscount.Discount)
				constraint (TierPricingEntered)
					"TierCostOrPercentIsRequired"
			if (TierPricingEntered)
				constraint (TierMarkupDiscountEntered)
					"TierCostOrPercentCannotBeEnteredUnlessTypeIsMarkupOrDiscount"
		FreightMarkupDiscount
			if (FreightMarkupDiscountEntered)
				constraint (FreightPricingEntered)
					"FreightCostOrPercentIsRequired"
		FreightPricingAmtPct
			if (FreightMarkupDiscount.Markup
			or  FreightMarkupDiscount.Discount)
				constraint (FreightPricingEntered)
					"FreightCostOrPercentIsRequired"
			if (FreightPricingEntered)
				constraint (FreightMarkupDiscountEntered)
					"FreightCostOrPercentCannotBeEnteredUnlessTypeIsMarkupOrDiscount"
		TierDisplayChange
			default to false

	Actions
		Create is a Create Action
			valid when (!Contract.ContractStatus.Closed)
			Action Rules
				constraint (!Contract.ContractStatus.Closed)
					"ContractStatusCannotBeClosedToAddTier"
				if (TierMarkupDiscount.Discount)
					constraint (TierPricingAmtPct.TierCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
					constraint (TierPricingAmtPct.TierPercent < 1.0)
						"ForDiscounts,TierPercentMustBeLessThan100%"
				if (FreightMarkupDiscount.Discount)
					constraint (FreightPricingAmtPct.FreightCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
					constraint (FreightPricingAmtPct.FreightPercent < 1.0)
						"ForDiscounts,FreightPercentMustBeLessThan100%"
				if (IsDefault)
					if (HasAnotherDefaultRel exists)
						invoke UpdateContractTier HasAnotherDefaultRel
							invoked.DefaultTier = false

		CreateFromWizard is a Create Action
			valid when (!Contract.ContractStatus.Closed)
			Action Rules
				if (TierMarkupDiscount.Discount)
					constraint (TierPricingAmtPct.TierCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
		   			constraint (TierPricingAmtPct.TierPercent < 1.0)
						"ForDiscounts,TierPercentMustBeLessThan100%"
				if (FreightMarkupDiscount.Discount)
					constraint (FreightPricingAmtPct.FreightCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
		   			constraint (FreightPricingAmtPct.FreightPercent < 1.0)
			   			"ForDiscounts,FreightPercentMustBeLessThan100%"
			   	if (IsDefault)
					if (HasAnotherDefaultRel exists)
						invoke UpdateContractTier HasAnotherDefaultRel
							invoked.DefaultTier = false

			Exit Rules
				if (TransientPurchaseType entered)
					invoke Create ContractTierQualifier
						invoked.ContractGroup 					= ContractGroup
						invoked.Contract      					= Contract
						invoked.ContractTier  					= ContractTier
						invoked.PurchaseType 					= TransientPurchaseType
						invoked.PurchaseBy   					= TransientPurchaseBy
						invoked.PurchaseOperator 				= TransientPurchaseOperator
						invoked.PurchaseAmtPct.PurchasePercent 	= TransientPurchaseAmtPct.PurchasePercent
						invoked.PurchaseAmtPct.PurchaseAmount 	= TransientPurchaseAmtPct.PurchaseAmount
						invoked.PurchaseQuantity 				= TransientPurchaseQuantity
						invoked.PurchaseBeginRange 				= TransientPurchaseBeginRange
						invoked.PurchaseEndRange 				= TransientPurchaseEndRange

		Update is an Update Action
			valid when (!Contract.ContractStatus.Closed)
			Action Rules
				if (TierMarkupDiscount.Discount)
					constraint (TierPricingAmtPct.TierCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
		   			constraint (TierPricingAmtPct.TierPercent < 1.0)
						"ForDiscounts,TierPercentMustBeLessThan100%"
				if (FreightMarkupDiscount.Discount)
					constraint (FreightPricingAmtPct.FreightCost = 0)
						"DiscountMustBeByPercentForHeaderLevelDefaulting"
		   			constraint (FreightPricingAmtPct.FreightPercent < 1.0)
			   			"ForDiscounts,FreightPercentMustBeLessThan100%"

				if (NewDefault)
					if (HasAnotherDefaultRel exists)
						invoke UpdateContractTier HasAnotherDefaultRel
							invoked.DefaultTier = false
				if   (TierMarkupDiscount changed
				and   old TierMarkupDiscount.Fixed
				and   TierMarkupDiscount.Discount)
					constraint (!ContractLineTierCostRel exists)
						"TierCostRecordsExistForContractLines;CannotChangeTierToOneThatIsDiscount"

				if (TierModified)
					invoke UpdateContractTier

					if (ContractLineMemberRel exists)

						for each TierMembersRel

		 					invoke UpdateTierOnLineMembers ContractLineMember
								invoked.PrmContractGroup					= ContractGroup
								invoked.PrmContractInFocus					= Contract
								invoked.PrmManufacturerContract				= Contract
								invoked.PrmTier								= ContractTier
								invoked.PrmTierCompany						= each.ContractTierMember.Company
								invoked.PrmTierLocation						= each.ContractTierMember.Location
								invoked.PrmTierReqLocation					= each.ContractTierMember.RequestingLocation
								invoked.PrmTierPricingGroup                 = each.ContractTierMember.PricingGroup
								invoked.PrmTierMarkupDiscount 				= TierMarkupDiscount
								invoked.PrmLineTierPricingAmtPct 			= TierPricingAmtPct
								invoked.PrmFreightMarkupDiscount 			= FreightMarkupDiscount
								invoked.PrmLineFreightPricingAmtPct 		= FreightPricingAmtPct
								invoked.PrmTierModified						= true
								initialize invoked.PrmContractDistributorPricingMember
				 				initialize invoked.PrmPricingIdentifier
								initialize invoked.PrmLineDistributorPricingCode
								initialize invoked.PrmLineDistributorPricingAmt
								initialize invoked.PrmLineDistributorPricingPct
								initialize invoked.PrmLineDistributorFreightPricingCode
								initialize invoked.PrmLineDistributorFreightPricingAmt
								initialize invoked.PrmLineDistributorFreightPricingPct

				if (NewDisplayOrder entered)
					if (!Contract.TierDisplayChange)
						confirmation required
							"Warning;AllAdditionalTiersWillBeAppendedToEndOfList;DoYouWantToContinue?"

					invoke FastUpdate Contract
						invoked.TierDisplayChange = true

		UpdateContractTier is an Update Action
			restricted

		Delete is a Delete Action
			valid when (!Contract.ContractStatus.Closed)
			Entrance Rules
				constraint (!TierMembersRel exists)
					"ContractTierCannotBeDeleted;MembersExistForTier"
				constraint (!TierUsedAtContractLineRel exists)
					"ContractTierCannotBeDeleted;ContractLineMembersExistForTier"
				
				if (ContractLineTierCostRel exists)
					invoke DeleteFromTierDeletion ContractLineTierCost
						invoked.PrmContractGroup      = ContractGroup
						invoked.PrmContract           = Contract
						invoked.PrmContractTier       = ContractTier
						
			Action Rules
				if (!TierContractRel exists)
					invoke FastUpdate Contract
						invoked.TierDisplayChange = false

 		Copy is an Instance Action
 			valid when (!Contract.ContractStatus.Closed)
			Parameters
				NewContractTier		is AlphaUpper size 4
				NewTierTitle 		is a Description
				NewDescription 		is a Description4
				NewContract			is a Contract
			Parameter Rules
				NewContractTier
					if (!NewContract entered)
						required
				NewTierTitle
					if (!NewContract entered)
						required

			Action Rules
				if (!NewContract entered)
					NewContract = Contract
				if (!NewContractTier entered)
					NewContractTier = ContractTier
				if (!NewTierTitle entered)
					NewTierTitle = TierTitle
				if (!NewDescription entered)
					NewDescription = Description
				OriginalContractAndTier.OriginalContractTier 	= ContractTier
				OriginalContractAndTier.OriginalContract 		= Contract
				LocalContractAndTier.LocalContractTier 			= NewContractTier
				LocalContractAndTier.LocalContract 				= NewContract
				constraint (!NewContractTierRel exists)
					"ContractTierAlreadyExists"
				constraint (NewContract.IsManufacturerContract)
					"ToContractMustBeAManufacturerContract"

				invoke Create ContractTier
					invoked.ContractGroup				= ContractGroup
					invoked.Contract					= NewContract
					invoked.ContractTier				= NewContractTier
					invoked.TierTitle					= NewTierTitle
					invoked.Description					= NewDescription
					invoked.TierMarkupDiscount			= OriginalContractTierRel.TierMarkupDiscount
					invoked.TierPricingAmtPct			= OriginalContractTierRel.TierPricingAmtPct
					invoked.FreightMarkupDiscount		= OriginalContractTierRel.FreightMarkupDiscount
					invoked.FreightPricingAmtPct		= OriginalContractTierRel.FreightPricingAmtPct

				for each OriginalContractAndTier.OriginalContractTier.ContractTierQualifier set
					invoke Create ContractTierQualifier
						fill in fields from each
						invoked.ContractGroup						= ContractGroup
						invoked.Contract							= NewContract
						invoked.ContractTier						= NewContractTier
						invoked.ContractTierQualifier				= 0

		Purge is a Purge Action
			restricted


