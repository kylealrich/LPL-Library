CashLedgerPaymentImport is a BusinessClass
    owned by cb
    prefix is CLO
    classic name is CBPMTLOAD

    Ontology
        symbolic key is CashLedgerPaymentImport
            classic set name is CLOSET1
            classic name for CashLedgerPaymentImport.BankTransactionCode is BANK-INST-CODE
            classic name for CashLedgerPaymentImport.ReferenceNumber is REFERENCE-NO
			classic name for CashLedgerPaymentImport.SequenceNumber is SEQ-NBR
			
    Patterns
		implements InlineUserFields
			size is 1000	     
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
       	
    Persistent Fields
		CommentText	
        PayablesData
            classic name is COMPANY
        Status								is Numeric size 1
            classic name is REC-STATUS
            States
                Unreleased value is 0
                Released   value is 1

        TransactionDate						is Date
            classic name is TRANS-DATE
        Description
        PayablesProcessGroup          		
            classic name is PROC-GRP

        OverrideCompany						is a OverrideCompanyIsolated  
            classic name is OVERRIDE-COMP
        PayeeName							is a VendorName 
        	holds pii
        MailingName 	                    is a VendorName 
        	holds pii
        PayeePostalAddress					is a PostalAddressV2	
        	holds pii
            classic name for PayeePostalAddress.DeliveryAddress.AddressLine1 is PAYEE-ADDR1
            classic name for PayeePostalAddress.DeliveryAddress.AddressLine2 is PAYEE-ADDR2
            classic name for PayeePostalAddress.DeliveryAddress.AddressLine3 is PAYEE-ADDR3
            classic name for PayeePostalAddress.DeliveryAddress.AddressLine4 is PAYEE-ADDR4
            classic name for PayeePostalAddress.Municipality is PAYEE-ADDR5
            classic name for PayeePostalAddress.StateProvince is PAYEE-ST-PROV
            classic name for PayeePostalAddress.PostalCode is PAY-POSTAL-CD
            classic name for PayeePostalAddress.County is PAY-COUNTY
            classic name for PayeePostalAddress.Country is PAY-CTRY-CODE
        BankAccountValidationType
            classic name is VBANK-IDENT
        BankAccountNumber
            classic name is BANK-ACCT
        BankAccountType
            classic name is VBANK-ACCT-TP
        GlobalBankAccountType	
        BankEntity
 		BankName														
        CrossBorderIdentifier
            classic name is CROSS-IDENT
        BankPostalAddress					is a PostalAddressV2	
        	holds pii
        IntermediaryBankEntity				is a BankEntity				
        IntermediaryCrossBorderIdentifier	is a CrossBorderIdentifier	
        IntermediarySwiftID					is a SwiftID				
        	default label is "SWIFT/BIC"
        IntermediaryBankName				is a BankName				
        IntermediaryBankPostalAddress		is a PostalAddressV2	
        	holds pii
        ACHPrenotification
            classic name is ACH-PRENOTE
        BACSBankAccountReference			is a BACSReference
            classic name is BUILD-SOC-REF
        BACSBankAccountName					is an AccountName
            classic name is BUILD-ACCT-NM
        SwiftID
        	default label is "SWIFT/BIC"
        PaymentCategoryCode					is a CashLedgerPaymentCategoryCode
            classic name is PMT-CAT-CODE
        NormalOrExpressCode
            classic name is NORM-EXP-CODE
        PaymentForm							is a CashLedgerPaymentForm
            classic name is PMT-FORM
        ChargeCode							is a CashLedgerChargeCode
		BankToBankInformation				is Alpha 140			
		ElectronicPaymentCode										
		FirstPartyReference					is Alpha 12				
		SecondPartyReference				is Alpha 12				
        RemittanceComment					is a CommentText
		TransactionData1                    is a TransactionData
            classic name is USER-FIELD1
		TransactionData2                    is a TransactionData
            classic name is USER-FIELD2
		TransactionData3                    is a TransactionData
            classic name is USER-FIELD3
		TransactionData4                    is a TransactionData
            classic name is USER-FIELD4
		BankAmount							is an UnsignedInternationalAmount	
        BankCurrency						is a Currency
        DistributionAmount					is an InternationalAmount
            classic name is DIST-AMOUNT
        Reference
        TaxCode
        TaxableBankAmount					is an InternationalAmount
            classic name is TRAN-TAXABLE
        GeneralLedgerSourceCode				is a GeneralLedgerEvent
            classic name is SOURCE-CODE
            default label is "SourceCode"
        LanguageCode						is an IsoLocale
        ProcessLevel						is a PayablesProcessLevel
            classic name is PROC-LEVEL
            context of PayablesData.PayablesCompany

        TaxID
        ReportableIncomeAmount				is an InternationalAmount
            classic name is REPORT-INC-AMT
        TaxIDType
            classic name is TIN-TYPE
        ForeignEconomicRegulatoryCode
            classic name is FOR-ECON-CODE
        PayTaxExempt						is a Flag
        DistributionAccount					is a FinanceCodeBlock
            classic name for DistributionAccount.ToAccountingEntity is DIS-COMPANY
            classic name for DistributionAccount.AccountingUnit is ACCT-UNIT
            classic name for DistributionAccount.GeneralLedgerChartAccount is ACCOUNT
            classic name for DistributionAccount.Project is ACTIVITY
		TaxAccountingEntity					is a ToAccountingEntity  
		ApprovalCostCenter					is like AccountingUnit		
		ApprovalCategory					
        ReissueOriginalReference			is a Reference22			
        InterfaceAsPosted					is Boolean
		BypassCashFundUpdate				is Boolean				
        PayeeFirstName						is a FirstName			
		PayeeMiddleName						is a MiddleName			
		EmailAddress												
		MobileNumber						is a TelephoneNumber	
		CashAllocationCode        									
		UnitsAmount							is an InternationalAmount	
			default label is "Units"
		VendorBankCode1						is a VendorBankCode150	
			default label is "BankCode1"
		VendorBankCode2						is a VendorBankCode		
			default label is "BankCode2"
		

        ImportStatus						is Numeric 1
            States
                ReadyToImport			value is 0
                Error		   			value is 1
		ErrorMessage						is Alpha 150
		CashLedgerPaymentInError			is a TransactionIDNumber
		CreatedByFES						is Boolean		
			protected
		FESManuallyUpdated					is Boolean
			protected

	Local Fields
		LocalRunGroup						is a RunGroup
		LocalRelTransactionIDNumber			is a TransactionIDNumber
		LocalFinanceEnterpriseGroup			is like FinanceEnterpriseGroup
		ValidateCashPaymentFormat						
		LocalBoolean						is Boolean	
		LocalDerivedFESKey 					is a FrontEndSplitKey
		LocalFEGtext						is like FinanceEnterpriseGroup
		
	Field Groups
		DistribUserFields
			include user fields
					
	Derived Fields
		DerivedCompany	is a DerivedField
			type is like GeneralLedgerCompany
			restricted
			if (OverrideCompany.OrigOverrideCompany entered)
				return OverrideCompany.OrigOverrideCompany
			if (PayablesData.PayGroup entered)
				return PayablesData.PayGroup.PostCompany
			return PayablesData.PayablesCompany.PayGroup.PostCompany

		DerivedAccountingEntity	is a DerivedField
			type is like AccountingEntity
			restricted
			if (OverrideCompany.OrigOverrideCompany entered)
				return OverrideCompany.OrigOverrideCompany.AccountingEntity
			if (PayablesData.PayGroup entered)
				return PayablesData.PayGroup.PostCompany.AccountingEntity
			return PayablesData.PayablesCompany.PayGroup.PostCompany.AccountingEntity

		PrenotificationErrorMessage			is a MessageField
			restricted
			"CannotRelease:PrenoteStatusIsNotAccepted"	

		PaymentClearingErrorMessage			is a MessageField
			restricted
			"CannotRelease:ClearingAccountsNotSetUpInCompanyCashCode"	
			
		DescriptionMessage					is a MessageField
			restricted
			"CashLedgerPayment"		

		InterfaceAsPostedErrorMessage		is a MessageField
			restricted	
			"StatusMustBeReleasedToInterfaceAsPosted"

		BypassWithoutPostedErrorMessage		is a MessageField	
			restricted
			"BypassCashFundUpdateRequiresSelectingInterfaceAsPosted"

		InterfacePostingMessage is a LabelField 
			restricted
			"JournalCreatedByCashLedgerPaymentImport"
			        
        AllocationAndAccountErrorMessage    is a MessageField  
            restricted
            "CannotSpecifyBothCashAllocationCodeAndAccount"

        ReferenceNumberErrorMessage    is a MessageField
            restricted
            "ReferenceNumberHasErrors"
					
    Conditions
    	RecordExists
    		restricted
    		when (CashLedgerPaymentImport exists)
    		
        IsUnreleased
        	restricted
            when (Status.Unreleased)

		IsPartiallyImported
			when (HasCashLedgerPaymentImportInProcess)	


		HasCashLedgerPaymentImportInProcess	
			restricted
			when (CashLedgerPaymentInErrorRel.ImportInProcess = true)

		AutoNumberingAllowed
			restricted
			when ((CashManagementGroup.AutoReferenceNumberByCompany
			and    OverrideCompany.OrigOverrideCompany.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoReferenceNumberByCashCode
			and    CashLedgerPaymentImport.CashCode.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoReferenceNumberByBankTransactionCode
			and    CashLedgerPaymentImport.BankTransactionCode.AutoTransactionNumbering)
			or    (CashManagementGroup.AutoReferenceNumberByCashCodeBankTranCode
			and    CashLedgerPaymentImport.BankTransactionCode.AutoTransactionNumbering
			and    CashLedgerPaymentImport.CashCode.AutoTransactionNumbering))

		UsingBankCurrencyPosting	
			restricted
			when (CashLedgerPaymentImport.CashCode.UseBankCurrencyForPaymentPosting
			and   BankCurrency entered
			and   BankCurrency not = TransientFromCurrency)	 

		FrontEndSplitsEnabled
			restricted
			when (actor.context.FinanceEnterpriseGroup.FrontEndSplits)	
		
		IsValidForActorContext		
			restricted
			when (CashManagementGroup = actor.context.FinanceEnterpriseGroup)
			
	Relations
	
		CashLedgerPaymentInErrorRel
			one-to-one relation to CashLedgerPayment
			Field Mapping uses symbolic key
	           	related.CashManagementGroup						= CashManagementGroup	
                related.CashCode								= CashLedgerPaymentImport.CashCode
                related.CashLedgerPayment.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
                related.CashLedgerPayment.TransactionIDNumber	= CashLedgerPaymentInError

		CashLedgerPaymentRel
			one-to-one relation to CashLedgerPayment
			Field Mapping uses symbolic key
	           	related.CashManagementGroup						= CashManagementGroup	
                related.CashCode								= CashLedgerPaymentImport.CashCode
                related.CashLedgerPayment.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
                related.CashLedgerPayment.TransactionIDNumber	= LocalRelTransactionIDNumber
                
        CompanyCashCodeRel
            one-to-one relation to CompanyCashCode
            Field Mapping uses symbolic key
                related.Company  = DerivedCompany
                related.CashCode = CashLedgerPaymentImport.CashCode

 		CashLedgerPaymentImportRel
 			one-to-many relation to CashLedgerPaymentImport
 			Field Mapping uses symbolic key
 				related.CashManagementGroup									= CashManagementGroup
 			Instance Selection
            	where (related.CashLedgerPaymentImport.RunGroup				= CashLedgerPaymentImport.RunGroup
            	and    related.CashLedgerPaymentImport.CashCode				= CashLedgerPaymentImport.CashCode
            	and    related.CashLedgerPaymentImport.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode)

		GeneralLedgerSystemCodeRel
			one-to-one relation to GeneralLedgerSystemCode
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= LocalFinanceEnterpriseGroup
				related.GeneralLedgerSystemCode		= "CB"

		CashLedgerPaymentImportRel2
 			one-to-many relation to CashLedgerPaymentImport
 			Field Mapping uses symbolic key
 				related.CashManagementGroup								= CashManagementGroup
 			Instance Selection
            	where (related.CashLedgerPaymentImport.RunGroup			= CashLedgerPaymentImport.RunGroup
            	and	related.CashLedgerPaymentImport.CashCode			= CashLedgerPaymentImport.CashCode
            	and	related.CashLedgerPaymentImport.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
				and	related.CashLedgerPaymentImport.ReferenceNumber		= CashLedgerPaymentImport.ReferenceNumber)

		FESDistributionsByKeyLocalRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey

		FESDistByDistributionRel
			one-to-many relation to FrontEndSplitDistributions
			Field Mapping uses ByFundingGroup
				related.FinanceEnterpriseGroup						= LocalFEGtext
			    related.FrontEndSplitDistributions.FundingKey 		= LocalDerivedFESKey
			    related.FrontEndSplitDistributions.Distribution		= CashLedgerPaymentImport.SequenceNumber

	Sets
		ByCashLedgerPaymentInError
			indexed
			Sort Order
				CashManagementGroup
				CashLedgerPaymentImport.CashCode
				CashLedgerPaymentImport.BankTransactionCode
				CashLedgerPaymentInError
				CashLedgerPaymentImport.ReferenceNumber
				CashLedgerPaymentImport.SequenceNumber
				CashLedgerPaymentImport.RunGroup
 			                            
	Transient Fields
		TransientFromCurrency		is a FromCurrency
			derive value from CashLedgerPaymentImport.CashCode.Currency
		
    Field Rules

        PayablesData
            required






        TransactionDate
            required
            
		PayablesProcessGroup
		    default to PayablesData.Vendor.PayablesProcessGroup  
            


			
        PayeeName
            required
            
		BankName
			default to BankEntity.BankName

        ACHPrenotification
            default to "N"

        BankAccountType
            if (BankAccountNumber entered)
				default to "C"
				required	
					"BankAccountTypeRequiredWithBankAccountNumber"
					        
		DistributionAmount
            if     (UnitsAmount !entered
            and (!CashAllocationCode entered
            or   !CashAllocationCode.AllocationType.Amount))
                required
                    "DistributionAmountOrUnitsAmountRequired"  

	Rule Blocks
	
		CashPaymentImportEdits
			constraint (PayablesData.PayablesCompany entered)
				"CompanyRequired"
			constraint (PayablesData.Vendor entered)
				"VendorRequired"				
			constraint (PayablesData.PayGroup entered)
				"PayGroupRequired"
			if (CashAllocationCode entered
			and CashAllocationCode.AllocationType.Amount)
				constraint (!DistributionAmount entered)
					"CannotSpecifyAnAmountWithCashAllocationCodeOfType_Amount"
			if (CashLedgerPaymentImport.BankTransactionCode entered
			and CashLedgerPaymentImport.CashCode entered)
				if (CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.PrintedDocument)
					constraint (BankEntity not entered 
					and         BankAccountNumber not entered)
						"BankInformationMustBeBlankForPrintedDocument"          
				else
					if (CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.ElectronicFile
					or CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.Swift			    	
					or CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.WireTransfer)
						constraint (BankEntity entered 
						and         BankAccountNumber entered)
							"BankInformationRequiredForElectronicPayments"          


			if  (CashLedgerPaymentImport.BankTransactionCode.BankTransactionType.CashPayment
			and !CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.NoOutput)					
				initialize ValidateCashPaymentFormat
				ValidateCashPaymentFormat.VendorGroup			= PayablesData.PayablesCompany.VendorGroup	
				ValidateCashPaymentFormat.BankTransactionCode 	= CashLedgerPaymentImport.BankTransactionCode
				ValidateCashPaymentFormat.CashCode				= CashLedgerPaymentImport.CashCode
				ValidateCashPaymentFormat.PayablesProcessGroup	= PayablesProcessGroup
				LocalBoolean = ValidateCashPaymentFormat.PerformValidateCashPaymentFormat	
				constraint (ValidateCashPaymentFormat.OutputErrorNumber not entered)
					"<ValidateCashPaymentFormat.OutputErrorMessage>"
			if (OverrideCompany.OrigOverrideCompany not entered)
				if (CashLedgerPaymentImport.CashCode.DefaultPostCompany entered)								
					OverrideCompany.OrigOverrideCompany = CashLedgerPaymentImport.CashCode.DefaultPostCompany	
				else
					OverrideCompany.OrigOverrideCompany = PayablesData.PayGroup.PostCompany
			if (BankEntity entered)	
				if (BankPostalAddress not entered)
					BankPostalAddress = BankEntity.PostalAddress
			if (IntermediaryBankEntity entered)	
				if (IntermediaryBankName not entered)	
					IntermediaryBankName = IntermediaryBankEntity.BankName
				if (IntermediaryBankPostalAddress not entered)
					IntermediaryBankPostalAddress = IntermediaryBankEntity.PostalAddress
						
				
	Actions

		FrontEndSplitTransactions is a Set Action
			completion message is "FrontEndSplitTransactionsSubmitted"
			valid when (FrontEndSplitsEnabled)
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmInterface				is Boolean
					default label is "InterfaceCashPayments"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmJournalizeDistributions	is Boolean
					default label is "JournalizeReleasedDistributions"
				PrmAutoNumberingAction 			is Numeric 1
					States
						OverrideNumberWithAnAutoGeneratedNumber	value is 1
						BypassAutoTransactionNumbering			value is 2
					default label is "AutoTransactionNumberingAction"
				PrmMoveFrontEndSplitErrorsToErrorGroup is Boolean
    				default label is "MoveFrontEndSplitErrorsToErrorRunGroup"
											
			Parameter Rules
				PrmRunGroup
					required
						"RunGroupIsRequired"
				PrmAutoNumberingAction
					if (PrmInterface and PrmCashManagementGroup.AutoReferenceNumberForPaymentForm)
						required
							"AutoNumberingActionSelectionRequired"
				PrmJournalizeDistributions													
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
					if(PrmInterface)
						constraint (GeneralLedgerSystemCodeRel.EncumbranceOption.NotUsed)
							"JournalizeDistributionsNotAllowedWhenBudgetingSetToTrackOrTrackAndEdit"
																				
			Local Fields
				LocalAsyncId						is an AsyncActionRequest
				ErrorOccurred						is Boolean
				TransactionError					is Boolean
				ReferenceNumberHasErrors			is Boolean
				LocalErrorMessage					is Alpha 150
				LocalForEachSumFESAmount			is an InternationalAmount
				LocalForEachSumUnitsAmount			is an UnitsAmount

			Instance Selection
				where (CashManagementGroup = PrmCashManagementGroup
				and	CashLedgerPaymentImport.RunGroup = PrmRunGroup
				and TaxCode not entered
				and not CreatedByFES
				and (DistributionAmount entered
				or (DistributionAmount not entered
				and UnitsAmount entered))
				and DistributionAccount.Project entered
				and DistributionAccount.FinanceDimension2 not entered
				and !DistributionAccount.Project.ExcludeFromFES
        		and DistributionAccount.Project.first FESProjectShadowContractRel.SummaryProject.ProjectContract.FrontEndSplits)

			Sort Order
				CashManagementGroup
				CashLedgerPaymentImport.RunGroup
				CashLedgerPaymentImport.CashCode
				CashLedgerPaymentImport.BankTransactionCode
				CashLedgerPaymentImport.ReferenceNumber
				CashLedgerPaymentImport.SequenceNumber

			Accumulators
				SequenceNumber
				DistributionCount

			Rule Blocks
				FillFESKeyFields
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup.FinanceEnterpriseGroup
					LocalFEGtext				= PrmCashManagementGroup.FinanceEnterpriseGroup
					LocalDerivedFESKey			= "CLPI-"+CashLedgerPaymentImport.RunGroup+"-"+CashLedgerPaymentImport.CashCode+""+CashLedgerPaymentImport.BankTransactionCode+"-"+CashLedgerPaymentImport.ReferenceNumber

				RunInterface
					invoke InterfaceCashPayments CashLedgerPaymentImport
						run after LocalAsyncId
						invoked.PrmCashManagementGroup		= PrmCashManagementGroup
						invoked.PrmRunGroup					= PrmRunGroup
						invoked.PrmMoveErrorsToNewRunGroup  = PrmMoveErrorsToNewRunGroup
						invoked.PrmErrorRunGroupPrefix		= PrmErrorRunGroupPrefix
						invoked.PrmCurrencyTable			= PrmCurrencyTable
						invoked.PrmJournalizeDistributions	= PrmJournalizeDistributions
						invoked.PrmAutoNumberingAction 		= PrmAutoNumberingAction
						invoked.PrmBypassFrontEndSplit		= true
							
			Action Rules
				Empty Set Rules
					if(!ErrorOccurred)
						if (PrmInterface)
							include RunInterface
				Set Rules
					Entrance Rules
						
					Exit Rules
						if (LocalAsyncId !entered)
							LocalAsyncId = current async action request id
						if(!ErrorOccurred
						or PrmMoveFrontEndSplitErrorsToErrorGroup)
							if (PrmInterface)
								include RunInterface
				
				CashLedgerPaymentImport.ReferenceNumber Set Rules
					Entrance Rules
						ReferenceNumberHasErrors 	= false
						include FillFESKeyFields
						invoke Purge FESDistributionsByKeyLocalRel
					Exit Rules
						include FillFESKeyFields
						invoke Purge FESDistributionsByKeyLocalRel
						if (ReferenceNumberHasErrors
						and DistributionCount > 1)
							if (DistributionCount > 50)
								invoke MoveFESErrorsToErrorGroupSet
									run after LocalAsyncId
									assign async action request id to LocalAsyncId
									invoked.PrmCashManagementGroup	= PrmCashManagementGroup
									invoked.PrmRunGroup				= PrmRunGroup 
									invoked.PrmCashCode				= CashLedgerPaymentImport.CashCode
									invoked.PrmBankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
									invoked.PrmReferenceNumber		= CashLedgerPaymentImport.ReferenceNumber
							else
								invoke MoveFESErrorsToErrorGroupSet in foreground
									invoked.PrmCashManagementGroup	= PrmCashManagementGroup
									invoked.PrmRunGroup				= PrmRunGroup 
									invoked.PrmCashCode				= CashLedgerPaymentImport.CashCode
									invoked.PrmBankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
									invoked.PrmReferenceNumber		= CashLedgerPaymentImport.ReferenceNumber

				Instance Rules
					DistributionCount	+= 1
					TransactionError	= false
					initialize	LocalErrorMessage
					include FillFESKeyFields

					if(ImportStatus.Error)
						initialize ErrorMessage	
						make transition to ReadyToImport
					
					if (SequenceNumber !entered)
						SequenceNumber = last CashLedgerPaymentImportRel2.CashLedgerPaymentImport.SequenceNumber + 1

					invoke SplitDistribution FrontEndSplitDistributions in foreground
						resume on error
							TransactionError	= true
							LocalErrorMessage	= error message
						invoked.PrmFinanceEnterpriseGroup 							= PrmCashManagementGroup.FinanceEnterpriseGroup
						invoked.PrmDerivedFESKey									= LocalDerivedFESKey
						invoked.PrmDistribution										= CashLedgerPaymentImport.SequenceNumber
						invoked.PrmDistributionAmount								= DistributionAmount
						invoked.PrmDistributionAmountWithTax						= DistributionAmount
						invoked.PrmDistributionUnitsAmount							= UnitsAmount
						invoked.PrmTransactionDate									= TransactionDate
						invoked.PrmPostingDate										= TransactionDate
						invoked.PrmTransactionCurrencyCode							= CashLedgerPaymentImport.CashCode.Currency
						invoked.PrmDistributionBy									= DistributionBy.ByAmount
						invoked.PrmNumberOfDecimalsQuantity							= NumberOfDecimalsQuantity.0Decimals
						invoked.PrmGeneralLedgerSystemCode							= GeneralLedgerSystemCodeRel.GeneralLedgerSystemCode
						invoked.PrmAccountingEntity									= DistributionAccount.ToAccountingEntity
						invoked.PrmTransactionCodeBlock								= DistributionAccount
					if (LocalErrorMessage entered)
						TransactionError = true
					if(!TransactionError)
						initialize LocalForEachSumFESAmount
						initialize LocalForEachSumUnitsAmount
						if(FESDistByDistributionRel exists)
							for each FESDistByDistributionRel
								LocalForEachSumFESAmount			+= each.FESAmount
								LocalForEachSumUnitsAmount 			+= each.FESUnitsAmount
								invoke CreateFromCopy ReadyToImport CashLedgerPaymentImport
									fill in fields from this instance
									invoked.CashLedgerPaymentImport.SequenceNumber		= SequenceNumber
									if (last FESDistByDistributionRel.FrontEndSplitDistributions = each.FrontEndSplitDistributions)
										invoked.UnitsAmount					= each.FESUnitsAmount + (UnitsAmount - LocalForEachSumUnitsAmount)
										invoked.DistributionAmount 			= each.FESAmount + (DistributionAmount - LocalForEachSumFESAmount)
									else
										invoked.UnitsAmount					= each.FESUnitsAmount
										invoked.DistributionAmount 			= each.FESAmount
									invoked.DistributionAccount				= each.CodeBlock
									invoked.CreatedByFES					= true
								SequenceNumber	+= 1
							invoke Purge ReadyToImport this instance
					if(TransactionError)
						ErrorOccurred = true
						if (PrmMoveFrontEndSplitErrorsToErrorGroup)
							ReferenceNumberHasErrors = true
						invoke UpdateError ReadyToImport this instance 
							invoked.PrmErrorMessage			= LocalErrorMessage
					if (ReferenceNumberHasErrors)
						invoke UpdateFESErrorRunGroup

		MoveFESErrorsToErrorGroupSet is a Set Action
			restricted
			default label is untranslatable
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
					default label is "CashManagementGroup"
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmCashCode					is a CashCode
				PrmBankTransactionCode		is a BankTransactionCode
				PrmReferenceNumber			is a Reference22
											
			Parameter Rules
				PrmRunGroup
					required
				PrmCashCode
					required
				PrmBankTransactionCode
					required
				PrmReferenceNumber
					required

			Instance Selection
				where (CashManagementGroup 							= PrmCashManagementGroup
				and	   CashLedgerPaymentImport.RunGroup 			= PrmRunGroup
				and    CashLedgerPaymentImport.CashCode				= PrmCashCode
				and    CashLedgerPaymentImport.BankTransactionCode	= PrmBankTransactionCode
				and    CashLedgerPaymentImport.ReferenceNumber		= PrmReferenceNumber)

			Sort Order
				CashManagementGroup
				CashLedgerPaymentImport.RunGroup
				CashLedgerPaymentImport.CashCode
				CashLedgerPaymentImport.BankTransactionCode
				CashLedgerPaymentImport.ReferenceNumber
				CashLedgerPaymentImport.SequenceNumber
				
			Action Rules
				Instance Rules
					invoke UpdateFESErrorRunGroup

		InterfaceCashPayments is a Set Action
			
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmRunGroup					is AlphaUpper 30
					default label is "RunGroup"
				PrmMoveErrorsToNewRunGroup  is Boolean
					default label is "MoveErrorsToNewRunGroup"
				PrmErrorRunGroupPrefix		is AlphaUpper 15
					default label is "ErrorRunGroupPrefix"
				PrmCurrencyTable			is a CurrencyTable
					default label is "CurrencyTable"
				PrmJournalizeDistributions	is Boolean
					default label is "JournalizeReleasedDistributions"
				PrmAutoNumberingAction 			is Numeric 1
					States
						OverrideNumberWithAnAutoGeneratedNumber	value is 1
						BypassAutoTransactionNumbering			value is 2
					default label is "AutoTransactionNumberingAction"
				PrmBypassFrontEndSplit		is Boolean
					default label is "BypassFrontEndSplit"
											
			Parameter Rules
				PrmRunGroup
					required
						"RunGroupIsRequired"
				PrmAutoNumberingAction
					if (PrmCashManagementGroup.AutoReferenceNumberForPaymentForm)
						required
							"AutoNumberingActionSelectionRequired"
				PrmJournalizeDistributions													
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
					constraint (GeneralLedgerSystemCodeRel.EncumbranceOption.NotUsed)
						"JournalizeDistributionsNotAllowedWhenBudgetingSetToTrackOrTrackAndEdit"
																	
			Local Fields
				ErrorOccurred				is Boolean
				PaymentError				is Boolean
				DistributionError			is Boolean
				LocalErrorMessage			is Alpha 150
				LocalCompletionMessage		is Alpha 150
				LocalErrorRunGroup			is AlphaUpper 30
				LocalErrorSequence			is Numeric 12
				LocalCashTransactionImportResultView is a CashTransactionImportResult view				
				PostingDateError			is Boolean
				LocalCashLedgerPayment		is a CashLedgerPayment view
					do not save in checkpoint
				LocalTransactionIDNumber	is a TransactionIDNumber

				ErrorUpdate					is Boolean

				LocalReleasePayment			is Boolean
				DistribUserFieldsFound		is Boolean
				LocalInterfaceAsPosted		is Boolean
				LocalBypassCashFundUpdate	is Boolean	
				GLTJournalizeGroup			is like JournalizeGroup
				CommitNow					is Boolean
				LocalInterfacedPaymentAmount	is an InternationalAmount	
				LocalInterfacedPaymentCount		is Numeric 7				
				LocalProcessedRecordCount		is Numeric 7
				
			Instance Selection
				where (CashManagementGroup				= PrmCashManagementGroup
				and    CashLedgerPaymentImport.RunGroup	= PrmRunGroup)
			
			Sort Order
				CashManagementGroup
				CashLedgerPaymentImport.RunGroup
				CashLedgerPaymentImport.CashCode
				CashLedgerPaymentImport.BankTransactionCode
				CashLedgerPaymentImport.ReferenceNumber
				CashLedgerPaymentImport.SequenceNumber

  			Accumulators
				NetPaymentAmount
				NumberOfDistributions
				
			Action Rules
				Empty Set Rules
					LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
					if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track					
                    or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)				
						invoke ProcessInterfaceBatchEdits BudgetEditBatch in background			
							invoked.PrmFinanceEnterpriseGroup	= PrmCashManagementGroup
							invoked.PrmBusinessClassName		= "CashLedgerPayment"
				Set Rules
					Exit Rules
						LocalFinanceEnterpriseGroup	= PrmCashManagementGroup
						if (GeneralLedgerSystemCodeRel.EncumbranceOption.Track				
						or  GeneralLedgerSystemCodeRel.EncumbranceOption.TrackAndEdit)				
							invoke ProcessInterfaceBatchEdits BudgetEditBatch in background		
								invoked.PrmFinanceEnterpriseGroup	= PrmCashManagementGroup
								invoked.PrmBusinessClassName		= "CashLedgerPayment"
						if (ErrorOccurred)
							LocalCompletionMessage = PrmCashManagementGroup.FinanceEnterpriseGroup.InterfaceErrorsMovedMessage
							LocalCompletionMessage += (" " + LocalErrorRunGroup)
						else		
							LocalCompletionMessage = PrmCashManagementGroup.FinanceEnterpriseGroup.InterfaceCompleteMessage
				
				CashManagementGroup Set Rules
					Entrance Rules
						ErrorOccurred			= false
						
						if (PrmJournalizeDistributions)
							LocalFinanceEnterpriseGroup = PrmCashManagementGroup
							invoke IncrementLastJournalizeGroup GeneralLedgerSystemCodeRel
							GLTJournalizeGroup = GeneralLedgerSystemCodeRel.DerivedJournalizeGroup
							CommitNow			= true
						
						invoke Create CashTransactionImportResult
							assign result to LocalCashTransactionImportResultView
							invoked.CashManagementGroup	= CashManagementGroup
							invoked.RunTime				= current timestamp
							invoked.RunGroup			= PrmRunGroup
							invoked.RunType				= 1 
							invoked.JournalizeGroup		= GLTJournalizeGroup

					Exit Rules
						if (PrmJournalizeDistributions)
							invoke JournalizeDistributionsForGroup CashLedgerGLDistribution in background
								invoked.PrmCashManagementGroup	= PrmCashManagementGroup
								invoked.PrmJournalizeGroup		= GLTJournalizeGroup
								invoked.PrmDescription			= InterfacePostingMessage

						invoke Update LocalCashTransactionImportResultView.CashTransactionImportResult
							if (ErrorOccurred)
								invoked.Status 		  = 2
								invoked.ErrorRunGroup = LocalErrorRunGroup
							else
								invoked.Status        = 1
							invoked.InterfacedPaymentAmount	= LocalInterfacedPaymentAmount	
							invoked.InterfacedPaymentCount	= LocalInterfacedPaymentCount	

				CashLedgerPaymentImport.BankTransactionCode Set Rules
					Entrance Rules



				CashLedgerPaymentImport.ReferenceNumber Set Rules
					Entrance Rules
						initialize LocalErrorMessage
						initialize LocalTransactionIDNumber
						initialize LocalCashLedgerPayment
						initialize LocalProcessedRecordCount
						NumberOfDistributions		= 1
						PaymentError				= false
						DistributionError			= false
						LocalReleasePayment			= false
						DistribUserFieldsFound		= false
						LocalInterfaceAsPosted		= InterfaceAsPosted
						LocalBypassCashFundUpdate 	= BypassCashFundUpdate	
						
					Exit Rules
						if (!PaymentError)
							invoke Update LocalCashLedgerPayment.CashLedgerPayment
								if (!UsingBankCurrencyPosting) 
									invoked.BankCheckAmount			= NetPaymentAmount
									invoked.BankCheckAmountUnsigned	= NetPaymentAmount
								invoked.LastDistributionSequence	= (NumberOfDistributions -1)
								if (!DistributionError)
									invoked.ImportInProcess			= false
									invoked.OriginatingImportRun	= LocalCashTransactionImportResultView.CashTransactionImportResult
							if (LocalReleasePayment
							and !DistributionError)
								if(PrmCashManagementGroup.FinanceEnterpriseGroup.FrontEndSplits and LocalProcessedRecordCount > 50)
									invoke Unreleased.ReleaseFromImport LocalCashLedgerPayment.CashLedgerPayment in background
										resume on error
											DistributionError	= true
										invoked.PrmInterfaceAsPosted 	= LocalInterfaceAsPosted
										invoked.PrmJournalizeGroup	 	= GLTJournalizeGroup
										invoked.PrmBypassCashFundUpdate	= LocalBypassCashFundUpdate	
										invoked.PrmBypassFrontEndSplit	= PrmBypassFrontEndSplit
								else
									invoke Unreleased.ReleaseFromImport LocalCashLedgerPayment.CashLedgerPayment
										resume on error
											DistributionError	= true
										invoked.PrmInterfaceAsPosted 	= LocalInterfaceAsPosted
										invoked.PrmJournalizeGroup	 	= GLTJournalizeGroup
										invoked.PrmBypassCashFundUpdate	= LocalBypassCashFundUpdate	
										invoked.PrmBypassFrontEndSplit	= PrmBypassFrontEndSplit
							LocalInterfacedPaymentCount		+= 1				
							LocalInterfacedPaymentAmount	+= NetPaymentAmount	
						if (DistributionError
						and PrmJournalizeDistributions)
							invoke UpdateJournalizeGroup LocalCashLedgerPayment.CashLedgerPayment
								invoked.PrmJournalizeGroup	= blank

							if (DistribUserFieldsFound)
								invoke UpdateTextSearchIndexes LocalCashLedgerPayment.CashLedgerPayment
							
				Instance Rules
						






					if (CommitNow)
						commit transaction
						CommitNow = false

					if (ImportStatus.Error)
						ErrorOccurred	  = true
						DistributionError = true
					else

						if (CashLedgerPaymentInError entered
						and LocalTransactionIDNumber !entered)
							LocalCashLedgerPayment		= CashLedgerPaymentInErrorRel.CashLedgerPayment
							LocalTransactionIDNumber	= CashLedgerPaymentInError
							NumberOfDistributions		+= CashLedgerPaymentInErrorRel.LastDistributionSequence
							NetPaymentAmount			+= CashLedgerPaymentInErrorRel.BankCheckAmount
							if (Status.Released)
								LocalReleasePayment	= true
								if (PrmJournalizeDistributions)
									invoke UpdateJournalizeGroup CashLedgerPaymentInErrorRel.CashLedgerPayment
										invoked.PrmJournalizeGroup	= GLTJournalizeGroup

						if (!CashLedgerPaymentInError	entered
						and LocalTransactionIDNumber 	!entered)
							if (Status.Released)
								if ((CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.ElectronicFile
								or  CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.Swift		    	
								or	CashLedgerPaymentImport.BankTransactionCode.PaymentOutputOption.WireTransfer)
								and !ACHPrenotification.Accepted)
									ErrorOccurred	= true
									PaymentError	= true
									LocalErrorMessage	= PrenotificationErrorMessage
								if (CompanyCashCodeRel.PaymentClearingAccount !entered) 
									ErrorOccurred	= true
									PaymentError	= true
									LocalErrorMessage	= PaymentClearingErrorMessage
							if (Status.Unreleased
							and InterfaceAsPosted)
								ErrorOccurred		= true
								PaymentError		= true
								LocalErrorMessage	= InterfaceAsPostedErrorMessage	
							if (!InterfaceAsPosted		
							and BypassCashFundUpdate)
								ErrorOccurred		= true
								PaymentError		= true
								LocalErrorMessage	= BypassWithoutPostedErrorMessage			
							if (!PaymentError)
								invoke Create CashLedgerPayment
									assign result to LocalCashLedgerPayment
									resume on error
										ErrorOccurred		= true
										PaymentError		= true
										LocalErrorMessage	= error message
									fill in fields from this instance
										except invoked.Status
									invoked.CashManagementGroup						= CashManagementGroup
									invoked.CashCode								= CashLedgerPaymentImport.CashCode						
									invoked.CashLedgerPayment.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode

									invoked.Status									= Status.Unreleased
									if (PrmAutoNumberingAction.OverrideNumberWithAnAutoGeneratedNumber
									and AutoNumberingAllowed)
										invoked.Reference							= blank
									else	
										invoked.Reference							= CashLedgerPaymentImport.ReferenceNumber
									if (Description not entered)
										invoked.Description							= DescriptionMessage
									else	
										invoked.Description							= Description
									invoked.PostDate								= TransactionDate
									invoked.CompanyBaseData.OverrideCompany			= OverrideCompany
									invoked.BankBaseAmount.OverrideCompany			= OverrideCompany	
									invoked.CashLedgerPaymentForm					= PaymentForm
									invoked.CashLedgerChargeCode					= ChargeCode
									invoked.OriginatingImportRun					= LocalCashTransactionImportResultView.CashTransactionImportResult
									invoked.ImportInProcess							= true						
									invoked.CurrencyTable							= PrmCurrencyTable
									invoked.AutoNumberingAction						= PrmAutoNumberingAction
									
								if (!PaymentError)
									LocalTransactionIDNumber	= LocalCashLedgerPayment.CashLedgerPayment.TransactionIDNumber

									if (Status.Released)
										LocalReleasePayment	= true
									if (DistribUserFields entered)
										DistribUserFieldsFound = true	

						if (PaymentError)
							if (PrmMoveErrorsToNewRunGroup)
								if (!LocalErrorRunGroup entered)
									increment PrmCashManagementGroup.LastErrorRunGroupNumber
									LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmCashManagementGroup.LastErrorRunGroupNumber
							invoke UpdateError ReadyToImport this instance 
								invoked.PrmErrorMessage			= LocalErrorMessage
								if (PrmMoveErrorsToNewRunGroup)
									invoked.PrmErrorRunGroup	= LocalErrorRunGroup
						else
						
							if (CashAllocationCode entered)                
								if (DistributionAccount entered)
									ErrorOccurred        = true
									DistributionError    = true
									LocalErrorMessage     = AllocationAndAccountErrorMessage
								else
									invoke ApplyAdditionalDistributions LocalCashLedgerPayment.CashLedgerPayment
										invoked.PrmCashAllocationCode         	= CashAllocationCode
										invoked.PrmCashAllocationAmount        	= DistributionAmount
										invoked.PrmCashAllocationUnitsAmount	= UnitsAmount	
										invoked.PrmCashLedgerPaymentImport		= reference to this instance
										
								if (LocalErrorMessage entered)
									if (PrmMoveErrorsToNewRunGroup)
										if (!LocalErrorRunGroup entered)
											increment PrmCashManagementGroup.LastErrorRunGroupNumber
											LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmCashManagementGroup.LastErrorRunGroupNumber
							
									CashLedgerPaymentInError	= LocalTransactionIDNumber
									invoke UpdateError ReadyToImport this instance 
										invoked.PrmErrorMessage			= LocalErrorMessage
										if (PrmMoveErrorsToNewRunGroup)
											invoked.PrmErrorRunGroup	= LocalErrorRunGroup
								else



									NumberOfDistributions   	+= (instance count of CashAllocationCode.CashAllocationCodeDetail set)
									if (CashAllocationCode.AllocationType.Percent)
										NetPaymentAmount		+= DistributionAmount
									else
										if (CashAllocationCode.AllocationType.AccountOnly)
											NetPaymentAmount	+= (DistributionAmount * instance count of CashAllocationCode.CashAllocationCodeDetail set)
										else
											NetPaymentAmount	+= CashAllocationCode.ControlTotal
							
							else
								initialize LocalErrorMessage
								LocalRelTransactionIDNumber = LocalTransactionIDNumber
								increment LocalProcessedRecordCount
								invoke Create CashLedgerGLDistribution
									resume on error
										ErrorOccurred		= true
										DistributionError	= true
										LocalErrorMessage	= error message
									fill in fields from this instance
									invoked.CashCode										= CashLedgerPaymentImport.CashCode
									invoked.CashLedgerSourceRecord							= "CBM"
									invoked.CashLedgerGLDistribution.BankTransactionCode	= CashLedgerPaymentImport.BankTransactionCode
									invoked.CashLedgerGLDistribution.TransactionIDNumber	= LocalTransactionIDNumber
									invoked.CashLedgerGLDistribution.SequenceNumber			= NumberOfDistributions
									invoked.TransactionNumber								= LocalCashLedgerPayment.CashLedgerPayment.Reference
									invoked.CompanyAccountingEntity							= LocalCashLedgerPayment.CashLedgerPayment.CompanyBaseData.OverrideCompany.AccountingEntity	
									invoked.Reference										= Reference  //"CashLedgerPaymentImport"
									if (Description not entered)
										invoked.Description									= DescriptionMessage
									else	
										invoked.Description									= Description
									invoked.LocalControlDocumentNumber						= LocalCashLedgerPayment.CashLedgerPayment.Reference
									invoked.LocalDocumentNumber								= LocalCashLedgerPayment.CashLedgerPayment.Reference
									invoked.LocalExchangeDate								= LocalCashLedgerPayment.CashLedgerPayment.PostDate
									invoked.LocalPostingDate								= LocalCashLedgerPayment.CashLedgerPayment.PostDate
									invoked.PostDate										= LocalCashLedgerPayment.CashLedgerPayment.PostDate
									if (LocalCashLedgerPayment.CashLedgerPayment.GeneralLedgerSourceCode	entered
									and LocalCashLedgerPayment.CashLedgerPayment.GeneralLedgerSourceCode	!= "CB")
										invoked.LocalGeneralLedgerEvent						= LocalCashLedgerPayment.CashLedgerPayment.GeneralLedgerSourceCode
										invoked.GeneralLedgerSourceCode						= LocalCashLedgerPayment.CashLedgerPayment.GeneralLedgerSourceCode
									else
										invoked.LocalGeneralLedgerEvent						= "CL"
										invoked.GeneralLedgerSourceCode						= "CL"
									invoked.Company.OrigCompany								= LocalCashLedgerPayment.CashLedgerPayment.CompanyBaseData.OverrideCompany	
									invoked.RecordType										= "P"
									invoked.LocalKeepRateOnly								= false
									invoked.GLFinanceCodeBlock								= DistributionAccount
									invoked.GLTransactionAmount								= DistributionAmount
									invoked.Status											= Status.Unreleased
									invoked.CreateFromBatchType								= 1
									invoked.BypassBudgetEditing							 	= true
									invoked.LocalHeaderUniqueID								= LocalCashLedgerPayment.CashLedgerPayment.UniqueID
									invoked.LocalHeaderBusinessObjectRef					= reference to LocalCashLedgerPayment.CashLedgerPayment
									invoked.LocalCurrencyTable								= LocalCashLedgerPayment.CashLedgerPayment.CurrencyTable
									invoked.TransientUnitsAmount							= UnitsAmount	
									if (Status.Released
									and PrmJournalizeDistributions)
										invoked.GLTJournalizeGroup							= GLTJournalizeGroup
									invoked.CreatedByFES									= CreatedByFES
									invoked.FESManuallyUpdated								= FESManuallyUpdated
									
								if (LocalErrorMessage entered)
									if (PrmMoveErrorsToNewRunGroup)
										if (!LocalErrorRunGroup entered)
											increment PrmCashManagementGroup.LastErrorRunGroupNumber
											LocalErrorRunGroup = PrmErrorRunGroupPrefix + "ERRORS_" + PrmCashManagementGroup.LastErrorRunGroupNumber
							
									CashLedgerPaymentInError	= LocalTransactionIDNumber
									invoke UpdateError ReadyToImport this instance 
										invoked.PrmErrorMessage			= LocalErrorMessage
										if (PrmMoveErrorsToNewRunGroup)
											invoked.PrmErrorRunGroup	= LocalErrorRunGroup
								else
									NumberOfDistributions	+= 1
									NetPaymentAmount		+= DistributionAmount
							
							if (LocalErrorMessage !entered)					
								invoke Purge ReadyToImport this instance 
					
		UpdateFESErrorRunGroup is an Instance Action
			default label is untranslatable
			restricted
			Action Rules
				if(!(CashLedgerPaymentImport.RunGroup contains "-ERROR"))
					CashLedgerPaymentImport.RunGroup 	  = CashLedgerPaymentImport.RunGroup + "-ERROR"
				if (ErrorMessage !entered)
					ErrorMessage	= ReferenceNumberErrorMessage
				if (ImportStatus.ReadyToImport)
					make transition to Error

 		DeletePartiallyImportedRecord is an Instance Action
		 	valid when (IsPartiallyImported)
			Action Rules
				invoke Delete CashLedgerPaymentInErrorRel
    						
		DeleteAllRelatedRecords is a Delete Action
			default label is untranslatable
			restricted

		DeleteAllTransactionsForRunGroup is a Set Action
			confirmation required
		
			Parameters
				PrmCashManagementGroup		is a CashManagementGroup
				PrmRunGroup				  	is AlphaUpper 30
					default label is "RunGroup"

			Parameter Rules

			Instance Selection
				where (CashManagementGroup				= PrmCashManagementGroup
				and    CashLedgerPaymentImport.RunGroup	= PrmRunGroup)
				
			Action Rules
				Instance Rules
					if (IsPartiallyImported)
						invoke DeletePartiallyImportedRecord
				    else	
				    	invoke RunGroupDelete

		RunGroupDelete is a Delete Action
			default label is untranslatable
			restricted
													
		CreateBODEntry is a Create Action	
			default label is untranslatable
			restricted
			bypass field rules
			Action Rules
				CashManagementGroup								= PayablesData.PayablesCompany.VendorGroup
				PayablesData.PayablesCompany					= PayablesData.PayablesCompany	
				PayablesData.Vendor								= PayablesData.Vendor			
				PayablesData.PayGroup							= PayablesData.PayablesCompany.PayGroup	
				CashLedgerPaymentImport.CashCode				= PayablesData.Vendor.CashCode			
				CashLedgerPaymentImport.BankTransactionCode		= PayablesData.Vendor.BankTransactionCode
			Exit Rules
				include CashPaymentImportEdits	
	StateCycles
		CashLedgerPaymentImportLifeCycle is a StateCycle
			state field is ImportStatus
			
			ReadyToImport	is a State
		 		Create is a Create Action
					Action Rules
						include CashPaymentImportEdits

		 		CreateFromCopy is a Create Action
					default label is untranslatable
					restricted
					bypass field rules

		 		Update is an Update Action
					Action Rules
						include CashPaymentImportEdits

		 		Delete is a Delete Action
		 			valid when (!IsPartiallyImported)

				UpdateError is an Instance Action
					default label is untranslatable
					restricted
					Parameters
						PrmErrorMessage		is Alpha 150
							default label is "ErrorMessage"
						PrmErrorRunGroup    is AlphaUpper 30
							default label is "ErrorRunGroup"
					Action Rules
						if (PrmErrorRunGroup entered)
							CashLedgerPaymentImport.RunGroup 	  = PrmErrorRunGroup
						ErrorMessage 		= PrmErrorMessage
						make transition to Error

				Purge is a Purge Action
					restricted
			
			Error is a State
		 		Update is an Update Action
					Action Rules
						if (instance count of CashLedgerPaymentImportRel2 = 1)
							initialize ErrorMessage
							make transition to ReadyToImport

		 		ResetErrorMessage is an Instance Action
					Action Rules
						if (CashLedgerPaymentInError	!entered
              			and instance count of CashLedgerPaymentImportRel2 > 1)
							confirmation required
								"ResettingErrorMessageOnNonInterfacedRecordWillResetAllErrorsForReferenceNumber;Continue?"
									for each CashLedgerPaymentImportRel2
										if (each.ImportStatus.Error)
											invoke Error.InvokedResetErrorMessage each
						else
							initialize ErrorMessage
							make transition to ReadyToImport 

				InvokedResetErrorMessage is an Instance Action
					restricted
					default label is untranslatable
					Action Rules
			 			initialize ErrorMessage
						make transition to ReadyToImport

				ResetErrorsByRunGroup is a Set Action		
					Parameters
						PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
							default label is "FinanceEnterpriseGroup"
						PrmRunGroup						is AlphaUpper 30
							default label is "RunGroup"

					Parameter Rules
						PrmRunGroup
							required
								"RunGroupIsRequired"

					Instance Selection
						where (CashManagementGroup.FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
						and    CashLedgerPaymentImport.RunGroup				= PrmRunGroup
						and    ErrorMessage entered)

					Action Rules
						Instance Rules
							invoke InvokedResetErrorMessage

		 		Delete is a Delete Action
		 			valid when (!IsPartiallyImported)
			
