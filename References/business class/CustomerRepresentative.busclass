CustomerRepresentative is a BusinessClass
	owned by ar
	prefix is CUDR

	Ontology
		symbolic key is CustomerRepresentative

	Persistent Fields

		CustomerName					is a VendorName 
			holds pii
		TaxIdGroup
		DunAndBradstreetNumber			is a DunnNumber
			default label is "Dun&Bradstreet"
		MailingAddress					is a PostalAddressV2	
			holds pii
		Active							is Boolean
		AcceptTerms						is Boolean
		CustomerRepresentativeStatus	is Numeric size 1
			default label is "Status"
			States
				NeedsValidation				value is 1
				Validated					value is 2
				Rejected					value is 3
		HasBeenValidated				is Boolean
		InactiveTimeStamp				is TimeStamp
		CreatedInternally				is Boolean
		ReceivableCompany
		Customer
		AllowPortalApplyCashAcrossReceivableCompanies	is Boolean	

		ContactIsRegistered				is Boolean  
			restricted
			disable Auditing
		RegistrationPassword			is Password 
			default label is "Password"
			disable Auditing
		RegistrationConfirmPassword		is Password
			default label is "ConfirmPassword"
			disable Auditing


	Transient Fields

		DeleteCustomerRepresentative	is Boolean
		LoginName						is LoginName
			default label is "UserName"

		Password						is Alpha size 288	

		ConfirmPassword					is Alpha size 288	
		MainContact						is a PersonName	
			holds pii
		TelephoneNumber
		EmailAddress

		TransientSingleJSONNode			is Alpha 400
		TransientNextAction				is Alpha 100
		TransientUserVerificationId		is Alpha 100
		TransientUserIdentity			is Alpha 50
		TransientResponseStatus			is Alpha 100
		TransientDisplayPasswordPolicy	is Boolean
		TransientVerificationCode		is Alpha size 20
		TransientStringHolder			is Alpha size 3000
		TransientSendVerificationCode	is Boolean
		TransientResendVerificationCode	is Boolean
		TransientUserRegistered			is Boolean
		TransientUserVerified			is Boolean
		TransientErrorOccurred			is Boolean
		FieldToConvert					is Alpha 250
		TransientVerificationCodeResent	is Boolean

	Local Fields

		LocalReceivableCompany			is a ReceivableCompany
		LocalCustomer					is a Customer
		LocalTaxId						is AlphaUpper size 20

		JSONResponse						is JSONObject
		LocalCustomerRepresentative			is like CustomerRepresentative
		LocalCustomerRepresentativeContact	is like CustomerRepresentativeContact
		CustomerRepresentativeContactView	is a CustomerRepresentativeContact view

	Field Groups
		MatchCriteriaFields
			CustomerName
			DunAndBradstreetNumber
			TaxIdGroup


	Derived Fields

		RequiredQuestionsCount is a DerivedField
			type is Numeric size 21
			restricted
			return (instance count of RequiredQuestions)

		QuestionWithRequiredAttachmentsRelCount is a DerivedField
			type is Numeric size 21
			restricted
			return (instance count of QuestionWithRequiredAttachmentsRel)

		CustomerQuestionResponseRequiredRelCount is a DerivedField
			type is Numeric size 21
			restricted
			return (instance count of CustomerQuestionResponseRequiredRel)

		CustomerQuestionResponseWithRequiredAttachmentRelCount is a DerivedField
			type is Numeric size 21
			restricted
			return (instance count of CustomerQuestionResponseWithRequiredAttachmentRel)

		DateCustomerCreated is a DerivedField
			type is Date
			restricted
			for each this instance.audit log records
				if (each.action = "create"
				and each.actor  = "Anonymous")
					return each.effective date

		NumberOfAncestors is a ComputeField
			type is Numeric 1
			restricted
			(instance count of CustomerRepresentative ancestors)

		NumDuplicateCustomerTaxIds is a ComputeField
			type is Numeric 6
			restricted
			(instance count of CustomerRepresentativeTaxIdRel)

		AdminEmailAddress is a StringField 
			type is EmailAddressField
			holds pii
			restricted
			CustomerGroup.AdminEmailAddress

		PrimaryContactEmail is a StringField 
			type is EmailAddressField
			holds pii
			restricted
			PrimaryContact.EmailAddress

		PrimaryContactUpperCaseName is a DerivedField
			type is AlphaUpper size 30
			restricted
			return PrimaryContact.MainContact.FirstAndLastName

		UnreadCustomerMessages is a ComputeField
			type is Numeric 6
			(instance count of UnreadCustomerMessagesRel)

		CustomerDisplayName is a StringField
			type is Text
			default label is "CustomerRepresentative"
			CustomerRepresentative
			" - "
			CustomerName

		CustomerDisplayNameAndCustomerGroup is a StringField
			type is Text
			CustomerRepresentative
			" - "
			CustomerName
			" for CustomerGroup "
			CustomerGroup

		DerivedCreateMessage is a LabelField
			restricted
			"CreateCustomerRepresentative"

		DerivedFormTitle is a DerivedField
			type is MessageField
			restricted
			if (CustomerRepresentativeExists)
				return CustomerDisplayNameAndCustomerGroup
			else
				return DerivedCreateMessage

		MustAcceptTermsAndConditionsMessage is a MessageField
			restricted
			"MustAcceptTermsAndConditionsInOrderToContinue."

		InvalidFederalTaxId is a MessageField
			restricted
			"FederalTaxIdMustBeEnteredInTheFollowingFormat:##-#######"

		InvalidSocialSecurityNumber is a MessageField
			restricted
			"SocialSecurityNumberMustBeEnteredInTheFollowingFormat:###-##-####"

		NonNumericTaxIdErrorMessage is a MessageField
			restricted
			"TaxIdMustBeANineDigitNumber.NoSpaces,Dashes,OrOtherSpecialCharactersAreAllowed."

		TaxIdHelpText1Message is a MessageField
			restricted
			"NumbersOnly._Example:123456789"

		TaxIdHelpText2Message is a MessageField
			restricted
			"Include_'-'_Characters._Example:12-\3456789"

		TaxIdHelpText is a ConditionalField
			type is Text
			restricted
			if (CustomerGroup.TaxIdFormat.StandardFormatNoDelimiter)
				TaxIdHelpText1Message
			else
			if (CustomerGroup.TaxIdFormat.StandardFormatWithDelimiter)
				TaxIdHelpText2Message
			else
				blank

		CustomerWithMatchingTaxId is a DerivedField
			type is like Customer
			restricted
			return (first CustomerTaxIdRel.Customer)

		DuplicateTaxId1Message is a MessageField
			restricted
			"<NumDuplicateCustomerTaxIds>CustomersFoundWithTheSameTaxId."

		DuplicateTaxId2Message is a MessageField
			restricted
			"Customer<first CustomerRepresentativeTaxIdRel.CustomerDisplayName>FoundWithTheSameTaxId."

		CustomerDuplicateTaxIdErrorMessage is a ConditionalField
			type is Alpha 250
			restricted
			if (NumDuplicateCustomerTaxIds > 1)
				DuplicateTaxId1Message
			else
				DuplicateTaxId2Message

		CustomerContactCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (CustomerRepresentativeContact set exists)
				return "(" + instance count of CustomerRepresentativeContact set + ")"
			else
				return ""

		CustomerCommentCount is a DerivedField
			type is Alpha size up to 20
			restricted
			if (CustomerRepresentativeComment set exists)
				return "(" + instance count of CustomerRepresentativeComment set + ")"
			else
				return ""

		DerivedApplyAcrossReceivableCompanies is a DerivedField
			type is Boolean
			restricted

			if (PortalPaymentCompanyApplyCashAcrossReceivableCompanies) 
				return true
			else
				return false




		ConvertToLowerCase is a NativeField
			type is Alpha 250
			restricted

		LowerCaseEmailAddress is a DerivedField
			type is LoginName
			restricted
			LowerCaseEmailAddress = ConvertToLowerCase

		BillingRecvExtEntityGUID is a DerivedField  
			type is Alpha size 36                   
			restricted
			default label is untranslatable
			return CustomerGroup.BillingRecvExtEntityGUID

		BillingRecvExtEntityEnabled is a DerivedField  
			type is Boolean                            
			restricted
			default label is untranslatable
			return CustomerGroup.BillingRecvExtEntityEnabled

		BillingReceivablesPortalService is a DerivedField
			type is Alpha 300
			restricted
			default label is untranslatable
			return stackconfig(config).CUSTOMERREPRESENTATIVE_SERVICE

		DerivedBlankField5 is a DerivedField
			type is Alpha 5
			default label is untranslatable
			return blank

		DerivedVerificationCodeRequired is a DerivedField
         	type is Boolean
			default label is untranslatable
			if (BillingRecvExtEntityEnabled)
				invoke GetExternalEntity ExternalUserExecutor
					resume on error
					assign result to JSONResponse
					invoked.EntityId = BillingRecvExtEntityGUID
				TransientResponseStatus = JSONResponse select "$.responsestatus"
				if (com.lawson.apps.security.base.Security_ActionBase.isEqualIgnoreCase(TransientResponseStatus, "Success"))
					return JSONResponse select "$.response.externalentity.enableuserverification"
				else
					return false
			else
				return false


		DerivedVerificationCodeRequiredRegistration is a DerivedField
         	type is Alpha 250
			default label is untranslatable
			if (RequiredRegistrationFieldsEntered
			or  RequiredExistingRegistrationFieldsEntered)
				if (!TransientUserRegistered)
					FieldToConvert	= EmailAddress
					EmailAddress	= LowerCaseEmailAddress

					invoke RegisterUser ExternalUserExecutor
						resume on error
						assign result to JSONResponse
						invoked.EntityId				= BillingRecvExtEntityGUID
						invoked.IdentifierId 			= "PrimaryEmail"
						invoked.IdentifierValue 		= EmailAddress
						invoked.Password 				= RegistrationPassword
						invoked.EnableUserVerification	= true
						invoked.FirstName				= MainContact.GivenName
						invoked.LastName				= MainContact.FamilyName

					TransientResponseStatus = JSONResponse select "$.responsestatus"
					if (com.lawson.apps.security.base.Security_ActionBase.isEqualIgnoreCase(TransientResponseStatus, "Success"))
						TransientSendVerificationCode	= true
						TransientUserRegistered			= true
						TransientStringHolder			= blank
						TransientSingleJSONNode			= JSONResponse select "$.response.user"
						if (TransientSingleJSONNode = "")
							TransientNextAction			= JSONResponse select "$.response.nextaction.action"
							TransientUserVerificationId	= JSONResponse select "$.response.nextaction.userverificationid"
							TransientUserIdentity		= JSONResponse select "$.response.nextaction.useridentity"
					else
						TransientSingleJSONNode	= JSONResponse select "$.errorlist[0].code"
						TransientStringHolder	= JSONResponse select "$.errorlist[0].languagetext"
						TransientErrorOccurred			= true
						TransientSendVerificationCode	= false
			return DerivedVerificationCodeRequiredRegistration


		DerivedResendVerificationCode is a DerivedField
         	type is Alpha 250
			default label is untranslatable
			if (TransientUserIdentity entered
			and TransientUserVerificationId entered
			and !TransientUserVerified
			and !TransientVerificationCodeResent)
				invoke ResendVerification ExternalUserExecutor
					resume on error
					assign result to JSONResponse
					invoked.EntityId			= BillingRecvExtEntityGUID
					invoked.UserIdentity 		= TransientUserIdentity
					invoked.VerificationId 		= TransientUserVerificationId

				TransientResponseStatus = JSONResponse select "$.responsestatus"
				if (com.lawson.apps.security.base.Security_ActionBase.isEqualIgnoreCase(TransientResponseStatus, "Success"))
					TransientResendVerificationCode = true
					TransientVerificationCodeResent	= true
				else
					TransientSingleJSONNode	= JSONResponse select "$.errorlist[0].code"
					TransientStringHolder	= JSONResponse select "$.errorlist[0].languagetext"
					TransientErrorOccurred	= true
			return DerivedResendVerificationCode


		DerivedEnteredEmailMatchesSessionKey is a DerivedField
         	type is Boolean
			default label is untranslatable
			if (EmailAddress entered
			and DerivedCustomerRepresentativeFromSessionKey entered
			and DerivedCustomerRepresentativeContactFromSessionKey entered)
				if (CustomerRepresentativeContactInSessionKeyExists)
					FieldToConvert	= EmailAddress
					EmailAddress	= LowerCaseEmailAddress
					if (EmailAddress = CustomerRepresentativeContactInSessionKeyRel.EmailAddress)
						MainContact.GivenName			= CustomerRepresentativeContactInSessionKeyRel.MainContact.GivenName
						MainContact.FamilyName			= CustomerRepresentativeContactInSessionKeyRel.MainContact.FamilyName
						return true
					else
						TransientStringHolder			= "Entered email address does not match what is on file in the system"
						return false
				else
					TransientStringHolder				= "Customer contact record does not exist"
					return false
			return false


		DerivedCustomerGroupFromSessionKey is a DerivedField
			type is AlphaUpper 5
			default label is untranslatable
			return (session.key.CustomerGroup)

		DerivedCustomerRepresentativeFromSessionKey is a DerivedField
			type is Numeric 9
			default label is untranslatable
			return (session.key.CustomerRepresentative)

		DerivedCustomerRepresentativeContactFromSessionKey is a DerivedField
			type is Numeric 4
			default label is untranslatable
			return (session.key.CustomerRepresentativeContact)

		DerivedExternalEntityRegistrationTitle is a DerivedField
			type is Alpha 30
			default label is untranslatable
			if (IsAnonymousAndCompleteAccountRegistration)
				return DerivedMessageForCompletingRegistration
			else
				return DerivedMessageForNormalRegistration

		DerivedMessageForCompletingRegistration is a MessageField
			restricted
			"CompleteYourRegistration"

		DerivedMessageForNormalRegistration is a MessageField
			restricted
			"RequestCustomerAccess"

		EmailAddressRequiredMessage is a MessageField
			restricted
			"EmailAddressIsRequired"

		PasswordRequiredMessage is a MessageField
			restricted
			"PasswordIsRequired"

		ConfirmPasswordRequiredMessage is a MessageField
			restricted
			"ConfirmPasswordIsRequired"

		PasswordsDoNotMatchMessage is a MessageField
			restricted
			"PasswordsDoNotMatch"

		FirstNameRequiredMessage is a MessageField
			restricted
			"FirstNameIsRequired"

		LastNameRequiredMessage is a MessageField
			restricted
			"LastNameIsRequired"

		TelephoneNumberRequiredMessage is a MessageField
			restricted
			"TelephonePhoneNumberIsRequired"

		CompanyNameRequiredMessage is a MessageField
			restricted
			"CompanyNameIsRequired"

		TaxIdTypeRequiredMessage is a MessageField
			restricted
			"TaxIdTypeIsRequired"

		TaxIdRequiredMessage is a MessageField
			restricted
			"TaxIdIsRequired"

		CountryJurisdictionRequiredMessage is a MessageField
			restricted
			"Country/\JurisdictionForMailingAddressIsRequired"

		MailingAddressRequiredMessage is a MessageField
			restricted
			"MailingAddressIsRequired"

	Conditions

		IsValidForActorContext
			restricted
			when (CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)

		IsValidForActorContextCreateRulesOnly	
			restricted
			when ((actor.context.FinanceEnterpriseGroup != ""
			and   CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup = actor.context.FinanceEnterpriseGroup)
			or   (actor.context.FinanceEnterpriseGroup = ""))

		CustomerGroupExists	
			restricted
			when (CustomerRepresentative.CustomerGroup exists)

		LinkedToCompanyCustomer
			restricted
			when (ReceivableCompany entered
			and	  Customer entered)

		IsNationalAccountParent
			restricted
			when (LinkedToCompanyCustomer
			and	  CompanyCustomerRel.NationalAccountIndicator.Parent)

		IsNationalAccountChild	
			restricted
			when (LinkedToCompanyCustomer
			and	  CompanyCustomerRel.NationalAccountIndicator.Child)

		IsNotPartOfNationalAccount	
			restricted
			when (LinkedToCompanyCustomer
			and	  CompanyCustomerRel.NationalAccountIndicator.No)

		IsInvoiceCustomer
			restricted
			when (LinkedToCompanyCustomer
			and	  !CompanyCustomerRel.NationalAccountIndicator.Parent)

		IsInvoiceCustomerAndAllowPortalApplyCashAcrossReceivableCompanies	
			restricted
			when (LinkedToCompanyCustomer
			and	  !CompanyCustomerRel.NationalAccountIndicator.Parent
			and   AllowPortalApplyCashAcrossReceivableCompanies)

		IsInvoiceCustomerAndNotAllowPortalApplyCashAcrossReceivableCompanies	
			restricted
			when (LinkedToCompanyCustomer
			and	  !CompanyCustomerRel.NationalAccountIndicator.Parent
			and   !AllowPortalApplyCashAcrossReceivableCompanies)

		IsInvoiceCustomerAndPaymentCompanyAllowPortalApplyCashAcrossReceivableCompanies
			restricted
			when (LinkedToCompanyCustomer
			and	  !CompanyCustomerRel.NationalAccountIndicator.Parent
			and   PortalPaymentCompanyApplyCashAcrossReceivableCompanies)

		IsInvoiceCustomerAndPaymentCompanyNotAllowPortalApplyCashAcrossReceivableCompanies
			restricted
			when (LinkedToCompanyCustomer
			and	  !CompanyCustomerRel.NationalAccountIndicator.Parent
			and   !PortalPaymentCompanyApplyCashAcrossReceivableCompanies)

		AnsweredRequiredQuestions
			restricted
			when (all RequiredQuestions.CustomerGroupQuestion = any CustomerRepresentativeQuestionResponse set.CustomerGroupQuestion)

		AttachedRequiredQuestionAttachments
			restricted
			when (all QuestionWithRequiredAttachmentsRel.CustomerGroupQuestion = any CustomerQuestionResponseWithAttachmentRel.CustomerGroupQuestion)

		RequiredQuestionCountSameAsAnswerCount
			restricted
			when (RequiredQuestionsCount = CustomerQuestionResponseRequiredRelCount)

		RequiredAttachmentCountSameAsAnswerCount
			restricted
			when (QuestionWithRequiredAttachmentsRelCount = CustomerQuestionResponseWithRequiredAttachmentRelCount)

		FullyRegisteredForList
			restricted
			when (RequiredQuestionCountSameAsAnswerCount
			and   RequiredAttachmentCountSameAsAnswerCount)

		FullyRegistered
			when (AnsweredRequiredQuestions
			and   AttachedRequiredQuestionAttachments)

		CreatedInTheLastMonth
			when (DateCustomerCreated > (current corporate date - 30))

		IsUpdatable
			restricted
			when (CustomerRepresentativeStatus.NeedsValidation
			or 	  CustomerRepresentativeStatus.Validated)

		CommentsExist
			restricted
			when (CustomerRepresentativeComment set exists)

		HasQuestions
			restricted
			when (CustomerQuestionsRel exists)

		NeedsValidationStill
			restricted
			when (CustomerRepresentativeStatus.NeedsValidation)

		Rejected
			restricted
			when (CustomerRepresentativeStatus.Rejected)

		PortalCustomer
			restricted
			when (CustomerGroup = actor.agent(CustomerRepresentativeContact).CustomerGroup
			and   CustomerRepresentative = actor.agent(CustomerRepresentativeContact).CustomerRepresentative)

		IsPrimary
			restricted
			when (actor.agent(CustomerRepresentativeContact).PrimaryContact)

		ActivateCustomerValid
			restricted
			when (!Active
			and	  !Rejected)

		HasChild
			restricted
			when (CustomerRepresentative children exist)

		CustomerRepresentativeExists
			restricted
			when (CustomerRepresentative entered)

		IsAnonymous
			restricted
			when (actor has role "CustomerRepresentativeAnonymous_ST")

		ReceivableCompanySpecificCompanyRelApplyCashAcrossReceivableCompanies	
			when (ReceivableCompanySpecificCompanyRel.ApplyCashAcrossReceivableCompanies)	

		PortalPaymentCompanyApplyCashAcrossReceivableCompanies 
			when (ThirdPartyPaymentProcessingCompanyRel.ApplyCashAcrossReceivableCompanies)

		ContextPropertyRelExists	
			when (ContextPropertyRel exists)	

		CompanyCustomerRelDiscountAdjustmentReasonNotEntered	
			when (ReceivableCompany entered
			and Customer entered
			and	CompanyCustomerRel.DiscountAdjustmentReason not entered)


		CustomerRepresentativeContactByEmailExists
			default label is untranslatable
			when (CustomerRepresentativeContactEmailExistsRel exists)

		CustomerRepresentativeContactInSessionKeyExists
			restricted
			when (CustomerRepresentativeContactInSessionKeyRel exists)

		DisplayForVerification
			default label is untranslatable
			when (DerivedVerificationCodeRequired)

		RegistrationPasswordsDoNotMatch
			default label is untranslatable
			when (RegistrationPassword entered
			and   RegistrationConfirmPassword entered
			and   RegistrationPassword != RegistrationConfirmPassword)

		EmailAddressEntered
			default label is untranslatable
			when (EmailAddress entered)

		EmailAddressNotEntered
			default label is untranslatable
			when (EmailAddress not entered)

		RegistrationPasswordEntered
			default label is untranslatable
			when (RegistrationPassword entered)

		RegistrationPasswordNotEntered
			default label is untranslatable
			when (RegistrationPassword not entered)

		RegistrationConfirmPasswordEntered
			default label is untranslatable
			when (RegistrationConfirmPassword entered)

		RegistrationConfirmPasswordNotEntered
			default label is untranslatable
			when (RegistrationConfirmPassword not entered)

		MainContactGivenNameEntered
			default label is untranslatable
			when (MainContact.GivenName entered)

		MainContactGivenNameNotEntered
			default label is untranslatable
			when (MainContact.GivenName not entered)

		MainContactFamilyNameEntered
			default label is untranslatable
			when (MainContact.FamilyName entered)

		MainContactFamilyNameNotEntered
			default label is untranslatable
			when (MainContact.FamilyName not entered)

		TelephoneNumberEntered
			default label is untranslatable
			when (TelephoneNumber.SubscriberNumber entered)

		TelephoneNumberNotEntered
			default label is untranslatable
			when (TelephoneNumber.SubscriberNumber not entered)

		CustomerNameEntered
			default label is untranslatable
			when (CustomerName entered)

		CustomerNameNotEntered
			default label is untranslatable
			when (CustomerName not entered)

		TaxIdTypeEntered
			default label is untranslatable
			when (TaxIdGroup.TaxIdType entered)

		TaxIdTypeNotEntered
			default label is untranslatable
			when (TaxIdGroup.TaxIdType not entered)

		TaxIdEntered
			default label is untranslatable
			when (TaxIdGroup.TaxId entered)

		TaxIdNotEntered
			default label is untranslatable
			when (TaxIdGroup.TaxId not entered)

		MailingAddressCounrtyEntered
			default label is untranslatable
			when (MailingAddress.Country entered)

		MailingAddressCountryNotEntered
			default label is untranslatable
			when (MailingAddress.Country not entered)

		MailingAddressEntered
			default label is untranslatable
			when (MailingAddress entered)

		MailingAddressNotEntered
			default label is untranslatable
			when (MailingAddress not entered)

		AcceptTermsEntered
			default label is untranslatable
			when (AcceptTerms = true)

		AcceptTermsNotEntered
			default label is untranslatable
			when (AcceptTerms = false)

		RequiredRegistrationFieldsNotEntered
			restricted
			when (EmailAddressNotEntered
			or	  RegistrationPasswordNotEntered
			or    RegistrationConfirmPasswordNotEntered
			or    RegistrationPasswordsDoNotMatch
			or    MainContactGivenNameNotEntered
			or    MainContactFamilyNameNotEntered
			or    TelephoneNumberNotEntered
			or    CustomerNameNotEntered
			or    TaxIdTypeNotEntered
			or    TaxIdNotEntered
			or    MailingAddressCountryNotEntered
			or    MailingAddressNotEntered
			or    AcceptTermsNotEntered)

		RequiredRegistrationFieldsEntered
			restricted
			when (EmailAddressEntered
			and	  RegistrationPasswordEntered
			and   RegistrationConfirmPasswordEntered
			and   !RegistrationPasswordsDoNotMatch
			and   MainContactGivenNameEntered
			and   MainContactFamilyNameEntered
			and   TelephoneNumberEntered
			and   CustomerNameEntered
			and   TaxIdTypeEntered
			and   TaxIdEntered
			and   MailingAddressCounrtyEntered
			and   MailingAddressEntered
			and   AcceptTermsEntered)

		RequiredExistingRegistrationFieldsNotEntered
			restricted
			when (EmailAddressNotEntered
			or	  RegistrationPasswordNotEntered
			or    RegistrationConfirmPasswordNotEntered
			or    RegistrationPasswordsDoNotMatch
			or    !DerivedEnteredEmailMatchesSessionKey)

		RequiredExistingRegistrationFieldsEntered
			restricted
			when (EmailAddressEntered
			and	  RegistrationPasswordEntered
			and   RegistrationConfirmPasswordEntered
			and   !RegistrationPasswordsDoNotMatch
			and   DerivedEnteredEmailMatchesSessionKey)

		IsAnonymousAndXref
			restricted
			when (IsAnonymous
			and   !BillingRecvExtEntityEnabled)

		IsAnonymousAndExternalEntity
			restricted
			when (IsAnonymous
			and   BillingRecvExtEntityEnabled)

		NeedToCompleteFullRegistration
			restricted
			when (!CustomerRepresentativeContactInSessionKeyExists)

		IsAnonymousAndFullRegistration
			restricted
			when (IsAnonymous
			and   NeedToCompleteFullRegistration)

		IsAnonymousAndCompleteAccountRegistration
			restricted
			when (IsAnonymous
			and   CustomerRepresentativeContactInSessionKeyExists)

		ShowQuestions
			restricted
			when (CustomerGroup.QuestionsExist
			and   IsPrimary)


	Relations

		ParentCustomerRel
			one-to-one relation to CustomerRepresentative
			Field Mapping uses symbolic key
				related.CustomerGroup			= CustomerGroup
				related.CustomerRepresentative	= ParentCustomer

		OldParentCustomerRel
			one-to-one relation to CustomerRepresentative
			Field Mapping uses symbolic key
				related.CustomerGroup			= CustomerGroup
				related.CustomerRepresentative	= old ParentCustomer

		CustomerRepresentativeTaxIdRel
			one-to-many relation to CustomerRepresentative
			Field Mapping uses TaxIdSet
				related.TaxIdGroup.TaxIdType	= TaxIdGroup.TaxIdType
				related.TaxIdGroup.TaxId		= TaxIdGroup.TaxId
			Instance Selection
				where (related.CustomerGroup = CustomerGroup
				and	   related.CustomerRepresentative != CustomerRepresentative)

		CustomerNameRel
			one-to-many relation to Customer
			Field Mapping uses Set4
				related.CustomerGroup 		= CustomerGroup
				related.SearchName			= CustomerName

		CustomerDUNSRel
			one-to-many relation to Customer
			Field Mapping uses Set2
				related.CreditAgencyNumber	= DunAndBradstreetNumber
				related.CustomerGroup 		= CustomerGroup

		CustomerTaxIdRel
			one-to-many relation to Customer
			Field Mapping uses ByTaxID
				related.TaxID				= LocalTaxId
				related.CustomerGroup 		= CustomerGroup

		CustomerAddr1Rel
			one-to-many relation to Customer
			Field Mapping uses ByAddr1
				related.CustomerGroup 								= CustomerGroup
				related.PostalAddress.DeliveryAddress.AddressLine1	= MailingAddress.DeliveryAddress.AddressLine1

		CustomerRepresentativeSuggestedCompanyCustomerRel
			one-to-one relation to CustomerRepresentativeSuggestedCompanyCustomer
			Field Mapping uses symbolic key
				related.CustomerGroup 			= CustomerGroup
				related.CustomerRepresentative	= CustomerRepresentative
				related.Company					= LocalReceivableCompany
				related.Customer				= LocalCustomer

		RequiredQuestions
			one-to-many relation to CustomerGroupQuestion
			Field Mapping uses symbolic key
				related.CustomerGroup		= CustomerGroup
			Instance Selection
				where (related.ResponseRequired
				and	related.Active)

		QuestionWithRequiredAttachmentsRel
			one-to-many relation to CustomerGroupQuestion
			Field Mapping uses symbolic key
				related.CustomerGroup		= CustomerGroup
			Instance Selection
				where (related.AlwaysRequireResponseAttachment
				and	related.Active)

		PrimaryContact
			one-to-one relation to CustomerRepresentativeContact
			Field Mapping uses IsPrimaryContact
				related.CustomerGroup 			= CustomerGroup
				related.CustomerRepresentative	= CustomerRepresentative

		CustomerQuestionsRel is a CustomerGroupQuestion set

		CustomerQuestionResponseRels is a CustomerRepresentativeQuestionResponse set

		CustomerQuestionResponseRequiredRel
			one-to-many relation to CustomerRepresentativeQuestionResponse
			Field Mapping uses part of key
				related.CustomerGroup			= CustomerGroup
				related.CustomerRepresentative	= CustomerRepresentative
			Instance Selection
				where (related.FromRequiredQuestion entered
				and	related.CustomerGroupQuestion.Active)

		CustomerQuestionResponseWithAttachmentRel
			one-to-many relation to CustomerRepresentativeQuestionResponse
			Field Mapping uses part of key
				related.CustomerGroup			= CustomerGroup
				related.CustomerRepresentative	= CustomerRepresentative
			Instance Selection
				where (related.Attachment entered
				and	related.CustomerGroupQuestion.Active)

		CustomerQuestionResponseWithRequiredAttachmentRel
			one-to-many relation to CustomerRepresentativeQuestionResponse
			Field Mapping uses part of key
				related.CustomerGroup			= CustomerGroup
				related.CustomerRepresentative	= CustomerRepresentative
			Instance Selection
				where (related.Attachment entered
				and	related.AttachmentAlwaysRequired)

		CustomerRepresentativeContactActiveRel is a CustomerRepresentativeContact set
			Instance Selection
				where (related.Active)

		CustomerRepresentativeContactInactiveRel is a CustomerRepresentativeContact set
			Instance Selection
				where (!related.Active)

		CustomerPrimaryInvoicePaymentAccessRel	
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "CustomerRepresentativePrimaryContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass		= "BillingReceivablesPortalInvoicePayment_ST"

		CustomerInvoicePaymentAccessRel	
			one-to-one relation to RoleSecurityClass
			Field Mapping uses symbolic key
				related.Role				= "CustomerRepresentativeContact_ST"
				related.DataArea			= parentcontext.dataarea
				related.SecurityClass		= "BillingReceivablesPortalInvoicePayment_ST"

		CustomerPrimaryInvoicePaymentAccessDeletedRel	
			one-to-many relation to RoleSecurityClass
			Field Mapping uses ByRoleAndSecurityClass
				related.Role			 = "CustomerRepresentativePrimaryContact_ST"
				related.DataArea		 = parentcontext.dataarea
				related.SecurityClass	 = "BillingReceivablesPortalInvoicePayment_ST"
			Instance Selection
				include only deleted records

		DeletedCustomerInvoicePaymentAccessRel	
			one-to-many relation to RoleSecurityClass
			Field Mapping uses ByRoleAndSecurityClass
				related.Role			 = "CustomerRepresentativeContact_ST"
				related.DataArea		 = parentcontext.dataarea
				related.SecurityClass	 = "BillingReceivablesPortalInvoicePayment_ST"
			Instance Selection
				include only deleted records


		UnreadCustomerMessagesRel
			one-to-many relation to CustomerRepresentativeContactMessage
			Field Mapping uses symbolic key
				related.CustomerGroup					= CustomerGroup
				related.CustomerRepresentative			= CustomerRepresentative
				related.CustomerRepresentativeContact	= actor.agent(CustomerRepresentativeContact).CustomerRepresentativeContact
			Instance Selection
				where (related.Status.Unread
				and	   related.ReleaseStatus.Released)

		CompanyCustomerRel
			one-to-one relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		= ReceivableCompany
				related.Customer	= Customer

		ReceivableCompanyRel
			one-to-many relation to ReceivableCompany
			Field Mapping uses Set2
				related.CustomerGroupField.CustomerGroup	= CustomerGroup

		ReceivableCompanySpecificCompanyRel	
			one-to-one relation to ReceivableCompany	
			Field Mapping uses Set2	
				related.CustomerGroupField.CustomerGroup	= CustomerGroup	
				related.Company								= ReceivableCompany	

		ThirdPartyPaymentProcessingCompanyRel
			one-to-one relation to ReceivableCompany	
			Field Mapping uses symbolic key
				related.Company								= CustomerGroup.DerivedThirdPartyPaymentProcessingCompany

		AllCompanyCustomerRel
			one-to-many relation to CompanyCustomer
			Field Mapping uses symbolic key
				related.Company		= ReceivableCompanyRel.Company

		GeneralLedgerCompanyRel
			one-to-one relation to GeneralLedgerCompany
			Field Mapping uses symbolic key
				related.Company		= ReceivableCompany

		DuplicateCustomerNameRel
			one-to-many relation to CustomerRepresentative
			Field Mapping uses ByCustomerName
				related.CustomerName	= CustomerName
				related.CustomerGroup	= CustomerGroup
			Instance Selection
				where (related.UniqueID != UniqueID)

		ContextPropertyRel	
			one-to-one relation to ContextProperty	
			Field Mapping uses ByKeyField	
				related.KeyField = "CustomerRepresentative"	
				related.DataArea = parentcontext.dataarea


		CustomerRepresentativeContactEmailExistsRel
			one-to-many relation to CustomerRepresentativeContact
			Field Mapping uses symbolic key
				related.CustomerGroup		= CustomerGroup
			Instance Selection
				where (related.EmailAddress = EmailAddress)

		CustomerRepresentativeContactForRegistrationRel
			one-to-one relation to CustomerRepresentativeContact
			Field Mapping uses symbolic key
				related.CustomerGroup					= CustomerGroup
				related.CustomerRepresentative			= LocalCustomerRepresentative
				related.CustomerRepresentativeContact	= LocalCustomerRepresentativeContact

		CustomerRepresentativeContactInSessionKeyRel
			one-to-one relation to CustomerRepresentativeContact
			Field Mapping uses symbolic key
				related.CustomerGroup					= DerivedCustomerGroupFromSessionKey
				related.CustomerRepresentative			= DerivedCustomerRepresentativeFromSessionKey
				related.CustomerRepresentativeContact	= DerivedCustomerRepresentativeContactFromSessionKey

	Sets
		TaxIdSet
			duplicates
			indexed
			Sort Order
				TaxIdGroup.TaxIdType
				TaxIdGroup.TaxId

		ByCustomerName
			indexed
			Sort Order
				CustomerName
				CustomerGroup
				Customer

		ByCompanyCustomer
			indexed
			Sort Order
				CustomerGroup
				ReceivableCompany
				Customer
				CustomerRepresentative

		ByCustomerRepresentativeStatus
			indexed
			Sort Order
				CustomerGroup
				CustomerRepresentativeStatus
				CustomerRepresentative


	Field Rules
		CustomerName
			if (true)	
				required
					"CompanyNameIsRequired"
			constraint (!DuplicateCustomerNameRel exists)
				"ACustomerHasAlreadyRequestedAccessUsingTheName<CustomerName>"


		ReceivableCompany
			constraint (CustomerGroup = GeneralLedgerCompanyRel.CustomerBusinessGroup)
				"CustomerGroup<CustomerGroup>MustBeSameAsCustomerBusinessGroup<GeneralLedgerCompanyRel.CustomerBusinessGroup>OnGlobalLedgerCompany"

			if (ReceivableCompany changed)
				invoke Update CustomerRepresentativeContact set
					invoked.ReceivableCompany = ReceivableCompany


		Customer
			constraint (CompanyCustomerRel exists)
				"CompanyCustomerDoesNotExist"

			if (Customer changed)
				invoke Update CustomerRepresentativeContact set
					invoked.Customer = Customer


		ParentCustomer
			constraint (ParentCustomer != CustomerRepresentative)
				"ACustomerCannotBeItsOwnParentCustomer"

			constraint (all CustomerRepresentative descendants.CustomerRepresentative != ParentCustomer)
				"Customer<CustomerRepresentative parent.CustomerRepresentative.CustomerName>CannotBeAParentForCustomer<CustomerName>.ItIsAlreadyADescendantOfCustomer<CustomerRepresentative.CustomerName>"

			constraint (instance count of ParentCustomer ancestors < 4)
				"MaximumOfFiveCustomerLevelsIsExceeded"

			if (ParentCustomer changed and ParentCustomer != blank)
				if (OldParentCustomerRel exists)
					for each CustomerRepresentative descendants
						constraint (ParentCustomer.NumberOfAncestors - OldParentCustomerRel.NumberOfAncestors + each.NumberOfAncestors < 4)
							"MoveUnderNewParentCustomerExceedsMaximumOfFiveCustomerLevels"
				else
					for each CustomerRepresentative descendants
						constraint (ParentCustomer.NumberOfAncestors + each.NumberOfAncestors < 4)
							"MoveUnderNewParentCustomerExceedsMaximumOfFiveCustomerLevels"


		AllowPortalApplyCashAcrossReceivableCompanies	
			initial value is DerivedApplyAcrossReceivableCompanies	





			if (AllowPortalApplyCashAcrossReceivableCompanies entered
			and PortalPaymentCompanyApplyCashAcrossReceivableCompanies not entered)	
				confirmation required
					"Warning:_Apply_Cash_Across_Receivable_Companies_is_not_enabled_in_Third_Party_Payment_Processing_Company_<CustomerGroup.DerivedThirdPartyPaymentProcessingCompany>.Continue?"
			if (!ReceivableCompanySpecificCompanyRelApplyCashAcrossReceivableCompanies)	
				constraint (AllowPortalApplyCashAcrossReceivableCompanies)	
					"ReceivableCompanyIsNotFlaggedForApplyCashAcrossReceivableCompanies.CustomerRepresentativeCannotBeFlaggedToAllowPortalApplyCashAcrossReceivableCompanies"	






	Attach Rules
		if (!parentcontext.name = "CustomerRepresentativeSuggestedCompanyCustomer"
		and !parentcontext.name = "CustomerRepContactPreMigrationIssues")
			constraint (Active)
				"CustomerRepresentative<CustomerRepresentative>IsInactive"


	Actions

		Create is a Create Action 
			Field Rules




				LoginName	
					if (!BillingRecvExtEntityEnabled)	
						required	

				Password	
					if (!BillingRecvExtEntityEnabled)	
						required	
							"PasswordIsRequired"	

				ConfirmPassword	
					if (!BillingRecvExtEntityEnabled)	
						required	
							"ConfirmPasswordIsRequired"	
						constraint (RegistrationPassword = RegistrationConfirmPassword)	
							"ConfirmPasswordDoesNotMatchPassword"	

				EmailAddress
					constraint (!CustomerRepresentativeContactEmailExistsRel exists)	
						"EmailAddressAlreadyExistsAsAContactInTheSystem"	

			Entrance Rules	
				constraint (IsValidForActorContextCreateRulesOnly)		

					"CannotCreate_Customer_Representative.CustomerGroup<CustomerGroup>NotValidFor_Actor_Context.Actor<actor>DoesNotHave'Finance_Enterprise_Group'ContextFor_Finance_Enterprise_Group_<CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup>"	

			Action Rules
				Active = true
				AcceptTerms = true
				CreatedInternally = true

			Exit Rules
				CustomerRepresentativeStatus = CustomerRepresentativeStatus.NeedsValidation
				HasBeenValidated = false

				invoke Create CustomerRepresentativeContact
					invoked.CustomerGroup				= CustomerGroup
					invoked.CustomerRepresentative		= this instance.CustomerRepresentative
					if (!BillingRecvExtEntityEnabled)
						invoked.LoginName					= LoginName
						invoked.Password					= Password
						invoked.ConfirmPassword				= ConfirmPassword
					invoked.MainContact					= MainContact
					invoked.EmailAddress				= EmailAddress
					invoked.TelephoneNumber				= TelephoneNumber
					invoked.ReceiveEmailNotification	= true

				invoke FindSuggestedCustomers
					invoked.PrmCustomerGroup			= CustomerGroup
					invoked.PrmCustomerRepresentative	= CustomerRepresentative


		CustomerCreate is a Create Action 
			allow anonymous access
			Field Rules
				AcceptTerms
					required
						"<MustAcceptTermsAndConditionsMessage>"

				LoginName

					if (!BillingRecvExtEntityEnabled)
						required
							"UserNameIsRequired"

				Password
					if (!BillingRecvExtEntityEnabled)

						required
							"PasswordIsRequired"

				ConfirmPassword
					if (!BillingRecvExtEntityEnabled)

						required
							"ConfirmPasswordIsRequired"
						constraint (Password = ConfirmPassword)
							"ConfirmPasswordDoesNotMatchPassword"

				RegistrationPassword	
					if (BillingRecvExtEntityEnabled)
						required
							"PasswordIsRequired"

				RegistrationConfirmPassword	
					if (BillingRecvExtEntityEnabled)
						required
							"ConfirmPasswordIsRequired"
						constraint (RegistrationPassword = RegistrationConfirmPassword)
							"ConfirmPasswordDoesNotMatchPassword"

				MainContact
					required

				TelephoneNumber
					required

				TaxIdGroup
					required

				EmailAddress
					if (true)
						required
							"EmailAddressIsRequired"

				MailingAddress
					required
						"AddressInformationIsRequired"

			Action Rules
				Active = true

				if (BillingRecvExtEntityEnabled)
					LoginName = EmailAddress

			Exit Rules
				CustomerRepresentativeStatus = CustomerRepresentativeStatus.NeedsValidation
				HasBeenValidated = false

				invoke Create CustomerRepresentativeContact
					invoked.CustomerGroup				= CustomerGroup
					invoked.CustomerRepresentative		= this instance.CustomerRepresentative
					invoked.LoginName					= LoginName
					if (!BillingRecvExtEntityEnabled)
						invoked.Password				= Password
						invoked.ConfirmPassword			= ConfirmPassword
					else
						invoked.Password				= RegistrationPassword
						invoked.ConfirmPassword			= RegistrationConfirmPassword
					invoked.MainContact					= MainContact
					invoked.EmailAddress				= EmailAddress
					invoked.TelephoneNumber				= TelephoneNumber
					invoked.ReceiveEmailNotification	= true
					invoked.TransientUserIdentity		= TransientUserIdentity
					invoked.TransientUserVerificationId	= TransientUserVerificationId
					invoked.TransientVerificationCode	= TransientVerificationCode
					invoked.TransientUserRegistered		= TransientUserRegistered

				invoke FindSuggestedCustomers
					invoked.PrmCustomerGroup			 = CustomerGroup
					invoked.PrmCustomerRepresentative	 = CustomerRepresentative



		CustomerCreateImport is an Import Action
			allow anonymous access

			Action Rules
				FieldToConvert	= EmailAddress
				LoginName		= LowerCaseEmailAddress
				EmailAddress	= LowerCaseEmailAddress

				if (DerivedVerificationCodeRequired)
					constraint (TransientVerificationCode entered)
						"VerificationCodeIsRequired"

				if (CustomerRepresentativeContactInSessionKeyExists
				or  CustomerRepresentativeContactByEmailExists)
					constraint (EmailAddress entered)
						"EmailAddressIsRequired"
					constraint (RegistrationPassword entered)
						"PasswordIsRequired"
					constraint (RegistrationConfirmPassword entered)
						"ConfirmPasswordIsRequired"
					constraint (RegistrationPassword = RegistrationConfirmPassword)
						"ConfirmPasswordDoesNotMatchPassword"

				if (CustomerRepresentativeContactInSessionKeyExists)
					constraint (EmailAddress = CustomerRepresentativeContactInSessionKeyRel.EmailAddress)
						"EnteredEmailAddressDoesNotMatchWhatIsOnFileInTheSystem"

				if (CustomerRepresentativeContactByEmailExists)
					CustomerRepresentative				= first CustomerRepresentativeContactEmailExistsRel.CustomerRepresentative
					LoginName							= first CustomerRepresentativeContactEmailExistsRel.EmailAddress
					LocalCustomerRepresentative			= first CustomerRepresentativeContactEmailExistsRel.CustomerRepresentative
					LocalCustomerRepresentativeContact	= first CustomerRepresentativeContactEmailExistsRel.CustomerRepresentativeContact
					invoke RegisterCustomerRepresentativeContact CustomerRepresentativeContactForRegistrationRel.CustomerRepresentativeContact
						invoked.EmailAddress				= EmailAddress
						invoked.LoginName					= LoginName
						invoked.Password					= RegistrationPassword
						invoked.MainContact					= CustomerRepresentativeContactForRegistrationRel.MainContact
						invoked.TelephoneNumber				= CustomerRepresentativeContactForRegistrationRel.TelephoneNumber
						invoked.TransientUserIdentity		= TransientUserIdentity
						invoked.TransientUserVerificationId	= TransientUserVerificationId
						invoked.TransientVerificationCode	= TransientVerificationCode
						invoked.TransientUserRegistered		= TransientUserRegistered

					LoginName = CustomerRepresentativeContactForRegistrationRel.LoginName
				else
					invoke CustomerCreate this instance


		StatusUpdate is an Update Action
			restricted


		Update is an Update Action 
			valid when (IsUpdatable)
			Field Rules




			Action Rules
				if (LinkedToCompanyCustomer)	
					if (CustomerGroup.MainThirdPartyPaymentProcessingSetupsComplete)	
						constraint (CompanyCustomerRel.DiscountAdjustmentReason entered)
							"Customer_Group<CustomerGroup>IsDefinedFor_Third_Party_Payment_Processing._Customer_Representative<CustomerRepresentative>IsLinkedToCompany<ReceivableCompany>Customer<Customer>,WhichDoesNotHaveA_Discount_Adjustment_Reason_CodeDefined._PleaseDefine_Discount_Adjustment_Reason_CodeIn_Company_Customer."	

				AcceptTerms = true

			Exit Rules
				if (MatchCriteriaFields changed)
					invoke FindSuggestedCustomers
						invoked.PrmCustomerGroup			 = CustomerGroup
						invoked.PrmCustomerRepresentative	 = CustomerRepresentative


		CustomerUpdate is an Update Action 
			Field Rules

				MailingAddress
					required
						"AddressInformationRequired"

				AcceptTerms
					required
						"<MustAcceptTermsAndConditionsMessage>"

			Exit Rules
				if (MatchCriteriaFields changed)
					invoke FindSuggestedCustomers
						invoked.PrmCustomerGroup			 = CustomerGroup
						invoked.PrmCustomerRepresentative	 = CustomerRepresentative


		QuickUpdate is an Update Action
			restricted
			bypass field rules

		Delete is a Delete Action
			Action Rules
				DeleteCustomerRepresentative = true
				invoke DeleteActorContextForEachDeletedCustomerRepresentativeContact CustomerRepresentativeContactActiveRel
				invoke DeleteActorContextForEachDeletedCustomerRepresentativeContact CustomerRepresentativeContactInactiveRel


		ActivateCustomer is an Instance Action
			valid when (ActivateCustomerValid)

			Action Rules
				Active = true
				initialize InactiveTimeStamp
				for each CustomerRepresentativeContactInactiveRel
					invoke ActivateCustomerContact each
					invoke UpdateLandingPageForActive each


		InactivateCustomer is an Instance Action
			valid when (Active)

			subject is CustomerRepresentativeInactivate
			reason code required
			confirmation required
				"InactivatingThis_\Customer_\RepresentativeWillPreventAccessToThe_\Billing&ReceivablesPortal;DoYouWantToContinue?"	

			Action Rules
				Active = false
				InactiveTimeStamp = current timestamp
				for each CustomerRepresentativeContactActiveRel
					invoke InactivateCustomerContact each
					invoke UpdateLandingPageForInactive each


		UpdateCompanyCustomer is an Instance Action
			restricted
			Parameters
				PrmCompany	is like Company
				PrmCustomer	is like Customer
				PrmAllowPortalApplyCashAcrossReceivableCompanies is Boolean	

			Action Rules
				ReceivableCompany = PrmCompany
				Customer = PrmCustomer
				if ReceivableCompany.ApplyCashAcrossReceivableCompanies	
					PrmAllowPortalApplyCashAcrossReceivableCompanies = true	

				if (LinkedToCompanyCustomer)	
					if (CustomerGroup.MainThirdPartyPaymentProcessingSetupsComplete)	
						constraint (CompanyCustomerRel.DiscountAdjustmentReason entered)
							"Customer_Group<CustomerGroup>IsDefinedFor_Third_Party_Payment_Processing._Customer_Representative<CustomerRepresentative>IsLinkedToCompany<ReceivableCompany>Customer<Customer>,WhichDoesNotHaveA_Discount_Adjustment_Reason_CodeDefined._PleaseDefine_Discount_Adjustment_Reason_CodeIn_Company_Customer."	

				invoke Update CustomerRepresentativeContact set
					invoked.ReceivableCompany	 = PrmCompany
					invoked.Customer			 = PrmCustomer
				invoke Update CustomerRepresentative	
					AllowPortalApplyCashAcrossReceivableCompanies=PrmAllowPortalApplyCashAcrossReceivableCompanies	


		SuggestCompanyCustomers is an Instance Action
			valid when (CustomerRepresentativeStatus.NeedsValidation)
			Action Rules
				invoke FindSuggestedCustomers
					invoked.PrmCustomerGroup			 = CustomerGroup
					invoked.PrmCustomerRepresentative	 = CustomerRepresentative


		FindSuggestedCustomers is a Set Action
			restricted
			run in background
			Local Fields
				LocalCustomerSearchName			is like SearchName	
					holds pii
				LocalCustomerCreditAgencyNumber	is like DunnNumber
				LocalCustomerTaxID				is like TaxID	
					holds pii
				LocalPostalAddress				is a PostalAddressV2	
					holds pii

			Parameters
				PrmCustomerGroup				is a CustomerGroup
				PrmCustomerRepresentative		is a CustomerRepresentative

			Sort Order
				CustomerGroup
				CustomerRepresentativeStatus
				CustomerRepresentative

			Instance Selection
				where (CustomerGroup = PrmCustomerGroup
				and	CustomerRepresentativeStatus.NeedsValidation
				and	  (!PrmCustomerRepresentative entered
				or	   CustomerRepresentative = PrmCustomerRepresentative))

			Action Rules
				Instance Rules
					invoke Purge CustomerRepresentativeSuggestedCompanyCustomer set

					for each CustomerNameRel
						LocalCustomerSearchName				 = each.SearchName
						LocalCustomerCreditAgencyNumber		 = each.CreditAgencyNumber
						LocalCustomerTaxID					 = each.TaxID
						LocalPostalAddress					 = each.PostalAddress
						for each each.CompanyCustomerRel
							LocalReceivableCompany			 = each.Company
							LocalCustomer 					 = each.Customer
							invoke Update CustomerRepresentativeSuggestedCompanyCustomerRel
								invoked.SearchName			 = LocalCustomerSearchName
								invoked.CreditAgencyNumber	 = LocalCustomerCreditAgencyNumber
								invoked.TaxID				 = LocalCustomerTaxID
								invoked.PostalAddress		 = LocalPostalAddress
								invoked.NameMatches			 = true

					initialize LocalCustomerSearchName
					initialize LocalCustomerCreditAgencyNumber
					initialize LocalCustomerTaxID
					initialize LocalPostalAddress
					for each CustomerDUNSRel
						LocalCustomerSearchName				 = each.SearchName
						LocalCustomerCreditAgencyNumber		 = each.CreditAgencyNumber
						LocalCustomerTaxID					 = each.TaxID
						LocalPostalAddress					 = each.PostalAddress
						for each each.CompanyCustomerRel
							LocalReceivableCompany			 = each.Company
							LocalCustomer					 = each.Customer
							invoke Update CustomerRepresentativeSuggestedCompanyCustomerRel
								invoked.SearchName			 = LocalCustomerSearchName
								invoked.CreditAgencyNumber	 = LocalCustomerCreditAgencyNumber
								invoked.TaxID				 = LocalCustomerTaxID
								invoked.PostalAddress		 = LocalPostalAddress
								invoked.DUNSMatches			 = true

					initialize LocalCustomerSearchName
					initialize LocalCustomerCreditAgencyNumber
					initialize LocalCustomerTaxID
					initialize LocalPostalAddress
					LocalTaxId = TaxIdGroup.TaxId
					for each CustomerTaxIdRel
						LocalCustomerSearchName 			 = each.SearchName
						LocalCustomerCreditAgencyNumber		 = each.CreditAgencyNumber
						LocalCustomerTaxID					 = each.TaxID
						LocalPostalAddress					 = each.PostalAddress
						for each each.CompanyCustomerRel
							LocalReceivableCompany			 = each.Company
							LocalCustomer					 = each.Customer
							invoke Update CustomerRepresentativeSuggestedCompanyCustomerRel
								invoked.SearchName			 = LocalCustomerSearchName
								invoked.CreditAgencyNumber	 = LocalCustomerCreditAgencyNumber
								invoked.TaxID	 			 = LocalCustomerTaxID
								invoked.PostalAddress		 = LocalPostalAddress
								invoked.TaxIdMatches		 = true

					initialize LocalCustomerSearchName
					initialize LocalCustomerCreditAgencyNumber
					initialize LocalCustomerTaxID
					initialize LocalPostalAddress
					LocalTaxId = TaxIdGroup.TaxId
					LocalTaxId -= "-"
					LocalTaxId -= " "
					for each CustomerTaxIdRel
						LocalCustomerSearchName				 = each.SearchName
						LocalCustomerCreditAgencyNumber		 = each.CreditAgencyNumber
						LocalCustomerTaxID					 = each.TaxID
						LocalPostalAddress					 = each.PostalAddress
						for each each.CompanyCustomerRel
							LocalReceivableCompany			 = each.Company
							LocalCustomer					 = each.Customer
							invoke Update CustomerRepresentativeSuggestedCompanyCustomerRel
								invoked.SearchName			 = LocalCustomerSearchName
								invoked.CreditAgencyNumber	 = LocalCustomerCreditAgencyNumber
								invoked.TaxID				 = LocalCustomerTaxID
								invoked.PostalAddress		 = LocalPostalAddress
								invoked.TaxIdMatches		 = true

					initialize LocalCustomerSearchName
					initialize LocalCustomerCreditAgencyNumber
					initialize LocalCustomerTaxID
					initialize LocalPostalAddress
					for each CustomerAddr1Rel
						LocalCustomerSearchName				 = each.SearchName
						LocalCustomerCreditAgencyNumber		 = each.CreditAgencyNumber
						LocalCustomerTaxID					 = each.TaxID
						LocalPostalAddress					 = each.PostalAddress
						for each each.CompanyCustomerRel
							LocalReceivableCompany			 = each.Company
							LocalCustomer					 = each.Customer
							invoke Update CustomerRepresentativeSuggestedCompanyCustomerRel
								invoked.SearchName			 = LocalCustomerSearchName
								invoked.CreditAgencyNumber	 = LocalCustomerCreditAgencyNumber
								invoked.TaxID				 = LocalCustomerTaxID
								invoked.PostalAddress		 = LocalPostalAddress
								invoked.Addr1Matches		 = true



		Anonymize is an Instance Action	
			restricted
			Action Rules
				CustomerName	= CustomerRepresentative

				invoke Anonymize CustomerRepresentativeContact set

				initialize TaxIdGroup
				initialize DunAndBradstreetNumber
				initialize MailingAddress

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup
					invoked.Status						= 1
					invoked.AffectedBusinessClass		= "AR5"
					invoked.CustomerGroup				= CustomerGroup
					invoked.CustomerRepresentative		= CustomerRepresentative



		PurgeAuditLog is an Instance Action	
			restricted
			Action Rules
				invoke PurgeAuditLog CustomerRepresentativeContact set

				invoke purge audit log entries

			Exit Rules
				invoke Create AnonymizeLog
					invoked.FinanceEnterpriseGroup		= CustomerGroup.CustomerBusinessGroup.FinanceEnterpriseGroup
					invoked.Status						= 2
					invoked.AffectedBusinessClass		= "AR5"
					invoked.CustomerGroup				= CustomerGroup
					invoked.CustomerRepresentative		= CustomerRepresentative


		CreateCustomerRepresentativeContextProperty is an Instance Action	
			valid when (!ContextPropertyRelExists)
			Action Rules
				if (!ContextPropertyRelExists)	
					invoke Create ContextPropertyRel































	StateCycles

		CustomerRepresentativeLifeCycle is a StateCycle
			state field is CustomerRepresentativeStatus

			NeedsValidation is a State
				Reject is an Instance Action
					subject is CustomerRepresentativeReject
					reason code required
					Action Rules
						Active = false
						InactiveTimeStamp = current timestamp
						for each CustomerRepresentativeContactActiveRel
							invoke InactivateCustomerContact each
							invoke UpdateLandingPageForInactive each
						make transition to Rejected


				Validate is an Instance Action
					Entrance Rules

						if (CustomerGroup.MainThirdPartyPaymentProcessingSetupsComplete)	
							constraint (CompanyCustomerRel.DiscountAdjustmentReason entered)

								"Customer_Group<CustomerGroup>IsDefinedFor_Third_Party_Payment_Processing._Customer_Representative<CustomerRepresentative>IsLinkedToCompany<ReceivableCompany>Customer<Customer>,WhichDoesNotHaveA_Discount_Adjustment_Reason_CodeDefined._PleaseDefine_Discount_Adjustment_Reason_CodeIn_Company_Customer."	
							constraint (CustomerGroup.AnyCustomerRepresentativeActiveCompanyCustomerWithoutDiscountAdjustmentReasonRelNotExists)	
								"Customer_Group<CustomerGroup>IsDefinedFor_Third_Party_Payment_Processing._A_Customer_Representative<CustomerGroup.first CustomerRepresentativeActiveCompanyCustomerWithoutDiscountAdjustmentReasonRel.CustomerRepresentative>IsLinkedTo_Company<CustomerGroup.first CustomerRepresentativeActiveCompanyCustomerWithoutDiscountAdjustmentReasonRel.ReceivableCompany>_Customer<CustomerGroup.first CustomerRepresentativeActiveCompanyCustomerWithoutDiscountAdjustmentReasonRel.Customer>,WhichDoesNotHaveA_Discount_Adjustment_Reason_CodeDefined._PleaseDefine_Discount_Adjustment_Reason_CodeIn_Company_Customer."	
						confirmation required
							"ValidationWillEmailTheCustomerAndAllowThemToAccessThe_\Billing&ReceivablesPortal;DoYouWantToContinue?"	

					Action Rules
						constraint (FullyRegistered)
							"CannotValidateUntilRegistrationStatusIsCompleteForAllActiveCustomerRepresentativeContacts-SearchCustomerContactsListForContactsWhereRegistrationStatusIsNotComplete"
						constraint (ReceivableCompany entered
						and			Customer entered)
							"MustLinkTheCustomerRepresentativeToACompanyCustomerToActivate"
						HasBeenValidated = true
						make transition to Validated

					Exit Rules
						if (!CreatedInternally
						or (CreatedInternally
						and CustomerGroup.SendForInternallyCreatedCustomer))
							for each CustomerRepresentativeContact set
								if (each.EmailAddress entered
								and	each.ReceiveEmailNotification)
									invoke SendValidateEmail each
								if (CustomerGroup.MainThirdPartyPaymentProcessingSetupsComplete)	
									invoke CreateActorContextForEachNewCustomerRepresentativeContact each	

						if (CustomerGroup.CustomerPrimaryInvoicePaymentAccess = true	
						and (!CustomerPrimaryInvoicePaymentAccessRel exists
						or	  CustomerPrimaryInvoicePaymentAccessDeletedRel exists))
							invoke Create RoleSecurityClass
								invoked.Role				= "CustomerRepresentativePrimaryContact_ST"
								invoked.DataArea			= parentcontext.dataarea
								invoked.SecurityClass		= "BillingReceivablesPortalInvoicePayment_ST"

						if (CustomerGroup.CustomerInvoicePaymentAccess = true	
						and (!CustomerInvoicePaymentAccessRel exists
						or	  DeletedCustomerInvoicePaymentAccessRel exists))
							invoke Create RoleSecurityClass
								invoked.Role				= "CustomerRepresentativeContact_ST"
								invoked.DataArea			= parentcontext.dataarea
								invoked.SecurityClass		= "BillingReceivablesPortalInvoicePayment_ST"

						if (CustomerGroup.CustomerPrimaryInvoicePaymentAccess = false	
						and CustomerPrimaryInvoicePaymentAccessRel exists)
							invoke Delete CustomerPrimaryInvoicePaymentAccessRel

						if (CustomerGroup.CustomerInvoicePaymentAccess = false	
						and CustomerInvoicePaymentAccessRel exists)
							invoke Delete CustomerInvoicePaymentAccessRel


			Validated is a State

			Rejected is a State
				ReinstateCustomer is an Instance Action
					valid when (!Active)
					subject is CustomerRepresentativeReinstate
					reason code required
					Action Rules
						Active = true
						initialize InactiveTimeStamp
						for each CustomerRepresentativeContactInactiveRel
							invoke ActivateCustomerContact each
							invoke UpdateLandingPageForActive each
						make transition to NeedsValidation


