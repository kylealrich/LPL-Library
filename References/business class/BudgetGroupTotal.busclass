BudgetGroupTotal is a BusinessClass
	owned by GeneralLedger
	prefix is BUDGT   
   
    Ontology
    	symbolic key is BudgetGroupTotal

    Patterns
    	implements DynamicCreation
 		disable Auditing 
 		disable EffectiveDated

    Persistent Fields
        Amount                  is a TotalAmount

    Transient Fields
		IsSetAmounts			is Boolean
		BusinessClassName		is Alpha 100
		EditContext				is Alpha 256
		IncrementAmount			is like InternationalAmount
		PreviousAmount			is like TotalAmount
		NoLog					is Boolean
					
	Local Fields
		LocalYearStartJulian	is Alpha size 7
		PreviousIndex			is like BudgetGroupTotalLog
		CurrentTime				is TimeStamp
		LocalCubeObligationAmount	 is like TotalAmount
		LocalUREAmount				 is like TotalAmount				
		LocalUREOnChartAccount		 is a GeneralLedgerChartAccount		
		LocalReverseCommitmentAmount is Boolean							
		LocalReadCubeObligation		 is Boolean
	Derived Fields
		CurrencyAmount is a DerivedField
			type is like TotalAmount
				precision is BudgetGroup.CurrencyDecimals
			return Amount
		YearToDate is a MessageField
			"YTD"
		LifeToDate is a MessageField
			"LTD"
		YTD is a DerivedField
			type is like TotalAmount
				precision is BudgetGroup.CurrencyDecimals
			LocalYearStartJulian	= first BudgetCalendarYearsContainingLocalJulianDateRel.GeneralLedgerCalendarPeriod.StartDateJulian
			return sum YearToDateBudgetTotalsRel.Amount
		LTD is a DerivedField
			type is like TotalAmount
				precision is BudgetGroup.CurrencyDecimals
			return sum LifeToDateBudgetTotalsRel.Amount
		

		DerivedURETotalAmount is a DerivedField
			type is like TotalAmount
				precision is BudgetGroup.CurrencyDecimals
			restricted
			if (not LocalReadCubeObligation
			and BudgetTemplate.UREInBudgetCharAccount)
				LocalReverseCommitmentAmount = true
				LocalUREOnChartAccount = BudgetTemplate.DerivedUREOnChartAccount
				if (BudgetTemplate.UseCurrency.EntityFunctional)
					LocalUREAmount = TemplateRel.NetFunctionalAmount
				else
				if (BudgetTemplate.UseCurrency.Project)
					LocalUREAmount = TemplateRel.NetProjectAmount
				else
				if (BudgetTemplate.UseCurrency.Report1)
					LocalUREAmount = TemplateRel.NetReportAmount1
				else
				if (BudgetTemplate.UseCurrency.Report2)
					LocalUREAmount = TemplateRel.NetReportAmount2
				else
				if (BudgetTemplate.UseCurrency.Report3)
					LocalUREAmount = TemplateRel.NetReportAmount3
				else
				if (BudgetTemplate.UseCurrency.Report4)
					LocalUREAmount = TemplateRel.NetReportAmount4
				else
				if (BudgetTemplate.UseCurrency.Report5)
					LocalUREAmount = TemplateRel.NetReportAmount5
			
				LocalReadCubeObligation = true
			return LocalUREAmount


		DerivedCubeObligationAmount is a DerivedField
			type is like TotalAmount
				precision is BudgetGroup.CurrencyDecimals
			restricted
			if (not LocalReadCubeObligation)
				if (BudgetTemplate.UseCurrency.EntityFunctional)
					LocalCubeObligationAmount = TemplateRel.NetFunctionalAmount
				else
				if (BudgetTemplate.UseCurrency.Project)
					LocalCubeObligationAmount = TemplateRel.NetProjectAmount
				else
				if (BudgetTemplate.UseCurrency.Report1)
					LocalCubeObligationAmount = TemplateRel.NetReportAmount1
				else
				if (BudgetTemplate.UseCurrency.Report2)
					LocalCubeObligationAmount = TemplateRel.NetReportAmount2
				else
				if (BudgetTemplate.UseCurrency.Report3)
					LocalCubeObligationAmount = TemplateRel.NetReportAmount3
				else
				if (BudgetTemplate.UseCurrency.Report4)
					LocalCubeObligationAmount = TemplateRel.NetReportAmount4
				else
				if (BudgetTemplate.UseCurrency.Report5)
					LocalCubeObligationAmount = TemplateRel.NetReportAmount5

				LocalReadCubeObligation = true

			return LocalCubeObligationAmount - DerivedURETotalAmount			

		MatrixMap is a DerivedField
			type is LPLText
			restricted
			if (BudgetGroup.AccountingEntity entered)
				MatrixMap += "related.AccountingEntity = BudgetGroup.AccountingEntity\n"
			else 
				MatrixMap += "related.AccountingEntity = Scenario.Basis.AccountingEntityTopNode\n"
			if (BudgetGroup.AccountingUnit entered)
				MatrixMap += "related.GeneralLedgerTotal.AccountingUnit = BudgetGroup.AccountingUnit\n"
			else
				if (FinanceEnterpriseGroup.AccountingUnitSelected and !BudgetTemplate.AllowBlankAccountingUnit)
					MatrixMap += "related.GeneralLedgerTotal.AccountingUnit = Scenario.Basis.AccountingUnitStructure.AccountingUnitTopNodeGroup.DimensionNode\n"
			if (BudgetGroup.GeneralLedgerChartAccount entered)
					MatrixMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = BudgetGroup.GeneralLedgerChartAccount\n"
			else


			if (LocalReverseCommitmentAmount)
				MatrixMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = LocalUREOnChartAccount\n"
			else
				MatrixMap += "related.GeneralLedgerTotal.GeneralLedgerChartAccount = Scenario.Basis.ReportingChart.ChartAccountNode\n"
			if (BudgetGroup.Project entered)
				MatrixMap += "related.GeneralLedgerTotal.Project = BudgetGroup.Project\n"
			else
				if (FinanceEnterpriseGroup.ProjectEntry and !BudgetTemplate.AllowBlankProject)
					MatrixMap += "related.GeneralLedgerTotal.Project = Scenario.Basis.ProjectStructure.ProjectNode\n"
			if (BudgetGroup.FinanceDimension1 entered)
				MatrixMap += "related.FinanceDimension1 = BudgetGroup.FinanceDimension1\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension1Entry and !BudgetTemplate.AllowBlankDimension1)
					MatrixMap += "related.FinanceDimension1 = Scenario.Basis.FinanceDimension1Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension2 entered)
				MatrixMap += "related.FinanceDimension2 = BudgetGroup.FinanceDimension2\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension2Entry and !BudgetTemplate.AllowBlankDimension2)
					MatrixMap += "related.FinanceDimension2 = Scenario.Basis.FinanceDimension2Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension3 entered)
				MatrixMap += "related.FinanceDimension3 = BudgetGroup.FinanceDimension3\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension3Entry and !BudgetTemplate.AllowBlankDimension3)
					MatrixMap += "related.FinanceDimension3 = Scenario.Basis.FinanceDimension3Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension4 entered)
				MatrixMap += "related.FinanceDimension4 = BudgetGroup.FinanceDimension4\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension4Entry and !BudgetTemplate.AllowBlankDimension4)
					MatrixMap += "related.FinanceDimension4 = Scenario.Basis.FinanceDimension4Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension5 entered)
				MatrixMap += "related.FinanceDimension5 = BudgetGroup.FinanceDimension5\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension5Entry and !BudgetTemplate.AllowBlankDimension5)
					MatrixMap += "related.FinanceDimension5 = Scenario.Basis.FinanceDimension5Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension6 entered)
				MatrixMap += "related.FinanceDimension6 = BudgetGroup.FinanceDimension6\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension6Entry and !BudgetTemplate.AllowBlankDimension6)
					MatrixMap += "related.FinanceDimension6 = Scenario.Basis.FinanceDimension6Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension7 entered)
				MatrixMap += "related.FinanceDimension7 = BudgetGroup.FinanceDimension7\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension7Entry and !BudgetTemplate.AllowBlankDimension7)
					MatrixMap += "related.FinanceDimension7 = Scenario.Basis.FinanceDimension7Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension8 entered)
				MatrixMap += "related.FinanceDimension8 = BudgetGroup.FinanceDimension8\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension8Entry and !BudgetTemplate.AllowBlankDimension8)
					MatrixMap += "related.FinanceDimension8 = Scenario.Basis.FinanceDimension8Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension9 entered)
				MatrixMap += "related.FinanceDimension9 = BudgetGroup.FinanceDimension9\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension9Entry and !BudgetTemplate.AllowBlankDimension9)
					MatrixMap += "related.FinanceDimension9 = Scenario.Basis.FinanceDimension9Structure.DimensionNode\n"
			if (BudgetGroup.FinanceDimension10 entered)
				MatrixMap += "related.FinanceDimension10 = BudgetGroup.FinanceDimension10\n"
			else
				if (FinanceEnterpriseGroup.FinanceDimension10Entry and !BudgetTemplate.AllowBlankDimension10)
					MatrixMap += "related.FinanceDimension10 = Scenario.Basis.FinanceDimension10Structure.DimensionNode\n"

	Conditions
		HasLogs
			when (LogsDescendingRel exists)
			
		SecurityGroupAllowsAccess
            when (BudgetGroup.AccountingEntity not entered
            or   (BudgetGroup.AccountingEntity entered 
            and   BudgetGroup.AccountingEntity.AccountingEntitySecurityGroupAllowsAccess))
		DisplayLTD
			when (BudgetTemplate.PeriodToDate.LifeToDate
			or BudgetTemplate.PeriodToDate.Total)						
	Relations
		BudgetCalendarYearsContainingLocalJulianDateRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Scenario.Basis.GeneralLedgerCalendar.TopNode
				related.PeriodType					= 1 
				related.EndDateJulian				>= GeneralLedgerCalendarPeriod.EndDateJulian
			Instance Selection
				where (related.StartDateJulian		<= GeneralLedgerCalendarPeriod.EndDateJulian)
		YearToDateBudgetTotalsRel
			one-to-many relation to BudgetGroupTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.Scenario	 				= Scenario
				related.BudgetTemplate 				= BudgetTemplate
				related.BudgetGroup 				= BudgetGroup
				related.GeneralLedgerCalendarPeriod	= YearToDatePeriodsRel.GeneralLedgerCalendarPeriod
		YearToDatePeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Scenario.Basis.GeneralLedgerCalendar.TopNode
				related.PeriodType		 			= BudgetTemplate.BudgetPeriodType
				related.EndDateJulian 				<= GeneralLedgerCalendarPeriod.EndDateJulian
			Instance Selection
				where (related.StartDateJulian 		>= LocalYearStartJulian)
		LifeToDateBudgetTotalsRel
			one-to-many relation to BudgetGroupTotal
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.Scenario	 				= Scenario
				related.BudgetTemplate 				= BudgetTemplate
				related.BudgetGroup 				= BudgetGroup
				related.GeneralLedgerCalendarPeriod	= LifeToDatePeriodsRel.GeneralLedgerCalendarPeriod
		LifeToDatePeriodsRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses ByTopNodeTypeAndJulianDates
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.TopNode		 				= Scenario.Basis.GeneralLedgerCalendar.TopNode
				related.PeriodType		 			= BudgetTemplate.BudgetPeriodType
				related.EndDateJulian 				<= GeneralLedgerCalendarPeriod.EndDateJulian
		BudgetGroupTotalLogRel is a BudgetGroupTotalLog set
		LogsDescendingRel
			one-to-many relation to BudgetGroupTotalLog
			Field Mapping uses ByTimeDescending
				related.FinanceEnterpriseGroup 		= FinanceEnterpriseGroup
				related.Scenario	 				= Scenario
				related.BudgetTemplate 				= BudgetTemplate
				related.BudgetGroup 				= BudgetGroup
				related.GeneralLedgerCalendarPeriod	= GeneralLedgerCalendarPeriod












	Sets

		ByPeriod
			Sort Order
				FinanceEnterpriseGroup
				Scenario
				BudgetTemplate
				BudgetGroup
				GeneralLedgerCalendarPeriod
							
	Field Rules
					
	Attach Rules
				
	Rule Blocks

    Actions
	
    	Create is a Create Action
    		restricted

			Exit Rules
				CurrentTime							= current timestamp

    			if (BudgetTemplate.LogBudgetTotals
    			and !NoLog)


					invoke Create BudgetGroupTotalLog
						invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
						invoked.Scenario			 	= Scenario
						invoked.BudgetTemplate		 	= BudgetTemplate
						invoked.BudgetGroup			 	= BudgetGroup
						invoked.GeneralLedgerCalendarPeriod	= GeneralLedgerCalendarPeriod
						invoked.LogTimeStamp			= CurrentTime
						invoked.BusinessClassName		= BusinessClassName
						invoked.EditContext				= EditContext
						invoked.PreviousAmount			= PreviousAmount
						invoked.Amount					= Amount
						invoked.IncrementAmount			= IncrementAmount

		Update is an Update Action
			restricted			


			Exit Rules
				CurrentTime								= current timestamp

    			if (BudgetTemplate.LogBudgetTotals
    			and !NoLog) 
					invoke Create BudgetGroupTotalLog
						invoked.FinanceEnterpriseGroup 	= FinanceEnterpriseGroup
						invoked.Scenario			 	= Scenario
						invoked.BudgetTemplate		 	= BudgetTemplate
						invoked.BudgetGroup			 	= BudgetGroup
						invoked.GeneralLedgerCalendarPeriod	= GeneralLedgerCalendarPeriod
						invoked.LogTimeStamp			= CurrentTime
						invoked.BusinessClassName		= BusinessClassName
						invoked.EditContext				= EditContext
						invoked.PreviousAmount			= PreviousAmount
						invoked.Amount					= Amount
						invoked.IncrementAmount			= IncrementAmount

		Delete is a Delete Action
			restricted
			
		PurgeGroupTotalForTemplate is a Set Action
			restricted
			default label is untranslatable
			disable checkpoint
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmScenario						is a Scenario
					default label is "Scenario"
				PrmBudgetTemplate				is a BudgetTemplate
					default label is "Template"
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup
				and    Scenario					= PrmScenario
				and    BudgetTemplate			= PrmBudgetTemplate)
			Action Rules
				Instance Rules
					invoke Purge BudgetGroupTotal
		
		Purge is a Purge Action
			restricted
			bypass relational integrity rules 					

		GenerateBudgetGroupObligationVariance is a Set Action
			restricted
			default label is untranslatable
			Parameters
				PrmFinanceEnterpriseGroup is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmBudgetScenario is a Scenario
					default label is "Scenario"
				PrmBudgetTemplate is a BudgetTemplate
					default label is "BudgetTemplate"
				PrmBudgetGroupObligationVarianceRun is a BudgetGroupObligationVarianceRun
					default label is "BudgetObligationAmountVarianceRun"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmBudgetScenario
					required
				PrmBudgetTemplate
					required
				PrmBudgetGroupObligationVarianceRun
					required
			Local Fields
				LocalAsyncId			is an AsyncActionRequest
			Instance Selection
				where (FinanceEnterpriseGroup	= PrmFinanceEnterpriseGroup 
				and    Scenario 			  	= PrmBudgetScenario
				and    BudgetTemplate 			= PrmBudgetTemplate)
			Action Rules
				Instance Rules			
					invoke Create BudgetGroupObligationVariance
						invoked.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
						invoked.BudgetGroupObligationVarianceRun	= PrmBudgetGroupObligationVarianceRun
						invoked.BudgetGroupObligationVariance.BudgetGroup					= BudgetGroup
						invoked.BudgetGroupObligationVariance.GeneralLedgerCalendarPeriod 	= GeneralLedgerCalendarPeriod
						invoked.AccountingEntity					= BudgetGroup.AccountingEntity
        				invoked.AccountingUnit						= BudgetGroup.AccountingUnit
        				invoked.GeneralLedgerChartAccount			= BudgetGroup.GeneralLedgerChartAccount
        				invoked.Project    							= BudgetGroup.Project
        				invoked.FinanceDimension1					= BudgetGroup.FinanceDimension1
        				invoked.FinanceDimension2					= BudgetGroup.FinanceDimension2
        				invoked.FinanceDimension3					= BudgetGroup.FinanceDimension3
        				invoked.FinanceDimension4					= BudgetGroup.FinanceDimension4
        				invoked.FinanceDimension5					= BudgetGroup.FinanceDimension5
        				invoked.FinanceDimension6					= BudgetGroup.FinanceDimension6
        				invoked.FinanceDimension7					= BudgetGroup.FinanceDimension7
        				invoked.FinanceDimension8					= BudgetGroup.FinanceDimension8
        				invoked.FinanceDimension9					= BudgetGroup.FinanceDimension9
        				invoked.FinanceDimension10 					= BudgetGroup.FinanceDimension10
						invoked.LocalObligationAmount	 			= Amount						
						invoked.CubeObligationAmount            	= DerivedCubeObligationAmount				
						
	Cube Relations
		TemplateRel
			cell relation to GeneralLedgerTotal
			dynamic mapping is MatrixMap
			Dimension Mapping
				related.Scenario										= FinanceEnterpriseGroup.ActualsScenario.Parent
				related.GeneralLedgerTotal.Ledger						= Scenario.Basis.LedgerTopNode
				related.GeneralLedgerTotal.EntityYearPeriod				= GeneralLedgerCalendarPeriod
			dynamic preload measures are BudgetTemplate.DynamicMeasure
