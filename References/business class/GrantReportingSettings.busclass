GrantReportingSettings is a BusinessClass
    owned by Projects
    prefix is GRPS

    Ontology
    	part of FinanceDimension2
    		relative key is SequenceNumber is Numeric size 4

    Patterns
    
    Persistent Fields
    	Description
    	ProjectContract
    	ReportingThruDate					is Date    	
    	ReportType							is Numeric size 1
    		States
    			Quarterly					value is 1
    			SemiAnnual    	 		    value is 2
    			Annual						value is 3
    			Final						value is 4
    	Basis								is Numeric size 1
    		States
    			Cash						value is 1
    			Accrual						value is 2
    	FinalReport							is Numeric size 1
    		States
    			Draft						value is 1
    			Submitted					value is 2	
#ifdef module idm
		GeneratedReport						is an AlternateAttachment
#endif
#ifndef module idm
		GeneratedReport						is an Attachment   
#endif
		GrantFederalReportingFormat	
			default label is "GrantFederalReportingTemplate"
		GrantFederalReportFormat	
			default label is "GrantFederalReportingTemplate"
		IndirectExpense						is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals	
		IndirectExpenseEncumbrance			is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals				
		ProgramIncome						is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals				
		ProgramIncomeEncumbrance			is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals				
		ProjectFundingDisbursements			is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals
		ProjectFundingEncumbrance			is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals
		MatchProjectFundingDisbursements	is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals				
		CashApplied							is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals				
		ReceivablePayment					is a CurrencyAmount	
			precision is ProjectContract.Currency.NumberOfDecimals
		UseIDM								is Boolean
			protected
		IDMTemplate							is an IDMOutputSettings
			protected
			restricted
		IDMDocumentPID						is an DocumentPID 
			protected
			restricted 
		IDMDocumentSequence					is Numeric size 3
			restricted
			protected 						
#ifdef module idm
		GrantFederalReportIDMTemplate 		is an IDMTemplate
			default label is "GrantFederalReportingTemplate"
		IDMJob		
#endif			
#ifndef module idm
		GrantFederalReportIDMTemplate 		is Numeric size 10
			default label is "GrantFederalReportingTemplate"
		IDMJob								is UniqueID
			protected
#endif	
	
	Local Fields
		ToEmailAddress						is an EmailAddress 
			holds pii
		PrinterName							is Alpha size 20		
#ifdef module idm		
		IDMAttributes
		IDMGenerateDocument
		IDMItem
		AttrsSearch							is an IDMAttributeOccurs
		LocalAttributeCtr                   is Numeric 2
#endif				

	Transient Fields
		FromEmailAddress					is an EmailAddress 
			holds pii
			
								
    Derived Fields
    	
#ifdef module idm   	
    	DerivedFileName is a StringField
    		type is Alpha 100
    		"Federal Financial Report "
    		FinanceEnterpriseGroup
    		" "
    		FinanceDimension2
    		" "
    		ProjectContract.Project.DisplayProject
    		" "
    		DerivedDate
    		" "
    		SequenceNumber
    		" "
    		GrantFederalReportIDMTemplate.DerivedOutputFormat
    		 
  		DerivedReportStatus is a DerivedField
  			type is Alpha 10
  			restricted
  			if (FinalReport.Draft)
  				return "Draft"
  			else
  				return "Submitted"  
  				
  		DerivedReportType is a DerivedField
  			type is Alpha 10
  			restricted
  			if (ReportType.Quarterly)
  				return "Quarterly"
  			else
  			if (ReportType.SemiAnnual)
  				return "SemiAnnual"
  			else
  			if (ReportType.Annual)
  				return "Annual"
  			else
  			if (ReportType.Final)
  				return "Final"

#endif  
    		 
     	DerivedDate is a DerivedField
    		type is Alpha 8
    		restricted
    		return current corporate date  		 
    		
    	GetDate is a DerivedField
			type is TimeStamp
			restricted
			return current timestamp
				
		DerivedCurrentDate is a DerivedField
			type is TimeStamp
			return current timestamp
			
    	ContextMessageEntityType is a StringField
			type is Alpha 30
			restricted
			"InforFederalFinancialReport"

		ContextMessageText is a MessageField
			restricted
			"FinanceDimension2<FinanceDimension2>FinanceEnterpriseGroup<FinanceEnterpriseGroup>"
    				




















		DerivedProgramIncome is a DerivedField
			type is like TotalAmount
				precision is ProjectContract.Currency.NumberOfDecimals	
			if (FinanceDimension2.ProgramIncomeEarned entered)						
				if (FinanceDimension2.ProgramIncomeEarned.ChartType.Summary)	
					return sum GeneralLedgerTotalSummaryProgramIncomeEarnedRel.NetProjectAmount
				else		
					return sum GeneralLedgerTotalPostingProgramIncomeEarnedRel.NetProjectAmount










				
		DerivedProjectFundingDisbursements is a DerivedField	
			type is like TotalAmount
				precision is ProjectContract.Currency.NumberOfDecimals	
			return sum ProjectContractInvoiceLineRel.Amount				





			
		DerivedProjectFundingEncumbrance is a DerivedField	
			type is like TotalAmount
				precision is ProjectContract.Currency.NumberOfDecimals	
			return sum GeneralLedgerTotalEncumbranceRel.NetProjectAmount
			
		DerivedTotalFederalShare is a DerivedField	
			type is like CurrencyAmount
			return ProjectFundingEncumbrance + ProjectFundingDisbursements 

		DerivedUnobligatedBalance  is a DerivedField
			type is like CurrencyAmount
			return FinanceDimension2.Amount - DerivedTotalFederalShare 









		DerivedEmailSubject is a MessageField
			restricted
			"FederalFinancialReport<Description>_<ReportingThruDate>"
		
		DerivedEmailBody is a MessageField
			restricted
			"FederalFinancialReport<Description>_<ReportingThruDate>Attached."
			
		DerivedEmailNotification is a MessageField
			restricted
			"FederalFinancialReportWasEmailedTo<ToEmailAddress>"
		
		DerivedPrintNotification is a MessageField
			restricted
			"FederalFinancialReportWasPrintedTo<PrinterName>"			

#ifdef module ar			
		DerivedCashApplied is a DerivedField	
			type is like CurrencyAmount		
			restricted			
			return sum ReceivableInvoiceRel.ProjectAppliedReceivableInvoiceDetailAmount
			
		DerivedReceivablePayment is a DerivedField	
			type is like CurrencyAmount		
			restricted			
			return sum ReceivablePrepaymentRel.ReceivablePayment.TransactionAmount
			
		DerivedCashReceipts is a DerivedField	
			type is like CurrencyAmount
			return DerivedCashApplied + DerivedReceivablePayment
			 
		DerivedCashOnHand is a DerivedField	
			type is like CurrencyAmount
			return DerivedCashReceipts - ProjectFundingDisbursements 
#endif			
#ifdef module idm			
		DerivedIDMReportLink is a DerivedField
			type is Alpha 2083
    		if (IDMDocumentPID entered) 
    			IDMItem.DocumentType	= "FSM_FederalFinancialReport"
    			IDMItem.IDMUniqueId		= IDMDocumentPID 
	   			return IDMItem.GetLink
			return blank
#endif


			
	Conditions
	
		GeneratedReportExists
			restricted
			when (GeneratedReport entered
			and   !UseIDM)

		GeneratedIDMReportExists
			restricted
			when (IDMDocumentPID entered
			and   UseIDM)
			
		EligibleToEmailOrPrint
			restricted
			when (GeneratedReportExists
			or 	GeneratedIDMReportExists)		
	
    Relations
    
		ProjectShadowRel
			one-to-many relation to ProjectShadow
			Field Mapping uses BySummaryProject
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.SummaryProject			= ProjectContract
			Instance Selection
				where (related.Project.Active
				and    related.Project.ProjectType.Posting
				and    related.Project.IsBillable)
    
		PostingProjectsRel
			one-to-many relation to Project
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.Project					= ProjectShadowRel.Project
				
		GeneralLedgerTotalEncumbranceRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup                       = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project                   = PostingProjectsRel.Project
				related.Scenario				                     = FinanceEnterpriseGroup.EncumbrancesScenario	
			Instance Selection
				where (related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)
				

		GLChartAccountShadowIndirectRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = FinanceDimension2.IndirectExpenseAccount
			Instance Selection
				where (related.ChartType.Posting)	
    
		GeneralLedgerTotalSummaryIndirectExpenseAccountRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = PostingProjectsRel.Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowIndirectRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

		GeneralLedgerTotalPostingIndirectRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup                       = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project                   = PostingProjectsRel.Project
				related.Scenario				                     = FinanceEnterpriseGroup.ActualsScenario	
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = FinanceDimension2.IndirectExpenseAccount			
			Instance Selection
				where (related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)
				
		GeneralLedgerTotalSummaryIndirectExpenseAccountEncumRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = PostingProjectsRel.Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowIndirectRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

		GeneralLedgerTotalPostingIndirectEncumRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup                       = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project                   = PostingProjectsRel.Project
				related.Scenario				                     = FinanceEnterpriseGroup.EncumbrancesScenario	
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = FinanceDimension2.IndirectExpenseAccount			
			Instance Selection
				where (related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

				

		GLChartAccountShadowProgramIncomeRel
			one-to-many relation to GLChartAccountShadow
			Field Mapping uses BySummaryAccount
				related.FinanceEnterpriseGroup		     = FinanceEnterpriseGroup
				related.SummaryGeneralLedgerChartAccount = FinanceDimension2.ProgramIncomeEarned
			Instance Selection
				where (related.ChartType.Posting)	

		GeneralLedgerTotalSummaryProgramIncomeEarnedRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = PostingProjectsRel.Project
				related.Scenario				   = FinanceEnterpriseGroup.ActualsScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowProgramIncomeRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

		GeneralLedgerTotalPostingProgramIncomeEarnedRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup                       = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project                   = PostingProjectsRel.Project
				related.Scenario				                     = FinanceEnterpriseGroup.ActualsScenario	
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = FinanceDimension2.ProgramIncomeEarned			
			Instance Selection
				where (related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

		GeneralLedgerTotalSummaryProgramIncomeEarnedEncumRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup     = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project = PostingProjectsRel.Project
				related.Scenario				   = FinanceEnterpriseGroup.EncumbrancesScenario				
			Instance Selection
				where (related.GeneralLedgerTotal.GeneralLedgerChartAccount = any GLChartAccountShadowProgramIncomeRel.GeneralLedgerChartAccount
				and    related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

		GeneralLedgerTotalPostingProgramIncomeEarnedEncumRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByProjectAccount		
				related.FinanceEnterpriseGroup                       = FinanceEnterpriseGroup
				related.GeneralLedgerTotal.Project                   = PostingProjectsRel.Project
				related.Scenario				                     = FinanceEnterpriseGroup.EncumbrancesScenario	
				related.GeneralLedgerTotal.GeneralLedgerChartAccount = FinanceDimension2.ProgramIncomeEarned			
			Instance Selection
				where (related.GeneralLedgerTotal.EntityYearPeriod	<= ReportingThruDate)

    
		ProjectContractInvoiceRel 
			one-to-many relation to ProjectContractInvoice
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
				related.FinanceDimension2		= FinanceDimension2
			Instance Selection
				where (related.InvoiceDate <= ReportingThruDate)
				
		ProjectContractInvoiceLineRel	
			one-to-many relation to ProjectContractInvoiceLine
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
				related.FinanceDimension2		= FinanceDimension2
			Instance Selection				
				where (related.ProjectContractInvoice = any ProjectContractInvoiceRel.ProjectContractInvoice)


















				
		ProjectFundingSourceRel
			one-to-one relation to ProjectFundingSource
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.ProjectContract			= ProjectContract
				related.FinanceDimension2		= FinanceDimension2
		FinanceDimension2InEnterpriseStructureRel
			one-to-one relation to FinanceDimension2Hierarchy
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup 	   = FinanceEnterpriseGroup
				related.FinanceDimension2Structure = FinanceEnterpriseGroup.EnterpriseDim2Structure
				related.FinanceDimension2		   = FinanceDimension2		

#ifdef module idm
		UserDefaultPrinterRel
			one-to-one relation to UserDefaultPrinter
			Field Mapping uses symbolic key
				related.UserDefaultPrinter.Actor = actor
#endif					
				
#ifdef module ar				
        ReceivableInvoiceRel
            one-to-many relation to ReceivableInvoice
            Field Mapping uses ByProjectContractInvoice
          	    related.ProjectContract             = ProjectContract
                related.FinanceDimension2           = FinanceDimension2
            Instance Selection
	          	where (related.Company.CustomerBusinessGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroup
	          	and    related.GeneralLedgerDate <= ReportingThruDate)
	          	
		ReceivablePrepaymentRel
		  	one-to-many relation to ReceivablePrepayment
		  	Field Mapping uses ByProjectContract
		        related.ProjectContract = ProjectContract
		  	Instance Selection
		    	where (related.Company.CustomerBusinessGroup.FinanceEnterpriseGroup = FinanceEnterpriseGroup
		    	and    related.FinanceDimension2                                    = FinanceDimension2
		    	and    related.ReceivableInvoice                                    = any ReceivableInvoiceRel.ReceivableInvoice)
#endif				
	          	
	Sets
				
    Field Rules
    	SequenceNumber
    		autosequence
    
		Description
			required    
			
		ReportingThruDate
			required			
			
		ReportType
			required	
			
		Basis
			required	

    	FinalReport
    		required
    			default to FinalReport.Draft	
    			




		ProgramIncome
			default to DerivedProgramIncome								


		ProjectFundingDisbursements
			default to DerivedProjectFundingDisbursements	
		ProjectFundingEncumbrance			
			default to DerivedProjectFundingEncumbrance							


#ifdef module ar					
		CashApplied		
			default to DerivedCashApplied								
		ReceivablePayment
			default to DerivedReceivablePayment					
#endif
#ifdef module idm 
		GrantFederalReportIDMTemplate
			constraint (GrantFederalReportIDMTemplate.IDMDocumentType.FederalFinancialReport)
				"InvalidTemplate"
#endif

#ifdef module idm
	Create Rules  
        include IDM.CreateRules 
            replace AttachmentField with GeneratedReport  

    Delete Rules
        include IDM.DeleteNoArchiveRules
            replace AttachmentField with GeneratedReport
			
    Commit Rules
        include IDM.CommitRules
            replace AttachmentField with GeneratedReport
#endif	

	Actions
		Create is a Create Action
			restricted
			Action Rules
                if (not UseIDM)
                    initialize GeneratedReport.File
                    initialize GeneratedReport.Title
                    initialize GeneratedReport.MimeType
                    GeneratedReport.File      = GrantFederalReportFormat.GrantFederalReportingTemplate.File document
                    if (GrantFederalReportFormat.GrantFederalReportingTemplate.MimeType = "application/pdf")
                        GeneratedReport.Title = "GrantFederalReportingTemplate.pdf"
                    else
                    if (GrantFederalReportFormat.GrantFederalReportingTemplate.MimeType = "application/rtf")
                        GeneratedReport.Title = "GrantFederalReportingTemplate.rtf"             
                    GeneratedReport.MimeType  = GrantFederalReportFormat.GrantFederalReportingTemplate.MimeType

			Exit Rules			
				invoke CreateFederalFinancialReport	

		Update is an Update Action
		
		Delete is a Delete Action
			valid when (!FinalReport.Submitted)		
			
		SaveFederalFinancialReport is an Instance Action
			valid when (FinalReport.Draft)
			Local Fields
				Result	is Boolean
				
			Action Rules	
#ifdef module idm	
				if (GeneratedIDMReportExists)		
					initialize AttrsSearch
					AttrsSearch.IDMAttribute[1].IDMAttributeName  = "FinanceEnterpriseGroup"
					AttrsSearch.IDMAttribute[1].IDMAttributeValue = FinanceEnterpriseGroup
					AttrsSearch.IDMAttribute[2].IDMAttributeName  = "FinanceDimension2"
					AttrsSearch.IDMAttribute[2].IDMAttributeValue = FinanceDimension2  
					AttrsSearch.IDMAttribute[3].IDMAttributeName  = "ProjectContract"
					AttrsSearch.IDMAttribute[3].IDMAttributeValue = ProjectContract.Project.DisplayProject 
 					AttrsSearch.IDMAttribute[4].IDMAttributeName  = "Status"
					AttrsSearch.IDMAttribute[4].IDMAttributeValue = DerivedReportStatus  						
 					AttrsSearch.IDMAttribute[5].IDMAttributeName  = "SequenceNumber"
					AttrsSearch.IDMAttribute[5].IDMAttributeValue = SequenceNumber  					 					  				
#endif
				FinalReport = 2	
				
#ifdef module idm			
			Exit Rules
				if (GeneratedIDMReportExists)
					initialize IDMAttributes
					IDMAttributes.IDMDocumentType = "FSM_FederalFinancialReport"
    				IDMAttributes.AttributeSearch = AttrsSearch
 					IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeName	= "Status"
					IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeValue	= DerivedReportStatus  						
					Result = IDMAttributes.ExecuteUpdateAttribute					
#endif
				
		CreateFederalFinancialReport is an Instance Action
			restricted
			Local Fields	
#ifdef module idm				
				IDMJobView	 		is an IDMJob view	
#endif				
					
			Action Rules			
#ifdef module idm	
				if (UseIDM)		
					increment IDMDocumentSequence by 1
					initialize IDMGenerateDocument
    				IDMGenerateDocument.IDMXMLDefinition.Busclass	  = reference to this instance
    				IDMGenerateDocument.IDMXMLDefinition.ListName	  = "GrantReportingSettingsForIDM"
    				IDMGenerateDocument.IDMXMLDefinition.DocumentName = "FederalFinancialReport"				    		
   
					initialize IDMAttributes
					IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeName	= "FinanceEnterpriseGroup"
					IDMAttributes.SingleValue.IDMAttribute[1].IDMAttributeValue	= FinanceEnterpriseGroup
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeName	= "FinanceDimension2"
					IDMAttributes.SingleValue.IDMAttribute[2].IDMAttributeValue	= FinanceDimension2    		
 					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeName	= "ProjectContract"
					IDMAttributes.SingleValue.IDMAttribute[3].IDMAttributeValue	= ProjectContract.Project.DisplayProject 
		    		IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeName  = "ReportThruDate" 
		    		IDMAttributes.SingleValue.IDMAttribute[4].IDMAttributeDate  = ReportingThruDate
		    		IDMAttributes.SingleValue.IDMAttribute[5].IDMAttributeName  = "ReportType" 
		    		IDMAttributes.SingleValue.IDMAttribute[5].IDMAttributeValue = DerivedReportType		    		
 					IDMAttributes.SingleValue.IDMAttribute[6].IDMAttributeName	= "Status"
					IDMAttributes.SingleValue.IDMAttribute[6].IDMAttributeValue	= DerivedReportStatus  					
 					IDMAttributes.SingleValue.IDMAttribute[7].IDMAttributeName	= "SequenceNumber"
					IDMAttributes.SingleValue.IDMAttribute[7].IDMAttributeValue	= SequenceNumber  
					
    				IDMGenerateDocument.IDMAttributes	 = IDMAttributes
    				IDMGenerateDocument.TemplateUniqueId = GrantFederalReportIDMTemplate.IDMUniqueId
    				IDMGenerateDocument.DocumentType	 = "FSM_FederalFinancialReport"
    				IDMGenerateDocument.FileName		 = DerivedFileName  				
    				
   					IDMGenerateDocument.IDMAccessControlList = "CSFDefined"
    			
    				invoke CreateFromGenerateDocument IDMJob
    					assign result to IDMJobView
    					invoked.Actor				= actor
    					invoked.Description			= "Generate From Grant Reporting Settings"
    					invoked.IDMGenerateDocument	= IDMGenerateDocument
 
 					IDMJob = IDMJobView.IDMJob 
 
					invoke UpdateIDMDocumentPID in background
						run after IDMJob.AsyncId 					
  					
 		UpdateIDMDocumentPID is an Instance Action
			restricted
			Action Rules
				invoke FastUpdate
					invoked.IDMDocumentPID = IDMJob.MDSID	 					
  					
#endif 					
	
		FastUpdate is an Update Action
			restricted
			bypass field rules
			
					
		EmailFederalFinancialReport is an Instance Action
			valid when (EligibleToEmailOrPrint)
			Parameters
				PrmToEmailAddress   is an EmailAddressMulti 
					holds pii
					default label is "ToEmail"
				PrmFromEmailAddress is an EmailAddress 
					holds pii
					default label is "FromEmail"
#ifdef module idm  					
    			UseIDM						is Boolean
    				default label is "UseIDMEmailTemplate"
    			EmailSubject				is Alpha 255
					Text Variables
						Description		  value is Description
						ReportingThruDate value is ReportingThruDate						
    			IDMEmailTemplate				is an IDMTemplate	
#endif    			
																
			Parameter Rules					
				PrmToEmailAddress
					required	
				PrmFromEmailAddress
					required		
#ifdef module idm 
				IDMEmailTemplate
					if (UseIDM)
						required
#endif  

			Action Rules
#ifdef module idm			
				if (GeneratedIDMReportExists)
					initialize IDMGenerateDocument
    				IDMGenerateDocument.IDMXMLDefinition.Busclass	  = reference to this instance
    				IDMGenerateDocument.IDMXMLDefinition.ListName	  = "GrantReportingSettingsForIDM"
    				IDMGenerateDocument.IDMXMLDefinition.DocumentName = "FederalFinancialReport"				
				
					initialize IDMItem
					IDMItem.DocumentType  	 = "FSM_FederalFinancialReport"
					IDMItem.IDMUniqueId	  	 = IDMDocumentPID
					IDMItem.IDMXMLDefinition = IDMGenerateDocument.IDMXMLDefinition
					IDMItem.IDMEmail.From 	 = PrmFromEmailAddress
					FromEmailAddress 		 = PrmFromEmailAddress
					IDMItem.IDMEmail.To   	 = PrmToEmailAddress
					ToEmailAddress			 = PrmToEmailAddress

					if (EmailSubject entered)
						IDMItem.IDMEmail.Subject = EmailSubject text
					else
						IDMItem.IDMEmail.Subject = DerivedEmailSubject
					
					if (IDMEmailTemplate entered)
						IDMItem.EmailTemplateUniqueID = IDMEmailTemplate.IDMUniqueId
					else
						IDMItem.IDMEmail.Body = DerivedEmailBody
					
					constraint (IDMItem.GetItemDetails)
						"DocumentDoesNotExistInIDM"

					IDMItem.IDMPID      = IDMItem.IDMItemDetails.PID	
					
					invoke SendToEmail IDMJob
						invoked.Description   = DerivedEmailNotification
						invoked.FileName      = DerivedFileName
						invoked.IDMItem		  = IDMItem
				else
#endif			
				if (GeneratedReportExists)
		        	send email
		            	to PrmToEmailAddress
		                from PrmFromEmailAddress
		                subject "FederalFinancialReport<Description>ThruDate<ReportingThruDate>"
		                Attachments
		                	attachment GeneratedReport.File
			              		name is GeneratedReport.Title
		                  	  	mime type is GeneratedReport.MimeType
		                Contents 
		                	"FederalFinancialReport<Description>ForFundingSource<FinanceDimension2>ThruDate<ReportingThruDate>Attached."

		SendFederalFinancialReportToPrinter is an Instance Action
			valid when (EligibleToEmailOrPrint)
			Parameters
				PrmFromEmailAddress 	   is an EmailAddress 
					holds pii
					default label is "FromEmail"			
				PrmToPrinterEmailAddress   is an EmailAddress 
					holds pii
					default label is "ToEmail"
#ifdef module idm					
				PrmIDMPrinter			   is an IDMPrinter
					default label is "ToIDMPrinter"
#endif						

			Parameter Rules
				PrmFromEmailAddress
					if (!UseIDM)
						required		
				PrmToPrinterEmailAddress
					if (!UseIDM)
						required	
#ifdef module idm	
				PrmIDMPrinter
					initial value is UserDefaultPrinterRel.IDMPrinter
					if (UseIDM)
						required
#endif					
			Action Rules
#ifdef module idm			
				if (GeneratedIDMReportExists)
					initialize IDMItem
					IDMItem.DocumentType = "FSM_FederalFinancialReport"		
					IDMItem.IDMUniqueId	 = IDMDocumentPID
	   				IDMItem.FileName     = DerivedFileName
	   				IDMItem.IDMPrinter	 = PrmIDMPrinter 
	   				PrinterName			 = PrmIDMPrinter
	   				
					constraint (IDMItem.GetItemDetails)
						"DocumentDoesNotExistInIDM"

					IDMItem.IDMPID      = IDMItem.IDMItemDetails.PID
						
	   				invoke SendToPrinter IDMJob
	   					invoked.Description = DerivedPrintNotification
	   					invoked.FileName    = DerivedFileName
	   					invoked.IDMItem		= IDMItem
				else
#endif			
				if (GeneratedReportExists)
		        	send email
		            	to PrmToPrinterEmailAddress
		                from PrmFromEmailAddress
		                subject "FederalFinancialReport<Description>ThruDate<ReportingThruDate>"
		                Attachments
		                	attachment GeneratedReport.File
			              		name is GeneratedReport.Title
		                  	  	mime type is GeneratedReport.MimeType
		                Contents 
		                	"FederalFinancialReport<Description>ForFundingSource<FinanceDimension2>ThruDate<ReportingThruDate>Attached."						

#ifdef module idm  
		UploadToIDM is an Instance Action  
            valid when (GeneratedReport.ValidForIDMUpload)
            Action Rules
                include IDM.MoveAttachmentsToIDM
                    replace AttachmentField   with GeneratedReport  
                                                    
        MoveAttachmentsToIDM is a Set Action
            restricted
            Instance Selection
                where (GeneratedReport.IsLocal)

            Accumulators
                InstanceCount

            Action Rules
                Instance Rules
                    increment InstanceCount 

                    include IDM.MoveAttachmentsToIDM
                        replace AttachmentField   with GeneratedReport    

                    commit transaction
                    if (InstanceCount = config.IDM_MOVE_ATTACHMENTS_LIMIT)
                        end set action instance loop
#endif
		SaveFederalFinancialReports is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				FundingSourceGroup			is a FinanceDimension2 group
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
			Local Fields
        	Instance Selection
        		where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and    FinalReport.Draft
        		and   (FinanceDimension2 within FundingSourceGroup
        		or     FundingSourceGroup not entered))
        	Action Rules
        		Instance Rules
					invoke SaveFederalFinancialReport

		EmailFederalFinancialReports is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				FundingSourceGroup			is a FinanceDimension2 group
				PrmToEmailAddress   is an EmailAddressMulti 
					holds pii
					default label is "ToEmail"
				PrmFromEmailAddress is an EmailAddress 
					holds pii
					default label is "FromEmail"
#ifdef module idm  					
    			UseIDM						is Boolean
    				default label is "UseIDMEmailTemplate"
    			EmailSubject				is Alpha 255
					Text Variables
						Description		  value is Description
						ReportingThruDate value is ReportingThruDate						
    			IDMEmailTemplate				is an IDMTemplate	
#endif    			
			Parameter Rules			
				PrmFinanceEnterpriseGroup
					required
				PrmToEmailAddress
					required	
				PrmFromEmailAddress
					required		
#ifdef module idm 
				IDMEmailTemplate
					if (UseIDM)
						required
#endif  

			Local Fields
        	Instance Selection
        		where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
        		and   (FinanceDimension2 within FundingSourceGroup
        		or     FundingSourceGroup not entered))
        	Action Rules
        		Instance Rules
					invoke EmailFederalFinancialReport
						invoked.PrmToEmailAddress      = PrmToEmailAddress
						invoked.PrmFromEmailAddress    = PrmFromEmailAddress
#ifdef module idm  					
						invoked.UseIDM                 = UseIDM

						invoked.EmailSubject           = EmailSubject
						invoked.IDMEmailTemplate       = IDMEmailTemplate
#endif    			

		SendFederalFinancialReportsToPrinter is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup	is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				FundingSourceGroup			is a FinanceDimension2 group
				PrmFromEmailAddress 	   is an EmailAddress 
					holds pii
					default label is "FromEmail"			
				PrmToPrinterEmailAddress   is an EmailAddress 
					holds pii
					default label is "ToEmail"
#ifdef module idm					
				PrmIDMPrinter			   is an IDMPrinter
					default label is "ToIDMPrinter"
#endif						
				PrmProcessIDM					is Boolean
					default label is "ProcessIDM"
			Parameter Rules
				PrmFinanceEnterpriseGroup
					required
				PrmFromEmailAddress
					if (!PrmProcessIDM)
						required		
					else
	        			cannot be entered
	        				"FromEmailCannotBeEnteredWhenProcessingIDM"	        			

				PrmToPrinterEmailAddress
					if (!PrmProcessIDM)
						required	
					else
	        			cannot be entered
	        				"ToEmailCannotBeEnteredWhenProcessingIDM"	        			

#ifdef module idm	
				PrmIDMPrinter
					initial value is UserDefaultPrinterRel.IDMPrinter
					if (PrmProcessIDM)
						required
					else	
	        			cannot be entered
	        				"ToIDMPrinterCanOnlyBeEnteredWhenProcessingIDM"	        			

#endif					

			Local Fields
        	Instance Selection
        		where (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
        		and   (FinanceDimension2 within FundingSourceGroup
        		or     FundingSourceGroup not entered)
				and   ((UseIDM 
				and    PrmProcessIDM)
				or    (!UseIDM 
				and    !PrmProcessIDM)))
        	Action Rules
        		Instance Rules
					invoke SendFederalFinancialReportToPrinter
						invoked.PrmFromEmailAddress 	    = PrmFromEmailAddress
						invoked.PrmToPrinterEmailAddress    = PrmToPrinterEmailAddress
#ifdef module idm					
						invoked.PrmIDMPrinter			    = PrmIDMPrinter
#endif						
