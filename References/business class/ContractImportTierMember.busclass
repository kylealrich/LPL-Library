ContractImportTierMember is a BusinessClass
    owned by po
    prefix is CTPM

    Ontology
    	symbolic key is ContractImportTierMember    

	Persistent Fields
		Tier								is a ContractImportTier
   		PurchaseMethod                                                      			
		Updated                             is Boolean
		EffectiveDate                       is Date
		ExpirationDate                      is Date
		ContractImportGPOMembership         is like ContractImportGPOMembership 
		GPOContractNumber                          
		
	Local Fields
		LocalUpdateContract                 is like Contract
		LocalContract                       is like Contract
		LocalDistributorContract            is like Contract
		LocalContractGroup                  is a ContractGroup
		LocalContractImport                 is like ContractImport
		LocalTier                           is like ContractImportTier
		LocalTierName                       is like Description
		LocalTierDescription                is like Description4
		LocalGPOContractNumber              is a GPOContractNumber
		NewContractTierNeeded               is Boolean
		LocalDistributorSupplier            is like GPOSupplierID
		LocalDistributor                    is like Supplier
		LocalGPOSupplier                    is like GPOSupplierID
		LocalIccompany                      is like InventoryCompany
		LocalTierDistributor                is like ContractImportTierDistributor
		LocalGPOMembership                  is like ContractImportGPOMembership
		LocalParticipantLocation            is like ParticipantLocation
		LocalPricingCode                    is like ContractDistributorPricing
		LocalPricingTitle                   is a Description
		LocalMarkupPercent                  is a Percent
		OldParticipantCompany               is like InventoryCompany
		OldParticipantLocation              is like InventoryLocation
		OldParticipantRequestingLocation    is like RequestingLocation
		OldParticipantPricingGroup          is like PricingGroup
		DoNotCreateDistributorContract      is Boolean
		StandardMarkupCalculation           is Boolean
		LocalEffectiveDate                  is Date
		LocalExpirationDate                 is Date
		CanReleaseMembers                   is Boolean
		LocalTestTier                       is like ContractImportTier
		DefaultedTier                       is like ContractImportTier
		LocalTierDefinition                 is Text
		LocalAdjustment                     is Decimal size 7.6
		LocalFromGHXUpdate                  is Boolean
		FromGHXInterface                    is Boolean

	Transient Fields
		FromNewMember                       is Boolean
		FromDistributor                     is Boolean
		FromService                         is Boolean
		FromNewParticipant                  is Boolean
		FromContractCreation                is Boolean
		DistributorPriority                 is Numeric 1
		MultipleMembers                     is Boolean

	Derived Fields
		
		DerivedContract is a DerivedField
			type is like Contract
			return ContractImport.ContractsFromImportNavRel.Contract
			
		DerivedContractTier is a DerivedField
			type is like ContractTier
			return ContractTierMemberListRel.Tier
    	CompanyName is a StringField 
     		type is like Name
    		holds pii
			ContractImportTierMember.Company.Name
    	LocationName is a StringField 
     		type is like Name
    		holds pii
			ContractImportTierMember.Location.Name
    	RequestingLocationName is a StringField 
     		type is like Name
    		holds pii
			ContractImportTierMember.RequestingLocation.Name
		PricingGroupDescription is a StringField
			type is Alpha size 60
			ContractImportTierMember.PricingGroup.Description
					
	Field Rules
		
	
	Conditions 
	
		PurchaseMethodForDirectBuy
			restricted
			when (PurchaseMethod.FromManufacturer
			or    PurchaseMethod.FromManufacturerAndDistributor)

		CannotUpdateGPO
			restricted
			when (ContractGroup.DoNotAllowGPOUpdates
			and   ContractImport.GPONegotiated
			and   ContractGroup.GPOIsHealthTrust2021)

		DistributorsExist
			restricted
			when (ContractGPODistributorRel exists)
			
		HasTierDistributorRecords
			restricted
			when (ContractImportTierDistributorRel exists)

		NoLinesExist
			restricted
			when (ContractLineImportTierCostRel !exists)
		
		PurchaseFromManufacturer  
			restricted
			when (ItemsForManufacturerRel exists)
	
		PurchaseFromManufacturer2021
			restricted
			when (ContractGPOParticipants2021Rel exists)

		HasGHXParticipant
			restricted
			when (ContractGHXParticipantsRel exists)
		
		CanSetPurchaseMethodToNone
			restricted
			when (!PurchaseFromManufacturer
			and    PurchaseMethod != 4)

		TiersDoNotMatch
			restricted
			when (ContractTierMemberListRel 		exists
			and   ContractTierMemberListRel.Tier 	!= Tier
			and   EffectiveDate 			   		<= current corporate date)
		
		TierUpdated
			restricted
			when (ContractTierMemberListRel exists
			and   ContractTierMemberListRel.Tier != Tier)
			
		NoContractTierMember
			restricted
			when (DerivedContract entered
			and   DerivedContractOpen
			and ((ContractImport.IsManufacturerContract
			and   ContractTierMemberListRel !exists)
			or   (ContractImport.IsDistributorContract
			and   ContractDistributorPricingMemberRel !exists))
			and   ContractImport.HasGPOSupplier)

		TierMemberExists
			restricted
			when (DerivedContract entered
			and   ContractTierMemberListRel exists
			and   ContractImport.HasGPOSupplier)			

		PricingMemberExists
			restricted
			when (DerivedContract entered
			and   ContractDistributorPricingMemberRel exists   
			and   ContractImport.HasGPOSupplier)

		CompanyOnly
			when (ContractImportTierMember.Location = blank
			and	  ContractImportTierMember.RequestingLocation = blank
			and   ContractImportTierMember.Company entered)

		CanCreate
			when (ContractImport.IsManufacturerOrDistributorContract
			and   !ContractImport.GPOIsHealthTrust
			and   !ContractImport.GPOIsVizient)

		HasLocOrReqLoc
			restricted
			when (ContractImportTierMember.Location != blank
			or    ContractImportTierMember.RequestingLocation != blank)
			
		LocationType
			restricted
			when (HasLocOrReqLoc
			or    ContractImportTierMember.PricingGroup.LocationPricingGroup)
		
		CompanyType
			restricted
			when (CompanyOnly
			or    ContractImportTierMember.PricingGroup.CompanyPricingGroup)

		PricingGroupMember
			restricted
			when (ContractImportTierMember.PricingGroup entered)

		MultiTierDistributor
			restricted
			when (ContractImport.MultiTierDistributor = true)

		DistributorContractMappedExists
			restricted
			when (ContractGPODistributorMappedRel exists)
			
		DistributorOnlyMappedExists
			restricted
			when (ContractGPODistributorMappedMemberOnlyRel exists)

		DistributorHasItems
			restricted
			when (ItemsForDistributorRel exists)

		MembershipEntered
			restricted
			when (ContractImportGPOMembership entered)

		DerivedContractOpen
			restricted
			when (ContractRel.NotClosed)

		NewTierMemberExists
			restricted
			when (NewTierMemberRel exists)
		
		ManufacturerPurchaseFrom
			restricted
			when (PurchaseMethod.FromManufacturer
			or    PurchaseMethod.FromManufacturerAndDistributor)
		
		FutureEffectiveDate
			restricted
			when (ContractImport.FutureEffectiveDate entered)
			
		FutureExpirationDate
			restricted
			when (ContractImport.FutureExpirationDate entered)

		GPOIsHealthTrust
			restricted
			when (ContractImport.GPOIsHealthTrust)
		
		HasDirectGHXParticipants
			restricted
			when (ContractGHXDirectParticipantsRel exists)
		
		HasNotDirectGHXParticipants
			restricted
			when (ContractGHXNotDirectParticipantsRel exists)

		NewParticipantExists
			restricted
			when (NewParticipantRel exists)

		NotMultiTierDistributorAndGPO
			restricted
			when (!MultiTierDistributor
			and   ContractImport.HasGPOSupplier
			and  !ContractImport.DoNotCreateDistributorContract)

	Relations
	
		ContractTierMemberRel                      
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                			= ContractGroup
				related.Contract                        		= LocalUpdateContract
				related.ContractTierMember.Company              = ContractImportTierMember.Company
				related.ContractTierMember.Location             = ContractImportTierMember.Location
				related.ContractTierMember.RequestingLocation   = ContractImportTierMember.RequestingLocation
				related.ContractTierMember.PricingGroup         = ContractImportTierMember.PricingGroup
			
		NewTierMemberRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key	
				related.ContractGroup                			= ContractGroup
				related.Contract                        		= DerivedContract
				related.ContractTierMember.Company              = LocalParticipantLocation.Company
				related.ContractTierMember.Location             = LocalParticipantLocation.Location
				related.ContractTierMember.RequestingLocation   = LocalParticipantLocation.RequestingLocation
				related.ContractTierMember.PricingGroup         = LocalParticipantLocation.PricingGroup			

		OldContractTierMemberRel
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                			= ContractGroup
				related.Contract                        		= DerivedContract
				related.ContractTierMember.Company              = OldParticipantCompany
				related.ContractTierMember.Location             = OldParticipantLocation
				related.ContractTierMember.RequestingLocation   = OldParticipantRequestingLocation
				related.ContractTierMember.PricingGroup         = OldParticipantPricingGroup				

		OldImportTierMemberRel
			one-to-one relation to ContractImportTierMember
			Field Mapping uses symbolic key	
				related.ContractGroup                			      = ContractGroup
				related.ContractImport	                       		  = ContractImport
				related.ContractImportTierMember.Company              = OldParticipantCompany
				related.ContractImportTierMember.Location             = OldParticipantLocation
				related.ContractImportTierMember.RequestingLocation   = OldParticipantRequestingLocation
				related.ContractImportTierMember.PricingGroup         = OldParticipantPricingGroup	
				
		OldDistributorPricingMemberRel
			one-to-one relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup                							= ContractGroup
				related.Contract                        						= DerivedContract
				related.ContractDistributorPricingMember.Company              	= OldParticipantCompany
				related.ContractDistributorPricingMember.Location             	= OldParticipantLocation
				related.ContractDistributorPricingMember.RequestingLocation   	= OldParticipantRequestingLocation
				related.ContractDistributorPricingMember.PricingGroup         	= OldParticipantPricingGroup
				related.ContractDistributorPricingMember.ManufacturerContract   = DerivedContract

		ContractDistributorPricingMemberRel
			one-to-one relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup                							= ContractGroup
				related.Contract                        						= DerivedContract
				related.ContractDistributorPricingMember.Company              	= ContractImportTierMember.Company
				related.ContractDistributorPricingMember.Location             	= ContractImportTierMember.Location
				related.ContractDistributorPricingMember.RequestingLocation   	= ContractImportTierMember.RequestingLocation
				related.ContractDistributorPricingMember.PricingGroup         	= ContractImportTierMember.PricingGroup
				related.ContractDistributorPricingMember.ManufacturerContract   = DerivedContract

		NewPricingMemberRel
			one-to-one relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup                							= ContractGroup
				related.Contract                        						= DerivedContract
				related.ContractDistributorPricingMember.Company              	= LocalParticipantLocation.Company
				related.ContractDistributorPricingMember.Location             	= LocalParticipantLocation.Location
				related.ContractDistributorPricingMember.RequestingLocation   	= LocalParticipantLocation.RequestingLocation
				related.ContractDistributorPricingMember.PricingGroup         	= LocalParticipantLocation.PricingGroup
				related.ContractDistributorPricingMember.ManufacturerContract   = DerivedContract			
		
		DistributorPricingMemberFromManufacturerRel
			one-to-one relation to ContractDistributorPricingMember
			Field Mapping uses symbolic key
				related.ContractGroup                							= ContractGroup
				related.Contract                        						= LocalDistributorContract
				related.ContractDistributorPricingMember.Company              	= ContractImportTierMember.Company
				related.ContractDistributorPricingMember.Location             	= ContractImportTierMember.Location
				related.ContractDistributorPricingMember.RequestingLocation   	= ContractImportTierMember.RequestingLocation
				related.ContractDistributorPricingMember.PricingGroup         	= ContractImportTierMember.PricingGroup
				related.ContractDistributorPricingMember.ManufacturerContract   = DerivedContract	
				
		ContractDistributorPricingRel
			one-to-one relation to ContractDistributorPricing
			Field Mapping uses symbolic key
				related.ContractGroup                							= ContractGroup
				related.Contract                        						= LocalDistributorContract
				related.ContractDistributorPricing                              = LocalPricingCode

		ContractGPODistributorMappedRel
			one-to-many relation to ContractGPODistributor
			Field Mapping uses ByGPOContractMemberSupplierNumber
				related.GPOContractNumber   				= GPOContractNumber
				related.ContractImportGPOMembership       	= ContractImportGPOMembership  
			Instance Selection
				where (related.SupplierMapped)

		ItemsForDistributorRel
			one-to-many relation to ContractGPOItem
			Field Mapping uses BySupplier
				related.GPOContractNumber                   = GPOContractNumber
				related.ItemSupplier                        = LocalDistributorSupplier

		ItemsForManufacturerRel 
			one-to-many relation to ContractGPOItem
			Field Mapping uses BySupplier
				related.GPOContractNumber = GPOContractNumber
			Instance Selection
				where (related.ItemSupplier = LocalGPOSupplier)

		ContractGPODistributorMappedMemberOnlyRel
			one-to-many relation to ContractGPODistributor
			Field Mapping uses ByMember
				related.ContractImportGPOMembership       	= ContractImportGPOMembership  
			Instance Selection
				where (related.SupplierMapped
				and    related.NoContractNumber)

		ContractGPODistributorMappedMemberManufacturerRel
			one-to-many relation to ContractGPODistributor
			Field Mapping uses ByMember
				related.ContractImportGPOMembership       	= ContractImportGPOMembership  
			Instance Selection
				where (related.SupplierMapped
				and    related.NoContractNumber
				and    related.ManufacturerSupplierEntered
				and    related.ManufacturerSupplier        = ContractImport.ManufacturerSupplier)

		ContractGPOTierRel
			one-to-many relation to ContractGPOTier
			Field Mapping uses ByTierLevel
				related.TierLevel                           = LocalTier
		
		ContractImportRel
			one-to-one relation to ContractImport
			Field Mapping uses symbolic key
				related.ContractGroup                           = ContractGroup
				related.ContractImport							= ContractImport
		
		ContractRel
			one-to-one relation to Contract
			Field Mapping uses symbolic key
				related.ContractGroup                           = ContractGroup
				related.Contract    							= ContractImport.DerivedToContract			
		
		ContractTierMemberListRel 
			one-to-one relation to ContractTierMember
			Field Mapping uses symbolic key
				related.ContractGroup                			= ContractGroup
				related.Contract                        		= DerivedContract
				related.ContractTierMember.Company              = ContractImportTierMember.Company
				related.ContractTierMember.Location             = ContractImportTierMember.Location
				related.ContractTierMember.RequestingLocation   = ContractImportTierMember.RequestingLocation
				related.ContractTierMember.PricingGroup         = ContractImportTierMember.PricingGroup			

		ContractImportTierFromMemberRel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = Tier

		ContractImportTierNewRel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= LocalContractGroup
				related.ContractImport      = LocalContractImport
				related.ContractImportTier  = LocalTier

		ContractImportTierNew2021Rel
			one-to-many relation to ContractImportTier
			Field Mapping uses ByTierName
				related.ContractGroup		= LocalContractGroup
				related.GPOContractNumber   = LocalGPOContractNumber
				related.TierTitle           = LocalTierName

		ContractImportTier2021Rel
			one-to-many relation to ContractImportTier
			Field Mapping uses ByTierName
				related.ContractGroup       = ContractGroup
				related.GPOContractNumber   = GPOContractNumber 
				related.TierTitle           = LocalTierName

		ContractImportTestTierRel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = LocalTestTier
				
		ContractImportTestTier1Rel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = 1
				
		ContractImportTestTier2Rel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = 2
				
		ContractImportTestTier3Rel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = 3
				
		ContractImportTestTier4Rel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = 4

		ContractImportTestTier5Rel
			one-to-one relation to ContractImportTier
			Field Mapping uses symbolic key
				related.ContractGroup		= ContractGroup
				related.ContractImport      = ContractImport
				related.ContractImportTier  = 5

		ContractImportTierDistributorRel is a ContractImportTierDistributor set

		ContractImportTierDistributorDuplicateRel
			one-to-one relation to ContractImportTierDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       						= ContractGroup
				related.ContractImport      						= ContractImport
				related.ContractImportTierMember.Company 			= ContractImportTierMember.Company
				related.ContractImportTierMember.Location 			= ContractImportTierMember.Location
				related.ContractImportTierMember.RequestingLocation = ContractImportTierMember.RequestingLocation
				related.ContractImportTierMember.PricingGroup		= ContractImportTierMember.PricingGroup
				related.ContractImportTierDistributor				= LocalTierDistributor
				
		ContractImportDistributorRel
			one-to-one relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       		= ContractGroup
				related.ContractImport      		= ContractImport
				related.ContractImportDistributor 	= DistributorSupplierRel.ContractSupplier
		
		ContractImportDistributor2021Rel
			one-to-many relation to ContractImportDistributor
			Field Mapping uses ByDistributorSupplier
				related.ContractGroup       		= ContractGroup
				related.GPODistributorSupplier      = LocalGPOSupplier
				related.ContractImport      		= ContractImport

		ContractImportDistributorDirectRel
			one-to-one relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       		= ContractGroup
				related.ContractImport      		= ContractImport
				related.ContractImportDistributor 	= ContractImport.Supplier

		LinesForNewTierRel
			one-to-many relation to ContractLineImportTierCost
			Field Mapping uses ByGPOContractNumber
				related.ContractGroup		= LocalContractGroup
				related.GPOContractNumber   = LocalGPOContractNumber
				related.ContractImportTier  = LocalTier
		
		ContractLineImportTierCostRel
			one-to-many relation to ContractLineImportTierCost
			Field Mapping uses ByGPOContractNumber
				related.ContractGroup		= ContractGroup
				related.GPOContractNumber   = GPOContractNumber
				related.ContractImportTier  = Tier

		ContractGPODistributorRel
			one-to-many relation to ContractGPODistributor
			Field Mapping uses ByGPOContractMemberSupplierNumber
				related.GPOContractNumber   				= GPOContractNumber
				related.ContractImportGPOMembership       	= ContractImportGPOMembership     				

		ContractGHXParticipantsRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractOrganizationEID
				related.ContractNumber						= GPOContractNumber
				related.OrganizationEID						= ContractImportGPOMembership

		ContractGHXVendorParticipantsRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractOrganizationEID
				related.ContractNumber						= GPOContractNumber
				related.OrganizationEID						= ContractImportGPOMembership
			Instance Selection
				where (related.ManufacturerEID != related.VendorEID)

		ContractGHXDirectParticipantsRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractOrganizationEID
				related.ContractNumber						= GPOContractNumber
				related.OrganizationEID						= ContractImportGPOMembership
			Instance Selection
				where (related.DirectBuy)

		ContractGHXNotDirectParticipantsRel
			one-to-many relation to ContractGPOGHXInterface
			Field Mapping uses ByContractOrganizationEID
				related.ContractNumber						= GPOContractNumber
				related.OrganizationEID						= ContractImportGPOMembership
			Instance Selection
				where (related.NotDirectBuy)

		ContractGPOParticipantsRel                                 
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   
				related.ItemSupplier                    = ContractSupplierRel.ContractImportGPOSupplier		
		
		ContractGPOParticipants2021Rel                                 
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   

		MembershipForUpdateRel
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = LocalGPOMembership

		DistributorSupplierRel
			one-to-one relation to ContractImportGPOSupplier
			Field Mapping uses symbolic key
				related.SupplierGroup               = ContractGroup
				related.ContractImportGPOSupplier 	= LocalDistributorSupplier

		ContractSupplierRel
			one-to-many relation to ContractImportGPOSupplier
			Field Mapping uses ByContractSupplier
				related.SupplierGroup               = ContractGroup
				related.ContractSupplier            = ContractImport.Supplier 
		
		ContractUpdatedGPOParticipantRel                                        
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   
			Instance Selection
				where (related.StartDate       > EffectiveDate
				and    related.TierLevel      != Tier)
				
		ContractUpdatedGPOParticipant2021Rel                                        
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   
			Instance Selection
				where (related.StartDate       > EffectiveDate
				and    related.TierLevel       != LocalTier)

		ContractUpdatedGPOParticipantVizientRel                                        
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   
			Instance Selection
				where (related.TierLevel       != LocalTier)

		ContractGPOParticipantHasTierRel
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership  
			Instance Selection
				where (related.TierLevel entered)	
				
		ContractGPOParticipant2021Rel  
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = LocalGPOContractNumber			
			Instance Selection
				where (related.TierLevel                 = LocalTier)

		ContractGPOParticipantRel  
			one-to-many relation to ContractGPOParticipant
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber               = GPOContractNumber
				related.GPOMembership                   = ContractImportGPOMembership                   
			Instance Selection
				where (related.StartDate       > EffectiveDate
				and    related.TierLevel      != Tier)

		ContractImportDistributorForContractRel
			one-to-one relation to ContractImportDistributor
			Field Mapping uses symbolic key
				related.ContractGroup       		= ContractGroup
				related.ContractImport      		= ContractImport
				related.ContractImportDistributor 	= LocalDistributor

   		MembershipExistsRel
   			one-to-many relation to ContractImportTierMember
   			Field Mapping uses ByMembership
				related.ContractGroup 				= ContractGroup
				related.GPOContractNumber      		= GPOContractNumber
				related.ContractImportGPOMembership = LocalGPOMembership   				
   		
   		OtherContractTierMemberRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup 		= ContractGroup
				related.ContractImport      = ContractImport
    		Instance Selection
    			where (related.UniqueID  					!= UniqueID
    			and    related.ContractImportTierMember.Company    = ContractImportTierMember.Company)

		NewParticipantRel
			one-to-many relation to ContractImportTierMember
			Field Mapping uses symbolic key
				related.ContractGroup 								= ContractGroup
				related.ContractImport      						= ContractImport
				related.ContractImportTierMember.Company 			= LocalParticipantLocation.Company
				related.ContractImportTierMember.Location 			= LocalParticipantLocation.Location
				related.ContractImportTierMember.RequestingLocation = LocalParticipantLocation.RequestingLocation
				related.ContractImportTierMember.PricingGroup		= LocalParticipantLocation.PricingGroup
			Instance Selection
				where (related.UniqueID             = !UniqueID)			

		ContractGPOTierHeaderRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByTier
				related.GPOContractNumber   = LocalGPOContractNumber
				related.TierLevel           = LocalTier
		
		ContractGPOHeaderForPurchaseMethodRel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByTier
				related.GPOContractNumber   = GPOContractNumber
			Instance Selection
				where (related.MainContractIndicator = true) 

		ContractGPOHeaderForPurchaseMethod2021Rel
			one-to-many relation to ContractGPOHeader
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber   = GPOContractNumber
				
		ContractTierRel
			one-to-one relation to ContractTier
			Field Mapping uses symbolic key
				related.ContractGroup       		= ContractGroup
				related.Contract		      		= LocalContract
				related.ContractTier			 	= LocalTier

		ContractGPOSupplierRel
			one-to-many relation to ContractGPOSupplier
			Field Mapping uses ByGPOContractNumber
				related.GPOContractNumber           = GPOContractNumber
			Instance Selection
				where (related.HasItems
				and    related.NoParticipants
				and    related.SupplierMappedForNewDistributor) 

	Sets
	
		ByMembership
			Sort Order
				ContractGroup
				GPOContractNumber
				ContractImportGPOMembership
				ContractImportTierMember			
			Instance Selection
				where (MembershipEntered)

		ByMembershipFirst
			Sort Order
				ContractGroup
				ContractImportGPOMembership
				GPOContractNumber
				ContractImportTierMember
			Instance Selection
				where (MembershipEntered)
				
		ByLocationFirst
			Sort Order
				ContractGroup
				ContractImportTierMember.Company    	
				ContractImportTierMember.Location       
				ContractImportTierMember.RequestingLocation 
				ContractImportTierMember.PricingGroup
				ContractImport				
				
	Actions
	
    	Create is a Create Action
			valid when (CanCreate)
		
    		Action Rules
    		
    			if (ContractImport.ServicePurchaseType)
    				constraint (CompanyOnly)
    					"ParticipantForServiceContractMustBeCompanyOnly" 
    		
    		Exit Rules
    		
    			LocalIccompany = ContractImportTierMember.Company   	

				if (ContractImport.Stockless)
					if (HasLocOrReqLoc)
						constraint (ContractImportTierMember.RequestingLocation.Stockless)
							"MustEnterAStocklessRequestingLocationForAStocklessContract"
					constraint (!PricingGroupMember)
						"CannotEnterAPricingGroupForAStocklessContract" 			
 				if (PricingGroupMember)
    				constraint (!ContractImportTierMember.PricingGroup.NoDetails)
    					"CannotEnter;PricingGroupHasNoCompaniesOrLocationsAttached"	
	
		AddMemberToContract is an Instance Action
			valid when (NoContractTierMember)
			
			Action Rules
				invoke AddMembersToContractSet
					invoked.ParmContractGroup 	= ContractGroup
					invoked.ParmContractImport  = ContractImport
					invoked.ParmGPOMembership   = ContractImportGPOMembership 
		
		AddMembersToContractSet is a Set Action
			restricted
			Parameters
				ParmContractGroup		is a ContractGroup
				ParmContractImport		is a ContractImport
				ParmGPOMembership       is a ContractImportGPOMembership
				
			Instance Selection
				where ((NoContractTierMember)
				and    (ParmGPOMembership !entered
				or     (ParmGPOMembership entered
				and     ParmGPOMembership = ContractImportGPOMembership))
				and    (ParmContractImport !entered
				or     (ParmContractImport entered
				and     ParmContractImport = ContractImport)))

			Action Rules
			
				Instance Rules
					for each ContractImport.ContractImportTier set
						LocalTier     = each.ContractImportTier
						LocalContract = DerivedContract
						CanReleaseMembers = true
						if (ContractRel.HasManOrDistMembersToRelease)
							CanReleaseMembers = false
						if (!ContractTierRel exists)
							invoke Create ContractTier
								fill in fields from each.ContractImportTier
								invoked.ContractGroup              = ContractGroup
								invoked.Contract		  		   = DerivedContract
								invoked.ContractTier               = each.ContractImportTier
        			if (ContractRel.ServicePurchaseType)
        				invoke Create ContractParticipant
        					invoked.ContractGroup                       			= ContractGroup
        					invoked.Contract                            			= DerivedContract
        					invoked.ContractParticipant.ParticipantLocation.Company = ContractImportTierMember.Company
        			else
        			if (ContractRel.IsManufacturerContract)
	        			invoke Create ContractTierMember 
	        				invoked.ContractGroup             				= ContractGroup
	        				invoked.Contract                  				= DerivedContract
	        				invoked.ContractTierMember.Company              = ContractImportTierMember.Company                         						
		            		invoked.ContractTierMember.Location           	= ContractImportTierMember.Location 
		            		invoked.ContractTierMember.RequestingLocation 	= ContractImportTierMember.RequestingLocation
		            		invoked.ContractTierMember.PricingGroup			= ContractImportTierMember.PricingGroup
		            		invoked.Tier                                    = Tier
		            		invoked.PurchaseMethod                          = PurchaseMethod
		            		invoked.FromImport                              = true
	            	
						for each ContractImportTierDistributorRel
							LocalDistributor                                = each.ContractImportTierDistributor
							if (ContractImportDistributorForContractRel.DistributorContractNumber entered
							and !ContractImportDistributorForContractRel.DistributorContractNumber.ContractStatus.Closed)
								LocalDistributorContract = ContractImportDistributorForContractRel.DistributorContractNumber
								if (each.DistributorPricingCode entered)
									LocalPricingCode 	= each.DistributorPricingCode
									LocalPricingTitle	= each.DistributorPricingTitle
									LocalMarkupPercent	= each.MarkupPercent
								else
									LocalPricingCode 	= ContractImportDistributorForContractRel.DistributorPricingCode
									LocalPricingTitle	= ContractImportDistributorForContractRel.DistributorPricingTitle
									LocalMarkupPercent	= ContractImportDistributorForContractRel.MarkupPercent 
								if (ContractDistributorPricingRel !exists)
									invoke Create ContractDistributorPricing
										invoked.ContractGroup  												= ContractGroup
										invoked.Contract       												= ContractImportDistributorForContractRel.DistributorContractNumber
										invoked.ContractDistributorPricing                                  = LocalPricingCode
										invoked.Title                                                       = LocalPricingTitle
										invoked.DistributorPricing.DistributorPricingAmtPct.PricingPercent  = LocalMarkupPercent
										if (LocalMarkupPercent = 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "F" 
										else
										if (LocalMarkupPercent > 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "M" 
										else
										if (LocalMarkupPercent < 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "D" 
								invoke Create ContractDistributorPricingMember 
				            		invoked.ContractGroup								 			= ContractGroup
				            		invoked.Contract									 			= ContractImportDistributorForContractRel.DistributorContractNumber
				            		invoked.ContractDistributorPricingMember.Company	 			= ContractImportTierMember.Company
				            		invoked.ContractDistributorPricingMember.Location	 			= ContractImportTierMember.Location
				            		invoked.ContractDistributorPricingMember.RequestingLocation		= ContractImportTierMember.RequestingLocation
				            		invoked.ContractDistributorPricingMember.PricingGroup           = ContractImportTierMember.PricingGroup
				            		invoked.ContractDistributorPricingMember.ManufacturerContract 	= DerivedContract
				            		invoked.MfgContractTierInfo.MfgContract				 			= DerivedContract
				            		invoked.MfgContractTierInfo.Tier					 			= Tier
			            			invoked.PricingIdentifier                                   	= LocalPricingCode
				            		invoked.FromImport                                              = true	 
					if (ContractRel.IsDistributorContract)
						invoke Create ContractDistributorPricingMember 
		            		invoked.ContractGroup								 			= ContractGroup
		            		invoked.Contract									 			= DerivedContract
		            		invoked.ContractDistributorPricingMember.Company	 			= ContractImportTierMember.Company
		            		invoked.ContractDistributorPricingMember.Location	 			= ContractImportTierMember.Location
		            		invoked.ContractDistributorPricingMember.RequestingLocation		= ContractImportTierMember.RequestingLocation
		            		invoked.ContractDistributorPricingMember.PricingGroup           = ContractImportTierMember.PricingGroup
		            		invoked.ContractDistributorPricingMember.ManufacturerContract 	= blank
		            		invoked.MfgContractTierInfo.MfgContract				 			= blank
		            		invoked.MfgContractTierInfo.Tier					 			= Tier
	            			invoked.PricingIdentifier                                   	= ContractImportDistributorForContractRel.DistributorPricingCode
		            		invoked.FromImport                                              = true						
					if ((ContractRel.IsManufacturerContract
					or   ContractRel.IsDistributorContract)
					and  ContractRel.Vendor entered
					and  CanReleaseMembers)
						invoke ExternalReleaseMembers ContractRel
							if (ContractImport.IsManufacturerContract)
								invoked.ReleaseDistributorMembers = true    			
					
		IndirectCreate is a Create Action
			restricted
			Action Rules
			
				if (ContractImport.GPOIsHealthTrust2021
				and LocalTierName entered
				and Tier !entered
				and ContractImportTier2021Rel !exists
				and !FromDistributor
				and !FromService)
					if (ContractImportTestTier1Rel !exists)
						Tier = 1
					else
					if (ContractImportTestTier2Rel !exists)
						Tier = 2
					else
					if (ContractImportTestTier3Rel !exists)
						Tier = 3
					else
					if (ContractImportTestTier4Rel !exists)
						Tier = 4
					else
					if (ContractImportTestTier5Rel !exists)
						Tier = 5

				else
				if (ContractImport.GPOIsHealthTrust2021
				and LocalTierName entered
				and Tier !entered
				and ContractImportTier2021Rel exists
				and !FromDistributor
				and !FromService)				
					Tier = ContractImportTier2021Rel.ContractImportTier
				
				if ((Tier entered
				and !FromDistributor
				and !FromService)
				and (ContractImport.GPOIsHealthTrust
				or   ContractImport.GPOIsHealthTrust2021
				or   ContractImport.GPOIsGHX
				or  (ContractImport.GPOIsVizient
				and  !FromContractCreation)))

					if (ContractImportTierFromMemberRel !exists)
						LocalTier                       = Tier
						LocalGPOContractNumber 			= GPOContractNumber
						invoke Create ContractImportTier
							invoked.ContractGroup     	= ContractGroup
							invoked.ContractImport    	= ContractImport
							invoked.ContractImportTier  = Tier
							if (ContractImport.GPOIsVizient)
								invoked.TierTitle           = Tier
								invoked.Description         = ContractGPOTierHeaderRel.TierDescription
							else
							if (ContractImport.GPOIsHealthTrust)
								invoked.TierTitle           = first ContractGPOTierRel.PricingTierDescription
							else
							if (ContractImport.GPOIsHealthTrust2021
							or  ContractImport.GPOIsGHX)
								invoked.TierTitle           = LocalTierName
								invoked.Description         = LocalTierDescription
							if (ContractImport.MultiTierDistributor
							and first ContractImport.ContractImportDistributorRel.MarkupPercent > 0)
								invoked.TierMarkupDiscount  			= "M"
								invoked.TierPricingAmtPct.TierPercent 	= first ContractImport.ContractImportDistributorRel.MarkupPercent
							else 
								invoked.TierMarkupDiscount  = "F" 											
							invoked.GPOContractNumber   = GPOContractNumber  
			
			Exit Rules
				if (ContractImport.ExpirationDate < ExpirationDate) 
					ExpirationDate = ContractImport.ExpirationDate
				
				if  (!FromDistributor
				and  !FromService
				and (ContractImport.DerivedToContract !entered
				or  (ContractImport.DerivedToContract entered
				and !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
					if (DoNotCreateDistributorContract = false)					
						if (!ContractGroup.GPOIsGHX)
							for each ContractGPODistributorMappedRel   
								LocalDistributorSupplier       = each.ItemSupplier
								LocalTierDistributor           = DistributorSupplierRel.ContractSupplier
								if (ContractImport.Supplier != DistributorSupplierRel.ContractSupplier
								and DistributorHasItems)
									if (ContractImportDistributorRel !exists)
										invoke Create ContractImportDistributor
											invoked.ContractGroup                                   = ContractGroup
											invoked.ContractImport                                  = ContractImport
					            			invoked.ContractImportDistributor                       = DistributorSupplierRel.ContractSupplier
											invoked.GPODistributorSupplier                          = each.ItemSupplier
											invoked.EffectiveDate                                   = each.StartDate
				            				invoked.ExpirationDate                                  = each.EndDate
											invoked.Priority                                        = DistributorPriority
											invoked.StandardMarkupCalculation                       = StandardMarkupCalculation

			    					if (ContractImportTierDistributorDuplicateRel !exists)									
										invoke Create ContractImportTierDistributor
											invoked.ContractGroup                                   = ContractGroup
											invoked.ContractImport                                  = ContractImport
											invoked.ContractImportTierMember.Company                = ContractImportTierMember.Company                         						
											invoked.ContractImportTierMember.Location               = ContractImportTierMember.Location 
											invoked.ContractImportTierMember.RequestingLocation     = ContractImportTierMember.RequestingLocation
											invoked.ContractImportTierMember.PricingGroup		    = ContractImportTierMember.PricingGroup
											invoked.ContractImportTierDistributor                   = DistributorSupplierRel.ContractSupplier
											invoked.ContractImportGPOMembership                     = ContractImportGPOMembership
											if (ContractImport.GPOIsHealthTrust)
												invoked.MarkupPercent                               = each.MarkupPercent/100 
	        			if (ContractImport.GPOIsVizient)
	    					for each ContractGPODistributorMappedMemberManufacturerRel
		    					LocalDistributorSupplier = each.ItemSupplier
		    					LocalTierDistributor     = DistributorSupplierRel.ContractSupplier
		    					LocalGPOMembership       = ContractImportGPOMembership
								if (DistributorHasItems)
									if (ContractImport.Supplier != DistributorSupplierRel.ContractSupplier)
										if (ContractImportDistributorRel !exists)
											invoke Create ContractImportDistributor
												invoked.ContractGroup                                   = ContractGroup
												invoked.ContractImport                                  = ContractImport
						            			invoked.ContractImportDistributor                       = DistributorSupplierRel.ContractSupplier
												invoked.GPODistributorSupplier                          = each.ItemSupplier
												invoked.EffectiveDate                                   = each.StartDate
					            				invoked.ExpirationDate                                  = each.EndDate    					
			    								invoked.Priority			                            = DistributorPriority
												invoked.StandardMarkupCalculation                       = StandardMarkupCalculation
			    					if (ContractImportTierDistributorDuplicateRel !exists)	
										invoke Create ContractImportTierDistributor
											invoked.ContractGroup                                   = ContractGroup
											invoked.ContractImport                                  = ContractImport
											invoked.ContractImportTierMember.Company                = ContractImportTierMember.Company                         						
					            			invoked.ContractImportTierMember.Location               = ContractImportTierMember.Location 
					            			invoked.ContractImportTierMember.RequestingLocation     = ContractImportTierMember.RequestingLocation
					            			invoked.ContractImportTierMember.PricingGroup		    = ContractImportTierMember.PricingGroup
					            			invoked.ContractImportTierDistributor                   = DistributorSupplierRel.ContractSupplier
			        						invoked.ContractImportGPOMembership                     = ContractImportGPOMembership    					    				
						if (!ContractGroup.GPOIsGHX)
		    				for each ContractGPODistributorMappedMemberOnlyRel
		    					LocalDistributorSupplier = each.ItemSupplier
		    					LocalTierDistributor     = DistributorSupplierRel.ContractSupplier
		    					LocalGPOMembership       = ContractImportGPOMembership
								if (DistributorHasItems)
									if (ContractImport.Supplier != DistributorSupplierRel.ContractSupplier)
										if (ContractImportDistributorRel !exists)
											invoke Create ContractImportDistributor
												invoked.ContractGroup                                   = ContractGroup
												invoked.ContractImport                                  = ContractImport
						            			invoked.ContractImportDistributor                       = DistributorSupplierRel.ContractSupplier
												invoked.GPODistributorSupplier                          = each.ItemSupplier
												invoked.EffectiveDate                                   = each.StartDate
					            				invoked.ExpirationDate                                  = each.EndDate    		
					            				invoked.Priority                                        = DistributorPriority
												invoked.StandardMarkupCalculation                       = StandardMarkupCalculation			       			
			    					if (ContractImportTierDistributorDuplicateRel !exists)	
										invoke Create ContractImportTierDistributor
											invoked.ContractGroup                                   = ContractGroup
											invoked.ContractImport                                  = ContractImport
											invoked.ContractImportTierMember.Company                = ContractImportTierMember.Company                         						
					            			invoked.ContractImportTierMember.Location               = ContractImportTierMember.Location 
					            			invoked.ContractImportTierMember.RequestingLocation     = ContractImportTierMember.RequestingLocation
					            			invoked.ContractImportTierMember.PricingGroup		    = ContractImportTierMember.PricingGroup
					            			invoked.ContractImportTierDistributor                   = DistributorSupplierRel.ContractSupplier
			        						invoked.ContractImportGPOMembership                     = ContractImportGPOMembership
			        						if (ContractImport.GPOIsHealthTrust)
			        							invoked.MarkupPercent                               = each.MarkupPercent/100 					
						if (ContractImport.GPOIsHealthTrust2021)
							
							for each ContractGPOSupplierRel    
								LocalGPOSupplier  			= each.GPOSupplier   
								LocalDistributorSupplier 	= each.GPOSupplier
	    						LocalTierDistributor     	= DistributorSupplierRel.ContractSupplier
								
								if (ContractImportDistributorRel !exists)
									invoke Create ContractImportDistributor
										invoked.ContractGroup                                   = ContractGroup
										invoked.ContractImport                                  = ContractImport
				            			invoked.ContractImportDistributor                       = DistributorSupplierRel.ContractSupplier
										invoked.GPODistributorSupplier                          = each.GPOSupplier
										invoked.EffectiveDate                                   = each.ContractDistributorEffectiveDate
				           				invoked.ExpirationDate                                  = each.ContractDistributorExpireDate    		
				           				invoked.Priority                                        = DistributorPriority
		    					if (ContractImportTierDistributorDuplicateRel !exists)	
									
									invoke Create ContractImportTierDistributor
										invoked.ContractGroup                                   = ContractGroup
										invoked.ContractImport                                  = ContractImport
										invoked.ContractImportTierMember.Company                = ContractImportTierMember.Company                         						
				            			invoked.ContractImportTierMember.Location               = ContractImportTierMember.Location 
				            			invoked.ContractImportTierMember.RequestingLocation     = ContractImportTierMember.RequestingLocation
				            			invoked.ContractImportTierMember.PricingGroup		    = ContractImportTierMember.PricingGroup
				            			invoked.ContractImportTierDistributor                   = DistributorSupplierRel.ContractSupplier
		        						invoked.ContractImportGPOMembership                     = ContractImportGPOMembership

						if (ContractImport.GPOIsGHX
						and FromGHXInterface)
							for each ContractGHXVendorParticipantsRel
							
								LocalDistributorSupplier = each.VendorEID
	    						LocalTierDistributor     = DistributorSupplierRel.ContractSupplier
								if (ContractImportDistributorRel !exists)
									invoke Create ContractImportDistributor
										invoked.ContractGroup                                   = ContractGroup
										invoked.ContractImport                                  = ContractImport
						        		invoked.GPODistributorSupplier                          = each.VendorEID
										invoked.ContractImportDistributor                       = DistributorSupplierRel.ContractSupplier
										if (each.Adjustment = 1)
											invoked.LeavePercentAtZero							= true
										else 
										if (each.Adjustment != 1)
											invoked.MarkupPercent                               = each.Adjustment
										
								if (ContractImportTierDistributorDuplicateRel !exists)
									invoke Create ContractImportTierDistributor
										invoked.ContractGroup                                   = ContractGroup
										invoked.ContractImport                                  = ContractImport
										invoked.ContractImportTierMember.Company                = ContractImportTierMember.Company                         						
					            		invoked.ContractImportTierMember.Location               = ContractImportTierMember.Location 
					            		invoked.ContractImportTierMember.RequestingLocation     = ContractImportTierMember.RequestingLocation
					            		invoked.ContractImportTierMember.PricingGroup		    = ContractImportTierMember.PricingGroup
				            			invoked.ContractImportTierDistributor                   = DistributorSupplierRel.ContractSupplier	        						
				            			invoked.ContractImportGPOMembership                     = ContractImportGPOMembership	

					if (!ContractImport.HasAPurchaseType)
						PurchaseMethod = 2
					else
					if (ContractImport.DoNotCreateDistributorContract)
						PurchaseMethod = 1
					else
					if (ContractImport.GPOIsHealthTrust)
						if (first ContractGPOHeaderForPurchaseMethodRel.OrderFromID	= 1)
							PurchaseMethod = 1
						else
						if (first ContractGPOHeaderForPurchaseMethodRel.OrderFromID = 2)
							PurchaseMethod = 2
						else
						if (first ContractGPOHeaderForPurchaseMethodRel.OrderFromID = 3)
							PurchaseMethod = 3
						else
							PurchaseMethod = 4											
					else
					if (ContractImport.GPOIsVizient)
			  			LocalGPOSupplier = ContractImport.ManufacturerSupplier
						if (DistributorsExist
		    			and !PurchaseFromManufacturer)
		    				PurchaseMethod = 2 
		    			else
		    			if ((!DistributorsExist
		    			and PurchaseFromManufacturer)
		    			or  (ContractImport.MultiTierDistributor))
		    				PurchaseMethod = 1 
		    			else
		    			if (DistributorsExist
		    			and PurchaseFromManufacturer)
		    				PurchaseMethod = 3 
		    			else
		    				PurchaseMethod = 4 
					else
					if (ContractImport.GPOIsHealthTrust2021)	
						if (first ContractGPOHeaderForPurchaseMethod2021Rel.PurchasingChannel contains "Direct")
							if (!DistributorsExist
							and !HasTierDistributorRecords)
								PurchaseMethod = 1
							else
								PurchaseMethod = 3
						else
						if (first ContractGPOHeaderForPurchaseMethod2021Rel.PurchasingChannel contains "Distributed")
							PurchaseMethod = 2
						else
						if (first ContractGPOHeaderForPurchaseMethod2021Rel.PurchasingChannel contains "Both")
							PurchaseMethod = 3
						else
							PurchaseMethod = 4
					else
					if (ContractImport.GPOIsGHX
					and !LocalFromGHXUpdate)
						if  (HasDirectGHXParticipants
						and !HasNotDirectGHXParticipants)
							PurchaseMethod = 1
						else
						if  (!HasDirectGHXParticipants
						and   HasNotDirectGHXParticipants)
							PurchaseMethod = 2
						else
						if  (HasDirectGHXParticipants
						and  HasNotDirectGHXParticipants)
							PurchaseMethod = 3							   							

        		if (FromDistributor)
					
					if (ContractImportDistributorDirectRel !exists)
						invoke Create ContractImportDistributor
							invoked.ContractGroup                                   = ContractGroup
							invoked.ContractImport                                  = ContractImport
	            			invoked.ContractImportDistributor                       = ContractImport.Supplier
							invoked.GPODistributorSupplier                          = ContractImport.ManufacturerSupplier
							invoked.MarkupPercent									= 0
							invoked.EffectiveDate                                   = EffectiveDate
	        				invoked.ExpirationDate                                  = ExpirationDate
        					invoked.LeavePercentAtZero                              = true
							invoked.StandardMarkupCalculation                       = StandardMarkupCalculation
							        		
        		if ((FromNewMember
        		or  FromNewParticipant) 
        		and DerivedContract entered
        		and DerivedContractOpen)
					LocalUpdateContract = DerivedContract
					for each ContractImport.ContractImportTier set
						LocalTier     = each.ContractImportTier
						LocalContract = DerivedContract
						if (ContractTierRel !exists)
							invoke Create ContractTier
								fill in fields from each.ContractImportTier
								invoked.ContractGroup              = ContractGroup
								invoked.Contract		  		   = DerivedContract
								invoked.ContractTier               = each.ContractImportTier
        			if (ContractRel.ServicePurchaseType)
        				invoke Create ContractParticipant
        					invoked.ContractGroup                       			= ContractGroup
        					invoked.Contract                            			= DerivedContract
        					invoked.ContractParticipant.ParticipantLocation.Company = ContractImportTierMember.Company
        			else
        			if (ContractRel.IsManufacturerContract)
	        			if (ContractTierMemberRel !exists)
		        			invoke Create ContractTierMember 
		        				invoked.ContractGroup             				= ContractGroup
		        				invoked.Contract                  				= DerivedContract
		        				invoked.ContractTierMember.Company              = ContractImportTierMember.Company                         						
			            		invoked.ContractTierMember.Location           	= ContractImportTierMember.Location 
			            		invoked.ContractTierMember.RequestingLocation 	= ContractImportTierMember.RequestingLocation
			            		invoked.ContractTierMember.PricingGroup			= ContractImportTierMember.PricingGroup
			            		invoked.Tier                                    = Tier
			            		invoked.PurchaseMethod                          = PurchaseMethod
			            		invoked.FromImport                              = true
	            	
						for each ContractImportTierDistributorRel
							LocalDistributor                                = each.ContractImportTierDistributor
							if (ContractImportDistributorForContractRel.DistributorContractNumber entered
							and !ContractImportDistributorForContractRel.DistributorContractNumber.ContractStatus.Closed)
								LocalDistributorContract = ContractImportDistributorForContractRel.DistributorContractNumber
								if (each.DistributorPricingCode entered)
									LocalPricingCode 	= each.DistributorPricingCode
									LocalPricingTitle	= each.DistributorPricingTitle
									LocalMarkupPercent	= each.MarkupPercent
								else
									LocalPricingCode 	= ContractImportDistributorForContractRel.DistributorPricingCode
									LocalPricingTitle	= ContractImportDistributorForContractRel.DistributorPricingTitle
									LocalMarkupPercent	= ContractImportDistributorForContractRel.MarkupPercent 
								if (ContractDistributorPricingRel !exists)
									invoke Create ContractDistributorPricing
										invoked.ContractGroup  												= ContractGroup
										invoked.Contract       												= ContractImportDistributorForContractRel.DistributorContractNumber
										invoked.ContractDistributorPricing                                  = LocalPricingCode
										invoked.Title                                                       = LocalPricingTitle
										invoked.DistributorPricing.DistributorPricingAmtPct.PricingPercent  = LocalMarkupPercent
										if (LocalMarkupPercent = 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "F" 
										else
										if (LocalMarkupPercent > 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "M" 
										else
										if (LocalMarkupPercent < 0)
											invoked.DistributorPricing.PricingMarkupDiscount                = "D" 
								LocalDistributorContract = ContractImportDistributorForContractRel.DistributorContractNumber
								if (DistributorPricingMemberFromManufacturerRel !exists)
									invoke Create ContractDistributorPricingMember 
					            		invoked.ContractGroup								 			= ContractGroup
					            		invoked.Contract									 			= ContractImportDistributorForContractRel.DistributorContractNumber
					            		invoked.ContractDistributorPricingMember.Company	 			= ContractImportTierMember.Company
					            		invoked.ContractDistributorPricingMember.Location	 			= ContractImportTierMember.Location
					            		invoked.ContractDistributorPricingMember.RequestingLocation		= ContractImportTierMember.RequestingLocation
					            		invoked.ContractDistributorPricingMember.PricingGroup           = ContractImportTierMember.PricingGroup
					            		invoked.ContractDistributorPricingMember.ManufacturerContract 	= DerivedContract
					            		invoked.MfgContractTierInfo.MfgContract				 			= DerivedContract
					            		invoked.MfgContractTierInfo.Tier					 			= Tier
				            			invoked.PricingIdentifier                                   	= LocalPricingCode
					            		invoked.FromImport                                              = true	 
					if (ContractRel.IsDistributorContract)
						if (ContractDistributorPricingMemberRel !exists)
							invoke Create ContractDistributorPricingMember 
			            		invoked.ContractGroup								 			= ContractGroup
			            		invoked.Contract									 			= DerivedContract
			            		invoked.ContractDistributorPricingMember.Company	 			= ContractImportTierMember.Company
			            		invoked.ContractDistributorPricingMember.Location	 			= ContractImportTierMember.Location
			            		invoked.ContractDistributorPricingMember.RequestingLocation		= ContractImportTierMember.RequestingLocation
			            		invoked.ContractDistributorPricingMember.PricingGroup           = ContractImportTierMember.PricingGroup
			            		invoked.ContractDistributorPricingMember.ManufacturerContract 	= DerivedContract
			            		invoked.MfgContractTierInfo.MfgContract				 			= blank
			            		invoked.MfgContractTierInfo.Tier					 			= Tier
		            			invoked.PricingIdentifier                                   	= ContractImportDistributorForContractRel.DistributorPricingCode
			            		invoked.FromImport                                              = true						
					if ((ContractRel.IsManufacturerContract
					or   ContractRel.IsDistributorContract)
					and  ContractRel.Vendor entered
					and !MultipleMembers)
						invoke ExternalReleaseMembers ContractRel
						
		Update is an Update Action

			Action Rules
				if (PurchaseMethod changed)
					if (old PurchaseMethod = 2
					and ContractImport.DistributedPurchasingChannel)
						constraint (!CannotUpdateGPO)
							"CannotChangePurchaseMethod;PurchasingChannelIsDistributed"
					if (old PurchaseMethod = 1
					and ContractImport.DirectPurchasingChannel)
						constraint (!CannotUpdateGPO)
							"CannotChangePurchaseMethod;PurchasingChannelIsDirect"					

		Delete is a Delete Action
		
		SetPurchaseMethodToNone is an Instance Action
			valid when (CanSetPurchaseMethodToNone)
			Action Rules
				PurchaseMethod = 4 
				LocalUpdateContract = DerivedContract
				if (ContractTierMemberRel exists)
					invoke UpdatePurchaseMethod ContractTierMemberRel
						invoked.ParmContractGroup  = ContractGroup
    					invoked.ParmContract       = DerivedContract
    					invoked.ParmPurchaseMethod = 4 

		UpdateExpirationDatesFromHeaderUpdate is a Set Action 
			restricted
			Parameters
				ParmContractGroup           is a ContractGroup
        		ParmContractImport          is like ContractImport			
				ParmOldExpirationDate       is Date
				ParmNewExpirationDate       is Date

			Instance Selection
				where (ParmContractGroup 	= ContractGroup
				and    ParmContractImport   = ContractImport)
			
			Action Rules
				Instance Rules
					
					if ((ContractImport.GPOIsHealthTrust
					or   ContractImport.GPOIsVizient)
					and  ContractGPOParticipantsRel exists
					and  first ContractGPOParticipantsRel.EndDate = ParmNewExpirationDate
					and  ExpirationDate                           = ParmOldExpirationDate)
						ExpirationDate	= ParmNewExpirationDate
					
					if (ContractImport.GPOIsHealthTrust2021
					and ContractGPOParticipants2021Rel exists
					and first ContractGPOParticipants2021Rel.EndDate = ParmNewExpirationDate
					and ExpirationDate								 = ParmOldExpirationDate)
						ExpirationDate	= ParmNewExpirationDate

		ProcessUpdatedParticipants is a Set Action    
			restricted
			Parameters
				ParmContractGroup           is a ContractGroup
				ParmGPOSupplier   			is like Supplier     
        		ParmContractImport          is like ContractImport
        		AutoUpdateContracts  		is Boolean
				ProcessOnlyUpdatedRecords   is Boolean 
								
			Instance Selection
				where (ParmContractGroup 				= ContractGroup
				and    ParmGPOSupplier                  = ContractImport.GPOSupplier.Supplier
				and   (ParmContractImport               !entered
				or     ParmContractImport               = ContractImport)
				and   (ProcessOnlyUpdatedRecords = false
				or    (ProcessOnlyUpdatedRecords = true
				and    ContractImport.HeaderUpdated))
				and   (ContractImport.DerivedToContract !entered
				or    (ContractImport.DerivedToContract entered
				and   !ContractImport.ContractsFromImportNavRel.Contract.ContractStatus.Closed)))
				
			Sort Order
				ContractGroup
				ContractImport
				ContractImportTierMember
			
			Action Rules
			
				ContractImport Set Rules
				
					Exit Rules
					
						for each ContractImport.ContractImportTier set
							LocalTier     = each.ContractImportTier
							LocalContract = LocalUpdateContract							
							if (ContractImport.ContractsFromImport)
								if (!ContractTierRel exists)
									invoke Create ContractTier
										fill in fields from each.ContractImportTier
										invoked.ContractGroup              = ContractGroup
										invoked.Contract		  		   = LocalUpdateContract
										invoked.ContractTier               = each.ContractImportTier							
					
						invoke CheckForNewTierCosts ContractLineImport
							invoked.ParmContractGroup       	= ContractGroup
							invoked.ParmContractImport         	= ContractImport 
							invoked.AutoUpdateContracts         = AutoUpdateContracts
								
				Instance Rules

					LocalUpdateContract 	= ContractImport.DerivedToContract				
					LocalContractGroup  	= ContractGroup
					LocalContractImport 	= ContractImport					
					LocalGPOContractNumber 	= GPOContractNumber					
					if (ContractGPOParticipantHasTierRel exists)
						if (ContractUpdatedGPOParticipantRel exists
						and !ContractImport.GPOIsVizient)
							LocalTier 			= first ContractUpdatedGPOParticipantRel.TierLevel
							LocalEffectiveDate  = first ContractUpdatedGPOParticipantRel.StartDate
							LocalExpirationDate = first ContractUpdatedGPOParticipantRel.EndDate
							LocalTierName       = first ContractUpdatedGPOParticipantRel.TierName
							if (ContractImportTierNewRel !exists)
								NewContractTierNeeded = true
								invoke Create ContractImportTier
									invoked.ContractGroup     	= ContractGroup
									invoked.ContractImport    	= ContractImport
									invoked.ContractImportTier  = LocalTier
									if (ContractImport.GPOIsVizient)
										invoked.TierTitle           = LocalTier
										invoked.Description         = ContractGPOTierHeaderRel.TierDescription
									else
									if (ContractImport.GPOIsHealthTrust)
										invoked.TierTitle           = first ContractGPOTierRel.PricingTierDescription
									if (ContractImport.GPOIsHealthTrust2021)
										invoked.TierTitle           = first ContractUpdatedGPOParticipantRel.TierName 
										invoked.Description         = first ContractUpdatedGPOParticipantRel.TierDefinition
									if (ContractImport.MultiTierDistributor
									and first ContractImport.ContractImportDistributorRel.MarkupPercent > 0)
										invoked.TierMarkupDiscount  			= "M"
										invoked.TierPricingAmtPct.TierPercent 	= first ContractImport.ContractImportDistributorRel.MarkupPercent
									else 
										invoked.TierMarkupDiscount  = "F" 											
									invoked.GPOContractNumber   = GPOContractNumber  
							EffectiveDate       = first ContractUpdatedGPOParticipantRel.StartDate
							ExpirationDate      = LocalExpirationDate					
							Tier                = LocalTier
							Updated             = true
						if (ContractImport.GPOIsVizient
						and ContractUpdatedGPOParticipantVizientRel exists)
							LocalTier 			= first ContractUpdatedGPOParticipantVizientRel.TierLevel
							LocalEffectiveDate  = first ContractUpdatedGPOParticipantVizientRel.StartDate
							LocalExpirationDate = first ContractUpdatedGPOParticipantVizientRel.EndDate
							if (ContractImportTierNewRel !exists)
								NewContractTierNeeded = true
								invoke Create ContractImportTier
									invoked.ContractGroup     	= ContractGroup
									invoked.ContractImport    	= ContractImport
									invoked.ContractImportTier  = LocalTier
									invoked.TierTitle           = LocalTier
									invoked.Description         = ContractGPOTierHeaderRel.TierDescription
									if (ContractImport.MultiTierDistributor
									and first ContractImport.ContractImportDistributorRel.MarkupPercent > 0)
										invoked.TierMarkupDiscount  			= "M"
										invoked.TierPricingAmtPct.TierPercent 	= first ContractImport.ContractImportDistributorRel.MarkupPercent
									else 
										invoked.TierMarkupDiscount  = "F" 											
									invoked.GPOContractNumber   = GPOContractNumber  
							EffectiveDate       = LocalEffectiveDate 
							ExpirationDate      = LocalExpirationDate					
							Tier                = LocalTier
							Updated             = true
					else
					if (ContractImport.GPOIsHealthTrust2021)
						LocalTierName       = ContractImportTierFromMemberRel.TierTitle  
						if (ContractUpdatedGPOParticipant2021Rel exists)
							
							LocalTierName 		= first ContractUpdatedGPOParticipant2021Rel.TierName
							LocalTierDefinition = first ContractUpdatedGPOParticipant2021Rel.TierDefinition
							if (ContractImportTierNew2021Rel !exists)
								if (ContractImportTestTier1Rel !exists)
									DefaultedTier = 1
								else
								if (ContractImportTestTier2Rel !exists)
									DefaultedTier = 2
									
								else
								if (ContractImportTestTier3Rel !exists)
									DefaultedTier = 3
								else
								if (ContractImportTestTier4Rel !exists)
									DefaultedTier = 4
								else
								if (ContractImportTestTier5Rel !exists)
									DefaultedTier = 5
								NewContractTierNeeded = true
								invoke Create ContractImportTier
									invoked.ContractGroup     	= ContractGroup
									invoked.ContractImport    	= ContractImport
									invoked.ContractImportTier  = DefaultedTier
									invoked.TierTitle           = LocalTierName
									invoked.Description         = LocalTierDefinition
									if (ContractImport.MultiTierDistributor
									and first ContractImport.ContractImportDistributorRel.MarkupPercent > 0)
										invoked.TierMarkupDiscount  			= "M"
										invoked.TierPricingAmtPct.TierPercent 	= first ContractImport.ContractImportDistributorRel.MarkupPercent
									else 
										invoked.TierMarkupDiscount  = "F" 											
									invoked.GPOContractNumber   = GPOContractNumber  
							else
							if (ContractImportTierNew2021Rel exists)
								
								DefaultedTier = ContractImportTierNew2021Rel.ContractImportTier
							
							ExpirationDate      = first ContractUpdatedGPOParticipant2021Rel.EndDate
							EffectiveDate       = first ContractUpdatedGPOParticipant2021Rel.StartDate
							Tier                = DefaultedTier
							Updated             = true												

		DeleteOldTierMember is an Instance Action
			restricted	
			Action Rules
				
				OldParticipantCompany 				= ContractImportTierMember.Company
				OldParticipantLocation      		= ContractImportTierMember.Location
				OldParticipantRequestingLocation	= ContractImportTierMember.RequestingLocation
				OldParticipantPricingGroup			= ContractImportTierMember.PricingGroup
				if (DerivedContract entered)
					if (ContractImport.IsManufacturerContract)
						invoke Delete OldContractTierMemberRel
					if (ContractImport.IsDistributorContract)
						invoke Delete OldDistributorPricingMemberRel
					
				invoke Delete OldImportTierMemberRel				

		UpdateContractTier is an Instance Action
			valid when (TiersDoNotMatch)
			confirmation required
				"ThisActionWillProcessAllUpdatedTiersForThisContractInterfaceRecord;DoYouWishToContinue?"
			Action Rules
				invoke UpdateContractTiers
					invoked.ParmContractGroup  = ContractGroup
					invoked.ParmContractImport = ContractImport
					invoked.ParmUpdateContract = ContractImport.DerivedToContract
		
		UpdateMemberID is an Instance Action
			restricted
			Parameters
				ParmContractImportGPOMembership is a ContractImportGPOMembership
			Action Rules
			
				LocalGPOMembership = ParmContractImportGPOMembership
				if (MembershipForUpdateRel exists
				and MembershipExistsRel !exists)
					ContractImportGPOMembership = ParmContractImportGPOMembership	
		
		DeterminePurchaseMethod is an Instance Action 
			restricted 

			Action Rules

				LocalGPOSupplier = ContractImportRel.ManufacturerSupplier
				if (HasTierDistributorRecords
				and !PurchaseFromManufacturer)
					PurchaseMethod = 2 
				else
				if ((!HasTierDistributorRecords
				and PurchaseFromManufacturer)
				or  (ContractImport.MultiTierDistributor))
					PurchaseMethod = 1 
				else
				if (HasTierDistributorRecords
				and PurchaseFromManufacturer)
					PurchaseMethod = 3 
				else
					PurchaseMethod = 4 
		
		UpdateContractTiers is a Set Action     
			restricted
			Parameters
				ParmContractGroup                   is a ContractGroup         
				ParmContractImport                  is a ContractImport
				ParmUpdateContract                  is a Contract
								
			Instance Selection
				where (ParmContractGroup 			= ContractGroup
				and    ParmContractImport           = ContractImport
				and    EffectiveDate 			   <= current corporate date)
		
			Action Rules
			
				Instance Rules
					LocalUpdateContract   = ParmUpdateContract 
					if (ContractTierMemberRel exists
					and ContractTierMemberRel.Tier != Tier)
						
						invoke UpdateTier ContractTierMemberRel
							invoked.ParmContractGroup    = ContractGroup
		    				invoked.ParmContract         = LocalUpdateContract
		    				invoked.ParmTier             = Tier						
						Updated = false
