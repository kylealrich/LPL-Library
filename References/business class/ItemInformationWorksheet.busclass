ItemInformationWorksheet is a BusinessClass
	owned by po
	prefix is Ite9
	
	Ontology
		symbolic key is ItemInformationWorksheet
		
	Patterns
        implements StaticJava
        disable AuditIndex
		disable Auditing 
       	disable EffectiveDated
       	disable DataTranslations
	
	Persistent Fields
		RunGroup                is AlphaUpper 30
		InterfacedItem          is AlphaUpper 32
			default label is "ManualItemNumber"
		Description
		Description2			is a Description
		Description3        
		VendorItemNew
		ItemUOMNew
		ItemCommentNew
		StockUOM    			is a UnitOfMeasure
		Manufacturer
		ManufacturerNumber
		ItemGTINDetails
		ItemSKUDetails
		HIBCCItemUPNDetails
		ItemUPCDetails
		NationalDrugCodeDetails
		UCCEANItemUPNDetails
		NumberOfDecimalsQuantity 				
    	GenericName
		MajorPurchasingClass			
		MinorPurchasingClass
			context of MajorPurchasingClass			
		MajorInventoryClass
		MinorInventoryClass
			context of MajorInventoryClass
		UNSPSCCode				
		UNSPSCFull              is AlphaUpper 8   
			default label is "UNSPSCCode"
		CommodityCode	        
		UserField1 				is AlphaUpper size 30
		UserField2 				
		UserField3 				is a UserField2
		UserField4 				is a UserField2
		UserField5 				is a UserField2
		UserFieldN1 			is an InternationalCost			
		UserFieldN2 			is an InternationalCost			
		UserFieldN3 			is an InternationalCost			
		ItemErrorFlag           is Boolean
		ContractsExistFlag      is Boolean       
			restricted
		FinalItemNumber			is an Item
			default label is "ItemNumber"
		Reference1				is a Reference
		Reference2				is a Reference
		CatchWeightCode 		is AlphaUpper size 1
			States
                NotCatchWeight             value is "N"
                AllTransactionsRequireBoth value is "A"
                IssueRequiresBoth          value is "I"
                ReceiptRequiresBoth        value is "R"	
		SecondaryUOM 			is a UnitOfMeasure
		SecondaryUOMConversion  is a UOMConversion 
		UOMConversion
			precision is 2
			default label is "UnitOfUseConversion"
		CatchWeightVariancePercent
		AddedDate               is Date
		EffectiveDate			is Date
		ExpirationDate			is Date
		FreightClass
		MajorSalesClass
		MinorSalesClass
			context of MajorSalesClass
		PurchaseTaxable
		PurchaseTaxCode         is a TaxCode
		ProductTaxCategory
		HarmonizeCode
		StockWeight
		StockVolume
		NumberOfDecimalsCost
		NumberOfDecimalsPrice   is a NumberOfDecimalsCost
		LotTracked
		SerialTracked
		CertificationRequired   is Boolean
		KitItem                 is Boolean
		BrokenCaseCharge        is Boolean
		ReplacementItem         is Alpha 32
		MSDSRequired            is Boolean
		UsageIdentifier         is an ItemUsageIdentifier
		Consignment              is Boolean
		InspectionRequired       is Boolean
		ICNCode
		CapitalTechnical
		AllowCustomerOrderReturns is AlphaUpper 1
			States
				Yes				value is "Y"
				No				value is "N"
				Limit			value is "L"
		IssueAccount             is a FinanceCodeBlockAccountOnly
		Picture		           	 is an ImageAttachment
		HazardCode
		ChargeNumber
		ClinicalSystemUse        is Boolean
		Latex					 is Numeric 1
			States
				Unspecified						value is 0
				PackageIndicatesLatex			value is 1
				LatexFree               		value is 2
				NotApplicable					value is 3
		HasExpirationDate	     is Boolean
		PatientChargeable		 is Boolean
		HCPCSCode
		Active                   is Boolean
		OriginatingNotice        is a RecallNotice
		OriginatingNoticeProduct is a RecallProduct
		UDITracked
		CriticalItem				is Boolean
		PersonalProtectiveEquipment	is Boolean
		MajorPPEClass				is like MajorPPEClass
		MinorPPEClass				is like MinorPPEClass
		GMDNPTCode
		HSNSACCode
		Sterile                     is Boolean 
		SingleUse                   is Boolean 
		Reusable                    is Boolean
		Reprocessed                 is Boolean 
		Implantable                 is Boolean 
		ContainsHumanTissue         is Boolean 
		Pharmaceutical              is Boolean 
		Dressing                    is Boolean 
		Bioabsorbable               is Boolean  
		Narcotic                    is Boolean 
		Instrument                  is Boolean 
		Drugs                       is Boolean 
		Analytics                   is Boolean 
		SpecialHandlingCode
		SpecialHandlingInstructions	is a Description4
		HandlingTimeInMinutes		is Numeric 3
	Local Fields
	
		GTINCheckDigit
		LocalValidCheckDigit    is Boolean
		LocalVendor             is like Vendor
		LocalVendorItem         is like VendorItem
		LocalResult             is an ItemInformationWorksheetResult
		LocalRunGroup           is AlphaUpper 30
		LocalInventoryCompany   is like InventoryCompany
		LocalInventoryReportGroup is like InventoryReportGroup
		LocalItem               is like Item
		EnteredFinalItemNumber  is like Item
		LocalInventoryLocation  is like InventoryLocation
		DefaultBuyCount 					is Numeric 1
		DefaultSellCount                 	is Numeric 1
		DefaultSellPriceCount            	is Numeric 1
		DefaultInventoryTransactionCount 	is Numeric 1
		LocalCommentTypeExists  is Boolean
		TempCounter1			is Numeric 2
		LocalItemCommentType    is like ItemCommentType
		LocalUOM                is like UnitOfMeasure
		LocalGTIN               is like ItemGTIN

	Transient Fields
		ContextManufacturer     	is a Manufacturer
			derive value from Manufacturer	
		ContextManufacturerNumber 	is a ManufacturerNumber
			derive value from ManufacturerNumber
	
	Derived Fields
		EverythingExistsMessage         is a MessageField
			restricted
			"AllRecordsAlreadyExist;WorksheetItemWillBeDeletedWhenCreateItemInformationRun"
		ReadyToCreateItemMessage		is a MessageField
			restricted
			"ReadyToCreateItem"
		ReadyToCreateOtherMessage		is a MessageField
			restricted
			"ItemExists;ReadyToCreateVendorItemsOrItemLocationsOrOtherRecords"
		ErrorsExistMessage              is a MessageField
			restricted
			"CannotProcess;ErrorsExist"

		ItemByManufacturerCount         is a ComputeField
			type is Numeric 6
			restricted
			(instance count of ItemByManufacturerRel)
		
		ItemAlphaHCPCSSequence	is a DerivedField
			type is AlphaUpper 6
			if (HCPCSCode.Sequence < 10)
				return "00000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 100)
				return "0000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 1000)
				return "000" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 10000)
				return "00" + HCPCSCode.Sequence
			else
			if (HCPCSCode.Sequence < 100000)
				return "0" + HCPCSCode.Sequence
			else
				return HCPCSCode.Sequence

		Status							is a ConditionalField
			type is Alpha 100
			if (ItemErrorsExist)
				ErrorsExistMessage
			else
			if (!SomethingToAdd)
				EverythingExistsMessage					
			else
			if (!ItemExists)
				ReadyToCreateItemMessage
			else
				ReadyToCreateOtherMessage

	Relations
		
		VendorItemUOMRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = FinalItemNumber
				related.UnitOfMeasure              = LocalUOM
		
		VendorItemUOMValidBuyRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = FinalItemNumber
				related.UnitOfMeasure              = LocalUOM
			Instance Selection
				where (related.OKForBuying)
		
		SubItemUOMRel
			one-to-many relation to ItemUOM
			Field Mapping uses symbolic key
				related.ItemGroup                  = ItemGroup
				related.Item                       = FinalItemNumber
				related.UnitOfMeasure              = LocalUOM
		
		SameGTINRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet  != ItemInformationWorksheet
				and    related.ItemGTINDetails.ItemGTIN = ItemGTINDetails.ItemGTIN
				and    ItemGTINDetails.ItemGTIN entered)
		
		ItemGTINRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set2
				related.ItemGroup	= ItemGroup
				related.ItemGTIN	= ItemGTINDetails.ItemGTIN
		
		ParentItemGTINRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set2
				related.ItemGroup	= ItemGroup
				related.ItemGTIN	= ItemGTINDetails.ParentGTIN
		
		InterfaceParentItemGTINRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet != ItemInformationWorksheet
				and	   related.ItemGTINDetails.ItemGTIN  = ItemGTINDetails.ParentGTIN) 
		
		OtherItemGTINRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set2
				related.ItemGroup	= ItemGroup
				related.ItemGTIN	= ItemGTINDetails.ItemGTIN
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
		
		DefaultInventoryAccountGroupRel
			one-to-many relation to GeneralLedgerCategory
			Field Mapping uses symbolic key
				related.Company           = LocalInventoryCompany 
				related.InventoryLocation = LocalInventoryLocation
			Instance Selection
				where (related.Default)
		
		ContractGroupRel 
			one-to-one relation to ContractGroup 
			Field Mapping uses symbolic key 
				related.ContractGroup     = ItemGroup 
		
		UNSPSCFullExistsRel 
			one-to-one relation to UNSPSCCode
			Field Mapping uses symbolic key
				related.ItemGroup           		= ItemGroup
				related.UNSPSCCode.UNSPSCSegment 	= UNSPSCFull[1:2]
				related.UNSPSCCode.UNSPSCFamily  	= UNSPSCFull[3:4]
				related.UNSPSCCode.UNSPSCClass   	= UNSPSCFull[5:6]
				related.UNSPSCCode.UNSPSCCommodity	= UNSPSCFull[7:8]			

		UNSPSCSegmentExistsRel 
			one-to-one relation to UNSPSCCode
			Field Mapping uses symbolic key
				related.ItemGroup           		= ItemGroup
				related.UNSPSCCode.UNSPSCSegment 	= UNSPSCFull[1:2]
				related.UNSPSCCode.UNSPSCFamily  	= "00"
				related.UNSPSCCode.UNSPSCClass   	= "00"
				related.UNSPSCCode.UNSPSCCommodity	= "00"	

		UNSPSCFamilyExistsRel 
			one-to-one relation to UNSPSCCode
			Field Mapping uses symbolic key
				related.ItemGroup           		= ItemGroup
				related.UNSPSCCode.UNSPSCSegment 	= UNSPSCFull[1:2]
				related.UNSPSCCode.UNSPSCFamily  	= UNSPSCFull[3:4]
				related.UNSPSCCode.UNSPSCClass   	= "00"
				related.UNSPSCCode.UNSPSCCommodity	= "00"					

		UNSPSCClassExistsRel 
			one-to-many relation to UNSPSCCode
			Field Mapping uses symbolic key
				related.ItemGroup           		= ItemGroup
				related.UNSPSCCode.UNSPSCSegment 	= UNSPSCFull[1:2]
				related.UNSPSCCode.UNSPSCFamily  	= UNSPSCFull[3:4]
				related.UNSPSCCode.UNSPSCClass   	= UNSPSCFull[5:6]
				related.UNSPSCCode.UNSPSCCommodity	= "00"	

		ContractItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByItemContractLine
				related.ContractGroup    = ItemGroup
				related.ItemNumber   	 = InterfacedItem
			Instance Selection
				where (!related.ContractLineState.Closed
				and     related.ItemType.Special
				and     related.CanUseForCostDefaulting
				and    !related.ErrorsExist
				and    !related.SelectedForItemCreation)
		
		ContractLineResetRel
			one-to-many relation to ContractLine
			Field Mapping uses ByMfgInfoVenItem
				related.ContractGroup           			= ItemGroup
				related.Manufacturer.ManufacturerCode 		= Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision 	= Manufacturer.ManufacturerDivision
			Instance Selection
				where (related.SelectedForItemCreation = true)

		ContractLineFromManufacturerRel
			one-to-many relation to ContractLine
			Field Mapping uses BySpecialItemCreate
				related.ContractGroup   					= ItemGroup
			Instance Selection
				where (((related.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
				and     related.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
				and     related.ManufacturerNumber					= ManufacturerNumber
				and     Manufacturer.ManufacturerCode entered
				and     ManufacturerNumber entered)
				or     (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerCode entered
				and     VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
				and     related.Contract.Vendor                     = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				and     related.Manufacturer.ManufacturerCode		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerCode
				and     related.Manufacturer.ManufacturerDivision	= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerDivision
				and     related.ManufacturerNumber					= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber)
				or     (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerCode entered
				and     VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered
				and     related.Contract.Vendor                     = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				and     related.Manufacturer.ManufacturerCode		= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerCode
				and     related.Manufacturer.ManufacturerDivision	= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerDivision
				and     related.ManufacturerNumber					= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber)
				or     (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerCode entered
				and     VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber entered
				and     related.Contract.Vendor                     = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				and     related.Manufacturer.ManufacturerCode		= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerCode
				and     related.Manufacturer.ManufacturerDivision	= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerDivision
				and     related.ManufacturerNumber					= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber)
				or     (ItemGTINDetails.Manufacturer.ManufacturerCode entered
				and     ItemGTINDetails.ManufacturerNumber entered
				and     related.Manufacturer.ManufacturerCode		= ItemGTINDetails.Manufacturer.ManufacturerCode
				and     related.Manufacturer.ManufacturerDivision	= ItemGTINDetails.Manufacturer.ManufacturerDivision
				and     related.ManufacturerNumber					= ItemGTINDetails.ManufacturerNumber))
				and   ((related.ItemNumber                         != EnteredFinalItemNumber
				and     related.ItemNumber entered)
				or      related.ItemNumber !entered)
				and    !related.ContractLineState.Closed)
				
		ContractLineFromVendorItemRel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemVendor
				related.ContractGroup          = ItemGroup
			Instance Selection
				where ((related.VendorItem      = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				and     related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor)
				or     (related.VendorItem      = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				and     related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor)
				or     (related.VendorItem      = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
				and     related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor)
				and     related.FromWorksheetResult not entered
				and     related.ItemNumber     != FinalItemNumber
				and     related.VendorItem        entered
				and     related.ContractLineState.Closed)
		
		ContractLineFromVendorItem1Rel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemVendor
				related.ContractGroup          = ItemGroup
				related.VendorItem             = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
			Instance Selection
				where (related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				and    related.FromWorksheetResult not entered
				and    related.ItemNumber     != FinalItemNumber
				and   !related.ContractLineState.Closed)

		ContractLineFromVendorItem2Rel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemVendor
				related.ContractGroup          = ItemGroup
				related.VendorItem             = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
			Instance Selection
				where (related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				and    related.FromWorksheetResult not entered
				and    related.ItemNumber     != FinalItemNumber
				and   !related.ContractLineState.Closed)

		ContractLineFromVendorItem3Rel
			one-to-many relation to ContractLine
			Field Mapping uses ByVendorItemVendor
				related.ContractGroup          = ItemGroup
				related.VendorItem             = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
			Instance Selection
				where (related.Contract.Vendor = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				and    related.FromWorksheetResult not entered
				and    related.ItemNumber     != FinalItemNumber
				and   !related.ContractLineState.Closed)

		ManualItemRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses ByManualItem
				related.ItemGroup         = ItemGroup
				related.InterfacedItem    = InterfacedItem
			Instance Selection
				where (related.UniqueID   != UniqueID)
		
		DuplicateUCCEANItemUPNUOMRel
			one-to-many relation to UCCEANItemUPN
			Field Mapping uses Set5
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= UCCEANItemUPNDetails.UnitOfMeasure
			Instance Selection
				where (related.UCCEANItemUPN != UCCEANItemUPNDetails.UCCEANItemUPN)
		
		DuplicateHIBCCItemUPNUOMRel
			one-to-many relation to HIBCCItemUPN
			Field Mapping uses Set5
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= HIBCCItemUPNDetails.UnitOfMeasure
			Instance Selection
				where (related.HIBCCItemUPN != HIBCCItemUPNDetails.HIBCCItemUPN)		
		
		DuplicateSKUUOMRel
			one-to-many relation to ItemSKU
			Field Mapping uses Set6
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= ItemSKUDetails.UnitOfMeasure
			Instance Selection
				where (related.ItemSKU != ItemSKUDetails.ItemSKU)
		
		DuplicateUPCUOMRel
			one-to-many relation to ItemUPC
			Field Mapping uses Set6
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= ItemUPCDetails.UnitOfMeasure
			Instance Selection
				where (related.ItemUPC != ItemUPCDetails.ItemUPC)
		
		DuplicateNationalDrugCodeUOMRel
			one-to-many relation to NationalDrugCode
			Field Mapping uses Set5
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= NationalDrugCodeDetails.UnitOfMeasure
			Instance Selection
				where (related.NationalDrugCode != NationalDrugCodeDetails.NationalDrugCode)
		
		InventoryReportGroupLocationRel
			one-to-many relation to InventoryReportGroupLocation
			Field Mapping uses symbolic key
				related.Company	                         = LocalInventoryCompany
				related.InventoryReportGroup             = LocalInventoryReportGroup
			Instance Selection
				where (related.LocationActive)
		
		ItemByManufacturerRel
			one-to-many relation to Item
			Field Mapping uses Set8
				related.ItemGroup                   = ItemGroup
				related.Manufacturer                = Manufacturer
				related.ManufacturerNumber          = ManufacturerNumber
			Instance Selection
				where (related.Active
				and    related.Manufacturer entered
				and    related.ManufacturerNumber entered)
		
        VendorItem1ExistsRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set3
        		related.ProcurementGroup  	= ItemGroup
        		related.Vendor 				= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
        		related.VendorItem			= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
        		
        VendorItem2ExistsRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set3
        		related.ProcurementGroup  	= ItemGroup
        		related.Vendor 				= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
        		related.VendorItem			= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
        		
        VendorItem3ExistsRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set3
        		related.ProcurementGroup  	= ItemGroup
        		related.Vendor 				= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
        		related.VendorItem			= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
        
        ReferenceItemLocationRel
        	one-to-many relation to ItemLocation
        	Field Mapping uses ByItem
        		related.Item                = LocalItem
        	Instance Selection
        		where (related.Active)

		Different1VendorItemSameManufacturerRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set5
        		related.ProcurementGroup							= ItemGroup
        		related.Vendor										= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				related.Manufacturer.ManufacturerCode     			= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision 			= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerDivision
				related.ManufacturerNumber      					= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber
        	Instance Selection
        		where (related.Active
        		and    related.VendorItem != VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer entered
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
				and   (related.VendorBuyUOM.UnitOfMeasure !entered
				or     related.VendorBuyUOM.UnitOfMeasure = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure))
		
		Different2VendorItemSameManufacturerRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set5
        		related.ProcurementGroup							= ItemGroup
        		related.Vendor										= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				related.Manufacturer.ManufacturerCode     			= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision 			= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerDivision
				related.ManufacturerNumber      					= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber
        	Instance Selection
        		where (related.Active
        		and    related.VendorItem != VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer entered
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered
				and   (related.VendorBuyUOM.UnitOfMeasure !entered
				or     related.VendorBuyUOM.UnitOfMeasure = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure))
				
		Different3VendorItemSameManufacturerRel
        	one-to-many relation to VendorItem
        	Field Mapping uses Set5
        		related.ProcurementGroup							= ItemGroup
        		related.Vendor										= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				related.Manufacturer.ManufacturerCode     			= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerCode
				related.Manufacturer.ManufacturerDivision 			= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerDivision
				related.ManufacturerNumber      					= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber
        	Instance Selection
        		where (related.Active
        		and    related.VendorItem != VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer entered
        		and    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber entered
				and   (related.VendorBuyUOM.UnitOfMeasure !entered
				or     related.VendorBuyUOM.UnitOfMeasure = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure))
				
		VendorItem1OnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor)))
		
		VendorItem2OnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor)))
		
		VendorItem3OnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor)))
		
		VendorItem1ManufOnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer entered
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor       		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor       		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor       		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber)))
		
		VendorItem2ManufOnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer entered
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber)))
		
		VendorItem3ManufOnWorksheetRel
        	one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup   									= ItemGroup
			Instance Selection
				where (related.ItemInformationWorksheet    != ItemInformationWorksheet
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer entered
				and    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber entered
				and   ((related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber)
				or    (related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer 		= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor               = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				and    related.VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber   = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber)))
		
		UnprocessedItemInformationWorksheetRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
			Instance Selection
				where (!related.ItemErrorFlag)
				
		ItemsToProcessForRunGroupRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses ByRunGroup 
				related.RunGroup   = LocalRunGroup
			Instance Selection
				where (!related.ItemErrorsExist)
				
		ItemInformationErrorRel	
			one-to-many relation to ItemInformationError
			Field Mapping uses symbolic key
				related.ItemGroup         		 = ItemGroup
				related.ItemInformationWorksheet = ItemInformationWorksheet
			Instance Selection
				where (related.ItemErrors)
				
		OtherItemSKURel
			one-to-many relation to ItemSKU
			Field Mapping uses Set5
				related.ItemGroup              = ItemGroup
				related.ItemSKU                = ItemSKUDetails.ItemSKU
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
				
		UCCEANItemUPNRel
			one-to-many relation to UCCEANItemUPN
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.UCCEANItemUPN          = UCCEANItemUPNDetails.UCCEANItemUPN
		
		OtherUCCEANItemUPNRel
			one-to-many relation to UCCEANItemUPN
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.UCCEANItemUPN          = UCCEANItemUPNDetails.UCCEANItemUPN
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
				
		HIBCCItemUPNRel
			one-to-many relation to HIBCCItemUPN
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.HIBCCItemUPN          = HIBCCItemUPNDetails.HIBCCItemUPN
		
		OtherHIBCCItemUPNRel
			one-to-many relation to HIBCCItemUPN
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.HIBCCItemUPN          = HIBCCItemUPNDetails.HIBCCItemUPN
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
		
		ItemSKURel
			one-to-many relation to ItemSKU
			Field Mapping uses Set5
				related.ItemGroup              = ItemGroup
				related.ItemSKU                = ItemSKUDetails.ItemSKU
		
		ItemUPCRel
			one-to-many relation to ItemUPC
			Field Mapping uses Set5
				related.ItemGroup              = ItemGroup
				related.ItemUPC                = ItemUPCDetails.ItemUPC
		
		OtherItemUPCRel
			one-to-many relation to ItemUPC
			Field Mapping uses Set5
				related.ItemGroup              = ItemGroup
				related.ItemUPC                = ItemUPCDetails.ItemUPC
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
		
		NationalDrugCodeRel
			one-to-many relation to NationalDrugCode
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.NationalDrugCode       = NationalDrugCodeDetails.NationalDrugCode
		
		OtherNationalDrugCodeRel
			one-to-many relation to NationalDrugCode
			Field Mapping uses Set6
				related.ItemGroup              = ItemGroup
				related.NationalDrugCode       = NationalDrugCodeDetails.NationalDrugCode
			Instance Selection
				where ((FinalItemNumber entered
				and    related.Item   != FinalItemNumber)
				or     FinalItemNumber not entered)
		
		DuplicateLowUOMGTINRel
			one-to-many relation to ItemGTIN
			Field Mapping uses symbolic key
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.ItemGTIN    	= LocalGTIN
		
		DuplicateGTINUOMRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set3
				related.ItemGroup		= ItemGroup
				related.Item			= FinalItemNumber
				related.UnitOfMeasure	= ItemGTINDetails.UnitOfMeasure
			Instance Selection
				where (related.ItemGTIN != ItemGTINDetails.ItemGTIN)
		
		GTINDuplicateManufacturerRel
			one-to-many relation to ItemGTIN
			Field Mapping uses Set7
				related.ItemGroup			= ItemGroup
				related.Manufacturer		= ItemGTINDetails.Manufacturer
				related.ManufacturerNumber	= ItemGTINDetails.ManufacturerNumber
				related.Item				= FinalItemNumber
			Instance Selection
				where (related.ItemGTIN != ItemGTINDetails.ItemGTIN
				and    ItemGTINDetails.ManufacturerNumber entered)
		
		PurchasingVendor1GTINRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= ItemGroup
				related.Vendor		= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
				
		PurchasingVendor2GTINRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= ItemGroup
				related.Vendor		= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
								
		PurchasingVendor3GTINRel
			one-to-one relation to PurchasingVendor
			Field Mapping uses symbolic key
				related.VendorGroup	= ItemGroup
				related.Vendor		= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
				
		InterfacedItemToItemRel
			one-to-one relation to Item
			Field Mapping uses symbolic key
				related.ItemGroup    = ItemGroup
				related.Item         = InterfacedItem
					
		UploadSpreadsheetRel
			one-to-many relation to SampleDocumentTemplate
			Field Mapping uses ByType
				related.Type        = 102 
				
		ItemInformationWorksheetRel
			one-to-many relation to ItemInformationWorksheet
			Field Mapping uses symbolic key
				related.ItemGroup	= ItemGroup
		
		OriginatingNoticeProductRel
			one-to-one relation to RecallProduct
			Field Mapping uses symbolic key
				related.RecallGroup       = ItemGroup
				related.RecallNotice      = OriginatingNotice
				related.RecallProduct     = OriginatingNoticeProduct
		
		OriginatingNoticeRel
			one-to-one relation to RecallNotice
			Field Mapping uses symbolic key
				related.RecallGroup       = ItemGroup
				related.RecallNotice      = OriginatingNotice
		
		FactSheetRel
			one-to-one relation to SampleDocumentTemplate
			Field Mapping uses symbolic key
				related.SampleDocumentTemplate                  = "ItemInformationCreation_ST"			
					
    Sets
    	
    	ByRunGroup
			Sort Order
				RunGroup
				ItemInformationWorksheet
		
		ByManualItem
			Sort Order
				ItemGroup
				InterfacedItem
				ItemInformationWorksheet		
		
		ByManufacturerNumber
			Sort Order
				ItemGroup
				Manufacturer
				ManufacturerNumber
				ItemInformationWorksheet
    
    Conditions
		ItemExists
			restricted
			when (FinalItemNumber entered)
 		FromNotice
 			restricted
 			when (OriginatingNoticeProductRel exists)
 		
 		ContractLineByManufacturerExists
 			restricted
 			when (ContractLineFromManufacturerRel exists)
 		ManualItemAlreadyExists
			restricted
			when (ManualItemRel exists)
		IsHSNSACCodeEnabled
			restricted
			when (ItemGroup.BusinessGroup.UseHSNSACCode)
 		InterfacedItemExists
 			restricted
 			when (ManualItemNumbering
 			and   InterfacedItemToItemRel exists)
 		VendorItemExistsForEnteredVendorItem1
			restricted
			when (VendorItem1ExistsRel exists)
		VendorItemExistsForEnteredVendorItem2
			restricted
			when (VendorItem2ExistsRel exists)
		VendorItemExistsForEnteredVendorItem3
			restricted
			when (VendorItem3ExistsRel exists)
		VendorItemUOMExists
			restricted
			when (VendorItemUOMRel exists)
		VendorItemUOMValidBuy
			restricted
			when (VendorItemUOMValidBuyRel exists)
		VendorItemDoesNotExistForFirst
			restricted
			when (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered
			and   !VendorItemExistsForEnteredVendorItem1)
		VendorItemDoesNotExistForSecond
			restricted
			when (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered
			and   !VendorItemExistsForEnteredVendorItem2)
		VendorItemDoesNotExistForThird
			restricted
			when (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered
			and   !VendorItemExistsForEnteredVendorItem3)
		SomeVendorItemDoesNotExist
			restricted
			when (VendorItemDoesNotExistForFirst
			or    VendorItemDoesNotExistForSecond
			or    VendorItemDoesNotExistForThird)
		SerialTrackedItem
			restricted
			when (SerialTracked.SerialRequiredAtReceipt
			or    SerialTracked.SerialRequiredAtIssue)
		CatchWeightItem
			restricted
			when (CatchWeightCode.AllTransactionsRequireBoth
			or    CatchWeightCode.IssueRequiresBoth
			or    CatchWeightCode.ReceiptRequiresBoth)
		GTINExistsForEnteredGTIN
			restricted
			when (ItemGTINRel exists)
		ParentGTINExists
			restricted
			when (ParentItemGTINRel exists
			or    InterfaceParentItemGTINRel exists)
		ParentGTINWithBaseUnitExists
			restricted
			when ((ParentItemGTINRel exists
			and   ParentItemGTINRel.BaseUnit = true)
			or   (InterfaceParentItemGTINRel exists
			and   InterfaceParentItemGTINRel.ItemGTINDetails.BaseUnit = true))
		SKUExistsForEnteredSKU
			restricted
			when (ItemSKURel exists)
		UPCExistsForEnteredUPC
			restricted
			when (ItemUPCRel exists)
		NationalDrugCodeExistsForEnteredNationalDrugCode
			restricted
			when (NationalDrugCodeRel exists)
		HIBCCItemUPNExistsForEnteredHIBCCItemUPN
			restricted
			when (HIBCCItemUPNRel exists)
		UCCEANItemUPNExistsForEnteredUCCEANItemUPN
			restricted
			when (UCCEANItemUPNRel exists)
		HCPCSCodeSequenceEnteredExists
			restricted
			when (HCPCSCode.Sequence entered
			and   HCPCSCode exists)
		HCPCSCodeSequenceEnteredNotExists
			restricted
			when (HCPCSCode.Sequence entered
			and   HCPCSCode !exists)
		ItemLocationsToAdd
			restricted
			when (ItemLocationInterface set exists)
		SomethingToAdd
			restricted
			when (FinalItemNumber !entered
			or    SomeVendorItemDoesNotExist
			or    ItemLocationsToAdd
			or   (ItemGTINDetails.ItemGTIN entered
			and  !GTINExistsForEnteredGTIN)
			or   (ItemSKUDetails.ItemSKU entered
			and  !SKUExistsForEnteredSKU)
			or   (ItemUPCDetails.ItemUPC entered
			and  !UPCExistsForEnteredUPC)
			or   (NationalDrugCodeDetails.NationalDrugCode entered
			and  !NationalDrugCodeExistsForEnteredNationalDrugCode)
			or   (UCCEANItemUPNDetails.UCCEANItemUPN entered
			and  !UCCEANItemUPNExistsForEnteredUCCEANItemUPN)
			or   (HIBCCItemUPNDetails.HIBCCItemUPN entered
			and  !HIBCCItemUPNExistsForEnteredHIBCCItemUPN))
		UnprocessedItemInformationWorksheetExists
			restricted
			when (UnprocessedItemInformationWorksheetRel exists)
		ItemErrorsExist
			restricted
			when (ItemInformationError set exists)
	
		ManyItemsWithManufacturerInformation
			when (ItemByManufacturerCount > 1)
		WorksheetExists
			restricted
			when (ItemInformationWorksheet entered)
		WorksheetExistsAndShowHealthcareInformation
			restricted 
			when (WorksheetExists
			and  !ItemGroup.HideHealthcareInformation)
		WorksheetExistsAndNewItem
			restricted
			when (WorksheetExists
			and   FinalItemNumber !entered)
		AlternateUnitsOfMeasureEntered
			restricted
			when (ItemUOMNew entered)
		DifferentVendorItemSameManufExists
			restricted
			when (Different1VendorItemSameManufacturerRel exists
			or    Different2VendorItemSameManufacturerRel exists
			or    Different3VendorItemSameManufacturerRel exists)
		VendorItemOnDifferentWorksheet
			restricted
			when ((VendorItem1OnWorksheetRel exists
			and   VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered
			and   VendorItem1ExistsRel !exists)
			or   (VendorItem2OnWorksheetRel exists
			and   VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered
			and   VendorItem2ExistsRel !exists)
			or   (VendorItem3OnWorksheetRel exists
			and   VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered
			and   VendorItem3ExistsRel !exists))

		VendorManufOnDifferentWorksheet
			restricted
			when (VendorItem1ManufOnWorksheetRel exists
			or    VendorItem2ManufOnWorksheetRel exists
			or    VendorItem3ManufOnWorksheetRel exists)
		GTINUOMDuplicated
			restricted
			when (DuplicateGTINUOMRel exists)
		
		DrugPharmacyOrNarcoticsUsage
			restricted
			when (UsageIdentifier.Drugs
			or    UsageIdentifier.Pharmacy
			or    UsageIdentifier.Narcotic)	
		
		SubItemUOMExists
			restricted
			when (SubItemUOMRel exists)
				
		GTINManufacturerDuplicated
			restricted
			when (GTINDuplicateManufacturerRel exists)
			
		AnyVendorItemsEntered
			restricted
			when (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered
			or    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered
			or    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered)
			
		AnyManufacturerInformationEntered
			restricted
			when (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
			or    VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered
			or    VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber entered
			or    ManufacturerNumber entered
			or    ItemGTINDetails.ManufacturerNumber entered)
		
		AutomaticItemNumbering
			restricted
			when (ItemGroup.AutomaticItemNumbering)
		
		ManualItemNumbering
			restricted
			when (!ItemGroup.AutomaticItemNumbering)
			
		NumericItemNumbering
			restricted
			when (ItemGroup.NumericItemNumber)
		
		ManualItemNumberingOrInterfacedItemEntered
			restricted
			when (ManualItemNumbering
			or    InterfacedItem entered)
			
	Rule Blocks
	
		ValidateCommentType
			initialize LocalCommentTypeExists
			initialize TempCounter1
			while (TempCounter1 < 9)
				TempCounter1 += 1
				if (LocalItemCommentType = ItemGroup.ItemCommentTypeArray.ItemCommentTypeGroup[TempCounter1].ItemCommentType)
					LocalCommentTypeExists = true
		
		CheckForErrors
			ItemErrorFlag = false
			invoke Delete ItemInformationErrorRel
			
			if (SameGTINRel exists)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber = 16
					invoked.ErrorCode1         = ItemGTINDetails.ItemGTIN		
			if (InterfacedItem entered
			and ManualItemAlreadyExists)
				invoke Create ItemInformationError
					invoked.ItemGroup                = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber       = 142
			if (Active = false
			and VendorItemNew entered)
				invoke Create ItemInformationError
					invoked.ItemGroup                = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber       = 143
			if (!Description entered
			and !FinalItemNumber entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber = 20
			if (!StockUOM entered
			and !FinalItemNumber entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber = 21
			
			if (MinorPurchasingClass entered)
				if (!MajorPurchasingClass entered)
					invoke Create ItemInformationError set
						invoked.ErrorMessageNumber = 32
			if (MinorInventoryClass entered)
				if (!MajorInventoryClass entered)
					invoke Create ItemInformationError set
						invoked.ErrorMessageNumber = 35
					
			if (FinalItemNumber !entered)
				if (ItemByManufacturerCount > 1)
					invoke Create ItemInformationError set
						invoked.ErrorMessageNumber = 44

			if (NumberOfDecimalsQuantity > 4)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber = 46
			
			if (AlternateUnitsOfMeasureEntered)
				if (CatchWeightItem)
					invoke Create ItemInformationError set
						invoked.ErrorMessageNumber       = 23
			if (FinalItemNumber exists
			and FinalItemNumber.Active = false)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber     = 30
						
			if  (CatchWeightItem
			and  SecondaryUOM !entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 24
				
			if (!CatchWeightItem    
			and  SecondaryUOM entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 1  //"CannotEnterSecondaryUOM;ItemIsNotCatchWeight"
					
			if (SecondaryUOM entered
			and SecondaryUOM = StockUOM)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 4    //"SecondaryUOMCannotBeSameAsStockUOM"
			
			if (CatchWeightItem
			and SecondaryUOMConversion !entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 5 // "ConversionFactorIsRequiredForCatchWeightItem"
			
			if (!CatchWeightItem
			and SecondaryUOMConversion entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 6
			
			if (!CatchWeightItem
			and CatchWeightVariancePercent entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 7
					
			if (CatchWeightItem
			and NumberOfDecimalsQuantity !entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 8
					
			if (ReplacementItem = InterfacedItem
			and ReplacementItem entered
			and InterfacedItem entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber       = 9
			
			if ((LotTracked.LotRequiredAtIssue
			or  LotTracked.LotRequiredAtReceipt)
			and	!SerialTracked.NotSerialTracked)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber      = 10
				
			if (CatchWeightItem
			and SerialTrackedItem)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber      = 12
					
			if (EffectiveDate entered
			and ReplacementItem !entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber      = 13
					
			if (EffectiveDate > ExpirationDate
			and ExpirationDate entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber      = 28
					
			if (ReplacementItem !entered
			and ExpirationDate entered)
				invoke Create ItemInformationError set
					invoked.ErrorMessageNumber      = 29
		
			if ((ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UOMConversion !entered))
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValuesEntered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure !entered
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UOMConversion !entered)))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 38
			
			if (FinalItemNumber entered
			and InterfacedItem entered)
				invoke Create ItemInformationError
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 2 
			
			if ((ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForInventoryTransactions !entered)
			or (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].TrackedIn
			and ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForInventoryTransactions !entered))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 31
			
			if (StockUOM entered
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure = StockUOM
			or  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure = StockUOM))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 39
			
			if ((NumberOfDecimalsQuantity = 0)
			and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UOMConversion > 0)
			or  (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UOMConversion < 1
			and  ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UOMConversion > 0))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 37
			
			if 	(SerialTrackedItem
			and  AlternateUnitsOfMeasureEntered)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 40 
					
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying= 1)
				increment DefaultBuyCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForInventoryTransactions = 1)
				increment DefaultInventoryTransactionCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForSelling = 1)
				increment DefaultSellCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForSellPrice = 1)	
				increment DefaultSellPriceCount
			if (ItemInformationWorksheet.ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying= 1)
				increment DefaultBuyCount
			
			if (DefaultInventoryTransactionCount > 1)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 47
			if (DefaultBuyCount > 1)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 42
			if (DefaultSellCount > 1)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 48
			if (DefaultSellPriceCount > 1)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 49
			
			if (DifferentVendorItemSameManufExists)
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 22
			
			if ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1] entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor !entered
			or  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem !entered))
			or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2] entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor !entered
			or  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem !entered))
			or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3] entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor !entered
			or  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem !entered)))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 27
					
			if (VendorItemOnDifferentWorksheet)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber 		 = 14
					
			if ((VendorManufOnDifferentWorksheet)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer 
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor       = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor       = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer 
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor       = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber))
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber 		 = 51
			
			if (CatchWeightItem)
				if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure entered
				or  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure entered
				or  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber 		 = 15
			
			if  (PurchasingVendor1GTINRel exists
			and  PurchasingVendor1GTINRel.GTINInUse
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber !entered
			or   VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer !entered))
				invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber 		 = 15
						invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
			if  (PurchasingVendor3GTINRel exists
			and  PurchasingVendor3GTINRel.GTINInUse
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber !entered
			or   VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer !entered))
				invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber 		 = 15
						invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
			if  (PurchasingVendor2GTINRel exists
			and  PurchasingVendor2GTINRel.GTINInUse
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered
			and (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber !entered
			or   VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer !entered))
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber 		 = 3
					invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
			
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
						
					 	
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
			
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem		
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 25
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
							
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
							
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
			
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem	
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 26
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
			
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
					
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem		
					
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem	
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 43
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem			
					
					
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
					
					
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
							
			if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure entered)
				if (!ItemExists)
					if  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure != StockUOM 
					and ((VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying = 9)) 
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying = 9))
					or (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure  = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
					and (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 0
					or   ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying = 9))))
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem	
				else
				if (ItemExists)
					LocalUOM = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure
					if (!VendorItemUOMValidBuy)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 45
							invoked.ErrorVendorItem          = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
							
			if (!ItemExists
			and ContractLineByManufacturerExists)
				for each ContractLineFromManufacturerRel
					if  (each.UOM != StockUOM 
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure						
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure			
					and  each.UOM != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 146
							invoked.ErrorContract            = each.Contract
							invoked.ErrorContractLine        = each.ContractLine
							invoked.ErrorCode1               = each.UOM
							
			if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].ItemCommentType entered)
				LocalItemCommentType = ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].ItemCommentType
				include ValidateCommentType
				if (!LocalCommentTypeExists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 34
						invoked.ErrorCode1      		 = LocalItemCommentType 
			if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].ItemCommentType entered)
				LocalItemCommentType = ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].ItemCommentType
				include ValidateCommentType
				if (!LocalCommentTypeExists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 34
						invoked.ErrorCode1      		 = LocalItemCommentType 
			if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].ItemCommentType entered)
				LocalItemCommentType = ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].ItemCommentType
				include ValidateCommentType
				if (!LocalCommentTypeExists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 34
						invoked.ErrorCode1      		 = LocalItemCommentType 
						
			if ((ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].BeginDate > ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate entered)
			or 	(ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].BeginDate > ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].EndDate entered)
			or  (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].BeginDate > ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].EndDate entered))	
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 36
			
			if (((ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].BeginDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].ItemCommentType entered)
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].Comment !entered)
			or  ((ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].BeginDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].EndDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].ItemCommentType entered)
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].Comment !entered)
			or  ((ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].BeginDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].EndDate entered
			or   ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].ItemCommentType entered)
			and  ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].Comment !entered))
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 36
			
			if (FinalItemNumber entered
			and (VendorItemExistsForEnteredVendorItem1
			and  VendorItem1ExistsRel.Item != FinalItemNumber)
			or  (VendorItemExistsForEnteredVendorItem2
			and  VendorItem2ExistsRel.Item != FinalItemNumber)
			or  (VendorItemExistsForEnteredVendorItem3
			and  VendorItem3ExistsRel.Item != FinalItemNumber))
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 50
			
			if (ItemGTINDetails.ItemGTIN entered)
				initialize GTINCheckDigit
				GTINCheckDigit.ItemGTIN		= ItemGTINDetails.ItemGTIN
				LocalValidCheckDigit        = GTINCheckDigit.ValidCheckDigit
				if (LocalValidCheckDigit = false)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 18
						
				if (!ItemExists)
					if  (ItemGTINDetails.UnitOfMeasure != StockUOM 
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemGTINDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 120
							invoked.ErrorCode1               = ItemGTINDetails.ItemGTIN
				else
				if (ItemExists)
					LocalUOM = ItemGTINDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 120
							invoked.ErrorCode1               = ItemGTINDetails.ItemGTIN
						
			if (ItemSKUDetails.ItemSKU entered)
				if (OtherItemSKURel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 96
						invoked.ErrorCode1               = first ItemSKURel.Item
				
				if (ItemSKUDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 97
				
				if (!ItemExists)
					if  (ItemSKUDetails.UnitOfMeasure != StockUOM 
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemSKUDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 121
							invoked.ErrorCode1               = ItemSKUDetails.ItemSKU
				else
				if (ItemExists)
					LocalUOM = ItemSKUDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 121
							invoked.ErrorCode1               = ItemSKUDetails.ItemSKU
				
				if (FinalItemNumber entered)
					if (FinalItemNumber.DrugPharmacyOrNarcoticUsage)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 94
						
					if (DuplicateSKUUOMRel exists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 98
						
				else 
				if (FinalItemNumber not entered)
					if (DrugPharmacyOrNarcoticsUsage = true)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 94	
			
			if (ItemSKUDetails entered
			and ItemSKUDetails.ItemSKU not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 95
			
			if (UCCEANItemUPNDetails.UCCEANItemUPN entered)
				if (OtherUCCEANItemUPNRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 130
						invoked.ErrorCode1               = first UCCEANItemUPNRel.Item
				
				if (UCCEANItemUPNDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 131
				
				if (!ItemExists)
					if  (UCCEANItemUPNDetails.UnitOfMeasure != StockUOM 
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  UCCEANItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 138
							invoked.ErrorCode1               = UCCEANItemUPNDetails.UCCEANItemUPN
				else
				if (ItemExists)
					LocalUOM = UCCEANItemUPNDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 138
							invoked.ErrorCode1               = UCCEANItemUPNDetails.UCCEANItemUPN
				
				if (FinalItemNumber entered)
					if (FinalItemNumber.DrugPharmacyOrNarcoticUsage)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 128
						
					if (DuplicateUCCEANItemUPNUOMRel exists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 132
						
				else 
				if (FinalItemNumber not entered)
					if (DrugPharmacyOrNarcoticsUsage = true)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 128	
			
			if (UCCEANItemUPNDetails entered
			and UCCEANItemUPNDetails.UCCEANItemUPN not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 134
			
			if (HIBCCItemUPNDetails.HIBCCItemUPN entered)
				if (OtherHIBCCItemUPNRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 135
						invoked.ErrorCode1               = first HIBCCItemUPNRel.Item
				
				if (HIBCCItemUPNDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 136
				
				if (!ItemExists)
					if  (HIBCCItemUPNDetails.UnitOfMeasure != StockUOM 
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  HIBCCItemUPNDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 139
							invoked.ErrorCode1               = HIBCCItemUPNDetails.HIBCCItemUPN
				else
				if (ItemExists)
					LocalUOM = HIBCCItemUPNDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 139
							invoked.ErrorCode1               = HIBCCItemUPNDetails.HIBCCItemUPN
				
				if (FinalItemNumber entered)
					if (FinalItemNumber.DrugPharmacyOrNarcoticUsage)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 133
						
					if (DuplicateHIBCCItemUPNUOMRel exists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 137
						
				else 
				if (FinalItemNumber not entered)
					if (DrugPharmacyOrNarcoticsUsage = true)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 133	
			
			if (HIBCCItemUPNDetails entered
			and HIBCCItemUPNDetails.HIBCCItemUPN not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 129
			
			if (ItemUPCDetails.ItemUPC entered)
				if (OtherItemUPCRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 115
						invoked.ErrorCode1               = first ItemUPCRel.Item
				
				if (ItemUPCDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 116
				
				if (DuplicateUPCUOMRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 117
						
				if (!ItemExists)
					if  (ItemUPCDetails.UnitOfMeasure != StockUOM 
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  ItemUPCDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 122
							invoked.ErrorCode1               = ItemUPCDetails.ItemUPC
				else
				if (ItemExists)
					LocalUOM = ItemUPCDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 122
							invoked.ErrorCode1               = ItemUPCDetails.ItemUPC
						
			if (ItemUPCDetails entered
			and ItemUPCDetails.ItemUPC not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 114
			
			if (NationalDrugCodeDetails.NationalDrugCode entered)
				if (OtherNationalDrugCodeRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 124
						invoked.ErrorCode1               = first NationalDrugCodeRel.Item
				
				if (NationalDrugCodeDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 125
				
				if (!ItemExists)
					if  (NationalDrugCodeDetails.UnitOfMeasure != StockUOM 
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure						
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure			
					and  NationalDrugCodeDetails.UnitOfMeasure != ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure)			
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 127
							invoked.ErrorCode1               = NationalDrugCodeDetails.NationalDrugCode
				else
				if (ItemExists)
					LocalUOM = NationalDrugCodeDetails.UnitOfMeasure
					if (!SubItemUOMExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber 		 = 127
							invoked.ErrorCode1               = NationalDrugCodeDetails.NationalDrugCode
				
				if (FinalItemNumber entered)
						
					if (DuplicateNationalDrugCodeUOMRel exists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 126
						
			if (NationalDrugCodeDetails entered
			and NationalDrugCodeDetails.NationalDrugCode not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup	 		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 123
			
			if (ItemGTINDetails.ItemGTIN entered)
				if (OtherItemGTINRel exists)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 99
						invoked.ErrorCode1               = first ItemGTINRel.Item	
			
				if (ItemGTINDetails.UnitOfMeasure not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 100
						
				if (ItemGTINDetails.FullDescription not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 101
						
				if (ItemGTINDetails.Manufacturer not entered
				or  ItemGTINDetails.ManufacturerNumber not entered)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 103
						
				if ((ItemGTINDetails.WidthUOM entered
				and  ItemGTINDetails.WidthMeasurement not entered)
				or  (ItemGTINDetails.DepthUOM entered
				and  ItemGTINDetails.DepthMeasurement not entered)
				or  (ItemGTINDetails.GrossWeightUOM entered
				and  ItemGTINDetails.GrossWeight not entered)
				or  (ItemGTINDetails.NetWeightUOM entered
				and  ItemGTINDetails.NetWeight not entered)
				or  (ItemGTINDetails.NetContentUOM entered
				and  ItemGTINDetails.NetContent not entered))
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 108
						
				if ((ItemGTINDetails.WidthUOM not entered
				and  ItemGTINDetails.WidthMeasurement entered)
				or  (ItemGTINDetails.DepthUOM not entered
				and  ItemGTINDetails.DepthMeasurement entered)
				or  (ItemGTINDetails.GrossWeightUOM not entered
				and  ItemGTINDetails.GrossWeight entered)
				or  (ItemGTINDetails.NetWeightUOM not entered
				and  ItemGTINDetails.NetWeight entered)
				or  (ItemGTINDetails.NetContentUOM not entered
				and  ItemGTINDetails.NetContent entered))
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 109
				
				if (ItemGTINDetails.ItemGTIN   = ItemGTINDetails.ParentGTIN)
					invoke Create ItemInformationError
						invoked.ItemGroup	 		 	 = ItemGroup
						invoked.ItemInformationWorksheet = ItemInformationWorksheet 
						invoked.ErrorMessageNumber       = 110
				
				if (ItemGTINDetails.ParentGTIN entered)
					if (!ParentGTINExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 118
							
					if (ParentGTINWithBaseUnitExists)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 119
				
				if (FinalItemNumber entered)
					if (GTINUOMDuplicated)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 102
							invoked.ErrorCode1               = FinalItemNumber
					
					if (GTINManufacturerDuplicated)
						invoke Create ItemInformationError
							invoked.ItemGroup	 		 	 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 104
							invoked.ErrorCode1               = FinalItemNumber
			
			if (ItemGTINDetails entered
			and ItemGTINDetails.ItemGTIN not entered)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 111
										
			if (AutomaticItemNumbering
			and InterfacedItem entered)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 11
			
			if (ManualItemNumbering
			and InterfacedItem !entered
			and FinalItemNumber !entered)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 17
			
			if (ManualItemNumbering
			and NumericItemNumbering
			and InterfacedItem entered
			and InterfacedItem !is numeric)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 19
			
			if (InterfacedItem entered
			and InterfacedItemExists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 140
					
			if (InterfacedItem entered)
				if (ContractItemRel exists)
					if (ContractLineFromManufacturerRel !exists
					and ContractLineFromVendorItemRel !exists)
						invoke Create ItemInformationError
							invoked.ItemGroup        		 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 141
					else
					if  (ContractLineFromManufacturerRel exists
					and (ContractItemRel.Contract  	 != any ContractLineFromManufacturerRel.Contract
			        or   ContractItemRel.ContractLine != any ContractLineFromManufacturerRel.Contract))
			       		invoke Create ItemInformationError
							invoked.ItemGroup        		 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 141
			       	else  
			        if  (ContractLineFromVendorItemRel exists
					and (ContractItemRel.Contract  	 != any ContractLineFromVendorItemRel.Contract
			        or   ContractItemRel.ContractLine != any ContractLineFromVendorItemRel.Contract))
			        	invoke Create ItemInformationError
							invoked.ItemGroup        		 = ItemGroup
							invoked.ItemInformationWorksheet = ItemInformationWorksheet 
							invoked.ErrorMessageNumber       = 141

			if (StockWeight < 0)
				invoke Create ItemInformationError
					invoked.ItemGroup					= ItemGroup
					invoked.ItemInformationWorksheet	= ItemInformationWorksheet
					invoked.ErrorMessageNumber			= 324

			if (StockVolume < 0)
				invoke Create ItemInformationError
					invoked.ItemGroup					= ItemGroup
					invoked.ItemInformationWorksheet	= ItemInformationWorksheet
					invoked.ErrorMessageNumber			= 325

			if (ItemErrorsExist)
				ItemErrorFlag = true
				
		CheckForKeyfieldErrors
		
			if  (StockUOM entered
			and  StockUOM !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 300
					
			if (Manufacturer entered
			and Manufacturer !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 301
					
			if (GenericName entered
			and GenericName !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 302
					
			if (CommodityCode entered
			and CommodityCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 303 
					
			if (MajorInventoryClass entered
			and MajorInventoryClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 304
					
			if (MinorInventoryClass entered
			and MinorInventoryClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 305 
					
			if (MajorPurchasingClass entered
			and MajorPurchasingClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 306
					
			if (MinorPurchasingClass entered
			and MinorPurchasingClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 307 
					
			if (UNSPSCCode entered
			and UNSPSCCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 308
					
			if (SecondaryUOM entered
			and SecondaryUOM !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 309
					
			if (FreightClass entered
			and FreightClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 310
					
			if (PurchaseTaxCode entered
			and PurchaseTaxCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 311 
					
			if (MajorSalesClass entered
			and MajorSalesClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 312
					
			if (MinorSalesClass entered
			and MinorSalesClass !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 313 
					
			if (ProductTaxCategory entered
			and ProductTaxCategory !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 314
					
			if (HazardCode entered
			and HazardCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 315
					
			if (ICNCode entered
			and ICNCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 316
					
			if ((ItemGTINDetails.UnitOfMeasure entered
			and ItemGTINDetails.UnitOfMeasure !exists)
			or  (ItemGTINDetails.HeightUOM entered
			and  ItemGTINDetails.HeightUOM !exists)
			or  (ItemGTINDetails.WidthUOM entered
			and  ItemGTINDetails.WidthUOM !exists)
			or  (ItemGTINDetails.DepthUOM entered
			and  ItemGTINDetails.DepthUOM !exists)
			or  (ItemGTINDetails.NetContentUOM entered
			and  ItemGTINDetails.NetContentUOM !exists)
			or  (ItemGTINDetails.NetWeightUOM entered
			and  ItemGTINDetails.NetWeightUOM !exists)
			or  (ItemGTINDetails.GrossWeightUOM entered
			and  ItemGTINDetails.GrossWeightUOM !exists))
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 317
					
			if (ItemGTINDetails.CountryCode entered
			and ItemGTINDetails.CountryCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 318
					
			if (ItemGTINDetails.UNSPSCCode entered
			and ItemGTINDetails.UNSPSCCode !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 319
					
			if (ItemGTINDetails.Manufacturer entered
			and ItemGTINDetails.Manufacturer !exists)
				invoke Create ItemInformationError
					invoked.ItemGroup        		 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet 
					invoked.ErrorMessageNumber       = 320
					
			if ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM.UnitOfMeasure !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM.UnitOfMeasure !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM.UnitOfMeasure !exists))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 321
					
			if ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM.UnitOfMeasure !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM.UnitOfMeasure !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM.UnitOfMeasure !exists))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 322
					
			if ((VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer !exists)
			or  (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer entered
			and  VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer !exists))
				invoke Create ItemInformationError 
					invoked.ItemGroup      		 	 = ItemGroup
					invoked.ItemInformationWorksheet = ItemInformationWorksheet
					invoked.ErrorMessageNumber 		 = 323

	Field Rules

		RunGroup
			required

		FinalItemNumber

			constraint (FinalItemNumber exists)
				"ItemNumberDoesNotExist"

		SpecialHandlingInstructions
			if (SpecialHandlingCode entered)
				required
					"InstructionsRequiredForSpecialHandling"
			if (SpecialHandlingCode changed
			and SpecialHandlingCode = blank)
				initialize SpecialHandlingInstructions
		
		HandlingTimeInMinutes
			if (SpecialHandlingCode.TimeSensitive)
				required
					"HandlingTimeIsRequiredForTimeSensitiveItem"
			if (SpecialHandlingCode changed
			and ((SpecialHandlingCode = blank) or (not SpecialHandlingCode.TimeSensitive)))
				initialize HandlingTimeInMinutes

	Create Exit Rules 

		if (UsageIdentifier.Drugs)
			Drugs = true
		else
		if (UsageIdentifier.Instrument)
			Instrument = true
		else
		if (UsageIdentifier.Reusable)
			Reusable = true
		else
		if (UsageIdentifier.Pharmacy)
			Pharmaceutical = true
		else
		if (UsageIdentifier.Implant)
			Implantable = true
		else
		if (UsageIdentifier.Analytics)
			Analytics = true 			
		else
		if (UsageIdentifier.Narcotic)
			Narcotic = true 
		else
		if (UsageIdentifier.Dressing) 
			Dressing = true 			

	Actions
		CreateItemWorksheet is a Create Action

			Field Rules

				Active
					default to true

				FinalItemNumber
					default to VendorItem1ExistsRel.Item
					default to VendorItem2ExistsRel.Item
					default to VendorItem3ExistsRel.Item
					default to ItemGTINRel.Item
					default to ItemSKURel.Item
					default to ItemUPCRel.Item
					default to NationalDrugCodeRel.Item
					default to UCCEANItemUPNRel.Item
					default to HIBCCItemUPNRel.Item
					if (ItemByManufacturerCount = 1)
						default to first ItemByManufacturerRel.Item
				
				NumberOfDecimalsCost
					if (NumberOfDecimalsCost = 0)
						default to ItemGroup.DefaultNumberOfDecimalsCost

				NumberOfDecimalsPrice
					if (NumberOfDecimalsPrice = 0)
						default to ItemGroup.DefaultNumberOfDecimalsPrice

			Action Rules

				if (FinalItemNumber not entered
				and ItemGroup.RequireManufacturerOnNewInterfaceItems)
					constraint (Manufacturer entered)
						"ManufacturerIsRequired"
					constraint (ManufacturerNumber entered)
						"ManufacturerNumberIsRequired"

				if (ItemGTINDetails.ItemGTIN entered)
					ItemGTINDetails.Active = true
				if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered)
					VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Active = true
				if (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered)
					VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Active = true
				if (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered)
					VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Active = true

			Exit Rules

				include CheckForErrors

		CreateItemWorksheetFromCSV is a Create Action
			bypass field rules
			
			Action Rules
				
				ItemInformationWorksheet = last ItemInformationWorksheetRel.ItemInformationWorksheet + 1

				Active = true
				
				if (FinalItemNumber !entered)
					FinalItemNumber = VendorItem1ExistsRel.Item
				if (FinalItemNumber !entered)
				 	FinalItemNumber = VendorItem2ExistsRel.Item
				if (FinalItemNumber !entered)
					FinalItemNumber = VendorItem3ExistsRel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = ItemGTINRel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = ItemSKURel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = ItemUPCRel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = NationalDrugCodeRel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = UCCEANItemUPNRel.Item
				if (FinalItemNumber !entered)	
					FinalItemNumber = HIBCCItemUPNRel.Item
				if (FinalItemNumber !entered)	
					if (ItemByManufacturerCount = 1)
						FinalItemNumber = ItemByManufacturerRel.Item
				
				if (NumberOfDecimalsCost = 0)
					NumberOfDecimalsCost = ItemGroup.DefaultNumberOfDecimalsCost

				if (NumberOfDecimalsPrice = 0)
					NumberOfDecimalsPrice = ItemGroup.DefaultNumberOfDecimalsPrice
				
				if (FinalItemNumber not entered
				and ItemGroup.RequireManufacturerOnNewInterfaceItems)
					constraint (Manufacturer entered)
						"ManufacturerIsRequired"
					constraint (ManufacturerNumber entered)
						"ManufacturerNumberIsRequired"
				if (ItemGTINDetails.ItemGTIN entered)
					ItemGTINDetails.Active = true		
				if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered)
					VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Active = true

		Update is an Update Action
			
			Field Rules
				FinalItemNumber
					if (FinalItemNumber !entered)
						default to VendorItem1ExistsRel.Item
						default to VendorItem2ExistsRel.Item
						default to VendorItem3ExistsRel.Item
						default to ItemGTINRel.Item
						default to ItemSKURel.Item
						default to ItemUPCRel.Item
						default to NationalDrugCodeRel.Item
						default to UCCEANItemUPNRel.Item
						default to HIBCCItemUPNRel.Item
						if (ItemByManufacturerCount = 1)
							default to first ItemByManufacturerRel.Item
				
			Action Rules
			
				if (ItemGroup.RequireManufacturerOnNewInterfaceItems)
					constraint (Manufacturer entered)
						"ManufacturerIsRequired"
					constraint (ManufacturerNumber entered)
						"ManufacturerNumberIsRequired"
				
			Exit Rules
				
				include CheckForErrors

		Delete is a Delete Action
		
			Action Rules
			
				constraint (!FromNotice)
					"CannotDeleteARecordFromANewItemProposal"
		
				for each ContractLineResetRel
					invoke FastUpdateWithoutEdits each
						invoked.UpdateSelectedForItemCreationFalse = true

		MassDelete is a Set Action
			Parameters
				PrmRunGroup is a RunGroup
					default label is "RunGroup"
					
			Parameter Rules
				PrmRunGroup
					required

			Instance Selection
				where (RunGroup = PrmRunGroup)

			Sort Order
				RunGroup
				ItemInformationWorksheet

			Action Rules

				Instance Rules

					invoke Delete

		Purge is a Purge Action
			restricted

		RecheckErrors is an Instance Action
			Action Rules
				include CheckForErrors
				
				invoke CheckForLocationErrors ItemLocationInterface set

		CreateItemInformationForThisRunGroup is an Instance Action
			completion message is "ResultsCanBeViewedInResultsTabForRunGroup<PrmRunGroup>"
			Parameters
				PrmRunGroup		is AlphaUpper 30
				PrmItemGroup	is an ItemGroup

			Parameter Rules
				PrmRunGroup
					initial value is RunGroup
					required
					LocalRunGroup = PrmRunGroup
					constraint (ItemsToProcessForRunGroupRel exists)
						"NoRecordsToProcessForRunGroup"

				PrmItemGroup
					initial value is ItemGroup

			Action Rules
				invoke CreateItemInformation
					invoked.PrmRunGroup		= PrmRunGroup
					invoked.PrmItemGroup	= PrmItemGroup

		CreateItemInformation is a Set Action
			restricted
			Parameters
				PrmRunGroup		is AlphaUpper 30
				PrmItemGroup	is an ItemGroup

			Sort Order
				RunGroup
				ItemGroup

			Instance Selection
				where (RunGroup = PrmRunGroup
				and (ItemGroup = PrmItemGroup
					or PrmItemGroup !entered))

			Action Rules
				Instance Rules
					include CheckForErrors
					include CheckForKeyfieldErrors

				RunGroup Set Rules
					Entrance Rules
						invoke CheckForErrorsRunGroup ItemLocationInterface
							invoked.PrmRunGroup		= PrmRunGroup
							invoked.PrmItemGroup	= PrmItemGroup
					
					Exit Rules
						if (UnprocessedItemInformationWorksheetExists)
							invoke CreateItemInformationUpdate
								invoked.PrmRunGroup		= PrmRunGroup
								invoked.PrmItemGroup	= PrmItemGroup

		CreateItemInformationUpdate is a Set Action
			restricted

			Parameters
				PrmRunGroup		is AlphaUpper 30
				PrmItemGroup	is an ItemGroup

			Instance Selection
				where  (RunGroup	= PrmRunGroup
				and     ItemGroup   = PrmItemGroup
				and    !ItemErrorFlag)

			Sort Order
				RunGroup
				ItemGroup
				ItemInformationWorksheet	

			Local Fields
				LocalInterfaceResultView is a ItemInformationWorksheetResult view
				LocalItemNumberView is an Item view
				LocalItemNumber is an Item

			Action Rules

				RunGroup Set Rules

					Entrance Rules
						invoke Create ItemInformationWorksheetResult
							assign result to LocalInterfaceResultView
							invoked.ProcurementGroup    		= PrmItemGroup
							invoked.RunTime						= current timestamp
							invoked.RunGroup					= PrmRunGroup

				Instance Rules
					LocalResult                         	= LocalInterfaceResultView.ItemInformationWorksheetResult
					EnteredFinalItemNumber                  = FinalItemNumber
					initialize LocalItemNumber
					if (FinalItemNumber entered)
						LocalItemNumber = FinalItemNumber
					else
					if (InterfacedItem entered)
						LocalItemNumber = InterfacedItem
					if (FinalItemNumber !entered)
						if (UNSPSCFull entered
						and UNSPSCFullExistsRel !exists
						and ContractGroupRel.AutoAddUNSPSCCode)
							if (!UNSPSCSegmentExistsRel exists)
								invoke Create UNSPSCCode
									invoked.ItemGroup					= ItemGroup 
									invoked.UNSPSCCode.UNSPSCSegment  	= UNSPSCFull[1:2]
									invoked.ShortDescription             = "From_Item_Worksheet"
							if (!UNSPSCFamilyExistsRel exists)
								invoke Create UNSPSCCode
									invoked.ItemGroup					= ItemGroup 
									invoked.UNSPSCCode.UNSPSCSegment  	= UNSPSCFull[1:2]
									invoked.UNSPSCCode.UNSPSCFamily   	= UNSPSCFull[3:4]
									invoked.ShortDescription             = "From_Item_Worksheet"
							if (!UNSPSCClassExistsRel exists)
								invoke Create UNSPSCCode
									invoked.ItemGroup					= ItemGroup 
									invoked.UNSPSCCode.UNSPSCSegment  	= UNSPSCFull[1:2]
									invoked.UNSPSCCode.UNSPSCFamily   	= UNSPSCFull[3:4]
									invoked.UNSPSCCode.UNSPSCClass    	= UNSPSCFull[5:6]
									invoked.ShortDescription             = "From_Item_Worksheet"
							invoke Create UNSPSCCode
								invoked.ItemGroup					= ItemGroup 
								invoked.UNSPSCCode.UNSPSCSegment  	= UNSPSCFull[1:2]
								invoked.UNSPSCCode.UNSPSCFamily   	= UNSPSCFull[3:4]
								invoked.UNSPSCCode.UNSPSCClass    	= UNSPSCFull[5:6]
								invoked.UNSPSCCode.UNSPSCCommodity 	= UNSPSCFull[7:8]
								invoked.ShortDescription             = "From_Item_Worksheet"		
														
						invoke Create Item
							assign result to LocalItemNumberView							
							fill in fields from this instance
							fill in user fields from this instance
							invoked.FromExternal        = true
							if (ManualItemNumbering)
								invoked.Item			= InterfacedItem
							invoked.ItemGroup			= ItemGroup
							invoked.FromWorksheetResult	= LocalResult
						if (LocalItemNumber !entered)
							LocalItemNumber = LocalItemNumberView.Item
						if (FromNotice)
							invoke FastUpdate OriginatingNoticeProductRel
								if (AutomaticItemNumbering)
									invoked.PrmItemCreated = LocalItemNumber
								else
								if (ManualItemNumbering)
									invoked.PrmItemCreated = InterfacedItem

							send email
								to OriginatingNoticeRel.RecallCoordinator.RecallUser.EmployeeWorkEmailAddress
								from config.DefaultFromEmailAddress
								subject "Item<InterfacedItem>HasBeenCreatedFromNewItemProposal<OriginatingNotice>"
								Contents
									"Item<InterfacedItem>HasBeenCreatedFromNewItemProposal<OriginatingNotice>"

						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].TrackedIn
								invoked.ValidForInventoryTransactions	= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[1].PackLevel

						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[2].PackLevel

						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[3].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[4].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[5].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[6].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[7].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[8].PackLevel
								
						if (ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UOMConversion entered)
							invoke Create ItemUOM
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.UnitOfMeasure                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UnitOfMeasure
								invoked.UOMConversion					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].UOMConversion
								invoked.ValidForBuying					= ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForBuying
								invoked.TrackedIn                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].TrackedIn
								invoked.ValidForInventoryTransactions   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForInventoryTransactions
								invoked.ValidForSelling                 = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForSelling
								invoked.ValidForSellPrice               = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].ValidForSellPrice
								invoked.PackingWeight                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].PackingWeight
								invoked.PackingVolume                   = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].PackingVolume
								invoked.PackLevel                       = ItemUOMNew.ItemUOMOccurs.ItemUOMDetails[9].PackLevel
					
						if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].Comment entered)
							invoke Create ItemComment
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.ItemCommentType					= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].ItemCommentType
								invoked.BeginDate						= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].BeginDate
								invoked.EndDate							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].EndDate
								invoked.Comment							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[1].Comment
						
						if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].Comment entered)
							invoke Create ItemComment
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.ItemCommentType					= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].ItemCommentType
								invoked.BeginDate						= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].BeginDate
								invoked.EndDate							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].EndDate
								invoked.Comment							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[2].Comment
								
						if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].Comment entered)
							invoke Create ItemComment
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.ItemCommentType					= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].ItemCommentType
								invoked.BeginDate						= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].BeginDate
								invoked.EndDate							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].EndDate
								invoked.Comment							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[3].Comment
								
						if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[4].Comment entered)
							invoke Create ItemComment
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.ItemCommentType					= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[4].ItemCommentType
								invoked.BeginDate						= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[4].BeginDate
								invoked.EndDate							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[4].EndDate
								invoked.Comment							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[4].Comment
								
						if (ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[5].Comment entered)
							invoke Create ItemComment
								invoked.ItemGroup						= ItemGroup
								invoked.Item                            = LocalItemNumber
								invoked.ItemCommentType					= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[5].ItemCommentType
								invoked.BeginDate						= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[5].BeginDate
								invoked.EndDate							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[5].EndDate
								invoked.Comment							= ItemCommentNew.ItemCommentOccurs.ItemCommentDetails[5].Comment		
					
					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered)
						LocalVendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
						LocalVendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
						if  (!VendorItemExistsForEnteredVendorItem1)
							invoke Create VendorItem
								invoked.ProcurementGroup					= ItemGroup
								invoked.Item                                = LocalItemNumber
								invoked.Vendor								= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Vendor
								invoked.VendorItem							= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem
								invoked.FromWorksheetResult     			= LocalResult
								invoked.VendorItemDescription				= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItemDescription
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerCode entered)
									invoked.Manufacturer.ManufacturerCode   	= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision 	= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].Manufacturer.ManufacturerDivision
								else
									invoked.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber entered)
									invoked.ManufacturerNumber              	= VendorItemNew.VendorItemOccurs.VendorItemDetails[1].ManufacturerNumber
								else
									invoked.ManufacturerNumber					= ManufacturerNumber
								invoked.VendorBuyUOM                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorBuyUOM
								invoked.VendorPriceUOM                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorPriceUOM
								invoked.LabelerIdentificationCode           = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].LabelerIdentificationCode
								invoked.LastLeadtime                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].LastLeadtime
								invoked.MinimumOrderQuantity                = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].MinimumOrderQuantity
								invoked.WarrantyPeriod                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[1].WarrantyPeriod	
							
					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered)
						LocalVendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
						LocalVendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
						if  (!VendorItemExistsForEnteredVendorItem2)
							invoke Create VendorItem
								invoked.ProcurementGroup					= ItemGroup
								invoked.Item                            	= LocalItemNumber
								invoked.Vendor								= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Vendor
								invoked.VendorItem							= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem
								invoked.FromWorksheetResult     			= LocalResult
								invoked.VendorItemDescription				= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItemDescription
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerCode entered)
									invoked.Manufacturer.ManufacturerCode   	= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision 	= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].Manufacturer.ManufacturerDivision
								else
									invoked.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber entered)
									invoked.ManufacturerNumber              	= VendorItemNew.VendorItemOccurs.VendorItemDetails[2].ManufacturerNumber
								else
									invoked.ManufacturerNumber					= ManufacturerNumber
								invoked.VendorBuyUOM                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorBuyUOM
								invoked.VendorPriceUOM                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorPriceUOM
								invoked.LabelerIdentificationCode           = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].LabelerIdentificationCode
								invoked.LastLeadtime                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].LastLeadtime
								invoked.MinimumOrderQuantity                = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].MinimumOrderQuantity
								invoked.WarrantyPeriod                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[2].WarrantyPeriod	
						
					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered)
						LocalVendor     = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
						LocalVendorItem = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
						if  (!VendorItemExistsForEnteredVendorItem3)
							invoke Create VendorItem
								invoked.ProcurementGroup					= ItemGroup
								invoked.Item                            	= LocalItemNumber
								invoked.Vendor								= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Vendor
								invoked.VendorItem							= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem
								invoked.FromWorksheetResult     			= LocalResult
								invoked.VendorItemDescription				= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItemDescription
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerCode entered)
									invoked.Manufacturer.ManufacturerCode   	= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision 	= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].Manufacturer.ManufacturerDivision
								else
									invoked.Manufacturer.ManufacturerCode		= Manufacturer.ManufacturerCode
									invoked.Manufacturer.ManufacturerDivision	= Manufacturer.ManufacturerDivision
								if (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber entered)
									invoked.ManufacturerNumber              	= VendorItemNew.VendorItemOccurs.VendorItemDetails[3].ManufacturerNumber
								else
									invoked.ManufacturerNumber					= ManufacturerNumber
								invoked.VendorBuyUOM                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorBuyUOM
								invoked.VendorPriceUOM                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorPriceUOM
								invoked.LabelerIdentificationCode           = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].LabelerIdentificationCode
								invoked.LastLeadtime                        = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].LastLeadtime
								invoked.MinimumOrderQuantity                = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].MinimumOrderQuantity
								invoked.WarrantyPeriod                      = VendorItemNew.VendorItemOccurs.VendorItemDetails[3].WarrantyPeriod	
							
					for each ItemLocationInterface set
						invoke Create ItemLocation
							fill in fields from each                 
							invoked.Company                             			= each.InventoryCompany
							invoked.Item                            				= LocalItemNumber
							invoked.FromWorksheetResult     						= LocalResult
							
							if (each.AutomaticPurchaseOrder)
								invoked.VendorAndPurchaseFrom.Vendor    			= each.Vendor
								invoked.VendorAndPurchaseFrom.PurchaseFromLocation 	= each.PurchaseFromLocation
								
							if (each.CartParLocation)
								invoked.TransientShelfLocation          			= each.ParShelfLocation
								invoked.VendorAndPurchaseFrom.Vendor    			= each.Vendor
								invoked.VendorAndPurchaseFrom.PurchaseFromLocation 	= each.PurchaseFromLocation
								invoked.ReplenishFrom.ReplenishFromCompany 			= each.ReplenishFrom.ReplenishFromCompany
								invoked.ReplenishFrom.ReplenishFromLocation 		= each.ReplenishFrom.ReplenishFromLocation
							
						if (each.ReplenishmentPriority entered
						and !each.CartParLocation)
							invoke Create ItemReplenishmentSource
								invoked.Company                         = each.InventoryCompany
								invoked.InventoryLocation               = each.InventoryLocation
								invoked.Item                            = LocalItemNumber								
								invoked.Vendor                     		= each.Vendor                               
        						invoked.PurchaseFromLocation            = each.PurchaseFromLocation
        						invoked.ReplenishFrom                   = each.ReplenishFrom
								invoked.ItemReplenishmentSource.ReplenishmentPriority 	= each.ReplenishmentPriority 
					
					if (ItemGTINDetails.ItemGTIN entered
					and ItemGTINDetails.ItemGTIN !exists)
						invoke Create ItemGTIN	
							invoked.ItemGroup						= ItemGroup
							invoked.Item                            = LocalItemNumber
							invoked.ItemGTIN           				= ItemGTINDetails.ItemGTIN
							invoked.FullDescription					= ItemGTINDetails.FullDescription
							invoked.UnitOfMeasure.UnitOfMeasure		= ItemGTINDetails.UnitOfMeasure
							invoked.Manufacturer.ManufacturerCode	= ItemGTINDetails.Manufacturer.ManufacturerCode
							invoked.Manufacturer.ManufacturerDivision	= ItemGTINDetails.Manufacturer.ManufacturerDivision
							invoked.ManufacturerNumber				= ItemGTINDetails.ManufacturerNumber
					        invoked.Active                 			= true
					        invoked.GTINStructure                   = ItemGTINDetails.GTINStructure
					        invoked.CountryCode				        = ItemGTINDetails.CountryCode
					        invoked.GPCSegment                      = ItemGTINDetails.GPCSegment
					        invoked.GPCFamily                       = ItemGTINDetails.GPCFamily
					        invoked.GPCClass                        = ItemGTINDetails.GPCClass
					        invoked.GPCBrick                        = ItemGTINDetails.GPCBrick
					        invoked.UNSPSCCode                      = ItemGTINDetails.UNSPSCCode
					        invoked.BrandName                       = ItemGTINDetails.BrandName
					        invoked.FunctionalName                  = ItemGTINDetails.FunctionalName
					        invoked.AbbreviatedDescription          = ItemGTINDetails.AbbreviatedDescription
					        invoked.HeightMeasurement               = ItemGTINDetails.HeightMeasurement
					        invoked.HeightUOM                       = ItemGTINDetails.HeightUOM
					        invoked.WidthMeasurement                = ItemGTINDetails.WidthMeasurement
					        invoked.WidthUOM                        = ItemGTINDetails.WidthUOM
					        invoked.DepthMeasurement                = ItemGTINDetails.DepthMeasurement
					        invoked.DepthUOM                        = ItemGTINDetails.DepthUOM
					        invoked.NetContent                      = ItemGTINDetails.NetContent
					        invoked.NetContentUOM                   = ItemGTINDetails.NetContentUOM
					        invoked.GrossWeight                     = ItemGTINDetails.GrossWeight
					        invoked.GrossWeightUOM                  = ItemGTINDetails.GrossWeightUOM
					        invoked.NetWeight                       = ItemGTINDetails.NetWeight
					        invoked.NetWeightUOM                    = ItemGTINDetails.NetWeightUOM
					        invoked.ConsumerUnit                    = ItemGTINDetails.ConsumerUnit
					        invoked.OrderableUnit                   = ItemGTINDetails.OrderableUnit
					        invoked.InvoiceUnit                     = ItemGTINDetails.InvoiceUnit
					        invoked.ShippingUnit                    = ItemGTINDetails.ShippingUnit
					        invoked.BaseUnit                        = ItemGTINDetails.BaseUnit
					        invoked.VariableUnit                    = ItemGTINDetails.VariableUnit
					        invoked.BarCodeType                     = ItemGTINDetails.BarCodeType
					        invoked.BatchOrLotRequired              = ItemGTINDetails.BatchOrLotRequired
					        invoked.Returnable                      = ItemGTINDetails.Returnable
					        invoked.DietOrAllergen                  = ItemGTINDetails.DietOrAllergen
					        invoked.SterileIndicator                = ItemGTINDetails.SterileIndicator
					        invoked.ParentGTIN                      = ItemGTINDetails.ParentGTIN
					        invoked.DateAvailable                   = ItemGTINDetails.DateAvailable
					        invoked.EffectiveDate                   = ItemGTINDetails.EffectiveDate
					        invoked.PublicationDate                 = ItemGTINDetails.PublicationDate
					        invoked.BrandOwnerGLN                   = ItemGTINDetails.BrandOwnerGLN
					        invoked.ProviderGLN                     = ItemGTINDetails.ProviderGLN
					        invoked.ProductShelfLife                = ItemGTINDetails.ProductShelfLife
					        invoked.ShelfLifeAfterDelivery          = ItemGTINDetails.ShelfLifeAfterDelivery
					        invoked.Recyclable                      = ItemGTINDetails.Recyclable
					        invoked.ReturnUnsold                    = ItemGTINDetails.ReturnUnsold
					        invoked.LatexIndicator                  = ItemGTINDetails.LatexIndicator
					        invoked.ReusabilityCode                 = ItemGTINDetails.ReusabilityCode
					        invoked.LongDesc                        = ItemGTINDetails.LongDesc
							invoked.FromWorksheetResult     		= LocalResult
							
					if (ItemSKUDetails.ItemSKU entered
					and ItemSKUDetails.ItemSKU !exists)
						invoke Create ItemSKU
							invoked.ItemGroup                               = ItemGroup
							invoked.Item      		                        = LocalItemNumber
							invoked.ItemSKU                                 = ItemSKUDetails.ItemSKU
				            invoked.UnitOfMeasure      						= ItemSKUDetails.UnitOfMeasure
					        invoked.UnitOfMeasureCost                       = ItemSKUDetails.UnitOfMeasureCost
					        invoked.SaleByManufacturer                      = ItemSKUDetails.SaleByManufacturer
					        invoked.SaleByDistributor                       = ItemSKUDetails.SaleByDistributor
					        invoked.Descriptor                              = ItemSKUDetails.Descriptor
					        invoked.VendorCaseCode                          = ItemSKUDetails.VendorCaseCode
					        invoked.ProductCode                             = ItemSKUDetails.ProductCode
					        invoked.InvoiceBreak                            = ItemSKUDetails.InvoiceBreak
					        invoked.ShelfLabelCode                          = ItemSKUDetails.ShelfLabelCode
					        invoked.ColorCode                               = ItemSKUDetails.ColorCode
					        invoked.SizeCode                                = ItemSKUDetails.SizeCode
					        invoked.StyleCode                               = ItemSKUDetails.StyleCode
							invoked.FromWorksheetResult     				= LocalResult
					
					if (ItemUPCDetails.ItemUPC entered
					and ItemUPCDetails.ItemUPC !exists)
						invoke Create ItemUPC
							invoked.ItemGroup	                        = ItemGroup
							invoked.Item        	                    = LocalItemNumber
							invoked.ItemUPC                         	= ItemUPCDetails.ItemUPC
							invoked.UnitOfMeasure                       = ItemUPCDetails.UnitOfMeasure
							invoked.UnitOfMeasureCost                   = ItemUPCDetails.UnitOfMeasureCost
							invoked.UPCType                             = ItemUPCDetails.UPCType
							invoked.SuppressLeadingZero                 = ItemUPCDetails.SuppressLeadingZero
							invoked.UseSaleUOM                          = ItemUPCDetails.UseSaleUOM
							invoked.SaleByManufacturer                  = ItemUPCDetails.SaleByManufacturer
							invoked.SaleByDistributor                   = ItemUPCDetails.SaleByDistributor
							invoked.FromWorksheetResult     			= LocalResult
					
					if (NationalDrugCodeDetails.NationalDrugCode entered
					and NationalDrugCodeDetails.NationalDrugCode !exists)
						invoke Create NationalDrugCode
							invoked.ItemGroup                     = ItemGroup
							invoked.NationalDrugCode              = NationalDrugCodeDetails.NationalDrugCode
							invoked.Item                          = LocalItemNumber
							invoked.UnitOfMeasure                 = NationalDrugCodeDetails.UnitOfMeasure
							invoked.GenericName                   = NationalDrugCodeDetails.GenericName
							invoked.Strength                      = NationalDrugCodeDetails.Strength
							invoked.DoseForm                      = NationalDrugCodeDetails.DoseForm
							invoked.PackageDescription            = NationalDrugCodeDetails.PackageDescription
							invoked.PackageSize                   = NationalDrugCodeDetails.PackageSize
							invoked.ManufacturedBy                = NationalDrugCodeDetails.ManufacturedBy
							invoked.UnitDose                      = NationalDrugCodeDetails.UnitDose
							invoked.BrandName                     = NationalDrugCodeDetails.BrandName
							invoked.DrugName                      = NationalDrugCodeDetails.DrugName
							invoked.FromWorksheetResult     	  = LocalResult
					
					if (UCCEANItemUPNDetails.UCCEANItemUPN entered
					and UCCEANItemUPNDetails.UCCEANItemUPN !exists)
						invoke Create UCCEANItemUPN
							invoked.ItemGroup                     = ItemGroup
							invoked.Item                          = LocalItemNumber
							invoked.UCCEANItemUPN                 = UCCEANItemUPNDetails.UCCEANItemUPN
							invoked.UCCEANItemUPN                 = UCCEANItemUPNDetails.UCCEANItemUPN
							invoked.ReplacementUPN                = UCCEANItemUPNDetails.ReplacementUPN                 
					        invoked.ManufacturerProductDescription = UCCEANItemUPNDetails.ManufacturerProductDescription
					        invoked.SaleByDistributor             = UCCEANItemUPNDetails.SaleByDistributor              
					        invoked.SaleByManufacturer            = UCCEANItemUPNDetails.SaleByManufacturer             
					        invoked.TradeName                     = UCCEANItemUPNDetails.TradeName
					        invoked.UnitOfMeasure                 = UCCEANItemUPNDetails.UnitOfMeasure                  
					        invoked.UnitOfMeasureCost             = UCCEANItemUPNDetails.UnitOfMeasureCost              
					        invoked.ManufacturerName              = UCCEANItemUPNDetails.ManufacturerName
					        invoked.DivisionOfManufacturer        = UCCEANItemUPNDetails.DivisionOfManufacturer
					        invoked.FromWorksheetResult     	  = LocalResult
					
					if (HIBCCItemUPNDetails.HIBCCItemUPN entered
					and HIBCCItemUPNDetails.HIBCCItemUPN !exists)
						invoke Create HIBCCItemUPN
							invoked.ItemGroup                     = ItemGroup
							invoked.HIBCCItemUPN                  = HIBCCItemUPNDetails.HIBCCItemUPN
							invoked.Item                          = LocalItemNumber
							invoked.HIBCCItemUPN                  = HIBCCItemUPNDetails.HIBCCItemUPN
							invoked.ReplacementUPN                = HIBCCItemUPNDetails.ReplacementUPN                 
					        invoked.ManufacturerProductDescription = HIBCCItemUPNDetails.ManufacturerProductDescription
					        invoked.SaleByDistributor             = HIBCCItemUPNDetails.SaleByDistributor              
					        invoked.SaleByManufacturer            = HIBCCItemUPNDetails.SaleByManufacturer             
					        invoked.TradeName                     = HIBCCItemUPNDetails.TradeName
					        invoked.UnitOfMeasure                 = HIBCCItemUPNDetails.UnitOfMeasure                  
					        invoked.UnitOfMeasureCost             = HIBCCItemUPNDetails.UnitOfMeasureCost              
					        invoked.ManufacturerName              = HIBCCItemUPNDetails.ManufacturerName
					        invoked.DivisionOfManufacturer        = HIBCCItemUPNDetails.DivisionOfManufacturer
					        invoked.FromWorksheetResult     	  = LocalResult
					
					if (FinalItemNumber !entered)
						if (AutomaticItemNumbering)
							FinalItemNumber      = LocalItemNumber 
						else
						if (ManualItemNumbering)
							FinalItemNumber      = InterfacedItem
							
					if (AnyManufacturerInformationEntered)
						if (ContractLineFromManufacturerRel exists)
							for each ContractLineFromManufacturerRel
								invoke ChangeSpecialItemToItem each
									invoked.PrmNewItemNumber     	= FinalItemNumber
									invoked.PrmFromWorksheetResult  = LocalResult
									invoked.CreateVendorItem        = true

					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[1].VendorItem entered)
						if (ContractLineFromVendorItem1Rel exists
						and ContractLineFromManufacturerRel! exists)
							for each ContractLineFromVendorItem1Rel
								invoke ChangeSpecialItemToItem each
									invoked.PrmNewItemNumber     	= FinalItemNumber
									invoked.PrmFromWorksheetResult  = LocalResult
								
					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[2].VendorItem entered)
						if (ContractLineFromVendorItem2Rel exists
						and ContractLineFromManufacturerRel! exists)
							for each ContractLineFromVendorItem2Rel
								invoke ChangeSpecialItemToItem each
									invoked.PrmNewItemNumber     	= FinalItemNumber
									invoked.PrmFromWorksheetResult  = LocalResult
									
					if (VendorItemNew.VendorItemOccurs.VendorItemDetails[3].VendorItem entered)
						if (ContractLineFromVendorItem3Rel exists
						and ContractLineFromManufacturerRel! exists)
							for each ContractLineFromVendorItem3Rel
								invoke ChangeSpecialItemToItem each
									invoked.PrmNewItemNumber     	= FinalItemNumber
									invoked.PrmFromWorksheetResult  = LocalResult

					invoke Purge

		CreateItemLocationRecords is a Set Action
			Parameters
				PrmRunGroup is AlphaUpper 30
				InventoryCompany
				InventoryReportGroup
				ItemGroup
				ReferenceItem is an Item 
					context of ItemGroup

			Parameter Rules
				
				PrmRunGroup
					LocalRunGroup  = PrmRunGroup
					required
						"RunGroupIsRequired"
					constraint (ItemsToProcessForRunGroupRel exists)
						"NoRecordsToProcessForRunGroup"
						
					constraint (InventoryCompany entered
					or          ItemGroup entered)
						"MustEnterEitherReportGroupOrCreateRecordsSameAsItemOption"
						
				InventoryCompany
					if (InventoryReportGroup entered)
						constraint (InventoryCompany entered)
							"MustEnterCompanyIfReportGroupIsEntered"
				
				InventoryReportGroup
					if (ReferenceItem !entered)
						constraint (InventoryReportGroup entered)
							"MustEnterReportGroupOrReferenceItem"
							
				ItemGroup
					if (ReferenceItem entered)
						constraint (ItemGroup entered)
							"MustEnterItemGroupIfReferenceItemEntered"
				
				ReferenceItem
					if (InventoryReportGroup !entered)
						constraint (ReferenceItem entered)
							"MustEnterReportGroupOrReferenceItem"
							
					if (ItemGroup entered)
						constraint (ReferenceItem entered)
							"MustEnterReferenceItemIfItemGroupIsEntered"
			
			Instance Selection
				
				where (RunGroup   = PrmRunGroup)
		
			Action Rules
				
				Instance Rules
				
					if (InventoryReportGroup entered)
						LocalInventoryCompany  		= InventoryCompany
						LocalInventoryReportGroup 	= InventoryReportGroup
												
						for each InventoryReportGroupLocationRel
							if (!each.CartParLocation)
								invoke Create ItemLocationInterface set
									invoked.InventoryCompany  = InventoryCompany
									invoked.Item              = FinalItemNumber
									invoked.InventoryLocation = each.InventoryLocation
									LocalInventoryLocation    = each.InventoryLocation
									if (DefaultInventoryAccountGroupRel exists)
										invoked.GeneralLedgerCategory = first DefaultInventoryAccountGroupRel.GeneralLedgerCategory
							else
							if (each.CartParLocation)
								invoke CreateParItem ItemLocationInterface set	
									invoked.InventoryCompany  = InventoryCompany
									invoked.Item              = FinalItemNumber
									invoked.InventoryLocation = each.InventoryLocation
									LocalInventoryLocation    = each.InventoryLocation	
									if (DefaultInventoryAccountGroupRel exists)
										invoked.GeneralLedgerCategory = first DefaultInventoryAccountGroupRel.GeneralLedgerCategory
					
					if (ReferenceItem entered)
						LocalItem = ReferenceItem
						for each ReferenceItemLocationRel
							if (!each.CartParLocation)
								invoke Create ItemLocationInterface set
									fill in fields from each
									invoked.InventoryCompany   		= each.Company
									invoked.InventoryLocation 		= each.InventoryLocation
									invoked.GeneralLedgerCategory 	= each.GeneralLedgerCategory
									invoked.Item              		= FinalItemNumber
							else
							if 	(each.CartParLocation)
								invoke CreateParItem ItemLocationInterface set
									fill in fields from each
										except invoked.PreferredBin
									invoked.InventoryCompany   		= each.Company
									invoked.InventoryLocation 		= each.InventoryLocation
									invoked.GeneralLedgerCategory 	= each.GeneralLedgerCategory
									invoked.Item              		= FinalItemNumber
									invoked.Vendor                  = each.first ItemReplenishmentSourcesRel.Vendor
									invoked.PurchaseFromLocation    = each.first ItemReplenishmentSourcesRel.PurchaseFromLocation
									invoked.ReplenishFrom.ReplenishFromCompany  = each.first ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromCompany
									invoked.ReplenishFrom.ReplenishFromLocation = each.first ItemReplenishmentSourcesRel.ReplenishFrom.ReplenishFromLocation
