AccountingEntityHierarchy is a BusinessClass
	owned by GeneralLedger
	
	prefix is GLAEh
	
	Ontology
		part of AccountingEntity
			relative key is SubordinateAccountingEntity is an AccountingEntity
			
	Context Fields
		AccountingEntityGroup

	Persistent Fields
		TopNode					is AlphaUpper 12

	Rule Blocks
		FindParent
			LocalAccountingEntityLevel = SubordinateAccountingEntity

			if (SubordinateAccountingEntity.DimensionType.Posting
			and AccountingEntity != TopNode)
				if (AccountingEntity.Level = LocalLevel)
					LocalAccountingEntityLevel = AccountingEntity
				else
					LocalLoopCounter			= 1
					LocalAccountingEntityLevel	= AccountingEntity
					while (LocalAccountingEntityLevel.Level != LocalLevel and LocalLoopCounter <= 10)
						LocalSubordinateAccountingEntity	= LocalAccountingEntityLevel
						LocalAccountingEntityLevel			= LocalDimensionHierarchyRel.AccountingEntity
						LocalLoopCounter					+= 1

	Derived Fields
		DerivedLedgerTopNode	is a DerivedField
			type is AlphaUpper 20
			restricted
			return ReportingBasisRel.LedgerTopNode				
		DerivedAccountingEntityLabel	is a DerivedField
			type is Alpha 25
			restricted
			return FinanceEnterpriseGroup.AccountingEntityLabel

		SkippingMessage		is a MessageField
			restricted
			"Skipping"
		PeriodClosedMessage	is a MessageField
			restricted
			";CurrencyLedgerPeriodClosed"
		EntityInactiveMessage	is a MessageField
			restricted
			";Inactive"
		NoDataToProcessMessage	is a MessageField
			restricted
			";NoDataToProcess"
		SkippingEntityPeriodCloseError	is a MessageField	

			restricted
			"Skipping<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>;CurrencyLedgerPeriodClosed"







		SkippingEntityInActiveError	is a MessageField	

			restricted
			"Skipping<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>;Inactive"







		SkippingEntityNoDataToProcess	is a MessageField	

			restricted
			"Skipping<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>;NoDataToProcess"






		DerivedLevel1Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 1
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel2Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 2
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel3Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 3
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel4Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 4
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel5Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 5
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel6Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 6
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel7Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 7
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel8Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 8
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel9Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 9
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel10Parent is a DerivedField
			type is like AccountingEntity
			LocalLevel = 10
			include FindParent
			return LocalAccountingEntityLevel
		DerivedLevel1ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 1
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel2ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 2
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel3ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 3
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel4ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 4
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel5ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 5
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel6ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 6
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel7ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 7
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel8ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 8
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel9ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 9
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel10ParentDescription is a DerivedField
			type is like Name
			LocalLevel = 10
			include FindParent
			return LocalAccountingEntityLevel.Name
		DerivedLevel1ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 1
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel2ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 2
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel3ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 3
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel4ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 4
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel5ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 5
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel6ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 6
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel7ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 7
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel8ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 8
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel9ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 9
			include FindParent
			return LocalAccountingEntityLevel.DimensionType
		DerivedLevel10ParentDimensionType is a DerivedField
			type is like DimensionType
			LocalLevel = 10
			include FindParent
			return LocalAccountingEntityLevel.DimensionType

	Local Fields
		LocalLedger						is a Ledger
		LocalCloseLedger				is a Ledger
		LocalKeyFromValue				is Alpha 200
		LocalKeyToValue					is Alpha 200
		LocalPostingDate				is Date
		LocalCurrencyLedger				is like Ledger
    	LocalFiscalYear					is like GeneralLedgerCloseYear
    	LocalPeriod						is like GeneralLedgerCalendarPeriod
    	LocalCalendarPeriod 			is a GeneralLedgerCalendarPeriod
    	LocalLedgerTopNode				is like Ledger
    	LocalEntityTopNode				is like AccountingEntity
    	LocalDateRange					is a DateRange
		LocalTimeStampRange				is a TimeStampRange
    	LocalBasisEndDatee				is Date
		LocalSystemAccount				is a SystemAccount
		LocalOtherReportingBasis		is like ReportingBasis
		LocalSubordinateAccountingEntity	is an AccountingEntity
		LocalTopNodeFound					is Boolean
		LocalLevel						is Numeric 3
		LocalAccountingEntityLevel		is a AccountingEntity
		LocalLoopCounter				is Numeric 2

    Conditions

	Relations
		ReportingBasisRel
			one-to-one relation to ReportingBasis
			Field Mapping uses ByAccountingEntityTopNode
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.AccountingEntityTopNode	= TopNode
				related.AccountAnalysisString	= blank
		ReportingBasisLedgerRel
			one-to-many relation to LedgerHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.TopNode					= DerivedLedgerTopNode
		EntityInOtherReportingBasisRel
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses ByTopNodeInSubordinate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity	= SubordinateAccountingEntity
			Instance Selection
				where (related.TopNode				= LocalEntityTopNode)
		LedgerInOtherReportingBasisRel
			one-to-many relation to LedgerHierarchy
			Field Mapping uses ByTopNodeInSubordinate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SubordinateLedger			= LocalLedger
			Instance Selection
				where (related.TopNode				!= LocalLedgerTopNode)
		EntityLedgerPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= SubordinateAccountingEntity
				related.Ledger						= LocalLedger
		EntityLedgerCurrentPeriodRel
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= SubordinateAccountingEntity
				related.Ledger						= FinanceEnterpriseGroup.CoreLedger
				related.GeneralLedgerClosePeriod	= SubordinateAccountingEntity.CurrentPeriod
		EntityLedgerPriorPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= SubordinateAccountingEntity
				related.Ledger						= FinanceEnterpriseGroup.CoreLedger
			Instance Selection
				where (related.GeneralLedgerClosePeriod < EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod)
		EntityLedgerNextPeriodRel
			one-to-many relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= SubordinateAccountingEntity
				related.Ledger						= FinanceEnterpriseGroup.CoreLedger
			Instance Selection
				where (related.GeneralLedgerClosePeriod > EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod)
		SystemAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses BySystemAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= SubordinateAccountingEntity
		DefaultZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByDefaultZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= SubordinateAccountingEntity
		EntityZoneAccountingUnitRel
			one-to-one relation to AccountingUnitHierarchy
			Field Mapping uses ByEntityZoneAccountingUnitInStructure
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingUnitStructure				= FinanceEnterpriseGroup.EnterpriseAUStructure
				related.AccountingEntity					= SubordinateAccountingEntity
		CodeBlockRelationRel
			one-to-one relation to CodeBlockRelation
			Field Mapping uses ByFromTo
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.FromField				= 0
				related.ToField					= 1
		CodeBlockRelationDetailRel
			one-to-one relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.CodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
				related.KeyFromValue			= LocalKeyFromValue
				related.KeyToValue				= LocalKeyToValue
		DeleteCodeBlockRelationDetailRel
			one-to-many relation to CodeBlockRelationDetail
			Field Mapping uses ByKeyValues
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
				related.CodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
		GeneralLedgerCalendarPeriodRel
			one-to-many relation to GeneralLedgerCalendarPeriod
			Field Mapping uses LeafRecords
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.Date 			not < LocalPostingDate)
		AccountingEntityGroupMemberRel
			one-to-one relation to AccountingEntityGroupMember
			Field Mapping uses part of key
				related.FinanceEnterpriseGroup = FinanceEnterpriseGroup
				related.AccountingEntityGroup  = AccountingEntityGroup
				related.AccountingEntity	   = SubordinateAccountingEntity
		AccountingEntityCalendarPeriodRel
			one-to-many relation to AccountingEntityPeriod
			delete cascades
			Field Mapping uses ByGeneralLedgerCalendarPeriod
				related.FinanceEnterpriseGroup				= FinanceEnterpriseGroup
				related.AccountingEntity					= SubordinateAccountingEntity
				related.GeneralLedgerClosePeriod			= LocalCalendarPeriod
		EntityCurrencyLedgerPeriodRel
			one-to-one relation to EntityLedgerPeriod
			Field Mapping uses ByEntityLedger
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.AccountingEntity			= SubordinateAccountingEntity
				related.Ledger						= LocalCurrencyLedger
				related.GeneralLedgerClosePeriod	= LocalPeriod
		BudgetEntityLedgerRel
			one-to-one relation to BudgetEntityLedger
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.AccountingEntity		= SubordinateAccountingEntity    
				related.Ledger					= LocalLedger    
		ProcessTotalsForGainLossRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByPeriodEndDate 
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.Scenario				= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity		= SubordinateAccountingEntity
				related.IsUREChartAccount		= false    
			Instance Selection

				where (related.PeriodEndingDate	within LocalDateRange)
		ChangesOnlyTotalsForGainLossRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByPeriodEndDate 
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.Scenario				= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity		= SubordinateAccountingEntity
				related.IsUREChartAccount		= false    				    
			Instance Selection

				where (related.PeriodEndingDate	within LocalDateRange
				and    related.update stamp		within LocalTimeStampRange)
		ProcessTotalsForYearEndRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByPeriodEndDate 
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.Scenario				= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity		= SubordinateAccountingEntity    
			Instance Selection
				where (related.PeriodEndingDate	within  LocalDateRange)
		ChangesOnlyTotalsForYearEndRel
			one-to-many relation to GeneralLedgerTotal
			Field Mapping uses ByPeriodEndDate 
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.Scenario				= FinanceEnterpriseGroup.ActualsScenario
				related.AccountingEntity		= SubordinateAccountingEntity    
			Instance Selection
				where (related.PeriodEndingDate	within  LocalDateRange
				and    related.update stamp	    within  LocalTimeStampRange)
		ProcessYearEndEncumbranceRel
			one-to-many relation to GLCommit
			Field Mapping uses ByAccountingEntity
				related.FinanceEnterpriseGroup	= FinanceEnterpriseGroup    
				related.AccountingEntity		= SubordinateAccountingEntity    
			Instance Selection
				where (related.TransactionDate	<= LocalBasisEndDatee)
				
		LedgerHierarchyRel
			one-to-many relation to LedgerHierarchy
			Field Mapping uses ByParent  
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.Ledger						= LocalLedgerTopNode
								
		AverageDailyBalanceEntityInOtherBasisRel	
			one-to-many relation to AccountingEntityHierarchy
			Field Mapping uses ByTopNodeInSubordinate
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.SubordinateAccountingEntity	= SubordinateAccountingEntity
			Instance Selection
				where (related.ReportingBasisRel.ReportingBasis.AverageDailyBalance)







		EnterpriseAccountingUnitRel
			one-to-many relation to AccountingUnitStructure
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
			Instance Selection
				where (related.IsEnterpriseStructure)

		AccountingEntityShadowRel
			one-to-many relation to AccountingEntityShadow
			Field Mapping uses symbolic key
				related.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
				related.ReportingBasis				= ReportingBasisRel.ReportingBasis
				related.AccountingEntity			= SubordinateAccountingEntity

		LocalDimensionHierarchyRel
			one-to-one relation to AccountingEntityHierarchy
			Field Mapping uses SubordinateInTopNode
				related.FinanceEnterpriseGroup			= FinanceEnterpriseGroup
				related.TopNode							= TopNode
				related.SubordinateAccountingEntity		= LocalSubordinateAccountingEntity

	Sets
		ByParent
			Sort Order
				FinanceEnterpriseGroup
				AccountingEntity
				SubordinateAccountingEntity
		BySubordinate
			Sort Order
				FinanceEnterpriseGroup
				SubordinateAccountingEntity				
				AccountingEntity
		SubordinatesByTopNode
			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity
				AccountingEntity
		SubordinateInTopNode
			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity				
    	ByTopNodeInSubordinate
    		Sort Order
				FinanceEnterpriseGroup
    			SubordinateAccountingEntity
    			TopNode

	Field Rules

    Actions
		Create is a Create Action
			restricted
			Entrance Rules
				if (FinanceEnterpriseGroup.AccountingUnitRequired)
					if (initiating action = "AccountingEntity.AddToReportingBasis"
					or	initiating action = "ReportingBasis.AddEntitiesFromGroup")
						constraint (EnterpriseAccountingUnitRel exists)
							"EnterpriseStructureNeedsToBeDefinedFor<FinanceEnterpriseGroup.AccountingUnitLabel>"
					constraint (SystemAccountingUnitRel exists)
						"NeedToSetupSystem<FinanceEnterpriseGroup.AccountingUnitLabel>For<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>"
					if (SubordinateAccountingEntity.AccountingUnitZoneBalancing)
						constraint (DefaultZoneAccountingUnitRel exists)
							"NeedToSetupDefaultZone<FinanceEnterpriseGroup.AccountingUnitLabel>For<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>"
						constraint (EntityZoneAccountingUnitRel exists)
							"NeedToSetupEntityZone<FinanceEnterpriseGroup.AccountingUnitLabel>For<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>"

				if (ReportingBasisRel.ReportingBasis.AverageDailyBalance
				and SubordinateAccountingEntity.AverageDailyBalance)
					LocalOtherReportingBasis = AverageDailyBalanceEntityInOtherBasisRel.ReportingBasisRel.ReportingBasis
					constraint (!AverageDailyBalanceEntityInOtherBasisRel exists)
						"<FinanceEnterpriseGroup.AccountingEntityLabel>_<SubordinateAccountingEntity>AlreadyExistsInReportingBasis_<LocalOtherReportingBasis>WithAverageDailyBalanceEnabled"

			Exit Rules
				for each ReportingBasisLedgerRel
					LocalCloseLedger			= ReportingBasisRel.ReportingBasis
					LocalCloseLedger			+= " CLOSE"
					LocalLedger					= each.SubordinateLedger
					if (LocalLedger				!= LocalCloseLedger)
						if  (ReportingBasisRel.UseForBudgetEdit
						and !BudgetEntityLedgerRel exists)
							invoke Create BudgetEntityLedger
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.AccountingEntity		= SubordinateAccountingEntity
								invoked.Ledger					= LocalLedger
						invoke CreateEntityLedgerPeriod AccountingEntityPeriod
							invoked.PrmEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity	= SubordinateAccountingEntity
							invoked.PrmLedger			= LocalLedger
						LocalKeyFromValue		= LocalLedger
						LocalKeyToValue			= SubordinateAccountingEntity
						if (!CodeBlockRelationDetailRel exists)
							invoke SystemCreate CodeBlockRelationDetailRel
								resume on error
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.CodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
								invoked.Ledger					= LocalLedger
								invoked.AccountingEntity		= SubordinateAccountingEntity

		Update is an Update Action
			restricted

		DeleteInBackground is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup 		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmTopNode						is a AccountingEntity
					default label is "AccountingEntityTopNode"
				PrmSubordinateAccountingEntity	is a AccountingEntity
					default label is "SubordinateAccountingEntity"
			Instance Selection
				where  (FinanceEnterpriseGroup = PrmFinanceEnterpriseGroup
				and		TopNode = PrmTopNode
				and 	SubordinateAccountingEntity = PrmSubordinateAccountingEntity)
			Action Rules
				Instance Rules
					invoke Delete

		Delete is a Delete Action
			restricted
			Local Fields
				LocalDeleteLedgerPeriod			is Boolean
			Entrance Rules
				for each ReportingBasisLedgerRel
					LocalDeleteLedgerPeriod	= true
					LocalLedger				= each.SubordinateLedger
					LocalLedgerTopNode		= each.TopNode
					if (LedgerInOtherReportingBasisRel exists)
						LocalDeleteLedgerPeriod		= false
						for each LedgerInOtherReportingBasisRel
							LocalEntityTopNode = each.DerivedAccountingEntityTopNode
							if (EntityInOtherReportingBasisRel exists)
								end for each
						if (!EntityInOtherReportingBasisRel exists)
							invoke Purge BudgetEntityLedgerRel
							invoke DeleteAllLedgerPeriods EntityLedgerPeriodRel
							LocalKeyFromValue		= LocalLedger
							LocalKeyToValue			= SubordinateAccountingEntity
							if (CodeBlockRelationDetailRel exists)
								invoke SystemDelete CodeBlockRelationDetailRel
					if (LocalDeleteLedgerPeriod)
						invoke Purge BudgetEntityLedgerRel
						invoke DeleteAllLedgerPeriods EntityLedgerPeriodRel
						LocalKeyFromValue		= LocalLedger
						LocalKeyToValue			= SubordinateAccountingEntity
						if (CodeBlockRelationDetailRel exists)
							invoke SystemDelete CodeBlockRelationDetailRel

		CreateSummary	is a Create Action
			restricted

		DeleteSummary	is a Delete Action
			restricted

		BuildShadowFile is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup		is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmAccountingEntity				is an AccountingEntity
					default label is "AccountingEntity"
			Set Is
            	PrmFinanceEnterpriseGroup
				PrmReportingBasis
				PrmAccountingEntity
			Instance Selection
				where (TopNode entered
				and	!SubordinateAccountingEntity.DimensionType.Node
				and ReportingBasisRel.ReportingBasis.Active
				and (PrmFinanceEnterpriseGroup not entered
				or	FinanceEnterpriseGroup				= PrmFinanceEnterpriseGroup)
				and (PrmReportingBasis not entered
				or	ReportingBasisRel.ReportingBasis	= PrmReportingBasis)
				and	(PrmAccountingEntity not entered
				or SubordinateAccountingEntity			= PrmAccountingEntity))
			Action Rules
			
				Set Rules
						
				Instance Rules
					LocalSubordinateAccountingEntity	= SubordinateAccountingEntity
					LocalTopNodeFound   		   = false
					if (PrmAccountingEntity entered)
						invoke Delete AccountingEntityShadowRel
					while (!LocalTopNodeFound)
						invoke Create AccountingEntityShadow
							invoked.FinanceEnterpriseGroup 	   = FinanceEnterpriseGroup
							invoked.ReportingBasis 			   = ReportingBasisRel.ReportingBasis
							invoked.AccountingEntity		   = SubordinateAccountingEntity
							invoked.DimensionType			   = SubordinateAccountingEntity.DimensionType
							invoked.SummaryEntity			   = LocalDimensionHierarchyRel.AccountingEntity
						if (!LocalDimensionHierarchyRel.AccountingEntity.DimensionType.Summary)
							LocalTopNodeFound = true
						else
							LocalSubordinateAccountingEntity = LocalDimensionHierarchyRel.AccountingEntity		
					if (SubordinateAccountingEntity.DimensionType.Summary)
						invoke SetLevel 

		SetLevel is an Instance Action
			restricted
			Action Rules	
				if (!SubordinateAccountingEntity.DimensionType.Posting)
					LocalSubordinateAccountingEntity = SubordinateAccountingEntity
					LocalLevel		   = 0
					while (LocalSubordinateAccountingEntity.DimensionType.Summary) 
						LocalSubordinateAccountingEntity	   = LocalDimensionHierarchyRel.AccountingEntity
						LocalLevel			  	   += 1
					LocalSubordinateAccountingEntity = SubordinateAccountingEntity
					invoke UpdateLevel SubordinateAccountingEntity
						invoked.PrmLevel 		   			= LocalLevel
						invoked.PrmParentAccountingEntity 	= LocalDimensionHierarchyRel.AccountingEntity	

		ProcessRetainedEarnings is a Set Action		
			restricted
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
				PrmReportingBasis				is a ReportingBasis
				PrmReportingBasisYear			is like ReportingBasisYear
				PrmAccountingEntity				is a AccountingEntity
				PrmAccountingEntityGroup		is a AccountingEntityGroup
				PrmRetainedEarningsLedger		is a Ledger
				PrmDateRange					is a DateRange
				PrmSequenceNumber				is a SequenceNumber
				PrmBasisEndPeriod				is a GeneralLedgerCalendarPeriod


				PrmOutputOption					is AlphaUpper 1
					States
						Summary		value is "S"
						Detail		value is "D"
				PrmLedgerGroup					is a GeneralLedgerTotal group
				PrmLedgerGroup2					is a Ledger group		
				PrmLedger						is a Ledger

			Local Fields
				LocalAccountingEntity			is a AccountingEntity
				LocalSkipEntity					is Boolean
				OrigAsyncId						is a AsyncActionRequest
				AsyncId							is a AsyncActionRequest

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis
				PrmSequenceNumber

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and    TopNode					= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity
				and   ((PrmAccountingEntity entered
				and     SubordinateAccountingEntity	= PrmAccountingEntity)
				or     !PrmAccountingEntity entered)
				and   ((PrmAccountingEntityGroup entered
				and     AccountingEntityGroupMemberRel exists)
				or     !PrmAccountingEntityGroup entered))

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Action Rules
				Empty Set Rules
				Set Rules
					Entrance Rules
						OrigAsyncId					= current async action request id
				SubordinateAccountingEntity Set Rules
					Entrance Rules
						AsyncId					= OrigAsyncId
						LocalAccountingEntity	= SubordinateAccountingEntity
						LocalSkipEntity			= false
				Instance Rules
					LocalDateRange				= PrmDateRange








					if (PrmOutputOption.Summary)
						invoke ProcessRetainedEarningsSummary GeneralLedgerTotal in background
							run after AsyncId
							invoked.PrmEnterpriseGroup			= PrmEnterpriseGroup
							invoked.PrmReportingBasis			= PrmReportingBasis
							invoked.PrmReportingBasisYear		= PrmReportingBasisYear
							invoked.PrmAccountingEntity			= SubordinateAccountingEntity
							invoked.PrmRetainedEarningsLedger	= PrmRetainedEarningsLedger
							invoked.PrmDateRange				= PrmDateRange
							invoked.PrmSequenceNumber			= PrmSequenceNumber


							invoked.PrmBasisEndPeriod			= PrmBasisEndPeriod
							invoked.PrmLedgerGroup				= PrmLedgerGroup
							invoked.PrmLedgerGroup2				= PrmLedgerGroup2		
							invoked.PrmLedger					= PrmLedger

		YearEndClose is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmReportingBasisYear			is like ReportingBasisYear
					default label is "ReportingBasisYear"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmCloseLedger					is a Ledger
					default label is "CloseLedger"
				PrmDateRange					is a DateRange
					default label is "DateRange"
				PrmSequenceNumber       		is a SequenceNumber
					default label is "SequenceNumber"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"
				PrmLedgerGroup					is a GeneralLedgerTotal group
					default label is "LedgerGroup"
				PrmISWithCloseAccountGroup		is a GeneralLedgerTotal group
					default label is "IncomeStatementAccountsWithCloseToAccount"					
				PrmTimeStampRange				is a TimeStampRange
					default label is "TimeStampRange"
				PrmChangedTotalsOnly			is Boolean
					default label is "ChangedTotalsOnly"

			Local Fields	
				LocalAccountingEntity			is a AccountingEntity
				LocalSkipEntity					is Boolean

				OrigAsyncId						is a AsyncActionRequest
				AsyncId							is a AsyncActionRequest
				ADBAsyncId						is a AsyncActionRequest

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis
				PrmSequenceNumber

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and    TopNode					= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity
				and   ((PrmAccountingEntity entered
				and     SubordinateAccountingEntity	= PrmAccountingEntity)
				or     !PrmAccountingEntity entered)
				and   ((PrmAccountingEntityGroup entered
				and     AccountingEntityGroupMemberRel exists)
				or     !PrmAccountingEntityGroup entered))

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						OrigAsyncId					= current async action request id






				SubordinateAccountingEntity Set Rules
					Entrance Rules
						AsyncId					= OrigAsyncId
						LocalAccountingEntity	= SubordinateAccountingEntity
						LocalSkipEntity			= false

				Instance Rules
					LocalDateRange				= PrmDateRange
					LocalTimeStampRange			= PrmTimeStampRange
					if (PrmChangedTotalsOnly)
						if (!ChangesOnlyTotalsForYearEndRel exists)
							LocalSkipEntity			= true
							invoke Create ReportingBasisCloseDetail
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.ReportingBasis				= PrmReportingBasis
								invoked.ReportingBasisYear			= PrmReportingBasisYear
								invoked.ReportingBasisCloseResult	= PrmSequenceNumber
								invoked.ErrorMessage		  		= SkippingEntityNoDataToProcess

					if (!PrmChangedTotalsOnly)
						if (!ProcessTotalsForYearEndRel exists)
							LocalSkipEntity			= true
							invoke Create ReportingBasisCloseDetail
								invoked.FinanceEnterpriseGroup		= FinanceEnterpriseGroup
								invoked.ReportingBasis				= PrmReportingBasis
								invoked.ReportingBasisYear			= PrmReportingBasisYear
								invoked.ReportingBasisCloseResult  	= PrmSequenceNumber
								invoked.ErrorMessage		  		= SkippingEntityNoDataToProcess


					if (!LocalSkipEntity)
						if (!PrmChangedTotalsOnly)
							invoke InitializeBeginBalance  GeneralLedgerTotal in background
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmEnterpriseGroup		= PrmEnterpriseGroup
								invoked.PrmReportingBasis		= PrmReportingBasis
								invoked.PrmAccountingEntity		= SubordinateAccountingEntity

								invoked.PrmCloseLedger			= PrmCloseLedger
								invoked.PrmNewYear				= PrmNewYear
								invoked.PrmSequenceNumber		= PrmSequenceNumber
								invoked.PrmNewYearDate			= PrmNewYearDate

						invoke YearEndClose GeneralLedgerTotal in background
							run after AsyncId
							assign async action request id to ADBAsyncId		
							invoked.PrmEnterpriseGroup		= PrmEnterpriseGroup
							invoked.PrmReportingBasis		= PrmReportingBasis
							invoked.PrmReportingBasisYear	= PrmReportingBasisYear
							invoked.PrmAccountingEntity		= SubordinateAccountingEntity
							invoked.PrmCloseLedger			= PrmCloseLedger
							invoked.PrmDateRange			= PrmDateRange
							invoked.PrmNewYear				= PrmNewYear
							invoked.PrmSequenceNumber		= PrmSequenceNumber
							invoked.PrmLedgerGroup     		= PrmLedgerGroup
							invoked.PrmISWithCloseAccountGroup = PrmISWithCloseAccountGroup
							invoked.PrmTimeStampRange  		= LocalTimeStampRange
							invoked.PrmChangedTotalsOnly	= PrmChangedTotalsOnly
							invoked.PrmNewYearDate			= PrmNewYearDate

#ifdef module ad
						if (PrmReportingBasis.ADBRunDate entered
						and SubordinateAccountingEntity.AverageDailyBalance)
							if (PrmEnterpriseGroup.ExistingAverageDailyBalanceProcess)
								invoke UpdateADBBeginningBalance ADBAccountMaster in background
									run after ADBAsyncId
									invoked.PrmFinanceEnterpriseGroup	= PrmEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmReportingBasisYear		= PrmReportingBasisYear
									invoked.PrmAccountingEntity			= SubordinateAccountingEntity
									invoked.PrmCloseLedger				= PrmCloseLedger
									invoked.PrmNewYear					= PrmNewYear
									invoked.PrmNewYearDate				= PrmNewYearDate
							else
							if (PrmEnterpriseGroup.NewAverageDailyBalanceProcess)
								invoke UpdateADBBeginningBalance AverageDailyBalanceAccount in background
									run after ADBAsyncId
									invoked.PrmFinanceEnterpriseGroup	= PrmEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmReportingBasisYear		= PrmReportingBasisYear
									invoked.PrmAccountingEntity			= SubordinateAccountingEntity
									invoked.PrmCloseLedger				= PrmCloseLedger
									invoked.PrmNewYear					= PrmNewYear
									invoked.PrmNewYearDate				= PrmNewYearDate
						if (PrmEnterpriseGroup.UseAverageDailyBalance)
							invoke GetBeginBalance GeneralLedgerTotal in background
								run after ADBAsyncId
								invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.PrmAccountingEntity       = SubordinateAccountingEntity
								invoked.PrmReportingBasis         = PrmReportingBasis
								invoked.PrmBeginBalancePeriod     = PrmNewYear
#endif

		ProcessCurrencyBasisEntity is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmSelectLedger					is a Ledger
					default label is "SelectLedger"
				PrmCurrencyLedger				is a Ledger
					default label is "CurrencyLedger"
				PrmCloseLedger					is a Ledger
					default label is "CloseLedger"
				PrmAccountingEntity				is a AccountingEntity
					default label is "AccountingEntity"
				PrmAccountingEntityGroup		is a AccountingEntityGroup
					default label is "AccountingEntityGroup"
				PrmAccount						is a GeneralLedgerChartAccount
					default label is "Account"
				PrmGeneralLedgerTotalGroup		is a GeneralLedgerTotal group
					default label is "AccountGroup"
				PrmDateRange					is a DateRange
					default label is "DateRange"
				PrmPeriodOption					is Numeric 1
					default label is "PeriodOption"
					States
						CurrentPeriod			value is 1
						PreviousPeriod			value is 2
						NextPeriod				value is 3
				PrmOption						is Numeric 1
					default label is "Option"
					States
						Revalue					value is 1		
						Translation				value is 2		
				PrmYearToDate  					is a DateRange
					default label is "YearToDate"
				PrmRunSequence 					is like RunSequence
					default label is "RunSequence"
				PrmRateOption					is Numeric 1
					default label is "RateOption"
				PrmAutoReverse					is Boolean
					default label is "AutoReverse"
				PrmFunctional					is Boolean
					default label is "Functional"
				PrmAlternate					is Boolean
					default label is "Alternate"
				PrmAlternate2					is Boolean
					default label is "Alternate2"
				PrmAlternate3					is Boolean
					default label is "Alternate3"
				PrmProject						is Boolean
					default label is "Project"
				PrmReport1						is Boolean
					default label is "Report1"
				PrmReport2						is Boolean
					default label is "Report2"
				PrmReport3						is Boolean
					default label is "Report3"
				PrmReport4						is Boolean
					default label is "Report4"
				PrmReport5						is Boolean
					default label is "Report5"
				PrmPostOption					is Numeric 1
					default label is "PostOption"
				PrmGainLossResult				is a GainLossResult
					default label is "GainLossResult"
				PrmBySystemCode					is Boolean
					default label is "BySystemCode"
				PrmReleased						is Boolean
					default label is "CreateReleased"
				PrmSaveCalculation				is Boolean
					default label is "SaveCalculationAmount"
				PrmLedgerGroup					is a GeneralLedgerTotal group
					default label is "LedgerGroup"
				PrmChangesOnly					is Boolean
					default label is "ChangedTotalsOnly"
				PrmChartSection				is Numeric 1
					default label is "ChartSection"
					States
						BalanceSheet    	value is 1
						IncomeStatement 	value is 2
				PrmFunctionalBoolean 		is Boolean	
					default label is untranslatable:"FunctionalBoolean"	
				PrmOtherDimensions			is Boolean
					default label is "OtherDimensions"	

			Local Fields	
				LocalGeneralLedgerCalendarPeriod	is a GeneralLedgerCalendarPeriod
				OrigAsyncId							is a AsyncActionRequest
				AsyncId								is a AsyncActionRequest
				LocalAccountingEntity				is a AccountingEntity
				LocalSkipEntity						is Boolean

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis
				PrmRunSequence

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and    TopNode						= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity
				and   ((PrmAccountingEntity entered
				and     SubordinateAccountingEntity	= PrmAccountingEntity) 
				or     !PrmAccountingEntity entered)
				and   ((PrmAccountingEntityGroup entered
				and    AccountingEntityGroupMemberRel exists)
				or     !PrmAccountingEntityGroup entered))

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						OrigAsyncId				= current async action request id
						
				SubordinateAccountingEntity Set Rules
					Entrance Rules
						AsyncId					= OrigAsyncId
						LocalAccountingEntity	= SubordinateAccountingEntity
						LocalSkipEntity			= false

				Instance Rules
					initialize LocalFiscalYear
					initialize LocalPeriod
					if (!PrmPeriodOption entered)
						LocalPostingDate					= PrmDateRange.End
						LocalGeneralLedgerCalendarPeriod	= first GeneralLedgerCalendarPeriodRel.GeneralLedgerCalendarPeriod
						LocalCalendarPeriod					= LocalGeneralLedgerCalendarPeriod
						LocalFiscalYear						= first AccountingEntityCalendarPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
						LocalPeriod							= first AccountingEntityCalendarPeriodRel.GeneralLedgerClosePeriod
					else
						if (PrmPeriodOption.CurrentPeriod)
							PrmDateRange.Begin 					= EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.DerivedBeginGregorian
							PrmDateRange.End					= EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
							LocalFiscalYear						= SubordinateAccountingEntity.FiscalYear
							LocalPeriod							= SubordinateAccountingEntity.CurrentPeriod
							LocalGeneralLedgerCalendarPeriod	= EntityLedgerCurrentPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
						else
							if (PrmPeriodOption.PreviousPeriod)
								PrmDateRange.Begin					= last EntityLedgerPriorPeriodRel.GeneralLedgerClosePeriod.DerivedBeginGregorian
								PrmDateRange.End  					= last EntityLedgerPriorPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
								LocalFiscalYear						= last EntityLedgerPriorPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
								LocalPeriod							= last EntityLedgerPriorPeriodRel.GeneralLedgerClosePeriod
								LocalGeneralLedgerCalendarPeriod	= last EntityLedgerPriorPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod
							else
								if (PrmPeriodOption.NextPeriod)
									PrmDateRange.Begin 					= first EntityLedgerNextPeriodRel.GeneralLedgerClosePeriod.DerivedBeginGregorian
									PrmDateRange.End  					= first EntityLedgerNextPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod.Date
									LocalFiscalYear						= first EntityLedgerNextPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCloseYear
									LocalPeriod							= first EntityLedgerNextPeriodRel.GeneralLedgerClosePeriod
									LocalGeneralLedgerCalendarPeriod	= first EntityLedgerNextPeriodRel.GeneralLedgerClosePeriod.GeneralLedgerCalendarPeriod

					PrmYearToDate.End			= PrmDateRange.End
					LocalCurrencyLedger			= PrmCurrencyLedger

					if (LocalFiscalYear entered)
						if (!EntityCurrencyLedgerPeriodRel.OpenPeriod )
							LocalSkipEntity			= true
							invoke Create GainLossResultDetail
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.ReportingBasis			= PrmReportingBasis
								invoked.GainLossResult		  	= PrmGainLossResult
								invoked.ErrorMessage		  	= SkippingEntityPeriodCloseError

					if (!SubordinateAccountingEntity.Status.Active )
						LocalSkipEntity			= true
						invoke Create GainLossResultDetail
							invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.ReportingBasis			= PrmReportingBasis
							invoked.GainLossResult		  	= PrmGainLossResult
							invoked.ErrorMessage		  	= SkippingEntityInActiveError

					LocalDateRange				= PrmYearToDate
					if (PrmChangesOnly)
						if (PrmOption.Revalue)
							LocalTimeStampRange.Begin		= EntityCurrencyLedgerPeriodRel.RevaluationTimeStamp
						else
							LocalTimeStampRange.Begin		= EntityCurrencyLedgerPeriodRel.TranslationTimeStamp
						LocalTimeStampRange.End				= current timestamp
						if (!ChangesOnlyTotalsForGainLossRel exists)
							LocalSkipEntity			= true
							invoke Create GainLossResultDetail
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.ReportingBasis			= PrmReportingBasis
								invoked.GainLossResult		  	= PrmGainLossResult
								invoked.ErrorMessage		  	= SkippingEntityNoDataToProcess

							if (EntityCurrencyLedgerPeriodRel exists)		
								invoke UpdateGainLossTimeStamp EntityCurrencyLedgerPeriodRel
									invoked.GainLossOption		= PrmOption
					if (!PrmChangesOnly)
						if (!ProcessTotalsForGainLossRel exists)
							LocalSkipEntity			= true
							invoke Create GainLossResultDetail
								invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.ReportingBasis			= PrmReportingBasis
								invoked.GainLossResult		  	= PrmGainLossResult
								invoked.ErrorMessage		  	= SkippingEntityNoDataToProcess

							if (EntityCurrencyLedgerPeriodRel exists)	
								invoke UpdateGainLossTimeStamp EntityCurrencyLedgerPeriodRel
									invoked.GainLossOption		= PrmOption

					if (!LocalSkipEntity)
						invoke ProcessGainLoss GeneralLedgerTotal in background
							run after AsyncId
							assign async action request id to AsyncId
							invoked.PrmEnterpriseGroup		= FinanceEnterpriseGroup
							invoked.PrmReportingBasis		= PrmReportingBasis
							invoked.PrmDateRange			= PrmDateRange
							invoked.PrmAccountingEntity		= SubordinateAccountingEntity
							if (!PrmSelectLedger entered)
								initialize invoked.PrmLedger
							else
								invoked.PrmLedger					= PrmSelectLedger
							invoked.PrmCurrencyLedger				= PrmCurrencyLedger
							invoked.PrmCloseLedger					= PrmCloseLedger
							invoked.PrmYearToDate  					= PrmYearToDate
							invoked.PrmOption						= PrmOption
							invoked.PrmRunSequence					= PrmRunSequence
							invoked.PrmRateOption					= PrmRateOption
							invoked.PrmPostOption					= PrmPostOption
							invoked.PrmOtherDimensions			    = PrmOtherDimensions
							invoked.PrmFunctional					= PrmFunctional
							if(PrmFunctionalBoolean)
								invoked.PrmFunctionalCurrency		= SubordinateAccountingEntity.FunctionalCurrency
							invoked.PrmAlternate					= PrmAlternate
							invoked.PrmAlternate2					= PrmAlternate2
							invoked.PrmAlternate3					= PrmAlternate3
							invoked.PrmProject						= PrmProject
							invoked.PrmReport1						= PrmReport1
							invoked.PrmReport2						= PrmReport2
							invoked.PrmReport3						= PrmReport3
							invoked.PrmReport4						= PrmReport4
							invoked.PrmReport5						= PrmReport5
							invoked.PrmBySystemCode					= PrmBySystemCode
							invoked.PrmGainLossResult				= PrmGainLossResult
							invoked.PrmAutoReverse					= PrmAutoReverse
							invoked.PrmReleased						= PrmReleased
							invoked.PrmGeneralLedgerCalendarPeriod	= LocalGeneralLedgerCalendarPeriod
							invoked.PrmSaveCalculation				= PrmSaveCalculation
							invoked.PrmLedgerGroup     				= PrmLedgerGroup
							invoked.PrmChangesOnly     				= PrmChangesOnly
							invoked.PrmTimeStampRange  				= LocalTimeStampRange
							invoked.PrmAccount						= PrmAccount
							invoked.PrmGeneralLedgerTotalGroup		= PrmGeneralLedgerTotalGroup
							invoked.PrmChartSection               	= PrmChartSection

		RebuildLedgerEntityPairs is a Set Action
			restricted

			Instance Selection
				where (FinanceEnterpriseGroup = FinanceEnterpriseGroup
				and SubordinateAccountingEntity.PostingEntity)

			Sort Order
				FinanceEnterpriseGroup
				SubordinateAccountingEntity

			Action Rules
				FinanceEnterpriseGroup Set Rules
					Entrance Rules
						invoke Purge DeleteCodeBlockRelationDetailRel
				
				Instance Rules
					commit transaction
					for each ReportingBasisLedgerRel
						LocalCloseLedger			= ReportingBasisRel.ReportingBasis
						LocalCloseLedger			+= " CLOSE"
						LocalLedger					= each.SubordinateLedger
						if (LocalLedger				!= LocalCloseLedger)
							LocalKeyFromValue		= LocalLedger
							LocalKeyToValue			= SubordinateAccountingEntity
							if (!CodeBlockRelationDetailRel exists)
								invoke SystemCreate CodeBlockRelationDetailRel
									resume on error
									invoked.FinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.CodeBlockRelation		= CodeBlockRelationRel.CodeBlockRelation
									invoked.Ledger					= LocalLedger
									invoked.AccountingEntity		= SubordinateAccountingEntity
									

		ProcessYearEndEncumbrance is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmBasisEndDate					is Date
					default label is "BasisEndDate"
				PrmBasisEndPeriod				is a GeneralLedgerCalendarPeriod
					default label is "BasisEndPeriod"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"





			Local Fields	
				LocalAccountingEntity			is a AccountingEntity
				LocalSkipEntity					is Boolean

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and    TopNode					= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity)

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules

				SubordinateAccountingEntity Set Rules
					Entrance Rules
						LocalAccountingEntity	= SubordinateAccountingEntity

				Instance Rules
					LocalSkipEntity			= false
					LocalBasisEndDatee		= PrmBasisEndDate
					if (!ProcessYearEndEncumbranceRel exists)
						LocalSkipEntity			= true

					if (!LocalSkipEntity)
						invoke ProcessYearEndEncumbrance GLCommit in background
							invoked.PrmEnterpriseGroup		= PrmEnterpriseGroup

							invoked.PrmAccountingEntity		= SubordinateAccountingEntity
							invoked.PrmBasisEndDate			= PrmBasisEndDate

							invoked.PrmNewYear				= PrmNewYear
							invoked.PrmNewYearDate			= PrmNewYearDate



		MovePriorYearPOEncumbranceToCurrentYear is a Set Action
			restricted

			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmBasisEndDate					is Date
					default label is "BasisEndDate"
				PrmBasisEndPeriod				is a GeneralLedgerCalendarPeriod
					default label is "BasisEndPeriod"
				PrmNewYear						is a GeneralLedgerCalendarPeriod
					default label is "NewYear"
				PrmNewYearDate					is Date
					default label is "NewYearDate"





			Local Fields	
				LocalAccountingEntity			is a AccountingEntity
				LocalSkipEntity					is Boolean

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis

			Instance Selection
				where (FinanceEnterpriseGroup	= PrmEnterpriseGroup
				and    TopNode					= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity)

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules

				SubordinateAccountingEntity Set Rules
					Entrance Rules
						LocalAccountingEntity	= SubordinateAccountingEntity

				Instance Rules
					LocalSkipEntity			= false
					LocalBasisEndDatee		= PrmBasisEndDate
					if (!ProcessYearEndEncumbranceRel exists)
						LocalSkipEntity			= true

					if (!LocalSkipEntity)
						invoke MovePriorYearPOEncumbranceToCurrentYear GLCommit in background
							invoked.PrmEnterpriseGroup		= PrmEnterpriseGroup

							invoked.PrmAccountingEntity		= SubordinateAccountingEntity
							invoked.PrmBasisEndDate			= PrmBasisEndDate
							invoked.PrmBasisEndPeriod		= PrmBasisEndPeriod
							invoked.PrmNewYear				= PrmNewYear
							invoked.PrmNewYearDate			= PrmNewYearDate



#ifdef module ad
		ProcessDailyAverage is a Set Action
			restricted
			Parameters
				PrmEnterpriseGroup				is a FinanceEnterpriseGroup
					default label is "FinanceEnterpriseGroup"
				PrmReportingBasis				is a ReportingBasis
					default label is "ReportingBasis"
				PrmADBFirstRun					is Boolean
					default label is "ADBFirstRunComplete"
				PrmLastRunDate					is Date
					default label is "LastRunDate"
				PrmRunDate						is Date 
					default label is "RunDate"
				PrmStartDate					is Date
					default label is "StartDate"
				PrmFiscalYear					is a Year
					default label is "FiscalYear"
				PrmFiscalYearEndDate			is Date
					default label is "FiscalYearEndDate"
				PrmBeginBalancePeriod			is AlphaUpper size 10
					default label is "BeginningBalancePeriod"
				PrmProcessingType				is Numeric 1
					default label is "ProcessingType"
					States
						DailyBalanceProcessing		value is 0
						RecalculatePreviousYear		value is 4
						RecalculateCurrentYear		value is 5


			Local Fields	
				OrigAsyncId							is a AsyncActionRequest
				AsyncId								is a AsyncActionRequest

			Set Is
				PrmEnterpriseGroup
				PrmReportingBasis

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmEnterpriseGroup
				and    TopNode						= PrmReportingBasis.AccountingEntityTopNode
				and		SubordinateAccountingEntity.PostingEntity)

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Accumulators

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						OrigAsyncId				= current async action request id
						
				SubordinateAccountingEntity Set Rules
					Entrance Rules
						AsyncId					= OrigAsyncId



						if (SubordinateAccountingEntity.AverageDailyBalance) 
							if	(FinanceEnterpriseGroup.NewAverageDailyBalanceProcess
							and	 (PrmProcessingType.RecalculateCurrentYear
							or	  PrmProcessingType.RecalculatePreviousYear))
								invoke PurgeData AverageDailyBalanceAmount in background
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup	= PrmEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmAccountingEntity         = SubordinateAccountingEntity
									invoked.PrmStartDate				= PrmStartDate
									invoked.PrmEndDate					= PrmRunDate
								invoke PurgeData AverageDailyBalanceAggregate in background
									run after AsyncId
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup	= PrmEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmAccountingEntity         = SubordinateAccountingEntity
									invoked.PrmFiscalYear				= PrmFiscalYear
									if (PrmProcessingType.RecalculateCurrentYear)
										invoked.PrmIncludeFutureYears 	= true
								invoke PurgeData AverageDailyBalanceTransaction in background
									run after AsyncId
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup	= PrmEnterpriseGroup
									invoked.PrmAccountingEntity         = SubordinateAccountingEntity
									invoked.PrmStartDate				= PrmStartDate
									if (PrmProcessingType.RecalculatePreviousYear)
										invoked.PrmEndDate				= PrmFiscalYearEndDate
				Instance Rules
					if (SubordinateAccountingEntity.AverageDailyBalance)
						if (PrmProcessingType.RecalculatePreviousYear
						or  PrmProcessingType.RecalculateCurrentYear
						or  (PrmADBFirstRun and PrmLastRunDate not entered))
							if (FinanceEnterpriseGroup.AllBalanceSheetAccounts)
								invoke GetBeginBalanceForAllBSAccounts GeneralLedgerTotal in background
									run after AsyncId
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
									invoked.PrmAccountingEntity       = SubordinateAccountingEntity
									invoked.PrmReportingBasis         = PrmReportingBasis
									invoked.PrmProcessingType  		  = PrmProcessingType
									if (PrmProcessingType.RecalculatePreviousYear)
										invoked.PrmBeginBalancePeriod 	   = PrmBeginBalancePeriod
									else
										invoked.PrmBeginBalancePeriod 	   = PrmReportingBasis.CurrentBeginBalancePeriod
							invoke GetPostedJournalsBeforeADBEnabled GeneralLedgerTransaction in background
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmFinanceEnterpriseGroup = FinanceEnterpriseGroup
								invoked.PrmAccountingEntity       = SubordinateAccountingEntity
								if (PrmProcessingType.RecalculatePreviousYear)
									invoked.PrmBasisYear				= PrmFiscalYear
								else
									invoked.PrmBasisYear				= PrmReportingBasis.BasisYear
									invoked.PrmIncludeFutureYears		= true

						if (FinanceEnterpriseGroup.ExistingAverageDailyBalanceProcess)
							if (PrmADBFirstRun)							
								invoke UpdateDailyAggregateAmount ADBAccountMaster in background
									run after AsyncId
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmAccountingEntity			= SubordinateAccountingEntity
									invoked.PrmLastRunDate				= PrmLastRunDate
									invoked.PrmRunDate					= PrmRunDate
							invoke UpdateDailyAggregateAmount ADBTransaction in background
								run after AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmLastRunDate
								invoked.PrmRunDate					= PrmRunDate
						else
						if (FinanceEnterpriseGroup.NewAverageDailyBalanceProcess)
							if (PrmADBFirstRun 
							or  PrmProcessingType.RecalculatePreviousYear
							or  PrmProcessingType.RecalculateCurrentYear)
								invoke UpdateDailyAggregateAmount AverageDailyBalanceAccount in background
									run after AsyncId
									assign async action request id to AsyncId
									invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
									invoked.PrmReportingBasis			= PrmReportingBasis
									invoked.PrmAccountingEntity			= SubordinateAccountingEntity
									invoked.PrmLastRunDate				= PrmLastRunDate
									invoked.PrmRunDate					= PrmRunDate
									invoked.PrmStartDate				= PrmStartDate
									invoked.PrmProcessingType  			= PrmProcessingType
							invoke UpdateDailyAggregateAmount AverageDailyBalanceTransaction in background
								run after AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmLastRunDate
								invoked.PrmRunDate					= PrmRunDate
								invoked.PrmProcessingType  			= PrmProcessingType
								invoked.PrmDateRange.Begin			= PrmStartDate
								invoked.PrmDateRange.End			= PrmRunDate
#endif							

#ifdef module ad
		RecalculateUreDailyBalance is a Set Action
			restricted
			Parameters
				PrmFinanceEnterpriseGroup				is a FinanceEnterpriseGroup
				PrmReportingBasis						is a ReportingBasis
				PrmAccount								is like GeneralLedgerChartAccount
				PrmFiscalYear							is like GeneralLedgerCloseYear
				PrmRunDate								is Date
				PrmDateRange							is a DateRange

			Local Fields	
				OrigAsyncId							is a AsyncActionRequest
				AsyncId								is a AsyncActionRequest

			Set Is
				PrmFinanceEnterpriseGroup
				PrmReportingBasis

			Instance Selection
				where (FinanceEnterpriseGroup		= PrmFinanceEnterpriseGroup
				and    TopNode						= PrmReportingBasis.AccountingEntityTopNode
				and    SubordinateAccountingEntity.PostingEntity)

			Sort Order
				FinanceEnterpriseGroup
				TopNode
				SubordinateAccountingEntity

			Action Rules
				Empty Set Rules

				Set Rules
					Entrance Rules
						OrigAsyncId				= current async action request id
						
				SubordinateAccountingEntity Set Rules
					Entrance Rules
						AsyncId					= OrigAsyncId

				Instance Rules
					if (SubordinateAccountingEntity.AverageDailyBalance)
						invoke RebuildADBTransaction GeneralLedgerTransaction in background				
							run after AsyncId
							assign async action request id to AsyncId
							invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity			= SubordinateAccountingEntity
							invoked.PrmFiscalYear				= PrmFiscalYear
							invoked.PrmDateRange				= PrmDateRange
							invoked.PrmADBAccount		    	= ADBAccountType.SystemUndistributedRetainedEarnings

						if (FinanceEnterpriseGroup.ExistingAverageDailyBalanceProcess)
							invoke UpdateDailyAggregateAmount ADBAccountMaster in background
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmRunDate							
								invoked.PrmRunDate					= PrmRunDate
								if (FinanceEnterpriseGroup.IncludeUREInAverageDailyBalance)
									invoked.PrmNonChartAccountOnly	= true									
								invoked.PrmAccount                  = PrmAccount							
							invoke UpdateDailyAggregateAmount ADBTransaction in background
								run after AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmRunDate							
								invoked.PrmRunDate					= PrmRunDate
								if (FinanceEnterpriseGroup.IncludeUREInAverageDailyBalance)
									invoked.PrmNonChartAccountOnly	= true									
								invoked.PrmAccount                  = PrmAccount							
						else
						if (FinanceEnterpriseGroup.NewAverageDailyBalanceProcess)
							invoke UpdateDailyAggregateAmount AverageDailyBalanceAccount in background
								run after AsyncId
								assign async action request id to AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmRunDate							
								invoked.PrmRunDate					= PrmRunDate
								if (FinanceEnterpriseGroup.IncludeUREInAverageDailyBalance)
									invoked.PrmNonChartAccountOnly	= true									
								invoked.PrmAccount                  = PrmAccount							
							invoke UpdateDailyAggregateAmount AverageDailyBalanceTransaction in background
								run after AsyncId
								invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
								invoked.PrmReportingBasis			= PrmReportingBasis
								invoked.PrmAccountingEntity			= SubordinateAccountingEntity
								invoked.PrmLastRunDate				= PrmRunDate							
								invoked.PrmRunDate					= PrmRunDate
								if (FinanceEnterpriseGroup.IncludeUREInAverageDailyBalance)
									invoked.PrmNonChartAccountOnly	= true									
								invoked.PrmAccount                  = PrmAccount							
#endif
		CreateGLJournalControlRef is an Instance Action
			restricted
			Parameters
				PrmReportingBasis    			is a ReportingBasis
				PrmLedgerTopNode				is a Ledger
    	        PrmStartDateJulian				is Numeric 7
    	        PrmEndDateJulian				is Numeric 7
    	        			
			Entrance Rules
				LocalLedgerTopNode = PrmLedgerTopNode 
								
			Action Rules
				if (PrmReportingBasis.ResetNumericSequence.PerLedger)
					for each LedgerHierarchyRel						
						invoke CreateGeneralLedgerJournalControlRefPerLedger GeneralLedgerJournalControl
							invoked.PrmReportingBasis 			= PrmReportingBasis	
							invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity			= SubordinateAccountingEntity
							invoked.PrmLedger					= each.SubordinateLedger
							invoked.PrmStartDateJulian			= PrmStartDateJulian
							invoked.PrmEndDateJulian			= PrmEndDateJulian	
				else
				if (PrmReportingBasis.ResetNumericSequence.PerSystem)
					invoke CreateGeneralLedgerJournalControlRefPerSystem GeneralLedgerJournalControl
						invoked.PrmReportingBasis 				= PrmReportingBasis	
						invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity				= SubordinateAccountingEntity
						invoked.PrmLedgerTopNode				= PrmLedgerTopNode
						invoked.PrmStartDateJulian	 			= PrmStartDateJulian
						invoked.PrmEndDateJulian				= PrmEndDateJulian	
				else
				if (PrmReportingBasis.ResetNumericSequence.PerLedgerAndSystem)
					for each LedgerHierarchyRel
						invoke CreateGeneralLedgerJournalControlRefPerLedgerAndSystem GeneralLedgerJournalControl
							invoked.PrmReportingBasis 			= PrmReportingBasis	
							invoked.PrmFinanceEnterpriseGroup	= FinanceEnterpriseGroup
							invoked.PrmAccountingEntity			= SubordinateAccountingEntity
							invoked.PrmLedgerTopNode			= PrmLedgerTopNode
							invoked.PrmLedger					= each.SubordinateLedger							
							invoked.PrmStartDateJulian 			= PrmStartDateJulian
							invoked.PrmEndDateJulian			= PrmEndDateJulian	
				else				
					invoke CreateGeneralLedgerJournalControlRef GeneralLedgerJournalControl
						invoked.PrmReportingBasis 				= PrmReportingBasis	
						invoked.PrmFinanceEnterpriseGroup		= FinanceEnterpriseGroup
						invoked.PrmAccountingEntity				= SubordinateAccountingEntity
						invoked.PrmLedgerTopNode				= PrmLedgerTopNode
						invoked.PrmStartDateJulian				= PrmStartDateJulian
						invoked.PrmEndDateJulian				= PrmEndDateJulian	
												
